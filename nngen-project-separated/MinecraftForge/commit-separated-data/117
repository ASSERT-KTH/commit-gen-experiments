BLEU SCORE: 0.028398387225677897

TEST MSG: Fix modsorter to not crash on soft dependencies that don ' t exist .
GENERATED MSG: Starting to put the launch itself together

TEST DIFF (one line): diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java <nl> index 69ed15e . . e33b288 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java <nl> @ @ - 123 , 8 + 123 , 11 @ @ public class ModSorter <nl> @ SuppressWarnings ( " UnstableApiUsage " ) <nl> private void addDependency ( MutableGraph < ModFileInfo > topoGraph , IModInfo . ModVersion dep ) <nl> { <nl> - ModFileInfo self = ( ModFileInfo ) dep . getOwner ( ) . getOwningFile ( ) ; <nl> - ModFileInfo target = modIdNameLookup . get ( dep . getModId ( ) ) . getOwningFile ( ) ; <nl> + final ModFileInfo self = ( ModFileInfo ) dep . getOwner ( ) . getOwningFile ( ) ; <nl> + final ModInfo targetModInfo = modIdNameLookup . get ( dep . getModId ( ) ) ; <nl> + / / soft dep that doesn ' t exist . Just return . No edge required . <nl> + if ( targetModInfo = = null ) return ; <nl> + final ModFileInfo target = targetModInfo . getOwningFile ( ) ; <nl> if ( self = = target ) <nl> return ; / / in case a jar has two mods that have dependencies between <nl> switch ( dep . getOrdering ( ) ) {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLCommonLaunchHandler . java b / src / main / java / net / minecraftforge / fml / loading / FMLCommonLaunchHandler . java <nl> new file mode 100644 <nl> index 0000000 . . 0ae4095 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / fml / loading / FMLCommonLaunchHandler . java <nl> @ @ - 0 , 0 + 1 , 30 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2018 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . fml . loading ; <nl> + <nl> + import cpw . mods . modlauncher . api . IEnvironment ; <nl> + <nl> + public abstract class FMLCommonLaunchHandler <nl> + { <nl> + public void setup ( final IEnvironment environment ) <nl> + { <nl> + / / We need to check for deobf and patched jar here and if not , build one . <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java b / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java <nl> index 050a126 . . 8c69217 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java <nl> + + + b / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package net . minecraftforge . fml . loading ; <nl> <nl> + import cpw . mods . modlauncher . api . IEnvironment ; <nl> import cpw . mods . modlauncher . api . ILaunchHandlerService ; <nl> import net . minecraft . client . main . Main ; <nl> <nl> @ @ - 27 , 7 + 28 , 10 @ @ import java . nio . file . Path ; <nl> import java . nio . file . Paths ; <nl> import java . util . concurrent . Callable ; <nl> <nl> - public class FMLDevLaunchProvider implements ILaunchHandlerService <nl> + import static net . minecraftforge . fml . Logging . CORE ; <nl> + import static net . minecraftforge . fml . Logging . fmlLog ; <nl> + <nl> + public class FMLDevLaunchProvider extends FMLCommonLaunchHandler implements ILaunchHandlerService <nl> { <nl> @ Override <nl> public String name ( ) <nl> @ @ - 58 , 4 + 62 , 10 @ @ public class FMLDevLaunchProvider implements ILaunchHandlerService <nl> return null ; <nl> } ; <nl> } <nl> + <nl> + @ Override <nl> + public void setup ( IEnvironment environment ) <nl> + { <nl> + fmlLog . debug ( CORE , " No jar creation necessary . Launch is dev environment " ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java b / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java <nl> index 484ac2a . . 5dc0d45 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java <nl> + + + b / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import net . minecraft . client . main . Main ; <nl> import java . nio . file . Path ; <nl> import java . util . concurrent . Callable ; <nl> <nl> - public class FMLLaunchProvider implements ILaunchHandlerService <nl> + public class FMLLaunchProvider extends FMLCommonLaunchHandler implements ILaunchHandlerService <nl> { <nl> @ Override <nl> public String name ( ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java b / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java <nl> index c46a222 . . 8790878 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package net . minecraftforge . fml . loading ; <nl> <nl> import cpw . mods . modlauncher . api . IEnvironment ; <nl> + import cpw . mods . modlauncher . api . ILaunchHandlerService ; <nl> import cpw . mods . modlauncher . api . ITransformationService ; <nl> import cpw . mods . modlauncher . api . IncompatibleEnvironmentException ; <nl> import cpw . mods . modlauncher . serviceapi . ILaunchPluginService ; <nl> @ @ - 89 , 6 + 90 , 24 @ @ public class FMLLoader <nl> languageLoadingProvider = new LanguageLoadingProvider ( ) ; <nl> } <nl> <nl> + static void setupLaunchHandler ( final IEnvironment environment ) throws IncompatibleEnvironmentException <nl> + { <nl> + final String launchTarget = environment . getProperty ( IEnvironment . Keys . LAUNCHTARGET . get ( ) ) . orElse ( " MISSING " ) ; <nl> + final Optional < ILaunchHandlerService > launchHandler = environment . findLaunchHandler ( launchTarget ) ; <nl> + fmlLog . debug ( CORE , " Using { } as launch service " , launchTarget ) ; <nl> + if ( ! launchHandler . isPresent ( ) ) { <nl> + fmlLog . error ( CORE , " Missing LaunchHandler { } , cannot continue " , launchTarget ) ; <nl> + throw new IncompatibleEnvironmentException ( " Missing launch handler " ) ; <nl> + } <nl> + <nl> + if ( ! ( launchHandler . get ( ) instanceof FMLCommonLaunchHandler ) ) { <nl> + fmlLog . error ( CORE , " Incompatible Launch handler found - type { } , cannot continue " , launchHandler . get ( ) . getClass ( ) . getName ( ) ) ; <nl> + throw new IncompatibleEnvironmentException ( " Incompatible launch handler found " ) ; <nl> + } <nl> + <nl> + FMLCommonLaunchHandler commonLaunchHandler = ( FMLCommonLaunchHandler ) launchHandler . get ( ) ; <nl> + commonLaunchHandler . setup ( environment ) ; <nl> + } <nl> public static void beginModScan ( ) <nl> { <nl> fmlLog . debug ( SCAN , " Scanning for Mod Locators " ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java b / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java <nl> index 8c613ed . . c40cd94 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java <nl> + + + b / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package net . minecraftforge . fml . loading ; <nl> <nl> import cpw . mods . modlauncher . api . IEnvironment ; <nl> + import cpw . mods . modlauncher . api . ILaunchHandlerService ; <nl> import cpw . mods . modlauncher . api . ITransformationService ; <nl> import cpw . mods . modlauncher . api . ITransformer ; <nl> import cpw . mods . modlauncher . api . IncompatibleEnvironmentException ; <nl> @ @ - 31 , 6 + 32 , 7 @ @ import net . minecraftforge . fml . common . FMLPaths ; <nl> import javax . annotation . Nonnull ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> + import java . util . Optional ; <nl> import java . util . Set ; <nl> import java . util . function . BiFunction ; <nl>

TEST DIFF:
diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java 
 index 69ed15e . . e33b288 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java 
 @ @ - 123 , 8 + 123 , 11 @ @ public class ModSorter 
 @ SuppressWarnings ( " UnstableApiUsage " ) 
 private void addDependency ( MutableGraph < ModFileInfo > topoGraph , IModInfo . ModVersion dep ) 
 { 
 - ModFileInfo self = ( ModFileInfo ) dep . getOwner ( ) . getOwningFile ( ) ; 
 - ModFileInfo target = modIdNameLookup . get ( dep . getModId ( ) ) . getOwningFile ( ) ; 
 + final ModFileInfo self = ( ModFileInfo ) dep . getOwner ( ) . getOwningFile ( ) ; 
 + final ModInfo targetModInfo = modIdNameLookup . get ( dep . getModId ( ) ) ; 
 + / / soft dep that doesn ' t exist . Just return . No edge required . 
 + if ( targetModInfo = = null ) return ; 
 + final ModFileInfo target = targetModInfo . getOwningFile ( ) ; 
 if ( self = = target ) 
 return ; / / in case a jar has two mods that have dependencies between 
 switch ( dep . getOrdering ( ) ) {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLCommonLaunchHandler . java b / src / main / java / net / minecraftforge / fml / loading / FMLCommonLaunchHandler . java 
 new file mode 100644 
 index 0000000 . . 0ae4095 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / fml / loading / FMLCommonLaunchHandler . java 
 @ @ - 0 , 0 + 1 , 30 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2018 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . fml . loading ; 
 + 
 + import cpw . mods . modlauncher . api . IEnvironment ; 
 + 
 + public abstract class FMLCommonLaunchHandler 
 + { 
 + public void setup ( final IEnvironment environment ) 
 + { 
 + / / We need to check for deobf and patched jar here and if not , build one . 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java b / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java 
 index 050a126 . . 8c69217 100644 
 - - - a / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java 
 + + + b / src / main / java / net / minecraftforge / fml / loading / FMLDevLaunchProvider . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package net . minecraftforge . fml . loading ; 
 
 + import cpw . mods . modlauncher . api . IEnvironment ; 
 import cpw . mods . modlauncher . api . ILaunchHandlerService ; 
 import net . minecraft . client . main . Main ; 
 
 @ @ - 27 , 7 + 28 , 10 @ @ import java . nio . file . Path ; 
 import java . nio . file . Paths ; 
 import java . util . concurrent . Callable ; 
 
 - public class FMLDevLaunchProvider implements ILaunchHandlerService 
 + import static net . minecraftforge . fml . Logging . CORE ; 
 + import static net . minecraftforge . fml . Logging . fmlLog ; 
 + 
 + public class FMLDevLaunchProvider extends FMLCommonLaunchHandler implements ILaunchHandlerService 
 { 
 @ Override 
 public String name ( ) 
 @ @ - 58 , 4 + 62 , 10 @ @ public class FMLDevLaunchProvider implements ILaunchHandlerService 
 return null ; 
 } ; 
 } 
 + 
 + @ Override 
 + public void setup ( IEnvironment environment ) 
 + { 
 + fmlLog . debug ( CORE , " No jar creation necessary . Launch is dev environment " ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java b / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java 
 index 484ac2a . . 5dc0d45 100644 
 - - - a / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java 
 + + + b / src / main / java / net / minecraftforge / fml / loading / FMLLaunchProvider . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import net . minecraft . client . main . Main ; 
 import java . nio . file . Path ; 
 import java . util . concurrent . Callable ; 
 
 - public class FMLLaunchProvider implements ILaunchHandlerService 
 + public class FMLLaunchProvider extends FMLCommonLaunchHandler implements ILaunchHandlerService 
 { 
 @ Override 
 public String name ( ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java b / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java 
 index c46a222 . . 8790878 100644 
 - - - a / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java 
 + + + b / src / main / java / net / minecraftforge / fml / loading / FMLLoader . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package net . minecraftforge . fml . loading ; 
 
 import cpw . mods . modlauncher . api . IEnvironment ; 
 + import cpw . mods . modlauncher . api . ILaunchHandlerService ; 
 import cpw . mods . modlauncher . api . ITransformationService ; 
 import cpw . mods . modlauncher . api . IncompatibleEnvironmentException ; 
 import cpw . mods . modlauncher . serviceapi . ILaunchPluginService ; 
 @ @ - 89 , 6 + 90 , 24 @ @ public class FMLLoader 
 languageLoadingProvider = new LanguageLoadingProvider ( ) ; 
 } 
 
 + static void setupLaunchHandler ( final IEnvironment environment ) throws IncompatibleEnvironmentException 
 + { 
 + final String launchTarget = environment . getProperty ( IEnvironment . Keys . LAUNCHTARGET . get ( ) ) . orElse ( " MISSING " ) ; 
 + final Optional < ILaunchHandlerService > launchHandler = environment . findLaunchHandler ( launchTarget ) ; 
 + fmlLog . debug ( CORE , " Using { } as launch service " , launchTarget ) ; 
 + if ( ! launchHandler . isPresent ( ) ) { 
 + fmlLog . error ( CORE , " Missing LaunchHandler { } , cannot continue " , launchTarget ) ; 
 + throw new IncompatibleEnvironmentException ( " Missing launch handler " ) ; 
 + } 
 + 
 + if ( ! ( launchHandler . get ( ) instanceof FMLCommonLaunchHandler ) ) { 
 + fmlLog . error ( CORE , " Incompatible Launch handler found - type { } , cannot continue " , launchHandler . get ( ) . getClass ( ) . getName ( ) ) ; 
 + throw new IncompatibleEnvironmentException ( " Incompatible launch handler found " ) ; 
 + } 
 + 
 + FMLCommonLaunchHandler commonLaunchHandler = ( FMLCommonLaunchHandler ) launchHandler . get ( ) ; 
 + commonLaunchHandler . setup ( environment ) ; 
 + } 
 public static void beginModScan ( ) 
 { 
 fmlLog . debug ( SCAN , " Scanning for Mod Locators " ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java b / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java 
 index 8c613ed . . c40cd94 100644 
 - - - a / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java 
 + + + b / src / main / java / net / minecraftforge / fml / loading / FMLServiceProvider . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package net . minecraftforge . fml . loading ; 
 
 import cpw . mods . modlauncher . api . IEnvironment ; 
 + import cpw . mods . modlauncher . api . ILaunchHandlerService ; 
 import cpw . mods . modlauncher . api . ITransformationService ; 
 import cpw . mods . modlauncher . api . ITransformer ; 
 import cpw . mods . modlauncher . api . IncompatibleEnvironmentException ; 
 @ @ - 31 , 6 + 32 , 7 @ @ import net . minecraftforge . fml . common . FMLPaths ; 
 import javax . annotation . Nonnull ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 + import java . util . Optional ; 
 import java . util . Set ; 
 import java . util . function . BiFunction ; 

