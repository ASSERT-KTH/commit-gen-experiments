BLEU SCORE: 0.02139538333930869

TEST MSG: Switch new constructor to use floats
GENERATED MSG: Fixed accedential inverted logic that caused Potions to render incorrectly . Thanks iChun .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / ItemAxe . java . patch b / patches / minecraft / net / minecraft / item / ItemAxe . java . patch <nl> index da43601 . . 310c909 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemAxe . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemAxe . java . patch <nl> @ @ - 4 , 7 + 4 , 7 @ @ <nl> this . field _ 185065 _ c = field _ 185067 _ n [ p _ i45327 _ 1 _ . ordinal ( ) ] ; <nl> } <nl> <nl> - + protected ItemAxe ( Item . ToolMaterial material , int damage , int speed ) <nl> + + protected ItemAxe ( Item . ToolMaterial material , float damage , float speed ) <nl> + { <nl> + super ( material , field _ 150917 _ c ) ; <nl> + this . field _ 77865 _ bY = damage ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index 089d414 . . 899f7d0 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 563 , 7 + 563 , 7 @ @ <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public boolean hasEffect ( ItemStack par1ItemStack , int pass ) <nl> + { <nl> - + return hasEffect ( par1ItemStack ) & & ( pass = = 0 | | this = = Items . potionitem ) ; <nl> + + return hasEffect ( par1ItemStack ) & & ( pass = = 0 | | this ! = Items . potionitem ) ; <nl> + } <nl> + <nl> + / * *

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / ItemAxe . java . patch b / patches / minecraft / net / minecraft / item / ItemAxe . java . patch 
 index da43601 . . 310c909 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemAxe . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemAxe . java . patch 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 this . field _ 185065 _ c = field _ 185067 _ n [ p _ i45327 _ 1 _ . ordinal ( ) ] ; 
 } 
 
 - + protected ItemAxe ( Item . ToolMaterial material , int damage , int speed ) 
 + + protected ItemAxe ( Item . ToolMaterial material , float damage , float speed ) 
 + { 
 + super ( material , field _ 150917 _ c ) ; 
 + this . field _ 77865 _ bY = damage ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch 
 index 089d414 . . 899f7d0 100644 
 - - - a / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 563 , 7 + 563 , 7 @ @ 
 + @ SideOnly ( Side . CLIENT ) 
 + public boolean hasEffect ( ItemStack par1ItemStack , int pass ) 
 + { 
 - + return hasEffect ( par1ItemStack ) & & ( pass = = 0 | | this = = Items . potionitem ) ; 
 + + return hasEffect ( par1ItemStack ) & & ( pass = = 0 | | this ! = Items . potionitem ) ; 
 + } 
 + 
 + / * *
