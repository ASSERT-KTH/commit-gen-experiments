BLEU SCORE: 0.04873498938813619

TEST MSG: New ITeleporter interface making dimensional teleportation easier .
GENERATED MSG: First pass at exposing data fixers to modders .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> index 2e0416e . . 91c2107 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> @ @ - 146 , 15 + 146 , 40 @ @ <nl> this . field _ 184239 _ as = null ; <nl> entity . func _ 184225 _ p ( this ) ; <nl> } <nl> - @ @ - 2511 , 6 + 2538 , 7 @ @ <nl> + @ @ - 2509 , 8 + 2536 , 16 @ @ <nl> + @ Nullable <nl> + public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) <nl> { <nl> + + if ( this . field _ 70170 _ p . field _ 72995 _ K | | this . field _ 70128 _ L ) return null ; <nl> + + return changeDimension ( p _ 184204 _ 1 _ , this . func _ 184102 _ h ( ) . func _ 71218 _ a ( p _ 184204 _ 1 _ ) . func _ 85176 _ s ( ) ) ; <nl> + + } <nl> + + <nl> + + @ Nullable / / Forge : Entities that require custom handling should override this method , not the other <nl> + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> + + { <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & ! this . field _ 70128 _ L ) <nl> { <nl> + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 184204 _ 1 _ ) ) return null ; <nl> this . field _ 70170 _ p . field _ 72984 _ F . func _ 76320 _ a ( " changeDimension " ) ; <nl> MinecraftServer minecraftserver = this . func _ 184102 _ h ( ) ; <nl> int i = this . field _ 71093 _ bK ; <nl> - @ @ - 2535 , 16 + 2563 , 17 @ @ <nl> + @ @ - 2518 , 7 + 2553 , 7 @ @ <nl> + WorldServer worldserver1 = minecraftserver . func _ 71218 _ a ( p _ 184204 _ 1 _ ) ; <nl> + this . field _ 71093 _ bK = p _ 184204 _ 1 _ ; <nl> + <nl> + - if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 ) <nl> + + if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) <nl> + { <nl> + worldserver1 = minecraftserver . func _ 71218 _ a ( 0 ) ; <nl> + this . field _ 71093 _ bK = 0 ; <nl> + @ @ - 2529 , 22 + 2564 , 23 @ @ <nl> + this . field _ 70170 _ p . field _ 72984 _ F . func _ 76320 _ a ( " reposition " ) ; <nl> + BlockPos blockpos ; <nl> + <nl> + - if ( p _ 184204 _ 1 _ = = 1 ) <nl> + + if ( p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) <nl> + { <nl> + blockpos = worldserver1 . func _ 180504 _ m ( ) ; <nl> } <nl> else <nl> { <nl> @ @ - 176 , 7 + 201 , 26 @ @ <nl> { <nl> d0 = MathHelper . func _ 151237 _ a ( d0 * 8 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; <nl> d1 = MathHelper . func _ 151237 _ a ( d1 * 8 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; <nl> - @ @ - 2604 , 7 + 2633 , 7 @ @ <nl> + @ @ - 2554 , 8 + 2590 , 7 @ @ <nl> + d1 = ( double ) MathHelper . func _ 76125 _ a ( ( int ) d1 , - 29999872 , 29999872 ) ; <nl> + float f = this . field _ 70177 _ z ; <nl> + this . func _ 70012 _ b ( d0 , this . field _ 70163 _ u , d1 , 90 . 0F , 0 . 0F ) ; <nl> + - Teleporter teleporter = worldserver1 . func _ 85176 _ s ( ) ; <nl> + - teleporter . func _ 180620 _ b ( this , f ) ; <nl> + + teleporter . placeEntity ( worldserver1 , this , f ) ; <nl> + blockpos = new BlockPos ( this ) ; <nl> + } <nl> + <nl> + @ @ - 2567 , 7 + 2602 , 7 @ @ <nl> + { <nl> + entity . func _ 180432 _ n ( this ) ; <nl> + <nl> + - if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 ) <nl> + + if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) <nl> + { <nl> + BlockPos blockpos1 = worldserver1 . func _ 175672 _ r ( worldserver1 . func _ 175694 _ M ( ) ) ; <nl> + entity . func _ 174828 _ a ( blockpos1 , entity . field _ 70177 _ z , entity . field _ 70125 _ A ) ; <nl> + @ @ - 2604 , 7 + 2639 , 7 @ @ <nl> <nl> public float func _ 180428 _ a ( Explosion p _ 180428 _ 1 _ , World p _ 180428 _ 2 _ , BlockPos p _ 180428 _ 3 _ , IBlockState p _ 180428 _ 4 _ ) <nl> { <nl> @ @ - 185 , 7 + 229 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 174816 _ a ( Explosion p _ 174816 _ 1 _ , World p _ 174816 _ 2 _ , BlockPos p _ 174816 _ 3 _ , IBlockState p _ 174816 _ 4 _ , float p _ 174816 _ 5 _ ) <nl> - @ @ - 2901 , 6 + 2930 , 183 @ @ <nl> + @ @ - 2901 , 6 + 2936 , 183 @ @ <nl> EnchantmentHelper . func _ 151385 _ b ( p _ 174815 _ 1 _ , p _ 174815 _ 2 _ ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch <nl> index d3c802e . . 46afa1b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch <nl> @ @ - 23 , 3 + 23 , 19 @ @ <nl> } <nl> } <nl> else if ( entitylivingbase ! = null ) <nl> + @ @ - 141 , 13 + 145 , 13 @ @ <nl> + } <nl> + <nl> + @ Nullable <nl> + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) <nl> + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> + { <nl> + if ( this . field _ 70192 _ c . field _ 71093 _ bK ! = p _ 184204 _ 1 _ ) <nl> + { <nl> + this . field _ 70192 _ c = null ; <nl> + } <nl> + <nl> + - return super . func _ 184204 _ a ( p _ 184204 _ 1 _ ) ; <nl> + + return super . changeDimension ( p _ 184204 _ 1 _ , teleporter ) ; <nl> + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch <nl> index cadbee0 . . b865904 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch <nl> @ @ - 117 , 6 + 117 , 18 @ @ <nl> this . func _ 70106 _ y ( ) ; <nl> itemstack . func _ 190920 _ e ( i ) ; <nl> } <nl> + @ @ - 394 , 9 + 425 , 9 @ @ <nl> + } <nl> + <nl> + @ Nullable <nl> + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) <nl> + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> + { <nl> + - Entity entity = super . func _ 184204 _ a ( p _ 184204 _ 1 _ ) ; <nl> + + Entity entity = super . changeDimension ( p _ 184204 _ 1 _ , teleporter ) ; <nl> + <nl> + if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & entity instanceof EntityItem ) <nl> + { <nl> @ @ - 476 , 6 + 507 , 6 @ @ <nl> public void func _ 174870 _ v ( ) <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> index 794653d . . c1ef384 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> @ @ - 1 , 5 + 1 , 18 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java <nl> + + + . . / src - work / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java <nl> + @ @ - 138 , 10 + 138 , 10 @ @ <nl> + } <nl> + <nl> + @ Nullable <nl> + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) <nl> + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> + { <nl> + this . field _ 94112 _ b = false ; <nl> + - return super . func _ 184204 _ a ( p _ 184204 _ 1 _ ) ; <nl> + + return super . changeDimension ( p _ 184204 _ 1 _ , teleporter ) ; <nl> + } <nl> + <nl> + public void func _ 70106 _ y ( ) <nl> @ @ - 202 , 6 + 202 , 7 @ @ <nl> <nl> public boolean func _ 184230 _ a ( EntityPlayer p _ 184230 _ 1 _ , EnumHand p _ 184230 _ 2 _ ) <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 98df444 . . e374ae6 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 50 , 14 + 50 , 35 @ @ <nl> } <nl> <nl> for ( ScoreObjective scoreobjective : this . field _ 70170 _ p . func _ 96441 _ U ( ) . func _ 96520 _ a ( IScoreCriteria . field _ 96642 _ c ) ) <nl> - @ @ - 647 , 6 + 660 , 7 @ @ <nl> + @ @ - 645 , 8 + 658 , 9 @ @ <nl> + } <nl> + <nl> @ Nullable <nl> - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) <nl> + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) <nl> + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> { <nl> + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 184204 _ 1 _ ) ) return this ; <nl> this . field _ 184851 _ cj = true ; <nl> <nl> if ( this . field _ 71093 _ bK = = 0 & & p _ 184204 _ 1 _ = = - 1 ) <nl> + @ @ - 658 , 7 + 672 , 7 @ @ <nl> + this . field _ 193110 _ cw = null ; <nl> + } <nl> + <nl> + - if ( this . field _ 71093 _ bK = = 1 & & p _ 184204 _ 1 _ = = 1 ) <nl> + + if ( this . field _ 71093 _ bK = = 1 & & p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) <nl> + { <nl> + this . field _ 70170 _ p . func _ 72900 _ e ( this ) ; <nl> + <nl> + @ @ - 678 , 7 + 692 , 7 @ @ <nl> + p _ 184204 _ 1 _ = 1 ; <nl> + } <nl> + <nl> + - this . field _ 71133 _ b . func _ 184103 _ al ( ) . func _ 187242 _ a ( this , p _ 184204 _ 1 _ ) ; <nl> + + this . field _ 71133 _ b . func _ 184103 _ al ( ) . transferPlayerToDimension ( this , p _ 184204 _ 1 _ , teleporter ) ; <nl> + this . field _ 71135 _ a . func _ 147359 _ a ( new SPacketEffect ( 1032 , BlockPos . field _ 177992 _ a , 0 , false ) ) ; <nl> + this . field _ 71144 _ ck = - 1 ; <nl> + this . field _ 71149 _ ch = - 1 . 0F ; <nl> @ @ - 808 , 7 + 822 , 7 @ @ <nl> BlockPos blockpos = new BlockPos ( i , j , k ) ; <nl> IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( blockpos ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch <nl> index 480680f . . 62d2911 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch <nl> @ @ - 146 , 15 + 146 , 21 @ @ <nl> return entityplayermp ; <nl> } <nl> <nl> - @ @ - 556 , 15 + 601 , 20 @ @ <nl> + @ @ - 556 , 15 + 601 , 26 @ @ <nl> <nl> public void func _ 187242 _ a ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ ) <nl> { <nl> + transferPlayerToDimension ( p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , field _ 72400 _ f . func _ 71218 _ a ( p _ 187242 _ 2 _ ) . func _ 85176 _ s ( ) ) ; <nl> + } <nl> + <nl> + + / / TODO : Remove ( 1 . 13 ) <nl> + public void transferPlayerToDimension ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ , net . minecraft . world . Teleporter teleporter ) <nl> + { <nl> + + transferPlayerToDimension ( p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , ( net . minecraftforge . common . util . ITeleporter ) teleporter ) ; <nl> + + } <nl> + + <nl> + + public void transferPlayerToDimension ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> + + { <nl> int i = p _ 187242 _ 1 _ . field _ 71093 _ bK ; <nl> WorldServer worldserver = this . field _ 72400 _ f . func _ 71218 _ a ( p _ 187242 _ 1 _ . field _ 71093 _ bK ) ; <nl> p _ 187242 _ 1 _ . field _ 71093 _ bK = p _ 187242 _ 2 _ ; <nl> @ @ - 169 , 7 + 175 , 7 @ @ <nl> this . func _ 72375 _ a ( p _ 187242 _ 1 _ , worldserver ) ; <nl> p _ 187242 _ 1 _ . field _ 71135 _ a . func _ 147364 _ a ( p _ 187242 _ 1 _ . field _ 70165 _ t , p _ 187242 _ 1 _ . field _ 70163 _ u , p _ 187242 _ 1 _ . field _ 70161 _ v , p _ 187242 _ 1 _ . field _ 70177 _ z , p _ 187242 _ 1 _ . field _ 70125 _ A ) ; <nl> p _ 187242 _ 1 _ . field _ 71134 _ c . func _ 73080 _ a ( worldserver1 ) ; <nl> - @ @ - 576 , 17 + 626 , 27 @ @ <nl> + @ @ - 576 , 17 + 632 , 30 @ @ <nl> { <nl> p _ 187242 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new SPacketEntityEffect ( p _ 187242 _ 1 _ . func _ 145782 _ y ( ) , potioneffect ) ) ; <nl> } <nl> @ @ - 183 , 12 + 189 , 15 @ @ <nl> + transferEntityToWorld ( p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , p _ 82448 _ 4 _ . func _ 85176 _ s ( ) ) ; <nl> + } <nl> + <nl> - + @ SuppressWarnings ( " unused " ) <nl> + + / / TODO : Remove ( 1 . 13 ) <nl> + public void transferEntityToWorld ( Entity p _ 82448 _ 1 _ , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraft . world . Teleporter teleporter ) <nl> + { <nl> - + net . minecraft . world . WorldProvider pOld = p _ 82448 _ 3 _ . field _ 73011 _ w ; <nl> - + net . minecraft . world . WorldProvider pNew = p _ 82448 _ 4 _ . field _ 73011 _ w ; <nl> - + double moveFactor = pOld . getMovementFactor ( ) / pNew . getMovementFactor ( ) ; <nl> + + transferEntityToWorld ( p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , ( net . minecraftforge . common . util . ITeleporter ) teleporter ) ; <nl> + + } <nl> + + <nl> + + public void transferEntityToWorld ( Entity p _ 82448 _ 1 _ , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraftforge . common . util . ITeleporter teleporter ) <nl> + + { <nl> + + double moveFactor = p _ 82448 _ 3 _ . field _ 73011 _ w . getMovementFactor ( ) / p _ 82448 _ 4 _ . field _ 73011 _ w . getMovementFactor ( ) ; <nl> + double d0 = MathHelper . func _ 151237 _ a ( p _ 82448 _ 1 _ . field _ 70165 _ t * moveFactor , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; <nl> + double d1 = MathHelper . func _ 151237 _ a ( p _ 82448 _ 1 _ . field _ 70161 _ v * moveFactor , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; <nl> double d2 = 8 . 0D ; <nl> @ @ - 200 , 7 + 209 , 7 @ @ <nl> { <nl> d0 = MathHelper . func _ 151237 _ a ( d0 / 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; <nl> d1 = MathHelper . func _ 151237 _ a ( d1 / 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; <nl> - @ @ - 597 , 7 + 657 , 7 @ @ <nl> + @ @ - 597 , 7 + 666 , 7 @ @ <nl> p _ 82448 _ 3 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; <nl> } <nl> } <nl> @ @ - 209 , 22 + 218 , 31 @ @ <nl> { <nl> d0 = MathHelper . func _ 151237 _ a ( d0 * 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; <nl> d1 = MathHelper . func _ 151237 _ a ( d1 * 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; <nl> - @ @ - 608 , 7 + 668 , 8 @ @ <nl> + @ @ - 608 , 7 + 677 , 7 @ @ <nl> p _ 82448 _ 3 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; <nl> } <nl> } <nl> - else <nl> - + <nl> - + if ( p _ 82448 _ 1 _ . field _ 71093 _ bK = = 1 ) <nl> + + if ( p _ 82448 _ 1 _ . field _ 71093 _ bK = = 1 & & teleporter . isVanilla ( ) ) <nl> { <nl> BlockPos blockpos ; <nl> <nl> - @ @ - 643 , 7 + 704 , 7 @ @ <nl> + @ @ - 634 , 7 + 703 , 7 @ @ <nl> + <nl> + p _ 82448 _ 3 _ . field _ 72984 _ F . func _ 76319 _ b ( ) ; <nl> + <nl> + - if ( p _ 82448 _ 2 _ ! = 1 ) <nl> + + if ( p _ 82448 _ 2 _ ! = 1 | | ! teleporter . isVanilla ( ) ) <nl> + { <nl> + p _ 82448 _ 3 _ . field _ 72984 _ F . func _ 76320 _ a ( " placing " ) ; <nl> + d0 = ( double ) MathHelper . func _ 76125 _ a ( ( int ) d0 , - 29999872 , 29999872 ) ; <nl> + @ @ - 643 , 7 + 712 , 8 @ @ <nl> if ( p _ 82448 _ 1 _ . func _ 70089 _ S ( ) ) <nl> { <nl> p _ 82448 _ 1 _ . func _ 70012 _ b ( d0 , p _ 82448 _ 1 _ . field _ 70163 _ u , d1 , p _ 82448 _ 1 _ . field _ 70177 _ z , p _ 82448 _ 1 _ . field _ 70125 _ A ) ; <nl> - p _ 82448 _ 4 _ . func _ 85176 _ s ( ) . func _ 180266 _ a ( p _ 82448 _ 1 _ , f ) ; <nl> - + teleporter . func _ 180266 _ a ( p _ 82448 _ 1 _ , f ) ; <nl> + + p _ 82448 _ 3 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; <nl> + + teleporter . placeEntity ( p _ 82448 _ 4 _ , p _ 82448 _ 1 _ , f ) ; <nl> p _ 82448 _ 4 _ . func _ 72838 _ d ( p _ 82448 _ 1 _ ) ; <nl> p _ 82448 _ 4 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / Teleporter . java . patch b / patches / minecraft / net / minecraft / world / Teleporter . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 8b5983a <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / world / Teleporter . java . patch <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / world / Teleporter . java <nl> + + + + . . / src - work / minecraft / net / minecraft / world / Teleporter . java <nl> + @ @ - 15 , 7 + 15 , 7 @ @ <nl> + import net . minecraft . util . math . ChunkPos ; <nl> + import net . minecraft . util . math . MathHelper ; <nl> + <nl> + - public class Teleporter <nl> + + public class Teleporter implements net . minecraftforge . common . util . ITeleporter <nl> + { <nl> + protected final WorldServer field _ 85192 _ a ; <nl> + protected final Random field _ 77187 _ a ; <nl> + @ @ - 428 , 4 + 428 , 13 @ @ <nl> + this . field _ 85087 _ d = p _ i45747 _ 3 _ ; <nl> + } <nl> + } <nl> + + <nl> + + @ Override <nl> + + public void placeEntity ( World world , Entity entity , float yaw ) <nl> + + { <nl> + + if ( entity instanceof EntityPlayerMP ) <nl> + + func _ 180266 _ a ( entity , yaw ) ; <nl> + + else <nl> + + func _ 180620 _ b ( entity , yaw ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch b / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch <nl> index f9795eb . . 8281c44 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch <nl> @ @ - 18 , 3 + 18 , 26 @ @ <nl> } <nl> <nl> public void func _ 186059 _ r ( ) <nl> + @ @ - 129 , 4 + 129 , 22 @ @ <nl> + { <nl> + return this . field _ 186064 _ g ; <nl> + } <nl> + + <nl> + + @ Override <nl> + + public void func _ 186061 _ a ( net . minecraft . entity . player . EntityPlayerMP player ) <nl> + + { <nl> + + if ( this . field _ 186064 _ g ! = null ) <nl> + + { <nl> + + this . field _ 186064 _ g . addPlayer ( player ) ; <nl> + + } <nl> + + } <nl> + + <nl> + + @ Override <nl> + + public void func _ 186062 _ b ( net . minecraft . entity . player . EntityPlayerMP player ) <nl> + + { <nl> + + if ( this . field _ 186064 _ g ! = null ) <nl> + + { <nl> + + this . field _ 186064 _ g . removePlayer ( player ) ; <nl> + + } <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / end / DragonFightManager . java . patch b / patches / minecraft / net / minecraft / world / end / DragonFightManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . a1e5b7b <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / world / end / DragonFightManager . java . patch <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / world / end / DragonFightManager . java <nl> + + + + . . / src - work / minecraft / net / minecraft / world / end / DragonFightManager . java <nl> + @ @ - 72 , 6 + 72 , 7 @ @ <nl> + public DragonFightManager ( WorldServer p _ i46669 _ 1 _ , NBTTagCompound p _ i46669 _ 2 _ ) <nl> + { <nl> + this . field _ 186110 _ d = p _ i46669 _ 1 _ ; <nl> + + this . field _ 186120 _ n = p _ i46669 _ 2 _ . func _ 82582 _ d ( ) ; / / Forge : fix MC - 105080 <nl> + <nl> + if ( p _ i46669 _ 2 _ . func _ 150297 _ b ( " DragonKilled " , 99 ) ) <nl> + { <nl> + @ @ - 582 , 4 + 583 , 14 @ @ <nl> + } <nl> + } <nl> + } <nl> + + <nl> + + public void addPlayer ( EntityPlayerMP player ) <nl> + + { <nl> + + this . field _ 186109 _ c . func _ 186760 _ a ( player ) ; <nl> + + } <nl> + + <nl> + + public void removePlayer ( EntityPlayerMP player ) <nl> + + { <nl> + + this . field _ 186109 _ c . func _ 186761 _ b ( player ) ; <nl> + + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayer . java b / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> index 9676361 . . 522b845 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> @ @ - 52 , 6 + 52 , 6 @ @ public class FakePlayer extends EntityPlayerMP <nl> @ Override public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> @ Override public void onDeath ( DamageSource source ) { return ; } <nl> @ Override public void onUpdate ( ) { return ; } <nl> - @ Override public Entity changeDimension ( int dim ) { return this ; } <nl> + @ Override public Entity changeDimension ( int dim , ITeleporter teleporter ) { return this ; } <nl> @ Override public void handleClientSettings ( CPacketClientSettings pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / ITeleporter . java b / src / main / java / net / minecraftforge / common / util / ITeleporter . java <nl> new file mode 100644 <nl> index 0000000 . . c9952ba <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / ITeleporter . java <nl> @ @ - 0 , 0 + 1 , 60 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2017 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . world . Teleporter ; <nl> + import net . minecraft . world . World ; <nl> + import net . minecraft . world . WorldProvider ; <nl> + <nl> + / * * <nl> + * Interface for handling the placement of entities during dimension change . <nl> + * <nl> + * An implementation of this interface can be used to place the entity <nl> + * in a safe location , or generate a return portal , for instance . <nl> + * <nl> + * See the { @ link net . minecraft . world . Teleporter } class , which has <nl> + * been patched to implement this interface , for a vanilla example . <nl> + * / <nl> + public interface ITeleporter <nl> + { <nl> + / * * <nl> + * Called to handle placing the entity in the new world . <nl> + * <nl> + * The initial position of the entity will be its <nl> + * position in the origin world , multiplied horizontally <nl> + * by the computed cross - dimensional movement factor <nl> + * ( see { @ link WorldProvider # getMovementFactor ( ) } ) . <nl> + * <nl> + * Note that the supplied entity has not yet been spawned <nl> + * in the destination world at the time . <nl> + * <nl> + * @ param world the entity ' s destination <nl> + * @ param entity the entity to be placed <nl> + * @ param yaw the suggested yaw value to apply <nl> + * / <nl> + void placeEntity ( World world , Entity entity , float yaw ) ; <nl> + <nl> + / / used internally to handle vanilla hardcoding <nl> + default boolean isVanilla ( ) <nl> + { <nl> + return getClass ( ) = = Teleporter . class ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java <nl> new file mode 100644 <nl> index 0000000 . . 5d3ee14 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java <nl> @ @ - 0 , 0 + 1 , 120 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2017 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . server . command ; <nl> + <nl> + import net . minecraft . command . CommandBase ; <nl> + import net . minecraft . command . CommandException ; <nl> + import net . minecraft . command . ICommandSender ; <nl> + import net . minecraft . command . WrongUsageException ; <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . world . World ; <nl> + import net . minecraftforge . common . DimensionManager ; <nl> + import net . minecraftforge . common . util . ITeleporter ; <nl> + <nl> + import javax . annotation . Nullable ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + <nl> + public class CommandSetDimension extends CommandBase <nl> + { <nl> + @ Override <nl> + public String getName ( ) <nl> + { <nl> + return " setdimension " ; <nl> + } <nl> + <nl> + @ Override <nl> + public List < String > getAliases ( ) <nl> + { <nl> + return Collections . singletonList ( " setdim " ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getUsage ( ICommandSender sender ) <nl> + { <nl> + return " commands . forge . setdim . usage " ; <nl> + } <nl> + <nl> + @ Override <nl> + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) <nl> + { <nl> + if ( args . length > 2 & & args . length < = 5 ) <nl> + { <nl> + return getTabCompletionCoordinate ( args , 2 , targetPos ) ; <nl> + } <nl> + return Collections . emptyList ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int getRequiredPermissionLevel ( ) <nl> + { <nl> + return 2 ; <nl> + } <nl> + <nl> + @ Override <nl> + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException <nl> + { <nl> + / / args : < entity > < dim > [ < x > < y > < z > ] <nl> + if ( args . length ! = 2 & & args . length ! = 5 ) <nl> + { <nl> + throw new WrongUsageException ( " commands . forge . setdim . usage " ) ; <nl> + } <nl> + Entity entity = getEntity ( server , sender , args [ 0 ] ) ; <nl> + if ( ! checkEntity ( entity ) ) <nl> + { <nl> + throw new CommandException ( " commands . forge . setdim . invalid . entity " , entity . getName ( ) ) ; <nl> + } <nl> + int dimension = parseInt ( args [ 1 ] ) ; <nl> + if ( ! DimensionManager . isDimensionRegistered ( dimension ) ) <nl> + { <nl> + throw new CommandException ( " commands . forge . setdim . invalid . dim " , dimension ) ; <nl> + } <nl> + if ( dimension = = entity . dimension ) <nl> + { <nl> + throw new CommandException ( " commands . forge . setdim . invalid . nochange " , entity . getName ( ) , dimension ) ; <nl> + } <nl> + BlockPos pos = args . length = = 5 ? parseBlockPos ( sender , args , 2 , false ) : sender . getPosition ( ) ; <nl> + entity . changeDimension ( dimension , new CommandTeleporter ( pos ) ) ; <nl> + } <nl> + <nl> + private static boolean checkEntity ( Entity entity ) <nl> + { <nl> + / / use vanilla portal logic , try to avoid doing anything too silly <nl> + return ! entity . isRiding ( ) & & ! entity . isBeingRidden ( ) & & entity . isNonBoss ( ) ; <nl> + } <nl> + <nl> + private static class CommandTeleporter implements ITeleporter <nl> + { <nl> + private final BlockPos targetPos ; <nl> + <nl> + private CommandTeleporter ( BlockPos targetPos ) <nl> + { <nl> + this . targetPos = targetPos ; <nl> + } <nl> + <nl> + @ Override <nl> + public void placeEntity ( World world , Entity entity , float yaw ) <nl> + { <nl> + entity . moveToBlockPosAndAngles ( targetPos , yaw , entity . rotationPitch ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> index 7473e72 . . fda3560 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ public class ForgeCommand extends CommandTreeBase <nl> super . addSubcommand ( new CommandTrack ( ) ) ; <nl> super . addSubcommand ( new CommandGenerate ( ) ) ; <nl> super . addSubcommand ( new CommandEntity ( ) ) ; <nl> + super . addSubcommand ( new CommandSetDimension ( ) ) ; <nl> super . addSubcommand ( new CommandTreeHelp ( this ) ) ; <nl> } <nl> <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index ba6b6c6 . . 58efbf3 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 15 , 6 + 15 , 10 @ @ commands . forge . entity . list . invalidworld = Could not load world for dimension % d . P <nl> commands . forge . entity . list . none = No entities found . <nl> commands . forge . entity . list . single . header = Entity : % s Total : % d <nl> commands . forge . entity . list . multiple . header = Total : % d <nl> + commands . forge . setdim . usage = Use / forge setdim < entity > < dimension > [ < x > < y > < z > ] <nl> + commands . forge . setdim . invalid . entity = The entity selected ( % s ) is not valid . <nl> + commands . forge . setdim . invalid . dim = The dimension ID specified ( % d ) is not valid . <nl> + commands . forge . setdim . invalid . nochange = The entity selected ( % s ) is already in the dimension specified ( % d ) . <nl> <nl> commands . forge . tracking . te . enabled = Tile Entity tracking enabled for % d seconds . <nl> commands . forge . tracking . entity . enabled = Entity tracking enabled for % d seconds . <nl> diff - - git a / src / main / resources / forge . exc b / src / main / resources / forge . exc <nl> index 140927f . . 3cbcfe1 100644 <nl> - - - a / src / main / resources / forge . exc <nl> + + + b / src / main / resources / forge . exc <nl> @ @ - 3 , 8 + 3 , 17 @ @ net / minecraft / client / renderer / ItemRenderer . renderItem ( Lnet / minecraft / entity / Enti <nl> net / minecraft / client / renderer / RenderGlobal . drawBlockDamageTexture ( Lnet / minecraft / client / renderer / Tessellator ; Lnet / minecraft / entity / EntityLivingBase ; F ) V = | p _ 72717 _ 1 _ , p _ 72717 _ 2 _ , p _ 72717 _ 3 _ <nl> net / minecraft / client / renderer / entity / RenderItem . renderDroppedItem ( Lnet / minecraft / entity / item / EntityItem ; Lnet / minecraft / util / IIcon ; IFFFFI ) V = | p _ 77020 _ 1 _ , p _ 77020 _ 2 _ , p _ 77020 _ 3 _ , p _ 77020 _ 4 _ , p _ 77020 _ 5 _ , p _ 77020 _ 6 _ , p _ 77020 _ 7 _ , pass <nl> net / minecraft / client / renderer / entity / RenderItem . renderItemIntoGUI ( Lnet / minecraft / client / gui / FontRenderer ; Lnet / minecraft / client / renderer / texture / TextureManager ; Lnet / minecraft / item / ItemStack ; IIZ ) V = | p _ 77015 _ 1 _ , p _ 77015 _ 2 _ , p _ 77015 _ 3 _ , p _ 77015 _ 4 _ , p _ 77015 _ 5 _ , renderEffect <nl> + <nl> + net / minecraft / entity / Entity . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter <nl> + net / minecraft / entity / item / EntityEnderPearl . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter <nl> + net / minecraft / entity / item / EntityItem . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter <nl> + net / minecraft / entity / item / EntityMinecartContainer . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter <nl> + net / minecraft / entity / player / EntityPlayerMP . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter <nl> net / minecraft / server / management / PlayerList . transferPlayerToDimension ( Lnet / minecraft / entity / player / EntityPlayerMP ; ILnet / minecraft / world / Teleporter ; ) V = | p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , teleporter <nl> + net / minecraft / server / management / PlayerList . transferPlayerToDimension ( Lnet / minecraft / entity / player / EntityPlayerMP ; ILnet / minecraftforge / common / util / ITeleporter ; ) V = | p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , teleporter <nl> net / minecraft / server / management / PlayerList . transferEntityToWorld ( Lnet / minecraft / entity / Entity ; ILnet / minecraft / world / WorldServer ; Lnet / minecraft / world / WorldServer ; Lnet / minecraft / world / Teleporter ; ) V = | p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , teleporter <nl> + net / minecraft / server / management / PlayerList . transferEntityToWorld ( Lnet / minecraft / entity / Entity ; ILnet / minecraft / world / WorldServer ; Lnet / minecraft / world / WorldServer ; Lnet / minecraftforge / common / util / ITeleporter ; ) V = | p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , teleporter <nl> + <nl> net / minecraft / world / World . getBiomeGenForCoordsBody ( II ) Lnet / minecraft / world / biome / Biome ; = | p _ 72807 _ 1 _ , p _ 72807 _ 2 _ <nl> net / minecraft / world / World . getSunBrightnessFactor ( F ) F = | p _ 72967 _ 1 _ <nl> net / minecraft / world / World . getSunBrightnessBody ( F ) F = | p _ 72971 _ 1 _
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 5637ab8 . . eaf179b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 152 , 7 + 152 , 15 @ @ <nl> this . field _ 71100 _ bB . func _ 75112 _ a ( p _ 70037 _ 1 _ ) ; <nl> this . field _ 71075 _ bZ . func _ 75095 _ b ( p _ 70037 _ 1 _ ) ; <nl> <nl> - @ @ - 921 , 6 + 965 , 23 @ @ <nl> + @ @ - 903 , 6 + 947 , 7 @ @ <nl> + { <nl> + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74782 _ a ( " Inventory " , this . field _ 71071 _ by . func _ 70442 _ a ( new NBTTagList ( ) ) ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " SelectedItemSlot " , this . field _ 71071 _ by . field _ 70461 _ c ) ; <nl> + p _ 70014 _ 1 _ . func _ 74757 _ a ( " Sleeping " , this . field _ 71083 _ bS ) ; <nl> + @ @ - 921 , 6 + 966 , 23 @ @ <nl> p _ 70014 _ 1 _ . func _ 74757 _ a ( " SpawnForced " , this . field _ 82248 _ d ) ; <nl> } <nl> <nl> @ @ - 176 , 7 + 184 , 7 @ @ <nl> this . field _ 71100 _ bB . func _ 75117 _ b ( p _ 70014 _ 1 _ ) ; <nl> this . field _ 71075 _ bZ . func _ 75091 _ a ( p _ 70014 _ 1 _ ) ; <nl> p _ 70014 _ 1 _ . func _ 74782 _ a ( " EnderItems " , this . field _ 71078 _ a . func _ 70487 _ g ( ) ) ; <nl> - @ @ - 928 , 6 + 989 , 7 @ @ <nl> + @ @ - 928 , 6 + 990 , 7 @ @ <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) <nl> { <nl> @ @ - 184 , 7 + 192 , 7 @ @ <nl> if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) <nl> { <nl> return false ; <nl> - @ @ - 1006 , 6 + 1068 , 7 @ @ <nl> + @ @ - 1006 , 6 + 1069 , 7 @ @ <nl> if ( this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> EnumHand enumhand = this . func _ 184600 _ cs ( ) ; <nl> @ @ - 192 , 7 + 200 , 7 @ @ <nl> <nl> if ( enumhand = = EnumHand . MAIN _ HAND ) <nl> { <nl> - @ @ - 1041 , 7 + 1104 , 10 @ @ <nl> + @ @ - 1041 , 7 + 1105 , 10 @ @ <nl> { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) <nl> { <nl> @ @ - 204 , 7 + 212 , 7 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; <nl> - @ @ - 1111 , 6 + 1177 , 7 @ @ <nl> + @ @ - 1111 , 6 + 1178 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 212 , 7 + 220 , 7 @ @ <nl> ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; <nl> ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; <nl> <nl> - @ @ - 1120 , 7 + 1187 , 10 @ @ <nl> + @ @ - 1120 , 7 + 1188 , 10 @ @ <nl> { <nl> itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; <nl> } <nl> @ @ - 224 , 7 + 232 , 7 @ @ <nl> return EnumActionResult . SUCCESS ; <nl> } <nl> else <nl> - @ @ - 1136 , 6 + 1206 , 7 @ @ <nl> + @ @ - 1136 , 6 + 1207 , 7 @ @ <nl> { <nl> if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) <nl> { <nl> @ @ - 232 , 7 + 240 , 7 @ @ <nl> this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; <nl> } <nl> <nl> - @ @ - 1161 , 6 + 1232 , 7 @ @ <nl> + @ @ - 1161 , 6 + 1233 , 7 @ @ <nl> <nl> public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) <nl> { <nl> @ @ - 240 , 7 + 248 , 7 @ @ <nl> if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) <nl> { <nl> if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) <nl> - @ @ - 1331 , 11 + 1403 , 13 @ @ <nl> + @ @ - 1331 , 11 + 1404 , 13 @ @ <nl> <nl> if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) <nl> { <nl> @ @ - 254 , 7 + 262 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1441 , 6 + 1515 , 8 @ @ <nl> + @ @ - 1441 , 6 + 1516 , 8 @ @ <nl> <nl> public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) <nl> { <nl> @ @ - 263 , 7 + 271 , 7 @ @ <nl> EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> - @ @ - 1482 , 8 + 1558 , 9 @ @ <nl> + @ @ - 1482 , 8 + 1559 , 9 @ @ <nl> <nl> this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; <nl> <nl> @ @ - 275 , 7 + 283 , 7 @ @ <nl> float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; <nl> float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; <nl> this . func _ 175139 _ a ( enumfacing ) ; <nl> - @ @ - 1530 , 13 + 1607 , 14 @ @ <nl> + @ @ - 1530 , 13 + 1608 , 14 @ @ <nl> <nl> public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) <nl> { <nl> @ @ - 293 , 7 + 301 , 7 @ @ <nl> <nl> if ( blockpos = = null ) <nl> { <nl> - @ @ - 1545 , 6 + 1623 , 10 @ @ <nl> + @ @ - 1545 , 6 + 1624 , 10 @ @ <nl> <nl> this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; <nl> } <nl> @ @ - 304 , 7 + 312 , 7 @ @ <nl> <nl> this . field _ 71083 _ bS = false ; <nl> <nl> - @ @ - 1563 , 15 + 1645 , 16 @ @ <nl> + @ @ - 1563 , 15 + 1646 , 16 @ @ <nl> <nl> private boolean func _ 175143 _ p ( ) <nl> { <nl> @ @ - 324 , 7 + 332 , 7 @ @ <nl> { <nl> if ( ! p _ 180467 _ 2 _ ) <nl> { <nl> - @ @ - 1586 , 16 + 1669 , 17 @ @ <nl> + @ @ - 1586 , 16 + 1670 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 345 , 7 + 353 , 7 @ @ <nl> <nl> switch ( enumfacing ) <nl> { <nl> - @ @ - 1635 , 16 + 1719 , 24 @ @ <nl> + @ @ - 1635 , 16 + 1720 , 24 @ @ <nl> <nl> public BlockPos func _ 180470 _ cg ( ) <nl> { <nl> @ @ - 372 , 7 + 380 , 7 @ @ <nl> if ( p _ 180473 _ 1 _ ! = null ) <nl> { <nl> this . field _ 71077 _ c = p _ 180473 _ 1 _ ; <nl> - @ @ - 1839 , 6 + 1931 , 10 @ @ <nl> + @ @ - 1839 , 6 + 1932 , 10 @ @ <nl> <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> } <nl> @ @ - 383 , 7 + 391 , 7 @ @ <nl> } <nl> <nl> protected void func _ 71061 _ d _ ( ) <nl> - @ @ - 2039 , 6 + 2135 , 18 @ @ <nl> + @ @ - 2039 , 6 + 2136 , 18 @ @ <nl> this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; <nl> this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; <nl> this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; <nl> @ @ - 402 , 7 + 410 , 7 @ @ <nl> } <nl> <nl> protected boolean func _ 70041 _ e _ ( ) <nl> - @ @ - 2137 , 7 + 2245 , 10 @ @ <nl> + @ @ - 2137 , 7 + 2246 , 10 @ @ <nl> <nl> public ITextComponent func _ 145748 _ c _ ( ) <nl> { <nl> @ @ - 414 , 7 + 422 , 7 @ @ <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; <nl> - @ @ - 2146 , 7 + 2257 , 7 @ @ <nl> + @ @ - 2146 , 7 + 2258 , 7 @ @ <nl> <nl> public float func _ 70047 _ e ( ) <nl> { <nl> @ @ - 423 , 7 + 431 , 7 @ @ <nl> <nl> if ( this . func _ 70608 _ bn ( ) ) <nl> { <nl> - @ @ - 2362 , 6 + 2473 , 162 @ @ <nl> + @ @ - 2362 , 6 + 2474 , 162 @ @ <nl> return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ad8f719 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / datafix / DataFixesManager . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / datafix / DataFixesManager . java <nl> + @ @ - 158 , 6 + 158 , 7 @ @ <nl> + public static DataFixer func _ 188279 _ a ( ) <nl> + { <nl> + DataFixer datafixer = new DataFixer ( 819 ) ; <nl> + + datafixer = new net . minecraftforge . common . util . CompoundDataFixer ( datafixer ) ; <nl> + WorldInfo . func _ 189967 _ a ( datafixer ) ; <nl> + EntityPlayer . func _ 189806 _ a ( datafixer ) ; <nl> + AnvilChunkLoader . func _ 189889 _ a ( datafixer ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index 5ac3cdd . . 22b5152 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 97 , 15 + 97 , 17 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 122 , 6 + 181 , 7 @ @ <nl> + @ @ - 121 , 7 + 180 , 9 @ @ <nl> + NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; <nl> nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; <nl> nbttagcompound . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( nbttagcompound ) ; <nl> this . func _ 75820 _ a ( p _ 75816 _ 2 _ , p _ 75816 _ 1 _ , nbttagcompound1 ) ; <nl> + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkDataEvent . Save ( p _ 75816 _ 2 _ , nbttagcompound ) ) ; <nl> this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; <nl> } <nl> catch ( Exception exception ) <nl> - @ @ - 307 , 8 + 367 , 17 @ @ <nl> + @ @ - 307 , 8 + 368 , 17 @ @ <nl> <nl> if ( entity . func _ 70039 _ c ( nbttagcompound2 ) ) <nl> { <nl> @ @ - 123 , 7 + 125 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 318 , 8 + 387 , 17 @ @ <nl> + @ @ - 318 , 8 + 388 , 17 @ @ <nl> <nl> for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) <nl> { <nl> @ @ - 141 , 7 + 143 , 7 @ @ <nl> } <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; <nl> - @ @ - 388 , 6 + 466 , 12 @ @ <nl> + @ @ - 388 , 6 + 467 , 12 @ @ <nl> chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; <nl> } <nl> <nl> @ @ - 154 , 7 + 156 , 7 @ @ <nl> NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; <nl> <nl> for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) <nl> - @ @ - 431 , 8 + 515 , 6 @ @ <nl> + @ @ - 431 , 8 + 516 , 6 @ @ <nl> p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 4e7e0db <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / world / gen / structure / template / Template . java <nl> + + + + . . / src - work / minecraft / net / minecraft / world / gen / structure / template / Template . java <nl> + @ @ - 520 , 6 + 520 , 7 @ @ <nl> + p _ 189552 _ 1 _ . func _ 74782 _ a ( " size " , this . func _ 186267 _ a ( new int [ ] { this . field _ 186272 _ c . func _ 177958 _ n ( ) , this . field _ 186272 _ c . func _ 177956 _ o ( ) , this . field _ 186272 _ c . func _ 177952 _ p ( ) } ) ) ; <nl> + p _ 189552 _ 1 _ . func _ 74778 _ a ( " author " , this . field _ 186273 _ d ) ; <nl> + p _ 189552 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 189552 _ 1 _ ) ; <nl> + return p _ 189552 _ 1 _ ; <nl> + } <nl> + <nl> diff - - git a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> index d3dbb53 . . e4a0e53 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> @ @ - 8 , 7 + 8 , 15 @ @ <nl> <nl> protected WorldInfo ( ) <nl> { <nl> - @ @ - 807 , 6 + 808 , 26 @ @ <nl> + @ @ - 335 , 6 + 336 , 7 @ @ <nl> + nbttagcompound . func _ 74757 _ a ( " Snapshot " , false ) ; <nl> + p _ 76064 _ 1 _ . func _ 74782 _ a ( " Version " , nbttagcompound ) ; <nl> + p _ 76064 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 76064 _ 1 _ ) ; <nl> + p _ 76064 _ 1 _ . func _ 74772 _ a ( " RandomSeed " , this . field _ 76100 _ a ) ; <nl> + p _ 76064 _ 1 _ . func _ 74778 _ a ( " generatorName " , this . field _ 76098 _ b . func _ 77127 _ a ( ) ) ; <nl> + p _ 76064 _ 1 _ . func _ 74768 _ a ( " generatorVersion " , this . field _ 76098 _ b . func _ 77131 _ c ( ) ) ; <nl> + @ @ - 807 , 6 + 809 , 26 @ @ <nl> } ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> new file mode 100644 <nl> index 0000000 . . da32e17 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> @ @ - 0 , 0 + 1 , 190 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . Map ; <nl> + import java . util . Map . Entry ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> + import net . minecraft . nbt . NBTTagCompound ; <nl> + import net . minecraft . util . datafix . DataFixer ; <nl> + import net . minecraft . util . datafix . FixTypes ; <nl> + import net . minecraft . util . datafix . IDataWalker ; <nl> + import net . minecraft . util . datafix . IFixType ; <nl> + import net . minecraft . util . datafix . IFixableData ; <nl> + <nl> + public class CompoundDataFixer extends DataFixer <nl> + { <nl> + private final ModFixs vanilla ; <nl> + private final Map < String , ModFixs > modFixers = Maps . newHashMap ( ) ; <nl> + private final Map < IFixType , List < IDataWalker > > walkers = Maps . newHashMap ( ) ; <nl> + <nl> + public CompoundDataFixer ( DataFixer vanilla ) <nl> + { <nl> + super ( 0 ) ; <nl> + this . vanilla = init ( " minecraft " , vanilla . version ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt ) <nl> + { <nl> + final Map < String , Integer > versions = getVersions ( nbt ) ; <nl> + final int mcversion = versions . get ( " minecraft " ) = = null ? - 1 : versions . get ( " minecraft " ) ; <nl> + final IDataFixerData holder = new IDataFixerData ( ) <nl> + { <nl> + @ Override <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int version ) <nl> + { <nl> + for ( Entry < String , ModFixs > e : modFixers . entrySet ( ) ) <nl> + { <nl> + / / This is a potential performance hot spot . As it walks all the data for all <nl> + / / of the fixers . . . But with the vanilla api there isn ' t a way to pass down <nl> + / / the mod specific version numbers , so redundant . . but not hacky . . . <nl> + / / Actually , this wont work as the data walkers take versions into account . . . <nl> + ModFixs fixer = e . getValue ( ) ; <nl> + int ver = getVersion ( e . getKey ( ) ) ; <nl> + if ( ver < fixer . version ) <nl> + { <nl> + for ( IFixableData fix : fixer . getFixes ( type ) ) <nl> + { <nl> + if ( fix . getFixVersion ( ) > ver ) <nl> + nbt = fix . fixTagCompound ( nbt ) ; <nl> + } <nl> + <nl> + for ( IDataWalker walker : getWalkers ( type ) ) <nl> + nbt = walker . process ( this , nbt , version ) ; / / We pass in the holder , in case a walker wants to know a mod version <nl> + } <nl> + } <nl> + return nbt ; <nl> + } <nl> + <nl> + @ Override <nl> + public int getVersion ( String mod ) <nl> + { <nl> + Integer ret = versions . get ( mod ) ; <nl> + return ret = = null ? - 1 : ret ; <nl> + } <nl> + } ; <nl> + return holder . process ( type , nbt , mcversion ) ; <nl> + } <nl> + <nl> + @ Override <nl> + @ Deprecated / / MODDERS DO NOT CALL DIRECTLY ! Only use from DataWalker ! <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int mcversion ) <nl> + { <nl> + if ( type ! = FixTypes . OPTIONS ) / / Options are vanilla only <nl> + throw new IllegalStateException ( " Do not call recursive process directly on DataFixer ! " ) ; <nl> + <nl> + for ( IFixableData fix : vanilla . getFixes ( type ) ) <nl> + { <nl> + if ( fix . getFixVersion ( ) > mcversion ) <nl> + nbt = fix . fixTagCompound ( nbt ) ; <nl> + } <nl> + / / Options is a hack , and doesn ' t have any nested components <nl> + / / for ( IDataWalker walker : getWalkers ( type ) ) <nl> + / / nbt = walker . process ( this , nbt , version ) ; <nl> + return nbt ; <nl> + } <nl> + <nl> + private List < IDataWalker > getWalkers ( IFixType type ) <nl> + { <nl> + List < IDataWalker > ret = walkers . get ( type ) ; <nl> + if ( ret = = null ) <nl> + { <nl> + ret = Lists . newArrayList ( ) ; <nl> + walkers . put ( type , ret ) ; <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + @ Override <nl> + @ Deprecated / / Modders do not use this , this will register you as vanilla . Use the ModID version below . <nl> + public void registerFix ( IFixType type , IFixableData fixable ) <nl> + { <nl> + vanilla . registerFix ( type , fixable ) ; <nl> + } <nl> + <nl> + <nl> + @ Override <nl> + @ Deprecated / / Modders do not use this , use add below , To better allow custom fix types . <nl> + public void registerWalker ( FixTypes type , IDataWalker walker ) <nl> + { <nl> + registerWalkerAdd ( type , walker ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void registerWalkerAdd ( IFixType type , IDataWalker walker ) <nl> + { <nl> + getWalkers ( type ) . add ( walker ) ; <nl> + } <nl> + <nl> + private void validateModId ( String mod ) <nl> + { <nl> + / / String current = Loader . instance ( ) . activeModContainer ( ) = = null ? " minecraft " : Loader . instance ( ) . activeModContainer ( ) . getModId ( ) ; <nl> + / / Test active modid ? <nl> + if ( ! mod . equals ( mod . toLowerCase ( Locale . ENGLISH ) ) ) <nl> + throw new IllegalArgumentException ( " Mod ID is not lower case : " + mod ) ; <nl> + if ( mod . length ( ) > 64 ) <nl> + throw new IllegalArgumentException ( " Mod ID is to long : " + mod ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Initialize your mod specific data fixer . <nl> + * <nl> + * @ param modid You mod id , must be lower case . <nl> + * @ param version The current data version of your mod <nl> + * / <nl> + public ModFixs init ( String modid , int version ) <nl> + { <nl> + validateModId ( modid ) ; <nl> + if ( modFixers . containsKey ( modid ) ) <nl> + throw new IllegalStateException ( " Attempted to initalize DataFixer for " + modid + " twice " ) ; <nl> + ModFixs ret = new ModFixs ( modid , version ) ; <nl> + modFixers . put ( modid , ret ) ; <nl> + return ret ; <nl> + } <nl> + <nl> + private Map < String , Integer > getVersions ( NBTTagCompound nbt ) <nl> + { <nl> + Map < String , Integer > ret = Maps . newHashMap ( ) ; <nl> + ret . put ( " minecraft " , nbt . hasKey ( " DataVersion " , 99 ) ? nbt . getInteger ( " DataVersion " ) : - 1 ) ; <nl> + if ( nbt . hasKey ( " ForgeDataVersion " , 10 ) ) <nl> + { <nl> + NBTTagCompound sub = nbt . getCompoundTag ( " ForgeDataVersion " ) ; <nl> + for ( String key : sub . getKeySet ( ) ) <nl> + { <nl> + ret . put ( key , sub . hasKey ( key , 99 ) ? sub . getInteger ( key ) : - 1 ) ; <nl> + } <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + public void writeVersionData ( NBTTagCompound nbt ) <nl> + { <nl> + / / nbt . setInteger ( " DataVersion " , vanilla . version ) ; <nl> + NBTTagCompound sub = new NBTTagCompound ( ) ; <nl> + nbt . setTag ( " ForgeDataVersion " , sub ) ; <nl> + for ( ModFixs mod : modFixers . values ( ) ) <nl> + sub . setInteger ( mod . mod , mod . version ) ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / IDataFixerData . java b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java <nl> new file mode 100644 <nl> index 0000000 . . da6b05c <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import net . minecraft . util . datafix . IDataFixer ; <nl> + <nl> + public interface IDataFixerData extends IDataFixer <nl> + { <nl> + public int getVersion ( String mod ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> new file mode 100644 <nl> index 0000000 . . 2dc01f2 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> @ @ - 0 , 0 + 1 , 83 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> + import net . minecraft . util . datafix . IFixType ; <nl> + import net . minecraft . util . datafix . IFixableData ; <nl> + <nl> + public class ModFixs <nl> + { <nl> + private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> + final String mod ; <nl> + final int version ; <nl> + private final Map < IFixType , List < IFixableData > > fixes = Maps . newHashMap ( ) ; <nl> + <nl> + ModFixs ( String mod , int version ) <nl> + { <nl> + this . mod = mod ; <nl> + this . version = version ; <nl> + } <nl> + <nl> + public List < IFixableData > getFixes ( IFixType type ) <nl> + { <nl> + List < IFixableData > ret = this . fixes . get ( type ) ; <nl> + if ( ret = = null ) <nl> + { <nl> + ret = Lists . newArrayList ( ) ; <nl> + this . fixes . put ( type , ret ) ; <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + public void registerFix ( IFixType type , IFixableData fixer ) <nl> + { <nl> + List < IFixableData > list = getFixes ( type ) ; <nl> + int ver = fixer . getFixVersion ( ) ; <nl> + <nl> + if ( ver > this . version ) <nl> + { <nl> + LOGGER . warn ( " [ { } ] Ignored fix registered for version : { } as the DataVersion of the game is : { } " , mod , ver , this . version ) ; <nl> + return ; <nl> + } <nl> + <nl> + if ( ! list . isEmpty ( ) & & list . get ( list . size ( ) - 1 ) . getFixVersion ( ) > ver ) <nl> + { <nl> + for ( int x = 0 ; x < list . size ( ) ; + + x ) <nl> + { <nl> + if ( list . get ( x ) . getFixVersion ( ) > ver ) <nl> + { <nl> + list . add ( x , fixer ) ; <nl> + break ; <nl> + } <nl> + } <nl> + } <nl> + else <nl> + list . add ( fixer ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index c796af8 . . a78247c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 82 , 6 + 82 , 7 @ @ import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> import net . minecraftforge . common . ForgeModContainer ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . client . registry . RenderingRegistry ; <nl> import net . minecraftforge . fml . common . DummyModContainer ; <nl> import net . minecraftforge . fml . common . DuplicateModsFoundException ; <nl> @ @ - 1060 , 4 + 1061 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new ModelRegistryEvent ( ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) this . client . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index d4863c7 . . 1411eda 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 57 , 6 + 57 , 7 @ @ import net . minecraft . world . storage . WorldInfo ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . common . ForgeVersion ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . common . gameevent . InputEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent ; <nl> @ @ - 751 , 4 + 752 , 9 @ @ public class FMLCommonHandler <nl> { <nl> sidedDelegate . fireSidedRegistryEvents ( ) ; <nl> } <nl> + <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) sidedDelegate . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> index aea07ff . . 4cff064 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . util . IThreadListener ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ @ - 77 , 4 + 78 , 6 @ @ public interface IFMLSidedHandler <nl> void reloadRenderers ( ) ; <nl> <nl> void fireSidedRegistryEvents ( ) ; <nl> + <nl> + CompoundDataFixer getDataFixer ( ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index 54c25b1 . . fa4f6a5 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . server . dedicated . PendingCommand ; <nl> import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . util . text . translation . LanguageMap ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . IFMLSidedHandler ; <nl> @ @ - 339 , 4 + 340 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> / / NOOP <nl> } <nl> + @ Override <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) this . server . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 14df9d2 . . 586b68e 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 287 , 4 + 287 , 7 @ @ public net . minecraft . potion . PotionHelper func _ 185204 _ a ( Lnet / minecraft / potion / Pot <nl> <nl> # TileEntityHopper <nl> public net . minecraft . tileentity . TileEntityHopper func _ 174914 _ o ( ) Z # mayTransfer <nl> - public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown <nl> \ No newline at end of file <nl> + public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown <nl> + <nl> + # DataFixer <nl> + public net . minecraft . util . datafix . DataFixer field _ 188262 _ d # version <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 index 2e0416e . . 91c2107 100644 
 - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 @ @ - 146 , 15 + 146 , 40 @ @ 
 this . field _ 184239 _ as = null ; 
 entity . func _ 184225 _ p ( this ) ; 
 } 
 - @ @ - 2511 , 6 + 2538 , 7 @ @ 
 + @ @ - 2509 , 8 + 2536 , 16 @ @ 
 + @ Nullable 
 + public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) 
 { 
 + + if ( this . field _ 70170 _ p . field _ 72995 _ K | | this . field _ 70128 _ L ) return null ; 
 + + return changeDimension ( p _ 184204 _ 1 _ , this . func _ 184102 _ h ( ) . func _ 71218 _ a ( p _ 184204 _ 1 _ ) . func _ 85176 _ s ( ) ) ; 
 + + } 
 + + 
 + + @ Nullable / / Forge : Entities that require custom handling should override this method , not the other 
 + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 + + { 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & ! this . field _ 70128 _ L ) 
 { 
 + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 184204 _ 1 _ ) ) return null ; 
 this . field _ 70170 _ p . field _ 72984 _ F . func _ 76320 _ a ( " changeDimension " ) ; 
 MinecraftServer minecraftserver = this . func _ 184102 _ h ( ) ; 
 int i = this . field _ 71093 _ bK ; 
 - @ @ - 2535 , 16 + 2563 , 17 @ @ 
 + @ @ - 2518 , 7 + 2553 , 7 @ @ 
 + WorldServer worldserver1 = minecraftserver . func _ 71218 _ a ( p _ 184204 _ 1 _ ) ; 
 + this . field _ 71093 _ bK = p _ 184204 _ 1 _ ; 
 + 
 + - if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 ) 
 + + if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) 
 + { 
 + worldserver1 = minecraftserver . func _ 71218 _ a ( 0 ) ; 
 + this . field _ 71093 _ bK = 0 ; 
 + @ @ - 2529 , 22 + 2564 , 23 @ @ 
 + this . field _ 70170 _ p . field _ 72984 _ F . func _ 76320 _ a ( " reposition " ) ; 
 + BlockPos blockpos ; 
 + 
 + - if ( p _ 184204 _ 1 _ = = 1 ) 
 + + if ( p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) 
 + { 
 + blockpos = worldserver1 . func _ 180504 _ m ( ) ; 
 } 
 else 
 { 
 @ @ - 176 , 7 + 201 , 26 @ @ 
 { 
 d0 = MathHelper . func _ 151237 _ a ( d0 * 8 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; 
 d1 = MathHelper . func _ 151237 _ a ( d1 * 8 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , worldserver1 . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; 
 - @ @ - 2604 , 7 + 2633 , 7 @ @ 
 + @ @ - 2554 , 8 + 2590 , 7 @ @ 
 + d1 = ( double ) MathHelper . func _ 76125 _ a ( ( int ) d1 , - 29999872 , 29999872 ) ; 
 + float f = this . field _ 70177 _ z ; 
 + this . func _ 70012 _ b ( d0 , this . field _ 70163 _ u , d1 , 90 . 0F , 0 . 0F ) ; 
 + - Teleporter teleporter = worldserver1 . func _ 85176 _ s ( ) ; 
 + - teleporter . func _ 180620 _ b ( this , f ) ; 
 + + teleporter . placeEntity ( worldserver1 , this , f ) ; 
 + blockpos = new BlockPos ( this ) ; 
 + } 
 + 
 + @ @ - 2567 , 7 + 2602 , 7 @ @ 
 + { 
 + entity . func _ 180432 _ n ( this ) ; 
 + 
 + - if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 ) 
 + + if ( i = = 1 & & p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) 
 + { 
 + BlockPos blockpos1 = worldserver1 . func _ 175672 _ r ( worldserver1 . func _ 175694 _ M ( ) ) ; 
 + entity . func _ 174828 _ a ( blockpos1 , entity . field _ 70177 _ z , entity . field _ 70125 _ A ) ; 
 + @ @ - 2604 , 7 + 2639 , 7 @ @ 
 
 public float func _ 180428 _ a ( Explosion p _ 180428 _ 1 _ , World p _ 180428 _ 2 _ , BlockPos p _ 180428 _ 3 _ , IBlockState p _ 180428 _ 4 _ ) 
 { 
 @ @ - 185 , 7 + 229 , 7 @ @ 
 } 
 
 public boolean func _ 174816 _ a ( Explosion p _ 174816 _ 1 _ , World p _ 174816 _ 2 _ , BlockPos p _ 174816 _ 3 _ , IBlockState p _ 174816 _ 4 _ , float p _ 174816 _ 5 _ ) 
 - @ @ - 2901 , 6 + 2930 , 183 @ @ 
 + @ @ - 2901 , 6 + 2936 , 183 @ @ 
 EnchantmentHelper . func _ 151385 _ b ( p _ 174815 _ 1 _ , p _ 174815 _ 2 _ ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch 
 index d3c802e . . 46afa1b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityEnderPearl . java . patch 
 @ @ - 23 , 3 + 23 , 19 @ @ 
 } 
 } 
 else if ( entitylivingbase ! = null ) 
 + @ @ - 141 , 13 + 145 , 13 @ @ 
 + } 
 + 
 + @ Nullable 
 + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) 
 + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 + { 
 + if ( this . field _ 70192 _ c . field _ 71093 _ bK ! = p _ 184204 _ 1 _ ) 
 + { 
 + this . field _ 70192 _ c = null ; 
 + } 
 + 
 + - return super . func _ 184204 _ a ( p _ 184204 _ 1 _ ) ; 
 + + return super . changeDimension ( p _ 184204 _ 1 _ , teleporter ) ; 
 + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch 
 index cadbee0 . . b865904 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityItem . java . patch 
 @ @ - 117 , 6 + 117 , 18 @ @ 
 this . func _ 70106 _ y ( ) ; 
 itemstack . func _ 190920 _ e ( i ) ; 
 } 
 + @ @ - 394 , 9 + 425 , 9 @ @ 
 + } 
 + 
 + @ Nullable 
 + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) 
 + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 + { 
 + - Entity entity = super . func _ 184204 _ a ( p _ 184204 _ 1 _ ) ; 
 + + Entity entity = super . changeDimension ( p _ 184204 _ 1 _ , teleporter ) ; 
 + 
 + if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & entity instanceof EntityItem ) 
 + { 
 @ @ - 476 , 6 + 507 , 6 @ @ 
 public void func _ 174870 _ v ( ) 
 { 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 index 794653d . . c1ef384 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 @ @ - 1 , 5 + 1 , 18 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java 
 + + + . . / src - work / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java 
 + @ @ - 138 , 10 + 138 , 10 @ @ 
 + } 
 + 
 + @ Nullable 
 + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) 
 + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 + { 
 + this . field _ 94112 _ b = false ; 
 + - return super . func _ 184204 _ a ( p _ 184204 _ 1 _ ) ; 
 + + return super . changeDimension ( p _ 184204 _ 1 _ , teleporter ) ; 
 + } 
 + 
 + public void func _ 70106 _ y ( ) 
 @ @ - 202 , 6 + 202 , 7 @ @ 
 
 public boolean func _ 184230 _ a ( EntityPlayer p _ 184230 _ 1 _ , EnumHand p _ 184230 _ 2 _ ) 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 98df444 . . e374ae6 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 50 , 14 + 50 , 35 @ @ 
 } 
 
 for ( ScoreObjective scoreobjective : this . field _ 70170 _ p . func _ 96441 _ U ( ) . func _ 96520 _ a ( IScoreCriteria . field _ 96642 _ c ) ) 
 - @ @ - 647 , 6 + 660 , 7 @ @ 
 + @ @ - 645 , 8 + 658 , 9 @ @ 
 + } 
 + 
 @ Nullable 
 - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) 
 + - public Entity func _ 184204 _ a ( int p _ 184204 _ 1 _ ) 
 + + public Entity changeDimension ( int p _ 184204 _ 1 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 { 
 + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 184204 _ 1 _ ) ) return this ; 
 this . field _ 184851 _ cj = true ; 
 
 if ( this . field _ 71093 _ bK = = 0 & & p _ 184204 _ 1 _ = = - 1 ) 
 + @ @ - 658 , 7 + 672 , 7 @ @ 
 + this . field _ 193110 _ cw = null ; 
 + } 
 + 
 + - if ( this . field _ 71093 _ bK = = 1 & & p _ 184204 _ 1 _ = = 1 ) 
 + + if ( this . field _ 71093 _ bK = = 1 & & p _ 184204 _ 1 _ = = 1 & & teleporter . isVanilla ( ) ) 
 + { 
 + this . field _ 70170 _ p . func _ 72900 _ e ( this ) ; 
 + 
 + @ @ - 678 , 7 + 692 , 7 @ @ 
 + p _ 184204 _ 1 _ = 1 ; 
 + } 
 + 
 + - this . field _ 71133 _ b . func _ 184103 _ al ( ) . func _ 187242 _ a ( this , p _ 184204 _ 1 _ ) ; 
 + + this . field _ 71133 _ b . func _ 184103 _ al ( ) . transferPlayerToDimension ( this , p _ 184204 _ 1 _ , teleporter ) ; 
 + this . field _ 71135 _ a . func _ 147359 _ a ( new SPacketEffect ( 1032 , BlockPos . field _ 177992 _ a , 0 , false ) ) ; 
 + this . field _ 71144 _ ck = - 1 ; 
 + this . field _ 71149 _ ch = - 1 . 0F ; 
 @ @ - 808 , 7 + 822 , 7 @ @ 
 BlockPos blockpos = new BlockPos ( i , j , k ) ; 
 IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( blockpos ) ; 
 diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch 
 index 480680f . . 62d2911 100644 
 - - - a / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / management / PlayerList . java . patch 
 @ @ - 146 , 15 + 146 , 21 @ @ 
 return entityplayermp ; 
 } 
 
 - @ @ - 556 , 15 + 601 , 20 @ @ 
 + @ @ - 556 , 15 + 601 , 26 @ @ 
 
 public void func _ 187242 _ a ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ ) 
 { 
 + transferPlayerToDimension ( p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , field _ 72400 _ f . func _ 71218 _ a ( p _ 187242 _ 2 _ ) . func _ 85176 _ s ( ) ) ; 
 + } 
 + 
 + + / / TODO : Remove ( 1 . 13 ) 
 + public void transferPlayerToDimension ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ , net . minecraft . world . Teleporter teleporter ) 
 + { 
 + + transferPlayerToDimension ( p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , ( net . minecraftforge . common . util . ITeleporter ) teleporter ) ; 
 + + } 
 + + 
 + + public void transferPlayerToDimension ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 + + { 
 int i = p _ 187242 _ 1 _ . field _ 71093 _ bK ; 
 WorldServer worldserver = this . field _ 72400 _ f . func _ 71218 _ a ( p _ 187242 _ 1 _ . field _ 71093 _ bK ) ; 
 p _ 187242 _ 1 _ . field _ 71093 _ bK = p _ 187242 _ 2 _ ; 
 @ @ - 169 , 7 + 175 , 7 @ @ 
 this . func _ 72375 _ a ( p _ 187242 _ 1 _ , worldserver ) ; 
 p _ 187242 _ 1 _ . field _ 71135 _ a . func _ 147364 _ a ( p _ 187242 _ 1 _ . field _ 70165 _ t , p _ 187242 _ 1 _ . field _ 70163 _ u , p _ 187242 _ 1 _ . field _ 70161 _ v , p _ 187242 _ 1 _ . field _ 70177 _ z , p _ 187242 _ 1 _ . field _ 70125 _ A ) ; 
 p _ 187242 _ 1 _ . field _ 71134 _ c . func _ 73080 _ a ( worldserver1 ) ; 
 - @ @ - 576 , 17 + 626 , 27 @ @ 
 + @ @ - 576 , 17 + 632 , 30 @ @ 
 { 
 p _ 187242 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new SPacketEntityEffect ( p _ 187242 _ 1 _ . func _ 145782 _ y ( ) , potioneffect ) ) ; 
 } 
 @ @ - 183 , 12 + 189 , 15 @ @ 
 + transferEntityToWorld ( p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , p _ 82448 _ 4 _ . func _ 85176 _ s ( ) ) ; 
 + } 
 + 
 - + @ SuppressWarnings ( " unused " ) 
 + + / / TODO : Remove ( 1 . 13 ) 
 + public void transferEntityToWorld ( Entity p _ 82448 _ 1 _ , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraft . world . Teleporter teleporter ) 
 + { 
 - + net . minecraft . world . WorldProvider pOld = p _ 82448 _ 3 _ . field _ 73011 _ w ; 
 - + net . minecraft . world . WorldProvider pNew = p _ 82448 _ 4 _ . field _ 73011 _ w ; 
 - + double moveFactor = pOld . getMovementFactor ( ) / pNew . getMovementFactor ( ) ; 
 + + transferEntityToWorld ( p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , ( net . minecraftforge . common . util . ITeleporter ) teleporter ) ; 
 + + } 
 + + 
 + + public void transferEntityToWorld ( Entity p _ 82448 _ 1 _ , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraftforge . common . util . ITeleporter teleporter ) 
 + + { 
 + + double moveFactor = p _ 82448 _ 3 _ . field _ 73011 _ w . getMovementFactor ( ) / p _ 82448 _ 4 _ . field _ 73011 _ w . getMovementFactor ( ) ; 
 + double d0 = MathHelper . func _ 151237 _ a ( p _ 82448 _ 1 _ . field _ 70165 _ t * moveFactor , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; 
 + double d1 = MathHelper . func _ 151237 _ a ( p _ 82448 _ 1 _ . field _ 70161 _ v * moveFactor , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; 
 double d2 = 8 . 0D ; 
 @ @ - 200 , 7 + 209 , 7 @ @ 
 { 
 d0 = MathHelper . func _ 151237 _ a ( d0 / 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; 
 d1 = MathHelper . func _ 151237 _ a ( d1 / 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; 
 - @ @ - 597 , 7 + 657 , 7 @ @ 
 + @ @ - 597 , 7 + 666 , 7 @ @ 
 p _ 82448 _ 3 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; 
 } 
 } 
 @ @ - 209 , 22 + 218 , 31 @ @ 
 { 
 d0 = MathHelper . func _ 151237 _ a ( d0 * 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177726 _ b ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177728 _ d ( ) - 16 . 0D ) ; 
 d1 = MathHelper . func _ 151237 _ a ( d1 * 8 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177736 _ c ( ) + 16 . 0D , p _ 82448 _ 4 _ . func _ 175723 _ af ( ) . func _ 177733 _ e ( ) - 16 . 0D ) ; 
 - @ @ - 608 , 7 + 668 , 8 @ @ 
 + @ @ - 608 , 7 + 677 , 7 @ @ 
 p _ 82448 _ 3 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; 
 } 
 } 
 - else 
 - + 
 - + if ( p _ 82448 _ 1 _ . field _ 71093 _ bK = = 1 ) 
 + + if ( p _ 82448 _ 1 _ . field _ 71093 _ bK = = 1 & & teleporter . isVanilla ( ) ) 
 { 
 BlockPos blockpos ; 
 
 - @ @ - 643 , 7 + 704 , 7 @ @ 
 + @ @ - 634 , 7 + 703 , 7 @ @ 
 + 
 + p _ 82448 _ 3 _ . field _ 72984 _ F . func _ 76319 _ b ( ) ; 
 + 
 + - if ( p _ 82448 _ 2 _ ! = 1 ) 
 + + if ( p _ 82448 _ 2 _ ! = 1 | | ! teleporter . isVanilla ( ) ) 
 + { 
 + p _ 82448 _ 3 _ . field _ 72984 _ F . func _ 76320 _ a ( " placing " ) ; 
 + d0 = ( double ) MathHelper . func _ 76125 _ a ( ( int ) d0 , - 29999872 , 29999872 ) ; 
 + @ @ - 643 , 7 + 712 , 8 @ @ 
 if ( p _ 82448 _ 1 _ . func _ 70089 _ S ( ) ) 
 { 
 p _ 82448 _ 1 _ . func _ 70012 _ b ( d0 , p _ 82448 _ 1 _ . field _ 70163 _ u , d1 , p _ 82448 _ 1 _ . field _ 70177 _ z , p _ 82448 _ 1 _ . field _ 70125 _ A ) ; 
 - p _ 82448 _ 4 _ . func _ 85176 _ s ( ) . func _ 180266 _ a ( p _ 82448 _ 1 _ , f ) ; 
 - + teleporter . func _ 180266 _ a ( p _ 82448 _ 1 _ , f ) ; 
 + + p _ 82448 _ 3 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; 
 + + teleporter . placeEntity ( p _ 82448 _ 4 _ , p _ 82448 _ 1 _ , f ) ; 
 p _ 82448 _ 4 _ . func _ 72838 _ d ( p _ 82448 _ 1 _ ) ; 
 p _ 82448 _ 4 _ . func _ 72866 _ a ( p _ 82448 _ 1 _ , false ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / Teleporter . java . patch b / patches / minecraft / net / minecraft / world / Teleporter . java . patch 
 new file mode 100644 
 index 0000000 . . 8b5983a 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / world / Teleporter . java . patch 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / world / Teleporter . java 
 + + + + . . / src - work / minecraft / net / minecraft / world / Teleporter . java 
 + @ @ - 15 , 7 + 15 , 7 @ @ 
 + import net . minecraft . util . math . ChunkPos ; 
 + import net . minecraft . util . math . MathHelper ; 
 + 
 + - public class Teleporter 
 + + public class Teleporter implements net . minecraftforge . common . util . ITeleporter 
 + { 
 + protected final WorldServer field _ 85192 _ a ; 
 + protected final Random field _ 77187 _ a ; 
 + @ @ - 428 , 4 + 428 , 13 @ @ 
 + this . field _ 85087 _ d = p _ i45747 _ 3 _ ; 
 + } 
 + } 
 + + 
 + + @ Override 
 + + public void placeEntity ( World world , Entity entity , float yaw ) 
 + + { 
 + + if ( entity instanceof EntityPlayerMP ) 
 + + func _ 180266 _ a ( entity , yaw ) ; 
 + + else 
 + + func _ 180620 _ b ( entity , yaw ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch b / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch 
 index f9795eb . . 8281c44 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldProviderEnd . java . patch 
 @ @ - 18 , 3 + 18 , 26 @ @ 
 } 
 
 public void func _ 186059 _ r ( ) 
 + @ @ - 129 , 4 + 129 , 22 @ @ 
 + { 
 + return this . field _ 186064 _ g ; 
 + } 
 + + 
 + + @ Override 
 + + public void func _ 186061 _ a ( net . minecraft . entity . player . EntityPlayerMP player ) 
 + + { 
 + + if ( this . field _ 186064 _ g ! = null ) 
 + + { 
 + + this . field _ 186064 _ g . addPlayer ( player ) ; 
 + + } 
 + + } 
 + + 
 + + @ Override 
 + + public void func _ 186062 _ b ( net . minecraft . entity . player . EntityPlayerMP player ) 
 + + { 
 + + if ( this . field _ 186064 _ g ! = null ) 
 + + { 
 + + this . field _ 186064 _ g . removePlayer ( player ) ; 
 + + } 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / world / end / DragonFightManager . java . patch b / patches / minecraft / net / minecraft / world / end / DragonFightManager . java . patch 
 new file mode 100644 
 index 0000000 . . a1e5b7b 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / world / end / DragonFightManager . java . patch 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / world / end / DragonFightManager . java 
 + + + + . . / src - work / minecraft / net / minecraft / world / end / DragonFightManager . java 
 + @ @ - 72 , 6 + 72 , 7 @ @ 
 + public DragonFightManager ( WorldServer p _ i46669 _ 1 _ , NBTTagCompound p _ i46669 _ 2 _ ) 
 + { 
 + this . field _ 186110 _ d = p _ i46669 _ 1 _ ; 
 + + this . field _ 186120 _ n = p _ i46669 _ 2 _ . func _ 82582 _ d ( ) ; / / Forge : fix MC - 105080 
 + 
 + if ( p _ i46669 _ 2 _ . func _ 150297 _ b ( " DragonKilled " , 99 ) ) 
 + { 
 + @ @ - 582 , 4 + 583 , 14 @ @ 
 + } 
 + } 
 + } 
 + + 
 + + public void addPlayer ( EntityPlayerMP player ) 
 + + { 
 + + this . field _ 186109 _ c . func _ 186760 _ a ( player ) ; 
 + + } 
 + + 
 + + public void removePlayer ( EntityPlayerMP player ) 
 + + { 
 + + this . field _ 186109 _ c . func _ 186761 _ b ( player ) ; 
 + + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayer . java b / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 index 9676361 . . 522b845 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 @ @ - 52 , 6 + 52 , 6 @ @ public class FakePlayer extends EntityPlayerMP 
 @ Override public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 @ Override public void onDeath ( DamageSource source ) { return ; } 
 @ Override public void onUpdate ( ) { return ; } 
 - @ Override public Entity changeDimension ( int dim ) { return this ; } 
 + @ Override public Entity changeDimension ( int dim , ITeleporter teleporter ) { return this ; } 
 @ Override public void handleClientSettings ( CPacketClientSettings pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / ITeleporter . java b / src / main / java / net / minecraftforge / common / util / ITeleporter . java 
 new file mode 100644 
 index 0000000 . . c9952ba 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / ITeleporter . java 
 @ @ - 0 , 0 + 1 , 60 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2017 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . common . util ; 
 + 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . world . Teleporter ; 
 + import net . minecraft . world . World ; 
 + import net . minecraft . world . WorldProvider ; 
 + 
 + / * * 
 + * Interface for handling the placement of entities during dimension change . 
 + * 
 + * An implementation of this interface can be used to place the entity 
 + * in a safe location , or generate a return portal , for instance . 
 + * 
 + * See the { @ link net . minecraft . world . Teleporter } class , which has 
 + * been patched to implement this interface , for a vanilla example . 
 + * / 
 + public interface ITeleporter 
 + { 
 + / * * 
 + * Called to handle placing the entity in the new world . 
 + * 
 + * The initial position of the entity will be its 
 + * position in the origin world , multiplied horizontally 
 + * by the computed cross - dimensional movement factor 
 + * ( see { @ link WorldProvider # getMovementFactor ( ) } ) . 
 + * 
 + * Note that the supplied entity has not yet been spawned 
 + * in the destination world at the time . 
 + * 
 + * @ param world the entity ' s destination 
 + * @ param entity the entity to be placed 
 + * @ param yaw the suggested yaw value to apply 
 + * / 
 + void placeEntity ( World world , Entity entity , float yaw ) ; 
 + 
 + / / used internally to handle vanilla hardcoding 
 + default boolean isVanilla ( ) 
 + { 
 + return getClass ( ) = = Teleporter . class ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java 
 new file mode 100644 
 index 0000000 . . 5d3ee14 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java 
 @ @ - 0 , 0 + 1 , 120 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2017 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . server . command ; 
 + 
 + import net . minecraft . command . CommandBase ; 
 + import net . minecraft . command . CommandException ; 
 + import net . minecraft . command . ICommandSender ; 
 + import net . minecraft . command . WrongUsageException ; 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . world . World ; 
 + import net . minecraftforge . common . DimensionManager ; 
 + import net . minecraftforge . common . util . ITeleporter ; 
 + 
 + import javax . annotation . Nullable ; 
 + import java . util . Collections ; 
 + import java . util . List ; 
 + 
 + public class CommandSetDimension extends CommandBase 
 + { 
 + @ Override 
 + public String getName ( ) 
 + { 
 + return " setdimension " ; 
 + } 
 + 
 + @ Override 
 + public List < String > getAliases ( ) 
 + { 
 + return Collections . singletonList ( " setdim " ) ; 
 + } 
 + 
 + @ Override 
 + public String getUsage ( ICommandSender sender ) 
 + { 
 + return " commands . forge . setdim . usage " ; 
 + } 
 + 
 + @ Override 
 + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) 
 + { 
 + if ( args . length > 2 & & args . length < = 5 ) 
 + { 
 + return getTabCompletionCoordinate ( args , 2 , targetPos ) ; 
 + } 
 + return Collections . emptyList ( ) ; 
 + } 
 + 
 + @ Override 
 + public int getRequiredPermissionLevel ( ) 
 + { 
 + return 2 ; 
 + } 
 + 
 + @ Override 
 + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException 
 + { 
 + / / args : < entity > < dim > [ < x > < y > < z > ] 
 + if ( args . length ! = 2 & & args . length ! = 5 ) 
 + { 
 + throw new WrongUsageException ( " commands . forge . setdim . usage " ) ; 
 + } 
 + Entity entity = getEntity ( server , sender , args [ 0 ] ) ; 
 + if ( ! checkEntity ( entity ) ) 
 + { 
 + throw new CommandException ( " commands . forge . setdim . invalid . entity " , entity . getName ( ) ) ; 
 + } 
 + int dimension = parseInt ( args [ 1 ] ) ; 
 + if ( ! DimensionManager . isDimensionRegistered ( dimension ) ) 
 + { 
 + throw new CommandException ( " commands . forge . setdim . invalid . dim " , dimension ) ; 
 + } 
 + if ( dimension = = entity . dimension ) 
 + { 
 + throw new CommandException ( " commands . forge . setdim . invalid . nochange " , entity . getName ( ) , dimension ) ; 
 + } 
 + BlockPos pos = args . length = = 5 ? parseBlockPos ( sender , args , 2 , false ) : sender . getPosition ( ) ; 
 + entity . changeDimension ( dimension , new CommandTeleporter ( pos ) ) ; 
 + } 
 + 
 + private static boolean checkEntity ( Entity entity ) 
 + { 
 + / / use vanilla portal logic , try to avoid doing anything too silly 
 + return ! entity . isRiding ( ) & & ! entity . isBeingRidden ( ) & & entity . isNonBoss ( ) ; 
 + } 
 + 
 + private static class CommandTeleporter implements ITeleporter 
 + { 
 + private final BlockPos targetPos ; 
 + 
 + private CommandTeleporter ( BlockPos targetPos ) 
 + { 
 + this . targetPos = targetPos ; 
 + } 
 + 
 + @ Override 
 + public void placeEntity ( World world , Entity entity , float yaw ) 
 + { 
 + entity . moveToBlockPosAndAngles ( targetPos , yaw , entity . rotationPitch ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 index 7473e72 . . fda3560 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 + + + b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 @ @ - 32 , 6 + 32 , 7 @ @ public class ForgeCommand extends CommandTreeBase 
 super . addSubcommand ( new CommandTrack ( ) ) ; 
 super . addSubcommand ( new CommandGenerate ( ) ) ; 
 super . addSubcommand ( new CommandEntity ( ) ) ; 
 + super . addSubcommand ( new CommandSetDimension ( ) ) ; 
 super . addSubcommand ( new CommandTreeHelp ( this ) ) ; 
 } 
 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index ba6b6c6 . . 58efbf3 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 15 , 6 + 15 , 10 @ @ commands . forge . entity . list . invalidworld = Could not load world for dimension % d . P 
 commands . forge . entity . list . none = No entities found . 
 commands . forge . entity . list . single . header = Entity : % s Total : % d 
 commands . forge . entity . list . multiple . header = Total : % d 
 + commands . forge . setdim . usage = Use / forge setdim < entity > < dimension > [ < x > < y > < z > ] 
 + commands . forge . setdim . invalid . entity = The entity selected ( % s ) is not valid . 
 + commands . forge . setdim . invalid . dim = The dimension ID specified ( % d ) is not valid . 
 + commands . forge . setdim . invalid . nochange = The entity selected ( % s ) is already in the dimension specified ( % d ) . 
 
 commands . forge . tracking . te . enabled = Tile Entity tracking enabled for % d seconds . 
 commands . forge . tracking . entity . enabled = Entity tracking enabled for % d seconds . 
 diff - - git a / src / main / resources / forge . exc b / src / main / resources / forge . exc 
 index 140927f . . 3cbcfe1 100644 
 - - - a / src / main / resources / forge . exc 
 + + + b / src / main / resources / forge . exc 
 @ @ - 3 , 8 + 3 , 17 @ @ net / minecraft / client / renderer / ItemRenderer . renderItem ( Lnet / minecraft / entity / Enti 
 net / minecraft / client / renderer / RenderGlobal . drawBlockDamageTexture ( Lnet / minecraft / client / renderer / Tessellator ; Lnet / minecraft / entity / EntityLivingBase ; F ) V = | p _ 72717 _ 1 _ , p _ 72717 _ 2 _ , p _ 72717 _ 3 _ 
 net / minecraft / client / renderer / entity / RenderItem . renderDroppedItem ( Lnet / minecraft / entity / item / EntityItem ; Lnet / minecraft / util / IIcon ; IFFFFI ) V = | p _ 77020 _ 1 _ , p _ 77020 _ 2 _ , p _ 77020 _ 3 _ , p _ 77020 _ 4 _ , p _ 77020 _ 5 _ , p _ 77020 _ 6 _ , p _ 77020 _ 7 _ , pass 
 net / minecraft / client / renderer / entity / RenderItem . renderItemIntoGUI ( Lnet / minecraft / client / gui / FontRenderer ; Lnet / minecraft / client / renderer / texture / TextureManager ; Lnet / minecraft / item / ItemStack ; IIZ ) V = | p _ 77015 _ 1 _ , p _ 77015 _ 2 _ , p _ 77015 _ 3 _ , p _ 77015 _ 4 _ , p _ 77015 _ 5 _ , renderEffect 
 + 
 + net / minecraft / entity / Entity . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter 
 + net / minecraft / entity / item / EntityEnderPearl . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter 
 + net / minecraft / entity / item / EntityItem . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter 
 + net / minecraft / entity / item / EntityMinecartContainer . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter 
 + net / minecraft / entity / player / EntityPlayerMP . changeDimension ( ILnet / minecraftforge / common / util / ITeleporter ; ) Lnet / minecraft / entity / Entity ; = | p _ 184204 _ 1 _ , teleporter 
 net / minecraft / server / management / PlayerList . transferPlayerToDimension ( Lnet / minecraft / entity / player / EntityPlayerMP ; ILnet / minecraft / world / Teleporter ; ) V = | p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , teleporter 
 + net / minecraft / server / management / PlayerList . transferPlayerToDimension ( Lnet / minecraft / entity / player / EntityPlayerMP ; ILnet / minecraftforge / common / util / ITeleporter ; ) V = | p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , teleporter 
 net / minecraft / server / management / PlayerList . transferEntityToWorld ( Lnet / minecraft / entity / Entity ; ILnet / minecraft / world / WorldServer ; Lnet / minecraft / world / WorldServer ; Lnet / minecraft / world / Teleporter ; ) V = | p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , teleporter 
 + net / minecraft / server / management / PlayerList . transferEntityToWorld ( Lnet / minecraft / entity / Entity ; ILnet / minecraft / world / WorldServer ; Lnet / minecraft / world / WorldServer ; Lnet / minecraftforge / common / util / ITeleporter ; ) V = | p _ 82448 _ 1 _ , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , teleporter 
 + 
 net / minecraft / world / World . getBiomeGenForCoordsBody ( II ) Lnet / minecraft / world / biome / Biome ; = | p _ 72807 _ 1 _ , p _ 72807 _ 2 _ 
 net / minecraft / world / World . getSunBrightnessFactor ( F ) F = | p _ 72967 _ 1 _ 
 net / minecraft / world / World . getSunBrightnessBody ( F ) F = | p _ 72971 _ 1 _

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 5637ab8 . . eaf179b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 152 , 7 + 152 , 15 @ @ 
 this . field _ 71100 _ bB . func _ 75112 _ a ( p _ 70037 _ 1 _ ) ; 
 this . field _ 71075 _ bZ . func _ 75095 _ b ( p _ 70037 _ 1 _ ) ; 
 
 - @ @ - 921 , 6 + 965 , 23 @ @ 
 + @ @ - 903 , 6 + 947 , 7 @ @ 
 + { 
 + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74782 _ a ( " Inventory " , this . field _ 71071 _ by . func _ 70442 _ a ( new NBTTagList ( ) ) ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " SelectedItemSlot " , this . field _ 71071 _ by . field _ 70461 _ c ) ; 
 + p _ 70014 _ 1 _ . func _ 74757 _ a ( " Sleeping " , this . field _ 71083 _ bS ) ; 
 + @ @ - 921 , 6 + 966 , 23 @ @ 
 p _ 70014 _ 1 _ . func _ 74757 _ a ( " SpawnForced " , this . field _ 82248 _ d ) ; 
 } 
 
 @ @ - 176 , 7 + 184 , 7 @ @ 
 this . field _ 71100 _ bB . func _ 75117 _ b ( p _ 70014 _ 1 _ ) ; 
 this . field _ 71075 _ bZ . func _ 75091 _ a ( p _ 70014 _ 1 _ ) ; 
 p _ 70014 _ 1 _ . func _ 74782 _ a ( " EnderItems " , this . field _ 71078 _ a . func _ 70487 _ g ( ) ) ; 
 - @ @ - 928 , 6 + 989 , 7 @ @ 
 + @ @ - 928 , 6 + 990 , 7 @ @ 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) 
 { 
 @ @ - 184 , 7 + 192 , 7 @ @ 
 if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) 
 { 
 return false ; 
 - @ @ - 1006 , 6 + 1068 , 7 @ @ 
 + @ @ - 1006 , 6 + 1069 , 7 @ @ 
 if ( this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 EnumHand enumhand = this . func _ 184600 _ cs ( ) ; 
 @ @ - 192 , 7 + 200 , 7 @ @ 
 
 if ( enumhand = = EnumHand . MAIN _ HAND ) 
 { 
 - @ @ - 1041 , 7 + 1104 , 10 @ @ 
 + @ @ - 1041 , 7 + 1105 , 10 @ @ 
 { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) 
 { 
 @ @ - 204 , 7 + 212 , 7 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; 
 - @ @ - 1111 , 6 + 1177 , 7 @ @ 
 + @ @ - 1111 , 6 + 1178 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 212 , 7 + 220 , 7 @ @ 
 ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; 
 ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; 
 
 - @ @ - 1120 , 7 + 1187 , 10 @ @ 
 + @ @ - 1120 , 7 + 1188 , 10 @ @ 
 { 
 itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; 
 } 
 @ @ - 224 , 7 + 232 , 7 @ @ 
 return EnumActionResult . SUCCESS ; 
 } 
 else 
 - @ @ - 1136 , 6 + 1206 , 7 @ @ 
 + @ @ - 1136 , 6 + 1207 , 7 @ @ 
 { 
 if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) 
 { 
 @ @ - 232 , 7 + 240 , 7 @ @ 
 this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; 
 } 
 
 - @ @ - 1161 , 6 + 1232 , 7 @ @ 
 + @ @ - 1161 , 6 + 1233 , 7 @ @ 
 
 public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) 
 { 
 @ @ - 240 , 7 + 248 , 7 @ @ 
 if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) 
 { 
 if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) 
 - @ @ - 1331 , 11 + 1403 , 13 @ @ 
 + @ @ - 1331 , 11 + 1404 , 13 @ @ 
 
 if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) 
 { 
 @ @ - 254 , 7 + 262 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1441 , 6 + 1515 , 8 @ @ 
 + @ @ - 1441 , 6 + 1516 , 8 @ @ 
 
 public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) 
 { 
 @ @ - 263 , 7 + 271 , 7 @ @ 
 EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 - @ @ - 1482 , 8 + 1558 , 9 @ @ 
 + @ @ - 1482 , 8 + 1559 , 9 @ @ 
 
 this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; 
 
 @ @ - 275 , 7 + 283 , 7 @ @ 
 float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; 
 float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; 
 this . func _ 175139 _ a ( enumfacing ) ; 
 - @ @ - 1530 , 13 + 1607 , 14 @ @ 
 + @ @ - 1530 , 13 + 1608 , 14 @ @ 
 
 public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) 
 { 
 @ @ - 293 , 7 + 301 , 7 @ @ 
 
 if ( blockpos = = null ) 
 { 
 - @ @ - 1545 , 6 + 1623 , 10 @ @ 
 + @ @ - 1545 , 6 + 1624 , 10 @ @ 
 
 this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; 
 } 
 @ @ - 304 , 7 + 312 , 7 @ @ 
 
 this . field _ 71083 _ bS = false ; 
 
 - @ @ - 1563 , 15 + 1645 , 16 @ @ 
 + @ @ - 1563 , 15 + 1646 , 16 @ @ 
 
 private boolean func _ 175143 _ p ( ) 
 { 
 @ @ - 324 , 7 + 332 , 7 @ @ 
 { 
 if ( ! p _ 180467 _ 2 _ ) 
 { 
 - @ @ - 1586 , 16 + 1669 , 17 @ @ 
 + @ @ - 1586 , 16 + 1670 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 345 , 7 + 353 , 7 @ @ 
 
 switch ( enumfacing ) 
 { 
 - @ @ - 1635 , 16 + 1719 , 24 @ @ 
 + @ @ - 1635 , 16 + 1720 , 24 @ @ 
 
 public BlockPos func _ 180470 _ cg ( ) 
 { 
 @ @ - 372 , 7 + 380 , 7 @ @ 
 if ( p _ 180473 _ 1 _ ! = null ) 
 { 
 this . field _ 71077 _ c = p _ 180473 _ 1 _ ; 
 - @ @ - 1839 , 6 + 1931 , 10 @ @ 
 + @ @ - 1839 , 6 + 1932 , 10 @ @ 
 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 } 
 @ @ - 383 , 7 + 391 , 7 @ @ 
 } 
 
 protected void func _ 71061 _ d _ ( ) 
 - @ @ - 2039 , 6 + 2135 , 18 @ @ 
 + @ @ - 2039 , 6 + 2136 , 18 @ @ 
 this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; 
 this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; 
 this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; 
 @ @ - 402 , 7 + 410 , 7 @ @ 
 } 
 
 protected boolean func _ 70041 _ e _ ( ) 
 - @ @ - 2137 , 7 + 2245 , 10 @ @ 
 + @ @ - 2137 , 7 + 2246 , 10 @ @ 
 
 public ITextComponent func _ 145748 _ c _ ( ) 
 { 
 @ @ - 414 , 7 + 422 , 7 @ @ 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; 
 - @ @ - 2146 , 7 + 2257 , 7 @ @ 
 + @ @ - 2146 , 7 + 2258 , 7 @ @ 
 
 public float func _ 70047 _ e ( ) 
 { 
 @ @ - 423 , 7 + 431 , 7 @ @ 
 
 if ( this . func _ 70608 _ bn ( ) ) 
 { 
 - @ @ - 2362 , 6 + 2473 , 162 @ @ 
 + @ @ - 2362 , 6 + 2474 , 162 @ @ 
 return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch 
 new file mode 100644 
 index 0000000 . . ad8f719 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / datafix / DataFixesManager . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / datafix / DataFixesManager . java 
 + @ @ - 158 , 6 + 158 , 7 @ @ 
 + public static DataFixer func _ 188279 _ a ( ) 
 + { 
 + DataFixer datafixer = new DataFixer ( 819 ) ; 
 + + datafixer = new net . minecraftforge . common . util . CompoundDataFixer ( datafixer ) ; 
 + WorldInfo . func _ 189967 _ a ( datafixer ) ; 
 + EntityPlayer . func _ 189806 _ a ( datafixer ) ; 
 + AnvilChunkLoader . func _ 189889 _ a ( datafixer ) ; 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index 5ac3cdd . . 22b5152 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 97 , 15 + 97 , 17 @ @ 
 } 
 } 
 } 
 - @ @ - 122 , 6 + 181 , 7 @ @ 
 + @ @ - 121 , 7 + 180 , 9 @ @ 
 + NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; 
 nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; 
 nbttagcompound . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( nbttagcompound ) ; 
 this . func _ 75820 _ a ( p _ 75816 _ 2 _ , p _ 75816 _ 1 _ , nbttagcompound1 ) ; 
 + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkDataEvent . Save ( p _ 75816 _ 2 _ , nbttagcompound ) ) ; 
 this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; 
 } 
 catch ( Exception exception ) 
 - @ @ - 307 , 8 + 367 , 17 @ @ 
 + @ @ - 307 , 8 + 368 , 17 @ @ 
 
 if ( entity . func _ 70039 _ c ( nbttagcompound2 ) ) 
 { 
 @ @ - 123 , 7 + 125 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 318 , 8 + 387 , 17 @ @ 
 + @ @ - 318 , 8 + 388 , 17 @ @ 
 
 for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) 
 { 
 @ @ - 141 , 7 + 143 , 7 @ @ 
 } 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; 
 - @ @ - 388 , 6 + 466 , 12 @ @ 
 + @ @ - 388 , 6 + 467 , 12 @ @ 
 chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; 
 } 
 
 @ @ - 154 , 7 + 156 , 7 @ @ 
 NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; 
 
 for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) 
 - @ @ - 431 , 8 + 515 , 6 @ @ 
 + @ @ - 431 , 8 + 516 , 6 @ @ 
 p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch 
 new file mode 100644 
 index 0000000 . . 4e7e0db 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / world / gen / structure / template / Template . java 
 + + + + . . / src - work / minecraft / net / minecraft / world / gen / structure / template / Template . java 
 + @ @ - 520 , 6 + 520 , 7 @ @ 
 + p _ 189552 _ 1 _ . func _ 74782 _ a ( " size " , this . func _ 186267 _ a ( new int [ ] { this . field _ 186272 _ c . func _ 177958 _ n ( ) , this . field _ 186272 _ c . func _ 177956 _ o ( ) , this . field _ 186272 _ c . func _ 177952 _ p ( ) } ) ) ; 
 + p _ 189552 _ 1 _ . func _ 74778 _ a ( " author " , this . field _ 186273 _ d ) ; 
 + p _ 189552 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 189552 _ 1 _ ) ; 
 + return p _ 189552 _ 1 _ ; 
 + } 
 + 
 diff - - git a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 index d3dbb53 . . e4a0e53 100644 
 - - - a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 @ @ - 8 , 7 + 8 , 15 @ @ 
 
 protected WorldInfo ( ) 
 { 
 - @ @ - 807 , 6 + 808 , 26 @ @ 
 + @ @ - 335 , 6 + 336 , 7 @ @ 
 + nbttagcompound . func _ 74757 _ a ( " Snapshot " , false ) ; 
 + p _ 76064 _ 1 _ . func _ 74782 _ a ( " Version " , nbttagcompound ) ; 
 + p _ 76064 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 76064 _ 1 _ ) ; 
 + p _ 76064 _ 1 _ . func _ 74772 _ a ( " RandomSeed " , this . field _ 76100 _ a ) ; 
 + p _ 76064 _ 1 _ . func _ 74778 _ a ( " generatorName " , this . field _ 76098 _ b . func _ 77127 _ a ( ) ) ; 
 + p _ 76064 _ 1 _ . func _ 74768 _ a ( " generatorVersion " , this . field _ 76098 _ b . func _ 77131 _ c ( ) ) ; 
 + @ @ - 807 , 6 + 809 , 26 @ @ 
 } ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 new file mode 100644 
 index 0000000 . . da32e17 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 @ @ - 0 , 0 + 1 , 190 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . Map ; 
 + import java . util . Map . Entry ; 
 + 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + 
 + import net . minecraft . nbt . NBTTagCompound ; 
 + import net . minecraft . util . datafix . DataFixer ; 
 + import net . minecraft . util . datafix . FixTypes ; 
 + import net . minecraft . util . datafix . IDataWalker ; 
 + import net . minecraft . util . datafix . IFixType ; 
 + import net . minecraft . util . datafix . IFixableData ; 
 + 
 + public class CompoundDataFixer extends DataFixer 
 + { 
 + private final ModFixs vanilla ; 
 + private final Map < String , ModFixs > modFixers = Maps . newHashMap ( ) ; 
 + private final Map < IFixType , List < IDataWalker > > walkers = Maps . newHashMap ( ) ; 
 + 
 + public CompoundDataFixer ( DataFixer vanilla ) 
 + { 
 + super ( 0 ) ; 
 + this . vanilla = init ( " minecraft " , vanilla . version ) ; 
 + } 
 + 
 + @ Override 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt ) 
 + { 
 + final Map < String , Integer > versions = getVersions ( nbt ) ; 
 + final int mcversion = versions . get ( " minecraft " ) = = null ? - 1 : versions . get ( " minecraft " ) ; 
 + final IDataFixerData holder = new IDataFixerData ( ) 
 + { 
 + @ Override 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int version ) 
 + { 
 + for ( Entry < String , ModFixs > e : modFixers . entrySet ( ) ) 
 + { 
 + / / This is a potential performance hot spot . As it walks all the data for all 
 + / / of the fixers . . . But with the vanilla api there isn ' t a way to pass down 
 + / / the mod specific version numbers , so redundant . . but not hacky . . . 
 + / / Actually , this wont work as the data walkers take versions into account . . . 
 + ModFixs fixer = e . getValue ( ) ; 
 + int ver = getVersion ( e . getKey ( ) ) ; 
 + if ( ver < fixer . version ) 
 + { 
 + for ( IFixableData fix : fixer . getFixes ( type ) ) 
 + { 
 + if ( fix . getFixVersion ( ) > ver ) 
 + nbt = fix . fixTagCompound ( nbt ) ; 
 + } 
 + 
 + for ( IDataWalker walker : getWalkers ( type ) ) 
 + nbt = walker . process ( this , nbt , version ) ; / / We pass in the holder , in case a walker wants to know a mod version 
 + } 
 + } 
 + return nbt ; 
 + } 
 + 
 + @ Override 
 + public int getVersion ( String mod ) 
 + { 
 + Integer ret = versions . get ( mod ) ; 
 + return ret = = null ? - 1 : ret ; 
 + } 
 + } ; 
 + return holder . process ( type , nbt , mcversion ) ; 
 + } 
 + 
 + @ Override 
 + @ Deprecated / / MODDERS DO NOT CALL DIRECTLY ! Only use from DataWalker ! 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int mcversion ) 
 + { 
 + if ( type ! = FixTypes . OPTIONS ) / / Options are vanilla only 
 + throw new IllegalStateException ( " Do not call recursive process directly on DataFixer ! " ) ; 
 + 
 + for ( IFixableData fix : vanilla . getFixes ( type ) ) 
 + { 
 + if ( fix . getFixVersion ( ) > mcversion ) 
 + nbt = fix . fixTagCompound ( nbt ) ; 
 + } 
 + / / Options is a hack , and doesn ' t have any nested components 
 + / / for ( IDataWalker walker : getWalkers ( type ) ) 
 + / / nbt = walker . process ( this , nbt , version ) ; 
 + return nbt ; 
 + } 
 + 
 + private List < IDataWalker > getWalkers ( IFixType type ) 
 + { 
 + List < IDataWalker > ret = walkers . get ( type ) ; 
 + if ( ret = = null ) 
 + { 
 + ret = Lists . newArrayList ( ) ; 
 + walkers . put ( type , ret ) ; 
 + } 
 + return ret ; 
 + } 
 + 
 + @ Override 
 + @ Deprecated / / Modders do not use this , this will register you as vanilla . Use the ModID version below . 
 + public void registerFix ( IFixType type , IFixableData fixable ) 
 + { 
 + vanilla . registerFix ( type , fixable ) ; 
 + } 
 + 
 + 
 + @ Override 
 + @ Deprecated / / Modders do not use this , use add below , To better allow custom fix types . 
 + public void registerWalker ( FixTypes type , IDataWalker walker ) 
 + { 
 + registerWalkerAdd ( type , walker ) ; 
 + } 
 + 
 + @ Override 
 + public void registerWalkerAdd ( IFixType type , IDataWalker walker ) 
 + { 
 + getWalkers ( type ) . add ( walker ) ; 
 + } 
 + 
 + private void validateModId ( String mod ) 
 + { 
 + / / String current = Loader . instance ( ) . activeModContainer ( ) = = null ? " minecraft " : Loader . instance ( ) . activeModContainer ( ) . getModId ( ) ; 
 + / / Test active modid ? 
 + if ( ! mod . equals ( mod . toLowerCase ( Locale . ENGLISH ) ) ) 
 + throw new IllegalArgumentException ( " Mod ID is not lower case : " + mod ) ; 
 + if ( mod . length ( ) > 64 ) 
 + throw new IllegalArgumentException ( " Mod ID is to long : " + mod ) ; 
 + } 
 + 
 + / * * 
 + * Initialize your mod specific data fixer . 
 + * 
 + * @ param modid You mod id , must be lower case . 
 + * @ param version The current data version of your mod 
 + * / 
 + public ModFixs init ( String modid , int version ) 
 + { 
 + validateModId ( modid ) ; 
 + if ( modFixers . containsKey ( modid ) ) 
 + throw new IllegalStateException ( " Attempted to initalize DataFixer for " + modid + " twice " ) ; 
 + ModFixs ret = new ModFixs ( modid , version ) ; 
 + modFixers . put ( modid , ret ) ; 
 + return ret ; 
 + } 
 + 
 + private Map < String , Integer > getVersions ( NBTTagCompound nbt ) 
 + { 
 + Map < String , Integer > ret = Maps . newHashMap ( ) ; 
 + ret . put ( " minecraft " , nbt . hasKey ( " DataVersion " , 99 ) ? nbt . getInteger ( " DataVersion " ) : - 1 ) ; 
 + if ( nbt . hasKey ( " ForgeDataVersion " , 10 ) ) 
 + { 
 + NBTTagCompound sub = nbt . getCompoundTag ( " ForgeDataVersion " ) ; 
 + for ( String key : sub . getKeySet ( ) ) 
 + { 
 + ret . put ( key , sub . hasKey ( key , 99 ) ? sub . getInteger ( key ) : - 1 ) ; 
 + } 
 + } 
 + return ret ; 
 + } 
 + 
 + public void writeVersionData ( NBTTagCompound nbt ) 
 + { 
 + / / nbt . setInteger ( " DataVersion " , vanilla . version ) ; 
 + NBTTagCompound sub = new NBTTagCompound ( ) ; 
 + nbt . setTag ( " ForgeDataVersion " , sub ) ; 
 + for ( ModFixs mod : modFixers . values ( ) ) 
 + sub . setInteger ( mod . mod , mod . version ) ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / IDataFixerData . java b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java 
 new file mode 100644 
 index 0000000 . . da6b05c 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import net . minecraft . util . datafix . IDataFixer ; 
 + 
 + public interface IDataFixerData extends IDataFixer 
 + { 
 + public int getVersion ( String mod ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 new file mode 100644 
 index 0000000 . . 2dc01f2 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 @ @ - 0 , 0 + 1 , 83 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import java . util . List ; 
 + import java . util . Map ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + 
 + import net . minecraft . util . datafix . IFixType ; 
 + import net . minecraft . util . datafix . IFixableData ; 
 + 
 + public class ModFixs 
 + { 
 + private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 + final String mod ; 
 + final int version ; 
 + private final Map < IFixType , List < IFixableData > > fixes = Maps . newHashMap ( ) ; 
 + 
 + ModFixs ( String mod , int version ) 
 + { 
 + this . mod = mod ; 
 + this . version = version ; 
 + } 
 + 
 + public List < IFixableData > getFixes ( IFixType type ) 
 + { 
 + List < IFixableData > ret = this . fixes . get ( type ) ; 
 + if ( ret = = null ) 
 + { 
 + ret = Lists . newArrayList ( ) ; 
 + this . fixes . put ( type , ret ) ; 
 + } 
 + return ret ; 
 + } 
 + 
 + public void registerFix ( IFixType type , IFixableData fixer ) 
 + { 
 + List < IFixableData > list = getFixes ( type ) ; 
 + int ver = fixer . getFixVersion ( ) ; 
 + 
 + if ( ver > this . version ) 
 + { 
 + LOGGER . warn ( " [ { } ] Ignored fix registered for version : { } as the DataVersion of the game is : { } " , mod , ver , this . version ) ; 
 + return ; 
 + } 
 + 
 + if ( ! list . isEmpty ( ) & & list . get ( list . size ( ) - 1 ) . getFixVersion ( ) > ver ) 
 + { 
 + for ( int x = 0 ; x < list . size ( ) ; + + x ) 
 + { 
 + if ( list . get ( x ) . getFixVersion ( ) > ver ) 
 + { 
 + list . add ( x , fixer ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + else 
 + list . add ( fixer ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index c796af8 . . a78247c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 82 , 6 + 82 , 7 @ @ import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . client . event . ModelRegistryEvent ; 
 import net . minecraftforge . common . ForgeModContainer ; 
 import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . client . registry . RenderingRegistry ; 
 import net . minecraftforge . fml . common . DummyModContainer ; 
 import net . minecraftforge . fml . common . DuplicateModsFoundException ; 
 @ @ - 1060 , 4 + 1061 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 MinecraftForge . EVENT _ BUS . post ( new ModelRegistryEvent ( ) ) ; 
 } 
 + 
 + @ Override 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) this . client . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index d4863c7 . . 1411eda 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 57 , 6 + 57 , 7 @ @ import net . minecraft . world . storage . WorldInfo ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . common . ForgeVersion ; 
 import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . common . gameevent . InputEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent ; 
 @ @ - 751 , 4 + 752 , 9 @ @ public class FMLCommonHandler 
 { 
 sidedDelegate . fireSidedRegistryEvents ( ) ; 
 } 
 + 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) sidedDelegate . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 index aea07ff . . 4cff064 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . util . IThreadListener ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 @ @ - 77 , 4 + 78 , 6 @ @ public interface IFMLSidedHandler 
 void reloadRenderers ( ) ; 
 
 void fireSidedRegistryEvents ( ) ; 
 + 
 + CompoundDataFixer getDataFixer ( ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index 54c25b1 . . fa4f6a5 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . server . dedicated . PendingCommand ; 
 import net . minecraft . util . IThreadListener ; 
 import net . minecraft . util . text . translation . LanguageMap ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . IFMLSidedHandler ; 
 @ @ - 339 , 4 + 340 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 / / NOOP 
 } 
 + @ Override 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) this . server . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 14df9d2 . . 586b68e 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 287 , 4 + 287 , 7 @ @ public net . minecraft . potion . PotionHelper func _ 185204 _ a ( Lnet / minecraft / potion / Pot 
 
 # TileEntityHopper 
 public net . minecraft . tileentity . TileEntityHopper func _ 174914 _ o ( ) Z # mayTransfer 
 - public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown 
 \ No newline at end of file 
 + public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown 
 + 
 + # DataFixer 
 + public net . minecraft . util . datafix . DataFixer field _ 188262 _ d # version 
 \ No newline at end of file
