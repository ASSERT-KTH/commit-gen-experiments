BLEU SCORE: 0.020980574531482755

TEST MSG: Add back EntityPlayer patch to return main inventory in IItemHandler
GENERATED MSG: Fixed brewing stand returning incorrect solts for side inventories .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 0468a18 . . 09c450c 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 498 , 7 + 498 , 7 @ @ <nl> if ( this . func _ 70608 _ bn ( ) ) { <nl> f = 0 . 2F ; <nl> } else if ( ! this . func _ 203007 _ ba ( ) & & ! this . func _ 184613 _ cA ( ) & & this . field _ 70131 _ O ! = 0 . 6F ) { <nl> - @ @ - 1973 , 6 + 2100 , 30 @ @ <nl> + @ @ - 1973 , 6 + 2100 , 54 @ @ <nl> return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 184840 _ I ( ) > = 2 ; <nl> } <nl> <nl> @ @ - 525 , 6 + 525 , 30 @ @ <nl> + public Collection < ITextComponent > getSuffixes ( ) { <nl> + return this . suffixes ; <nl> + } <nl> + + <nl> + + private final net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandler > <nl> + + playerMainHandler = net . minecraftforge . common . util . LazyOptional . of ( <nl> + + ( ) - > new net . minecraftforge . items . wrapper . PlayerMainInvWrapper ( field _ 71071 _ by ) ) ; <nl> + + <nl> + + private final net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandler > <nl> + + playerEquipmentHandler = net . minecraftforge . common . util . LazyOptional . of ( <nl> + + ( ) - > new net . minecraftforge . items . wrapper . CombinedInvWrapper ( <nl> + + new net . minecraftforge . items . wrapper . PlayerArmorInvWrapper ( field _ 71071 _ by ) , <nl> + + new net . minecraftforge . items . wrapper . PlayerOffhandInvWrapper ( field _ 71071 _ by ) ) ) ; <nl> + + <nl> + + private final net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandler > <nl> + + playerJoinedHandler = net . minecraftforge . common . util . LazyOptional . of ( <nl> + + ( ) - > new net . minecraftforge . items . wrapper . PlayerInvWrapper ( field _ 71071 _ by ) ) ; <nl> + + <nl> + + @ Override <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + + if ( this . func _ 70089 _ S ( ) & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { <nl> + + if ( facing = = null ) return playerJoinedHandler . cast ( ) ; <nl> + + else if ( facing . func _ 176740 _ k ( ) . func _ 200128 _ b ( ) ) return playerMainHandler . cast ( ) ; <nl> + + else if ( facing . func _ 176740 _ k ( ) . func _ 176722 _ c ( ) ) return playerEquipmentHandler . cast ( ) ; <nl> + + } <nl> + + return super . getCapability ( capability , facing ) ; <nl> + + } <nl> + <nl> public static enum EnumChatVisibility { <nl> FULL ( 0 , " options . chat . visibility . full " ) ,
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> index ffeea5e . . b980f3b 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> @ @ - 63 , 22 + 63 , 27 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 367 , 6 + 366 , 21 @ @ <nl> + @ @ - 367 , 6 + 366 , 26 @ @ <nl> } <nl> } <nl> <nl> + net . minecraftforge . items . IItemHandler handlerInput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . UP ) ; <nl> + net . minecraftforge . items . IItemHandler handlerOutput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . DOWN ) ; <nl> + + net . minecraftforge . items . IItemHandler handlerSides = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . NORTH ) ; <nl> + <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) <nl> + + { <nl> + if ( facing = = EnumFacing . UP ) <nl> + return ( T ) handlerInput ; <nl> - + else <nl> + + else if ( facing = = EnumFacing . DOWN ) <nl> + return ( T ) handlerOutput ; <nl> + + else <nl> + + return ( T ) handlerSides ; <nl> + + } <nl> + return super . getCapability ( capability , facing ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 0468a18 . . 09c450c 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 498 , 7 + 498 , 7 @ @ 
 if ( this . func _ 70608 _ bn ( ) ) { 
 f = 0 . 2F ; 
 } else if ( ! this . func _ 203007 _ ba ( ) & & ! this . func _ 184613 _ cA ( ) & & this . field _ 70131 _ O ! = 0 . 6F ) { 
 - @ @ - 1973 , 6 + 2100 , 30 @ @ 
 + @ @ - 1973 , 6 + 2100 , 54 @ @ 
 return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 184840 _ I ( ) > = 2 ; 
 } 
 
 @ @ - 525 , 6 + 525 , 30 @ @ 
 + public Collection < ITextComponent > getSuffixes ( ) { 
 + return this . suffixes ; 
 + } 
 + + 
 + + private final net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandler > 
 + + playerMainHandler = net . minecraftforge . common . util . LazyOptional . of ( 
 + + ( ) - > new net . minecraftforge . items . wrapper . PlayerMainInvWrapper ( field _ 71071 _ by ) ) ; 
 + + 
 + + private final net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandler > 
 + + playerEquipmentHandler = net . minecraftforge . common . util . LazyOptional . of ( 
 + + ( ) - > new net . minecraftforge . items . wrapper . CombinedInvWrapper ( 
 + + new net . minecraftforge . items . wrapper . PlayerArmorInvWrapper ( field _ 71071 _ by ) , 
 + + new net . minecraftforge . items . wrapper . PlayerOffhandInvWrapper ( field _ 71071 _ by ) ) ) ; 
 + + 
 + + private final net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandler > 
 + + playerJoinedHandler = net . minecraftforge . common . util . LazyOptional . of ( 
 + + ( ) - > new net . minecraftforge . items . wrapper . PlayerInvWrapper ( field _ 71071 _ by ) ) ; 
 + + 
 + + @ Override 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + + if ( this . func _ 70089 _ S ( ) & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { 
 + + if ( facing = = null ) return playerJoinedHandler . cast ( ) ; 
 + + else if ( facing . func _ 176740 _ k ( ) . func _ 200128 _ b ( ) ) return playerMainHandler . cast ( ) ; 
 + + else if ( facing . func _ 176740 _ k ( ) . func _ 176722 _ c ( ) ) return playerEquipmentHandler . cast ( ) ; 
 + + } 
 + + return super . getCapability ( capability , facing ) ; 
 + + } 
 + 
 public static enum EnumChatVisibility { 
 FULL ( 0 , " options . chat . visibility . full " ) ,

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 index ffeea5e . . b980f3b 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 @ @ - 63 , 22 + 63 , 27 @ @ 
 } 
 } 
 
 - @ @ - 367 , 6 + 366 , 21 @ @ 
 + @ @ - 367 , 6 + 366 , 26 @ @ 
 } 
 } 
 
 + net . minecraftforge . items . IItemHandler handlerInput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . UP ) ; 
 + net . minecraftforge . items . IItemHandler handlerOutput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . DOWN ) ; 
 + + net . minecraftforge . items . IItemHandler handlerSides = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . NORTH ) ; 
 + 
 + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) 
 + + { 
 + if ( facing = = EnumFacing . UP ) 
 + return ( T ) handlerInput ; 
 - + else 
 + + else if ( facing = = EnumFacing . DOWN ) 
 + return ( T ) handlerOutput ; 
 + + else 
 + + return ( T ) handlerSides ; 
 + + } 
 + return super . getCapability ( capability , facing ) ; 
 + } 
 +
