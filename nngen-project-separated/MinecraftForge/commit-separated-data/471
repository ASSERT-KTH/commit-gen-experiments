BLEU SCORE: 0.01222796968620182

TEST MSG: [ 1 . 11 . 2 ] Fixed Zombie Villagers not setting and getting professions correctly
GENERATED MSG: Cache entity constructors for a small performance optimization

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java . patch b / patches / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 4f8f88b <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java <nl> + @ @ - 25 , 6 + 25 , 7 @ @ <nl> + <nl> + protected ResourceLocation func _ 110775 _ a ( EntityZombieVillager p _ 110775 _ 1 _ ) <nl> + { <nl> + + if ( true ) return p _ 110775 _ 1 _ . getForgeProfession ( ) . getZombieSkin ( ) ; <nl> + switch ( p _ 110775 _ 1 _ . func _ 190736 _ dl ( ) ) <nl> + { <nl> + case 0 : <nl> diff - - git a / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch b / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch <nl> index 7aba280 . . 95c9a4f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch <nl> @ @ - 1 , 17 + 1 , 58 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java <nl> + + + . . / src - work / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java <nl> - @ @ - 48 , 6 + 48 , 7 @ @ <nl> + @ @ - 48 , 11 + 48 , 14 @ @ <nl> public void func _ 190733 _ a ( int p _ 190733 _ 1 _ ) <nl> { <nl> this . field _ 70180 _ af . func _ 187227 _ b ( field _ 190739 _ c , Integer . valueOf ( p _ 190733 _ 1 _ ) ) ; <nl> + net . minecraftforge . fml . common . registry . VillagerRegistry . onSetProfession ( this , p _ 190733 _ 1 _ ) ; <nl> } <nl> <nl> + + / / Use Forge Variant below <nl> + + @ Deprecated <nl> public int func _ 190736 _ dl ( ) <nl> - @ @ - 85 , 6 + 86 , 21 @ @ <nl> - return super . func _ 180482 _ a ( p _ 180482 _ 1 _ , p _ 180482 _ 2 _ ) ; <nl> + { <nl> + - return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 190739 _ c ) ) . intValue ( ) % 6 , 0 ) ; <nl> + + return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 190739 _ c ) ) . intValue ( ) , 0 ) ; <nl> + } <nl> + <nl> + public static void func _ 190737 _ b ( DataFixer p _ 190737 _ 0 _ ) <nl> + @ @ - 64 , 6 + 67 , 7 @ @ <nl> + { <nl> + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " Profession " , this . func _ 190736 _ dl ( ) ) ; <nl> + + p _ 70014 _ 1 _ . func _ 74778 _ a ( " ProfessionName " , this . getForgeProfession ( ) . getRegistryName ( ) . toString ( ) ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " ConversionTime " , this . func _ 82230 _ o ( ) ? this . field _ 82234 _ d : - 1 ) ; <nl> } <nl> <nl> + @ @ - 71 , 6 + 75 , 12 @ @ <nl> + { <nl> + super . func _ 70037 _ a ( p _ 70037 _ 1 _ ) ; <nl> + this . func _ 190733 _ a ( p _ 70037 _ 1 _ . func _ 74762 _ e ( " Profession " ) ) ; <nl> + + if ( p _ 70037 _ 1 _ . func _ 74764 _ b ( " ProfessionName " ) ) <nl> + + { <nl> + + net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession p = net . minecraftforge . fml . common . registry . VillagerRegistry . instance ( ) . getRegistry ( ) . getValue ( new net . minecraft . util . ResourceLocation ( p _ 70037 _ 1 _ . func _ 74779 _ i ( " ProfessionName " ) ) ) ; <nl> + + if ( p = = null ) p = net . minecraftforge . fml . common . registry . VillagerRegistry . FARMER ; <nl> + + this . setForgeProfession ( p ) ; <nl> + + } <nl> + <nl> + if ( p _ 70037 _ 1 _ . func _ 150297 _ b ( " ConversionTime " , 99 ) & & p _ 70037 _ 1 _ . func _ 74762 _ e ( " ConversionTime " ) > - 1 ) <nl> + { <nl> + @ @ - 164 , 7 + 174 , 7 @ @ <nl> + { <nl> + EntityVillager entityvillager = new EntityVillager ( this . field _ 70170 _ p ) ; <nl> + entityvillager . func _ 82149 _ j ( this ) ; <nl> + - entityvillager . func _ 70938 _ b ( this . func _ 190736 _ dl ( ) ) ; <nl> + + entityvillager . setProfession ( this . getForgeProfession ( ) ) ; <nl> + entityvillager . func _ 190672 _ a ( this . field _ 70170 _ p . func _ 175649 _ E ( new BlockPos ( entityvillager ) ) , ( IEntityLivingData ) null , false ) ; <nl> + entityvillager . func _ 82187 _ q ( ) ; <nl> + <nl> + @ @ - 256 , 4 + 266 , 37 @ @ <nl> + { <nl> + return ItemStack . field _ 190927 _ a ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + <nl> + @ Nullable <nl> + private net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession prof ; <nl> + public void setForgeProfession ( net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession prof ) <nl> @ @ - 20 , 13 + 61 , 26 @ @ <nl> + this . func _ 190733 _ a ( net . minecraftforge . fml . common . registry . VillagerRegistry . getId ( prof ) ) ; <nl> + } <nl> + <nl> - + @ Nullable <nl> + public net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession getForgeProfession ( ) <nl> + { <nl> + + if ( this . prof = = null ) <nl> + + { <nl> + + this . prof = net . minecraftforge . fml . common . registry . VillagerRegistry . getById ( this . func _ 190736 _ dl ( ) ) ; <nl> + + if ( this . prof = = null ) <nl> + + return net . minecraftforge . fml . common . registry . VillagerRegistry . FARMER ; <nl> + + } <nl> + return this . prof ; <nl> + } <nl> + <nl> + + @ Override <nl> + + public void func _ 184206 _ a ( DataParameter < ? > key ) <nl> + + { <nl> + + super . func _ 184206 _ a ( key ) ; <nl> + + if ( key . equals ( field _ 190739 _ c ) ) <nl> + + { <nl> + + net . minecraftforge . fml . common . registry . VillagerRegistry . onSetProfession ( this , this . field _ 70180 _ af . func _ 187225 _ a ( field _ 190739 _ c ) ) ; <nl> + + } <nl> + + } <nl> + <nl> - public void func _ 70071 _ h _ ( ) <nl> - { <nl> - if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & this . func _ 82230 _ o ( ) ) <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch <nl> index 5d46c87 . . 7983c6c 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch <nl> @ @ - 51 , 7 + 51 , 8 @ @ <nl> + @ Deprecated / / Use Forge Variant below <nl> public int func _ 70946 _ n ( ) <nl> { <nl> - return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 184752 _ bw ) ) . intValue ( ) % 6 , 0 ) ; <nl> + - return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 184752 _ bw ) ) . intValue ( ) % 6 , 0 ) ; <nl> + + return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 184752 _ bw ) ) . intValue ( ) , 0 ) ; <nl> } <nl> <nl> + private net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession prof ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> index 91d3391 . . 08b7308 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> @ @ - 37 , 6 + 37 , 7 @ @ import net . minecraft . world . gen . structure . StructureComponent ; <nl> import net . minecraft . world . gen . structure . StructureVillagePieces ; <nl> import net . minecraft . world . gen . structure . StructureVillagePieces . PieceWeight ; <nl> import net . minecraft . world . gen . structure . StructureVillagePieces . Village ; <nl> + import net . minecraftforge . fml . common . registry . GameRegistry . ObjectHolder ; <nl> <nl> import javax . annotation . Nullable ; <nl> <nl> @ @ - 46 , 6 + 47 , 8 @ @ import javax . annotation . Nullable ; <nl> public class VillagerRegistry <nl> { <nl> public static final ResourceLocation PROFESSIONS = new ResourceLocation ( " minecraft : villagerprofessions " ) ; <nl> + @ ObjectHolder ( " minecraft : farmer " ) <nl> + public static final VillagerProfession FARMER = null ; <nl> private static final VillagerRegistry INSTANCE = new VillagerRegistry ( ) ; <nl> <nl> private Map < Class < ? > , IVillageCreationHandler > villageCreationHandlers = Maps . newHashMap ( ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / test / VillagerProfessionTest . java b / src / test / java / net / minecraftforge / test / VillagerProfessionTest . java <nl> new file mode 100644 <nl> index 0000000 . . 9468301 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / test / VillagerProfessionTest . java <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + package net . minecraftforge . test ; <nl> + <nl> + import net . minecraftforge . event . RegistryEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerCareer ; <nl> + import net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession ; <nl> + <nl> + @ Mod ( modid = " professiontest " , name = " ProfessionTest2000 " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + @ EventBusSubscriber <nl> + public class VillagerProfessionTest <nl> + { <nl> + @ SubscribeEvent <nl> + public static void registerVillagers ( RegistryEvent . Register < VillagerProfession > event ) <nl> + { <nl> + VillagerProfession profession = new VillagerProfession ( " professiontest : test _ villager " , " professiontest : textures / entity / test _ villager . png " , " professiontest : textures / entity / zombie _ test _ villager . png " ) ; <nl> + new VillagerCareer ( profession , " professiontest : test _ villager " ) ; <nl> + event . getRegistry ( ) . register ( profession ) ; <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / professiontest / textures / entity / test _ villager . png b / src / test / resources / assets / professiontest / textures / entity / test _ villager . png <nl> new file mode 100644 <nl> index 0000000 . . c96f96f <nl> Binary files / dev / null and b / src / test / resources / assets / professiontest / textures / entity / test _ villager . png differ <nl> diff - - git a / src / test / resources / assets / professiontest / textures / entity / zombie _ test _ villager . png b / src / test / resources / assets / professiontest / textures / entity / zombie _ test _ villager . png <nl> new file mode 100644 <nl> index 0000000 . . 4951a52 <nl> Binary files / dev / null and b / src / test / resources / assets / professiontest / textures / entity / zombie _ test _ villager . png differ
NEAREST DIFF (one line): diff - - git a / jsons / 1 . 11 . 2 . json b / jsons / 1 . 11 . 2 . json <nl> index 5ff1eda . . d77a170 100644 <nl> - - - a / jsons / 1 . 11 . 2 . json <nl> + + + b / jsons / 1 . 11 . 2 . json <nl> @ @ - 242 , 13 + 242 , 13 @ @ <nl> } <nl> } , <nl> { <nl> - " name " : " com . mojang : realms : 1 . 10 . 8 " , <nl> + " name " : " com . mojang : realms : 1 . 10 . 10 " , <nl> " downloads " : { <nl> " artifact " : { <nl> - " size " : 3025164 , <nl> - " sha1 " : " 67560bbd6a83d48ae8b956f1feac09010bde879c " , <nl> - " path " : " com / mojang / realms / 1 . 10 . 8 / realms - 1 . 10 . 8 . jar " , <nl> - " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 8 / realms - 1 . 10 . 8 . jar " <nl> + " size " : 3031435 , <nl> + " sha1 " : " 92d9ba93e1e99b75f2776062a5515f6aa88d9f10 " , <nl> + " path " : " com / mojang / realms / 1 . 10 . 10 / realms - 1 . 10 . 10 . jar " , <nl> + " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 10 / realms - 1 . 10 . 10 . jar " <nl> } <nl> } <nl> } , <nl> @ @ - 558 , 6 + 558 , 6 @ @ <nl> " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , <nl> " minimumLauncherVersion " : 18 , <nl> " releaseTime " : " 2016 - 12 - 21T09 : 29 : 12 + 00 : 00 " , <nl> - " time " : " 2016 - 12 - 21T09 : 42 : 21 + 00 : 00 " , <nl> + " time " : " 2017 - 01 - 12T10 : 44 : 50 + 00 : 00 " , <nl> " type " : " release " <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> index 869bb9f . . 124d3f1 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> @ @ - 63 , 16 + 63 , 25 @ @ <nl> @ Nullable <nl> public static Entity func _ 191304 _ a ( @ Nullable Class < ? extends Entity > p _ 191304 _ 0 _ , World p _ 191304 _ 1 _ ) <nl> { <nl> - @ @ - 174 , 7 + 186 , 7 @ @ <nl> + @ @ - 168 , 13 + 180 , 15 @ @ <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public static Entity func _ 75616 _ a ( int p _ 75616 _ 0 _ , World p _ 75616 _ 1 _ ) <nl> + { <nl> + - return func _ 191304 _ a ( func _ 90035 _ a ( p _ 75616 _ 0 _ ) , p _ 75616 _ 1 _ ) ; <nl> + + net . minecraftforge . fml . common . registry . EntityEntry entry = net . minecraftforge . fml . common . registry . GameData . getEntityRegistry ( ) . func _ 148754 _ a ( p _ 75616 _ 0 _ ) ; <nl> + + return entry = = null ? null : entry . newInstance ( p _ 75616 _ 1 _ ) ; <nl> + } <nl> + <nl> @ Nullable <nl> public static Entity func _ 188429 _ b ( ResourceLocation p _ 188429 _ 0 _ , World p _ 188429 _ 1 _ ) <nl> { <nl> - return func _ 191304 _ a ( ( Class ) field _ 191308 _ b . func _ 82594 _ a ( p _ 188429 _ 0 _ ) , p _ 188429 _ 1 _ ) ; <nl> - + return func _ 191304 _ a ( getClass ( p _ 188429 _ 0 _ ) , p _ 188429 _ 1 _ ) ; <nl> + + net . minecraftforge . fml . common . registry . EntityEntry entry = net . minecraftforge . fml . common . registry . ForgeRegistries . ENTITIES . getValue ( p _ 188429 _ 0 _ ) ; <nl> + + return entry = = null ? null : entry . newInstance ( p _ 188429 _ 1 _ ) ; <nl> } <nl> <nl> @ Nullable <nl> - @ @ - 189 , 7 + 201 , 17 @ @ <nl> + @ @ - 189 , 7 + 203 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 90 , 7 + 99 , 7 @ @ <nl> } <nl> <nl> return entity ; <nl> - @ @ - 197 , 7 + 219 , 7 @ @ <nl> + @ @ - 197 , 7 + 221 , 7 @ @ <nl> <nl> public static Set < ResourceLocation > func _ 180124 _ b ( ) <nl> { <nl> @ @ - 99 , 7 + 108 , 7 @ @ <nl> } <nl> <nl> public static boolean func _ 180123 _ a ( Entity p _ 180123 _ 0 _ , ResourceLocation p _ 180123 _ 1 _ ) <nl> - @ @ - 336 , 7 + 358 , 7 @ @ <nl> + @ @ - 336 , 7 + 360 , 7 @ @ <nl> func _ 191305 _ a ( " zombie _ horse " , 3232308 , 9945732 ) ; <nl> func _ 191305 _ a ( " zombie _ pigman " , 15373203 , 5009705 ) ; <nl> func _ 191305 _ a ( " zombie _ villager " , 5651507 , 7969893 ) ; <nl> @ @ - 108 , 7 + 117 , 7 @ @ <nl> } <nl> <nl> private static void func _ 191303 _ a ( int p _ 191303 _ 0 _ , String p _ 191303 _ 1 _ , Class < ? extends Entity > p _ 191303 _ 2 _ , String p _ 191303 _ 3 _ ) <nl> - @ @ - 357 , 22 + 379 , 19 @ @ <nl> + @ @ - 357 , 22 + 381 , 19 @ @ <nl> else <nl> { <nl> ResourceLocation resourcelocation = new ResourceLocation ( p _ 191303 _ 1 _ ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> index 525af1f . . fbeb2bf 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> @ @ - 20 , 6 + 20 , 15 @ @ <nl> { <nl> BlockPos blockpos = func _ 180621 _ a ( p _ 77192 _ 1 _ , chunkpos1 . field _ 77276 _ a , chunkpos1 . field _ 77275 _ b ) ; <nl> int k1 = blockpos . func _ 177958 _ n ( ) ; <nl> + @ @ - 136 , 7 + 138 , 7 @ @ <nl> + <nl> + try <nl> + { <nl> + - entityliving = ( EntityLiving ) biome $ spawnlistentry . field _ 76300 _ b . getConstructor ( new Class [ ] { World . class } ) . newInstance ( new Object [ ] { p _ 77192 _ 1 _ } ) ; <nl> + + entityliving = ( EntityLiving ) biome $ spawnlistentry . newInstance ( p _ 77192 _ 1 _ ) ; <nl> + } <nl> + catch ( Exception exception ) <nl> + { <nl> @ @ - 146 , 8 + 148 , 10 @ @ <nl> <nl> entityliving . func _ 70012 _ b ( ( double ) f , ( double ) i3 , ( double ) f1 , p _ 77192 _ 1 _ . field _ 73012 _ v . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; <nl> @ @ - 52 , 3 + 61 , 12 @ @ <nl> { <nl> return false ; <nl> } <nl> + @ @ - 258 , 7 + 263 , 7 @ @ <nl> + <nl> + try <nl> + { <nl> + - entityliving = ( EntityLiving ) biome $ spawnlistentry . field _ 76300 _ b . getConstructor ( new Class [ ] { World . class } ) . newInstance ( new Object [ ] { p _ 77191 _ 0 _ } ) ; <nl> + + entityliving = ( EntityLiving ) biome $ spawnlistentry . newInstance ( p _ 77191 _ 0 _ ) ; <nl> + } <nl> + catch ( Exception exception ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / world / biome / Biome . java . patch b / patches / minecraft / net / minecraft / world / biome / Biome . java . patch <nl> index b852758 . . 0b7a84f 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / biome / Biome . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / biome / Biome . java . patch <nl> @ @ - 154 , 3 + 154 , 40 @ @ <nl> public static void func _ 185358 _ q ( ) <nl> { <nl> func _ 185354 _ a ( 0 , " ocean " , new BiomeOcean ( ( new Biome . BiomeProperties ( " Ocean " ) ) . func _ 185398 _ c ( - 1 . 0F ) . func _ 185400 _ d ( 0 . 1F ) ) ) ; <nl> + @ @ - 549 , 6 + 631 , 7 @ @ <nl> + public Class < ? extends EntityLiving > field _ 76300 _ b ; <nl> + public int field _ 76301 _ c ; <nl> + public int field _ 76299 _ d ; <nl> + + private final java . lang . reflect . Constructor < ? > ctr ; <nl> + <nl> + public SpawnListEntry ( Class < ? extends EntityLiving > p _ i1970 _ 1 _ , int p _ i1970 _ 2 _ , int p _ i1970 _ 3 _ , int p _ i1970 _ 4 _ ) <nl> + { <nl> + @ @ - 556 , 12 + 639 , 28 @ @ <nl> + this . field _ 76300 _ b = p _ i1970 _ 1 _ ; <nl> + this . field _ 76301 _ c = p _ i1970 _ 3 _ ; <nl> + this . field _ 76299 _ d = p _ i1970 _ 4 _ ; <nl> + + <nl> + + java . lang . reflect . Constructor < ? > tmp = null ; <nl> + + try <nl> + + { <nl> + + tmp = p _ i1970 _ 1 _ . getConstructor ( World . class ) ; <nl> + + } <nl> + + catch ( NoSuchMethodException e ) <nl> + + { <nl> + + com . google . common . base . Throwables . propagate ( e ) ; <nl> + + } <nl> + + ctr = tmp ; <nl> + } <nl> + <nl> + public String toString ( ) <nl> + { <nl> + return this . field _ 76300 _ b . getSimpleName ( ) + " * ( " + this . field _ 76301 _ c + " - " + this . field _ 76299 _ d + " ) : " + this . field _ 76292 _ a ; <nl> + } <nl> + + <nl> + + public EntityLiving newInstance ( World world ) throws Exception <nl> + + { <nl> + + return ( EntityLiving ) ctr . newInstance ( world ) ; <nl> + + } <nl> + } <nl> + <nl> + public static enum TempCategory <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java <nl> index 2447cdd . . a454734 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java <nl> @ @ - 18 , 9 + 18 , 15 @ @ <nl> * / <nl> package net . minecraftforge . fml . common . registry ; <nl> <nl> + import java . lang . reflect . Constructor ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + <nl> + import com . google . common . base . Throwables ; <nl> + <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . EntityList ; <nl> import net . minecraft . entity . EntityList . EntityEggInfo ; <nl> + import net . minecraft . world . World ; <nl> import net . minecraftforge . fml . common . registry . IForgeRegistryEntry . Impl ; <nl> <nl> public class EntityEntry extends Impl < EntityEntry > <nl> @ @ - 28 , 11 + 34 , 30 @ @ public class EntityEntry extends Impl < EntityEntry > <nl> private Class < ? extends Entity > cls ; <nl> private String name ; <nl> private EntityEggInfo egg ; <nl> + private Constructor < ? > ctr ; <nl> <nl> public EntityEntry ( Class < ? extends Entity > cls , String name ) <nl> { <nl> this . cls = cls ; <nl> this . name = name ; <nl> + init ( ) ; <nl> + } <nl> + <nl> + / / Protected method , to make this optional , in case people subclass this to have a better factory . <nl> + protected void init ( ) <nl> + { <nl> + try <nl> + { <nl> + this . ctr = this . cls . getConstructor ( World . class ) ; <nl> + } <nl> + catch ( NoSuchMethodException e ) <nl> + { <nl> + throw new RuntimeException ( " Invalid class " + this . cls + " no constructor taking " + World . class . getName ( ) ) ; <nl> + } <nl> + catch ( SecurityException e ) <nl> + { <nl> + Throwables . propagate ( e ) ; <nl> + } <nl> } <nl> <nl> public Class < ? extends Entity > getEntityClass ( ) { return this . cls ; } <nl> @ @ - 45 , 4 + 70 , 17 @ @ public class EntityEntry extends Impl < EntityEntry > <nl> if ( this . getRegistryName ( ) ! = null ) <nl> EntityList . ENTITY _ EGGS . put ( this . getRegistryName ( ) , egg ) ; <nl> } <nl> + <nl> + public Entity newInstance ( World world ) <nl> + { <nl> + try <nl> + { <nl> + return ( Entity ) this . ctr . newInstance ( world ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + e . printStackTrace ( ) ; <nl> + return null ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / test / CustomSpriteTest . java b / src / test / java / net / minecraftforge / test / CustomSpriteTest . java <nl> index 29329c3 . . 5841691 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / CustomSpriteTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / CustomSpriteTest . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import java . io . IOException ; <nl> / * * <nl> * Test for { @ link TextureStitchEvent . Pre } . <nl> * / <nl> - @ Mod ( modid = CustomSpriteTest . MOD _ ID , name = CustomSpriteTest . NAME , version = " 1 . 0 " ) <nl> + @ Mod ( modid = CustomSpriteTest . MOD _ ID , name = CustomSpriteTest . NAME , version = " 1 . 0 " , clientSideOnly = true ) <nl> public class CustomSpriteTest <nl> { <nl> static final String MOD _ ID = " custom _ sprite _ test " ; <nl> @ @ - 95 , 4 + 95 , 4 @ @ public class CustomSpriteTest <nl> return false ; <nl> } <nl> } <nl> - } <nl> \ No newline at end of file <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java . patch b / patches / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java . patch 
 new file mode 100644 
 index 0000000 . . 4f8f88b 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / renderer / entity / RenderZombieVillager . java 
 + @ @ - 25 , 6 + 25 , 7 @ @ 
 + 
 + protected ResourceLocation func _ 110775 _ a ( EntityZombieVillager p _ 110775 _ 1 _ ) 
 + { 
 + + if ( true ) return p _ 110775 _ 1 _ . getForgeProfession ( ) . getZombieSkin ( ) ; 
 + switch ( p _ 110775 _ 1 _ . func _ 190736 _ dl ( ) ) 
 + { 
 + case 0 : 
 diff - - git a / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch b / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch 
 index 7aba280 . . 95c9a4f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java . patch 
 @ @ - 1 , 17 + 1 , 58 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java 
 + + + . . / src - work / minecraft / net / minecraft / entity / monster / EntityZombieVillager . java 
 - @ @ - 48 , 6 + 48 , 7 @ @ 
 + @ @ - 48 , 11 + 48 , 14 @ @ 
 public void func _ 190733 _ a ( int p _ 190733 _ 1 _ ) 
 { 
 this . field _ 70180 _ af . func _ 187227 _ b ( field _ 190739 _ c , Integer . valueOf ( p _ 190733 _ 1 _ ) ) ; 
 + net . minecraftforge . fml . common . registry . VillagerRegistry . onSetProfession ( this , p _ 190733 _ 1 _ ) ; 
 } 
 
 + + / / Use Forge Variant below 
 + + @ Deprecated 
 public int func _ 190736 _ dl ( ) 
 - @ @ - 85 , 6 + 86 , 21 @ @ 
 - return super . func _ 180482 _ a ( p _ 180482 _ 1 _ , p _ 180482 _ 2 _ ) ; 
 + { 
 + - return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 190739 _ c ) ) . intValue ( ) % 6 , 0 ) ; 
 + + return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 190739 _ c ) ) . intValue ( ) , 0 ) ; 
 + } 
 + 
 + public static void func _ 190737 _ b ( DataFixer p _ 190737 _ 0 _ ) 
 + @ @ - 64 , 6 + 67 , 7 @ @ 
 + { 
 + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " Profession " , this . func _ 190736 _ dl ( ) ) ; 
 + + p _ 70014 _ 1 _ . func _ 74778 _ a ( " ProfessionName " , this . getForgeProfession ( ) . getRegistryName ( ) . toString ( ) ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " ConversionTime " , this . func _ 82230 _ o ( ) ? this . field _ 82234 _ d : - 1 ) ; 
 } 
 
 + @ @ - 71 , 6 + 75 , 12 @ @ 
 + { 
 + super . func _ 70037 _ a ( p _ 70037 _ 1 _ ) ; 
 + this . func _ 190733 _ a ( p _ 70037 _ 1 _ . func _ 74762 _ e ( " Profession " ) ) ; 
 + + if ( p _ 70037 _ 1 _ . func _ 74764 _ b ( " ProfessionName " ) ) 
 + + { 
 + + net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession p = net . minecraftforge . fml . common . registry . VillagerRegistry . instance ( ) . getRegistry ( ) . getValue ( new net . minecraft . util . ResourceLocation ( p _ 70037 _ 1 _ . func _ 74779 _ i ( " ProfessionName " ) ) ) ; 
 + + if ( p = = null ) p = net . minecraftforge . fml . common . registry . VillagerRegistry . FARMER ; 
 + + this . setForgeProfession ( p ) ; 
 + + } 
 + 
 + if ( p _ 70037 _ 1 _ . func _ 150297 _ b ( " ConversionTime " , 99 ) & & p _ 70037 _ 1 _ . func _ 74762 _ e ( " ConversionTime " ) > - 1 ) 
 + { 
 + @ @ - 164 , 7 + 174 , 7 @ @ 
 + { 
 + EntityVillager entityvillager = new EntityVillager ( this . field _ 70170 _ p ) ; 
 + entityvillager . func _ 82149 _ j ( this ) ; 
 + - entityvillager . func _ 70938 _ b ( this . func _ 190736 _ dl ( ) ) ; 
 + + entityvillager . setProfession ( this . getForgeProfession ( ) ) ; 
 + entityvillager . func _ 190672 _ a ( this . field _ 70170 _ p . func _ 175649 _ E ( new BlockPos ( entityvillager ) ) , ( IEntityLivingData ) null , false ) ; 
 + entityvillager . func _ 82187 _ q ( ) ; 
 + 
 + @ @ - 256 , 4 + 266 , 37 @ @ 
 + { 
 + return ItemStack . field _ 190927 _ a ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + 
 + @ Nullable 
 + private net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession prof ; 
 + public void setForgeProfession ( net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession prof ) 
 @ @ - 20 , 13 + 61 , 26 @ @ 
 + this . func _ 190733 _ a ( net . minecraftforge . fml . common . registry . VillagerRegistry . getId ( prof ) ) ; 
 + } 
 + 
 - + @ Nullable 
 + public net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession getForgeProfession ( ) 
 + { 
 + + if ( this . prof = = null ) 
 + + { 
 + + this . prof = net . minecraftforge . fml . common . registry . VillagerRegistry . getById ( this . func _ 190736 _ dl ( ) ) ; 
 + + if ( this . prof = = null ) 
 + + return net . minecraftforge . fml . common . registry . VillagerRegistry . FARMER ; 
 + + } 
 + return this . prof ; 
 + } 
 + 
 + + @ Override 
 + + public void func _ 184206 _ a ( DataParameter < ? > key ) 
 + + { 
 + + super . func _ 184206 _ a ( key ) ; 
 + + if ( key . equals ( field _ 190739 _ c ) ) 
 + + { 
 + + net . minecraftforge . fml . common . registry . VillagerRegistry . onSetProfession ( this , this . field _ 70180 _ af . func _ 187225 _ a ( field _ 190739 _ c ) ) ; 
 + + } 
 + + } 
 + 
 - public void func _ 70071 _ h _ ( ) 
 - { 
 - if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & this . func _ 82230 _ o ( ) ) 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch 
 index 5d46c87 . . 7983c6c 100644 
 - - - a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch 
 @ @ - 51 , 7 + 51 , 8 @ @ 
 + @ Deprecated / / Use Forge Variant below 
 public int func _ 70946 _ n ( ) 
 { 
 - return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 184752 _ bw ) ) . intValue ( ) % 6 , 0 ) ; 
 + - return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 184752 _ bw ) ) . intValue ( ) % 6 , 0 ) ; 
 + + return Math . max ( ( ( Integer ) this . field _ 70180 _ af . func _ 187225 _ a ( field _ 184752 _ bw ) ) . intValue ( ) , 0 ) ; 
 } 
 
 + private net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession prof ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 index 91d3391 . . 08b7308 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 @ @ - 37 , 6 + 37 , 7 @ @ import net . minecraft . world . gen . structure . StructureComponent ; 
 import net . minecraft . world . gen . structure . StructureVillagePieces ; 
 import net . minecraft . world . gen . structure . StructureVillagePieces . PieceWeight ; 
 import net . minecraft . world . gen . structure . StructureVillagePieces . Village ; 
 + import net . minecraftforge . fml . common . registry . GameRegistry . ObjectHolder ; 
 
 import javax . annotation . Nullable ; 
 
 @ @ - 46 , 6 + 47 , 8 @ @ import javax . annotation . Nullable ; 
 public class VillagerRegistry 
 { 
 public static final ResourceLocation PROFESSIONS = new ResourceLocation ( " minecraft : villagerprofessions " ) ; 
 + @ ObjectHolder ( " minecraft : farmer " ) 
 + public static final VillagerProfession FARMER = null ; 
 private static final VillagerRegistry INSTANCE = new VillagerRegistry ( ) ; 
 
 private Map < Class < ? > , IVillageCreationHandler > villageCreationHandlers = Maps . newHashMap ( ) ; 
 diff - - git a / src / test / java / net / minecraftforge / test / VillagerProfessionTest . java b / src / test / java / net / minecraftforge / test / VillagerProfessionTest . java 
 new file mode 100644 
 index 0000000 . . 9468301 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / test / VillagerProfessionTest . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package net . minecraftforge . test ; 
 + 
 + import net . minecraftforge . event . RegistryEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerCareer ; 
 + import net . minecraftforge . fml . common . registry . VillagerRegistry . VillagerProfession ; 
 + 
 + @ Mod ( modid = " professiontest " , name = " ProfessionTest2000 " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + @ EventBusSubscriber 
 + public class VillagerProfessionTest 
 + { 
 + @ SubscribeEvent 
 + public static void registerVillagers ( RegistryEvent . Register < VillagerProfession > event ) 
 + { 
 + VillagerProfession profession = new VillagerProfession ( " professiontest : test _ villager " , " professiontest : textures / entity / test _ villager . png " , " professiontest : textures / entity / zombie _ test _ villager . png " ) ; 
 + new VillagerCareer ( profession , " professiontest : test _ villager " ) ; 
 + event . getRegistry ( ) . register ( profession ) ; 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / professiontest / textures / entity / test _ villager . png b / src / test / resources / assets / professiontest / textures / entity / test _ villager . png 
 new file mode 100644 
 index 0000000 . . c96f96f 
 Binary files / dev / null and b / src / test / resources / assets / professiontest / textures / entity / test _ villager . png differ 
 diff - - git a / src / test / resources / assets / professiontest / textures / entity / zombie _ test _ villager . png b / src / test / resources / assets / professiontest / textures / entity / zombie _ test _ villager . png 
 new file mode 100644 
 index 0000000 . . 4951a52 
 Binary files / dev / null and b / src / test / resources / assets / professiontest / textures / entity / zombie _ test _ villager . png differ

NEAREST DIFF:
diff - - git a / jsons / 1 . 11 . 2 . json b / jsons / 1 . 11 . 2 . json 
 index 5ff1eda . . d77a170 100644 
 - - - a / jsons / 1 . 11 . 2 . json 
 + + + b / jsons / 1 . 11 . 2 . json 
 @ @ - 242 , 13 + 242 , 13 @ @ 
 } 
 } , 
 { 
 - " name " : " com . mojang : realms : 1 . 10 . 8 " , 
 + " name " : " com . mojang : realms : 1 . 10 . 10 " , 
 " downloads " : { 
 " artifact " : { 
 - " size " : 3025164 , 
 - " sha1 " : " 67560bbd6a83d48ae8b956f1feac09010bde879c " , 
 - " path " : " com / mojang / realms / 1 . 10 . 8 / realms - 1 . 10 . 8 . jar " , 
 - " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 8 / realms - 1 . 10 . 8 . jar " 
 + " size " : 3031435 , 
 + " sha1 " : " 92d9ba93e1e99b75f2776062a5515f6aa88d9f10 " , 
 + " path " : " com / mojang / realms / 1 . 10 . 10 / realms - 1 . 10 . 10 . jar " , 
 + " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 10 / realms - 1 . 10 . 10 . jar " 
 } 
 } 
 } , 
 @ @ - 558 , 6 + 558 , 6 @ @ 
 " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , 
 " minimumLauncherVersion " : 18 , 
 " releaseTime " : " 2016 - 12 - 21T09 : 29 : 12 + 00 : 00 " , 
 - " time " : " 2016 - 12 - 21T09 : 42 : 21 + 00 : 00 " , 
 + " time " : " 2017 - 01 - 12T10 : 44 : 50 + 00 : 00 " , 
 " type " : " release " 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 index 869bb9f . . 124d3f1 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 @ @ - 63 , 16 + 63 , 25 @ @ 
 @ Nullable 
 public static Entity func _ 191304 _ a ( @ Nullable Class < ? extends Entity > p _ 191304 _ 0 _ , World p _ 191304 _ 1 _ ) 
 { 
 - @ @ - 174 , 7 + 186 , 7 @ @ 
 + @ @ - 168 , 13 + 180 , 15 @ @ 
 + @ SideOnly ( Side . CLIENT ) 
 + public static Entity func _ 75616 _ a ( int p _ 75616 _ 0 _ , World p _ 75616 _ 1 _ ) 
 + { 
 + - return func _ 191304 _ a ( func _ 90035 _ a ( p _ 75616 _ 0 _ ) , p _ 75616 _ 1 _ ) ; 
 + + net . minecraftforge . fml . common . registry . EntityEntry entry = net . minecraftforge . fml . common . registry . GameData . getEntityRegistry ( ) . func _ 148754 _ a ( p _ 75616 _ 0 _ ) ; 
 + + return entry = = null ? null : entry . newInstance ( p _ 75616 _ 1 _ ) ; 
 + } 
 + 
 @ Nullable 
 public static Entity func _ 188429 _ b ( ResourceLocation p _ 188429 _ 0 _ , World p _ 188429 _ 1 _ ) 
 { 
 - return func _ 191304 _ a ( ( Class ) field _ 191308 _ b . func _ 82594 _ a ( p _ 188429 _ 0 _ ) , p _ 188429 _ 1 _ ) ; 
 - + return func _ 191304 _ a ( getClass ( p _ 188429 _ 0 _ ) , p _ 188429 _ 1 _ ) ; 
 + + net . minecraftforge . fml . common . registry . EntityEntry entry = net . minecraftforge . fml . common . registry . ForgeRegistries . ENTITIES . getValue ( p _ 188429 _ 0 _ ) ; 
 + + return entry = = null ? null : entry . newInstance ( p _ 188429 _ 1 _ ) ; 
 } 
 
 @ Nullable 
 - @ @ - 189 , 7 + 201 , 17 @ @ 
 + @ @ - 189 , 7 + 203 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 90 , 7 + 99 , 7 @ @ 
 } 
 
 return entity ; 
 - @ @ - 197 , 7 + 219 , 7 @ @ 
 + @ @ - 197 , 7 + 221 , 7 @ @ 
 
 public static Set < ResourceLocation > func _ 180124 _ b ( ) 
 { 
 @ @ - 99 , 7 + 108 , 7 @ @ 
 } 
 
 public static boolean func _ 180123 _ a ( Entity p _ 180123 _ 0 _ , ResourceLocation p _ 180123 _ 1 _ ) 
 - @ @ - 336 , 7 + 358 , 7 @ @ 
 + @ @ - 336 , 7 + 360 , 7 @ @ 
 func _ 191305 _ a ( " zombie _ horse " , 3232308 , 9945732 ) ; 
 func _ 191305 _ a ( " zombie _ pigman " , 15373203 , 5009705 ) ; 
 func _ 191305 _ a ( " zombie _ villager " , 5651507 , 7969893 ) ; 
 @ @ - 108 , 7 + 117 , 7 @ @ 
 } 
 
 private static void func _ 191303 _ a ( int p _ 191303 _ 0 _ , String p _ 191303 _ 1 _ , Class < ? extends Entity > p _ 191303 _ 2 _ , String p _ 191303 _ 3 _ ) 
 - @ @ - 357 , 22 + 379 , 19 @ @ 
 + @ @ - 357 , 22 + 381 , 19 @ @ 
 else 
 { 
 ResourceLocation resourcelocation = new ResourceLocation ( p _ 191303 _ 1 _ ) ; 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 index 525af1f . . fbeb2bf 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 @ @ - 20 , 6 + 20 , 15 @ @ 
 { 
 BlockPos blockpos = func _ 180621 _ a ( p _ 77192 _ 1 _ , chunkpos1 . field _ 77276 _ a , chunkpos1 . field _ 77275 _ b ) ; 
 int k1 = blockpos . func _ 177958 _ n ( ) ; 
 + @ @ - 136 , 7 + 138 , 7 @ @ 
 + 
 + try 
 + { 
 + - entityliving = ( EntityLiving ) biome $ spawnlistentry . field _ 76300 _ b . getConstructor ( new Class [ ] { World . class } ) . newInstance ( new Object [ ] { p _ 77192 _ 1 _ } ) ; 
 + + entityliving = ( EntityLiving ) biome $ spawnlistentry . newInstance ( p _ 77192 _ 1 _ ) ; 
 + } 
 + catch ( Exception exception ) 
 + { 
 @ @ - 146 , 8 + 148 , 10 @ @ 
 
 entityliving . func _ 70012 _ b ( ( double ) f , ( double ) i3 , ( double ) f1 , p _ 77192 _ 1 _ . field _ 73012 _ v . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; 
 @ @ - 52 , 3 + 61 , 12 @ @ 
 { 
 return false ; 
 } 
 + @ @ - 258 , 7 + 263 , 7 @ @ 
 + 
 + try 
 + { 
 + - entityliving = ( EntityLiving ) biome $ spawnlistentry . field _ 76300 _ b . getConstructor ( new Class [ ] { World . class } ) . newInstance ( new Object [ ] { p _ 77191 _ 0 _ } ) ; 
 + + entityliving = ( EntityLiving ) biome $ spawnlistentry . newInstance ( p _ 77191 _ 0 _ ) ; 
 + } 
 + catch ( Exception exception ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / world / biome / Biome . java . patch b / patches / minecraft / net / minecraft / world / biome / Biome . java . patch 
 index b852758 . . 0b7a84f 100644 
 - - - a / patches / minecraft / net / minecraft / world / biome / Biome . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / biome / Biome . java . patch 
 @ @ - 154 , 3 + 154 , 40 @ @ 
 public static void func _ 185358 _ q ( ) 
 { 
 func _ 185354 _ a ( 0 , " ocean " , new BiomeOcean ( ( new Biome . BiomeProperties ( " Ocean " ) ) . func _ 185398 _ c ( - 1 . 0F ) . func _ 185400 _ d ( 0 . 1F ) ) ) ; 
 + @ @ - 549 , 6 + 631 , 7 @ @ 
 + public Class < ? extends EntityLiving > field _ 76300 _ b ; 
 + public int field _ 76301 _ c ; 
 + public int field _ 76299 _ d ; 
 + + private final java . lang . reflect . Constructor < ? > ctr ; 
 + 
 + public SpawnListEntry ( Class < ? extends EntityLiving > p _ i1970 _ 1 _ , int p _ i1970 _ 2 _ , int p _ i1970 _ 3 _ , int p _ i1970 _ 4 _ ) 
 + { 
 + @ @ - 556 , 12 + 639 , 28 @ @ 
 + this . field _ 76300 _ b = p _ i1970 _ 1 _ ; 
 + this . field _ 76301 _ c = p _ i1970 _ 3 _ ; 
 + this . field _ 76299 _ d = p _ i1970 _ 4 _ ; 
 + + 
 + + java . lang . reflect . Constructor < ? > tmp = null ; 
 + + try 
 + + { 
 + + tmp = p _ i1970 _ 1 _ . getConstructor ( World . class ) ; 
 + + } 
 + + catch ( NoSuchMethodException e ) 
 + + { 
 + + com . google . common . base . Throwables . propagate ( e ) ; 
 + + } 
 + + ctr = tmp ; 
 + } 
 + 
 + public String toString ( ) 
 + { 
 + return this . field _ 76300 _ b . getSimpleName ( ) + " * ( " + this . field _ 76301 _ c + " - " + this . field _ 76299 _ d + " ) : " + this . field _ 76292 _ a ; 
 + } 
 + + 
 + + public EntityLiving newInstance ( World world ) throws Exception 
 + + { 
 + + return ( EntityLiving ) ctr . newInstance ( world ) ; 
 + + } 
 + } 
 + 
 + public static enum TempCategory 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java 
 index 2447cdd . . a454734 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntry . java 
 @ @ - 18 , 9 + 18 , 15 @ @ 
 * / 
 package net . minecraftforge . fml . common . registry ; 
 
 + import java . lang . reflect . Constructor ; 
 + import java . lang . reflect . InvocationTargetException ; 
 + 
 + import com . google . common . base . Throwables ; 
 + 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . EntityList ; 
 import net . minecraft . entity . EntityList . EntityEggInfo ; 
 + import net . minecraft . world . World ; 
 import net . minecraftforge . fml . common . registry . IForgeRegistryEntry . Impl ; 
 
 public class EntityEntry extends Impl < EntityEntry > 
 @ @ - 28 , 11 + 34 , 30 @ @ public class EntityEntry extends Impl < EntityEntry > 
 private Class < ? extends Entity > cls ; 
 private String name ; 
 private EntityEggInfo egg ; 
 + private Constructor < ? > ctr ; 
 
 public EntityEntry ( Class < ? extends Entity > cls , String name ) 
 { 
 this . cls = cls ; 
 this . name = name ; 
 + init ( ) ; 
 + } 
 + 
 + / / Protected method , to make this optional , in case people subclass this to have a better factory . 
 + protected void init ( ) 
 + { 
 + try 
 + { 
 + this . ctr = this . cls . getConstructor ( World . class ) ; 
 + } 
 + catch ( NoSuchMethodException e ) 
 + { 
 + throw new RuntimeException ( " Invalid class " + this . cls + " no constructor taking " + World . class . getName ( ) ) ; 
 + } 
 + catch ( SecurityException e ) 
 + { 
 + Throwables . propagate ( e ) ; 
 + } 
 } 
 
 public Class < ? extends Entity > getEntityClass ( ) { return this . cls ; } 
 @ @ - 45 , 4 + 70 , 17 @ @ public class EntityEntry extends Impl < EntityEntry > 
 if ( this . getRegistryName ( ) ! = null ) 
 EntityList . ENTITY _ EGGS . put ( this . getRegistryName ( ) , egg ) ; 
 } 
 + 
 + public Entity newInstance ( World world ) 
 + { 
 + try 
 + { 
 + return ( Entity ) this . ctr . newInstance ( world ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + e . printStackTrace ( ) ; 
 + return null ; 
 + } 
 + } 
 } 
 diff - - git a / src / test / java / net / minecraftforge / test / CustomSpriteTest . java b / src / test / java / net / minecraftforge / test / CustomSpriteTest . java 
 index 29329c3 . . 5841691 100644 
 - - - a / src / test / java / net / minecraftforge / test / CustomSpriteTest . java 
 + + + b / src / test / java / net / minecraftforge / test / CustomSpriteTest . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import java . io . IOException ; 
 / * * 
 * Test for { @ link TextureStitchEvent . Pre } . 
 * / 
 - @ Mod ( modid = CustomSpriteTest . MOD _ ID , name = CustomSpriteTest . NAME , version = " 1 . 0 " ) 
 + @ Mod ( modid = CustomSpriteTest . MOD _ ID , name = CustomSpriteTest . NAME , version = " 1 . 0 " , clientSideOnly = true ) 
 public class CustomSpriteTest 
 { 
 static final String MOD _ ID = " custom _ sprite _ test " ; 
 @ @ - 95 , 4 + 95 , 4 @ @ public class CustomSpriteTest 
 return false ; 
 } 
 } 
 - } 
 \ No newline at end of file 
 + }
