BLEU SCORE: 0.0379680177759557

TEST MSG: Update NoteBlockEvent with new instruments . Resolves # 4018 .
GENERATED MSG: Fix World Capabilities NPE when there are no attached capabilities .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java b / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java <nl> index a677190 . . c4999d5 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java <nl> @ @ - 143 , 14 + 143 , 19 @ @ public class NoteBlockEvent extends BlockEvent <nl> BASSDRUM , <nl> SNARE , <nl> CLICKS , <nl> - BASSGUITAR ; <nl> + BASSGUITAR , <nl> + FLUTE , <nl> + BELL , <nl> + GUITAR , <nl> + CHIME , <nl> + XYLOPHONE ; <nl> <nl> / / cache to avoid creating a new array every time <nl> private static final Instrument [ ] values = values ( ) ; <nl> <nl> static Instrument fromId ( int id ) <nl> { <nl> - return id < 0 | | id > 4 ? PIANO : values [ id ] ; <nl> + return id < 0 | | id > = values . length ? PIANO : values [ id ] ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java b / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java <nl> index 8ffff90 . . d0a6716 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ public class WorldCapabilityData extends WorldSavedData <nl> public void readFromNBT ( NBTTagCompound nbt ) <nl> { <nl> this . capNBT = nbt ; <nl> - if ( serializable ! = null ) <nl> + if ( serializable ! = null ) <nl> { <nl> serializable . deserializeNBT ( this . capNBT ) ; <nl> this . capNBT = null ; <nl> @ @ - 36 , 7 + 36 , 9 @ @ public class WorldCapabilityData extends WorldSavedData <nl> @ Override <nl> public NBTTagCompound writeToNBT ( NBTTagCompound nbt ) <nl> { <nl> - return nbt = serializable . serializeNBT ( ) ; <nl> + if ( serializable ! = null ) <nl> + nbt = serializable . serializeNBT ( ) ; <nl> + return nbt ; <nl> } <nl> <nl> @ Override <nl> @ @ - 48 , 7 + 50 , 7 @ @ public class WorldCapabilityData extends WorldSavedData <nl> public void setCapabilities ( WorldProvider provider , INBTSerializable < NBTTagCompound > capabilities ) <nl> { <nl> this . serializable = capabilities ; <nl> - if ( this . capNBT ! = null ) <nl> + if ( this . capNBT ! = null ) <nl> { <nl> serializable . deserializeNBT ( this . capNBT ) ; <nl> this . capNBT = null ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 7593041 . . 8f8043c 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 489 , 7 + 489 , 7 @ @ public class ForgeEventFactory <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; <nl> } <nl> - <nl> + <nl> public static void onPlayerBrewedPotion ( EntityPlayer player , ItemStack stack ) <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new PlayerBrewedPotionEvent ( player , stack ) ) ; <nl> @ @ - 525 , 7 + 525 , 8 @ @ public class ForgeEventFactory <nl> return gatherCapabilities ( new AttachCapabilitiesEvent . Item ( item , stack ) , parent ) ; <nl> } <nl> <nl> - public static CapabilityDispatcher gatherCapabilities ( World world , ICapabilityProvider parent ) { <nl> + public static CapabilityDispatcher gatherCapabilities ( World world , ICapabilityProvider parent ) <nl> + { <nl> return gatherCapabilities ( new AttachCapabilitiesEvent . World ( world ) , parent ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java <nl> index 2b081bc . . 9a77439 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java <nl> @ @ - 74 , 8 + 74 , 11 @ @ public class NoBedSleepingTest <nl> public static class EventHandler <nl> { <nl> @ SubscribeEvent <nl> - public void onEntityConstruct ( AttachCapabilitiesEvent evt ) <nl> + public void onEntityConstruct ( AttachCapabilitiesEvent . Entity evt ) <nl> { <nl> + if ( ! ( evt . getEntity ( ) instanceof EntityPlayer ) ) <nl> + return ; <nl> + <nl> evt . addCapability ( new ResourceLocation ( MODID , " IExtraSleeping " ) , new ICapabilitySerializable < NBTPrimitive > ( ) <nl> { <nl> IExtraSleeping inst = SLEEP _ CAP . getDefaultInstance ( ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java b / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java <nl> index bc1a348 . . 7e50353 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java <nl> @ @ - 1 , 16 + 1 , 9 @ @ <nl> package net . minecraftforge . test ; <nl> <nl> - import java . util . Map ; <nl> - import java . util . Set ; <nl> - <nl> - import com . google . common . collect . Maps ; <nl> - <nl> import net . minecraft . nbt . NBTBase ; <nl> import net . minecraft . nbt . NBTTagCompound ; <nl> - import net . minecraft . nbt . NBTTagIntArray ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . ResourceLocation ; <nl> - import net . minecraft . world . storage . WorldInfo ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . capabilities . Capability ; <nl> import net . minecraftforge . common . capabilities . Capability . IStorage ; <nl> @ @ - 44 , 7 + 37 , 8 @ @ public class WorldCapabilityRainTimerTest { <nl> @ SubscribeEvent <nl> public void attatchTimer ( AttachCapabilitiesEvent . World event ) <nl> { <nl> - event . addCapability ( new ResourceLocation ( MODID , " rainTimer " ) , new RainTimerProvider ( ) ) ; <nl> + if ( ! event . getWorld ( ) . isRemote & & ! event . getWorld ( ) . provider . getHasNoSky ( ) ) <nl> + event . addCapability ( new ResourceLocation ( MODID , " rainTimer " ) , new RainTimerProvider ( ) ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> @ @ - 55 , 18 + 49 , 22 @ @ public class WorldCapabilityRainTimerTest { <nl> <nl> IRainTimer timer = event . world . getCapability ( TIMER _ CAP , null ) ; <nl> <nl> - if ( event . phase = = TickEvent . Phase . END ) <nl> + if ( timer = = null ) <nl> + return ; <nl> + <nl> + if ( event . phase = = TickEvent . Phase . END ) <nl> timer . onTick ( ) ; <nl> <nl> - if ( event . phase = = TickEvent . Phase . START ) <nl> + if ( event . phase = = TickEvent . Phase . START ) <nl> { <nl> - if ( ! event . world . provider . getHasNoSky ( ) & & event . world . isRaining ( ) ) <nl> + if ( event . world . isRaining ( ) ) <nl> { <nl> - if ( timer . getDuration ( ) = = 0 ) <nl> + if ( timer . getDuration ( ) = = 0 ) <nl> timer . refreshTimer ( 1000 , 0 ) ; <nl> - else if ( timer . isTimerReachedDuration ( ) ) <nl> + else if ( timer . isTimerReachedDuration ( ) ) <nl> event . world . provider . resetRainAndThunder ( ) ; <nl> - } else <nl> + } <nl> + else <nl> timer . refreshTimer ( 0 , 0 ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java b / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java 
 index a677190 . . c4999d5 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / NoteBlockEvent . java 
 @ @ - 143 , 14 + 143 , 19 @ @ public class NoteBlockEvent extends BlockEvent 
 BASSDRUM , 
 SNARE , 
 CLICKS , 
 - BASSGUITAR ; 
 + BASSGUITAR , 
 + FLUTE , 
 + BELL , 
 + GUITAR , 
 + CHIME , 
 + XYLOPHONE ; 
 
 / / cache to avoid creating a new array every time 
 private static final Instrument [ ] values = values ( ) ; 
 
 static Instrument fromId ( int id ) 
 { 
 - return id < 0 | | id > 4 ? PIANO : values [ id ] ; 
 + return id < 0 | | id > = values . length ? PIANO : values [ id ] ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java b / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java 
 index 8ffff90 . . d0a6716 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java 
 + + + b / src / main / java / net / minecraftforge / common / util / WorldCapabilityData . java 
 @ @ - 26 , 7 + 26 , 7 @ @ public class WorldCapabilityData extends WorldSavedData 
 public void readFromNBT ( NBTTagCompound nbt ) 
 { 
 this . capNBT = nbt ; 
 - if ( serializable ! = null ) 
 + if ( serializable ! = null ) 
 { 
 serializable . deserializeNBT ( this . capNBT ) ; 
 this . capNBT = null ; 
 @ @ - 36 , 7 + 36 , 9 @ @ public class WorldCapabilityData extends WorldSavedData 
 @ Override 
 public NBTTagCompound writeToNBT ( NBTTagCompound nbt ) 
 { 
 - return nbt = serializable . serializeNBT ( ) ; 
 + if ( serializable ! = null ) 
 + nbt = serializable . serializeNBT ( ) ; 
 + return nbt ; 
 } 
 
 @ Override 
 @ @ - 48 , 7 + 50 , 7 @ @ public class WorldCapabilityData extends WorldSavedData 
 public void setCapabilities ( WorldProvider provider , INBTSerializable < NBTTagCompound > capabilities ) 
 { 
 this . serializable = capabilities ; 
 - if ( this . capNBT ! = null ) 
 + if ( this . capNBT ! = null ) 
 { 
 serializable . deserializeNBT ( this . capNBT ) ; 
 this . capNBT = null ; 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 7593041 . . 8f8043c 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 489 , 7 + 489 , 7 @ @ public class ForgeEventFactory 
 { 
 MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; 
 } 
 - 
 + 
 public static void onPlayerBrewedPotion ( EntityPlayer player , ItemStack stack ) 
 { 
 MinecraftForge . EVENT _ BUS . post ( new PlayerBrewedPotionEvent ( player , stack ) ) ; 
 @ @ - 525 , 7 + 525 , 8 @ @ public class ForgeEventFactory 
 return gatherCapabilities ( new AttachCapabilitiesEvent . Item ( item , stack ) , parent ) ; 
 } 
 
 - public static CapabilityDispatcher gatherCapabilities ( World world , ICapabilityProvider parent ) { 
 + public static CapabilityDispatcher gatherCapabilities ( World world , ICapabilityProvider parent ) 
 + { 
 return gatherCapabilities ( new AttachCapabilitiesEvent . World ( world ) , parent ) ; 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java 
 index 2b081bc . . 9a77439 100644 
 - - - a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java 
 + + + b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java 
 @ @ - 74 , 8 + 74 , 11 @ @ public class NoBedSleepingTest 
 public static class EventHandler 
 { 
 @ SubscribeEvent 
 - public void onEntityConstruct ( AttachCapabilitiesEvent evt ) 
 + public void onEntityConstruct ( AttachCapabilitiesEvent . Entity evt ) 
 { 
 + if ( ! ( evt . getEntity ( ) instanceof EntityPlayer ) ) 
 + return ; 
 + 
 evt . addCapability ( new ResourceLocation ( MODID , " IExtraSleeping " ) , new ICapabilitySerializable < NBTPrimitive > ( ) 
 { 
 IExtraSleeping inst = SLEEP _ CAP . getDefaultInstance ( ) ; 
 diff - - git a / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java b / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java 
 index bc1a348 . . 7e50353 100644 
 - - - a / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java 
 + + + b / src / test / java / net / minecraftforge / test / WorldCapabilityRainTimerTest . java 
 @ @ - 1 , 16 + 1 , 9 @ @ 
 package net . minecraftforge . test ; 
 
 - import java . util . Map ; 
 - import java . util . Set ; 
 - 
 - import com . google . common . collect . Maps ; 
 - 
 import net . minecraft . nbt . NBTBase ; 
 import net . minecraft . nbt . NBTTagCompound ; 
 - import net . minecraft . nbt . NBTTagIntArray ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . ResourceLocation ; 
 - import net . minecraft . world . storage . WorldInfo ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . capabilities . Capability ; 
 import net . minecraftforge . common . capabilities . Capability . IStorage ; 
 @ @ - 44 , 7 + 37 , 8 @ @ public class WorldCapabilityRainTimerTest { 
 @ SubscribeEvent 
 public void attatchTimer ( AttachCapabilitiesEvent . World event ) 
 { 
 - event . addCapability ( new ResourceLocation ( MODID , " rainTimer " ) , new RainTimerProvider ( ) ) ; 
 + if ( ! event . getWorld ( ) . isRemote & & ! event . getWorld ( ) . provider . getHasNoSky ( ) ) 
 + event . addCapability ( new ResourceLocation ( MODID , " rainTimer " ) , new RainTimerProvider ( ) ) ; 
 } 
 
 @ SubscribeEvent 
 @ @ - 55 , 18 + 49 , 22 @ @ public class WorldCapabilityRainTimerTest { 
 
 IRainTimer timer = event . world . getCapability ( TIMER _ CAP , null ) ; 
 
 - if ( event . phase = = TickEvent . Phase . END ) 
 + if ( timer = = null ) 
 + return ; 
 + 
 + if ( event . phase = = TickEvent . Phase . END ) 
 timer . onTick ( ) ; 
 
 - if ( event . phase = = TickEvent . Phase . START ) 
 + if ( event . phase = = TickEvent . Phase . START ) 
 { 
 - if ( ! event . world . provider . getHasNoSky ( ) & & event . world . isRaining ( ) ) 
 + if ( event . world . isRaining ( ) ) 
 { 
 - if ( timer . getDuration ( ) = = 0 ) 
 + if ( timer . getDuration ( ) = = 0 ) 
 timer . refreshTimer ( 1000 , 0 ) ; 
 - else if ( timer . isTimerReachedDuration ( ) ) 
 + else if ( timer . isTimerReachedDuration ( ) ) 
 event . world . provider . resetRainAndThunder ( ) ; 
 - } else 
 + } 
 + else 
 timer . refreshTimer ( 0 , 0 ) ; 
 } 
 }
