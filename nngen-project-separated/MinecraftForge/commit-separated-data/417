BLEU SCORE: 0.19493995755254476

TEST MSG: Fix MissingMapping REMAP action . Closes # 4069
GENERATED MSG: Fix NPE in MissingMappings event . Closes # 4067

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / event / RegistryEvent . java b / src / main / java / net / minecraftforge / event / RegistryEvent . java <nl> index 2a7168a . . 9c88136 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / RegistryEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / RegistryEvent . java <nl> @ @ - 159 , 14 + 159 , 16 @ @ public class RegistryEvent < T extends IForgeRegistryEntry < T > > extends GenericEven <nl> public static class Mapping < T extends IForgeRegistryEntry < T > > <nl> { <nl> public final IForgeRegistry < T > registry ; <nl> + private final IForgeRegistry < T > pool ; <nl> public final ResourceLocation key ; <nl> public final int id ; <nl> private Action action = Action . DEFAULT ; <nl> private T target ; <nl> <nl> - public Mapping ( IForgeRegistry < T > registry , ResourceLocation key , int id ) <nl> + public Mapping ( IForgeRegistry < T > registry , IForgeRegistry < T > pool , ResourceLocation key , int id ) <nl> { <nl> this . registry = registry ; <nl> + this . pool = pool ; <nl> this . key = key ; <nl> this . id = id ; <nl> } <nl> @ @ - 206 , 7 + 208 , 7 @ @ public class RegistryEvent < T extends IForgeRegistryEntry < T > > extends GenericEven <nl> public void remap ( T target ) <nl> { <nl> Validate . notNull ( target , " Remap target can not be null " ) ; <nl> - Validate . isTrue ( registry . getKey ( target ) ! = null , String . format ( " The specified entry % s hasn ' t been registered in registry yet . " , target ) ) ; <nl> + Validate . isTrue ( pool . getKey ( target ) ! = null , String . format ( " The specified entry % s hasn ' t been registered in registry yet . " , target ) ) ; <nl> action = Action . REMAP ; <nl> this . target = target ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> index aeabee6 . . 3718ad1 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> @ @ - 751 , 7 + 751 , 8 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe <nl> public MissingMappings < ? > getMissingEvent ( ResourceLocation name , Map < ResourceLocation , Integer > map ) <nl> { <nl> List < MissingMappings . Mapping < V > > lst = Lists . newArrayList ( ) ; <nl> - map . forEach ( ( rl , id ) - > lst . add ( new MissingMappings . Mapping < V > ( this , rl , id ) ) ) ; <nl> + ForgeRegistry < V > pool = RegistryManager . ACTIVE . getRegistry ( name ) ; <nl> + map . forEach ( ( rl , id ) - > lst . add ( new MissingMappings . Mapping < V > ( this , pool , rl , id ) ) ) ; <nl> return new MissingMappings < V > ( name , this , lst ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / event / RegistryEvent . java b / src / main / java / net / minecraftforge / event / RegistryEvent . java <nl> index 9d0ebba . . 2a7168a 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / RegistryEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / RegistryEvent . java <nl> @ @ - 99 , 6 + 99 , 11 @ @ public class RegistryEvent < T extends IForgeRegistryEntry < T > > extends GenericEven <nl> this . mappings = ImmutableList . copyOf ( missed ) ; <nl> } <nl> <nl> + public void setModContainer ( ModContainer mod ) <nl> + { <nl> + this . activeMod = mod ; <nl> + } <nl> + <nl> public ResourceLocation getName ( ) <nl> { <nl> return this . name ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / event / RegistryEvent . java b / src / main / java / net / minecraftforge / event / RegistryEvent . java 
 index 2a7168a . . 9c88136 100644 
 - - - a / src / main / java / net / minecraftforge / event / RegistryEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / RegistryEvent . java 
 @ @ - 159 , 14 + 159 , 16 @ @ public class RegistryEvent < T extends IForgeRegistryEntry < T > > extends GenericEven 
 public static class Mapping < T extends IForgeRegistryEntry < T > > 
 { 
 public final IForgeRegistry < T > registry ; 
 + private final IForgeRegistry < T > pool ; 
 public final ResourceLocation key ; 
 public final int id ; 
 private Action action = Action . DEFAULT ; 
 private T target ; 
 
 - public Mapping ( IForgeRegistry < T > registry , ResourceLocation key , int id ) 
 + public Mapping ( IForgeRegistry < T > registry , IForgeRegistry < T > pool , ResourceLocation key , int id ) 
 { 
 this . registry = registry ; 
 + this . pool = pool ; 
 this . key = key ; 
 this . id = id ; 
 } 
 @ @ - 206 , 7 + 208 , 7 @ @ public class RegistryEvent < T extends IForgeRegistryEntry < T > > extends GenericEven 
 public void remap ( T target ) 
 { 
 Validate . notNull ( target , " Remap target can not be null " ) ; 
 - Validate . isTrue ( registry . getKey ( target ) ! = null , String . format ( " The specified entry % s hasn ' t been registered in registry yet . " , target ) ) ; 
 + Validate . isTrue ( pool . getKey ( target ) ! = null , String . format ( " The specified entry % s hasn ' t been registered in registry yet . " , target ) ) ; 
 action = Action . REMAP ; 
 this . target = target ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 index aeabee6 . . 3718ad1 100644 
 - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 @ @ - 751 , 7 + 751 , 8 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe 
 public MissingMappings < ? > getMissingEvent ( ResourceLocation name , Map < ResourceLocation , Integer > map ) 
 { 
 List < MissingMappings . Mapping < V > > lst = Lists . newArrayList ( ) ; 
 - map . forEach ( ( rl , id ) - > lst . add ( new MissingMappings . Mapping < V > ( this , rl , id ) ) ) ; 
 + ForgeRegistry < V > pool = RegistryManager . ACTIVE . getRegistry ( name ) ; 
 + map . forEach ( ( rl , id ) - > lst . add ( new MissingMappings . Mapping < V > ( this , pool , rl , id ) ) ) ; 
 return new MissingMappings < V > ( name , this , lst ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / event / RegistryEvent . java b / src / main / java / net / minecraftforge / event / RegistryEvent . java 
 index 9d0ebba . . 2a7168a 100644 
 - - - a / src / main / java / net / minecraftforge / event / RegistryEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / RegistryEvent . java 
 @ @ - 99 , 6 + 99 , 11 @ @ public class RegistryEvent < T extends IForgeRegistryEntry < T > > extends GenericEven 
 this . mappings = ImmutableList . copyOf ( missed ) ; 
 } 
 
 + public void setModContainer ( ModContainer mod ) 
 + { 
 + this . activeMod = mod ; 
 + } 
 + 
 public ResourceLocation getName ( ) 
 { 
 return this . name ;
