BLEU SCORE: 0.021671320168371845

TEST MSG: Cleanup mod state dump to be easier to read by displaying the states in abreviation and placing them before the mod info .
GENERATED MSG: Try harder to find a mod container .

TEST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoadController . java b / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> index 0edfe92 . . 3c4802a 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> @ @ - 266 , 10 + 266 , 17 @ @ public class LoadController <nl> <nl> public void printModStates ( StringBuilder ret ) <nl> { <nl> + ret . append ( " \ n \ tStates : " ) ; <nl> + for ( ModState state : ModState . values ( ) ) <nl> + ret . append ( " ' " ) . append ( state . getMarker ( ) ) . append ( " ' = " ) . append ( state . toString ( ) ) ; <nl> + <nl> for ( ModContainer mc : loader . getModList ( ) ) <nl> { <nl> - ret . append ( " \ n \ t " ) . append ( mc . getModId ( ) ) . append ( " { " ) . append ( mc . getVersion ( ) ) . append ( " } [ " ) . append ( mc . getName ( ) ) . append ( " ] ( " ) . append ( mc . getSource ( ) . getName ( ) ) . append ( " ) " ) ; <nl> - Joiner . on ( " - > " ) . appendTo ( ret , modStates . get ( mc . getModId ( ) ) ) ; <nl> + ret . append ( " \ n \ t " ) ; <nl> + for ( ModState state : modStates . get ( mc . getModId ( ) ) ) <nl> + ret . append ( state . getMarker ( ) ) ; <nl> + <nl> + ret . append ( " \ t " ) . append ( mc . getModId ( ) ) . append ( " { " ) . append ( mc . getVersion ( ) ) . append ( " } [ " ) . append ( mc . getName ( ) ) . append ( " ] ( " ) . append ( mc . getSource ( ) . getName ( ) ) . append ( " ) " ) ; <nl> } <nl> } <nl> <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoaderState . java b / fml / src / main / java / cpw / mods / fml / common / LoaderState . java <nl> index 8fc2663 . . cb30ba2 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / LoaderState . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / LoaderState . java <nl> @ @ - 95 , 21 + 95 , 23 @ @ public enum LoaderState <nl> } <nl> public enum ModState <nl> { <nl> - UNLOADED ( " Unloaded " ) , <nl> - LOADED ( " Loaded " ) , <nl> - CONSTRUCTED ( " Constructed " ) , <nl> - PREINITIALIZED ( " Pre - initialized " ) , <nl> - INITIALIZED ( " Initialized " ) , <nl> - POSTINITIALIZED ( " Post - initialized " ) , <nl> - AVAILABLE ( " Available " ) , <nl> - DISABLED ( " Disabled " ) , <nl> - ERRORED ( " Errored " ) ; <nl> + UNLOADED ( " Unloaded " , " U " ) , <nl> + LOADED ( " Loaded " , " L " ) , <nl> + CONSTRUCTED ( " Constructed " , " C " ) , <nl> + PREINITIALIZED ( " Pre - initialized " , " H " ) , <nl> + INITIALIZED ( " Initialized " , " I " ) , <nl> + POSTINITIALIZED ( " Post - initialized " , " J " ) , <nl> + AVAILABLE ( " Available " , " A " ) , <nl> + DISABLED ( " Disabled " , " D " ) , <nl> + ERRORED ( " Errored " , " E " ) ; <nl> <nl> private String label ; <nl> + private String marker ; <nl> <nl> - private ModState ( String label ) <nl> + private ModState ( String label , String marker ) <nl> { <nl> this . label = label ; <nl> + this . marker = marker ; <nl> } <nl> <nl> @ Override <nl> @ @ - 117 , 5 + 119 , 10 @ @ public enum LoaderState <nl> { <nl> return this . label ; <nl> } <nl> + <nl> + public String getMarker ( ) <nl> + { <nl> + return this . marker ; <nl> + } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java b / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java <nl> index 95bac54 . . b77e137 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> import com . google . common . eventbus . EventBus ; <nl> <nl> import cpw . mods . fml . common . versioning . ArtifactVersion ; <nl> @ @ - 193 , 4 + 194 , 10 @ @ public class DummyModContainer implements ModContainer <nl> { <nl> return null ; <nl> } <nl> + <nl> + @ Override <nl> + public List < String > getOwnedPackages ( ) <nl> + { <nl> + return ImmutableList . of ( ) ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java b / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java <nl> index f2c6079 . . ff6ed96 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java <nl> @ @ - 624 , 4 + 624 , 10 @ @ public class FMLModContainer implements ModContainer <nl> { <nl> return ( String ) descriptor . get ( " guiFactory " ) ; <nl> } <nl> + <nl> + @ Override <nl> + public List < String > getOwnedPackages ( ) <nl> + { <nl> + return candidate . getContainedPackages ( ) ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java b / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java <nl> index 1907f43 . . 5da03c6 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java <nl> @ @ - 195 , 4 + 195 , 10 @ @ public class InjectedModContainer implements ModContainer <nl> { <nl> return wrappedContainer . getGuiClassName ( ) ; <nl> } <nl> + <nl> + @ Override <nl> + public List < String > getOwnedPackages ( ) <nl> + { <nl> + return wrappedContainer . getOwnedPackages ( ) ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoadController . java b / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> index 826cab7 . . 1f61310 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import com . google . common . collect . ImmutableBiMap ; <nl> import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . collect . ImmutableMap . Builder ; <nl> import com . google . common . collect . Iterables ; <nl> + import com . google . common . collect . ListMultimap ; <nl> import com . google . common . collect . Lists ; <nl> import com . google . common . collect . Maps ; <nl> import com . google . common . collect . Multimap ; <nl> @ @ - 55 , 6 + 56 , 7 @ @ public class LoadController <nl> private List < ModContainer > activeModList = Lists . newArrayList ( ) ; <nl> private ModContainer activeContainer ; <nl> private BiMap < ModContainer , Object > modObjectList ; <nl> + private ListMultimap < String , ModContainer > packageOwners ; <nl> <nl> public LoadController ( Loader loader ) <nl> { <nl> @ @ - 63 , 7 + 65 , 7 @ @ public class LoadController <nl> this . masterChannel . register ( this ) ; <nl> <nl> state = LoaderState . NOINIT ; <nl> - <nl> + packageOwners = ArrayListMultimap . create ( ) ; <nl> <nl> } <nl> <nl> @ @ - 171 , 7 + 173 , 7 @ @ public class LoadController <nl> <nl> public ModContainer activeContainer ( ) <nl> { <nl> - return activeContainer ; <nl> + return activeContainer ! = null ? activeContainer : findActiveContainerFromStack ( ) ; <nl> } <nl> <nl> @ Subscribe <nl> @ @ - 229 , 6 + 231 , 11 @ @ public class LoadController <nl> if ( ! mc . isImmutable ( ) & & mc . getMod ( ) ! = null ) <nl> { <nl> builder . put ( mc , mc . getMod ( ) ) ; <nl> + List < String > packages = mc . getOwnedPackages ( ) ; <nl> + for ( String pkg : packages ) <nl> + { <nl> + packageOwners . put ( pkg , mc ) ; <nl> + } <nl> } <nl> if ( mc . getMod ( ) = = null & & ! mc . isImmutable ( ) & & state ! = LoaderState . CONSTRUCTING ) <nl> { <nl> @ @ - 309 , 4 + 316 , 37 @ @ public class LoadController <nl> { <nl> this . state = newState ; <nl> } <nl> + <nl> + private ModContainer findActiveContainerFromStack ( ) <nl> + { <nl> + for ( Class < ? > c : getCallingStack ( ) ) <nl> + { <nl> + int idx = c . getName ( ) . lastIndexOf ( ' . ' ) ; <nl> + if ( idx = = - 1 ) <nl> + { <nl> + continue ; <nl> + } <nl> + String pkg = c . getName ( ) . substring ( 0 , idx ) ; <nl> + if ( packageOwners . containsKey ( pkg ) ) <nl> + { <nl> + return packageOwners . get ( pkg ) . get ( 0 ) ; <nl> + } <nl> + } <nl> + <nl> + return null ; <nl> + } <nl> + private FMLSecurityManager accessibleManager = new FMLSecurityManager ( ) ; <nl> + <nl> + class FMLSecurityManager extends SecurityManager <nl> + { <nl> + Class < ? > [ ] getStackClasses ( ) <nl> + { <nl> + return getClassContext ( ) ; <nl> + } <nl> + } <nl> + <nl> + Class < ? > [ ] getCallingStack ( ) <nl> + { <nl> + return accessibleManager . getStackClasses ( ) ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / ModContainer . java b / fml / src / main / java / cpw / mods / fml / common / ModContainer . java <nl> index 1641788 . . abed85d 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / ModContainer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / ModContainer . java <nl> @ @ - 145 , 4 + 145 , 6 @ @ public interface ModContainer <nl> Disableable canBeDisabled ( ) ; <nl> <nl> String getGuiClassName ( ) ; <nl> + <nl> + List < String > getOwnedPackages ( ) ; <nl> }

TEST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoadController . java b / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 index 0edfe92 . . 3c4802a 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 @ @ - 266 , 10 + 266 , 17 @ @ public class LoadController 
 
 public void printModStates ( StringBuilder ret ) 
 { 
 + ret . append ( " \ n \ tStates : " ) ; 
 + for ( ModState state : ModState . values ( ) ) 
 + ret . append ( " ' " ) . append ( state . getMarker ( ) ) . append ( " ' = " ) . append ( state . toString ( ) ) ; 
 + 
 for ( ModContainer mc : loader . getModList ( ) ) 
 { 
 - ret . append ( " \ n \ t " ) . append ( mc . getModId ( ) ) . append ( " { " ) . append ( mc . getVersion ( ) ) . append ( " } [ " ) . append ( mc . getName ( ) ) . append ( " ] ( " ) . append ( mc . getSource ( ) . getName ( ) ) . append ( " ) " ) ; 
 - Joiner . on ( " - > " ) . appendTo ( ret , modStates . get ( mc . getModId ( ) ) ) ; 
 + ret . append ( " \ n \ t " ) ; 
 + for ( ModState state : modStates . get ( mc . getModId ( ) ) ) 
 + ret . append ( state . getMarker ( ) ) ; 
 + 
 + ret . append ( " \ t " ) . append ( mc . getModId ( ) ) . append ( " { " ) . append ( mc . getVersion ( ) ) . append ( " } [ " ) . append ( mc . getName ( ) ) . append ( " ] ( " ) . append ( mc . getSource ( ) . getName ( ) ) . append ( " ) " ) ; 
 } 
 } 
 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoaderState . java b / fml / src / main / java / cpw / mods / fml / common / LoaderState . java 
 index 8fc2663 . . cb30ba2 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / LoaderState . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / LoaderState . java 
 @ @ - 95 , 21 + 95 , 23 @ @ public enum LoaderState 
 } 
 public enum ModState 
 { 
 - UNLOADED ( " Unloaded " ) , 
 - LOADED ( " Loaded " ) , 
 - CONSTRUCTED ( " Constructed " ) , 
 - PREINITIALIZED ( " Pre - initialized " ) , 
 - INITIALIZED ( " Initialized " ) , 
 - POSTINITIALIZED ( " Post - initialized " ) , 
 - AVAILABLE ( " Available " ) , 
 - DISABLED ( " Disabled " ) , 
 - ERRORED ( " Errored " ) ; 
 + UNLOADED ( " Unloaded " , " U " ) , 
 + LOADED ( " Loaded " , " L " ) , 
 + CONSTRUCTED ( " Constructed " , " C " ) , 
 + PREINITIALIZED ( " Pre - initialized " , " H " ) , 
 + INITIALIZED ( " Initialized " , " I " ) , 
 + POSTINITIALIZED ( " Post - initialized " , " J " ) , 
 + AVAILABLE ( " Available " , " A " ) , 
 + DISABLED ( " Disabled " , " D " ) , 
 + ERRORED ( " Errored " , " E " ) ; 
 
 private String label ; 
 + private String marker ; 
 
 - private ModState ( String label ) 
 + private ModState ( String label , String marker ) 
 { 
 this . label = label ; 
 + this . marker = marker ; 
 } 
 
 @ Override 
 @ @ - 117 , 5 + 119 , 10 @ @ public enum LoaderState 
 { 
 return this . label ; 
 } 
 + 
 + public String getMarker ( ) 
 + { 
 + return this . marker ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java b / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java 
 index 95bac54 . . b77e137 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / DummyModContainer . java 
 @ @ - 19 , 6 + 19 , 7 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 
 + import com . google . common . collect . ImmutableList ; 
 import com . google . common . eventbus . EventBus ; 
 
 import cpw . mods . fml . common . versioning . ArtifactVersion ; 
 @ @ - 193 , 4 + 194 , 10 @ @ public class DummyModContainer implements ModContainer 
 { 
 return null ; 
 } 
 + 
 + @ Override 
 + public List < String > getOwnedPackages ( ) 
 + { 
 + return ImmutableList . of ( ) ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java b / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java 
 index f2c6079 . . ff6ed96 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLModContainer . java 
 @ @ - 624 , 4 + 624 , 10 @ @ public class FMLModContainer implements ModContainer 
 { 
 return ( String ) descriptor . get ( " guiFactory " ) ; 
 } 
 + 
 + @ Override 
 + public List < String > getOwnedPackages ( ) 
 + { 
 + return candidate . getContainedPackages ( ) ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java b / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java 
 index 1907f43 . . 5da03c6 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / InjectedModContainer . java 
 @ @ - 195 , 4 + 195 , 10 @ @ public class InjectedModContainer implements ModContainer 
 { 
 return wrappedContainer . getGuiClassName ( ) ; 
 } 
 + 
 + @ Override 
 + public List < String > getOwnedPackages ( ) 
 + { 
 + return wrappedContainer . getOwnedPackages ( ) ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoadController . java b / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 index 826cab7 . . 1f61310 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import com . google . common . collect . ImmutableBiMap ; 
 import com . google . common . collect . ImmutableMap ; 
 import com . google . common . collect . ImmutableMap . Builder ; 
 import com . google . common . collect . Iterables ; 
 + import com . google . common . collect . ListMultimap ; 
 import com . google . common . collect . Lists ; 
 import com . google . common . collect . Maps ; 
 import com . google . common . collect . Multimap ; 
 @ @ - 55 , 6 + 56 , 7 @ @ public class LoadController 
 private List < ModContainer > activeModList = Lists . newArrayList ( ) ; 
 private ModContainer activeContainer ; 
 private BiMap < ModContainer , Object > modObjectList ; 
 + private ListMultimap < String , ModContainer > packageOwners ; 
 
 public LoadController ( Loader loader ) 
 { 
 @ @ - 63 , 7 + 65 , 7 @ @ public class LoadController 
 this . masterChannel . register ( this ) ; 
 
 state = LoaderState . NOINIT ; 
 - 
 + packageOwners = ArrayListMultimap . create ( ) ; 
 
 } 
 
 @ @ - 171 , 7 + 173 , 7 @ @ public class LoadController 
 
 public ModContainer activeContainer ( ) 
 { 
 - return activeContainer ; 
 + return activeContainer ! = null ? activeContainer : findActiveContainerFromStack ( ) ; 
 } 
 
 @ Subscribe 
 @ @ - 229 , 6 + 231 , 11 @ @ public class LoadController 
 if ( ! mc . isImmutable ( ) & & mc . getMod ( ) ! = null ) 
 { 
 builder . put ( mc , mc . getMod ( ) ) ; 
 + List < String > packages = mc . getOwnedPackages ( ) ; 
 + for ( String pkg : packages ) 
 + { 
 + packageOwners . put ( pkg , mc ) ; 
 + } 
 } 
 if ( mc . getMod ( ) = = null & & ! mc . isImmutable ( ) & & state ! = LoaderState . CONSTRUCTING ) 
 { 
 @ @ - 309 , 4 + 316 , 37 @ @ public class LoadController 
 { 
 this . state = newState ; 
 } 
 + 
 + private ModContainer findActiveContainerFromStack ( ) 
 + { 
 + for ( Class < ? > c : getCallingStack ( ) ) 
 + { 
 + int idx = c . getName ( ) . lastIndexOf ( ' . ' ) ; 
 + if ( idx = = - 1 ) 
 + { 
 + continue ; 
 + } 
 + String pkg = c . getName ( ) . substring ( 0 , idx ) ; 
 + if ( packageOwners . containsKey ( pkg ) ) 
 + { 
 + return packageOwners . get ( pkg ) . get ( 0 ) ; 
 + } 
 + } 
 + 
 + return null ; 
 + } 
 + private FMLSecurityManager accessibleManager = new FMLSecurityManager ( ) ; 
 + 
 + class FMLSecurityManager extends SecurityManager 
 + { 
 + Class < ? > [ ] getStackClasses ( ) 
 + { 
 + return getClassContext ( ) ; 
 + } 
 + } 
 + 
 + Class < ? > [ ] getCallingStack ( ) 
 + { 
 + return accessibleManager . getStackClasses ( ) ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / ModContainer . java b / fml / src / main / java / cpw / mods / fml / common / ModContainer . java 
 index 1641788 . . abed85d 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / ModContainer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / ModContainer . java 
 @ @ - 145 , 4 + 145 , 6 @ @ public interface ModContainer 
 Disableable canBeDisabled ( ) ; 
 
 String getGuiClassName ( ) ; 
 + 
 + List < String > getOwnedPackages ( ) ; 
 }
