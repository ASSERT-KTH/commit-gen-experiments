BLEU SCORE: 0.031021609279760068

TEST MSG: Fix server - side data not being released
GENERATED MSG: Fix vanilla bug causing integrated server saving from 2 threads concurrently after a crash

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> index 188649e . . 0f13b84 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> @ @ - 70 , 7 + 70 , 7 @ @ <nl> BlockPos blockpos = worldserver . func _ 175694 _ M ( ) ; <nl> long k1 = func _ 130071 _ aq ( ) ; <nl> <nl> - @ @ - 434 , 9 + 449 , 16 @ @ <nl> + @ @ - 434 , 15 + 449 , 24 @ @ <nl> { <nl> if ( worldserver1 ! = null ) <nl> { <nl> @ @ - 87 , 7 + 87 , 15 @ @ <nl> } <nl> <nl> if ( this . field _ 71307 _ n . func _ 76468 _ d ( ) ) <nl> - @ @ - 461 , 6 + 483 , 7 @ @ <nl> + { <nl> + this . field _ 71307 _ n . func _ 76470 _ e ( ) ; <nl> + } <nl> + + <nl> + + CommandBase . func _ 71529 _ a ( null ) ; / / Forge : fix MC - 128561 <nl> + } <nl> + <nl> + public boolean func _ 71278 _ l ( ) <nl> + @ @ - 461 , 6 + 485 , 7 @ @ <nl> { <nl> if ( this . func _ 71197 _ b ( ) ) <nl> { <nl> @ @ - 95 , 7 + 103 , 7 @ @ <nl> this . field _ 175591 _ ab = func _ 130071 _ aq ( ) ; <nl> long i = 0L ; <nl> this . field _ 147147 _ p . func _ 151315 _ a ( new TextComponentString ( this . field _ 71286 _ C ) ) ; <nl> - @ @ - 505 , 12 + 528 , 20 @ @ <nl> + @ @ - 505 , 12 + 530 , 20 @ @ <nl> Thread . sleep ( Math . max ( 1L , 50L - i ) ) ; <nl> this . field _ 71296 _ Q = true ; <nl> } <nl> @ @ - 116 , 7 + 124 , 7 @ @ <nl> catch ( Throwable throwable1 ) <nl> { <nl> field _ 147145 _ h . error ( " Encountered an unexpected exception " , throwable1 ) ; <nl> - @ @ - 536 , 13 + 567 , 13 @ @ <nl> + @ @ - 536 , 13 + 569 , 13 @ @ <nl> field _ 147145 _ h . error ( " We were unable to save this crash report to disk . " ) ; <nl> } <nl> <nl> @ @ - 131 , 7 + 139 , 7 @ @ <nl> this . func _ 71260 _ j ( ) ; <nl> } <nl> catch ( Throwable throwable ) <nl> - @ @ - 551 , 6 + 582 , 8 @ @ <nl> + @ @ - 551 , 6 + 584 , 8 @ @ <nl> } <nl> finally <nl> { <nl> @ @ - 140 , 7 + 148 , 7 @ @ <nl> this . func _ 71240 _ o ( ) ; <nl> } <nl> } <nl> - @ @ - 577 , 6 + 610 , 7 @ @ <nl> + @ @ - 577 , 6 + 612 , 7 @ @ <nl> ImageIO . write ( bufferedimage , " PNG " , new ByteBufOutputStream ( bytebuf ) ) ; <nl> ByteBuf bytebuf1 = Base64 . encode ( bytebuf ) ; <nl> p _ 184107 _ 1 _ . func _ 151320 _ a ( " data : image / png ; base64 , " + bytebuf1 . toString ( StandardCharsets . UTF _ 8 ) ) ; <nl> @ @ - 148 , 7 + 156 , 7 @ @ <nl> } <nl> catch ( Exception exception ) <nl> { <nl> - @ @ - 618 , 6 + 652 , 7 @ @ <nl> + @ @ - 618 , 6 + 654 , 7 @ @ <nl> public void func _ 71217 _ p ( ) <nl> { <nl> long i = System . nanoTime ( ) ; <nl> @ @ - 156 , 7 + 164 , 7 @ @ <nl> + + this . field _ 71315 _ w ; <nl> <nl> if ( this . field _ 71295 _ T ) <nl> - @ @ - 644 , 6 + 679 , 7 @ @ <nl> + @ @ - 644 , 6 + 681 , 7 @ @ <nl> <nl> Collections . shuffle ( Arrays . asList ( agameprofile ) ) ; <nl> this . field _ 147147 _ p . func _ 151318 _ b ( ) . func _ 151330 _ a ( agameprofile ) ; <nl> @ @ - 164 , 7 + 172 , 7 @ @ <nl> } <nl> <nl> if ( this . field _ 71315 _ w % 900 = = 0 ) <nl> - @ @ - 671 , 6 + 707 , 7 @ @ <nl> + @ @ - 671 , 6 + 709 , 7 @ @ <nl> <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> @ @ - 172 , 7 + 180 , 7 @ @ <nl> } <nl> <nl> public void func _ 71190 _ q ( ) <nl> - @ @ - 686 , 14 + 723 , 17 @ @ <nl> + @ @ - 686 , 14 + 725 , 17 @ @ <nl> } <nl> <nl> this . field _ 71304 _ b . func _ 76318 _ c ( " levels " ) ; <nl> @ @ - 193 , 7 + 201 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 194340 _ a ( ( ) - > <nl> { <nl> return worldserver . func _ 72912 _ H ( ) . func _ 76065 _ j ( ) ; <nl> - @ @ - 702 , 11 + 742 , 12 @ @ <nl> + @ @ - 702 , 11 + 744 , 12 @ @ <nl> if ( this . field _ 71315 _ w % 20 = = 0 ) <nl> { <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " timeSync " ) ; <nl> @ @ - 207 , 7 + 215 , 7 @ @ <nl> <nl> try <nl> { <nl> - @ @ - 730 , 6 + 771 , 7 @ @ <nl> + @ @ - 730 , 6 + 773 , 7 @ @ <nl> throw new ReportedException ( crashreport1 ) ; <nl> } <nl> <nl> @ @ - 215 , 7 + 223 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; <nl> worldserver . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; <nl> - @ @ - 737 , 9 + 779 , 11 @ @ <nl> + @ @ - 737 , 9 + 781 , 11 @ @ <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> } <nl> <nl> @ @ - 228 , 7 + 236 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76318 _ c ( " connection " ) ; <nl> this . func _ 147137 _ ag ( ) . func _ 151269 _ c ( ) ; <nl> this . field _ 71304 _ b . func _ 76318 _ c ( " players " ) ; <nl> - @ @ - 763 , 7 + 807 , 8 @ @ <nl> + @ @ - 763 , 7 + 809 , 8 @ @ <nl> <nl> public void func _ 71256 _ s ( ) <nl> { <nl> @ @ - 238 , 7 + 246 , 7 @ @ <nl> this . field _ 175590 _ aa . start ( ) ; <nl> } <nl> <nl> - @ @ - 779 , 14 + 824 , 13 @ @ <nl> + @ @ - 779 , 14 + 826 , 13 @ @ <nl> <nl> public WorldServer func _ 71218 _ a ( int p _ 71218 _ 1 _ ) <nl> { <nl> @ @ - 258 , 7 + 266 , 7 @ @ <nl> } <nl> <nl> public String func _ 71249 _ w ( ) <nl> - @ @ - 816 , 7 + 860 , 7 @ @ <nl> + @ @ - 816 , 7 + 862 , 7 @ @ <nl> <nl> public String getServerModName ( ) <nl> { <nl> @ @ - 267 , 7 + 275 , 7 @ @ <nl> } <nl> <nl> public CrashReport func _ 71230 _ b ( CrashReport p _ 71230 _ 1 _ ) <nl> - @ @ - 1598 , 4 + 1642 , 9 @ @ <nl> + @ @ - 1598 , 4 + 1644 , 9 @ @ <nl> { <nl> return this . field _ 175590 _ aa ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java b / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java <nl> index 5e9a470 . . 015c047 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import net . minecraft . network . Packet ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . ModContainer ; <nl> import net . minecraftforge . fml . common . network . FMLOutboundHandler . OutboundTarget ; <nl> + import net . minecraftforge . fml . common . network . handshake . NetworkDispatcher ; <nl> import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ @ - 88 , 4 + 89 , 11 @ @ public class FMLEmbeddedChannel extends EmbeddedChannel { <nl> } <nl> return targetName ; <nl> } <nl> + <nl> + public void cleanAttributes ( ) <nl> + { <nl> + this . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( null ) ; <nl> + this . attr ( NetworkRegistry . NET _ HANDLER ) . set ( null ) ; <nl> + this . attr ( NetworkDispatcher . FML _ DISPATCHER ) . set ( null ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java b / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java <nl> index 4d658b0 . . bae1e86 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java <nl> @ @ - 27 , 12 + 27 , 9 @ @ import io . netty . util . AttributeKey ; <nl> import java . util . Collection ; <nl> import java . util . EnumMap ; <nl> import java . util . Map ; <nl> - import java . util . Map . Entry ; <nl> import java . util . Set ; <nl> import java . util . stream . Collectors ; <nl> <nl> - import org . apache . logging . log4j . Level ; <nl> - <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . inventory . Container ; <nl> @ @ - 342 , 11 + 339 , 16 @ @ public enum NetworkRegistry <nl> public void fireNetworkHandshake ( NetworkDispatcher networkDispatcher , Side origin ) <nl> { <nl> NetworkHandshakeEstablished handshake = new NetworkHandshakeEstablished ( networkDispatcher , networkDispatcher . getNetHandler ( ) , origin ) ; <nl> - for ( Entry < String , FMLEmbeddedChannel > channel : channels . get ( origin ) . entrySet ( ) ) <nl> + for ( FMLEmbeddedChannel channel : channels . get ( origin ) . values ( ) ) <nl> { <nl> - channel . getValue ( ) . attr ( FMLOutboundHandler . FML _ MESSAGETARGET ) . set ( OutboundTarget . DISPATCHER ) ; <nl> - channel . getValue ( ) . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( networkDispatcher ) ; <nl> - channel . getValue ( ) . pipeline ( ) . fireUserEventTriggered ( handshake ) ; <nl> + channel . attr ( FMLOutboundHandler . FML _ MESSAGETARGET ) . set ( OutboundTarget . DISPATCHER ) ; <nl> + channel . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( networkDispatcher ) ; <nl> + channel . pipeline ( ) . fireUserEventTriggered ( handshake ) ; <nl> } <nl> } <nl> + <nl> + public void cleanAttributes ( ) <nl> + { <nl> + channels . values ( ) . forEach ( map - > map . values ( ) . forEach ( FMLEmbeddedChannel : : cleanAttributes ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> index 90f55f6 . . 5c1673d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> @ @ - 604 , 8 + 604 , 8 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet < ? > > im <nl> super . exceptionCaught ( ctx , cause ) ; <nl> } <nl> <nl> - / / if we add any attributes , we should force removal of them here so that <nl> - / / they do not hold references to the world and causes it to leak . <nl> + / / If we add any attributes , we should force removal of them here so that <nl> + / / they do not hold references to the world and cause it to leak . <nl> private void cleanAttributes ( ChannelHandlerContext ctx ) <nl> { <nl> ctx . channel ( ) . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( null ) ; <nl> @ @ - 613 , 6 + 613 , 7 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet < ? > > im <nl> ctx . channel ( ) . attr ( NetworkDispatcher . FML _ DISPATCHER ) . set ( null ) ; <nl> this . handshakeChannel . attr ( FML _ DISPATCHER ) . set ( null ) ; <nl> this . manager . channel ( ) . attr ( FML _ DISPATCHER ) . set ( null ) ; <nl> + NetworkRegistry . INSTANCE . cleanAttributes ( ) ; <nl> } <nl> <nl> public void setOverrideDimension ( int overrideDim ) {
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 9739784 . . 2857f85 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 20 , 7 + 20 , 34 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public class Minecraft implements IPlayerUsage <nl> { <nl> - @ @ - 448 , 7 + 454 , 7 @ @ <nl> + @ @ - 333 , 21 + 339 , 23 @ @ <nl> + File file2 = new File ( file1 , " crash - " + ( new SimpleDateFormat ( " yyyy - MM - dd _ HH . mm . ss " ) ) . format ( new Date ( ) ) + " - client . txt " ) ; <nl> + System . out . println ( p _ 71377 _ 1 _ . func _ 71502 _ e ( ) ) ; <nl> + <nl> + + int retVal ; <nl> + if ( p _ 71377 _ 1 _ . func _ 71497 _ f ( ) ! = null ) <nl> + { <nl> + System . out . println ( " # @ ! @ # Game crashed ! Crash report saved to : # @ ! @ # " + p _ 71377 _ 1 _ . func _ 71497 _ f ( ) ) ; <nl> + - System . exit ( - 1 ) ; <nl> + + retVal = - 1 ; <nl> + } <nl> + else if ( p _ 71377 _ 1 _ . func _ 147149 _ a ( file2 ) ) <nl> + { <nl> + System . out . println ( " # @ ! @ # Game crashed ! Crash report saved to : # @ ! @ # " + file2 . getAbsolutePath ( ) ) ; <nl> + - System . exit ( - 1 ) ; <nl> + + retVal = - 1 ; <nl> + } <nl> + else <nl> + { <nl> + System . out . println ( " # @ ? @ # Game crashed ! Crash report could not be saved . # @ ? @ # " ) ; <nl> + - System . exit ( - 2 ) ; <nl> + + retVal = - 2 ; <nl> + } <nl> + + FMLCommonHandler . instance ( ) . handleExit ( retVal ) ; <nl> + } <nl> + <nl> + public void func _ 71367 _ a ( String p _ 71367 _ 1 _ , int p _ 71367 _ 2 _ ) <nl> + @ @ - 448 , 7 + 456 , 7 @ @ <nl> this . field _ 110451 _ am = new SimpleReloadableResourceManager ( this . field _ 110452 _ an ) ; <nl> this . field _ 135017 _ as = new LanguageManager ( this . field _ 110452 _ an , this . field _ 71474 _ y . field _ 74363 _ ab ) ; <nl> this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 135017 _ as ) ; <nl> @ @ - 29 , 7 + 56 , 7 @ @ <nl> this . field _ 71446 _ o = new TextureManager ( this . field _ 110451 _ am ) ; <nl> this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71446 _ o ) ; <nl> this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; <nl> - @ @ - 508 , 12 + 514 , 13 @ @ <nl> + @ @ - 508 , 12 + 516 , 13 @ @ <nl> this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110576 _ c , new TextureMap ( 1 , " textures / items " ) ) ; <nl> GL11 . glViewport ( 0 , 0 , this . field _ 71443 _ c , this . field _ 71440 _ d ) ; <nl> this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; <nl> @ @ - 44 , 7 + 71 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 527 , 6 + 534 , 7 @ @ <nl> + @ @ - 527 , 6 + 536 , 7 @ @ <nl> this . func _ 71352 _ k ( ) ; <nl> } <nl> <nl> @ @ - 52 , 7 + 79 , 7 @ @ <nl> Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; <nl> } <nl> <nl> - @ @ - 916 , 9 + 924 , 11 @ @ <nl> + @ @ - 916 , 9 + 926 , 11 @ @ <nl> <nl> if ( ! this . field _ 71454 _ w ) <nl> { <nl> @ @ - 64 , 7 + 91 , 7 @ @ <nl> } <nl> <nl> GL11 . glFlush ( ) ; <nl> - @ @ - 1496 , 6 + 1506 , 8 @ @ <nl> + @ @ - 1496 , 6 + 1508 , 8 @ @ <nl> - - this . field _ 71467 _ ac ; <nl> } <nl> <nl> @ @ - 73 , 7 + 100 , 7 @ @ <nl> this . field _ 71424 _ I . func _ 76320 _ a ( " gui " ) ; <nl> <nl> if ( ! this . field _ 71445 _ n ) <nl> - @ @ - 1646 , 6 + 1658 , 7 @ @ <nl> + @ @ - 1646 , 6 + 1660 , 7 @ @ <nl> this . field _ 71462 _ r . func _ 146274 _ d ( ) ; <nl> } <nl> } <nl> @ @ - 81 , 7 + 108 , 7 @ @ <nl> } <nl> <nl> if ( this . field _ 71429 _ W > 0 ) <nl> - @ @ - 1787 , 6 + 1800 , 7 @ @ <nl> + @ @ - 1787 , 6 + 1802 , 7 @ @ <nl> } <nl> } <nl> } <nl> @ @ - 89 , 7 + 116 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1978 , 12 + 1992 , 15 @ @ <nl> + @ @ - 1978 , 12 + 1994 , 15 @ @ <nl> this . field _ 71453 _ ak . func _ 74428 _ b ( ) ; <nl> } <nl> <nl> @ @ - 105 , 7 + 132 , 7 @ @ <nl> this . func _ 71403 _ a ( ( WorldClient ) null ) ; <nl> System . gc ( ) ; <nl> ISaveHandler isavehandler = this . field _ 71469 _ aa . func _ 75804 _ a ( p _ 71371 _ 1 _ , false ) ; <nl> - @ @ - 2019 , 6 + 2036 , 12 @ @ <nl> + @ @ - 2019 , 6 + 2038 , 12 @ @ <nl> <nl> while ( ! this . field _ 71437 _ Z . func _ 71200 _ ad ( ) ) <nl> { <nl> @ @ - 118 , 7 + 145 , 7 @ @ <nl> String s2 = this . field _ 71437 _ Z . func _ 71195 _ b _ ( ) ; <nl> <nl> if ( s2 ! = null ) <nl> - @ @ - 2094 , 6 + 2117 , 7 @ @ <nl> + @ @ - 2094 , 6 + 2119 , 7 @ @ <nl> this . field _ 110448 _ aq . func _ 148529 _ f ( ) ; <nl> this . func _ 71351 _ a ( ( ServerData ) null ) ; <nl> this . field _ 71455 _ al = false ; <nl> diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> index 94f0a0c . . 008dbf6 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> @ @ - 29 , 25 + 29 , 36 @ @ <nl> long i = func _ 130071 _ aq ( ) ; <nl> long l = 0L ; <nl> this . field _ 147147 _ p . func _ 151315 _ a ( new ChatComponentText ( this . field _ 71286 _ C ) ) ; <nl> - @ @ - 425 , 12 + 431 , 17 @ @ <nl> + @ @ - 425 , 12 + 431 , 20 @ @ <nl> Thread . sleep ( 1L ) ; <nl> this . field _ 71296 _ Q = true ; <nl> } <nl> + FMLCommonHandler . instance ( ) . handleServerStopping ( ) ; <nl> + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions <nl> } <nl> else <nl> { <nl> + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions <nl> this . func _ 71228 _ a ( ( CrashReport ) null ) ; <nl> } <nl> } <nl> + catch ( StartupQuery . AbortedException e ) <nl> + { <nl> + / / ignore silently <nl> + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions <nl> + } <nl> catch ( Throwable throwable1 ) <nl> { <nl> field _ 147145 _ h . error ( " Encountered an unexpected exception " , throwable1 ) ; <nl> - @ @ - 471 , 6 + 482 , 8 @ @ <nl> + @ @ - 456 , 6 + 470 , 7 @ @ <nl> + field _ 147145 _ h . error ( " We were unable to save this crash report to disk . " ) ; <nl> + } <nl> + <nl> + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions <nl> + this . func _ 71228 _ a ( crashreport ) ; <nl> + } <nl> + finally <nl> + @ @ - 471 , 6 + 486 , 8 @ @ <nl> } <nl> finally <nl> { <nl> @ @ - 56 , 7 + 67 , 7 @ @ <nl> this . func _ 71240 _ o ( ) ; <nl> } <nl> } <nl> - @ @ - 513 , 6 + 526 , 7 @ @ <nl> + @ @ - 513 , 6 + 530 , 7 @ @ <nl> { <nl> long i = System . nanoTime ( ) ; <nl> AxisAlignedBB . func _ 72332 _ a ( ) . func _ 72298 _ a ( ) ; <nl> @ @ - 64 , 7 + 75 , 7 @ @ <nl> + + this . field _ 71315 _ w ; <nl> <nl> if ( this . field _ 71295 _ T ) <nl> - @ @ - 566 , 6 + 580 , 7 @ @ <nl> + @ @ - 566 , 6 + 584 , 7 @ @ <nl> <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> @ @ - 72 , 7 + 83 , 7 @ @ <nl> } <nl> <nl> public void func _ 71190 _ q ( ) <nl> - @ @ - 593 , 6 + 608 , 7 @ @ <nl> + @ @ - 593 , 6 + 612 , 7 @ @ <nl> } <nl> <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tick " ) ; <nl> @ @ - 80 , 7 + 91 , 7 @ @ <nl> CrashReport crashreport ; <nl> <nl> try <nl> - @ @ - 617 , 6 + 633 , 7 @ @ <nl> + @ @ - 617 , 6 + 637 , 7 @ @ <nl> throw new ReportedException ( crashreport ) ; <nl> } <nl> <nl> @ @ - 88 , 7 + 99 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; <nl> worldserver . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; <nl> - @ @ - 648 , 6 + 665 , 7 @ @ <nl> + @ @ - 648 , 6 + 669 , 7 @ @ <nl> <nl> public void func _ 71256 _ s ( ) <nl> { <nl> @ @ - 96 , 7 + 107 , 7 @ @ <nl> ( new Thread ( " Server thread " ) <nl> { <nl> private static final String _ _ OBFID = " CL _ 00001418 " ; <nl> - @ @ - 695 , 7 + 713 , 7 @ @ <nl> + @ @ - 695 , 7 + 717 , 7 @ @ <nl> <nl> public String getServerModName ( ) <nl> { <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> index 96fc9a0 . . 44d563e 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> @ @ - 17 , 6 + 17 , 8 @ @ import java . lang . ref . WeakReference ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . TimeUnit ; <nl> <nl> import net . minecraft . crash . CrashReport ; <nl> import net . minecraft . crash . CrashReportCategory ; <nl> @ @ - 86 , 6 + 88 , 7 @ @ public class FMLCommonHandler <nl> private Set < SaveHandler > handlerSet = Sets . newSetFromMap ( new MapMaker ( ) . weakKeys ( ) . < SaveHandler , Boolean > makeMap ( ) ) ; <nl> private WeakReference < SaveHandler > handlerToCheck ; <nl> private EventBus eventBus = new EventBus ( ) ; <nl> + private volatile CountDownLatch exitLatch = null ; <nl> / * * <nl> * The FML event bus . Subscribe here for FML related events <nl> * <nl> @ @ - 428 , 6 + 431 , 50 @ @ public class FMLCommonHandler <nl> return sidedDelegate . shouldServerShouldBeKilledQuietly ( ) ; <nl> } <nl> <nl> + / * * <nl> + * Make handleExit ( ) wait for handleServerStopped ( ) . <nl> + * <nl> + * For internal use only ! <nl> + * / <nl> + public void expectServerStopped ( ) <nl> + { <nl> + exitLatch = new CountDownLatch ( 1 ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Delayed System . exit ( ) until the server is actually stopped / done saving . <nl> + * <nl> + * For internal use only ! <nl> + * <nl> + * @ param retVal Exit code for System . exit ( ) <nl> + * / <nl> + public void handleExit ( int retVal ) <nl> + { <nl> + CountDownLatch latch = exitLatch ; <nl> + <nl> + if ( latch ! = null ) <nl> + { <nl> + try <nl> + { <nl> + FMLLog . info ( " Waiting for the server to terminate / save . " ) ; <nl> + if ( ! latch . await ( 10 , TimeUnit . SECONDS ) ) <nl> + { <nl> + FMLLog . warning ( " The server didn ' t stop within 10 seconds , exiting anyway . " ) ; <nl> + } <nl> + else <nl> + { <nl> + FMLLog . info ( " Server terminated . " ) ; <nl> + } <nl> + } <nl> + catch ( InterruptedException e ) <nl> + { <nl> + FMLLog . warning ( " Interrupted wait , exiting . " ) ; <nl> + } <nl> + } <nl> + <nl> + System . exit ( retVal ) ; <nl> + } <nl> + <nl> public void handleServerStopped ( ) <nl> { <nl> sidedDelegate . serverStopped ( ) ; <nl> @ @ - 435 , 6 + 482 , 15 @ @ public class FMLCommonHandler <nl> Loader . instance ( ) . serverStopped ( ) ; <nl> / / FORCE the internal server to stop : hello optifine workaround ! <nl> if ( server ! = null ) ObfuscationReflectionHelper . setPrivateValue ( MinecraftServer . class , server , false , " field _ 71316 " + " _ v " , " u " , " serverStopped " ) ; <nl> + <nl> + / / allow any pending exit to continue , clear exitLatch <nl> + CountDownLatch latch = exitLatch ; <nl> + <nl> + if ( latch ! = null ) <nl> + { <nl> + latch . countDown ( ) ; <nl> + exitLatch = null ; <nl> + } <nl> } <nl> <nl> public String getModName ( )

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 index 188649e . . 0f13b84 100644 
 - - - a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 @ @ - 70 , 7 + 70 , 7 @ @ 
 BlockPos blockpos = worldserver . func _ 175694 _ M ( ) ; 
 long k1 = func _ 130071 _ aq ( ) ; 
 
 - @ @ - 434 , 9 + 449 , 16 @ @ 
 + @ @ - 434 , 15 + 449 , 24 @ @ 
 { 
 if ( worldserver1 ! = null ) 
 { 
 @ @ - 87 , 7 + 87 , 15 @ @ 
 } 
 
 if ( this . field _ 71307 _ n . func _ 76468 _ d ( ) ) 
 - @ @ - 461 , 6 + 483 , 7 @ @ 
 + { 
 + this . field _ 71307 _ n . func _ 76470 _ e ( ) ; 
 + } 
 + + 
 + + CommandBase . func _ 71529 _ a ( null ) ; / / Forge : fix MC - 128561 
 + } 
 + 
 + public boolean func _ 71278 _ l ( ) 
 + @ @ - 461 , 6 + 485 , 7 @ @ 
 { 
 if ( this . func _ 71197 _ b ( ) ) 
 { 
 @ @ - 95 , 7 + 103 , 7 @ @ 
 this . field _ 175591 _ ab = func _ 130071 _ aq ( ) ; 
 long i = 0L ; 
 this . field _ 147147 _ p . func _ 151315 _ a ( new TextComponentString ( this . field _ 71286 _ C ) ) ; 
 - @ @ - 505 , 12 + 528 , 20 @ @ 
 + @ @ - 505 , 12 + 530 , 20 @ @ 
 Thread . sleep ( Math . max ( 1L , 50L - i ) ) ; 
 this . field _ 71296 _ Q = true ; 
 } 
 @ @ - 116 , 7 + 124 , 7 @ @ 
 catch ( Throwable throwable1 ) 
 { 
 field _ 147145 _ h . error ( " Encountered an unexpected exception " , throwable1 ) ; 
 - @ @ - 536 , 13 + 567 , 13 @ @ 
 + @ @ - 536 , 13 + 569 , 13 @ @ 
 field _ 147145 _ h . error ( " We were unable to save this crash report to disk . " ) ; 
 } 
 
 @ @ - 131 , 7 + 139 , 7 @ @ 
 this . func _ 71260 _ j ( ) ; 
 } 
 catch ( Throwable throwable ) 
 - @ @ - 551 , 6 + 582 , 8 @ @ 
 + @ @ - 551 , 6 + 584 , 8 @ @ 
 } 
 finally 
 { 
 @ @ - 140 , 7 + 148 , 7 @ @ 
 this . func _ 71240 _ o ( ) ; 
 } 
 } 
 - @ @ - 577 , 6 + 610 , 7 @ @ 
 + @ @ - 577 , 6 + 612 , 7 @ @ 
 ImageIO . write ( bufferedimage , " PNG " , new ByteBufOutputStream ( bytebuf ) ) ; 
 ByteBuf bytebuf1 = Base64 . encode ( bytebuf ) ; 
 p _ 184107 _ 1 _ . func _ 151320 _ a ( " data : image / png ; base64 , " + bytebuf1 . toString ( StandardCharsets . UTF _ 8 ) ) ; 
 @ @ - 148 , 7 + 156 , 7 @ @ 
 } 
 catch ( Exception exception ) 
 { 
 - @ @ - 618 , 6 + 652 , 7 @ @ 
 + @ @ - 618 , 6 + 654 , 7 @ @ 
 public void func _ 71217 _ p ( ) 
 { 
 long i = System . nanoTime ( ) ; 
 @ @ - 156 , 7 + 164 , 7 @ @ 
 + + this . field _ 71315 _ w ; 
 
 if ( this . field _ 71295 _ T ) 
 - @ @ - 644 , 6 + 679 , 7 @ @ 
 + @ @ - 644 , 6 + 681 , 7 @ @ 
 
 Collections . shuffle ( Arrays . asList ( agameprofile ) ) ; 
 this . field _ 147147 _ p . func _ 151318 _ b ( ) . func _ 151330 _ a ( agameprofile ) ; 
 @ @ - 164 , 7 + 172 , 7 @ @ 
 } 
 
 if ( this . field _ 71315 _ w % 900 = = 0 ) 
 - @ @ - 671 , 6 + 707 , 7 @ @ 
 + @ @ - 671 , 6 + 709 , 7 @ @ 
 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 @ @ - 172 , 7 + 180 , 7 @ @ 
 } 
 
 public void func _ 71190 _ q ( ) 
 - @ @ - 686 , 14 + 723 , 17 @ @ 
 + @ @ - 686 , 14 + 725 , 17 @ @ 
 } 
 
 this . field _ 71304 _ b . func _ 76318 _ c ( " levels " ) ; 
 @ @ - 193 , 7 + 201 , 7 @ @ 
 this . field _ 71304 _ b . func _ 194340 _ a ( ( ) - > 
 { 
 return worldserver . func _ 72912 _ H ( ) . func _ 76065 _ j ( ) ; 
 - @ @ - 702 , 11 + 742 , 12 @ @ 
 + @ @ - 702 , 11 + 744 , 12 @ @ 
 if ( this . field _ 71315 _ w % 20 = = 0 ) 
 { 
 this . field _ 71304 _ b . func _ 76320 _ a ( " timeSync " ) ; 
 @ @ - 207 , 7 + 215 , 7 @ @ 
 
 try 
 { 
 - @ @ - 730 , 6 + 771 , 7 @ @ 
 + @ @ - 730 , 6 + 773 , 7 @ @ 
 throw new ReportedException ( crashreport1 ) ; 
 } 
 
 @ @ - 215 , 7 + 223 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; 
 worldserver . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; 
 - @ @ - 737 , 9 + 779 , 11 @ @ 
 + @ @ - 737 , 9 + 781 , 11 @ @ 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 } 
 
 @ @ - 228 , 7 + 236 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76318 _ c ( " connection " ) ; 
 this . func _ 147137 _ ag ( ) . func _ 151269 _ c ( ) ; 
 this . field _ 71304 _ b . func _ 76318 _ c ( " players " ) ; 
 - @ @ - 763 , 7 + 807 , 8 @ @ 
 + @ @ - 763 , 7 + 809 , 8 @ @ 
 
 public void func _ 71256 _ s ( ) 
 { 
 @ @ - 238 , 7 + 246 , 7 @ @ 
 this . field _ 175590 _ aa . start ( ) ; 
 } 
 
 - @ @ - 779 , 14 + 824 , 13 @ @ 
 + @ @ - 779 , 14 + 826 , 13 @ @ 
 
 public WorldServer func _ 71218 _ a ( int p _ 71218 _ 1 _ ) 
 { 
 @ @ - 258 , 7 + 266 , 7 @ @ 
 } 
 
 public String func _ 71249 _ w ( ) 
 - @ @ - 816 , 7 + 860 , 7 @ @ 
 + @ @ - 816 , 7 + 862 , 7 @ @ 
 
 public String getServerModName ( ) 
 { 
 @ @ - 267 , 7 + 275 , 7 @ @ 
 } 
 
 public CrashReport func _ 71230 _ b ( CrashReport p _ 71230 _ 1 _ ) 
 - @ @ - 1598 , 4 + 1642 , 9 @ @ 
 + @ @ - 1598 , 4 + 1644 , 9 @ @ 
 { 
 return this . field _ 175590 _ aa ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java b / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java 
 index 5e9a470 . . 015c047 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLEmbeddedChannel . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import net . minecraft . network . Packet ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . ModContainer ; 
 import net . minecraftforge . fml . common . network . FMLOutboundHandler . OutboundTarget ; 
 + import net . minecraftforge . fml . common . network . handshake . NetworkDispatcher ; 
 import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 @ @ - 88 , 4 + 89 , 11 @ @ public class FMLEmbeddedChannel extends EmbeddedChannel { 
 } 
 return targetName ; 
 } 
 + 
 + public void cleanAttributes ( ) 
 + { 
 + this . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( null ) ; 
 + this . attr ( NetworkRegistry . NET _ HANDLER ) . set ( null ) ; 
 + this . attr ( NetworkDispatcher . FML _ DISPATCHER ) . set ( null ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java b / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java 
 index 4d658b0 . . bae1e86 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / NetworkRegistry . java 
 @ @ - 27 , 12 + 27 , 9 @ @ import io . netty . util . AttributeKey ; 
 import java . util . Collection ; 
 import java . util . EnumMap ; 
 import java . util . Map ; 
 - import java . util . Map . Entry ; 
 import java . util . Set ; 
 import java . util . stream . Collectors ; 
 
 - import org . apache . logging . log4j . Level ; 
 - 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . inventory . Container ; 
 @ @ - 342 , 11 + 339 , 16 @ @ public enum NetworkRegistry 
 public void fireNetworkHandshake ( NetworkDispatcher networkDispatcher , Side origin ) 
 { 
 NetworkHandshakeEstablished handshake = new NetworkHandshakeEstablished ( networkDispatcher , networkDispatcher . getNetHandler ( ) , origin ) ; 
 - for ( Entry < String , FMLEmbeddedChannel > channel : channels . get ( origin ) . entrySet ( ) ) 
 + for ( FMLEmbeddedChannel channel : channels . get ( origin ) . values ( ) ) 
 { 
 - channel . getValue ( ) . attr ( FMLOutboundHandler . FML _ MESSAGETARGET ) . set ( OutboundTarget . DISPATCHER ) ; 
 - channel . getValue ( ) . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( networkDispatcher ) ; 
 - channel . getValue ( ) . pipeline ( ) . fireUserEventTriggered ( handshake ) ; 
 + channel . attr ( FMLOutboundHandler . FML _ MESSAGETARGET ) . set ( OutboundTarget . DISPATCHER ) ; 
 + channel . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( networkDispatcher ) ; 
 + channel . pipeline ( ) . fireUserEventTriggered ( handshake ) ; 
 } 
 } 
 + 
 + public void cleanAttributes ( ) 
 + { 
 + channels . values ( ) . forEach ( map - > map . values ( ) . forEach ( FMLEmbeddedChannel : : cleanAttributes ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 index 90f55f6 . . 5c1673d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 @ @ - 604 , 8 + 604 , 8 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet < ? > > im 
 super . exceptionCaught ( ctx , cause ) ; 
 } 
 
 - / / if we add any attributes , we should force removal of them here so that 
 - / / they do not hold references to the world and causes it to leak . 
 + / / If we add any attributes , we should force removal of them here so that 
 + / / they do not hold references to the world and cause it to leak . 
 private void cleanAttributes ( ChannelHandlerContext ctx ) 
 { 
 ctx . channel ( ) . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( null ) ; 
 @ @ - 613 , 6 + 613 , 7 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet < ? > > im 
 ctx . channel ( ) . attr ( NetworkDispatcher . FML _ DISPATCHER ) . set ( null ) ; 
 this . handshakeChannel . attr ( FML _ DISPATCHER ) . set ( null ) ; 
 this . manager . channel ( ) . attr ( FML _ DISPATCHER ) . set ( null ) ; 
 + NetworkRegistry . INSTANCE . cleanAttributes ( ) ; 
 } 
 
 public void setOverrideDimension ( int overrideDim ) {

NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 9739784 . . 2857f85 100644 
 - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 20 , 7 + 20 , 34 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public class Minecraft implements IPlayerUsage 
 { 
 - @ @ - 448 , 7 + 454 , 7 @ @ 
 + @ @ - 333 , 21 + 339 , 23 @ @ 
 + File file2 = new File ( file1 , " crash - " + ( new SimpleDateFormat ( " yyyy - MM - dd _ HH . mm . ss " ) ) . format ( new Date ( ) ) + " - client . txt " ) ; 
 + System . out . println ( p _ 71377 _ 1 _ . func _ 71502 _ e ( ) ) ; 
 + 
 + + int retVal ; 
 + if ( p _ 71377 _ 1 _ . func _ 71497 _ f ( ) ! = null ) 
 + { 
 + System . out . println ( " # @ ! @ # Game crashed ! Crash report saved to : # @ ! @ # " + p _ 71377 _ 1 _ . func _ 71497 _ f ( ) ) ; 
 + - System . exit ( - 1 ) ; 
 + + retVal = - 1 ; 
 + } 
 + else if ( p _ 71377 _ 1 _ . func _ 147149 _ a ( file2 ) ) 
 + { 
 + System . out . println ( " # @ ! @ # Game crashed ! Crash report saved to : # @ ! @ # " + file2 . getAbsolutePath ( ) ) ; 
 + - System . exit ( - 1 ) ; 
 + + retVal = - 1 ; 
 + } 
 + else 
 + { 
 + System . out . println ( " # @ ? @ # Game crashed ! Crash report could not be saved . # @ ? @ # " ) ; 
 + - System . exit ( - 2 ) ; 
 + + retVal = - 2 ; 
 + } 
 + + FMLCommonHandler . instance ( ) . handleExit ( retVal ) ; 
 + } 
 + 
 + public void func _ 71367 _ a ( String p _ 71367 _ 1 _ , int p _ 71367 _ 2 _ ) 
 + @ @ - 448 , 7 + 456 , 7 @ @ 
 this . field _ 110451 _ am = new SimpleReloadableResourceManager ( this . field _ 110452 _ an ) ; 
 this . field _ 135017 _ as = new LanguageManager ( this . field _ 110452 _ an , this . field _ 71474 _ y . field _ 74363 _ ab ) ; 
 this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 135017 _ as ) ; 
 @ @ - 29 , 7 + 56 , 7 @ @ 
 this . field _ 71446 _ o = new TextureManager ( this . field _ 110451 _ am ) ; 
 this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71446 _ o ) ; 
 this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; 
 - @ @ - 508 , 12 + 514 , 13 @ @ 
 + @ @ - 508 , 12 + 516 , 13 @ @ 
 this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110576 _ c , new TextureMap ( 1 , " textures / items " ) ) ; 
 GL11 . glViewport ( 0 , 0 , this . field _ 71443 _ c , this . field _ 71440 _ d ) ; 
 this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; 
 @ @ - 44 , 7 + 71 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 527 , 6 + 534 , 7 @ @ 
 + @ @ - 527 , 6 + 536 , 7 @ @ 
 this . func _ 71352 _ k ( ) ; 
 } 
 
 @ @ - 52 , 7 + 79 , 7 @ @ 
 Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; 
 } 
 
 - @ @ - 916 , 9 + 924 , 11 @ @ 
 + @ @ - 916 , 9 + 926 , 11 @ @ 
 
 if ( ! this . field _ 71454 _ w ) 
 { 
 @ @ - 64 , 7 + 91 , 7 @ @ 
 } 
 
 GL11 . glFlush ( ) ; 
 - @ @ - 1496 , 6 + 1506 , 8 @ @ 
 + @ @ - 1496 , 6 + 1508 , 8 @ @ 
 - - this . field _ 71467 _ ac ; 
 } 
 
 @ @ - 73 , 7 + 100 , 7 @ @ 
 this . field _ 71424 _ I . func _ 76320 _ a ( " gui " ) ; 
 
 if ( ! this . field _ 71445 _ n ) 
 - @ @ - 1646 , 6 + 1658 , 7 @ @ 
 + @ @ - 1646 , 6 + 1660 , 7 @ @ 
 this . field _ 71462 _ r . func _ 146274 _ d ( ) ; 
 } 
 } 
 @ @ - 81 , 7 + 108 , 7 @ @ 
 } 
 
 if ( this . field _ 71429 _ W > 0 ) 
 - @ @ - 1787 , 6 + 1800 , 7 @ @ 
 + @ @ - 1787 , 6 + 1802 , 7 @ @ 
 } 
 } 
 } 
 @ @ - 89 , 7 + 116 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1978 , 12 + 1992 , 15 @ @ 
 + @ @ - 1978 , 12 + 1994 , 15 @ @ 
 this . field _ 71453 _ ak . func _ 74428 _ b ( ) ; 
 } 
 
 @ @ - 105 , 7 + 132 , 7 @ @ 
 this . func _ 71403 _ a ( ( WorldClient ) null ) ; 
 System . gc ( ) ; 
 ISaveHandler isavehandler = this . field _ 71469 _ aa . func _ 75804 _ a ( p _ 71371 _ 1 _ , false ) ; 
 - @ @ - 2019 , 6 + 2036 , 12 @ @ 
 + @ @ - 2019 , 6 + 2038 , 12 @ @ 
 
 while ( ! this . field _ 71437 _ Z . func _ 71200 _ ad ( ) ) 
 { 
 @ @ - 118 , 7 + 145 , 7 @ @ 
 String s2 = this . field _ 71437 _ Z . func _ 71195 _ b _ ( ) ; 
 
 if ( s2 ! = null ) 
 - @ @ - 2094 , 6 + 2117 , 7 @ @ 
 + @ @ - 2094 , 6 + 2119 , 7 @ @ 
 this . field _ 110448 _ aq . func _ 148529 _ f ( ) ; 
 this . func _ 71351 _ a ( ( ServerData ) null ) ; 
 this . field _ 71455 _ al = false ; 
 diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 index 94f0a0c . . 008dbf6 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 @ @ - 29 , 25 + 29 , 36 @ @ 
 long i = func _ 130071 _ aq ( ) ; 
 long l = 0L ; 
 this . field _ 147147 _ p . func _ 151315 _ a ( new ChatComponentText ( this . field _ 71286 _ C ) ) ; 
 - @ @ - 425 , 12 + 431 , 17 @ @ 
 + @ @ - 425 , 12 + 431 , 20 @ @ 
 Thread . sleep ( 1L ) ; 
 this . field _ 71296 _ Q = true ; 
 } 
 + FMLCommonHandler . instance ( ) . handleServerStopping ( ) ; 
 + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions 
 } 
 else 
 { 
 + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions 
 this . func _ 71228 _ a ( ( CrashReport ) null ) ; 
 } 
 } 
 + catch ( StartupQuery . AbortedException e ) 
 + { 
 + / / ignore silently 
 + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions 
 + } 
 catch ( Throwable throwable1 ) 
 { 
 field _ 147145 _ h . error ( " Encountered an unexpected exception " , throwable1 ) ; 
 - @ @ - 471 , 6 + 482 , 8 @ @ 
 + @ @ - 456 , 6 + 470 , 7 @ @ 
 + field _ 147145 _ h . error ( " We were unable to save this crash report to disk . " ) ; 
 + } 
 + 
 + + FMLCommonHandler . instance ( ) . expectServerStopped ( ) ; / / has to come before finalTick to avoid race conditions 
 + this . func _ 71228 _ a ( crashreport ) ; 
 + } 
 + finally 
 + @ @ - 471 , 6 + 486 , 8 @ @ 
 } 
 finally 
 { 
 @ @ - 56 , 7 + 67 , 7 @ @ 
 this . func _ 71240 _ o ( ) ; 
 } 
 } 
 - @ @ - 513 , 6 + 526 , 7 @ @ 
 + @ @ - 513 , 6 + 530 , 7 @ @ 
 { 
 long i = System . nanoTime ( ) ; 
 AxisAlignedBB . func _ 72332 _ a ( ) . func _ 72298 _ a ( ) ; 
 @ @ - 64 , 7 + 75 , 7 @ @ 
 + + this . field _ 71315 _ w ; 
 
 if ( this . field _ 71295 _ T ) 
 - @ @ - 566 , 6 + 580 , 7 @ @ 
 + @ @ - 566 , 6 + 584 , 7 @ @ 
 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 @ @ - 72 , 7 + 83 , 7 @ @ 
 } 
 
 public void func _ 71190 _ q ( ) 
 - @ @ - 593 , 6 + 608 , 7 @ @ 
 + @ @ - 593 , 6 + 612 , 7 @ @ 
 } 
 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tick " ) ; 
 @ @ - 80 , 7 + 91 , 7 @ @ 
 CrashReport crashreport ; 
 
 try 
 - @ @ - 617 , 6 + 633 , 7 @ @ 
 + @ @ - 617 , 6 + 637 , 7 @ @ 
 throw new ReportedException ( crashreport ) ; 
 } 
 
 @ @ - 88 , 7 + 99 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; 
 worldserver . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; 
 - @ @ - 648 , 6 + 665 , 7 @ @ 
 + @ @ - 648 , 6 + 669 , 7 @ @ 
 
 public void func _ 71256 _ s ( ) 
 { 
 @ @ - 96 , 7 + 107 , 7 @ @ 
 ( new Thread ( " Server thread " ) 
 { 
 private static final String _ _ OBFID = " CL _ 00001418 " ; 
 - @ @ - 695 , 7 + 713 , 7 @ @ 
 + @ @ - 695 , 7 + 717 , 7 @ @ 
 
 public String getServerModName ( ) 
 { 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 index 96fc9a0 . . 44d563e 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 @ @ - 17 , 6 + 17 , 8 @ @ import java . lang . ref . WeakReference ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 + import java . util . concurrent . CountDownLatch ; 
 + import java . util . concurrent . TimeUnit ; 
 
 import net . minecraft . crash . CrashReport ; 
 import net . minecraft . crash . CrashReportCategory ; 
 @ @ - 86 , 6 + 88 , 7 @ @ public class FMLCommonHandler 
 private Set < SaveHandler > handlerSet = Sets . newSetFromMap ( new MapMaker ( ) . weakKeys ( ) . < SaveHandler , Boolean > makeMap ( ) ) ; 
 private WeakReference < SaveHandler > handlerToCheck ; 
 private EventBus eventBus = new EventBus ( ) ; 
 + private volatile CountDownLatch exitLatch = null ; 
 / * * 
 * The FML event bus . Subscribe here for FML related events 
 * 
 @ @ - 428 , 6 + 431 , 50 @ @ public class FMLCommonHandler 
 return sidedDelegate . shouldServerShouldBeKilledQuietly ( ) ; 
 } 
 
 + / * * 
 + * Make handleExit ( ) wait for handleServerStopped ( ) . 
 + * 
 + * For internal use only ! 
 + * / 
 + public void expectServerStopped ( ) 
 + { 
 + exitLatch = new CountDownLatch ( 1 ) ; 
 + } 
 + 
 + / * * 
 + * Delayed System . exit ( ) until the server is actually stopped / done saving . 
 + * 
 + * For internal use only ! 
 + * 
 + * @ param retVal Exit code for System . exit ( ) 
 + * / 
 + public void handleExit ( int retVal ) 
 + { 
 + CountDownLatch latch = exitLatch ; 
 + 
 + if ( latch ! = null ) 
 + { 
 + try 
 + { 
 + FMLLog . info ( " Waiting for the server to terminate / save . " ) ; 
 + if ( ! latch . await ( 10 , TimeUnit . SECONDS ) ) 
 + { 
 + FMLLog . warning ( " The server didn ' t stop within 10 seconds , exiting anyway . " ) ; 
 + } 
 + else 
 + { 
 + FMLLog . info ( " Server terminated . " ) ; 
 + } 
 + } 
 + catch ( InterruptedException e ) 
 + { 
 + FMLLog . warning ( " Interrupted wait , exiting . " ) ; 
 + } 
 + } 
 + 
 + System . exit ( retVal ) ; 
 + } 
 + 
 public void handleServerStopped ( ) 
 { 
 sidedDelegate . serverStopped ( ) ; 
 @ @ - 435 , 6 + 482 , 15 @ @ public class FMLCommonHandler 
 Loader . instance ( ) . serverStopped ( ) ; 
 / / FORCE the internal server to stop : hello optifine workaround ! 
 if ( server ! = null ) ObfuscationReflectionHelper . setPrivateValue ( MinecraftServer . class , server , false , " field _ 71316 " + " _ v " , " u " , " serverStopped " ) ; 
 + 
 + / / allow any pending exit to continue , clear exitLatch 
 + CountDownLatch latch = exitLatch ; 
 + 
 + if ( latch ! = null ) 
 + { 
 + latch . countDown ( ) ; 
 + exitLatch = null ; 
 + } 
 } 
 
 public String getModName ( )
