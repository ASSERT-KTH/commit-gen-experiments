BLEU SCORE: 0.06220117374063391

TEST MSG: Fix bug with ObfuscationReflectionHelper
GENERATED MSG: Beginning of a saveinspectionhandler .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java b / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java <nl> index e2452ee . . cdc58cc 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java <nl> @ @ - 153 , 9 + 153 , 7 @ @ public class ObfuscationReflectionHelper <nl> * Throws an exception if the method is not found . <nl> * <nl> * @ param clazz The class to find the method on . <nl> - * @ param methodName The name of the method to find ( used in developer environments , i . e . " getWorldTime " ) . <nl> - * @ param methodObfName The obfuscated name of the method to find ( used in obfuscated environments , i . e . " func _ 72820 _ D " ) . <nl> - * If the name you are looking for is on a class that is never obfuscated , this should be null . <nl> + * @ param methodName The SRG ( obfuscated ) name of the method to find ( e . g . " func _ 72820 _ D " ) . <nl> * @ param parameterTypes The parameter types of the method to find . <nl> * @ return The method with the specified name and parameters in the given class . <nl> * / <nl> @ @ - 164 , 7 + 162 , 7 @ @ public class ObfuscationReflectionHelper <nl> { <nl> Preconditions . checkNotNull ( clazz ) ; <nl> Preconditions . checkNotNull ( methodName ) ; <nl> - Preconditions . checkArgument ( methodName . isEmpty ( ) , " Method name cannot be empty " ) ; <nl> + Preconditions . checkArgument ( ! methodName . isEmpty ( ) , " Method name cannot be empty " ) ; <nl> <nl> try <nl> {
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / Mod . java b / fml / src / main / java / cpw / mods / fml / common / Mod . java <nl> index cab2511 . . 1e25d03 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / Mod . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / Mod . java <nl> @ @ - 103 , 9 + 103 , 18 @ @ public @ interface Mod <nl> * <nl> * This is ignored if there is a { @ link NetworkCheckHandler } annotation on a method in this class . <nl> * <nl> - * @ return <nl> + * @ return A version range as specified by the maven version range specification or the empty string <nl> * / <nl> String acceptableRemoteVersions ( ) default " " ; <nl> + <nl> + / * * <nl> + * A version range specifying compatible save version information . If your mod follows good version numbering <nl> + * practice < a href = " http : / / semver . org / " > Like this ( http : / / semver . org / ) < / a > then this should be sufficient . <nl> + * <nl> + * Advanced users can specify a { @ link SaveInspectionHandler } instead . <nl> + * @ return A version range as specified by the maven version range specification or the empty string <nl> + * / <nl> + String acceptableSaveVersions ( ) default " " ; <nl> / * * <nl> * An optional bukkit plugin that will be injected into the bukkit plugin framework if <nl> * this mod is loaded into the FML framework and the bukkit coremod is present . <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / SaveInspectionHandler . java b / fml / src / main / java / cpw / mods / fml / common / SaveInspectionHandler . java <nl> new file mode 100644 <nl> index 0000000 . . 4c339e0 <nl> - - - / dev / null <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / SaveInspectionHandler . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package cpw . mods . fml . common ; <nl> + <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> + <nl> + / * * <nl> + * A method annotated with this on the { @ link Mod } will be called whenever a local save is listed in <nl> + * the save games list . <nl> + * <nl> + * @ author cpw <nl> + * <nl> + * / <nl> + @ Retention ( RetentionPolicy . RUNTIME ) <nl> + @ Target ( ElementType . METHOD ) <nl> + public @ interface SaveInspectionHandler <nl> + { <nl> + <nl> + } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java b / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java <nl> index 4ea3629 . . f0efa3f 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java <nl> @ @ - 4 , 7 + 4 , 27 @ @ import java . lang . annotation . ElementType ; <nl> import java . lang . annotation . Retention ; <nl> import java . lang . annotation . RetentionPolicy ; <nl> import java . lang . annotation . Target ; <nl> + import cpw . mods . fml . relauncher . Side ; <nl> <nl> + / * * <nl> + * A method annotated with this will be called when a remote network connection is offered . <nl> + * The method should have two parameters , of types { @ link Map < String , String > } and { @ link Side } . It should return a boolean <nl> + * true indicating that the remote party is acceptable , or false if not . <nl> + * <nl> + * < p > <nl> + * When the method is invoked , the map will contain String keys and values listing all mods and their versions present . <nl> + * The side represents the side of the remote party . So if you ' re on the server , it ' ll be CLIENT , and vice versa . <nl> + * <nl> + * < p > <nl> + * This method will be invoked both when querying the status of the remote server , and when connecting to the remote server . <nl> + * <nl> + * < p > <nl> + * < strong > NOTE : the server will not be setup at any point when this method is called . Do not try and interact with the server <nl> + * or the client in any way , except to accept or reject the list of mods . < / strong > <nl> + * <nl> + * @ author cpw <nl> + * <nl> + * / <nl> @ Retention ( RetentionPolicy . RUNTIME ) <nl> @ Target ( ElementType . METHOD ) <nl> public @ interface NetworkCheckHandler

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java b / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java 
 index e2452ee . . cdc58cc 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / ObfuscationReflectionHelper . java 
 @ @ - 153 , 9 + 153 , 7 @ @ public class ObfuscationReflectionHelper 
 * Throws an exception if the method is not found . 
 * 
 * @ param clazz The class to find the method on . 
 - * @ param methodName The name of the method to find ( used in developer environments , i . e . " getWorldTime " ) . 
 - * @ param methodObfName The obfuscated name of the method to find ( used in obfuscated environments , i . e . " func _ 72820 _ D " ) . 
 - * If the name you are looking for is on a class that is never obfuscated , this should be null . 
 + * @ param methodName The SRG ( obfuscated ) name of the method to find ( e . g . " func _ 72820 _ D " ) . 
 * @ param parameterTypes The parameter types of the method to find . 
 * @ return The method with the specified name and parameters in the given class . 
 * / 
 @ @ - 164 , 7 + 162 , 7 @ @ public class ObfuscationReflectionHelper 
 { 
 Preconditions . checkNotNull ( clazz ) ; 
 Preconditions . checkNotNull ( methodName ) ; 
 - Preconditions . checkArgument ( methodName . isEmpty ( ) , " Method name cannot be empty " ) ; 
 + Preconditions . checkArgument ( ! methodName . isEmpty ( ) , " Method name cannot be empty " ) ; 
 
 try 
 {

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / Mod . java b / fml / src / main / java / cpw / mods / fml / common / Mod . java 
 index cab2511 . . 1e25d03 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / Mod . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / Mod . java 
 @ @ - 103 , 9 + 103 , 18 @ @ public @ interface Mod 
 * 
 * This is ignored if there is a { @ link NetworkCheckHandler } annotation on a method in this class . 
 * 
 - * @ return 
 + * @ return A version range as specified by the maven version range specification or the empty string 
 * / 
 String acceptableRemoteVersions ( ) default " " ; 
 + 
 + / * * 
 + * A version range specifying compatible save version information . If your mod follows good version numbering 
 + * practice < a href = " http : / / semver . org / " > Like this ( http : / / semver . org / ) < / a > then this should be sufficient . 
 + * 
 + * Advanced users can specify a { @ link SaveInspectionHandler } instead . 
 + * @ return A version range as specified by the maven version range specification or the empty string 
 + * / 
 + String acceptableSaveVersions ( ) default " " ; 
 / * * 
 * An optional bukkit plugin that will be injected into the bukkit plugin framework if 
 * this mod is loaded into the FML framework and the bukkit coremod is present . 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / SaveInspectionHandler . java b / fml / src / main / java / cpw / mods / fml / common / SaveInspectionHandler . java 
 new file mode 100644 
 index 0000000 . . 4c339e0 
 - - - / dev / null 
 + + + b / fml / src / main / java / cpw / mods / fml / common / SaveInspectionHandler . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package cpw . mods . fml . common ; 
 + 
 + import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Retention ; 
 + import java . lang . annotation . RetentionPolicy ; 
 + import java . lang . annotation . Target ; 
 + 
 + / * * 
 + * A method annotated with this on the { @ link Mod } will be called whenever a local save is listed in 
 + * the save games list . 
 + * 
 + * @ author cpw 
 + * 
 + * / 
 + @ Retention ( RetentionPolicy . RUNTIME ) 
 + @ Target ( ElementType . METHOD ) 
 + public @ interface SaveInspectionHandler 
 + { 
 + 
 + } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java b / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java 
 index 4ea3629 . . f0efa3f 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / network / NetworkCheckHandler . java 
 @ @ - 4 , 7 + 4 , 27 @ @ import java . lang . annotation . ElementType ; 
 import java . lang . annotation . Retention ; 
 import java . lang . annotation . RetentionPolicy ; 
 import java . lang . annotation . Target ; 
 + import cpw . mods . fml . relauncher . Side ; 
 
 + / * * 
 + * A method annotated with this will be called when a remote network connection is offered . 
 + * The method should have two parameters , of types { @ link Map < String , String > } and { @ link Side } . It should return a boolean 
 + * true indicating that the remote party is acceptable , or false if not . 
 + * 
 + * < p > 
 + * When the method is invoked , the map will contain String keys and values listing all mods and their versions present . 
 + * The side represents the side of the remote party . So if you ' re on the server , it ' ll be CLIENT , and vice versa . 
 + * 
 + * < p > 
 + * This method will be invoked both when querying the status of the remote server , and when connecting to the remote server . 
 + * 
 + * < p > 
 + * < strong > NOTE : the server will not be setup at any point when this method is called . Do not try and interact with the server 
 + * or the client in any way , except to accept or reject the list of mods . < / strong > 
 + * 
 + * @ author cpw 
 + * 
 + * / 
 @ Retention ( RetentionPolicy . RUNTIME ) 
 @ Target ( ElementType . METHOD ) 
 public @ interface NetworkCheckHandler
