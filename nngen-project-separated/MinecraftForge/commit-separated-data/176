BLEU SCORE: 0.013139808552042212

TEST MSG: fix up the examplemod for new FML and add a couple of extra bits .
GENERATED MSG: Goodbye @ Mod , it was lovely knowing you !

TEST DIFF (one line): diff - - git a / mdk / src / main / java / com / example / examplemod / ExampleMod . java b / mdk / src / main / java / com / example / examplemod / ExampleMod . java <nl> index 42a155b . . 329ecab 100644 <nl> - - - a / mdk / src / main / java / com / example / examplemod / ExampleMod . java <nl> + + + b / mdk / src / main / java / com / example / examplemod / ExampleMod . java <nl> @ @ - 1 , 31 + 1 , 56 @ @ <nl> package com . example . examplemod ; <nl> <nl> + import net . minecraft . block . Block ; <nl> import net . minecraft . init . Blocks ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . RegistryEvent ; <nl> + import net . minecraftforge . eventbus . api . SubscribeEvent ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> - import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . event . FMLServerStartingEvent ; <nl> + import net . minecraftforge . fml . javafmlmod . FMLModLoadingContext ; <nl> + import org . apache . logging . log4j . LogManager ; <nl> import org . apache . logging . log4j . Logger ; <nl> <nl> - @ Mod ( modid = ExampleMod . MODID , name = ExampleMod . NAME , version = ExampleMod . VERSION ) <nl> + / / The value here should match an entry in the META - INF / mods . toml file <nl> + @ Mod ( " examplemod " ) <nl> public class ExampleMod <nl> { <nl> - public static final String MODID = " examplemod " ; <nl> - public static final String NAME = " Example Mod " ; <nl> - public static final String VERSION = " 1 . 0 " ; <nl> + / / Directly reference a log4j logger . <nl> + private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> <nl> - private static Logger logger ; <nl> + public ExampleMod ( ) { <nl> + / / Register the preInit method for modloading <nl> + FMLModLoadingContext . get ( ) . getModEventBus ( ) . addListener ( this : : preInit ) ; <nl> + / / Register the init method for modloading <nl> + FMLModLoadingContext . get ( ) . getModEventBus ( ) . addListener ( this : : init ) ; <nl> <nl> - @ EventHandler <nl> - public void preInit ( FMLPreInitializationEvent event ) <nl> + / / Register ourselves for server , registry and other game events we are interested in <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + private void preInit ( final FMLPreInitializationEvent event ) <nl> { <nl> - logger = event . getModLog ( ) ; <nl> + / / some preinit code <nl> + LOGGER . info ( " HELLO FROM PREINIT " ) ; <nl> } <nl> <nl> - @ EventHandler <nl> - public void init ( FMLInitializationEvent event ) <nl> + private void init ( final FMLInitializationEvent event ) <nl> { <nl> / / some example code <nl> - logger . info ( " DIRT BLOCK > > { } " , Blocks . DIRT . getRegistryName ( ) ) ; <nl> + LOGGER . info ( " DIRT BLOCK > > { } " , Blocks . DIRT . getRegistryName ( ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onBlocksRegistry ( final RegistryEvent . Register < Block > blockRegistryEvent ) { <nl> + / / register a new block here <nl> + LOGGER . info ( " HELLO from Register Block " ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onServerStarting ( FMLServerStartingEvent event ) { <nl> + / / do something when the server starts <nl> + LOGGER . info ( " HELLO from server starting " ) ; <nl> } <nl> } <nl> diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml <nl> new file mode 100644 <nl> index 0000000 . . f012d48 <nl> - - - / dev / null <nl> + + + b / mdk / src / main / resources / META - INF / mods . toml <nl> @ @ - 0 , 0 + 1 , 57 @ @ <nl> + # This is an example mods . toml file . It contains the data relating to the loading mods . <nl> + # There are several mandatory fields ( # mandatory ) , and many more that are optional ( # optional ) . <nl> + # The overall format is standard TOML format , v0 . 5 . 0 . <nl> + # Note that there are a couple of TOML lists in this file . <nl> + # Find more information on toml format here : https : / / github . com / toml - lang / toml <nl> + # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml <nl> + modLoader = " javafml " # mandatory <nl> + # A version range to match for said mod loader - for regular FML @ Mod it will be the minecraft version ( without the 1 . ) <nl> + loaderVersion = " [ 13 , ) " # mandatory <nl> + # A URL to query for updates for this mod . See the JSON update specification < here > <nl> + updateJSONURL = " http : / / myurl . me / " # optional <nl> + # A URL to refer people to when problems occur with this mod <nl> + issueTrackerURL = " http : / / my . issue . tracker / " # optional <nl> + # A URL for the " homepage " for this mod , displayed in the mod UI <nl> + displayURL = " http : / / example . com / " # optional <nl> + # A file name ( in the root of the mod JAR ) containing a logo for display <nl> + logoFile = " examplemod . png " # optional <nl> + # A text field displayed in the mod UI <nl> + credits = " Thanks for this example mod goes to Java " # optional <nl> + # A text field displayed in the mod UI <nl> + authors = " Love , Cheese and small house plants " # optional <nl> + # A list of mods - how many allowed here is determined by the individual mod loader <nl> + [ [ mods ] ] # mandatory <nl> + # The modid of the mod <nl> + modId = " examplemod " # mandatory <nl> + # The version number of the mod - there ' s a few well known $ { } variables useable here or just hardcode it <nl> + version = " 1 . 0 " # mandatory <nl> + # A display name for the mod <nl> + displayName = " Example Mod " # mandatory <nl> + # The description text for the mod ( multi line ! ) ( # mandatory ) <nl> + description = ' ' ' <nl> + This is a long form description of the mod . You can write whatever you want here <nl> + <nl> + Have some lorem ipsum . <nl> + <nl> + Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magna . Orci varius natoque penatibus et magnis dis parturient montes , nascetur ridiculus mus . Sed sagittis luctus odio eu tempus . Interdum et malesuada fames ac ante ipsum primis in faucibus . Pellentesque volutpat ligula eget lacus auctor sagittis . In hac habitasse platea dictumst . Nunc gravida elit vitae sem vehicula efficitur . Donec mattis ipsum et arcu lobortis , eleifend sagittis sem rutrum . Cras pharetra quam eget posuere fermentum . Sed id tincidunt justo . Lorem ipsum dolor sit amet , consectetur adipiscing elit . <nl> + ' ' ' <nl> + <nl> + # A dependency - use the . to indicate dependency for a specific modid . Dependencies are optional . <nl> + [ [ dependencies . examplemod ] ] # optional <nl> + # the modid of the dependency <nl> + modId = " forge " # mandatory <nl> + # Does this dependency have to exist - if not , ordering below must be specified <nl> + mandatory = true # mandatory <nl> + # The version range of the dependency <nl> + versionRange = " [ 14 . 23 . 2 . 0 , ) " # mandatory <nl> + # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory <nl> + ordering = " NONE " <nl> + # Side this dependency is applied on - BOTH , CLIENT or SERVER <nl> + side = " BOTH " <nl> + # Here ' s another dependency <nl> + [ [ dependencies . examplemod ] ] <nl> + modId = " minecraft " <nl> + mandatory = true <nl> + versionRange = " [ 1 . 13 ] " <nl> + ordering = " NONE " <nl> + side = " BOTH " <nl> \ No newline at end of file <nl> diff - - git a / mdk / src / main / resources / mcmod . info b / mdk / src / main / resources / mcmod . info <nl> deleted file mode 100644 <nl> index f480667 . . 0000000 <nl> - - - a / mdk / src / main / resources / mcmod . info <nl> + + + / dev / null <nl> @ @ - 1 , 16 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " modid " : " examplemod " , <nl> - " name " : " Example Mod " , <nl> - " description " : " Example placeholder mod . " , <nl> - " version " : " $ { version } " , <nl> - " mcversion " : " $ { mcversion } " , <nl> - " url " : " " , <nl> - " updateUrl " : " " , <nl> - " authorList " : [ " ExampleDude " ] , <nl> - " credits " : " The Forge and FML guys , for making this example " , <nl> - " logoFile " : " " , <nl> - " screenshots " : [ ] , <nl> - " dependencies " : [ ] <nl> - } <nl> - ] <nl> diff - - git a / mdk / src / main / resources / pack . mcmeta b / mdk / src / main / resources / pack . mcmeta <nl> index 4018267 . . 42ab490 100644 <nl> - - - a / mdk / src / main / resources / pack . mcmeta <nl> + + + b / mdk / src / main / resources / pack . mcmeta <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> { <nl> " pack " : { <nl> " description " : " examplemod resources " , <nl> - " pack _ format " : 3 , <nl> - " _ comment " : " A pack _ format of 3 should be used starting with Minecraft 1 . 11 . All resources , including language files , should be lowercase ( eg : en _ us . lang ) . A pack _ format of 2 will load your mod resources with LegacyV2Adapter , which requires language files to have uppercase letters ( eg : en _ US . lang ) . " <nl> + " pack _ format " : 4 , <nl> + " _ comment " : " A pack _ format of 4 requires json lang files . Note : we require v4 pack meta for all mods . " <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / Mod . java b / src / main / java / net / minecraftforge / fml / common / Mod . java <nl> index 8b2b19f . . 781f72b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Mod . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Mod . java <nl> @ @ - 48 , 29 + 48 , 6 @ @ import net . minecraftforge . fml . relauncher . Side ; <nl> * represent the mod to other Mods in the system . It will be sent various subclasses of { @ link FMLEvent } <nl> * at pre - defined times during the loading of the game , based on where you have applied the { @ link EventHandler } <nl> * annotation . <nl> - * <nl> - * < p > This is a simple example of a Mod . It has the modId of " mymodid " , the name of " My example mod " , it is <nl> - * version 1 . 0 , and depends on FML being loaded . <nl> - * < pre > { @ code <nl> - * package mymod ; <nl> - * / / Declare that this is a mod with modId " mymodid " , name " My example mod " , version " 1 . 0 " and dependency on FML . <nl> - * { @ literal @ } Mod ( modId = " mymodid " , name = " My example mod " , version = " 1 . 0 " , dependencies = " required - after : FML " ) <nl> - * public class MyMod { <nl> - * / / Populate this field with the instance of the mod created by FML <nl> - * { @ literal @ } Instance ( " mymodid " ) <nl> - * public MyMod instance ; <nl> - * <nl> - * / / Mark this method for receiving an { @ link FMLEvent } ( in this case , it ' s the { @ link FMLPreInitializationEvent } ) <nl> - * { @ literal @ } EventHandler public void preInit ( FMLPreInitializationEvent event ) <nl> - * { <nl> - * / / Do stuff in pre - init phase ( read config , create blocks and items , register them ) <nl> - * } <nl> - * } <nl> - * } <nl> - * < / pre > <nl> - * <nl> - * @ author cpw <nl> - * <nl> * / <nl> @ Retention ( RetentionPolicy . RUNTIME ) <nl> @ Target ( ElementType . TYPE ) <nl> @ @ - 86 , 151 + 63 , 6 @ @ public @ interface Mod <nl> String modid ( ) ; <nl> <nl> / * * <nl> - * A user friendly name for the mod <nl> - * / <nl> - String name ( ) default " " ; <nl> - <nl> - / * * <nl> - * A version string for this mod . <nl> - * <nl> - * The version string here should be just numbers separated by dots , <nl> - * to make specifying { @ link # dependencies ( ) } simple for other mods . <nl> - * <nl> - * See also : < a href = " https : / / cwiki . apache . org / confluence / display / MAVENOLD / Versioning " > " Versioning " on Maven Wiki < / a > <nl> - * / <nl> - String version ( ) default " " ; <nl> - <nl> - / * * <nl> - * A dependency string for this mod , which specifies which mod ( s ) it depends on in order to run . <nl> - * <nl> - * A dependency string must start with a combination of these prefixes , separated by " - " : <nl> - * [ before , after ] , [ required ] , [ client , server ] <nl> - * At least one " before " , " after " , or " required " must be specified . <nl> - * Then " : " and the mod id . <nl> - * Then a version range should be specified for the mod by adding " @ " and the version range . <nl> - * The version range format is described in the javadoc here : <nl> - * { @ link VersionRange # createFromVersionSpec ( java . lang . String ) } <nl> - * Then a " ; " . <nl> - * <nl> - * If a " required " mod is missing , or a mod exists with a version outside the specified range , <nl> - * the game will not start and an error screen will tell the player which versions are required . <nl> - * <nl> - * Example : <nl> - * Our example mod : <nl> - * * depends on Forge and uses new features that were introduced in Forge version 14 . 21 . 1 . 2395 <nl> - * " required : forge @ [ 14 . 21 . 1 . 2395 , ) ; " <nl> - * <nl> - * 1 . 12 . 2 Note : for compatibility with Forge older than 14 . 23 . 0 . 2501 the syntax must follow this older format : <nl> - * " required - after : forge @ [ 14 . 21 . 1 . 2395 , ) ; " <nl> - * For more explanation see https : / / github . com / MinecraftForge / MinecraftForge / issues / 4918 <nl> - * <nl> - * * is a dedicated addon to mod1 and has to have its event handlers run after mod1 ' s are run , <nl> - * " required - after : mod1 ; " <nl> - * * has optional integration with mod2 which depends on features introduced in mod2 version 4 . 7 . 0 , <nl> - * " after : mod2 @ [ 4 . 7 . 0 , ) ; " <nl> - * * depends on a client - side - only rendering library called rendermod <nl> - * " required - client : rendermod ; " <nl> - * <nl> - * The full dependencies string is all of those combined : <nl> - * " required : forge @ [ 14 . 21 . 1 . 2395 , ) ; required - after : mod1 ; after : mod2 @ [ 4 . 7 . 0 , ) ; required - client : rendermod ; " <nl> - * <nl> - * This will stop the game and display an error message if any of these is true : <nl> - * The installed forge is too old , <nl> - * mod1 is missing , <nl> - * an old version of mod2 is present , <nl> - * rendermod is missing on the client . <nl> - * / <nl> - String dependencies ( ) default " " ; <nl> - <nl> - / * * <nl> - * Whether to use the mcmod . info metadata by default for this mod . <nl> - * If true , settings in the mcmod . info file will override settings in these annotations . <nl> - * / <nl> - boolean useMetadata ( ) default false ; <nl> - <nl> - / * * <nl> - * If true , this mod will not be loaded on the Dedicated Server environment . <nl> - * Will crash if both serverSideOnly and clientSideOnly are set to true . <nl> - * / <nl> - boolean clientSideOnly ( ) default false ; <nl> - <nl> - / * * <nl> - * If true , this mod will not be loaded on the Client environment . <nl> - * Will crash if both serverSideOnly and clientSideOnly are set to true . <nl> - * / <nl> - boolean serverSideOnly ( ) default false ; <nl> - <nl> - / * * <nl> - * The acceptable range of minecraft versions that this mod will load and run in <nl> - * The default ( " empty string " ) indicates that the currently RUNNING minecraft version is acceptable . <nl> - * This means ANY version that the end user adds the mod to . Modders PLEASE set this . <nl> - * FML will refuse to run with an error if the minecraft version is not in this range across all mods . <nl> - * @ return A version range as specified by the maven version range specification or the empty string <nl> - * / <nl> - String acceptedMinecraftVersions ( ) default " " ; <nl> - / * * <nl> - * A replacement for the no - longer - existing " versionRange " of NetworkMod . Specify a remote version range <nl> - * that this mod will accept as valid . Defaults to nothing , which is interpreted as " only this version " . <nl> - * Another special value is ' * ' which means accept all versions . <nl> - * <nl> - * This is ignored if there is a { @ link NetworkCheckHandler } annotation on a method in this class . <nl> - * <nl> - * @ return A version range as specified by the maven version range specification or the empty string <nl> - * / <nl> - String acceptableRemoteVersions ( ) default " " ; <nl> - <nl> - / * * <nl> - * A version range specifying compatible save version information . If your mod follows good version numbering <nl> - * practice < a href = " http : / / semver . org / " > Like this ( http : / / semver . org / ) < / a > then this should be sufficient . <nl> - * <nl> - * Advanced users can specify a { @ link SaveInspectionHandler } instead . <nl> - * @ return A version range as specified by the maven version range specification or the empty string <nl> - * / <nl> - String acceptableSaveVersions ( ) default " " ; <nl> - / * * <nl> - * Specifying this field allows for a mod to expect a signed jar with a fingerprint matching this value . <nl> - * The fingerprint should be SHA - 1 encoded , lowercase with ' : ' removed . An empty value indicates that <nl> - * the mod is not expecting to be signed . <nl> - * <nl> - * Any incorrectness of the fingerprint , be it missing or wrong , will result in the { @ link FMLFingerprintViolationEvent } <nl> - * event firing < i > prior to any other event on the mod < / i > . <nl> - * <nl> - * @ return A certificate fingerprint that is expected for this mod . <nl> - * / <nl> - String certificateFingerprint ( ) default " " ; <nl> - <nl> - / * * <nl> - * The language the mod is authored in . This will be used to control certain compatibility behaviours for this mod . <nl> - * Valid values are currently " java " , " scala " <nl> - * <nl> - * @ return The language the mod is authored in <nl> - * / <nl> - String modLanguage ( ) default " java " ; <nl> - <nl> - / * * <nl> - * The language adapter to be used to load this mod . This overrides the value of modLanguage . The class must have a <nl> - * public zero variable constructor and implement { @ link ILanguageAdapter } just like the Java and Scala adapters . <nl> - * <nl> - * A class with an invalid constructor or that doesn ' t implement { @ link ILanguageAdapter } will throw an exception and <nl> - * halt loading . <nl> - * <nl> - * @ return The full class name of the language adapter <nl> - * / <nl> - String modLanguageAdapter ( ) default " " ; <nl> - <nl> - / * * <nl> - * If your mod doesn ' t have a runtime persistent effect on the state of the game , and can be disabled without side effects <nl> - * ( minimap mods , graphical tweak mods ) then you can set true here and receive the FMLDeactivationEvent to perform deactivation <nl> - * tasks . <nl> - * This does not affect administrative disabling through the system property fml . modStates or the config file fmlModState . properties . <nl> - * The mod will only be deactivated outside of a running game world - FML will never allow mod deactivation whilst a game server <nl> - * is running . <nl> - * <nl> - * @ return if this mod can be deactivated whilst the game is open . <nl> - * / <nl> - boolean canBeDeactivated ( ) default false ; <nl> - <nl> - / * * <nl> * An optional GUI factory for this mod . This is the name of a class implementing { @ link IModGuiFactory } that will be instantiated <nl> * on the client side , and will have certain configuration / options guis requested from it . <nl> * <nl> @ @ - 239 , 14 + 71 , 6 @ @ public @ interface Mod <nl> String guiFactory ( ) default " " ; <nl> <nl> / * * <nl> - * An optional URL to a JSON file that will be checked once per launch to determine if there is an updated <nl> - * version of this mod and notify the end user . For more information see ForgeVersion . <nl> - * Format is defined here : https : / / gist . github . com / LexManos / 7aacb9aa991330523884 <nl> - * @ return URL to update metadata json <nl> - * / <nl> - String updateJSON ( ) default " " ; <nl> - <nl> - / * * <nl> * A list of custom properties for this mod . Completely up to the mod author if / when they <nl> * want to put anything in here . <nl> * @ return an optional list of custom properties <nl> @ @ - 312 , 6 + 136 , 7 @ @ public @ interface Mod <nl> * @ author cpw <nl> * <nl> * / <nl> + @ Deprecated <nl> @ Retention ( RetentionPolicy . RUNTIME ) <nl> @ Target ( ElementType . METHOD ) <nl> @ interface EventHandler { } <nl> @ @ - 357 , 16 + 182 , 6 @ @ public @ interface Mod <nl> } <nl> <nl> / * * <nl> - * Mod instance factory method . Should return an instance of the mod . Applies only to static methods on the same class as { @ link Mod } . <nl> - * @ author cpw <nl> - * <nl> - * / <nl> - @ Retention ( RetentionPolicy . RUNTIME ) <nl> - @ Target ( ElementType . METHOD ) <nl> - @ interface InstanceFactory { <nl> - } <nl> - <nl> - / * * <nl> * A class which will be subscribed to { @ link net . minecraftforge . common . MinecraftForge . EVENT _ BUS } at mod construction time . <nl> * / <nl> @ Retention ( RetentionPolicy . RUNTIME )

TEST DIFF:
diff - - git a / mdk / src / main / java / com / example / examplemod / ExampleMod . java b / mdk / src / main / java / com / example / examplemod / ExampleMod . java 
 index 42a155b . . 329ecab 100644 
 - - - a / mdk / src / main / java / com / example / examplemod / ExampleMod . java 
 + + + b / mdk / src / main / java / com / example / examplemod / ExampleMod . java 
 @ @ - 1 , 31 + 1 , 56 @ @ 
 package com . example . examplemod ; 
 
 + import net . minecraft . block . Block ; 
 import net . minecraft . init . Blocks ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . RegistryEvent ; 
 + import net . minecraftforge . eventbus . api . SubscribeEvent ; 
 import net . minecraftforge . fml . common . Mod ; 
 - import net . minecraftforge . fml . common . Mod . EventHandler ; 
 import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . event . FMLServerStartingEvent ; 
 + import net . minecraftforge . fml . javafmlmod . FMLModLoadingContext ; 
 + import org . apache . logging . log4j . LogManager ; 
 import org . apache . logging . log4j . Logger ; 
 
 - @ Mod ( modid = ExampleMod . MODID , name = ExampleMod . NAME , version = ExampleMod . VERSION ) 
 + / / The value here should match an entry in the META - INF / mods . toml file 
 + @ Mod ( " examplemod " ) 
 public class ExampleMod 
 { 
 - public static final String MODID = " examplemod " ; 
 - public static final String NAME = " Example Mod " ; 
 - public static final String VERSION = " 1 . 0 " ; 
 + / / Directly reference a log4j logger . 
 + private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 
 - private static Logger logger ; 
 + public ExampleMod ( ) { 
 + / / Register the preInit method for modloading 
 + FMLModLoadingContext . get ( ) . getModEventBus ( ) . addListener ( this : : preInit ) ; 
 + / / Register the init method for modloading 
 + FMLModLoadingContext . get ( ) . getModEventBus ( ) . addListener ( this : : init ) ; 
 
 - @ EventHandler 
 - public void preInit ( FMLPreInitializationEvent event ) 
 + / / Register ourselves for server , registry and other game events we are interested in 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + private void preInit ( final FMLPreInitializationEvent event ) 
 { 
 - logger = event . getModLog ( ) ; 
 + / / some preinit code 
 + LOGGER . info ( " HELLO FROM PREINIT " ) ; 
 } 
 
 - @ EventHandler 
 - public void init ( FMLInitializationEvent event ) 
 + private void init ( final FMLInitializationEvent event ) 
 { 
 / / some example code 
 - logger . info ( " DIRT BLOCK > > { } " , Blocks . DIRT . getRegistryName ( ) ) ; 
 + LOGGER . info ( " DIRT BLOCK > > { } " , Blocks . DIRT . getRegistryName ( ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onBlocksRegistry ( final RegistryEvent . Register < Block > blockRegistryEvent ) { 
 + / / register a new block here 
 + LOGGER . info ( " HELLO from Register Block " ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onServerStarting ( FMLServerStartingEvent event ) { 
 + / / do something when the server starts 
 + LOGGER . info ( " HELLO from server starting " ) ; 
 } 
 } 
 diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml 
 new file mode 100644 
 index 0000000 . . f012d48 
 - - - / dev / null 
 + + + b / mdk / src / main / resources / META - INF / mods . toml 
 @ @ - 0 , 0 + 1 , 57 @ @ 
 + # This is an example mods . toml file . It contains the data relating to the loading mods . 
 + # There are several mandatory fields ( # mandatory ) , and many more that are optional ( # optional ) . 
 + # The overall format is standard TOML format , v0 . 5 . 0 . 
 + # Note that there are a couple of TOML lists in this file . 
 + # Find more information on toml format here : https : / / github . com / toml - lang / toml 
 + # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml 
 + modLoader = " javafml " # mandatory 
 + # A version range to match for said mod loader - for regular FML @ Mod it will be the minecraft version ( without the 1 . ) 
 + loaderVersion = " [ 13 , ) " # mandatory 
 + # A URL to query for updates for this mod . See the JSON update specification < here > 
 + updateJSONURL = " http : / / myurl . me / " # optional 
 + # A URL to refer people to when problems occur with this mod 
 + issueTrackerURL = " http : / / my . issue . tracker / " # optional 
 + # A URL for the " homepage " for this mod , displayed in the mod UI 
 + displayURL = " http : / / example . com / " # optional 
 + # A file name ( in the root of the mod JAR ) containing a logo for display 
 + logoFile = " examplemod . png " # optional 
 + # A text field displayed in the mod UI 
 + credits = " Thanks for this example mod goes to Java " # optional 
 + # A text field displayed in the mod UI 
 + authors = " Love , Cheese and small house plants " # optional 
 + # A list of mods - how many allowed here is determined by the individual mod loader 
 + [ [ mods ] ] # mandatory 
 + # The modid of the mod 
 + modId = " examplemod " # mandatory 
 + # The version number of the mod - there ' s a few well known $ { } variables useable here or just hardcode it 
 + version = " 1 . 0 " # mandatory 
 + # A display name for the mod 
 + displayName = " Example Mod " # mandatory 
 + # The description text for the mod ( multi line ! ) ( # mandatory ) 
 + description = ' ' ' 
 + This is a long form description of the mod . You can write whatever you want here 
 + 
 + Have some lorem ipsum . 
 + 
 + Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magna . Orci varius natoque penatibus et magnis dis parturient montes , nascetur ridiculus mus . Sed sagittis luctus odio eu tempus . Interdum et malesuada fames ac ante ipsum primis in faucibus . Pellentesque volutpat ligula eget lacus auctor sagittis . In hac habitasse platea dictumst . Nunc gravida elit vitae sem vehicula efficitur . Donec mattis ipsum et arcu lobortis , eleifend sagittis sem rutrum . Cras pharetra quam eget posuere fermentum . Sed id tincidunt justo . Lorem ipsum dolor sit amet , consectetur adipiscing elit . 
 + ' ' ' 
 + 
 + # A dependency - use the . to indicate dependency for a specific modid . Dependencies are optional . 
 + [ [ dependencies . examplemod ] ] # optional 
 + # the modid of the dependency 
 + modId = " forge " # mandatory 
 + # Does this dependency have to exist - if not , ordering below must be specified 
 + mandatory = true # mandatory 
 + # The version range of the dependency 
 + versionRange = " [ 14 . 23 . 2 . 0 , ) " # mandatory 
 + # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory 
 + ordering = " NONE " 
 + # Side this dependency is applied on - BOTH , CLIENT or SERVER 
 + side = " BOTH " 
 + # Here ' s another dependency 
 + [ [ dependencies . examplemod ] ] 
 + modId = " minecraft " 
 + mandatory = true 
 + versionRange = " [ 1 . 13 ] " 
 + ordering = " NONE " 
 + side = " BOTH " 
 \ No newline at end of file 
 diff - - git a / mdk / src / main / resources / mcmod . info b / mdk / src / main / resources / mcmod . info 
 deleted file mode 100644 
 index f480667 . . 0000000 
 - - - a / mdk / src / main / resources / mcmod . info 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - [ 
 - { 
 - " modid " : " examplemod " , 
 - " name " : " Example Mod " , 
 - " description " : " Example placeholder mod . " , 
 - " version " : " $ { version } " , 
 - " mcversion " : " $ { mcversion } " , 
 - " url " : " " , 
 - " updateUrl " : " " , 
 - " authorList " : [ " ExampleDude " ] , 
 - " credits " : " The Forge and FML guys , for making this example " , 
 - " logoFile " : " " , 
 - " screenshots " : [ ] , 
 - " dependencies " : [ ] 
 - } 
 - ] 
 diff - - git a / mdk / src / main / resources / pack . mcmeta b / mdk / src / main / resources / pack . mcmeta 
 index 4018267 . . 42ab490 100644 
 - - - a / mdk / src / main / resources / pack . mcmeta 
 + + + b / mdk / src / main / resources / pack . mcmeta 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 { 
 " pack " : { 
 " description " : " examplemod resources " , 
 - " pack _ format " : 3 , 
 - " _ comment " : " A pack _ format of 3 should be used starting with Minecraft 1 . 11 . All resources , including language files , should be lowercase ( eg : en _ us . lang ) . A pack _ format of 2 will load your mod resources with LegacyV2Adapter , which requires language files to have uppercase letters ( eg : en _ US . lang ) . " 
 + " pack _ format " : 4 , 
 + " _ comment " : " A pack _ format of 4 requires json lang files . Note : we require v4 pack meta for all mods . " 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / Mod . java b / src / main / java / net / minecraftforge / fml / common / Mod . java 
 index 8b2b19f . . 781f72b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Mod . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Mod . java 
 @ @ - 48 , 29 + 48 , 6 @ @ import net . minecraftforge . fml . relauncher . Side ; 
 * represent the mod to other Mods in the system . It will be sent various subclasses of { @ link FMLEvent } 
 * at pre - defined times during the loading of the game , based on where you have applied the { @ link EventHandler } 
 * annotation . 
 - * 
 - * < p > This is a simple example of a Mod . It has the modId of " mymodid " , the name of " My example mod " , it is 
 - * version 1 . 0 , and depends on FML being loaded . 
 - * < pre > { @ code 
 - * package mymod ; 
 - * / / Declare that this is a mod with modId " mymodid " , name " My example mod " , version " 1 . 0 " and dependency on FML . 
 - * { @ literal @ } Mod ( modId = " mymodid " , name = " My example mod " , version = " 1 . 0 " , dependencies = " required - after : FML " ) 
 - * public class MyMod { 
 - * / / Populate this field with the instance of the mod created by FML 
 - * { @ literal @ } Instance ( " mymodid " ) 
 - * public MyMod instance ; 
 - * 
 - * / / Mark this method for receiving an { @ link FMLEvent } ( in this case , it ' s the { @ link FMLPreInitializationEvent } ) 
 - * { @ literal @ } EventHandler public void preInit ( FMLPreInitializationEvent event ) 
 - * { 
 - * / / Do stuff in pre - init phase ( read config , create blocks and items , register them ) 
 - * } 
 - * } 
 - * } 
 - * < / pre > 
 - * 
 - * @ author cpw 
 - * 
 * / 
 @ Retention ( RetentionPolicy . RUNTIME ) 
 @ Target ( ElementType . TYPE ) 
 @ @ - 86 , 151 + 63 , 6 @ @ public @ interface Mod 
 String modid ( ) ; 
 
 / * * 
 - * A user friendly name for the mod 
 - * / 
 - String name ( ) default " " ; 
 - 
 - / * * 
 - * A version string for this mod . 
 - * 
 - * The version string here should be just numbers separated by dots , 
 - * to make specifying { @ link # dependencies ( ) } simple for other mods . 
 - * 
 - * See also : < a href = " https : / / cwiki . apache . org / confluence / display / MAVENOLD / Versioning " > " Versioning " on Maven Wiki < / a > 
 - * / 
 - String version ( ) default " " ; 
 - 
 - / * * 
 - * A dependency string for this mod , which specifies which mod ( s ) it depends on in order to run . 
 - * 
 - * A dependency string must start with a combination of these prefixes , separated by " - " : 
 - * [ before , after ] , [ required ] , [ client , server ] 
 - * At least one " before " , " after " , or " required " must be specified . 
 - * Then " : " and the mod id . 
 - * Then a version range should be specified for the mod by adding " @ " and the version range . 
 - * The version range format is described in the javadoc here : 
 - * { @ link VersionRange # createFromVersionSpec ( java . lang . String ) } 
 - * Then a " ; " . 
 - * 
 - * If a " required " mod is missing , or a mod exists with a version outside the specified range , 
 - * the game will not start and an error screen will tell the player which versions are required . 
 - * 
 - * Example : 
 - * Our example mod : 
 - * * depends on Forge and uses new features that were introduced in Forge version 14 . 21 . 1 . 2395 
 - * " required : forge @ [ 14 . 21 . 1 . 2395 , ) ; " 
 - * 
 - * 1 . 12 . 2 Note : for compatibility with Forge older than 14 . 23 . 0 . 2501 the syntax must follow this older format : 
 - * " required - after : forge @ [ 14 . 21 . 1 . 2395 , ) ; " 
 - * For more explanation see https : / / github . com / MinecraftForge / MinecraftForge / issues / 4918 
 - * 
 - * * is a dedicated addon to mod1 and has to have its event handlers run after mod1 ' s are run , 
 - * " required - after : mod1 ; " 
 - * * has optional integration with mod2 which depends on features introduced in mod2 version 4 . 7 . 0 , 
 - * " after : mod2 @ [ 4 . 7 . 0 , ) ; " 
 - * * depends on a client - side - only rendering library called rendermod 
 - * " required - client : rendermod ; " 
 - * 
 - * The full dependencies string is all of those combined : 
 - * " required : forge @ [ 14 . 21 . 1 . 2395 , ) ; required - after : mod1 ; after : mod2 @ [ 4 . 7 . 0 , ) ; required - client : rendermod ; " 
 - * 
 - * This will stop the game and display an error message if any of these is true : 
 - * The installed forge is too old , 
 - * mod1 is missing , 
 - * an old version of mod2 is present , 
 - * rendermod is missing on the client . 
 - * / 
 - String dependencies ( ) default " " ; 
 - 
 - / * * 
 - * Whether to use the mcmod . info metadata by default for this mod . 
 - * If true , settings in the mcmod . info file will override settings in these annotations . 
 - * / 
 - boolean useMetadata ( ) default false ; 
 - 
 - / * * 
 - * If true , this mod will not be loaded on the Dedicated Server environment . 
 - * Will crash if both serverSideOnly and clientSideOnly are set to true . 
 - * / 
 - boolean clientSideOnly ( ) default false ; 
 - 
 - / * * 
 - * If true , this mod will not be loaded on the Client environment . 
 - * Will crash if both serverSideOnly and clientSideOnly are set to true . 
 - * / 
 - boolean serverSideOnly ( ) default false ; 
 - 
 - / * * 
 - * The acceptable range of minecraft versions that this mod will load and run in 
 - * The default ( " empty string " ) indicates that the currently RUNNING minecraft version is acceptable . 
 - * This means ANY version that the end user adds the mod to . Modders PLEASE set this . 
 - * FML will refuse to run with an error if the minecraft version is not in this range across all mods . 
 - * @ return A version range as specified by the maven version range specification or the empty string 
 - * / 
 - String acceptedMinecraftVersions ( ) default " " ; 
 - / * * 
 - * A replacement for the no - longer - existing " versionRange " of NetworkMod . Specify a remote version range 
 - * that this mod will accept as valid . Defaults to nothing , which is interpreted as " only this version " . 
 - * Another special value is ' * ' which means accept all versions . 
 - * 
 - * This is ignored if there is a { @ link NetworkCheckHandler } annotation on a method in this class . 
 - * 
 - * @ return A version range as specified by the maven version range specification or the empty string 
 - * / 
 - String acceptableRemoteVersions ( ) default " " ; 
 - 
 - / * * 
 - * A version range specifying compatible save version information . If your mod follows good version numbering 
 - * practice < a href = " http : / / semver . org / " > Like this ( http : / / semver . org / ) < / a > then this should be sufficient . 
 - * 
 - * Advanced users can specify a { @ link SaveInspectionHandler } instead . 
 - * @ return A version range as specified by the maven version range specification or the empty string 
 - * / 
 - String acceptableSaveVersions ( ) default " " ; 
 - / * * 
 - * Specifying this field allows for a mod to expect a signed jar with a fingerprint matching this value . 
 - * The fingerprint should be SHA - 1 encoded , lowercase with ' : ' removed . An empty value indicates that 
 - * the mod is not expecting to be signed . 
 - * 
 - * Any incorrectness of the fingerprint , be it missing or wrong , will result in the { @ link FMLFingerprintViolationEvent } 
 - * event firing < i > prior to any other event on the mod < / i > . 
 - * 
 - * @ return A certificate fingerprint that is expected for this mod . 
 - * / 
 - String certificateFingerprint ( ) default " " ; 
 - 
 - / * * 
 - * The language the mod is authored in . This will be used to control certain compatibility behaviours for this mod . 
 - * Valid values are currently " java " , " scala " 
 - * 
 - * @ return The language the mod is authored in 
 - * / 
 - String modLanguage ( ) default " java " ; 
 - 
 - / * * 
 - * The language adapter to be used to load this mod . This overrides the value of modLanguage . The class must have a 
 - * public zero variable constructor and implement { @ link ILanguageAdapter } just like the Java and Scala adapters . 
 - * 
 - * A class with an invalid constructor or that doesn ' t implement { @ link ILanguageAdapter } will throw an exception and 
 - * halt loading . 
 - * 
 - * @ return The full class name of the language adapter 
 - * / 
 - String modLanguageAdapter ( ) default " " ; 
 - 
 - / * * 
 - * If your mod doesn ' t have a runtime persistent effect on the state of the game , and can be disabled without side effects 
 - * ( minimap mods , graphical tweak mods ) then you can set true here and receive the FMLDeactivationEvent to perform deactivation 
 - * tasks . 
 - * This does not affect administrative disabling through the system property fml . modStates or the config file fmlModState . properties . 
 - * The mod will only be deactivated outside of a running game world - FML will never allow mod deactivation whilst a game server 
 - * is running . 
 - * 
 - * @ return if this mod can be deactivated whilst the game is open . 
 - * / 
 - boolean canBeDeactivated ( ) default false ; 
 - 
 - / * * 
 * An optional GUI factory for this mod . This is the name of a class implementing { @ link IModGuiFactory } that will be instantiated 
 * on the client side , and will have certain configuration / options guis requested from it . 
 * 
 @ @ - 239 , 14 + 71 , 6 @ @ public @ interface Mod 
 String guiFactory ( ) default " " ; 
 
 / * * 
 - * An optional URL to a JSON file that will be checked once per launch to determine if there is an updated 
 - * version of this mod and notify the end user . For more information see ForgeVersion . 
 - * Format is defined here : https : / / gist . github . com / LexManos / 7aacb9aa991330523884 
 - * @ return URL to update metadata json 
 - * / 
 - String updateJSON ( ) default " " ; 
 - 
 - / * * 
 * A list of custom properties for this mod . Completely up to the mod author if / when they 
 * want to put anything in here . 
 * @ return an optional list of custom properties 
 @ @ - 312 , 6 + 136 , 7 @ @ public @ interface Mod 
 * @ author cpw 
 * 
 * / 
 + @ Deprecated 
 @ Retention ( RetentionPolicy . RUNTIME ) 
 @ Target ( ElementType . METHOD ) 
 @ interface EventHandler { } 
 @ @ - 357 , 16 + 182 , 6 @ @ public @ interface Mod 
 } 
 
 / * * 
 - * Mod instance factory method . Should return an instance of the mod . Applies only to static methods on the same class as { @ link Mod } . 
 - * @ author cpw 
 - * 
 - * / 
 - @ Retention ( RetentionPolicy . RUNTIME ) 
 - @ Target ( ElementType . METHOD ) 
 - @ interface InstanceFactory { 
 - } 
 - 
 - / * * 
 * A class which will be subscribed to { @ link net . minecraftforge . common . MinecraftForge . EVENT _ BUS } at mod construction time . 
 * / 
 @ Retention ( RetentionPolicy . RUNTIME )
