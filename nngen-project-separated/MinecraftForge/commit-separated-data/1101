BLEU SCORE: 0.029083177105737566

TEST MSG: Rather than try to fall back to the backup level . dat in case of weirdness
GENERATED MSG: Kill more references to modloader .

TEST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java b / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java <nl> index 14c05ac . . 5b11da1 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java <nl> @ @ - 272 , 7 + 272 , 21 @ @ public class FMLContainer extends DummyModContainer implements WorldAccessContai <nl> itemSubstitutions . add ( dataTag . getString ( " K " ) ) ; <nl> } <nl> } <nl> - failedElements = GameData . injectWorldIDMap ( dataList , blockedIds , blockAliases , itemAliases , blockSubstitutions , itemSubstitutions , true , true ) ; <nl> + try <nl> + { <nl> + failedElements = GameData . injectWorldIDMap ( dataList , blockedIds , blockAliases , itemAliases , blockSubstitutions , itemSubstitutions , true , true ) ; <nl> + } catch ( IllegalArgumentException ex ) <nl> + { <nl> + / / In the case of IllegalArgumentException the state map is utterly toast . We should immediately abort <nl> + String msg = " The world state is utterly corrupted and this save is NOT loadable \ n \ n " <nl> + + " There is a high probability that a mod has broken the \ n " <nl> + + " ID map and there is \ n " <nl> + + " NOTHING FML or Forge can do to recover this save . \ n \ n " <nl> + + " If you changed your mods , try reverting the change " ; <nl> + FMLLog . log ( Level . FATAL , ex , msg ) ; <nl> + StartupQuery . notify ( msg ) ; <nl> + StartupQuery . abort ( ) ; <nl> + } <nl> } <nl> <nl> if ( failedElements ! = null & & ! failedElements . isEmpty ( ) )
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java b / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java <nl> index 55f02c1 . . 90720af 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java <nl> @ @ - 50 , 9 + 50 , 7 @ @ public class FMLDummyContainer extends DummyModContainer implements WorldAccessC <nl> meta . authorList = Arrays . asList ( " cpw , LexManos " ) ; <nl> meta . description = " The Forge Mod Loader provides the ability for systems to load mods " + <nl> " from the file system . It also provides key capabilities for mods to be able " + <nl> - " to cooperate and provide a good modding environment . " + <nl> - " The mod loading system is compatible with ModLoader , all your ModLoader " + <nl> - " mods should work . " ; <nl> + " to cooperate and provide a good modding environment . " ; <nl> meta . url = " https : / / github . com / MinecraftForge / FML / wiki " ; <nl> meta . updateUrl = " https : / / github . com / MinecraftForge / FML / wiki " ; <nl> meta . screenshots = new String [ 0 ] ; <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / Loader . java b / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> index 86c176f . . 23692a0 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> @ @ - 278 , 20 + 278 , 13 @ @ public class Loader <nl> / * * <nl> * The primary loading code <nl> * <nl> - * This is visited during first initialization by Minecraft to scan and load <nl> - * the mods from all sources 1 . The minecraft jar itself ( for loading of in <nl> - * jar mods - I would like to remove this if possible but forge depends on it <nl> - * at present ) 2 . The mods directory with expanded subdirs , searching for <nl> - * mods named mod _ * . class 3 . The mods directory for zip and jar files , <nl> - * searching for mod classes named mod _ * . class again <nl> * <nl> * The found resources are first loaded into the { @ link # modClassLoader } <nl> * ( always ) then scanned for class resources matching the specification <nl> * above . <nl> * <nl> * If they provide the { @ link Mod } annotation , they will be loaded as <nl> - * " FML mods " , which currently is effectively a NO - OP . If they are <nl> - * determined to be { @ link BaseModProxy } subclasses they are loaded as such . <nl> + * " FML mods " <nl> * <nl> * Finally , if they are successfully loaded as classes , they are then added <nl> * to the available mod list . <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java b / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java <nl> index 3a0bf48 . . d3c40a1 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java <nl> @ @ - 47 , 25 + 47 , 6 @ @ public class FMLSanityChecker implements IFMLCallHook <nl> private static final String FMLFINGERPRINT = " 51 : 0A : FB : 4C : AF : A4 : A0 : F2 : F5 : CF : C5 : 0E : B4 : CC : 3C : 30 : 24 : 4A : E3 : 8E " . toLowerCase ( ) . replace ( " : " , " " ) ; <nl> private static final String FORGEFINGERPRINT = " E3 : C3 : D5 : 0C : 7C : 98 : 6D : F7 : 4C : 64 : 5C : 0A : C5 : 46 : 39 : 74 : 1C : 90 : A5 : 57 " . toLowerCase ( ) . replace ( " : " , " " ) ; <nl> private static final String MCFINGERPRINT = " CD : 99 : 95 : 96 : 56 : F7 : 53 : DC : 28 : D8 : 63 : B4 : 67 : 69 : F7 : F8 : FB : AE : FC : FC " . toLowerCase ( ) . replace ( " : " , " " ) ; <nl> - static class MLDetectorClassVisitor extends ClassVisitor <nl> - { <nl> - private boolean foundMarker = false ; <nl> - private MLDetectorClassVisitor ( ) <nl> - { <nl> - super ( Opcodes . ASM4 ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public FieldVisitor visitField ( int arg0 , String arg1 , String arg2 , String arg3 , Object arg4 ) <nl> - { <nl> - if ( " fmlMarker " . equals ( arg1 ) ) <nl> - { <nl> - foundMarker = true ; <nl> - } <nl> - return null ; <nl> - } <nl> - } <nl> - <nl> private LaunchClassLoader cl ; <nl> public static File fmlLocation ; <nl> <nl> @ @ - 192 , 28 + 173 , 6 @ @ public class FMLSanityChecker implements IFMLCallHook <nl> { <nl> FMLRelaunchLog . severe ( " FML appears to be missing any signature data . This is not a good thing " ) ; <nl> } <nl> - byte [ ] mlClass = cl . getClassBytes ( " ModLoader " ) ; <nl> - / / Only care in obfuscated env <nl> - if ( mlClass = = null ) <nl> - { <nl> - return null ; <nl> - } <nl> - MLDetectorClassVisitor mlTester = new MLDetectorClassVisitor ( ) ; <nl> - ClassReader cr = new ClassReader ( mlClass ) ; <nl> - cr . accept ( mlTester , ClassReader . SKIP _ CODE ) ; <nl> - if ( ! mlTester . foundMarker ) <nl> - { <nl> - JOptionPane . showMessageDialog ( null , " < html > CRITICAL ERROR < br / > " + <nl> - 	 	 " ModLoader was detected in this environment < br / > " + <nl> - " ForgeModLoader cannot be installed alongside ModLoader < br / > " + <nl> - " All mods should work without ModLoader being installed < br / > " + <nl> - " Because ForgeModLoader is 100 % compatible with ModLoader < br / > " + <nl> - " Re - install Minecraft Forge or Forge ModLoader into a clean < br / > " + <nl> - " jar and try again . " , <nl> - " ForgeModLoader critical error " , <nl> - JOptionPane . ERROR _ MESSAGE ) ; <nl> - throw new RuntimeException ( " Invalid ModLoader class detected " ) ; <nl> - } <nl> return null ; <nl> } <nl> <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> index e40cd34 . . 253aa26 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> @ @ - 108 , 12 + 108 , 6 @ @ public class FMLDeobfuscatingRemapper extends Remapper { <nl> } <nl> } <nl> classNameBiMap = builder . build ( ) ; <nl> - / / Special case some mappings for modloader mods <nl> - mcpBuilder . put ( " BaseMod " , " net / minecraft / src / BaseMod " ) ; <nl> - mcpBuilder . put ( " ModLoader " , " net / minecraft / src / ModLoader " ) ; <nl> - mcpBuilder . put ( " EntityRendererProxy " , " net / minecraft / src / EntityRendererProxy " ) ; <nl> - mcpBuilder . put ( " MLProp " , " net / minecraft / src / MLProp " ) ; <nl> - mcpBuilder . put ( " TradeEntry " , " net / minecraft / src / TradeEntry " ) ; <nl> mcpNameBiMap = mcpBuilder . build ( ) ; <nl> } <nl> catch ( IOException ioe )

TEST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java b / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java 
 index 14c05ac . . 5b11da1 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLContainer . java 
 @ @ - 272 , 7 + 272 , 21 @ @ public class FMLContainer extends DummyModContainer implements WorldAccessContai 
 itemSubstitutions . add ( dataTag . getString ( " K " ) ) ; 
 } 
 } 
 - failedElements = GameData . injectWorldIDMap ( dataList , blockedIds , blockAliases , itemAliases , blockSubstitutions , itemSubstitutions , true , true ) ; 
 + try 
 + { 
 + failedElements = GameData . injectWorldIDMap ( dataList , blockedIds , blockAliases , itemAliases , blockSubstitutions , itemSubstitutions , true , true ) ; 
 + } catch ( IllegalArgumentException ex ) 
 + { 
 + / / In the case of IllegalArgumentException the state map is utterly toast . We should immediately abort 
 + String msg = " The world state is utterly corrupted and this save is NOT loadable \ n \ n " 
 + + " There is a high probability that a mod has broken the \ n " 
 + + " ID map and there is \ n " 
 + + " NOTHING FML or Forge can do to recover this save . \ n \ n " 
 + + " If you changed your mods , try reverting the change " ; 
 + FMLLog . log ( Level . FATAL , ex , msg ) ; 
 + StartupQuery . notify ( msg ) ; 
 + StartupQuery . abort ( ) ; 
 + } 
 } 
 
 if ( failedElements ! = null & & ! failedElements . isEmpty ( ) )

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java b / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java 
 index 55f02c1 . . 90720af 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLDummyContainer . java 
 @ @ - 50 , 9 + 50 , 7 @ @ public class FMLDummyContainer extends DummyModContainer implements WorldAccessC 
 meta . authorList = Arrays . asList ( " cpw , LexManos " ) ; 
 meta . description = " The Forge Mod Loader provides the ability for systems to load mods " + 
 " from the file system . It also provides key capabilities for mods to be able " + 
 - " to cooperate and provide a good modding environment . " + 
 - " The mod loading system is compatible with ModLoader , all your ModLoader " + 
 - " mods should work . " ; 
 + " to cooperate and provide a good modding environment . " ; 
 meta . url = " https : / / github . com / MinecraftForge / FML / wiki " ; 
 meta . updateUrl = " https : / / github . com / MinecraftForge / FML / wiki " ; 
 meta . screenshots = new String [ 0 ] ; 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / Loader . java b / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 index 86c176f . . 23692a0 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 @ @ - 278 , 20 + 278 , 13 @ @ public class Loader 
 / * * 
 * The primary loading code 
 * 
 - * This is visited during first initialization by Minecraft to scan and load 
 - * the mods from all sources 1 . The minecraft jar itself ( for loading of in 
 - * jar mods - I would like to remove this if possible but forge depends on it 
 - * at present ) 2 . The mods directory with expanded subdirs , searching for 
 - * mods named mod _ * . class 3 . The mods directory for zip and jar files , 
 - * searching for mod classes named mod _ * . class again 
 * 
 * The found resources are first loaded into the { @ link # modClassLoader } 
 * ( always ) then scanned for class resources matching the specification 
 * above . 
 * 
 * If they provide the { @ link Mod } annotation , they will be loaded as 
 - * " FML mods " , which currently is effectively a NO - OP . If they are 
 - * determined to be { @ link BaseModProxy } subclasses they are loaded as such . 
 + * " FML mods " 
 * 
 * Finally , if they are successfully loaded as classes , they are then added 
 * to the available mod list . 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java b / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java 
 index 3a0bf48 . . d3c40a1 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / FMLSanityChecker . java 
 @ @ - 47 , 25 + 47 , 6 @ @ public class FMLSanityChecker implements IFMLCallHook 
 private static final String FMLFINGERPRINT = " 51 : 0A : FB : 4C : AF : A4 : A0 : F2 : F5 : CF : C5 : 0E : B4 : CC : 3C : 30 : 24 : 4A : E3 : 8E " . toLowerCase ( ) . replace ( " : " , " " ) ; 
 private static final String FORGEFINGERPRINT = " E3 : C3 : D5 : 0C : 7C : 98 : 6D : F7 : 4C : 64 : 5C : 0A : C5 : 46 : 39 : 74 : 1C : 90 : A5 : 57 " . toLowerCase ( ) . replace ( " : " , " " ) ; 
 private static final String MCFINGERPRINT = " CD : 99 : 95 : 96 : 56 : F7 : 53 : DC : 28 : D8 : 63 : B4 : 67 : 69 : F7 : F8 : FB : AE : FC : FC " . toLowerCase ( ) . replace ( " : " , " " ) ; 
 - static class MLDetectorClassVisitor extends ClassVisitor 
 - { 
 - private boolean foundMarker = false ; 
 - private MLDetectorClassVisitor ( ) 
 - { 
 - super ( Opcodes . ASM4 ) ; 
 - } 
 - 
 - @ Override 
 - public FieldVisitor visitField ( int arg0 , String arg1 , String arg2 , String arg3 , Object arg4 ) 
 - { 
 - if ( " fmlMarker " . equals ( arg1 ) ) 
 - { 
 - foundMarker = true ; 
 - } 
 - return null ; 
 - } 
 - } 
 - 
 private LaunchClassLoader cl ; 
 public static File fmlLocation ; 
 
 @ @ - 192 , 28 + 173 , 6 @ @ public class FMLSanityChecker implements IFMLCallHook 
 { 
 FMLRelaunchLog . severe ( " FML appears to be missing any signature data . This is not a good thing " ) ; 
 } 
 - byte [ ] mlClass = cl . getClassBytes ( " ModLoader " ) ; 
 - / / Only care in obfuscated env 
 - if ( mlClass = = null ) 
 - { 
 - return null ; 
 - } 
 - MLDetectorClassVisitor mlTester = new MLDetectorClassVisitor ( ) ; 
 - ClassReader cr = new ClassReader ( mlClass ) ; 
 - cr . accept ( mlTester , ClassReader . SKIP _ CODE ) ; 
 - if ( ! mlTester . foundMarker ) 
 - { 
 - JOptionPane . showMessageDialog ( null , " < html > CRITICAL ERROR < br / > " + 
 - 	 	 " ModLoader was detected in this environment < br / > " + 
 - " ForgeModLoader cannot be installed alongside ModLoader < br / > " + 
 - " All mods should work without ModLoader being installed < br / > " + 
 - " Because ForgeModLoader is 100 % compatible with ModLoader < br / > " + 
 - " Re - install Minecraft Forge or Forge ModLoader into a clean < br / > " + 
 - " jar and try again . " , 
 - " ForgeModLoader critical error " , 
 - JOptionPane . ERROR _ MESSAGE ) ; 
 - throw new RuntimeException ( " Invalid ModLoader class detected " ) ; 
 - } 
 return null ; 
 } 
 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 index e40cd34 . . 253aa26 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 @ @ - 108 , 12 + 108 , 6 @ @ public class FMLDeobfuscatingRemapper extends Remapper { 
 } 
 } 
 classNameBiMap = builder . build ( ) ; 
 - / / Special case some mappings for modloader mods 
 - mcpBuilder . put ( " BaseMod " , " net / minecraft / src / BaseMod " ) ; 
 - mcpBuilder . put ( " ModLoader " , " net / minecraft / src / ModLoader " ) ; 
 - mcpBuilder . put ( " EntityRendererProxy " , " net / minecraft / src / EntityRendererProxy " ) ; 
 - mcpBuilder . put ( " MLProp " , " net / minecraft / src / MLProp " ) ; 
 - mcpBuilder . put ( " TradeEntry " , " net / minecraft / src / TradeEntry " ) ; 
 mcpNameBiMap = mcpBuilder . build ( ) ; 
 } 
 catch ( IOException ioe )
