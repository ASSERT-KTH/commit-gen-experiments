BLEU SCORE: 0.009336251796882755

TEST MSG: Fixed minor race condition between mouse clicks and TESR in the animation example .
GENERATED MSG: FML ' s metabolic processes are now history . FML ' s off the twig . FML ' s kicked the bucket , FML ' s shuffled off this mortal coil ,

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / animation / Animation . java b / src / main / java / net / minecraftforge / client / model / animation / Animation . java <nl> index 00b231d . . 75cc9cc 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / animation / Animation . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / animation / Animation . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ public enum Animation implements IResourceManagerReloadListener <nl> { <nl> INSTANCE ; <nl> <nl> + private float clientPartialTickTime ; <nl> + <nl> / * * <nl> * Get the global world time for the current tick , in seconds . <nl> * / <nl> @ @ - 43 , 6 + 45 , 14 @ @ public enum Animation implements IResourceManagerReloadListener <nl> } <nl> <nl> / * * <nl> + * Get current partialTickTime . <nl> + * / <nl> + public static float getPartialTickTime ( ) <nl> + { <nl> + return INSTANCE . clientPartialTickTime ; <nl> + } <nl> + <nl> + / * * <nl> * Load a new instance if AnimationStateMachine at specified location , with specified custom parameters . <nl> * / <nl> public IAnimationStateMachine load ( ResourceLocation location , ImmutableMap < String , ITimeValue > customParameters ) <nl> @ @ - 176 , 6 + 186 , 16 @ @ public enum Animation implements IResourceManagerReloadListener <nl> <nl> private final ModelBlockAnimation defaultModelBlockAnimation = new ModelBlockAnimation ( ImmutableMap . < String , ImmutableMap < String , float [ ] > > of ( ) , ImmutableMap . < String , ModelBlockAnimation . MBClip > of ( ) ) ; <nl> <nl> + / * * <nl> + * Iternal hook , do not use . <nl> + * / <nl> + public static void setClientPartialTickTime ( float clientPartialTickTime ) { <nl> + Animation . INSTANCE . clientPartialTickTime = clientPartialTickTime ; <nl> + } <nl> + <nl> + / * * <nl> + * Iternal hook , do not use . <nl> + * / <nl> public void onResourceManagerReload ( IResourceManager manager ) <nl> { <nl> this . manager = manager ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index 63d60ce . . d42da0f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 47 , 6 + 47 , 7 @ @ import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . storage . SaveHandler ; <nl> import net . minecraft . world . storage . WorldInfo ; <nl> + import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . common . ForgeVersion ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> @ @ - 337 , 6 + 338 , 7 @ @ public class FMLCommonHandler <nl> <nl> public void onRenderTickStart ( float timer ) <nl> { <nl> + Animation . setClientPartialTickTime ( timer ) ; <nl> bus ( ) . post ( new TickEvent . RenderTickEvent ( Phase . START , timer ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> index 820ca94 . . 81eb2cf 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> @ @ - 314 , 7 + 314 , 7 @ @ public class ModelAnimationDebug <nl> } * / <nl> else if ( asm . currentState ( ) . equals ( " default " ) ) <nl> { <nl> - float time = Animation . getWorldTime ( getWorld ( ) ) ; <nl> + float time = Animation . getWorldTime ( getWorld ( ) , Animation . getPartialTickTime ( ) ) ; <nl> clickTime . setValue ( time ) ; <nl> / / offset . setValue ( time ) ; <nl> / / asm . transition ( " moving " ) ; <nl> @ @ - 322 , 7 + 322 , 7 @ @ public class ModelAnimationDebug <nl> } <nl> else if ( asm . currentState ( ) . equals ( " moving " ) ) <nl> { <nl> - clickTime . setValue ( Animation . getWorldTime ( getWorld ( ) ) ) ; <nl> + clickTime . setValue ( Animation . getWorldTime ( getWorld ( ) , Animation . getPartialTickTime ( ) ) ) ; <nl> asm . transition ( " stopping " ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java b / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java <nl> index 5cb3f3f . . ea9bb59 100644 <nl> - - - a / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java <nl> + + + b / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java <nl> @ @ - 38 , 6 + 38 , 6 @ @ public class FMLForgePlugin implements IFMLLoadingPlugin <nl> @ Override <nl> public String getAccessTransformerClass ( ) <nl> { <nl> - return " net . minecraftforge . transformers . ForgeAccessTransformer " ; <nl> + return null ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeVersion . java b / src / main / java / net / minecraftforge / common / ForgeVersion . java <nl> index fcc02fe . . bc5db2f 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeVersion . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeVersion . java <nl> @ @ - 26 , 7 + 26 , 10 @ @ public class ForgeVersion <nl> public static final int revisionVersion = 3 ; <nl> / / This number is incremented every time Jenkins builds Forge , and never reset . Should always be 0 in the repo code . <nl> public static final int buildVersion = 0 ; <nl> - <nl> + / / This is the minecraft version we ' re building for - used in various places in Forge / FML code <nl> + public static final String mcVersion = " 1 . 8 " ; <nl> + / / This is the MCP data version we ' re using <nl> + public static final String mcpVersion = " 9 . 10 " ; <nl> private static Status status = PENDING ; <nl> private static String target = null ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java <nl> index 50c8c57 . . 6b60ace 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java <nl> @ @ - 93 , 7 + 93 , 7 @ @ public class AccessTransformer implements IClassTransformer <nl> <nl> public AccessTransformer ( ) throws IOException <nl> { <nl> - this ( " fml _ at . cfg " ) ; <nl> + this ( " forge _ at . cfg " ) ; <nl> } <nl> protected AccessTransformer ( String rulesFile ) throws IOException <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java b / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java <nl> index e86b1ed . . b8ca931 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java <nl> @ @ - 21 , 7 + 21 , 6 @ @ public class FMLCorePlugin implements IFMLLoadingPlugin <nl> { <nl> return new String [ ] { <nl> " net . minecraftforge . fml . common . asm . transformers . BlamingTransformer " , <nl> - " net . minecraftforge . fml . common . asm . transformers . MarkerTransformer " , <nl> " net . minecraftforge . fml . common . asm . transformers . SideTransformer " , <nl> " net . minecraftforge . fml . common . asm . transformers . EventSubscriptionTransformer " , <nl> " net . minecraftforge . fml . common . asm . transformers . EventSubscriberTransformer " , <nl> diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java b / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java <nl> index 5c46260 . . 6a9cf9b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java <nl> @ @ - 13 , 14 + 13 , 11 @ @ <nl> package net . minecraftforge . fml . relauncher ; <nl> <nl> import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> - import java . util . Properties ; <nl> - import org . apache . logging . log4j . Level ; <nl> <nl> import net . minecraft . launchwrapper . LaunchClassLoader ; <nl> + import net . minecraftforge . common . ForgeVersion ; <nl> <nl> public class FMLInjectionData <nl> { <nl> @ @ - 31 , 35 + 28 , 18 @ @ public class FMLInjectionData <nl> static String build ; <nl> static String mccversion ; <nl> static String mcpversion ; <nl> - static String deobfuscationDataHash ; <nl> <nl> public static List < String > containers = new ArrayList < String > ( ) ; <nl> <nl> static void build ( File mcHome , LaunchClassLoader classLoader ) <nl> { <nl> minecraftHome = mcHome ; <nl> - InputStream stream = classLoader . getResourceAsStream ( " fmlversion . properties " ) ; <nl> - Properties properties = new Properties ( ) ; <nl> - <nl> - if ( stream ! = null ) <nl> - { <nl> - try <nl> - { <nl> - properties . load ( stream ) ; <nl> - } <nl> - catch ( IOException ex ) <nl> - { <nl> - FMLRelaunchLog . log ( Level . ERROR , ex , " Could not get FML version information - corrupted installation detected ! " ) ; <nl> - } <nl> - } <nl> - <nl> - major = properties . getProperty ( " fmlbuild . major . number " , " missing " ) ; <nl> - minor = properties . getProperty ( " fmlbuild . minor . number " , " missing " ) ; <nl> - rev = properties . getProperty ( " fmlbuild . revision . number " , " missing " ) ; <nl> - build = properties . getProperty ( " fmlbuild . build . number " , " missing " ) ; <nl> - mccversion = properties . getProperty ( " fmlbuild . mcversion " , " missing " ) ; <nl> - mcpversion = properties . getProperty ( " fmlbuild . mcpversion " , " missing " ) ; <nl> - deobfuscationDataHash = properties . getProperty ( " fmlbuild . deobfuscation . hash " , " deadbeef " ) ; <nl> + major = String . valueOf ( ForgeVersion . majorVersion ) ; <nl> + minor = String . valueOf ( ForgeVersion . minorVersion ) ; <nl> + rev = String . valueOf ( ForgeVersion . revisionVersion ) ; <nl> + build = String . valueOf ( ForgeVersion . buildVersion ) ; <nl> + mccversion = ForgeVersion . mcVersion ; <nl> + mcpversion = ForgeVersion . mcpVersion ; <nl> } <nl> <nl> static String debfuscationDataName ( ) <nl> diff - - git a / src / main / java / net / minecraftforge / transformers / ForgeAccessTransformer . java b / src / main / java / net / minecraftforge / transformers / ForgeAccessTransformer . java <nl> deleted file mode 100644 <nl> index 57610e9 . . 0000000 <nl> - - - a / src / main / java / net / minecraftforge / transformers / ForgeAccessTransformer . java <nl> + + + / dev / null <nl> @ @ - 1 , 13 + 0 , 0 @ @ <nl> - package net . minecraftforge . transformers ; <nl> - <nl> - import java . io . IOException ; <nl> - <nl> - import net . minecraftforge . fml . common . asm . transformers . AccessTransformer ; <nl> - <nl> - public class ForgeAccessTransformer extends AccessTransformer <nl> - { <nl> - public ForgeAccessTransformer ( ) throws IOException <nl> - { <nl> - super ( " forge _ at . cfg " ) ; <nl> - } <nl> - } <nl> diff - - git a / src / main / resources / fmlversion . properties b / src / main / resources / fmlversion . properties <nl> deleted file mode 100644 <nl> index a9ebc93 . . 0000000 <nl> - - - a / src / main / resources / fmlversion . properties <nl> + + + / dev / null <nl> @ @ - 1 , 6 + 0 , 0 @ @ <nl> - fmlbuild . major . number = 8 <nl> - fmlbuild . minor . number = 0 <nl> - fmlbuild . revision . number = 76 <nl> - fmlbuild . build . number = 1404 <nl> - fmlbuild . mcversion = 1 . 8 <nl> - fmlbuild . mcpversion = 9 . 10

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / animation / Animation . java b / src / main / java / net / minecraftforge / client / model / animation / Animation . java 
 index 00b231d . . 75cc9cc 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / animation / Animation . java 
 + + + b / src / main / java / net / minecraftforge / client / model / animation / Animation . java 
 @ @ - 26 , 6 + 26 , 8 @ @ public enum Animation implements IResourceManagerReloadListener 
 { 
 INSTANCE ; 
 
 + private float clientPartialTickTime ; 
 + 
 / * * 
 * Get the global world time for the current tick , in seconds . 
 * / 
 @ @ - 43 , 6 + 45 , 14 @ @ public enum Animation implements IResourceManagerReloadListener 
 } 
 
 / * * 
 + * Get current partialTickTime . 
 + * / 
 + public static float getPartialTickTime ( ) 
 + { 
 + return INSTANCE . clientPartialTickTime ; 
 + } 
 + 
 + / * * 
 * Load a new instance if AnimationStateMachine at specified location , with specified custom parameters . 
 * / 
 public IAnimationStateMachine load ( ResourceLocation location , ImmutableMap < String , ITimeValue > customParameters ) 
 @ @ - 176 , 6 + 186 , 16 @ @ public enum Animation implements IResourceManagerReloadListener 
 
 private final ModelBlockAnimation defaultModelBlockAnimation = new ModelBlockAnimation ( ImmutableMap . < String , ImmutableMap < String , float [ ] > > of ( ) , ImmutableMap . < String , ModelBlockAnimation . MBClip > of ( ) ) ; 
 
 + / * * 
 + * Iternal hook , do not use . 
 + * / 
 + public static void setClientPartialTickTime ( float clientPartialTickTime ) { 
 + Animation . INSTANCE . clientPartialTickTime = clientPartialTickTime ; 
 + } 
 + 
 + / * * 
 + * Iternal hook , do not use . 
 + * / 
 public void onResourceManagerReload ( IResourceManager manager ) 
 { 
 this . manager = manager ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index 63d60ce . . d42da0f 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 47 , 6 + 47 , 7 @ @ import net . minecraft . util . IThreadListener ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . storage . SaveHandler ; 
 import net . minecraft . world . storage . WorldInfo ; 
 + import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . common . ForgeVersion ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 @ @ - 337 , 6 + 338 , 7 @ @ public class FMLCommonHandler 
 
 public void onRenderTickStart ( float timer ) 
 { 
 + Animation . setClientPartialTickTime ( timer ) ; 
 bus ( ) . post ( new TickEvent . RenderTickEvent ( Phase . START , timer ) ) ; 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 index 820ca94 . . 81eb2cf 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 @ @ - 314 , 7 + 314 , 7 @ @ public class ModelAnimationDebug 
 } * / 
 else if ( asm . currentState ( ) . equals ( " default " ) ) 
 { 
 - float time = Animation . getWorldTime ( getWorld ( ) ) ; 
 + float time = Animation . getWorldTime ( getWorld ( ) , Animation . getPartialTickTime ( ) ) ; 
 clickTime . setValue ( time ) ; 
 / / offset . setValue ( time ) ; 
 / / asm . transition ( " moving " ) ; 
 @ @ - 322 , 7 + 322 , 7 @ @ public class ModelAnimationDebug 
 } 
 else if ( asm . currentState ( ) . equals ( " moving " ) ) 
 { 
 - clickTime . setValue ( Animation . getWorldTime ( getWorld ( ) ) ) ; 
 + clickTime . setValue ( Animation . getWorldTime ( getWorld ( ) , Animation . getPartialTickTime ( ) ) ) ; 
 asm . transition ( " stopping " ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java b / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java 
 index 5cb3f3f . . ea9bb59 100644 
 - - - a / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java 
 + + + b / src / main / java / net / minecraftforge / classloading / FMLForgePlugin . java 
 @ @ - 38 , 6 + 38 , 6 @ @ public class FMLForgePlugin implements IFMLLoadingPlugin 
 @ Override 
 public String getAccessTransformerClass ( ) 
 { 
 - return " net . minecraftforge . transformers . ForgeAccessTransformer " ; 
 + return null ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeVersion . java b / src / main / java / net / minecraftforge / common / ForgeVersion . java 
 index fcc02fe . . bc5db2f 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeVersion . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeVersion . java 
 @ @ - 26 , 7 + 26 , 10 @ @ public class ForgeVersion 
 public static final int revisionVersion = 3 ; 
 / / This number is incremented every time Jenkins builds Forge , and never reset . Should always be 0 in the repo code . 
 public static final int buildVersion = 0 ; 
 - 
 + / / This is the minecraft version we ' re building for - used in various places in Forge / FML code 
 + public static final String mcVersion = " 1 . 8 " ; 
 + / / This is the MCP data version we ' re using 
 + public static final String mcpVersion = " 9 . 10 " ; 
 private static Status status = PENDING ; 
 private static String target = null ; 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java 
 index 50c8c57 . . 6b60ace 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java 
 @ @ - 93 , 7 + 93 , 7 @ @ public class AccessTransformer implements IClassTransformer 
 
 public AccessTransformer ( ) throws IOException 
 { 
 - this ( " fml _ at . cfg " ) ; 
 + this ( " forge _ at . cfg " ) ; 
 } 
 protected AccessTransformer ( String rulesFile ) throws IOException 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java b / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java 
 index e86b1ed . . b8ca931 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / FMLCorePlugin . java 
 @ @ - 21 , 7 + 21 , 6 @ @ public class FMLCorePlugin implements IFMLLoadingPlugin 
 { 
 return new String [ ] { 
 " net . minecraftforge . fml . common . asm . transformers . BlamingTransformer " , 
 - " net . minecraftforge . fml . common . asm . transformers . MarkerTransformer " , 
 " net . minecraftforge . fml . common . asm . transformers . SideTransformer " , 
 " net . minecraftforge . fml . common . asm . transformers . EventSubscriptionTransformer " , 
 " net . minecraftforge . fml . common . asm . transformers . EventSubscriberTransformer " , 
 diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java b / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java 
 index 5c46260 . . 6a9cf9b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / FMLInjectionData . java 
 @ @ - 13 , 14 + 13 , 11 @ @ 
 package net . minecraftforge . fml . relauncher ; 
 
 import java . io . File ; 
 - import java . io . IOException ; 
 - import java . io . InputStream ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 - import java . util . Properties ; 
 - import org . apache . logging . log4j . Level ; 
 
 import net . minecraft . launchwrapper . LaunchClassLoader ; 
 + import net . minecraftforge . common . ForgeVersion ; 
 
 public class FMLInjectionData 
 { 
 @ @ - 31 , 35 + 28 , 18 @ @ public class FMLInjectionData 
 static String build ; 
 static String mccversion ; 
 static String mcpversion ; 
 - static String deobfuscationDataHash ; 
 
 public static List < String > containers = new ArrayList < String > ( ) ; 
 
 static void build ( File mcHome , LaunchClassLoader classLoader ) 
 { 
 minecraftHome = mcHome ; 
 - InputStream stream = classLoader . getResourceAsStream ( " fmlversion . properties " ) ; 
 - Properties properties = new Properties ( ) ; 
 - 
 - if ( stream ! = null ) 
 - { 
 - try 
 - { 
 - properties . load ( stream ) ; 
 - } 
 - catch ( IOException ex ) 
 - { 
 - FMLRelaunchLog . log ( Level . ERROR , ex , " Could not get FML version information - corrupted installation detected ! " ) ; 
 - } 
 - } 
 - 
 - major = properties . getProperty ( " fmlbuild . major . number " , " missing " ) ; 
 - minor = properties . getProperty ( " fmlbuild . minor . number " , " missing " ) ; 
 - rev = properties . getProperty ( " fmlbuild . revision . number " , " missing " ) ; 
 - build = properties . getProperty ( " fmlbuild . build . number " , " missing " ) ; 
 - mccversion = properties . getProperty ( " fmlbuild . mcversion " , " missing " ) ; 
 - mcpversion = properties . getProperty ( " fmlbuild . mcpversion " , " missing " ) ; 
 - deobfuscationDataHash = properties . getProperty ( " fmlbuild . deobfuscation . hash " , " deadbeef " ) ; 
 + major = String . valueOf ( ForgeVersion . majorVersion ) ; 
 + minor = String . valueOf ( ForgeVersion . minorVersion ) ; 
 + rev = String . valueOf ( ForgeVersion . revisionVersion ) ; 
 + build = String . valueOf ( ForgeVersion . buildVersion ) ; 
 + mccversion = ForgeVersion . mcVersion ; 
 + mcpversion = ForgeVersion . mcpVersion ; 
 } 
 
 static String debfuscationDataName ( ) 
 diff - - git a / src / main / java / net / minecraftforge / transformers / ForgeAccessTransformer . java b / src / main / java / net / minecraftforge / transformers / ForgeAccessTransformer . java 
 deleted file mode 100644 
 index 57610e9 . . 0000000 
 - - - a / src / main / java / net / minecraftforge / transformers / ForgeAccessTransformer . java 
 + + + / dev / null 
 @ @ - 1 , 13 + 0 , 0 @ @ 
 - package net . minecraftforge . transformers ; 
 - 
 - import java . io . IOException ; 
 - 
 - import net . minecraftforge . fml . common . asm . transformers . AccessTransformer ; 
 - 
 - public class ForgeAccessTransformer extends AccessTransformer 
 - { 
 - public ForgeAccessTransformer ( ) throws IOException 
 - { 
 - super ( " forge _ at . cfg " ) ; 
 - } 
 - } 
 diff - - git a / src / main / resources / fmlversion . properties b / src / main / resources / fmlversion . properties 
 deleted file mode 100644 
 index a9ebc93 . . 0000000 
 - - - a / src / main / resources / fmlversion . properties 
 + + + / dev / null 
 @ @ - 1 , 6 + 0 , 0 @ @ 
 - fmlbuild . major . number = 8 
 - fmlbuild . minor . number = 0 
 - fmlbuild . revision . number = 76 
 - fmlbuild . build . number = 1404 
 - fmlbuild . mcversion = 1 . 8 
 - fmlbuild . mcpversion = 9 . 10
