BLEU SCORE: 0.037477767366779206

TEST MSG: Skip hang detection on first run of the server hang watchdog
GENERATED MSG: Prevent players from logging in until server has finished starting .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java . patch b / patches / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 33785bb <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java . patch <nl> @ @ - 0 , 0 + 1 , 28 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java <nl> + + + + . . / src - work / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java <nl> + @ @ - 22 , 6 + 22 , 7 @ @ <nl> + private static final Logger field _ 180251 _ a = LogManager . getLogger ( ) ; <nl> + private final DedicatedServer field _ 180249 _ b ; <nl> + private final long field _ 180250 _ c ; <nl> + + private boolean firstRun = true ; <nl> + <nl> + public ServerHangWatchdog ( DedicatedServer p _ i46310 _ 1 _ ) <nl> + { <nl> + @ @ - 37 , 7 + 38 , 7 @ @ <nl> + long j = MinecraftServer . func _ 130071 _ aq ( ) ; <nl> + long k = j - i ; <nl> + <nl> + - if ( k > this . field _ 180250 _ c ) <nl> + + if ( k > this . field _ 180250 _ c & & ! this . firstRun ) <nl> + { <nl> + field _ 180251 _ a . fatal ( " A single server tick took " + String . format ( " % . 2f " , new Object [ ] { Float . valueOf ( ( float ) k / 1000 . 0F ) } ) + " seconds ( should be max " + String . format ( " % . 2f " , new Object [ ] { Float . valueOf ( 0 . 05F ) } ) + " ) " ) ; <nl> + field _ 180251 _ a . fatal ( " Considering it to be crashed , server will forcibly shutdown . " ) ; <nl> + @ @ - 75 , 6 + 76 , 8 @ @ <nl> + this . func _ 180248 _ a ( ) ; <nl> + } <nl> + <nl> + + this . firstRun = false ; <nl> + + <nl> + try <nl> + { <nl> + Thread . sleep ( i + this . field _ 180250 _ c - j ) ;
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> index 4af9edd . . 9db42b8 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> @ @ - 7 , 7 + 7 , 15 @ @ <nl> import cpw . mods . fml . relauncher . Side ; <nl> import cpw . mods . fml . relauncher . SideOnly ; <nl> import java . io . BufferedReader ; <nl> - @ @ - 109 , 6 + 110 , 8 @ @ <nl> + @ @ - 45 , 6 + 46 , 7 @ @ <nl> + private boolean field _ 71338 _ p ; <nl> + private WorldSettings . GameType field _ 71337 _ q ; <nl> + private boolean field _ 71335 _ s ; <nl> + + public static boolean allowPlayerLogins = false ; <nl> + private static final String _ _ OBFID = " CL _ 00001784 " ; <nl> + <nl> + public DedicatedServer ( File p _ i1508 _ 1 _ ) <nl> + @ @ - 109 , 6 + 111 , 8 @ @ <nl> field _ 155771 _ h . warn ( " To start the server with more ram , launch it as \ " java - Xmx1024M - Xms1024M - jar minecraft _ server . jar \ " " ) ; <nl> } <nl> <nl> @ @ - 16 , 7 + 24 , 7 @ @ <nl> field _ 155771 _ h . info ( " Loading properties " ) ; <nl> this . field _ 71340 _ o = new PropertyManager ( new File ( " server . properties " ) ) ; <nl> <nl> - @ @ - 180 , 6 + 183 , 8 @ @ <nl> + @ @ - 180 , 6 + 184 , 8 @ @ <nl> field _ 155771 _ h . warn ( " To change this , set \ " online - mode \ " to \ " true \ " in the server . properties file . " ) ; <nl> } <nl> <nl> @ @ - 25 , 7 + 33 , 7 @ @ <nl> this . func _ 71210 _ a ( new DedicatedPlayerList ( this ) ) ; <nl> long j = System . nanoTime ( ) ; <nl> <nl> - @ @ - 225 , 6 + 230 , 7 @ @ <nl> + @ @ - 225 , 6 + 231 , 7 @ @ <nl> this . func _ 71191 _ d ( ( this . func _ 71207 _ Z ( ) + 8 ) / 16 * 16 ) ; <nl> this . func _ 71191 _ d ( MathHelper . func _ 76125 _ a ( this . func _ 71207 _ Z ( ) , 64 , 256 ) ) ; <nl> this . field _ 71340 _ o . func _ 73667 _ a ( " max - build - height " , Integer . valueOf ( this . func _ 71207 _ Z ( ) ) ) ; <nl> @ @ - 33 , 11 + 41 , 12 @ @ <nl> field _ 155771 _ h . info ( " Preparing level \ " " + this . func _ 71270 _ I ( ) + " \ " " ) ; <nl> this . func _ 71247 _ a ( this . func _ 71270 _ I ( ) , this . func _ 71270 _ I ( ) , k , worldtype , s2 ) ; <nl> long i1 = System . nanoTime ( ) - j ; <nl> - @ @ - 245 , 7 + 251 , 7 @ @ <nl> + @ @ - 245 , 7 + 252 , 8 @ @ <nl> this . field _ 71339 _ n . func _ 72602 _ a ( ) ; <nl> } <nl> <nl> - return true ; <nl> + + allowPlayerLogins = true ; <nl> + return FMLCommonHandler . instance ( ) . handleServerStarting ( this ) ; <nl> } <nl> <nl> diff - - git a / fml / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch b / fml / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 959535c <nl> - - - / dev / null <nl> + + + b / fml / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java <nl> + + + + . . / src - work / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java <nl> + @ @ - 7 , 6 + 7 , 7 @ @ <nl> + import net . minecraft . network . handshake . client . C00Handshake ; <nl> + import net . minecraft . network . login . server . S00PacketDisconnect ; <nl> + import net . minecraft . server . MinecraftServer ; <nl> + + import net . minecraft . server . dedicated . DedicatedServer ; <nl> + import net . minecraft . util . ChatComponentText ; <nl> + import net . minecraft . util . IChatComponent ; <nl> + <nl> + @ @ - 24 , 6 + 25 , 14 @ @ <nl> + <nl> + public void func _ 147383 _ a ( C00Handshake p _ 147383 _ 1 _ ) <nl> + { <nl> + + if ( ! DedicatedServer . allowPlayerLogins ) <nl> + + { <nl> + + ChatComponentText chatcomponenttext = new ChatComponentText ( " Server is still starting ! Please wait before reconnecting . " ) ; <nl> + + this . field _ 147386 _ b . func _ 150725 _ a ( new S00PacketDisconnect ( chatcomponenttext ) , new GenericFutureListener [ 0 ] ) ; <nl> + + this . field _ 147386 _ b . func _ 150718 _ a ( chatcomponenttext ) ; <nl> + + return ; <nl> + + } <nl> + + <nl> + switch ( NetHandlerHandshakeTCP . SwitchEnumConnectionState . field _ 151291 _ a [ p _ 147383 _ 1 _ . func _ 149594 _ c ( ) . ordinal ( ) ] ) <nl> + { <nl> + case 1 :

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java . patch b / patches / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java . patch 
 new file mode 100644 
 index 0000000 . . 33785bb 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java . patch 
 @ @ - 0 , 0 + 1 , 28 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java 
 + + + + . . / src - work / minecraft / net / minecraft / server / dedicated / ServerHangWatchdog . java 
 + @ @ - 22 , 6 + 22 , 7 @ @ 
 + private static final Logger field _ 180251 _ a = LogManager . getLogger ( ) ; 
 + private final DedicatedServer field _ 180249 _ b ; 
 + private final long field _ 180250 _ c ; 
 + + private boolean firstRun = true ; 
 + 
 + public ServerHangWatchdog ( DedicatedServer p _ i46310 _ 1 _ ) 
 + { 
 + @ @ - 37 , 7 + 38 , 7 @ @ 
 + long j = MinecraftServer . func _ 130071 _ aq ( ) ; 
 + long k = j - i ; 
 + 
 + - if ( k > this . field _ 180250 _ c ) 
 + + if ( k > this . field _ 180250 _ c & & ! this . firstRun ) 
 + { 
 + field _ 180251 _ a . fatal ( " A single server tick took " + String . format ( " % . 2f " , new Object [ ] { Float . valueOf ( ( float ) k / 1000 . 0F ) } ) + " seconds ( should be max " + String . format ( " % . 2f " , new Object [ ] { Float . valueOf ( 0 . 05F ) } ) + " ) " ) ; 
 + field _ 180251 _ a . fatal ( " Considering it to be crashed , server will forcibly shutdown . " ) ; 
 + @ @ - 75 , 6 + 76 , 8 @ @ 
 + this . func _ 180248 _ a ( ) ; 
 + } 
 + 
 + + this . firstRun = false ; 
 + + 
 + try 
 + { 
 + Thread . sleep ( i + this . field _ 180250 _ c - j ) ;

NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 index 4af9edd . . 9db42b8 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 @ @ - 7 , 7 + 7 , 15 @ @ 
 import cpw . mods . fml . relauncher . Side ; 
 import cpw . mods . fml . relauncher . SideOnly ; 
 import java . io . BufferedReader ; 
 - @ @ - 109 , 6 + 110 , 8 @ @ 
 + @ @ - 45 , 6 + 46 , 7 @ @ 
 + private boolean field _ 71338 _ p ; 
 + private WorldSettings . GameType field _ 71337 _ q ; 
 + private boolean field _ 71335 _ s ; 
 + + public static boolean allowPlayerLogins = false ; 
 + private static final String _ _ OBFID = " CL _ 00001784 " ; 
 + 
 + public DedicatedServer ( File p _ i1508 _ 1 _ ) 
 + @ @ - 109 , 6 + 111 , 8 @ @ 
 field _ 155771 _ h . warn ( " To start the server with more ram , launch it as \ " java - Xmx1024M - Xms1024M - jar minecraft _ server . jar \ " " ) ; 
 } 
 
 @ @ - 16 , 7 + 24 , 7 @ @ 
 field _ 155771 _ h . info ( " Loading properties " ) ; 
 this . field _ 71340 _ o = new PropertyManager ( new File ( " server . properties " ) ) ; 
 
 - @ @ - 180 , 6 + 183 , 8 @ @ 
 + @ @ - 180 , 6 + 184 , 8 @ @ 
 field _ 155771 _ h . warn ( " To change this , set \ " online - mode \ " to \ " true \ " in the server . properties file . " ) ; 
 } 
 
 @ @ - 25 , 7 + 33 , 7 @ @ 
 this . func _ 71210 _ a ( new DedicatedPlayerList ( this ) ) ; 
 long j = System . nanoTime ( ) ; 
 
 - @ @ - 225 , 6 + 230 , 7 @ @ 
 + @ @ - 225 , 6 + 231 , 7 @ @ 
 this . func _ 71191 _ d ( ( this . func _ 71207 _ Z ( ) + 8 ) / 16 * 16 ) ; 
 this . func _ 71191 _ d ( MathHelper . func _ 76125 _ a ( this . func _ 71207 _ Z ( ) , 64 , 256 ) ) ; 
 this . field _ 71340 _ o . func _ 73667 _ a ( " max - build - height " , Integer . valueOf ( this . func _ 71207 _ Z ( ) ) ) ; 
 @ @ - 33 , 11 + 41 , 12 @ @ 
 field _ 155771 _ h . info ( " Preparing level \ " " + this . func _ 71270 _ I ( ) + " \ " " ) ; 
 this . func _ 71247 _ a ( this . func _ 71270 _ I ( ) , this . func _ 71270 _ I ( ) , k , worldtype , s2 ) ; 
 long i1 = System . nanoTime ( ) - j ; 
 - @ @ - 245 , 7 + 251 , 7 @ @ 
 + @ @ - 245 , 7 + 252 , 8 @ @ 
 this . field _ 71339 _ n . func _ 72602 _ a ( ) ; 
 } 
 
 - return true ; 
 + + allowPlayerLogins = true ; 
 + return FMLCommonHandler . instance ( ) . handleServerStarting ( this ) ; 
 } 
 
 diff - - git a / fml / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch b / fml / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch 
 new file mode 100644 
 index 0000000 . . 959535c 
 - - - / dev / null 
 + + + b / fml / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java 
 + + + + . . / src - work / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java 
 + @ @ - 7 , 6 + 7 , 7 @ @ 
 + import net . minecraft . network . handshake . client . C00Handshake ; 
 + import net . minecraft . network . login . server . S00PacketDisconnect ; 
 + import net . minecraft . server . MinecraftServer ; 
 + + import net . minecraft . server . dedicated . DedicatedServer ; 
 + import net . minecraft . util . ChatComponentText ; 
 + import net . minecraft . util . IChatComponent ; 
 + 
 + @ @ - 24 , 6 + 25 , 14 @ @ 
 + 
 + public void func _ 147383 _ a ( C00Handshake p _ 147383 _ 1 _ ) 
 + { 
 + + if ( ! DedicatedServer . allowPlayerLogins ) 
 + + { 
 + + ChatComponentText chatcomponenttext = new ChatComponentText ( " Server is still starting ! Please wait before reconnecting . " ) ; 
 + + this . field _ 147386 _ b . func _ 150725 _ a ( new S00PacketDisconnect ( chatcomponenttext ) , new GenericFutureListener [ 0 ] ) ; 
 + + this . field _ 147386 _ b . func _ 150718 _ a ( chatcomponenttext ) ; 
 + + return ; 
 + + } 
 + + 
 + switch ( NetHandlerHandshakeTCP . SwitchEnumConnectionState . field _ 151291 _ a [ p _ 147383 _ 1 _ . func _ 149594 _ c ( ) . ordinal ( ) ] ) 
 + { 
 + case 1 :
