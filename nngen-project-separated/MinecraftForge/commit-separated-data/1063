BLEU SCORE: 0.029381754016308166

TEST MSG: Call some loader stuffs
GENERATED MSG: Add in a " server stopped " event

TEST DIFF (one line): diff - - git a / fml / jsons / 1 . 7 . 10 . json b / fml / jsons / 1 . 7 . 10 . json <nl> index 020bda2 . . 5956054 100644 <nl> - - - a / fml / jsons / 1 . 7 . 10 . json <nl> + + + b / fml / jsons / 1 . 7 . 10 . json <nl> @ @ - 74 , 7 + 74 , 7 @ @ <nl> " name " : " com . google . code . gson : gson : 2 . 2 . 4 " <nl> } , <nl> { <nl> - " name " : " com . mojang : authlib : 1 . 5 . 16 " <nl> + " name " : " com . mojang : authlib : 1 . 5 . 21 " <nl> } , <nl> { <nl> " name " : " org . apache . logging . log4j : log4j - api : 2 . 0 - beta9 " <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoadController . java b / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> index 6c8b915 . . 21c77c2 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / LoadController . java <nl> @ @ - 37 , 6 + 37 , 7 @ @ import com . google . common . eventbus . EventBus ; <nl> import com . google . common . eventbus . Subscribe ; <nl> <nl> import cpw . mods . fml . common . LoaderState . ModState ; <nl> + import cpw . mods . fml . common . ProgressManager . ProgressBar ; <nl> import cpw . mods . fml . common . event . FMLEvent ; <nl> import cpw . mods . fml . common . event . FMLLoadEvent ; <nl> import cpw . mods . fml . common . event . FMLModDisabledEvent ; <nl> @ @ - 182 , 10 + 183 , 16 @ @ public class LoadController <nl> { <nl> modObjectList = buildModObjectList ( ) ; <nl> } <nl> + String event = stateEvent . toString ( ) ; <nl> + event = event . substring ( event . lastIndexOf ( ' . ' ) + 1 ) ; <nl> + event = event . substring ( 0 , event . indexOf ( ' @ ' ) ) ; <nl> + ProgressBar bar = ProgressManager . push ( event + " propagation " , activeModList . size ( ) ) ; <nl> for ( ModContainer mc : activeModList ) <nl> { <nl> + bar . step ( " mod : " + mc . getName ( ) ) ; <nl> sendEventToModContainer ( stateEvent , mc ) ; <nl> } <nl> + ProgressManager . pop ( bar ) ; <nl> } <nl> <nl> private void sendEventToModContainer ( FMLEvent stateEvent , ModContainer mc ) <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / Loader . java b / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> index 6469c47 . . d54e8a5 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> @ @ - 53 , 6 + 53 , 7 @ @ import com . google . common . collect . TreeMultimap ; <nl> <nl> import cpw . mods . fml . common . LoaderState . ModState ; <nl> import cpw . mods . fml . common . ModContainer . Disableable ; <nl> + import cpw . mods . fml . common . ProgressManager . ProgressBar ; <nl> import cpw . mods . fml . common . discovery . ModDiscoverer ; <nl> import cpw . mods . fml . common . event . FMLInterModComms ; <nl> import cpw . mods . fml . common . event . FMLLoadEvent ; <nl> @ @ - 152 , 6 + 153 , 7 @ @ public class Loader <nl> private ImmutableMap < String , String > fmlBrandingProperties ; <nl> private File forcedModFile ; <nl> private ModDiscoverer discoverer ; <nl> + private ProgressBar progressBar ; <nl> <nl> public static Loader instance ( ) <nl> { <nl> @ @ - 460 , 6 + 462 , 8 @ @ public class Loader <nl> * / <nl> public void loadMods ( ) <nl> { <nl> + progressBar = ProgressManager . push ( " FML " , 5 ) ; <nl> + progressBar . step ( " Constructing " ) ; <nl> initializeLoader ( ) ; <nl> mods = Lists . newArrayList ( ) ; <nl> namedMods = Maps . newHashMap ( ) ; <nl> @ @ - 499 , 6 + 503 , 7 @ @ public class Loader <nl> { <nl> FMLLog . fine ( " No user mod signature data found " ) ; <nl> } <nl> + progressBar . step ( " Preinitialization " ) ; <nl> modController . transition ( LoaderState . PREINITIALIZATION , false ) ; <nl> } <nl> <nl> @ @ - 512 , 6 + 517 , 7 @ @ public class Loader <nl> ObjectHolderRegistry . INSTANCE . findObjectHolders ( discoverer . getASMTable ( ) ) ; <nl> modController . distributeStateMessage ( LoaderState . PREINITIALIZATION , discoverer . getASMTable ( ) , canonicalConfigDir ) ; <nl> ObjectHolderRegistry . INSTANCE . applyObjectHolders ( ) ; <nl> + progressBar . step ( " Initialization " ) ; <nl> modController . transition ( LoaderState . INITIALIZATION , false ) ; <nl> } <nl> <nl> @ @ - 689 , 15 + 695 , 19 @ @ public class Loader <nl> { <nl> / / Mod controller should be in the initialization state here <nl> modController . distributeStateMessage ( LoaderState . INITIALIZATION ) ; <nl> + progressBar . step ( " Postinitialization " ) ; <nl> modController . transition ( LoaderState . POSTINITIALIZATION , false ) ; <nl> modController . distributeStateMessage ( FMLInterModComms . IMCEvent . class ) ; <nl> modController . distributeStateMessage ( LoaderState . POSTINITIALIZATION ) ; <nl> + progressBar . step ( " Finishing up " ) ; <nl> modController . transition ( LoaderState . AVAILABLE , false ) ; <nl> modController . distributeStateMessage ( LoaderState . AVAILABLE ) ; <nl> GameData . freezeData ( ) ; <nl> / / Dump the custom registry data map , if necessary <nl> GameData . dumpRegistry ( minecraftDir ) ; <nl> FMLLog . info ( " Forge Mod Loader has successfully loaded % d mod % s " , mods . size ( ) , mods . size ( ) = = 1 ? " " : " s " ) ; <nl> + ProgressManager . pop ( progressBar ) ; <nl> + progressBar = null ; <nl> } <nl> <nl> public ICrashCallable getCallableCrashInformation ( )
NEAREST DIFF (one line): diff - - git a / fml / common / cpw / mods / fml / common / FMLCommonHandler . java b / fml / common / cpw / mods / fml / common / FMLCommonHandler . java <nl> index c0f6c6a . . b462777 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / FMLCommonHandler . java <nl> + + + b / fml / common / cpw / mods / fml / common / FMLCommonHandler . java <nl> @ @ - 453 , 4 + 453 , 9 @ @ public class FMLCommonHandler <nl> { <nl> sidedDelegate . disconnectIDMismatch ( serverDifference , toKill , network ) ; <nl> } <nl> + <nl> + public void handleServerStopped ( ) <nl> + { <nl> + Loader . instance ( ) . serverStopped ( ) ; <nl> + } <nl> } <nl> diff - - git a / fml / common / cpw / mods / fml / common / FMLModContainer . java b / fml / common / cpw / mods / fml / common / FMLModContainer . java <nl> index 69b97fe . . 7ab6449 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / FMLModContainer . java <nl> + + + b / fml / common / cpw / mods / fml / common / FMLModContainer . java <nl> @ @ - 60 , 6 + 60 , 7 @ @ import cpw . mods . fml . common . event . FMLPostInitializationEvent ; <nl> import cpw . mods . fml . common . event . FMLPreInitializationEvent ; <nl> import cpw . mods . fml . common . event . FMLServerStartedEvent ; <nl> import cpw . mods . fml . common . event . FMLServerStartingEvent ; <nl> + import cpw . mods . fml . common . event . FMLServerStoppedEvent ; <nl> import cpw . mods . fml . common . event . FMLServerStoppingEvent ; <nl> import cpw . mods . fml . common . event . FMLStateEvent ; <nl> import cpw . mods . fml . common . network . FMLNetworkHandler ; <nl> @ @ - 92 , 6 + 93 , 7 @ @ public class FMLModContainer implements ModContainer <nl> . put ( FMLServerStartingEvent . class , Mod . ServerStarting . class ) <nl> . put ( FMLServerStartedEvent . class , Mod . ServerStarted . class ) <nl> . put ( FMLServerStoppingEvent . class , Mod . ServerStopping . class ) <nl> + . put ( FMLServerStoppedEvent . class , Mod . ServerStopped . class ) <nl> . put ( IMCEvent . class , Mod . IMCCallback . class ) <nl> . put ( FMLFingerprintViolationEvent . class , Mod . FingerprintWarning . class ) <nl> . build ( ) ; <nl> diff - - git a / fml / common / cpw / mods / fml / common / Loader . java b / fml / common / cpw / mods / fml / common / Loader . java <nl> index e0626cf . . a8a5b67 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / Loader . java <nl> + + + b / fml / common / cpw / mods / fml / common / Loader . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . util . concurrent . Callable ; <nl> import java . util . logging . Level ; <nl> <nl> import net . minecraft . crash . CallableMinecraftVersion ; <nl> + import net . minecraft . server . MinecraftServer ; <nl> <nl> import com . google . common . base . CharMatcher ; <nl> import com . google . common . base . Function ; <nl> @ @ - 710 , 8 + 711 , 6 @ @ public class Loader <nl> { <nl> modController . distributeStateMessage ( LoaderState . SERVER _ STOPPING ) ; <nl> modController . transition ( LoaderState . SERVER _ STOPPING ) ; <nl> - modController . transition ( LoaderState . AVAILABLE ) ; <nl> - <nl> } <nl> <nl> public BiMap < ModContainer , Object > getModObjectList ( ) <nl> @ @ - 746 , 4 + 745 , 11 @ @ public class Loader <nl> 	 public String getMCPVersionString ( ) { <nl> 	 	 return String . format ( " MCP v % s " , mcpversion ) ; <nl> 	 } <nl> + <nl> + public void serverStopped ( ) <nl> + { <nl> + modController . distributeStateMessage ( LoaderState . SERVER _ STOPPED ) ; <nl> + modController . transition ( LoaderState . SERVER _ STOPPED ) ; <nl> + modController . transition ( LoaderState . AVAILABLE ) ; <nl> + } <nl> } <nl> diff - - git a / fml / common / cpw / mods / fml / common / LoaderState . java b / fml / common / cpw / mods / fml / common / LoaderState . java <nl> index 731e2a4 . . 0bd7803 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / LoaderState . java <nl> + + + b / fml / common / cpw / mods / fml / common / LoaderState . java <nl> @ @ - 10 , 6 + 10 , 7 @ @ import cpw . mods . fml . common . event . FMLPostInitializationEvent ; <nl> import cpw . mods . fml . common . event . FMLPreInitializationEvent ; <nl> import cpw . mods . fml . common . event . FMLServerStartedEvent ; <nl> import cpw . mods . fml . common . event . FMLServerStartingEvent ; <nl> + import cpw . mods . fml . common . event . FMLServerStoppedEvent ; <nl> import cpw . mods . fml . common . event . FMLServerStoppingEvent ; <nl> import cpw . mods . fml . common . event . FMLStateEvent ; <nl> <nl> @ @ - 30 , 6 + 31 , 7 @ @ public enum LoaderState <nl> SERVER _ STARTING ( " Server starting " , FMLServerStartingEvent . class ) , <nl> SERVER _ STARTED ( " Server started " , FMLServerStartedEvent . class ) , <nl> SERVER _ STOPPING ( " Server stopping " , FMLServerStoppingEvent . class ) , <nl> + SERVER _ STOPPED ( " Server stopped " , FMLServerStoppedEvent . class ) , <nl> ERRORED ( " Mod Loading errored " , null ) ; <nl> <nl> <nl> @ @ - 49 , 7 + 51 , 7 @ @ public enum LoaderState <nl> return ERRORED ; <nl> } <nl> / / stopping - > available <nl> - if ( this = = SERVER _ STOPPING ) <nl> + if ( this = = SERVER _ STOPPED ) <nl> { <nl> return AVAILABLE ; <nl> } <nl> diff - - git a / fml / common / cpw / mods / fml / common / Mod . java b / fml / common / cpw / mods / fml / common / Mod . java <nl> index 781bf9c . . 5aa5cd4 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / Mod . java <nl> + + + b / fml / common / cpw / mods / fml / common / Mod . java <nl> @ @ - 169 , 6 + 169 , 14 @ @ public @ interface Mod <nl> @ Target ( ElementType . METHOD ) <nl> public @ interface ServerStopping { } <nl> / * * <nl> + * Mark the designated method as being called at the " server - stopped " phase <nl> + * @ author cpw <nl> + * <nl> + * / <nl> + @ Retention ( RetentionPolicy . RUNTIME ) <nl> + @ Target ( ElementType . METHOD ) <nl> + public @ interface ServerStopped { } <nl> + / * * <nl> * Mark the designated method as the receiver for { @ link FMLInterModComms } messages <nl> * Called between { @ link Init } and { @ link PostInit } <nl> * @ author cpw <nl> diff - - git a / fml / common / cpw / mods / fml / common / event / FMLServerStoppedEvent . java b / fml / common / cpw / mods / fml / common / event / FMLServerStoppedEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 019a9a4 <nl> - - - / dev / null <nl> + + + b / fml / common / cpw / mods / fml / common / event / FMLServerStoppedEvent . java <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + package cpw . mods . fml . common . event ; <nl> + <nl> + import cpw . mods . fml . common . LoaderState ; <nl> + import cpw . mods . fml . common . LoaderState . ModState ; <nl> + <nl> + public class FMLServerStoppedEvent extends FMLStateEvent { <nl> + <nl> + public FMLServerStoppedEvent ( Object . . . data ) <nl> + { <nl> + super ( data ) ; <nl> + } <nl> + @ Override <nl> + public ModState getModState ( ) <nl> + { <nl> + return ModState . AVAILABLE ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> index 3440bd1 . . 04ce78b 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> @ @ - 40 , 8 + 40 , 11 @ @ <nl> var48 . printStackTrace ( ) ; <nl> field _ 71306 _ a . log ( Level . SEVERE , " Encountered an unexpected exception " + var48 . getClass ( ) . getSimpleName ( ) , var48 ) ; <nl> CrashReport var2 = null ; <nl> - @ @ - 455 , 6 + 467 , 10 @ @ <nl> + @ @ - 453 , 8 + 465 , 13 @ @ <nl> + } <nl> + finally <nl> { <nl> + + FMLCommonHandler . instance ( ) . handleServerStopped ( ) ; <nl> try <nl> { <nl> + if ( FMLCommonHandler . instance ( ) . shouldServerBeKilledQuietly ( ) ) <nl> @ @ - 51 , 7 + 54 , 7 @ @ <nl> this . func _ 71260 _ j ( ) ; <nl> this . field _ 71316 _ v = true ; <nl> } <nl> - @ @ - 480 , 8 + 496 , 10 @ @ <nl> + @ @ - 480 , 8 + 497 , 10 @ @ <nl> <nl> public void func _ 71217 _ p ( ) <nl> { <nl> @ @ - 62 , 7 + 65 , 7 @ @ <nl> + + this . field _ 71315 _ w ; <nl> <nl> if ( this . field _ 71295 _ T ) <nl> - @ @ - 527 , 6 + 545 , 7 @ @ <nl> + @ @ - 527 , 6 + 546 , 7 @ @ <nl> <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> @ @ - 70 , 7 + 73 , 7 @ @ <nl> } <nl> <nl> public void func _ 71190 _ q ( ) <nl> - @ @ - 554 , 6 + 573 , 7 @ @ <nl> + @ @ - 554 , 6 + 574 , 7 @ @ <nl> } <nl> <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tick " ) ; <nl> @ @ - 78 , 7 + 81 , 7 @ @ <nl> CrashReport var6 ; <nl> <nl> try <nl> - @ @ - 578 , 6 + 598 , 7 @ @ <nl> + @ @ - 578 , 6 + 599 , 7 @ @ <nl> throw new ReportedException ( var6 ) ; <nl> } <nl> <nl> @ @ - 86 , 7 + 89 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; <nl> var4 . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; <nl> - @ @ - 705 , 7 + 726 , 7 @ @ <nl> + @ @ - 705 , 7 + 727 , 7 @ @ <nl> <nl> public String getServerModName ( ) <nl> { <nl> @ @ - 95 , 7 + 98 , 7 @ @ <nl> } <nl> <nl> public CrashReport func _ 71230 _ b ( CrashReport p _ 71230 _ 1 _ ) <nl> - @ @ - 1146 , 6 + 1167 , 13 @ @ <nl> + @ @ - 1146 , 6 + 1168 , 13 @ @ <nl> @ SideOnly ( Side . SERVER ) <nl> public static void main ( String [ ] p _ main _ 0 _ ) <nl> {

TEST DIFF:
diff - - git a / fml / jsons / 1 . 7 . 10 . json b / fml / jsons / 1 . 7 . 10 . json 
 index 020bda2 . . 5956054 100644 
 - - - a / fml / jsons / 1 . 7 . 10 . json 
 + + + b / fml / jsons / 1 . 7 . 10 . json 
 @ @ - 74 , 7 + 74 , 7 @ @ 
 " name " : " com . google . code . gson : gson : 2 . 2 . 4 " 
 } , 
 { 
 - " name " : " com . mojang : authlib : 1 . 5 . 16 " 
 + " name " : " com . mojang : authlib : 1 . 5 . 21 " 
 } , 
 { 
 " name " : " org . apache . logging . log4j : log4j - api : 2 . 0 - beta9 " 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / LoadController . java b / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 index 6c8b915 . . 21c77c2 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / LoadController . java 
 @ @ - 37 , 6 + 37 , 7 @ @ import com . google . common . eventbus . EventBus ; 
 import com . google . common . eventbus . Subscribe ; 
 
 import cpw . mods . fml . common . LoaderState . ModState ; 
 + import cpw . mods . fml . common . ProgressManager . ProgressBar ; 
 import cpw . mods . fml . common . event . FMLEvent ; 
 import cpw . mods . fml . common . event . FMLLoadEvent ; 
 import cpw . mods . fml . common . event . FMLModDisabledEvent ; 
 @ @ - 182 , 10 + 183 , 16 @ @ public class LoadController 
 { 
 modObjectList = buildModObjectList ( ) ; 
 } 
 + String event = stateEvent . toString ( ) ; 
 + event = event . substring ( event . lastIndexOf ( ' . ' ) + 1 ) ; 
 + event = event . substring ( 0 , event . indexOf ( ' @ ' ) ) ; 
 + ProgressBar bar = ProgressManager . push ( event + " propagation " , activeModList . size ( ) ) ; 
 for ( ModContainer mc : activeModList ) 
 { 
 + bar . step ( " mod : " + mc . getName ( ) ) ; 
 sendEventToModContainer ( stateEvent , mc ) ; 
 } 
 + ProgressManager . pop ( bar ) ; 
 } 
 
 private void sendEventToModContainer ( FMLEvent stateEvent , ModContainer mc ) 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / Loader . java b / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 index 6469c47 . . d54e8a5 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 @ @ - 53 , 6 + 53 , 7 @ @ import com . google . common . collect . TreeMultimap ; 
 
 import cpw . mods . fml . common . LoaderState . ModState ; 
 import cpw . mods . fml . common . ModContainer . Disableable ; 
 + import cpw . mods . fml . common . ProgressManager . ProgressBar ; 
 import cpw . mods . fml . common . discovery . ModDiscoverer ; 
 import cpw . mods . fml . common . event . FMLInterModComms ; 
 import cpw . mods . fml . common . event . FMLLoadEvent ; 
 @ @ - 152 , 6 + 153 , 7 @ @ public class Loader 
 private ImmutableMap < String , String > fmlBrandingProperties ; 
 private File forcedModFile ; 
 private ModDiscoverer discoverer ; 
 + private ProgressBar progressBar ; 
 
 public static Loader instance ( ) 
 { 
 @ @ - 460 , 6 + 462 , 8 @ @ public class Loader 
 * / 
 public void loadMods ( ) 
 { 
 + progressBar = ProgressManager . push ( " FML " , 5 ) ; 
 + progressBar . step ( " Constructing " ) ; 
 initializeLoader ( ) ; 
 mods = Lists . newArrayList ( ) ; 
 namedMods = Maps . newHashMap ( ) ; 
 @ @ - 499 , 6 + 503 , 7 @ @ public class Loader 
 { 
 FMLLog . fine ( " No user mod signature data found " ) ; 
 } 
 + progressBar . step ( " Preinitialization " ) ; 
 modController . transition ( LoaderState . PREINITIALIZATION , false ) ; 
 } 
 
 @ @ - 512 , 6 + 517 , 7 @ @ public class Loader 
 ObjectHolderRegistry . INSTANCE . findObjectHolders ( discoverer . getASMTable ( ) ) ; 
 modController . distributeStateMessage ( LoaderState . PREINITIALIZATION , discoverer . getASMTable ( ) , canonicalConfigDir ) ; 
 ObjectHolderRegistry . INSTANCE . applyObjectHolders ( ) ; 
 + progressBar . step ( " Initialization " ) ; 
 modController . transition ( LoaderState . INITIALIZATION , false ) ; 
 } 
 
 @ @ - 689 , 15 + 695 , 19 @ @ public class Loader 
 { 
 / / Mod controller should be in the initialization state here 
 modController . distributeStateMessage ( LoaderState . INITIALIZATION ) ; 
 + progressBar . step ( " Postinitialization " ) ; 
 modController . transition ( LoaderState . POSTINITIALIZATION , false ) ; 
 modController . distributeStateMessage ( FMLInterModComms . IMCEvent . class ) ; 
 modController . distributeStateMessage ( LoaderState . POSTINITIALIZATION ) ; 
 + progressBar . step ( " Finishing up " ) ; 
 modController . transition ( LoaderState . AVAILABLE , false ) ; 
 modController . distributeStateMessage ( LoaderState . AVAILABLE ) ; 
 GameData . freezeData ( ) ; 
 / / Dump the custom registry data map , if necessary 
 GameData . dumpRegistry ( minecraftDir ) ; 
 FMLLog . info ( " Forge Mod Loader has successfully loaded % d mod % s " , mods . size ( ) , mods . size ( ) = = 1 ? " " : " s " ) ; 
 + ProgressManager . pop ( progressBar ) ; 
 + progressBar = null ; 
 } 
 
 public ICrashCallable getCallableCrashInformation ( )

NEAREST DIFF:
diff - - git a / fml / common / cpw / mods / fml / common / FMLCommonHandler . java b / fml / common / cpw / mods / fml / common / FMLCommonHandler . java 
 index c0f6c6a . . b462777 100644 
 - - - a / fml / common / cpw / mods / fml / common / FMLCommonHandler . java 
 + + + b / fml / common / cpw / mods / fml / common / FMLCommonHandler . java 
 @ @ - 453 , 4 + 453 , 9 @ @ public class FMLCommonHandler 
 { 
 sidedDelegate . disconnectIDMismatch ( serverDifference , toKill , network ) ; 
 } 
 + 
 + public void handleServerStopped ( ) 
 + { 
 + Loader . instance ( ) . serverStopped ( ) ; 
 + } 
 } 
 diff - - git a / fml / common / cpw / mods / fml / common / FMLModContainer . java b / fml / common / cpw / mods / fml / common / FMLModContainer . java 
 index 69b97fe . . 7ab6449 100644 
 - - - a / fml / common / cpw / mods / fml / common / FMLModContainer . java 
 + + + b / fml / common / cpw / mods / fml / common / FMLModContainer . java 
 @ @ - 60 , 6 + 60 , 7 @ @ import cpw . mods . fml . common . event . FMLPostInitializationEvent ; 
 import cpw . mods . fml . common . event . FMLPreInitializationEvent ; 
 import cpw . mods . fml . common . event . FMLServerStartedEvent ; 
 import cpw . mods . fml . common . event . FMLServerStartingEvent ; 
 + import cpw . mods . fml . common . event . FMLServerStoppedEvent ; 
 import cpw . mods . fml . common . event . FMLServerStoppingEvent ; 
 import cpw . mods . fml . common . event . FMLStateEvent ; 
 import cpw . mods . fml . common . network . FMLNetworkHandler ; 
 @ @ - 92 , 6 + 93 , 7 @ @ public class FMLModContainer implements ModContainer 
 . put ( FMLServerStartingEvent . class , Mod . ServerStarting . class ) 
 . put ( FMLServerStartedEvent . class , Mod . ServerStarted . class ) 
 . put ( FMLServerStoppingEvent . class , Mod . ServerStopping . class ) 
 + . put ( FMLServerStoppedEvent . class , Mod . ServerStopped . class ) 
 . put ( IMCEvent . class , Mod . IMCCallback . class ) 
 . put ( FMLFingerprintViolationEvent . class , Mod . FingerprintWarning . class ) 
 . build ( ) ; 
 diff - - git a / fml / common / cpw / mods / fml / common / Loader . java b / fml / common / cpw / mods / fml / common / Loader . java 
 index e0626cf . . a8a5b67 100644 
 - - - a / fml / common / cpw / mods / fml / common / Loader . java 
 + + + b / fml / common / cpw / mods / fml / common / Loader . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import java . util . concurrent . Callable ; 
 import java . util . logging . Level ; 
 
 import net . minecraft . crash . CallableMinecraftVersion ; 
 + import net . minecraft . server . MinecraftServer ; 
 
 import com . google . common . base . CharMatcher ; 
 import com . google . common . base . Function ; 
 @ @ - 710 , 8 + 711 , 6 @ @ public class Loader 
 { 
 modController . distributeStateMessage ( LoaderState . SERVER _ STOPPING ) ; 
 modController . transition ( LoaderState . SERVER _ STOPPING ) ; 
 - modController . transition ( LoaderState . AVAILABLE ) ; 
 - 
 } 
 
 public BiMap < ModContainer , Object > getModObjectList ( ) 
 @ @ - 746 , 4 + 745 , 11 @ @ public class Loader 
 	 public String getMCPVersionString ( ) { 
 	 	 return String . format ( " MCP v % s " , mcpversion ) ; 
 	 } 
 + 
 + public void serverStopped ( ) 
 + { 
 + modController . distributeStateMessage ( LoaderState . SERVER _ STOPPED ) ; 
 + modController . transition ( LoaderState . SERVER _ STOPPED ) ; 
 + modController . transition ( LoaderState . AVAILABLE ) ; 
 + } 
 } 
 diff - - git a / fml / common / cpw / mods / fml / common / LoaderState . java b / fml / common / cpw / mods / fml / common / LoaderState . java 
 index 731e2a4 . . 0bd7803 100644 
 - - - a / fml / common / cpw / mods / fml / common / LoaderState . java 
 + + + b / fml / common / cpw / mods / fml / common / LoaderState . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import cpw . mods . fml . common . event . FMLPostInitializationEvent ; 
 import cpw . mods . fml . common . event . FMLPreInitializationEvent ; 
 import cpw . mods . fml . common . event . FMLServerStartedEvent ; 
 import cpw . mods . fml . common . event . FMLServerStartingEvent ; 
 + import cpw . mods . fml . common . event . FMLServerStoppedEvent ; 
 import cpw . mods . fml . common . event . FMLServerStoppingEvent ; 
 import cpw . mods . fml . common . event . FMLStateEvent ; 
 
 @ @ - 30 , 6 + 31 , 7 @ @ public enum LoaderState 
 SERVER _ STARTING ( " Server starting " , FMLServerStartingEvent . class ) , 
 SERVER _ STARTED ( " Server started " , FMLServerStartedEvent . class ) , 
 SERVER _ STOPPING ( " Server stopping " , FMLServerStoppingEvent . class ) , 
 + SERVER _ STOPPED ( " Server stopped " , FMLServerStoppedEvent . class ) , 
 ERRORED ( " Mod Loading errored " , null ) ; 
 
 
 @ @ - 49 , 7 + 51 , 7 @ @ public enum LoaderState 
 return ERRORED ; 
 } 
 / / stopping - > available 
 - if ( this = = SERVER _ STOPPING ) 
 + if ( this = = SERVER _ STOPPED ) 
 { 
 return AVAILABLE ; 
 } 
 diff - - git a / fml / common / cpw / mods / fml / common / Mod . java b / fml / common / cpw / mods / fml / common / Mod . java 
 index 781bf9c . . 5aa5cd4 100644 
 - - - a / fml / common / cpw / mods / fml / common / Mod . java 
 + + + b / fml / common / cpw / mods / fml / common / Mod . java 
 @ @ - 169 , 6 + 169 , 14 @ @ public @ interface Mod 
 @ Target ( ElementType . METHOD ) 
 public @ interface ServerStopping { } 
 / * * 
 + * Mark the designated method as being called at the " server - stopped " phase 
 + * @ author cpw 
 + * 
 + * / 
 + @ Retention ( RetentionPolicy . RUNTIME ) 
 + @ Target ( ElementType . METHOD ) 
 + public @ interface ServerStopped { } 
 + / * * 
 * Mark the designated method as the receiver for { @ link FMLInterModComms } messages 
 * Called between { @ link Init } and { @ link PostInit } 
 * @ author cpw 
 diff - - git a / fml / common / cpw / mods / fml / common / event / FMLServerStoppedEvent . java b / fml / common / cpw / mods / fml / common / event / FMLServerStoppedEvent . java 
 new file mode 100644 
 index 0000000 . . 019a9a4 
 - - - / dev / null 
 + + + b / fml / common / cpw / mods / fml / common / event / FMLServerStoppedEvent . java 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + package cpw . mods . fml . common . event ; 
 + 
 + import cpw . mods . fml . common . LoaderState ; 
 + import cpw . mods . fml . common . LoaderState . ModState ; 
 + 
 + public class FMLServerStoppedEvent extends FMLStateEvent { 
 + 
 + public FMLServerStoppedEvent ( Object . . . data ) 
 + { 
 + super ( data ) ; 
 + } 
 + @ Override 
 + public ModState getModState ( ) 
 + { 
 + return ModState . AVAILABLE ; 
 + } 
 + 
 + } 
 diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 index 3440bd1 . . 04ce78b 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 @ @ - 40 , 8 + 40 , 11 @ @ 
 var48 . printStackTrace ( ) ; 
 field _ 71306 _ a . log ( Level . SEVERE , " Encountered an unexpected exception " + var48 . getClass ( ) . getSimpleName ( ) , var48 ) ; 
 CrashReport var2 = null ; 
 - @ @ - 455 , 6 + 467 , 10 @ @ 
 + @ @ - 453 , 8 + 465 , 13 @ @ 
 + } 
 + finally 
 { 
 + + FMLCommonHandler . instance ( ) . handleServerStopped ( ) ; 
 try 
 { 
 + if ( FMLCommonHandler . instance ( ) . shouldServerBeKilledQuietly ( ) ) 
 @ @ - 51 , 7 + 54 , 7 @ @ 
 this . func _ 71260 _ j ( ) ; 
 this . field _ 71316 _ v = true ; 
 } 
 - @ @ - 480 , 8 + 496 , 10 @ @ 
 + @ @ - 480 , 8 + 497 , 10 @ @ 
 
 public void func _ 71217 _ p ( ) 
 { 
 @ @ - 62 , 7 + 65 , 7 @ @ 
 + + this . field _ 71315 _ w ; 
 
 if ( this . field _ 71295 _ T ) 
 - @ @ - 527 , 6 + 545 , 7 @ @ 
 + @ @ - 527 , 6 + 546 , 7 @ @ 
 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 @ @ - 70 , 7 + 73 , 7 @ @ 
 } 
 
 public void func _ 71190 _ q ( ) 
 - @ @ - 554 , 6 + 573 , 7 @ @ 
 + @ @ - 554 , 6 + 574 , 7 @ @ 
 } 
 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tick " ) ; 
 @ @ - 78 , 7 + 81 , 7 @ @ 
 CrashReport var6 ; 
 
 try 
 - @ @ - 578 , 6 + 598 , 7 @ @ 
 + @ @ - 578 , 6 + 599 , 7 @ @ 
 throw new ReportedException ( var6 ) ; 
 } 
 
 @ @ - 86 , 7 + 89 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; 
 var4 . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; 
 - @ @ - 705 , 7 + 726 , 7 @ @ 
 + @ @ - 705 , 7 + 727 , 7 @ @ 
 
 public String getServerModName ( ) 
 { 
 @ @ - 95 , 7 + 98 , 7 @ @ 
 } 
 
 public CrashReport func _ 71230 _ b ( CrashReport p _ 71230 _ 1 _ ) 
 - @ @ - 1146 , 6 + 1167 , 13 @ @ 
 + @ @ - 1146 , 6 + 1168 , 13 @ @ 
 @ SideOnly ( Side . SERVER ) 
 public static void main ( String [ ] p _ main _ 0 _ ) 
 {
