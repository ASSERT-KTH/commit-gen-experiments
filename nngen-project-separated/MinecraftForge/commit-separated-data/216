BLEU SCORE: 0.025540496664715903

TEST MSG: Fix FML entity network spawning not using EntityBuilder ' s facctory . Closes # 4845 and # 4846
GENERATED MSG: Fix EntityRegistry - mods can specify update frequency , range and velocity data , and also

TEST DIFF (one line): diff - - git a / jsons / 1 . 12 . 2 . json b / jsons / 1 . 12 . 2 . json <nl> index d69577f . . 6b755e1 100644 <nl> - - - a / jsons / 1 . 12 . 2 . json <nl> + + + b / jsons / 1 . 12 . 2 . json <nl> @ @ - 266 , 13 + 266 , 13 @ @ <nl> } <nl> } , <nl> { <nl> - " name " : " com . mojang : realms : 1 . 10 . 21 " , <nl> + " name " : " com . mojang : realms : 1 . 10 . 22 " , <nl> " downloads " : { <nl> " artifact " : { <nl> - " size " : 7134971 , <nl> - " sha1 " : " cfc457545a482027c066f13c262b9a4df64bc3f3 " , <nl> - " path " : " com / mojang / realms / 1 . 10 . 21 / realms - 1 . 10 . 21 . jar " , <nl> - " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 21 / realms - 1 . 10 . 21 . jar " <nl> + " size " : 7135057 , <nl> + " sha1 " : " bd0dccebdf3744c75f1ca20063f16e8f7d5e663f " , <nl> + " path " : " com / mojang / realms / 1 . 10 . 22 / realms - 1 . 10 . 22 . jar " , <nl> + " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 22 / realms - 1 . 10 . 22 . jar " <nl> } <nl> } <nl> } , <nl> @ @ - 719 , 6 + 719 , 6 @ @ <nl> " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , <nl> " minimumLauncherVersion " : 18 , <nl> " releaseTime " : " 2017 - 09 - 18T08 : 39 : 46 + 00 : 00 " , <nl> - " time " : " 2018 - 05 - 25T15 : 20 : 02 + 00 : 00 " , <nl> + " time " : " 2018 - 06 - 25T15 : 37 : 20 + 00 : 00 " , <nl> " type " : " release " <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> index cc7dc3c . . 9422096 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> @ @ - 76 , 7 + 76 , 6 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E <nl> " at ( " + spawnMsg . rawX + " , " + spawnMsg . rawY + " , " + spawnMsg . rawZ + " ) Please contact mod author or server admin . " ) ; <nl> } <nl> WorldClient wc = FMLClientHandler . instance ( ) . getWorldClient ( ) ; <nl> - Class < ? extends Entity > cls = er . getEntityClass ( ) ; <nl> try <nl> { <nl> Entity entity ; <nl> @ @ - 85 , 7 + 84 , 7 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E <nl> entity = er . doCustomSpawning ( spawnMsg ) ; <nl> } else <nl> { <nl> - entity = cls . getConstructor ( World . class ) . newInstance ( wc ) ; <nl> + entity = er . newInstance ( wc ) ; <nl> <nl> int offset = spawnMsg . entityId - entity . getEntityId ( ) ; <nl> entity . setEntityId ( spawnMsg . entityId ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java <nl> index 7e736a9 . . 2ff0acd 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java <nl> @ @ - 276 , 15 + 276 , 6 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> return entry ; <nl> } <nl> <nl> - @ Nonnull <nl> - private EntityRegistry . EntityRegistration createRegistration ( ) <nl> - { <nl> - return EntityRegistry . instance ( ) . new EntityRegistration ( <nl> - this . mod , this . id , this . entity , this . name , this . network , <nl> - this . trackingRange , this . trackingUpdateFrequency , this . trackingVelocityUpdates <nl> - ) ; <nl> - } <nl> - <nl> private void registerStatistics ( ) <nl> { <nl> if ( ! this . statisticsRegistered & & ( this . killEntityStatistic ! = null & & this . entityKilledByStatistic ! = null ) ) <nl> @ @ - 340 , 7 + 331 , 7 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> if ( this . added ) return ; <nl> this . added = true ; <nl> EntityEntryBuilder . this . registerStatistics ( ) ; <nl> - EntityRegistry . instance ( ) . insert ( EntityEntryBuilder . this . entity , EntityEntryBuilder . this . createRegistration ( ) ) ; <nl> + EntityRegistry . instance ( ) . insert ( EntityEntryBuilder . this . entity , createRegistration ( ) ) ; <nl> if ( EntityEntryBuilder . this . spawns ! = null ) <nl> { <nl> for ( final Spawn spawn : EntityEntryBuilder . this . spawns ) <nl> @ @ - 350 , 6 + 341 , 17 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> EntityEntryBuilder . this . spawns = null ; <nl> } <nl> } <nl> + <nl> + @ Nonnull <nl> + private EntityRegistry . EntityRegistration createRegistration ( ) <nl> + { <nl> + EntityEntryBuilder < E > builder = EntityEntryBuilder . this ; <nl> + return EntityRegistry . instance ( ) . new EntityRegistration ( <nl> + builder . mod , builder . id , builder . entity , builder . name , builder . network , <nl> + builder . trackingRange , builder . trackingUpdateFrequency , builder . trackingVelocityUpdates , this . factory <nl> + ) ; <nl> + } <nl> + <nl> } <nl> <nl> public final class Spawn <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> index a1de924 . . 7885df3 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import net . minecraft . entity . EntityLiving ; <nl> import net . minecraft . entity . EntityTracker ; <nl> import net . minecraft . entity . EnumCreatureType ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . world . World ; <nl> import net . minecraft . world . biome . Biome ; <nl> import net . minecraft . world . biome . Biome . SpawnListEntry ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> @ @ - 48 , 7 + 49 , 9 @ @ public class EntityRegistry <nl> { <nl> public class EntityRegistration <nl> { <nl> + @ Deprecated <nl> private Class < ? extends Entity > entityClass ; <nl> + private Function < World , ? extends Entity > factory ; <nl> private ModContainer container ; <nl> private ResourceLocation regName ; <nl> private String entityName ; <nl> @ @ - 58 , 8 + 61 , 15 @ @ public class EntityRegistry <nl> private boolean sendsVelocityUpdates ; <nl> private Function < EntitySpawnMessage , Entity > customSpawnCallback ; <nl> private boolean usesVanillaSpawning ; <nl> + <nl> + @ Deprecated / / 1 . 13 <nl> public EntityRegistration ( ModContainer mc , ResourceLocation registryName , Class < ? extends Entity > entityClass , String entityName , int id , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) <nl> { <nl> + this ( mc , registryName , entityClass , entityName , id , trackingRange , updateFrequency , sendsVelocityUpdates , null ) ; <nl> + } <nl> + <nl> + public EntityRegistration ( ModContainer mc , ResourceLocation registryName , Class < ? extends Entity > entityClass , String entityName , int id , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates , Function < World , ? extends Entity > factory ) <nl> + { <nl> this . container = mc ; <nl> this . regName = registryName ; <nl> this . entityClass = entityClass ; <nl> @ @ - 68 , 15 + 78 , 27 @ @ public class EntityRegistry <nl> this . trackingRange = trackingRange ; <nl> this . updateFrequency = updateFrequency ; <nl> this . sendsVelocityUpdates = sendsVelocityUpdates ; <nl> + this . factory = factory ! = null ? factory : <nl> + new EntityEntryBuilder . ConstructorFactory < Entity > ( entityClass ) { <nl> + @ Override <nl> + protected String describeEntity ( ) { <nl> + return String . valueOf ( EntityRegistration . this . getRegistryName ( ) ) ; <nl> + } <nl> + } ; <nl> } <nl> public ResourceLocation getRegistryName ( ) <nl> { <nl> return regName ; <nl> } <nl> + @ Deprecated / / Used only for creating a new instance in EntitySpawnHandler , use newInstance ( world ) instead . <nl> public Class < ? extends Entity > getEntityClass ( ) <nl> { <nl> return entityClass ; <nl> } <nl> + public Entity newInstance ( World world ) <nl> + { <nl> + return this . factory . apply ( world ) ; <nl> + } <nl> public ModContainer getContainer ( ) <nl> { <nl> return container ;
NEAREST DIFF (one line): diff - - git a / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java b / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java <nl> index 6308c6d . . 7206c4f 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java <nl> + + + b / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ import net . minecraft . src . BiomeGenBase ; <nl> import net . minecraft . src . Entity ; <nl> import net . minecraft . src . EntityList ; <nl> import net . minecraft . src . EntityLiving ; <nl> + import net . minecraft . src . EntityTracker ; <nl> import net . minecraft . src . EnumCreatureType ; <nl> import net . minecraft . src . SpawnListEntry ; <nl> <nl> @ @ - 32 , 12 + 33 , 18 @ @ public class EntityRegistry <nl> private ModContainer container ; <nl> private String entityName ; <nl> private int modId ; <nl> - public EntityRegistration ( ModContainer mc , Class < ? extends Entity > entityClass , String entityName , int id ) <nl> + private int trackingRange ; <nl> + private int updateFrequency ; <nl> + private boolean sendsVelocityUpdates ; <nl> + public EntityRegistration ( ModContainer mc , Class < ? extends Entity > entityClass , String entityName , int id , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) <nl> { <nl> this . container = mc ; <nl> this . entityClass = entityClass ; <nl> this . entityName = entityName ; <nl> this . modId = id ; <nl> + this . trackingRange = trackingRange ; <nl> + this . updateFrequency = updateFrequency ; <nl> + this . sendsVelocityUpdates = sendsVelocityUpdates ; <nl> } <nl> public Class < ? extends Entity > getEntityClass ( ) <nl> { <nl> @ @ - 55 , 6 + 62 , 22 @ @ public class EntityRegistry <nl> { <nl> return modId ; <nl> } <nl> + public int getModId ( ) <nl> + { <nl> + return modId ; <nl> + } <nl> + public int getTrackingRange ( ) <nl> + { <nl> + return trackingRange ; <nl> + } <nl> + public int getUpdateFrequency ( ) <nl> + { <nl> + return updateFrequency ; <nl> + } <nl> + public boolean sendsVelocityUpdates ( ) <nl> + { <nl> + return sendsVelocityUpdates ; <nl> + } <nl> } <nl> <nl> private static final EntityRegistry INSTANCE = new EntityRegistry ( ) ; <nl> @ @ - 67 , 7 + 90 , 7 @ @ public class EntityRegistry <nl> { <nl> return INSTANCE ; <nl> } <nl> - <nl> + <nl> private EntityRegistry ( ) <nl> { <nl> availableIndicies = new BitSet ( 256 ) ; <nl> @ @ - 77 , 15 + 100 , 26 @ @ public class EntityRegistry <nl> availableIndicies . clear ( ( Integer ) id ) ; <nl> } <nl> } <nl> - <nl> - public static void registerModEntity ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod ) <nl> + <nl> + / * * <nl> + * Register the mod entity type with FML <nl> + <nl> + * @ param entityClass The entity class <nl> + * @ param entityName A unique name for the entity <nl> + * @ param id A mod specific ID for the entity <nl> + * @ param mod The mod <nl> + * @ param trackingRange The range at which MC will send tracking updates <nl> + * @ param updateFrequency The frequency of tracking updates <nl> + * @ param sendsVelocityUpdates Whether to send velocity information packets as well <nl> + * / <nl> + public static void registerModEntity ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) <nl> { <nl> - instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod ) ; <nl> + instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod , trackingRange , updateFrequency , sendsVelocityUpdates ) ; <nl> } <nl> - private void doModEntityRegistration ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod ) <nl> + private void doModEntityRegistration ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) <nl> { <nl> ModContainer mc = FMLCommonHandler . instance ( ) . findContainerFor ( mod ) ; <nl> - EntityRegistration er = new EntityRegistration ( mc , entityClass , entityName , id ) ; <nl> + EntityRegistration er = new EntityRegistration ( mc , entityClass , entityName , id , trackingRange , updateFrequency , sendsVelocityUpdates ) ; <nl> try <nl> { <nl> entityClassRegistrations . put ( entityClass , er ) ; <nl> @ @ - 126 , 7 + 160 , 7 @ @ public class EntityRegistry <nl> { <nl> @ SuppressWarnings ( " unchecked " ) <nl> List < SpawnListEntry > spawns = biome . func _ 76747 _ a ( typeOfCreature ) ; <nl> - <nl> + <nl> for ( SpawnListEntry entry : spawns ) <nl> { <nl> / / Adjusting an existing spawn entry <nl> @ @ - 138 , 7 + 172 , 7 @ @ public class EntityRegistry <nl> break ; <nl> } <nl> } <nl> - <nl> + <nl> spawns . add ( new SpawnListEntry ( entityClass , weightedProb , min , max ) ) ; <nl> } <nl> } <nl> @ @ - 146 , 7 + 180 , 7 @ @ public class EntityRegistry <nl> public static void addSpawn ( String entityName , int weightedProb , int min , int max , EnumCreatureType spawnList , BiomeGenBase . . . biomes ) <nl> { <nl> Class < ? extends Entity > entityClazz = ( Class < ? extends Entity > ) EntityList . field _ 75625 _ b . get ( entityName ) ; <nl> - <nl> + <nl> if ( EntityLiving . class . isAssignableFrom ( entityClazz ) ) <nl> { <nl> addSpawn ( ( Class < ? extends EntityLiving > ) entityClazz , weightedProb , min , max , spawnList , biomes ) ; <nl> @ @ - 159 , 7 + 193 , 7 @ @ public class EntityRegistry <nl> { <nl> @ SuppressWarnings ( " unchecked " ) <nl> Iterator < SpawnListEntry > spawns = biome . func _ 76747 _ a ( typeOfCreature ) . iterator ( ) ; <nl> - <nl> + <nl> while ( spawns . hasNext ( ) ) <nl> { <nl> SpawnListEntry entry = spawns . next ( ) ; <nl> @ @ - 174 , 7 + 208 , 7 @ @ public class EntityRegistry <nl> public static void removeSpawn ( String entityName , EnumCreatureType spawnList , BiomeGenBase . . . biomes ) <nl> { <nl> Class < ? extends Entity > entityClazz = ( Class < ? extends Entity > ) EntityList . field _ 75625 _ b . get ( entityName ) ; <nl> - <nl> + <nl> if ( EntityLiving . class . isAssignableFrom ( entityClazz ) ) <nl> { <nl> removeSpawn ( ( Class < ? extends EntityLiving > ) entityClazz , spawnList , biomes ) ; <nl> @ @ - 194 , 7 + 228 , 7 @ @ public class EntityRegistry <nl> public EntityRegistration lookupModSpawn ( Class < ? extends Entity > clazz , boolean keepLooking ) <nl> { <nl> Class < ? > localClazz = clazz ; <nl> - <nl> + <nl> do <nl> { <nl> EntityRegistration er = entityClassRegistrations . get ( localClazz ) ; <nl> @ @ - 206 , 7 + 240 , 7 @ @ public class EntityRegistry <nl> keepLooking = ( ! Object . class . equals ( localClazz ) ) ; <nl> } <nl> while ( keepLooking ) ; <nl> - <nl> + <nl> return null ; <nl> } <nl> <nl> @ @ - 222 , 4 + 256 , 16 @ @ public class EntityRegistry <nl> return null ; <nl> } <nl> <nl> + public boolean tryTrackingEntity ( EntityTracker entityTracker , Entity entity ) <nl> + { <nl> + <nl> + EntityRegistration er = lookupModSpawn ( entity . getClass ( ) , true ) ; <nl> + if ( er ! = null ) <nl> + { <nl> + entityTracker . func _ 72785 _ a ( entity , er . getTrackingRange ( ) , er . getUpdateFrequency ( ) , er . sendsVelocityUpdates ( ) ) ; <nl> + return true ; <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> } <nl> diff - - git a / fml / patches / common / net / minecraft / src / EntityTracker . java . patch b / fml / patches / common / net / minecraft / src / EntityTracker . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 44a6127 <nl> - - - / dev / null <nl> + + + b / fml / patches / common / net / minecraft / src / EntityTracker . java . patch <nl> @ @ - 0 , 0 + 1 , 22 @ @ <nl> + - - - . . / src - base / common / net / minecraft / src / EntityTracker . java <nl> + + + + . . / src - work / common / net / minecraft / src / EntityTracker . java <nl> + @ @ - 4 , 6 + 4 , 8 @ @ <nl> + import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> + import java . util . Set ; <nl> + + <nl> + + import cpw . mods . fml . common . registry . EntityRegistry ; <nl> + <nl> + public class EntityTracker <nl> + { <nl> + @ @ - 20 , 6 + 22 , 10 @ @ <nl> + <nl> + public void func _ 72786 _ a ( Entity p _ 72786 _ 1 _ ) <nl> + { <nl> + + if ( EntityRegistry . instance ( ) . tryTrackingEntity ( this , p _ 72786 _ 1 _ ) ) <nl> + + { <nl> + + return ; <nl> + + } <nl> + if ( p _ 72786 _ 1 _ instanceof EntityPlayerMP ) <nl> + { <nl> + this . func _ 72791 _ a ( p _ 72786 _ 1 _ , 512 , 2 ) ;

TEST DIFF:
diff - - git a / jsons / 1 . 12 . 2 . json b / jsons / 1 . 12 . 2 . json 
 index d69577f . . 6b755e1 100644 
 - - - a / jsons / 1 . 12 . 2 . json 
 + + + b / jsons / 1 . 12 . 2 . json 
 @ @ - 266 , 13 + 266 , 13 @ @ 
 } 
 } , 
 { 
 - " name " : " com . mojang : realms : 1 . 10 . 21 " , 
 + " name " : " com . mojang : realms : 1 . 10 . 22 " , 
 " downloads " : { 
 " artifact " : { 
 - " size " : 7134971 , 
 - " sha1 " : " cfc457545a482027c066f13c262b9a4df64bc3f3 " , 
 - " path " : " com / mojang / realms / 1 . 10 . 21 / realms - 1 . 10 . 21 . jar " , 
 - " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 21 / realms - 1 . 10 . 21 . jar " 
 + " size " : 7135057 , 
 + " sha1 " : " bd0dccebdf3744c75f1ca20063f16e8f7d5e663f " , 
 + " path " : " com / mojang / realms / 1 . 10 . 22 / realms - 1 . 10 . 22 . jar " , 
 + " url " : " https : / / libraries . minecraft . net / com / mojang / realms / 1 . 10 . 22 / realms - 1 . 10 . 22 . jar " 
 } 
 } 
 } , 
 @ @ - 719 , 6 + 719 , 6 @ @ 
 " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , 
 " minimumLauncherVersion " : 18 , 
 " releaseTime " : " 2017 - 09 - 18T08 : 39 : 46 + 00 : 00 " , 
 - " time " : " 2018 - 05 - 25T15 : 20 : 02 + 00 : 00 " , 
 + " time " : " 2018 - 06 - 25T15 : 37 : 20 + 00 : 00 " , 
 " type " : " release " 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 index cc7dc3c . . 9422096 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 @ @ - 76 , 7 + 76 , 6 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E 
 " at ( " + spawnMsg . rawX + " , " + spawnMsg . rawY + " , " + spawnMsg . rawZ + " ) Please contact mod author or server admin . " ) ; 
 } 
 WorldClient wc = FMLClientHandler . instance ( ) . getWorldClient ( ) ; 
 - Class < ? extends Entity > cls = er . getEntityClass ( ) ; 
 try 
 { 
 Entity entity ; 
 @ @ - 85 , 7 + 84 , 7 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E 
 entity = er . doCustomSpawning ( spawnMsg ) ; 
 } else 
 { 
 - entity = cls . getConstructor ( World . class ) . newInstance ( wc ) ; 
 + entity = er . newInstance ( wc ) ; 
 
 int offset = spawnMsg . entityId - entity . getEntityId ( ) ; 
 entity . setEntityId ( spawnMsg . entityId ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java 
 index 7e736a9 . . 2ff0acd 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java 
 @ @ - 276 , 15 + 276 , 6 @ @ public final class EntityEntryBuilder < E extends Entity > 
 return entry ; 
 } 
 
 - @ Nonnull 
 - private EntityRegistry . EntityRegistration createRegistration ( ) 
 - { 
 - return EntityRegistry . instance ( ) . new EntityRegistration ( 
 - this . mod , this . id , this . entity , this . name , this . network , 
 - this . trackingRange , this . trackingUpdateFrequency , this . trackingVelocityUpdates 
 - ) ; 
 - } 
 - 
 private void registerStatistics ( ) 
 { 
 if ( ! this . statisticsRegistered & & ( this . killEntityStatistic ! = null & & this . entityKilledByStatistic ! = null ) ) 
 @ @ - 340 , 7 + 331 , 7 @ @ public final class EntityEntryBuilder < E extends Entity > 
 if ( this . added ) return ; 
 this . added = true ; 
 EntityEntryBuilder . this . registerStatistics ( ) ; 
 - EntityRegistry . instance ( ) . insert ( EntityEntryBuilder . this . entity , EntityEntryBuilder . this . createRegistration ( ) ) ; 
 + EntityRegistry . instance ( ) . insert ( EntityEntryBuilder . this . entity , createRegistration ( ) ) ; 
 if ( EntityEntryBuilder . this . spawns ! = null ) 
 { 
 for ( final Spawn spawn : EntityEntryBuilder . this . spawns ) 
 @ @ - 350 , 6 + 341 , 17 @ @ public final class EntityEntryBuilder < E extends Entity > 
 EntityEntryBuilder . this . spawns = null ; 
 } 
 } 
 + 
 + @ Nonnull 
 + private EntityRegistry . EntityRegistration createRegistration ( ) 
 + { 
 + EntityEntryBuilder < E > builder = EntityEntryBuilder . this ; 
 + return EntityRegistry . instance ( ) . new EntityRegistration ( 
 + builder . mod , builder . id , builder . entity , builder . name , builder . network , 
 + builder . trackingRange , builder . trackingUpdateFrequency , builder . trackingVelocityUpdates , this . factory 
 + ) ; 
 + } 
 + 
 } 
 
 public final class Spawn 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 index a1de924 . . 7885df3 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import net . minecraft . entity . EntityLiving ; 
 import net . minecraft . entity . EntityTracker ; 
 import net . minecraft . entity . EnumCreatureType ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . world . World ; 
 import net . minecraft . world . biome . Biome ; 
 import net . minecraft . world . biome . Biome . SpawnListEntry ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 @ @ - 48 , 7 + 49 , 9 @ @ public class EntityRegistry 
 { 
 public class EntityRegistration 
 { 
 + @ Deprecated 
 private Class < ? extends Entity > entityClass ; 
 + private Function < World , ? extends Entity > factory ; 
 private ModContainer container ; 
 private ResourceLocation regName ; 
 private String entityName ; 
 @ @ - 58 , 8 + 61 , 15 @ @ public class EntityRegistry 
 private boolean sendsVelocityUpdates ; 
 private Function < EntitySpawnMessage , Entity > customSpawnCallback ; 
 private boolean usesVanillaSpawning ; 
 + 
 + @ Deprecated / / 1 . 13 
 public EntityRegistration ( ModContainer mc , ResourceLocation registryName , Class < ? extends Entity > entityClass , String entityName , int id , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) 
 { 
 + this ( mc , registryName , entityClass , entityName , id , trackingRange , updateFrequency , sendsVelocityUpdates , null ) ; 
 + } 
 + 
 + public EntityRegistration ( ModContainer mc , ResourceLocation registryName , Class < ? extends Entity > entityClass , String entityName , int id , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates , Function < World , ? extends Entity > factory ) 
 + { 
 this . container = mc ; 
 this . regName = registryName ; 
 this . entityClass = entityClass ; 
 @ @ - 68 , 15 + 78 , 27 @ @ public class EntityRegistry 
 this . trackingRange = trackingRange ; 
 this . updateFrequency = updateFrequency ; 
 this . sendsVelocityUpdates = sendsVelocityUpdates ; 
 + this . factory = factory ! = null ? factory : 
 + new EntityEntryBuilder . ConstructorFactory < Entity > ( entityClass ) { 
 + @ Override 
 + protected String describeEntity ( ) { 
 + return String . valueOf ( EntityRegistration . this . getRegistryName ( ) ) ; 
 + } 
 + } ; 
 } 
 public ResourceLocation getRegistryName ( ) 
 { 
 return regName ; 
 } 
 + @ Deprecated / / Used only for creating a new instance in EntitySpawnHandler , use newInstance ( world ) instead . 
 public Class < ? extends Entity > getEntityClass ( ) 
 { 
 return entityClass ; 
 } 
 + public Entity newInstance ( World world ) 
 + { 
 + return this . factory . apply ( world ) ; 
 + } 
 public ModContainer getContainer ( ) 
 { 
 return container ;

NEAREST DIFF:
diff - - git a / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java b / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java 
 index 6308c6d . . 7206c4f 100644 
 - - - a / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java 
 + + + b / fml / common / cpw / mods / fml / common / registry / EntityRegistry . java 
 @ @ - 20 , 6 + 20 , 7 @ @ import net . minecraft . src . BiomeGenBase ; 
 import net . minecraft . src . Entity ; 
 import net . minecraft . src . EntityList ; 
 import net . minecraft . src . EntityLiving ; 
 + import net . minecraft . src . EntityTracker ; 
 import net . minecraft . src . EnumCreatureType ; 
 import net . minecraft . src . SpawnListEntry ; 
 
 @ @ - 32 , 12 + 33 , 18 @ @ public class EntityRegistry 
 private ModContainer container ; 
 private String entityName ; 
 private int modId ; 
 - public EntityRegistration ( ModContainer mc , Class < ? extends Entity > entityClass , String entityName , int id ) 
 + private int trackingRange ; 
 + private int updateFrequency ; 
 + private boolean sendsVelocityUpdates ; 
 + public EntityRegistration ( ModContainer mc , Class < ? extends Entity > entityClass , String entityName , int id , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) 
 { 
 this . container = mc ; 
 this . entityClass = entityClass ; 
 this . entityName = entityName ; 
 this . modId = id ; 
 + this . trackingRange = trackingRange ; 
 + this . updateFrequency = updateFrequency ; 
 + this . sendsVelocityUpdates = sendsVelocityUpdates ; 
 } 
 public Class < ? extends Entity > getEntityClass ( ) 
 { 
 @ @ - 55 , 6 + 62 , 22 @ @ public class EntityRegistry 
 { 
 return modId ; 
 } 
 + public int getModId ( ) 
 + { 
 + return modId ; 
 + } 
 + public int getTrackingRange ( ) 
 + { 
 + return trackingRange ; 
 + } 
 + public int getUpdateFrequency ( ) 
 + { 
 + return updateFrequency ; 
 + } 
 + public boolean sendsVelocityUpdates ( ) 
 + { 
 + return sendsVelocityUpdates ; 
 + } 
 } 
 
 private static final EntityRegistry INSTANCE = new EntityRegistry ( ) ; 
 @ @ - 67 , 7 + 90 , 7 @ @ public class EntityRegistry 
 { 
 return INSTANCE ; 
 } 
 - 
 + 
 private EntityRegistry ( ) 
 { 
 availableIndicies = new BitSet ( 256 ) ; 
 @ @ - 77 , 15 + 100 , 26 @ @ public class EntityRegistry 
 availableIndicies . clear ( ( Integer ) id ) ; 
 } 
 } 
 - 
 - public static void registerModEntity ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod ) 
 + 
 + / * * 
 + * Register the mod entity type with FML 
 + 
 + * @ param entityClass The entity class 
 + * @ param entityName A unique name for the entity 
 + * @ param id A mod specific ID for the entity 
 + * @ param mod The mod 
 + * @ param trackingRange The range at which MC will send tracking updates 
 + * @ param updateFrequency The frequency of tracking updates 
 + * @ param sendsVelocityUpdates Whether to send velocity information packets as well 
 + * / 
 + public static void registerModEntity ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) 
 { 
 - instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod ) ; 
 + instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod , trackingRange , updateFrequency , sendsVelocityUpdates ) ; 
 } 
 - private void doModEntityRegistration ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod ) 
 + private void doModEntityRegistration ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) 
 { 
 ModContainer mc = FMLCommonHandler . instance ( ) . findContainerFor ( mod ) ; 
 - EntityRegistration er = new EntityRegistration ( mc , entityClass , entityName , id ) ; 
 + EntityRegistration er = new EntityRegistration ( mc , entityClass , entityName , id , trackingRange , updateFrequency , sendsVelocityUpdates ) ; 
 try 
 { 
 entityClassRegistrations . put ( entityClass , er ) ; 
 @ @ - 126 , 7 + 160 , 7 @ @ public class EntityRegistry 
 { 
 @ SuppressWarnings ( " unchecked " ) 
 List < SpawnListEntry > spawns = biome . func _ 76747 _ a ( typeOfCreature ) ; 
 - 
 + 
 for ( SpawnListEntry entry : spawns ) 
 { 
 / / Adjusting an existing spawn entry 
 @ @ - 138 , 7 + 172 , 7 @ @ public class EntityRegistry 
 break ; 
 } 
 } 
 - 
 + 
 spawns . add ( new SpawnListEntry ( entityClass , weightedProb , min , max ) ) ; 
 } 
 } 
 @ @ - 146 , 7 + 180 , 7 @ @ public class EntityRegistry 
 public static void addSpawn ( String entityName , int weightedProb , int min , int max , EnumCreatureType spawnList , BiomeGenBase . . . biomes ) 
 { 
 Class < ? extends Entity > entityClazz = ( Class < ? extends Entity > ) EntityList . field _ 75625 _ b . get ( entityName ) ; 
 - 
 + 
 if ( EntityLiving . class . isAssignableFrom ( entityClazz ) ) 
 { 
 addSpawn ( ( Class < ? extends EntityLiving > ) entityClazz , weightedProb , min , max , spawnList , biomes ) ; 
 @ @ - 159 , 7 + 193 , 7 @ @ public class EntityRegistry 
 { 
 @ SuppressWarnings ( " unchecked " ) 
 Iterator < SpawnListEntry > spawns = biome . func _ 76747 _ a ( typeOfCreature ) . iterator ( ) ; 
 - 
 + 
 while ( spawns . hasNext ( ) ) 
 { 
 SpawnListEntry entry = spawns . next ( ) ; 
 @ @ - 174 , 7 + 208 , 7 @ @ public class EntityRegistry 
 public static void removeSpawn ( String entityName , EnumCreatureType spawnList , BiomeGenBase . . . biomes ) 
 { 
 Class < ? extends Entity > entityClazz = ( Class < ? extends Entity > ) EntityList . field _ 75625 _ b . get ( entityName ) ; 
 - 
 + 
 if ( EntityLiving . class . isAssignableFrom ( entityClazz ) ) 
 { 
 removeSpawn ( ( Class < ? extends EntityLiving > ) entityClazz , spawnList , biomes ) ; 
 @ @ - 194 , 7 + 228 , 7 @ @ public class EntityRegistry 
 public EntityRegistration lookupModSpawn ( Class < ? extends Entity > clazz , boolean keepLooking ) 
 { 
 Class < ? > localClazz = clazz ; 
 - 
 + 
 do 
 { 
 EntityRegistration er = entityClassRegistrations . get ( localClazz ) ; 
 @ @ - 206 , 7 + 240 , 7 @ @ public class EntityRegistry 
 keepLooking = ( ! Object . class . equals ( localClazz ) ) ; 
 } 
 while ( keepLooking ) ; 
 - 
 + 
 return null ; 
 } 
 
 @ @ - 222 , 4 + 256 , 16 @ @ public class EntityRegistry 
 return null ; 
 } 
 
 + public boolean tryTrackingEntity ( EntityTracker entityTracker , Entity entity ) 
 + { 
 + 
 + EntityRegistration er = lookupModSpawn ( entity . getClass ( ) , true ) ; 
 + if ( er ! = null ) 
 + { 
 + entityTracker . func _ 72785 _ a ( entity , er . getTrackingRange ( ) , er . getUpdateFrequency ( ) , er . sendsVelocityUpdates ( ) ) ; 
 + return true ; 
 + } 
 + return false ; 
 + } 
 + 
 } 
 diff - - git a / fml / patches / common / net / minecraft / src / EntityTracker . java . patch b / fml / patches / common / net / minecraft / src / EntityTracker . java . patch 
 new file mode 100644 
 index 0000000 . . 44a6127 
 - - - / dev / null 
 + + + b / fml / patches / common / net / minecraft / src / EntityTracker . java . patch 
 @ @ - 0 , 0 + 1 , 22 @ @ 
 + - - - . . / src - base / common / net / minecraft / src / EntityTracker . java 
 + + + + . . / src - work / common / net / minecraft / src / EntityTracker . java 
 + @ @ - 4 , 6 + 4 , 8 @ @ 
 + import java . util . HashSet ; 
 + import java . util . Iterator ; 
 + import java . util . Set ; 
 + + 
 + + import cpw . mods . fml . common . registry . EntityRegistry ; 
 + 
 + public class EntityTracker 
 + { 
 + @ @ - 20 , 6 + 22 , 10 @ @ 
 + 
 + public void func _ 72786 _ a ( Entity p _ 72786 _ 1 _ ) 
 + { 
 + + if ( EntityRegistry . instance ( ) . tryTrackingEntity ( this , p _ 72786 _ 1 _ ) ) 
 + + { 
 + + return ; 
 + + } 
 + if ( p _ 72786 _ 1 _ instanceof EntityPlayerMP ) 
 + { 
 + this . func _ 72791 _ a ( p _ 72786 _ 1 _ , 512 , 2 ) ;
