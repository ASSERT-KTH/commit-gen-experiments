BLEU SCORE: 0.0130429800193758

TEST MSG: Prevent EntityPlayer . attackEntityFrom from firing LivingAttackEvent twice
GENERATED MSG: Add an event that allows to modify the looting level based on damage source

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch <nl> index 0447131 . . 2876e22 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch <nl> @ @ - 4 , 7 + 4 , 7 @ @ <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) <nl> { <nl> - + net . minecraftforge . common . ForgeHooks . onLivingAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; <nl> + + net . minecraftforge . common . ForgeHooks . onPlayerAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; <nl> return true ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> index eafdab1 . . 58e3d59 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> @ @ - 4 , 7 + 4 , 7 @ @ <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) <nl> { <nl> - + net . minecraftforge . common . ForgeHooks . onLivingAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; <nl> + + net . minecraftforge . common . ForgeHooks . onPlayerAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; <nl> return false ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index db69ae0 . . 395f839 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 202 , 7 + 202 , 7 @ @ <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) <nl> { <nl> - + if ( ! net . minecraftforge . common . ForgeHooks . onLivingAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ) return false ; <nl> + + if ( ! net . minecraftforge . common . ForgeHooks . onPlayerAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ) return false ; <nl> if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) <nl> { <nl> return false ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 5301c48 . . dce44e1 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 568 , 6 + 568 , 11 @ @ public class ForgeHooks <nl> <nl> public static boolean onLivingAttack ( EntityLivingBase entity , DamageSource src , float amount ) <nl> { <nl> + return entity instanceof EntityPlayer | | ! MinecraftForge . EVENT _ BUS . post ( new LivingAttackEvent ( entity , src , amount ) ) ; <nl> + } <nl> + <nl> + public static boolean onPlayerAttack ( EntityLivingBase entity , DamageSource src , float amount ) <nl> + { <nl> return ! MinecraftForge . EVENT _ BUS . post ( new LivingAttackEvent ( entity , src , amount ) ) ; <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / LivingAttackEventTest . java b / src / test / java / net / minecraftforge / debug / LivingAttackEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . 5481af2 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / LivingAttackEventTest . java <nl> @ @ - 0 , 0 + 1 , 33 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . util . DamageSource ; <nl> + import net . minecraftforge . event . entity . living . LivingAttackEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + @ Mod ( modid = LivingAttackEventTest . MODID , name = LivingAttackEventTest . NAME , version = " 1 . 0 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class LivingAttackEventTest <nl> + { <nl> + <nl> + public static final String MODID = " livingattackeventtest " ; <nl> + public static final String NAME = " LivingAttackEventTest " ; <nl> + private static final Logger LOGGER = LogManager . getLogger ( NAME ) ; <nl> + <nl> + @ EventBusSubscriber <nl> + public static class LivingAttackEventHandler <nl> + { <nl> + <nl> + @ SubscribeEvent <nl> + public static void onLivingAttack ( LivingAttackEvent event ) <nl> + { <nl> + if ( event . getSource ( ) = = DamageSource . ANVIL ) <nl> + { <nl> + LOGGER . info ( " { } was hit by an anvil ! " , event . getEntityLiving ( ) . getName ( ) ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index c842cdd . . b5b2dbe 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 76 , 9 + 76 , 11 @ @ <nl> if ( ! this . field _ 70729 _ aU ) <nl> { <nl> Entity entity = p _ 70645 _ 1 _ . func _ 76346 _ g ( ) ; <nl> - @ @ - 1070 , 11 + 1076 , 24 @ @ <nl> + @ @ - 1069 , 12 + 1075 , 26 @ @ <nl> + { <nl> i = EnchantmentHelper . func _ 185283 _ h ( ( EntityLivingBase ) entity ) ; <nl> } <nl> + + i = net . minecraftforge . common . ForgeHooks . getLootingLevel ( this , p _ 70645 _ 1 _ , i ) ; <nl> <nl> + captureDrops = true ; <nl> + capturedDrops . clear ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 9e41636 . . dae6dea 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 109 , 6 + 109 , 7 @ @ import net . minecraftforge . event . entity . living . LivingEvent . LivingUpdateEvent ; <nl> import net . minecraftforge . event . entity . living . LivingFallEvent ; <nl> import net . minecraftforge . event . entity . living . LivingHurtEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSetAttackTargetEvent ; <nl> + import net . minecraftforge . event . entity . living . LootingLevelEvent ; <nl> import net . minecraftforge . event . entity . player . AnvilRepairEvent ; <nl> import net . minecraftforge . event . entity . player . AttackEntityEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> @ @ - 515 , 6 + 516 , 12 @ @ public class ForgeHooks <nl> return ( MinecraftForge . EVENT _ BUS . post ( event ) ? null : new float [ ] { event . getDistance ( ) , event . getDamageMultiplier ( ) } ) ; <nl> } <nl> <nl> + public static int getLootingLevel ( EntityLivingBase target , DamageSource cause , int level ) { <nl> + LootingLevelEvent event = new LootingLevelEvent ( target , cause , level ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return event . getLootingLevel ( ) ; <nl> + } <nl> + <nl> public static boolean isLivingOnLadder ( IBlockState state , World world , BlockPos pos , EntityLivingBase entity ) <nl> { <nl> boolean isSpectator = ( entity instanceof EntityPlayer & & ( ( EntityPlayer ) entity ) . isSpectator ( ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LootingLevelEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LootingLevelEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 3d91472 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LootingLevelEvent . java <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . util . DamageSource ; <nl> + <nl> + public class LootingLevelEvent extends LivingEvent { <nl> + <nl> + private final DamageSource damageSource ; <nl> + <nl> + private int lootingLevel ; <nl> + <nl> + public LootingLevelEvent ( EntityLivingBase entity , DamageSource damageSource , int lootingLevel ) { <nl> + super ( entity ) ; <nl> + this . damageSource = damageSource ; <nl> + this . lootingLevel = lootingLevel ; <nl> + } <nl> + <nl> + public DamageSource getDamageSource ( ) { <nl> + return damageSource ; <nl> + } <nl> + <nl> + public int getLootingLevel ( ) { <nl> + return lootingLevel ; <nl> + } <nl> + <nl> + public void setLootingLevel ( int lootingLevel ) { <nl> + this . lootingLevel = lootingLevel ; <nl> + } <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / LootTablesDebug . java b / src / test / java / net / minecraftforge / debug / LootTablesDebug . java <nl> index 7b4a89e . . 4e3d943 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / LootTablesDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / LootTablesDebug . java <nl> @ @ - 1 , 6 + 1 , 9 @ @ <nl> package net . minecraftforge . debug ; <nl> <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . entity . projectile . EntityArrow ; <nl> import net . minecraft . init . Items ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . world . storage . loot . LootEntryItem ; <nl> import net . minecraft . world . storage . loot . LootPool ; <nl> @ @ - 9 , 6 + 12 , 7 @ @ import net . minecraft . world . storage . loot . conditions . LootCondition ; <nl> import net . minecraft . world . storage . loot . functions . LootFunction ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . LootTableLoadEvent ; <nl> + import net . minecraftforge . event . entity . living . LootingLevelEvent ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> @ @ - 39 , 4 + 43 , 13 @ @ public class LootTablesDebug { <nl> / / Get rid of all building mats . Which is pool # 3 , index starts at 0 , but 0 is named " main " <nl> event . getTable ( ) . removePool ( " pool3 " ) ; <nl> } <nl> + <nl> + @ SubscribeEvent <nl> + public void lootingEvent ( LootingLevelEvent event ) { <nl> + / / if the player shoots something with a projectile , use looting 3 <nl> + DamageSource damageSource = event . getDamageSource ( ) ; <nl> + if ( damageSource . isProjectile ( ) & & damageSource . getEntity ( ) instanceof EntityPlayer & & damageSource . getSourceOfDamage ( ) instanceof EntityArrow ) { <nl> + event . setLootingLevel ( 3 ) ; <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch 
 index 0447131 . . 2876e22 100644 
 - - - a / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / entity / EntityOtherPlayerMP . java . patch 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) 
 { 
 - + net . minecraftforge . common . ForgeHooks . onLivingAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; 
 + + net . minecraftforge . common . ForgeHooks . onPlayerAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; 
 return true ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 index eafdab1 . . 58e3d59 100644 
 - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) 
 { 
 - + net . minecraftforge . common . ForgeHooks . onLivingAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; 
 + + net . minecraftforge . common . ForgeHooks . onPlayerAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ; 
 return false ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index db69ae0 . . 395f839 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 202 , 7 + 202 , 7 @ @ 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) 
 { 
 - + if ( ! net . minecraftforge . common . ForgeHooks . onLivingAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ) return false ; 
 + + if ( ! net . minecraftforge . common . ForgeHooks . onPlayerAttack ( this , p _ 70097 _ 1 _ , p _ 70097 _ 2 _ ) ) return false ; 
 if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) 
 { 
 return false ; 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 5301c48 . . dce44e1 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 568 , 6 + 568 , 11 @ @ public class ForgeHooks 
 
 public static boolean onLivingAttack ( EntityLivingBase entity , DamageSource src , float amount ) 
 { 
 + return entity instanceof EntityPlayer | | ! MinecraftForge . EVENT _ BUS . post ( new LivingAttackEvent ( entity , src , amount ) ) ; 
 + } 
 + 
 + public static boolean onPlayerAttack ( EntityLivingBase entity , DamageSource src , float amount ) 
 + { 
 return ! MinecraftForge . EVENT _ BUS . post ( new LivingAttackEvent ( entity , src , amount ) ) ; 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / LivingAttackEventTest . java b / src / test / java / net / minecraftforge / debug / LivingAttackEventTest . java 
 new file mode 100644 
 index 0000000 . . 5481af2 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / LivingAttackEventTest . java 
 @ @ - 0 , 0 + 1 , 33 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . util . DamageSource ; 
 + import net . minecraftforge . event . entity . living . LivingAttackEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + @ Mod ( modid = LivingAttackEventTest . MODID , name = LivingAttackEventTest . NAME , version = " 1 . 0 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class LivingAttackEventTest 
 + { 
 + 
 + public static final String MODID = " livingattackeventtest " ; 
 + public static final String NAME = " LivingAttackEventTest " ; 
 + private static final Logger LOGGER = LogManager . getLogger ( NAME ) ; 
 + 
 + @ EventBusSubscriber 
 + public static class LivingAttackEventHandler 
 + { 
 + 
 + @ SubscribeEvent 
 + public static void onLivingAttack ( LivingAttackEvent event ) 
 + { 
 + if ( event . getSource ( ) = = DamageSource . ANVIL ) 
 + { 
 + LOGGER . info ( " { } was hit by an anvil ! " , event . getEntityLiving ( ) . getName ( ) ) ; 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index c842cdd . . b5b2dbe 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 76 , 9 + 76 , 11 @ @ 
 if ( ! this . field _ 70729 _ aU ) 
 { 
 Entity entity = p _ 70645 _ 1 _ . func _ 76346 _ g ( ) ; 
 - @ @ - 1070 , 11 + 1076 , 24 @ @ 
 + @ @ - 1069 , 12 + 1075 , 26 @ @ 
 + { 
 i = EnchantmentHelper . func _ 185283 _ h ( ( EntityLivingBase ) entity ) ; 
 } 
 + + i = net . minecraftforge . common . ForgeHooks . getLootingLevel ( this , p _ 70645 _ 1 _ , i ) ; 
 
 + captureDrops = true ; 
 + capturedDrops . clear ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 9e41636 . . dae6dea 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 109 , 6 + 109 , 7 @ @ import net . minecraftforge . event . entity . living . LivingEvent . LivingUpdateEvent ; 
 import net . minecraftforge . event . entity . living . LivingFallEvent ; 
 import net . minecraftforge . event . entity . living . LivingHurtEvent ; 
 import net . minecraftforge . event . entity . living . LivingSetAttackTargetEvent ; 
 + import net . minecraftforge . event . entity . living . LootingLevelEvent ; 
 import net . minecraftforge . event . entity . player . AnvilRepairEvent ; 
 import net . minecraftforge . event . entity . player . AttackEntityEvent ; 
 import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 @ @ - 515 , 6 + 516 , 12 @ @ public class ForgeHooks 
 return ( MinecraftForge . EVENT _ BUS . post ( event ) ? null : new float [ ] { event . getDistance ( ) , event . getDamageMultiplier ( ) } ) ; 
 } 
 
 + public static int getLootingLevel ( EntityLivingBase target , DamageSource cause , int level ) { 
 + LootingLevelEvent event = new LootingLevelEvent ( target , cause , level ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return event . getLootingLevel ( ) ; 
 + } 
 + 
 public static boolean isLivingOnLadder ( IBlockState state , World world , BlockPos pos , EntityLivingBase entity ) 
 { 
 boolean isSpectator = ( entity instanceof EntityPlayer & & ( ( EntityPlayer ) entity ) . isSpectator ( ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LootingLevelEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LootingLevelEvent . java 
 new file mode 100644 
 index 0000000 . . 3d91472 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LootingLevelEvent . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . util . DamageSource ; 
 + 
 + public class LootingLevelEvent extends LivingEvent { 
 + 
 + private final DamageSource damageSource ; 
 + 
 + private int lootingLevel ; 
 + 
 + public LootingLevelEvent ( EntityLivingBase entity , DamageSource damageSource , int lootingLevel ) { 
 + super ( entity ) ; 
 + this . damageSource = damageSource ; 
 + this . lootingLevel = lootingLevel ; 
 + } 
 + 
 + public DamageSource getDamageSource ( ) { 
 + return damageSource ; 
 + } 
 + 
 + public int getLootingLevel ( ) { 
 + return lootingLevel ; 
 + } 
 + 
 + public void setLootingLevel ( int lootingLevel ) { 
 + this . lootingLevel = lootingLevel ; 
 + } 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / debug / LootTablesDebug . java b / src / test / java / net / minecraftforge / debug / LootTablesDebug . java 
 index 7b4a89e . . 4e3d943 100644 
 - - - a / src / test / java / net / minecraftforge / debug / LootTablesDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / LootTablesDebug . java 
 @ @ - 1 , 6 + 1 , 9 @ @ 
 package net . minecraftforge . debug ; 
 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . entity . projectile . EntityArrow ; 
 import net . minecraft . init . Items ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . world . storage . loot . LootEntryItem ; 
 import net . minecraft . world . storage . loot . LootPool ; 
 @ @ - 9 , 6 + 12 , 7 @ @ import net . minecraft . world . storage . loot . conditions . LootCondition ; 
 import net . minecraft . world . storage . loot . functions . LootFunction ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . LootTableLoadEvent ; 
 + import net . minecraftforge . event . entity . living . LootingLevelEvent ; 
 import net . minecraftforge . fml . common . Mod ; 
 import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 @ @ - 39 , 4 + 43 , 13 @ @ public class LootTablesDebug { 
 / / Get rid of all building mats . Which is pool # 3 , index starts at 0 , but 0 is named " main " 
 event . getTable ( ) . removePool ( " pool3 " ) ; 
 } 
 + 
 + @ SubscribeEvent 
 + public void lootingEvent ( LootingLevelEvent event ) { 
 + / / if the player shoots something with a projectile , use looting 3 
 + DamageSource damageSource = event . getDamageSource ( ) ; 
 + if ( damageSource . isProjectile ( ) & & damageSource . getEntity ( ) instanceof EntityPlayer & & damageSource . getSourceOfDamage ( ) instanceof EntityArrow ) { 
 + event . setLootingLevel ( 3 ) ; 
 + } 
 + } 
 }
