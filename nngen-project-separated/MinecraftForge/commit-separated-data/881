BLEU SCORE: 0.035802380724744266

TEST MSG: Nobody is left behind .
GENERATED MSG: Re - enabled Entity - Render registration

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / client / registry / IRenderFactory . java b / src / main / java / net / minecraftforge / fml / client / registry / IRenderFactory . java <nl> new file mode 100644 <nl> index 0000000 . . 457629d <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / fml / client / registry / IRenderFactory . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package net . minecraftforge . fml . client . registry ; <nl> + <nl> + import net . minecraft . client . renderer . entity . Render ; <nl> + import net . minecraft . client . renderer . entity . RenderManager ; <nl> + import net . minecraft . entity . Entity ; <nl> + <nl> + public interface IRenderFactory < T extends Entity > <nl> + { <nl> + public Render < ? super T > createRenderFor ( RenderManager manager ) ; <nl> + }
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index a4cc513 . . a5f39e9 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 40 , 9 + 40 , 11 @ @ import net . minecraft . client . multiplayer . ServerData ; <nl> import net . minecraft . client . multiplayer . WorldClient ; <nl> import net . minecraft . client . network . NetHandlerPlayClient ; <nl> import net . minecraft . client . network . OldServerPinger ; <nl> + import net . minecraft . client . renderer . entity . Render ; <nl> import net . minecraft . client . resources . IReloadableResourceManager ; <nl> import net . minecraft . client . resources . IResourcePack ; <nl> import net . minecraft . crash . CrashReport ; <nl> + import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . launchwrapper . Launch ; <nl> import net . minecraft . nbt . CompressedStreamTools ; <nl> @ @ - 55 , 6 + 57 , 7 @ @ import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . world . WorldSettings ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> + import net . minecraftforge . fml . client . registry . RenderingRegistry ; <nl> import net . minecraftforge . fml . common . DummyModContainer ; <nl> import net . minecraftforge . fml . common . DuplicateModsFoundException ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> @ @ - 293 , 7 + 296 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> <nl> / / Reload resources <nl> client . refreshResources ( ) ; <nl> - / / RenderingRegistry . instance ( ) . loadEntityRenderers ( ( Map < Class < ? extends Entity > , Render > ) Minecraft . getMinecraft ( ) . func _ 175598 _ ae ( ) . entityRenderMap ) ; <nl> + RenderingRegistry . loadEntityRenderers ( ( Map < Class < ? extends Entity > , Render > ) Minecraft . getMinecraft ( ) . getRenderManager ( ) . entityRenderMap ) ; <nl> guiFactories = HashBiMap . create ( ) ; <nl> for ( ModContainer mc : Loader . instance ( ) . getActiveModList ( ) ) <nl> { <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java b / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java <nl> index 31e0326 . . 607d736 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java <nl> @ @ - 9 , 23 + 9 , 15 @ @ <nl> * Contributors : <nl> * cpw - implementation <nl> * / <nl> - <nl> package net . minecraftforge . fml . client . registry ; <nl> <nl> import java . util . List ; <nl> import java . util . Map ; <nl> <nl> - import net . minecraft . block . Block ; <nl> - import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . renderer . entity . Render ; <nl> - import net . minecraft . client . renderer . entity . RenderBiped ; <nl> - import net . minecraft . client . renderer . entity . RenderManager ; <nl> import net . minecraft . entity . Entity ; <nl> - import net . minecraft . world . IBlockAccess ; <nl> <nl> import com . google . common . collect . Lists ; <nl> - import com . google . common . collect . Maps ; <nl> - import com . google . common . collect . ObjectArrays ; <nl> <nl> / * * <nl> * @ author cpw <nl> @ @ - 60 , 13 + 52 , 11 @ @ public class RenderingRegistry <nl> private Render renderer ; <nl> } <nl> <nl> - / * <nl> - public void loadEntityRenderers ( Map < Class < ? extends Entity > , Render > rendererMap ) <nl> + public static void loadEntityRenderers ( Map < Class < ? extends Entity > , Render > rendererMap ) <nl> { <nl> - for ( EntityRendererInfo info : entityRenderers ) <nl> + for ( EntityRendererInfo info : INSTANCE . entityRenderers ) <nl> { <nl> rendererMap . put ( info . target , info . renderer ) ; <nl> - info . renderer . setRenderManager ( Minecraft . getMinecraft ( ) . func _ 175598 _ ae ( ) ) ; <nl> } <nl> - } * / <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / client / registry / IRenderFactory . java b / src / main / java / net / minecraftforge / fml / client / registry / IRenderFactory . java 
 new file mode 100644 
 index 0000000 . . 457629d 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / fml / client / registry / IRenderFactory . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package net . minecraftforge . fml . client . registry ; 
 + 
 + import net . minecraft . client . renderer . entity . Render ; 
 + import net . minecraft . client . renderer . entity . RenderManager ; 
 + import net . minecraft . entity . Entity ; 
 + 
 + public interface IRenderFactory < T extends Entity > 
 + { 
 + public Render < ? super T > createRenderFor ( RenderManager manager ) ; 
 + }

NEAREST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index a4cc513 . . a5f39e9 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 40 , 9 + 40 , 11 @ @ import net . minecraft . client . multiplayer . ServerData ; 
 import net . minecraft . client . multiplayer . WorldClient ; 
 import net . minecraft . client . network . NetHandlerPlayClient ; 
 import net . minecraft . client . network . OldServerPinger ; 
 + import net . minecraft . client . renderer . entity . Render ; 
 import net . minecraft . client . resources . IReloadableResourceManager ; 
 import net . minecraft . client . resources . IResourcePack ; 
 import net . minecraft . crash . CrashReport ; 
 + import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . launchwrapper . Launch ; 
 import net . minecraft . nbt . CompressedStreamTools ; 
 @ @ - 55 , 6 + 57 , 7 @ @ import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . world . WorldSettings ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 + import net . minecraftforge . fml . client . registry . RenderingRegistry ; 
 import net . minecraftforge . fml . common . DummyModContainer ; 
 import net . minecraftforge . fml . common . DuplicateModsFoundException ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 @ @ - 293 , 7 + 296 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 
 / / Reload resources 
 client . refreshResources ( ) ; 
 - / / RenderingRegistry . instance ( ) . loadEntityRenderers ( ( Map < Class < ? extends Entity > , Render > ) Minecraft . getMinecraft ( ) . func _ 175598 _ ae ( ) . entityRenderMap ) ; 
 + RenderingRegistry . loadEntityRenderers ( ( Map < Class < ? extends Entity > , Render > ) Minecraft . getMinecraft ( ) . getRenderManager ( ) . entityRenderMap ) ; 
 guiFactories = HashBiMap . create ( ) ; 
 for ( ModContainer mc : Loader . instance ( ) . getActiveModList ( ) ) 
 { 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java b / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java 
 index 31e0326 . . 607d736 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / client / registry / RenderingRegistry . java 
 @ @ - 9 , 23 + 9 , 15 @ @ 
 * Contributors : 
 * cpw - implementation 
 * / 
 - 
 package net . minecraftforge . fml . client . registry ; 
 
 import java . util . List ; 
 import java . util . Map ; 
 
 - import net . minecraft . block . Block ; 
 - import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . renderer . entity . Render ; 
 - import net . minecraft . client . renderer . entity . RenderBiped ; 
 - import net . minecraft . client . renderer . entity . RenderManager ; 
 import net . minecraft . entity . Entity ; 
 - import net . minecraft . world . IBlockAccess ; 
 
 import com . google . common . collect . Lists ; 
 - import com . google . common . collect . Maps ; 
 - import com . google . common . collect . ObjectArrays ; 
 
 / * * 
 * @ author cpw 
 @ @ - 60 , 13 + 52 , 11 @ @ public class RenderingRegistry 
 private Render renderer ; 
 } 
 
 - / * 
 - public void loadEntityRenderers ( Map < Class < ? extends Entity > , Render > rendererMap ) 
 + public static void loadEntityRenderers ( Map < Class < ? extends Entity > , Render > rendererMap ) 
 { 
 - for ( EntityRendererInfo info : entityRenderers ) 
 + for ( EntityRendererInfo info : INSTANCE . entityRenderers ) 
 { 
 rendererMap . put ( info . target , info . renderer ) ; 
 - info . renderer . setRenderManager ( Minecraft . getMinecraft ( ) . func _ 175598 _ ae ( ) ) ; 
 } 
 - } * / 
 + } 
 }
