BLEU SCORE: 0.010211566521809648

TEST MSG: Add Potion . renderHUDEffect
GENERATED MSG: Add shouldRender ( ) to Potions that allows to hide them completely in the inventory

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch <nl> index fea4f60 . . 9d96734 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch <nl> @ @ - 10 , 3 + 10 , 26 @ @ <nl> { <nl> return ; <nl> } <nl> + @ @ - 418 , 7 + 419 , 10 @ @ <nl> + { <nl> + Potion potion = potioneffect . func _ 188419 _ a ( ) ; <nl> + <nl> + - if ( potion . func _ 76400 _ d ( ) & & potioneffect . func _ 188418 _ e ( ) ) <nl> + + if ( ! potion . shouldRenderHUD ( potioneffect ) ) continue ; <nl> + + / / Rebind in case previous renderHUDEffect changed texture <nl> + + this . field _ 73839 _ d . func _ 110434 _ K ( ) . func _ 110577 _ a ( GuiContainer . field _ 147001 _ a ) ; <nl> + + if ( potioneffect . func _ 188418 _ e ( ) ) <nl> + { <nl> + int k = p _ 184048 _ 1 _ . func _ 78326 _ a ( ) ; <nl> + int l = 1 ; <nl> + @ @ - 455 , 7 + 459 , 10 @ @ <nl> + } <nl> + <nl> + GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , f ) ; <nl> + + / / FORGE - Move status icon check down from above so renderHUDEffect will still be called without a status icon <nl> + + if ( potion . func _ 76400 _ d ( ) ) <nl> + this . func _ 73729 _ b ( k + 3 , l + 3 , i1 % 8 * 18 , 198 + i1 / 8 * 18 , 18 , 18 ) ; <nl> + + potion . renderHUDEffect ( k , l , potioneffect , field _ 73839 _ d , f ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / potion / Potion . java . patch b / patches / minecraft / net / minecraft / potion / Potion . java . patch <nl> index 9385f03 . . 438c3e5 100644 <nl> - - - a / patches / minecraft / net / minecraft / potion / Potion . java . patch <nl> + + + b / patches / minecraft / net / minecraft / potion / Potion . java . patch <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> public boolean func _ 76398 _ f ( ) <nl> { <nl> return this . field _ 76418 _ K ; <nl> - @ @ - 266 , 7 + 265 , 37 @ @ <nl> + @ @ - 266 , 7 + 265 , 61 @ @ <nl> return p _ 111183 _ 2 _ . func _ 111164 _ d ( ) * ( double ) ( p _ 111183 _ 1 _ + 1 ) ; <nl> } <nl> <nl> @ @ - 44 , 6 + 44 , 16 @ @ <nl> + } <nl> + <nl> + / * * <nl> + + * If the Potion effect should be displayed in the player ' s ingame HUD <nl> + + * @ param effect the active PotionEffect <nl> + + * @ return true to display it ( default ) , false to hide it . <nl> + + * / <nl> + + public boolean shouldRenderHUD ( PotionEffect effect ) <nl> + + { <nl> + + return true ; <nl> + + } <nl> + + <nl> + + / * * <nl> + * Called to draw the this Potion onto the player ' s inventory when it ' s active . <nl> + * This can be used to e . g . render Potion icons from your own texture . <nl> + * @ param x the x coordinate <nl> @ @ - 54 , 6 + 64 , 20 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> + public void renderInventoryEffect ( int x , int y , PotionEffect effect , net . minecraft . client . Minecraft mc ) { } <nl> + <nl> + + / * * <nl> + + * Called to draw the this Potion onto the player ' s ingame HUD when it ' s active . <nl> + + * This can be used to e . g . render Potion icons from your own texture . <nl> + + * @ param x the x coordinate <nl> + + * @ param y the y coordinate <nl> + + * @ param effect the active PotionEffect <nl> + + * @ param mc the Minecraft instance , for convenience <nl> + + * @ param alpha the alpha value , blinks when the potion is about to run out <nl> + + * / <nl> + + @ SideOnly ( Side . CLIENT ) <nl> + + public void renderHUDEffect ( int x , int y , PotionEffect effect , net . minecraft . client . Minecraft mc , float alpha ) { } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + <nl> + @ SideOnly ( Side . CLIENT ) <nl> public boolean func _ 188408 _ i ( ) <nl> { <nl> diff - - git a / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java b / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java <nl> index da9cfb1 . . 6bfb4e5 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java <nl> @ @ - 84 , 5 + 84 , 33 @ @ public class PotionRegistryDebug { <nl> buf . pos ( ( double ) x , ( double ) y , 0 . 0D ) . tex ( sprite . getMinU ( ) , sprite . getMinV ( ) ) . endVertex ( ) ; <nl> tessellator . draw ( ) ; <nl> } <nl> + <nl> + @ Override <nl> + public void renderHUDEffect ( int x , int y , PotionEffect effect , Minecraft mc , float alpha ) { <nl> + Potion potion = effect . getPotion ( ) ; <nl> + <nl> + mc . getTextureManager ( ) . bindTexture ( TextureMap . locationBlocksTexture ) ; <nl> + TextureAtlasSprite sprite = mc . getTextureMapBlocks ( ) . getAtlasSprite ( " minecraft : blocks / tnt _ side " ) ; <nl> + <nl> + x + = 3 ; <nl> + y + = 3 ; <nl> + <nl> + int width = 18 ; <nl> + int height = width ; <nl> + <nl> + float r = ( float ) ( potion . getLiquidColor ( ) > > 24 & 255 ) / 255 . 0F ; <nl> + float g = ( float ) ( potion . getLiquidColor ( ) > > 16 & 255 ) / 255 . 0F ; <nl> + float b = ( float ) ( potion . getLiquidColor ( ) > > 8 & 255 ) / 255 . 0F ; <nl> + <nl> + Tessellator tessellator = Tessellator . getInstance ( ) ; <nl> + VertexBuffer buf = tessellator . getBuffer ( ) ; <nl> + buf . begin ( 7 , DefaultVertexFormats . POSITION _ TEX ) ; <nl> + GlStateManager . color ( r , g , b , alpha ) ; <nl> + buf . pos ( ( double ) x , ( double ) ( y + height ) , 0 . 0D ) . tex ( sprite . getMinU ( ) , sprite . getMaxV ( ) ) . endVertex ( ) ; <nl> + buf . pos ( ( double ) ( x + width ) , ( double ) ( y + height ) , 0 . 0D ) . tex ( sprite . getMaxU ( ) , sprite . getMaxV ( ) ) . endVertex ( ) ; <nl> + buf . pos ( ( double ) ( x + width ) , ( double ) y , 0 . 0D ) . tex ( sprite . getMaxU ( ) , sprite . getMinV ( ) ) . endVertex ( ) ; <nl> + buf . pos ( ( double ) x , ( double ) y , 0 . 0D ) . tex ( sprite . getMinU ( ) , sprite . getMinV ( ) ) . endVertex ( ) ; <nl> + tessellator . draw ( ) ; <nl> + } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch <nl> index fd3e46c . . 74f00ed 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch <nl> @ @ - 1 , 6 + 1 , 28 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java <nl> - @ @ - 80 , 6 + 80 , 8 @ @ <nl> + @ @ - 27 , 7 + 27 , 12 @ @ <nl> + <nl> + protected void func _ 175378 _ g ( ) <nl> + { <nl> + - if ( ! this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) . isEmpty ( ) ) <nl> + + boolean hasVisibleEffect = false ; <nl> + + for ( PotionEffect potioneffect : this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) ) { <nl> + + Potion potion = Potion . field _ 76425 _ a [ potioneffect . func _ 76456 _ a ( ) ] ; <nl> + + if ( potion . shouldRender ( potioneffect ) ) { hasVisibleEffect = true ; break ; } <nl> + + } <nl> + + if ( ! this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) . isEmpty ( ) & & hasVisibleEffect ) <nl> + { <nl> + this . field _ 147003 _ i = 160 + ( this . field _ 146294 _ l - this . field _ 146999 _ f - 200 ) / 2 ; <nl> + this . field _ 147045 _ u = true ; <nl> + @ @ - 70 , 6 + 75 , 7 @ @ <nl> + for ( PotionEffect potioneffect : this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) ) <nl> + { <nl> + Potion potion = Potion . field _ 76425 _ a [ potioneffect . func _ 76456 _ a ( ) ] ; <nl> + + if ( ! potion . shouldRender ( potioneffect ) ) continue ; <nl> + GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; <nl> + this . field _ 146297 _ k . func _ 110434 _ K ( ) . func _ 110577 _ a ( field _ 147001 _ a ) ; <nl> + this . func _ 73729 _ b ( i , j , 0 , 166 , 140 , 32 ) ; <nl> + @ @ - 80 , 6 + 86 , 8 @ @ <nl> this . func _ 73729 _ b ( i + 6 , j + 7 , 0 + i1 % 8 * 18 , 198 + i1 / 8 * 18 , 18 , 18 ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / potion / Potion . java . patch b / patches / minecraft / net / minecraft / potion / Potion . java . patch <nl> index 05ec68e . . 1ee629d 100644 <nl> - - - a / patches / minecraft / net / minecraft / potion / Potion . java . patch <nl> + + + b / patches / minecraft / net / minecraft / potion / Potion . java . patch <nl> @ @ - 51 , 7 + 51 , 7 @ @ <nl> public boolean func _ 76398 _ f ( ) <nl> { <nl> return this . field _ 76418 _ K ; <nl> - @ @ - 310 , 4 + 313 , 27 @ @ <nl> + @ @ - 310 , 4 + 313 , 34 @ @ <nl> { <nl> return p _ 111183 _ 2 _ . func _ 111164 _ d ( ) * ( double ) ( p _ 111183 _ 1 _ + 1 ) ; <nl> } <nl> @ @ - 59 , 6 + 59 , 13 @ @ <nl> + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + <nl> + / * * <nl> + + * If the Potion effect should be displayed in the players inventory <nl> + + * @ param effect the active PotionEffect <nl> + + * @ return true to display it ( default ) , false to hide it . <nl> + + * / <nl> + + public boolean shouldRender ( PotionEffect effect ) { return true ; } <nl> + + <nl> + + / * * <nl> + * If the standard PotionEffect text ( name and duration ) should be drawn when this potion is active . <nl> + * @ param effect the active PotionEffect <nl> + * @ return true to draw the standard text <nl> diff - - git a / src / test / java / net / minecraftforge / debug / NoPotionEffectRenderTest . java b / src / test / java / net / minecraftforge / debug / NoPotionEffectRenderTest . java <nl> new file mode 100644 <nl> index 0000000 . . f8d7791 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / NoPotionEffectRenderTest . java <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . potion . Potion ; <nl> + import net . minecraft . potion . PotionEffect ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + <nl> + @ Mod ( modid = NoPotionEffectRenderTest . modID , name = " No Potion Effect Render Test " , version = " 0 . 0 . 0 " ) <nl> + public class NoPotionEffectRenderTest { <nl> + public static final String modID = " nopotioneffect " ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) { <nl> + TestPotion INSTANCE = new TestPotion ( 30 , new ResourceLocation ( modID , " test _ potion " ) , false , 0xff00ff ) ; <nl> + } <nl> + <nl> + public static class TestPotion extends Potion { <nl> + <nl> + public TestPotion ( int potionID , ResourceLocation location , boolean badEffect , int potionColor ) { <nl> + super ( potionID , location , badEffect , potionColor ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean shouldRender ( PotionEffect effect ) { <nl> + return false ; <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch 
 index fea4f60 . . 9d96734 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiIngame . java . patch 
 @ @ - 10 , 3 + 10 , 26 @ @ 
 { 
 return ; 
 } 
 + @ @ - 418 , 7 + 419 , 10 @ @ 
 + { 
 + Potion potion = potioneffect . func _ 188419 _ a ( ) ; 
 + 
 + - if ( potion . func _ 76400 _ d ( ) & & potioneffect . func _ 188418 _ e ( ) ) 
 + + if ( ! potion . shouldRenderHUD ( potioneffect ) ) continue ; 
 + + / / Rebind in case previous renderHUDEffect changed texture 
 + + this . field _ 73839 _ d . func _ 110434 _ K ( ) . func _ 110577 _ a ( GuiContainer . field _ 147001 _ a ) ; 
 + + if ( potioneffect . func _ 188418 _ e ( ) ) 
 + { 
 + int k = p _ 184048 _ 1 _ . func _ 78326 _ a ( ) ; 
 + int l = 1 ; 
 + @ @ - 455 , 7 + 459 , 10 @ @ 
 + } 
 + 
 + GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , f ) ; 
 + + / / FORGE - Move status icon check down from above so renderHUDEffect will still be called without a status icon 
 + + if ( potion . func _ 76400 _ d ( ) ) 
 + this . func _ 73729 _ b ( k + 3 , l + 3 , i1 % 8 * 18 , 198 + i1 / 8 * 18 , 18 , 18 ) ; 
 + + potion . renderHUDEffect ( k , l , potioneffect , field _ 73839 _ d , f ) ; 
 + } 
 + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / potion / Potion . java . patch b / patches / minecraft / net / minecraft / potion / Potion . java . patch 
 index 9385f03 . . 438c3e5 100644 
 - - - a / patches / minecraft / net / minecraft / potion / Potion . java . patch 
 + + + b / patches / minecraft / net / minecraft / potion / Potion . java . patch 
 @ @ - 20 , 7 + 20 , 7 @ @ 
 public boolean func _ 76398 _ f ( ) 
 { 
 return this . field _ 76418 _ K ; 
 - @ @ - 266 , 7 + 265 , 37 @ @ 
 + @ @ - 266 , 7 + 265 , 61 @ @ 
 return p _ 111183 _ 2 _ . func _ 111164 _ d ( ) * ( double ) ( p _ 111183 _ 1 _ + 1 ) ; 
 } 
 
 @ @ - 44 , 6 + 44 , 16 @ @ 
 + } 
 + 
 + / * * 
 + + * If the Potion effect should be displayed in the player ' s ingame HUD 
 + + * @ param effect the active PotionEffect 
 + + * @ return true to display it ( default ) , false to hide it . 
 + + * / 
 + + public boolean shouldRenderHUD ( PotionEffect effect ) 
 + + { 
 + + return true ; 
 + + } 
 + + 
 + + / * * 
 + * Called to draw the this Potion onto the player ' s inventory when it ' s active . 
 + * This can be used to e . g . render Potion icons from your own texture . 
 + * @ param x the x coordinate 
 @ @ - 54 , 6 + 64 , 20 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 + public void renderInventoryEffect ( int x , int y , PotionEffect effect , net . minecraft . client . Minecraft mc ) { } 
 + 
 + + / * * 
 + + * Called to draw the this Potion onto the player ' s ingame HUD when it ' s active . 
 + + * This can be used to e . g . render Potion icons from your own texture . 
 + + * @ param x the x coordinate 
 + + * @ param y the y coordinate 
 + + * @ param effect the active PotionEffect 
 + + * @ param mc the Minecraft instance , for convenience 
 + + * @ param alpha the alpha value , blinks when the potion is about to run out 
 + + * / 
 + + @ SideOnly ( Side . CLIENT ) 
 + + public void renderHUDEffect ( int x , int y , PotionEffect effect , net . minecraft . client . Minecraft mc , float alpha ) { } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + 
 + @ SideOnly ( Side . CLIENT ) 
 public boolean func _ 188408 _ i ( ) 
 { 
 diff - - git a / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java b / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java 
 index da9cfb1 . . 6bfb4e5 100644 
 - - - a / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / PotionRegistryDebug . java 
 @ @ - 84 , 5 + 84 , 33 @ @ public class PotionRegistryDebug { 
 buf . pos ( ( double ) x , ( double ) y , 0 . 0D ) . tex ( sprite . getMinU ( ) , sprite . getMinV ( ) ) . endVertex ( ) ; 
 tessellator . draw ( ) ; 
 } 
 + 
 + @ Override 
 + public void renderHUDEffect ( int x , int y , PotionEffect effect , Minecraft mc , float alpha ) { 
 + Potion potion = effect . getPotion ( ) ; 
 + 
 + mc . getTextureManager ( ) . bindTexture ( TextureMap . locationBlocksTexture ) ; 
 + TextureAtlasSprite sprite = mc . getTextureMapBlocks ( ) . getAtlasSprite ( " minecraft : blocks / tnt _ side " ) ; 
 + 
 + x + = 3 ; 
 + y + = 3 ; 
 + 
 + int width = 18 ; 
 + int height = width ; 
 + 
 + float r = ( float ) ( potion . getLiquidColor ( ) > > 24 & 255 ) / 255 . 0F ; 
 + float g = ( float ) ( potion . getLiquidColor ( ) > > 16 & 255 ) / 255 . 0F ; 
 + float b = ( float ) ( potion . getLiquidColor ( ) > > 8 & 255 ) / 255 . 0F ; 
 + 
 + Tessellator tessellator = Tessellator . getInstance ( ) ; 
 + VertexBuffer buf = tessellator . getBuffer ( ) ; 
 + buf . begin ( 7 , DefaultVertexFormats . POSITION _ TEX ) ; 
 + GlStateManager . color ( r , g , b , alpha ) ; 
 + buf . pos ( ( double ) x , ( double ) ( y + height ) , 0 . 0D ) . tex ( sprite . getMinU ( ) , sprite . getMaxV ( ) ) . endVertex ( ) ; 
 + buf . pos ( ( double ) ( x + width ) , ( double ) ( y + height ) , 0 . 0D ) . tex ( sprite . getMaxU ( ) , sprite . getMaxV ( ) ) . endVertex ( ) ; 
 + buf . pos ( ( double ) ( x + width ) , ( double ) y , 0 . 0D ) . tex ( sprite . getMaxU ( ) , sprite . getMinV ( ) ) . endVertex ( ) ; 
 + buf . pos ( ( double ) x , ( double ) y , 0 . 0D ) . tex ( sprite . getMinU ( ) , sprite . getMinV ( ) ) . endVertex ( ) ; 
 + tessellator . draw ( ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch 
 index fd3e46c . . 74f00ed 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java . patch 
 @ @ - 1 , 6 + 1 , 28 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java 
 + + + . . / src - work / minecraft / net / minecraft / client / renderer / InventoryEffectRenderer . java 
 - @ @ - 80 , 6 + 80 , 8 @ @ 
 + @ @ - 27 , 7 + 27 , 12 @ @ 
 + 
 + protected void func _ 175378 _ g ( ) 
 + { 
 + - if ( ! this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) . isEmpty ( ) ) 
 + + boolean hasVisibleEffect = false ; 
 + + for ( PotionEffect potioneffect : this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) ) { 
 + + Potion potion = Potion . field _ 76425 _ a [ potioneffect . func _ 76456 _ a ( ) ] ; 
 + + if ( potion . shouldRender ( potioneffect ) ) { hasVisibleEffect = true ; break ; } 
 + + } 
 + + if ( ! this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) . isEmpty ( ) & & hasVisibleEffect ) 
 + { 
 + this . field _ 147003 _ i = 160 + ( this . field _ 146294 _ l - this . field _ 146999 _ f - 200 ) / 2 ; 
 + this . field _ 147045 _ u = true ; 
 + @ @ - 70 , 6 + 75 , 7 @ @ 
 + for ( PotionEffect potioneffect : this . field _ 146297 _ k . field _ 71439 _ g . func _ 70651 _ bq ( ) ) 
 + { 
 + Potion potion = Potion . field _ 76425 _ a [ potioneffect . func _ 76456 _ a ( ) ] ; 
 + + if ( ! potion . shouldRender ( potioneffect ) ) continue ; 
 + GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; 
 + this . field _ 146297 _ k . func _ 110434 _ K ( ) . func _ 110577 _ a ( field _ 147001 _ a ) ; 
 + this . func _ 73729 _ b ( i , j , 0 , 166 , 140 , 32 ) ; 
 + @ @ - 80 , 6 + 86 , 8 @ @ 
 this . func _ 73729 _ b ( i + 6 , j + 7 , 0 + i1 % 8 * 18 , 198 + i1 / 8 * 18 , 18 , 18 ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / potion / Potion . java . patch b / patches / minecraft / net / minecraft / potion / Potion . java . patch 
 index 05ec68e . . 1ee629d 100644 
 - - - a / patches / minecraft / net / minecraft / potion / Potion . java . patch 
 + + + b / patches / minecraft / net / minecraft / potion / Potion . java . patch 
 @ @ - 51 , 7 + 51 , 7 @ @ 
 public boolean func _ 76398 _ f ( ) 
 { 
 return this . field _ 76418 _ K ; 
 - @ @ - 310 , 4 + 313 , 27 @ @ 
 + @ @ - 310 , 4 + 313 , 34 @ @ 
 { 
 return p _ 111183 _ 2 _ . func _ 111164 _ d ( ) * ( double ) ( p _ 111183 _ 1 _ + 1 ) ; 
 } 
 @ @ - 59 , 6 + 59 , 13 @ @ 
 + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + 
 + / * * 
 + + * If the Potion effect should be displayed in the players inventory 
 + + * @ param effect the active PotionEffect 
 + + * @ return true to display it ( default ) , false to hide it . 
 + + * / 
 + + public boolean shouldRender ( PotionEffect effect ) { return true ; } 
 + + 
 + + / * * 
 + * If the standard PotionEffect text ( name and duration ) should be drawn when this potion is active . 
 + * @ param effect the active PotionEffect 
 + * @ return true to draw the standard text 
 diff - - git a / src / test / java / net / minecraftforge / debug / NoPotionEffectRenderTest . java b / src / test / java / net / minecraftforge / debug / NoPotionEffectRenderTest . java 
 new file mode 100644 
 index 0000000 . . f8d7791 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / NoPotionEffectRenderTest . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . potion . Potion ; 
 + import net . minecraft . potion . PotionEffect ; 
 + import net . minecraft . util . ResourceLocation ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + 
 + @ Mod ( modid = NoPotionEffectRenderTest . modID , name = " No Potion Effect Render Test " , version = " 0 . 0 . 0 " ) 
 + public class NoPotionEffectRenderTest { 
 + public static final String modID = " nopotioneffect " ; 
 + 
 + @ Mod . EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) { 
 + TestPotion INSTANCE = new TestPotion ( 30 , new ResourceLocation ( modID , " test _ potion " ) , false , 0xff00ff ) ; 
 + } 
 + 
 + public static class TestPotion extends Potion { 
 + 
 + public TestPotion ( int potionID , ResourceLocation location , boolean badEffect , int potionColor ) { 
 + super ( potionID , location , badEffect , potionColor ) ; 
 + } 
 + 
 + @ Override 
 + public boolean shouldRender ( PotionEffect effect ) { 
 + return false ; 
 + } 
 + } 
 + }
