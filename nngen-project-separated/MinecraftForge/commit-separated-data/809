BLEU SCORE: 0.06567274736060397

TEST MSG: Allow finite fluids to be drained correctly
GENERATED MSG: Make finite fluid blocks drainable

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java <nl> index 83c2f1a . . 05f767f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java <nl> @ @ - 228 , 13 + 228 , 15 @ @ public class BlockFluidFinite extends BlockFluidBase <nl> @ Override <nl> public FluidStack drain ( World world , BlockPos pos , boolean doDrain ) <nl> { <nl> + final FluidStack fluidStack = new FluidStack ( getFluid ( ) , <nl> + MathHelper . floor _ float ( getQuantaPercentage ( world , pos ) * FluidContainerRegistry . BUCKET _ VOLUME ) ) ; <nl> + <nl> if ( doDrain ) <nl> { <nl> world . setBlockToAir ( pos ) ; <nl> } <nl> <nl> - return new FluidStack ( getFluid ( ) , <nl> - MathHelper . floor _ float ( getQuantaPercentage ( world , pos ) * FluidContainerRegistry . BUCKET _ VOLUME ) ) ; <nl> + return fluidStack ; <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java <nl> index ac36dbb . . 52a76a8 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import java . util . Random ; <nl> <nl> import net . minecraft . block . material . Material ; <nl> import net . minecraft . init . Blocks ; <nl> + import net . minecraft . util . MathHelper ; <nl> import net . minecraft . world . IBlockAccess ; <nl> import net . minecraft . world . World ; <nl> <nl> @ @ - 310 , 12 + 311 , 18 @ @ public class BlockFluidFinite extends BlockFluidBase <nl> @ Override <nl> public FluidStack drain ( World world , int x , int y , int z , boolean doDrain ) <nl> { <nl> - return null ; <nl> + if ( doDrain ) <nl> + { <nl> + world . setBlock ( x , y , z , Blocks . air ) ; <nl> + } <nl> + <nl> + return new FluidStack ( getFluid ( ) , <nl> + MathHelper . floor _ float ( getQuantaPercentage ( world , x , y , z ) * FluidContainerRegistry . BUCKET _ VOLUME ) ) ; <nl> } <nl> <nl> @ Override <nl> public boolean canDrain ( World world , int x , int y , int z ) <nl> { <nl> - return false ; <nl> + return true ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java 
 index 83c2f1a . . 05f767f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java 
 + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java 
 @ @ - 228 , 13 + 228 , 15 @ @ public class BlockFluidFinite extends BlockFluidBase 
 @ Override 
 public FluidStack drain ( World world , BlockPos pos , boolean doDrain ) 
 { 
 + final FluidStack fluidStack = new FluidStack ( getFluid ( ) , 
 + MathHelper . floor _ float ( getQuantaPercentage ( world , pos ) * FluidContainerRegistry . BUCKET _ VOLUME ) ) ; 
 + 
 if ( doDrain ) 
 { 
 world . setBlockToAir ( pos ) ; 
 } 
 
 - return new FluidStack ( getFluid ( ) , 
 - MathHelper . floor _ float ( getQuantaPercentage ( world , pos ) * FluidContainerRegistry . BUCKET _ VOLUME ) ) ; 
 + return fluidStack ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java 
 index ac36dbb . . 52a76a8 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java 
 + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidFinite . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import java . util . Random ; 
 
 import net . minecraft . block . material . Material ; 
 import net . minecraft . init . Blocks ; 
 + import net . minecraft . util . MathHelper ; 
 import net . minecraft . world . IBlockAccess ; 
 import net . minecraft . world . World ; 
 
 @ @ - 310 , 12 + 311 , 18 @ @ public class BlockFluidFinite extends BlockFluidBase 
 @ Override 
 public FluidStack drain ( World world , int x , int y , int z , boolean doDrain ) 
 { 
 - return null ; 
 + if ( doDrain ) 
 + { 
 + world . setBlock ( x , y , z , Blocks . air ) ; 
 + } 
 + 
 + return new FluidStack ( getFluid ( ) , 
 + MathHelper . floor _ float ( getQuantaPercentage ( world , x , y , z ) * FluidContainerRegistry . BUCKET _ VOLUME ) ) ; 
 } 
 
 @ Override 
 public boolean canDrain ( World world , int x , int y , int z ) 
 { 
 - return false ; 
 + return true ; 
 } 
 }
