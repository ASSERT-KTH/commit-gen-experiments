BLEU SCORE: 0.3032653298563167

TEST MSG: Add InputUpdateEvent
GENERATED MSG: Added fov hook

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> index 3bdced5 . . eafdab1 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> @ @ - 89 , 7 + 89 , 15 @ @ <nl> } <nl> <nl> public boolean func _ 70613 _ aW ( ) <nl> - @ @ - 859 , 10 + 880 , 13 @ @ <nl> + @ @ - 840 , 6 + 861 , 7 @ @ <nl> + float f = 0 . 8F ; <nl> + boolean flag2 = this . field _ 71158 _ b . field _ 192832 _ b > = 0 . 8F ; <nl> + this . field _ 71158 _ b . func _ 78898 _ a ( ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . onInputUpdate ( this , this . field _ 71158 _ b ) ; <nl> + this . field _ 71159 _ c . func _ 193032 _ ao ( ) . func _ 193293 _ a ( this . field _ 71158 _ b ) ; <nl> + <nl> + if ( this . func _ 184587 _ cr ( ) & & ! this . func _ 184218 _ aH ( ) ) <nl> + @ @ - 859 , 10 + 881 , 13 @ @ <nl> } <nl> <nl> AxisAlignedBB axisalignedbb = this . func _ 174813 _ aQ ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 01b8090 . . 178caa2 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 81 , 6 + 81 , 7 @ @ import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . BlockRenderLayer ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . EnumHand ; <nl> + import net . minecraft . util . MovementInput ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . MathHelper ; <nl> @ @ - 94 , 6 + 95 , 7 @ @ import net . minecraftforge . client . event . DrawBlockHighlightEvent ; <nl> import net . minecraftforge . client . event . EntityViewRenderEvent ; <nl> import net . minecraftforge . client . event . FOVUpdateEvent ; <nl> import net . minecraftforge . client . event . GuiScreenEvent ; <nl> + import net . minecraftforge . client . event . InputUpdateEvent ; <nl> import net . minecraftforge . client . event . ModelBakeEvent ; <nl> import net . minecraftforge . client . event . MouseEvent ; <nl> import net . minecraftforge . client . event . RenderGameOverlayEvent ; <nl> @ @ - 730 , 4 + 732 , 9 @ @ public class ForgeHooksClient <nl> if ( ! tr . equals ( TRSRTransformation . identity ( ) ) ) mat = tr . getMatrix ( ) ; <nl> return Pair . of ( model , mat ) ; <nl> } <nl> + <nl> + public static void onInputUpdate ( EntityPlayer player , MovementInput movementInput ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new InputUpdateEvent ( player , movementInput ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / InputUpdateEvent . java b / src / main / java / net / minecraftforge / client / event / InputUpdateEvent . java <nl> new file mode 100644 <nl> index 0000000 . . a038064 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / InputUpdateEvent . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . util . MovementInput ; <nl> + import net . minecraftforge . event . entity . player . PlayerEvent ; <nl> + <nl> + / * * <nl> + * This event is fired after player movement inputs are updated . < br > <nl> + * Handlers can freely manipulate { @ link MovementInput } to cancel movement . < br > <nl> + * / <nl> + public class InputUpdateEvent extends PlayerEvent <nl> + { <nl> + private final MovementInput movementInput ; <nl> + <nl> + public InputUpdateEvent ( EntityPlayer player , MovementInput movementInput ) <nl> + { <nl> + super ( player ) ; <nl> + this . movementInput = movementInput ; <nl> + } <nl> + <nl> + public MovementInput getMovementInput ( ) <nl> + { <nl> + return movementInput ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / InputUpdateEventTest . java b / src / test / java / net / minecraftforge / debug / InputUpdateEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . 11b7e0c <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / InputUpdateEventTest . java <nl> @ @ - 0 , 0 + 1 , 48 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . block . state . IBlockState ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . init . Blocks ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . util . math . MathHelper ; <nl> + import net . minecraft . util . text . TextComponentString ; <nl> + import net . minecraftforge . client . event . InputUpdateEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import net . minecraftforge . fml . relauncher . Side ; <nl> + <nl> + @ Mod ( modid = InputUpdateEventTest . MODID , name = " InputUpdateTest " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class InputUpdateEventTest <nl> + { <nl> + static final String MODID = " input _ update _ test " ; <nl> + <nl> + @ Mod . EventBusSubscriber ( value = Side . CLIENT , modid = MODID ) <nl> + public static class Registration <nl> + { <nl> + @ SubscribeEvent <nl> + public static void onInputUpdate ( InputUpdateEvent evt ) <nl> + { <nl> + EntityPlayer player = evt . getEntityPlayer ( ) ; <nl> + final int x = MathHelper . floor ( player . posX ) ; <nl> + final int y = MathHelper . floor ( player . getEntityBoundingBox ( ) . minY ) - 1 ; <nl> + final int z = MathHelper . floor ( player . posZ ) ; <nl> + final BlockPos pos = new BlockPos ( x , y , z ) ; <nl> + IBlockState blockUnder = player . world . getBlockState ( pos ) ; <nl> + if ( blockUnder . getBlock ( ) = = Blocks . BLACK _ GLAZED _ TERRACOTTA ) <nl> + { <nl> + if ( evt . getMovementInput ( ) . jump ) <nl> + { <nl> + player . sendMessage ( new TextComponentString ( " NO JUMPING ! " ) ) ; <nl> + evt . getMovementInput ( ) . jump = false ; <nl> + } <nl> + <nl> + if ( evt . getMovementInput ( ) . sneak ) <nl> + { <nl> + player . sendMessage ( new TextComponentString ( " NO SNEAKING ! " ) ) ; <nl> + evt . getMovementInput ( ) . sneak = false ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / client / net / minecraftforge / client / ForgeHooksClient . java b / client / net / minecraftforge / client / ForgeHooksClient . java <nl> index 64fa53b . . d7d0a21 100644 <nl> - - - a / client / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / client / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 6 , 7 + 6 , 13 @ @ import java . util . TreeSet ; <nl> <nl> import javax . imageio . ImageIO ; <nl> <nl> + < < < < < < < HEAD <nl> import net . minecraftforge . client . event . MouseEvent ; <nl> + = = = = = = = <nl> + import net . minecraft . client . entity . EntityPlayerSP ; <nl> + import net . minecraft . client . renderer . EntityRenderer ; <nl> + import net . minecraftforge . client . event . FOVUpdateEvent ; <nl> + > > > > > > > 96e716f . . . Added field of view hook <nl> import org . lwjgl . LWJGLException ; <nl> import org . lwjgl . opengl . Display ; <nl> import org . lwjgl . opengl . GL11 ; <nl> @ @ - 330 , 6 + 336 , 12 @ @ public class ForgeHooksClient <nl> return MinecraftForge . EVENT _ BUS . post ( new MouseEvent ( ) ) ; <nl> } <nl> <nl> + public static float getOffsetFOV ( EntityPlayerSP entity , float fov ) { <nl> + FOVUpdateEvent fovUpdateEvent = new FOVUpdateEvent ( entity , fov ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( fovUpdateEvent ) ; <nl> + return fovUpdateEvent . newfov ; <nl> + } <nl> + <nl> / * * <nl> * Initialization of Forge Renderers . <nl> * / <nl> @ @ - 337 , 4 + 349 , 5 @ @ public class ForgeHooksClient <nl> FluidRegistry . renderIdFluid = RenderingRegistry . getNextAvailableRenderId ( ) ; <nl> RenderingRegistry . registerBlockHandler ( RenderBlockFluid . instance ) ; <nl> } <nl> + <nl> } <nl> diff - - git a / client / net / minecraftforge / client / event / FOVUpdateEvent . java b / client / net / minecraftforge / client / event / FOVUpdateEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 365cb11 <nl> - - - / dev / null <nl> + + + b / client / net / minecraftforge / client / event / FOVUpdateEvent . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import net . minecraft . client . entity . EntityPlayerSP ; <nl> + import net . minecraft . client . renderer . EntityRenderer ; <nl> + import net . minecraftforge . event . Event ; <nl> + <nl> + / * * <nl> + * Author : MachineMuse ( Claire Semple ) <nl> + * Created : 6 : 07 PM , 9 / 5 / 13 <nl> + * / <nl> + public class FOVUpdateEvent extends Event { <nl> + public final EntityPlayerSP entity ; <nl> + public final float fov ; <nl> + public float newfov ; <nl> + public FOVUpdateEvent ( EntityPlayerSP entity , float fov ) { <nl> + this . entity = entity ; <nl> + this . fov = fov ; <nl> + this . newfov = fov ; <nl> + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> index 810ebea . . 95daa4a 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> @ @ - 1 , 15 + 1 , 25 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / client / entity / EntityPlayerSP . java <nl> + + + . . / src _ work / minecraft / net / minecraft / client / entity / EntityPlayerSP . java <nl> - @ @ - 49 , 6 + 49 , 8 @ @ <nl> + @ @ - 49 , 6 + 49 , 9 @ @ <nl> import net . minecraft . util . MovementInput ; <nl> import net . minecraft . util . Session ; <nl> import net . minecraft . world . World ; <nl> + + import net . minecraftforge . client . ForgeHooksClient ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> public class EntityPlayerSP extends AbstractClientPlayer <nl> - @ @ - 570 , 18 + 572 , 66 @ @ <nl> + @ @ - 343 , 7 + 346 , 7 @ @ <nl> + f * = 1 . 0F - f1 * 0 . 15F ; <nl> + } <nl> + <nl> + - return f ; <nl> + + return ForgeHooksClient . getOffsetFOV ( this , f ) ; <nl> + } <nl> + <nl> + / * * <nl> + @ @ - 570 , 18 + 573 , 66 @ @ <nl> * / <nl> protected boolean pushOutOfBlocks ( double par1 , double par3 , double par5 ) <nl> { <nl> @ @ - 82 , 7 + 92 , 7 @ @ <nl> byte b0 = - 1 ; <nl> double d5 = 9999 . 0D ; <nl> <nl> - @ @ - 685 , 6 + 735 , 12 @ @ <nl> + @ @ - 685 , 6 + 736 , 12 @ @ <nl> <nl> public void playSound ( String par1Str , float par2 , float par3 ) <nl> {

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 index 3bdced5 . . eafdab1 100644 
 - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 @ @ - 89 , 7 + 89 , 15 @ @ 
 } 
 
 public boolean func _ 70613 _ aW ( ) 
 - @ @ - 859 , 10 + 880 , 13 @ @ 
 + @ @ - 840 , 6 + 861 , 7 @ @ 
 + float f = 0 . 8F ; 
 + boolean flag2 = this . field _ 71158 _ b . field _ 192832 _ b > = 0 . 8F ; 
 + this . field _ 71158 _ b . func _ 78898 _ a ( ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . onInputUpdate ( this , this . field _ 71158 _ b ) ; 
 + this . field _ 71159 _ c . func _ 193032 _ ao ( ) . func _ 193293 _ a ( this . field _ 71158 _ b ) ; 
 + 
 + if ( this . func _ 184587 _ cr ( ) & & ! this . func _ 184218 _ aH ( ) ) 
 + @ @ - 859 , 10 + 881 , 13 @ @ 
 } 
 
 AxisAlignedBB axisalignedbb = this . func _ 174813 _ aQ ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 01b8090 . . 178caa2 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 81 , 6 + 81 , 7 @ @ import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . BlockRenderLayer ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . EnumHand ; 
 + import net . minecraft . util . MovementInput ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . MathHelper ; 
 @ @ - 94 , 6 + 95 , 7 @ @ import net . minecraftforge . client . event . DrawBlockHighlightEvent ; 
 import net . minecraftforge . client . event . EntityViewRenderEvent ; 
 import net . minecraftforge . client . event . FOVUpdateEvent ; 
 import net . minecraftforge . client . event . GuiScreenEvent ; 
 + import net . minecraftforge . client . event . InputUpdateEvent ; 
 import net . minecraftforge . client . event . ModelBakeEvent ; 
 import net . minecraftforge . client . event . MouseEvent ; 
 import net . minecraftforge . client . event . RenderGameOverlayEvent ; 
 @ @ - 730 , 4 + 732 , 9 @ @ public class ForgeHooksClient 
 if ( ! tr . equals ( TRSRTransformation . identity ( ) ) ) mat = tr . getMatrix ( ) ; 
 return Pair . of ( model , mat ) ; 
 } 
 + 
 + public static void onInputUpdate ( EntityPlayer player , MovementInput movementInput ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new InputUpdateEvent ( player , movementInput ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / event / InputUpdateEvent . java b / src / main / java / net / minecraftforge / client / event / InputUpdateEvent . java 
 new file mode 100644 
 index 0000000 . . a038064 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / InputUpdateEvent . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + package net . minecraftforge . client . event ; 
 + 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . util . MovementInput ; 
 + import net . minecraftforge . event . entity . player . PlayerEvent ; 
 + 
 + / * * 
 + * This event is fired after player movement inputs are updated . < br > 
 + * Handlers can freely manipulate { @ link MovementInput } to cancel movement . < br > 
 + * / 
 + public class InputUpdateEvent extends PlayerEvent 
 + { 
 + private final MovementInput movementInput ; 
 + 
 + public InputUpdateEvent ( EntityPlayer player , MovementInput movementInput ) 
 + { 
 + super ( player ) ; 
 + this . movementInput = movementInput ; 
 + } 
 + 
 + public MovementInput getMovementInput ( ) 
 + { 
 + return movementInput ; 
 + } 
 + 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / debug / InputUpdateEventTest . java b / src / test / java / net / minecraftforge / debug / InputUpdateEventTest . java 
 new file mode 100644 
 index 0000000 . . 11b7e0c 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / InputUpdateEventTest . java 
 @ @ - 0 , 0 + 1 , 48 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . block . state . IBlockState ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . init . Blocks ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . util . math . MathHelper ; 
 + import net . minecraft . util . text . TextComponentString ; 
 + import net . minecraftforge . client . event . InputUpdateEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import net . minecraftforge . fml . relauncher . Side ; 
 + 
 + @ Mod ( modid = InputUpdateEventTest . MODID , name = " InputUpdateTest " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class InputUpdateEventTest 
 + { 
 + static final String MODID = " input _ update _ test " ; 
 + 
 + @ Mod . EventBusSubscriber ( value = Side . CLIENT , modid = MODID ) 
 + public static class Registration 
 + { 
 + @ SubscribeEvent 
 + public static void onInputUpdate ( InputUpdateEvent evt ) 
 + { 
 + EntityPlayer player = evt . getEntityPlayer ( ) ; 
 + final int x = MathHelper . floor ( player . posX ) ; 
 + final int y = MathHelper . floor ( player . getEntityBoundingBox ( ) . minY ) - 1 ; 
 + final int z = MathHelper . floor ( player . posZ ) ; 
 + final BlockPos pos = new BlockPos ( x , y , z ) ; 
 + IBlockState blockUnder = player . world . getBlockState ( pos ) ; 
 + if ( blockUnder . getBlock ( ) = = Blocks . BLACK _ GLAZED _ TERRACOTTA ) 
 + { 
 + if ( evt . getMovementInput ( ) . jump ) 
 + { 
 + player . sendMessage ( new TextComponentString ( " NO JUMPING ! " ) ) ; 
 + evt . getMovementInput ( ) . jump = false ; 
 + } 
 + 
 + if ( evt . getMovementInput ( ) . sneak ) 
 + { 
 + player . sendMessage ( new TextComponentString ( " NO SNEAKING ! " ) ) ; 
 + evt . getMovementInput ( ) . sneak = false ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / client / net / minecraftforge / client / ForgeHooksClient . java b / client / net / minecraftforge / client / ForgeHooksClient . java 
 index 64fa53b . . d7d0a21 100644 
 - - - a / client / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / client / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 6 , 7 + 6 , 13 @ @ import java . util . TreeSet ; 
 
 import javax . imageio . ImageIO ; 
 
 + < < < < < < < HEAD 
 import net . minecraftforge . client . event . MouseEvent ; 
 + = = = = = = = 
 + import net . minecraft . client . entity . EntityPlayerSP ; 
 + import net . minecraft . client . renderer . EntityRenderer ; 
 + import net . minecraftforge . client . event . FOVUpdateEvent ; 
 + > > > > > > > 96e716f . . . Added field of view hook 
 import org . lwjgl . LWJGLException ; 
 import org . lwjgl . opengl . Display ; 
 import org . lwjgl . opengl . GL11 ; 
 @ @ - 330 , 6 + 336 , 12 @ @ public class ForgeHooksClient 
 return MinecraftForge . EVENT _ BUS . post ( new MouseEvent ( ) ) ; 
 } 
 
 + public static float getOffsetFOV ( EntityPlayerSP entity , float fov ) { 
 + FOVUpdateEvent fovUpdateEvent = new FOVUpdateEvent ( entity , fov ) ; 
 + MinecraftForge . EVENT _ BUS . post ( fovUpdateEvent ) ; 
 + return fovUpdateEvent . newfov ; 
 + } 
 + 
 / * * 
 * Initialization of Forge Renderers . 
 * / 
 @ @ - 337 , 4 + 349 , 5 @ @ public class ForgeHooksClient 
 FluidRegistry . renderIdFluid = RenderingRegistry . getNextAvailableRenderId ( ) ; 
 RenderingRegistry . registerBlockHandler ( RenderBlockFluid . instance ) ; 
 } 
 + 
 } 
 diff - - git a / client / net / minecraftforge / client / event / FOVUpdateEvent . java b / client / net / minecraftforge / client / event / FOVUpdateEvent . java 
 new file mode 100644 
 index 0000000 . . 365cb11 
 - - - / dev / null 
 + + + b / client / net / minecraftforge / client / event / FOVUpdateEvent . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package net . minecraftforge . client . event ; 
 + 
 + import net . minecraft . client . entity . EntityPlayerSP ; 
 + import net . minecraft . client . renderer . EntityRenderer ; 
 + import net . minecraftforge . event . Event ; 
 + 
 + / * * 
 + * Author : MachineMuse ( Claire Semple ) 
 + * Created : 6 : 07 PM , 9 / 5 / 13 
 + * / 
 + public class FOVUpdateEvent extends Event { 
 + public final EntityPlayerSP entity ; 
 + public final float fov ; 
 + public float newfov ; 
 + public FOVUpdateEvent ( EntityPlayerSP entity , float fov ) { 
 + this . entity = entity ; 
 + this . fov = fov ; 
 + this . newfov = fov ; 
 + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 index 810ebea . . 95daa4a 100644 
 - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 @ @ - 1 , 15 + 1 , 25 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / client / entity / EntityPlayerSP . java 
 + + + . . / src _ work / minecraft / net / minecraft / client / entity / EntityPlayerSP . java 
 - @ @ - 49 , 6 + 49 , 8 @ @ 
 + @ @ - 49 , 6 + 49 , 9 @ @ 
 import net . minecraft . util . MovementInput ; 
 import net . minecraft . util . Session ; 
 import net . minecraft . world . World ; 
 + + import net . minecraftforge . client . ForgeHooksClient ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; 
 
 @ SideOnly ( Side . CLIENT ) 
 public class EntityPlayerSP extends AbstractClientPlayer 
 - @ @ - 570 , 18 + 572 , 66 @ @ 
 + @ @ - 343 , 7 + 346 , 7 @ @ 
 + f * = 1 . 0F - f1 * 0 . 15F ; 
 + } 
 + 
 + - return f ; 
 + + return ForgeHooksClient . getOffsetFOV ( this , f ) ; 
 + } 
 + 
 + / * * 
 + @ @ - 570 , 18 + 573 , 66 @ @ 
 * / 
 protected boolean pushOutOfBlocks ( double par1 , double par3 , double par5 ) 
 { 
 @ @ - 82 , 7 + 92 , 7 @ @ 
 byte b0 = - 1 ; 
 double d5 = 9999 . 0D ; 
 
 - @ @ - 685 , 6 + 735 , 12 @ @ 
 + @ @ - 685 , 6 + 736 , 12 @ @ 
 
 public void playSound ( String par1Str , float par2 , float par3 ) 
 {
