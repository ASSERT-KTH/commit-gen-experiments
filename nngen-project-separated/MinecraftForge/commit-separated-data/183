BLEU SCORE: 0.04266331692956902

TEST MSG: Fix errors in commands and getDimension - > getId
GENERATED MSG: Avoid copying Forge Registry keys , values , and entries

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java b / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java <nl> index f9bf259 . . 0a2005c 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java <nl> + + + b / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java <nl> @ @ - 75 , 7 + 75 , 7 @ @ public class WorldSpecificSaveHandler implements ISaveHandler <nl> File file = new File ( dataDir , name + " . dat " ) ; <nl> if ( ! file . exists ( ) ) <nl> { <nl> - switch ( world . provider . getDimension ( ) ) <nl> + switch ( world . provider . getId ( ) ) <nl> { <nl> case - 1 : <nl> if ( name . equalsIgnoreCase ( " FORTRESS " ) ) copyFile ( name , file ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> index 6d6cda0 . . 65e6690 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class BlockSnapshot <nl> public BlockSnapshot ( World world , BlockPos pos , IBlockState state , @ Nullable NBTTagCompound nbt ) <nl> { <nl> this . setWorld ( world ) ; <nl> - this . dimId = world . provider . getDimension ( ) ; <nl> + this . dimId = world . provider . getId ( ) ; <nl> this . pos = pos . toImmutable ( ) ; <nl> this . setReplacedBlock ( state ) ; <nl> this . registryName = state . getBlock ( ) . getRegistryName ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / CommandEntity . java b / src / main / java / net / minecraftforge / server / command / CommandEntity . java <nl> index 0ede29c . . b2385da 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / CommandEntity . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / CommandEntity . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import com . google . common . collect . Maps ; <nl> import com . mojang . brigadier . arguments . IntegerArgumentType ; <nl> import com . mojang . brigadier . arguments . StringArgumentType ; <nl> import com . mojang . brigadier . builder . ArgumentBuilder ; <nl> + import com . mojang . brigadier . exceptions . CommandSyntaxException ; <nl> import com . mojang . brigadier . exceptions . DynamicCommandExceptionType ; <nl> import com . mojang . brigadier . exceptions . SimpleCommandExceptionType ; <nl> <nl> @ @ - 78 , 12 + 79 , 12 @ @ class CommandEntity <nl> . suggests ( ( ctx , builder ) - > ISuggestionProvider . func _ 197013 _ a ( DimensionManager . getIDStream ( ) . sorted ( ) . map ( id - > id . toString ( ) ) , builder ) ) <nl> . executes ( ctx - > execute ( ctx . getSource ( ) , StringArgumentType . getString ( ctx , " filter " ) , IntegerArgumentType . getInteger ( ctx , " dim " ) ) ) <nl> ) <nl> - . executes ( ctx - > execute ( ctx . getSource ( ) , StringArgumentType . getString ( ctx , " filter " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getDimension ( ) ) ) <nl> + . executes ( ctx - > execute ( ctx . getSource ( ) , StringArgumentType . getString ( ctx , " filter " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getId ( ) ) ) <nl> ) <nl> - . executes ( ctx - > execute ( ctx . getSource ( ) , " * " , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getDimension ( ) ) ) ; <nl> + . executes ( ctx - > execute ( ctx . getSource ( ) , " * " , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getId ( ) ) ) ; <nl> } <nl> <nl> - private static int execute ( CommandSource sender , String filter , int dim ) throws CommandException <nl> + private static int execute ( CommandSource sender , String filter , int dim ) throws CommandSyntaxException <nl> { <nl> final String cleanFilter = filter . replace ( " ? " , " . ? " ) . replace ( " * " , " . * ? " ) ; <nl> <nl> @ @ - 128 , 6 + 129 , 7 @ @ class CommandEntity <nl> if ( limit - - = = 0 ) break ; <nl> sender . func _ 197030 _ a ( new TextComponentString ( " " + e . getValue ( ) + " : " + e . getKey ( ) . x + " , " + e . getKey ( ) . z ) , true ) ; <nl> } <nl> + return toSort . size ( ) ; <nl> } <nl> else <nl> { <nl> @ @ - 153 , 6 + 155 , 7 @ @ class CommandEntity <nl> int count = info . stream ( ) . mapToInt ( Pair : : getRight ) . sum ( ) ; <nl> sender . func _ 197030 _ a ( new TextComponentTranslation ( " commands . forge . entity . list . multiple . header " , count ) , true ) ; <nl> info . forEach ( e - > sender . func _ 197030 _ a ( new TextComponentString ( " " + e . getValue ( ) + " : " + e . getKey ( ) ) , true ) ) ; <nl> + return info . size ( ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / CommandGenerate . java b / src / main / java / net / minecraftforge / server / command / CommandGenerate . java <nl> index 5fc1d84 . . 399a466 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / CommandGenerate . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / CommandGenerate . java <nl> @ @ - 59 , 7 + 59 , 7 @ @ class CommandGenerate <nl> ) <nl> . executes ( ctx - > execute ( ctx . getSource ( ) , BlockPosArgument . func _ 197274 _ b ( ctx , " pos " ) , getInt ( ctx , " count " ) , getInt ( ctx , " dim " ) , - 1 ) ) <nl> ) <nl> - . executes ( ctx - > execute ( ctx . getSource ( ) , BlockPosArgument . func _ 197274 _ b ( ctx , " pos " ) , getInt ( ctx , " count " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getDimension ( ) , - 1 ) ) <nl> + . executes ( ctx - > execute ( ctx . getSource ( ) , BlockPosArgument . func _ 197274 _ b ( ctx , " pos " ) , getInt ( ctx , " count " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getId ( ) , - 1 ) ) <nl> ) <nl> ) ; <nl> } <nl> @ @ - 76 , 5 + 76 , 7 @ @ class CommandGenerate <nl> ChunkGenWorker worker = new ChunkGenWorker ( source , chunkpos , count , dim , interval ) ; <nl> source . func _ 197030 _ a ( worker . getStartMessage ( source ) , true ) ; <nl> WorldWorkerManager . addWorker ( worker ) ; <nl> + <nl> + return 0 ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java <nl> index 9b173dc . . 73903ef 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java <nl> @ @ - 19 , 13 + 19 , 10 @ @ <nl> <nl> package net . minecraftforge . server . command ; <nl> <nl> - import net . minecraft . command . CommandBase ; <nl> import net . minecraft . command . CommandException ; <nl> import net . minecraft . command . CommandSource ; <nl> import net . minecraft . command . Commands ; <nl> - import net . minecraft . command . ICommandSender ; <nl> import net . minecraft . command . ISuggestionProvider ; <nl> - import net . minecraft . command . WrongUsageException ; <nl> import net . minecraft . command . arguments . BlockPosArgument ; <nl> import net . minecraft . command . arguments . EntityArgument ; <nl> import net . minecraft . entity . Entity ; <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / CommandTrack . java b / src / main / java / net / minecraftforge / server / command / CommandTrack . java <nl> index 4663817 . . 5bf5bba 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / CommandTrack . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / CommandTrack . java <nl> @ @ - 185 , 7 + 185 , 7 @ @ class CommandTrack <nl> double averageTimings
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index 805d304 . . 5b3251f 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 494 , 7 + 494 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> <nl> private static void registerAllBiomesAndGenerateEvents ( ) <nl> { <nl> - for ( Biome biome : ForgeRegistries . BIOMES . getValues ( ) ) <nl> + for ( Biome biome : ForgeRegistries . BIOMES . getValuesCollection ( ) ) <nl> { <nl> if ( biome . decorator instanceof DeferredBiomeDecorator ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> index a63e625 . . bfb7dc3 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Map . Entry ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> import javax . annotation . Nullable ; <nl> <nl> import org . apache . commons . lang3 . Validate ; <nl> @ @ - 188 , 19 + 189 , 30 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe <nl> @ Override <nl> public Set < ResourceLocation > getKeys ( ) <nl> { <nl> - return ImmutableSet . copyOf ( this . names . keySet ( ) ) ; <nl> + return Collections . unmodifiableSet ( this . names . keySet ( ) ) ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated use { @ link # getValuesCollection } to avoid copying <nl> + * / <nl> + @ Deprecated <nl> @ Override <nl> public List < V > getValues ( ) <nl> { <nl> return ImmutableList . copyOf ( this . names . values ( ) ) ; <nl> } <nl> <nl> + @ Nonnull <nl> + @ Override <nl> + public Collection < V > getValuesCollection ( ) <nl> + { <nl> + return Collections . unmodifiableSet ( this . names . values ( ) ) ; <nl> + } <nl> + <nl> @ Override <nl> public Set < Entry < ResourceLocation , V > > getEntries ( ) <nl> { <nl> - return ImmutableSet . copyOf ( this . names . entrySet ( ) ) ; <nl> + return Collections . unmodifiableSet ( this . names . entrySet ( ) ) ; <nl> } <nl> <nl> @ SuppressWarnings ( " unchecked " ) <nl> diff - - git a / src / main / java / net / minecraftforge / registries / IForgeRegistry . java b / src / main / java / net / minecraftforge / registries / IForgeRegistry . java <nl> index a2bd3b7 . . 767c777 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / IForgeRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / registries / IForgeRegistry . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package net . minecraftforge . registries ; <nl> <nl> + import java . util . Collection ; <nl> import java . util . List ; <nl> import java . util . Map . Entry ; <nl> import java . util . Set ; <nl> @ @ - 48 , 7 + 49 , 13 @ @ public interface IForgeRegistry < V extends IForgeRegistryEntry < V > > extends Iterab <nl> @ Nullable ResourceLocation getKey ( V value ) ; <nl> <nl> @ Nonnull Set < ResourceLocation > getKeys ( ) ; <nl> + / * * @ deprecated use { @ link # getValuesCollection } * / <nl> + @ Deprecated / / TODO : remove in 1 . 13 <nl> @ Nonnull List < V > getValues ( ) ; <nl> + @ Nonnull <nl> + default Collection < V > getValuesCollection ( ) { / / TODO rename this to getValues in 1 . 13 <nl> + return getValues ( ) ; <nl> + } <nl> @ Nonnull Set < Entry < ResourceLocation , V > > getEntries ( ) ; <nl> <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java b / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java <nl> index de4e5fb . . 5257083 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package net . minecraftforge . registries ; <nl> <nl> + import java . util . Collection ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> @ @ - 104 , 10 + 105 , 8 @ @ class NamespacedDefaultedWrapper < V extends IForgeRegistryEntry < V > > extends Regis <nl> @ Nullable <nl> public V getRandomObject ( Random random ) <nl> { <nl> - List < V > lst = this . delegate . getValues ( ) ; <nl> - if ( lst . isEmpty ( ) ) <nl> - return null ; <nl> - return lst . get ( random . nextInt ( lst . size ( ) ) ) ; <nl> + Collection < V > values = this . delegate . getValuesCollection ( ) ; <nl> + return values . stream ( ) . skip ( random . nextInt ( values . size ( ) ) ) . findFirst ( ) . orElse ( null ) ; <nl> } <nl> <nl> / / internal <nl> diff - - git a / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java b / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java <nl> index b501509 . . 1580263 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package net . minecraftforge . registries ; <nl> <nl> + import java . util . ArrayList ; <nl> + import java . util . Collection ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> @ @ - 97 , 10 + 99 , 8 @ @ class NamespacedWrapper < V extends IForgeRegistryEntry < V > > extends RegistryNamesp <nl> @ Nullable <nl> public V getRandomObject ( Random random ) <nl> { <nl> - List < V > lst = this . delegate . getValues ( ) ; <nl> - if ( lst . isEmpty ( ) ) <nl> - return null ; <nl> - return lst . get ( random . nextInt ( lst . size ( ) ) ) ; <nl> + Collection < V > values = this . delegate . getValuesCollection ( ) ; <nl> + return values . stream ( ) . skip ( random . nextInt ( values . size ( ) ) ) . findFirst ( ) . orElse ( null ) ; <nl> } <nl> <nl> / / internal <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java b / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java <nl> index e1cebe1 . . 48a7301 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public class FluidHandlerTest <nl> private static List < ItemStack > getAllItems ( ) <nl> { <nl> NonNullList < ItemStack > list = NonNullList . create ( ) ; <nl> - for ( Item item : ForgeRegistries . ITEMS . getValues ( ) ) <nl> + for ( Item item : ForgeRegistries . ITEMS . getValuesCollection ( ) ) <nl> { <nl> for ( CreativeTabs tab : item . getCreativeTabs ( ) ) <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java b / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java 
 index f9bf259 . . 0a2005c 100644 
 - - - a / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java 
 + + + b / src / main / java / net / minecraftforge / common / WorldSpecificSaveHandler . java 
 @ @ - 75 , 7 + 75 , 7 @ @ public class WorldSpecificSaveHandler implements ISaveHandler 
 File file = new File ( dataDir , name + " . dat " ) ; 
 if ( ! file . exists ( ) ) 
 { 
 - switch ( world . provider . getDimension ( ) ) 
 + switch ( world . provider . getId ( ) ) 
 { 
 case - 1 : 
 if ( name . equalsIgnoreCase ( " FORTRESS " ) ) copyFile ( name , file ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 index 6d6cda0 . . 65e6690 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 + + + b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class BlockSnapshot 
 public BlockSnapshot ( World world , BlockPos pos , IBlockState state , @ Nullable NBTTagCompound nbt ) 
 { 
 this . setWorld ( world ) ; 
 - this . dimId = world . provider . getDimension ( ) ; 
 + this . dimId = world . provider . getId ( ) ; 
 this . pos = pos . toImmutable ( ) ; 
 this . setReplacedBlock ( state ) ; 
 this . registryName = state . getBlock ( ) . getRegistryName ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / server / command / CommandEntity . java b / src / main / java / net / minecraftforge / server / command / CommandEntity . java 
 index 0ede29c . . b2385da 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / CommandEntity . java 
 + + + b / src / main / java / net / minecraftforge / server / command / CommandEntity . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import com . google . common . collect . Maps ; 
 import com . mojang . brigadier . arguments . IntegerArgumentType ; 
 import com . mojang . brigadier . arguments . StringArgumentType ; 
 import com . mojang . brigadier . builder . ArgumentBuilder ; 
 + import com . mojang . brigadier . exceptions . CommandSyntaxException ; 
 import com . mojang . brigadier . exceptions . DynamicCommandExceptionType ; 
 import com . mojang . brigadier . exceptions . SimpleCommandExceptionType ; 
 
 @ @ - 78 , 12 + 79 , 12 @ @ class CommandEntity 
 . suggests ( ( ctx , builder ) - > ISuggestionProvider . func _ 197013 _ a ( DimensionManager . getIDStream ( ) . sorted ( ) . map ( id - > id . toString ( ) ) , builder ) ) 
 . executes ( ctx - > execute ( ctx . getSource ( ) , StringArgumentType . getString ( ctx , " filter " ) , IntegerArgumentType . getInteger ( ctx , " dim " ) ) ) 
 ) 
 - . executes ( ctx - > execute ( ctx . getSource ( ) , StringArgumentType . getString ( ctx , " filter " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getDimension ( ) ) ) 
 + . executes ( ctx - > execute ( ctx . getSource ( ) , StringArgumentType . getString ( ctx , " filter " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getId ( ) ) ) 
 ) 
 - . executes ( ctx - > execute ( ctx . getSource ( ) , " * " , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getDimension ( ) ) ) ; 
 + . executes ( ctx - > execute ( ctx . getSource ( ) , " * " , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getId ( ) ) ) ; 
 } 
 
 - private static int execute ( CommandSource sender , String filter , int dim ) throws CommandException 
 + private static int execute ( CommandSource sender , String filter , int dim ) throws CommandSyntaxException 
 { 
 final String cleanFilter = filter . replace ( " ? " , " . ? " ) . replace ( " * " , " . * ? " ) ; 
 
 @ @ - 128 , 6 + 129 , 7 @ @ class CommandEntity 
 if ( limit - - = = 0 ) break ; 
 sender . func _ 197030 _ a ( new TextComponentString ( " " + e . getValue ( ) + " : " + e . getKey ( ) . x + " , " + e . getKey ( ) . z ) , true ) ; 
 } 
 + return toSort . size ( ) ; 
 } 
 else 
 { 
 @ @ - 153 , 6 + 155 , 7 @ @ class CommandEntity 
 int count = info . stream ( ) . mapToInt ( Pair : : getRight ) . sum ( ) ; 
 sender . func _ 197030 _ a ( new TextComponentTranslation ( " commands . forge . entity . list . multiple . header " , count ) , true ) ; 
 info . forEach ( e - > sender . func _ 197030 _ a ( new TextComponentString ( " " + e . getValue ( ) + " : " + e . getKey ( ) ) , true ) ) ; 
 + return info . size ( ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / server / command / CommandGenerate . java b / src / main / java / net / minecraftforge / server / command / CommandGenerate . java 
 index 5fc1d84 . . 399a466 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / CommandGenerate . java 
 + + + b / src / main / java / net / minecraftforge / server / command / CommandGenerate . java 
 @ @ - 59 , 7 + 59 , 7 @ @ class CommandGenerate 
 ) 
 . executes ( ctx - > execute ( ctx . getSource ( ) , BlockPosArgument . func _ 197274 _ b ( ctx , " pos " ) , getInt ( ctx , " count " ) , getInt ( ctx , " dim " ) , - 1 ) ) 
 ) 
 - . executes ( ctx - > execute ( ctx . getSource ( ) , BlockPosArgument . func _ 197274 _ b ( ctx , " pos " ) , getInt ( ctx , " count " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getDimension ( ) , - 1 ) ) 
 + . executes ( ctx - > execute ( ctx . getSource ( ) , BlockPosArgument . func _ 197274 _ b ( ctx , " pos " ) , getInt ( ctx , " count " ) , ctx . getSource ( ) . func _ 197023 _ e ( ) . provider . getId ( ) , - 1 ) ) 
 ) 
 ) ; 
 } 
 @ @ - 76 , 5 + 76 , 7 @ @ class CommandGenerate 
 ChunkGenWorker worker = new ChunkGenWorker ( source , chunkpos , count , dim , interval ) ; 
 source . func _ 197030 _ a ( worker . getStartMessage ( source ) , true ) ; 
 WorldWorkerManager . addWorker ( worker ) ; 
 + 
 + return 0 ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java 
 index 9b173dc . . 73903ef 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java 
 + + + b / src / main / java / net / minecraftforge / server / command / CommandSetDimension . java 
 @ @ - 19 , 13 + 19 , 10 @ @ 
 
 package net . minecraftforge . server . command ; 
 
 - import net . minecraft . command . CommandBase ; 
 import net . minecraft . command . CommandException ; 
 import net . minecraft . command . CommandSource ; 
 import net . minecraft . command . Commands ; 
 - import net . minecraft . command . ICommandSender ; 
 import net . minecraft . command . ISuggestionProvider ; 
 - import net . minecraft . command . WrongUsageException ; 
 import net . minecraft . command . arguments . BlockPosArgument ; 
 import net . minecraft . command . arguments . EntityArgument ; 
 import net . minecraft . entity . Entity ; 
 diff - - git a / src / main / java / net / minecraftforge / server / command / CommandTrack . java b / src / main / java / net / minecraftforge / server / command / CommandTrack . java 
 index 4663817 . . 5bf5bba 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / CommandTrack . java 
 + + + b / src / main / java / net / minecraftforge / server / command / CommandTrack . java 
 @ @ - 185 , 7 + 185 , 7 @ @ class CommandTrack 
 double averageTimings

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index 805d304 . . 5b3251f 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 494 , 7 + 494 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 
 private static void registerAllBiomesAndGenerateEvents ( ) 
 { 
 - for ( Biome biome : ForgeRegistries . BIOMES . getValues ( ) ) 
 + for ( Biome biome : ForgeRegistries . BIOMES . getValuesCollection ( ) ) 
 { 
 if ( biome . decorator instanceof DeferredBiomeDecorator ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 index a63e625 . . bfb7dc3 100644 
 - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Map . Entry ; 
 
 + import javax . annotation . Nonnull ; 
 import javax . annotation . Nullable ; 
 
 import org . apache . commons . lang3 . Validate ; 
 @ @ - 188 , 19 + 189 , 30 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe 
 @ Override 
 public Set < ResourceLocation > getKeys ( ) 
 { 
 - return ImmutableSet . copyOf ( this . names . keySet ( ) ) ; 
 + return Collections . unmodifiableSet ( this . names . keySet ( ) ) ; 
 } 
 
 + / * * 
 + * @ deprecated use { @ link # getValuesCollection } to avoid copying 
 + * / 
 + @ Deprecated 
 @ Override 
 public List < V > getValues ( ) 
 { 
 return ImmutableList . copyOf ( this . names . values ( ) ) ; 
 } 
 
 + @ Nonnull 
 + @ Override 
 + public Collection < V > getValuesCollection ( ) 
 + { 
 + return Collections . unmodifiableSet ( this . names . values ( ) ) ; 
 + } 
 + 
 @ Override 
 public Set < Entry < ResourceLocation , V > > getEntries ( ) 
 { 
 - return ImmutableSet . copyOf ( this . names . entrySet ( ) ) ; 
 + return Collections . unmodifiableSet ( this . names . entrySet ( ) ) ; 
 } 
 
 @ SuppressWarnings ( " unchecked " ) 
 diff - - git a / src / main / java / net / minecraftforge / registries / IForgeRegistry . java b / src / main / java / net / minecraftforge / registries / IForgeRegistry . java 
 index a2bd3b7 . . 767c777 100644 
 - - - a / src / main / java / net / minecraftforge / registries / IForgeRegistry . java 
 + + + b / src / main / java / net / minecraftforge / registries / IForgeRegistry . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package net . minecraftforge . registries ; 
 
 + import java . util . Collection ; 
 import java . util . List ; 
 import java . util . Map . Entry ; 
 import java . util . Set ; 
 @ @ - 48 , 7 + 49 , 13 @ @ public interface IForgeRegistry < V extends IForgeRegistryEntry < V > > extends Iterab 
 @ Nullable ResourceLocation getKey ( V value ) ; 
 
 @ Nonnull Set < ResourceLocation > getKeys ( ) ; 
 + / * * @ deprecated use { @ link # getValuesCollection } * / 
 + @ Deprecated / / TODO : remove in 1 . 13 
 @ Nonnull List < V > getValues ( ) ; 
 + @ Nonnull 
 + default Collection < V > getValuesCollection ( ) { / / TODO rename this to getValues in 1 . 13 
 + return getValues ( ) ; 
 + } 
 @ Nonnull Set < Entry < ResourceLocation , V > > getEntries ( ) ; 
 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java b / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java 
 index de4e5fb . . 5257083 100644 
 - - - a / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java 
 + + + b / src / main / java / net / minecraftforge / registries / NamespacedDefaultedWrapper . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package net . minecraftforge . registries ; 
 
 + import java . util . Collection ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 @ @ - 104 , 10 + 105 , 8 @ @ class NamespacedDefaultedWrapper < V extends IForgeRegistryEntry < V > > extends Regis 
 @ Nullable 
 public V getRandomObject ( Random random ) 
 { 
 - List < V > lst = this . delegate . getValues ( ) ; 
 - if ( lst . isEmpty ( ) ) 
 - return null ; 
 - return lst . get ( random . nextInt ( lst . size ( ) ) ) ; 
 + Collection < V > values = this . delegate . getValuesCollection ( ) ; 
 + return values . stream ( ) . skip ( random . nextInt ( values . size ( ) ) ) . findFirst ( ) . orElse ( null ) ; 
 } 
 
 / / internal 
 diff - - git a / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java b / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java 
 index b501509 . . 1580263 100644 
 - - - a / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java 
 + + + b / src / main / java / net / minecraftforge / registries / NamespacedWrapper . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package net . minecraftforge . registries ; 
 
 + import java . util . ArrayList ; 
 + import java . util . Collection ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 @ @ - 97 , 10 + 99 , 8 @ @ class NamespacedWrapper < V extends IForgeRegistryEntry < V > > extends RegistryNamesp 
 @ Nullable 
 public V getRandomObject ( Random random ) 
 { 
 - List < V > lst = this . delegate . getValues ( ) ; 
 - if ( lst . isEmpty ( ) ) 
 - return null ; 
 - return lst . get ( random . nextInt ( lst . size ( ) ) ) ; 
 + Collection < V > values = this . delegate . getValuesCollection ( ) ; 
 + return values . stream ( ) . skip ( random . nextInt ( values . size ( ) ) ) . findFirst ( ) . orElse ( null ) ; 
 } 
 
 / / internal 
 diff - - git a / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java b / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java 
 index e1cebe1 . . 48a7301 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FluidHandlerTest . java 
 @ @ - 130 , 7 + 130 , 7 @ @ public class FluidHandlerTest 
 private static List < ItemStack > getAllItems ( ) 
 { 
 NonNullList < ItemStack > list = NonNullList . create ( ) ; 
 - for ( Item item : ForgeRegistries . ITEMS . getValues ( ) ) 
 + for ( Item item : ForgeRegistries . ITEMS . getValuesCollection ( ) ) 
 { 
 for ( CreativeTabs tab : item . getCreativeTabs ( ) ) 
 {
