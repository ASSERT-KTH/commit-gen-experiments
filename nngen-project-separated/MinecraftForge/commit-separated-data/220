BLEU SCORE: 0.02383853510228548

TEST MSG: Change item model loading priority to fix model conflicts
GENERATED MSG: Fix errors in test mods

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index 0179390 . . c45f7ee 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 301 , 22 + 301 , 20 @ @ public final class ModelLoader extends ModelBakery <nl> Exception exception = null ; <nl> try <nl> { <nl> - model = ModelLoaderRegistry . getModel ( file ) ; <nl> + model = ModelLoaderRegistry . getModel ( memory ) ; <nl> } <nl> - catch ( Exception normalException ) <nl> + catch ( Exception blockstateException ) <nl> { <nl> - / / try blockstate json if the item model is missing <nl> - FMLLog . log . debug ( " Item json isn ' t found for ' { } ' , trying to load the variant from the blockstate json " , memory ) ; <nl> try <nl> { <nl> - model = ModelLoaderRegistry . getModel ( memory ) ; <nl> + model = ModelLoaderRegistry . getModel ( file ) ; <nl> } <nl> - catch ( Exception blockstateException ) <nl> + catch ( Exception normalException ) <nl> { <nl> exception = new ItemLoadingException ( " Could not load item model either from the normal location " + file + " or from the blockstate " , normalException , blockstateException ) ; <nl> } <nl> } <nl> - if ( exception ! = null ) <nl> + if ( exception ! = null ) <nl> { <nl> storeException ( memory , exception ) ; <nl> model = ModelLoaderRegistry . getMissingModel ( memory , exception ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / client / model / ItemModelConflictTest . java b / src / test / java / net / minecraftforge / debug / client / model / ItemModelConflictTest . java <nl> new file mode 100644 <nl> index 0000000 . . 4797c95 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / client / model / ItemModelConflictTest . java <nl> @ @ - 0 , 0 + 1 , 63 @ @ <nl> + package net . minecraftforge . debug . client . model ; <nl> + <nl> + import net . minecraft . block . Block ; <nl> + import net . minecraft . block . material . Material ; <nl> + import net . minecraft . client . renderer . block . model . ModelResourceLocation ; <nl> + import net . minecraft . creativetab . CreativeTabs ; <nl> + import net . minecraft . item . Item ; <nl> + import net . minecraft . item . ItemBlock ; <nl> + import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> + import net . minecraftforge . client . model . ModelLoader ; <nl> + import net . minecraftforge . event . RegistryEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import net . minecraftforge . fml . common . registry . GameRegistry ; <nl> + import net . minecraftforge . fml . relauncher . Side ; <nl> + <nl> + @ Mod . EventBusSubscriber <nl> + @ Mod ( modid = ItemModelConflictTest . MODID , name = " Test mod for model conflicts " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class ItemModelConflictTest <nl> + { <nl> + public static final String MODID = " item _ model _ conflict _ test " ; <nl> + <nl> + @ GameRegistry . ObjectHolder ( MODID + " : item " ) <nl> + public static final Item TEST _ ITEM = null ; <nl> + <nl> + @ GameRegistry . ObjectHolder ( MODID + " : test " ) <nl> + public static final Block TEST _ BLOCK = null ; <nl> + <nl> + @ SubscribeEvent <nl> + public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> + { <nl> + event . getRegistry ( ) . register ( <nl> + new Block ( Material . ROCK ) <nl> + . setRegistryName ( MODID , " test " ) <nl> + . setUnlocalizedName ( MODID + " . test " ) <nl> + . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) <nl> + ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> + { <nl> + event . getRegistry ( ) . registerAll ( <nl> + new Item ( ) <nl> + . setRegistryName ( MODID , " item " ) <nl> + . setUnlocalizedName ( MODID + " . item " ) <nl> + . setCreativeTab ( CreativeTabs . MISC ) , <nl> + new ItemBlock ( TEST _ BLOCK ) <nl> + . setRegistryName ( TEST _ BLOCK . getRegistryName ( ) ) <nl> + ) ; <nl> + } <nl> + <nl> + @ Mod . EventBusSubscriber ( modid = MODID , value = Side . CLIENT ) <nl> + public static class ClientEventHandler <nl> + { <nl> + @ SubscribeEvent <nl> + public static void registerModels ( ModelRegistryEvent event ) <nl> + { <nl> + ModelLoader . setCustomModelResourceLocation ( Item . getItemFromBlock ( TEST _ BLOCK ) , 0 , new ModelResourceLocation ( TEST _ BLOCK . getRegistryName ( ) , " normal " ) ) ; <nl> + ModelLoader . setCustomModelResourceLocation ( TEST _ ITEM , 0 , new ModelResourceLocation ( MODID + " : test " , " inventory " ) ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / item _ model _ conflict _ test / blockstates / test . json b / src / test / resources / assets / item _ model _ conflict _ test / blockstates / test . json <nl> new file mode 100644 <nl> index 0000000 . . 553763b <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / item _ model _ conflict _ test / blockstates / test . json <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + { <nl> + " variants " : { <nl> + " normal " : { " model " : " item _ model _ conflict _ test : test " } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / item _ model _ conflict _ test / models / block / test . json b / src / test / resources / assets / item _ model _ conflict _ test / models / block / test . json <nl> new file mode 100644 <nl> index 0000000 . . a767551 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / item _ model _ conflict _ test / models / block / test . json <nl> @ @ - 0 , 0 + 1 , 3 @ @ <nl> + { <nl> + " parent " : " minecraft : block / cobblestone " <nl> + } <nl> diff - - git a / src / test / resources / assets / item _ model _ conflict _ test / models / item / test . json b / src / test / resources / assets / item _ model _ conflict _ test / models / item / test . json <nl> new file mode 100644 <nl> index 0000000 . . 311dda2 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / item _ model _ conflict _ test / models / item / test . json <nl> @ @ - 0 , 0 + 1 , 3 @ @ <nl> + { <nl> + " parent " : " minecraft : item / torch " <nl> + }
NEAREST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> index 274f40e . . d38ee01 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . util . NonNullList ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . capabilities . ICapabilityProvider ; <nl> @ @ - 52 , 23 + 53 , 11 @ @ public class FluidPlacementTest <nl> <nl> public static final boolean ENABLE = true ; <nl> <nl> - @ SidedProxy <nl> - public static CommonProxy proxy ; <nl> - <nl> - @ EventHandler <nl> - public void preInit ( FMLPreInitializationEvent event ) <nl> - { <nl> - if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> - return ; <nl> - proxy . preInit ( ) ; <nl> - } <nl> - <nl> - <nl> @ Mod . EventBusSubscriber ( modid = MODID ) <nl> public static class Registration <nl> { <nl> @ SubscribeEvent <nl> - public static void registrBlocks ( RegistryEvent . Register < Block > event ) <nl> + public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> return ; <nl> @ @ - 76 , 8 + 65 , 9 @ @ public class FluidPlacementTest <nl> FiniteFluidBlock . instance <nl> ) ; <nl> } <nl> + <nl> @ SubscribeEvent <nl> - public static void registrItems ( RegistryEvent . Register < Item > event ) <nl> + public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> return ; <nl> @ @ - 90 , 20 + 80 , 14 @ @ public class FluidPlacementTest <nl> ) ; <nl> MinecraftForge . EVENT _ BUS . register ( FluidContainer . instance ) ; <nl> } <nl> - } <nl> - <nl> - public static class CommonProxy { <nl> - public void preInit ( ) { } <nl> - } <nl> - public static class ServerProxy extends CommonProxy { } <nl> - <nl> - public static class ClientProxy extends CommonProxy <nl> - { <nl> - private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; <nl> <nl> - @ Override <nl> - public void preInit ( ) <nl> + @ SubscribeEvent <nl> + public static void registerModels ( ModelRegistryEvent event ) <nl> { <nl> + if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> + return ; <nl> + ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; <nl> + <nl> Item fluid = Item . getItemFromBlock ( FiniteFluidBlock . instance ) ; <nl> ModelLoader . setCustomModelResourceLocation ( EmptyFluidContainer . instance , 0 , new ModelResourceLocation ( " forge : bucket " , " inventory " ) ) ; <nl> ModelLoader . setBucketModelDefinition ( FluidContainer . instance ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> index caa4e3a . . 839227a 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> @ @ - 9 , 6 + 9 , 7 @ @ import net . minecraft . creativetab . CreativeTabs ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemBlock ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . Vec3d ; <nl> import net . minecraft . world . World ; <nl> @ @ - 34 , 6 + 35 , 8 @ @ public class FogColorInsideMaterialTest <nl> @ ObjectHolder ( " test _ fluid " ) <nl> public static final Item FLUID _ ITEM = null ; <nl> <nl> + private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MOD _ ID , " test _ fluid " ) ; <nl> + <nl> @ SubscribeEvent <nl> public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> @ @ - 46 , 21 + 49 , 21 @ @ public class FogColorInsideMaterialTest <nl> } <nl> } ; <nl> fluid . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; <nl> - fluid . setUnlocalizedName ( MOD _ ID + " : " + " test _ fluid " ) ; <nl> - fluid . setRegistryName ( " test _ fluid " ) ; <nl> + fluid . setUnlocalizedName ( testFluidRegistryName . toString ( ) ) ; <nl> + fluid . setRegistryName ( testFluidRegistryName ) ; <nl> event . getRegistry ( ) . register ( fluid ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> - event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( FLUID _ BLOCK . getRegistryName ( ) ) ) ; <nl> + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> public static void registerModels ( ModelRegistryEvent event ) <nl> { <nl> - ModelResourceLocation fluidLocation = new ModelResourceLocation ( MOD _ ID . toLowerCase ( ) + " : test _ fluid " , " fluid " ) ; <nl> + ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; <nl> ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; <nl> ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; <nl> ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java <nl> index 12e330c . . e397359 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ public class ItemCanDestroyBlocksInCreativeTest <nl> public static class Registration <nl> { <nl> @ SubscribeEvent <nl> - public static void registrItems ( RegistryEvent . Register < Item > event ) <nl> + public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> if ( ! ENABLE ) <nl> return ; <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> index c9f4933 . . f3e391e 100644 <nl> - - - a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> @ @ - 7 , 7 + 7 , 7 @ @ <nl> 	 	 " fluid " : [ <nl> 	 	 	 { <nl> 	 	 	 	 " custom " : { <nl> - 	 	 	 	 	 " fluid " : " test _ fluid " <nl> + 	 	 	 	 	 " fluid " : " water " <nl> 	 	 	 	 } <nl> 	 	 	 } <nl> 	 	 ] <nl> diff - - git a / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json <nl> new file mode 100644 <nl> index 0000000 . . 15928e0 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + { <nl> + " parent " : " item / generated " , <nl> + " textures " : { <nl> + " layer0 " : " items / beef _ cooked " <nl> + } <nl> + } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index 0179390 . . c45f7ee 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 301 , 22 + 301 , 20 @ @ public final class ModelLoader extends ModelBakery 
 Exception exception = null ; 
 try 
 { 
 - model = ModelLoaderRegistry . getModel ( file ) ; 
 + model = ModelLoaderRegistry . getModel ( memory ) ; 
 } 
 - catch ( Exception normalException ) 
 + catch ( Exception blockstateException ) 
 { 
 - / / try blockstate json if the item model is missing 
 - FMLLog . log . debug ( " Item json isn ' t found for ' { } ' , trying to load the variant from the blockstate json " , memory ) ; 
 try 
 { 
 - model = ModelLoaderRegistry . getModel ( memory ) ; 
 + model = ModelLoaderRegistry . getModel ( file ) ; 
 } 
 - catch ( Exception blockstateException ) 
 + catch ( Exception normalException ) 
 { 
 exception = new ItemLoadingException ( " Could not load item model either from the normal location " + file + " or from the blockstate " , normalException , blockstateException ) ; 
 } 
 } 
 - if ( exception ! = null ) 
 + if ( exception ! = null ) 
 { 
 storeException ( memory , exception ) ; 
 model = ModelLoaderRegistry . getMissingModel ( memory , exception ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / client / model / ItemModelConflictTest . java b / src / test / java / net / minecraftforge / debug / client / model / ItemModelConflictTest . java 
 new file mode 100644 
 index 0000000 . . 4797c95 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / client / model / ItemModelConflictTest . java 
 @ @ - 0 , 0 + 1 , 63 @ @ 
 + package net . minecraftforge . debug . client . model ; 
 + 
 + import net . minecraft . block . Block ; 
 + import net . minecraft . block . material . Material ; 
 + import net . minecraft . client . renderer . block . model . ModelResourceLocation ; 
 + import net . minecraft . creativetab . CreativeTabs ; 
 + import net . minecraft . item . Item ; 
 + import net . minecraft . item . ItemBlock ; 
 + import net . minecraftforge . client . event . ModelRegistryEvent ; 
 + import net . minecraftforge . client . model . ModelLoader ; 
 + import net . minecraftforge . event . RegistryEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import net . minecraftforge . fml . common . registry . GameRegistry ; 
 + import net . minecraftforge . fml . relauncher . Side ; 
 + 
 + @ Mod . EventBusSubscriber 
 + @ Mod ( modid = ItemModelConflictTest . MODID , name = " Test mod for model conflicts " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class ItemModelConflictTest 
 + { 
 + public static final String MODID = " item _ model _ conflict _ test " ; 
 + 
 + @ GameRegistry . ObjectHolder ( MODID + " : item " ) 
 + public static final Item TEST _ ITEM = null ; 
 + 
 + @ GameRegistry . ObjectHolder ( MODID + " : test " ) 
 + public static final Block TEST _ BLOCK = null ; 
 + 
 + @ SubscribeEvent 
 + public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 + { 
 + event . getRegistry ( ) . register ( 
 + new Block ( Material . ROCK ) 
 + . setRegistryName ( MODID , " test " ) 
 + . setUnlocalizedName ( MODID + " . test " ) 
 + . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) 
 + ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public static void registerItems ( RegistryEvent . Register < Item > event ) 
 + { 
 + event . getRegistry ( ) . registerAll ( 
 + new Item ( ) 
 + . setRegistryName ( MODID , " item " ) 
 + . setUnlocalizedName ( MODID + " . item " ) 
 + . setCreativeTab ( CreativeTabs . MISC ) , 
 + new ItemBlock ( TEST _ BLOCK ) 
 + . setRegistryName ( TEST _ BLOCK . getRegistryName ( ) ) 
 + ) ; 
 + } 
 + 
 + @ Mod . EventBusSubscriber ( modid = MODID , value = Side . CLIENT ) 
 + public static class ClientEventHandler 
 + { 
 + @ SubscribeEvent 
 + public static void registerModels ( ModelRegistryEvent event ) 
 + { 
 + ModelLoader . setCustomModelResourceLocation ( Item . getItemFromBlock ( TEST _ BLOCK ) , 0 , new ModelResourceLocation ( TEST _ BLOCK . getRegistryName ( ) , " normal " ) ) ; 
 + ModelLoader . setCustomModelResourceLocation ( TEST _ ITEM , 0 , new ModelResourceLocation ( MODID + " : test " , " inventory " ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / item _ model _ conflict _ test / blockstates / test . json b / src / test / resources / assets / item _ model _ conflict _ test / blockstates / test . json 
 new file mode 100644 
 index 0000000 . . 553763b 
 - - - / dev / null 
 + + + b / src / test / resources / assets / item _ model _ conflict _ test / blockstates / test . json 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + { 
 + " variants " : { 
 + " normal " : { " model " : " item _ model _ conflict _ test : test " } 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / item _ model _ conflict _ test / models / block / test . json b / src / test / resources / assets / item _ model _ conflict _ test / models / block / test . json 
 new file mode 100644 
 index 0000000 . . a767551 
 - - - / dev / null 
 + + + b / src / test / resources / assets / item _ model _ conflict _ test / models / block / test . json 
 @ @ - 0 , 0 + 1 , 3 @ @ 
 + { 
 + " parent " : " minecraft : block / cobblestone " 
 + } 
 diff - - git a / src / test / resources / assets / item _ model _ conflict _ test / models / item / test . json b / src / test / resources / assets / item _ model _ conflict _ test / models / item / test . json 
 new file mode 100644 
 index 0000000 . . 311dda2 
 - - - / dev / null 
 + + + b / src / test / resources / assets / item _ model _ conflict _ test / models / item / test . json 
 @ @ - 0 , 0 + 1 , 3 @ @ 
 + { 
 + " parent " : " minecraft : item / torch " 
 + }

NEAREST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 index 274f40e . . d38ee01 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . util . NonNullList ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . world . World ; 
 + import net . minecraftforge . client . event . ModelRegistryEvent ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . capabilities . ICapabilityProvider ; 
 @ @ - 52 , 23 + 53 , 11 @ @ public class FluidPlacementTest 
 
 public static final boolean ENABLE = true ; 
 
 - @ SidedProxy 
 - public static CommonProxy proxy ; 
 - 
 - @ EventHandler 
 - public void preInit ( FMLPreInitializationEvent event ) 
 - { 
 - if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 - return ; 
 - proxy . preInit ( ) ; 
 - } 
 - 
 - 
 @ Mod . EventBusSubscriber ( modid = MODID ) 
 public static class Registration 
 { 
 @ SubscribeEvent 
 - public static void registrBlocks ( RegistryEvent . Register < Block > event ) 
 + public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 return ; 
 @ @ - 76 , 8 + 65 , 9 @ @ public class FluidPlacementTest 
 FiniteFluidBlock . instance 
 ) ; 
 } 
 + 
 @ SubscribeEvent 
 - public static void registrItems ( RegistryEvent . Register < Item > event ) 
 + public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 return ; 
 @ @ - 90 , 20 + 80 , 14 @ @ public class FluidPlacementTest 
 ) ; 
 MinecraftForge . EVENT _ BUS . register ( FluidContainer . instance ) ; 
 } 
 - } 
 - 
 - public static class CommonProxy { 
 - public void preInit ( ) { } 
 - } 
 - public static class ServerProxy extends CommonProxy { } 
 - 
 - public static class ClientProxy extends CommonProxy 
 - { 
 - private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; 
 
 - @ Override 
 - public void preInit ( ) 
 + @ SubscribeEvent 
 + public static void registerModels ( ModelRegistryEvent event ) 
 { 
 + if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 + return ; 
 + ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; 
 + 
 Item fluid = Item . getItemFromBlock ( FiniteFluidBlock . instance ) ; 
 ModelLoader . setCustomModelResourceLocation ( EmptyFluidContainer . instance , 0 , new ModelResourceLocation ( " forge : bucket " , " inventory " ) ) ; 
 ModelLoader . setBucketModelDefinition ( FluidContainer . instance ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 index caa4e3a . . 839227a 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import net . minecraft . creativetab . CreativeTabs ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemBlock ; 
 + import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . Vec3d ; 
 import net . minecraft . world . World ; 
 @ @ - 34 , 6 + 35 , 8 @ @ public class FogColorInsideMaterialTest 
 @ ObjectHolder ( " test _ fluid " ) 
 public static final Item FLUID _ ITEM = null ; 
 
 + private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MOD _ ID , " test _ fluid " ) ; 
 + 
 @ SubscribeEvent 
 public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 @ @ - 46 , 21 + 49 , 21 @ @ public class FogColorInsideMaterialTest 
 } 
 } ; 
 fluid . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; 
 - fluid . setUnlocalizedName ( MOD _ ID + " : " + " test _ fluid " ) ; 
 - fluid . setRegistryName ( " test _ fluid " ) ; 
 + fluid . setUnlocalizedName ( testFluidRegistryName . toString ( ) ) ; 
 + fluid . setRegistryName ( testFluidRegistryName ) ; 
 event . getRegistry ( ) . register ( fluid ) ; 
 } 
 
 @ SubscribeEvent 
 public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 - event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( FLUID _ BLOCK . getRegistryName ( ) ) ) ; 
 + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; 
 } 
 
 @ SubscribeEvent 
 public static void registerModels ( ModelRegistryEvent event ) 
 { 
 - ModelResourceLocation fluidLocation = new ModelResourceLocation ( MOD _ ID . toLowerCase ( ) + " : test _ fluid " , " fluid " ) ; 
 + ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; 
 ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; 
 ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; 
 ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java 
 index 12e330c . . e397359 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public class ItemCanDestroyBlocksInCreativeTest 
 public static class Registration 
 { 
 @ SubscribeEvent 
 - public static void registrItems ( RegistryEvent . Register < Item > event ) 
 + public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 if ( ! ENABLE ) 
 return ; 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 index c9f4933 . . f3e391e 100644 
 - - - a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 @ @ - 7 , 7 + 7 , 7 @ @ 
 	 	 " fluid " : [ 
 	 	 	 { 
 	 	 	 	 " custom " : { 
 - 	 	 	 	 	 " fluid " : " test _ fluid " 
 + 	 	 	 	 	 " fluid " : " water " 
 	 	 	 	 } 
 	 	 	 } 
 	 	 ] 
 diff - - git a / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json 
 new file mode 100644 
 index 0000000 . . 15928e0 
 - - - / dev / null 
 + + + b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + { 
 + " parent " : " item / generated " , 
 + " textures " : { 
 + " layer0 " : " items / beef _ cooked " 
 + } 
 + } 
 \ No newline at end of file
