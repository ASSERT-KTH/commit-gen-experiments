BLEU SCORE: 0.031021609279760068

TEST MSG: Fixed missed OptionalCapabilityInstance to LazyOptional refactors in patches
GENERATED MSG: Added Capability . cast , to allow avoiding unchecked casts in ICapabilityProvider . getCapability

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index b40e44a . . af26928 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 411 , 10 + 411 , 10 @ @ <nl> + } <nl> + } <nl> + <nl> - + private final net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > [ ] handlers = net . minecraftforge . items . wrapper . EntityEquipmentInvWrapper . create ( this ) ; <nl> + + private final net . minecraftforge . common . util . LazyOptional < ? > [ ] handlers = net . minecraftforge . items . wrapper . EntityEquipmentInvWrapper . create ( this ) ; <nl> + <nl> + @ Override <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { <nl> + if ( facing = = null ) return handlers [ 2 ] . cast ( ) ; <nl> + else if ( facing . func _ 176740 _ k ( ) . func _ 200128 _ b ( ) ) return handlers [ 0 ] . cast ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> index 6acdbe7 . . a74aeb7 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> @ @ - 39 , 10 + 39 , 10 @ @ <nl> return this . field _ 184290 _ c ; <nl> } <nl> + <nl> - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > itemHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this ) ) ; <nl> + + private net . minecraftforge . common . util . LazyOptional < ? > itemHandler = net . minecraftforge . common . util . LazyOptional . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this ) ) ; <nl> + <nl> + @ Override <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { <nl> + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) <nl> + return itemHandler . cast ( ) ; <nl> + return super . getCapability ( capability , facing ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch b / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch <nl> index d13edb4 . . dffc26b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch <nl> @ @ - 4 , 7 + 4 , 7 @ @ <nl> <nl> this . field _ 110296 _ bG . func _ 110134 _ a ( this ) ; <nl> this . func _ 110232 _ cE ( ) ; <nl> - + this . itemHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this . field _ 110296 _ bG ) ) ; <nl> + + this . itemHandler = net . minecraftforge . common . util . LazyOptional . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this . field _ 110296 _ bG ) ) ; <nl> } <nl> <nl> protected void func _ 110232 _ cE ( ) { <nl> @ @ - 13 , 10 + 13 , 10 @ @ <nl> return p _ 204210 _ 2 _ ; <nl> } <nl> + <nl> - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > itemHandler = null ; <nl> + + private net . minecraftforge . common . util . LazyOptional < ? > itemHandler = null ; <nl> + <nl> + @ Override <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { <nl> + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY & & itemHandler ! = null ) <nl> + return itemHandler . cast ( ) ; <nl> + return super . getCapability ( capability , facing ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> index a64c4c5 . . 120cb47 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> @ @ - 58 , 11 + 58 , 11 @ @ <nl> this . field _ 145945 _ j . clear ( ) ; <nl> } <nl> + <nl> - + net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = <nl> + + net . minecraftforge . common . util . LazyOptional < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = <nl> + net . minecraftforge . items . wrapper . SidedInvWrapper . create ( this , EnumFacing . UP , EnumFacing . DOWN , EnumFacing . NORTH ) ; <nl> + <nl> + @ Override <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { <nl> + if ( facing = = EnumFacing . UP ) <nl> + return handlers [ 0 ] . cast ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> index d72e042 . . f3e3ac7 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> @ @ - 4 , 7 + 4 , 7 @ @ <nl> protected float field _ 145986 _ n ; <nl> protected int field _ 145987 _ o ; <nl> private int field _ 145983 _ q ; <nl> - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < net . minecraftforge . items . IItemHandlerModifiable > chestHandler ; <nl> + + private net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandlerModifiable > chestHandler ; <nl> <nl> protected TileEntityChest ( TileEntityType < ? > p _ i48287 _ 1 _ ) { <nl> super ( p _ i48287 _ 1 _ ) ; <nl> @ @ - 32 , 10 + 32 , 10 @ @ <nl> + } <nl> + <nl> + @ Override <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , EnumFacing side ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , EnumFacing side ) { <nl> + if ( cap = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { <nl> + if ( this . chestHandler = = null ) { <nl> - + this . chestHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( this : : createHandler ) ; <nl> + + this . chestHandler = net . minecraftforge . common . util . LazyOptional . of ( this : : createHandler ) ; <nl> + } <nl> + return this . chestHandler . cast ( ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> index e093fa3 . . d3b76d1 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> @ @ - 96 , 11 + 96 , 11 @ @ <nl> this . field _ 203901 _ m . clear ( ) ; <nl> } <nl> + <nl> - + net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = <nl> + + net . minecraftforge . common . util . LazyOptional < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = <nl> + net . minecraftforge . items . wrapper . SidedInvWrapper . create ( this , EnumFacing . UP , EnumFacing . DOWN , EnumFacing . NORTH ) ; <nl> + <nl> + @ Override <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { <nl> + if ( facing = = EnumFacing . UP ) <nl> + return handlers [ 0 ] . cast ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch <nl> index 0393293 . . 376587f 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch <nl> @ @ - 5 , 13 + 5 , 13 @ @ <nl> this . field _ 174901 _ a = p _ 174892 _ 1 _ ; <nl> } <nl> + <nl> - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > itemHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( ( ) - > createUnSidedHandler ( ) ) ; <nl> + + private net . minecraftforge . common . util . LazyOptional < ? > itemHandler = net . minecraftforge . common . util . LazyOptional . of ( ( ) - > createUnSidedHandler ( ) ) ; <nl> + protected net . minecraftforge . items . IItemHandler createUnSidedHandler ( ) { <nl> + return new net . minecraftforge . items . wrapper . InvWrapper ( this ) ; <nl> + } <nl> + <nl> + @ javax . annotation . Nullable <nl> - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , @ javax . annotation . Nullable net . minecraft . util . EnumFacing side ) { <nl> + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , @ javax . annotation . Nullable net . minecraft . util . EnumFacing side ) { <nl> + if ( cap = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { <nl> + return itemHandler . cast ( ) ; <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index 5c49734 . . d616b61 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 285 , 7 + 285 , 7 @ @ <nl> } <nl> <nl> this . func _ 184602 _ cy ( ) ; <nl> - @ @ - 2626 , 4 + 2707 , 27 @ @ <nl> + @ @ - 2626 , 4 + 2707 , 28 @ @ <nl> { <nl> return true ; <nl> } <nl> @ @ - 295 , 6 + 295 , 7 @ @ <nl> + private final net . minecraftforge . items . IItemHandlerModifiable armorHandler = new net . minecraftforge . items . ItemStackHandler ( field _ 184631 _ bt ) ; <nl> + private final net . minecraftforge . items . IItemHandler joinedHandler = new net . minecraftforge . items . wrapper . CombinedInvWrapper ( armorHandler , handHandler ) ; <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> index ecc5f6b . . 5fa7ee0 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> @ @ - 8 , 12 + 8 , 13 @ @ <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> { <nl> p _ 184230 _ 1 _ . func _ 71007 _ a ( this ) ; <nl> - @ @ - 279 , 6 + 280 , 24 @ @ <nl> + @ @ - 279 , 6 + 280 , 25 @ @ <nl> } <nl> } <nl> <nl> + public net . minecraftforge . items . IItemHandler itemHandler = new net . minecraftforge . items . wrapper . InvWrapper ( this ) ; <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch b / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch <nl> index 5f4ea94 . . 5c100f3 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch <nl> @ @ - 16 , 7 + 16 , 7 @ @ <nl> } <nl> <nl> this . field _ 70138 _ W = 1 . 0F ; <nl> - @ @ - 1793 , 4 + 1795 , 20 @ @ <nl> + @ @ - 1793 , 4 + 1795 , 21 @ @ <nl> this . field _ 188477 _ b = p _ i46589 _ 2 _ ; <nl> } <nl> } <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> + / / FORGE <nl> + private net . minecraftforge . items . IItemHandler itemHandler = null ; / / Initialized by initHorseChest above . <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index f0c090d . . c39a9c7 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 401 , 7 + 401 , 7 @ @ <nl> <nl> if ( this . func _ 70608 _ bn ( ) ) <nl> { <nl> - @ @ - 2340 , 6 + 2447 , 160 @ @ <nl> + @ @ - 2340 , 6 + 2447 , 161 @ @ <nl> return ( float ) this . func _ 110148 _ a ( SharedMonsterAttributes . field _ 188792 _ h ) . func _ 111126 _ e ( ) ; <nl> } <nl> <nl> @ @ - 539 , 6 + 539 , 7 @ @ <nl> + new net . minecraftforge . items . wrapper . PlayerOffhandInvWrapper ( field _ 71071 _ by ) ) ; <nl> + private final net . minecraftforge . items . IItemHandler playerJoinedHandler = new net . minecraftforge . items . wrapper . PlayerInvWrapper ( field _ 71071 _ by ) ; <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> index 0350d0b . . f70e7a8 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> @ @ - 63 , 13 + 63 , 14 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 362 , 6 + 361 , 20 @ @ <nl> + @ @ - 362 , 6 + 361 , 21 @ @ <nl> } <nl> } <nl> <nl> + net . minecraftforge . items . IItemHandler handlerInput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . UP ) ; <nl> + net . minecraftforge . items . IItemHandler handlerOutput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . DOWN ) ; <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> index 41197c4 . . d7766de 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> @ @ - 8 , 12 + 8 , 13 @ @ <nl> } <nl> <nl> @ SuppressWarnings ( " incomplete - switch " ) <nl> - @ @ - 457 , 6 + 458 , 26 @ @ <nl> + @ @ - 457 , 6 + 458 , 27 @ @ <nl> } <nl> } <nl> <nl> + public net . minecraftforge . items . VanillaDoubleChestItemHandler doubleChestHandler ; <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> index abef4b0 . . 41e782b 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> @ @ - 75 , 7 + 75 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 432 , 4 + 443 , 21 @ @ <nl> + @ @ - 432 , 4 + 443 , 22 @ @ <nl> this . field _ 145957 _ n [ i ] = null ; <nl> } <nl> } <nl> @ @ - 84 , 6 + 84 , 7 @ @ <nl> + net . minecraftforge . items . IItemHandler handlerBottom = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . DOWN ) ; <nl> + net . minecraftforge . items . IItemHandler handlerSide = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . WEST ) ; <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch <nl> index 116d03a . . 6c31d0d 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityLockable . java <nl> + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityLockable . java <nl> - @ @ - 47 , 4 + 47 , 25 @ @ <nl> + @ @ - 47 , 4 + 47 , 26 @ @ <nl> { <nl> return ( ITextComponent ) ( this . func _ 145818 _ k _ ( ) ? new TextComponentString ( this . func _ 70005 _ c _ ( ) ) : new TextComponentTranslation ( this . func _ 70005 _ c _ ( ) , new Object [ 0 ] ) ) ; <nl> } <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> + return new net . minecraftforge . items . wrapper . InvWrapper ( this ) ; <nl> + } <nl> + <nl> + + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) <nl> + { <nl> diff - - git a / src / main / java / net / minecraftforge / common / capabilities / Capability . java b / src / main / java / net / minecraftforge / common / capabilities / Capability . java <nl> index 9462701 . . aecde88 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / capabilities / Capability . java <nl> + + + b / src / main / java / net / minecraftforge / common / capabilities / Capability . java <nl> @ @ - 92 , 6 + 92 , 17 @ @ public class Capability < T > <nl> return null ; <nl> } <nl> <nl> + / * * <nl> + * Use this inside ICapabilityProvider . getCapability to avoid unchecked cast warnings . <nl> + * Example : return SOME _ CAPABILITY . cast ( instance ) ; <nl> + * Use with caution ; <nl> + * / <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + public < R > R cast ( T instance ) <nl> + { <nl> + return ( R ) instance ; <nl> + } <nl> + <nl> / / INTERNAL <nl> private final String name ; <nl> private final IStorage < T > storage ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java b / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java <nl> index 093afaf . . 9dde0aa 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java <nl> + + + b / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java <nl> @ @ - 47 , 12 + 47 , 11 @ @ public class CapabilityAnimation <nl> return capability = = ANIMATION _ CAPABILITY ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) <nl> { <nl> if ( capability = = ANIMATION _ CAPABILITY ) <nl> { <nl> - return ( T ) asm ; <nl> + return ANIMATION _ CAPABILITY . cast ( asm ) ; <nl> } <nl> return null ; <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> index 727e1e9 . . 05bb4b3 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> @ @ - 244 , 12 + 244 , 11 @ @ public class ModelAnimationDebug <nl> return capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) <nl> { <nl> if ( capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ) <nl> { <nl> - return ( T ) asm ; <nl> + return CapabilityAnimation . ANIMATION _ CAPABILITY . cast ( asm ) ; <nl> } <nl> return null ; <nl> } <nl> @ @ - 338 , 13 + 337 , 12 @ @ public class ModelAnimationDebug <nl> return super . hasCapability ( capability , side ) ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unchecked " ) <nl> @ Override <nl> public < T > T getCapability ( Capability < T > capability , EnumFacing side ) <nl> { <nl> if ( capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ) <nl> { <nl> - return ( T ) asm ; <nl> + return CapabilityAnimation . ANIMATION _ CAPABILITY . cast ( asm ) ; <nl> } <nl> return super . getCapability ( capability , side ) ; <nl> } <nl> @ @ - 396 , 13 + 394 , 12 @ @ public class ModelAnimationDebug <nl> return super . hasCapability ( capability , side ) ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unchecked " ) <nl> @ Override <nl> public < T > T getCapability ( Capability < T > capability , EnumFacing side ) <nl> { <nl> if ( capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ) <nl> { <nl> - return ( T ) asm ; <nl> + return CapabilityAnimation . ANIMATION _ CAPABILITY . cast ( asm ) ; <nl> } <nl> return super . getCapability ( capability , side ) ; <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java <nl> index 6b5d702 . . 1dc9979 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java <nl> @ @ - 84 , 10 + 84 , 9 @ @ public class NoBedSleepingTest <nl> return capability = = SLEEP _ CAP ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unchecked " ) <nl> @ Override <nl> public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) { <nl> - return capability = = SLEEP _ CAP ? ( T ) inst : null ; <nl> + return capability = = SLEEP _ CAP ? SLEEP _ CAP . cast ( inst ) : null ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java <nl> index 2e8ba82 . . 8705900 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java <nl> + + + b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java <nl> @ @ - 97 , 11 + 97 , 10 @ @ public class TestCapabilityMod <nl> { <nl> return TEST _ CAP ! = null & & capability = = TEST _ CAP ; <nl> } <nl> - @ SuppressWarnings ( " unchecked " ) / / There isnt anything sane we can do about this . <nl> @ Override <nl> public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) <nl> { <nl> - if ( TEST _ CAP ! = null & & capability = = TEST _ CAP ) return ( T ) this ; <nl> + if ( TEST _ CAP ! = null & & capability = = TEST _ CAP ) return TEST _ CAP . cast ( this ) ; <nl> return null ; <nl> } <nl> @ Override

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index b40e44a . . af26928 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 411 , 10 + 411 , 10 @ @ 
 + } 
 + } 
 + 
 - + private final net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > [ ] handlers = net . minecraftforge . items . wrapper . EntityEquipmentInvWrapper . create ( this ) ; 
 + + private final net . minecraftforge . common . util . LazyOptional < ? > [ ] handlers = net . minecraftforge . items . wrapper . EntityEquipmentInvWrapper . create ( this ) ; 
 + 
 + @ Override 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { 
 + if ( facing = = null ) return handlers [ 2 ] . cast ( ) ; 
 + else if ( facing . func _ 176740 _ k ( ) . func _ 200128 _ b ( ) ) return handlers [ 0 ] . cast ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 index 6acdbe7 . . a74aeb7 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 @ @ - 39 , 10 + 39 , 10 @ @ 
 return this . field _ 184290 _ c ; 
 } 
 + 
 - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > itemHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this ) ) ; 
 + + private net . minecraftforge . common . util . LazyOptional < ? > itemHandler = net . minecraftforge . common . util . LazyOptional . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this ) ) ; 
 + 
 + @ Override 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { 
 + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) 
 + return itemHandler . cast ( ) ; 
 + return super . getCapability ( capability , facing ) ; 
 diff - - git a / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch b / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch 
 index d13edb4 . . dffc26b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / passive / AbstractHorse . java . patch 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 
 this . field _ 110296 _ bG . func _ 110134 _ a ( this ) ; 
 this . func _ 110232 _ cE ( ) ; 
 - + this . itemHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this . field _ 110296 _ bG ) ) ; 
 + + this . itemHandler = net . minecraftforge . common . util . LazyOptional . of ( ( ) - > new net . minecraftforge . items . wrapper . InvWrapper ( this . field _ 110296 _ bG ) ) ; 
 } 
 
 protected void func _ 110232 _ cE ( ) { 
 @ @ - 13 , 10 + 13 , 10 @ @ 
 return p _ 204210 _ 2 _ ; 
 } 
 + 
 - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > itemHandler = null ; 
 + + private net . minecraftforge . common . util . LazyOptional < ? > itemHandler = null ; 
 + 
 + @ Override 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) { 
 + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY & & itemHandler ! = null ) 
 + return itemHandler . cast ( ) ; 
 + return super . getCapability ( capability , facing ) ; 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 index a64c4c5 . . 120cb47 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 @ @ - 58 , 11 + 58 , 11 @ @ 
 this . field _ 145945 _ j . clear ( ) ; 
 } 
 + 
 - + net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = 
 + + net . minecraftforge . common . util . LazyOptional < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = 
 + net . minecraftforge . items . wrapper . SidedInvWrapper . create ( this , EnumFacing . UP , EnumFacing . DOWN , EnumFacing . NORTH ) ; 
 + 
 + @ Override 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { 
 + if ( facing = = EnumFacing . UP ) 
 + return handlers [ 0 ] . cast ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 index d72e042 . . f3e3ac7 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 protected float field _ 145986 _ n ; 
 protected int field _ 145987 _ o ; 
 private int field _ 145983 _ q ; 
 - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < net . minecraftforge . items . IItemHandlerModifiable > chestHandler ; 
 + + private net . minecraftforge . common . util . LazyOptional < net . minecraftforge . items . IItemHandlerModifiable > chestHandler ; 
 
 protected TileEntityChest ( TileEntityType < ? > p _ i48287 _ 1 _ ) { 
 super ( p _ i48287 _ 1 _ ) ; 
 @ @ - 32 , 10 + 32 , 10 @ @ 
 + } 
 + 
 + @ Override 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , EnumFacing side ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , EnumFacing side ) { 
 + if ( cap = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { 
 + if ( this . chestHandler = = null ) { 
 - + this . chestHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( this : : createHandler ) ; 
 + + this . chestHandler = net . minecraftforge . common . util . LazyOptional . of ( this : : createHandler ) ; 
 + } 
 + return this . chestHandler . cast ( ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 index e093fa3 . . d3b76d1 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 @ @ - 96 , 11 + 96 , 11 @ @ 
 this . field _ 203901 _ m . clear ( ) ; 
 } 
 + 
 - + net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = 
 + + net . minecraftforge . common . util . LazyOptional < ? extends net . minecraftforge . items . IItemHandler > [ ] handlers = 
 + net . minecraftforge . items . wrapper . SidedInvWrapper . create ( this , EnumFacing . UP , EnumFacing . DOWN , EnumFacing . NORTH ) ; 
 + 
 + @ Override 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { 
 + if ( facing = = EnumFacing . UP ) 
 + return handlers [ 0 ] . cast ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch 
 index 0393293 . . 376587f 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch 
 @ @ - 5 , 13 + 5 , 13 @ @ 
 this . field _ 174901 _ a = p _ 174892 _ 1 _ ; 
 } 
 + 
 - + private net . minecraftforge . common . capabilities . OptionalCapabilityInstance < ? > itemHandler = net . minecraftforge . common . capabilities . OptionalCapabilityInstance . of ( ( ) - > createUnSidedHandler ( ) ) ; 
 + + private net . minecraftforge . common . util . LazyOptional < ? > itemHandler = net . minecraftforge . common . util . LazyOptional . of ( ( ) - > createUnSidedHandler ( ) ) ; 
 + protected net . minecraftforge . items . IItemHandler createUnSidedHandler ( ) { 
 + return new net . minecraftforge . items . wrapper . InvWrapper ( this ) ; 
 + } 
 + 
 + @ javax . annotation . Nullable 
 - + public < T > net . minecraftforge . common . capabilities . OptionalCapabilityInstance < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , @ javax . annotation . Nullable net . minecraft . util . EnumFacing side ) { 
 + + public < T > net . minecraftforge . common . util . LazyOptional < T > getCapability ( net . minecraftforge . common . capabilities . Capability < T > cap , @ javax . annotation . Nullable net . minecraft . util . EnumFacing side ) { 
 + if ( cap = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) { 
 + return itemHandler . cast ( ) ; 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index 5c49734 . . d616b61 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 285 , 7 + 285 , 7 @ @ 
 } 
 
 this . func _ 184602 _ cy ( ) ; 
 - @ @ - 2626 , 4 + 2707 , 27 @ @ 
 + @ @ - 2626 , 4 + 2707 , 28 @ @ 
 { 
 return true ; 
 } 
 @ @ - 295 , 6 + 295 , 7 @ @ 
 + private final net . minecraftforge . items . IItemHandlerModifiable armorHandler = new net . minecraftforge . items . ItemStackHandler ( field _ 184631 _ bt ) ; 
 + private final net . minecraftforge . items . IItemHandler joinedHandler = new net . minecraftforge . items . wrapper . CombinedInvWrapper ( armorHandler , handHandler ) ; 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 index ecc5f6b . . 5fa7ee0 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 @ @ - 8 , 12 + 8 , 13 @ @ 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 { 
 p _ 184230 _ 1 _ . func _ 71007 _ a ( this ) ; 
 - @ @ - 279 , 6 + 280 , 24 @ @ 
 + @ @ - 279 , 6 + 280 , 25 @ @ 
 } 
 } 
 
 + public net . minecraftforge . items . IItemHandler itemHandler = new net . minecraftforge . items . wrapper . InvWrapper ( this ) ; 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch b / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch 
 index 5f4ea94 . . 5c100f3 100644 
 - - - a / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / passive / EntityHorse . java . patch 
 @ @ - 16 , 7 + 16 , 7 @ @ 
 } 
 
 this . field _ 70138 _ W = 1 . 0F ; 
 - @ @ - 1793 , 4 + 1795 , 20 @ @ 
 + @ @ - 1793 , 4 + 1795 , 21 @ @ 
 this . field _ 188477 _ b = p _ i46589 _ 2 _ ; 
 } 
 } 
 @ @ - 24 , 6 + 24 , 7 @ @ 
 + / / FORGE 
 + private net . minecraftforge . items . IItemHandler itemHandler = null ; / / Initialized by initHorseChest above . 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index f0c090d . . c39a9c7 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 401 , 7 + 401 , 7 @ @ 
 
 if ( this . func _ 70608 _ bn ( ) ) 
 { 
 - @ @ - 2340 , 6 + 2447 , 160 @ @ 
 + @ @ - 2340 , 6 + 2447 , 161 @ @ 
 return ( float ) this . func _ 110148 _ a ( SharedMonsterAttributes . field _ 188792 _ h ) . func _ 111126 _ e ( ) ; 
 } 
 
 @ @ - 539 , 6 + 539 , 7 @ @ 
 + new net . minecraftforge . items . wrapper . PlayerOffhandInvWrapper ( field _ 71071 _ by ) ) ; 
 + private final net . minecraftforge . items . IItemHandler playerJoinedHandler = new net . minecraftforge . items . wrapper . PlayerInvWrapper ( field _ 71071 _ by ) ; 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 index 0350d0b . . f70e7a8 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 @ @ - 63 , 13 + 63 , 14 @ @ 
 } 
 } 
 
 - @ @ - 362 , 6 + 361 , 20 @ @ 
 + @ @ - 362 , 6 + 361 , 21 @ @ 
 } 
 } 
 
 + net . minecraftforge . items . IItemHandler handlerInput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . UP ) ; 
 + net . minecraftforge . items . IItemHandler handlerOutput = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . DOWN ) ; 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 index 41197c4 . . d7766de 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 @ @ - 8 , 12 + 8 , 13 @ @ 
 } 
 
 @ SuppressWarnings ( " incomplete - switch " ) 
 - @ @ - 457 , 6 + 458 , 26 @ @ 
 + @ @ - 457 , 6 + 458 , 27 @ @ 
 } 
 } 
 
 + public net . minecraftforge . items . VanillaDoubleChestItemHandler doubleChestHandler ; 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 index abef4b0 . . 41e782b 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 @ @ - 75 , 7 + 75 , 7 @ @ 
 } 
 } 
 
 - @ @ - 432 , 4 + 443 , 21 @ @ 
 + @ @ - 432 , 4 + 443 , 22 @ @ 
 this . field _ 145957 _ n [ i ] = null ; 
 } 
 } 
 @ @ - 84 , 6 + 84 , 7 @ @ 
 + net . minecraftforge . items . IItemHandler handlerBottom = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . DOWN ) ; 
 + net . minecraftforge . items . IItemHandler handlerSide = new net . minecraftforge . items . wrapper . SidedInvWrapper ( this , net . minecraft . util . EnumFacing . WEST ) ; 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch 
 index 116d03a . . 6c31d0d 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityLockable . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityLockable . java 
 + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityLockable . java 
 - @ @ - 47 , 4 + 47 , 25 @ @ 
 + @ @ - 47 , 4 + 47 , 26 @ @ 
 { 
 return ( ITextComponent ) ( this . func _ 145818 _ k _ ( ) ? new TextComponentString ( this . func _ 70005 _ c _ ( ) ) : new TextComponentTranslation ( this . func _ 70005 _ c _ ( ) , new Object [ 0 ] ) ) ; 
 } 
 @ @ - 12 , 6 + 12 , 7 @ @ 
 + return new net . minecraftforge . items . wrapper . InvWrapper ( this ) ; 
 + } 
 + 
 + + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , net . minecraft . util . EnumFacing facing ) 
 + { 
 diff - - git a / src / main / java / net / minecraftforge / common / capabilities / Capability . java b / src / main / java / net / minecraftforge / common / capabilities / Capability . java 
 index 9462701 . . aecde88 100644 
 - - - a / src / main / java / net / minecraftforge / common / capabilities / Capability . java 
 + + + b / src / main / java / net / minecraftforge / common / capabilities / Capability . java 
 @ @ - 92 , 6 + 92 , 17 @ @ public class Capability < T > 
 return null ; 
 } 
 
 + / * * 
 + * Use this inside ICapabilityProvider . getCapability to avoid unchecked cast warnings . 
 + * Example : return SOME _ CAPABILITY . cast ( instance ) ; 
 + * Use with caution ; 
 + * / 
 + @ SuppressWarnings ( " unchecked " ) 
 + public < R > R cast ( T instance ) 
 + { 
 + return ( R ) instance ; 
 + } 
 + 
 / / INTERNAL 
 private final String name ; 
 private final IStorage < T > storage ; 
 diff - - git a / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java b / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java 
 index 093afaf . . 9dde0aa 100644 
 - - - a / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java 
 + + + b / src / main / java / net / minecraftforge / common / model / animation / CapabilityAnimation . java 
 @ @ - 47 , 12 + 47 , 11 @ @ public class CapabilityAnimation 
 return capability = = ANIMATION _ CAPABILITY ; 
 } 
 
 - @ SuppressWarnings ( " unchecked " ) 
 public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) 
 { 
 if ( capability = = ANIMATION _ CAPABILITY ) 
 { 
 - return ( T ) asm ; 
 + return ANIMATION _ CAPABILITY . cast ( asm ) ; 
 } 
 return null ; 
 } 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 index 727e1e9 . . 05bb4b3 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 @ @ - 244 , 12 + 244 , 11 @ @ public class ModelAnimationDebug 
 return capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ; 
 } 
 
 - @ SuppressWarnings ( " unchecked " ) 
 public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) 
 { 
 if ( capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ) 
 { 
 - return ( T ) asm ; 
 + return CapabilityAnimation . ANIMATION _ CAPABILITY . cast ( asm ) ; 
 } 
 return null ; 
 } 
 @ @ - 338 , 13 + 337 , 12 @ @ public class ModelAnimationDebug 
 return super . hasCapability ( capability , side ) ; 
 } 
 
 - @ SuppressWarnings ( " unchecked " ) 
 @ Override 
 public < T > T getCapability ( Capability < T > capability , EnumFacing side ) 
 { 
 if ( capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ) 
 { 
 - return ( T ) asm ; 
 + return CapabilityAnimation . ANIMATION _ CAPABILITY . cast ( asm ) ; 
 } 
 return super . getCapability ( capability , side ) ; 
 } 
 @ @ - 396 , 13 + 394 , 12 @ @ public class ModelAnimationDebug 
 return super . hasCapability ( capability , side ) ; 
 } 
 
 - @ SuppressWarnings ( " unchecked " ) 
 @ Override 
 public < T > T getCapability ( Capability < T > capability , EnumFacing side ) 
 { 
 if ( capability = = CapabilityAnimation . ANIMATION _ CAPABILITY ) 
 { 
 - return ( T ) asm ; 
 + return CapabilityAnimation . ANIMATION _ CAPABILITY . cast ( asm ) ; 
 } 
 return super . getCapability ( capability , side ) ; 
 } 
 diff - - git a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java 
 index 6b5d702 . . 1dc9979 100644 
 - - - a / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java 
 + + + b / src / test / java / net / minecraftforge / test / NoBedSleepingTest . java 
 @ @ - 84 , 10 + 84 , 9 @ @ public class NoBedSleepingTest 
 return capability = = SLEEP _ CAP ; 
 } 
 
 - @ SuppressWarnings ( " unchecked " ) 
 @ Override 
 public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) { 
 - return capability = = SLEEP _ CAP ? ( T ) inst : null ; 
 + return capability = = SLEEP _ CAP ? SLEEP _ CAP . cast ( inst ) : null ; 
 } 
 
 @ Override 
 diff - - git a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java 
 index 2e8ba82 . . 8705900 100644 
 - - - a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java 
 + + + b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java 
 @ @ - 97 , 11 + 97 , 10 @ @ public class TestCapabilityMod 
 { 
 return TEST _ CAP ! = null & & capability = = TEST _ CAP ; 
 } 
 - @ SuppressWarnings ( " unchecked " ) / / There isnt anything sane we can do about this . 
 @ Override 
 public < T > T getCapability ( Capability < T > capability , EnumFacing facing ) 
 { 
 - if ( TEST _ CAP ! = null & & capability = = TEST _ CAP ) return ( T ) this ; 
 + if ( TEST _ CAP ! = null & & capability = = TEST _ CAP ) return TEST _ CAP . cast ( this ) ; 
 return null ; 
 } 
 @ Override
