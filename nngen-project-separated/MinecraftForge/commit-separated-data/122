BLEU SCORE: 0.08116697886877475

TEST MSG: Fix NPE in ItemGroup concurrency patch
GENERATED MSG: Make ItemGroup constructor threadsafe

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch <nl> index bdf570f . . 279af02 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch <nl> @ @ - 40 , 7 + 40 , 7 @ @ <nl> return this . field _ 78033 _ n < 6 ; <nl> } <nl> <nl> - @ @ - 220 , 4 + 225 , 54 @ @ <nl> + @ @ - 220 , 4 + 225 , 48 @ @ <nl> } <nl> <nl> } <nl> @ @ - 72 , 26 + 72 , 20 @ @ <nl> + return 4210752 ; <nl> + } <nl> + <nl> - + private static final Object LOCK = new Object ( ) ; <nl> - + <nl> - + public static int getGroupCountSafe ( ) { <nl> - + synchronized ( LOCK ) { <nl> - + return ItemGroup . field _ 78032 _ a . length ; <nl> - + } <nl> + + public static synchronized int getGroupCountSafe ( ) { <nl> + + return ItemGroup . field _ 78032 _ a . length ; <nl> + } <nl> + <nl> - + private static int addGroupSafe ( int index , ItemGroup newGroup ) { <nl> - + synchronized ( LOCK ) { <nl> - + if ( index = = - 1 ) { <nl> - + index = field _ 78032 _ a . length ; <nl> - + } <nl> - + if ( index > = field _ 78032 _ a . length ) { <nl> - + ItemGroup [ ] tmp = new ItemGroup [ index + 1 ] ; <nl> - + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; <nl> - + field _ 78032 _ a = tmp ; <nl> - + } <nl> - + field _ 78032 _ a [ index ] = newGroup ; <nl> - + return index ; <nl> + + private static synchronized int addGroupSafe ( int index , ItemGroup newGroup ) { <nl> + + if ( index = = - 1 ) { <nl> + + index = field _ 78032 _ a . length ; <nl> + + } <nl> + + if ( index > = field _ 78032 _ a . length ) { <nl> + + ItemGroup [ ] tmp = new ItemGroup [ index + 1 ] ; <nl> + + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; <nl> + + field _ 78032 _ a = tmp ; <nl> + } <nl> + + field _ 78032 _ a [ index ] = newGroup ; <nl> + + return index ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch <nl> index 4062f7f . . 737c140 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch <nl> @ @ - 9 , 24 + 9 , 24 @ @ <nl> public static final ItemGroup field _ 78030 _ b = ( new ItemGroup ( 0 , " buildingBlocks " ) { <nl> @ OnlyIn ( Dist . CLIENT ) <nl> public ItemStack func _ 78016 _ d ( ) { <nl> - @ @ - 104 , 7 + 104 , 16 @ @ <nl> + @ @ - 104 , 11 + 104 , 14 @ @ <nl> private EnumEnchantmentType [ ] field _ 111230 _ s = new EnumEnchantmentType [ 0 ] ; <nl> private ItemStack field _ 151245 _ t ; <nl> <nl> + public ItemGroup ( String label ) { <nl> - + this ( field _ 78032 _ a . length , label ) ; <nl> + + this ( - 1 , label ) ; <nl> + } <nl> + <nl> public ItemGroup ( int p _ i1853 _ 1 _ , String p _ i1853 _ 2 _ ) { <nl> - + if ( p _ i1853 _ 1 _ > = field _ 78032 _ a . length ) { <nl> - + ItemGroup [ ] tmp = new ItemGroup [ p _ i1853 _ 1 _ + 1 ] ; <nl> - + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; <nl> - + field _ 78032 _ a = tmp ; <nl> - + } <nl> - this . field _ 78033 _ n = p _ i1853 _ 1 _ ; <nl> + - this . field _ 78033 _ n = p _ i1853 _ 1 _ ; <nl> this . field _ 78034 _ o = p _ i1853 _ 2 _ ; <nl> this . field _ 151245 _ t = ItemStack . field _ 190927 _ a ; <nl> - @ @ - 179 , 11 + 188 , 13 @ @ <nl> + - field _ 78032 _ a [ p _ i1853 _ 1 _ ] = this ; <nl> + + this . field _ 78033 _ n = addGroupSafe ( p _ i1853 _ 1 _ , this ) ; <nl> + } <nl> + <nl> + @ OnlyIn ( Dist . CLIENT ) <nl> + @ @ - 179 , 11 + 182 , 13 @ @ <nl> <nl> @ OnlyIn ( Dist . CLIENT ) <nl> public int func _ 78020 _ k ( ) { <nl> @ @ - 40 , 7 + 40 , 7 @ @ <nl> return this . field _ 78033 _ n < 6 ; <nl> } <nl> <nl> - @ @ - 220 , 4 + 231 , 31 @ @ <nl> + @ @ - 220 , 4 + 225 , 57 @ @ <nl> } <nl> <nl> } <nl> @ @ - 71 , 4 + 71 , 27 @ @ <nl> + public int getLabelColor ( ) { <nl> + return 4210752 ; <nl> + } <nl> + + <nl> + + private static final Object LOCK = new Object ( ) ; <nl> + + <nl> + + public static int getGroupCountSafe ( ) { <nl> + + synchronized ( LOCK ) { <nl> + + return ItemGroup . field _ 78032 _ a . length ; <nl> + + } <nl> + + } <nl> + + <nl> + + private static int addGroupSafe ( int index , ItemGroup newGroup ) { <nl> + + synchronized ( LOCK ) { <nl> + + if ( index = = - 1 ) { <nl> + + index = field _ 78032 _ a . length ; <nl> + + } <nl> + + if ( index > = field _ 78032 _ a . length ) { <nl> + + ItemGroup [ ] tmp = new ItemGroup [ index + 1 ] ; <nl> + + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; <nl> + + field _ 78032 _ a = tmp ; <nl> + + } <nl> + + field _ 78032 _ a [ index ] = newGroup ; <nl> + + return index ; <nl> + + } <nl> + + } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch 
 index bdf570f . . 279af02 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch 
 @ @ - 40 , 7 + 40 , 7 @ @ 
 return this . field _ 78033 _ n < 6 ; 
 } 
 
 - @ @ - 220 , 4 + 225 , 54 @ @ 
 + @ @ - 220 , 4 + 225 , 48 @ @ 
 } 
 
 } 
 @ @ - 72 , 26 + 72 , 20 @ @ 
 + return 4210752 ; 
 + } 
 + 
 - + private static final Object LOCK = new Object ( ) ; 
 - + 
 - + public static int getGroupCountSafe ( ) { 
 - + synchronized ( LOCK ) { 
 - + return ItemGroup . field _ 78032 _ a . length ; 
 - + } 
 + + public static synchronized int getGroupCountSafe ( ) { 
 + + return ItemGroup . field _ 78032 _ a . length ; 
 + } 
 + 
 - + private static int addGroupSafe ( int index , ItemGroup newGroup ) { 
 - + synchronized ( LOCK ) { 
 - + if ( index = = - 1 ) { 
 - + index = field _ 78032 _ a . length ; 
 - + } 
 - + if ( index > = field _ 78032 _ a . length ) { 
 - + ItemGroup [ ] tmp = new ItemGroup [ index + 1 ] ; 
 - + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; 
 - + field _ 78032 _ a = tmp ; 
 - + } 
 - + field _ 78032 _ a [ index ] = newGroup ; 
 - + return index ; 
 + + private static synchronized int addGroupSafe ( int index , ItemGroup newGroup ) { 
 + + if ( index = = - 1 ) { 
 + + index = field _ 78032 _ a . length ; 
 + + } 
 + + if ( index > = field _ 78032 _ a . length ) { 
 + + ItemGroup [ ] tmp = new ItemGroup [ index + 1 ] ; 
 + + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; 
 + + field _ 78032 _ a = tmp ; 
 + } 
 + + field _ 78032 _ a [ index ] = newGroup ; 
 + + return index ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch 
 index 4062f7f . . 737c140 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemGroup . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemGroup . java . patch 
 @ @ - 9 , 24 + 9 , 24 @ @ 
 public static final ItemGroup field _ 78030 _ b = ( new ItemGroup ( 0 , " buildingBlocks " ) { 
 @ OnlyIn ( Dist . CLIENT ) 
 public ItemStack func _ 78016 _ d ( ) { 
 - @ @ - 104 , 7 + 104 , 16 @ @ 
 + @ @ - 104 , 11 + 104 , 14 @ @ 
 private EnumEnchantmentType [ ] field _ 111230 _ s = new EnumEnchantmentType [ 0 ] ; 
 private ItemStack field _ 151245 _ t ; 
 
 + public ItemGroup ( String label ) { 
 - + this ( field _ 78032 _ a . length , label ) ; 
 + + this ( - 1 , label ) ; 
 + } 
 + 
 public ItemGroup ( int p _ i1853 _ 1 _ , String p _ i1853 _ 2 _ ) { 
 - + if ( p _ i1853 _ 1 _ > = field _ 78032 _ a . length ) { 
 - + ItemGroup [ ] tmp = new ItemGroup [ p _ i1853 _ 1 _ + 1 ] ; 
 - + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; 
 - + field _ 78032 _ a = tmp ; 
 - + } 
 - this . field _ 78033 _ n = p _ i1853 _ 1 _ ; 
 + - this . field _ 78033 _ n = p _ i1853 _ 1 _ ; 
 this . field _ 78034 _ o = p _ i1853 _ 2 _ ; 
 this . field _ 151245 _ t = ItemStack . field _ 190927 _ a ; 
 - @ @ - 179 , 11 + 188 , 13 @ @ 
 + - field _ 78032 _ a [ p _ i1853 _ 1 _ ] = this ; 
 + + this . field _ 78033 _ n = addGroupSafe ( p _ i1853 _ 1 _ , this ) ; 
 + } 
 + 
 + @ OnlyIn ( Dist . CLIENT ) 
 + @ @ - 179 , 11 + 182 , 13 @ @ 
 
 @ OnlyIn ( Dist . CLIENT ) 
 public int func _ 78020 _ k ( ) { 
 @ @ - 40 , 7 + 40 , 7 @ @ 
 return this . field _ 78033 _ n < 6 ; 
 } 
 
 - @ @ - 220 , 4 + 231 , 31 @ @ 
 + @ @ - 220 , 4 + 225 , 57 @ @ 
 } 
 
 } 
 @ @ - 71 , 4 + 71 , 27 @ @ 
 + public int getLabelColor ( ) { 
 + return 4210752 ; 
 + } 
 + + 
 + + private static final Object LOCK = new Object ( ) ; 
 + + 
 + + public static int getGroupCountSafe ( ) { 
 + + synchronized ( LOCK ) { 
 + + return ItemGroup . field _ 78032 _ a . length ; 
 + + } 
 + + } 
 + + 
 + + private static int addGroupSafe ( int index , ItemGroup newGroup ) { 
 + + synchronized ( LOCK ) { 
 + + if ( index = = - 1 ) { 
 + + index = field _ 78032 _ a . length ; 
 + + } 
 + + if ( index > = field _ 78032 _ a . length ) { 
 + + ItemGroup [ ] tmp = new ItemGroup [ index + 1 ] ; 
 + + System . arraycopy ( field _ 78032 _ a , 0 , tmp , 0 , field _ 78032 _ a . length ) ; 
 + + field _ 78032 _ a = tmp ; 
 + + } 
 + + field _ 78032 _ a [ index ] = newGroup ; 
 + + return index ; 
 + + } 
 + + } 
 }
