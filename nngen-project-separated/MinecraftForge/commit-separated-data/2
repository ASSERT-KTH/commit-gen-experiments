BLEU SCORE: 0.015284801196484512

TEST MSG: Minor performace improvement when building chunks and rendering blocks
GENERATED MSG: Fixed color disabling not working for forge pipeline . Closes # 2286 .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> index 33b79e5 . . 1c992cc 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> @ @ - 19 , 15 + 19 , 15 @ @ <nl> <nl> package net . minecraftforge . client . model . pipeline ; <nl> <nl> - import net . minecraft . client . renderer . Tessellator ; <nl> import net . minecraft . client . renderer . BufferBuilder ; <nl> import net . minecraft . client . renderer . model . BakedQuad ; <nl> + import net . minecraft . client . renderer . Tessellator ; <nl> + import net . minecraft . client . renderer . vertex . DefaultVertexFormats ; <nl> import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> import net . minecraft . client . renderer . vertex . VertexFormatElement ; <nl> import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraftforge . client . ForgeHooksClient ; <nl> - <nl> import org . apache . commons . lang3 . tuple . Pair ; <nl> <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> @ @ - 120 , 8 + 120 , 14 @ @ public class LightUtil <nl> } <nl> } <nl> <nl> + private static final VertexFormat DEFAULT _ FROM = VertexLighterFlat . withNormal ( DefaultVertexFormats . BLOCK ) ; <nl> + private static final VertexFormat DEFAULT _ TO = DefaultVertexFormats . ITEM ; <nl> + private static final int [ ] DEFAULT _ MAPPING = generateMapping ( DEFAULT _ FROM , DEFAULT _ TO ) ; <nl> public static int [ ] mapFormats ( VertexFormat from , VertexFormat to ) <nl> { <nl> + / / Speedup : in 99 . 99 % this is the mapping , no need to go make a pair , and go through the slower hash map <nl> + if ( from . equals ( DEFAULT _ FROM ) & & to . equals ( DEFAULT _ TO ) ) <nl> + return DEFAULT _ MAPPING ; <nl> return formatMaps . computeIfAbsent ( Pair . of ( from , to ) , pair - > generateMapping ( pair . getLeft ( ) , pair . getRight ( ) ) ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> index c66d39a . . 138655a 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . client . renderer . GameRenderer ; <nl> import net . minecraft . client . renderer . color . BlockColors ; <nl> import net . minecraft . client . renderer . texture . TextureAtlasSprite ; <nl> + import net . minecraft . client . renderer . vertex . DefaultVertexFormats ; <nl> import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> import net . minecraft . client . renderer . vertex . VertexFormatElement ; <nl> import net . minecraft . util . EnumFacing ; <nl> @ @ - 107 , 7 + 108 , 16 @ @ public class VertexLighterFlat extends QuadGatheringTransformer <nl> updateIndices ( ) ; <nl> } <nl> <nl> - private static VertexFormat withNormal ( VertexFormat format ) <nl> + private static final VertexFormat BLOCK _ WITH _ NORMAL = withNormalUncached ( DefaultVertexFormats . BLOCK ) ; <nl> + static VertexFormat withNormal ( VertexFormat format ) <nl> + { <nl> + / / This is the case in 99 . 99 % . Cache the value , so we don ' t have to redo it every time , and the speed up the equals check in LightUtil <nl> + if ( format = = DefaultVertexFormats . BLOCK ) <nl> + return BLOCK _ WITH _ NORMAL ; <nl> + return withNormalUncached ( format ) ; <nl> + } <nl> + <nl> + private static VertexFormat withNormalUncached ( VertexFormat format ) <nl> { <nl> if ( format = = null | | format . hasNormal ( ) ) return format ; <nl> return new VertexFormat ( format ) . addElement ( NORMAL _ 4F ) ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> index 4b2f9e3 . . 65b5937 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / renderer / WorldRenderer . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / renderer / WorldRenderer . java <nl> - @ @ - 578 , 6 + 578 , 11 @ @ <nl> + @ @ - 578 , 6 + 578 , 16 @ @ <nl> } <nl> } <nl> <nl> @ @ - 9 , 6 + 9 , 11 @ @ <nl> + this . func _ 181670 _ b ( field _ 179011 _ q . func _ 177338 _ f ( ) / * / 4 * 4 * / ) ; <nl> + } <nl> + <nl> + + public boolean isColorDisabled ( ) <nl> + + { <nl> + + return field _ 78939 _ q ; <nl> + + } <nl> + + <nl> @ SideOnly ( Side . CLIENT ) <nl> public class State <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java b / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java <nl> index fea7dff . . 3d268bf 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . Arrays ; <nl> <nl> import net . minecraft . client . renderer . WorldRenderer ; <nl> import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> + import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; <nl> import net . minecraft . util . BlockPos ; <nl> import net . minecraft . util . EnumFacing ; <nl> <nl> @ @ - 12 , 6 + 13 , 7 @ @ import net . minecraft . util . EnumFacing ; <nl> * / <nl> public class WorldRendererConsumer implements IVertexConsumer <nl> { <nl> + private static final float [ ] dummyColor = new float [ ] { 1 , 1 , 1 , 1 } ; <nl> private final WorldRenderer renderer ; <nl> private final int [ ] quadData ; <nl> private int v = 0 ; <nl> @ @ - 31 , 8 + 33 , 13 @ @ public class WorldRendererConsumer implements IVertexConsumer <nl> <nl> public void put ( int e , float . . . data ) <nl> { <nl> - LightUtil . pack ( data , quadData , getVertexFormat ( ) , v , e ) ; <nl> - if ( e = = getVertexFormat ( ) . getElementCount ( ) - 1 ) <nl> + VertexFormat format = getVertexFormat ( ) ; <nl> + if ( renderer . isColorDisabled ( ) & & format . getElement ( e ) . getUsage ( ) = = EnumUsage . COLOR ) <nl> + { <nl> + data = dummyColor ; <nl> + } <nl> + LightUtil . pack ( data , quadData , format , v , e ) ; <nl> + if ( e = = format . getElementCount ( ) - 1 ) <nl> { <nl> v + + ; <nl> if ( v = = 4 )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 index 33b79e5 . . 1c992cc 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 @ @ - 19 , 15 + 19 , 15 @ @ 
 
 package net . minecraftforge . client . model . pipeline ; 
 
 - import net . minecraft . client . renderer . Tessellator ; 
 import net . minecraft . client . renderer . BufferBuilder ; 
 import net . minecraft . client . renderer . model . BakedQuad ; 
 + import net . minecraft . client . renderer . Tessellator ; 
 + import net . minecraft . client . renderer . vertex . DefaultVertexFormats ; 
 import net . minecraft . client . renderer . vertex . VertexFormat ; 
 import net . minecraft . client . renderer . vertex . VertexFormatElement ; 
 import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraftforge . client . ForgeHooksClient ; 
 - 
 import org . apache . commons . lang3 . tuple . Pair ; 
 
 import java . util . concurrent . ConcurrentHashMap ; 
 @ @ - 120 , 8 + 120 , 14 @ @ public class LightUtil 
 } 
 } 
 
 + private static final VertexFormat DEFAULT _ FROM = VertexLighterFlat . withNormal ( DefaultVertexFormats . BLOCK ) ; 
 + private static final VertexFormat DEFAULT _ TO = DefaultVertexFormats . ITEM ; 
 + private static final int [ ] DEFAULT _ MAPPING = generateMapping ( DEFAULT _ FROM , DEFAULT _ TO ) ; 
 public static int [ ] mapFormats ( VertexFormat from , VertexFormat to ) 
 { 
 + / / Speedup : in 99 . 99 % this is the mapping , no need to go make a pair , and go through the slower hash map 
 + if ( from . equals ( DEFAULT _ FROM ) & & to . equals ( DEFAULT _ TO ) ) 
 + return DEFAULT _ MAPPING ; 
 return formatMaps . computeIfAbsent ( Pair . of ( from , to ) , pair - > generateMapping ( pair . getLeft ( ) , pair . getRight ( ) ) ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 index c66d39a . . 138655a 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . client . renderer . GameRenderer ; 
 import net . minecraft . client . renderer . color . BlockColors ; 
 import net . minecraft . client . renderer . texture . TextureAtlasSprite ; 
 + import net . minecraft . client . renderer . vertex . DefaultVertexFormats ; 
 import net . minecraft . client . renderer . vertex . VertexFormat ; 
 import net . minecraft . client . renderer . vertex . VertexFormatElement ; 
 import net . minecraft . util . EnumFacing ; 
 @ @ - 107 , 7 + 108 , 16 @ @ public class VertexLighterFlat extends QuadGatheringTransformer 
 updateIndices ( ) ; 
 } 
 
 - private static VertexFormat withNormal ( VertexFormat format ) 
 + private static final VertexFormat BLOCK _ WITH _ NORMAL = withNormalUncached ( DefaultVertexFormats . BLOCK ) ; 
 + static VertexFormat withNormal ( VertexFormat format ) 
 + { 
 + / / This is the case in 99 . 99 % . Cache the value , so we don ' t have to redo it every time , and the speed up the equals check in LightUtil 
 + if ( format = = DefaultVertexFormats . BLOCK ) 
 + return BLOCK _ WITH _ NORMAL ; 
 + return withNormalUncached ( format ) ; 
 + } 
 + 
 + private static VertexFormat withNormalUncached ( VertexFormat format ) 
 { 
 if ( format = = null | | format . hasNormal ( ) ) return format ; 
 return new VertexFormat ( format ) . addElement ( NORMAL _ 4F ) ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 index 4b2f9e3 . . 65b5937 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / renderer / WorldRenderer . java 
 + + + . . / src - work / minecraft / net / minecraft / client / renderer / WorldRenderer . java 
 - @ @ - 578 , 6 + 578 , 11 @ @ 
 + @ @ - 578 , 6 + 578 , 16 @ @ 
 } 
 } 
 
 @ @ - 9 , 6 + 9 , 11 @ @ 
 + this . func _ 181670 _ b ( field _ 179011 _ q . func _ 177338 _ f ( ) / * / 4 * 4 * / ) ; 
 + } 
 + 
 + + public boolean isColorDisabled ( ) 
 + + { 
 + + return field _ 78939 _ q ; 
 + + } 
 + + 
 @ SideOnly ( Side . CLIENT ) 
 public class State 
 { 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java b / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java 
 index fea7dff . . 3d268bf 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / WorldRendererConsumer . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . Arrays ; 
 
 import net . minecraft . client . renderer . WorldRenderer ; 
 import net . minecraft . client . renderer . vertex . VertexFormat ; 
 + import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; 
 import net . minecraft . util . BlockPos ; 
 import net . minecraft . util . EnumFacing ; 
 
 @ @ - 12 , 6 + 13 , 7 @ @ import net . minecraft . util . EnumFacing ; 
 * / 
 public class WorldRendererConsumer implements IVertexConsumer 
 { 
 + private static final float [ ] dummyColor = new float [ ] { 1 , 1 , 1 , 1 } ; 
 private final WorldRenderer renderer ; 
 private final int [ ] quadData ; 
 private int v = 0 ; 
 @ @ - 31 , 8 + 33 , 13 @ @ public class WorldRendererConsumer implements IVertexConsumer 
 
 public void put ( int e , float . . . data ) 
 { 
 - LightUtil . pack ( data , quadData , getVertexFormat ( ) , v , e ) ; 
 - if ( e = = getVertexFormat ( ) . getElementCount ( ) - 1 ) 
 + VertexFormat format = getVertexFormat ( ) ; 
 + if ( renderer . isColorDisabled ( ) & & format . getElement ( e ) . getUsage ( ) = = EnumUsage . COLOR ) 
 + { 
 + data = dummyColor ; 
 + } 
 + LightUtil . pack ( data , quadData , format , v , e ) ; 
 + if ( e = = format . getElementCount ( ) - 1 ) 
 { 
 v + + ; 
 if ( v = = 4 )
