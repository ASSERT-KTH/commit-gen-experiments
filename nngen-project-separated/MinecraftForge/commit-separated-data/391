BLEU SCORE: 0.019648763141608138

TEST MSG: Fix some broken test mods
GENERATED MSG: Disabled erroring block , fixed DynBucketTest . TestItem model .

TEST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> index b6bb3ef . . b23e1c0 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> @ @ - 75 , 7 + 75 , 7 @ @ public class DynBucketTest <nl> private static final ResourceLocation simpleTankName = new ResourceLocation ( MODID , " simpletank " ) ; <nl> private static final ResourceLocation testItemName = new ResourceLocation ( MODID , " testitem " ) ; <nl> <nl> - private static final boolean ENABLE = true ; <nl> + private static final boolean ENABLE = false ; <nl> private static Logger logger ; <nl> <nl> @ ObjectHolder ( " testitem " ) <nl> @ @ - 96 , 14 + 96 , 14 @ @ public class DynBucketTest <nl> } <nl> <nl> @ SubscribeEvent <nl> - public void registrBlocks ( RegistryEvent . Register < Block > event ) <nl> + public void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> event . getRegistry ( ) . register ( new BlockSimpleTank ( ) . setRegistryName ( simpleTankName ) ) ; <nl> GameRegistry . registerTileEntity ( TileSimpleTank . class , " simpletank " ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> - public void registrItems ( RegistryEvent . Register < Item > event ) <nl> + public void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> FluidRegistry . addBucketForFluid ( FluidRegistry . getFluid ( TestFluid . name ) ) ; <nl> FluidRegistry . addBucketForFluid ( FluidRegistry . getFluid ( TestGas . name ) ) ; <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class DynBucketTest <nl> } <nl> <nl> @ SubscribeEvent <nl> - public void registrRecipes ( RegistryEvent . Register < IRecipe > event ) <nl> + public void registerRecipes ( RegistryEvent . Register < IRecipe > event ) <nl> { <nl> ItemStack filledBucket = FluidUtil . getFilledBucket ( new FluidStack ( ModelFluidDebug . FLUID , Fluid . BUCKET _ VOLUME ) ) ; <nl> GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " diamond _ to _ fluid " ) , null , filledBucket , Ingredient . fromItem ( Items . DIAMOND ) ) ; <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class DynBucketTest <nl> { <nl> logger = event . getModLog ( ) ; <nl> <nl> - if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> + if ( ENABLE & & ModelFluidDebug . ENABLE ) <nl> { <nl> MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> } <nl> @ @ - 168 , 6 + 168 , 8 @ @ public class DynBucketTest <nl> @ SubscribeEvent <nl> public static void setupModels ( ModelRegistryEvent event ) <nl> { <nl> + if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) return ; <nl> + <nl> ModelLoader . setBucketModelDefinition ( DYN _ BOTTLE ) ; <nl> <nl> final ModelResourceLocation bottle = new ModelResourceLocation ( new ResourceLocation ( ForgeVersion . MOD _ ID , " dynbottle " ) , " inventory " ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java <nl> index 63fc19f . . c643df2 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java <nl> @ @ - 30 , 10 + 30 , 10 @ @ public class ModelFluidDebug <nl> public static final String MODID = " forgedebugmodelfluid " ; <nl> public static final String VERSION = " 1 . 0 " ; <nl> <nl> - public static final boolean ENABLE = true ; <nl> - private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " fluid " ) ; <nl> - private static ModelResourceLocation gasLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " gas " ) ; <nl> - private static ModelResourceLocation milkLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " milk " ) ; <nl> + public static final boolean ENABLE = false ; <nl> + private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID + " : " + TestFluidBlock . name , " fluid " ) ; <nl> + private static ModelResourceLocation gasLocation = new ModelResourceLocation ( MODID + " : " + TestFluidBlock . name , " gas " ) ; <nl> + private static ModelResourceLocation milkLocation = new ModelResourceLocation ( MODID + " : " + TestFluidBlock . name , " milk " ) ; <nl> @ ObjectHolder ( TestFluidBlock . name ) <nl> public static final Block FLUID _ BLOCK = null ; <nl> @ ObjectHolder ( TestFluidBlock . name )
NEAREST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> index 360d802 . . 167acd6 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ public class DynBucketTest <nl> } ) ; <nl> ModelBakery . registerItemVariants ( dynBottle , bottle ) ; <nl> ModelLoader . setCustomModelResourceLocation ( Item . getItemFromBlock ( GameRegistry . findBlock ( MODID , " simpletank " ) ) , 0 , new ModelResourceLocation ( new ResourceLocation ( MODID , " simpletank " ) , " normal " ) ) ; <nl> + ModelLoader . setCustomModelResourceLocation ( GameRegistry . findItem ( MODID , " testitem " ) , 0 , new ModelResourceLocation ( new ResourceLocation ( " minecraft " , " stick " ) , " inventory " ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> index f8de9ec . . 492b9cb 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class ForgeBlockStatesLoaderDebug { <nl> public static final String MODID = " ForgeBlockStatesLoader " ; <nl> public static final String ASSETS = " forgeblockstatesloader : " ; <nl> <nl> - public static final Block blockCustom = new CustomMappedBlock ( ) ; <nl> + / / public static final Block blockCustom = new CustomMappedBlock ( ) ; <nl> public static final String nameCustomWall = " custom _ wall " ; <nl> public static final BlockWall blockCustomWall = new BlockWall ( Blocks . cobblestone ) ; <nl> public static final ItemMultiTexture itemCustomWall = ( ItemMultiTexture ) new ItemMultiTexture ( blockCustomWall , blockCustomWall , new Function < ItemStack , String > ( ) <nl> @ @ - 50 , 8 + 50 , 8 @ @ public class ForgeBlockStatesLoaderDebug { <nl> @ EventHandler <nl> public void preInit ( FMLPreInitializationEvent event ) <nl> { <nl> - blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) . setRegistryName ( " customBlock " ) ; <nl> - GameRegistry . registerBlock ( blockCustom ) ; <nl> + / / blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) . setRegistryName ( " customBlock " ) ; <nl> + / / GameRegistry . registerBlock ( blockCustom ) ; <nl> <nl> blockCustomWall . setUnlocalizedName ( MODID + " . customWall " ) . setRegistryName ( nameCustomWall ) ; <nl> GameRegistry . registerBlock ( blockCustomWall , ( Class < ? extends ItemBlock > ) null ) ; <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class ForgeBlockStatesLoaderDebug { <nl> @ SideOnly ( Side . CLIENT ) <nl> public void preInitClient ( FMLPreInitializationEvent event ) <nl> { <nl> - ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; <nl> + / / ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; <nl> <nl> ModelLoader . setCustomStateMapper ( blockCustomWall , new IStateMapper ( ) <nl> { <nl> @ @ - 91 , 7 + 91 , 8 @ @ public class ForgeBlockStatesLoaderDebug { <nl> } <nl> <nl> / / this block is never actually used , it ' s only needed for the error message on load to see the variant it maps to <nl> - public static class CustomMappedBlock extends Block <nl> + / / disabling until we can make it a proper test <nl> + / * public static class CustomMappedBlock extends Block <nl> { <nl> public static final PropertyEnum < CustomVariant > VARIANT = PropertyEnum . create ( " type " , CustomVariant . class ) ; <nl> <nl> @ @ - 127 , 5 + 128 , 5 @ @ public class ForgeBlockStatesLoaderDebug { <nl> <nl> public String getName ( ) { return this . toString ( ) ; } ; <nl> } <nl> - } <nl> + } * / <nl> }

TEST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 index b6bb3ef . . b23e1c0 100644 
 - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 @ @ - 75 , 7 + 75 , 7 @ @ public class DynBucketTest 
 private static final ResourceLocation simpleTankName = new ResourceLocation ( MODID , " simpletank " ) ; 
 private static final ResourceLocation testItemName = new ResourceLocation ( MODID , " testitem " ) ; 
 
 - private static final boolean ENABLE = true ; 
 + private static final boolean ENABLE = false ; 
 private static Logger logger ; 
 
 @ ObjectHolder ( " testitem " ) 
 @ @ - 96 , 14 + 96 , 14 @ @ public class DynBucketTest 
 } 
 
 @ SubscribeEvent 
 - public void registrBlocks ( RegistryEvent . Register < Block > event ) 
 + public void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 event . getRegistry ( ) . register ( new BlockSimpleTank ( ) . setRegistryName ( simpleTankName ) ) ; 
 GameRegistry . registerTileEntity ( TileSimpleTank . class , " simpletank " ) ; 
 } 
 
 @ SubscribeEvent 
 - public void registrItems ( RegistryEvent . Register < Item > event ) 
 + public void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 FluidRegistry . addBucketForFluid ( FluidRegistry . getFluid ( TestFluid . name ) ) ; 
 FluidRegistry . addBucketForFluid ( FluidRegistry . getFluid ( TestGas . name ) ) ; 
 @ @ - 116 , 7 + 116 , 7 @ @ public class DynBucketTest 
 } 
 
 @ SubscribeEvent 
 - public void registrRecipes ( RegistryEvent . Register < IRecipe > event ) 
 + public void registerRecipes ( RegistryEvent . Register < IRecipe > event ) 
 { 
 ItemStack filledBucket = FluidUtil . getFilledBucket ( new FluidStack ( ModelFluidDebug . FLUID , Fluid . BUCKET _ VOLUME ) ) ; 
 GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " diamond _ to _ fluid " ) , null , filledBucket , Ingredient . fromItem ( Items . DIAMOND ) ) ; 
 @ @ - 128 , 7 + 128 , 7 @ @ public class DynBucketTest 
 { 
 logger = event . getModLog ( ) ; 
 
 - if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 + if ( ENABLE & & ModelFluidDebug . ENABLE ) 
 { 
 MinecraftForge . EVENT _ BUS . register ( this ) ; 
 } 
 @ @ - 168 , 6 + 168 , 8 @ @ public class DynBucketTest 
 @ SubscribeEvent 
 public static void setupModels ( ModelRegistryEvent event ) 
 { 
 + if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) return ; 
 + 
 ModelLoader . setBucketModelDefinition ( DYN _ BOTTLE ) ; 
 
 final ModelResourceLocation bottle = new ModelResourceLocation ( new ResourceLocation ( ForgeVersion . MOD _ ID , " dynbottle " ) , " inventory " ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java 
 index 63fc19f . . c643df2 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java 
 @ @ - 30 , 10 + 30 , 10 @ @ public class ModelFluidDebug 
 public static final String MODID = " forgedebugmodelfluid " ; 
 public static final String VERSION = " 1 . 0 " ; 
 
 - public static final boolean ENABLE = true ; 
 - private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " fluid " ) ; 
 - private static ModelResourceLocation gasLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " gas " ) ; 
 - private static ModelResourceLocation milkLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " milk " ) ; 
 + public static final boolean ENABLE = false ; 
 + private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID + " : " + TestFluidBlock . name , " fluid " ) ; 
 + private static ModelResourceLocation gasLocation = new ModelResourceLocation ( MODID + " : " + TestFluidBlock . name , " gas " ) ; 
 + private static ModelResourceLocation milkLocation = new ModelResourceLocation ( MODID + " : " + TestFluidBlock . name , " milk " ) ; 
 @ ObjectHolder ( TestFluidBlock . name ) 
 public static final Block FLUID _ BLOCK = null ; 
 @ ObjectHolder ( TestFluidBlock . name )

NEAREST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 index 360d802 . . 167acd6 100644 
 - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 @ @ - 87 , 6 + 87 , 7 @ @ public class DynBucketTest 
 } ) ; 
 ModelBakery . registerItemVariants ( dynBottle , bottle ) ; 
 ModelLoader . setCustomModelResourceLocation ( Item . getItemFromBlock ( GameRegistry . findBlock ( MODID , " simpletank " ) ) , 0 , new ModelResourceLocation ( new ResourceLocation ( MODID , " simpletank " ) , " normal " ) ) ; 
 + ModelLoader . setCustomModelResourceLocation ( GameRegistry . findItem ( MODID , " testitem " ) , 0 , new ModelResourceLocation ( new ResourceLocation ( " minecraft " , " stick " ) , " inventory " ) ) ; 
 } 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 index f8de9ec . . 492b9cb 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class ForgeBlockStatesLoaderDebug { 
 public static final String MODID = " ForgeBlockStatesLoader " ; 
 public static final String ASSETS = " forgeblockstatesloader : " ; 
 
 - public static final Block blockCustom = new CustomMappedBlock ( ) ; 
 + / / public static final Block blockCustom = new CustomMappedBlock ( ) ; 
 public static final String nameCustomWall = " custom _ wall " ; 
 public static final BlockWall blockCustomWall = new BlockWall ( Blocks . cobblestone ) ; 
 public static final ItemMultiTexture itemCustomWall = ( ItemMultiTexture ) new ItemMultiTexture ( blockCustomWall , blockCustomWall , new Function < ItemStack , String > ( ) 
 @ @ - 50 , 8 + 50 , 8 @ @ public class ForgeBlockStatesLoaderDebug { 
 @ EventHandler 
 public void preInit ( FMLPreInitializationEvent event ) 
 { 
 - blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) . setRegistryName ( " customBlock " ) ; 
 - GameRegistry . registerBlock ( blockCustom ) ; 
 + / / blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) . setRegistryName ( " customBlock " ) ; 
 + / / GameRegistry . registerBlock ( blockCustom ) ; 
 
 blockCustomWall . setUnlocalizedName ( MODID + " . customWall " ) . setRegistryName ( nameCustomWall ) ; 
 GameRegistry . registerBlock ( blockCustomWall , ( Class < ? extends ItemBlock > ) null ) ; 
 @ @ - 65 , 7 + 65 , 7 @ @ public class ForgeBlockStatesLoaderDebug { 
 @ SideOnly ( Side . CLIENT ) 
 public void preInitClient ( FMLPreInitializationEvent event ) 
 { 
 - ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; 
 + / / ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; 
 
 ModelLoader . setCustomStateMapper ( blockCustomWall , new IStateMapper ( ) 
 { 
 @ @ - 91 , 7 + 91 , 8 @ @ public class ForgeBlockStatesLoaderDebug { 
 } 
 
 / / this block is never actually used , it ' s only needed for the error message on load to see the variant it maps to 
 - public static class CustomMappedBlock extends Block 
 + / / disabling until we can make it a proper test 
 + / * public static class CustomMappedBlock extends Block 
 { 
 public static final PropertyEnum < CustomVariant > VARIANT = PropertyEnum . create ( " type " , CustomVariant . class ) ; 
 
 @ @ - 127 , 5 + 128 , 5 @ @ public class ForgeBlockStatesLoaderDebug { 
 
 public String getName ( ) { return this . toString ( ) ; } ; 
 } 
 - } 
 + } * / 
 }
