BLEU SCORE: 0.002895550264181247

TEST MSG: Fix ModDiscoverer ignoring inner classes .
GENERATED MSG: Moved transformer wrappers to a separate package ( should fix signing errors ) , fixed debug mods not loading in forgedev ( string comparison ) .

TEST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java b / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java <nl> index 4608233 . . 2ed403c 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ public class DirectoryDiscoverer implements ITypeDiscoverer <nl> @ Override <nl> public boolean accept ( File file ) <nl> { <nl> - return ( file . isFile ( ) & & classFile . matcher ( file . getName ( ) ) . find ( ) ) | | file . isDirectory ( ) ; <nl> + return ( file . isFile ( ) & & classFile . matcher ( file . getName ( ) ) . matches ( ) ) | | file . isDirectory ( ) ; <nl> } <nl> } <nl> <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java <nl> index 144526a . . 844d21b 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ import net . minecraftforge . fml . common . ModContainer ; <nl> <nl> public interface ITypeDiscoverer <nl> { <nl> - public static Pattern classFile = Pattern . compile ( " ( [ ^ \ \ s $ ] + ) . class $ " ) ; <nl> + public static Pattern classFile = Pattern . compile ( " [ ^ \ \ s ] + \ \ . class $ " ) ; <nl> <nl> public List < ModContainer > discover ( ModCandidate candidate , ASMDataTable table ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java b / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java <nl> index c0f6091 . . a389421 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java <nl> @ @ - 67 , 7 + 67 , 7 @ @ public class ModClassLoader extends URLClassLoader <nl> for ( URL url : mainClassLoader . getSources ( ) ) <nl> { <nl> URI uri = url . toURI ( ) ; <nl> - if ( uri . getScheme ( ) = = " file " ) <nl> + if ( uri . getScheme ( ) . equals ( " file " ) ) <nl> { <nl> files . add ( new File ( uri ) ) ; <nl> } <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java b / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java <nl> index 4e14e6e . . dd9d76c 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java <nl> @ @ - 103 , 14 + 103 , 7 @ @ public class ASMTransformerWrapper <nl> @ Override <nl> public InputStream getInputStream ( ) <nl> { <nl> - try <nl> - { <nl> - return new ByteArrayInputStream ( wrapperCache . get ( file ) ) ; <nl> - } <nl> - catch ( ExecutionException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + return new ByteArrayInputStream ( wrapperCache . getUnchecked ( file ) ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 182 , 7 + 175 , 7 @ @ public class ASMTransformerWrapper <nl> <nl> private static String getWrapperName ( String parentClass ) <nl> { <nl> - return parentClass + " _ $ Wrapper " ; <nl> + return " $ wrapper . " + parentClass ; <nl> } <nl> <nl> private static class WrapperVisitor extends ClassVisitor

TEST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java b / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java 
 index 4608233 . . 2ed403c 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java 
 @ @ - 38 , 7 + 38 , 7 @ @ public class DirectoryDiscoverer implements ITypeDiscoverer 
 @ Override 
 public boolean accept ( File file ) 
 { 
 - return ( file . isFile ( ) & & classFile . matcher ( file . getName ( ) ) . find ( ) ) | | file . isDirectory ( ) ; 
 + return ( file . isFile ( ) & & classFile . matcher ( file . getName ( ) ) . matches ( ) ) | | file . isDirectory ( ) ; 
 } 
 } 
 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java 
 index 144526a . . 844d21b 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java 
 @ @ - 19 , 7 + 19 , 7 @ @ import net . minecraftforge . fml . common . ModContainer ; 
 
 public interface ITypeDiscoverer 
 { 
 - public static Pattern classFile = Pattern . compile ( " ( [ ^ \ \ s $ ] + ) . class $ " ) ; 
 + public static Pattern classFile = Pattern . compile ( " [ ^ \ \ s ] + \ \ . class $ " ) ; 
 
 public List < ModContainer > discover ( ModCandidate candidate , ASMDataTable table ) ; 
 }

NEAREST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java b / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java 
 index c0f6091 . . a389421 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java 
 @ @ - 67 , 7 + 67 , 7 @ @ public class ModClassLoader extends URLClassLoader 
 for ( URL url : mainClassLoader . getSources ( ) ) 
 { 
 URI uri = url . toURI ( ) ; 
 - if ( uri . getScheme ( ) = = " file " ) 
 + if ( uri . getScheme ( ) . equals ( " file " ) ) 
 { 
 files . add ( new File ( uri ) ) ; 
 } 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java b / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java 
 index 4e14e6e . . dd9d76c 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / asm / ASMTransformerWrapper . java 
 @ @ - 103 , 14 + 103 , 7 @ @ public class ASMTransformerWrapper 
 @ Override 
 public InputStream getInputStream ( ) 
 { 
 - try 
 - { 
 - return new ByteArrayInputStream ( wrapperCache . get ( file ) ) ; 
 - } 
 - catch ( ExecutionException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + return new ByteArrayInputStream ( wrapperCache . getUnchecked ( file ) ) ; 
 } 
 
 @ Override 
 @ @ - 182 , 7 + 175 , 7 @ @ public class ASMTransformerWrapper 
 
 private static String getWrapperName ( String parentClass ) 
 { 
 - return parentClass + " _ $ Wrapper " ; 
 + return " $ wrapper . " + parentClass ; 
 } 
 
 private static class WrapperVisitor extends ClassVisitor
