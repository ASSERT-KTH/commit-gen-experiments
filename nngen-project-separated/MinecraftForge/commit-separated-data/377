BLEU SCORE: 0.027385973411104613

TEST MSG: Continue loading mod recipes and advancements after encountering an error
GENERATED MSG: Fixed invalid erroring case during loading Advancements form mods that don ' t have advancements .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 0bbde91 . . bd10bd0 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 1334 , 7 + 1334 , 7 @ @ public class ForgeHooks <nl> <nl> return true ; <nl> } , <nl> - true <nl> + true , true <nl> ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index 0c4bdb8 . . 1650add 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 726 , 17 + 726 , 31 @ @ public class CraftingHelper { <nl> IOUtils . closeQuietly ( reader ) ; <nl> } <nl> return true ; <nl> - } <nl> + } , <nl> + true , true <nl> ) ; <nl> } <nl> <nl> - <nl> + / * * <nl> + * @ deprecated Use { @ link CraftingHelper # findFiles ( ModContainer , String , Function , BiFunction , boolean , boolean ) } instead . <nl> + * / <nl> + @ Deprecated <nl> public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor ) <nl> { <nl> - return findFiles ( mod , base , preprocessor , processor , false ) ; <nl> + return findFiles ( mod , base , preprocessor , processor , false , false ) ; <nl> } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link CraftingHelper # findFiles ( ModContainer , String , Function , BiFunction , boolean , boolean ) } instead . <nl> + * / <nl> + @ Deprecated <nl> public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot ) <nl> { <nl> + return findFiles ( mod , base , preprocessor , processor , defaultUnfoundRoot , false ) ; <nl> + } <nl> + <nl> + public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot , boolean visitAllFiles ) <nl> + { <nl> FileSystem fs = null ; <nl> try <nl> { <nl> @ @ - 788 , 6 + 802 , 8 @ @ public class CraftingHelper { <nl> return false ; <nl> } <nl> <nl> + boolean success = true ; <nl> + <nl> if ( processor ! = null ) <nl> { <nl> Iterator < Path > itr = null ; <nl> @ @ - 804 , 12 + 820 , 19 @ @ public class CraftingHelper { <nl> while ( itr ! = null & & itr . hasNext ( ) ) <nl> { <nl> Boolean cont = processor . apply ( root , itr . next ( ) ) ; <nl> - if ( cont = = null | | ! cont . booleanValue ( ) ) <nl> + <nl> + if ( visitAllFiles ) <nl> + { <nl> + success & = cont ! = null & & cont ; <nl> + } <nl> + else if ( cont = = null | | ! cont ) <nl> + { <nl> return false ; <nl> + } <nl> } <nl> } <nl> <nl> - return true ; <nl> + return success ; <nl> } <nl> finally <nl> { <nl> diff - - git a / src / test / resources / assets / crafting _ system _ test / recipes / oak _ planks _ from _ logs . json b / src / test / resources / assets / crafting _ system _ test / recipes / oak _ planks _ from _ logs . json <nl> new file mode 100644 <nl> index 0000000 . . 9c4f51d <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / crafting _ system _ test / recipes / oak _ planks _ from _ logs . json <nl> @ @ - 0 , 0 + 1 , 22 @ @ <nl> + { <nl> + " _ comment " : [ <nl> + " Cut an Oak Log into two Oak Planks with a Wooden Axe " <nl> + ] , <nl> + " type " : " minecraft : crafting _ shapeless " , <nl> + " group " : " minecraft : planks " , <nl> + " ingredients " : [ <nl> + { <nl> + " item " : " minecraft : wooden _ axe " , <nl> + " data " : 32767 <nl> + } , <nl> + { <nl> + " item " : " minecraft : log " , <nl> + " data " : 0 <nl> + } <nl> + ] , <nl> + " result " : { <nl> + " item " : " minecraft : planks " , <nl> + " data " : 0 , <nl> + " count " : 2 <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 80b9376 . . 542a662 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 1305 , 7 + 1305 , 8 @ @ public class ForgeHooks <nl> } <nl> <nl> return true ; <nl> - } <nl> + } , <nl> + true <nl> ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index b470caf . . df78433 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 727 , 13 + 727 , 20 @ @ public class CraftingHelper { <nl> <nl> public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor ) <nl> { <nl> + return findFiles ( mod , base , preprocessor , processor , false ) ; <nl> + } <nl> + public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot ) <nl> + { <nl> FileSystem fs = null ; <nl> try <nl> { <nl> File source = mod . getSource ( ) ; <nl> <nl> - if ( " minecraft " . equals ( mod . getModId ( ) ) & & DEBUG _ LOAD _ MINECRAFT ) <nl> + if ( " minecraft " . equals ( mod . getModId ( ) ) ) <nl> { <nl> + if ( ! DEBUG _ LOAD _ MINECRAFT ) <nl> + return true ; <nl> + <nl> try <nl> { <nl> URI tmp = CraftingManager . class . getResource ( " / assets / . mcassetsroot " ) . toURI ( ) ; <nl> @ @ - 766 , 7 + 773 , 7 @ @ public class CraftingHelper { <nl> } <nl> <nl> if ( root = = null | | ! Files . exists ( root ) ) <nl> - return false ; <nl> + return defaultUnfoundRoot ; <nl> <nl> if ( preprocessor ! = null ) <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 0bbde91 . . bd10bd0 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 1334 , 7 + 1334 , 7 @ @ public class ForgeHooks 
 
 return true ; 
 } , 
 - true 
 + true , true 
 ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index 0c4bdb8 . . 1650add 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 726 , 17 + 726 , 31 @ @ public class CraftingHelper { 
 IOUtils . closeQuietly ( reader ) ; 
 } 
 return true ; 
 - } 
 + } , 
 + true , true 
 ) ; 
 } 
 
 - 
 + / * * 
 + * @ deprecated Use { @ link CraftingHelper # findFiles ( ModContainer , String , Function , BiFunction , boolean , boolean ) } instead . 
 + * / 
 + @ Deprecated 
 public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor ) 
 { 
 - return findFiles ( mod , base , preprocessor , processor , false ) ; 
 + return findFiles ( mod , base , preprocessor , processor , false , false ) ; 
 } 
 + 
 + / * * 
 + * @ deprecated Use { @ link CraftingHelper # findFiles ( ModContainer , String , Function , BiFunction , boolean , boolean ) } instead . 
 + * / 
 + @ Deprecated 
 public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot ) 
 { 
 + return findFiles ( mod , base , preprocessor , processor , defaultUnfoundRoot , false ) ; 
 + } 
 + 
 + public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot , boolean visitAllFiles ) 
 + { 
 FileSystem fs = null ; 
 try 
 { 
 @ @ - 788 , 6 + 802 , 8 @ @ public class CraftingHelper { 
 return false ; 
 } 
 
 + boolean success = true ; 
 + 
 if ( processor ! = null ) 
 { 
 Iterator < Path > itr = null ; 
 @ @ - 804 , 12 + 820 , 19 @ @ public class CraftingHelper { 
 while ( itr ! = null & & itr . hasNext ( ) ) 
 { 
 Boolean cont = processor . apply ( root , itr . next ( ) ) ; 
 - if ( cont = = null | | ! cont . booleanValue ( ) ) 
 + 
 + if ( visitAllFiles ) 
 + { 
 + success & = cont ! = null & & cont ; 
 + } 
 + else if ( cont = = null | | ! cont ) 
 + { 
 return false ; 
 + } 
 } 
 } 
 
 - return true ; 
 + return success ; 
 } 
 finally 
 { 
 diff - - git a / src / test / resources / assets / crafting _ system _ test / recipes / oak _ planks _ from _ logs . json b / src / test / resources / assets / crafting _ system _ test / recipes / oak _ planks _ from _ logs . json 
 new file mode 100644 
 index 0000000 . . 9c4f51d 
 - - - / dev / null 
 + + + b / src / test / resources / assets / crafting _ system _ test / recipes / oak _ planks _ from _ logs . json 
 @ @ - 0 , 0 + 1 , 22 @ @ 
 + { 
 + " _ comment " : [ 
 + " Cut an Oak Log into two Oak Planks with a Wooden Axe " 
 + ] , 
 + " type " : " minecraft : crafting _ shapeless " , 
 + " group " : " minecraft : planks " , 
 + " ingredients " : [ 
 + { 
 + " item " : " minecraft : wooden _ axe " , 
 + " data " : 32767 
 + } , 
 + { 
 + " item " : " minecraft : log " , 
 + " data " : 0 
 + } 
 + ] , 
 + " result " : { 
 + " item " : " minecraft : planks " , 
 + " data " : 0 , 
 + " count " : 2 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 80b9376 . . 542a662 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 1305 , 7 + 1305 , 8 @ @ public class ForgeHooks 
 } 
 
 return true ; 
 - } 
 + } , 
 + true 
 ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index b470caf . . df78433 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 727 , 13 + 727 , 20 @ @ public class CraftingHelper { 
 
 public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor ) 
 { 
 + return findFiles ( mod , base , preprocessor , processor , false ) ; 
 + } 
 + public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot ) 
 + { 
 FileSystem fs = null ; 
 try 
 { 
 File source = mod . getSource ( ) ; 
 
 - if ( " minecraft " . equals ( mod . getModId ( ) ) & & DEBUG _ LOAD _ MINECRAFT ) 
 + if ( " minecraft " . equals ( mod . getModId ( ) ) ) 
 { 
 + if ( ! DEBUG _ LOAD _ MINECRAFT ) 
 + return true ; 
 + 
 try 
 { 
 URI tmp = CraftingManager . class . getResource ( " / assets / . mcassetsroot " ) . toURI ( ) ; 
 @ @ - 766 , 7 + 773 , 7 @ @ public class CraftingHelper { 
 } 
 
 if ( root = = null | | ! Files . exists ( root ) ) 
 - return false ; 
 + return defaultUnfoundRoot ; 
 
 if ( preprocessor ! = null ) 
 {
