BLEU SCORE: 0.017081056798999895

TEST MSG: added PotionHooks , closes # 3867 , # 4375
GENERATED MSG: Added LivingKnockBackEvent event to allow better control over knock back effects .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index e0e29ec . . b6bccf4 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 88 , 7 + 88 , 33 @ @ <nl> public Collection < PotionEffect > func _ 70651 _ bq ( ) { <nl> return this . field _ 70713 _ bf . values ( ) ; <nl> } <nl> - @ @ - 714 , 6 + 743 , 8 @ @ <nl> + @ @ - 644 , 6 + 673 , 7 @ @ <nl> + return false ; <nl> + } else { <nl> + PotionEffect potioneffect = this . field _ 70713 _ bf . get ( p _ 195064 _ 1 _ . func _ 188419 _ a ( ) ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . PotionEvent . PotionAddedEvent ( this , potioneffect , p _ 195064 _ 1 _ ) ) ; <nl> + if ( potioneffect = = null ) { <nl> + this . field _ 70713 _ bf . put ( p _ 195064 _ 1 _ . func _ 188419 _ a ( ) , p _ 195064 _ 1 _ ) ; <nl> + this . func _ 70670 _ a ( p _ 195064 _ 1 _ ) ; <nl> + @ @ - 658 , 6 + 688 , 9 @ @ <nl> + } <nl> + <nl> + public boolean func _ 70687 _ e ( PotionEffect p _ 70687 _ 1 _ ) { <nl> + + net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent event = new net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent ( this , p _ 70687 _ 1 _ ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + + if ( event . getResult ( ) ! = net . minecraftforge . eventbus . api . Event . Result . DEFAULT ) return event . getResult ( ) = = net . minecraftforge . eventbus . api . Event . Result . ALLOW ; <nl> + if ( this . func _ 70668 _ bt ( ) = = CreatureAttribute . UNDEAD ) { <nl> + Potion potion = p _ 70687 _ 1 _ . func _ 188419 _ a ( ) ; <nl> + if ( potion = = MobEffects . field _ 76428 _ l | | potion = = MobEffects . field _ 76436 _ u ) { <nl> + @ @ - 678 , 6 + 711 , 7 @ @ <nl> + } <nl> + <nl> + public boolean func _ 195063 _ d ( Potion p _ 195063 _ 1 _ ) { <nl> + + if ( net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . PotionEvent . PotionRemoveEvent ( this , p _ 195063 _ 1 _ ) ) ) return false ; <nl> + PotionEffect potioneffect = this . func _ 184596 _ c ( p _ 195063 _ 1 _ ) ; <nl> + if ( potioneffect ! = null ) { <nl> + this . func _ 70688 _ c ( potioneffect ) ; <nl> + @ @ - 714 , 6 + 748 , 8 @ @ <nl> } <nl> <nl> public void func _ 70691 _ i ( float p _ 70691 _ 1 _ ) { <nl> @ @ - 97 , 7 + 123 , 7 @ @ <nl> float f = this . func _ 110143 _ aJ ( ) ; <nl> if ( f > 0 . 0F ) { <nl> this . func _ 70606 _ j ( f + p _ 70691 _ 1 _ ) ; <nl> - @ @ - 730 , 6 + 761 , 7 @ @ <nl> + @ @ - 730 , 6 + 766 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) { <nl> @ @ - 105 , 7 + 131 , 7 @ @ <nl> if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) { <nl> return false ; <nl> } else if ( this . field _ 70170 _ p . field _ 72995 _ K ) { <nl> - @ @ - 790 , 8 + 822 , 8 @ @ <nl> + @ @ - 790 , 8 + 827 , 8 @ @ <nl> if ( entity1 instanceof EntityPlayer ) { <nl> this . field _ 70718 _ bc = 100 ; <nl> this . field _ 70717 _ bb = ( EntityPlayer ) entity1 ; <nl> @ @ - 116 , 7 + 142 , 7 @ @ <nl> if ( entitywolf . func _ 70909 _ n ( ) ) { <nl> this . field _ 70718 _ bc = 100 ; <nl> this . field _ 70717 _ bb = null ; <nl> - @ @ - 941 , 11 + 973 , 12 @ @ <nl> + @ @ - 941 , 11 + 978 , 12 @ @ <nl> } <nl> <nl> public void func _ 70669 _ a ( ItemStack p _ 70669 _ 1 _ ) { <nl> @ @ - 130 , 7 + 156 , 7 @ @ <nl> if ( ! this . field _ 70729 _ aU ) { <nl> Entity entity = p _ 70645 _ 1 _ . func _ 76346 _ g ( ) ; <nl> EntityLivingBase entitylivingbase = this . func _ 94060 _ bK ( ) ; <nl> - @ @ - 960 , 15 + 993 , 16 @ @ <nl> + @ @ - 960 , 15 + 998 , 16 @ @ <nl> this . field _ 70729 _ aU = true ; <nl> this . func _ 110142 _ aN ( ) . func _ 94549 _ h ( ) ; <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) { <nl> @ @ - 151 , 7 + 177 , 7 @ @ <nl> } <nl> <nl> this . field _ 70170 _ p . func _ 72960 _ a ( this , ( byte ) 3 ) ; <nl> - @ @ - 984 , 6 + 1018 , 9 @ @ <nl> + @ @ - 984 , 6 + 1023 , 9 @ @ <nl> } <nl> <nl> public void func _ 70653 _ a ( Entity p _ 70653 _ 1 _ , float p _ 70653 _ 2 _ , double p _ 70653 _ 3 _ , double p _ 70653 _ 5 _ ) { <nl> @ @ - 161 , 7 + 187 , 7 @ @ <nl> if ( ! ( this . field _ 70146 _ Z . nextDouble ( ) < this . func _ 110148 _ a ( SharedMonsterAttributes . field _ 111266 _ c ) . func _ 111126 _ e ( ) ) ) { <nl> this . field _ 70160 _ al = true ; <nl> float f = MathHelper . func _ 76133 _ a ( p _ 70653 _ 3 _ * p _ 70653 _ 3 _ + p _ 70653 _ 5 _ * p _ 70653 _ 5 _ ) ; <nl> - @ @ - 1028 , 12 + 1065 , 7 @ @ <nl> + @ @ - 1028 , 12 + 1070 , 7 @ @ <nl> } else { <nl> BlockPos blockpos = new BlockPos ( i , j , k ) ; <nl> IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( blockpos ) ; <nl> @ @ - 175 , 7 + 201 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1053 , 6 + 1085 , 9 @ @ <nl> + @ @ - 1053 , 6 + 1090 , 9 @ @ <nl> } <nl> <nl> public void func _ 180430 _ e ( float p _ 180430 _ 1 _ , float p _ 180430 _ 2 _ ) { <nl> @ @ - 185 , 7 + 211 , 7 @ @ <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> PotionEffect potioneffect = this . func _ 70660 _ b ( MobEffects . field _ 76430 _ j ) ; <nl> float f = potioneffect = = null ? 0 . 0F : ( float ) ( potioneffect . func _ 76458 _ c ( ) + 1 ) ; <nl> - @ @ - 1065 , 7 + 1100 , 7 @ @ <nl> + @ @ - 1065 , 7 + 1105 , 7 @ @ <nl> int l = MathHelper . func _ 76128 _ c ( this . field _ 70161 _ v ) ; <nl> IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( new BlockPos ( j , k , l ) ) ; <nl> if ( ! iblockstate . func _ 196958 _ f ( ) ) { <nl> @ @ - 194 , 7 + 220 , 7 @ @ <nl> this . func _ 184185 _ a ( soundtype . func _ 185842 _ g ( ) , soundtype . func _ 185843 _ a ( ) * 0 . 5F , soundtype . func _ 185847 _ b ( ) * 0 . 75F ) ; <nl> } <nl> } <nl> - @ @ - 1134 , 6 + 1169 , 8 @ @ <nl> + @ @ - 1134 , 6 + 1174 , 8 @ @ <nl> <nl> protected void func _ 70665 _ d ( DamageSource p _ 70665 _ 1 _ , float p _ 70665 _ 2 _ ) { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) { <nl> @ @ - 203 , 7 + 229 , 7 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70655 _ b ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> - @ @ - 1144 , 10 + 1181 , 11 @ @ <nl> + @ @ - 1144 , 10 + 1186 , 11 @ @ <nl> ( ( EntityPlayerMP ) p _ 70665 _ 1 _ . func _ 76346 _ g ( ) ) . func _ 195067 _ a ( StatList . field _ 212735 _ F , Math . round ( f1 * 10 . 0F ) ) ; <nl> } <nl> <nl> @ @ - 216 , 7 + 242 , 7 @ @ <nl> this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - p _ 70665 _ 2 _ ) ; <nl> } <nl> } <nl> - @ @ - 1189 , 6 + 1227 , 8 @ @ <nl> + @ @ - 1189 , 6 + 1232 , 8 @ @ <nl> } <nl> <nl> public void func _ 184609 _ a ( EnumHand p _ 184609 _ 1 _ ) { <nl> @ @ - 225 , 7 + 251 , 7 @ @ <nl> if ( ! this . field _ 82175 _ bq | | this . field _ 110158 _ av > = this . func _ 82166 _ i ( ) / 2 | | this . field _ 110158 _ av < 0 ) { <nl> this . field _ 110158 _ av = - 1 ; <nl> this . field _ 82175 _ bq = true ; <nl> - @ @ - 1373 , 18 + 1413 , 18 @ @ <nl> + @ @ - 1373 , 18 + 1418 , 18 @ @ <nl> double d12 = d6 + d10 ; <nl> AxisAlignedBB axisalignedbb1 = axisalignedbb . func _ 72317 _ d ( d9 , 0 . 0D , d10 ) ; <nl> if ( this . field _ 70170 _ p . func _ 195586 _ b ( this , axisalignedbb1 ) ) { <nl> @ @ - 247 , 7 + 273 , 7 @ @ <nl> d1 = d11 ; <nl> d13 = this . field _ 70163 _ u + 2 . 0D ; <nl> d14 = d12 ; <nl> - @ @ - 1439 , 15 + 1479 , 16 @ @ <nl> + @ @ - 1439 , 15 + 1484 , 16 @ @ <nl> } <nl> <nl> this . field _ 70160 _ al = true ; <nl> @ @ - 266 , 7 + 292 , 7 @ @ <nl> } <nl> <nl> protected float func _ 189749 _ co ( ) { <nl> - @ @ - 1518 , 7 + 1559 , 7 @ @ <nl> + @ @ - 1518 , 7 + 1564 , 7 @ @ <nl> <nl> try ( BlockPos . PooledMutableBlockPos blockpos $ pooledmutableblockpos = BlockPos . PooledMutableBlockPos . func _ 185345 _ c ( this . field _ 70165 _ t , this . func _ 174813 _ aQ ( ) . field _ 72338 _ b - 1 . 0D , this . field _ 70161 _ v ) ) { <nl> if ( this . field _ 70122 _ E ) { <nl> @ @ - 275 , 7 + 301 , 7 @ @ <nl> } <nl> <nl> float f8 = 0 . 16277137F / ( f7 * f7 * f7 ) ; <nl> - @ @ - 1532 , 7 + 1573 , 7 @ @ <nl> + @ @ - 1532 , 7 + 1578 , 7 @ @ <nl> this . func _ 191958 _ b ( p _ 191986 _ 1 _ , p _ 191986 _ 2 _ , p _ 191986 _ 3 _ , f9 ) ; <nl> f7 = 0 . 91F ; <nl> if ( this . field _ 70122 _ E ) { <nl> @ @ - 284 , 7 + 310 , 7 @ @ <nl> } <nl> <nl> if ( this . func _ 70617 _ f _ ( ) ) { <nl> - @ @ - 1663 , 6 + 1704 , 7 @ @ <nl> + @ @ - 1663 , 6 + 1709 , 7 @ @ <nl> } <nl> <nl> public void func _ 70071 _ h _ ( ) { <nl> @ @ - 292 , 7 + 318 , 7 @ @ <nl> super . func _ 70071 _ h _ ( ) ; <nl> this . func _ 184608 _ ct ( ) ; <nl> this . func _ 205014 _ p ( ) ; <nl> - @ @ - 1694 , 7 + 1736 , 9 @ @ <nl> + @ @ - 1694 , 7 + 1741 , 9 @ @ <nl> <nl> ItemStack itemstack1 = this . func _ 184582 _ a ( entityequipmentslot ) ; <nl> if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) { <nl> @ @ - 302 , 7 + 328 , 7 @ @ <nl> if ( ! itemstack . func _ 190926 _ b ( ) ) { <nl> this . func _ 110140 _ aT ( ) . func _ 111148 _ a ( itemstack . func _ 111283 _ C ( entityequipmentslot ) ) ; <nl> } <nl> - @ @ - 2134 , 11 + 2178 , 18 @ @ <nl> + @ @ - 2134 , 11 + 2183 , 18 @ @ <nl> protected void func _ 184608 _ ct ( ) { <nl> if ( this . func _ 184587 _ cr ( ) ) { <nl> if ( this . func _ 184586 _ b ( this . func _ 184600 _ cs ( ) ) = = this . field _ 184627 _ bm ) { <nl> @ @ - 322 , 7 + 348 , 7 @ @ <nl> this . func _ 71036 _ o ( ) ; <nl> } <nl> } else { <nl> - @ @ - 2172 , 8 + 2223 , 10 @ @ <nl> + @ @ - 2172 , 8 + 2228 , 10 @ @ <nl> public void func _ 184598 _ c ( EnumHand p _ 184598 _ 1 _ ) { <nl> ItemStack itemstack = this . func _ 184586 _ b ( p _ 184598 _ 1 _ ) ; <nl> if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) { <nl> @ @ - 334 , 7 + 360 , 7 @ @ <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) { <nl> this . func _ 204802 _ c ( 1 , true ) ; <nl> this . func _ 204802 _ c ( 2 , p _ 184598 _ 1 _ = = EnumHand . OFF _ HAND ) ; <nl> - @ @ - 2229 , 6 + 2282 , 9 @ @ <nl> + @ @ - 2229 , 6 + 2287 , 9 @ @ <nl> vec3d1 = vec3d1 . func _ 178789 _ a ( - this . field _ 70125 _ A * ( ( float ) Math . PI / 180F ) ) ; <nl> vec3d1 = vec3d1 . func _ 178785 _ b ( - this . field _ 70177 _ z * ( ( float ) Math . PI / 180F ) ) ; <nl> vec3d1 = vec3d1 . func _ 72441 _ c ( this . field _ 70165 _ t , this . field _ 70163 _ u + ( double ) this . func _ 70047 _ e ( ) , this . field _ 70161 _ v ) ; <nl> @ @ - 344 , 7 + 370 , 7 @ @ <nl> this . field _ 70170 _ p . func _ 195594 _ a ( new ItemParticleData ( Particles . field _ 197591 _ B , p _ 195062 _ 1 _ ) , vec3d1 . field _ 72450 _ a , vec3d1 . field _ 72448 _ b , vec3d1 . field _ 72449 _ c , vec3d . field _ 72450 _ a , vec3d . field _ 72448 _ b + 0 . 05D , vec3d . field _ 72449 _ c ) ; <nl> } <nl> <nl> - @ @ - 2237 , 7 + 2293 , 9 @ @ <nl> + @ @ - 2237 , 7 + 2298 , 9 @ @ <nl> protected void func _ 71036 _ o ( ) { <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) { <nl> this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; <nl> @ @ - 355 , 7 + 381 , 7 @ @ <nl> this . func _ 184602 _ cy ( ) ; <nl> } <nl> <nl> - @ @ - 2257 , 6 + 2315 , 7 @ @ <nl> + @ @ - 2257 , 6 + 2320 , 7 @ @ <nl> <nl> public void func _ 184597 _ cx ( ) { <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) { <nl> @ @ - 363 , 7 + 389 , 7 @ @ <nl> this . field _ 184627 _ bm . func _ 77974 _ b ( this . field _ 70170 _ p , this , this . func _ 184605 _ cv ( ) ) ; <nl> } <nl> <nl> - @ @ - 2363 , 4 + 2422 , 62 @ @ <nl> + @ @ - 2363 , 4 + 2427 , 62 @ @ <nl> @ OnlyIn ( Dist . CLIENT ) <nl> public void func _ 191987 _ a ( BlockPos p _ 191987 _ 1 _ , boolean p _ 191987 _ 2 _ ) { <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / monster / EntitySpider . java . patch b / patches / minecraft / net / minecraft / entity / monster / EntitySpider . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 1db8c20 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / monster / EntitySpider . java . patch <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + - - - a / net / minecraft / entity / monster / EntitySpider . java <nl> + + + + b / net / minecraft / entity / monster / EntitySpider . java <nl> + @ @ - 120 , 7 + 120 , 12 @ @ <nl> + } <nl> + <nl> + public boolean func _ 70687 _ e ( PotionEffect p _ 70687 _ 1 _ ) { <nl> + - return p _ 70687 _ 1 _ . func _ 188419 _ a ( ) = = MobEffects . field _ 76436 _ u ? false : super . func _ 70687 _ e ( p _ 70687 _ 1 _ ) ; <nl> + + if ( p _ 70687 _ 1 _ . func _ 188419 _ a ( ) = = MobEffects . field _ 76436 _ u ) { <nl> + + net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent event = new net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent ( this , p _ 70687 _ 1 _ ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + + return event . getResult ( ) = = net . minecraftforge . eventbus . api . Event . Result . ALLOW ; <nl> + + } <nl> + + return super . func _ 70687 _ e ( p _ 70687 _ 1 _ ) ; <nl> + } <nl> + <nl> + public boolean func _ 70841 _ p ( ) { <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / PotionEvent . java b / src / main / java / net / minecraftforge / event / entity / living / PotionEvent . java <nl> new file mode 100644 <nl> index 0000000 . . e320407 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / PotionEvent . java <nl> @ @ - 0 , 0 + 1 , 150 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 - 2018 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import javax . annotation . Nonnull ; <nl> + import javax . annotation . Nullable ; <nl> + <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . potion . Potion ; <nl> + import net . minecraft . potion . PotionEffect ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . eventbus . api . Cancelable ; <nl> + <nl> + / * * <nl> + * This Event and its subevents gets fired from { @ link EntityLivingBase } on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> + * / <nl> + public class PotionEvent extends LivingEvent <nl> + { <nl> + @ Nullable <nl> + protected final PotionEffect effect ; <nl> + <nl> + public PotionEvent ( EntityLivingBase living , PotionEffect effect ) <nl> + { <nl> + super ( living ) ; <nl> + this . effect = effect ; <nl> + } <nl> + / * * <nl> + * Retuns the PotionEffect . <nl> + * / <nl> + @ Nullable <nl> + public PotionEffect getPotionEffect ( ) <nl> + { <nl> + return effect ; <nl> + } <nl> + <nl> + / * * <nl> + * This Event is fired when a Potion is about to get removed from an Entity . <nl> + * This Event is { @ link Cancelable } . <nl> + * This Event does not have a result . <nl> + * / <nl> + @ Cancelable <nl> + public static class PotionRemoveEvent extends PotionEvent <nl> + { <nl> + private final Potion potion ; <nl> + <nl> + public PotionRemoveEvent ( EntityLivingBase living , Potion potion ) <nl> + { <nl> + super ( living , living . getActivePotionMap ( ) . get ( potion ) ) ; <nl> + this . potion = potion ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the Potion which is tried to remove from the Entity . <nl> + * / <nl> + public Potion getPotion ( ) <nl> + { <nl> + return this . potion ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the PotionEffect . In the remove event this can be null if the Entity does not have a { @ link Potion } of the right type active . <nl> + * / <nl> + @ Override <nl> + @ Nullable <nl> + public PotionEffect getPotionEffect ( ) <nl> + { <nl> + return super . getPotionEffect ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * This Event is fired to check if a Potion can get applied to an Entity . <nl> + * This Event is not { @ link Cancelable } <nl> + * This Event has a result { @ link HasResult } . <nl> + * ALLOW will apply this potion effect . <nl> + * DENY will not apply this potion effect . <nl> + * DEFAULT will run vanilla logic to determine if this potion isApplicable . <nl> + * / <nl> + @ HasResult <nl> + public static class PotionApplicableEvent extends PotionEvent <nl> + { <nl> + public PotionApplicableEvent ( EntityLivingBase living , PotionEffect effect ) <nl> + { <nl> + super ( living , effect ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the PotionEffect . <nl> + * / <nl> + @ Override <nl> + @ Nonnull <nl> + public PotionEffect getPotionEffect ( ) <nl> + { <nl> + return super . getPotionEffect ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * This Event is fired when a new Potion is added to the Entity . This is also fired if the Entity already has this effect but with different duration / level . <nl> + * This Event is not { @ link Cancelable } <nl> + * This Event does not have a Result . <nl> + * / <nl> + public static class PotionAddedEvent extends PotionEvent <nl> + { <nl> + private final PotionEffect oldEffect ; <nl> + <nl> + public PotionAddedEvent ( EntityLivingBase living , PotionEffect oldEffect , PotionEffect newEffect ) <nl> + { <nl> + super ( living , newEffect ) ; <nl> + this . oldEffect = oldEffect ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the added PotionEffect . This is the umerged PotionEffect if the old PotionEffect is not null . <nl> + * / <nl> + @ Override <nl> + @ Nonnull <nl> + public PotionEffect getPotionEffect ( ) <nl> + { <nl> + return super . getPotionEffect ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the old PotionEffect . THis can be null if the entity did not have an effect of this kind before . <nl> + * / <nl> + @ Nullable <nl> + public PotionEffect getOldPotionEffect ( ) <nl> + { <nl> + return oldEffect ; <nl> + } <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / PotionEventTest . java b / src / test / java / net / minecraftforge / debug / PotionEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . 1cb254a <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / PotionEventTest . java <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 - 2018 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . living . PotionEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event . Result ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " potioneventtest " , name = " PotionEventTest " , version = " 1 . 0 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class PotionEventTest <nl> + { <nl> + public static final boolean ENABLE = false ; <nl> + private Logger log ; <nl> + <nl> + @ EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + log = event . getModLog ( ) ; <nl> + } <nl> + <nl> + @ EventHandler <nl> + public void init ( FMLInitializationEvent event ) <nl> + { <nl> + if ( ENABLE ) <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onPotionAdded ( PotionEvent . PotionAddedEvent event ) <nl> + { <nl> + log . info ( " { } has a new PotionEffect { } , the old one was { } " , event . getEntityLiving ( ) , event . getPotionEffect ( ) , event . getOldPotionEffect ( ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void isPotionApplicable ( PotionEvent . PotionApplicableEvent event ) <nl> + { <nl> + event . setResult ( Result . ALLOW ) ; <nl> + log . info ( " Allowed Potion { } for Entity { } " , event . getPotionEffect ( ) , event . getEntityLiving ( ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onPotionRemove ( PotionEvent . PotionRemoveEvent event ) <nl> + { <nl> + log . info ( " Effect { } got Removed from { } " , event . getPotionEffect ( ) , event . getEntityLiving ( ) ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index 14d6815 . . 294442c 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 141 , 7 + 141 , 17 @ @ <nl> } <nl> <nl> this . field _ 70170 _ p . func _ 72960 _ a ( this , ( byte ) 3 ) ; <nl> - @ @ - 1253 , 15 + 1273 , 7 @ @ <nl> + @ @ - 1195 , 6 + 1215 , 9 @ @ <nl> + <nl> + public void func _ 70653 _ a ( Entity p _ 70653 _ 1 _ , float p _ 70653 _ 2 _ , double p _ 70653 _ 3 _ , double p _ 70653 _ 5 _ ) <nl> + { <nl> + + net . minecraftforge . event . entity . living . LivingKnockBackEvent event = net . minecraftforge . common . ForgeHooks . onLivingKnockBack ( this , p _ 70653 _ 1 _ , p _ 70653 _ 2 _ , p _ 70653 _ 3 _ , p _ 70653 _ 5 _ ) ; <nl> + + if ( event . isCanceled ( ) ) return ; <nl> + + p _ 70653 _ 2 _ = event . getStrength ( ) ; p _ 70653 _ 3 _ = event . getRatioX ( ) ; p _ 70653 _ 5 _ = event . getRatioZ ( ) ; <nl> + if ( this . field _ 70146 _ Z . nextDouble ( ) > = this . func _ 110148 _ a ( SharedMonsterAttributes . field _ 111266 _ c ) . func _ 111126 _ e ( ) ) <nl> + { <nl> + this . field _ 70160 _ al = true ; <nl> + @ @ - 1253 , 15 + 1276 , 7 @ @ <nl> BlockPos blockpos = new BlockPos ( i , j , k ) ; <nl> IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( blockpos ) ; <nl> Block block = iblockstate . func _ 177230 _ c ( ) ; <nl> @ @ - 158 , 7 + 168 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1287 , 6 + 1299 , 9 @ @ <nl> + @ @ - 1287 , 6 + 1302 , 9 @ @ <nl> <nl> public void func _ 180430 _ e ( float p _ 180430 _ 1 _ , float p _ 180430 _ 2 _ ) <nl> { <nl> @ @ - 168 , 7 + 178 , 7 @ @ <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> PotionEffect potioneffect = this . func _ 70660 _ b ( MobEffects . field _ 76430 _ j ) ; <nl> float f = potioneffect = = null ? 0 . 0F : ( float ) ( potioneffect . func _ 76458 _ c ( ) + 1 ) ; <nl> - @ @ - 1303 , 7 + 1318 , 7 @ @ <nl> + @ @ - 1303 , 7 + 1321 , 7 @ @ <nl> <nl> if ( iblockstate . func _ 185904 _ a ( ) ! = Material . field _ 151579 _ a ) <nl> { <nl> @ @ - 177 , 7 + 187 , 7 @ @ <nl> this . func _ 184185 _ a ( soundtype . func _ 185842 _ g ( ) , soundtype . func _ 185843 _ a ( ) * 0 . 5F , soundtype . func _ 185847 _ b ( ) * 0 . 75F ) ; <nl> } <nl> } <nl> - @ @ - 1380 , 17 + 1395 , 20 @ @ <nl> + @ @ - 1380 , 17 + 1398 , 20 @ @ <nl> { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) <nl> { <nl> @ @ - 199 , 7 + 209 , 7 @ @ <nl> this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - p _ 70665 _ 2 _ ) ; <nl> } <nl> } <nl> - @ @ - 1447 , 6 + 1465 , 11 @ @ <nl> + @ @ - 1447 , 6 + 1468 , 11 @ @ <nl> <nl> public void func _ 184609 _ a ( EnumHand p _ 184609 _ 1 _ ) <nl> { <nl> @ @ - 211 , 7 + 221 , 7 @ @ <nl> if ( ! this . field _ 82175 _ bq | | this . field _ 110158 _ av > = this . func _ 82166 _ i ( ) / 2 | | this . field _ 110158 _ av < 0 ) <nl> { <nl> this . field _ 110158 _ av = - 1 ; <nl> - @ @ - 1694 , 7 + 1717 , 7 @ @ <nl> + @ @ - 1694 , 7 + 1720 , 7 @ @ <nl> <nl> if ( ! this . field _ 70170 _ p . func _ 184143 _ b ( axisalignedbb1 ) ) <nl> { <nl> @ @ - 220 , 7 + 230 , 7 @ @ <nl> { <nl> this . func _ 70634 _ a ( d11 , this . field _ 70163 _ u + 1 . 0D , d12 ) ; <nl> return ; <nl> - @ @ - 1702 , 14 + 1725 , 14 @ @ <nl> + @ @ - 1702 , 14 + 1728 , 14 @ @ <nl> <nl> BlockPos blockpos = new BlockPos ( d11 , this . field _ 70163 _ u - 1 . 0D , d12 ) ; <nl> <nl> @ @ - 237 , 7 + 247 , 7 @ @ <nl> { <nl> d1 = d11 ; <nl> d13 = this . field _ 70163 _ u + 2 . 0D ; <nl> - @ @ - 1781 , 6 + 1804 , 7 @ @ <nl> + @ @ - 1781 , 6 + 1807 , 7 @ @ <nl> } <nl> <nl> this . field _ 70160 _ al = true ; <nl> @ @ - 245 , 7 + 255 , 7 @ @ <nl> } <nl> <nl> protected void func _ 70629 _ bd ( ) <nl> - @ @ - 1874 , 7 + 1898 , 8 @ @ <nl> + @ @ - 1874 , 7 + 1901 , 8 @ @ <nl> <nl> if ( this . field _ 70122 _ E ) <nl> { <nl> @ @ - 255 , 7 + 265 , 7 @ @ <nl> } <nl> <nl> float f7 = 0 . 16277136F / ( f6 * f6 * f6 ) ; <nl> - @ @ - 1894 , 7 + 1919 , 8 @ @ <nl> + @ @ - 1894 , 7 + 1922 , 8 @ @ <nl> <nl> if ( this . field _ 70122 _ E ) <nl> { <nl> @ @ - 265 , 7 + 275 , 7 @ @ <nl> } <nl> <nl> if ( this . func _ 70617 _ f _ ( ) ) <nl> - @ @ - 2054 , 6 + 2080 , 7 @ @ <nl> + @ @ - 2054 , 6 + 2083 , 7 @ @ <nl> <nl> public void func _ 70071 _ h _ ( ) <nl> { <nl> @ @ - 273 , 7 + 283 , 7 @ @ <nl> super . func _ 70071 _ h _ ( ) ; <nl> this . func _ 184608 _ ct ( ) ; <nl> <nl> - @ @ - 2096 , 7 + 2123 , 9 @ @ <nl> + @ @ - 2096 , 7 + 2126 , 9 @ @ <nl> <nl> if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) <nl> { <nl> @ @ - 283 , 7 + 293 , 7 @ @ <nl> <nl> if ( ! itemstack . func _ 190926 _ b ( ) ) <nl> { <nl> - @ @ - 2575 , 6 + 2604 , 40 @ @ <nl> + @ @ - 2575 , 6 + 2607 , 40 @ @ <nl> this . field _ 70752 _ e = true ; <nl> } <nl> <nl> @ @ - 324 , 7 + 334 , 7 @ @ <nl> public abstract EnumHandSide func _ 184591 _ cq ( ) ; <nl> <nl> public boolean func _ 184587 _ cr ( ) <nl> - @ @ - 2595 , 12 + 2658 , 19 @ @ <nl> + @ @ - 2595 , 12 + 2661 , 19 @ @ <nl> <nl> if ( itemstack = = this . field _ 184627 _ bm ) <nl> { <nl> @ @ - 345 , 7 + 355 , 7 @ @ <nl> { <nl> this . func _ 71036 _ o ( ) ; <nl> } <nl> - @ @ - 2618 , 8 + 2688 , 10 @ @ <nl> + @ @ - 2618 , 8 + 2691 , 10 @ @ <nl> <nl> if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) <nl> { <nl> @ @ - 357 , 7 + 367 , 7 @ @ <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> { <nl> - @ @ - 2700 , 7 + 2772 , 9 @ @ <nl> + @ @ - 2700 , 7 + 2775 , 9 @ @ <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) <nl> { <nl> this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; <nl> @ @ - 368 , 7 + 378 , 7 @ @ <nl> this . func _ 184602 _ cy ( ) ; <nl> } <nl> } <nl> - @ @ - 2724 , 7 + 2798 , 8 @ @ <nl> + @ @ - 2724 , 7 + 2801 , 8 @ @ <nl> { <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> @ @ - 378 , 7 + 388 , 7 @ @ <nl> } <nl> <nl> this . func _ 184602 _ cy ( ) ; <nl> - @ @ - 2852 , 6 + 2927 , 31 @ @ <nl> + @ @ - 2852 , 6 + 2930 , 31 @ @ <nl> return true ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 355ba51 . . 1396139 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 120 , 6 + 120 , 7 @ @ import net . minecraftforge . event . entity . living . LivingEvent . LivingJumpEvent ; <nl> import net . minecraftforge . event . entity . living . LivingEvent . LivingUpdateEvent ; <nl> import net . minecraftforge . event . entity . living . LivingFallEvent ; <nl> import net . minecraftforge . event . entity . living . LivingHurtEvent ; <nl> + import net . minecraftforge . event . entity . living . LivingKnockBackEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSetAttackTargetEvent ; <nl> import net . minecraftforge . event . entity . living . LootingLevelEvent ; <nl> import net . minecraftforge . event . entity . player . AnvilRepairEvent ; <nl> @ @ - 560 , 6 + 561 , 13 @ @ public class ForgeHooks <nl> return ! MinecraftForge . EVENT _ BUS . post ( new LivingAttackEvent ( entity , src , amount ) ) ; <nl> } <nl> <nl> + public static LivingKnockBackEvent onLivingKnockBack ( EntityLivingBase target , Entity attacker , float strength , double ratioX , double ratioZ ) <nl> + { <nl> + LivingKnockBackEvent event = new LivingKnockBackEvent ( target , attacker , strength , ratioX , ratioZ ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return event ; <nl> + } <nl> + <nl> public static float onLivingHurt ( EntityLivingBase entity , DamageSource src , float amount ) <nl> { <nl> LivingHurtEvent event = new LivingHurtEvent ( entity , src , amount ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingKnockBackEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingKnockBackEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 138c7ab <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingKnockBackEvent . java <nl> @ @ - 0 , 0 + 1 , 95 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2017 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . entity . monster . EntityMob ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . util . DamageSource ; <nl> + import net . minecraftforge . common . ForgeHooks ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + <nl> + / * * <nl> + * LivingKnockBackEvent is fired when a living entity is about to be knocked back . < br > <nl> + * This event is fired whenever an Entity is knocked back in <nl> + * { @ link EntityLivingBase # attackEntityFrom ( DamageSource , float ) } , <nl> + * { @ link EntityLivingBase # blockWithShield ( EntityLivingBase ) } , <nl> + * { @ link EntityMob # attackEntityAsMob ( Entity ) } and <nl> + * { @ link EntityPlayer # attackTargetEntityWithCurrentItem ( Entity ) } < br > <nl> + * < br > <nl> + * This event is fired via { @ link ForgeHooks # onLivingKnockBack ( EntityLivingBase , Entity , float , double , double ) } . < br > <nl> + * < br > <nl> + * { @ link # attacker } contains the Entity that caused the knock back . < br > <nl> + * { @ link # strength } contains the strength of the knock back . < br > <nl> + * { @ link # ratioX } contains the x ratio of the knock back . < br > <nl> + * { @ link # ratioZ } contains the z ratio of the knock back . < br > <nl> + * < br > <nl> + * This event is { @ link Cancelable } . < br > <nl> + * If this event is canceled , the entity is not knocked back . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . <nl> + * * / <nl> + @ Cancelable <nl> + public class LivingKnockBackEvent extends LivingEvent <nl> + { <nl> + protected Entity attacker ; <nl> + protected float strength ; <nl> + protected double ratioX , ratioZ ; <nl> + protected final Entity originalAttacker ; <nl> + protected final float originalStrength ; <nl> + protected final double originalRatioX , originalRatioZ ; <nl> + <nl> + public LivingKnockBackEvent ( EntityLivingBase target , Entity attacker , float strength , double ratioX , double ratioZ ) <nl> + { <nl> + super ( target ) ; <nl> + this . attacker = this . originalAttacker = attacker ; <nl> + this . strength = this . originalStrength = strength ; <nl> + this . ratioX = this . originalRatioX = ratioX ; <nl> + this . ratioZ = this . originalRatioZ = ratioZ ; <nl> + } <nl> + <nl> + public Entity getAttacker ( ) { return this . attacker ; } <nl> + <nl> + public float getStrength ( ) { return this . strength ; } <nl> + <nl> + public double getRatioX ( ) { return this . ratioX ; } <nl> + <nl> + public double getRatioZ ( ) { return this . ratioZ ; } <nl> + <nl> + public Entity getOriginalAttacker ( ) { return this . originalAttacker ; } <nl> + <nl> + public float getOriginalStrength ( ) { return this . originalStrength ; } <nl> + <nl> + public double getOriginalRatioX ( ) { return this . originalRatioX ; } <nl> + <nl> + public double getOriginalRatioZ ( ) { return this . originalRatioZ ; } <nl> + <nl> + public void setAttacker ( Entity attacker ) { this . attacker = attacker ; } <nl> + <nl> + public void setStrength ( float strength ) { this . strength = strength ; } <nl> + <nl> + public void setRatioX ( double ratioX ) { this . ratioX = ratioX ; } <nl> + <nl> + public void setRatioZ ( double ratioZ ) { this . ratioZ = ratioZ ; } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / java / net / minecraftforge / debug / KnockBackHookTest . java b / src / test / java / net / minecraftforge / debug / KnockBackHookTest . java <nl> new file mode 100644 <nl> index 0000000 . . a494ec8 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / KnockBackHookTest . java <nl> @ @ - 0 , 0 + 1 , 30 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . entity . passive . EntityCow ; <nl> + import net . minecraft . entity . passive . EntitySheep ; <nl> + import net . minecraftforge . event . entity . living . LivingKnockBackEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " kbhtest " , name = " Knock Back Hook Test " , version = " 1 . 0 " ) <nl> + @ Mod . EventBusSubscriber <nl> + public class KnockBackHookTest <nl> + { <nl> + private static final boolean ENABLED = false ; <nl> + <nl> + @ SubscribeEvent <nl> + public static void onKnockBack ( LivingKnockBackEvent event ) <nl> + { <nl> + if ( ENABLED ) <nl> + { <nl> + if ( event . getEntityLiving ( ) instanceof EntitySheep ) <nl> + { <nl> + event . setStrength ( 0 . 2F ) ; <nl> + } <nl> + else if ( event . getEntityLiving ( ) instanceof EntityCow ) <nl> + { <nl> + event . setCanceled ( true ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index e0e29ec . . b6bccf4 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 88 , 7 + 88 , 33 @ @ 
 public Collection < PotionEffect > func _ 70651 _ bq ( ) { 
 return this . field _ 70713 _ bf . values ( ) ; 
 } 
 - @ @ - 714 , 6 + 743 , 8 @ @ 
 + @ @ - 644 , 6 + 673 , 7 @ @ 
 + return false ; 
 + } else { 
 + PotionEffect potioneffect = this . field _ 70713 _ bf . get ( p _ 195064 _ 1 _ . func _ 188419 _ a ( ) ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . PotionEvent . PotionAddedEvent ( this , potioneffect , p _ 195064 _ 1 _ ) ) ; 
 + if ( potioneffect = = null ) { 
 + this . field _ 70713 _ bf . put ( p _ 195064 _ 1 _ . func _ 188419 _ a ( ) , p _ 195064 _ 1 _ ) ; 
 + this . func _ 70670 _ a ( p _ 195064 _ 1 _ ) ; 
 + @ @ - 658 , 6 + 688 , 9 @ @ 
 + } 
 + 
 + public boolean func _ 70687 _ e ( PotionEffect p _ 70687 _ 1 _ ) { 
 + + net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent event = new net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent ( this , p _ 70687 _ 1 _ ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + + if ( event . getResult ( ) ! = net . minecraftforge . eventbus . api . Event . Result . DEFAULT ) return event . getResult ( ) = = net . minecraftforge . eventbus . api . Event . Result . ALLOW ; 
 + if ( this . func _ 70668 _ bt ( ) = = CreatureAttribute . UNDEAD ) { 
 + Potion potion = p _ 70687 _ 1 _ . func _ 188419 _ a ( ) ; 
 + if ( potion = = MobEffects . field _ 76428 _ l | | potion = = MobEffects . field _ 76436 _ u ) { 
 + @ @ - 678 , 6 + 711 , 7 @ @ 
 + } 
 + 
 + public boolean func _ 195063 _ d ( Potion p _ 195063 _ 1 _ ) { 
 + + if ( net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . PotionEvent . PotionRemoveEvent ( this , p _ 195063 _ 1 _ ) ) ) return false ; 
 + PotionEffect potioneffect = this . func _ 184596 _ c ( p _ 195063 _ 1 _ ) ; 
 + if ( potioneffect ! = null ) { 
 + this . func _ 70688 _ c ( potioneffect ) ; 
 + @ @ - 714 , 6 + 748 , 8 @ @ 
 } 
 
 public void func _ 70691 _ i ( float p _ 70691 _ 1 _ ) { 
 @ @ - 97 , 7 + 123 , 7 @ @ 
 float f = this . func _ 110143 _ aJ ( ) ; 
 if ( f > 0 . 0F ) { 
 this . func _ 70606 _ j ( f + p _ 70691 _ 1 _ ) ; 
 - @ @ - 730 , 6 + 761 , 7 @ @ 
 + @ @ - 730 , 6 + 766 , 7 @ @ 
 } 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) { 
 @ @ - 105 , 7 + 131 , 7 @ @ 
 if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) { 
 return false ; 
 } else if ( this . field _ 70170 _ p . field _ 72995 _ K ) { 
 - @ @ - 790 , 8 + 822 , 8 @ @ 
 + @ @ - 790 , 8 + 827 , 8 @ @ 
 if ( entity1 instanceof EntityPlayer ) { 
 this . field _ 70718 _ bc = 100 ; 
 this . field _ 70717 _ bb = ( EntityPlayer ) entity1 ; 
 @ @ - 116 , 7 + 142 , 7 @ @ 
 if ( entitywolf . func _ 70909 _ n ( ) ) { 
 this . field _ 70718 _ bc = 100 ; 
 this . field _ 70717 _ bb = null ; 
 - @ @ - 941 , 11 + 973 , 12 @ @ 
 + @ @ - 941 , 11 + 978 , 12 @ @ 
 } 
 
 public void func _ 70669 _ a ( ItemStack p _ 70669 _ 1 _ ) { 
 @ @ - 130 , 7 + 156 , 7 @ @ 
 if ( ! this . field _ 70729 _ aU ) { 
 Entity entity = p _ 70645 _ 1 _ . func _ 76346 _ g ( ) ; 
 EntityLivingBase entitylivingbase = this . func _ 94060 _ bK ( ) ; 
 - @ @ - 960 , 15 + 993 , 16 @ @ 
 + @ @ - 960 , 15 + 998 , 16 @ @ 
 this . field _ 70729 _ aU = true ; 
 this . func _ 110142 _ aN ( ) . func _ 94549 _ h ( ) ; 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) { 
 @ @ - 151 , 7 + 177 , 7 @ @ 
 } 
 
 this . field _ 70170 _ p . func _ 72960 _ a ( this , ( byte ) 3 ) ; 
 - @ @ - 984 , 6 + 1018 , 9 @ @ 
 + @ @ - 984 , 6 + 1023 , 9 @ @ 
 } 
 
 public void func _ 70653 _ a ( Entity p _ 70653 _ 1 _ , float p _ 70653 _ 2 _ , double p _ 70653 _ 3 _ , double p _ 70653 _ 5 _ ) { 
 @ @ - 161 , 7 + 187 , 7 @ @ 
 if ( ! ( this . field _ 70146 _ Z . nextDouble ( ) < this . func _ 110148 _ a ( SharedMonsterAttributes . field _ 111266 _ c ) . func _ 111126 _ e ( ) ) ) { 
 this . field _ 70160 _ al = true ; 
 float f = MathHelper . func _ 76133 _ a ( p _ 70653 _ 3 _ * p _ 70653 _ 3 _ + p _ 70653 _ 5 _ * p _ 70653 _ 5 _ ) ; 
 - @ @ - 1028 , 12 + 1065 , 7 @ @ 
 + @ @ - 1028 , 12 + 1070 , 7 @ @ 
 } else { 
 BlockPos blockpos = new BlockPos ( i , j , k ) ; 
 IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( blockpos ) ; 
 @ @ - 175 , 7 + 201 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1053 , 6 + 1085 , 9 @ @ 
 + @ @ - 1053 , 6 + 1090 , 9 @ @ 
 } 
 
 public void func _ 180430 _ e ( float p _ 180430 _ 1 _ , float p _ 180430 _ 2 _ ) { 
 @ @ - 185 , 7 + 211 , 7 @ @ 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 PotionEffect potioneffect = this . func _ 70660 _ b ( MobEffects . field _ 76430 _ j ) ; 
 float f = potioneffect = = null ? 0 . 0F : ( float ) ( potioneffect . func _ 76458 _ c ( ) + 1 ) ; 
 - @ @ - 1065 , 7 + 1100 , 7 @ @ 
 + @ @ - 1065 , 7 + 1105 , 7 @ @ 
 int l = MathHelper . func _ 76128 _ c ( this . field _ 70161 _ v ) ; 
 IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( new BlockPos ( j , k , l ) ) ; 
 if ( ! iblockstate . func _ 196958 _ f ( ) ) { 
 @ @ - 194 , 7 + 220 , 7 @ @ 
 this . func _ 184185 _ a ( soundtype . func _ 185842 _ g ( ) , soundtype . func _ 185843 _ a ( ) * 0 . 5F , soundtype . func _ 185847 _ b ( ) * 0 . 75F ) ; 
 } 
 } 
 - @ @ - 1134 , 6 + 1169 , 8 @ @ 
 + @ @ - 1134 , 6 + 1174 , 8 @ @ 
 
 protected void func _ 70665 _ d ( DamageSource p _ 70665 _ 1 _ , float p _ 70665 _ 2 _ ) { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) { 
 @ @ - 203 , 7 + 229 , 7 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70655 _ b ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 - @ @ - 1144 , 10 + 1181 , 11 @ @ 
 + @ @ - 1144 , 10 + 1186 , 11 @ @ 
 ( ( EntityPlayerMP ) p _ 70665 _ 1 _ . func _ 76346 _ g ( ) ) . func _ 195067 _ a ( StatList . field _ 212735 _ F , Math . round ( f1 * 10 . 0F ) ) ; 
 } 
 
 @ @ - 216 , 7 + 242 , 7 @ @ 
 this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - p _ 70665 _ 2 _ ) ; 
 } 
 } 
 - @ @ - 1189 , 6 + 1227 , 8 @ @ 
 + @ @ - 1189 , 6 + 1232 , 8 @ @ 
 } 
 
 public void func _ 184609 _ a ( EnumHand p _ 184609 _ 1 _ ) { 
 @ @ - 225 , 7 + 251 , 7 @ @ 
 if ( ! this . field _ 82175 _ bq | | this . field _ 110158 _ av > = this . func _ 82166 _ i ( ) / 2 | | this . field _ 110158 _ av < 0 ) { 
 this . field _ 110158 _ av = - 1 ; 
 this . field _ 82175 _ bq = true ; 
 - @ @ - 1373 , 18 + 1413 , 18 @ @ 
 + @ @ - 1373 , 18 + 1418 , 18 @ @ 
 double d12 = d6 + d10 ; 
 AxisAlignedBB axisalignedbb1 = axisalignedbb . func _ 72317 _ d ( d9 , 0 . 0D , d10 ) ; 
 if ( this . field _ 70170 _ p . func _ 195586 _ b ( this , axisalignedbb1 ) ) { 
 @ @ - 247 , 7 + 273 , 7 @ @ 
 d1 = d11 ; 
 d13 = this . field _ 70163 _ u + 2 . 0D ; 
 d14 = d12 ; 
 - @ @ - 1439 , 15 + 1479 , 16 @ @ 
 + @ @ - 1439 , 15 + 1484 , 16 @ @ 
 } 
 
 this . field _ 70160 _ al = true ; 
 @ @ - 266 , 7 + 292 , 7 @ @ 
 } 
 
 protected float func _ 189749 _ co ( ) { 
 - @ @ - 1518 , 7 + 1559 , 7 @ @ 
 + @ @ - 1518 , 7 + 1564 , 7 @ @ 
 
 try ( BlockPos . PooledMutableBlockPos blockpos $ pooledmutableblockpos = BlockPos . PooledMutableBlockPos . func _ 185345 _ c ( this . field _ 70165 _ t , this . func _ 174813 _ aQ ( ) . field _ 72338 _ b - 1 . 0D , this . field _ 70161 _ v ) ) { 
 if ( this . field _ 70122 _ E ) { 
 @ @ - 275 , 7 + 301 , 7 @ @ 
 } 
 
 float f8 = 0 . 16277137F / ( f7 * f7 * f7 ) ; 
 - @ @ - 1532 , 7 + 1573 , 7 @ @ 
 + @ @ - 1532 , 7 + 1578 , 7 @ @ 
 this . func _ 191958 _ b ( p _ 191986 _ 1 _ , p _ 191986 _ 2 _ , p _ 191986 _ 3 _ , f9 ) ; 
 f7 = 0 . 91F ; 
 if ( this . field _ 70122 _ E ) { 
 @ @ - 284 , 7 + 310 , 7 @ @ 
 } 
 
 if ( this . func _ 70617 _ f _ ( ) ) { 
 - @ @ - 1663 , 6 + 1704 , 7 @ @ 
 + @ @ - 1663 , 6 + 1709 , 7 @ @ 
 } 
 
 public void func _ 70071 _ h _ ( ) { 
 @ @ - 292 , 7 + 318 , 7 @ @ 
 super . func _ 70071 _ h _ ( ) ; 
 this . func _ 184608 _ ct ( ) ; 
 this . func _ 205014 _ p ( ) ; 
 - @ @ - 1694 , 7 + 1736 , 9 @ @ 
 + @ @ - 1694 , 7 + 1741 , 9 @ @ 
 
 ItemStack itemstack1 = this . func _ 184582 _ a ( entityequipmentslot ) ; 
 if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) { 
 @ @ - 302 , 7 + 328 , 7 @ @ 
 if ( ! itemstack . func _ 190926 _ b ( ) ) { 
 this . func _ 110140 _ aT ( ) . func _ 111148 _ a ( itemstack . func _ 111283 _ C ( entityequipmentslot ) ) ; 
 } 
 - @ @ - 2134 , 11 + 2178 , 18 @ @ 
 + @ @ - 2134 , 11 + 2183 , 18 @ @ 
 protected void func _ 184608 _ ct ( ) { 
 if ( this . func _ 184587 _ cr ( ) ) { 
 if ( this . func _ 184586 _ b ( this . func _ 184600 _ cs ( ) ) = = this . field _ 184627 _ bm ) { 
 @ @ - 322 , 7 + 348 , 7 @ @ 
 this . func _ 71036 _ o ( ) ; 
 } 
 } else { 
 - @ @ - 2172 , 8 + 2223 , 10 @ @ 
 + @ @ - 2172 , 8 + 2228 , 10 @ @ 
 public void func _ 184598 _ c ( EnumHand p _ 184598 _ 1 _ ) { 
 ItemStack itemstack = this . func _ 184586 _ b ( p _ 184598 _ 1 _ ) ; 
 if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) { 
 @ @ - 334 , 7 + 360 , 7 @ @ 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) { 
 this . func _ 204802 _ c ( 1 , true ) ; 
 this . func _ 204802 _ c ( 2 , p _ 184598 _ 1 _ = = EnumHand . OFF _ HAND ) ; 
 - @ @ - 2229 , 6 + 2282 , 9 @ @ 
 + @ @ - 2229 , 6 + 2287 , 9 @ @ 
 vec3d1 = vec3d1 . func _ 178789 _ a ( - this . field _ 70125 _ A * ( ( float ) Math . PI / 180F ) ) ; 
 vec3d1 = vec3d1 . func _ 178785 _ b ( - this . field _ 70177 _ z * ( ( float ) Math . PI / 180F ) ) ; 
 vec3d1 = vec3d1 . func _ 72441 _ c ( this . field _ 70165 _ t , this . field _ 70163 _ u + ( double ) this . func _ 70047 _ e ( ) , this . field _ 70161 _ v ) ; 
 @ @ - 344 , 7 + 370 , 7 @ @ 
 this . field _ 70170 _ p . func _ 195594 _ a ( new ItemParticleData ( Particles . field _ 197591 _ B , p _ 195062 _ 1 _ ) , vec3d1 . field _ 72450 _ a , vec3d1 . field _ 72448 _ b , vec3d1 . field _ 72449 _ c , vec3d . field _ 72450 _ a , vec3d . field _ 72448 _ b + 0 . 05D , vec3d . field _ 72449 _ c ) ; 
 } 
 
 - @ @ - 2237 , 7 + 2293 , 9 @ @ 
 + @ @ - 2237 , 7 + 2298 , 9 @ @ 
 protected void func _ 71036 _ o ( ) { 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) { 
 this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; 
 @ @ - 355 , 7 + 381 , 7 @ @ 
 this . func _ 184602 _ cy ( ) ; 
 } 
 
 - @ @ - 2257 , 6 + 2315 , 7 @ @ 
 + @ @ - 2257 , 6 + 2320 , 7 @ @ 
 
 public void func _ 184597 _ cx ( ) { 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) { 
 @ @ - 363 , 7 + 389 , 7 @ @ 
 this . field _ 184627 _ bm . func _ 77974 _ b ( this . field _ 70170 _ p , this , this . func _ 184605 _ cv ( ) ) ; 
 } 
 
 - @ @ - 2363 , 4 + 2422 , 62 @ @ 
 + @ @ - 2363 , 4 + 2427 , 62 @ @ 
 @ OnlyIn ( Dist . CLIENT ) 
 public void func _ 191987 _ a ( BlockPos p _ 191987 _ 1 _ , boolean p _ 191987 _ 2 _ ) { 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / monster / EntitySpider . java . patch b / patches / minecraft / net / minecraft / entity / monster / EntitySpider . java . patch 
 new file mode 100644 
 index 0000000 . . 1db8c20 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / monster / EntitySpider . java . patch 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + - - - a / net / minecraft / entity / monster / EntitySpider . java 
 + + + + b / net / minecraft / entity / monster / EntitySpider . java 
 + @ @ - 120 , 7 + 120 , 12 @ @ 
 + } 
 + 
 + public boolean func _ 70687 _ e ( PotionEffect p _ 70687 _ 1 _ ) { 
 + - return p _ 70687 _ 1 _ . func _ 188419 _ a ( ) = = MobEffects . field _ 76436 _ u ? false : super . func _ 70687 _ e ( p _ 70687 _ 1 _ ) ; 
 + + if ( p _ 70687 _ 1 _ . func _ 188419 _ a ( ) = = MobEffects . field _ 76436 _ u ) { 
 + + net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent event = new net . minecraftforge . event . entity . living . PotionEvent . PotionApplicableEvent ( this , p _ 70687 _ 1 _ ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + + return event . getResult ( ) = = net . minecraftforge . eventbus . api . Event . Result . ALLOW ; 
 + + } 
 + + return super . func _ 70687 _ e ( p _ 70687 _ 1 _ ) ; 
 + } 
 + 
 + public boolean func _ 70841 _ p ( ) { 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / PotionEvent . java b / src / main / java / net / minecraftforge / event / entity / living / PotionEvent . java 
 new file mode 100644 
 index 0000000 . . e320407 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / PotionEvent . java 
 @ @ - 0 , 0 + 1 , 150 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 - 2018 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import javax . annotation . Nonnull ; 
 + import javax . annotation . Nullable ; 
 + 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . potion . Potion ; 
 + import net . minecraft . potion . PotionEffect ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . eventbus . api . Cancelable ; 
 + 
 + / * * 
 + * This Event and its subevents gets fired from { @ link EntityLivingBase } on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 + * / 
 + public class PotionEvent extends LivingEvent 
 + { 
 + @ Nullable 
 + protected final PotionEffect effect ; 
 + 
 + public PotionEvent ( EntityLivingBase living , PotionEffect effect ) 
 + { 
 + super ( living ) ; 
 + this . effect = effect ; 
 + } 
 + / * * 
 + * Retuns the PotionEffect . 
 + * / 
 + @ Nullable 
 + public PotionEffect getPotionEffect ( ) 
 + { 
 + return effect ; 
 + } 
 + 
 + / * * 
 + * This Event is fired when a Potion is about to get removed from an Entity . 
 + * This Event is { @ link Cancelable } . 
 + * This Event does not have a result . 
 + * / 
 + @ Cancelable 
 + public static class PotionRemoveEvent extends PotionEvent 
 + { 
 + private final Potion potion ; 
 + 
 + public PotionRemoveEvent ( EntityLivingBase living , Potion potion ) 
 + { 
 + super ( living , living . getActivePotionMap ( ) . get ( potion ) ) ; 
 + this . potion = potion ; 
 + } 
 + 
 + / * * 
 + * @ return the Potion which is tried to remove from the Entity . 
 + * / 
 + public Potion getPotion ( ) 
 + { 
 + return this . potion ; 
 + } 
 + 
 + / * * 
 + * @ return the PotionEffect . In the remove event this can be null if the Entity does not have a { @ link Potion } of the right type active . 
 + * / 
 + @ Override 
 + @ Nullable 
 + public PotionEffect getPotionEffect ( ) 
 + { 
 + return super . getPotionEffect ( ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * This Event is fired to check if a Potion can get applied to an Entity . 
 + * This Event is not { @ link Cancelable } 
 + * This Event has a result { @ link HasResult } . 
 + * ALLOW will apply this potion effect . 
 + * DENY will not apply this potion effect . 
 + * DEFAULT will run vanilla logic to determine if this potion isApplicable . 
 + * / 
 + @ HasResult 
 + public static class PotionApplicableEvent extends PotionEvent 
 + { 
 + public PotionApplicableEvent ( EntityLivingBase living , PotionEffect effect ) 
 + { 
 + super ( living , effect ) ; 
 + } 
 + 
 + / * * 
 + * @ return the PotionEffect . 
 + * / 
 + @ Override 
 + @ Nonnull 
 + public PotionEffect getPotionEffect ( ) 
 + { 
 + return super . getPotionEffect ( ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * This Event is fired when a new Potion is added to the Entity . This is also fired if the Entity already has this effect but with different duration / level . 
 + * This Event is not { @ link Cancelable } 
 + * This Event does not have a Result . 
 + * / 
 + public static class PotionAddedEvent extends PotionEvent 
 + { 
 + private final PotionEffect oldEffect ; 
 + 
 + public PotionAddedEvent ( EntityLivingBase living , PotionEffect oldEffect , PotionEffect newEffect ) 
 + { 
 + super ( living , newEffect ) ; 
 + this . oldEffect = oldEffect ; 
 + } 
 + 
 + / * * 
 + * @ return the added PotionEffect . This is the umerged PotionEffect if the old PotionEffect is not null . 
 + * / 
 + @ Override 
 + @ Nonnull 
 + public PotionEffect getPotionEffect ( ) 
 + { 
 + return super . getPotionEffect ( ) ; 
 + } 
 + 
 + / * * 
 + * @ return the old PotionEffect . THis can be null if the entity did not have an effect of this kind before . 
 + * / 
 + @ Nullable 
 + public PotionEffect getOldPotionEffect ( ) 
 + { 
 + return oldEffect ; 
 + } 
 + } 
 + 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / debug / PotionEventTest . java b / src / test / java / net / minecraftforge / debug / PotionEventTest . java 
 new file mode 100644 
 index 0000000 . . 1cb254a 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / PotionEventTest . java 
 @ @ - 0 , 0 + 1 , 70 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 - 2018 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . debug ; 
 + 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . living . PotionEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . Event . Result ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " potioneventtest " , name = " PotionEventTest " , version = " 1 . 0 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class PotionEventTest 
 + { 
 + public static final boolean ENABLE = false ; 
 + private Logger log ; 
 + 
 + @ EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + log = event . getModLog ( ) ; 
 + } 
 + 
 + @ EventHandler 
 + public void init ( FMLInitializationEvent event ) 
 + { 
 + if ( ENABLE ) 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onPotionAdded ( PotionEvent . PotionAddedEvent event ) 
 + { 
 + log . info ( " { } has a new PotionEffect { } , the old one was { } " , event . getEntityLiving ( ) , event . getPotionEffect ( ) , event . getOldPotionEffect ( ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void isPotionApplicable ( PotionEvent . PotionApplicableEvent event ) 
 + { 
 + event . setResult ( Result . ALLOW ) ; 
 + log . info ( " Allowed Potion { } for Entity { } " , event . getPotionEffect ( ) , event . getEntityLiving ( ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onPotionRemove ( PotionEvent . PotionRemoveEvent event ) 
 + { 
 + log . info ( " Effect { } got Removed from { } " , event . getPotionEffect ( ) , event . getEntityLiving ( ) ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index 14d6815 . . 294442c 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 141 , 7 + 141 , 17 @ @ 
 } 
 
 this . field _ 70170 _ p . func _ 72960 _ a ( this , ( byte ) 3 ) ; 
 - @ @ - 1253 , 15 + 1273 , 7 @ @ 
 + @ @ - 1195 , 6 + 1215 , 9 @ @ 
 + 
 + public void func _ 70653 _ a ( Entity p _ 70653 _ 1 _ , float p _ 70653 _ 2 _ , double p _ 70653 _ 3 _ , double p _ 70653 _ 5 _ ) 
 + { 
 + + net . minecraftforge . event . entity . living . LivingKnockBackEvent event = net . minecraftforge . common . ForgeHooks . onLivingKnockBack ( this , p _ 70653 _ 1 _ , p _ 70653 _ 2 _ , p _ 70653 _ 3 _ , p _ 70653 _ 5 _ ) ; 
 + + if ( event . isCanceled ( ) ) return ; 
 + + p _ 70653 _ 2 _ = event . getStrength ( ) ; p _ 70653 _ 3 _ = event . getRatioX ( ) ; p _ 70653 _ 5 _ = event . getRatioZ ( ) ; 
 + if ( this . field _ 70146 _ Z . nextDouble ( ) > = this . func _ 110148 _ a ( SharedMonsterAttributes . field _ 111266 _ c ) . func _ 111126 _ e ( ) ) 
 + { 
 + this . field _ 70160 _ al = true ; 
 + @ @ - 1253 , 15 + 1276 , 7 @ @ 
 BlockPos blockpos = new BlockPos ( i , j , k ) ; 
 IBlockState iblockstate = this . field _ 70170 _ p . func _ 180495 _ p ( blockpos ) ; 
 Block block = iblockstate . func _ 177230 _ c ( ) ; 
 @ @ - 158 , 7 + 168 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1287 , 6 + 1299 , 9 @ @ 
 + @ @ - 1287 , 6 + 1302 , 9 @ @ 
 
 public void func _ 180430 _ e ( float p _ 180430 _ 1 _ , float p _ 180430 _ 2 _ ) 
 { 
 @ @ - 168 , 7 + 178 , 7 @ @ 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 PotionEffect potioneffect = this . func _ 70660 _ b ( MobEffects . field _ 76430 _ j ) ; 
 float f = potioneffect = = null ? 0 . 0F : ( float ) ( potioneffect . func _ 76458 _ c ( ) + 1 ) ; 
 - @ @ - 1303 , 7 + 1318 , 7 @ @ 
 + @ @ - 1303 , 7 + 1321 , 7 @ @ 
 
 if ( iblockstate . func _ 185904 _ a ( ) ! = Material . field _ 151579 _ a ) 
 { 
 @ @ - 177 , 7 + 187 , 7 @ @ 
 this . func _ 184185 _ a ( soundtype . func _ 185842 _ g ( ) , soundtype . func _ 185843 _ a ( ) * 0 . 5F , soundtype . func _ 185847 _ b ( ) * 0 . 75F ) ; 
 } 
 } 
 - @ @ - 1380 , 17 + 1395 , 20 @ @ 
 + @ @ - 1380 , 17 + 1398 , 20 @ @ 
 { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) 
 { 
 @ @ - 199 , 7 + 209 , 7 @ @ 
 this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - p _ 70665 _ 2 _ ) ; 
 } 
 } 
 - @ @ - 1447 , 6 + 1465 , 11 @ @ 
 + @ @ - 1447 , 6 + 1468 , 11 @ @ 
 
 public void func _ 184609 _ a ( EnumHand p _ 184609 _ 1 _ ) 
 { 
 @ @ - 211 , 7 + 221 , 7 @ @ 
 if ( ! this . field _ 82175 _ bq | | this . field _ 110158 _ av > = this . func _ 82166 _ i ( ) / 2 | | this . field _ 110158 _ av < 0 ) 
 { 
 this . field _ 110158 _ av = - 1 ; 
 - @ @ - 1694 , 7 + 1717 , 7 @ @ 
 + @ @ - 1694 , 7 + 1720 , 7 @ @ 
 
 if ( ! this . field _ 70170 _ p . func _ 184143 _ b ( axisalignedbb1 ) ) 
 { 
 @ @ - 220 , 7 + 230 , 7 @ @ 
 { 
 this . func _ 70634 _ a ( d11 , this . field _ 70163 _ u + 1 . 0D , d12 ) ; 
 return ; 
 - @ @ - 1702 , 14 + 1725 , 14 @ @ 
 + @ @ - 1702 , 14 + 1728 , 14 @ @ 
 
 BlockPos blockpos = new BlockPos ( d11 , this . field _ 70163 _ u - 1 . 0D , d12 ) ; 
 
 @ @ - 237 , 7 + 247 , 7 @ @ 
 { 
 d1 = d11 ; 
 d13 = this . field _ 70163 _ u + 2 . 0D ; 
 - @ @ - 1781 , 6 + 1804 , 7 @ @ 
 + @ @ - 1781 , 6 + 1807 , 7 @ @ 
 } 
 
 this . field _ 70160 _ al = true ; 
 @ @ - 245 , 7 + 255 , 7 @ @ 
 } 
 
 protected void func _ 70629 _ bd ( ) 
 - @ @ - 1874 , 7 + 1898 , 8 @ @ 
 + @ @ - 1874 , 7 + 1901 , 8 @ @ 
 
 if ( this . field _ 70122 _ E ) 
 { 
 @ @ - 255 , 7 + 265 , 7 @ @ 
 } 
 
 float f7 = 0 . 16277136F / ( f6 * f6 * f6 ) ; 
 - @ @ - 1894 , 7 + 1919 , 8 @ @ 
 + @ @ - 1894 , 7 + 1922 , 8 @ @ 
 
 if ( this . field _ 70122 _ E ) 
 { 
 @ @ - 265 , 7 + 275 , 7 @ @ 
 } 
 
 if ( this . func _ 70617 _ f _ ( ) ) 
 - @ @ - 2054 , 6 + 2080 , 7 @ @ 
 + @ @ - 2054 , 6 + 2083 , 7 @ @ 
 
 public void func _ 70071 _ h _ ( ) 
 { 
 @ @ - 273 , 7 + 283 , 7 @ @ 
 super . func _ 70071 _ h _ ( ) ; 
 this . func _ 184608 _ ct ( ) ; 
 
 - @ @ - 2096 , 7 + 2123 , 9 @ @ 
 + @ @ - 2096 , 7 + 2126 , 9 @ @ 
 
 if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) 
 { 
 @ @ - 283 , 7 + 293 , 7 @ @ 
 
 if ( ! itemstack . func _ 190926 _ b ( ) ) 
 { 
 - @ @ - 2575 , 6 + 2604 , 40 @ @ 
 + @ @ - 2575 , 6 + 2607 , 40 @ @ 
 this . field _ 70752 _ e = true ; 
 } 
 
 @ @ - 324 , 7 + 334 , 7 @ @ 
 public abstract EnumHandSide func _ 184591 _ cq ( ) ; 
 
 public boolean func _ 184587 _ cr ( ) 
 - @ @ - 2595 , 12 + 2658 , 19 @ @ 
 + @ @ - 2595 , 12 + 2661 , 19 @ @ 
 
 if ( itemstack = = this . field _ 184627 _ bm ) 
 { 
 @ @ - 345 , 7 + 355 , 7 @ @ 
 { 
 this . func _ 71036 _ o ( ) ; 
 } 
 - @ @ - 2618 , 8 + 2688 , 10 @ @ 
 + @ @ - 2618 , 8 + 2691 , 10 @ @ 
 
 if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) 
 { 
 @ @ - 357 , 7 + 367 , 7 @ @ 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 { 
 - @ @ - 2700 , 7 + 2772 , 9 @ @ 
 + @ @ - 2700 , 7 + 2775 , 9 @ @ 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) 
 { 
 this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; 
 @ @ - 368 , 7 + 378 , 7 @ @ 
 this . func _ 184602 _ cy ( ) ; 
 } 
 } 
 - @ @ - 2724 , 7 + 2798 , 8 @ @ 
 + @ @ - 2724 , 7 + 2801 , 8 @ @ 
 { 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 @ @ - 378 , 7 + 388 , 7 @ @ 
 } 
 
 this . func _ 184602 _ cy ( ) ; 
 - @ @ - 2852 , 6 + 2927 , 31 @ @ 
 + @ @ - 2852 , 6 + 2930 , 31 @ @ 
 return true ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 355ba51 . . 1396139 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 120 , 6 + 120 , 7 @ @ import net . minecraftforge . event . entity . living . LivingEvent . LivingJumpEvent ; 
 import net . minecraftforge . event . entity . living . LivingEvent . LivingUpdateEvent ; 
 import net . minecraftforge . event . entity . living . LivingFallEvent ; 
 import net . minecraftforge . event . entity . living . LivingHurtEvent ; 
 + import net . minecraftforge . event . entity . living . LivingKnockBackEvent ; 
 import net . minecraftforge . event . entity . living . LivingSetAttackTargetEvent ; 
 import net . minecraftforge . event . entity . living . LootingLevelEvent ; 
 import net . minecraftforge . event . entity . player . AnvilRepairEvent ; 
 @ @ - 560 , 6 + 561 , 13 @ @ public class ForgeHooks 
 return ! MinecraftForge . EVENT _ BUS . post ( new LivingAttackEvent ( entity , src , amount ) ) ; 
 } 
 
 + public static LivingKnockBackEvent onLivingKnockBack ( EntityLivingBase target , Entity attacker , float strength , double ratioX , double ratioZ ) 
 + { 
 + LivingKnockBackEvent event = new LivingKnockBackEvent ( target , attacker , strength , ratioX , ratioZ ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return event ; 
 + } 
 + 
 public static float onLivingHurt ( EntityLivingBase entity , DamageSource src , float amount ) 
 { 
 LivingHurtEvent event = new LivingHurtEvent ( entity , src , amount ) ; 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingKnockBackEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingKnockBackEvent . java 
 new file mode 100644 
 index 0000000 . . 138c7ab 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingKnockBackEvent . java 
 @ @ - 0 , 0 + 1 , 95 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2017 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . entity . monster . EntityMob ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . util . DamageSource ; 
 + import net . minecraftforge . common . ForgeHooks ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + 
 + / * * 
 + * LivingKnockBackEvent is fired when a living entity is about to be knocked back . < br > 
 + * This event is fired whenever an Entity is knocked back in 
 + * { @ link EntityLivingBase # attackEntityFrom ( DamageSource , float ) } , 
 + * { @ link EntityLivingBase # blockWithShield ( EntityLivingBase ) } , 
 + * { @ link EntityMob # attackEntityAsMob ( Entity ) } and 
 + * { @ link EntityPlayer # attackTargetEntityWithCurrentItem ( Entity ) } < br > 
 + * < br > 
 + * This event is fired via { @ link ForgeHooks # onLivingKnockBack ( EntityLivingBase , Entity , float , double , double ) } . < br > 
 + * < br > 
 + * { @ link # attacker } contains the Entity that caused the knock back . < br > 
 + * { @ link # strength } contains the strength of the knock back . < br > 
 + * { @ link # ratioX } contains the x ratio of the knock back . < br > 
 + * { @ link # ratioZ } contains the z ratio of the knock back . < br > 
 + * < br > 
 + * This event is { @ link Cancelable } . < br > 
 + * If this event is canceled , the entity is not knocked back . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . 
 + * * / 
 + @ Cancelable 
 + public class LivingKnockBackEvent extends LivingEvent 
 + { 
 + protected Entity attacker ; 
 + protected float strength ; 
 + protected double ratioX , ratioZ ; 
 + protected final Entity originalAttacker ; 
 + protected final float originalStrength ; 
 + protected final double originalRatioX , originalRatioZ ; 
 + 
 + public LivingKnockBackEvent ( EntityLivingBase target , Entity attacker , float strength , double ratioX , double ratioZ ) 
 + { 
 + super ( target ) ; 
 + this . attacker = this . originalAttacker = attacker ; 
 + this . strength = this . originalStrength = strength ; 
 + this . ratioX = this . originalRatioX = ratioX ; 
 + this . ratioZ = this . originalRatioZ = ratioZ ; 
 + } 
 + 
 + public Entity getAttacker ( ) { return this . attacker ; } 
 + 
 + public float getStrength ( ) { return this . strength ; } 
 + 
 + public double getRatioX ( ) { return this . ratioX ; } 
 + 
 + public double getRatioZ ( ) { return this . ratioZ ; } 
 + 
 + public Entity getOriginalAttacker ( ) { return this . originalAttacker ; } 
 + 
 + public float getOriginalStrength ( ) { return this . originalStrength ; } 
 + 
 + public double getOriginalRatioX ( ) { return this . originalRatioX ; } 
 + 
 + public double getOriginalRatioZ ( ) { return this . originalRatioZ ; } 
 + 
 + public void setAttacker ( Entity attacker ) { this . attacker = attacker ; } 
 + 
 + public void setStrength ( float strength ) { this . strength = strength ; } 
 + 
 + public void setRatioX ( double ratioX ) { this . ratioX = ratioX ; } 
 + 
 + public void setRatioZ ( double ratioZ ) { this . ratioZ = ratioZ ; } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / java / net / minecraftforge / debug / KnockBackHookTest . java b / src / test / java / net / minecraftforge / debug / KnockBackHookTest . java 
 new file mode 100644 
 index 0000000 . . a494ec8 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / KnockBackHookTest . java 
 @ @ - 0 , 0 + 1 , 30 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . entity . passive . EntityCow ; 
 + import net . minecraft . entity . passive . EntitySheep ; 
 + import net . minecraftforge . event . entity . living . LivingKnockBackEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " kbhtest " , name = " Knock Back Hook Test " , version = " 1 . 0 " ) 
 + @ Mod . EventBusSubscriber 
 + public class KnockBackHookTest 
 + { 
 + private static final boolean ENABLED = false ; 
 + 
 + @ SubscribeEvent 
 + public static void onKnockBack ( LivingKnockBackEvent event ) 
 + { 
 + if ( ENABLED ) 
 + { 
 + if ( event . getEntityLiving ( ) instanceof EntitySheep ) 
 + { 
 + event . setStrength ( 0 . 2F ) ; 
 + } 
 + else if ( event . getEntityLiving ( ) instanceof EntityCow ) 
 + { 
 + event . setCanceled ( true ) ; 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file
