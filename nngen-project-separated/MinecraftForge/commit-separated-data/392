BLEU SCORE: 0.020980574531482755

TEST MSG: Fix overrides not being read from the server registry snapshot
GENERATED MSG: Reload client recipe book after loading modded recipes .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java <nl> index c653bbf . . f65bf1c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java <nl> @ @ - 130 , 6 + 130 , 7 @ @ enum FMLHandshakeClientState implements IHandshakeState < FMLHandshakeClientState > <nl> ForgeRegistry . Snapshot entry = new ForgeRegistry . Snapshot ( ) ; <nl> entry . ids . putAll ( pkt . getIdMap ( ) ) ; <nl> entry . dummied . addAll ( pkt . getDummied ( ) ) ; <nl> + entry . overrides . putAll ( pkt . getOverrides ( ) ) ; <nl> snap . put ( pkt . getName ( ) , entry ) ; <nl> <nl> if ( pkt . hasMore ( ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java <nl> index b6abc3e . . 62e96d4 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java <nl> @ @ - 261 , 6 + 261 , 11 @ @ public abstract class FMLHandshakeMessage { <nl> return dummied ; <nl> } <nl> <nl> + public Map < ResourceLocation , String > getOverrides ( ) <nl> + { <nl> + return overrides ; <nl> + } <nl> + <nl> public ResourceLocation getName ( ) <nl> { <nl> return this . name ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java b / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java <nl> index 98d449b . . eaa2316 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java <nl> @ @ - 21 , 8 + 21 , 11 @ @ package net . minecraftforge . debug ; <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . SoundType ; <nl> import net . minecraft . block . material . Material ; <nl> + import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . creativetab . CreativeTabs ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . math . AxisAlignedBB ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . text . TextComponentString ; <nl> @ @ - 40 , 12 + 43 , 13 @ @ public class RegistryOverrideTest <nl> @ SubscribeEvent <nl> public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> - event . getRegistry ( ) . register ( new BlockReplacement ( ) ) ; <nl> + event . getRegistry ( ) . register ( new BlockReplacement ( ) ) ; <nl> } <nl> <nl> private static class BlockReplacement extends Block <nl> { <nl> AxisAlignedBB BB = FULL _ BLOCK _ AABB . contract ( 0 . 1 , 0 , 0 . 1 ) ; <nl> + <nl> private BlockReplacement ( ) <nl> { <nl> super ( Material . ROCK ) ; <nl> @ @ - 62 , 9 + 66 , 13 @ @ public class RegistryOverrideTest <nl> } <nl> <nl> @ Override <nl> - public void onBlockClicked ( World worldIn , BlockPos pos , EntityPlayer playerIn ) <nl> + public boolean onBlockActivated ( World worldIn , BlockPos pos , IBlockState state , EntityPlayer playerIn , EnumHand hand , EnumFacing facing , float hitX , float hitY , float hitZ ) <nl> { <nl> - playerIn . sendMessage ( new TextComponentString ( " Debug Override Click ! " ) ) ; <nl> + if ( hand = = EnumHand . MAIN _ HAND ) <nl> + { <nl> + playerIn . sendMessage ( new TextComponentString ( worldIn . isRemote ? " Client " : " Server " ) ) ; <nl> + } <nl> + return false ; <nl> } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / util / RecipeBookClient . java . patch b / patches / minecraft / net / minecraft / client / util / RecipeBookClient . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 883654d <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / util / RecipeBookClient . java . patch <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / util / RecipeBookClient . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / util / RecipeBookClient . java <nl> + @ @ - 54 , 6 + 54 , 14 @ @ <nl> + <nl> + static <nl> + { <nl> + + rebuildTable ( ) ; <nl> + + } <nl> + + <nl> + + public static void rebuildTable ( ) <nl> + + { <nl> + + field _ 194086 _ e . clear ( ) ; <nl> + + field _ 194087 _ f . clear ( ) ; <nl> + + <nl> + Table < CreativeTabs , String , RecipeList > table = HashBasedTable . < CreativeTabs , String , RecipeList > create ( ) ; <nl> + <nl> + for ( IRecipe irecipe : CraftingManager . field _ 193380 _ a ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index 5205eea . . ec00158 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 67 , 6 + 67 , 7 @ @ import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . util . JsonUtils ; <nl> import net . minecraft . util . NonNullList ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . ModContainer ; <nl> @ @ - 611 , 6 + 612 , 7 @ @ public class CraftingHelper { <nl> Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadRecipes ( mod ) ) ; <nl> Loader . instance ( ) . setActiveModContainer ( null ) ; <nl> / / reg . freeze ( ) ; <nl> + FMLCommonHandler . instance ( ) . resetClientRecipeBook ( ) ; <nl> } <nl> <nl> private static void loadFactories ( ModContainer mod ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index 2a2e2e1 . . 632c1ad 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 56 , 6 + 56 , 7 @ @ import net . minecraft . client . resources . LegacyV2Adapter ; <nl> import net . minecraft . client . resources . SimpleReloadableResourceManager ; <nl> import net . minecraft . client . resources . data . MetadataSerializer ; <nl> import net . minecraft . client . resources . data . PackMetadataSection ; <nl> + import net . minecraft . client . util . RecipeBookClient ; <nl> import net . minecraft . crash . CrashReport ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . launchwrapper . Launch ; <nl> @ @ - 1096 , 4 + 1097 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> return SplashProgress . isDisplayVSyncForced ; <nl> } <nl> + <nl> + @ Override <nl> + public void resetClientRecipeBook ( ) <nl> + { <nl> + RecipeBookClient . rebuildTable ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index db614fd . . a331901 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 771 , 4 + 771 , 7 @ @ public class FMLCommonHandler <nl> } <nl> <nl> public boolean isDisplayVSyncForced ( ) { return sidedDelegate . isDisplayVSyncForced ( ) ; } <nl> + public void resetClientRecipeBook ( ) { <nl> + this . sidedDelegate . resetClientRecipeBook ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> index 28126cf . . fa31c65 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> @ @ - 84 , 4 + 84 , 6 @ @ public interface IFMLSidedHandler <nl> CompoundDataFixer getDataFixer ( ) ; <nl> <nl> boolean isDisplayVSyncForced ( ) ; <nl> + <nl> + default void resetClientRecipeBook ( ) { } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java 
 index c653bbf . . f65bf1c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeClientState . java 
 @ @ - 130 , 6 + 130 , 7 @ @ enum FMLHandshakeClientState implements IHandshakeState < FMLHandshakeClientState > 
 ForgeRegistry . Snapshot entry = new ForgeRegistry . Snapshot ( ) ; 
 entry . ids . putAll ( pkt . getIdMap ( ) ) ; 
 entry . dummied . addAll ( pkt . getDummied ( ) ) ; 
 + entry . overrides . putAll ( pkt . getOverrides ( ) ) ; 
 snap . put ( pkt . getName ( ) , entry ) ; 
 
 if ( pkt . hasMore ( ) ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java 
 index b6abc3e . . 62e96d4 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / FMLHandshakeMessage . java 
 @ @ - 261 , 6 + 261 , 11 @ @ public abstract class FMLHandshakeMessage { 
 return dummied ; 
 } 
 
 + public Map < ResourceLocation , String > getOverrides ( ) 
 + { 
 + return overrides ; 
 + } 
 + 
 public ResourceLocation getName ( ) 
 { 
 return this . name ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java b / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java 
 index 98d449b . . eaa2316 100644 
 - - - a / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / RegistryOverrideTest . java 
 @ @ - 21 , 8 + 21 , 11 @ @ package net . minecraftforge . debug ; 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . SoundType ; 
 import net . minecraft . block . material . Material ; 
 + import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . creativetab . CreativeTabs ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . util . EnumFacing ; 
 + import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . math . AxisAlignedBB ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . text . TextComponentString ; 
 @ @ - 40 , 12 + 43 , 13 @ @ public class RegistryOverrideTest 
 @ SubscribeEvent 
 public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 - event . getRegistry ( ) . register ( new BlockReplacement ( ) ) ; 
 + event . getRegistry ( ) . register ( new BlockReplacement ( ) ) ; 
 } 
 
 private static class BlockReplacement extends Block 
 { 
 AxisAlignedBB BB = FULL _ BLOCK _ AABB . contract ( 0 . 1 , 0 , 0 . 1 ) ; 
 + 
 private BlockReplacement ( ) 
 { 
 super ( Material . ROCK ) ; 
 @ @ - 62 , 9 + 66 , 13 @ @ public class RegistryOverrideTest 
 } 
 
 @ Override 
 - public void onBlockClicked ( World worldIn , BlockPos pos , EntityPlayer playerIn ) 
 + public boolean onBlockActivated ( World worldIn , BlockPos pos , IBlockState state , EntityPlayer playerIn , EnumHand hand , EnumFacing facing , float hitX , float hitY , float hitZ ) 
 { 
 - playerIn . sendMessage ( new TextComponentString ( " Debug Override Click ! " ) ) ; 
 + if ( hand = = EnumHand . MAIN _ HAND ) 
 + { 
 + playerIn . sendMessage ( new TextComponentString ( worldIn . isRemote ? " Client " : " Server " ) ) ; 
 + } 
 + return false ; 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / util / RecipeBookClient . java . patch b / patches / minecraft / net / minecraft / client / util / RecipeBookClient . java . patch 
 new file mode 100644 
 index 0000000 . . 883654d 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / util / RecipeBookClient . java . patch 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / util / RecipeBookClient . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / util / RecipeBookClient . java 
 + @ @ - 54 , 6 + 54 , 14 @ @ 
 + 
 + static 
 + { 
 + + rebuildTable ( ) ; 
 + + } 
 + + 
 + + public static void rebuildTable ( ) 
 + + { 
 + + field _ 194086 _ e . clear ( ) ; 
 + + field _ 194087 _ f . clear ( ) ; 
 + + 
 + Table < CreativeTabs , String , RecipeList > table = HashBasedTable . < CreativeTabs , String , RecipeList > create ( ) ; 
 + 
 + for ( IRecipe irecipe : CraftingManager . field _ 193380 _ a ) 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index 5205eea . . ec00158 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 67 , 6 + 67 , 7 @ @ import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . util . JsonUtils ; 
 import net . minecraft . util . NonNullList ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . ModContainer ; 
 @ @ - 611 , 6 + 612 , 7 @ @ public class CraftingHelper { 
 Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadRecipes ( mod ) ) ; 
 Loader . instance ( ) . setActiveModContainer ( null ) ; 
 / / reg . freeze ( ) ; 
 + FMLCommonHandler . instance ( ) . resetClientRecipeBook ( ) ; 
 } 
 
 private static void loadFactories ( ModContainer mod ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index 2a2e2e1 . . 632c1ad 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 56 , 6 + 56 , 7 @ @ import net . minecraft . client . resources . LegacyV2Adapter ; 
 import net . minecraft . client . resources . SimpleReloadableResourceManager ; 
 import net . minecraft . client . resources . data . MetadataSerializer ; 
 import net . minecraft . client . resources . data . PackMetadataSection ; 
 + import net . minecraft . client . util . RecipeBookClient ; 
 import net . minecraft . crash . CrashReport ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . launchwrapper . Launch ; 
 @ @ - 1096 , 4 + 1097 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 return SplashProgress . isDisplayVSyncForced ; 
 } 
 + 
 + @ Override 
 + public void resetClientRecipeBook ( ) 
 + { 
 + RecipeBookClient . rebuildTable ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index db614fd . . a331901 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 771 , 4 + 771 , 7 @ @ public class FMLCommonHandler 
 } 
 
 public boolean isDisplayVSyncForced ( ) { return sidedDelegate . isDisplayVSyncForced ( ) ; } 
 + public void resetClientRecipeBook ( ) { 
 + this . sidedDelegate . resetClientRecipeBook ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 index 28126cf . . fa31c65 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 @ @ - 84 , 4 + 84 , 6 @ @ public interface IFMLSidedHandler 
 CompoundDataFixer getDataFixer ( ) ; 
 
 boolean isDisplayVSyncForced ( ) ; 
 + 
 + default void resetClientRecipeBook ( ) { } 
 }
