BLEU SCORE: 0.057737720665823

TEST MSG: Prevent missing model from loading multiple times .
GENERATED MSG: Show meaningful error if ModelLoaderRegistry is used before the missing model is initialized .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index 1800dda . . 097a410 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 818 , 6 + 818 , 10 @ @ public final class ModelLoader extends ModelBakery <nl> <nl> public IModel loadModel ( ResourceLocation modelLocation ) throws Exception <nl> { <nl> + if ( modelLocation . equals ( MODEL _ MISSING ) ) <nl> + { <nl> + return loader . getMissingModel ( ) ; <nl> + } <nl> String modelPath = modelLocation . getResourcePath ( ) ; <nl> if ( modelLocation . getResourcePath ( ) . startsWith ( " models / " ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java b / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java <nl> index 664fb48 . . 46ae29d 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java <nl> @ @ - 192 , 6 + 192 , 10 @ @ public class ModelLoaderRegistry <nl> <nl> public static IModel getMissingModel ( ) <nl> { <nl> + if ( ModelLoader . VanillaLoader . INSTANCE . getLoader ( ) = = null ) <nl> + { <nl> + throw new IllegalStateException ( " Using ModelLoaderRegistry too early . " ) ; <nl> + } <nl> return ModelLoader . VanillaLoader . INSTANCE . getLoader ( ) . getMissingModel ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index 1800dda . . 097a410 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 818 , 6 + 818 , 10 @ @ public final class ModelLoader extends ModelBakery 
 
 public IModel loadModel ( ResourceLocation modelLocation ) throws Exception 
 { 
 + if ( modelLocation . equals ( MODEL _ MISSING ) ) 
 + { 
 + return loader . getMissingModel ( ) ; 
 + } 
 String modelPath = modelLocation . getResourcePath ( ) ; 
 if ( modelLocation . getResourcePath ( ) . startsWith ( " models / " ) ) 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java b / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java 
 index 664fb48 . . 46ae29d 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoaderRegistry . java 
 @ @ - 192 , 6 + 192 , 10 @ @ public class ModelLoaderRegistry 
 
 public static IModel getMissingModel ( ) 
 { 
 + if ( ModelLoader . VanillaLoader . INSTANCE . getLoader ( ) = = null ) 
 + { 
 + throw new IllegalStateException ( " Using ModelLoaderRegistry too early . " ) ; 
 + } 
 return ModelLoader . VanillaLoader . INSTANCE . getLoader ( ) . getMissingModel ( ) ; 
 } 

