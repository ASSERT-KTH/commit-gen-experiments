BLEU SCORE: 0.001459383946013153

TEST MSG: More progress bar action !
GENERATED MSG: Fix failing to load a world with missing mod blocks and items . There will be a way to force worlds to load

TEST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 93cc41d . . 64fd52f 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 60 , 10 + 60 , 44 @ @ <nl> this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; <nl> this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 147127 _ av ) ; <nl> this . field _ 147126 _ aw = new MusicTicker ( this ) ; <nl> - @ @ - 532 , 19 + 539 , 20 @ @ <nl> + @ @ - 492 , 7 + 499 , 10 @ @ <nl> + this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71464 _ q ) ; <nl> + this . field _ 110451 _ am . func _ 110542 _ a ( new GrassColorReloadListener ( ) ) ; <nl> + this . field _ 110451 _ am . func _ 110542 _ a ( new FoliageColorReloadListener ( ) ) ; <nl> + + cpw . mods . fml . common . ProgressManager . ProgressBar bar = cpw . mods . fml . common . ProgressManager . push ( " Rendering Setup " , 9 ) ; <nl> + + bar . step ( " Loading Render Manager " ) ; <nl> + RenderManager . field _ 78727 _ a . field _ 78721 _ f = new ItemRenderer ( this ) ; <nl> + + bar . step ( " Loading Entity Renderer " ) ; <nl> + this . field _ 71460 _ t = new EntityRenderer ( this , this . field _ 110451 _ am ) ; <nl> + this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71460 _ t ) ; <nl> + AchievementList . field _ 76004 _ f . func _ 75988 _ a ( new IStatStringFormat ( ) <nl> + @ @ - 510 , 6 + 520 , 7 @ @ <nl> + } <nl> + } <nl> + } ) ; <nl> + + bar . step ( " Loading GL properties " ) ; <nl> + this . field _ 71417 _ B = new MouseHelper ( ) ; <nl> + this . func _ 71361 _ d ( " Pre startup " ) ; <nl> + GL11 . glEnable ( GL11 . GL _ TEXTURE _ 2D ) ; <nl> + @ @ - 524 , 27 + 535 , 35 @ @ <nl> + GL11 . glLoadIdentity ( ) ; <nl> + GL11 . glMatrixMode ( GL11 . GL _ MODELVIEW ) ; <nl> + this . func _ 71361 _ d ( " Startup " ) ; <nl> + + bar . step ( " Render Global instance " ) ; <nl> + this . field _ 71438 _ f = new RenderGlobal ( this ) ; <nl> + + bar . step ( " Building Blocks Texture " ) ; <nl> + this . field _ 147128 _ au = new TextureMap ( 0 , " textures / blocks " ) ; <nl> + + bar . step ( " Anisotropy and Mipmaps " ) ; <nl> + this . field _ 147128 _ au . func _ 147632 _ b ( this . field _ 71474 _ y . field _ 151443 _ J ) ; <nl> + this . field _ 147128 _ au . func _ 147633 _ a ( this . field _ 71474 _ y . field _ 151442 _ I ) ; <nl> + + bar . step ( " Loading Blocks Texture " ) ; <nl> + this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110575 _ b , this . field _ 147128 _ au ) ; <nl> + + bar . step ( " Loading Items Texture " ) ; <nl> this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110576 _ c , new TextureMap ( 1 , " textures / items " ) ) ; <nl> + + bar . step ( " Viewport " ) ; <nl> GL11 . glViewport ( 0 , 0 , this . field _ 71443 _ c , this . field _ 71440 _ d ) ; <nl> this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; <nl> + + cpw . mods . fml . common . ProgressManager . pop ( bar ) ; <nl> + FMLClientHandler . instance ( ) . finishMinecraftLoading ( ) ; <nl> this . func _ 71361 _ d ( " Post startup " ) ; <nl> this . field _ 71456 _ v = new GuiIngame ( this ) ; <nl> @ @ - 83 , 7 + 117 , 7 @ @ <nl> this . field _ 152354 _ ay = null ; <nl> this . field _ 71461 _ s = new LoadingScreenRenderer ( this ) ; <nl> <nl> - @ @ - 553 , 6 + 561 , 7 @ @ <nl> + @ @ - 553 , 6 + 572 , 7 @ @ <nl> this . func _ 71352 _ k ( ) ; <nl> } <nl> <nl> @ @ - 91 , 7 + 125 , 7 @ @ <nl> try <nl> { <nl> Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; <nl> - @ @ - 971 , 9 + 980 , 11 @ @ <nl> + @ @ - 970 , 9 + 990 , 11 @ @ <nl> <nl> if ( ! this . field _ 71454 _ w ) <nl> { <nl> @ @ - 103 , 7 + 137 , 7 @ @ <nl> } <nl> <nl> GL11 . glFlush ( ) ; <nl> - @ @ - 1555 , 6 + 1566 , 8 @ @ <nl> + @ @ - 1554 , 6 + 1576 , 8 @ @ <nl> - - this . field _ 71467 _ ac ; <nl> } <nl> <nl> @ @ - 112 , 7 + 146 , 7 @ @ <nl> this . field _ 71424 _ I . func _ 76320 _ a ( " gui " ) ; <nl> <nl> if ( ! this . field _ 71445 _ n ) <nl> - @ @ - 1699 , 6 + 1712 , 7 @ @ <nl> + @ @ - 1698 , 6 + 1722 , 7 @ @ <nl> this . field _ 71462 _ r . func _ 146274 _ d ( ) ; <nl> } <nl> } <nl> @ @ - 120 , 7 + 154 , 7 @ @ <nl> } <nl> <nl> if ( this . field _ 71429 _ W > 0 ) <nl> - @ @ - 1836 , 6 + 1850 , 7 @ @ <nl> + @ @ - 1835 , 6 + 1860 , 7 @ @ <nl> } <nl> } <nl> } <nl> @ @ - 128 , 7 + 162 , 7 @ @ <nl> } <nl> <nl> for ( j = 0 ; j < 9 ; + + j ) <nl> - @ @ - 2026 , 12 + 2041 , 15 @ @ <nl> + @ @ - 2025 , 12 + 2051 , 15 @ @ <nl> this . field _ 71453 _ ak . func _ 74428 _ b ( ) ; <nl> } <nl> <nl> @ @ - 144 , 7 + 178 , 7 @ @ <nl> this . func _ 71403 _ a ( ( WorldClient ) null ) ; <nl> System . gc ( ) ; <nl> ISaveHandler isavehandler = this . field _ 71469 _ aa . func _ 75804 _ a ( p _ 71371 _ 1 _ , false ) ; <nl> - @ @ - 2067 , 6 + 2085 , 12 @ @ <nl> + @ @ - 2066 , 6 + 2095 , 12 @ @ <nl> <nl> while ( ! this . field _ 71437 _ Z . func _ 71200 _ ad ( ) ) <nl> { <nl> @ @ - 157 , 7 + 191 , 7 @ @ <nl> String s2 = this . field _ 71437 _ Z . func _ 71195 _ b _ ( ) ; <nl> <nl> if ( s2 ! = null ) <nl> - @ @ - 2142 , 6 + 2166 , 7 @ @ <nl> + @ @ - 2141 , 6 + 2176 , 7 @ @ <nl> this . field _ 110448 _ aq . func _ 148529 _ f ( ) ; <nl> this . func _ 71351 _ a ( ( ServerData ) null ) ; <nl> this . field _ 71455 _ al = false ; <nl> diff - - git a / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch b / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch <nl> index d83c663 . . 1d48521 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch <nl> @ @ - 1 , 37 + 1 , 14 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java <nl> - @ @ - 6 , 16 + 6 , 22 @ @ <nl> - import com . google . common . collect . Lists ; <nl> - import com . google . common . collect . Maps ; <nl> - import com . google . common . collect . Sets ; <nl> - + <nl> - + import cpw . mods . fml . common . ProgressManager ; <nl> - + import cpw . mods . fml . common . ProgressManager . ProgressBar ; <nl> - import cpw . mods . fml . relauncher . Side ; <nl> - import cpw . mods . fml . relauncher . SideOnly ; <nl> - + <nl> - import java . io . FileNotFoundException ; <nl> - import java . io . IOException ; <nl> - import java . util . Iterator ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - import java . util . Set ; <nl> - + <nl> - import net . minecraft . client . resources . data . IMetadataSerializer ; <nl> - import net . minecraft . util . ResourceLocation ; <nl> - + <nl> - import org . apache . logging . log4j . LogManager ; <nl> - import org . apache . logging . log4j . Logger ; <nl> - <nl> - @ @ - 95 , 6 + 101 , 7 @ @ <nl> + @ @ - 95 , 6 + 95 , 7 @ @ <nl> public void func _ 110541 _ a ( List p _ 110541 _ 1 _ ) <nl> { <nl> this . func _ 110543 _ a ( ) ; <nl> - + ProgressBar resReload = ProgressManager . push ( " Resource loading " , p _ 110541 _ 1 _ . size ( ) ) ; <nl> + + cpw . mods . fml . common . ProgressManager . ProgressBar resReload = cpw . mods . fml . common . ProgressManager . push ( " Loading Resources " , p _ 110541 _ 1 _ . size ( ) ) ; <nl> field _ 147967 _ a . info ( " Reloading ResourceManager : " + field _ 130074 _ a . join ( Iterables . transform ( p _ 110541 _ 1 _ , new Function ( ) <nl> { <nl> private static final String _ _ OBFID = " CL _ 00001092 " ; <nl> - @ @ - 112 , 10 + 119 , 12 @ @ <nl> + @ @ - 112 , 16 + 113 , 22 @ @ <nl> while ( iterator . hasNext ( ) ) <nl> { <nl> IResourcePack iresourcepack = ( IResourcePack ) iterator . next ( ) ; <nl> @ @ - 40 , 7 + 17 , 17 @ @ <nl> } <nl> <nl> this . func _ 110544 _ b ( ) ; <nl> - + ProgressManager . pop ( resReload ) ; <nl> + + cpw . mods . fml . common . ProgressManager . pop ( resReload ) ; <nl> } <nl> <nl> public void func _ 110542 _ a ( IResourceManagerReloadListener p _ 110542 _ 1 _ ) <nl> + { <nl> + this . field _ 110546 _ b . add ( p _ 110542 _ 1 _ ) ; <nl> + + cpw . mods . fml . common . ProgressManager . ProgressBar resReload = cpw . mods . fml . common . ProgressManager . push ( " Loading Resource " , 1 ) ; <nl> + + String rn = p _ 110542 _ 1 _ . getClass ( ) . getName ( ) ; <nl> + + resReload . step ( rn . substring ( rn . lastIndexOf ( ' . ' ) + 1 ) ) ; <nl> + p _ 110542 _ 1 _ . func _ 110549 _ a ( this ) ; <nl> + + cpw . mods . fml . common . ProgressManager . pop ( resReload ) ; <nl> + } <nl> + <nl> + private void func _ 110544 _ b ( ) <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> index 727e542 . . ae3d264 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> @ @ - 341 , 7 + 341 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> } <nl> loading = false ; <nl> client . gameSettings . loadOptions ( ) ; / / Reload options to load any mod added keybindings . <nl> - SplashProgress . finish ( ) ; <nl> } <nl> <nl> @ SuppressWarnings ( " unused " ) <nl> @ @ - 397 , 6 + 396 , 8 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> } <nl> logMissingTextureErrors ( ) ; <nl> + Loader . instance ( ) . loadingComplete ( ) ; <nl> + SplashProgress . finish ( ) ; <nl> } <nl> / * * <nl> * Get the server instance <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> index 6e2258f . . ed4e613 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> @ @ - 597 , 6 + 597 , 7 @ @ public class FMLCommonHandler <nl> <nl> public void processWindowMessages ( ) <nl> { <nl> + if ( sidedDelegate = = null ) return ; <nl> sidedDelegate . processWindowMessages ( ) ; <nl> } <nl> <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / Loader . java b / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> index 801854b . . 8b2dded 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / Loader . java <nl> @ @ - 464 , 7 + 464 , 7 @ @ public class Loader <nl> * / <nl> public void loadMods ( ) <nl> { <nl> - progressBar = ProgressManager . push ( " Mod Loading " , 5 ) ; <nl> + progressBar = ProgressManager . push ( " Loading " , 7 ) ; <nl> progressBar . step ( " Constructing Mods " ) ; <nl> initializeLoader ( ) ; <nl> mods = Lists . newArrayList ( ) ; <nl> @ @ - 521 , 6 + 521 , 7 @ @ public class Loader <nl> ObjectHolderRegistry . INSTANCE . applyObjectHolders ( ) ; <nl> progressBar . step ( " Initializing mods Phase 2 " ) ; <nl> modController . transition ( LoaderState . INITIALIZATION , false ) ; <nl> + progressBar . step ( " Initializing Minecraft Engine " ) ; <nl> } <nl> <nl> private void disableRequestedMods ( ) <nl> @ @ - 708 , 8 + 709 , 7 @ @ public class Loader <nl> / / Dump the custom registry data map , if necessary <nl> GameData . dumpRegistry ( minecraftDir ) ; <nl> FMLLog . info ( " Forge Mod Loader has successfully loaded % d mod % s " , mods . size ( ) , mods . size ( ) = = 1 ? " " : " s " ) ; <nl> - ProgressManager . pop ( progressBar ) ; <nl> - progressBar = null ; <nl> + progressBar . step ( " Minecraft setup completion " ) ; <nl> } <nl> <nl> public ICrashCallable getCallableCrashInformation ( ) <nl> @ @ - 988 , 4 + 988 , 10 @ @ public class Loader <nl> FMLLog . log ( Level . INFO , e , " An error occurred writing the fml mod states file , your disabled change won ' t persist " ) ; <nl> } <nl> } <nl> + <nl> + public void loadingComplete ( ) <nl> + { <nl> + ProgressManager . pop ( progressBar ) ; <nl> + progressBar = null ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 276b546 . . 00d133e 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 19 , 7 + 19 , 21 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public class Minecraft implements IPlayerUsage <nl> { <nl> - @ @ - 448 , 7 + 453 , 7 @ @ <nl> + @ @ - 323 , 8 + 328 , 11 @ @ <nl> + <nl> + public void func _ 71404 _ a ( CrashReport p _ 71404 _ 1 _ ) <nl> + { <nl> + - this . field _ 71434 _ R = true ; <nl> + - this . field _ 71433 _ S = p _ 71404 _ 1 _ ; <nl> + + if ( ! FMLClientHandler . instance ( ) . handlingCrash ( p _ 71404 _ 1 _ ) ) <nl> + + { <nl> + + this . field _ 71434 _ R = true ; <nl> + + this . field _ 71433 _ S = p _ 71404 _ 1 _ ; <nl> + + } <nl> + } <nl> + <nl> + public void func _ 71377 _ b ( CrashReport p _ 71377 _ 1 _ ) <nl> + @ @ - 448 , 7 + 456 , 7 @ @ <nl> this . field _ 110451 _ am = new SimpleReloadableResourceManager ( this . field _ 110452 _ an ) ; <nl> this . field _ 135017 _ as = new LanguageManager ( this . field _ 110452 _ an , this . field _ 71474 _ y . field _ 74363 _ ab ) ; <nl> this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 135017 _ as ) ; <nl> @ @ - 28 , 7 + 42 , 7 @ @ <nl> this . field _ 71446 _ o = new TextureManager ( this . field _ 110451 _ am ) ; <nl> this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71446 _ o ) ; <nl> this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; <nl> - @ @ - 508 , 12 + 513 , 13 @ @ <nl> + @ @ - 508 , 12 + 516 , 13 @ @ <nl> this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110576 _ c , new TextureMap ( 1 , " textures / items " ) ) ; <nl> GL11 . glViewport ( 0 , 0 , this . field _ 71443 _ c , this . field _ 71440 _ d ) ; <nl> this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; <nl> @ @ - 43 , 7 + 57 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 527 , 6 + 533 , 7 @ @ <nl> + @ @ - 527 , 6 + 536 , 7 @ @ <nl> this . func _ 71352 _ k ( ) ; <nl> } <nl> <nl> @ @ - 51 , 7 + 65 , 7 @ @ <nl> Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; <nl> } <nl> <nl> - @ @ - 916 , 9 + 923 , 11 @ @ <nl> + @ @ - 916 , 9 + 926 , 11 @ @ <nl> <nl> if ( ! this . field _ 71454 _ w ) <nl> { <nl> @ @ - 63 , 7 + 77 , 7 @ @ <nl> } <nl> <nl> GL11 . glFlush ( ) ; <nl> - @ @ - 1496 , 6 + 1505 , 8 @ @ <nl> + @ @ - 1496 , 6 + 1508 , 8 @ @ <nl> - - this . field _ 71467 _ ac ; <nl> } <nl> <nl> @ @ - 72 , 7 + 86 , 7 @ @ <nl> this . field _ 71424 _ I . func _ 76320 _ a ( " gui " ) ; <nl> <nl> if ( ! this . field _ 71445 _ n ) <nl> - @ @ - 1646 , 6 + 1657 , 7 @ @ <nl> + @ @ - 1646 , 6 + 1660 , 7 @ @ <nl> this . field _ 71462 _ r . func _ 146274 _ d ( ) ; <nl> } <nl> } <nl> @ @ - 80 , 7 + 94 , 7 @ @ <nl> } <nl> <nl> if ( this . field _ 71429 _ W > 0 ) <nl> - @ @ - 1787 , 6 + 1799 , 7 @ @ <nl> + @ @ - 1787 , 6 + 1802 , 7 @ @ <nl> } <nl> } <nl> } <nl> @ @ - 88 , 7 + 102 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1978 , 12 + 1991 , 15 @ @ <nl> + @ @ - 1978 , 12 + 1994 , 15 @ @ <nl> this . field _ 71453 _ ak . func _ 74428 _ b ( ) ; <nl> } <nl> <nl> @ @ - 104 , 7 + 118 , 7 @ @ <nl> this . func _ 71403 _ a ( ( WorldClient ) null ) ; <nl> System . gc ( ) ; <nl> ISaveHandler isavehandler = this . field _ 71469 _ aa . func _ 75804 _ a ( p _ 71371 _ 1 _ , false ) ; <nl> - @ @ - 2094 , 6 + 2110 , 7 @ @ <nl> + @ @ - 2094 , 6 + 2113 , 7 @ @ <nl> this . field _ 110448 _ aq . func _ 148529 _ f ( ) ; <nl> this . func _ 71351 _ a ( ( ServerData ) null ) ; <nl> this . field _ 71455 _ al = false ; <nl> diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> index 0f078b3 . . 50652e5 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> @ @ - 1 , 15 + 1 , 17 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / server / MinecraftServer . java <nl> + + + . . / src - work / minecraft / net / minecraft / server / MinecraftServer . java <nl> - @ @ - 4 , 6 + 4 , 8 @ @ <nl> + @ @ - 4 , 6 + 4 , 10 @ @ <nl> import com . mojang . authlib . GameProfile ; <nl> import com . mojang . authlib . minecraft . MinecraftSessionService ; <nl> import com . mojang . authlib . yggdrasil . YggdrasilAuthenticationService ; <nl> + <nl> + import cpw . mods . fml . common . FMLCommonHandler ; <nl> + + import cpw . mods . fml . common . Loader ; <nl> + + import cpw . mods . fml . common . LoaderState ; <nl> import cpw . mods . fml . relauncher . Side ; <nl> import cpw . mods . fml . relauncher . SideOnly ; <nl> import io . netty . buffer . ByteBuf ; <nl> - @ @ - 385 , 6 + 387 , 7 @ @ <nl> + @ @ - 385 , 6 + 389 , 7 @ @ <nl> { <nl> if ( this . func _ 71197 _ b ( ) ) <nl> { <nl> @ @ - 17 , 7 + 19 , 7 @ @ <nl> long i = func _ 130071 _ aq ( ) ; <nl> long l = 0L ; <nl> this . field _ 147147 _ p . func _ 151315 _ a ( new ChatComponentText ( this . field _ 71286 _ C ) ) ; <nl> - @ @ - 429 , 6 + 432 , 7 @ @ <nl> + @ @ - 429 , 6 + 434 , 7 @ @ <nl> Thread . sleep ( 1L ) ; <nl> this . field _ 71296 _ Q = true ; <nl> } <nl> @ @ - 25 , 7 + 27 , 18 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 475 , 6 + 479 , 8 @ @ <nl> + @ @ - 466 , 7 + 472 , 10 @ @ <nl> + { <nl> + try <nl> + { <nl> + + if ( Loader . instance ( ) . hasReachedState ( LoaderState . SERVER _ STARTED ) ) <nl> + + { <nl> + this . func _ 71260 _ j ( ) ; <nl> + + } <nl> + this . field _ 71316 _ v = true ; <nl> + } <nl> + catch ( Throwable throwable ) <nl> + @ @ - 475 , 6 + 484 , 8 @ @ <nl> } <nl> finally <nl> { <nl> @ @ - 34 , 7 + 47 , 7 @ @ <nl> this . func _ 71240 _ o ( ) ; <nl> } <nl> } <nl> - @ @ - 517 , 6 + 523 , 7 @ @ <nl> + @ @ - 517 , 6 + 528 , 7 @ @ <nl> { <nl> long i = System . nanoTime ( ) ; <nl> AxisAlignedBB . func _ 72332 _ a ( ) . func _ 72298 _ a ( ) ; <nl> @ @ - 42 , 7 + 55 , 7 @ @ <nl> + + this . field _ 71315 _ w ; <nl> <nl> if ( this . field _ 71295 _ T ) <nl> - @ @ - 570 , 6 + 577 , 7 @ @ <nl> + @ @ - 570 , 6 + 582 , 7 @ @ <nl> <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> @ @ - 50 , 7 + 63 , 7 @ @ <nl> } <nl> <nl> public void func _ 71190 _ q ( ) <nl> - @ @ - 597 , 6 + 605 , 7 @ @ <nl> + @ @ - 597 , 6 + 610 , 7 @ @ <nl> } <nl> <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tick " ) ; <nl> @ @ - 58 , 7 + 71 , 7 @ @ <nl> CrashReport crashreport ; <nl> <nl> try <nl> - @ @ - 621 , 6 + 630 , 7 @ @ <nl> + @ @ - 621 , 6 + 635 , 7 @ @ <nl> throw new ReportedException ( crashreport ) ; <nl> } <nl> <nl> @ @ - 66 , 7 + 79 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; <nl> worldserver . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; <nl> - @ @ - 699 , 7 + 709 , 7 @ @ <nl> + @ @ - 699 , 7 + 714 , 7 @ @ <nl> <nl> public String getServerModName ( ) <nl> { <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> index 6e8fec0 . . 5831280 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> @ @ - 21 , 7 + 21 , 9 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Map . Entry ; <nl> import java . util . Set ; <nl> + import java . util . concurrent . Callable ; <nl> import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . Executors ; <nl> import java . util . concurrent . TimeUnit ; <nl> import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . entity . EntityClientPlayerMP ; <nl> @ @ - 69 , 6 + 71 , 7 @ @ import cpw . mods . fml . client . registry . RenderingRegistry ; <nl> import cpw . mods . fml . common . DummyModContainer ; <nl> import cpw . mods . fml . common . DuplicateModsFoundException ; <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import cpw . mods . fml . common . FMLContainer ; <nl> import cpw . mods . fml . common . FMLLog ; <nl> import cpw . mods . fml . common . IFMLSidedHandler ; <nl> import cpw . mods . fml . common . Loader ; <nl> @ @ - 78 , 6 + 81 , 7 @ @ import cpw . mods . fml . common . MissingModsException ; <nl> import cpw . mods . fml . common . ModContainer ; <nl> import cpw . mods . fml . common . ModMetadata ; <nl> import cpw . mods . fml . common . ObfuscationReflectionHelper ; <nl> + import cpw . mods . fml . common . WorldAccessContainer ; <nl> import cpw . mods . fml . common . WrongMinecraftVersionException ; <nl> import cpw . mods . fml . common . event . FMLMissingMappingsEvent ; <nl> import cpw . mods . fml . common . event . FMLMissingMappingsEvent . Action ; <nl> @ @ - 596 , 16 + 600 , 35 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> } <nl> } <nl> <nl> + private CountDownLatch gameReleaseLatch ; <nl> + private Thread clientWaiter ; <nl> + private GameRegistryException gre ; <nl> + <nl> public void launchIntegratedServerCallback ( String dirName , String saveName ) <nl> { <nl> try <nl> { <nl> - client . func _ 71371 _ a ( dirName , saveName , ( WorldSettings ) null ) ; <nl> + try <nl> + { <nl> + Thread . interrupted ( ) ; <nl> + gameReleaseLatch = new CountDownLatch ( 1 ) ; <nl> + clientWaiter = Thread . currentThread ( ) ; <nl> + client . func _ 71371 _ a ( dirName , saveName , ( WorldSettings ) null ) ; <nl> + System . out . printf ( " POKEE % b \ n " , Thread . currentThread ( ) . isInterrupted ( ) ) ; <nl> + gameReleaseLatch . await ( ) ; <nl> + } <nl> + catch ( InterruptedException ie ) <nl> + { <nl> + Thread . interrupted ( ) ; <nl> + throw gre ; <nl> + } <nl> } <nl> catch ( GameRegistryException gre ) <nl> { <nl> + client . func _ 71403 _ a ( null ) ; <nl> showGuiScreen ( new GuiModItemsMissing ( gre . getItems ( ) , gre . getMessage ( ) ) ) ; <nl> } <nl> + Thread . interrupted ( ) ; <nl> } <nl> <nl> public void showInGameModOptions ( GuiIngameMenu guiIngameMenu ) <nl> @ @ - 801 , 4 + 824 , 52 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> return defaultMissingAction ; <nl> } <nl> + <nl> + @ Override <nl> + public void serverLoadedSuccessfully ( ) <nl> + { <nl> + if ( gameReleaseLatch ! = null ) <nl> + { <nl> + gameReleaseLatch . countDown ( ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public void failedServerLoading ( RuntimeException ex , WorldAccessContainer wac ) <nl> + { <nl> + if ( wac instanceof FMLContainer & & ex instanceof GameRegistryException ) <nl> + { <nl> + try <nl> + { <nl> + gre = ( GameRegistryException ) ex ; <nl> + Executors . newSingleThreadExecutor ( ) . submit ( new Callable < Void > ( ) <nl> + { <nl> + @ Override <nl> + public Void call ( ) throws Exception <nl> + { <nl> + System . err . println ( " POKE " ) ; <nl> + clientWaiter . interrupt ( ) ; <nl> + Thread . sleep ( 50 ) ; <nl> + System . err . println ( " POKE " ) ; <nl> + clientWaiter . interrupt ( ) ; <nl> + Thread . sleep ( 50 ) ; <nl> + System . err . println ( " POKE " ) ; <nl> + clientWaiter . interrupt ( ) ; <nl> + return null ; <nl> + } <nl> + <nl> + } ) ; <nl> + <nl> + } <nl> + catch ( Throwable t ) <nl> + { <nl> + FMLLog . log ( Level . ERROR , t , " stuff " ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public boolean handlingCrash ( CrashReport report ) <nl> + { <nl> + return report . func _ 71505 _ b ( ) instanceof GameRegistryException ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> index 17bc4f7 . . 7327528 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> @ @ - 266 , 6 + 266 , 7 @ @ public class FMLCommonHandler <nl> <nl> public boolean handleServerStarting ( MinecraftServer server ) <nl> { <nl> + sidedDelegate . serverLoadedSuccessfully ( ) ; <nl> return Loader . instance ( ) . serverStarting ( server ) ; <nl> } <nl> <nl> @ @ - 380 , 7 + 381 , 15 @ @ public class FMLCommonHandler <nl> WorldAccessContainer wac = ( ( InjectedModContainer ) mc ) . getWrappedWorldAccessContainer ( ) ; <nl> if ( wac ! = null ) <nl> { <nl> - wac . readData ( handler , worldInfo , additionalProperties , tagCompound . func _ 74775 _ l ( mc . getModId ( ) ) ) ; <nl> + try <nl> + { <nl> + wac . readData ( handler , worldInfo , additionalProperties , tagCompound . func _ 74775 _ l ( mc . getModId ( ) ) ) ; <nl> + } <nl> + catch ( RuntimeException ex ) <nl> + { <nl> + sidedDelegate . failedServerLoading ( ex , wac ) ; <nl> + throw ex ; <nl> + } <nl> } <nl> } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java <nl> index ee7c319 . . a3bbdff 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java <nl> @ @ - 57 , 4 + 57 , 8 @ @ public interface IFMLSidedHandler <nl> void fireNetRegistrationEvent ( EventBus bus , NetworkManager manager , Set < String > channelSet , String channel , Side side ) ; <nl> <nl> FMLMissingMappingsEvent . Action getDefaultMissingAction ( ) ; <nl> + <nl> + void serverLoadedSuccessfully ( ) ; <nl> + <nl> + void failedServerLoading ( RuntimeException ex , WorldAccessContainer wac ) ; <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java <nl> index 552921f . . 4ac7f18 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import cpw . mods . fml . common . FMLCommonHandler ; <nl> import cpw . mods . fml . common . IFMLSidedHandler ; <nl> import cpw . mods . fml . common . Loader ; <nl> import cpw . mods . fml . common . ModContainer ; <nl> + import cpw . mods . fml . common . WorldAccessContainer ; <nl> import cpw . mods . fml . common . event . FMLMissingMappingsEvent ; <nl> import cpw . mods . fml . common . eventhandler . EventBus ; <nl> import cpw . mods . fml . common . network . FMLNetworkEvent ; <nl> @ @ - 185 , 4 + 186 , 14 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> return FMLMissingMappingsEvent . Action . valueOf ( System . getProperty ( " fml . missingBlockAction " , " FAIL " ) ) ; <nl> } <nl> + @ Override <nl> + public void serverLoadedSuccessfully ( ) <nl> + { <nl> + <nl> + } <nl> + @ Override <nl> + public void failedServerLoading ( RuntimeException ex , WorldAccessContainer wac ) <nl> + { <nl> + <nl> + } <nl> }

TEST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 93cc41d . . 64fd52f 100644 
 - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 60 , 10 + 60 , 44 @ @ 
 this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; 
 this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 147127 _ av ) ; 
 this . field _ 147126 _ aw = new MusicTicker ( this ) ; 
 - @ @ - 532 , 19 + 539 , 20 @ @ 
 + @ @ - 492 , 7 + 499 , 10 @ @ 
 + this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71464 _ q ) ; 
 + this . field _ 110451 _ am . func _ 110542 _ a ( new GrassColorReloadListener ( ) ) ; 
 + this . field _ 110451 _ am . func _ 110542 _ a ( new FoliageColorReloadListener ( ) ) ; 
 + + cpw . mods . fml . common . ProgressManager . ProgressBar bar = cpw . mods . fml . common . ProgressManager . push ( " Rendering Setup " , 9 ) ; 
 + + bar . step ( " Loading Render Manager " ) ; 
 + RenderManager . field _ 78727 _ a . field _ 78721 _ f = new ItemRenderer ( this ) ; 
 + + bar . step ( " Loading Entity Renderer " ) ; 
 + this . field _ 71460 _ t = new EntityRenderer ( this , this . field _ 110451 _ am ) ; 
 + this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71460 _ t ) ; 
 + AchievementList . field _ 76004 _ f . func _ 75988 _ a ( new IStatStringFormat ( ) 
 + @ @ - 510 , 6 + 520 , 7 @ @ 
 + } 
 + } 
 + } ) ; 
 + + bar . step ( " Loading GL properties " ) ; 
 + this . field _ 71417 _ B = new MouseHelper ( ) ; 
 + this . func _ 71361 _ d ( " Pre startup " ) ; 
 + GL11 . glEnable ( GL11 . GL _ TEXTURE _ 2D ) ; 
 + @ @ - 524 , 27 + 535 , 35 @ @ 
 + GL11 . glLoadIdentity ( ) ; 
 + GL11 . glMatrixMode ( GL11 . GL _ MODELVIEW ) ; 
 + this . func _ 71361 _ d ( " Startup " ) ; 
 + + bar . step ( " Render Global instance " ) ; 
 + this . field _ 71438 _ f = new RenderGlobal ( this ) ; 
 + + bar . step ( " Building Blocks Texture " ) ; 
 + this . field _ 147128 _ au = new TextureMap ( 0 , " textures / blocks " ) ; 
 + + bar . step ( " Anisotropy and Mipmaps " ) ; 
 + this . field _ 147128 _ au . func _ 147632 _ b ( this . field _ 71474 _ y . field _ 151443 _ J ) ; 
 + this . field _ 147128 _ au . func _ 147633 _ a ( this . field _ 71474 _ y . field _ 151442 _ I ) ; 
 + + bar . step ( " Loading Blocks Texture " ) ; 
 + this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110575 _ b , this . field _ 147128 _ au ) ; 
 + + bar . step ( " Loading Items Texture " ) ; 
 this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110576 _ c , new TextureMap ( 1 , " textures / items " ) ) ; 
 + + bar . step ( " Viewport " ) ; 
 GL11 . glViewport ( 0 , 0 , this . field _ 71443 _ c , this . field _ 71440 _ d ) ; 
 this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; 
 + + cpw . mods . fml . common . ProgressManager . pop ( bar ) ; 
 + FMLClientHandler . instance ( ) . finishMinecraftLoading ( ) ; 
 this . func _ 71361 _ d ( " Post startup " ) ; 
 this . field _ 71456 _ v = new GuiIngame ( this ) ; 
 @ @ - 83 , 7 + 117 , 7 @ @ 
 this . field _ 152354 _ ay = null ; 
 this . field _ 71461 _ s = new LoadingScreenRenderer ( this ) ; 
 
 - @ @ - 553 , 6 + 561 , 7 @ @ 
 + @ @ - 553 , 6 + 572 , 7 @ @ 
 this . func _ 71352 _ k ( ) ; 
 } 
 
 @ @ - 91 , 7 + 125 , 7 @ @ 
 try 
 { 
 Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; 
 - @ @ - 971 , 9 + 980 , 11 @ @ 
 + @ @ - 970 , 9 + 990 , 11 @ @ 
 
 if ( ! this . field _ 71454 _ w ) 
 { 
 @ @ - 103 , 7 + 137 , 7 @ @ 
 } 
 
 GL11 . glFlush ( ) ; 
 - @ @ - 1555 , 6 + 1566 , 8 @ @ 
 + @ @ - 1554 , 6 + 1576 , 8 @ @ 
 - - this . field _ 71467 _ ac ; 
 } 
 
 @ @ - 112 , 7 + 146 , 7 @ @ 
 this . field _ 71424 _ I . func _ 76320 _ a ( " gui " ) ; 
 
 if ( ! this . field _ 71445 _ n ) 
 - @ @ - 1699 , 6 + 1712 , 7 @ @ 
 + @ @ - 1698 , 6 + 1722 , 7 @ @ 
 this . field _ 71462 _ r . func _ 146274 _ d ( ) ; 
 } 
 } 
 @ @ - 120 , 7 + 154 , 7 @ @ 
 } 
 
 if ( this . field _ 71429 _ W > 0 ) 
 - @ @ - 1836 , 6 + 1850 , 7 @ @ 
 + @ @ - 1835 , 6 + 1860 , 7 @ @ 
 } 
 } 
 } 
 @ @ - 128 , 7 + 162 , 7 @ @ 
 } 
 
 for ( j = 0 ; j < 9 ; + + j ) 
 - @ @ - 2026 , 12 + 2041 , 15 @ @ 
 + @ @ - 2025 , 12 + 2051 , 15 @ @ 
 this . field _ 71453 _ ak . func _ 74428 _ b ( ) ; 
 } 
 
 @ @ - 144 , 7 + 178 , 7 @ @ 
 this . func _ 71403 _ a ( ( WorldClient ) null ) ; 
 System . gc ( ) ; 
 ISaveHandler isavehandler = this . field _ 71469 _ aa . func _ 75804 _ a ( p _ 71371 _ 1 _ , false ) ; 
 - @ @ - 2067 , 6 + 2085 , 12 @ @ 
 + @ @ - 2066 , 6 + 2095 , 12 @ @ 
 
 while ( ! this . field _ 71437 _ Z . func _ 71200 _ ad ( ) ) 
 { 
 @ @ - 157 , 7 + 191 , 7 @ @ 
 String s2 = this . field _ 71437 _ Z . func _ 71195 _ b _ ( ) ; 
 
 if ( s2 ! = null ) 
 - @ @ - 2142 , 6 + 2166 , 7 @ @ 
 + @ @ - 2141 , 6 + 2176 , 7 @ @ 
 this . field _ 110448 _ aq . func _ 148529 _ f ( ) ; 
 this . func _ 71351 _ a ( ( ServerData ) null ) ; 
 this . field _ 71455 _ al = false ; 
 diff - - git a / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch b / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch 
 index d83c663 . . 1d48521 100644 
 - - - a / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java . patch 
 @ @ - 1 , 37 + 1 , 14 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java 
 + + + . . / src - work / minecraft / net / minecraft / client / resources / SimpleReloadableResourceManager . java 
 - @ @ - 6 , 16 + 6 , 22 @ @ 
 - import com . google . common . collect . Lists ; 
 - import com . google . common . collect . Maps ; 
 - import com . google . common . collect . Sets ; 
 - + 
 - + import cpw . mods . fml . common . ProgressManager ; 
 - + import cpw . mods . fml . common . ProgressManager . ProgressBar ; 
 - import cpw . mods . fml . relauncher . Side ; 
 - import cpw . mods . fml . relauncher . SideOnly ; 
 - + 
 - import java . io . FileNotFoundException ; 
 - import java . io . IOException ; 
 - import java . util . Iterator ; 
 - import java . util . List ; 
 - import java . util . Map ; 
 - import java . util . Set ; 
 - + 
 - import net . minecraft . client . resources . data . IMetadataSerializer ; 
 - import net . minecraft . util . ResourceLocation ; 
 - + 
 - import org . apache . logging . log4j . LogManager ; 
 - import org . apache . logging . log4j . Logger ; 
 - 
 - @ @ - 95 , 6 + 101 , 7 @ @ 
 + @ @ - 95 , 6 + 95 , 7 @ @ 
 public void func _ 110541 _ a ( List p _ 110541 _ 1 _ ) 
 { 
 this . func _ 110543 _ a ( ) ; 
 - + ProgressBar resReload = ProgressManager . push ( " Resource loading " , p _ 110541 _ 1 _ . size ( ) ) ; 
 + + cpw . mods . fml . common . ProgressManager . ProgressBar resReload = cpw . mods . fml . common . ProgressManager . push ( " Loading Resources " , p _ 110541 _ 1 _ . size ( ) ) ; 
 field _ 147967 _ a . info ( " Reloading ResourceManager : " + field _ 130074 _ a . join ( Iterables . transform ( p _ 110541 _ 1 _ , new Function ( ) 
 { 
 private static final String _ _ OBFID = " CL _ 00001092 " ; 
 - @ @ - 112 , 10 + 119 , 12 @ @ 
 + @ @ - 112 , 16 + 113 , 22 @ @ 
 while ( iterator . hasNext ( ) ) 
 { 
 IResourcePack iresourcepack = ( IResourcePack ) iterator . next ( ) ; 
 @ @ - 40 , 7 + 17 , 17 @ @ 
 } 
 
 this . func _ 110544 _ b ( ) ; 
 - + ProgressManager . pop ( resReload ) ; 
 + + cpw . mods . fml . common . ProgressManager . pop ( resReload ) ; 
 } 
 
 public void func _ 110542 _ a ( IResourceManagerReloadListener p _ 110542 _ 1 _ ) 
 + { 
 + this . field _ 110546 _ b . add ( p _ 110542 _ 1 _ ) ; 
 + + cpw . mods . fml . common . ProgressManager . ProgressBar resReload = cpw . mods . fml . common . ProgressManager . push ( " Loading Resource " , 1 ) ; 
 + + String rn = p _ 110542 _ 1 _ . getClass ( ) . getName ( ) ; 
 + + resReload . step ( rn . substring ( rn . lastIndexOf ( ' . ' ) + 1 ) ) ; 
 + p _ 110542 _ 1 _ . func _ 110549 _ a ( this ) ; 
 + + cpw . mods . fml . common . ProgressManager . pop ( resReload ) ; 
 + } 
 + 
 + private void func _ 110544 _ b ( ) 
 diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 index 727e542 . . ae3d264 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 @ @ - 341 , 7 + 341 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 } 
 loading = false ; 
 client . gameSettings . loadOptions ( ) ; / / Reload options to load any mod added keybindings . 
 - SplashProgress . finish ( ) ; 
 } 
 
 @ SuppressWarnings ( " unused " ) 
 @ @ - 397 , 6 + 396 , 8 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 } 
 logMissingTextureErrors ( ) ; 
 + Loader . instance ( ) . loadingComplete ( ) ; 
 + SplashProgress . finish ( ) ; 
 } 
 / * * 
 * Get the server instance 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 index 6e2258f . . ed4e613 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 @ @ - 597 , 6 + 597 , 7 @ @ public class FMLCommonHandler 
 
 public void processWindowMessages ( ) 
 { 
 + if ( sidedDelegate = = null ) return ; 
 sidedDelegate . processWindowMessages ( ) ; 
 } 
 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / Loader . java b / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 index 801854b . . 8b2dded 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / Loader . java 
 @ @ - 464 , 7 + 464 , 7 @ @ public class Loader 
 * / 
 public void loadMods ( ) 
 { 
 - progressBar = ProgressManager . push ( " Mod Loading " , 5 ) ; 
 + progressBar = ProgressManager . push ( " Loading " , 7 ) ; 
 progressBar . step ( " Constructing Mods " ) ; 
 initializeLoader ( ) ; 
 mods = Lists . newArrayList ( ) ; 
 @ @ - 521 , 6 + 521 , 7 @ @ public class Loader 
 ObjectHolderRegistry . INSTANCE . applyObjectHolders ( ) ; 
 progressBar . step ( " Initializing mods Phase 2 " ) ; 
 modController . transition ( LoaderState . INITIALIZATION , false ) ; 
 + progressBar . step ( " Initializing Minecraft Engine " ) ; 
 } 
 
 private void disableRequestedMods ( ) 
 @ @ - 708 , 8 + 709 , 7 @ @ public class Loader 
 / / Dump the custom registry data map , if necessary 
 GameData . dumpRegistry ( minecraftDir ) ; 
 FMLLog . info ( " Forge Mod Loader has successfully loaded % d mod % s " , mods . size ( ) , mods . size ( ) = = 1 ? " " : " s " ) ; 
 - ProgressManager . pop ( progressBar ) ; 
 - progressBar = null ; 
 + progressBar . step ( " Minecraft setup completion " ) ; 
 } 
 
 public ICrashCallable getCallableCrashInformation ( ) 
 @ @ - 988 , 4 + 988 , 10 @ @ public class Loader 
 FMLLog . log ( Level . INFO , e , " An error occurred writing the fml mod states file , your disabled change won ' t persist " ) ; 
 } 
 } 
 + 
 + public void loadingComplete ( ) 
 + { 
 + ProgressManager . pop ( progressBar ) ; 
 + progressBar = null ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 276b546 . . 00d133e 100644 
 - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 19 , 7 + 19 , 21 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public class Minecraft implements IPlayerUsage 
 { 
 - @ @ - 448 , 7 + 453 , 7 @ @ 
 + @ @ - 323 , 8 + 328 , 11 @ @ 
 + 
 + public void func _ 71404 _ a ( CrashReport p _ 71404 _ 1 _ ) 
 + { 
 + - this . field _ 71434 _ R = true ; 
 + - this . field _ 71433 _ S = p _ 71404 _ 1 _ ; 
 + + if ( ! FMLClientHandler . instance ( ) . handlingCrash ( p _ 71404 _ 1 _ ) ) 
 + + { 
 + + this . field _ 71434 _ R = true ; 
 + + this . field _ 71433 _ S = p _ 71404 _ 1 _ ; 
 + + } 
 + } 
 + 
 + public void func _ 71377 _ b ( CrashReport p _ 71377 _ 1 _ ) 
 + @ @ - 448 , 7 + 456 , 7 @ @ 
 this . field _ 110451 _ am = new SimpleReloadableResourceManager ( this . field _ 110452 _ an ) ; 
 this . field _ 135017 _ as = new LanguageManager ( this . field _ 110452 _ an , this . field _ 71474 _ y . field _ 74363 _ ab ) ; 
 this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 135017 _ as ) ; 
 @ @ - 28 , 7 + 42 , 7 @ @ 
 this . field _ 71446 _ o = new TextureManager ( this . field _ 110451 _ am ) ; 
 this . field _ 110451 _ am . func _ 110542 _ a ( this . field _ 71446 _ o ) ; 
 this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; 
 - @ @ - 508 , 12 + 513 , 13 @ @ 
 + @ @ - 508 , 12 + 516 , 13 @ @ 
 this . field _ 71446 _ o . func _ 130088 _ a ( TextureMap . field _ 110576 _ c , new TextureMap ( 1 , " textures / items " ) ) ; 
 GL11 . glViewport ( 0 , 0 , this . field _ 71443 _ c , this . field _ 71440 _ d ) ; 
 this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; 
 @ @ - 43 , 7 + 57 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 527 , 6 + 533 , 7 @ @ 
 + @ @ - 527 , 6 + 536 , 7 @ @ 
 this . func _ 71352 _ k ( ) ; 
 } 
 
 @ @ - 51 , 7 + 65 , 7 @ @ 
 Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; 
 } 
 
 - @ @ - 916 , 9 + 923 , 11 @ @ 
 + @ @ - 916 , 9 + 926 , 11 @ @ 
 
 if ( ! this . field _ 71454 _ w ) 
 { 
 @ @ - 63 , 7 + 77 , 7 @ @ 
 } 
 
 GL11 . glFlush ( ) ; 
 - @ @ - 1496 , 6 + 1505 , 8 @ @ 
 + @ @ - 1496 , 6 + 1508 , 8 @ @ 
 - - this . field _ 71467 _ ac ; 
 } 
 
 @ @ - 72 , 7 + 86 , 7 @ @ 
 this . field _ 71424 _ I . func _ 76320 _ a ( " gui " ) ; 
 
 if ( ! this . field _ 71445 _ n ) 
 - @ @ - 1646 , 6 + 1657 , 7 @ @ 
 + @ @ - 1646 , 6 + 1660 , 7 @ @ 
 this . field _ 71462 _ r . func _ 146274 _ d ( ) ; 
 } 
 } 
 @ @ - 80 , 7 + 94 , 7 @ @ 
 } 
 
 if ( this . field _ 71429 _ W > 0 ) 
 - @ @ - 1787 , 6 + 1799 , 7 @ @ 
 + @ @ - 1787 , 6 + 1802 , 7 @ @ 
 } 
 } 
 } 
 @ @ - 88 , 7 + 102 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1978 , 12 + 1991 , 15 @ @ 
 + @ @ - 1978 , 12 + 1994 , 15 @ @ 
 this . field _ 71453 _ ak . func _ 74428 _ b ( ) ; 
 } 
 
 @ @ - 104 , 7 + 118 , 7 @ @ 
 this . func _ 71403 _ a ( ( WorldClient ) null ) ; 
 System . gc ( ) ; 
 ISaveHandler isavehandler = this . field _ 71469 _ aa . func _ 75804 _ a ( p _ 71371 _ 1 _ , false ) ; 
 - @ @ - 2094 , 6 + 2110 , 7 @ @ 
 + @ @ - 2094 , 6 + 2113 , 7 @ @ 
 this . field _ 110448 _ aq . func _ 148529 _ f ( ) ; 
 this . func _ 71351 _ a ( ( ServerData ) null ) ; 
 this . field _ 71455 _ al = false ; 
 diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 index 0f078b3 . . 50652e5 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 @ @ - 1 , 15 + 1 , 17 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / server / MinecraftServer . java 
 + + + . . / src - work / minecraft / net / minecraft / server / MinecraftServer . java 
 - @ @ - 4 , 6 + 4 , 8 @ @ 
 + @ @ - 4 , 6 + 4 , 10 @ @ 
 import com . mojang . authlib . GameProfile ; 
 import com . mojang . authlib . minecraft . MinecraftSessionService ; 
 import com . mojang . authlib . yggdrasil . YggdrasilAuthenticationService ; 
 + 
 + import cpw . mods . fml . common . FMLCommonHandler ; 
 + + import cpw . mods . fml . common . Loader ; 
 + + import cpw . mods . fml . common . LoaderState ; 
 import cpw . mods . fml . relauncher . Side ; 
 import cpw . mods . fml . relauncher . SideOnly ; 
 import io . netty . buffer . ByteBuf ; 
 - @ @ - 385 , 6 + 387 , 7 @ @ 
 + @ @ - 385 , 6 + 389 , 7 @ @ 
 { 
 if ( this . func _ 71197 _ b ( ) ) 
 { 
 @ @ - 17 , 7 + 19 , 7 @ @ 
 long i = func _ 130071 _ aq ( ) ; 
 long l = 0L ; 
 this . field _ 147147 _ p . func _ 151315 _ a ( new ChatComponentText ( this . field _ 71286 _ C ) ) ; 
 - @ @ - 429 , 6 + 432 , 7 @ @ 
 + @ @ - 429 , 6 + 434 , 7 @ @ 
 Thread . sleep ( 1L ) ; 
 this . field _ 71296 _ Q = true ; 
 } 
 @ @ - 25 , 7 + 27 , 18 @ @ 
 } 
 else 
 { 
 - @ @ - 475 , 6 + 479 , 8 @ @ 
 + @ @ - 466 , 7 + 472 , 10 @ @ 
 + { 
 + try 
 + { 
 + + if ( Loader . instance ( ) . hasReachedState ( LoaderState . SERVER _ STARTED ) ) 
 + + { 
 + this . func _ 71260 _ j ( ) ; 
 + + } 
 + this . field _ 71316 _ v = true ; 
 + } 
 + catch ( Throwable throwable ) 
 + @ @ - 475 , 6 + 484 , 8 @ @ 
 } 
 finally 
 { 
 @ @ - 34 , 7 + 47 , 7 @ @ 
 this . func _ 71240 _ o ( ) ; 
 } 
 } 
 - @ @ - 517 , 6 + 523 , 7 @ @ 
 + @ @ - 517 , 6 + 528 , 7 @ @ 
 { 
 long i = System . nanoTime ( ) ; 
 AxisAlignedBB . func _ 72332 _ a ( ) . func _ 72298 _ a ( ) ; 
 @ @ - 42 , 7 + 55 , 7 @ @ 
 + + this . field _ 71315 _ w ; 
 
 if ( this . field _ 71295 _ T ) 
 - @ @ - 570 , 6 + 577 , 7 @ @ 
 + @ @ - 570 , 6 + 582 , 7 @ @ 
 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 @ @ - 50 , 7 + 63 , 7 @ @ 
 } 
 
 public void func _ 71190 _ q ( ) 
 - @ @ - 597 , 6 + 605 , 7 @ @ 
 + @ @ - 597 , 6 + 610 , 7 @ @ 
 } 
 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tick " ) ; 
 @ @ - 58 , 7 + 71 , 7 @ @ 
 CrashReport crashreport ; 
 
 try 
 - @ @ - 621 , 6 + 630 , 7 @ @ 
 + @ @ - 621 , 6 + 635 , 7 @ @ 
 throw new ReportedException ( crashreport ) ; 
 } 
 
 @ @ - 66 , 7 + 79 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 this . field _ 71304 _ b . func _ 76320 _ a ( " tracker " ) ; 
 worldserver . func _ 73039 _ n ( ) . func _ 72788 _ a ( ) ; 
 - @ @ - 699 , 7 + 709 , 7 @ @ 
 + @ @ - 699 , 7 + 714 , 7 @ @ 
 
 public String getServerModName ( ) 
 { 
 diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 index 6e8fec0 . . 5831280 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 @ @ - 21 , 7 + 21 , 9 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Map . Entry ; 
 import java . util . Set ; 
 + import java . util . concurrent . Callable ; 
 import java . util . concurrent . CountDownLatch ; 
 + import java . util . concurrent . Executors ; 
 import java . util . concurrent . TimeUnit ; 
 import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . entity . EntityClientPlayerMP ; 
 @ @ - 69 , 6 + 71 , 7 @ @ import cpw . mods . fml . client . registry . RenderingRegistry ; 
 import cpw . mods . fml . common . DummyModContainer ; 
 import cpw . mods . fml . common . DuplicateModsFoundException ; 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import cpw . mods . fml . common . FMLContainer ; 
 import cpw . mods . fml . common . FMLLog ; 
 import cpw . mods . fml . common . IFMLSidedHandler ; 
 import cpw . mods . fml . common . Loader ; 
 @ @ - 78 , 6 + 81 , 7 @ @ import cpw . mods . fml . common . MissingModsException ; 
 import cpw . mods . fml . common . ModContainer ; 
 import cpw . mods . fml . common . ModMetadata ; 
 import cpw . mods . fml . common . ObfuscationReflectionHelper ; 
 + import cpw . mods . fml . common . WorldAccessContainer ; 
 import cpw . mods . fml . common . WrongMinecraftVersionException ; 
 import cpw . mods . fml . common . event . FMLMissingMappingsEvent ; 
 import cpw . mods . fml . common . event . FMLMissingMappingsEvent . Action ; 
 @ @ - 596 , 16 + 600 , 35 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 } 
 } 
 
 + private CountDownLatch gameReleaseLatch ; 
 + private Thread clientWaiter ; 
 + private GameRegistryException gre ; 
 + 
 public void launchIntegratedServerCallback ( String dirName , String saveName ) 
 { 
 try 
 { 
 - client . func _ 71371 _ a ( dirName , saveName , ( WorldSettings ) null ) ; 
 + try 
 + { 
 + Thread . interrupted ( ) ; 
 + gameReleaseLatch = new CountDownLatch ( 1 ) ; 
 + clientWaiter = Thread . currentThread ( ) ; 
 + client . func _ 71371 _ a ( dirName , saveName , ( WorldSettings ) null ) ; 
 + System . out . printf ( " POKEE % b \ n " , Thread . currentThread ( ) . isInterrupted ( ) ) ; 
 + gameReleaseLatch . await ( ) ; 
 + } 
 + catch ( InterruptedException ie ) 
 + { 
 + Thread . interrupted ( ) ; 
 + throw gre ; 
 + } 
 } 
 catch ( GameRegistryException gre ) 
 { 
 + client . func _ 71403 _ a ( null ) ; 
 showGuiScreen ( new GuiModItemsMissing ( gre . getItems ( ) , gre . getMessage ( ) ) ) ; 
 } 
 + Thread . interrupted ( ) ; 
 } 
 
 public void showInGameModOptions ( GuiIngameMenu guiIngameMenu ) 
 @ @ - 801 , 4 + 824 , 52 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 return defaultMissingAction ; 
 } 
 + 
 + @ Override 
 + public void serverLoadedSuccessfully ( ) 
 + { 
 + if ( gameReleaseLatch ! = null ) 
 + { 
 + gameReleaseLatch . countDown ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void failedServerLoading ( RuntimeException ex , WorldAccessContainer wac ) 
 + { 
 + if ( wac instanceof FMLContainer & & ex instanceof GameRegistryException ) 
 + { 
 + try 
 + { 
 + gre = ( GameRegistryException ) ex ; 
 + Executors . newSingleThreadExecutor ( ) . submit ( new Callable < Void > ( ) 
 + { 
 + @ Override 
 + public Void call ( ) throws Exception 
 + { 
 + System . err . println ( " POKE " ) ; 
 + clientWaiter . interrupt ( ) ; 
 + Thread . sleep ( 50 ) ; 
 + System . err . println ( " POKE " ) ; 
 + clientWaiter . interrupt ( ) ; 
 + Thread . sleep ( 50 ) ; 
 + System . err . println ( " POKE " ) ; 
 + clientWaiter . interrupt ( ) ; 
 + return null ; 
 + } 
 + 
 + } ) ; 
 + 
 + } 
 + catch ( Throwable t ) 
 + { 
 + FMLLog . log ( Level . ERROR , t , " stuff " ) ; 
 + } 
 + } 
 + } 
 + 
 + public boolean handlingCrash ( CrashReport report ) 
 + { 
 + return report . func _ 71505 _ b ( ) instanceof GameRegistryException ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 index 17bc4f7 . . 7327528 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 @ @ - 266 , 6 + 266 , 7 @ @ public class FMLCommonHandler 
 
 public boolean handleServerStarting ( MinecraftServer server ) 
 { 
 + sidedDelegate . serverLoadedSuccessfully ( ) ; 
 return Loader . instance ( ) . serverStarting ( server ) ; 
 } 
 
 @ @ - 380 , 7 + 381 , 15 @ @ public class FMLCommonHandler 
 WorldAccessContainer wac = ( ( InjectedModContainer ) mc ) . getWrappedWorldAccessContainer ( ) ; 
 if ( wac ! = null ) 
 { 
 - wac . readData ( handler , worldInfo , additionalProperties , tagCompound . func _ 74775 _ l ( mc . getModId ( ) ) ) ; 
 + try 
 + { 
 + wac . readData ( handler , worldInfo , additionalProperties , tagCompound . func _ 74775 _ l ( mc . getModId ( ) ) ) ; 
 + } 
 + catch ( RuntimeException ex ) 
 + { 
 + sidedDelegate . failedServerLoading ( ex , wac ) ; 
 + throw ex ; 
 + } 
 } 
 } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java 
 index ee7c319 . . a3bbdff 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java 
 @ @ - 57 , 4 + 57 , 8 @ @ public interface IFMLSidedHandler 
 void fireNetRegistrationEvent ( EventBus bus , NetworkManager manager , Set < String > channelSet , String channel , Side side ) ; 
 
 FMLMissingMappingsEvent . Action getDefaultMissingAction ( ) ; 
 + 
 + void serverLoadedSuccessfully ( ) ; 
 + 
 + void failedServerLoading ( RuntimeException ex , WorldAccessContainer wac ) ; 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java 
 index 552921f . . 4ac7f18 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import cpw . mods . fml . common . FMLCommonHandler ; 
 import cpw . mods . fml . common . IFMLSidedHandler ; 
 import cpw . mods . fml . common . Loader ; 
 import cpw . mods . fml . common . ModContainer ; 
 + import cpw . mods . fml . common . WorldAccessContainer ; 
 import cpw . mods . fml . common . event . FMLMissingMappingsEvent ; 
 import cpw . mods . fml . common . eventhandler . EventBus ; 
 import cpw . mods . fml . common . network . FMLNetworkEvent ; 
 @ @ - 185 , 4 + 186 , 14 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 return FMLMissingMappingsEvent . Action . valueOf ( System . getProperty ( " fml . missingBlockAction " , " FAIL " ) ) ; 
 } 
 + @ Override 
 + public void serverLoadedSuccessfully ( ) 
 + { 
 + 
 + } 
 + @ Override 
 + public void failedServerLoading ( RuntimeException ex , WorldAccessContainer wac ) 
 + { 
 + 
 + } 
 }
