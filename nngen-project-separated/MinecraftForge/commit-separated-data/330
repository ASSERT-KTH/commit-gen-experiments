BLEU SCORE: 0.01509869171115925

TEST MSG: Add LivingDamageEvent
GENERATED MSG: First pass at exposing data fixers to modders .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index 7d5caa9 . . 14d6815 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 177 , 7 + 177 , 7 @ @ <nl> this . func _ 184185 _ a ( soundtype . func _ 185842 _ g ( ) , soundtype . func _ 185843 _ a ( ) * 0 . 5F , soundtype . func _ 185847 _ b ( ) * 0 . 75F ) ; <nl> } <nl> } <nl> - @ @ - 1380 , 6 + 1395 , 8 @ @ <nl> + @ @ - 1380 , 17 + 1395 , 20 @ @ <nl> { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) <nl> { <nl> @ @ - 186 , 7 + 186 , 10 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70655 _ b ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> - @ @ - 1389 , 8 + 1406 , 8 @ @ <nl> + p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; <nl> + this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - ( f - p _ 70665 _ 2 _ ) ) ; <nl> + + p _ 70665 _ 2 _ = net . minecraftforge . common . ForgeHooks . onLivingDamage ( this , p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> + <nl> if ( p _ 70665 _ 2 _ ! = 0 . 0F ) <nl> { <nl> float f1 = this . func _ 110143 _ aJ ( ) ; <nl> @ @ - 196 , 7 + 199 , 7 @ @ <nl> this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - p _ 70665 _ 2 _ ) ; <nl> } <nl> } <nl> - @ @ - 1447 , 6 + 1464 , 11 @ @ <nl> + @ @ - 1447 , 6 + 1465 , 11 @ @ <nl> <nl> public void func _ 184609 _ a ( EnumHand p _ 184609 _ 1 _ ) <nl> { <nl> @ @ - 208 , 7 + 211 , 7 @ @ <nl> if ( ! this . field _ 82175 _ bq | | this . field _ 110158 _ av > = this . func _ 82166 _ i ( ) / 2 | | this . field _ 110158 _ av < 0 ) <nl> { <nl> this . field _ 110158 _ av = - 1 ; <nl> - @ @ - 1694 , 7 + 1716 , 7 @ @ <nl> + @ @ - 1694 , 7 + 1717 , 7 @ @ <nl> <nl> if ( ! this . field _ 70170 _ p . func _ 184143 _ b ( axisalignedbb1 ) ) <nl> { <nl> @ @ - 217 , 7 + 220 , 7 @ @ <nl> { <nl> this . func _ 70634 _ a ( d11 , this . field _ 70163 _ u + 1 . 0D , d12 ) ; <nl> return ; <nl> - @ @ - 1702 , 14 + 1724 , 14 @ @ <nl> + @ @ - 1702 , 14 + 1725 , 14 @ @ <nl> <nl> BlockPos blockpos = new BlockPos ( d11 , this . field _ 70163 _ u - 1 . 0D , d12 ) ; <nl> <nl> @ @ - 234 , 7 + 237 , 7 @ @ <nl> { <nl> d1 = d11 ; <nl> d13 = this . field _ 70163 _ u + 2 . 0D ; <nl> - @ @ - 1781 , 6 + 1803 , 7 @ @ <nl> + @ @ - 1781 , 6 + 1804 , 7 @ @ <nl> } <nl> <nl> this . field _ 70160 _ al = true ; <nl> @ @ - 242 , 7 + 245 , 7 @ @ <nl> } <nl> <nl> protected void func _ 70629 _ bd ( ) <nl> - @ @ - 1874 , 7 + 1897 , 8 @ @ <nl> + @ @ - 1874 , 7 + 1898 , 8 @ @ <nl> <nl> if ( this . field _ 70122 _ E ) <nl> { <nl> @ @ - 252 , 7 + 255 , 7 @ @ <nl> } <nl> <nl> float f7 = 0 . 16277136F / ( f6 * f6 * f6 ) ; <nl> - @ @ - 1894 , 7 + 1918 , 8 @ @ <nl> + @ @ - 1894 , 7 + 1919 , 8 @ @ <nl> <nl> if ( this . field _ 70122 _ E ) <nl> { <nl> @ @ - 262 , 7 + 265 , 7 @ @ <nl> } <nl> <nl> if ( this . func _ 70617 _ f _ ( ) ) <nl> - @ @ - 2054 , 6 + 2079 , 7 @ @ <nl> + @ @ - 2054 , 6 + 2080 , 7 @ @ <nl> <nl> public void func _ 70071 _ h _ ( ) <nl> { <nl> @ @ - 270 , 7 + 273 , 7 @ @ <nl> super . func _ 70071 _ h _ ( ) ; <nl> this . func _ 184608 _ ct ( ) ; <nl> <nl> - @ @ - 2096 , 7 + 2122 , 9 @ @ <nl> + @ @ - 2096 , 7 + 2123 , 9 @ @ <nl> <nl> if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) <nl> { <nl> @ @ - 280 , 7 + 283 , 7 @ @ <nl> <nl> if ( ! itemstack . func _ 190926 _ b ( ) ) <nl> { <nl> - @ @ - 2575 , 6 + 2603 , 40 @ @ <nl> + @ @ - 2575 , 6 + 2604 , 40 @ @ <nl> this . field _ 70752 _ e = true ; <nl> } <nl> <nl> @ @ - 321 , 7 + 324 , 7 @ @ <nl> public abstract EnumHandSide func _ 184591 _ cq ( ) ; <nl> <nl> public boolean func _ 184587 _ cr ( ) <nl> - @ @ - 2595 , 12 + 2657 , 19 @ @ <nl> + @ @ - 2595 , 12 + 2658 , 19 @ @ <nl> <nl> if ( itemstack = = this . field _ 184627 _ bm ) <nl> { <nl> @ @ - 342 , 7 + 345 , 7 @ @ <nl> { <nl> this . func _ 71036 _ o ( ) ; <nl> } <nl> - @ @ - 2618 , 8 + 2687 , 10 @ @ <nl> + @ @ - 2618 , 8 + 2688 , 10 @ @ <nl> <nl> if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) <nl> { <nl> @ @ - 354 , 7 + 357 , 7 @ @ <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> { <nl> - @ @ - 2700 , 7 + 2771 , 9 @ @ <nl> + @ @ - 2700 , 7 + 2772 , 9 @ @ <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) <nl> { <nl> this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; <nl> @ @ - 365 , 7 + 368 , 7 @ @ <nl> this . func _ 184602 _ cy ( ) ; <nl> } <nl> } <nl> - @ @ - 2724 , 7 + 2797 , 8 @ @ <nl> + @ @ - 2724 , 7 + 2798 , 8 @ @ <nl> { <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> @ @ - 375 , 7 + 378 , 7 @ @ <nl> } <nl> <nl> this . func _ 184602 _ cy ( ) ; <nl> - @ @ - 2852 , 6 + 2926 , 31 @ @ <nl> + @ @ - 2852 , 6 + 2927 , 31 @ @ <nl> return true ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 7abbbab . . 9f62c6b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 233 , 7 + 233 , 7 @ @ <nl> <nl> if ( enumhand = = EnumHand . MAIN _ HAND ) <nl> { <nl> - @ @ - 1045 , 7 + 1117 , 10 @ @ <nl> + @ @ - 1045 , 11 + 1117 , 15 @ @ <nl> { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) <nl> { <nl> @ @ - 245 , 7 + 245 , 12 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; <nl> - @ @ - 1115 , 6 + 1190 , 8 @ @ <nl> + this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - ( f - p _ 70665 _ 2 _ ) ) ; <nl> + + p _ 70665 _ 2 _ = net . minecraftforge . common . ForgeHooks . onLivingDamage ( this , p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> + <nl> + if ( p _ 70665 _ 2 _ ! = 0 . 0F ) <nl> + { <nl> + @ @ - 1115 , 6 + 1191 , 8 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 254 , 7 + 259 , 7 @ @ <nl> ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; <nl> ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; <nl> <nl> - @ @ - 1124 , 7 + 1201 , 10 @ @ <nl> + @ @ - 1124 , 7 + 1202 , 10 @ @ <nl> { <nl> itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; <nl> } <nl> @ @ - 266 , 7 + 271 , 7 @ @ <nl> return EnumActionResult . SUCCESS ; <nl> } <nl> else <nl> - @ @ - 1140 , 6 + 1220 , 7 @ @ <nl> + @ @ - 1140 , 6 + 1221 , 7 @ @ <nl> { <nl> if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) <nl> { <nl> @ @ - 274 , 7 + 279 , 7 @ @ <nl> this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; <nl> } <nl> <nl> - @ @ - 1165 , 6 + 1246 , 7 @ @ <nl> + @ @ - 1165 , 6 + 1247 , 7 @ @ <nl> <nl> public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) <nl> { <nl> @ @ - 282 , 7 + 287 , 7 @ @ <nl> if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) <nl> { <nl> if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) <nl> - @ @ - 1203 , 9 + 1285 , 11 @ @ <nl> + @ @ - 1203 , 9 + 1286 , 11 @ @ <nl> boolean flag2 = flag & & this . field _ 70143 _ R > 0 . 0F & & ! this . field _ 70122 _ E & & ! this . func _ 70617 _ f _ ( ) & & ! this . func _ 70090 _ H ( ) & & ! this . func _ 70644 _ a ( MobEffects . field _ 76440 _ q ) & & ! this . func _ 184218 _ aH ( ) & & p _ 71059 _ 1 _ instanceof EntityLivingBase ; <nl> flag2 = flag2 & & ! this . func _ 70051 _ ag ( ) ; <nl> <nl> @ @ - 295 , 7 + 300 , 7 @ @ <nl> } <nl> <nl> f = f + f1 ; <nl> - @ @ - 1332 , 10 + 1416 , 12 @ @ <nl> + @ @ - 1332 , 10 + 1417 , 12 @ @ <nl> <nl> if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) <nl> { <nl> @ @ - 308 , 7 + 313 , 7 @ @ <nl> this . func _ 184611 _ a ( EnumHand . MAIN _ HAND , ItemStack . field _ 190927 _ a ) ; <nl> } <nl> } <nl> - @ @ - 1384 , 7 + 1470 , 7 @ @ <nl> + @ @ - 1384 , 7 + 1471 , 7 @ @ <nl> <nl> if ( this . field _ 70146 _ Z . nextFloat ( ) < f ) <nl> { <nl> @ @ - 317 , 7 + 322 , 7 @ @ <nl> this . func _ 184602 _ cy ( ) ; <nl> this . field _ 70170 _ p . func _ 72960 _ a ( this , ( byte ) 30 ) ; <nl> } <nl> - @ @ - 1442 , 6 + 1528 , 8 @ @ <nl> + @ @ - 1442 , 6 + 1529 , 8 @ @ <nl> <nl> public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) <nl> { <nl> @ @ - 326 , 7 + 331 , 7 @ @ <nl> EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> - @ @ - 1484 , 8 + 1572 , 9 @ @ <nl> + @ @ - 1484 , 8 + 1573 , 9 @ @ <nl> this . func _ 192030 _ dh ( ) ; <nl> this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; <nl> <nl> @ @ - 338 , 7 + 343 , 7 @ @ <nl> float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; <nl> float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; <nl> this . func _ 175139 _ a ( enumfacing ) ; <nl> - @ @ - 1532 , 13 + 1621 , 14 @ @ <nl> + @ @ - 1532 , 13 + 1622 , 14 @ @ <nl> <nl> public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) <nl> { <nl> @ @ - 356 , 7 + 361 , 7 @ @ <nl> <nl> if ( blockpos = = null ) <nl> { <nl> - @ @ - 1547 , 6 + 1637 , 10 @ @ <nl> + @ @ - 1547 , 6 + 1638 , 10 @ @ <nl> <nl> this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; <nl> } <nl> @ @ - 367 , 7 + 372 , 7 @ @ <nl> <nl> this . field _ 71083 _ bS = false ; <nl> <nl> - @ @ - 1565 , 15 + 1659 , 16 @ @ <nl> + @ @ - 1565 , 15 + 1660 , 16 @ @ <nl> <nl> private boolean func _ 175143 _ p ( ) <nl> { <nl> @ @ - 387 , 7 + 392 , 7 @ @ <nl> { <nl> if ( ! p _ 180467 _ 2 _ ) <nl> { <nl> - @ @ - 1588 , 16 + 1683 , 17 @ @ <nl> + @ @ - 1588 , 16 + 1684 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 408 , 7 + 413 , 7 @ @ <nl> <nl> switch ( enumfacing ) <nl> { <nl> - @ @ - 1637 , 16 + 1733 , 24 @ @ <nl> + @ @ - 1637 , 16 + 1734 , 24 @ @ <nl> <nl> public BlockPos func _ 180470 _ cg ( ) <nl> { <nl> @ @ - 435 , 7 + 440 , 7 @ @ <nl> if ( p _ 180473 _ 1 _ ! = null ) <nl> { <nl> this . field _ 71077 _ c = p _ 180473 _ 1 _ ; <nl> - @ @ - 1839 , 6 + 1943 , 10 @ @ <nl> + @ @ - 1839 , 6 + 1944 , 10 @ @ <nl> <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> } <nl> @ @ - 446 , 7 + 451 , 7 @ @ <nl> } <nl> <nl> protected void func _ 71061 _ d _ ( ) <nl> - @ @ - 2176 , 7 + 2284 , 10 @ @ <nl> + @ @ - 2176 , 7 + 2285 , 10 @ @ <nl> <nl> public ITextComponent func _ 145748 _ c _ ( ) <nl> { <nl> @ @ - 458 , 7 + 463 , 7 @ @ <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; <nl> - @ @ - 2185 , 7 + 2296 , 7 @ @ <nl> + @ @ - 2185 , 7 + 2297 , 7 @ @ <nl> <nl> public float func _ 70047 _ e ( ) <nl> { <nl> @ @ - 467 , 7 + 472 , 7 @ @ <nl> <nl> if ( this . func _ 70608 _ bn ( ) ) <nl> { <nl> - @ @ - 2421 , 6 + 2532 , 168 @ @ <nl> + @ @ - 2421 , 6 + 2533 , 168 @ @ <nl> return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 1ca656a . . 3b09e21 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 113 , 6 + 113 , 7 @ @ import net . minecraftforge . event . ServerChatEvent ; <nl> import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; <nl> import net . minecraftforge . event . entity . item . ItemTossEvent ; <nl> import net . minecraftforge . event . entity . living . LivingAttackEvent ; <nl> + import net . minecraftforge . event . entity . living . LivingDamageEvent ; <nl> import net . minecraftforge . event . entity . living . LivingDeathEvent ; <nl> import net . minecraftforge . event . entity . living . LivingDropsEvent ; <nl> import net . minecraftforge . event . entity . living . LivingEvent . LivingJumpEvent ; <nl> @ @ - 564 , 6 + 565 , 12 @ @ public class ForgeHooks <nl> return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . getAmount ( ) ) ; <nl> } <nl> <nl> + public static float onLivingDamage ( EntityLivingBase entity , DamageSource src , float amount ) <nl> + { <nl> + LivingDamageEvent event = new LivingDamageEvent ( entity , src , amount ) ; <nl> + return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . getAmount ( ) ) ; <nl> + } <nl> + <nl> public static boolean onLivingDeath ( EntityLivingBase entity , DamageSource src ) <nl> { <nl> return MinecraftForge . EVENT _ BUS . post ( new LivingDeathEvent ( entity , src ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingDamageEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingDamageEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 780f4ed <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingDamageEvent . java <nl> @ @ - 0 , 0 + 1 , 64 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2017 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraftforge . common . ForgeHooks ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + import net . minecraft . util . DamageSource ; <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + <nl> + / * * <nl> + * LivingDamageEvent is fired just before damage is applied to entity . < br > <nl> + * At this point armor , potion and absorption modifiers have already been applied to damage - this is FINAL value . < br > <nl> + * Also note that appropriate resources ( like armor durability and absorption extra hearths ) have already been consumed . < br > <nl> + * This event is fired whenever an Entity is damaged in <nl> + * { @ link EntityLivingBase # damageEntity ( DamageSource , float ) } and <nl> + * { @ link EntityPlayer # damageEntity ( DamageSource , float ) } . < br > <nl> + * < br > <nl> + * This event is fired via the { @ link ForgeHooks # onLivingDamage ( EntityLivingBase , DamageSource , float ) } . < br > <nl> + * < br > <nl> + * { @ link # source } contains the DamageSource that caused this Entity to be hurt . < br > <nl> + * { @ link # amount } contains the final amount of damage that will be dealt to entity . < br > <nl> + * < br > <nl> + * This event is { @ link Cancelable } . < br > <nl> + * If this event is canceled , the Entity is not hurt . Used resources WILL NOT be restored . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * @ see LivingHurtEvent <nl> + * * / <nl> + @ Cancelable <nl> + public class LivingDamageEvent extends LivingEvent <nl> + { <nl> + private final DamageSource source ; <nl> + private float amount ; <nl> + public LivingDamageEvent ( EntityLivingBase entity , DamageSource source , float amount ) <nl> + { <nl> + super ( entity ) ; <nl> + this . source = source ; <nl> + this . amount = amount ; <nl> + } <nl> + <nl> + public DamageSource getSource ( ) { return source ; } <nl> + <nl> + public float getAmount ( ) { return amount ; } <nl> + <nl> + public void setAmount ( float amount ) { this . amount = amount ; } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java <nl> index a3c0a84 . . 11c4a2a 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ import net . minecraft . entity . EntityLivingBase ; <nl> * This event does not have a result . { @ link HasResult } < br > <nl> * < br > <nl> * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . <nl> + * @ see LivingDamageEvent <nl> * * / <nl> @ Cancelable <nl> public class LivingHurtEvent extends LivingEvent <nl> diff - - git a / src / test / java / net / minecraftforge / debug / LivingDamageEventTest . java b / src / test / java / net / minecraftforge / debug / LivingDamageEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . 8ac95e0 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / LivingDamageEventTest . java <nl> @ @ - 0 , 0 + 1 , 152 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import com . google . common . collect . ImmutableMap ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . Map ; <nl> + import javax . annotation . Nullable ; <nl> + import net . minecraft . command . CommandBase ; <nl> + import net . minecraft . command . CommandException ; <nl> + import net . minecraft . command . ICommandSender ; <nl> + import net . minecraft . command . WrongUsageException ; <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . util . DamageSource ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraftforge . event . entity . living . LivingDamageEvent ; <nl> + import net . minecraftforge . event . entity . living . LivingHurtEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . event . FMLServerStartingEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + @ Mod ( modid = LivingDamageEventTest . MODID , name = " ForgeDebugLivingDamage " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class LivingDamageEventTest <nl> + { <nl> + <nl> + private static Logger logger ; <nl> + <nl> + public static final String MODID = " forgedebuglivingdamage " ; <nl> + <nl> + private static final Map < String , DamageSource > DAMAGE _ SOURCES = ImmutableMap . < String , DamageSource > builder ( ) <nl> + . put ( " fire " , DamageSource . IN _ FIRE ) <nl> + . put ( " lightning _ bolt " , DamageSource . LIGHTNING _ BOLT ) <nl> + . put ( " on _ fire " , DamageSource . ON _ FIRE ) <nl> + . put ( " lava " , DamageSource . LAVA ) <nl> + . put ( " hot _ floor " , DamageSource . HOT _ FLOOR ) <nl> + . put ( " in _ wall " , DamageSource . IN _ WALL ) <nl> + . put ( " cramming " , DamageSource . CRAMMING ) <nl> + . put ( " drown " , DamageSource . DROWN ) <nl> + . put ( " starve " , DamageSource . STARVE ) <nl> + . put ( " cactus " , DamageSource . CACTUS ) <nl> + . put ( " fall " , DamageSource . FALL ) <nl> + . put ( " fly _ into _ wall " , DamageSource . FLY _ INTO _ WALL ) <nl> + . put ( " out _ of _ world " , DamageSource . OUT _ OF _ WORLD ) <nl> + . put ( " generic " , DamageSource . GENERIC ) <nl> + . put ( " magic " , DamageSource . MAGIC ) <nl> + . put ( " wither " , DamageSource . WITHER ) <nl> + . put ( " anvil " , DamageSource . ANVIL ) <nl> + . put ( " falling _ block " , DamageSource . FALLING _ BLOCK ) <nl> + . put ( " dragon _ breath " , DamageSource . DRAGON _ BREATH ) <nl> + . put ( " fireworks " , DamageSource . FIREWORKS ) <nl> + . build ( ) ; <nl> + <nl> + private static class CommandDamage extends CommandBase <nl> + { <nl> + <nl> + private static final String USAGE = " damage < selector > < source > < amount > " ; <nl> + <nl> + @ Override <nl> + public String getName ( ) <nl> + { <nl> + return " damage " ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getUsage ( ICommandSender sender ) <nl> + { <nl> + return USAGE ; <nl> + } <nl> + <nl> + @ Override <nl> + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException <nl> + { <nl> + if ( args . length < 3 ) <nl> + { <nl> + throw new WrongUsageException ( USAGE ) ; <nl> + } <nl> + <nl> + EntityLivingBase target = getEntity ( server , sender , args [ 0 ] , EntityLivingBase . class ) ; <nl> + DamageSource damageSource = DAMAGE _ SOURCES . get ( args [ 1 ] . toLowerCase ( Locale . ROOT ) ) ; <nl> + if ( target = = null | | damageSource = = null ) <nl> + { <nl> + throw new WrongUsageException ( USAGE ) ; <nl> + } <nl> + <nl> + float amount ; <nl> + try <nl> + { <nl> + amount = Float . parseFloat ( args [ 2 ] ) ; <nl> + } catch ( NumberFormatException e ) <nl> + { <nl> + throw new WrongUsageException ( USAGE ) ; <nl> + } <nl> + <nl> + target . attackEntityFrom ( damageSource , amount ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) <nl> + { <nl> + if ( args . length = = 1 ) <nl> + { <nl> + return getListOfStringsMatchingLastWord ( args , server . getOnlinePlayerNames ( ) ) ; <nl> + } else if ( args . length = = 2 ) <nl> + { <nl> + return getListOfStringsMatchingLastWord ( args , DAMAGE _ SOURCES . keySet ( ) ) ; <nl> + } <nl> + <nl> + return Collections . emptyList ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isUsernameIndex ( String [ ] args , int index ) <nl> + { <nl> + return index = = 0 ; <nl> + } <nl> + } <nl> + <nl> + @ EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + logger = event . getModLog ( ) ; <nl> + } <nl> + <nl> + @ EventHandler <nl> + void serverStarting ( FMLServerStartingEvent evt ) <nl> + { <nl> + evt . registerServerCommand ( new CommandDamage ( ) ) ; <nl> + } <nl> + <nl> + @ EventBusSubscriber <nl> + public static class TestEventHandler <nl> + { <nl> + <nl> + @ SubscribeEvent <nl> + public static void livingHurtPre ( LivingHurtEvent evt ) <nl> + { <nl> + logger . info ( " Entity { } damage from { } ( pre - reduction ) : { } " , evt . getEntity ( ) , evt . getSource ( ) . getDamageType ( ) , evt . getAmount ( ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public static void livingHurtPost ( LivingDamageEvent evt ) <nl> + { <nl> + logger . info ( " Entity { } damage from { } ( post - reduction ) : { } " , evt . getEntity ( ) , evt . getSource ( ) . getDamageType ( ) , evt . getAmount ( ) ) ; <nl> + } <nl> + <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 5637ab8 . . eaf179b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 152 , 7 + 152 , 15 @ @ <nl> this . field _ 71100 _ bB . func _ 75112 _ a ( p _ 70037 _ 1 _ ) ; <nl> this . field _ 71075 _ bZ . func _ 75095 _ b ( p _ 70037 _ 1 _ ) ; <nl> <nl> - @ @ - 921 , 6 + 965 , 23 @ @ <nl> + @ @ - 903 , 6 + 947 , 7 @ @ <nl> + { <nl> + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74782 _ a ( " Inventory " , this . field _ 71071 _ by . func _ 70442 _ a ( new NBTTagList ( ) ) ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " SelectedItemSlot " , this . field _ 71071 _ by . field _ 70461 _ c ) ; <nl> + p _ 70014 _ 1 _ . func _ 74757 _ a ( " Sleeping " , this . field _ 71083 _ bS ) ; <nl> + @ @ - 921 , 6 + 966 , 23 @ @ <nl> p _ 70014 _ 1 _ . func _ 74757 _ a ( " SpawnForced " , this . field _ 82248 _ d ) ; <nl> } <nl> <nl> @ @ - 176 , 7 + 184 , 7 @ @ <nl> this . field _ 71100 _ bB . func _ 75117 _ b ( p _ 70014 _ 1 _ ) ; <nl> this . field _ 71075 _ bZ . func _ 75091 _ a ( p _ 70014 _ 1 _ ) ; <nl> p _ 70014 _ 1 _ . func _ 74782 _ a ( " EnderItems " , this . field _ 71078 _ a . func _ 70487 _ g ( ) ) ; <nl> - @ @ - 928 , 6 + 989 , 7 @ @ <nl> + @ @ - 928 , 6 + 990 , 7 @ @ <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) <nl> { <nl> @ @ - 184 , 7 + 192 , 7 @ @ <nl> if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) <nl> { <nl> return false ; <nl> - @ @ - 1006 , 6 + 1068 , 7 @ @ <nl> + @ @ - 1006 , 6 + 1069 , 7 @ @ <nl> if ( this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> EnumHand enumhand = this . func _ 184600 _ cs ( ) ; <nl> @ @ - 192 , 7 + 200 , 7 @ @ <nl> <nl> if ( enumhand = = EnumHand . MAIN _ HAND ) <nl> { <nl> - @ @ - 1041 , 7 + 1104 , 10 @ @ <nl> + @ @ - 1041 , 7 + 1105 , 10 @ @ <nl> { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) <nl> { <nl> @ @ - 204 , 7 + 212 , 7 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; <nl> - @ @ - 1111 , 6 + 1177 , 7 @ @ <nl> + @ @ - 1111 , 6 + 1178 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 212 , 7 + 220 , 7 @ @ <nl> ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; <nl> ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; <nl> <nl> - @ @ - 1120 , 7 + 1187 , 10 @ @ <nl> + @ @ - 1120 , 7 + 1188 , 10 @ @ <nl> { <nl> itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; <nl> } <nl> @ @ - 224 , 7 + 232 , 7 @ @ <nl> return EnumActionResult . SUCCESS ; <nl> } <nl> else <nl> - @ @ - 1136 , 6 + 1206 , 7 @ @ <nl> + @ @ - 1136 , 6 + 1207 , 7 @ @ <nl> { <nl> if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) <nl> { <nl> @ @ - 232 , 7 + 240 , 7 @ @ <nl> this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; <nl> } <nl> <nl> - @ @ - 1161 , 6 + 1232 , 7 @ @ <nl> + @ @ - 1161 , 6 + 1233 , 7 @ @ <nl> <nl> public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) <nl> { <nl> @ @ - 240 , 7 + 248 , 7 @ @ <nl> if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) <nl> { <nl> if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) <nl> - @ @ - 1331 , 11 + 1403 , 13 @ @ <nl> + @ @ - 1331 , 11 + 1404 , 13 @ @ <nl> <nl> if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) <nl> { <nl> @ @ - 254 , 7 + 262 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1441 , 6 + 1515 , 8 @ @ <nl> + @ @ - 1441 , 6 + 1516 , 8 @ @ <nl> <nl> public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) <nl> { <nl> @ @ - 263 , 7 + 271 , 7 @ @ <nl> EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> - @ @ - 1482 , 8 + 1558 , 9 @ @ <nl> + @ @ - 1482 , 8 + 1559 , 9 @ @ <nl> <nl> this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; <nl> <nl> @ @ - 275 , 7 + 283 , 7 @ @ <nl> float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; <nl> float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; <nl> this . func _ 175139 _ a ( enumfacing ) ; <nl> - @ @ - 1530 , 13 + 1607 , 14 @ @ <nl> + @ @ - 1530 , 13 + 1608 , 14 @ @ <nl> <nl> public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) <nl> { <nl> @ @ - 293 , 7 + 301 , 7 @ @ <nl> <nl> if ( blockpos = = null ) <nl> { <nl> - @ @ - 1545 , 6 + 1623 , 10 @ @ <nl> + @ @ - 1545 , 6 + 1624 , 10 @ @ <nl> <nl> this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; <nl> } <nl> @ @ - 304 , 7 + 312 , 7 @ @ <nl> <nl> this . field _ 71083 _ bS = false ; <nl> <nl> - @ @ - 1563 , 15 + 1645 , 16 @ @ <nl> + @ @ - 1563 , 15 + 1646 , 16 @ @ <nl> <nl> private boolean func _ 175143 _ p ( ) <nl> { <nl> @ @ - 324 , 7 + 332 , 7 @ @ <nl> { <nl> if ( ! p _ 180467 _ 2 _ ) <nl> { <nl> - @ @ - 1586 , 16 + 1669 , 17 @ @ <nl> + @ @ - 1586 , 16 + 1670 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 345 , 7 + 353 , 7 @ @ <nl> <nl> switch ( enumfacing ) <nl> { <nl> - @ @ - 1635 , 16 + 1719 , 24 @ @ <nl> + @ @ - 1635 , 16 + 1720 , 24 @ @ <nl> <nl> public BlockPos func _ 180470 _ cg ( ) <nl> { <nl> @ @ - 372 , 7 + 380 , 7 @ @ <nl> if ( p _ 180473 _ 1 _ ! = null ) <nl> { <nl> this . field _ 71077 _ c = p _ 180473 _ 1 _ ; <nl> - @ @ - 1839 , 6 + 1931 , 10 @ @ <nl> + @ @ - 1839 , 6 + 1932 , 10 @ @ <nl> <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> } <nl> @ @ - 383 , 7 + 391 , 7 @ @ <nl> } <nl> <nl> protected void func _ 71061 _ d _ ( ) <nl> - @ @ - 2039 , 6 + 2135 , 18 @ @ <nl> + @ @ - 2039 , 6 + 2136 , 18 @ @ <nl> this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; <nl> this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; <nl> this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; <nl> @ @ - 402 , 7 + 410 , 7 @ @ <nl> } <nl> <nl> protected boolean func _ 70041 _ e _ ( ) <nl> - @ @ - 2137 , 7 + 2245 , 10 @ @ <nl> + @ @ - 2137 , 7 + 2246 , 10 @ @ <nl> <nl> public ITextComponent func _ 145748 _ c _ ( ) <nl> { <nl> @ @ - 414 , 7 + 422 , 7 @ @ <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; <nl> - @ @ - 2146 , 7 + 2257 , 7 @ @ <nl> + @ @ - 2146 , 7 + 2258 , 7 @ @ <nl> <nl> public float func _ 70047 _ e ( ) <nl> { <nl> @ @ - 423 , 7 + 431 , 7 @ @ <nl> <nl> if ( this . func _ 70608 _ bn ( ) ) <nl> { <nl> - @ @ - 2362 , 6 + 2473 , 162 @ @ <nl> + @ @ - 2362 , 6 + 2474 , 162 @ @ <nl> return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ad8f719 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / datafix / DataFixesManager . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / datafix / DataFixesManager . java <nl> + @ @ - 158 , 6 + 158 , 7 @ @ <nl> + public static DataFixer func _ 188279 _ a ( ) <nl> + { <nl> + DataFixer datafixer = new DataFixer ( 819 ) ; <nl> + + datafixer = new net . minecraftforge . common . util . CompoundDataFixer ( datafixer ) ; <nl> + WorldInfo . func _ 189967 _ a ( datafixer ) ; <nl> + EntityPlayer . func _ 189806 _ a ( datafixer ) ; <nl> + AnvilChunkLoader . func _ 189889 _ a ( datafixer ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index 5ac3cdd . . 22b5152 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 97 , 15 + 97 , 17 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 122 , 6 + 181 , 7 @ @ <nl> + @ @ - 121 , 7 + 180 , 9 @ @ <nl> + NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; <nl> nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; <nl> nbttagcompound . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( nbttagcompound ) ; <nl> this . func _ 75820 _ a ( p _ 75816 _ 2 _ , p _ 75816 _ 1 _ , nbttagcompound1 ) ; <nl> + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkDataEvent . Save ( p _ 75816 _ 2 _ , nbttagcompound ) ) ; <nl> this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; <nl> } <nl> catch ( Exception exception ) <nl> - @ @ - 307 , 8 + 367 , 17 @ @ <nl> + @ @ - 307 , 8 + 368 , 17 @ @ <nl> <nl> if ( entity . func _ 70039 _ c ( nbttagcompound2 ) ) <nl> { <nl> @ @ - 123 , 7 + 125 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 318 , 8 + 387 , 17 @ @ <nl> + @ @ - 318 , 8 + 388 , 17 @ @ <nl> <nl> for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) <nl> { <nl> @ @ - 141 , 7 + 143 , 7 @ @ <nl> } <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; <nl> - @ @ - 388 , 6 + 466 , 12 @ @ <nl> + @ @ - 388 , 6 + 467 , 12 @ @ <nl> chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; <nl> } <nl> <nl> @ @ - 154 , 7 + 156 , 7 @ @ <nl> NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; <nl> <nl> for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) <nl> - @ @ - 431 , 8 + 515 , 6 @ @ <nl> + @ @ - 431 , 8 + 516 , 6 @ @ <nl> p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 4e7e0db <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / world / gen / structure / template / Template . java <nl> + + + + . . / src - work / minecraft / net / minecraft / world / gen / structure / template / Template . java <nl> + @ @ - 520 , 6 + 520 , 7 @ @ <nl> + p _ 189552 _ 1 _ . func _ 74782 _ a ( " size " , this . func _ 186267 _ a ( new int [ ] { this . field _ 186272 _ c . func _ 177958 _ n ( ) , this . field _ 186272 _ c . func _ 177956 _ o ( ) , this . field _ 186272 _ c . func _ 177952 _ p ( ) } ) ) ; <nl> + p _ 189552 _ 1 _ . func _ 74778 _ a ( " author " , this . field _ 186273 _ d ) ; <nl> + p _ 189552 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 189552 _ 1 _ ) ; <nl> + return p _ 189552 _ 1 _ ; <nl> + } <nl> + <nl> diff - - git a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> index d3dbb53 . . e4a0e53 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> @ @ - 8 , 7 + 8 , 15 @ @ <nl> <nl> protected WorldInfo ( ) <nl> { <nl> - @ @ - 807 , 6 + 808 , 26 @ @ <nl> + @ @ - 335 , 6 + 336 , 7 @ @ <nl> + nbttagcompound . func _ 74757 _ a ( " Snapshot " , false ) ; <nl> + p _ 76064 _ 1 _ . func _ 74782 _ a ( " Version " , nbttagcompound ) ; <nl> + p _ 76064 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 76064 _ 1 _ ) ; <nl> + p _ 76064 _ 1 _ . func _ 74772 _ a ( " RandomSeed " , this . field _ 76100 _ a ) ; <nl> + p _ 76064 _ 1 _ . func _ 74778 _ a ( " generatorName " , this . field _ 76098 _ b . func _ 77127 _ a ( ) ) ; <nl> + p _ 76064 _ 1 _ . func _ 74768 _ a ( " generatorVersion " , this . field _ 76098 _ b . func _ 77131 _ c ( ) ) ; <nl> + @ @ - 807 , 6 + 809 , 26 @ @ <nl> } ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> new file mode 100644 <nl> index 0000000 . . da32e17 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> @ @ - 0 , 0 + 1 , 190 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . Map ; <nl> + import java . util . Map . Entry ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> + import net . minecraft . nbt . NBTTagCompound ; <nl> + import net . minecraft . util . datafix . DataFixer ; <nl> + import net . minecraft . util . datafix . FixTypes ; <nl> + import net . minecraft . util . datafix . IDataWalker ; <nl> + import net . minecraft . util . datafix . IFixType ; <nl> + import net . minecraft . util . datafix . IFixableData ; <nl> + <nl> + public class CompoundDataFixer extends DataFixer <nl> + { <nl> + private final ModFixs vanilla ; <nl> + private final Map < String , ModFixs > modFixers = Maps . newHashMap ( ) ; <nl> + private final Map < IFixType , List < IDataWalker > > walkers = Maps . newHashMap ( ) ; <nl> + <nl> + public CompoundDataFixer ( DataFixer vanilla ) <nl> + { <nl> + super ( 0 ) ; <nl> + this . vanilla = init ( " minecraft " , vanilla . version ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt ) <nl> + { <nl> + final Map < String , Integer > versions = getVersions ( nbt ) ; <nl> + final int mcversion = versions . get ( " minecraft " ) = = null ? - 1 : versions . get ( " minecraft " ) ; <nl> + final IDataFixerData holder = new IDataFixerData ( ) <nl> + { <nl> + @ Override <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int version ) <nl> + { <nl> + for ( Entry < String , ModFixs > e : modFixers . entrySet ( ) ) <nl> + { <nl> + / / This is a potential performance hot spot . As it walks all the data for all <nl> + / / of the fixers . . . But with the vanilla api there isn ' t a way to pass down <nl> + / / the mod specific version numbers , so redundant . . but not hacky . . . <nl> + / / Actually , this wont work as the data walkers take versions into account . . . <nl> + ModFixs fixer = e . getValue ( ) ; <nl> + int ver = getVersion ( e . getKey ( ) ) ; <nl> + if ( ver < fixer . version ) <nl> + { <nl> + for ( IFixableData fix : fixer . getFixes ( type ) ) <nl> + { <nl> + if ( fix . getFixVersion ( ) > ver ) <nl> + nbt = fix . fixTagCompound ( nbt ) ; <nl> + } <nl> + <nl> + for ( IDataWalker walker : getWalkers ( type ) ) <nl> + nbt = walker . process ( this , nbt , version ) ; / / We pass in the holder , in case a walker wants to know a mod version <nl> + } <nl> + } <nl> + return nbt ; <nl> + } <nl> + <nl> + @ Override <nl> + public int getVersion ( String mod ) <nl> + { <nl> + Integer ret = versions . get ( mod ) ; <nl> + return ret = = null ? - 1 : ret ; <nl> + } <nl> + } ; <nl> + return holder . process ( type , nbt , mcversion ) ; <nl> + } <nl> + <nl> + @ Override <nl> + @ Deprecated / / MODDERS DO NOT CALL DIRECTLY ! Only use from DataWalker ! <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int mcversion ) <nl> + { <nl> + if ( type ! = FixTypes . OPTIONS ) / / Options are vanilla only <nl> + throw new IllegalStateException ( " Do not call recursive process directly on DataFixer ! " ) ; <nl> + <nl> + for ( IFixableData fix : vanilla . getFixes ( type ) ) <nl> + { <nl> + if ( fix . getFixVersion ( ) > mcversion ) <nl> + nbt = fix . fixTagCompound ( nbt ) ; <nl> + } <nl> + / / Options is a hack , and doesn ' t have any nested components <nl> + / / for ( IDataWalker walker : getWalkers ( type ) ) <nl> + / / nbt = walker . process ( this , nbt , version ) ; <nl> + return nbt ; <nl> + } <nl> + <nl> + private List < IDataWalker > getWalkers ( IFixType type ) <nl> + { <nl> + List < IDataWalker > ret = walkers . get ( type ) ; <nl> + if ( ret = = null ) <nl> + { <nl> + ret = Lists . newArrayList ( ) ; <nl> + walkers . put ( type , ret ) ; <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + @ Override <nl> + @ Deprecated / / Modders do not use this , this will register you as vanilla . Use the ModID version below . <nl> + public void registerFix ( IFixType type , IFixableData fixable ) <nl> + { <nl> + vanilla . registerFix ( type , fixable ) ; <nl> + } <nl> + <nl> + <nl> + @ Override <nl> + @ Deprecated / / Modders do not use this , use add below , To better allow custom fix types . <nl> + public void registerWalker ( FixTypes type , IDataWalker walker ) <nl> + { <nl> + registerWalkerAdd ( type , walker ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void registerWalkerAdd ( IFixType type , IDataWalker walker ) <nl> + { <nl> + getWalkers ( type ) . add ( walker ) ; <nl> + } <nl> + <nl> + private void validateModId ( String mod ) <nl> + { <nl> + / / String current = Loader . instance ( ) . activeModContainer ( ) = = null ? " minecraft " : Loader . instance ( ) . activeModContainer ( ) . getModId ( ) ; <nl> + / / Test active modid ? <nl> + if ( ! mod . equals ( mod . toLowerCase ( Locale . ENGLISH ) ) ) <nl> + throw new IllegalArgumentException ( " Mod ID is not lower case : " + mod ) ; <nl> + if ( mod . length ( ) > 64 ) <nl> + throw new IllegalArgumentException ( " Mod ID is to long : " + mod ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Initialize your mod specific data fixer . <nl> + * <nl> + * @ param modid You mod id , must be lower case . <nl> + * @ param version The current data version of your mod <nl> + * / <nl> + public ModFixs init ( String modid , int version ) <nl> + { <nl> + validateModId ( modid ) ; <nl> + if ( modFixers . containsKey ( modid ) ) <nl> + throw new IllegalStateException ( " Attempted to initalize DataFixer for " + modid + " twice " ) ; <nl> + ModFixs ret = new ModFixs ( modid , version ) ; <nl> + modFixers . put ( modid , ret ) ; <nl> + return ret ; <nl> + } <nl> + <nl> + private Map < String , Integer > getVersions ( NBTTagCompound nbt ) <nl> + { <nl> + Map < String , Integer > ret = Maps . newHashMap ( ) ; <nl> + ret . put ( " minecraft " , nbt . hasKey ( " DataVersion " , 99 ) ? nbt . getInteger ( " DataVersion " ) : - 1 ) ; <nl> + if ( nbt . hasKey ( " ForgeDataVersion " , 10 ) ) <nl> + { <nl> + NBTTagCompound sub = nbt . getCompoundTag ( " ForgeDataVersion " ) ; <nl> + for ( String key : sub . getKeySet ( ) ) <nl> + { <nl> + ret . put ( key , sub . hasKey ( key , 99 ) ? sub . getInteger ( key ) : - 1 ) ; <nl> + } <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + public void writeVersionData ( NBTTagCompound nbt ) <nl> + { <nl> + / / nbt . setInteger ( " DataVersion " , vanilla . version ) ; <nl> + NBTTagCompound sub = new NBTTagCompound ( ) ; <nl> + nbt . setTag ( " ForgeDataVersion " , sub ) ; <nl> + for ( ModFixs mod : modFixers . values ( ) ) <nl> + sub . setInteger ( mod . mod , mod . version ) ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / IDataFixerData . java b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java <nl> new file mode 100644 <nl> index 0000000 . . da6b05c <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import net . minecraft . util . datafix . IDataFixer ; <nl> + <nl> + public interface IDataFixerData extends IDataFixer <nl> + { <nl> + public int getVersion ( String mod ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> new file mode 100644 <nl> index 0000000 . . 2dc01f2 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> @ @ - 0 , 0 + 1 , 83 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> + import net . minecraft . util . datafix . IFixType ; <nl> + import net . minecraft . util . datafix . IFixableData ; <nl> + <nl> + public class ModFixs <nl> + { <nl> + private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> + final String mod ; <nl> + final int version ; <nl> + private final Map < IFixType , List < IFixableData > > fixes = Maps . newHashMap ( ) ; <nl> + <nl> + ModFixs ( String mod , int version ) <nl> + { <nl> + this . mod = mod ; <nl> + this . version = version ; <nl> + } <nl> + <nl> + public List < IFixableData > getFixes ( IFixType type ) <nl> + { <nl> + List < IFixableData > ret = this . fixes . get ( type ) ; <nl> + if ( ret = = null ) <nl> + { <nl> + ret = Lists . newArrayList ( ) ; <nl> + this . fixes . put ( type , ret ) ; <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + public void registerFix ( IFixType type , IFixableData fixer ) <nl> + { <nl> + List < IFixableData > list = getFixes ( type ) ; <nl> + int ver = fixer . getFixVersion ( ) ; <nl> + <nl> + if ( ver > this . version ) <nl> + { <nl> + LOGGER . warn ( " [ { } ] Ignored fix registered for version : { } as the DataVersion of the game is : { } " , mod , ver , this . version ) ; <nl> + return ; <nl> + } <nl> + <nl> + if ( ! list . isEmpty ( ) & & list . get ( list . size ( ) - 1 ) . getFixVersion ( ) > ver ) <nl> + { <nl> + for ( int x = 0 ; x < list . size ( ) ; + + x ) <nl> + { <nl> + if ( list . get ( x ) . getFixVersion ( ) > ver ) <nl> + { <nl> + list . add ( x , fixer ) ; <nl> + break ; <nl> + } <nl> + } <nl> + } <nl> + else <nl> + list . add ( fixer ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index c796af8 . . a78247c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 82 , 6 + 82 , 7 @ @ import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> import net . minecraftforge . common . ForgeModContainer ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . client . registry . RenderingRegistry ; <nl> import net . minecraftforge . fml . common . DummyModContainer ; <nl> import net . minecraftforge . fml . common . DuplicateModsFoundException ; <nl> @ @ - 1060 , 4 + 1061 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new ModelRegistryEvent ( ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) this . client . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index d4863c7 . . 1411eda 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 57 , 6 + 57 , 7 @ @ import net . minecraft . world . storage . WorldInfo ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . common . ForgeVersion ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . common . gameevent . InputEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent ; <nl> @ @ - 751 , 4 + 752 , 9 @ @ public class FMLCommonHandler <nl> { <nl> sidedDelegate . fireSidedRegistryEvents ( ) ; <nl> } <nl> + <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) sidedDelegate . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> index aea07ff . . 4cff064 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . util . IThreadListener ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ @ - 77 , 4 + 78 , 6 @ @ public interface IFMLSidedHandler <nl> void reloadRenderers ( ) ; <nl> <nl> void fireSidedRegistryEvents ( ) ; <nl> + <nl> + CompoundDataFixer getDataFixer ( ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index 54c25b1 . . fa4f6a5 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . server . dedicated . PendingCommand ; <nl> import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . util . text . translation . LanguageMap ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . IFMLSidedHandler ; <nl> @ @ - 339 , 4 + 340 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> / / NOOP <nl> } <nl> + @ Override <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) this . server . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 14df9d2 . . 586b68e 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 287 , 4 + 287 , 7 @ @ public net . minecraft . potion . PotionHelper func _ 185204 _ a ( Lnet / minecraft / potion / Pot <nl> <nl> # TileEntityHopper <nl> public net . minecraft . tileentity . TileEntityHopper func _ 174914 _ o ( ) Z # mayTransfer <nl> - public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown <nl> \ No newline at end of file <nl> + public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown <nl> + <nl> + # DataFixer <nl> + public net . minecraft . util . datafix . DataFixer field _ 188262 _ d # version <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index 7d5caa9 . . 14d6815 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 177 , 7 + 177 , 7 @ @ 
 this . func _ 184185 _ a ( soundtype . func _ 185842 _ g ( ) , soundtype . func _ 185843 _ a ( ) * 0 . 5F , soundtype . func _ 185847 _ b ( ) * 0 . 75F ) ; 
 } 
 } 
 - @ @ - 1380 , 6 + 1395 , 8 @ @ 
 + @ @ - 1380 , 17 + 1395 , 20 @ @ 
 { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) 
 { 
 @ @ - 186 , 7 + 186 , 10 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70655 _ b ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 - @ @ - 1389 , 8 + 1406 , 8 @ @ 
 + p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; 
 + this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - ( f - p _ 70665 _ 2 _ ) ) ; 
 + + p _ 70665 _ 2 _ = net . minecraftforge . common . ForgeHooks . onLivingDamage ( this , p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 + 
 if ( p _ 70665 _ 2 _ ! = 0 . 0F ) 
 { 
 float f1 = this . func _ 110143 _ aJ ( ) ; 
 @ @ - 196 , 7 + 199 , 7 @ @ 
 this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - p _ 70665 _ 2 _ ) ; 
 } 
 } 
 - @ @ - 1447 , 6 + 1464 , 11 @ @ 
 + @ @ - 1447 , 6 + 1465 , 11 @ @ 
 
 public void func _ 184609 _ a ( EnumHand p _ 184609 _ 1 _ ) 
 { 
 @ @ - 208 , 7 + 211 , 7 @ @ 
 if ( ! this . field _ 82175 _ bq | | this . field _ 110158 _ av > = this . func _ 82166 _ i ( ) / 2 | | this . field _ 110158 _ av < 0 ) 
 { 
 this . field _ 110158 _ av = - 1 ; 
 - @ @ - 1694 , 7 + 1716 , 7 @ @ 
 + @ @ - 1694 , 7 + 1717 , 7 @ @ 
 
 if ( ! this . field _ 70170 _ p . func _ 184143 _ b ( axisalignedbb1 ) ) 
 { 
 @ @ - 217 , 7 + 220 , 7 @ @ 
 { 
 this . func _ 70634 _ a ( d11 , this . field _ 70163 _ u + 1 . 0D , d12 ) ; 
 return ; 
 - @ @ - 1702 , 14 + 1724 , 14 @ @ 
 + @ @ - 1702 , 14 + 1725 , 14 @ @ 
 
 BlockPos blockpos = new BlockPos ( d11 , this . field _ 70163 _ u - 1 . 0D , d12 ) ; 
 
 @ @ - 234 , 7 + 237 , 7 @ @ 
 { 
 d1 = d11 ; 
 d13 = this . field _ 70163 _ u + 2 . 0D ; 
 - @ @ - 1781 , 6 + 1803 , 7 @ @ 
 + @ @ - 1781 , 6 + 1804 , 7 @ @ 
 } 
 
 this . field _ 70160 _ al = true ; 
 @ @ - 242 , 7 + 245 , 7 @ @ 
 } 
 
 protected void func _ 70629 _ bd ( ) 
 - @ @ - 1874 , 7 + 1897 , 8 @ @ 
 + @ @ - 1874 , 7 + 1898 , 8 @ @ 
 
 if ( this . field _ 70122 _ E ) 
 { 
 @ @ - 252 , 7 + 255 , 7 @ @ 
 } 
 
 float f7 = 0 . 16277136F / ( f6 * f6 * f6 ) ; 
 - @ @ - 1894 , 7 + 1918 , 8 @ @ 
 + @ @ - 1894 , 7 + 1919 , 8 @ @ 
 
 if ( this . field _ 70122 _ E ) 
 { 
 @ @ - 262 , 7 + 265 , 7 @ @ 
 } 
 
 if ( this . func _ 70617 _ f _ ( ) ) 
 - @ @ - 2054 , 6 + 2079 , 7 @ @ 
 + @ @ - 2054 , 6 + 2080 , 7 @ @ 
 
 public void func _ 70071 _ h _ ( ) 
 { 
 @ @ - 270 , 7 + 273 , 7 @ @ 
 super . func _ 70071 _ h _ ( ) ; 
 this . func _ 184608 _ ct ( ) ; 
 
 - @ @ - 2096 , 7 + 2122 , 9 @ @ 
 + @ @ - 2096 , 7 + 2123 , 9 @ @ 
 
 if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) 
 { 
 @ @ - 280 , 7 + 283 , 7 @ @ 
 
 if ( ! itemstack . func _ 190926 _ b ( ) ) 
 { 
 - @ @ - 2575 , 6 + 2603 , 40 @ @ 
 + @ @ - 2575 , 6 + 2604 , 40 @ @ 
 this . field _ 70752 _ e = true ; 
 } 
 
 @ @ - 321 , 7 + 324 , 7 @ @ 
 public abstract EnumHandSide func _ 184591 _ cq ( ) ; 
 
 public boolean func _ 184587 _ cr ( ) 
 - @ @ - 2595 , 12 + 2657 , 19 @ @ 
 + @ @ - 2595 , 12 + 2658 , 19 @ @ 
 
 if ( itemstack = = this . field _ 184627 _ bm ) 
 { 
 @ @ - 342 , 7 + 345 , 7 @ @ 
 { 
 this . func _ 71036 _ o ( ) ; 
 } 
 - @ @ - 2618 , 8 + 2687 , 10 @ @ 
 + @ @ - 2618 , 8 + 2688 , 10 @ @ 
 
 if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) 
 { 
 @ @ - 354 , 7 + 357 , 7 @ @ 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 { 
 - @ @ - 2700 , 7 + 2771 , 9 @ @ 
 + @ @ - 2700 , 7 + 2772 , 9 @ @ 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) 
 { 
 this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; 
 @ @ - 365 , 7 + 368 , 7 @ @ 
 this . func _ 184602 _ cy ( ) ; 
 } 
 } 
 - @ @ - 2724 , 7 + 2797 , 8 @ @ 
 + @ @ - 2724 , 7 + 2798 , 8 @ @ 
 { 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 @ @ - 375 , 7 + 378 , 7 @ @ 
 } 
 
 this . func _ 184602 _ cy ( ) ; 
 - @ @ - 2852 , 6 + 2926 , 31 @ @ 
 + @ @ - 2852 , 6 + 2927 , 31 @ @ 
 return true ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 7abbbab . . 9f62c6b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 233 , 7 + 233 , 7 @ @ 
 
 if ( enumhand = = EnumHand . MAIN _ HAND ) 
 { 
 - @ @ - 1045 , 7 + 1117 , 10 @ @ 
 + @ @ - 1045 , 11 + 1117 , 15 @ @ 
 { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) 
 { 
 @ @ - 245 , 7 + 245 , 12 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; 
 - @ @ - 1115 , 6 + 1190 , 8 @ @ 
 + this . func _ 110149 _ m ( this . func _ 110139 _ bj ( ) - ( f - p _ 70665 _ 2 _ ) ) ; 
 + + p _ 70665 _ 2 _ = net . minecraftforge . common . ForgeHooks . onLivingDamage ( this , p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 + 
 + if ( p _ 70665 _ 2 _ ! = 0 . 0F ) 
 + { 
 + @ @ - 1115 , 6 + 1191 , 8 @ @ 
 } 
 else 
 { 
 @ @ - 254 , 7 + 259 , 7 @ @ 
 ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; 
 ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; 
 
 - @ @ - 1124 , 7 + 1201 , 10 @ @ 
 + @ @ - 1124 , 7 + 1202 , 10 @ @ 
 { 
 itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; 
 } 
 @ @ - 266 , 7 + 271 , 7 @ @ 
 return EnumActionResult . SUCCESS ; 
 } 
 else 
 - @ @ - 1140 , 6 + 1220 , 7 @ @ 
 + @ @ - 1140 , 6 + 1221 , 7 @ @ 
 { 
 if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) 
 { 
 @ @ - 274 , 7 + 279 , 7 @ @ 
 this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; 
 } 
 
 - @ @ - 1165 , 6 + 1246 , 7 @ @ 
 + @ @ - 1165 , 6 + 1247 , 7 @ @ 
 
 public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) 
 { 
 @ @ - 282 , 7 + 287 , 7 @ @ 
 if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) 
 { 
 if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) 
 - @ @ - 1203 , 9 + 1285 , 11 @ @ 
 + @ @ - 1203 , 9 + 1286 , 11 @ @ 
 boolean flag2 = flag & & this . field _ 70143 _ R > 0 . 0F & & ! this . field _ 70122 _ E & & ! this . func _ 70617 _ f _ ( ) & & ! this . func _ 70090 _ H ( ) & & ! this . func _ 70644 _ a ( MobEffects . field _ 76440 _ q ) & & ! this . func _ 184218 _ aH ( ) & & p _ 71059 _ 1 _ instanceof EntityLivingBase ; 
 flag2 = flag2 & & ! this . func _ 70051 _ ag ( ) ; 
 
 @ @ - 295 , 7 + 300 , 7 @ @ 
 } 
 
 f = f + f1 ; 
 - @ @ - 1332 , 10 + 1416 , 12 @ @ 
 + @ @ - 1332 , 10 + 1417 , 12 @ @ 
 
 if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) 
 { 
 @ @ - 308 , 7 + 313 , 7 @ @ 
 this . func _ 184611 _ a ( EnumHand . MAIN _ HAND , ItemStack . field _ 190927 _ a ) ; 
 } 
 } 
 - @ @ - 1384 , 7 + 1470 , 7 @ @ 
 + @ @ - 1384 , 7 + 1471 , 7 @ @ 
 
 if ( this . field _ 70146 _ Z . nextFloat ( ) < f ) 
 { 
 @ @ - 317 , 7 + 322 , 7 @ @ 
 this . func _ 184602 _ cy ( ) ; 
 this . field _ 70170 _ p . func _ 72960 _ a ( this , ( byte ) 30 ) ; 
 } 
 - @ @ - 1442 , 6 + 1528 , 8 @ @ 
 + @ @ - 1442 , 6 + 1529 , 8 @ @ 
 
 public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) 
 { 
 @ @ - 326 , 7 + 331 , 7 @ @ 
 EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 - @ @ - 1484 , 8 + 1572 , 9 @ @ 
 + @ @ - 1484 , 8 + 1573 , 9 @ @ 
 this . func _ 192030 _ dh ( ) ; 
 this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; 
 
 @ @ - 338 , 7 + 343 , 7 @ @ 
 float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; 
 float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; 
 this . func _ 175139 _ a ( enumfacing ) ; 
 - @ @ - 1532 , 13 + 1621 , 14 @ @ 
 + @ @ - 1532 , 13 + 1622 , 14 @ @ 
 
 public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) 
 { 
 @ @ - 356 , 7 + 361 , 7 @ @ 
 
 if ( blockpos = = null ) 
 { 
 - @ @ - 1547 , 6 + 1637 , 10 @ @ 
 + @ @ - 1547 , 6 + 1638 , 10 @ @ 
 
 this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; 
 } 
 @ @ - 367 , 7 + 372 , 7 @ @ 
 
 this . field _ 71083 _ bS = false ; 
 
 - @ @ - 1565 , 15 + 1659 , 16 @ @ 
 + @ @ - 1565 , 15 + 1660 , 16 @ @ 
 
 private boolean func _ 175143 _ p ( ) 
 { 
 @ @ - 387 , 7 + 392 , 7 @ @ 
 { 
 if ( ! p _ 180467 _ 2 _ ) 
 { 
 - @ @ - 1588 , 16 + 1683 , 17 @ @ 
 + @ @ - 1588 , 16 + 1684 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 408 , 7 + 413 , 7 @ @ 
 
 switch ( enumfacing ) 
 { 
 - @ @ - 1637 , 16 + 1733 , 24 @ @ 
 + @ @ - 1637 , 16 + 1734 , 24 @ @ 
 
 public BlockPos func _ 180470 _ cg ( ) 
 { 
 @ @ - 435 , 7 + 440 , 7 @ @ 
 if ( p _ 180473 _ 1 _ ! = null ) 
 { 
 this . field _ 71077 _ c = p _ 180473 _ 1 _ ; 
 - @ @ - 1839 , 6 + 1943 , 10 @ @ 
 + @ @ - 1839 , 6 + 1944 , 10 @ @ 
 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 } 
 @ @ - 446 , 7 + 451 , 7 @ @ 
 } 
 
 protected void func _ 71061 _ d _ ( ) 
 - @ @ - 2176 , 7 + 2284 , 10 @ @ 
 + @ @ - 2176 , 7 + 2285 , 10 @ @ 
 
 public ITextComponent func _ 145748 _ c _ ( ) 
 { 
 @ @ - 458 , 7 + 463 , 7 @ @ 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; 
 - @ @ - 2185 , 7 + 2296 , 7 @ @ 
 + @ @ - 2185 , 7 + 2297 , 7 @ @ 
 
 public float func _ 70047 _ e ( ) 
 { 
 @ @ - 467 , 7 + 472 , 7 @ @ 
 
 if ( this . func _ 70608 _ bn ( ) ) 
 { 
 - @ @ - 2421 , 6 + 2532 , 168 @ @ 
 + @ @ - 2421 , 6 + 2533 , 168 @ @ 
 return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 1ca656a . . 3b09e21 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 113 , 6 + 113 , 7 @ @ import net . minecraftforge . event . ServerChatEvent ; 
 import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; 
 import net . minecraftforge . event . entity . item . ItemTossEvent ; 
 import net . minecraftforge . event . entity . living . LivingAttackEvent ; 
 + import net . minecraftforge . event . entity . living . LivingDamageEvent ; 
 import net . minecraftforge . event . entity . living . LivingDeathEvent ; 
 import net . minecraftforge . event . entity . living . LivingDropsEvent ; 
 import net . minecraftforge . event . entity . living . LivingEvent . LivingJumpEvent ; 
 @ @ - 564 , 6 + 565 , 12 @ @ public class ForgeHooks 
 return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . getAmount ( ) ) ; 
 } 
 
 + public static float onLivingDamage ( EntityLivingBase entity , DamageSource src , float amount ) 
 + { 
 + LivingDamageEvent event = new LivingDamageEvent ( entity , src , amount ) ; 
 + return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . getAmount ( ) ) ; 
 + } 
 + 
 public static boolean onLivingDeath ( EntityLivingBase entity , DamageSource src ) 
 { 
 return MinecraftForge . EVENT _ BUS . post ( new LivingDeathEvent ( entity , src ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingDamageEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingDamageEvent . java 
 new file mode 100644 
 index 0000000 . . 780f4ed 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingDamageEvent . java 
 @ @ - 0 , 0 + 1 , 64 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2017 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraftforge . common . ForgeHooks ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + import net . minecraft . util . DamageSource ; 
 + import net . minecraft . entity . EntityLivingBase ; 
 + 
 + / * * 
 + * LivingDamageEvent is fired just before damage is applied to entity . < br > 
 + * At this point armor , potion and absorption modifiers have already been applied to damage - this is FINAL value . < br > 
 + * Also note that appropriate resources ( like armor durability and absorption extra hearths ) have already been consumed . < br > 
 + * This event is fired whenever an Entity is damaged in 
 + * { @ link EntityLivingBase # damageEntity ( DamageSource , float ) } and 
 + * { @ link EntityPlayer # damageEntity ( DamageSource , float ) } . < br > 
 + * < br > 
 + * This event is fired via the { @ link ForgeHooks # onLivingDamage ( EntityLivingBase , DamageSource , float ) } . < br > 
 + * < br > 
 + * { @ link # source } contains the DamageSource that caused this Entity to be hurt . < br > 
 + * { @ link # amount } contains the final amount of damage that will be dealt to entity . < br > 
 + * < br > 
 + * This event is { @ link Cancelable } . < br > 
 + * If this event is canceled , the Entity is not hurt . Used resources WILL NOT be restored . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * @ see LivingHurtEvent 
 + * * / 
 + @ Cancelable 
 + public class LivingDamageEvent extends LivingEvent 
 + { 
 + private final DamageSource source ; 
 + private float amount ; 
 + public LivingDamageEvent ( EntityLivingBase entity , DamageSource source , float amount ) 
 + { 
 + super ( entity ) ; 
 + this . source = source ; 
 + this . amount = amount ; 
 + } 
 + 
 + public DamageSource getSource ( ) { return source ; } 
 + 
 + public float getAmount ( ) { return amount ; } 
 + 
 + public void setAmount ( float amount ) { this . amount = amount ; } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java 
 index a3c0a84 . . 11c4a2a 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingHurtEvent . java 
 @ @ - 43 , 6 + 43 , 7 @ @ import net . minecraft . entity . EntityLivingBase ; 
 * This event does not have a result . { @ link HasResult } < br > 
 * < br > 
 * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . 
 + * @ see LivingDamageEvent 
 * * / 
 @ Cancelable 
 public class LivingHurtEvent extends LivingEvent 
 diff - - git a / src / test / java / net / minecraftforge / debug / LivingDamageEventTest . java b / src / test / java / net / minecraftforge / debug / LivingDamageEventTest . java 
 new file mode 100644 
 index 0000000 . . 8ac95e0 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / LivingDamageEventTest . java 
 @ @ - 0 , 0 + 1 , 152 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import com . google . common . collect . ImmutableMap ; 
 + import java . util . Collections ; 
 + import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . Map ; 
 + import javax . annotation . Nullable ; 
 + import net . minecraft . command . CommandBase ; 
 + import net . minecraft . command . CommandException ; 
 + import net . minecraft . command . ICommandSender ; 
 + import net . minecraft . command . WrongUsageException ; 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . util . DamageSource ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraftforge . event . entity . living . LivingDamageEvent ; 
 + import net . minecraftforge . event . entity . living . LivingHurtEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . event . FMLServerStartingEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + @ Mod ( modid = LivingDamageEventTest . MODID , name = " ForgeDebugLivingDamage " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class LivingDamageEventTest 
 + { 
 + 
 + private static Logger logger ; 
 + 
 + public static final String MODID = " forgedebuglivingdamage " ; 
 + 
 + private static final Map < String , DamageSource > DAMAGE _ SOURCES = ImmutableMap . < String , DamageSource > builder ( ) 
 + . put ( " fire " , DamageSource . IN _ FIRE ) 
 + . put ( " lightning _ bolt " , DamageSource . LIGHTNING _ BOLT ) 
 + . put ( " on _ fire " , DamageSource . ON _ FIRE ) 
 + . put ( " lava " , DamageSource . LAVA ) 
 + . put ( " hot _ floor " , DamageSource . HOT _ FLOOR ) 
 + . put ( " in _ wall " , DamageSource . IN _ WALL ) 
 + . put ( " cramming " , DamageSource . CRAMMING ) 
 + . put ( " drown " , DamageSource . DROWN ) 
 + . put ( " starve " , DamageSource . STARVE ) 
 + . put ( " cactus " , DamageSource . CACTUS ) 
 + . put ( " fall " , DamageSource . FALL ) 
 + . put ( " fly _ into _ wall " , DamageSource . FLY _ INTO _ WALL ) 
 + . put ( " out _ of _ world " , DamageSource . OUT _ OF _ WORLD ) 
 + . put ( " generic " , DamageSource . GENERIC ) 
 + . put ( " magic " , DamageSource . MAGIC ) 
 + . put ( " wither " , DamageSource . WITHER ) 
 + . put ( " anvil " , DamageSource . ANVIL ) 
 + . put ( " falling _ block " , DamageSource . FALLING _ BLOCK ) 
 + . put ( " dragon _ breath " , DamageSource . DRAGON _ BREATH ) 
 + . put ( " fireworks " , DamageSource . FIREWORKS ) 
 + . build ( ) ; 
 + 
 + private static class CommandDamage extends CommandBase 
 + { 
 + 
 + private static final String USAGE = " damage < selector > < source > < amount > " ; 
 + 
 + @ Override 
 + public String getName ( ) 
 + { 
 + return " damage " ; 
 + } 
 + 
 + @ Override 
 + public String getUsage ( ICommandSender sender ) 
 + { 
 + return USAGE ; 
 + } 
 + 
 + @ Override 
 + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException 
 + { 
 + if ( args . length < 3 ) 
 + { 
 + throw new WrongUsageException ( USAGE ) ; 
 + } 
 + 
 + EntityLivingBase target = getEntity ( server , sender , args [ 0 ] , EntityLivingBase . class ) ; 
 + DamageSource damageSource = DAMAGE _ SOURCES . get ( args [ 1 ] . toLowerCase ( Locale . ROOT ) ) ; 
 + if ( target = = null | | damageSource = = null ) 
 + { 
 + throw new WrongUsageException ( USAGE ) ; 
 + } 
 + 
 + float amount ; 
 + try 
 + { 
 + amount = Float . parseFloat ( args [ 2 ] ) ; 
 + } catch ( NumberFormatException e ) 
 + { 
 + throw new WrongUsageException ( USAGE ) ; 
 + } 
 + 
 + target . attackEntityFrom ( damageSource , amount ) ; 
 + } 
 + 
 + @ Override 
 + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) 
 + { 
 + if ( args . length = = 1 ) 
 + { 
 + return getListOfStringsMatchingLastWord ( args , server . getOnlinePlayerNames ( ) ) ; 
 + } else if ( args . length = = 2 ) 
 + { 
 + return getListOfStringsMatchingLastWord ( args , DAMAGE _ SOURCES . keySet ( ) ) ; 
 + } 
 + 
 + return Collections . emptyList ( ) ; 
 + } 
 + 
 + @ Override 
 + public boolean isUsernameIndex ( String [ ] args , int index ) 
 + { 
 + return index = = 0 ; 
 + } 
 + } 
 + 
 + @ EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + logger = event . getModLog ( ) ; 
 + } 
 + 
 + @ EventHandler 
 + void serverStarting ( FMLServerStartingEvent evt ) 
 + { 
 + evt . registerServerCommand ( new CommandDamage ( ) ) ; 
 + } 
 + 
 + @ EventBusSubscriber 
 + public static class TestEventHandler 
 + { 
 + 
 + @ SubscribeEvent 
 + public static void livingHurtPre ( LivingHurtEvent evt ) 
 + { 
 + logger . info ( " Entity { } damage from { } ( pre - reduction ) : { } " , evt . getEntity ( ) , evt . getSource ( ) . getDamageType ( ) , evt . getAmount ( ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public static void livingHurtPost ( LivingDamageEvent evt ) 
 + { 
 + logger . info ( " Entity { } damage from { } ( post - reduction ) : { } " , evt . getEntity ( ) , evt . getSource ( ) . getDamageType ( ) , evt . getAmount ( ) ) ; 
 + } 
 + 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 5637ab8 . . eaf179b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 152 , 7 + 152 , 15 @ @ 
 this . field _ 71100 _ bB . func _ 75112 _ a ( p _ 70037 _ 1 _ ) ; 
 this . field _ 71075 _ bZ . func _ 75095 _ b ( p _ 70037 _ 1 _ ) ; 
 
 - @ @ - 921 , 6 + 965 , 23 @ @ 
 + @ @ - 903 , 6 + 947 , 7 @ @ 
 + { 
 + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74782 _ a ( " Inventory " , this . field _ 71071 _ by . func _ 70442 _ a ( new NBTTagList ( ) ) ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " SelectedItemSlot " , this . field _ 71071 _ by . field _ 70461 _ c ) ; 
 + p _ 70014 _ 1 _ . func _ 74757 _ a ( " Sleeping " , this . field _ 71083 _ bS ) ; 
 + @ @ - 921 , 6 + 966 , 23 @ @ 
 p _ 70014 _ 1 _ . func _ 74757 _ a ( " SpawnForced " , this . field _ 82248 _ d ) ; 
 } 
 
 @ @ - 176 , 7 + 184 , 7 @ @ 
 this . field _ 71100 _ bB . func _ 75117 _ b ( p _ 70014 _ 1 _ ) ; 
 this . field _ 71075 _ bZ . func _ 75091 _ a ( p _ 70014 _ 1 _ ) ; 
 p _ 70014 _ 1 _ . func _ 74782 _ a ( " EnderItems " , this . field _ 71078 _ a . func _ 70487 _ g ( ) ) ; 
 - @ @ - 928 , 6 + 989 , 7 @ @ 
 + @ @ - 928 , 6 + 990 , 7 @ @ 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) 
 { 
 @ @ - 184 , 7 + 192 , 7 @ @ 
 if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) 
 { 
 return false ; 
 - @ @ - 1006 , 6 + 1068 , 7 @ @ 
 + @ @ - 1006 , 6 + 1069 , 7 @ @ 
 if ( this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 EnumHand enumhand = this . func _ 184600 _ cs ( ) ; 
 @ @ - 192 , 7 + 200 , 7 @ @ 
 
 if ( enumhand = = EnumHand . MAIN _ HAND ) 
 { 
 - @ @ - 1041 , 7 + 1104 , 10 @ @ 
 + @ @ - 1041 , 7 + 1105 , 10 @ @ 
 { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) 
 { 
 @ @ - 204 , 7 + 212 , 7 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; 
 - @ @ - 1111 , 6 + 1177 , 7 @ @ 
 + @ @ - 1111 , 6 + 1178 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 212 , 7 + 220 , 7 @ @ 
 ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; 
 ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; 
 
 - @ @ - 1120 , 7 + 1187 , 10 @ @ 
 + @ @ - 1120 , 7 + 1188 , 10 @ @ 
 { 
 itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; 
 } 
 @ @ - 224 , 7 + 232 , 7 @ @ 
 return EnumActionResult . SUCCESS ; 
 } 
 else 
 - @ @ - 1136 , 6 + 1206 , 7 @ @ 
 + @ @ - 1136 , 6 + 1207 , 7 @ @ 
 { 
 if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) 
 { 
 @ @ - 232 , 7 + 240 , 7 @ @ 
 this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; 
 } 
 
 - @ @ - 1161 , 6 + 1232 , 7 @ @ 
 + @ @ - 1161 , 6 + 1233 , 7 @ @ 
 
 public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) 
 { 
 @ @ - 240 , 7 + 248 , 7 @ @ 
 if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) 
 { 
 if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) 
 - @ @ - 1331 , 11 + 1403 , 13 @ @ 
 + @ @ - 1331 , 11 + 1404 , 13 @ @ 
 
 if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) 
 { 
 @ @ - 254 , 7 + 262 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1441 , 6 + 1515 , 8 @ @ 
 + @ @ - 1441 , 6 + 1516 , 8 @ @ 
 
 public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) 
 { 
 @ @ - 263 , 7 + 271 , 7 @ @ 
 EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 - @ @ - 1482 , 8 + 1558 , 9 @ @ 
 + @ @ - 1482 , 8 + 1559 , 9 @ @ 
 
 this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; 
 
 @ @ - 275 , 7 + 283 , 7 @ @ 
 float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; 
 float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; 
 this . func _ 175139 _ a ( enumfacing ) ; 
 - @ @ - 1530 , 13 + 1607 , 14 @ @ 
 + @ @ - 1530 , 13 + 1608 , 14 @ @ 
 
 public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) 
 { 
 @ @ - 293 , 7 + 301 , 7 @ @ 
 
 if ( blockpos = = null ) 
 { 
 - @ @ - 1545 , 6 + 1623 , 10 @ @ 
 + @ @ - 1545 , 6 + 1624 , 10 @ @ 
 
 this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; 
 } 
 @ @ - 304 , 7 + 312 , 7 @ @ 
 
 this . field _ 71083 _ bS = false ; 
 
 - @ @ - 1563 , 15 + 1645 , 16 @ @ 
 + @ @ - 1563 , 15 + 1646 , 16 @ @ 
 
 private boolean func _ 175143 _ p ( ) 
 { 
 @ @ - 324 , 7 + 332 , 7 @ @ 
 { 
 if ( ! p _ 180467 _ 2 _ ) 
 { 
 - @ @ - 1586 , 16 + 1669 , 17 @ @ 
 + @ @ - 1586 , 16 + 1670 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 345 , 7 + 353 , 7 @ @ 
 
 switch ( enumfacing ) 
 { 
 - @ @ - 1635 , 16 + 1719 , 24 @ @ 
 + @ @ - 1635 , 16 + 1720 , 24 @ @ 
 
 public BlockPos func _ 180470 _ cg ( ) 
 { 
 @ @ - 372 , 7 + 380 , 7 @ @ 
 if ( p _ 180473 _ 1 _ ! = null ) 
 { 
 this . field _ 71077 _ c = p _ 180473 _ 1 _ ; 
 - @ @ - 1839 , 6 + 1931 , 10 @ @ 
 + @ @ - 1839 , 6 + 1932 , 10 @ @ 
 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 } 
 @ @ - 383 , 7 + 391 , 7 @ @ 
 } 
 
 protected void func _ 71061 _ d _ ( ) 
 - @ @ - 2039 , 6 + 2135 , 18 @ @ 
 + @ @ - 2039 , 6 + 2136 , 18 @ @ 
 this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; 
 this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; 
 this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; 
 @ @ - 402 , 7 + 410 , 7 @ @ 
 } 
 
 protected boolean func _ 70041 _ e _ ( ) 
 - @ @ - 2137 , 7 + 2245 , 10 @ @ 
 + @ @ - 2137 , 7 + 2246 , 10 @ @ 
 
 public ITextComponent func _ 145748 _ c _ ( ) 
 { 
 @ @ - 414 , 7 + 422 , 7 @ @ 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; 
 - @ @ - 2146 , 7 + 2257 , 7 @ @ 
 + @ @ - 2146 , 7 + 2258 , 7 @ @ 
 
 public float func _ 70047 _ e ( ) 
 { 
 @ @ - 423 , 7 + 431 , 7 @ @ 
 
 if ( this . func _ 70608 _ bn ( ) ) 
 { 
 - @ @ - 2362 , 6 + 2473 , 162 @ @ 
 + @ @ - 2362 , 6 + 2474 , 162 @ @ 
 return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch 
 new file mode 100644 
 index 0000000 . . ad8f719 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / datafix / DataFixesManager . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / datafix / DataFixesManager . java 
 + @ @ - 158 , 6 + 158 , 7 @ @ 
 + public static DataFixer func _ 188279 _ a ( ) 
 + { 
 + DataFixer datafixer = new DataFixer ( 819 ) ; 
 + + datafixer = new net . minecraftforge . common . util . CompoundDataFixer ( datafixer ) ; 
 + WorldInfo . func _ 189967 _ a ( datafixer ) ; 
 + EntityPlayer . func _ 189806 _ a ( datafixer ) ; 
 + AnvilChunkLoader . func _ 189889 _ a ( datafixer ) ; 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index 5ac3cdd . . 22b5152 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 97 , 15 + 97 , 17 @ @ 
 } 
 } 
 } 
 - @ @ - 122 , 6 + 181 , 7 @ @ 
 + @ @ - 121 , 7 + 180 , 9 @ @ 
 + NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; 
 nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; 
 nbttagcompound . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( nbttagcompound ) ; 
 this . func _ 75820 _ a ( p _ 75816 _ 2 _ , p _ 75816 _ 1 _ , nbttagcompound1 ) ; 
 + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkDataEvent . Save ( p _ 75816 _ 2 _ , nbttagcompound ) ) ; 
 this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; 
 } 
 catch ( Exception exception ) 
 - @ @ - 307 , 8 + 367 , 17 @ @ 
 + @ @ - 307 , 8 + 368 , 17 @ @ 
 
 if ( entity . func _ 70039 _ c ( nbttagcompound2 ) ) 
 { 
 @ @ - 123 , 7 + 125 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 318 , 8 + 387 , 17 @ @ 
 + @ @ - 318 , 8 + 388 , 17 @ @ 
 
 for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) 
 { 
 @ @ - 141 , 7 + 143 , 7 @ @ 
 } 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; 
 - @ @ - 388 , 6 + 466 , 12 @ @ 
 + @ @ - 388 , 6 + 467 , 12 @ @ 
 chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; 
 } 
 
 @ @ - 154 , 7 + 156 , 7 @ @ 
 NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; 
 
 for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) 
 - @ @ - 431 , 8 + 515 , 6 @ @ 
 + @ @ - 431 , 8 + 516 , 6 @ @ 
 p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch 
 new file mode 100644 
 index 0000000 . . 4e7e0db 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / world / gen / structure / template / Template . java 
 + + + + . . / src - work / minecraft / net / minecraft / world / gen / structure / template / Template . java 
 + @ @ - 520 , 6 + 520 , 7 @ @ 
 + p _ 189552 _ 1 _ . func _ 74782 _ a ( " size " , this . func _ 186267 _ a ( new int [ ] { this . field _ 186272 _ c . func _ 177958 _ n ( ) , this . field _ 186272 _ c . func _ 177956 _ o ( ) , this . field _ 186272 _ c . func _ 177952 _ p ( ) } ) ) ; 
 + p _ 189552 _ 1 _ . func _ 74778 _ a ( " author " , this . field _ 186273 _ d ) ; 
 + p _ 189552 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 189552 _ 1 _ ) ; 
 + return p _ 189552 _ 1 _ ; 
 + } 
 + 
 diff - - git a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 index d3dbb53 . . e4a0e53 100644 
 - - - a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 @ @ - 8 , 7 + 8 , 15 @ @ 
 
 protected WorldInfo ( ) 
 { 
 - @ @ - 807 , 6 + 808 , 26 @ @ 
 + @ @ - 335 , 6 + 336 , 7 @ @ 
 + nbttagcompound . func _ 74757 _ a ( " Snapshot " , false ) ; 
 + p _ 76064 _ 1 _ . func _ 74782 _ a ( " Version " , nbttagcompound ) ; 
 + p _ 76064 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 76064 _ 1 _ ) ; 
 + p _ 76064 _ 1 _ . func _ 74772 _ a ( " RandomSeed " , this . field _ 76100 _ a ) ; 
 + p _ 76064 _ 1 _ . func _ 74778 _ a ( " generatorName " , this . field _ 76098 _ b . func _ 77127 _ a ( ) ) ; 
 + p _ 76064 _ 1 _ . func _ 74768 _ a ( " generatorVersion " , this . field _ 76098 _ b . func _ 77131 _ c ( ) ) ; 
 + @ @ - 807 , 6 + 809 , 26 @ @ 
 } ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 new file mode 100644 
 index 0000000 . . da32e17 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 @ @ - 0 , 0 + 1 , 190 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . Map ; 
 + import java . util . Map . Entry ; 
 + 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + 
 + import net . minecraft . nbt . NBTTagCompound ; 
 + import net . minecraft . util . datafix . DataFixer ; 
 + import net . minecraft . util . datafix . FixTypes ; 
 + import net . minecraft . util . datafix . IDataWalker ; 
 + import net . minecraft . util . datafix . IFixType ; 
 + import net . minecraft . util . datafix . IFixableData ; 
 + 
 + public class CompoundDataFixer extends DataFixer 
 + { 
 + private final ModFixs vanilla ; 
 + private final Map < String , ModFixs > modFixers = Maps . newHashMap ( ) ; 
 + private final Map < IFixType , List < IDataWalker > > walkers = Maps . newHashMap ( ) ; 
 + 
 + public CompoundDataFixer ( DataFixer vanilla ) 
 + { 
 + super ( 0 ) ; 
 + this . vanilla = init ( " minecraft " , vanilla . version ) ; 
 + } 
 + 
 + @ Override 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt ) 
 + { 
 + final Map < String , Integer > versions = getVersions ( nbt ) ; 
 + final int mcversion = versions . get ( " minecraft " ) = = null ? - 1 : versions . get ( " minecraft " ) ; 
 + final IDataFixerData holder = new IDataFixerData ( ) 
 + { 
 + @ Override 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int version ) 
 + { 
 + for ( Entry < String , ModFixs > e : modFixers . entrySet ( ) ) 
 + { 
 + / / This is a potential performance hot spot . As it walks all the data for all 
 + / / of the fixers . . . But with the vanilla api there isn ' t a way to pass down 
 + / / the mod specific version numbers , so redundant . . but not hacky . . . 
 + / / Actually , this wont work as the data walkers take versions into account . . . 
 + ModFixs fixer = e . getValue ( ) ; 
 + int ver = getVersion ( e . getKey ( ) ) ; 
 + if ( ver < fixer . version ) 
 + { 
 + for ( IFixableData fix : fixer . getFixes ( type ) ) 
 + { 
 + if ( fix . getFixVersion ( ) > ver ) 
 + nbt = fix . fixTagCompound ( nbt ) ; 
 + } 
 + 
 + for ( IDataWalker walker : getWalkers ( type ) ) 
 + nbt = walker . process ( this , nbt , version ) ; / / We pass in the holder , in case a walker wants to know a mod version 
 + } 
 + } 
 + return nbt ; 
 + } 
 + 
 + @ Override 
 + public int getVersion ( String mod ) 
 + { 
 + Integer ret = versions . get ( mod ) ; 
 + return ret = = null ? - 1 : ret ; 
 + } 
 + } ; 
 + return holder . process ( type , nbt , mcversion ) ; 
 + } 
 + 
 + @ Override 
 + @ Deprecated / / MODDERS DO NOT CALL DIRECTLY ! Only use from DataWalker ! 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int mcversion ) 
 + { 
 + if ( type ! = FixTypes . OPTIONS ) / / Options are vanilla only 
 + throw new IllegalStateException ( " Do not call recursive process directly on DataFixer ! " ) ; 
 + 
 + for ( IFixableData fix : vanilla . getFixes ( type ) ) 
 + { 
 + if ( fix . getFixVersion ( ) > mcversion ) 
 + nbt = fix . fixTagCompound ( nbt ) ; 
 + } 
 + / / Options is a hack , and doesn ' t have any nested components 
 + / / for ( IDataWalker walker : getWalkers ( type ) ) 
 + / / nbt = walker . process ( this , nbt , version ) ; 
 + return nbt ; 
 + } 
 + 
 + private List < IDataWalker > getWalkers ( IFixType type ) 
 + { 
 + List < IDataWalker > ret = walkers . get ( type ) ; 
 + if ( ret = = null ) 
 + { 
 + ret = Lists . newArrayList ( ) ; 
 + walkers . put ( type , ret ) ; 
 + } 
 + return ret ; 
 + } 
 + 
 + @ Override 
 + @ Deprecated / / Modders do not use this , this will register you as vanilla . Use the ModID version below . 
 + public void registerFix ( IFixType type , IFixableData fixable ) 
 + { 
 + vanilla . registerFix ( type , fixable ) ; 
 + } 
 + 
 + 
 + @ Override 
 + @ Deprecated / / Modders do not use this , use add below , To better allow custom fix types . 
 + public void registerWalker ( FixTypes type , IDataWalker walker ) 
 + { 
 + registerWalkerAdd ( type , walker ) ; 
 + } 
 + 
 + @ Override 
 + public void registerWalkerAdd ( IFixType type , IDataWalker walker ) 
 + { 
 + getWalkers ( type ) . add ( walker ) ; 
 + } 
 + 
 + private void validateModId ( String mod ) 
 + { 
 + / / String current = Loader . instance ( ) . activeModContainer ( ) = = null ? " minecraft " : Loader . instance ( ) . activeModContainer ( ) . getModId ( ) ; 
 + / / Test active modid ? 
 + if ( ! mod . equals ( mod . toLowerCase ( Locale . ENGLISH ) ) ) 
 + throw new IllegalArgumentException ( " Mod ID is not lower case : " + mod ) ; 
 + if ( mod . length ( ) > 64 ) 
 + throw new IllegalArgumentException ( " Mod ID is to long : " + mod ) ; 
 + } 
 + 
 + / * * 
 + * Initialize your mod specific data fixer . 
 + * 
 + * @ param modid You mod id , must be lower case . 
 + * @ param version The current data version of your mod 
 + * / 
 + public ModFixs init ( String modid , int version ) 
 + { 
 + validateModId ( modid ) ; 
 + if ( modFixers . containsKey ( modid ) ) 
 + throw new IllegalStateException ( " Attempted to initalize DataFixer for " + modid + " twice " ) ; 
 + ModFixs ret = new ModFixs ( modid , version ) ; 
 + modFixers . put ( modid , ret ) ; 
 + return ret ; 
 + } 
 + 
 + private Map < String , Integer > getVersions ( NBTTagCompound nbt ) 
 + { 
 + Map < String , Integer > ret = Maps . newHashMap ( ) ; 
 + ret . put ( " minecraft " , nbt . hasKey ( " DataVersion " , 99 ) ? nbt . getInteger ( " DataVersion " ) : - 1 ) ; 
 + if ( nbt . hasKey ( " ForgeDataVersion " , 10 ) ) 
 + { 
 + NBTTagCompound sub = nbt . getCompoundTag ( " ForgeDataVersion " ) ; 
 + for ( String key : sub . getKeySet ( ) ) 
 + { 
 + ret . put ( key , sub . hasKey ( key , 99 ) ? sub . getInteger ( key ) : - 1 ) ; 
 + } 
 + } 
 + return ret ; 
 + } 
 + 
 + public void writeVersionData ( NBTTagCompound nbt ) 
 + { 
 + / / nbt . setInteger ( " DataVersion " , vanilla . version ) ; 
 + NBTTagCompound sub = new NBTTagCompound ( ) ; 
 + nbt . setTag ( " ForgeDataVersion " , sub ) ; 
 + for ( ModFixs mod : modFixers . values ( ) ) 
 + sub . setInteger ( mod . mod , mod . version ) ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / IDataFixerData . java b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java 
 new file mode 100644 
 index 0000000 . . da6b05c 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import net . minecraft . util . datafix . IDataFixer ; 
 + 
 + public interface IDataFixerData extends IDataFixer 
 + { 
 + public int getVersion ( String mod ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 new file mode 100644 
 index 0000000 . . 2dc01f2 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 @ @ - 0 , 0 + 1 , 83 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import java . util . List ; 
 + import java . util . Map ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + 
 + import net . minecraft . util . datafix . IFixType ; 
 + import net . minecraft . util . datafix . IFixableData ; 
 + 
 + public class ModFixs 
 + { 
 + private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 + final String mod ; 
 + final int version ; 
 + private final Map < IFixType , List < IFixableData > > fixes = Maps . newHashMap ( ) ; 
 + 
 + ModFixs ( String mod , int version ) 
 + { 
 + this . mod = mod ; 
 + this . version = version ; 
 + } 
 + 
 + public List < IFixableData > getFixes ( IFixType type ) 
 + { 
 + List < IFixableData > ret = this . fixes . get ( type ) ; 
 + if ( ret = = null ) 
 + { 
 + ret = Lists . newArrayList ( ) ; 
 + this . fixes . put ( type , ret ) ; 
 + } 
 + return ret ; 
 + } 
 + 
 + public void registerFix ( IFixType type , IFixableData fixer ) 
 + { 
 + List < IFixableData > list = getFixes ( type ) ; 
 + int ver = fixer . getFixVersion ( ) ; 
 + 
 + if ( ver > this . version ) 
 + { 
 + LOGGER . warn ( " [ { } ] Ignored fix registered for version : { } as the DataVersion of the game is : { } " , mod , ver , this . version ) ; 
 + return ; 
 + } 
 + 
 + if ( ! list . isEmpty ( ) & & list . get ( list . size ( ) - 1 ) . getFixVersion ( ) > ver ) 
 + { 
 + for ( int x = 0 ; x < list . size ( ) ; + + x ) 
 + { 
 + if ( list . get ( x ) . getFixVersion ( ) > ver ) 
 + { 
 + list . add ( x , fixer ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + else 
 + list . add ( fixer ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index c796af8 . . a78247c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 82 , 6 + 82 , 7 @ @ import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . client . event . ModelRegistryEvent ; 
 import net . minecraftforge . common . ForgeModContainer ; 
 import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . client . registry . RenderingRegistry ; 
 import net . minecraftforge . fml . common . DummyModContainer ; 
 import net . minecraftforge . fml . common . DuplicateModsFoundException ; 
 @ @ - 1060 , 4 + 1061 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 MinecraftForge . EVENT _ BUS . post ( new ModelRegistryEvent ( ) ) ; 
 } 
 + 
 + @ Override 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) this . client . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index d4863c7 . . 1411eda 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 57 , 6 + 57 , 7 @ @ import net . minecraft . world . storage . WorldInfo ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . common . ForgeVersion ; 
 import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . common . gameevent . InputEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent ; 
 @ @ - 751 , 4 + 752 , 9 @ @ public class FMLCommonHandler 
 { 
 sidedDelegate . fireSidedRegistryEvents ( ) ; 
 } 
 + 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) sidedDelegate . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 index aea07ff . . 4cff064 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . util . IThreadListener ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 @ @ - 77 , 4 + 78 , 6 @ @ public interface IFMLSidedHandler 
 void reloadRenderers ( ) ; 
 
 void fireSidedRegistryEvents ( ) ; 
 + 
 + CompoundDataFixer getDataFixer ( ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index 54c25b1 . . fa4f6a5 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . server . dedicated . PendingCommand ; 
 import net . minecraft . util . IThreadListener ; 
 import net . minecraft . util . text . translation . LanguageMap ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . IFMLSidedHandler ; 
 @ @ - 339 , 4 + 340 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 / / NOOP 
 } 
 + @ Override 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) this . server . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 14df9d2 . . 586b68e 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 287 , 4 + 287 , 7 @ @ public net . minecraft . potion . PotionHelper func _ 185204 _ a ( Lnet / minecraft / potion / Pot 
 
 # TileEntityHopper 
 public net . minecraft . tileentity . TileEntityHopper func _ 174914 _ o ( ) Z # mayTransfer 
 - public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown 
 \ No newline at end of file 
 + public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown 
 + 
 + # DataFixer 
 + public net . minecraft . util . datafix . DataFixer field _ 188262 _ d # version 
 \ No newline at end of file
