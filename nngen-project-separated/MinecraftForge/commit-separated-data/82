BLEU SCORE: 0.035802380724744266

TEST MSG: Fix the MDK . .
GENERATED MSG: Update mdk with some tweaks for building

TEST DIFF (one line): diff - - git a / mdk / src / main / java / com / example / examplemod / ExampleMod . java b / mdk / src / main / java / com / example / examplemod / ExampleMod . java <nl> index 88204a0 . . d0fa6c8 100644 <nl> - - - a / mdk / src / main / java / com / example / examplemod / ExampleMod . java <nl> + + + b / mdk / src / main / java / com / example / examplemod / ExampleMod . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class ExampleMod <nl> / / Register the doClientStuff method for modloading <nl> FMLJavaModLoadingContext . get ( ) . getModEventBus ( ) . addListener ( this : : doClientStuff ) ; <nl> <nl> - / / Register ourselves for server , registry and other game events we are interested in <nl> + / / Register ourselves for server and other game events we are interested in <nl> MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> } <nl> <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class ExampleMod <nl> private void enqueueIMC ( final InterModEnqueueEvent event ) <nl> { <nl> / / some example code to dispatch IMC to another mod <nl> - InterModComms . sendTo ( " forge " , " helloworld " , ( ) - > { LOGGER . info ( " Hello world " ) ; return " Hello world " ; } ) ; <nl> + InterModComms . sendTo ( " examplemod " , " helloworld " , ( ) - > { LOGGER . info ( " Hello world from the MDK " ) ; return " Hello world " ; } ) ; <nl> } <nl> <nl> private void processIMC ( final InterModProcessEvent event ) <nl> @ @ - 66 , 16 + 66 , 17 @ @ public class ExampleMod <nl> } <nl> / / You can use SubscribeEvent and let the Event Bus discover methods to call <nl> @ SubscribeEvent <nl> - public static void onServerStarting ( FMLServerStartingEvent event ) { <nl> + public void onServerStarting ( FMLServerStartingEvent event ) { <nl> / / do something when the server starts <nl> LOGGER . info ( " HELLO from server starting " ) ; <nl> } <nl> <nl> - / / You can use EventBusSubscriber to automatically subscribe events on the contained class ( this is subscribing to the MOD event bus <nl> + / / You can use EventBusSubscriber to automatically subscribe events on the contained class ( this is subscribing to the MOD <nl> + / / Event bus for receiving Registry Events ) <nl> @ Mod . EventBusSubscriber ( bus = Mod . EventBusSubscriber . Bus . MOD ) <nl> public static class RegistryEvents { <nl> @ SubscribeEvent <nl> - public void onBlocksRegistry ( final RegistryEvent . Register < Block > blockRegistryEvent ) { <nl> + public static void onBlocksRegistry ( final RegistryEvent . Register < Block > blockRegistryEvent ) { <nl> / / register a new block here <nl> LOGGER . info ( " HELLO from Register Block " ) ; <nl> } <nl> diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml <nl> index 7c52e29 . . 7ce23d4 100644 <nl> - - - a / mdk / src / main / resources / META - INF / mods . toml <nl> + + + b / mdk / src / main / resources / META - INF / mods . toml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml <nl> modLoader = " javafml " # mandatory <nl> # A version range to match for said mod loader - for regular FML @ Mod it will be the forge version <nl> - loaderVersion = " [ 24 , ) " # mandatory ( 24 is current forge version ) <nl> + loaderVersion = " [ 25 , ) " # mandatory ( 24 is current forge version ) <nl> # A URL to refer people to when problems occur with this mod <nl> issueTrackerURL = " http : / / my . issue . tracker / " # optional <nl> # A URL for the " homepage " for this mod , displayed in the mod UI <nl> @ @ - 42 , 7 + 42 , 7 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn <nl> # Does this dependency have to exist - if not , ordering below must be specified <nl> mandatory = true # mandatory <nl> # The version range of the dependency <nl> - versionRange = " [ 24 , ) " # mandatory <nl> + versionRange = " [ 25 , ) " # mandatory <nl> # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory <nl> ordering = " NONE " <nl> # Side this dependency is applied on - BOTH , CLIENT or SERVER <nl> @ @ - 51 , 6 + 51 , 6 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn <nl> [ [ dependencies . examplemod ] ] <nl> modId = " minecraft " <nl> mandatory = true <nl> - versionRange = " [ 1 . 13 ] " <nl> + versionRange = " [ 1 . 13 . 2 ] " <nl> ordering = " NONE " <nl> side = " BOTH " <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / mdk / build . gradle b / mdk / build . gradle <nl> index ce344c1 . . a6e9b95 100644 <nl> - - - a / mdk / build . gradle <nl> + + + b / mdk / build . gradle <nl> @ @ - 63 , 8 + 63 , 9 @ @ minecraft { <nl> <nl> dependencies { <nl> / / Specify the version of Minecraft to use , If this is any group other then ' net . minecraft ' it is assumed <nl> - / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . <nl> - minecraft ' @ FORGE _ GROUP @ : @ FORGE _ NAME @ : @ FORGE _ VERSION @ ' <nl> + / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . <nl> + / / The userdev artifact is a special name and will get all sorts of transformations applied to it . <nl> + minecraft ' @ FORGE _ GROUP @ : userdev : @ FORGE _ VERSION @ ' <nl> <nl> / / you may put jars on which you depend on in . / libs <nl> / / or you may define them like so . . <nl> @ @ - 102 , 7 + 103 , 7 @ @ processResources { <nl> expand ' version ' : project . version , ' mcversion ' : ' @ MC _ VERSION @ ' <nl> } <nl> <nl> - / / copy everything else except the mcmod . info <nl> + / / copy everything else except the mods . toml <nl> from ( sourceSets . main . resources . srcDirs ) { <nl> exclude ' META _ INF / mods . toml ' <nl> } <nl> diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml <nl> index f012d48 . . 90970be 100644 <nl> - - - a / mdk / src / main / resources / META - INF / mods . toml <nl> + + + b / mdk / src / main / resources / META - INF / mods . toml <nl> @ @ - 5 , 8 + 5 , 8 @ @ <nl> # Find more information on toml format here : https : / / github . com / toml - lang / toml <nl> # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml <nl> modLoader = " javafml " # mandatory <nl> - # A version range to match for said mod loader - for regular FML @ Mod it will be the minecraft version ( without the 1 . ) <nl> - loaderVersion = " [ 13 , ) " # mandatory <nl> + # A version range to match for said mod loader - for regular FML @ Mod it will be the forge version <nl> + loaderVersion = " [ 24 , ) " # mandatory ( 24 is current forge version ) <nl> # A URL to query for updates for this mod . See the JSON update specification < here > <nl> updateJSONURL = " http : / / myurl . me / " # optional <nl> # A URL to refer people to when problems occur with this mod <nl> @ @ - 43 , 7 + 43 , 7 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn <nl> # Does this dependency have to exist - if not , ordering below must be specified <nl> mandatory = true # mandatory <nl> # The version range of the dependency <nl> - versionRange = " [ 14 . 23 . 2 . 0 , ) " # mandatory <nl> + versionRange = " [ 24 , ) " # mandatory <nl> # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory <nl> ordering = " NONE " <nl> # Side this dependency is applied on - BOTH , CLIENT or SERVER

TEST DIFF:
diff - - git a / mdk / src / main / java / com / example / examplemod / ExampleMod . java b / mdk / src / main / java / com / example / examplemod / ExampleMod . java 
 index 88204a0 . . d0fa6c8 100644 
 - - - a / mdk / src / main / java / com / example / examplemod / ExampleMod . java 
 + + + b / mdk / src / main / java / com / example / examplemod / ExampleMod . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class ExampleMod 
 / / Register the doClientStuff method for modloading 
 FMLJavaModLoadingContext . get ( ) . getModEventBus ( ) . addListener ( this : : doClientStuff ) ; 
 
 - / / Register ourselves for server , registry and other game events we are interested in 
 + / / Register ourselves for server and other game events we are interested in 
 MinecraftForge . EVENT _ BUS . register ( this ) ; 
 } 
 
 @ @ - 54 , 7 + 54 , 7 @ @ public class ExampleMod 
 private void enqueueIMC ( final InterModEnqueueEvent event ) 
 { 
 / / some example code to dispatch IMC to another mod 
 - InterModComms . sendTo ( " forge " , " helloworld " , ( ) - > { LOGGER . info ( " Hello world " ) ; return " Hello world " ; } ) ; 
 + InterModComms . sendTo ( " examplemod " , " helloworld " , ( ) - > { LOGGER . info ( " Hello world from the MDK " ) ; return " Hello world " ; } ) ; 
 } 
 
 private void processIMC ( final InterModProcessEvent event ) 
 @ @ - 66 , 16 + 66 , 17 @ @ public class ExampleMod 
 } 
 / / You can use SubscribeEvent and let the Event Bus discover methods to call 
 @ SubscribeEvent 
 - public static void onServerStarting ( FMLServerStartingEvent event ) { 
 + public void onServerStarting ( FMLServerStartingEvent event ) { 
 / / do something when the server starts 
 LOGGER . info ( " HELLO from server starting " ) ; 
 } 
 
 - / / You can use EventBusSubscriber to automatically subscribe events on the contained class ( this is subscribing to the MOD event bus 
 + / / You can use EventBusSubscriber to automatically subscribe events on the contained class ( this is subscribing to the MOD 
 + / / Event bus for receiving Registry Events ) 
 @ Mod . EventBusSubscriber ( bus = Mod . EventBusSubscriber . Bus . MOD ) 
 public static class RegistryEvents { 
 @ SubscribeEvent 
 - public void onBlocksRegistry ( final RegistryEvent . Register < Block > blockRegistryEvent ) { 
 + public static void onBlocksRegistry ( final RegistryEvent . Register < Block > blockRegistryEvent ) { 
 / / register a new block here 
 LOGGER . info ( " HELLO from Register Block " ) ; 
 } 
 diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml 
 index 7c52e29 . . 7ce23d4 100644 
 - - - a / mdk / src / main / resources / META - INF / mods . toml 
 + + + b / mdk / src / main / resources / META - INF / mods . toml 
 @ @ - 6 , 7 + 6 , 7 @ @ 
 # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml 
 modLoader = " javafml " # mandatory 
 # A version range to match for said mod loader - for regular FML @ Mod it will be the forge version 
 - loaderVersion = " [ 24 , ) " # mandatory ( 24 is current forge version ) 
 + loaderVersion = " [ 25 , ) " # mandatory ( 24 is current forge version ) 
 # A URL to refer people to when problems occur with this mod 
 issueTrackerURL = " http : / / my . issue . tracker / " # optional 
 # A URL for the " homepage " for this mod , displayed in the mod UI 
 @ @ - 42 , 7 + 42 , 7 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn 
 # Does this dependency have to exist - if not , ordering below must be specified 
 mandatory = true # mandatory 
 # The version range of the dependency 
 - versionRange = " [ 24 , ) " # mandatory 
 + versionRange = " [ 25 , ) " # mandatory 
 # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory 
 ordering = " NONE " 
 # Side this dependency is applied on - BOTH , CLIENT or SERVER 
 @ @ - 51 , 6 + 51 , 6 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn 
 [ [ dependencies . examplemod ] ] 
 modId = " minecraft " 
 mandatory = true 
 - versionRange = " [ 1 . 13 ] " 
 + versionRange = " [ 1 . 13 . 2 ] " 
 ordering = " NONE " 
 side = " BOTH " 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / mdk / build . gradle b / mdk / build . gradle 
 index ce344c1 . . a6e9b95 100644 
 - - - a / mdk / build . gradle 
 + + + b / mdk / build . gradle 
 @ @ - 63 , 8 + 63 , 9 @ @ minecraft { 
 
 dependencies { 
 / / Specify the version of Minecraft to use , If this is any group other then ' net . minecraft ' it is assumed 
 - / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . 
 - minecraft ' @ FORGE _ GROUP @ : @ FORGE _ NAME @ : @ FORGE _ VERSION @ ' 
 + / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . 
 + / / The userdev artifact is a special name and will get all sorts of transformations applied to it . 
 + minecraft ' @ FORGE _ GROUP @ : userdev : @ FORGE _ VERSION @ ' 
 
 / / you may put jars on which you depend on in . / libs 
 / / or you may define them like so . . 
 @ @ - 102 , 7 + 103 , 7 @ @ processResources { 
 expand ' version ' : project . version , ' mcversion ' : ' @ MC _ VERSION @ ' 
 } 
 
 - / / copy everything else except the mcmod . info 
 + / / copy everything else except the mods . toml 
 from ( sourceSets . main . resources . srcDirs ) { 
 exclude ' META _ INF / mods . toml ' 
 } 
 diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml 
 index f012d48 . . 90970be 100644 
 - - - a / mdk / src / main / resources / META - INF / mods . toml 
 + + + b / mdk / src / main / resources / META - INF / mods . toml 
 @ @ - 5 , 8 + 5 , 8 @ @ 
 # Find more information on toml format here : https : / / github . com / toml - lang / toml 
 # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml 
 modLoader = " javafml " # mandatory 
 - # A version range to match for said mod loader - for regular FML @ Mod it will be the minecraft version ( without the 1 . ) 
 - loaderVersion = " [ 13 , ) " # mandatory 
 + # A version range to match for said mod loader - for regular FML @ Mod it will be the forge version 
 + loaderVersion = " [ 24 , ) " # mandatory ( 24 is current forge version ) 
 # A URL to query for updates for this mod . See the JSON update specification < here > 
 updateJSONURL = " http : / / myurl . me / " # optional 
 # A URL to refer people to when problems occur with this mod 
 @ @ - 43 , 7 + 43 , 7 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn 
 # Does this dependency have to exist - if not , ordering below must be specified 
 mandatory = true # mandatory 
 # The version range of the dependency 
 - versionRange = " [ 14 . 23 . 2 . 0 , ) " # mandatory 
 + versionRange = " [ 24 , ) " # mandatory 
 # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory 
 ordering = " NONE " 
 # Side this dependency is applied on - BOTH , CLIENT or SERVER
