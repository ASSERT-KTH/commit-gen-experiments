BLEU SCORE: 0.09694335999590689

TEST MSG: New client config option to force all chunk rendering off the main thread .
GENERATED MSG: Add config option to specify the default spawn fuzz factor for the overworld . Closes # 1190

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch b / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch <nl> index 1011c0e . . 7d59dd7 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch <nl> @ @ - 84 , 6 + 84 , 15 @ @ <nl> <nl> this . func _ 180443 _ s ( ) ; <nl> <nl> + @ @ - 933 , 7 + 948 , 7 @ @ <nl> + BlockPos blockpos2 = renderchunk4 . func _ 178568 _ j ( ) . func _ 177982 _ a ( 8 , 8 , 8 ) ; <nl> + boolean flag3 = blockpos2 . func _ 177951 _ i ( blockpos1 ) < 768 . 0D ; <nl> + <nl> + - if ( ! renderchunk4 . func _ 188281 _ o ( ) & & ! flag3 ) <nl> + + if ( net . minecraftforge . common . ForgeModContainer . alwaysSetupTerrainOffThread | | ( ! renderchunk4 . func _ 188281 _ o ( ) & & ! flag3 ) ) <nl> + { <nl> + this . field _ 175009 _ l . add ( renderchunk4 ) ; <nl> + } <nl> @ @ - 1220 , 6 + 1235 , 13 @ @ <nl> <nl> public void func _ 174976 _ a ( float p _ 174976 _ 1 _ , int p _ 174976 _ 2 _ ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index 7481c2f . . 2f3b082 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 114 , 6 + 114 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> public static boolean replaceVanillaBucketModel = true ; <nl> public static long java8Reminder = 0 ; <nl> public static boolean disableStairSlabCulling = false ; / / Also known as the " DontCullStairsBecauseIUseACrappyTexturePackThatBreaksBasicBlockShapesSoICantTrustBasicBlockCulling " flag <nl> + public static boolean alwaysSetupTerrainOffThread = false ; / / In RenderGlobal . setupTerrain , always force the chunk render updates to be queued to the thread <nl> <nl> private static Configuration config ; <nl> private static ForgeModContainer INSTANCE ; <nl> @ @ - 300 , 6 + 301 , 13 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> prop . setLanguageKey ( " forge . configgui . disableStairSlabCulling " ) . setRequiresMcRestart ( false ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> + prop = config . get ( Configuration . CATEGORY _ CLIENT , " alwaysSetupTerrainOffThread " , Boolean . FALSE , <nl> + " Enable forge to queue all chunk updates to the Chunk Update thread . May increase FPS significantly , but may also cause weird rendering lag . Not recommended for computers " + <nl> + " without a significant number of cores available . " ) ; <nl> + alwaysSetupTerrainOffThread = prop . getBoolean ( Boolean . FALSE ) ; <nl> + prop . setLanguageKey ( " forge . configgui . alwaysSetupTerrainOffThread " ) ; <nl> + propOrder . add ( prop . getName ( ) ) ; <nl> + <nl> config . setCategoryPropertyOrder ( CATEGORY _ CLIENT , propOrder ) ; <nl> <nl> if ( config . hasChanged ( ) ) <nl> @ @ - 324 , 30 + 332 , 22 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> { <nl> if ( getMetadata ( ) . modId . equals ( event . getModID ( ) ) ) <nl> { <nl> - if ( ! event . isWorldRunning ( ) ) <nl> + if ( " chunkLoader " . equals ( event . getConfigID ( ) ) ) <nl> { <nl> - if ( Configuration . CATEGORY _ GENERAL . equals ( event . getConfigID ( ) ) ) <nl> - { <nl> - syncConfig ( false ) ; <nl> - } <nl> - else if ( " chunkLoader " . equals ( event . getConfigID ( ) ) ) <nl> - { <nl> - ForgeChunkManager . syncConfigDefaults ( ) ; <nl> - ForgeChunkManager . loadConfiguration ( ) ; <nl> - } <nl> - else if ( VERSION _ CHECK _ CAT . equals ( event . getConfigID ( ) ) ) <nl> - { <nl> - syncConfig ( false ) ; <nl> - } <nl> + ForgeChunkManager . syncConfigDefaults ( ) ; <nl> + ForgeChunkManager . loadConfiguration ( ) ; <nl> } <nl> else <nl> { <nl> - boolean tmp = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , disableStairSlabCulling ) . getBoolean ( ) ; <nl> - if ( disableStairSlabCulling ! = tmp ) <nl> + boolean tmpStairs = disableStairSlabCulling ; <nl> + <nl> + syncConfig ( false ) ; <nl> + <nl> + if ( event . isWorldRunning ( ) & & tmpStairs ! = disableStairSlabCulling ) <nl> { <nl> - disableStairSlabCulling = tmp ; <nl> FMLCommonHandler . instance ( ) . reloadRenderers ( ) ; <nl> } <nl> + <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index fcee7bc . . 1509ec6 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 50 , 6 + 50 , 8 @ @ forge . configgui . forgeLightPipelineEnabled = Forge Light Pipeline Enabled <nl> forge . configgui . java8Reminder = Java 8 Reminder timestamp <nl> forge . configgui . disableStairSlabCulling = Disable Stair / Slab culling . <nl> forge . configgui . disableStairSlabCulling . tooltip = Enable this if you see through blocks touching stairs / slabs with your resource pack . <nl> + forge . configgui . alwaysSetupTerrainOffThread = Force threaded chunk rendering <nl> + forge . configgui . alwaysSetupTerrainOffThread . tooltip = Enable forge to queue all chunk updates to the Chunk Update thread . May increase FPS significantly , but may also cause weird rendering lag . Not recommended for computers without a significant number of cores available . <nl> <nl> forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . <nl> forge . configgui . modID = Mod ID
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / WorldType . java . patch b / patches / minecraft / net / minecraft / world / WorldType . java . patch <nl> index d520342 . . 76d0ee2 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldType . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldType . java . patch <nl> @ @ - 60 , 7 + 60 , 7 @ @ <nl> + { <nl> + this ( getNextID ( ) , name ) ; <nl> + } <nl> - + <nl> + + <nl> + / * * <nl> * Called when ' Create New World ' button is pressed before starting game <nl> * / <nl> @ @ - 73 , 7 + 73 , 7 @ @ <nl> + * / <nl> + public int getSpawnFuzz ( ) <nl> + { <nl> - + return 20 ; <nl> + + return net . minecraftforge . common . ForgeModContainer . defaultSpawnFuzz ; <nl> + } <nl> + <nl> + / * * <nl> @ @ - 98 , 7 + 98 , 7 @ @ <nl> + { <nl> + return this = = field _ 77138 _ c ; <nl> + } <nl> - + <nl> + + <nl> + <nl> + / * * <nl> + * Get the height to render the clouds for this world type <nl> @ @ - 111 , 7 + 111 , 7 @ @ <nl> + <nl> + / * * <nl> + * Creates the GenLayerBiome used for generating the world <nl> - + * <nl> + + * <nl> + * @ param worldSeed The world seed <nl> + * @ param parentLayer The parent layer to feed into any layer you return <nl> + * @ return A GenLayer that will return ints representing the Biomes to be generated , see GenLayerBiome <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index 7ae1949 . . 907dc2e 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 67 , 6 + 67 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> public static boolean shouldSortRecipies = true ; <nl> public static boolean disableVersionCheck = false ; <nl> public static boolean enableStencilBits = true ; <nl> + public static int defaultSpawnFuzz = 20 ; <nl> <nl> private static Configuration config ; <nl> <nl> @ @ - 223 , 6 + 224 , 13 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> enableStencilBits = prop . getBoolean ( true ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> + prop = config . get ( Configuration . CATEGORY _ GENERAL , " defaultSpawnFuzz " , 20 , <nl> + " The spawn fuzz when a player respawns in the world , this is controlable by WorldType , this config option is for the default overworld . " , <nl> + 1 , Integer . MAX _ VALUE ) ; <nl> + prop . setLanguageKey ( " forge . configgui . spawnfuzz " ) . setRequiresWorldRestart ( false ) ; <nl> + defaultSpawnFuzz = prop . getInt ( 20 ) ; <nl> + propOrder . add ( prop . getName ( ) ) ; <nl> + <nl> config . setCategoryPropertyOrder ( CATEGORY _ GENERAL , propOrder ) ; <nl> <nl> if ( config . hasChanged ( ) ) <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index 13ea1c4 . . 25759ef 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 41 , 6 + 41 , 7 @ @ forge . configgui . zombieBabyChance = Zombie Baby Chance <nl> forge . configgui . zombieBaseSummonChance . tooltip = Base zombie summoning spawn chance . Allows changing the bonus zombie summoning mechanic . <nl> forge . configgui . zombieBaseSummonChance = Zombie Summon Chance <nl> forge . configgui . stencilbits = Enable GL Stencil Bits <nl> + forge . configgui . spawnfuzz = Respawn Fuzz Diameter <nl> <nl> forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . <nl> forge . configgui . modID = Mod ID

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch b / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch 
 index 1011c0e . . 7d59dd7 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / RenderGlobal . java . patch 
 @ @ - 84 , 6 + 84 , 15 @ @ 
 
 this . func _ 180443 _ s ( ) ; 
 
 + @ @ - 933 , 7 + 948 , 7 @ @ 
 + BlockPos blockpos2 = renderchunk4 . func _ 178568 _ j ( ) . func _ 177982 _ a ( 8 , 8 , 8 ) ; 
 + boolean flag3 = blockpos2 . func _ 177951 _ i ( blockpos1 ) < 768 . 0D ; 
 + 
 + - if ( ! renderchunk4 . func _ 188281 _ o ( ) & & ! flag3 ) 
 + + if ( net . minecraftforge . common . ForgeModContainer . alwaysSetupTerrainOffThread | | ( ! renderchunk4 . func _ 188281 _ o ( ) & & ! flag3 ) ) 
 + { 
 + this . field _ 175009 _ l . add ( renderchunk4 ) ; 
 + } 
 @ @ - 1220 , 6 + 1235 , 13 @ @ 
 
 public void func _ 174976 _ a ( float p _ 174976 _ 1 _ , int p _ 174976 _ 2 _ ) 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index 7481c2f . . 2f3b082 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 114 , 6 + 114 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 public static boolean replaceVanillaBucketModel = true ; 
 public static long java8Reminder = 0 ; 
 public static boolean disableStairSlabCulling = false ; / / Also known as the " DontCullStairsBecauseIUseACrappyTexturePackThatBreaksBasicBlockShapesSoICantTrustBasicBlockCulling " flag 
 + public static boolean alwaysSetupTerrainOffThread = false ; / / In RenderGlobal . setupTerrain , always force the chunk render updates to be queued to the thread 
 
 private static Configuration config ; 
 private static ForgeModContainer INSTANCE ; 
 @ @ - 300 , 6 + 301 , 13 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 prop . setLanguageKey ( " forge . configgui . disableStairSlabCulling " ) . setRequiresMcRestart ( false ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 + prop = config . get ( Configuration . CATEGORY _ CLIENT , " alwaysSetupTerrainOffThread " , Boolean . FALSE , 
 + " Enable forge to queue all chunk updates to the Chunk Update thread . May increase FPS significantly , but may also cause weird rendering lag . Not recommended for computers " + 
 + " without a significant number of cores available . " ) ; 
 + alwaysSetupTerrainOffThread = prop . getBoolean ( Boolean . FALSE ) ; 
 + prop . setLanguageKey ( " forge . configgui . alwaysSetupTerrainOffThread " ) ; 
 + propOrder . add ( prop . getName ( ) ) ; 
 + 
 config . setCategoryPropertyOrder ( CATEGORY _ CLIENT , propOrder ) ; 
 
 if ( config . hasChanged ( ) ) 
 @ @ - 324 , 30 + 332 , 22 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 { 
 if ( getMetadata ( ) . modId . equals ( event . getModID ( ) ) ) 
 { 
 - if ( ! event . isWorldRunning ( ) ) 
 + if ( " chunkLoader " . equals ( event . getConfigID ( ) ) ) 
 { 
 - if ( Configuration . CATEGORY _ GENERAL . equals ( event . getConfigID ( ) ) ) 
 - { 
 - syncConfig ( false ) ; 
 - } 
 - else if ( " chunkLoader " . equals ( event . getConfigID ( ) ) ) 
 - { 
 - ForgeChunkManager . syncConfigDefaults ( ) ; 
 - ForgeChunkManager . loadConfiguration ( ) ; 
 - } 
 - else if ( VERSION _ CHECK _ CAT . equals ( event . getConfigID ( ) ) ) 
 - { 
 - syncConfig ( false ) ; 
 - } 
 + ForgeChunkManager . syncConfigDefaults ( ) ; 
 + ForgeChunkManager . loadConfiguration ( ) ; 
 } 
 else 
 { 
 - boolean tmp = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , disableStairSlabCulling ) . getBoolean ( ) ; 
 - if ( disableStairSlabCulling ! = tmp ) 
 + boolean tmpStairs = disableStairSlabCulling ; 
 + 
 + syncConfig ( false ) ; 
 + 
 + if ( event . isWorldRunning ( ) & & tmpStairs ! = disableStairSlabCulling ) 
 { 
 - disableStairSlabCulling = tmp ; 
 FMLCommonHandler . instance ( ) . reloadRenderers ( ) ; 
 } 
 + 
 } 
 } 
 } 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index fcee7bc . . 1509ec6 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 50 , 6 + 50 , 8 @ @ forge . configgui . forgeLightPipelineEnabled = Forge Light Pipeline Enabled 
 forge . configgui . java8Reminder = Java 8 Reminder timestamp 
 forge . configgui . disableStairSlabCulling = Disable Stair / Slab culling . 
 forge . configgui . disableStairSlabCulling . tooltip = Enable this if you see through blocks touching stairs / slabs with your resource pack . 
 + forge . configgui . alwaysSetupTerrainOffThread = Force threaded chunk rendering 
 + forge . configgui . alwaysSetupTerrainOffThread . tooltip = Enable forge to queue all chunk updates to the Chunk Update thread . May increase FPS significantly , but may also cause weird rendering lag . Not recommended for computers without a significant number of cores available . 
 
 forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . 
 forge . configgui . modID = Mod ID

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / WorldType . java . patch b / patches / minecraft / net / minecraft / world / WorldType . java . patch 
 index d520342 . . 76d0ee2 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldType . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldType . java . patch 
 @ @ - 60 , 7 + 60 , 7 @ @ 
 + { 
 + this ( getNextID ( ) , name ) ; 
 + } 
 - + 
 + + 
 + / * * 
 * Called when ' Create New World ' button is pressed before starting game 
 * / 
 @ @ - 73 , 7 + 73 , 7 @ @ 
 + * / 
 + public int getSpawnFuzz ( ) 
 + { 
 - + return 20 ; 
 + + return net . minecraftforge . common . ForgeModContainer . defaultSpawnFuzz ; 
 + } 
 + 
 + / * * 
 @ @ - 98 , 7 + 98 , 7 @ @ 
 + { 
 + return this = = field _ 77138 _ c ; 
 + } 
 - + 
 + + 
 + 
 + / * * 
 + * Get the height to render the clouds for this world type 
 @ @ - 111 , 7 + 111 , 7 @ @ 
 + 
 + / * * 
 + * Creates the GenLayerBiome used for generating the world 
 - + * 
 + + * 
 + * @ param worldSeed The world seed 
 + * @ param parentLayer The parent layer to feed into any layer you return 
 + * @ return A GenLayer that will return ints representing the Biomes to be generated , see GenLayerBiome 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index 7ae1949 . . 907dc2e 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 67 , 6 + 67 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 public static boolean shouldSortRecipies = true ; 
 public static boolean disableVersionCheck = false ; 
 public static boolean enableStencilBits = true ; 
 + public static int defaultSpawnFuzz = 20 ; 
 
 private static Configuration config ; 
 
 @ @ - 223 , 6 + 224 , 13 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 enableStencilBits = prop . getBoolean ( true ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 + prop = config . get ( Configuration . CATEGORY _ GENERAL , " defaultSpawnFuzz " , 20 , 
 + " The spawn fuzz when a player respawns in the world , this is controlable by WorldType , this config option is for the default overworld . " , 
 + 1 , Integer . MAX _ VALUE ) ; 
 + prop . setLanguageKey ( " forge . configgui . spawnfuzz " ) . setRequiresWorldRestart ( false ) ; 
 + defaultSpawnFuzz = prop . getInt ( 20 ) ; 
 + propOrder . add ( prop . getName ( ) ) ; 
 + 
 config . setCategoryPropertyOrder ( CATEGORY _ GENERAL , propOrder ) ; 
 
 if ( config . hasChanged ( ) ) 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index 13ea1c4 . . 25759ef 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 41 , 6 + 41 , 7 @ @ forge . configgui . zombieBabyChance = Zombie Baby Chance 
 forge . configgui . zombieBaseSummonChance . tooltip = Base zombie summoning spawn chance . Allows changing the bonus zombie summoning mechanic . 
 forge . configgui . zombieBaseSummonChance = Zombie Summon Chance 
 forge . configgui . stencilbits = Enable GL Stencil Bits 
 + forge . configgui . spawnfuzz = Respawn Fuzz Diameter 
 
 forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . 
 forge . configgui . modID = Mod ID
