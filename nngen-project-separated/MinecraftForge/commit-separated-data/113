BLEU SCORE: 0.041961149062965476

TEST MSG: Use recommended approach to applying version data to mdk .
GENERATED MSG: Update mdk with some tweaks for building

TEST DIFF (one line): diff - - git a / mdk / build . gradle b / mdk / build . gradle <nl> index 5dd003e . . ee99238 100644 <nl> - - - a / mdk / build . gradle <nl> + + + b / mdk / build . gradle <nl> @ @ - 78 , 21 + 78 , 15 @ @ dependencies { <nl> <nl> } <nl> <nl> - processResources { <nl> - / / this will ensure that this task is redone when the versions change . <nl> - inputs . property ' version ' , project . version <nl> - inputs . property ' mcversion ' , ' @ MC _ VERSION @ ' <nl> - <nl> - / / replace stuff in mcmod . info , nothing else <nl> - from ( sourceSets . main . resources . srcDirs ) { <nl> - include ' META _ INF / mods . toml ' <nl> - <nl> - / / replace version and mcversion <nl> - expand ' version ' : project . version , ' mcversion ' : ' @ MC _ VERSION @ ' <nl> - } <nl> - <nl> - / / copy everything else except the mods . toml <nl> - from ( sourceSets . main . resources . srcDirs ) { <nl> - exclude ' META _ INF / mods . toml ' <nl> + / / Example for how to get properties into the manifest for reading by the runtime . . <nl> + jar { <nl> + manifest { <nl> + attributes ( [ " Specification - Title " : " examplemod " , <nl> + " Specification - Vendor " : " examplemodsareus " , <nl> + " Specification - Version " : " 24 . 0 " , / / We are version 1 of the modlauncher specification <nl> + " Implementation - Title " : project . name , <nl> + " Implementation - Version " : " $ { version } " , <nl> + " Implementation - Vendor " : " examplemodsareus " , <nl> + " Implementation - Timestamp " : new Date ( ) . format ( " yyyy - MM - dd ' T ' HH : mm : ssZ " ) ] , ) <nl> } <nl> - } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml <nl> index 90970be . . 3c4cc87 100644 <nl> - - - a / mdk / src / main / resources / META - INF / mods . toml <nl> + + + b / mdk / src / main / resources / META - INF / mods . toml <nl> @ @ - 24 , 7 + 24 , 7 @ @ authors = " Love , Cheese and small house plants " # optional <nl> # The modid of the mod <nl> modId = " examplemod " # mandatory <nl> # The version number of the mod - there ' s a few well known $ { } variables useable here or just hardcode it <nl> - version = " 1 . 0 " # mandatory <nl> + version = " $ { file . jarVersion } " # mandatory <nl> # A display name for the mod <nl> displayName = " Example Mod " # mandatory <nl> # The description text for the mod ( multi line ! ) ( # mandatory ) <nl> @ @ - 35 , 7 + 35 , 6 @ @ Have some lorem ipsum . <nl> <nl> Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magna . Orci varius natoque penatibus et magnis dis parturient montes , nascetur ridiculus mus . Sed sagittis luctus odio eu tempus . Interdum et malesuada fames ac ante ipsum primis in faucibus . Pellentesque volutpat ligula eget lacus auctor sagittis . In hac habitasse platea dictumst . Nunc gravida elit vitae sem vehicula efficitur . Donec mattis ipsum et arcu lobortis , eleifend sagittis sem rutrum . Cras pharetra quam eget posuere fermentum . Sed id tincidunt justo . Lorem ipsum dolor sit amet , consectetur adipiscing elit . <nl> ' ' ' <nl> - <nl> # A dependency - use the . to indicate dependency for a specific modid . Dependencies are optional . <nl> [ [ dependencies . examplemod ] ] # optional <nl> # the modid of the dependency
NEAREST DIFF (one line): diff - - git a / mdk / build . gradle b / mdk / build . gradle <nl> index ce344c1 . . a6e9b95 100644 <nl> - - - a / mdk / build . gradle <nl> + + + b / mdk / build . gradle <nl> @ @ - 63 , 8 + 63 , 9 @ @ minecraft { <nl> <nl> dependencies { <nl> / / Specify the version of Minecraft to use , If this is any group other then ' net . minecraft ' it is assumed <nl> - / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . <nl> - minecraft ' @ FORGE _ GROUP @ : @ FORGE _ NAME @ : @ FORGE _ VERSION @ ' <nl> + / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . <nl> + / / The userdev artifact is a special name and will get all sorts of transformations applied to it . <nl> + minecraft ' @ FORGE _ GROUP @ : userdev : @ FORGE _ VERSION @ ' <nl> <nl> / / you may put jars on which you depend on in . / libs <nl> / / or you may define them like so . . <nl> @ @ - 102 , 7 + 103 , 7 @ @ processResources { <nl> expand ' version ' : project . version , ' mcversion ' : ' @ MC _ VERSION @ ' <nl> } <nl> <nl> - / / copy everything else except the mcmod . info <nl> + / / copy everything else except the mods . toml <nl> from ( sourceSets . main . resources . srcDirs ) { <nl> exclude ' META _ INF / mods . toml ' <nl> } <nl> diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml <nl> index f012d48 . . 90970be 100644 <nl> - - - a / mdk / src / main / resources / META - INF / mods . toml <nl> + + + b / mdk / src / main / resources / META - INF / mods . toml <nl> @ @ - 5 , 8 + 5 , 8 @ @ <nl> # Find more information on toml format here : https : / / github . com / toml - lang / toml <nl> # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml <nl> modLoader = " javafml " # mandatory <nl> - # A version range to match for said mod loader - for regular FML @ Mod it will be the minecraft version ( without the 1 . ) <nl> - loaderVersion = " [ 13 , ) " # mandatory <nl> + # A version range to match for said mod loader - for regular FML @ Mod it will be the forge version <nl> + loaderVersion = " [ 24 , ) " # mandatory ( 24 is current forge version ) <nl> # A URL to query for updates for this mod . See the JSON update specification < here > <nl> updateJSONURL = " http : / / myurl . me / " # optional <nl> # A URL to refer people to when problems occur with this mod <nl> @ @ - 43 , 7 + 43 , 7 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn <nl> # Does this dependency have to exist - if not , ordering below must be specified <nl> mandatory = true # mandatory <nl> # The version range of the dependency <nl> - versionRange = " [ 14 . 23 . 2 . 0 , ) " # mandatory <nl> + versionRange = " [ 24 , ) " # mandatory <nl> # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory <nl> ordering = " NONE " <nl> # Side this dependency is applied on - BOTH , CLIENT or SERVER

TEST DIFF:
diff - - git a / mdk / build . gradle b / mdk / build . gradle 
 index 5dd003e . . ee99238 100644 
 - - - a / mdk / build . gradle 
 + + + b / mdk / build . gradle 
 @ @ - 78 , 21 + 78 , 15 @ @ dependencies { 
 
 } 
 
 - processResources { 
 - / / this will ensure that this task is redone when the versions change . 
 - inputs . property ' version ' , project . version 
 - inputs . property ' mcversion ' , ' @ MC _ VERSION @ ' 
 - 
 - / / replace stuff in mcmod . info , nothing else 
 - from ( sourceSets . main . resources . srcDirs ) { 
 - include ' META _ INF / mods . toml ' 
 - 
 - / / replace version and mcversion 
 - expand ' version ' : project . version , ' mcversion ' : ' @ MC _ VERSION @ ' 
 - } 
 - 
 - / / copy everything else except the mods . toml 
 - from ( sourceSets . main . resources . srcDirs ) { 
 - exclude ' META _ INF / mods . toml ' 
 + / / Example for how to get properties into the manifest for reading by the runtime . . 
 + jar { 
 + manifest { 
 + attributes ( [ " Specification - Title " : " examplemod " , 
 + " Specification - Vendor " : " examplemodsareus " , 
 + " Specification - Version " : " 24 . 0 " , / / We are version 1 of the modlauncher specification 
 + " Implementation - Title " : project . name , 
 + " Implementation - Version " : " $ { version } " , 
 + " Implementation - Vendor " : " examplemodsareus " , 
 + " Implementation - Timestamp " : new Date ( ) . format ( " yyyy - MM - dd ' T ' HH : mm : ssZ " ) ] , ) 
 } 
 - } 
 + } 
 \ No newline at end of file 
 diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml 
 index 90970be . . 3c4cc87 100644 
 - - - a / mdk / src / main / resources / META - INF / mods . toml 
 + + + b / mdk / src / main / resources / META - INF / mods . toml 
 @ @ - 24 , 7 + 24 , 7 @ @ authors = " Love , Cheese and small house plants " # optional 
 # The modid of the mod 
 modId = " examplemod " # mandatory 
 # The version number of the mod - there ' s a few well known $ { } variables useable here or just hardcode it 
 - version = " 1 . 0 " # mandatory 
 + version = " $ { file . jarVersion } " # mandatory 
 # A display name for the mod 
 displayName = " Example Mod " # mandatory 
 # The description text for the mod ( multi line ! ) ( # mandatory ) 
 @ @ - 35 , 7 + 35 , 6 @ @ Have some lorem ipsum . 
 
 Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magna . Orci varius natoque penatibus et magnis dis parturient montes , nascetur ridiculus mus . Sed sagittis luctus odio eu tempus . Interdum et malesuada fames ac ante ipsum primis in faucibus . Pellentesque volutpat ligula eget lacus auctor sagittis . In hac habitasse platea dictumst . Nunc gravida elit vitae sem vehicula efficitur . Donec mattis ipsum et arcu lobortis , eleifend sagittis sem rutrum . Cras pharetra quam eget posuere fermentum . Sed id tincidunt justo . Lorem ipsum dolor sit amet , consectetur adipiscing elit . 
 ' ' ' 
 - 
 # A dependency - use the . to indicate dependency for a specific modid . Dependencies are optional . 
 [ [ dependencies . examplemod ] ] # optional 
 # the modid of the dependency

NEAREST DIFF:
diff - - git a / mdk / build . gradle b / mdk / build . gradle 
 index ce344c1 . . a6e9b95 100644 
 - - - a / mdk / build . gradle 
 + + + b / mdk / build . gradle 
 @ @ - 63 , 8 + 63 , 9 @ @ minecraft { 
 
 dependencies { 
 / / Specify the version of Minecraft to use , If this is any group other then ' net . minecraft ' it is assumed 
 - / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . 
 - minecraft ' @ FORGE _ GROUP @ : @ FORGE _ NAME @ : @ FORGE _ VERSION @ ' 
 + / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . 
 + / / The userdev artifact is a special name and will get all sorts of transformations applied to it . 
 + minecraft ' @ FORGE _ GROUP @ : userdev : @ FORGE _ VERSION @ ' 
 
 / / you may put jars on which you depend on in . / libs 
 / / or you may define them like so . . 
 @ @ - 102 , 7 + 103 , 7 @ @ processResources { 
 expand ' version ' : project . version , ' mcversion ' : ' @ MC _ VERSION @ ' 
 } 
 
 - / / copy everything else except the mcmod . info 
 + / / copy everything else except the mods . toml 
 from ( sourceSets . main . resources . srcDirs ) { 
 exclude ' META _ INF / mods . toml ' 
 } 
 diff - - git a / mdk / src / main / resources / META - INF / mods . toml b / mdk / src / main / resources / META - INF / mods . toml 
 index f012d48 . . 90970be 100644 
 - - - a / mdk / src / main / resources / META - INF / mods . toml 
 + + + b / mdk / src / main / resources / META - INF / mods . toml 
 @ @ - 5 , 8 + 5 , 8 @ @ 
 # Find more information on toml format here : https : / / github . com / toml - lang / toml 
 # The name of the mod loader type to load - for regular FML @ Mod mods it should be javafml 
 modLoader = " javafml " # mandatory 
 - # A version range to match for said mod loader - for regular FML @ Mod it will be the minecraft version ( without the 1 . ) 
 - loaderVersion = " [ 13 , ) " # mandatory 
 + # A version range to match for said mod loader - for regular FML @ Mod it will be the forge version 
 + loaderVersion = " [ 24 , ) " # mandatory ( 24 is current forge version ) 
 # A URL to query for updates for this mod . See the JSON update specification < here > 
 updateJSONURL = " http : / / myurl . me / " # optional 
 # A URL to refer people to when problems occur with this mod 
 @ @ - 43 , 7 + 43 , 7 @ @ Lorem ipsum dolor sit amet , consectetur adipiscing elit . Sed mollis lacinia magn 
 # Does this dependency have to exist - if not , ordering below must be specified 
 mandatory = true # mandatory 
 # The version range of the dependency 
 - versionRange = " [ 14 . 23 . 2 . 0 , ) " # mandatory 
 + versionRange = " [ 24 , ) " # mandatory 
 # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory 
 ordering = " NONE " 
 # Side this dependency is applied on - BOTH , CLIENT or SERVER
