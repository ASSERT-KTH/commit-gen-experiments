BLEU SCORE: 0.018738883683389617

TEST MSG: Fix # 2918 Make dispensers with buckets work with modded fluids
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / init / Bootstrap . java . patch b / patches / minecraft / net / minecraft / init / Bootstrap . java . patch <nl> index d2658df . . 5d17036 100644 <nl> - - - a / patches / minecraft / net / minecraft / init / Bootstrap . java . patch <nl> + + + b / patches / minecraft / net / minecraft / init / Bootstrap . java . patch <nl> @ @ - 1 , 6 + 1 , 16 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / init / Bootstrap . java <nl> + + + . . / src - work / minecraft / net / minecraft / init / Bootstrap . java <nl> - @ @ - 541 , 6 + 541 , 7 @ @ <nl> + @ @ - 264 , 6 + 264 , 9 @ @ <nl> + } ; <nl> + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151129 _ at , ibehaviordispenseitem ) ; <nl> + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151131 _ as , ibehaviordispenseitem ) ; <nl> + + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151117 _ aB , net . minecraftforge . fluids . DispenseFluidContainer . getInstance ( ) ) ; <nl> + + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151133 _ ar , net . minecraftforge . fluids . DispenseFluidContainer . getInstance ( ) ) ; <nl> + + if ( false ) <nl> + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151133 _ ar , new BehaviorDefaultDispenseItem ( ) <nl> + { <nl> + private final BehaviorDefaultDispenseItem field _ 150840 _ b = new BehaviorDefaultDispenseItem ( ) ; <nl> + @ @ - 541 , 6 + 544 , 7 @ @ <nl> StatList . func _ 151178 _ a ( ) ; <nl> Biome . func _ 185358 _ q ( ) ; <nl> func _ 151353 _ a ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / DispenseFluidContainer . java b / src / main / java / net / minecraftforge / fluids / DispenseFluidContainer . java <nl> new file mode 100644 <nl> index 0000000 . . cc3eac0 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / fluids / DispenseFluidContainer . java <nl> @ @ - 0 , 0 + 1 , 107 @ @ <nl> + package net . minecraftforge . fluids ; <nl> + <nl> + import net . minecraft . block . BlockDispenser ; <nl> + import net . minecraft . dispenser . BehaviorDefaultDispenseItem ; <nl> + import net . minecraft . dispenser . IBlockSource ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . tileentity . TileEntityDispenser ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . world . World ; <nl> + import net . minecraftforge . fluids . capability . IFluidHandler ; <nl> + <nl> + / * * <nl> + * Fills or drains a fluid container item using a Dispenser . <nl> + * / <nl> + public class DispenseFluidContainer extends BehaviorDefaultDispenseItem <nl> + { <nl> + private static final DispenseFluidContainer INSTANCE = new DispenseFluidContainer ( ) ; <nl> + <nl> + public static DispenseFluidContainer getInstance ( ) <nl> + { <nl> + return INSTANCE ; <nl> + } <nl> + <nl> + private DispenseFluidContainer ( ) { } <nl> + <nl> + private final BehaviorDefaultDispenseItem dispenseBehavior = new BehaviorDefaultDispenseItem ( ) ; <nl> + <nl> + public ItemStack dispenseStack ( IBlockSource source , ItemStack stack ) <nl> + { <nl> + if ( FluidUtil . getFluidContained ( stack ) ! = null ) <nl> + { <nl> + return dumpContainer ( source , stack ) ; <nl> + } <nl> + else <nl> + { <nl> + return fillContainer ( source , stack ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Picks up fluid in front of a Dispenser and fills a container with it . <nl> + * / <nl> + private ItemStack fillContainer ( IBlockSource source , ItemStack stack ) <nl> + { <nl> + World world = source . getWorld ( ) ; <nl> + EnumFacing dispenserFacing = BlockDispenser . getFacing ( source . getBlockMetadata ( ) ) ; <nl> + BlockPos blockpos = source . getBlockPos ( ) . offset ( dispenserFacing ) ; <nl> + <nl> + ItemStack result = FluidUtil . tryPickUpFluid ( stack , null , world , blockpos , dispenserFacing . getOpposite ( ) ) ; <nl> + if ( result = = null ) <nl> + { <nl> + return super . dispenseStack ( source , stack ) ; <nl> + } <nl> + <nl> + world . setBlockToAir ( blockpos ) ; <nl> + <nl> + if ( - - stack . stackSize = = 0 ) <nl> + { <nl> + stack . deserializeNBT ( result . serializeNBT ( ) ) ; <nl> + } <nl> + else if ( ( ( TileEntityDispenser ) source . getBlockTileEntity ( ) ) . addItemStack ( result ) < 0 ) <nl> + { <nl> + this . dispenseBehavior . dispense ( source , result ) ; <nl> + } <nl> + <nl> + return stack ; <nl> + } <nl> + <nl> + / * * <nl> + * Drains a filled container and places the fluid in front of the Dispenser . <nl> + * / <nl> + private ItemStack dumpContainer ( IBlockSource source , ItemStack stack ) <nl> + { <nl> + ItemStack dispensedStack = stack . copy ( ) ; <nl> + dispensedStack . stackSize = 1 ; <nl> + IFluidHandler fluidHandler = FluidUtil . getFluidHandler ( dispensedStack ) ; <nl> + if ( fluidHandler = = null ) <nl> + { <nl> + return super . dispenseStack ( source , stack ) ; <nl> + } <nl> + <nl> + FluidStack fluidStack = fluidHandler . drain ( Fluid . BUCKET _ VOLUME , false ) ; <nl> + EnumFacing dispenserFacing = BlockDispenser . getFacing ( source . getBlockMetadata ( ) ) ; <nl> + BlockPos blockpos = source . getBlockPos ( ) . offset ( dispenserFacing ) ; <nl> + <nl> + if ( fluidStack ! = null & & fluidStack . amount = = Fluid . BUCKET _ VOLUME & & FluidUtil . tryPlaceFluid ( null , source . getWorld ( ) , fluidStack , blockpos ) ) <nl> + { <nl> + fluidHandler . drain ( Fluid . BUCKET _ VOLUME , true ) ; <nl> + <nl> + if ( - - stack . stackSize = = 0 ) <nl> + { <nl> + stack . deserializeNBT ( dispensedStack . serializeNBT ( ) ) ; <nl> + } <nl> + else if ( ( ( TileEntityDispenser ) source . getBlockTileEntity ( ) ) . addItemStack ( dispensedStack ) < 0 ) <nl> + { <nl> + this . dispenseBehavior . dispense ( source , dispensedStack ) ; <nl> + } <nl> + <nl> + return stack ; <nl> + } <nl> + else <nl> + { <nl> + return this . dispenseBehavior . dispense ( source , stack ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java <nl> index 87bc18c . . b43a861 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> package net . minecraftforge . fluids ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . block . BlockDispenser ; <nl> import net . minecraft . block . material . Material ; <nl> import net . minecraft . creativetab . CreativeTabs ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> @ @ - 55 , 6 + 56 , 8 @ @ public class UniversalBucket extends Item implements IFluidContainerItem <nl> this . setMaxStackSize ( 1 ) ; <nl> <nl> this . setCreativeTab ( CreativeTabs . MISC ) ; <nl> + <nl> + BlockDispenser . DISPENSE _ BEHAVIOR _ REGISTRY . putObject ( this , DispenseFluidContainer . getInstance ( ) ) ; <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT )
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / init / Bootstrap . java . patch b / patches / minecraft / net / minecraft / init / Bootstrap . java . patch 
 index d2658df . . 5d17036 100644 
 - - - a / patches / minecraft / net / minecraft / init / Bootstrap . java . patch 
 + + + b / patches / minecraft / net / minecraft / init / Bootstrap . java . patch 
 @ @ - 1 , 6 + 1 , 16 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / init / Bootstrap . java 
 + + + . . / src - work / minecraft / net / minecraft / init / Bootstrap . java 
 - @ @ - 541 , 6 + 541 , 7 @ @ 
 + @ @ - 264 , 6 + 264 , 9 @ @ 
 + } ; 
 + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151129 _ at , ibehaviordispenseitem ) ; 
 + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151131 _ as , ibehaviordispenseitem ) ; 
 + + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151117 _ aB , net . minecraftforge . fluids . DispenseFluidContainer . getInstance ( ) ) ; 
 + + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151133 _ ar , net . minecraftforge . fluids . DispenseFluidContainer . getInstance ( ) ) ; 
 + + if ( false ) 
 + BlockDispenser . field _ 149943 _ a . func _ 82595 _ a ( Items . field _ 151133 _ ar , new BehaviorDefaultDispenseItem ( ) 
 + { 
 + private final BehaviorDefaultDispenseItem field _ 150840 _ b = new BehaviorDefaultDispenseItem ( ) ; 
 + @ @ - 541 , 6 + 544 , 7 @ @ 
 StatList . func _ 151178 _ a ( ) ; 
 Biome . func _ 185358 _ q ( ) ; 
 func _ 151353 _ a ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / DispenseFluidContainer . java b / src / main / java / net / minecraftforge / fluids / DispenseFluidContainer . java 
 new file mode 100644 
 index 0000000 . . cc3eac0 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / fluids / DispenseFluidContainer . java 
 @ @ - 0 , 0 + 1 , 107 @ @ 
 + package net . minecraftforge . fluids ; 
 + 
 + import net . minecraft . block . BlockDispenser ; 
 + import net . minecraft . dispenser . BehaviorDefaultDispenseItem ; 
 + import net . minecraft . dispenser . IBlockSource ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraft . tileentity . TileEntityDispenser ; 
 + import net . minecraft . util . EnumFacing ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . world . World ; 
 + import net . minecraftforge . fluids . capability . IFluidHandler ; 
 + 
 + / * * 
 + * Fills or drains a fluid container item using a Dispenser . 
 + * / 
 + public class DispenseFluidContainer extends BehaviorDefaultDispenseItem 
 + { 
 + private static final DispenseFluidContainer INSTANCE = new DispenseFluidContainer ( ) ; 
 + 
 + public static DispenseFluidContainer getInstance ( ) 
 + { 
 + return INSTANCE ; 
 + } 
 + 
 + private DispenseFluidContainer ( ) { } 
 + 
 + private final BehaviorDefaultDispenseItem dispenseBehavior = new BehaviorDefaultDispenseItem ( ) ; 
 + 
 + public ItemStack dispenseStack ( IBlockSource source , ItemStack stack ) 
 + { 
 + if ( FluidUtil . getFluidContained ( stack ) ! = null ) 
 + { 
 + return dumpContainer ( source , stack ) ; 
 + } 
 + else 
 + { 
 + return fillContainer ( source , stack ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Picks up fluid in front of a Dispenser and fills a container with it . 
 + * / 
 + private ItemStack fillContainer ( IBlockSource source , ItemStack stack ) 
 + { 
 + World world = source . getWorld ( ) ; 
 + EnumFacing dispenserFacing = BlockDispenser . getFacing ( source . getBlockMetadata ( ) ) ; 
 + BlockPos blockpos = source . getBlockPos ( ) . offset ( dispenserFacing ) ; 
 + 
 + ItemStack result = FluidUtil . tryPickUpFluid ( stack , null , world , blockpos , dispenserFacing . getOpposite ( ) ) ; 
 + if ( result = = null ) 
 + { 
 + return super . dispenseStack ( source , stack ) ; 
 + } 
 + 
 + world . setBlockToAir ( blockpos ) ; 
 + 
 + if ( - - stack . stackSize = = 0 ) 
 + { 
 + stack . deserializeNBT ( result . serializeNBT ( ) ) ; 
 + } 
 + else if ( ( ( TileEntityDispenser ) source . getBlockTileEntity ( ) ) . addItemStack ( result ) < 0 ) 
 + { 
 + this . dispenseBehavior . dispense ( source , result ) ; 
 + } 
 + 
 + return stack ; 
 + } 
 + 
 + / * * 
 + * Drains a filled container and places the fluid in front of the Dispenser . 
 + * / 
 + private ItemStack dumpContainer ( IBlockSource source , ItemStack stack ) 
 + { 
 + ItemStack dispensedStack = stack . copy ( ) ; 
 + dispensedStack . stackSize = 1 ; 
 + IFluidHandler fluidHandler = FluidUtil . getFluidHandler ( dispensedStack ) ; 
 + if ( fluidHandler = = null ) 
 + { 
 + return super . dispenseStack ( source , stack ) ; 
 + } 
 + 
 + FluidStack fluidStack = fluidHandler . drain ( Fluid . BUCKET _ VOLUME , false ) ; 
 + EnumFacing dispenserFacing = BlockDispenser . getFacing ( source . getBlockMetadata ( ) ) ; 
 + BlockPos blockpos = source . getBlockPos ( ) . offset ( dispenserFacing ) ; 
 + 
 + if ( fluidStack ! = null & & fluidStack . amount = = Fluid . BUCKET _ VOLUME & & FluidUtil . tryPlaceFluid ( null , source . getWorld ( ) , fluidStack , blockpos ) ) 
 + { 
 + fluidHandler . drain ( Fluid . BUCKET _ VOLUME , true ) ; 
 + 
 + if ( - - stack . stackSize = = 0 ) 
 + { 
 + stack . deserializeNBT ( dispensedStack . serializeNBT ( ) ) ; 
 + } 
 + else if ( ( ( TileEntityDispenser ) source . getBlockTileEntity ( ) ) . addItemStack ( dispensedStack ) < 0 ) 
 + { 
 + this . dispenseBehavior . dispense ( source , dispensedStack ) ; 
 + } 
 + 
 + return stack ; 
 + } 
 + else 
 + { 
 + return this . dispenseBehavior . dispense ( source , stack ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java 
 index 87bc18c . . b43a861 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java 
 + + + b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package net . minecraftforge . fluids ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . block . BlockDispenser ; 
 import net . minecraft . block . material . Material ; 
 import net . minecraft . creativetab . CreativeTabs ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 @ @ - 55 , 6 + 56 , 8 @ @ public class UniversalBucket extends Item implements IFluidContainerItem 
 this . setMaxStackSize ( 1 ) ; 
 
 this . setCreativeTab ( CreativeTabs . MISC ) ; 
 + 
 + BlockDispenser . DISPENSE _ BEHAVIOR _ REGISTRY . putObject ( this , DispenseFluidContainer . getInstance ( ) ) ; 
 } 
 
 @ SideOnly ( Side . CLIENT )

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

