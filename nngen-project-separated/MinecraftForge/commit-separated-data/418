BLEU SCORE: 0.017820934647025707

TEST MSG: Fix Biome unit test
GENERATED MSG: Try and fix registry NPE when substitution is active .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 4515467 . . 80b9376 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 127 , 6 + 127 , 7 @ @ import net . minecraftforge . event . world . NoteBlockEvent ; <nl> import net . minecraftforge . fluids . IFluidBlock ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> + import net . minecraftforge . fml . common . LoaderState ; <nl> import net . minecraftforge . fml . common . ModContainer ; <nl> import net . minecraftforge . fml . common . eventhandler . Event ; <nl> import net . minecraftforge . fml . relauncher . ReflectionHelper ; <nl> @ @ - 1248 , 16 + 1249 , 22 @ @ public class ForgeHooks <nl> public static boolean loadAdvancements ( Map < ResourceLocation , Advancement . Builder > map ) <nl> { <nl> boolean errored = false ; <nl> - Loader . instance ( ) . setActiveModContainer ( null ) ; <nl> + setActiveModContainer ( null ) ; <nl> / / Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadFactories ( mod ) ) ; <nl> for ( ModContainer mod : Loader . instance ( ) . getActiveModList ( ) ) <nl> { <nl> errored | = ! loadAdvancements ( map , mod ) ; <nl> } <nl> - Loader . instance ( ) . setActiveModContainer ( null ) ; <nl> + setActiveModContainer ( null ) ; <nl> return errored ; <nl> } <nl> <nl> + private static void setActiveModContainer ( ModContainer mod ) <nl> + { <nl> + if ( Loader . instance ( ) . getLoaderState ( ) ! = LoaderState . NOINIT ) / / Unit Tests . . <nl> + Loader . instance ( ) . setActiveModContainer ( mod ) ; <nl> + } <nl> + <nl> private static boolean loadAdvancements ( Map < ResourceLocation , Advancement . Builder > map , ModContainer mod ) <nl> { <nl> return CraftingHelper . findFiles ( mod , " assets / " + mod . getModId ( ) + " / advancements " , null , <nl> diff - - git a / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java b / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java <nl> index 9f6d706 . . 1c579ac 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java <nl> @ @ - 9 , 6 + 9 , 7 @ @ import net . minecraft . init . Biomes ; <nl> import net . minecraft . init . Bootstrap ; <nl> import net . minecraft . world . biome . Biome ; <nl> import net . minecraftforge . common . util . EnumHelper ; <nl> + import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . registry . EntityRegistry ; <nl> import net . minecraftforge . fml . common . registry . ForgeTestRunner ; <nl> import org . junit . BeforeClass ; <nl> @ @ - 26 , 6 + 27 , 7 @ @ public class BiomeSpawnableListTest <nl> @ BeforeClass <nl> public static void setUp ( ) throws Exception <nl> { <nl> + Loader . instance ( ) ; <nl> Bootstrap . register ( ) ; <nl> creatureTypeHorse = EnumHelper . addCreatureType ( " biomespawnablelisttest : horse " , AbstractHorse . class , 20 , Material . AIR , true , true ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 0cdd305 . . 607ac29 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 718 , 7 + 718 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> blockedIds . add ( id ) ; <nl> } <nl> <nl> - public void noitifyCallbacks ( ) <nl> + public void notifyCallbacks ( ) <nl> { <nl> if ( addCallback = = null ) <nl> return ; <nl> @ @ - 728 , 4 + 728 , 15 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> addCallback . onAdd ( i , this . underlyingIntegerMap . get ( i ) ) ; <nl> } <nl> } <nl> + <nl> + @ Override <nl> + public ResourceLocation getNameForObject ( I p _ 177774 _ 1 _ ) <nl> + { <nl> + ResourceLocation rl = super . getNameForObject ( p _ 177774 _ 1 _ ) ; <nl> + if ( rl = = null ) <nl> + { <nl> + rl = activeSubstitutions . inverse ( ) . get ( p _ 177774 _ 1 _ ) ; <nl> + } <nl> + return rl ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> index 723bb55 . . 6071989 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ import org . apache . logging . log4j . Level ; <nl> <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockAir ; <nl> - import net . minecraft . init . Blocks ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . potion . Potion ; <nl> import net . minecraft . util . ResourceLocation ; <nl> @ @ - 33 , 7 + 32 , 6 @ @ import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . StartupQuery ; <nl> import net . minecraftforge . fml . common . ZipperUtil ; <nl> - import net . minecraftforge . fml . common . EnhancedRuntimeException . WrappedPrintStream ; <nl> import net . minecraftforge . fml . common . event . FMLMissingMappingsEvent ; <nl> <nl> / * * <nl> @ @ - 257 , 7 + 255 , 7 @ @ public class PersistentRegistryManager <nl> / / This happens when connecting to a server that doesn ' t have this registry . <nl> / / Such as a 1 . 8 . 0 Forge server with 1 . 8 . 8 + Forge . <nl> / / We must however , re - fire the callbacks as some internal data may be corrupted { potions } <nl> - toRegistry . noitifyCallbacks ( ) ; <nl> + toRegistry . notifyCallbacks ( ) ; <nl> } <nl> else <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 4515467 . . 80b9376 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 127 , 6 + 127 , 7 @ @ import net . minecraftforge . event . world . NoteBlockEvent ; 
 import net . minecraftforge . fluids . IFluidBlock ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 + import net . minecraftforge . fml . common . LoaderState ; 
 import net . minecraftforge . fml . common . ModContainer ; 
 import net . minecraftforge . fml . common . eventhandler . Event ; 
 import net . minecraftforge . fml . relauncher . ReflectionHelper ; 
 @ @ - 1248 , 16 + 1249 , 22 @ @ public class ForgeHooks 
 public static boolean loadAdvancements ( Map < ResourceLocation , Advancement . Builder > map ) 
 { 
 boolean errored = false ; 
 - Loader . instance ( ) . setActiveModContainer ( null ) ; 
 + setActiveModContainer ( null ) ; 
 / / Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadFactories ( mod ) ) ; 
 for ( ModContainer mod : Loader . instance ( ) . getActiveModList ( ) ) 
 { 
 errored | = ! loadAdvancements ( map , mod ) ; 
 } 
 - Loader . instance ( ) . setActiveModContainer ( null ) ; 
 + setActiveModContainer ( null ) ; 
 return errored ; 
 } 
 
 + private static void setActiveModContainer ( ModContainer mod ) 
 + { 
 + if ( Loader . instance ( ) . getLoaderState ( ) ! = LoaderState . NOINIT ) / / Unit Tests . . 
 + Loader . instance ( ) . setActiveModContainer ( mod ) ; 
 + } 
 + 
 private static boolean loadAdvancements ( Map < ResourceLocation , Advancement . Builder > map , ModContainer mod ) 
 { 
 return CraftingHelper . findFiles ( mod , " assets / " + mod . getModId ( ) + " / advancements " , null , 
 diff - - git a / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java b / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java 
 index 9f6d706 . . 1c579ac 100644 
 - - - a / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java 
 + + + b / src / test / java / net / minecraftforge / test / BiomeSpawnableListTest . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import net . minecraft . init . Biomes ; 
 import net . minecraft . init . Bootstrap ; 
 import net . minecraft . world . biome . Biome ; 
 import net . minecraftforge . common . util . EnumHelper ; 
 + import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . registry . EntityRegistry ; 
 import net . minecraftforge . fml . common . registry . ForgeTestRunner ; 
 import org . junit . BeforeClass ; 
 @ @ - 26 , 6 + 27 , 7 @ @ public class BiomeSpawnableListTest 
 @ BeforeClass 
 public static void setUp ( ) throws Exception 
 { 
 + Loader . instance ( ) ; 
 Bootstrap . register ( ) ; 
 creatureTypeHorse = EnumHelper . addCreatureType ( " biomespawnablelisttest : horse " , AbstractHorse . class , 20 , Material . AIR , true , true ) ; 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 0cdd305 . . 607ac29 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 718 , 7 + 718 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 blockedIds . add ( id ) ; 
 } 
 
 - public void noitifyCallbacks ( ) 
 + public void notifyCallbacks ( ) 
 { 
 if ( addCallback = = null ) 
 return ; 
 @ @ - 728 , 4 + 728 , 15 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 addCallback . onAdd ( i , this . underlyingIntegerMap . get ( i ) ) ; 
 } 
 } 
 + 
 + @ Override 
 + public ResourceLocation getNameForObject ( I p _ 177774 _ 1 _ ) 
 + { 
 + ResourceLocation rl = super . getNameForObject ( p _ 177774 _ 1 _ ) ; 
 + if ( rl = = null ) 
 + { 
 + rl = activeSubstitutions . inverse ( ) . get ( p _ 177774 _ 1 _ ) ; 
 + } 
 + return rl ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 index 723bb55 . . 6071989 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 @ @ - 23 , 7 + 23 , 6 @ @ import org . apache . logging . log4j . Level ; 
 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockAir ; 
 - import net . minecraft . init . Blocks ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . potion . Potion ; 
 import net . minecraft . util . ResourceLocation ; 
 @ @ - 33 , 7 + 32 , 6 @ @ import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . StartupQuery ; 
 import net . minecraftforge . fml . common . ZipperUtil ; 
 - import net . minecraftforge . fml . common . EnhancedRuntimeException . WrappedPrintStream ; 
 import net . minecraftforge . fml . common . event . FMLMissingMappingsEvent ; 
 
 / * * 
 @ @ - 257 , 7 + 255 , 7 @ @ public class PersistentRegistryManager 
 / / This happens when connecting to a server that doesn ' t have this registry . 
 / / Such as a 1 . 8 . 0 Forge server with 1 . 8 . 8 + Forge . 
 / / We must however , re - fire the callbacks as some internal data may be corrupted { potions } 
 - toRegistry . noitifyCallbacks ( ) ; 
 + toRegistry . notifyCallbacks ( ) ; 
 } 
 else 
 {
