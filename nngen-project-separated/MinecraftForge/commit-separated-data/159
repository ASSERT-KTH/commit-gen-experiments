BLEU SCORE: 0.016466642419110007

TEST MSG: Add a a test publish stage to jenkins file for PRs . Should allow for full publish cycle test without actually publishing .
GENERATED MSG: Move cache again , documentation is vague .

TEST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index 886cfaf . . ce3cb48 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 56 , 6 + 56 , 21 @ @ pipeline { <nl> sh ' curl - - user $ { FORGE _ MAVEN } http : / / files . minecraftforge . net / maven / manage / promote / latest / net . minecraftforge . test . forge / $ { MYVERSION } ' <nl> } <nl> } <nl> + stage ( ' test _ publish _ pr ' ) { / / Publish to local repo to test full process , but don ' t include credentials so it can ' t sign / publish to maven <nl> + when { <nl> + changeRequest ( ) <nl> + } <nl> + environment { <nl> + CROWDIN = credentials ( ' forge - crowdin ' ) <nl> + } <nl> + steps { <nl> + cache ( maxCacheSize : 250 / * MB * / , caches : [ <nl> + [ $ class : ' ArbitraryFileCache ' , excludes : ' ' , includes : ' output . txt ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap / ' ] / / Cache the rangemap to help speed up builds <nl> + ] ) { <nl> + sh ' . / gradlew $ { GRADLE _ ARGS } : forge : publish - PcrowdinKey = $ { CROWDIN } ' <nl> + } <nl> + } <nl> + } <nl> } <nl> post { <nl> always {
NEAREST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index fe4e64d . . 0ddd577 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 18 , 44 + 18 , 44 @ @ pipeline { <nl> } <nl> } <nl> stage ( ' buildandtest ' ) { <nl> - cache ( maxCacheSize : 250 / * MB * / , caches : [ <nl> - [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds <nl> - ] ) { <nl> - steps { <nl> + steps { <nl> + cache ( maxCacheSize : 250 / * MB * / , caches : [ <nl> + [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds <nl> + ] ) { <nl> sh ' . / gradlew $ { GRADLE _ ARGS } - - refresh - dependencies - - continue build test ' <nl> - script { <nl> - env . MYVERSION = sh ( returnStdout : true , script : ' . / gradlew properties - q | grep " version : " | awk \ ' { print $ 2 } \ ' ' ) . trim ( ) <nl> - } <nl> } <nl> - post { <nl> - success { <nl> - writeChangelog ( currentBuild , ' build / changelog . txt ' ) <nl> - archiveArtifacts artifacts : ' build / changelog . txt ' , fingerprint : false <nl> - } <nl> + script { <nl> + env . MYVERSION = sh ( returnStdout : true , script : ' . / gradlew properties - q | grep " version : " | awk \ ' { print $ 2 } \ ' ' ) . trim ( ) <nl> + } <nl> + } <nl> + post { <nl> + success { <nl> + writeChangelog ( currentBuild , ' build / changelog . txt ' ) <nl> + archiveArtifacts artifacts : ' build / changelog . txt ' , fingerprint : false <nl> } <nl> } <nl> } <nl> stage ( ' publish ' ) { <nl> - cache ( maxCacheSize : 250 / * MB * / , caches : [ <nl> - [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds <nl> - ] ) { <nl> - when { <nl> - not { <nl> - changeRequest ( ) <nl> - } <nl> - } <nl> - environment { <nl> - FORGE _ MAVEN = credentials ( ' forge - maven - forge - user ' ) <nl> - CROWDIN = credentials ( ' forge - crowdin ' ) <nl> - KEYSTORE = credentials ( ' forge - jenkins - keystore - old ' ) <nl> - KEYSTORE _ KEYPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) <nl> - KEYSTORE _ STOREPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) <nl> + when { <nl> + not { <nl> + changeRequest ( ) <nl> } <nl> - steps { <nl> + } <nl> + environment { <nl> + FORGE _ MAVEN = credentials ( ' forge - maven - forge - user ' ) <nl> + CROWDIN = credentials ( ' forge - crowdin ' ) <nl> + KEYSTORE = credentials ( ' forge - jenkins - keystore - old ' ) <nl> + KEYSTORE _ KEYPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) <nl> + KEYSTORE _ STOREPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) <nl> + } <nl> + steps { <nl> + cache ( maxCacheSize : 250 / * MB * / , caches : [ <nl> + [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds <nl> + ] ) { <nl> sh ' . / gradlew $ { GRADLE _ ARGS } forge : publish - PforgeMavenUser = $ { FORGE _ MAVEN _ USR } - PforgeMavenPassword = $ { FORGE _ MAVEN _ PSW } - PkeystoreKeyPass = $ { KEYSTORE _ KEYPASS } - PkeystoreStorePass = $ { KEYSTORE _ STOREPASS } - Pkeystore = $ { KEYSTORE } - PcrowdinKey = $ { CROWDIN } ' <nl> - / / We ' re testing so use the test group <nl> - sh ' curl - - user $ { FORGE _ MAVEN } http : / / files . minecraftforge . net / maven / manage / promote / latest / net . minecraftforge . test . forge / $ { MYVERSION } ' <nl> } <nl> + / / We ' re testing so use the test group <nl> + sh ' curl - - user $ { FORGE _ MAVEN } http : / / files . minecraftforge . net / maven / manage / promote / latest / net . minecraftforge . test . forge / $ { MYVERSION } ' <nl> } <nl> } <nl> }

TEST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index 886cfaf . . ce3cb48 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 56 , 6 + 56 , 21 @ @ pipeline { 
 sh ' curl - - user $ { FORGE _ MAVEN } http : / / files . minecraftforge . net / maven / manage / promote / latest / net . minecraftforge . test . forge / $ { MYVERSION } ' 
 } 
 } 
 + stage ( ' test _ publish _ pr ' ) { / / Publish to local repo to test full process , but don ' t include credentials so it can ' t sign / publish to maven 
 + when { 
 + changeRequest ( ) 
 + } 
 + environment { 
 + CROWDIN = credentials ( ' forge - crowdin ' ) 
 + } 
 + steps { 
 + cache ( maxCacheSize : 250 / * MB * / , caches : [ 
 + [ $ class : ' ArbitraryFileCache ' , excludes : ' ' , includes : ' output . txt ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap / ' ] / / Cache the rangemap to help speed up builds 
 + ] ) { 
 + sh ' . / gradlew $ { GRADLE _ ARGS } : forge : publish - PcrowdinKey = $ { CROWDIN } ' 
 + } 
 + } 
 + } 
 } 
 post { 
 always {

NEAREST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index fe4e64d . . 0ddd577 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 18 , 44 + 18 , 44 @ @ pipeline { 
 } 
 } 
 stage ( ' buildandtest ' ) { 
 - cache ( maxCacheSize : 250 / * MB * / , caches : [ 
 - [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds 
 - ] ) { 
 - steps { 
 + steps { 
 + cache ( maxCacheSize : 250 / * MB * / , caches : [ 
 + [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds 
 + ] ) { 
 sh ' . / gradlew $ { GRADLE _ ARGS } - - refresh - dependencies - - continue build test ' 
 - script { 
 - env . MYVERSION = sh ( returnStdout : true , script : ' . / gradlew properties - q | grep " version : " | awk \ ' { print $ 2 } \ ' ' ) . trim ( ) 
 - } 
 } 
 - post { 
 - success { 
 - writeChangelog ( currentBuild , ' build / changelog . txt ' ) 
 - archiveArtifacts artifacts : ' build / changelog . txt ' , fingerprint : false 
 - } 
 + script { 
 + env . MYVERSION = sh ( returnStdout : true , script : ' . / gradlew properties - q | grep " version : " | awk \ ' { print $ 2 } \ ' ' ) . trim ( ) 
 + } 
 + } 
 + post { 
 + success { 
 + writeChangelog ( currentBuild , ' build / changelog . txt ' ) 
 + archiveArtifacts artifacts : ' build / changelog . txt ' , fingerprint : false 
 } 
 } 
 } 
 stage ( ' publish ' ) { 
 - cache ( maxCacheSize : 250 / * MB * / , caches : [ 
 - [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds 
 - ] ) { 
 - when { 
 - not { 
 - changeRequest ( ) 
 - } 
 - } 
 - environment { 
 - FORGE _ MAVEN = credentials ( ' forge - maven - forge - user ' ) 
 - CROWDIN = credentials ( ' forge - crowdin ' ) 
 - KEYSTORE = credentials ( ' forge - jenkins - keystore - old ' ) 
 - KEYSTORE _ KEYPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) 
 - KEYSTORE _ STOREPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) 
 + when { 
 + not { 
 + changeRequest ( ) 
 } 
 - steps { 
 + } 
 + environment { 
 + FORGE _ MAVEN = credentials ( ' forge - maven - forge - user ' ) 
 + CROWDIN = credentials ( ' forge - crowdin ' ) 
 + KEYSTORE = credentials ( ' forge - jenkins - keystore - old ' ) 
 + KEYSTORE _ KEYPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) 
 + KEYSTORE _ STOREPASS = credentials ( ' forge - jenkins - keystore - old - keypass ' ) 
 + } 
 + steps { 
 + cache ( maxCacheSize : 250 / * MB * / , caches : [ 
 + [ $ class : ' ArbitraryFileCache ' , excludes : ' log . txt ' , includes : ' * * / * ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap ' ] / / Cache the rangemap to help speed up builds 
 + ] ) { 
 sh ' . / gradlew $ { GRADLE _ ARGS } forge : publish - PforgeMavenUser = $ { FORGE _ MAVEN _ USR } - PforgeMavenPassword = $ { FORGE _ MAVEN _ PSW } - PkeystoreKeyPass = $ { KEYSTORE _ KEYPASS } - PkeystoreStorePass = $ { KEYSTORE _ STOREPASS } - Pkeystore = $ { KEYSTORE } - PcrowdinKey = $ { CROWDIN } ' 
 - / / We ' re testing so use the test group 
 - sh ' curl - - user $ { FORGE _ MAVEN } http : / / files . minecraftforge . net / maven / manage / promote / latest / net . minecraftforge . test . forge / $ { MYVERSION } ' 
 } 
 + / / We ' re testing so use the test group 
 + sh ' curl - - user $ { FORGE _ MAVEN } http : / / files . minecraftforge . net / maven / manage / promote / latest / net . minecraftforge . test . forge / $ { MYVERSION } ' 
 } 
 } 
 }
