BLEU SCORE: 0.0188543596416306

TEST MSG: TileEntity and TileEntityHopper rejects fixed , GuiOverlayDebug patch fixed .
GENERATED MSG: Add the ability to register chat commands that only execute on the client . Works with autocomplete .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch <nl> index 6017c72 . . c2b87f7 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch <nl> @ @ - 1 , 12 + 1 , 12 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java <nl> - @ @ - 107 , 6 + 107 , 9 @ @ <nl> - { <nl> - BlockPos blockpos = new BlockPos ( this . mc . getRenderViewEntity ( ) . posX , this . mc . getRenderViewEntity ( ) . getEntityBoundingBox ( ) . minY , this . mc . getRenderViewEntity ( ) . posZ ) ; <nl> + @ @ - 177 , 6 + 177 , 9 @ @ <nl> + long l = j - k ; <nl> + List < String > list = Lists . newArrayList ( new String [ ] { String . format ( " Java : % s % dbit " , new Object [ ] { System . getProperty ( " java . version " ) , Integer . valueOf ( this . mc . isJava64bit ( ) ? 64 : 32 ) } ) , String . format ( " Mem : % 2d % % % 03d / % 03dMB " , new Object [ ] { Long . valueOf ( l * 100L / i ) , Long . valueOf ( bytesToMb ( l ) ) , Long . valueOf ( bytesToMb ( i ) ) } ) , String . format ( " Allocated : % 2d % % % 03dMB " , new Object [ ] { Long . valueOf ( j * 100L / i ) , Long . valueOf ( bytesToMb ( j ) ) } ) , " " , String . format ( " CPU : % s " , new Object [ ] { OpenGlHelper . func _ 183029 _ j ( ) } ) , " " , String . format ( " Display : % dx % d ( % s ) " , new Object [ ] { Integer . valueOf ( Display . getWidth ( ) ) , Integer . valueOf ( Display . getHeight ( ) ) , GL11 . glGetString ( GL11 . GL _ VENDOR ) } ) , GL11 . glGetString ( GL11 . GL _ RENDERER ) , GL11 . glGetString ( GL11 . GL _ VERSION ) } ) ; <nl> <nl> - + arraylist . add ( " " ) ; <nl> - + arraylist . addAll ( net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getBrandings ( false ) ) ; <nl> + + list . add ( " " ) ; <nl> + + list . addAll ( net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getBrandings ( false ) ) ; <nl> + <nl> if ( this . isReducedDebug ( ) ) <nl> { <nl> - return Lists . newArrayList ( new String [ ] { " Minecraft 1 . 8 . 8 ( " + this . mc . getVersion ( ) + " / " + ClientBrandRetriever . getClientModName ( ) + " ) " , this . mc . debug , this . mc . renderGlobal . getDebugInfoRenders ( ) , this . mc . renderGlobal . getDebugInfoEntities ( ) , " P : " + this . mc . effectRenderer . getStatistics ( ) + " . T : " + this . mc . theWorld . getDebugLoadedEntities ( ) , this . mc . theWorld . getProviderName ( ) , " " , String . format ( " Chunk - relative : % d % d % d " , new Object [ ] { Integer . valueOf ( blockpos . getX ( ) & 15 ) , Integer . valueOf ( blockpos . getY ( ) & 15 ) , Integer . valueOf ( blockpos . getZ ( ) & 15 ) } ) } ) ; <nl> + return list ; <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch <nl> index 9019423 . . 6eb02f8 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch <nl> @ @ - 16 , 7 + 16 , 19 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 103 , 7 + 105 , 17 @ @ <nl> + @ @ - 83 , 9 + 85 , 10 @ @ <nl> + { <nl> + TileEntity tileentity = null ; <nl> + <nl> + + Class < ? extends TileEntity > oclass = null ; <nl> + try <nl> + { <nl> + - Class < ? extends TileEntity > oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; <nl> + + oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; <nl> + <nl> + if ( oclass ! = null ) <nl> + { <nl> + @ @ - 103 , 7 + 106 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 34 , 7 + 46 , 7 @ @ <nl> } <nl> <nl> return tileentity ; <nl> - @ @ - 135 , 7 + 147 , 6 @ @ <nl> + @ @ - 135 , 7 + 148 , 6 @ @ <nl> } <nl> } <nl> <nl> @ @ - 42 , 7 + 54 , 7 @ @ <nl> public double getDistanceSq ( double x , double y , double z ) <nl> { <nl> double d0 = ( double ) this . pos . getX ( ) + 0 . 5D - x ; <nl> - @ @ - 283 , 4 + 294 , 135 @ @ <nl> + @ @ - 283 , 4 + 295 , 135 @ @ <nl> addMapping ( TileEntityFlowerPot . class , " FlowerPot " ) ; <nl> addMapping ( TileEntityBanner . class , " Banner " ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c8e28eb <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch <nl> @ @ - 0 , 0 + 1 , 35 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityHopper . java <nl> + + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityHopper . java <nl> + @ @ - 516 , 17 + 516 , 31 @ @ <nl> + <nl> + if ( itemstack = = null ) <nl> + { <nl> + + / / Forge : BUGFIX : Again , make things respect max stack sizes . <nl> + + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; <nl> + + if ( max > = p _ 174916 _ 1 _ . stackSize ) <nl> + + { <nl> + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ ) ; <nl> + p _ 174916 _ 1 _ = null ; <nl> + + } <nl> + + else <nl> + + { <nl> + + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ . splitStack ( max ) ) ; <nl> + + } <nl> + flag = true ; <nl> + } <nl> + else if ( canCombine ( itemstack , p _ 174916 _ 1 _ ) ) <nl> + { <nl> + - int i = p _ 174916 _ 1 _ . getMaxStackSize ( ) - itemstack . stackSize ; <nl> + + / / Forge : BUGFIX : Again , make things respect max stack sizes . <nl> + + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; <nl> + + if ( max > itemstack . stackSize ) <nl> + + { <nl> + + int i = max - itemstack . stackSize ; <nl> + int j = Math . min ( p _ 174916 _ 1 _ . stackSize , i ) ; <nl> + p _ 174916 _ 1 _ . stackSize - = j ; <nl> + itemstack . stackSize + = j ; <nl> + flag = j > 0 ; <nl> + + } <nl> + } <nl> + <nl> + if ( flag ) <nl> diff - - git a / rejects / minecraft / net / minecraft / tileentity / TileEntity . java . patch . rej b / rejects / minecraft / net / minecraft / tileentity / TileEntity . java . patch . rej <nl> deleted file mode 100644 <nl> index 7a2b4ec . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / tileentity / TileEntity . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 13 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 3 <nl> - { <nl> - TileEntity tileentity = null ; <nl> - <nl> - + Class oclass = null ; <nl> - try <nl> - { <nl> - - Class oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; <nl> - + oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; <nl> - <nl> - if ( oclass ! = null ) <nl> - { <nl> - + + + + END PATCH <nl> diff - - git a / rejects / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch . rej b / rejects / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch . rej <nl> deleted file mode 100644 <nl> index 5e7eb1c . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 39 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - <nl> - if ( itemstack1 = = null ) <nl> - { <nl> - - p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ ) ; <nl> - - p _ 174916 _ 1 _ = null ; <nl> - + / / Forge : BUGFIX : Again , make things respect max stack sizes . <nl> - + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; <nl> - + if ( max > = p _ 174916 _ 1 _ . stackSize ) <nl> - + { <nl> - + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ ) ; <nl> - + p _ 174916 _ 1 _ = null ; <nl> - + } <nl> - + else <nl> - + { <nl> - + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ . splitStack ( max ) ) ; <nl> - + } <nl> - flag = true ; <nl> - } <nl> - else if ( canCombine ( itemstack1 , p _ 174916 _ 1 _ ) ) <nl> - { <nl> - - int j = p _ 174916 _ 1 _ . getMaxStackSize ( ) - itemstack1 . stackSize ; <nl> - - int k = Math . min ( p _ 174916 _ 1 _ . stackSize , j ) ; <nl> - - p _ 174916 _ 1 _ . stackSize - = k ; <nl> - - itemstack1 . stackSize + = k ; <nl> - - flag = k > 0 ; <nl> - + / / Forge : BUGFIX : Again , make things respect max stack sizes . <nl> - + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; <nl> - + if ( max > itemstack1 . stackSize ) <nl> - + { <nl> - + int size = Math . min ( p _ 174916 _ 1 _ . stackSize , max - itemstack1 . stackSize ) ; <nl> - + p _ 174916 _ 1 _ . stackSize - = size ; <nl> - + itemstack1 . stackSize + = size ; <nl> - + flag = size > 0 ; <nl> - + } <nl> - } <nl> - <nl> - if ( flag ) <nl> - + + + + END PATCH
NEAREST DIFF (one line): diff - - git a / client / net / minecraftforge / client / ClientCommandHandler . java b / client / net / minecraftforge / client / ClientCommandHandler . java <nl> new file mode 100644 <nl> index 0000000 . . b929e72 <nl> - - - / dev / null <nl> + + + b / client / net / minecraftforge / client / ClientCommandHandler . java <nl> @ @ - 0 , 0 + 1 , 140 @ @ <nl> + package net . minecraftforge . client ; <nl> + <nl> + import java . util . List ; <nl> + <nl> + import net . minecraft . client . Minecraft ; <nl> + import net . minecraft . client . gui . GuiChat ; <nl> + import net . minecraft . command . CommandException ; <nl> + import net . minecraft . command . CommandHandler ; <nl> + import net . minecraft . command . ICommand ; <nl> + import net . minecraft . command . ICommandSender ; <nl> + import net . minecraft . command . WrongUsageException ; <nl> + import net . minecraft . util . ChatMessageComponent ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . CommandEvent ; <nl> + import cpw . mods . fml . client . FMLClientHandler ; <nl> + import static net . minecraft . util . EnumChatFormatting . * ; <nl> + <nl> + / * * <nl> + * The class that handles client - side chat commands . You should register any <nl> + * commands that you want handled on the client with this command handler . <nl> + * <nl> + * If there is a command with the same name registered both on the server and <nl> + * client , the client takes precedence ! <nl> + * <nl> + * / <nl> + public class ClientCommandHandler extends CommandHandler <nl> + { <nl> + public static final ClientCommandHandler instance = new ClientCommandHandler ( ) ; <nl> + <nl> + public String [ ] latestAutoComplete = null ; <nl> + <nl> + / * * <nl> + * @ return 1 if successfully executed , 0 if wrong usage , it doesn ' t exist or <nl> + * it was canceled . <nl> + * / <nl> + @ Override <nl> + public int executeCommand ( ICommandSender sender , String message ) <nl> + { <nl> + message = message . trim ( ) ; <nl> + <nl> + if ( message . startsWith ( " / " ) ) <nl> + { <nl> + message = message . substring ( 1 ) ; <nl> + } <nl> + <nl> + String [ ] args = message . split ( " " ) ; <nl> + String commandName = args [ 0 ] ; <nl> + System . arraycopy ( args , 1 , args , 0 , args . length - 1 ) ; <nl> + ICommand icommand = ( ICommand ) getCommands ( ) . get ( commandName ) ; <nl> + <nl> + try <nl> + { <nl> + if ( icommand = = null ) <nl> + { <nl> + return 0 ; <nl> + } <nl> + <nl> + if ( icommand . canCommandSenderUseCommand ( sender ) ) <nl> + { <nl> + CommandEvent event = new CommandEvent ( icommand , sender , args ) ; <nl> + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> + { <nl> + if ( event . exception ! = null ) <nl> + { <nl> + throw event . exception ; <nl> + } <nl> + return 0 ; <nl> + } <nl> + <nl> + icommand . processCommand ( sender , args ) ; <nl> + return 1 ; <nl> + } <nl> + else <nl> + { <nl> + sender . sendChatToPlayer ( format ( " commands . generic . permission " ) . setColor ( RED ) ) ; <nl> + } <nl> + } <nl> + catch ( WrongUsageException wue ) <nl> + { <nl> + sender . sendChatToPlayer ( format ( " commands . generic . usage " , format ( wue . getMessage ( ) , wue . getErrorOjbects ( ) ) ) . setColor ( RED ) ) ; <nl> + } <nl> + catch ( CommandException ce ) <nl> + { <nl> + sender . sendChatToPlayer ( format ( ce . getMessage ( ) , ce . getErrorOjbects ( ) ) . setColor ( RED ) ) ; <nl> + } <nl> + catch ( Throwable t ) <nl> + { <nl> + sender . sendChatToPlayer ( format ( " commands . generic . exception " ) . setColor ( RED ) ) ; <nl> + t . printStackTrace ( ) ; <nl> + } <nl> + <nl> + return 0 ; <nl> + } <nl> + <nl> + / / Couple of helpers because the mcp names are stupid and long . . . <nl> + private ChatMessageComponent format ( String str , Object . . . args ) <nl> + { <nl> + return ChatMessageComponent . createFromTranslationWithSubstitutions ( str , args ) ; <nl> + } <nl> + <nl> + private ChatMessageComponent format ( String str ) <nl> + { <nl> + return ChatMessageComponent . createFromTranslationKey ( str ) ; <nl> + } <nl> + <nl> + public void autoComplete ( String leftOfCursor , String full ) <nl> + { <nl> + latestAutoComplete = null ; <nl> + <nl> + if ( leftOfCursor . charAt ( 0 ) = = ' / ' ) <nl> + { <nl> + leftOfCursor = leftOfCursor . substring ( 1 ) ; <nl> + <nl> + Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; <nl> + if ( mc . currentScreen instanceof GuiChat ) <nl> + { <nl> + List < String > commands = getPossibleCommands ( mc . thePlayer , leftOfCursor ) ; <nl> + if ( commands ! = null & & ! commands . isEmpty ( ) ) <nl> + { <nl> + if ( leftOfCursor . indexOf ( ' ' ) = = - 1 ) <nl> + { <nl> + for ( int i = 0 ; i < commands . size ( ) ; i + + ) <nl> + { <nl> + commands . set ( i , GRAY + " / " + commands . get ( i ) + RESET ) ; <nl> + } <nl> + } <nl> + else <nl> + { <nl> + for ( int i = 0 ; i < commands . size ( ) ; i + + ) <nl> + { <nl> + commands . set ( i , GRAY + commands . get ( i ) + RESET ) ; <nl> + } <nl> + } <nl> + <nl> + latestAutoComplete = commands . toArray ( new String [ commands . size ( ) ] ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 021d32e . . 5e3cec2 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 1 , 9 + 1 , 10 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / client / Minecraft . java <nl> + + + . . / src _ work / minecraft / net / minecraft / client / Minecraft . java <nl> - @ @ - 137 , 6 + 137 , 15 @ @ <nl> + @ @ - 137 , 6 + 137 , 16 @ @ <nl> <nl> import com . google . common . collect . MapDifference ; <nl> <nl> + + import net . minecraftforge . client . ClientCommandHandler ; <nl> + import net . minecraftforge . client . ForgeHooksClient ; <nl> + import net . minecraftforge . client . GuiIngameForge ; <nl> + import net . minecraftforge . client . event . GuiOpenEvent ; <nl> @ @ - 16 , 7 + 17 , 7 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public class Minecraft implements IPlayerUsage <nl> { <nl> - @ @ - 416 , 7 + 425 , 7 @ @ <nl> + @ @ - 416 , 7 + 426 , 7 @ @ <nl> <nl> try <nl> { <nl> @ @ - 25 , 7 + 26 , 7 @ @ <nl> } <nl> catch ( LWJGLException lwjglexception ) <nl> { <nl> - @ @ - 497 , 7 + 506 , 7 @ @ <nl> + @ @ - 497 , 7 + 507 , 7 @ @ <nl> this . effectRenderer = new EffectRenderer ( this . theWorld , this . renderEngine ) ; <nl> FMLClientHandler . instance ( ) . finishMinecraftLoading ( ) ; <nl> this . checkGLError ( " Post startup " ) ; <nl> @ @ - 34 , 7 + 35 , 7 @ @ <nl> <nl> if ( this . serverName ! = null ) <nl> { <nl> - @ @ - 679 , 11 + 688 , 6 @ @ <nl> + @ @ - 679 , 11 + 689 , 6 @ @ <nl> * / <nl> public void displayGuiScreen ( GuiScreen par1GuiScreen ) <nl> { <nl> @ @ - 46 , 7 + 47 , 7 @ @ <nl> this . statFileWriter . syncStats ( ) ; <nl> <nl> if ( par1GuiScreen = = null & & this . theWorld = = null ) <nl> - @ @ - 693 , 6 + 697 , 20 @ @ <nl> + @ @ - 693 , 6 + 698 , 20 @ @ <nl> else if ( par1GuiScreen = = null & & this . thePlayer . getHealth ( ) < = 0 . 0F ) <nl> { <nl> par1GuiScreen = new GuiGameOver ( ) ; <nl> @ @ - 67 , 7 + 68 , 7 @ @ <nl> } <nl> <nl> if ( par1GuiScreen instanceof GuiMainMenu ) <nl> - @ @ - 1300 , 7 + 1318 , 7 @ @ <nl> + @ @ - 1300 , 7 + 1319 , 7 @ @ <nl> <nl> if ( this . thePlayer . isCurrentToolAdventureModeExempt ( j , k , l ) ) <nl> { <nl> @ @ - 76 , 7 + 77 , 7 @ @ <nl> this . thePlayer . swingItem ( ) ; <nl> } <nl> } <nl> - @ @ - 1366 , 7 + 1384 , 8 @ @ <nl> + @ @ - 1366 , 7 + 1385 , 8 @ @ <nl> { <nl> int j1 = itemstack ! = null ? itemstack . stackSize : 0 ; <nl> <nl> @ @ - 86 , 7 + 87 , 7 @ @ <nl> { <nl> flag = false ; <nl> this . thePlayer . swingItem ( ) ; <nl> - @ @ - 1392 , 7 + 1411 , 8 @ @ <nl> + @ @ - 1392 , 7 + 1412 , 8 @ @ <nl> { <nl> ItemStack itemstack1 = this . thePlayer . inventory . getCurrentItem ( ) ; <nl> <nl> @ @ - 96 , 7 + 97 , 7 @ @ <nl> { <nl> this . entityRenderer . itemRenderer . resetEquippedProgress2 ( ) ; <nl> } <nl> - @ @ - 1574 , 6 + 1594 , 8 @ @ <nl> + @ @ - 1574 , 6 + 1595 , 8 @ @ <nl> <nl> while ( Mouse . next ( ) ) <nl> { <nl> @ @ - 105 , 7 + 106 , 7 @ @ <nl> i = Mouse . getEventButton ( ) ; <nl> <nl> if ( isRunningOnMac & & i = = 0 & & ( Keyboard . isKeyDown ( 29 ) | | Keyboard . isKeyDown ( 157 ) ) ) <nl> - @ @ - 2046 , 6 + 2068 , 11 @ @ <nl> + @ @ - 2046 , 6 + 2069 , 11 @ @ <nl> { <nl> this . statFileWriter . syncStats ( ) ; <nl> <nl> @ @ - 117 , 7 + 118 , 7 @ @ <nl> if ( par1WorldClient = = null ) <nl> { <nl> NetClientHandler netclienthandler = this . getNetHandler ( ) ; <nl> - @ @ - 2063 , 6 + 2090 , 18 @ @ <nl> + @ @ - 2063 , 6 + 2091 , 18 @ @ <nl> if ( this . theIntegratedServer ! = null ) <nl> { <nl> this . theIntegratedServer . initiateShutdown ( ) ; <nl> @ @ - 136 , 7 + 137 , 16 @ @ <nl> } <nl> <nl> this . theIntegratedServer = null ; <nl> - @ @ - 2236 , 107 + 2275 , 12 @ @ <nl> + @ @ - 2225 , 7 + 2265 , 7 @ @ <nl> + * / <nl> + public boolean handleClientCommand ( String par1Str ) <nl> + { <nl> + - return false ; <nl> + + return ClientCommandHandler . instance . executeCommand ( thePlayer , par1Str ) = = 1 ; <nl> + } <nl> + <nl> + / * * <nl> + @ @ - 2236 , 107 + 2276 , 12 @ @ <nl> if ( this . objectMouseOver ! = null ) <nl> { <nl> boolean flag = this . thePlayer . capabilities . isCreativeMode ; <nl> @ @ - 248 , 7 + 258 , 7 @ @ <nl> <nl> if ( flag ) <nl> { <nl> - @ @ - 2419 , 11 + 2363 , 18 @ @ <nl> + @ @ - 2419 , 11 + 2364 , 18 @ @ <nl> par1PlayerUsageSnooper . addData ( " gl _ max _ texture _ size " , Integer . valueOf ( getGLMaximumTextureSize ( ) ) ) ; <nl> } <nl> <nl> @ @ - 267 , 7 + 277 , 7 @ @ <nl> for ( int i = 16384 ; i > 0 ; i > > = 1 ) <nl> { <nl> GL11 . glTexImage2D ( GL11 . GL _ PROXY _ TEXTURE _ 2D , 0 , GL11 . GL _ RGBA , i , i , 0 , GL11 . GL _ RGBA , GL11 . GL _ UNSIGNED _ BYTE , ( ByteBuffer ) null ) ; <nl> - @ @ - 2431 , 6 + 2382 , 7 @ @ <nl> + @ @ - 2431 , 6 + 2383 , 7 @ @ <nl> <nl> if ( j ! = 0 ) <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiChat . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiChat . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 755d5e3 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiChat . java . patch <nl> @ @ - 0 , 0 + 1 , 44 @ @ <nl> + - - - . . / src _ base / minecraft / net / minecraft / client / gui / GuiChat . java <nl> + + + + . . / src _ work / minecraft / net / minecraft / client / gui / GuiChat . java <nl> + @ @ - 7 , 8 + 7 , 11 @ @ <nl> + import java . util . Iterator ; <nl> + import java . util . List ; <nl> + import net . minecraft . network . packet . Packet203AutoComplete ; <nl> + + import net . minecraft . util . EnumChatFormatting ; <nl> + + import net . minecraftforge . client . ClientCommandHandler ; <nl> + import org . lwjgl . input . Keyboard ; <nl> + import org . lwjgl . input . Mouse ; <nl> + + import com . google . common . collect . ObjectArrays ; <nl> + <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public class GuiChat extends GuiScreen <nl> + @ @ - 278 , 13 + 281 , 14 @ @ <nl> + this . mc . ingameGUI . getChatGUI ( ) . printChatMessageWithOptionalDeletion ( stringbuilder . toString ( ) , 1 ) ; <nl> + } <nl> + <nl> + - this . inputField . writeText ( ( String ) this . field _ 73904 _ o . get ( this . field _ 73903 _ n + + ) ) ; <nl> + + this . inputField . writeText ( EnumChatFormatting . func _ 110646 _ a ( ( String ) this . field _ 73904 _ o . get ( this . field _ 73903 _ n + + ) ) ) ; <nl> + } <nl> + <nl> + private void func _ 73893 _ a ( String par1Str , String par2Str ) <nl> + { <nl> + if ( par1Str . length ( ) > = 1 ) <nl> + { <nl> + + ClientCommandHandler . instance . autoComplete ( par1Str , par2Str ) ; <nl> + this . mc . thePlayer . sendQueue . addToSendQueue ( new Packet203AutoComplete ( par1Str ) ) ; <nl> + this . field _ 73905 _ m = true ; <nl> + } <nl> + @ @ - 347 , 6 + 351 , 13 @ @ <nl> + String [ ] astring1 = par1ArrayOfStr ; <nl> + int i = par1ArrayOfStr . length ; <nl> + <nl> + + String [ ] complete = ClientCommandHandler . instance . latestAutoComplete ; <nl> + + if ( complete ! = null ) <nl> + + { <nl> + + astring1 = ObjectArrays . concat ( complete , astring1 , String . class ) ; <nl> + + i = astring1 . length ; <nl> + + } <nl> + + <nl> + for ( int j = 0 ; j < i ; + + j ) <nl> + { <nl> + String s = astring1 [ j ] ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch 
 index 6017c72 . . c2b87f7 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java . patch 
 @ @ - 1 , 12 + 1 , 12 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java 
 + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiOverlayDebug . java 
 - @ @ - 107 , 6 + 107 , 9 @ @ 
 - { 
 - BlockPos blockpos = new BlockPos ( this . mc . getRenderViewEntity ( ) . posX , this . mc . getRenderViewEntity ( ) . getEntityBoundingBox ( ) . minY , this . mc . getRenderViewEntity ( ) . posZ ) ; 
 + @ @ - 177 , 6 + 177 , 9 @ @ 
 + long l = j - k ; 
 + List < String > list = Lists . newArrayList ( new String [ ] { String . format ( " Java : % s % dbit " , new Object [ ] { System . getProperty ( " java . version " ) , Integer . valueOf ( this . mc . isJava64bit ( ) ? 64 : 32 ) } ) , String . format ( " Mem : % 2d % % % 03d / % 03dMB " , new Object [ ] { Long . valueOf ( l * 100L / i ) , Long . valueOf ( bytesToMb ( l ) ) , Long . valueOf ( bytesToMb ( i ) ) } ) , String . format ( " Allocated : % 2d % % % 03dMB " , new Object [ ] { Long . valueOf ( j * 100L / i ) , Long . valueOf ( bytesToMb ( j ) ) } ) , " " , String . format ( " CPU : % s " , new Object [ ] { OpenGlHelper . func _ 183029 _ j ( ) } ) , " " , String . format ( " Display : % dx % d ( % s ) " , new Object [ ] { Integer . valueOf ( Display . getWidth ( ) ) , Integer . valueOf ( Display . getHeight ( ) ) , GL11 . glGetString ( GL11 . GL _ VENDOR ) } ) , GL11 . glGetString ( GL11 . GL _ RENDERER ) , GL11 . glGetString ( GL11 . GL _ VERSION ) } ) ; 
 
 - + arraylist . add ( " " ) ; 
 - + arraylist . addAll ( net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getBrandings ( false ) ) ; 
 + + list . add ( " " ) ; 
 + + list . addAll ( net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getBrandings ( false ) ) ; 
 + 
 if ( this . isReducedDebug ( ) ) 
 { 
 - return Lists . newArrayList ( new String [ ] { " Minecraft 1 . 8 . 8 ( " + this . mc . getVersion ( ) + " / " + ClientBrandRetriever . getClientModName ( ) + " ) " , this . mc . debug , this . mc . renderGlobal . getDebugInfoRenders ( ) , this . mc . renderGlobal . getDebugInfoEntities ( ) , " P : " + this . mc . effectRenderer . getStatistics ( ) + " . T : " + this . mc . theWorld . getDebugLoadedEntities ( ) , this . mc . theWorld . getProviderName ( ) , " " , String . format ( " Chunk - relative : % d % d % d " , new Object [ ] { Integer . valueOf ( blockpos . getX ( ) & 15 ) , Integer . valueOf ( blockpos . getY ( ) & 15 ) , Integer . valueOf ( blockpos . getZ ( ) & 15 ) } ) } ) ; 
 + return list ; 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch 
 index 9019423 . . 6eb02f8 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch 
 @ @ - 16 , 7 + 16 , 19 @ @ 
 } 
 } 
 
 - @ @ - 103 , 7 + 105 , 17 @ @ 
 + @ @ - 83 , 9 + 85 , 10 @ @ 
 + { 
 + TileEntity tileentity = null ; 
 + 
 + + Class < ? extends TileEntity > oclass = null ; 
 + try 
 + { 
 + - Class < ? extends TileEntity > oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; 
 + + oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; 
 + 
 + if ( oclass ! = null ) 
 + { 
 + @ @ - 103 , 7 + 106 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 34 , 7 + 46 , 7 @ @ 
 } 
 
 return tileentity ; 
 - @ @ - 135 , 7 + 147 , 6 @ @ 
 + @ @ - 135 , 7 + 148 , 6 @ @ 
 } 
 } 
 
 @ @ - 42 , 7 + 54 , 7 @ @ 
 public double getDistanceSq ( double x , double y , double z ) 
 { 
 double d0 = ( double ) this . pos . getX ( ) + 0 . 5D - x ; 
 - @ @ - 283 , 4 + 294 , 135 @ @ 
 + @ @ - 283 , 4 + 295 , 135 @ @ 
 addMapping ( TileEntityFlowerPot . class , " FlowerPot " ) ; 
 addMapping ( TileEntityBanner . class , " Banner " ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch 
 new file mode 100644 
 index 0000000 . . c8e28eb 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch 
 @ @ - 0 , 0 + 1 , 35 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityHopper . java 
 + + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityHopper . java 
 + @ @ - 516 , 17 + 516 , 31 @ @ 
 + 
 + if ( itemstack = = null ) 
 + { 
 + + / / Forge : BUGFIX : Again , make things respect max stack sizes . 
 + + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; 
 + + if ( max > = p _ 174916 _ 1 _ . stackSize ) 
 + + { 
 + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ ) ; 
 + p _ 174916 _ 1 _ = null ; 
 + + } 
 + + else 
 + + { 
 + + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ . splitStack ( max ) ) ; 
 + + } 
 + flag = true ; 
 + } 
 + else if ( canCombine ( itemstack , p _ 174916 _ 1 _ ) ) 
 + { 
 + - int i = p _ 174916 _ 1 _ . getMaxStackSize ( ) - itemstack . stackSize ; 
 + + / / Forge : BUGFIX : Again , make things respect max stack sizes . 
 + + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; 
 + + if ( max > itemstack . stackSize ) 
 + + { 
 + + int i = max - itemstack . stackSize ; 
 + int j = Math . min ( p _ 174916 _ 1 _ . stackSize , i ) ; 
 + p _ 174916 _ 1 _ . stackSize - = j ; 
 + itemstack . stackSize + = j ; 
 + flag = j > 0 ; 
 + + } 
 + } 
 + 
 + if ( flag ) 
 diff - - git a / rejects / minecraft / net / minecraft / tileentity / TileEntity . java . patch . rej b / rejects / minecraft / net / minecraft / tileentity / TileEntity . java . patch . rej 
 deleted file mode 100644 
 index 7a2b4ec . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / tileentity / TileEntity . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 13 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 3 
 - { 
 - TileEntity tileentity = null ; 
 - 
 - + Class oclass = null ; 
 - try 
 - { 
 - - Class oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; 
 - + oclass = ( Class ) nameToClassMap . get ( nbt . getString ( " id " ) ) ; 
 - 
 - if ( oclass ! = null ) 
 - { 
 - + + + + END PATCH 
 diff - - git a / rejects / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch . rej b / rejects / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch . rej 
 deleted file mode 100644 
 index 5e7eb1c . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / tileentity / TileEntityHopper . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 39 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - 
 - if ( itemstack1 = = null ) 
 - { 
 - - p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ ) ; 
 - - p _ 174916 _ 1 _ = null ; 
 - + / / Forge : BUGFIX : Again , make things respect max stack sizes . 
 - + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; 
 - + if ( max > = p _ 174916 _ 1 _ . stackSize ) 
 - + { 
 - + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ ) ; 
 - + p _ 174916 _ 1 _ = null ; 
 - + } 
 - + else 
 - + { 
 - + p _ 174916 _ 0 _ . setInventorySlotContents ( p _ 174916 _ 2 _ , p _ 174916 _ 1 _ . splitStack ( max ) ) ; 
 - + } 
 - flag = true ; 
 - } 
 - else if ( canCombine ( itemstack1 , p _ 174916 _ 1 _ ) ) 
 - { 
 - - int j = p _ 174916 _ 1 _ . getMaxStackSize ( ) - itemstack1 . stackSize ; 
 - - int k = Math . min ( p _ 174916 _ 1 _ . stackSize , j ) ; 
 - - p _ 174916 _ 1 _ . stackSize - = k ; 
 - - itemstack1 . stackSize + = k ; 
 - - flag = k > 0 ; 
 - + / / Forge : BUGFIX : Again , make things respect max stack sizes . 
 - + int max = Math . min ( p _ 174916 _ 1 _ . getMaxStackSize ( ) , p _ 174916 _ 0 _ . getInventoryStackLimit ( ) ) ; 
 - + if ( max > itemstack1 . stackSize ) 
 - + { 
 - + int size = Math . min ( p _ 174916 _ 1 _ . stackSize , max - itemstack1 . stackSize ) ; 
 - + p _ 174916 _ 1 _ . stackSize - = size ; 
 - + itemstack1 . stackSize + = size ; 
 - + flag = size > 0 ; 
 - + } 
 - } 
 - 
 - if ( flag ) 
 - + + + + END PATCH

NEAREST DIFF:
diff - - git a / client / net / minecraftforge / client / ClientCommandHandler . java b / client / net / minecraftforge / client / ClientCommandHandler . java 
 new file mode 100644 
 index 0000000 . . b929e72 
 - - - / dev / null 
 + + + b / client / net / minecraftforge / client / ClientCommandHandler . java 
 @ @ - 0 , 0 + 1 , 140 @ @ 
 + package net . minecraftforge . client ; 
 + 
 + import java . util . List ; 
 + 
 + import net . minecraft . client . Minecraft ; 
 + import net . minecraft . client . gui . GuiChat ; 
 + import net . minecraft . command . CommandException ; 
 + import net . minecraft . command . CommandHandler ; 
 + import net . minecraft . command . ICommand ; 
 + import net . minecraft . command . ICommandSender ; 
 + import net . minecraft . command . WrongUsageException ; 
 + import net . minecraft . util . ChatMessageComponent ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . CommandEvent ; 
 + import cpw . mods . fml . client . FMLClientHandler ; 
 + import static net . minecraft . util . EnumChatFormatting . * ; 
 + 
 + / * * 
 + * The class that handles client - side chat commands . You should register any 
 + * commands that you want handled on the client with this command handler . 
 + * 
 + * If there is a command with the same name registered both on the server and 
 + * client , the client takes precedence ! 
 + * 
 + * / 
 + public class ClientCommandHandler extends CommandHandler 
 + { 
 + public static final ClientCommandHandler instance = new ClientCommandHandler ( ) ; 
 + 
 + public String [ ] latestAutoComplete = null ; 
 + 
 + / * * 
 + * @ return 1 if successfully executed , 0 if wrong usage , it doesn ' t exist or 
 + * it was canceled . 
 + * / 
 + @ Override 
 + public int executeCommand ( ICommandSender sender , String message ) 
 + { 
 + message = message . trim ( ) ; 
 + 
 + if ( message . startsWith ( " / " ) ) 
 + { 
 + message = message . substring ( 1 ) ; 
 + } 
 + 
 + String [ ] args = message . split ( " " ) ; 
 + String commandName = args [ 0 ] ; 
 + System . arraycopy ( args , 1 , args , 0 , args . length - 1 ) ; 
 + ICommand icommand = ( ICommand ) getCommands ( ) . get ( commandName ) ; 
 + 
 + try 
 + { 
 + if ( icommand = = null ) 
 + { 
 + return 0 ; 
 + } 
 + 
 + if ( icommand . canCommandSenderUseCommand ( sender ) ) 
 + { 
 + CommandEvent event = new CommandEvent ( icommand , sender , args ) ; 
 + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 + { 
 + if ( event . exception ! = null ) 
 + { 
 + throw event . exception ; 
 + } 
 + return 0 ; 
 + } 
 + 
 + icommand . processCommand ( sender , args ) ; 
 + return 1 ; 
 + } 
 + else 
 + { 
 + sender . sendChatToPlayer ( format ( " commands . generic . permission " ) . setColor ( RED ) ) ; 
 + } 
 + } 
 + catch ( WrongUsageException wue ) 
 + { 
 + sender . sendChatToPlayer ( format ( " commands . generic . usage " , format ( wue . getMessage ( ) , wue . getErrorOjbects ( ) ) ) . setColor ( RED ) ) ; 
 + } 
 + catch ( CommandException ce ) 
 + { 
 + sender . sendChatToPlayer ( format ( ce . getMessage ( ) , ce . getErrorOjbects ( ) ) . setColor ( RED ) ) ; 
 + } 
 + catch ( Throwable t ) 
 + { 
 + sender . sendChatToPlayer ( format ( " commands . generic . exception " ) . setColor ( RED ) ) ; 
 + t . printStackTrace ( ) ; 
 + } 
 + 
 + return 0 ; 
 + } 
 + 
 + / / Couple of helpers because the mcp names are stupid and long . . . 
 + private ChatMessageComponent format ( String str , Object . . . args ) 
 + { 
 + return ChatMessageComponent . createFromTranslationWithSubstitutions ( str , args ) ; 
 + } 
 + 
 + private ChatMessageComponent format ( String str ) 
 + { 
 + return ChatMessageComponent . createFromTranslationKey ( str ) ; 
 + } 
 + 
 + public void autoComplete ( String leftOfCursor , String full ) 
 + { 
 + latestAutoComplete = null ; 
 + 
 + if ( leftOfCursor . charAt ( 0 ) = = ' / ' ) 
 + { 
 + leftOfCursor = leftOfCursor . substring ( 1 ) ; 
 + 
 + Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; 
 + if ( mc . currentScreen instanceof GuiChat ) 
 + { 
 + List < String > commands = getPossibleCommands ( mc . thePlayer , leftOfCursor ) ; 
 + if ( commands ! = null & & ! commands . isEmpty ( ) ) 
 + { 
 + if ( leftOfCursor . indexOf ( ' ' ) = = - 1 ) 
 + { 
 + for ( int i = 0 ; i < commands . size ( ) ; i + + ) 
 + { 
 + commands . set ( i , GRAY + " / " + commands . get ( i ) + RESET ) ; 
 + } 
 + } 
 + else 
 + { 
 + for ( int i = 0 ; i < commands . size ( ) ; i + + ) 
 + { 
 + commands . set ( i , GRAY + commands . get ( i ) + RESET ) ; 
 + } 
 + } 
 + 
 + latestAutoComplete = commands . toArray ( new String [ commands . size ( ) ] ) ; 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 021d32e . . 5e3cec2 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 1 , 9 + 1 , 10 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / client / Minecraft . java 
 + + + . . / src _ work / minecraft / net / minecraft / client / Minecraft . java 
 - @ @ - 137 , 6 + 137 , 15 @ @ 
 + @ @ - 137 , 6 + 137 , 16 @ @ 
 
 import com . google . common . collect . MapDifference ; 
 
 + + import net . minecraftforge . client . ClientCommandHandler ; 
 + import net . minecraftforge . client . ForgeHooksClient ; 
 + import net . minecraftforge . client . GuiIngameForge ; 
 + import net . minecraftforge . client . event . GuiOpenEvent ; 
 @ @ - 16 , 7 + 17 , 7 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public class Minecraft implements IPlayerUsage 
 { 
 - @ @ - 416 , 7 + 425 , 7 @ @ 
 + @ @ - 416 , 7 + 426 , 7 @ @ 
 
 try 
 { 
 @ @ - 25 , 7 + 26 , 7 @ @ 
 } 
 catch ( LWJGLException lwjglexception ) 
 { 
 - @ @ - 497 , 7 + 506 , 7 @ @ 
 + @ @ - 497 , 7 + 507 , 7 @ @ 
 this . effectRenderer = new EffectRenderer ( this . theWorld , this . renderEngine ) ; 
 FMLClientHandler . instance ( ) . finishMinecraftLoading ( ) ; 
 this . checkGLError ( " Post startup " ) ; 
 @ @ - 34 , 7 + 35 , 7 @ @ 
 
 if ( this . serverName ! = null ) 
 { 
 - @ @ - 679 , 11 + 688 , 6 @ @ 
 + @ @ - 679 , 11 + 689 , 6 @ @ 
 * / 
 public void displayGuiScreen ( GuiScreen par1GuiScreen ) 
 { 
 @ @ - 46 , 7 + 47 , 7 @ @ 
 this . statFileWriter . syncStats ( ) ; 
 
 if ( par1GuiScreen = = null & & this . theWorld = = null ) 
 - @ @ - 693 , 6 + 697 , 20 @ @ 
 + @ @ - 693 , 6 + 698 , 20 @ @ 
 else if ( par1GuiScreen = = null & & this . thePlayer . getHealth ( ) < = 0 . 0F ) 
 { 
 par1GuiScreen = new GuiGameOver ( ) ; 
 @ @ - 67 , 7 + 68 , 7 @ @ 
 } 
 
 if ( par1GuiScreen instanceof GuiMainMenu ) 
 - @ @ - 1300 , 7 + 1318 , 7 @ @ 
 + @ @ - 1300 , 7 + 1319 , 7 @ @ 
 
 if ( this . thePlayer . isCurrentToolAdventureModeExempt ( j , k , l ) ) 
 { 
 @ @ - 76 , 7 + 77 , 7 @ @ 
 this . thePlayer . swingItem ( ) ; 
 } 
 } 
 - @ @ - 1366 , 7 + 1384 , 8 @ @ 
 + @ @ - 1366 , 7 + 1385 , 8 @ @ 
 { 
 int j1 = itemstack ! = null ? itemstack . stackSize : 0 ; 
 
 @ @ - 86 , 7 + 87 , 7 @ @ 
 { 
 flag = false ; 
 this . thePlayer . swingItem ( ) ; 
 - @ @ - 1392 , 7 + 1411 , 8 @ @ 
 + @ @ - 1392 , 7 + 1412 , 8 @ @ 
 { 
 ItemStack itemstack1 = this . thePlayer . inventory . getCurrentItem ( ) ; 
 
 @ @ - 96 , 7 + 97 , 7 @ @ 
 { 
 this . entityRenderer . itemRenderer . resetEquippedProgress2 ( ) ; 
 } 
 - @ @ - 1574 , 6 + 1594 , 8 @ @ 
 + @ @ - 1574 , 6 + 1595 , 8 @ @ 
 
 while ( Mouse . next ( ) ) 
 { 
 @ @ - 105 , 7 + 106 , 7 @ @ 
 i = Mouse . getEventButton ( ) ; 
 
 if ( isRunningOnMac & & i = = 0 & & ( Keyboard . isKeyDown ( 29 ) | | Keyboard . isKeyDown ( 157 ) ) ) 
 - @ @ - 2046 , 6 + 2068 , 11 @ @ 
 + @ @ - 2046 , 6 + 2069 , 11 @ @ 
 { 
 this . statFileWriter . syncStats ( ) ; 
 
 @ @ - 117 , 7 + 118 , 7 @ @ 
 if ( par1WorldClient = = null ) 
 { 
 NetClientHandler netclienthandler = this . getNetHandler ( ) ; 
 - @ @ - 2063 , 6 + 2090 , 18 @ @ 
 + @ @ - 2063 , 6 + 2091 , 18 @ @ 
 if ( this . theIntegratedServer ! = null ) 
 { 
 this . theIntegratedServer . initiateShutdown ( ) ; 
 @ @ - 136 , 7 + 137 , 16 @ @ 
 } 
 
 this . theIntegratedServer = null ; 
 - @ @ - 2236 , 107 + 2275 , 12 @ @ 
 + @ @ - 2225 , 7 + 2265 , 7 @ @ 
 + * / 
 + public boolean handleClientCommand ( String par1Str ) 
 + { 
 + - return false ; 
 + + return ClientCommandHandler . instance . executeCommand ( thePlayer , par1Str ) = = 1 ; 
 + } 
 + 
 + / * * 
 + @ @ - 2236 , 107 + 2276 , 12 @ @ 
 if ( this . objectMouseOver ! = null ) 
 { 
 boolean flag = this . thePlayer . capabilities . isCreativeMode ; 
 @ @ - 248 , 7 + 258 , 7 @ @ 
 
 if ( flag ) 
 { 
 - @ @ - 2419 , 11 + 2363 , 18 @ @ 
 + @ @ - 2419 , 11 + 2364 , 18 @ @ 
 par1PlayerUsageSnooper . addData ( " gl _ max _ texture _ size " , Integer . valueOf ( getGLMaximumTextureSize ( ) ) ) ; 
 } 
 
 @ @ - 267 , 7 + 277 , 7 @ @ 
 for ( int i = 16384 ; i > 0 ; i > > = 1 ) 
 { 
 GL11 . glTexImage2D ( GL11 . GL _ PROXY _ TEXTURE _ 2D , 0 , GL11 . GL _ RGBA , i , i , 0 , GL11 . GL _ RGBA , GL11 . GL _ UNSIGNED _ BYTE , ( ByteBuffer ) null ) ; 
 - @ @ - 2431 , 6 + 2382 , 7 @ @ 
 + @ @ - 2431 , 6 + 2383 , 7 @ @ 
 
 if ( j ! = 0 ) 
 { 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiChat . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiChat . java . patch 
 new file mode 100644 
 index 0000000 . . 755d5e3 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiChat . java . patch 
 @ @ - 0 , 0 + 1 , 44 @ @ 
 + - - - . . / src _ base / minecraft / net / minecraft / client / gui / GuiChat . java 
 + + + + . . / src _ work / minecraft / net / minecraft / client / gui / GuiChat . java 
 + @ @ - 7 , 8 + 7 , 11 @ @ 
 + import java . util . Iterator ; 
 + import java . util . List ; 
 + import net . minecraft . network . packet . Packet203AutoComplete ; 
 + + import net . minecraft . util . EnumChatFormatting ; 
 + + import net . minecraftforge . client . ClientCommandHandler ; 
 + import org . lwjgl . input . Keyboard ; 
 + import org . lwjgl . input . Mouse ; 
 + + import com . google . common . collect . ObjectArrays ; 
 + 
 + @ SideOnly ( Side . CLIENT ) 
 + public class GuiChat extends GuiScreen 
 + @ @ - 278 , 13 + 281 , 14 @ @ 
 + this . mc . ingameGUI . getChatGUI ( ) . printChatMessageWithOptionalDeletion ( stringbuilder . toString ( ) , 1 ) ; 
 + } 
 + 
 + - this . inputField . writeText ( ( String ) this . field _ 73904 _ o . get ( this . field _ 73903 _ n + + ) ) ; 
 + + this . inputField . writeText ( EnumChatFormatting . func _ 110646 _ a ( ( String ) this . field _ 73904 _ o . get ( this . field _ 73903 _ n + + ) ) ) ; 
 + } 
 + 
 + private void func _ 73893 _ a ( String par1Str , String par2Str ) 
 + { 
 + if ( par1Str . length ( ) > = 1 ) 
 + { 
 + + ClientCommandHandler . instance . autoComplete ( par1Str , par2Str ) ; 
 + this . mc . thePlayer . sendQueue . addToSendQueue ( new Packet203AutoComplete ( par1Str ) ) ; 
 + this . field _ 73905 _ m = true ; 
 + } 
 + @ @ - 347 , 6 + 351 , 13 @ @ 
 + String [ ] astring1 = par1ArrayOfStr ; 
 + int i = par1ArrayOfStr . length ; 
 + 
 + + String [ ] complete = ClientCommandHandler . instance . latestAutoComplete ; 
 + + if ( complete ! = null ) 
 + + { 
 + + astring1 = ObjectArrays . concat ( complete , astring1 , String . class ) ; 
 + + i = astring1 . length ; 
 + + } 
 + + 
 + for ( int j = 0 ; j < i ; + + j ) 
 + { 
 + String s = astring1 [ j ] ;
