BLEU SCORE: 0.028398387225677897

TEST MSG: Fix handing the " minecraft " dependency properly by adding it to the list
GENERATED MSG: Remove Java 8 warnings now that Minecraft requires it

TEST DIFF (one line): diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java <nl> index 6fd7bb2 . . 69ed15e 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> <nl> package net . minecraftforge . fml . loading ; <nl> <nl> + import com . google . common . collect . Streams ; <nl> import com . google . common . graph . GraphBuilder ; <nl> import com . google . common . graph . MutableGraph ; <nl> import net . minecraftforge . forgespi . language . IModFileInfo ; <nl> @ @ - 77 , 9 + 78 , 10 @ @ public class ModSorter <nl> } <nl> <nl> private void findLanguages ( ) { <nl> - modFiles . stream ( ) . forEach ( mf - > mf . identifyLanguage ( ) ) ; <nl> + modFiles . forEach ( ModFile : : identifyLanguage ) ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnstableApiUsage " ) <nl> private void sort ( ) <nl> { <nl> / / lambdas are identity based , so sorting them is impossible unless you hold reference to them <nl> @ @ - 118 , 6 + 120 , 7 @ @ public class ModSorter <nl> this . modFiles = sorted . stream ( ) . map ( ModFileInfo : : getFile ) . collect ( Collectors . toList ( ) ) ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnstableApiUsage " ) <nl> private void addDependency ( MutableGraph < ModFileInfo > topoGraph , IModInfo . ModVersion dep ) <nl> { <nl> ModFileInfo self = ( ModFileInfo ) dep . getOwner ( ) . getOwningFile ( ) ; <nl> @ @ - 138 , 7 + 141 , 7 @ @ public class ModSorter <nl> <nl> private void buildUniqueList ( ) <nl> { <nl> - final Stream < ModInfo > modInfos = modFiles . stream ( ) . map ( ModFile : : getModInfos ) . flatMap ( Collection : : stream ) . map ( ModInfo . class : : cast ) ; <nl> + final Stream < ModInfo > modInfos = Stream . concat ( DefaultModInfos . getModInfos ( ) . stream ( ) , modFiles . stream ( ) . map ( ModFile : : getModInfos ) . flatMap ( Collection : : stream ) ) . map ( ModInfo . class : : cast ) ; <nl> final Map < String , List < ModInfo > > modIds = modInfos . collect ( Collectors . groupingBy ( IModInfo : : getModId ) ) ; <nl> <nl> / / TODO : make this figure out dupe handling better
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch <nl> index 70670bf . . f12c53c 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch <nl> @ @ - 73 , 12 + 73 , 3 @ @ <nl> } <nl> <nl> protected void func _ 73864 _ a ( int p _ 73864 _ 1 _ , int p _ 73864 _ 2 _ , int p _ 73864 _ 3 _ ) throws IOException <nl> - @ @ - 562 , 6 + 583 , 8 @ @ <nl> - { <nl> - this . field _ 146297 _ k . func _ 147108 _ a ( new GuiWinGame ( false , Runnables . doNothing ( ) ) ) ; <nl> - } <nl> - + <nl> - + net . minecraftforge . client . ForgeHooksClient . mainMenuMouseClick ( p _ 73864 _ 1 _ , p _ 73864 _ 2 _ , p _ 73864 _ 3 _ , this . field _ 146289 _ q , this . field _ 146294 _ l ) ; <nl> - } <nl> - <nl> - public void func _ 146281 _ b ( ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 57ce4b1 . . bc2e442 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 29 , 7 + 29 , 6 @ @ import java . awt . image . BufferedImage ; <nl> import java . io . File ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . FloatBuffer ; <nl> - import java . util . Collections ; <nl> import java . util . Map ; <nl> <nl> import javax . annotation . Nonnull ; <nl> @ @ - 115 , 12 + 114 , 8 @ @ import net . minecraftforge . common . model . IModelPart ; <nl> import net . minecraftforge . common . model . ITransformation ; <nl> import net . minecraftforge . common . model . TRSRTransformation ; <nl> import net . minecraftforge . fml . client . FMLClientHandler ; <nl> - import net . minecraftforge . fml . client . GuiJava8Error ; <nl> import net . minecraftforge . fml . client . registry . ClientRegistry ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> - import net . minecraftforge . fml . common . Java8VersionException ; <nl> - import net . minecraftforge . fml . common . Loader ; <nl> - import net . minecraftforge . fml . common . ModContainer ; <nl> <nl> import org . apache . commons . lang3 . tuple . Pair ; <nl> import org . lwjgl . BufferUtils ; <nl> @ @ - 314 , 17 + 309 , 6 @ @ public class ForgeHooksClient <nl> gui . drawString ( font , line , ( width - font . getStringWidth ( line ) ) / 2 , 4 + ( 1 * ( font . FONT _ HEIGHT + 1 ) ) , - 1 ) ; <nl> } <nl> <nl> - if ( ! Loader . instance ( ) . java8 ) <nl> - { <nl> - String line = I18n . format ( " fml . messages . java8warning . 1 " , TextFormatting . RED , TextFormatting . RESET ) ; <nl> - gui . drawString ( font , line , ( width - font . getStringWidth ( line ) ) / 2 , 4 + ( 8 * ( font . FONT _ HEIGHT + 1 ) ) , - 1 ) ; <nl> - line = I18n . format ( " fml . messages . java8warning . 2 " ) ; <nl> - gui . drawString ( font , line , ( width - font . getStringWidth ( line ) ) / 2 , 4 + ( 9 * ( font . FONT _ HEIGHT + 1 ) ) , - 1 ) ; <nl> - splashText = updatescrollcounter < 50 ? " UPDATE ! " : " JAVA ! " ; <nl> - updatescrollcounter + = 1 ; <nl> - updatescrollcounter % = 100 ; <nl> - } <nl> - <nl> String line = null ; <nl> switch ( status ) <nl> { <nl> @ @ - 345 , 22 + 329 , 6 @ @ public class ForgeHooksClient <nl> return splashText ; <nl> } <nl> <nl> - public static void mainMenuMouseClick ( int mouseX , int mouseY , int mouseButton , FontRenderer font , int width ) <nl> - { <nl> - if ( ! Loader . instance ( ) . java8 ) <nl> - { <nl> - if ( mouseY > = ( 4 + ( 8 * 10 ) ) & & mouseY < ( 4 + ( 10 * 10 ) ) ) <nl> - { <nl> - int w = font . getStringWidth ( I18n . format ( " fml . messages . java8warning . 1 " , TextFormatting . RED , TextFormatting . RESET ) ) ; <nl> - w = Math . max ( w , font . getStringWidth ( I18n . format ( " fml . messages . java8warning . 2 " ) ) ) ; <nl> - if ( mouseX > = ( ( width - w ) / 2 ) & & mouseX < = ( ( width + w ) / 2 ) ) <nl> - { <nl> - FMLClientHandler . instance ( ) . showGuiScreen ( new GuiJava8Error ( new Java8VersionException ( Collections . < ModContainer > emptyList ( ) ) ) ) ; <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> public static ISound playSound ( SoundManager manager , ISound sound ) <nl> { <nl> PlaySoundEvent e = new PlaySoundEvent ( manager , sound ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index 42f14ee . . b27400c 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 36 , 7 + 36 , 6 @ @ import java . security . cert . Certificate ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> - import java . util . Date ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> @ @ - 121 , 7 + 120 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> public static boolean forgeLightPipelineEnabled = true ; <nl> public static boolean replaceVanillaBucketModel = true ; <nl> public static boolean zoomInMissingModelTextInGui = false ; <nl> - public static long java8Reminder = 0 ; <nl> public static boolean disableStairSlabCulling = false ; / / Also known as the " DontCullStairsBecauseIUseACrappyTexturePackThatBreaksBasicBlockShapesSoICantTrustBasicBlockCulling " flag <nl> public static boolean alwaysSetupTerrainOffThread = false ; / / In RenderGlobal . setupTerrain , always force the chunk render updates to be queued to the thread <nl> public static int dimensionUnloadQueueDelay = 0 ; <nl> @ @ - 322 , 12 + 320 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> prop . setLanguageKey ( " forge . configgui . zoomInMissingModelTextInGui " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , 0 , <nl> - " The timestamp of the last reminder to update to Java 8 in number of milliseconds since January 1 , 1970 , 00 : 00 : 00 GMT . Nag will show only once every 24 hours . To disable it set this to some really high number . " ) ; <nl> - java8Reminder = prop . getLong ( 0 ) ; <nl> - prop . setLanguageKey ( " forge . configgui . java8Reminder " ) ; <nl> - propOrder . add ( prop . getName ( ) ) ; <nl> - <nl> prop = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , false , <nl> " Disable culling of hidden faces next to stairs and slabs . Causes extra rendering , but may fix some resource packs that exploit this vanilla mechanic . " ) ; <nl> disableStairSlabCulling = prop . getBoolean ( false ) ; <nl> @ @ - 349 , 13 + 341 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> } <nl> } <nl> <nl> - public static void updateNag ( ) <nl> - { <nl> - Property prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , java8Reminder ) ; <nl> - prop . set ( ( new Date ( ) ) . getTime ( ) ) ; <nl> - config . save ( ) ; <nl> - } <nl> - <nl> / * * <nl> * By subscribing to the OnConfigChangedEvent we are able to execute code when our config screens are closed . <nl> * This implementation uses the optional configID string to handle multiple Configurations using one event handler . <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index 2d8725d . . 2a2e2e1 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 26 , 7 + 26 , 6 @ @ import java . lang . ref . WeakReference ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> - import java . util . Date ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Map . Entry ; <nl> @ @ - 81 , 7 + 80 , 6 @ @ import net . minecraft . world . WorldSettings ; <nl> import net . minecraft . world . storage . WorldSummary ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> - import net . minecraftforge . common . ForgeModContainer ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . config . ConfigManager ; <nl> import net . minecraftforge . common . util . CompoundDataFixer ; <nl> @ @ - 92 , 7 + 90 , 6 @ @ import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLContainerHolder ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . IFMLSidedHandler ; <nl> - import net . minecraftforge . fml . common . Java8VersionException ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . LoaderException ; <nl> import net . minecraftforge . fml . common . MetadataCollection ; <nl> @ @ - 179 , 8 + 176 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> <nl> private boolean loading = true ; <nl> <nl> - private Java8VersionException j8onlymods ; <nl> - <nl> private WrongMinecraftVersionException wrongMC ; <nl> <nl> private CustomModLoadingErrorDisplayException customError ; <nl> @ @ - 240 , 10 + 235 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> dupesFound = dupes ; <nl> } <nl> - catch ( Java8VersionException j8mods ) <nl> - { <nl> - j8onlymods = j8mods ; <nl> - } <nl> catch ( MissingModsException missing ) <nl> { <nl> modsMissing = missing ; <nl> @ @ - 338 , 7 + 329 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> <nl> public boolean hasError ( ) <nl> { <nl> - return modsMissing ! = null | | wrongMC ! = null | | customError ! = null | | dupesFound ! = null | | modSorting ! = null | | j8onlymods ! = null | | multipleModsErrored ! = null ; <nl> + return modsMissing ! = null | | wrongMC ! = null | | customError ! = null | | dupesFound ! = null | | modSorting ! = null | | multipleModsErrored ! = null ; <nl> } <nl> <nl> / * * <nl> @ @ - 440 , 10 + 431 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> showGuiScreen ( new GuiWrongMinecraft ( wrongMC ) ) ; <nl> } <nl> - else if ( j8onlymods ! = null ) <nl> - { <nl> - showGuiScreen ( new GuiJava8Error ( j8onlymods ) ) ; <nl> - } <nl> else if ( modsMissing ! = null ) <nl> { <nl> showGuiScreen ( new GuiModsMissing ( modsMissing ) ) ; <nl> @ @ - 467 , 14 + 454 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> else <nl> { <nl> logMissingTextureErrors ( ) ; <nl> - if ( ! Loader . instance ( ) . java8 ) <nl> - { <nl> - if ( ( new Date ( ) ) . getTime ( ) > = ForgeModContainer . java8Reminder + ( 1000 * 60 * 60 * 24 ) ) <nl> - { <nl> - showGuiScreen ( new GuiJava8Error ( new Java8VersionException ( Collections . < ModContainer > emptyList ( ) ) ) ) ; <nl> - ForgeModContainer . updateNag ( ) ; <nl> - } <nl> - } <nl> } <nl> } <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiJava8Error . java b / src / main / java / net / minecraftforge / fml / client / GuiJava8Error . java <nl> deleted file mode 100644 <nl> index d986948 . . 0000000 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / GuiJava8Error . java <nl> + + + / dev / null <nl> @ @ - 1 , 136 + 0 , 0 @ @ <nl> - / * <nl> - * Minecraft Forge <nl> - * Copyright ( c ) 2016 . <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation version 2 . 1 <nl> - * of the License . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * <nl> - * You should have received a copy of the GNU Lesser General Public <nl> - * License along with this library ; if not , write to the Free Software <nl> - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> - * / <nl> - <nl> - package net . minecraftforge . fml . client ; <nl> - <nl> - import net . minecraft . client . gui . GuiButton ; <nl> - import net . minecraft . client . resources . I18n ; <nl> - import net . minecraft . util . text . TextFormatting ; <nl> - import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> - import net . minecraftforge . fml . common . FMLLog ; <nl> - import net . minecraftforge . fml . common . Java8VersionException ; <nl> - import net . minecraftforge . fml . common . Loader ; <nl> - import net . minecraftforge . fml . common . ModContainer ; <nl> - import org . apache . logging . log4j . Level ; <nl> - <nl> - import com . google . common . collect . Lists ; <nl> - <nl> - import java . awt . Desktop ; <nl> - import java . net . URI ; <nl> - import java . util . List ; <nl> - <nl> - public class GuiJava8Error extends GuiErrorBase <nl> - { <nl> - private Java8VersionException java8VersionException ; <nl> - public GuiJava8Error ( Java8VersionException java8VersionException ) <nl> - { <nl> - this . java8VersionException = java8VersionException ; <nl> - } <nl> - <nl> - @ Override <nl> - public void initGui ( ) <nl> - { <nl> - super . initGui ( ) ; <nl> - this . buttonList . remove ( 1 ) ; <nl> - if ( java8VersionException . getMods ( ) . isEmpty ( ) ) <nl> - { <nl> - this . buttonList . remove ( 0 ) ; <nl> - this . buttonList . add ( new GuiButton ( 1 , 50 , this . height - 38 , this . width / 2 - 55 , 20 , I18n . format ( " fml . button . continue " ) ) ) ; <nl> - } <nl> - this . buttonList . add ( new GuiButton ( 2 , this . width / 2 + 5 , this . height - 38 , this . width / 2 - 55 , 20 , I18n . format ( " fml . button . visitjavadownloads " ) ) ) ; <nl> - } <nl> - <nl> - @ Override <nl> - protected void actionPerformed ( GuiButton button ) <nl> - { <nl> - if ( button . id = = 1 ) <nl> - { <nl> - FMLClientHandler . instance ( ) . showGuiScreen ( null ) ; <nl> - } <nl> - else if ( button . id = = 2 ) <nl> - { <nl> - try <nl> - { <nl> - Desktop . getDesktop ( ) . browse ( new URI ( " http : / / www . oracle . com / technetwork / java / javase / downloads / index . html " ) ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - FMLLog . log . error ( " Problem launching browser " , e ) ; <nl> - } <nl> - } <nl> - else <nl> - { <nl> - super . actionPerformed ( button ) ; <nl> - } <nl> - } <nl> - <nl> - @ Override <nl> - public void drawScreen ( int mouseX , int mouseY , float partialTicks ) <nl> - { <nl> - this . drawDefaultBackground ( ) ; <nl> - int offset = 25 ; <nl> - if ( ! java8VersionException . getMods ( ) . isEmpty ( ) ) <nl> - { <nl> - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . java8problem " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) , this . width / 2 , offset , 0xFFFFFF ) ; <nl> - } <nl> - else <nl> - { <nl> - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . java8recommended " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) , this . width / 2 , offset , 0xFFFFFF ) ; <nl> - } <nl> - offset + = 15 ; <nl> - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . javaversion " , System . getProperty ( " java . version " ) . split ( " \ \ . " ) [ 1 ] , System . getProperty ( " java . version " ) ) , this . width / 2 , offset , 0xFFFFFF ) ; <nl> - offset + = 10 ; <nl> - if ( ! java8VersionException . getMods ( ) . isEmpty ( ) ) <nl> - { <nl> - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . upgradejavaorremove " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) , this . width / 2 , offset , 0xFFFFFF ) ; <nl> - offset + = 15 ; <nl> - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . modslistedbelow " , I18n . format ( " fml . messages . requirejava8 " ) ) , this . width / 2 , offset , 0xFFFFFF ) ; <nl> - offset + = 10 ; <nl> - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . countbadandgood " , java8VersionException . getMods ( ) . size ( ) , Loader . instance ( ) . getActiveModList ( ) . size ( ) ) , this . width / 2 , offset , 0xFFFFFF ) ; <nl> - offset + = 5 ; <nl> - for ( ModContainer mc : java8VersionException . getMods ( ) ) <nl> - { <nl> - offset + = 10 ; <nl> - this . drawCenteredString ( this . fontRenderer , String . format ( " % s ( % s ) " , mc . getName ( ) , mc . getModId ( ) ) , this . width / 2 , offset , 0xEEEEEE ) ; <nl> - } <nl> - } <nl> - else <nl> - { <nl> - String text = I18n . format ( " fml . messages . upgradejava " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) . replaceAll ( " \ \ \ \ n " , " \ n " ) ; <nl> - List < String > lines = Lists . newArrayList ( ) ; <nl> - for ( String line : text . split ( " \ n " ) ) <nl> - { <nl> - lines . addAll ( this . fontRenderer . listFormattedStringToWidth ( line , this . width - this . fontRenderer . FONT _ HEIGHT * 4 ) ) ; <nl> - } <nl> - <nl> - int maxWidth = 0 ; <nl> - for ( String line : lines ) <nl> - { <nl> - maxWidth = Math . max ( maxWidth , this . fontRenderer . getStringWidth ( line ) ) ; <nl> - } <nl> - <nl> - for ( String line : lines ) <nl> - { <nl> - this . drawString ( this . fontRenderer , line , ( this . width - maxWidth ) / 2 , offset , 0xFFFFFF ) ; <nl> - offset + = this . fontRenderer . FONT _ HEIGHT + 2 ; <nl> - } <nl> - } <nl> - super . drawScreen ( mouseX , mouseY , partialTicks ) ; <nl> - } <nl> - } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / Java8VersionException . java b / src / main / java / net / minecraftforge / fml / common / Java8VersionException . java <nl> deleted file mode 100644 <nl> index 56dad33 . . 0000000 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Java8VersionException . java <nl> + + + / dev / null <nl> @ @ - 1 , 50 + 0 , 0 @ @ <nl> - / * <nl> - * Minecraft Forge <nl> - * Copyright ( c ) 2016 . <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation version 2 . 1 <nl> - * of the License . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * <nl> - * You should have received a copy of the GNU Lesser General Public <nl> - * License along with this library ; if not , write to the Free Software <nl> - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> - * / <nl> - <nl> - package net . minecraftforge . fml . common ; <nl> - <nl> - import java . util . List ; <nl> - <nl> - public class Java8VersionException extends EnhancedRuntimeException <nl> - { <nl> - private static final long serialVersionUID = 1L ; <nl> - private final List < ModContainer > mods ; <nl> - <nl> - public Java8VersionException ( List < ModContainer > mods ) <nl> - { <nl> - super ( " Mods require Java 8 " ) ; <nl> - this . mods = mods ; <nl> - } <nl> - <nl> - @ Override <nl> - protected void printStackTrace ( WrappedPrintStream stream ) <nl> - { <nl> - stream . println ( " Mods requiring Java 8 : " ) ; <nl> - for ( ModContainer mc : mods ) <nl> - { <nl> - stream . println ( String . format ( " \ t % s : % s " , mc . getName ( ) , mc . getModId ( ) ) ) ; <nl> - } <nl> - stream . println ( " " ) ; <nl> - } <nl> - <nl> - public List < ModContainer > getMods ( ) <nl> - { <nl> - return mods ; <nl> - } <nl> - } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> index 6ffb788 . . 5a5f628 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> @ @ - 174 , 7 + 174 , 6 @ @ public class Loader <nl> private File forcedModFile ; <nl> private ModDiscoverer discoverer ; <nl> private ProgressBar progressBar ; <nl> - public final boolean java8 ; <nl> <nl> public static Loader instance ( ) <nl> { <nl> @ @ - 201 , 14 + 200 , 6 @ @ public class Loader <nl> <nl> private Loader ( ) <nl> { <nl> - String [ ] ver = System . getProperty ( " java . version " ) . split ( " \ \ . " ) ; <nl> - int major = Integer . parseInt ( ver [ 1 ] ) ; <nl> - java8 = major > 7 ; <nl> - if ( ! java8 ) <nl> - { <nl> - FMLLog . log . fatal ( " The game is not running with Java 8 . Forge recommends Java 8 for maximum compatibility with mods " ) ; <nl> - } <nl> - <nl> modClassLoader = new ModClassLoader ( getClass ( ) . getClassLoader ( ) ) ; <nl> if ( mccversion ! = null & & ! mccversion . equals ( MC _ VERSION ) ) <nl> { <nl> @ @ - 555 , 7 + 546 , 6 @ @ public class Loader <nl> ModAPIManager . INSTANCE . manageAPI ( modClassLoader , discoverer ) ; <nl> disableRequestedMods ( ) ; <nl> modController . distributeStateMessage ( FMLLoadEvent . class ) ; <nl> - checkJavaCompatibility ( ) ; <nl> sortModList ( ) ; <nl> ModAPIManager . INSTANCE . cleanupAPIContainers ( modController . getActiveModList ( ) ) ; <nl> ModAPIManager . INSTANCE . cleanupAPIContainers ( mods ) ; <nl> @ @ - 613 , 24 + 603 , 6 @ @ public class Loader <nl> modController . transition ( LoaderState . PREINITIALIZATION , false ) ; <nl> } <nl> <nl> - <nl> - private void checkJavaCompatibility ( ) <nl> - { <nl> - if ( java8 ) return ; <nl> - List < ModContainer > j8mods = Lists . newArrayList ( ) ; <nl> - for ( ModContainer mc : getActiveModList ( ) ) <nl> - { <nl> - if ( mc . getClassVersion ( ) > = 52 ) <nl> - { <nl> - j8mods . add ( mc ) ; <nl> - } <nl> - } <nl> - if ( ! j8mods . isEmpty ( ) ) <nl> - { <nl> - throw new Java8VersionException ( j8mods ) ; <nl> - } <nl> - } <nl> - <nl> public void preinitializeMods ( ) <nl> { <nl> if ( ! modController . isInState ( LoaderState . PREINITIALIZATION ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java b / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java <nl> index dde3ca0 . . 8385a50 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java <nl> @ @ - 131 , 11 + 131 , 7 @ @ public class ASMModParser <nl> <nl> public void validate ( ) <nl> { <nl> - / / if ( classVersion > 50 . 0 ) <nl> - / / { <nl> - / / <nl> - / / throw new LoaderException ( new RuntimeException ( " Mod compiled for Java 7 detected " ) ) ; <nl> - / / } <nl> + <nl> } <nl> <nl> public boolean isBaseMod ( List < String > rememberedTypes ) <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index 16c4ed4 . . ad8e613 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 49 , 7 + 49 , 6 @ @ forge . configgui . zombieBaseSummonChance = Zombie Summon Chance <nl> forge . configgui . stencilbits = Enable GL Stencil Bits <nl> forge . configgui . replaceBuckets = Use Forge ' s bucket model <nl> forge . configgui . forgeLightPipelineEnabled = Forge Light Pipeline Enabled <nl> - forge . configgui . java8Reminder = Java 8 Reminder timestamp <nl> forge . configgui . disableStairSlabCulling = Disable Stair / Slab culling . <nl> forge . configgui . zoomInMissingModelTextInGui = Zoom in Missing model text in the GUI <nl> forge . configgui . disableStairSlabCulling . tooltip = Enable this if you see through blocks touching stairs / slabs with your resource pack . <nl> @ @ - 167 , 16 + 166 , 6 @ @ fml . menu . modoptions = Mod Options . . . <nl> <nl> item . forge . bucketFilled . name = % s Bucket <nl> <nl> - fml . messages . java8problem = % s % sJava Update Required % s <nl> - fml . messages . java8recommended = % s % sJava Update Recommended % s <nl> - fml . messages . modslistedbelow = The mods listed below % s <nl> - fml . messages . requirejava8 = require Java 8 <nl> - fml . messages . java8warning . 1 = % sJAVA VERSION WARNING % s UPDATE JAVA ! <nl> - fml . messages . java8warning . 2 = You need to update Java <nl> - fml . messages . javaversion = Your Java version is Java % s ( version string % s ) <nl> - fml . messages . upgradejavaorremove = % s % sUpdate Java % s or remove these mods to play <nl> - fml . messages . upgradejava = \ n \ nPros of updating to Java 8 \ n - Better Performance \ n - Better Security \ n - Better Compatibility with newer mods <nl> - fml . messages . countbadandgood = % s of % s mods have this problem <nl> fml . messages . mod . missing . dependencies = % s is missing mods it depends on . <nl> fml . messages . mod . missing . dependencies . fix = Include the following mods or remove % s . <nl> fml . messages . mod . missing . dependencies . see . log = See ' % s ' for technical information . <nl> @ @ - 193 , 7 + 182 , 6 @ @ fml . messages . version . restriction . upper . inclusive = % s or below <nl> fml . messages . version . restriction . upper . exclusive = below % s <nl> fml . messages . version . restriction . bounded = between % s and % s <nl> <nl> - fml . button . visitjavadownloads = Oracle Java SE Downloads <nl> fml . button . continue = Continue <nl> fml . button . open . mods . folder = Open Mods Folder <nl> fml . button . open . file = Open % s

TEST DIFF:
diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java 
 index 6fd7bb2 . . 69ed15e 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / ModSorter . java 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 
 package net . minecraftforge . fml . loading ; 
 
 + import com . google . common . collect . Streams ; 
 import com . google . common . graph . GraphBuilder ; 
 import com . google . common . graph . MutableGraph ; 
 import net . minecraftforge . forgespi . language . IModFileInfo ; 
 @ @ - 77 , 9 + 78 , 10 @ @ public class ModSorter 
 } 
 
 private void findLanguages ( ) { 
 - modFiles . stream ( ) . forEach ( mf - > mf . identifyLanguage ( ) ) ; 
 + modFiles . forEach ( ModFile : : identifyLanguage ) ; 
 } 
 
 + @ SuppressWarnings ( " UnstableApiUsage " ) 
 private void sort ( ) 
 { 
 / / lambdas are identity based , so sorting them is impossible unless you hold reference to them 
 @ @ - 118 , 6 + 120 , 7 @ @ public class ModSorter 
 this . modFiles = sorted . stream ( ) . map ( ModFileInfo : : getFile ) . collect ( Collectors . toList ( ) ) ; 
 } 
 
 + @ SuppressWarnings ( " UnstableApiUsage " ) 
 private void addDependency ( MutableGraph < ModFileInfo > topoGraph , IModInfo . ModVersion dep ) 
 { 
 ModFileInfo self = ( ModFileInfo ) dep . getOwner ( ) . getOwningFile ( ) ; 
 @ @ - 138 , 7 + 141 , 7 @ @ public class ModSorter 
 
 private void buildUniqueList ( ) 
 { 
 - final Stream < ModInfo > modInfos = modFiles . stream ( ) . map ( ModFile : : getModInfos ) . flatMap ( Collection : : stream ) . map ( ModInfo . class : : cast ) ; 
 + final Stream < ModInfo > modInfos = Stream . concat ( DefaultModInfos . getModInfos ( ) . stream ( ) , modFiles . stream ( ) . map ( ModFile : : getModInfos ) . flatMap ( Collection : : stream ) ) . map ( ModInfo . class : : cast ) ; 
 final Map < String , List < ModInfo > > modIds = modInfos . collect ( Collectors . groupingBy ( IModInfo : : getModId ) ) ; 
 
 / / TODO : make this figure out dupe handling better

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch 
 index 70670bf . . f12c53c 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch 
 @ @ - 73 , 12 + 73 , 3 @ @ 
 } 
 
 protected void func _ 73864 _ a ( int p _ 73864 _ 1 _ , int p _ 73864 _ 2 _ , int p _ 73864 _ 3 _ ) throws IOException 
 - @ @ - 562 , 6 + 583 , 8 @ @ 
 - { 
 - this . field _ 146297 _ k . func _ 147108 _ a ( new GuiWinGame ( false , Runnables . doNothing ( ) ) ) ; 
 - } 
 - + 
 - + net . minecraftforge . client . ForgeHooksClient . mainMenuMouseClick ( p _ 73864 _ 1 _ , p _ 73864 _ 2 _ , p _ 73864 _ 3 _ , this . field _ 146289 _ q , this . field _ 146294 _ l ) ; 
 - } 
 - 
 - public void func _ 146281 _ b ( ) 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 57ce4b1 . . bc2e442 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 29 , 7 + 29 , 6 @ @ import java . awt . image . BufferedImage ; 
 import java . io . File ; 
 import java . nio . ByteBuffer ; 
 import java . nio . FloatBuffer ; 
 - import java . util . Collections ; 
 import java . util . Map ; 
 
 import javax . annotation . Nonnull ; 
 @ @ - 115 , 12 + 114 , 8 @ @ import net . minecraftforge . common . model . IModelPart ; 
 import net . minecraftforge . common . model . ITransformation ; 
 import net . minecraftforge . common . model . TRSRTransformation ; 
 import net . minecraftforge . fml . client . FMLClientHandler ; 
 - import net . minecraftforge . fml . client . GuiJava8Error ; 
 import net . minecraftforge . fml . client . registry . ClientRegistry ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 - import net . minecraftforge . fml . common . Java8VersionException ; 
 - import net . minecraftforge . fml . common . Loader ; 
 - import net . minecraftforge . fml . common . ModContainer ; 
 
 import org . apache . commons . lang3 . tuple . Pair ; 
 import org . lwjgl . BufferUtils ; 
 @ @ - 314 , 17 + 309 , 6 @ @ public class ForgeHooksClient 
 gui . drawString ( font , line , ( width - font . getStringWidth ( line ) ) / 2 , 4 + ( 1 * ( font . FONT _ HEIGHT + 1 ) ) , - 1 ) ; 
 } 
 
 - if ( ! Loader . instance ( ) . java8 ) 
 - { 
 - String line = I18n . format ( " fml . messages . java8warning . 1 " , TextFormatting . RED , TextFormatting . RESET ) ; 
 - gui . drawString ( font , line , ( width - font . getStringWidth ( line ) ) / 2 , 4 + ( 8 * ( font . FONT _ HEIGHT + 1 ) ) , - 1 ) ; 
 - line = I18n . format ( " fml . messages . java8warning . 2 " ) ; 
 - gui . drawString ( font , line , ( width - font . getStringWidth ( line ) ) / 2 , 4 + ( 9 * ( font . FONT _ HEIGHT + 1 ) ) , - 1 ) ; 
 - splashText = updatescrollcounter < 50 ? " UPDATE ! " : " JAVA ! " ; 
 - updatescrollcounter + = 1 ; 
 - updatescrollcounter % = 100 ; 
 - } 
 - 
 String line = null ; 
 switch ( status ) 
 { 
 @ @ - 345 , 22 + 329 , 6 @ @ public class ForgeHooksClient 
 return splashText ; 
 } 
 
 - public static void mainMenuMouseClick ( int mouseX , int mouseY , int mouseButton , FontRenderer font , int width ) 
 - { 
 - if ( ! Loader . instance ( ) . java8 ) 
 - { 
 - if ( mouseY > = ( 4 + ( 8 * 10 ) ) & & mouseY < ( 4 + ( 10 * 10 ) ) ) 
 - { 
 - int w = font . getStringWidth ( I18n . format ( " fml . messages . java8warning . 1 " , TextFormatting . RED , TextFormatting . RESET ) ) ; 
 - w = Math . max ( w , font . getStringWidth ( I18n . format ( " fml . messages . java8warning . 2 " ) ) ) ; 
 - if ( mouseX > = ( ( width - w ) / 2 ) & & mouseX < = ( ( width + w ) / 2 ) ) 
 - { 
 - FMLClientHandler . instance ( ) . showGuiScreen ( new GuiJava8Error ( new Java8VersionException ( Collections . < ModContainer > emptyList ( ) ) ) ) ; 
 - } 
 - } 
 - } 
 - } 
 - 
 public static ISound playSound ( SoundManager manager , ISound sound ) 
 { 
 PlaySoundEvent e = new PlaySoundEvent ( manager , sound ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index 42f14ee . . b27400c 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 36 , 7 + 36 , 6 @ @ import java . security . cert . Certificate ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . Collections ; 
 - import java . util . Date ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 @ @ - 121 , 7 + 120 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 public static boolean forgeLightPipelineEnabled = true ; 
 public static boolean replaceVanillaBucketModel = true ; 
 public static boolean zoomInMissingModelTextInGui = false ; 
 - public static long java8Reminder = 0 ; 
 public static boolean disableStairSlabCulling = false ; / / Also known as the " DontCullStairsBecauseIUseACrappyTexturePackThatBreaksBasicBlockShapesSoICantTrustBasicBlockCulling " flag 
 public static boolean alwaysSetupTerrainOffThread = false ; / / In RenderGlobal . setupTerrain , always force the chunk render updates to be queued to the thread 
 public static int dimensionUnloadQueueDelay = 0 ; 
 @ @ - 322 , 12 + 320 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 prop . setLanguageKey ( " forge . configgui . zoomInMissingModelTextInGui " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , 0 , 
 - " The timestamp of the last reminder to update to Java 8 in number of milliseconds since January 1 , 1970 , 00 : 00 : 00 GMT . Nag will show only once every 24 hours . To disable it set this to some really high number . " ) ; 
 - java8Reminder = prop . getLong ( 0 ) ; 
 - prop . setLanguageKey ( " forge . configgui . java8Reminder " ) ; 
 - propOrder . add ( prop . getName ( ) ) ; 
 - 
 prop = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , false , 
 " Disable culling of hidden faces next to stairs and slabs . Causes extra rendering , but may fix some resource packs that exploit this vanilla mechanic . " ) ; 
 disableStairSlabCulling = prop . getBoolean ( false ) ; 
 @ @ - 349 , 13 + 341 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 } 
 } 
 
 - public static void updateNag ( ) 
 - { 
 - Property prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , java8Reminder ) ; 
 - prop . set ( ( new Date ( ) ) . getTime ( ) ) ; 
 - config . save ( ) ; 
 - } 
 - 
 / * * 
 * By subscribing to the OnConfigChangedEvent we are able to execute code when our config screens are closed . 
 * This implementation uses the optional configID string to handle multiple Configurations using one event handler . 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index 2d8725d . . 2a2e2e1 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 26 , 7 + 26 , 6 @ @ import java . lang . ref . WeakReference ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . Collections ; 
 - import java . util . Date ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Map . Entry ; 
 @ @ - 81 , 7 + 80 , 6 @ @ import net . minecraft . world . WorldSettings ; 
 import net . minecraft . world . storage . WorldSummary ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . client . event . ModelRegistryEvent ; 
 - import net . minecraftforge . common . ForgeModContainer ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . config . ConfigManager ; 
 import net . minecraftforge . common . util . CompoundDataFixer ; 
 @ @ - 92 , 7 + 90 , 6 @ @ import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLContainerHolder ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . IFMLSidedHandler ; 
 - import net . minecraftforge . fml . common . Java8VersionException ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . LoaderException ; 
 import net . minecraftforge . fml . common . MetadataCollection ; 
 @ @ - 179 , 8 + 176 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 
 private boolean loading = true ; 
 
 - private Java8VersionException j8onlymods ; 
 - 
 private WrongMinecraftVersionException wrongMC ; 
 
 private CustomModLoadingErrorDisplayException customError ; 
 @ @ - 240 , 10 + 235 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 dupesFound = dupes ; 
 } 
 - catch ( Java8VersionException j8mods ) 
 - { 
 - j8onlymods = j8mods ; 
 - } 
 catch ( MissingModsException missing ) 
 { 
 modsMissing = missing ; 
 @ @ - 338 , 7 + 329 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 
 public boolean hasError ( ) 
 { 
 - return modsMissing ! = null | | wrongMC ! = null | | customError ! = null | | dupesFound ! = null | | modSorting ! = null | | j8onlymods ! = null | | multipleModsErrored ! = null ; 
 + return modsMissing ! = null | | wrongMC ! = null | | customError ! = null | | dupesFound ! = null | | modSorting ! = null | | multipleModsErrored ! = null ; 
 } 
 
 / * * 
 @ @ - 440 , 10 + 431 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 showGuiScreen ( new GuiWrongMinecraft ( wrongMC ) ) ; 
 } 
 - else if ( j8onlymods ! = null ) 
 - { 
 - showGuiScreen ( new GuiJava8Error ( j8onlymods ) ) ; 
 - } 
 else if ( modsMissing ! = null ) 
 { 
 showGuiScreen ( new GuiModsMissing ( modsMissing ) ) ; 
 @ @ - 467 , 14 + 454 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 else 
 { 
 logMissingTextureErrors ( ) ; 
 - if ( ! Loader . instance ( ) . java8 ) 
 - { 
 - if ( ( new Date ( ) ) . getTime ( ) > = ForgeModContainer . java8Reminder + ( 1000 * 60 * 60 * 24 ) ) 
 - { 
 - showGuiScreen ( new GuiJava8Error ( new Java8VersionException ( Collections . < ModContainer > emptyList ( ) ) ) ) ; 
 - ForgeModContainer . updateNag ( ) ; 
 - } 
 - } 
 } 
 } 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiJava8Error . java b / src / main / java / net / minecraftforge / fml / client / GuiJava8Error . java 
 deleted file mode 100644 
 index d986948 . . 0000000 
 - - - a / src / main / java / net / minecraftforge / fml / client / GuiJava8Error . java 
 + + + / dev / null 
 @ @ - 1 , 136 + 0 , 0 @ @ 
 - / * 
 - * Minecraft Forge 
 - * Copyright ( c ) 2016 . 
 - * 
 - * This library is free software ; you can redistribute it and / or 
 - * modify it under the terms of the GNU Lesser General Public 
 - * License as published by the Free Software Foundation version 2 . 1 
 - * of the License . 
 - * 
 - * This library is distributed in the hope that it will be useful , 
 - * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - * Lesser General Public License for more details . 
 - * 
 - * You should have received a copy of the GNU Lesser General Public 
 - * License along with this library ; if not , write to the Free Software 
 - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 - * / 
 - 
 - package net . minecraftforge . fml . client ; 
 - 
 - import net . minecraft . client . gui . GuiButton ; 
 - import net . minecraft . client . resources . I18n ; 
 - import net . minecraft . util . text . TextFormatting ; 
 - import net . minecraftforge . fml . common . FMLCommonHandler ; 
 - import net . minecraftforge . fml . common . FMLLog ; 
 - import net . minecraftforge . fml . common . Java8VersionException ; 
 - import net . minecraftforge . fml . common . Loader ; 
 - import net . minecraftforge . fml . common . ModContainer ; 
 - import org . apache . logging . log4j . Level ; 
 - 
 - import com . google . common . collect . Lists ; 
 - 
 - import java . awt . Desktop ; 
 - import java . net . URI ; 
 - import java . util . List ; 
 - 
 - public class GuiJava8Error extends GuiErrorBase 
 - { 
 - private Java8VersionException java8VersionException ; 
 - public GuiJava8Error ( Java8VersionException java8VersionException ) 
 - { 
 - this . java8VersionException = java8VersionException ; 
 - } 
 - 
 - @ Override 
 - public void initGui ( ) 
 - { 
 - super . initGui ( ) ; 
 - this . buttonList . remove ( 1 ) ; 
 - if ( java8VersionException . getMods ( ) . isEmpty ( ) ) 
 - { 
 - this . buttonList . remove ( 0 ) ; 
 - this . buttonList . add ( new GuiButton ( 1 , 50 , this . height - 38 , this . width / 2 - 55 , 20 , I18n . format ( " fml . button . continue " ) ) ) ; 
 - } 
 - this . buttonList . add ( new GuiButton ( 2 , this . width / 2 + 5 , this . height - 38 , this . width / 2 - 55 , 20 , I18n . format ( " fml . button . visitjavadownloads " ) ) ) ; 
 - } 
 - 
 - @ Override 
 - protected void actionPerformed ( GuiButton button ) 
 - { 
 - if ( button . id = = 1 ) 
 - { 
 - FMLClientHandler . instance ( ) . showGuiScreen ( null ) ; 
 - } 
 - else if ( button . id = = 2 ) 
 - { 
 - try 
 - { 
 - Desktop . getDesktop ( ) . browse ( new URI ( " http : / / www . oracle . com / technetwork / java / javase / downloads / index . html " ) ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - FMLLog . log . error ( " Problem launching browser " , e ) ; 
 - } 
 - } 
 - else 
 - { 
 - super . actionPerformed ( button ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void drawScreen ( int mouseX , int mouseY , float partialTicks ) 
 - { 
 - this . drawDefaultBackground ( ) ; 
 - int offset = 25 ; 
 - if ( ! java8VersionException . getMods ( ) . isEmpty ( ) ) 
 - { 
 - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . java8problem " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) , this . width / 2 , offset , 0xFFFFFF ) ; 
 - } 
 - else 
 - { 
 - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . java8recommended " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) , this . width / 2 , offset , 0xFFFFFF ) ; 
 - } 
 - offset + = 15 ; 
 - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . javaversion " , System . getProperty ( " java . version " ) . split ( " \ \ . " ) [ 1 ] , System . getProperty ( " java . version " ) ) , this . width / 2 , offset , 0xFFFFFF ) ; 
 - offset + = 10 ; 
 - if ( ! java8VersionException . getMods ( ) . isEmpty ( ) ) 
 - { 
 - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . upgradejavaorremove " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) , this . width / 2 , offset , 0xFFFFFF ) ; 
 - offset + = 15 ; 
 - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . modslistedbelow " , I18n . format ( " fml . messages . requirejava8 " ) ) , this . width / 2 , offset , 0xFFFFFF ) ; 
 - offset + = 10 ; 
 - this . drawCenteredString ( this . fontRenderer , I18n . format ( " fml . messages . countbadandgood " , java8VersionException . getMods ( ) . size ( ) , Loader . instance ( ) . getActiveModList ( ) . size ( ) ) , this . width / 2 , offset , 0xFFFFFF ) ; 
 - offset + = 5 ; 
 - for ( ModContainer mc : java8VersionException . getMods ( ) ) 
 - { 
 - offset + = 10 ; 
 - this . drawCenteredString ( this . fontRenderer , String . format ( " % s ( % s ) " , mc . getName ( ) , mc . getModId ( ) ) , this . width / 2 , offset , 0xEEEEEE ) ; 
 - } 
 - } 
 - else 
 - { 
 - String text = I18n . format ( " fml . messages . upgradejava " , TextFormatting . RED , TextFormatting . BOLD , TextFormatting . RESET ) . replaceAll ( " \ \ \ \ n " , " \ n " ) ; 
 - List < String > lines = Lists . newArrayList ( ) ; 
 - for ( String line : text . split ( " \ n " ) ) 
 - { 
 - lines . addAll ( this . fontRenderer . listFormattedStringToWidth ( line , this . width - this . fontRenderer . FONT _ HEIGHT * 4 ) ) ; 
 - } 
 - 
 - int maxWidth = 0 ; 
 - for ( String line : lines ) 
 - { 
 - maxWidth = Math . max ( maxWidth , this . fontRenderer . getStringWidth ( line ) ) ; 
 - } 
 - 
 - for ( String line : lines ) 
 - { 
 - this . drawString ( this . fontRenderer , line , ( this . width - maxWidth ) / 2 , offset , 0xFFFFFF ) ; 
 - offset + = this . fontRenderer . FONT _ HEIGHT + 2 ; 
 - } 
 - } 
 - super . drawScreen ( mouseX , mouseY , partialTicks ) ; 
 - } 
 - } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / Java8VersionException . java b / src / main / java / net / minecraftforge / fml / common / Java8VersionException . java 
 deleted file mode 100644 
 index 56dad33 . . 0000000 
 - - - a / src / main / java / net / minecraftforge / fml / common / Java8VersionException . java 
 + + + / dev / null 
 @ @ - 1 , 50 + 0 , 0 @ @ 
 - / * 
 - * Minecraft Forge 
 - * Copyright ( c ) 2016 . 
 - * 
 - * This library is free software ; you can redistribute it and / or 
 - * modify it under the terms of the GNU Lesser General Public 
 - * License as published by the Free Software Foundation version 2 . 1 
 - * of the License . 
 - * 
 - * This library is distributed in the hope that it will be useful , 
 - * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - * Lesser General Public License for more details . 
 - * 
 - * You should have received a copy of the GNU Lesser General Public 
 - * License along with this library ; if not , write to the Free Software 
 - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 - * / 
 - 
 - package net . minecraftforge . fml . common ; 
 - 
 - import java . util . List ; 
 - 
 - public class Java8VersionException extends EnhancedRuntimeException 
 - { 
 - private static final long serialVersionUID = 1L ; 
 - private final List < ModContainer > mods ; 
 - 
 - public Java8VersionException ( List < ModContainer > mods ) 
 - { 
 - super ( " Mods require Java 8 " ) ; 
 - this . mods = mods ; 
 - } 
 - 
 - @ Override 
 - protected void printStackTrace ( WrappedPrintStream stream ) 
 - { 
 - stream . println ( " Mods requiring Java 8 : " ) ; 
 - for ( ModContainer mc : mods ) 
 - { 
 - stream . println ( String . format ( " \ t % s : % s " , mc . getName ( ) , mc . getModId ( ) ) ) ; 
 - } 
 - stream . println ( " " ) ; 
 - } 
 - 
 - public List < ModContainer > getMods ( ) 
 - { 
 - return mods ; 
 - } 
 - } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 index 6ffb788 . . 5a5f628 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 @ @ - 174 , 7 + 174 , 6 @ @ public class Loader 
 private File forcedModFile ; 
 private ModDiscoverer discoverer ; 
 private ProgressBar progressBar ; 
 - public final boolean java8 ; 
 
 public static Loader instance ( ) 
 { 
 @ @ - 201 , 14 + 200 , 6 @ @ public class Loader 
 
 private Loader ( ) 
 { 
 - String [ ] ver = System . getProperty ( " java . version " ) . split ( " \ \ . " ) ; 
 - int major = Integer . parseInt ( ver [ 1 ] ) ; 
 - java8 = major > 7 ; 
 - if ( ! java8 ) 
 - { 
 - FMLLog . log . fatal ( " The game is not running with Java 8 . Forge recommends Java 8 for maximum compatibility with mods " ) ; 
 - } 
 - 
 modClassLoader = new ModClassLoader ( getClass ( ) . getClassLoader ( ) ) ; 
 if ( mccversion ! = null & & ! mccversion . equals ( MC _ VERSION ) ) 
 { 
 @ @ - 555 , 7 + 546 , 6 @ @ public class Loader 
 ModAPIManager . INSTANCE . manageAPI ( modClassLoader , discoverer ) ; 
 disableRequestedMods ( ) ; 
 modController . distributeStateMessage ( FMLLoadEvent . class ) ; 
 - checkJavaCompatibility ( ) ; 
 sortModList ( ) ; 
 ModAPIManager . INSTANCE . cleanupAPIContainers ( modController . getActiveModList ( ) ) ; 
 ModAPIManager . INSTANCE . cleanupAPIContainers ( mods ) ; 
 @ @ - 613 , 24 + 603 , 6 @ @ public class Loader 
 modController . transition ( LoaderState . PREINITIALIZATION , false ) ; 
 } 
 
 - 
 - private void checkJavaCompatibility ( ) 
 - { 
 - if ( java8 ) return ; 
 - List < ModContainer > j8mods = Lists . newArrayList ( ) ; 
 - for ( ModContainer mc : getActiveModList ( ) ) 
 - { 
 - if ( mc . getClassVersion ( ) > = 52 ) 
 - { 
 - j8mods . add ( mc ) ; 
 - } 
 - } 
 - if ( ! j8mods . isEmpty ( ) ) 
 - { 
 - throw new Java8VersionException ( j8mods ) ; 
 - } 
 - } 
 - 
 public void preinitializeMods ( ) 
 { 
 if ( ! modController . isInState ( LoaderState . PREINITIALIZATION ) ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java b / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java 
 index dde3ca0 . . 8385a50 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / discovery / asm / ASMModParser . java 
 @ @ - 131 , 11 + 131 , 7 @ @ public class ASMModParser 
 
 public void validate ( ) 
 { 
 - / / if ( classVersion > 50 . 0 ) 
 - / / { 
 - / / 
 - / / throw new LoaderException ( new RuntimeException ( " Mod compiled for Java 7 detected " ) ) ; 
 - / / } 
 + 
 } 
 
 public boolean isBaseMod ( List < String > rememberedTypes ) 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index 16c4ed4 . . ad8e613 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 49 , 7 + 49 , 6 @ @ forge . configgui . zombieBaseSummonChance = Zombie Summon Chance 
 forge . configgui . stencilbits = Enable GL Stencil Bits 
 forge . configgui . replaceBuckets = Use Forge ' s bucket model 
 forge . configgui . forgeLightPipelineEnabled = Forge Light Pipeline Enabled 
 - forge . configgui . java8Reminder = Java 8 Reminder timestamp 
 forge . configgui . disableStairSlabCulling = Disable Stair / Slab culling . 
 forge . configgui . zoomInMissingModelTextInGui = Zoom in Missing model text in the GUI 
 forge . configgui . disableStairSlabCulling . tooltip = Enable this if you see through blocks touching stairs / slabs with your resource pack . 
 @ @ - 167 , 16 + 166 , 6 @ @ fml . menu . modoptions = Mod Options . . . 
 
 item . forge . bucketFilled . name = % s Bucket 
 
 - fml . messages . java8problem = % s % sJava Update Required % s 
 - fml . messages . java8recommended = % s % sJava Update Recommended % s 
 - fml . messages . modslistedbelow = The mods listed below % s 
 - fml . messages . requirejava8 = require Java 8 
 - fml . messages . java8warning . 1 = % sJAVA VERSION WARNING % s UPDATE JAVA ! 
 - fml . messages . java8warning . 2 = You need to update Java 
 - fml . messages . javaversion = Your Java version is Java % s ( version string % s ) 
 - fml . messages . upgradejavaorremove = % s % sUpdate Java % s or remove these mods to play 
 - fml . messages . upgradejava = \ n \ nPros of updating to Java 8 \ n - Better Performance \ n - Better Security \ n - Better Compatibility with newer mods 
 - fml . messages . countbadandgood = % s of % s mods have this problem 
 fml . messages . mod . missing . dependencies = % s is missing mods it depends on . 
 fml . messages . mod . missing . dependencies . fix = Include the following mods or remove % s . 
 fml . messages . mod . missing . dependencies . see . log = See ' % s ' for technical information . 
 @ @ - 193 , 7 + 182 , 6 @ @ fml . messages . version . restriction . upper . inclusive = % s or below 
 fml . messages . version . restriction . upper . exclusive = below % s 
 fml . messages . version . restriction . bounded = between % s and % s 
 
 - fml . button . visitjavadownloads = Oracle Java SE Downloads 
 fml . button . continue = Continue 
 fml . button . open . mods . folder = Open Mods Folder 
 fml . button . open . file = Open % s
