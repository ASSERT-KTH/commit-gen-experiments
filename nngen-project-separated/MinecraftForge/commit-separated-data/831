BLEU SCORE: 0.035922150581698245

TEST MSG: Fix race condition when using indexed codec in a LAN server . Fixes spurious crash when LAN server is running .
GENERATED MSG: Log when it ' s likely the indexedcodec is gonna fail , because of LAN server derps likely . Try and give some context for debuggers .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> index 62ff2dd . . c168081 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> @ @ - 69 , 7 + 69 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag <nl> protected final void decode ( ChannelHandlerContext ctx , FMLProxyPacket msg , List < Object > out ) throws Exception <nl> { <nl> testMessageValidity ( msg ) ; <nl> - ByteBuf payload = msg . payload ( ) . copy ( ) ; <nl> + ByteBuf payload = msg . payload ( ) . duplicate ( ) ; <nl> if ( payload . readableBytes ( ) < 1 ) <nl> { <nl> FMLLog . log ( Level . ERROR , " The FMLIndexedCodec has received an empty buffer on channel % s , likely a result of a LAN server issue . Pipeline parts : % s " , ctx . channel ( ) . attr ( NetworkRegistry . FML _ CHANNEL ) , ctx . pipeline ( ) . toString ( ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java <nl> index 50aba05 . . 66a9cd3 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java <nl> @ @ - 133 , 7 + 133 , 7 @ @ public class FMLProxyPacket implements Packet < INetHandler > { <nl> <nl> if ( data . length < PART _ SIZE ) <nl> { <nl> - ret . add ( new S3FPacketCustomPayload ( channel , payload ) ) ; <nl> + ret . add ( new S3FPacketCustomPayload ( channel , new PacketBuffer ( payload . duplicate ( ) ) ) ) ; <nl> } <nl> else <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> index 1e4444a . . 62ff2dd 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> @ @ - 70 , 6 + 70 , 10 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag <nl> { <nl> testMessageValidity ( msg ) ; <nl> ByteBuf payload = msg . payload ( ) . copy ( ) ; <nl> + if ( payload . readableBytes ( ) < 1 ) <nl> + { <nl> + FMLLog . log ( Level . ERROR , " The FMLIndexedCodec has received an empty buffer on channel % s , likely a result of a LAN server issue . Pipeline parts : % s " , ctx . channel ( ) . attr ( NetworkRegistry . FML _ CHANNEL ) , ctx . pipeline ( ) . toString ( ) ) ; <nl> + } <nl> byte discriminator = payload . readByte ( ) ; <nl> Class < ? extends A > clazz = discriminators . get ( discriminator ) ; <nl> if ( clazz = = null )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 index 62ff2dd . . c168081 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 @ @ - 69 , 7 + 69 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag 
 protected final void decode ( ChannelHandlerContext ctx , FMLProxyPacket msg , List < Object > out ) throws Exception 
 { 
 testMessageValidity ( msg ) ; 
 - ByteBuf payload = msg . payload ( ) . copy ( ) ; 
 + ByteBuf payload = msg . payload ( ) . duplicate ( ) ; 
 if ( payload . readableBytes ( ) < 1 ) 
 { 
 FMLLog . log ( Level . ERROR , " The FMLIndexedCodec has received an empty buffer on channel % s , likely a result of a LAN server issue . Pipeline parts : % s " , ctx . channel ( ) . attr ( NetworkRegistry . FML _ CHANNEL ) , ctx . pipeline ( ) . toString ( ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java 
 index 50aba05 . . 66a9cd3 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLProxyPacket . java 
 @ @ - 133 , 7 + 133 , 7 @ @ public class FMLProxyPacket implements Packet < INetHandler > { 
 
 if ( data . length < PART _ SIZE ) 
 { 
 - ret . add ( new S3FPacketCustomPayload ( channel , payload ) ) ; 
 + ret . add ( new S3FPacketCustomPayload ( channel , new PacketBuffer ( payload . duplicate ( ) ) ) ) ; 
 } 
 else 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 index 1e4444a . . 62ff2dd 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 @ @ - 70 , 6 + 70 , 10 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag 
 { 
 testMessageValidity ( msg ) ; 
 ByteBuf payload = msg . payload ( ) . copy ( ) ; 
 + if ( payload . readableBytes ( ) < 1 ) 
 + { 
 + FMLLog . log ( Level . ERROR , " The FMLIndexedCodec has received an empty buffer on channel % s , likely a result of a LAN server issue . Pipeline parts : % s " , ctx . channel ( ) . attr ( NetworkRegistry . FML _ CHANNEL ) , ctx . pipeline ( ) . toString ( ) ) ; 
 + } 
 byte discriminator = payload . readByte ( ) ; 
 Class < ? extends A > clazz = discriminators . get ( discriminator ) ; 
 if ( clazz = = null )
