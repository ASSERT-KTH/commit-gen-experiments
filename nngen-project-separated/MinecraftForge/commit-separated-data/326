BLEU SCORE: 0.15207218222740096

TEST MSG: Fix incorrect lighting of item models
GENERATED MSG: Fix holes in generated item models .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java <nl> index 6520fdb . . a249461 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java <nl> @ @ - 372 , 7 + 372 , 7 @ @ public final class ItemLayerModel implements IModel <nl> float v1 = 16f * ( 1f - y1 - dy ) ; <nl> <nl> return buildQuad ( <nl> - format , transform , side . getOpposite ( ) , sprite , tint , / / getOpposite is related either to the swapping of V direction , or something else <nl> + format , transform , remap ( side ) , sprite , tint , <nl> x0 , y0 , z0 , sprite . getInterpolatedU ( u0 ) , sprite . getInterpolatedV ( v0 ) , <nl> x1 , y1 , z0 , sprite . getInterpolatedU ( u1 ) , sprite . getInterpolatedV ( v1 ) , <nl> x1 , y1 , z1 , sprite . getInterpolatedU ( u1 ) , sprite . getInterpolatedV ( v1 ) , <nl> @ @ - 380 , 7 + 380 , 13 @ @ public final class ItemLayerModel implements IModel <nl> ) ; <nl> } <nl> <nl> - private static final BakedQuad buildQuad ( <nl> + private static EnumFacing remap ( EnumFacing side ) <nl> + { <nl> + / / getOpposite is related to the swapping of V direction <nl> + return side . getAxis ( ) = = EnumFacing . Axis . Y ? side . getOpposite ( ) : side ; <nl> + } <nl> + <nl> + private static BakedQuad buildQuad ( <nl> VertexFormat format , Optional < TRSRTransformation > transform , EnumFacing side , TextureAtlasSprite sprite , int tint , <nl> float x0 , float y0 , float z0 , float u0 , float v0 , <nl> float x1 , float y1 , float z1 , float u1 , float v1 ,
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java <nl> index 396c4e6 . . 6c405c9 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java <nl> @ @ - 214 , 31 + 214 , 75 @ @ public class ItemLayerModel implements IRetexturableModel { <nl> <nl> private static BakedQuad buildSideQuad ( VertexFormat format , TRSRTransformation transform , EnumFacing side , int tint , TextureAtlasSprite sprite , int u , int v ) <nl> { <nl> + final float eps0 = 30e - 5f ; <nl> + final float eps1 = 45e - 5f ; <nl> + final float eps2 = . 5f ; <nl> + final float eps3 = . 5f ; <nl> float x0 = ( float ) u / sprite . getIconWidth ( ) ; <nl> float y0 = ( float ) v / sprite . getIconHeight ( ) ; <nl> float x1 = x0 , y1 = y0 ; <nl> - float z1 = 7 . 5f / 16f , z2 = 8 . 5f / 16f ; <nl> + float z1 = 7 . 5f / 16f - eps1 , z2 = 8 . 5f / 16f + eps1 ; <nl> switch ( side ) <nl> { <nl> case WEST : <nl> - z1 = 8 . 5f / 16f ; <nl> - z2 = 7 . 5f / 16f ; <nl> + z1 = 8 . 5f / 16f + eps1 ; <nl> + z2 = 7 . 5f / 16f - eps1 ; <nl> case EAST : <nl> y1 = ( v + 1f ) / sprite . getIconHeight ( ) ; <nl> break ; <nl> case DOWN : <nl> - z1 = 8 . 5f / 16f ; <nl> - z2 = 7 . 5f / 16f ; <nl> + z1 = 8 . 5f / 16f + eps1 ; <nl> + z2 = 7 . 5f / 16f - eps1 ; <nl> case UP : <nl> x1 = ( u + 1f ) / sprite . getIconWidth ( ) ; <nl> break ; <nl> default : <nl> throw new IllegalArgumentException ( " can ' t handle z - oriented side " ) ; <nl> } <nl> - float u0 = 16f * ( x0 - side . getDirectionVec ( ) . getX ( ) * 1e - 2f / sprite . getIconWidth ( ) ) ; <nl> - float u1 = 16f * ( x1 - side . getDirectionVec ( ) . getX ( ) * 1e - 2f / sprite . getIconWidth ( ) ) ; <nl> - float v0 = 16f * ( 1f - y0 - side . getDirectionVec ( ) . getY ( ) * 1e - 2f / sprite . getIconHeight ( ) ) ; <nl> - float v1 = 16f * ( 1f - y1 - side . getDirectionVec ( ) . getY ( ) * 1e - 2f / sprite . getIconHeight ( ) ) ; <nl> + float u0 = 16f * ( x0 - side . getDirectionVec ( ) . getX ( ) * eps3 / sprite . getIconWidth ( ) ) ; <nl> + float u1 = 16f * ( x1 - side . getDirectionVec ( ) . getX ( ) * eps3 / sprite . getIconWidth ( ) ) ; <nl> + float v0 = 16f * ( 1f - y0 - side . getDirectionVec ( ) . getY ( ) * eps3 / sprite . getIconHeight ( ) ) ; <nl> + float v1 = 16f * ( 1f - y1 - side . getDirectionVec ( ) . getY ( ) * eps3 / sprite . getIconHeight ( ) ) ; <nl> + switch ( side ) <nl> + { <nl> + case WEST : <nl> + case EAST : <nl> + y0 - = eps1 ; <nl> + y1 + = eps1 ; <nl> + v0 - = eps2 / sprite . getIconHeight ( ) ; <nl> + v1 + = eps2 / sprite . getIconHeight ( ) ; <nl> + break ; <nl> + case DOWN : <nl> + case UP : <nl> + x0 - = eps1 ; <nl> + x1 + = eps1 ; <nl> + u0 + = eps2 / sprite . getIconWidth ( ) ; <nl> + u1 - = eps2 / sprite . getIconWidth ( ) ; <nl> + break ; <nl> + default : <nl> + throw new IllegalArgumentException ( " can ' t handle z - oriented side " ) ; <nl> + } <nl> + switch ( side ) <nl> + { <nl> + case WEST : <nl> + x0 + = eps0 ; <nl> + x1 + = eps0 ; <nl> + break ; <nl> + case EAST : <nl> + x0 - = eps0 ; <nl> + x1 - = eps0 ; <nl> + break ; <nl> + case DOWN : <nl> + y0 - = eps0 ; <nl> + y1 - = eps0 ; <nl> + break ; <nl> + case UP : <nl> + y0 + = eps0 ; <nl> + y1 + = eps0 ; <nl> + break ; <nl> + default : <nl> + throw new IllegalArgumentException ( " can ' t handle z - oriented side " ) ; <nl> + } <nl> return buildQuad ( <nl> format , transform , side . getOpposite ( ) , tint , / / getOpposite is related either to the swapping of V direction , or something else <nl> x0 , y0 , z1 , sprite . getInterpolatedU ( u0 ) , sprite . getInterpolatedV ( v0 ) ,

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java 
 index 6520fdb . . a249461 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java 
 @ @ - 372 , 7 + 372 , 7 @ @ public final class ItemLayerModel implements IModel 
 float v1 = 16f * ( 1f - y1 - dy ) ; 
 
 return buildQuad ( 
 - format , transform , side . getOpposite ( ) , sprite , tint , / / getOpposite is related either to the swapping of V direction , or something else 
 + format , transform , remap ( side ) , sprite , tint , 
 x0 , y0 , z0 , sprite . getInterpolatedU ( u0 ) , sprite . getInterpolatedV ( v0 ) , 
 x1 , y1 , z0 , sprite . getInterpolatedU ( u1 ) , sprite . getInterpolatedV ( v1 ) , 
 x1 , y1 , z1 , sprite . getInterpolatedU ( u1 ) , sprite . getInterpolatedV ( v1 ) , 
 @ @ - 380 , 7 + 380 , 13 @ @ public final class ItemLayerModel implements IModel 
 ) ; 
 } 
 
 - private static final BakedQuad buildQuad ( 
 + private static EnumFacing remap ( EnumFacing side ) 
 + { 
 + / / getOpposite is related to the swapping of V direction 
 + return side . getAxis ( ) = = EnumFacing . Axis . Y ? side . getOpposite ( ) : side ; 
 + } 
 + 
 + private static BakedQuad buildQuad ( 
 VertexFormat format , Optional < TRSRTransformation > transform , EnumFacing side , TextureAtlasSprite sprite , int tint , 
 float x0 , float y0 , float z0 , float u0 , float v0 , 
 float x1 , float y1 , float z1 , float u1 , float v1 ,

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java 
 index 396c4e6 . . 6c405c9 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ItemLayerModel . java 
 @ @ - 214 , 31 + 214 , 75 @ @ public class ItemLayerModel implements IRetexturableModel { 
 
 private static BakedQuad buildSideQuad ( VertexFormat format , TRSRTransformation transform , EnumFacing side , int tint , TextureAtlasSprite sprite , int u , int v ) 
 { 
 + final float eps0 = 30e - 5f ; 
 + final float eps1 = 45e - 5f ; 
 + final float eps2 = . 5f ; 
 + final float eps3 = . 5f ; 
 float x0 = ( float ) u / sprite . getIconWidth ( ) ; 
 float y0 = ( float ) v / sprite . getIconHeight ( ) ; 
 float x1 = x0 , y1 = y0 ; 
 - float z1 = 7 . 5f / 16f , z2 = 8 . 5f / 16f ; 
 + float z1 = 7 . 5f / 16f - eps1 , z2 = 8 . 5f / 16f + eps1 ; 
 switch ( side ) 
 { 
 case WEST : 
 - z1 = 8 . 5f / 16f ; 
 - z2 = 7 . 5f / 16f ; 
 + z1 = 8 . 5f / 16f + eps1 ; 
 + z2 = 7 . 5f / 16f - eps1 ; 
 case EAST : 
 y1 = ( v + 1f ) / sprite . getIconHeight ( ) ; 
 break ; 
 case DOWN : 
 - z1 = 8 . 5f / 16f ; 
 - z2 = 7 . 5f / 16f ; 
 + z1 = 8 . 5f / 16f + eps1 ; 
 + z2 = 7 . 5f / 16f - eps1 ; 
 case UP : 
 x1 = ( u + 1f ) / sprite . getIconWidth ( ) ; 
 break ; 
 default : 
 throw new IllegalArgumentException ( " can ' t handle z - oriented side " ) ; 
 } 
 - float u0 = 16f * ( x0 - side . getDirectionVec ( ) . getX ( ) * 1e - 2f / sprite . getIconWidth ( ) ) ; 
 - float u1 = 16f * ( x1 - side . getDirectionVec ( ) . getX ( ) * 1e - 2f / sprite . getIconWidth ( ) ) ; 
 - float v0 = 16f * ( 1f - y0 - side . getDirectionVec ( ) . getY ( ) * 1e - 2f / sprite . getIconHeight ( ) ) ; 
 - float v1 = 16f * ( 1f - y1 - side . getDirectionVec ( ) . getY ( ) * 1e - 2f / sprite . getIconHeight ( ) ) ; 
 + float u0 = 16f * ( x0 - side . getDirectionVec ( ) . getX ( ) * eps3 / sprite . getIconWidth ( ) ) ; 
 + float u1 = 16f * ( x1 - side . getDirectionVec ( ) . getX ( ) * eps3 / sprite . getIconWidth ( ) ) ; 
 + float v0 = 16f * ( 1f - y0 - side . getDirectionVec ( ) . getY ( ) * eps3 / sprite . getIconHeight ( ) ) ; 
 + float v1 = 16f * ( 1f - y1 - side . getDirectionVec ( ) . getY ( ) * eps3 / sprite . getIconHeight ( ) ) ; 
 + switch ( side ) 
 + { 
 + case WEST : 
 + case EAST : 
 + y0 - = eps1 ; 
 + y1 + = eps1 ; 
 + v0 - = eps2 / sprite . getIconHeight ( ) ; 
 + v1 + = eps2 / sprite . getIconHeight ( ) ; 
 + break ; 
 + case DOWN : 
 + case UP : 
 + x0 - = eps1 ; 
 + x1 + = eps1 ; 
 + u0 + = eps2 / sprite . getIconWidth ( ) ; 
 + u1 - = eps2 / sprite . getIconWidth ( ) ; 
 + break ; 
 + default : 
 + throw new IllegalArgumentException ( " can ' t handle z - oriented side " ) ; 
 + } 
 + switch ( side ) 
 + { 
 + case WEST : 
 + x0 + = eps0 ; 
 + x1 + = eps0 ; 
 + break ; 
 + case EAST : 
 + x0 - = eps0 ; 
 + x1 - = eps0 ; 
 + break ; 
 + case DOWN : 
 + y0 - = eps0 ; 
 + y1 - = eps0 ; 
 + break ; 
 + case UP : 
 + y0 + = eps0 ; 
 + y1 + = eps0 ; 
 + break ; 
 + default : 
 + throw new IllegalArgumentException ( " can ' t handle z - oriented side " ) ; 
 + } 
 return buildQuad ( 
 format , transform , side . getOpposite ( ) , tint , / / getOpposite is related either to the swapping of V direction , or something else 
 x0 , y0 , z1 , sprite . getInterpolatedU ( u0 ) , sprite . getInterpolatedV ( v0 ) ,
