BLEU SCORE: 0.01146212677558107

TEST MSG: Revert " Another fix for registry substitutions . Closes # 3212 "
GENERATED MSG: What a dumb oversight . One needs to copy the active substitution set to the active gamedata . Doesn ' t work well otherwise .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index d80f716 . . c7c1993 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 181 , 7 + 181 , 6 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e <nl> this . persistentSubstitutions . clear ( ) ; <nl> this . persistentSubstitutions . putAll ( otherRegistry . getPersistentSubstitutions ( ) ) ; <nl> this . activeSubstitutions . clear ( ) ; <nl> - this . substitutionOriginals . clear ( ) ; <nl> this . dummiedLocations . clear ( ) ; <nl> this . dummiedLocations . addAll ( otherRegistry . dummiedLocations ) ; <nl> <nl> @ @ - 190 , 11 + 189 , 7 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e <nl> <nl> for ( I thing : otherRegistry . typeSafeIterable ( ) ) <nl> { <nl> - ResourceLocation name = otherRegistry . getNameForObject ( thing ) ; <nl> - if ( otherRegistry . activeSubstitutions . containsKey ( name ) ) / / If this is subed , use the orig , the loop below will reinstate the sub . <nl> - addObjectRaw ( otherRegistry . getId ( thing ) , name , otherRegistry . substitutionOriginals . get ( name ) ) ; <nl> - else <nl> - addObjectRaw ( otherRegistry . getId ( thing ) , name , thing ) ; <nl> + addObjectRaw ( otherRegistry . getId ( thing ) , otherRegistry . getNameForObject ( thing ) , thing ) ; <nl> } <nl> for ( ResourceLocation resloc : otherRegistry . activeSubstitutions . keySet ( ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java b / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 7f013bd . . 8d2a111 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 95 , 6 + 95 , 8 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespaced { <nl> this . minId = registry . minId ; <nl> this . aliases . clear ( ) ; <nl> this . aliases . putAll ( registry . aliases ) ; <nl> + this . activeSubstitutions . clear ( ) ; <nl> + <nl> underlyingIntegerMap = new ObjectIntIdentityMap ( ) ; <nl> registryObjects . clear ( ) ; <nl> <nl> @ @ - 102 , 6 + 104 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespaced { <nl> { <nl> addObjectRaw ( registry . getId ( thing ) , registry . getNameForObject ( thing ) , thing ) ; <nl> } <nl> + this . activeSubstitutions . putAll ( registry . activeSubstitutions ) ; <nl> } <nl> <nl> / / public api

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index d80f716 . . c7c1993 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 181 , 7 + 181 , 6 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e 
 this . persistentSubstitutions . clear ( ) ; 
 this . persistentSubstitutions . putAll ( otherRegistry . getPersistentSubstitutions ( ) ) ; 
 this . activeSubstitutions . clear ( ) ; 
 - this . substitutionOriginals . clear ( ) ; 
 this . dummiedLocations . clear ( ) ; 
 this . dummiedLocations . addAll ( otherRegistry . dummiedLocations ) ; 
 
 @ @ - 190 , 11 + 189 , 7 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e 
 
 for ( I thing : otherRegistry . typeSafeIterable ( ) ) 
 { 
 - ResourceLocation name = otherRegistry . getNameForObject ( thing ) ; 
 - if ( otherRegistry . activeSubstitutions . containsKey ( name ) ) / / If this is subed , use the orig , the loop below will reinstate the sub . 
 - addObjectRaw ( otherRegistry . getId ( thing ) , name , otherRegistry . substitutionOriginals . get ( name ) ) ; 
 - else 
 - addObjectRaw ( otherRegistry . getId ( thing ) , name , thing ) ; 
 + addObjectRaw ( otherRegistry . getId ( thing ) , otherRegistry . getNameForObject ( thing ) , thing ) ; 
 } 
 for ( ResourceLocation resloc : otherRegistry . activeSubstitutions . keySet ( ) ) 
 {

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java b / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 7f013bd . . 8d2a111 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 95 , 6 + 95 , 8 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespaced { 
 this . minId = registry . minId ; 
 this . aliases . clear ( ) ; 
 this . aliases . putAll ( registry . aliases ) ; 
 + this . activeSubstitutions . clear ( ) ; 
 + 
 underlyingIntegerMap = new ObjectIntIdentityMap ( ) ; 
 registryObjects . clear ( ) ; 
 
 @ @ - 102 , 6 + 104 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespaced { 
 { 
 addObjectRaw ( registry . getId ( thing ) , registry . getNameForObject ( thing ) , thing ) ; 
 } 
 + this . activeSubstitutions . putAll ( registry . activeSubstitutions ) ; 
 } 
 
 / / public api
