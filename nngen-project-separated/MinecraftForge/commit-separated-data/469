BLEU SCORE: 0.015445276590783498

TEST MSG: Allow client commands to control whether they can be invoked without prefix .
GENERATED MSG: Added EquipmentChangeEvent

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> index 61773db . . ff11443 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> + + + b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> @ @ - 59 , 7 + 59 , 8 @ @ public class ClientCommandHandler extends CommandHandler <nl> { <nl> message = message . trim ( ) ; <nl> <nl> - if ( message . startsWith ( " / " ) ) <nl> + boolean usedSlash = message . startsWith ( " / " ) ; <nl> + if ( usedSlash ) <nl> { <nl> message = message . substring ( 1 ) ; <nl> } <nl> @ @ - 72 , 7 + 73 , 7 @ @ public class ClientCommandHandler extends CommandHandler <nl> <nl> try <nl> { <nl> - if ( icommand = = null ) <nl> + if ( icommand = = null | | ( ! usedSlash & & icommand instanceof IClientCommand & & ! ( ( IClientCommand ) icommand ) . allowUsageWithoutPrefix ( sender , message ) ) ) <nl> { <nl> return 0 ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / IClientCommand . java b / src / main / java / net / minecraftforge / client / IClientCommand . java <nl> new file mode 100644 <nl> index 0000000 . . b5421c2 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / IClientCommand . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . client ; <nl> + <nl> + import net . minecraft . command . ICommand ; <nl> + import net . minecraft . command . ICommandSender ; <nl> + <nl> + / * * <nl> + * Client - side commands can implement this interface to allow additional control over when the command may be used . <nl> + * / <nl> + public interface IClientCommand extends ICommand <nl> + { <nl> + <nl> + / * * <nl> + * Determine whether this command can be used without the " / " prefix . By default this is true . <nl> + * @ param sender the command sender <nl> + * @ param message the message , without potential prefix <nl> + * @ return true to allow the usage of this command without the prefix <nl> + * / <nl> + boolean allowUsageWithoutPrefix ( ICommandSender sender , String message ) ; <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index a6547e9 . . 1a7edb7 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 199 , 7 + 199 , 15 @ @ <nl> super . func _ 70071 _ h _ ( ) ; <nl> this . func _ 184608 _ ct ( ) ; <nl> <nl> - @ @ - 2488 , 6 + 2514 , 40 @ @ <nl> + @ @ - 2015 , 6 + 2041 , 7 @ @ <nl> + if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) <nl> + { <nl> + ( ( WorldServer ) this . field _ 70170 _ p ) . func _ 73039 _ n ( ) . func _ 151247 _ a ( this , new SPacketEntityEquipment ( this . func _ 145782 _ y ( ) , entityequipmentslot , itemstack1 ) ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ( this , entityequipmentslot , itemstack , itemstack1 ) ) ; <nl> + <nl> + if ( ! itemstack . func _ 190926 _ b ( ) ) <nl> + { <nl> + @ @ - 2488 , 6 + 2515 , 40 @ @ <nl> this . field _ 70752 _ e = true ; <nl> } <nl> <nl> @ @ - 240 , 7 + 248 , 7 @ @ <nl> public abstract EnumHandSide func _ 184591 _ cq ( ) ; <nl> <nl> public boolean func _ 184587 _ cr ( ) <nl> - @ @ - 2508 , 12 + 2568 , 19 @ @ <nl> + @ @ - 2508 , 12 + 2569 , 19 @ @ <nl> <nl> if ( itemstack = = this . field _ 184627 _ bm ) <nl> { <nl> @ @ - 261 , 7 + 269 , 7 @ @ <nl> { <nl> this . func _ 71036 _ o ( ) ; <nl> } <nl> - @ @ - 2531 , 8 + 2598 , 10 @ @ <nl> + @ @ - 2531 , 8 + 2599 , 10 @ @ <nl> <nl> if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) <nl> { <nl> @ @ - 273 , 7 + 281 , 7 @ @ <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> { <nl> - @ @ - 2613 , 7 + 2682 , 9 @ @ <nl> + @ @ - 2613 , 7 + 2683 , 9 @ @ <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) <nl> { <nl> this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; <nl> @ @ - 284 , 7 + 292 , 7 @ @ <nl> this . func _ 184602 _ cy ( ) ; <nl> } <nl> } <nl> - @ @ - 2637 , 7 + 2708 , 8 @ @ <nl> + @ @ - 2637 , 7 + 2709 , 8 @ @ <nl> { <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> @ @ - 294 , 7 + 302 , 7 @ @ <nl> } <nl> <nl> this . func _ 184602 _ cy ( ) ; <nl> - @ @ - 2761 , 4 + 2833 , 29 @ @ <nl> + @ @ - 2761 , 4 + 2834 , 29 @ @ <nl> { <nl> return true ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 1495e52 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java <nl> @ @ - 0 , 0 + 1 , 61 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . inventory . EntityEquipmentSlot ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + <nl> + / * * <nl> + * { @ link LivingEquipmentChangeEvent } is fired when the Equipment of a Entity changes . < br > <nl> + * This event is fired whenever changes in Equipment are detected in { @ link EntityLivingBase # onUpdate ( ) } . < br > <nl> + * This also includes entities joining the World , as well as being cloned . < br > <nl> + * This event is fired on server - side only . < br > <nl> + * < br > <nl> + * { @ link # slot } contains the affected { @ link EntityEquipmentSlot } . < br > <nl> + * { @ link # from } contains the { @ link ItemStack } that was equipped previously . < br > <nl> + * { @ link # to } contains the { @ link ItemStack } that is equipped now . < br > <nl> + * < br > <nl> + * This event is not { @ link Cancelable } . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . <nl> + * * / <nl> + public class LivingEquipmentChangeEvent extends LivingEvent <nl> + { <nl> + private final EntityEquipmentSlot slot ; <nl> + private final ItemStack from ; <nl> + private final ItemStack to ; <nl> + <nl> + public LivingEquipmentChangeEvent ( EntityLivingBase entity , EntityEquipmentSlot slot , ItemStack from , ItemStack to ) <nl> + { <nl> + super ( entity ) ; <nl> + this . slot = slot ; <nl> + this . from = from ; <nl> + this . to = to ; <nl> + } <nl> + <nl> + public EntityEquipmentSlot getSlot ( ) { return this . slot ; } <nl> + public ItemStack getFrom ( ) { return this . from ; } <nl> + public ItemStack getTo ( ) { return this . to ; } <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java <nl> new file mode 100644 <nl> index 0000000 . . 6588e55 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java <nl> @ @ - 0 , 0 + 1 , 52 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ; <nl> + import net . minecraftforge . fml . common . FMLLog ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " equipment _ change _ test " , version = " 1 . 0 . 0 " ) <nl> + public class EquipmentChangeTest <nl> + { <nl> + <nl> + @ Mod . EventHandler <nl> + public void onInit ( FMLInitializationEvent event ) <nl> + { <nl> + / / register the eventhandler <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + / * * <nl> + * the Method handling the { @ link LivingEquipmentChangeEvent } <nl> + * Serverside only ! <nl> + * / <nl> + @ SubscribeEvent <nl> + public void onEquipmentChange ( LivingEquipmentChangeEvent event ) <nl> + { <nl> + / / a debug console print <nl> + FMLLog . info ( " [ Equipment - Change ] " + event . getEntity ( ) + " changed his Equipment in " <nl> + + event . getSlot ( ) + " from " + event . getFrom ( ) + " to " + event . getTo ( ) ) ; <nl> + } <nl> + <nl> + }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 index 61773db . . ff11443 100644 
 - - - a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 + + + b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 @ @ - 59 , 7 + 59 , 8 @ @ public class ClientCommandHandler extends CommandHandler 
 { 
 message = message . trim ( ) ; 
 
 - if ( message . startsWith ( " / " ) ) 
 + boolean usedSlash = message . startsWith ( " / " ) ; 
 + if ( usedSlash ) 
 { 
 message = message . substring ( 1 ) ; 
 } 
 @ @ - 72 , 7 + 73 , 7 @ @ public class ClientCommandHandler extends CommandHandler 
 
 try 
 { 
 - if ( icommand = = null ) 
 + if ( icommand = = null | | ( ! usedSlash & & icommand instanceof IClientCommand & & ! ( ( IClientCommand ) icommand ) . allowUsageWithoutPrefix ( sender , message ) ) ) 
 { 
 return 0 ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / IClientCommand . java b / src / main / java / net / minecraftforge / client / IClientCommand . java 
 new file mode 100644 
 index 0000000 . . b5421c2 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / IClientCommand . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . client ; 
 + 
 + import net . minecraft . command . ICommand ; 
 + import net . minecraft . command . ICommandSender ; 
 + 
 + / * * 
 + * Client - side commands can implement this interface to allow additional control over when the command may be used . 
 + * / 
 + public interface IClientCommand extends ICommand 
 + { 
 + 
 + / * * 
 + * Determine whether this command can be used without the " / " prefix . By default this is true . 
 + * @ param sender the command sender 
 + * @ param message the message , without potential prefix 
 + * @ return true to allow the usage of this command without the prefix 
 + * / 
 + boolean allowUsageWithoutPrefix ( ICommandSender sender , String message ) ; 
 + 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index a6547e9 . . 1a7edb7 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 199 , 7 + 199 , 15 @ @ 
 super . func _ 70071 _ h _ ( ) ; 
 this . func _ 184608 _ ct ( ) ; 
 
 - @ @ - 2488 , 6 + 2514 , 40 @ @ 
 + @ @ - 2015 , 6 + 2041 , 7 @ @ 
 + if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) 
 + { 
 + ( ( WorldServer ) this . field _ 70170 _ p ) . func _ 73039 _ n ( ) . func _ 151247 _ a ( this , new SPacketEntityEquipment ( this . func _ 145782 _ y ( ) , entityequipmentslot , itemstack1 ) ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ( this , entityequipmentslot , itemstack , itemstack1 ) ) ; 
 + 
 + if ( ! itemstack . func _ 190926 _ b ( ) ) 
 + { 
 + @ @ - 2488 , 6 + 2515 , 40 @ @ 
 this . field _ 70752 _ e = true ; 
 } 
 
 @ @ - 240 , 7 + 248 , 7 @ @ 
 public abstract EnumHandSide func _ 184591 _ cq ( ) ; 
 
 public boolean func _ 184587 _ cr ( ) 
 - @ @ - 2508 , 12 + 2568 , 19 @ @ 
 + @ @ - 2508 , 12 + 2569 , 19 @ @ 
 
 if ( itemstack = = this . field _ 184627 _ bm ) 
 { 
 @ @ - 261 , 7 + 269 , 7 @ @ 
 { 
 this . func _ 71036 _ o ( ) ; 
 } 
 - @ @ - 2531 , 8 + 2598 , 10 @ @ 
 + @ @ - 2531 , 8 + 2599 , 10 @ @ 
 
 if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) 
 { 
 @ @ - 273 , 7 + 281 , 7 @ @ 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 { 
 - @ @ - 2613 , 7 + 2682 , 9 @ @ 
 + @ @ - 2613 , 7 + 2683 , 9 @ @ 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) 
 { 
 this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; 
 @ @ - 284 , 7 + 292 , 7 @ @ 
 this . func _ 184602 _ cy ( ) ; 
 } 
 } 
 - @ @ - 2637 , 7 + 2708 , 8 @ @ 
 + @ @ - 2637 , 7 + 2709 , 8 @ @ 
 { 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 @ @ - 294 , 7 + 302 , 7 @ @ 
 } 
 
 this . func _ 184602 _ cy ( ) ; 
 - @ @ - 2761 , 4 + 2833 , 29 @ @ 
 + @ @ - 2761 , 4 + 2834 , 29 @ @ 
 { 
 return true ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java 
 new file mode 100644 
 index 0000000 . . 1495e52 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java 
 @ @ - 0 , 0 + 1 , 61 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . inventory . EntityEquipmentSlot ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + 
 + / * * 
 + * { @ link LivingEquipmentChangeEvent } is fired when the Equipment of a Entity changes . < br > 
 + * This event is fired whenever changes in Equipment are detected in { @ link EntityLivingBase # onUpdate ( ) } . < br > 
 + * This also includes entities joining the World , as well as being cloned . < br > 
 + * This event is fired on server - side only . < br > 
 + * < br > 
 + * { @ link # slot } contains the affected { @ link EntityEquipmentSlot } . < br > 
 + * { @ link # from } contains the { @ link ItemStack } that was equipped previously . < br > 
 + * { @ link # to } contains the { @ link ItemStack } that is equipped now . < br > 
 + * < br > 
 + * This event is not { @ link Cancelable } . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . 
 + * * / 
 + public class LivingEquipmentChangeEvent extends LivingEvent 
 + { 
 + private final EntityEquipmentSlot slot ; 
 + private final ItemStack from ; 
 + private final ItemStack to ; 
 + 
 + public LivingEquipmentChangeEvent ( EntityLivingBase entity , EntityEquipmentSlot slot , ItemStack from , ItemStack to ) 
 + { 
 + super ( entity ) ; 
 + this . slot = slot ; 
 + this . from = from ; 
 + this . to = to ; 
 + } 
 + 
 + public EntityEquipmentSlot getSlot ( ) { return this . slot ; } 
 + public ItemStack getFrom ( ) { return this . from ; } 
 + public ItemStack getTo ( ) { return this . to ; } 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java 
 new file mode 100644 
 index 0000000 . . 6588e55 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java 
 @ @ - 0 , 0 + 1 , 52 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ; 
 + import net . minecraftforge . fml . common . FMLLog ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " equipment _ change _ test " , version = " 1 . 0 . 0 " ) 
 + public class EquipmentChangeTest 
 + { 
 + 
 + @ Mod . EventHandler 
 + public void onInit ( FMLInitializationEvent event ) 
 + { 
 + / / register the eventhandler 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + / * * 
 + * the Method handling the { @ link LivingEquipmentChangeEvent } 
 + * Serverside only ! 
 + * / 
 + @ SubscribeEvent 
 + public void onEquipmentChange ( LivingEquipmentChangeEvent event ) 
 + { 
 + / / a debug console print 
 + FMLLog . info ( " [ Equipment - Change ] " + event . getEntity ( ) + " changed his Equipment in " 
 + + event . getSlot ( ) + " from " + event . getFrom ( ) + " to " + event . getTo ( ) ) ; 
 + } 
 + 
 + }
