BLEU SCORE: 0.03157256456545526

TEST MSG: Fix version number not having MC prefix , and build artifacts .
GENERATED MSG: Update build . gradle to not append the branch name if it matches the minecraft version .

TEST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index 44b0431 . . 32415df 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 61 , 7 + 61 , 7 @ @ pipeline { <nl> } <nl> post { <nl> always { <nl> - archiveArtifacts artifacts : ' build / libs / * * / * . jar ' , fingerprint : true <nl> + archiveArtifacts artifacts : ' projects / forge / build / libs / * * / * . jar ' , fingerprint : true <nl> / / junit ' build / test - results / * / * . xml ' <nl> / / jacoco sourcePattern : ' * * / src / * / java ' <nl> } <nl> diff - - git a / build . gradle b / build . gradle <nl> index 0d583ae . . eb90f13 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 145 , 7 + 145 , 7 @ @ project ( ' : forge ' ) { <nl> if ( branch ! = null & & branch . endsWith ( ' . x ' ) & & MC _ VERSION . startsWith ( branch . substring ( 0 , branch . length ( ) - 2 ) ) ) / / 1 . 13 . x <nl> branch = null <nl> SPEC _ VERSION = tag <nl> - return " $ { tag } . $ { offset } $ { t - > if ( branch ! = null ) t < < ' - ' + branch } " <nl> + return " $ { MC _ VERSION } - $ { tag } . $ { offset } $ { t - > if ( branch ! = null ) t < < ' - ' + branch } " <nl> } <nl> <nl> group = ' net . minecraftforge . test ' / / TODO : remove when we jenkins is working
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 8d7f1f8 . . 6cb7a30 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 352 , 7 + 352 , 7 @ @ String getVersionFromJava ( File file ) <nl> String branch = null ; <nl> if ( ! System . getenv ( ) . containsKey ( " GIT _ BRANCH " ) ) <nl> { <nl> - / / TODO : use grgit <nl> + / / TODO : use grgit - Tried to switch 07 / 07 / 16 - jgit broken on windows ? <nl> branch = " git rev - parse - - abbrev - ref HEAD " . execute ( ) . text . trim ( ) <nl> } <nl> else <nl> @ @ - 363 , 8 + 363 , 11 @ @ String getVersionFromJava ( File file ) <nl> <nl> def out = " $ { minecraft . version . replace ( ' - ' , ' _ ' ) } - $ major . $ minor . $ revision . $ build " <nl> <nl> - if ( branch & & branch ! = ' master ' & & branch ! = ' HEAD ' ) <nl> - out + = " - $ branch " <nl> + if ( branch & & branch ! = ' master ' & & branch ! = ' HEAD ' & & branch ! = minecraft . version & & branch ! = minecraft . version + ' . 0 ' ) <nl> + { <nl> + if ( ! ( branch . endsWith ( ' . x ' ) & & minecraft . version . startsWith ( branch . substring ( 0 , branch . length ( ) - 1 ) ) ) ) <nl> + out + = " - $ branch " <nl> + } <nl> <nl> return out ; <nl> }

TEST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index 44b0431 . . 32415df 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 61 , 7 + 61 , 7 @ @ pipeline { 
 } 
 post { 
 always { 
 - archiveArtifacts artifacts : ' build / libs / * * / * . jar ' , fingerprint : true 
 + archiveArtifacts artifacts : ' projects / forge / build / libs / * * / * . jar ' , fingerprint : true 
 / / junit ' build / test - results / * / * . xml ' 
 / / jacoco sourcePattern : ' * * / src / * / java ' 
 } 
 diff - - git a / build . gradle b / build . gradle 
 index 0d583ae . . eb90f13 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 145 , 7 + 145 , 7 @ @ project ( ' : forge ' ) { 
 if ( branch ! = null & & branch . endsWith ( ' . x ' ) & & MC _ VERSION . startsWith ( branch . substring ( 0 , branch . length ( ) - 2 ) ) ) / / 1 . 13 . x 
 branch = null 
 SPEC _ VERSION = tag 
 - return " $ { tag } . $ { offset } $ { t - > if ( branch ! = null ) t < < ' - ' + branch } " 
 + return " $ { MC _ VERSION } - $ { tag } . $ { offset } $ { t - > if ( branch ! = null ) t < < ' - ' + branch } " 
 } 
 
 group = ' net . minecraftforge . test ' / / TODO : remove when we jenkins is working

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 8d7f1f8 . . 6cb7a30 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 352 , 7 + 352 , 7 @ @ String getVersionFromJava ( File file ) 
 String branch = null ; 
 if ( ! System . getenv ( ) . containsKey ( " GIT _ BRANCH " ) ) 
 { 
 - / / TODO : use grgit 
 + / / TODO : use grgit - Tried to switch 07 / 07 / 16 - jgit broken on windows ? 
 branch = " git rev - parse - - abbrev - ref HEAD " . execute ( ) . text . trim ( ) 
 } 
 else 
 @ @ - 363 , 8 + 363 , 11 @ @ String getVersionFromJava ( File file ) 
 
 def out = " $ { minecraft . version . replace ( ' - ' , ' _ ' ) } - $ major . $ minor . $ revision . $ build " 
 
 - if ( branch & & branch ! = ' master ' & & branch ! = ' HEAD ' ) 
 - out + = " - $ branch " 
 + if ( branch & & branch ! = ' master ' & & branch ! = ' HEAD ' & & branch ! = minecraft . version & & branch ! = minecraft . version + ' . 0 ' ) 
 + { 
 + if ( ! ( branch . endsWith ( ' . x ' ) & & minecraft . version . startsWith ( branch . substring ( 0 , branch . length ( ) - 1 ) ) ) ) 
 + out + = " - $ branch " 
 + } 
 
 return out ; 
 }
