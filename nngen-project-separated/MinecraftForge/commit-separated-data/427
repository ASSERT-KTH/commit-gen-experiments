BLEU SCORE: 0.06567274736060397

TEST MSG: Make Dummy block an Air block .
GENERATED MSG: Fixes # 1984 .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java <nl> index 4530100 . . d3102f6 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / GameData . java <nl> + + + b / src / main / java / net / minecraftforge / registries / GameData . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import com . google . common . collect . Lists ; <nl> import com . google . common . collect . Maps ; <nl> import com . google . common . collect . Multimap ; <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . block . BlockAir ; <nl> import net . minecraft . block . material . Material ; <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . enchantment . Enchantment ; <nl> @ @ - 328 , 11 + 329 , 10 @ @ public class GameData <nl> { <nl> return new BlockDummyAir ( ) . setUnlocalizedName ( " air " ) . setRegistryName ( key ) ; <nl> } <nl> - private static class BlockDummyAir extends Block / / A named class so DummyBlockReplacementTest can detect if its a dummy <nl> + private static class BlockDummyAir extends BlockAir / / A named class so DummyBlockReplacementTest can detect if its a dummy <nl> { <nl> private BlockDummyAir ( ) <nl> { <nl> - super ( Material . AIR ) ; <nl> } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> index 136589f . . 2276bba 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . Map ; <nl> import java . util . Random ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . block . BlockLiquid ; <nl> import net . minecraft . block . material . Material ; <nl> import net . minecraft . block . properties . IProperty ; <nl> import net . minecraft . block . properties . PropertyInteger ; <nl> @ @ - 529 , 9 + 530 , 10 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> <nl> for ( int i = 0 ; i < flow . length ; i + + ) <nl> { <nl> - if ( flow [ i ] > = 0 . 875F & & end ! = 1F ) <nl> + if ( flow [ i ] > = 14f / 16 ) <nl> { <nl> - end = flow [ i ] ; <nl> + total + = flow [ i ] * 10 ; <nl> + count + = 10 ; <nl> } <nl> <nl> if ( flow [ i ] > = 0 ) <nl> @ @ - 563 , 6 + 565 , 10 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> return 0 . 875F ; <nl> } <nl> } <nl> + if ( here . getBlock ( ) instanceof BlockLiquid ) <nl> + { <nl> + return Math . min ( 1 - BlockLiquid . getLiquidHeightPercent ( here . getValue ( BlockLiquid . LEVEL ) ) , 14f / 16 ) ; <nl> + } <nl> return ! here . getMaterial ( ) . isSolid ( ) & & up . getBlock ( ) = = this ? 1 : this . getQuantaPercentage ( world , pos ) * 0 . 875F ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java 
 index 4530100 . . d3102f6 100644 
 - - - a / src / main / java / net / minecraftforge / registries / GameData . java 
 + + + b / src / main / java / net / minecraftforge / registries / GameData . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import com . google . common . collect . Lists ; 
 import com . google . common . collect . Maps ; 
 import com . google . common . collect . Multimap ; 
 import net . minecraft . block . Block ; 
 + import net . minecraft . block . BlockAir ; 
 import net . minecraft . block . material . Material ; 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . enchantment . Enchantment ; 
 @ @ - 328 , 11 + 329 , 10 @ @ public class GameData 
 { 
 return new BlockDummyAir ( ) . setUnlocalizedName ( " air " ) . setRegistryName ( key ) ; 
 } 
 - private static class BlockDummyAir extends Block / / A named class so DummyBlockReplacementTest can detect if its a dummy 
 + private static class BlockDummyAir extends BlockAir / / A named class so DummyBlockReplacementTest can detect if its a dummy 
 { 
 private BlockDummyAir ( ) 
 { 
 - super ( Material . AIR ) ; 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 index 136589f . . 2276bba 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . Map ; 
 import java . util . Random ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . block . BlockLiquid ; 
 import net . minecraft . block . material . Material ; 
 import net . minecraft . block . properties . IProperty ; 
 import net . minecraft . block . properties . PropertyInteger ; 
 @ @ - 529 , 9 + 530 , 10 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 
 for ( int i = 0 ; i < flow . length ; i + + ) 
 { 
 - if ( flow [ i ] > = 0 . 875F & & end ! = 1F ) 
 + if ( flow [ i ] > = 14f / 16 ) 
 { 
 - end = flow [ i ] ; 
 + total + = flow [ i ] * 10 ; 
 + count + = 10 ; 
 } 
 
 if ( flow [ i ] > = 0 ) 
 @ @ - 563 , 6 + 565 , 10 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 return 0 . 875F ; 
 } 
 } 
 + if ( here . getBlock ( ) instanceof BlockLiquid ) 
 + { 
 + return Math . min ( 1 - BlockLiquid . getLiquidHeightPercent ( here . getValue ( BlockLiquid . LEVEL ) ) , 14f / 16 ) ; 
 + } 
 return ! here . getMaterial ( ) . isSolid ( ) & & up . getBlock ( ) = = this ? 1 : this . getQuantaPercentage ( world , pos ) * 0 . 875F ; 
 } 

