BLEU SCORE: 0.020980574531482755

TEST MSG: Fix # 3596 Close jar sources safely in Java 6
GENERATED MSG: Slight tweak to early loading , to accommodate FMP

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / util / Java6Utils . java b / src / main / java / net / minecraftforge / common / util / Java6Utils . java <nl> new file mode 100644 <nl> index 0000000 . . 4038052 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / Java6Utils . java <nl> @ @ - 0 , 0 + 1 , 49 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import org . apache . commons . io . IOUtils ; <nl> + <nl> + import javax . annotation . Nullable ; <nl> + import java . io . Closeable ; <nl> + import java . io . IOException ; <nl> + import java . util . zip . ZipFile ; <nl> + <nl> + public class Java6Utils <nl> + { <nl> + / * * <nl> + * { @ link ZipFile } does not implement { @ link Closeable } on Java 6 . <nl> + * This method is the same as { @ link IOUtils # closeQuietly ( Closeable ) } but works on { @ link ZipFile } on Java 6 . <nl> + * / <nl> + public static void closeZipQuietly ( @ Nullable ZipFile file ) <nl> + { <nl> + try <nl> + { <nl> + if ( file ! = null ) <nl> + { <nl> + file . close ( ) ; <nl> + } <nl> + } <nl> + catch ( IOException ioe ) <nl> + { <nl> + / / ignore <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java <nl> index 4464f7d . . 0283e30 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java <nl> @ @ - 20 , 7 + 20 , 6 @ @ <nl> package net . minecraftforge . fml . common . asm ; <nl> <nl> import java . io . File ; <nl> - import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . net . URLDecoder ; <nl> import java . security . CodeSource ; <nl> @ @ - 29 , 6 + 28 , 7 @ @ import java . util . Map ; <nl> import java . util . jar . JarEntry ; <nl> import java . util . jar . JarFile ; <nl> <nl> + import net . minecraftforge . common . util . Java6Utils ; <nl> import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> @ @ - 146 , 7 + 146 , 7 @ @ public class FMLSanityChecker implements IFMLCallHook <nl> } <nl> finally <nl> { <nl> - IOUtils . closeQuietly ( mcJarFile ) ; <nl> + Java6Utils . closeZipQuietly ( mcJarFile ) ; <nl> } <nl> } <nl> else <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java <nl> index 396198e . . c6bed36 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . jar . JarFile ; <nl> <nl> + import net . minecraftforge . common . util . Java6Utils ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . LoaderException ; <nl> import net . minecraftforge . fml . common . MetadataCollection ; <nl> @ @ - 119 , 7 + 120 , 7 @ @ public class JarDiscoverer implements ITypeDiscoverer <nl> } <nl> finally <nl> { <nl> - IOUtils . closeQuietly ( jar ) ; <nl> + Java6Utils . closeZipQuietly ( jar ) ; <nl> } <nl> return foundMods ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index 05c00ea . . c2fb091 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . util . text . translation . LanguageMap ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . common . util . CompoundDataFixer ; <nl> + import net . minecraftforge . common . util . Java6Utils ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . IFMLSidedHandler ; <nl> @ @ - 260 , 7 + 261 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> finally <nl> { <nl> IOUtils . closeQuietly ( stream ) ; <nl> - IOUtils . closeQuietly ( zip ) ; <nl> + Java6Utils . closeZipQuietly ( zip ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index 1afaf1c . . a072127 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 204 , 10 + 204 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> return ; <nl> } <nl> <nl> - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> + List < String > injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> try <nl> { <nl> - Loader . instance ( ) . loadMods ( ) ; <nl> + Loader . instance ( ) . loadMods ( injectedModContainers ) ; <nl> } <nl> catch ( WrongMinecraftVersionException wrong ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index f135488 . . 7e181d8 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 140 , 11 + 140 , 12 @ @ public class FMLCommonHandler <nl> return eventBus ; <nl> } <nl> <nl> - public void beginLoading ( IFMLSidedHandler handler ) <nl> + public List < String > beginLoading ( IFMLSidedHandler handler ) <nl> { <nl> sidedDelegate = handler ; <nl> MinecraftForge . initialize ( ) ; <nl> / / MinecraftForge . registerCrashCallable ( ) ; <nl> + return ImmutableList . < String > of ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> index 0e60836 . . e2771f3 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> @ @ - 26 , 14 + 26 , 11 @ @ import java . util . Map ; <nl> import java . util . Properties ; <nl> import java . util . Set ; <nl> <nl> - import net . minecraft . crash . CrashReport ; <nl> - import net . minecraft . crash . ICrashReportDetail ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraftforge . common . capabilities . CapabilityManager ; <nl> import net . minecraftforge . fml . common . LoaderState . ModState ; <nl> import net . minecraftforge . fml . common . ModContainer . Disableable ; <nl> import net . minecraftforge . fml . common . ProgressManager . ProgressBar ; <nl> - import net . minecraftforge . fml . common . discovery . ASMDataTable . ASMData ; <nl> import net . minecraftforge . fml . common . discovery . ModDiscoverer ; <nl> import net . minecraftforge . fml . common . event . FMLInterModComms ; <nl> import net . minecraftforge . fml . common . event . FMLLoadEvent ; <nl> @ @ - 338 , 8 + 335 , 9 @ @ public class Loader <nl> * Finally , if they are successfully loaded as classes , they are then added <nl> * to the available mod list . <nl> * / <nl> - private ModDiscoverer identifyMods ( ) <nl> + private ModDiscoverer identifyMods ( List < String > additionalContainers ) <nl> { <nl> + injectedContainers . addAll ( additionalContainers ) ; <nl> FMLLog . fine ( " Building injected Mod Containers % s " , injectedContainers ) ; <nl> / / Add in the MCP mod container <nl> mods . add ( new InjectedModContainer ( mcp , new File ( " minecraft . jar " ) ) ) ; <nl> @ @ - 487 , 8 + 485 , 9 @ @ public class Loader <nl> * Called from the hook to start mod loading . We trigger the <nl> * { @ link # identifyMods ( ) } and Constructing , Preinitalization , and Initalization phases here . Finally , <nl> * the mod list is frozen completely and is consider immutable from then on . <nl> + * @ param injectedModContainers <nl> * / <nl> - public void loadMods ( ) <nl> + public void loadMods ( List < String > injectedModContainers ) <nl> { <nl> progressBar = ProgressManager . push ( " Loading " , 7 ) ; <nl> progressBar . step ( " Constructing Mods " ) ; <nl> @ @ - 497 , 7 + 496 , 7 @ @ public class Loader <nl> namedMods = Maps . newHashMap ( ) ; <nl> modController = new LoadController ( this ) ; <nl> modController . transition ( LoaderState . LOADING , false ) ; <nl> - discoverer = identifyMods ( ) ; <nl> + discoverer = identifyMods ( injectedModContainers ) ; <nl> ModAPIManager . INSTANCE . manageAPI ( modClassLoader , discoverer ) ; <nl> disableRequestedMods ( ) ; <nl> modController . distributeStateMessage ( FMLLoadEvent . class ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index 7d82c64 . . d292218 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 13 , 7 + 13 , 6 @ @ <nl> package net . minecraftforge . fml . server ; <nl> <nl> import java . io . * ; <nl> - import java . util . Enumeration ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> @ @ - 74 , 22 + 73 , 22 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> * A reference to the server itself <nl> * / <nl> private MinecraftServer server ; <nl> - <nl> + private List < String > injectedModContainers ; <nl> private FMLServerHandler ( ) <nl> { <nl> - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> + injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> } <nl> / * * <nl> * Called to start the whole game off from <nl> * { @ link MinecraftServer # startServer } <nl> * <nl> - * @ param minecraftServer <nl> + * @ param minecraftServer server <nl> * / <nl> @ Override <nl> public void beginServerLoading ( MinecraftServer minecraftServer ) <nl> { <nl> server = minecraftServer ; <nl> - Loader . instance ( ) . loadMods ( ) ; <nl> + Loader . instance ( ) . loadMods ( injectedModContainers ) ; <nl> Loader . instance ( ) . preinitializeMods ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / util / Java6Utils . java b / src / main / java / net / minecraftforge / common / util / Java6Utils . java 
 new file mode 100644 
 index 0000000 . . 4038052 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / Java6Utils . java 
 @ @ - 0 , 0 + 1 , 49 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . common . util ; 
 + 
 + import org . apache . commons . io . IOUtils ; 
 + 
 + import javax . annotation . Nullable ; 
 + import java . io . Closeable ; 
 + import java . io . IOException ; 
 + import java . util . zip . ZipFile ; 
 + 
 + public class Java6Utils 
 + { 
 + / * * 
 + * { @ link ZipFile } does not implement { @ link Closeable } on Java 6 . 
 + * This method is the same as { @ link IOUtils # closeQuietly ( Closeable ) } but works on { @ link ZipFile } on Java 6 . 
 + * / 
 + public static void closeZipQuietly ( @ Nullable ZipFile file ) 
 + { 
 + try 
 + { 
 + if ( file ! = null ) 
 + { 
 + file . close ( ) ; 
 + } 
 + } 
 + catch ( IOException ioe ) 
 + { 
 + / / ignore 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java 
 index 4464f7d . . 0283e30 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java 
 @ @ - 20 , 7 + 20 , 6 @ @ 
 package net . minecraftforge . fml . common . asm ; 
 
 import java . io . File ; 
 - import java . io . IOException ; 
 import java . io . InputStream ; 
 import java . net . URLDecoder ; 
 import java . security . CodeSource ; 
 @ @ - 29 , 6 + 28 , 7 @ @ import java . util . Map ; 
 import java . util . jar . JarEntry ; 
 import java . util . jar . JarFile ; 
 
 + import net . minecraftforge . common . util . Java6Utils ; 
 import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 @ @ - 146 , 7 + 146 , 7 @ @ public class FMLSanityChecker implements IFMLCallHook 
 } 
 finally 
 { 
 - IOUtils . closeQuietly ( mcJarFile ) ; 
 + Java6Utils . closeZipQuietly ( mcJarFile ) ; 
 } 
 } 
 else 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java 
 index 396198e . . c6bed36 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java 
 @ @ - 24 , 6 + 24 , 7 @ @ import java . util . Collections ; 
 import java . util . List ; 
 import java . util . jar . JarFile ; 
 
 + import net . minecraftforge . common . util . Java6Utils ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . LoaderException ; 
 import net . minecraftforge . fml . common . MetadataCollection ; 
 @ @ - 119 , 7 + 120 , 7 @ @ public class JarDiscoverer implements ITypeDiscoverer 
 } 
 finally 
 { 
 - IOUtils . closeQuietly ( jar ) ; 
 + Java6Utils . closeZipQuietly ( jar ) ; 
 } 
 return foundMods ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index 05c00ea . . c2fb091 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 36 , 6 + 36 , 7 @ @ import net . minecraft . util . IThreadListener ; 
 import net . minecraft . util . text . translation . LanguageMap ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . common . util . CompoundDataFixer ; 
 + import net . minecraftforge . common . util . Java6Utils ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . IFMLSidedHandler ; 
 @ @ - 260 , 7 + 261 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 finally 
 { 
 IOUtils . closeQuietly ( stream ) ; 
 - IOUtils . closeQuietly ( zip ) ; 
 + Java6Utils . closeZipQuietly ( zip ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index 1afaf1c . . a072127 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 204 , 10 + 204 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 return ; 
 } 
 
 - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 + List < String > injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 try 
 { 
 - Loader . instance ( ) . loadMods ( ) ; 
 + Loader . instance ( ) . loadMods ( injectedModContainers ) ; 
 } 
 catch ( WrongMinecraftVersionException wrong ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index f135488 . . 7e181d8 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 140 , 11 + 140 , 12 @ @ public class FMLCommonHandler 
 return eventBus ; 
 } 
 
 - public void beginLoading ( IFMLSidedHandler handler ) 
 + public List < String > beginLoading ( IFMLSidedHandler handler ) 
 { 
 sidedDelegate = handler ; 
 MinecraftForge . initialize ( ) ; 
 / / MinecraftForge . registerCrashCallable ( ) ; 
 + return ImmutableList . < String > of ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 index 0e60836 . . e2771f3 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 @ @ - 26 , 14 + 26 , 11 @ @ import java . util . Map ; 
 import java . util . Properties ; 
 import java . util . Set ; 
 
 - import net . minecraft . crash . CrashReport ; 
 - import net . minecraft . crash . ICrashReportDetail ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraftforge . common . capabilities . CapabilityManager ; 
 import net . minecraftforge . fml . common . LoaderState . ModState ; 
 import net . minecraftforge . fml . common . ModContainer . Disableable ; 
 import net . minecraftforge . fml . common . ProgressManager . ProgressBar ; 
 - import net . minecraftforge . fml . common . discovery . ASMDataTable . ASMData ; 
 import net . minecraftforge . fml . common . discovery . ModDiscoverer ; 
 import net . minecraftforge . fml . common . event . FMLInterModComms ; 
 import net . minecraftforge . fml . common . event . FMLLoadEvent ; 
 @ @ - 338 , 8 + 335 , 9 @ @ public class Loader 
 * Finally , if they are successfully loaded as classes , they are then added 
 * to the available mod list . 
 * / 
 - private ModDiscoverer identifyMods ( ) 
 + private ModDiscoverer identifyMods ( List < String > additionalContainers ) 
 { 
 + injectedContainers . addAll ( additionalContainers ) ; 
 FMLLog . fine ( " Building injected Mod Containers % s " , injectedContainers ) ; 
 / / Add in the MCP mod container 
 mods . add ( new InjectedModContainer ( mcp , new File ( " minecraft . jar " ) ) ) ; 
 @ @ - 487 , 8 + 485 , 9 @ @ public class Loader 
 * Called from the hook to start mod loading . We trigger the 
 * { @ link # identifyMods ( ) } and Constructing , Preinitalization , and Initalization phases here . Finally , 
 * the mod list is frozen completely and is consider immutable from then on . 
 + * @ param injectedModContainers 
 * / 
 - public void loadMods ( ) 
 + public void loadMods ( List < String > injectedModContainers ) 
 { 
 progressBar = ProgressManager . push ( " Loading " , 7 ) ; 
 progressBar . step ( " Constructing Mods " ) ; 
 @ @ - 497 , 7 + 496 , 7 @ @ public class Loader 
 namedMods = Maps . newHashMap ( ) ; 
 modController = new LoadController ( this ) ; 
 modController . transition ( LoaderState . LOADING , false ) ; 
 - discoverer = identifyMods ( ) ; 
 + discoverer = identifyMods ( injectedModContainers ) ; 
 ModAPIManager . INSTANCE . manageAPI ( modClassLoader , discoverer ) ; 
 disableRequestedMods ( ) ; 
 modController . distributeStateMessage ( FMLLoadEvent . class ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index 7d82c64 . . d292218 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 13 , 7 + 13 , 6 @ @ 
 package net . minecraftforge . fml . server ; 
 
 import java . io . * ; 
 - import java . util . Enumeration ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Set ; 
 @ @ - 74 , 22 + 73 , 22 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 * A reference to the server itself 
 * / 
 private MinecraftServer server ; 
 - 
 + private List < String > injectedModContainers ; 
 private FMLServerHandler ( ) 
 { 
 - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 + injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 } 
 / * * 
 * Called to start the whole game off from 
 * { @ link MinecraftServer # startServer } 
 * 
 - * @ param minecraftServer 
 + * @ param minecraftServer server 
 * / 
 @ Override 
 public void beginServerLoading ( MinecraftServer minecraftServer ) 
 { 
 server = minecraftServer ; 
 - Loader . instance ( ) . loadMods ( ) ; 
 + Loader . instance ( ) . loadMods ( injectedModContainers ) ; 
 Loader . instance ( ) . preinitializeMods ( ) ; 
 } 

