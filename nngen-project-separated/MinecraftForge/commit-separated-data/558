BLEU SCORE: 0.034353182138500235

TEST MSG: Fix using the wrong Pair implementation
GENERATED MSG: Allow blocks to render in multiple layers

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java b / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java <nl> index 0a91f5d . . 713b2bb 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java <nl> @ @ - 19 , 7 + 19 , 6 @ @ <nl> <nl> package net . minecraftforge . items ; <nl> <nl> - import javafx . util . Pair ; <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockDropper ; <nl> import net . minecraft . block . BlockHopper ; <nl> @ @ - 32 , 6 + 31 , 8 @ @ import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . MathHelper ; <nl> import net . minecraft . world . World ; <nl> + import org . apache . commons . lang3 . tuple . ImmutablePair ; <nl> + import org . apache . commons . lang3 . tuple . Pair ; <nl> <nl> import javax . annotation . Nonnull ; <nl> import javax . annotation . Nullable ; <nl> @ @ - 270 , 7 + 271 , 7 @ @ public class VanillaInventoryCodeHooks <nl> if ( tileentity . hasCapability ( CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY , side ) ) <nl> { <nl> IItemHandler capability = tileentity . getCapability ( CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY , side ) ; <nl> - destination = new Pair < IItemHandler , Object > ( capability , tileentity ) ; <nl> + destination = ImmutablePair . < IItemHandler , Object > of ( capability , tileentity ) ; <nl> } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index a946cbd . . 7a24cd0 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 161 , 7 + 161 , 7 @ @ <nl> } <nl> <nl> protected ItemStack func _ 180643 _ i ( IBlockState p _ 180643 _ 1 _ ) <nl> - @ @ - 971 , 6 + 989 , 1019 @ @ <nl> + @ @ - 971 , 6 + 989 , 1028 @ @ <nl> return Block . EnumOffsetType . NONE ; <nl> } <nl> <nl> @ @ - 1153 , 6 + 1153 , 15 @ @ <nl> + return func _ 176221 _ a ( state , world , pos ) ; <nl> + } <nl> + <nl> + + / * * <nl> + + * Queries if this block should render in a given layer . <nl> + + * ISmartBlockModel can use MinecraftForgeClient . getRenderLayer to alter their model based on layer <nl> + + * / <nl> + + public boolean canRenderInLayer ( EnumWorldBlockLayer layer ) <nl> + + { <nl> + + return func _ 180664 _ k ( ) = = layer ; <nl> + + } <nl> + + <nl> + / / For Internal use only to capture droped items inside getDrops <nl> + protected static ThreadLocal < Boolean > captureDrops = new ThreadLocal < Boolean > ( ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> index d223b06 . . 6b33267 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> @ @ - 9 , 3 + 9 , 22 @ @ <nl> { <nl> TileEntity tileentity = regionrendercache . func _ 175625 _ s ( new BlockPos ( mutableblockpos ) ) ; <nl> <nl> + @ @ - 160 , 7 + 160 , 9 @ @ <nl> + } <nl> + } <nl> + <nl> + - EnumWorldBlockLayer enumworldblocklayer1 = block . func _ 180664 _ k ( ) ; <nl> + + for ( EnumWorldBlockLayer enumworldblocklayer1 : EnumWorldBlockLayer . values ( ) ) { <nl> + + if ( ! block . canRenderInLayer ( enumworldblocklayer1 ) ) continue ; <nl> + + net . minecraftforge . client . ForgeHooksClient . setRenderLayer ( enumworldblocklayer1 ) ; <nl> + int i = enumworldblocklayer1 . ordinal ( ) ; <nl> + <nl> + if ( block . func _ 149645 _ b ( ) ! = - 1 ) <nl> + @ @ - 178 , 6 + 180 , 7 @ @ <nl> + compiledchunk . func _ 178486 _ a ( enumworldblocklayer1 ) ; <nl> + } <nl> + } <nl> + + } <nl> + } <nl> + <nl> + EnumWorldBlockLayer [ ] aenumworldblocklayer = EnumWorldBlockLayer . values ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index d0126b6 . . 521ef8a 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . util . BlockPos ; <nl> import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . EnumWorldBlockLayer ; <nl> import net . minecraft . util . IRegistry ; <nl> import net . minecraft . util . MovingObjectPosition ; <nl> import net . minecraft . world . IBlockAccess ; <nl> @ @ - 272 , 6 + 273 , 12 @ @ public class ForgeHooksClient <nl> renderPass = pass ; <nl> } <nl> <nl> + static EnumWorldBlockLayer renderLayer = EnumWorldBlockLayer . SOLID ; <nl> + public static void setRenderLayer ( EnumWorldBlockLayer layer ) <nl> + { <nl> + renderLayer = layer ; <nl> + } <nl> + <nl> public static ModelBase getArmorModel ( EntityLivingBase entityLiving , ItemStack itemStack , int slotID , ModelBase _ default ) <nl> { <nl> ModelBase modelbase = itemStack . getItem ( ) . getArmorModel ( entityLiving , itemStack , slotID ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> index 2c31fef . . 39afb26 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ import com . google . common . collect . Maps ; <nl> <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . util . EnumWorldBlockLayer ; <nl> import net . minecraftforge . client . IItemRenderer . ItemRenderType ; <nl> <nl> public class MinecraftForgeClient <nl> @ @ - 46 , 6 + 47 , 11 @ @ public class MinecraftForgeClient <nl> return ForgeHooksClient . renderPass ; <nl> } <nl> <nl> + public static EnumWorldBlockLayer getRenderLayer ( ) <nl> + { <nl> + return ForgeHooksClient . renderLayer ; <nl> + } <nl> + <nl> private static BitSet stencilBits = new BitSet ( 8 ) ; <nl> static <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java b / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java 
 index 0a91f5d . . 713b2bb 100644 
 - - - a / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java 
 + + + b / src / main / java / net / minecraftforge / items / VanillaInventoryCodeHooks . java 
 @ @ - 19 , 7 + 19 , 6 @ @ 
 
 package net . minecraftforge . items ; 
 
 - import javafx . util . Pair ; 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockDropper ; 
 import net . minecraft . block . BlockHopper ; 
 @ @ - 32 , 6 + 31 , 8 @ @ import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . MathHelper ; 
 import net . minecraft . world . World ; 
 + import org . apache . commons . lang3 . tuple . ImmutablePair ; 
 + import org . apache . commons . lang3 . tuple . Pair ; 
 
 import javax . annotation . Nonnull ; 
 import javax . annotation . Nullable ; 
 @ @ - 270 , 7 + 271 , 7 @ @ public class VanillaInventoryCodeHooks 
 if ( tileentity . hasCapability ( CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY , side ) ) 
 { 
 IItemHandler capability = tileentity . getCapability ( CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY , side ) ; 
 - destination = new Pair < IItemHandler , Object > ( capability , tileentity ) ; 
 + destination = ImmutablePair . < IItemHandler , Object > of ( capability , tileentity ) ; 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index a946cbd . . 7a24cd0 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 161 , 7 + 161 , 7 @ @ 
 } 
 
 protected ItemStack func _ 180643 _ i ( IBlockState p _ 180643 _ 1 _ ) 
 - @ @ - 971 , 6 + 989 , 1019 @ @ 
 + @ @ - 971 , 6 + 989 , 1028 @ @ 
 return Block . EnumOffsetType . NONE ; 
 } 
 
 @ @ - 1153 , 6 + 1153 , 15 @ @ 
 + return func _ 176221 _ a ( state , world , pos ) ; 
 + } 
 + 
 + + / * * 
 + + * Queries if this block should render in a given layer . 
 + + * ISmartBlockModel can use MinecraftForgeClient . getRenderLayer to alter their model based on layer 
 + + * / 
 + + public boolean canRenderInLayer ( EnumWorldBlockLayer layer ) 
 + + { 
 + + return func _ 180664 _ k ( ) = = layer ; 
 + + } 
 + + 
 + / / For Internal use only to capture droped items inside getDrops 
 + protected static ThreadLocal < Boolean > captureDrops = new ThreadLocal < Boolean > ( ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 index d223b06 . . 6b33267 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 @ @ - 9 , 3 + 9 , 22 @ @ 
 { 
 TileEntity tileentity = regionrendercache . func _ 175625 _ s ( new BlockPos ( mutableblockpos ) ) ; 
 
 + @ @ - 160 , 7 + 160 , 9 @ @ 
 + } 
 + } 
 + 
 + - EnumWorldBlockLayer enumworldblocklayer1 = block . func _ 180664 _ k ( ) ; 
 + + for ( EnumWorldBlockLayer enumworldblocklayer1 : EnumWorldBlockLayer . values ( ) ) { 
 + + if ( ! block . canRenderInLayer ( enumworldblocklayer1 ) ) continue ; 
 + + net . minecraftforge . client . ForgeHooksClient . setRenderLayer ( enumworldblocklayer1 ) ; 
 + int i = enumworldblocklayer1 . ordinal ( ) ; 
 + 
 + if ( block . func _ 149645 _ b ( ) ! = - 1 ) 
 + @ @ - 178 , 6 + 180 , 7 @ @ 
 + compiledchunk . func _ 178486 _ a ( enumworldblocklayer1 ) ; 
 + } 
 + } 
 + + } 
 + } 
 + 
 + EnumWorldBlockLayer [ ] aenumworldblocklayer = EnumWorldBlockLayer . values ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index d0126b6 . . 521ef8a 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . util . BlockPos ; 
 import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . EnumWorldBlockLayer ; 
 import net . minecraft . util . IRegistry ; 
 import net . minecraft . util . MovingObjectPosition ; 
 import net . minecraft . world . IBlockAccess ; 
 @ @ - 272 , 6 + 273 , 12 @ @ public class ForgeHooksClient 
 renderPass = pass ; 
 } 
 
 + static EnumWorldBlockLayer renderLayer = EnumWorldBlockLayer . SOLID ; 
 + public static void setRenderLayer ( EnumWorldBlockLayer layer ) 
 + { 
 + renderLayer = layer ; 
 + } 
 + 
 public static ModelBase getArmorModel ( EntityLivingBase entityLiving , ItemStack itemStack , int slotID , ModelBase _ default ) 
 { 
 ModelBase modelbase = itemStack . getItem ( ) . getArmorModel ( entityLiving , itemStack , slotID ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 index 2c31fef . . 39afb26 100644 
 - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import com . google . common . collect . Maps ; 
 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . util . EnumWorldBlockLayer ; 
 import net . minecraftforge . client . IItemRenderer . ItemRenderType ; 
 
 public class MinecraftForgeClient 
 @ @ - 46 , 6 + 47 , 11 @ @ public class MinecraftForgeClient 
 return ForgeHooksClient . renderPass ; 
 } 
 
 + public static EnumWorldBlockLayer getRenderLayer ( ) 
 + { 
 + return ForgeHooksClient . renderLayer ; 
 + } 
 + 
 private static BitSet stencilBits = new BitSet ( 8 ) ; 
 static 
 {
