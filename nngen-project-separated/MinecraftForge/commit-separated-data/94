BLEU SCORE: 0.014199193612838947

TEST MSG: Make a second logger with colour highlighting and control it with a sysproperty :
GENERATED MSG: Logging Changes

TEST DIFF (one line): diff - - git a / src / main / resources / log4j2 . xml b / src / main / resources / log4j2 . xml <nl> index 2e31bee . . 10b98cc 100644 <nl> - - - a / src / main / resources / log4j2 . xml <nl> + + + b / src / main / resources / log4j2 . xml <nl> @ @ - 10 , 6 + 10 , 15 @ @ <nl> < / LoggerNamePatternSelector > <nl> < / PatternLayout > <nl> < / Console > <nl> + < Console name = " SysOutColour " target = " SYSTEM _ OUT " > <nl> + < PatternLayout > <nl> + < LoggerNamePatternSelector defaultPattern = " % highlight { [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ % c { 2 . } / % markerSimpleName ] : % msg % n } " > <nl> + < ! - - don ' t include the full logger name for Mojang ' s logs since they use full class names and it ' s very verbose - - > <nl> + < PatternMatch key = " net . minecraft . " pattern = " % highlight { [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ minecraft / % logger { 1 } ] : % msg % n } " / > <nl> + < PatternMatch key = " com . mojang . " pattern = " % highlight { [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ mojang / % logger { 1 } ] : % msg % n } " / > <nl> + < / LoggerNamePatternSelector > <nl> + < / PatternLayout > <nl> + < / Console > <nl> < Queue name = " ServerGuiConsole " ignoreExceptions = " true " > <nl> < PatternLayout > <nl> < LoggerNamePatternSelector defaultPattern = " [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ % c { 2 . } / % markerSimpleName ] : % msg % n " > <nl> @ @ - 56 , 6 + 65 , 7 @ @ <nl> < MarkerFilter marker = " CORE " onMatch = " $ { sys : forge . logging . marker . core : - ACCEPT } " onMismatch = " NEUTRAL " / > <nl> < / filters > <nl> < AppenderRef ref = " SysOut " level = " $ { sys : forge . logging . console . level : - info } " / > <nl> + < AppenderRef ref = " SysOutColour " level = " $ { sys : forge . logging . colourconsole . level : - off } " / > <nl> < AppenderRef ref = " ServerGuiConsole " level = " $ { sys : forge . logging . console . level : - info } " / > <nl> < AppenderRef ref = " File " level = " $ { sys : forge . logging . file . level : - info } " / > <nl> < AppenderRef ref = " DebugFile " level = " $ { sys : forge . logging . debugFile . level : - trace } " / >
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> index 1b1688a . . 4b7fdb0 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> @ @ - 18 , 7 + 18 , 6 @ @ import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Map . Entry ; <nl> - import java . util . logging . Logger ; <nl> import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . entity . EntityClientPlayerMP ; <nl> import net . minecraft . client . gui . Gui ; <nl> @ @ - 102 , 10 + 101 , 8 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> <nl> private DummyModContainer optifineContainer ; <nl> <nl> - @ SuppressWarnings ( " unused " ) <nl> private boolean guiLoaded ; <nl> <nl> - @ SuppressWarnings ( " unused " ) <nl> private boolean serverIsRunning ; <nl> <nl> private MissingModsException modsMissing ; <nl> @ @ - 124 , 7 + 121 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> <nl> private List < IResourcePack > resourcePackList ; <nl> <nl> - @ SuppressWarnings ( " unused " ) <nl> private IReloadableResourceManager resourceManager ; <nl> <nl> private Map < String , IResourcePack > resourcePackMap ; <nl> @ @ - 277 , 7 + 273 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> loading = false ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unused " ) <nl> public void extendModList ( ) <nl> { <nl> @ SuppressWarnings ( " unchecked " ) <nl> @ @ - 339 , 15 + 334 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> } <nl> <nl> / * * <nl> - * Get a handle to the client ' s logger instance <nl> - * The client actually doesn ' t have one - so we return null <nl> - * / <nl> - public Logger getMinecraftLogger ( ) <nl> - { <nl> - return null ; <nl> - } <nl> - <nl> - / * * <nl> * @ return the instance <nl> * / <nl> public static FMLClientHandler instance ( ) <nl> diff - - git a / fml / src / main / resources / log4j2 . xml b / fml / src / main / resources / log4j2 . xml <nl> new file mode 100644 <nl> index 0000000 . . 94e1abf <nl> - - - / dev / null <nl> + + + b / fml / src / main / resources / log4j2 . xml <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < Configuration status = " WARN " packages = " net . minecraft , com . mojang " > <nl> + < Appenders > <nl> + < Console name = " FmlSysOut " target = " SYSTEM _ OUT " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % msg % n " / > <nl> + < / Console > <nl> + < Console name = " SysOut " target = " SYSTEM _ OUT " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > <nl> + < / Console > <nl> + < Queue name = " ServerGuiConsole " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } % level ] : % msg % n " / > <nl> + < / Queue > <nl> + < Queue name = " FmlServerGuiConsole " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } % level ] [ % logger ] : % msg % n " / > <nl> + < / Queue > <nl> + < RollingRandomAccessFile name = " File " fileName = " logs / latest . log " filePattern = " logs / % d { yyyy - MM - dd } - % i . log . gz " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > <nl> + < Policies > <nl> + < TimeBasedTriggeringPolicy / > <nl> + < OnStartupTriggeringPolicy / > <nl> + < / Policies > <nl> + < / RollingRandomAccessFile > <nl> + < RollingRandomAccessFile name = " FmlFile " fileName = " logs / fml - latest . log " filePattern = " logs / fml - % d { yyyy - MM - dd } - % i . log . gz " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % msg % n " / > <nl> + < Policies > <nl> + < TimeBasedTriggeringPolicy / > <nl> + < OnStartupTriggeringPolicy / > <nl> + < / Policies > <nl> + < / RollingRandomAccessFile > <nl> + < / Appenders > <nl> + < Loggers > <nl> + < Root level = " info " name = " net / minecraft " additibity = " false " > <nl> + < filters > <nl> + < MarkerFilter marker = " NETWORK _ PACKETS " onMatch = " DENY " onMismatch = " NEUTRAL " / > <nl> + < / filters > <nl> + < AppenderRef ref = " SysOut " / > <nl> + < AppenderRef ref = " File " / > <nl> + < AppenderRef ref = " ServerGuiConsole " / > <nl> + < / Root > <nl> + < Root level = " info " > <nl> + < AppenderRef ref = " FmlSysOut " / > <nl> + < AppenderRef ref = " FmlFile " / > <nl> + < AppenderRef ref = " FmlServerGuiConsole " / > <nl> + < / Root > <nl> + < / Loggers > <nl> + < / Configuration > <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / main / resources / log4j2 . xml b / src / main / resources / log4j2 . xml 
 index 2e31bee . . 10b98cc 100644 
 - - - a / src / main / resources / log4j2 . xml 
 + + + b / src / main / resources / log4j2 . xml 
 @ @ - 10 , 6 + 10 , 15 @ @ 
 < / LoggerNamePatternSelector > 
 < / PatternLayout > 
 < / Console > 
 + < Console name = " SysOutColour " target = " SYSTEM _ OUT " > 
 + < PatternLayout > 
 + < LoggerNamePatternSelector defaultPattern = " % highlight { [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ % c { 2 . } / % markerSimpleName ] : % msg % n } " > 
 + < ! - - don ' t include the full logger name for Mojang ' s logs since they use full class names and it ' s very verbose - - > 
 + < PatternMatch key = " net . minecraft . " pattern = " % highlight { [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ minecraft / % logger { 1 } ] : % msg % n } " / > 
 + < PatternMatch key = " com . mojang . " pattern = " % highlight { [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ mojang / % logger { 1 } ] : % msg % n } " / > 
 + < / LoggerNamePatternSelector > 
 + < / PatternLayout > 
 + < / Console > 
 < Queue name = " ServerGuiConsole " ignoreExceptions = " true " > 
 < PatternLayout > 
 < LoggerNamePatternSelector defaultPattern = " [ % d { HH : mm : ss . SSS } ] [ % t / % level ] [ % c { 2 . } / % markerSimpleName ] : % msg % n " > 
 @ @ - 56 , 6 + 65 , 7 @ @ 
 < MarkerFilter marker = " CORE " onMatch = " $ { sys : forge . logging . marker . core : - ACCEPT } " onMismatch = " NEUTRAL " / > 
 < / filters > 
 < AppenderRef ref = " SysOut " level = " $ { sys : forge . logging . console . level : - info } " / > 
 + < AppenderRef ref = " SysOutColour " level = " $ { sys : forge . logging . colourconsole . level : - off } " / > 
 < AppenderRef ref = " ServerGuiConsole " level = " $ { sys : forge . logging . console . level : - info } " / > 
 < AppenderRef ref = " File " level = " $ { sys : forge . logging . file . level : - info } " / > 
 < AppenderRef ref = " DebugFile " level = " $ { sys : forge . logging . debugFile . level : - trace } " / >

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 index 1b1688a . . 4b7fdb0 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 @ @ - 18 , 7 + 18 , 6 @ @ import java . util . Collections ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Map . Entry ; 
 - import java . util . logging . Logger ; 
 import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . entity . EntityClientPlayerMP ; 
 import net . minecraft . client . gui . Gui ; 
 @ @ - 102 , 10 + 101 , 8 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 
 private DummyModContainer optifineContainer ; 
 
 - @ SuppressWarnings ( " unused " ) 
 private boolean guiLoaded ; 
 
 - @ SuppressWarnings ( " unused " ) 
 private boolean serverIsRunning ; 
 
 private MissingModsException modsMissing ; 
 @ @ - 124 , 7 + 121 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 
 private List < IResourcePack > resourcePackList ; 
 
 - @ SuppressWarnings ( " unused " ) 
 private IReloadableResourceManager resourceManager ; 
 
 private Map < String , IResourcePack > resourcePackMap ; 
 @ @ - 277 , 7 + 273 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 loading = false ; 
 } 
 
 - @ SuppressWarnings ( " unused " ) 
 public void extendModList ( ) 
 { 
 @ SuppressWarnings ( " unchecked " ) 
 @ @ - 339 , 15 + 334 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 } 
 
 / * * 
 - * Get a handle to the client ' s logger instance 
 - * The client actually doesn ' t have one - so we return null 
 - * / 
 - public Logger getMinecraftLogger ( ) 
 - { 
 - return null ; 
 - } 
 - 
 - / * * 
 * @ return the instance 
 * / 
 public static FMLClientHandler instance ( ) 
 diff - - git a / fml / src / main / resources / log4j2 . xml b / fml / src / main / resources / log4j2 . xml 
 new file mode 100644 
 index 0000000 . . 94e1abf 
 - - - / dev / null 
 + + + b / fml / src / main / resources / log4j2 . xml 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 + < Configuration status = " WARN " packages = " net . minecraft , com . mojang " > 
 + < Appenders > 
 + < Console name = " FmlSysOut " target = " SYSTEM _ OUT " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % msg % n " / > 
 + < / Console > 
 + < Console name = " SysOut " target = " SYSTEM _ OUT " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > 
 + < / Console > 
 + < Queue name = " ServerGuiConsole " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } % level ] : % msg % n " / > 
 + < / Queue > 
 + < Queue name = " FmlServerGuiConsole " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } % level ] [ % logger ] : % msg % n " / > 
 + < / Queue > 
 + < RollingRandomAccessFile name = " File " fileName = " logs / latest . log " filePattern = " logs / % d { yyyy - MM - dd } - % i . log . gz " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > 
 + < Policies > 
 + < TimeBasedTriggeringPolicy / > 
 + < OnStartupTriggeringPolicy / > 
 + < / Policies > 
 + < / RollingRandomAccessFile > 
 + < RollingRandomAccessFile name = " FmlFile " fileName = " logs / fml - latest . log " filePattern = " logs / fml - % d { yyyy - MM - dd } - % i . log . gz " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % msg % n " / > 
 + < Policies > 
 + < TimeBasedTriggeringPolicy / > 
 + < OnStartupTriggeringPolicy / > 
 + < / Policies > 
 + < / RollingRandomAccessFile > 
 + < / Appenders > 
 + < Loggers > 
 + < Root level = " info " name = " net / minecraft " additibity = " false " > 
 + < filters > 
 + < MarkerFilter marker = " NETWORK _ PACKETS " onMatch = " DENY " onMismatch = " NEUTRAL " / > 
 + < / filters > 
 + < AppenderRef ref = " SysOut " / > 
 + < AppenderRef ref = " File " / > 
 + < AppenderRef ref = " ServerGuiConsole " / > 
 + < / Root > 
 + < Root level = " info " > 
 + < AppenderRef ref = " FmlSysOut " / > 
 + < AppenderRef ref = " FmlFile " / > 
 + < AppenderRef ref = " FmlServerGuiConsole " / > 
 + < / Root > 
 + < / Loggers > 
 + < / Configuration > 
 \ No newline at end of file
