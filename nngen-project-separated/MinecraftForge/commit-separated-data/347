BLEU SCORE: 0.01908840668714524

TEST MSG: Improve performance of vertex format mapping by caching hashcodes
GENERATED MSG: Make NBSP character display as a space . MC - 2595

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java . patch b / patches / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java . patch <nl> new file mode 100644 <nl> index 0000000 . . e80c673 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java . patch <nl> @ @ - 0 , 0 + 1 , 38 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java <nl> + @ @ - 17 , 6 + 17 , 7 @ @ <nl> + private int field _ 177354 _ e ; <nl> + private final List < Integer > field _ 177351 _ f ; <nl> + private int field _ 177352 _ g ; <nl> + + private int hashCode ; <nl> + <nl> + public VertexFormat ( VertexFormat p _ i46097 _ 1 _ ) <nl> + { <nl> + @ @ - 47 , 6 + 48 , 7 @ @ <nl> + this . field _ 177351 _ f . clear ( ) ; <nl> + this . field _ 177352 _ g = - 1 ; <nl> + this . field _ 177353 _ d = 0 ; <nl> + + this . hashCode = 0 ; <nl> + } <nl> + <nl> + @ SuppressWarnings ( " incomplete - switch " ) <nl> + @ @ - 75 , 6 + 77 , 7 @ @ <nl> + } <nl> + <nl> + this . field _ 177353 _ d + = p _ 181721 _ 1 _ . func _ 177368 _ f ( ) ; <nl> + + this . hashCode = 0 ; <nl> + return this ; <nl> + } <nl> + } <nl> + @ @ - 204 , 9 + 207 , 11 @ @ <nl> + <nl> + public int hashCode ( ) <nl> + { <nl> + + if ( this . hashCode ! = 0 ) return this . hashCode ; <nl> + int i = this . field _ 177355 _ b . hashCode ( ) ; <nl> + i = 31 * i + this . field _ 177356 _ c . hashCode ( ) ; <nl> + i = 31 * i + this . field _ 177353 _ d ; <nl> + + this . hashCode = i ; <nl> + return i ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> index cbdf436 . . 21bf325 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> @ @ - 30 , 9 + 30 , 8 @ @ import net . minecraftforge . client . ForgeHooksClient ; <nl> <nl> import org . apache . commons . lang3 . tuple . Pair ; <nl> <nl> - import com . google . common . cache . CacheBuilder ; <nl> - import com . google . common . cache . CacheLoader ; <nl> - import com . google . common . cache . LoadingCache ; <nl> + import java . util . concurrent . ConcurrentHashMap ; <nl> + import java . util . concurrent . ConcurrentMap ; <nl> <nl> public class LightUtil <nl> { <nl> @ @ - 90 , 16 + 89 , 7 @ @ public class LightUtil <nl> } <nl> } <nl> <nl> - private static final LoadingCache < Pair < VertexFormat , VertexFormat > , int [ ] > formatMaps = CacheBuilder . newBuilder ( ) <nl> - . maximumSize ( 10 ) <nl> - . build ( new CacheLoader < Pair < VertexFormat , VertexFormat > , int [ ] > ( ) <nl> - { <nl> - @ Override <nl> - public int [ ] load ( Pair < VertexFormat , VertexFormat > pair ) <nl> - { <nl> - return mapFormats ( pair . getLeft ( ) , pair . getRight ( ) ) ; <nl> - } <nl> - } ) ; <nl> + private static final ConcurrentMap < Pair < VertexFormat , VertexFormat > , int [ ] > formatMaps = new ConcurrentHashMap < > ( ) ; <nl> <nl> public static void putBakedQuad ( IVertexConsumer consumer , BakedQuad quad ) <nl> { <nl> @ @ - 110 , 20 + 100 , 19 @ @ public class LightUtil <nl> consumer . setQuadTint ( quad . getTintIndex ( ) ) ; <nl> } <nl> consumer . setApplyDiffuseLighting ( quad . shouldApplyDiffuseLighting ( ) ) ; <nl> - / / int [ ] eMap = mapFormats ( consumer . getVertexFormat ( ) , DefaultVertexFormats . ITEM ) ; <nl> float [ ] data = new float [ 4 ] ; <nl> VertexFormat formatFrom = consumer . getVertexFormat ( ) ; <nl> VertexFormat formatTo = quad . getFormat ( ) ; <nl> int countFrom = formatFrom . getElementCount ( ) ; <nl> int countTo = formatTo . getElementCount ( ) ; <nl> - int [ ] eMap = formatMaps . getUnchecked ( Pair . of ( formatFrom , formatTo ) ) ; <nl> + int [ ] eMap = mapFormats ( formatFrom , formatTo ) ; <nl> for ( int v = 0 ; v < 4 ; v + + ) <nl> { <nl> for ( int e = 0 ; e < countFrom ; e + + ) <nl> { <nl> if ( eMap [ e ] ! = countTo ) <nl> { <nl> - unpack ( quad . getVertexData ( ) , data , quad . getFormat ( ) , v , eMap [ e ] ) ; <nl> + unpack ( quad . getVertexData ( ) , data , formatTo , v , eMap [ e ] ) ; <nl> consumer . put ( e , data ) ; <nl> } <nl> else <nl> @ @ - 136 , 6 + 125 , 11 @ @ public class LightUtil <nl> <nl> public static int [ ] mapFormats ( VertexFormat from , VertexFormat to ) <nl> { <nl> + return formatMaps . computeIfAbsent ( Pair . of ( from , to ) , pair - > generateMapping ( pair . getLeft ( ) , pair . getRight ( ) ) ) ; <nl> + } <nl> + <nl> + private static int [ ] generateMapping ( VertexFormat from , VertexFormat to ) <nl> + { <nl> int fromCount = from . getElementCount ( ) ; <nl> int toCount = to . getElementCount ( ) ; <nl> int [ ] eMap = new int [ fromCount ] ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch b / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch <nl> index 29caffe . . 4a59b77 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch <nl> @ @ - 27 , 7 + 27 , 15 @ @ <nl> iresource . func _ 110527 _ b ( ) . read ( this . field _ 78287 _ e ) ; <nl> } <nl> catch ( IOException ioexception ) <nl> - @ @ - 203 , 7 + 203 , 7 @ @ <nl> + @ @ - 187 , 6 + 187 , 7 @ @ <nl> + <nl> + private float func _ 181559 _ a ( char p _ 181559 _ 1 _ , boolean p _ 181559 _ 2 _ ) <nl> + { <nl> + + if ( p _ 181559 _ 1 _ = = 160 ) return 4 . 0F ; / / forge : display nbsp as space . MC - 2595 <nl> + if ( p _ 181559 _ 1 _ = = 32 ) <nl> + { <nl> + return 4 . 0F ; <nl> + @ @ - 203 , 7 + 204 , 7 @ @ <nl> int i = p _ 78266 _ 1 _ % 16 * 8 ; <nl> int j = p _ 78266 _ 1 _ / 16 * 8 ; <nl> int k = p _ 78266 _ 2 _ ? 1 : 0 ; <nl> @ @ - 36 , 7 + 44 , 7 @ @ <nl> int l = this . field _ 78286 _ d [ p _ 78266 _ 1 _ ] ; <nl> float f = ( float ) l - 0 . 01F ; <nl> GlStateManager . func _ 187447 _ r ( 5 ) ; <nl> - @ @ - 231 , 7 + 231 , 7 @ @ <nl> + @ @ - 231 , 7 + 232 , 7 @ @ <nl> <nl> private void func _ 78257 _ a ( int p _ 78257 _ 1 _ ) <nl> { <nl> @ @ - 45 , 7 + 53 , 7 @ @ <nl> } <nl> <nl> protected float func _ 78277 _ a ( char p _ 78277 _ 1 _ , boolean p _ 78277 _ 2 _ ) <nl> - @ @ - 280 , 7 + 280 , 7 @ @ <nl> + @ @ - 280 , 7 + 281 , 7 @ @ <nl> <nl> public int func _ 175065 _ a ( String p _ 175065 _ 1 _ , float p _ 175065 _ 2 _ , float p _ 175065 _ 3 _ , int p _ 175065 _ 4 _ , boolean p _ 175065 _ 5 _ ) <nl> { <nl> @ @ - 54 , 7 + 62 , 7 @ @ <nl> this . func _ 78265 _ b ( ) ; <nl> int i ; <nl> <nl> - @ @ - 350 , 7 + 350 , 7 @ @ <nl> + @ @ - 350 , 7 + 351 , 7 @ @ <nl> <nl> int j1 = this . field _ 78285 _ g [ i1 ] ; <nl> this . field _ 78304 _ r = j1 ; <nl> @ @ - 63 , 7 + 71 , 7 @ @ <nl> } <nl> else if ( i1 = = 16 ) <nl> { <nl> - @ @ - 379 , 7 + 379 , 7 @ @ <nl> + @ @ - 379 , 7 + 380 , 7 @ @ <nl> this . field _ 78299 _ w = false ; <nl> this . field _ 78300 _ v = false ; <nl> this . field _ 78301 _ u = false ; <nl> @ @ - 72 , 7 + 80 , 7 @ @ <nl> } <nl> <nl> + + i ; <nl> - @ @ - 407 , 7 + 407 , 7 @ @ <nl> + @ @ - 407 , 7 + 408 , 7 @ @ <nl> c0 = c1 ; <nl> } <nl> <nl> @ @ - 81 , 7 + 89 , 7 @ @ <nl> boolean flag = ( c0 = = 0 | | j = = - 1 | | this . field _ 78293 _ l ) & & p _ 78255 _ 2 _ ; <nl> <nl> if ( flag ) <nl> - @ @ - 445 , 7 + 445 , 16 @ @ <nl> + @ @ - 445 , 7 + 446 , 16 @ @ <nl> <nl> + + f ; <nl> } <nl> @ @ - 98 , 7 + 106 , 7 @ @ <nl> if ( this . field _ 78299 _ w ) <nl> { <nl> Tessellator tessellator = Tessellator . func _ 178181 _ a ( ) ; <nl> - @ @ - 518 , 7 + 527 , 7 @ @ <nl> + @ @ - 518 , 7 + 528 , 7 @ @ <nl> this . field _ 78292 _ o = ( float ) ( p _ 180455 _ 4 _ > > 8 & 255 ) / 255 . 0F ; <nl> this . field _ 78306 _ p = ( float ) ( p _ 180455 _ 4 _ & 255 ) / 255 . 0F ; <nl> this . field _ 78305 _ q = ( float ) ( p _ 180455 _ 4 _ > > 24 & 255 ) / 255 . 0F ; <nl> @ @ - 107 , 7 + 115 , 15 @ @ <nl> this . field _ 78295 _ j = p _ 180455 _ 2 _ ; <nl> this . field _ 78296 _ k = p _ 180455 _ 3 _ ; <nl> this . func _ 78255 _ a ( p _ 180455 _ 1 _ , p _ 180455 _ 5 _ ) ; <nl> - @ @ - 849 , 6 + 858 , 26 @ @ <nl> + @ @ - 576 , 6 + 586 , 7 @ @ <nl> + <nl> + public int func _ 78263 _ a ( char p _ 78263 _ 1 _ ) <nl> + { <nl> + + if ( p _ 78263 _ 1 _ = = 160 ) return 4 ; / / forge : display nbsp as space . MC - 2595 <nl> + if ( p _ 78263 _ 1 _ = = 167 ) <nl> + { <nl> + return - 1 ; <nl> + @ @ - 849 , 6 + 860 , 26 @ @ <nl> return this . field _ 78294 _ m ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / client / resources / Language . java . patch b / patches / minecraft / net / minecraft / client / resources / Language . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 24f2c43 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / resources / Language . java . patch <nl> @ @ - 0 , 0 + 1 , 19 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / resources / Language . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / resources / Language . java <nl> + @ @ - 17 , 6 + 17 , 7 @ @ <nl> + this . field _ 135037 _ b = p _ i1303 _ 2 _ ; <nl> + this . field _ 135038 _ c = p _ i1303 _ 3 _ ; <nl> + this . field _ 135036 _ d = p _ i1303 _ 4 _ ; <nl> + + this . javaLocale = new java . util . Locale ( field _ 135039 _ a , field _ 135037 _ b ) ; <nl> + } <nl> + <nl> + public String func _ 135034 _ a ( ) <nl> + @ @ - 48 , 4 + 49 , 8 @ @ <nl> + { <nl> + return this . field _ 135039 _ a . compareTo ( p _ compareTo _ 1 _ . field _ 135039 _ a ) ; <nl> + } <nl> + + <nl> + + / / Forge : add access to Locale so modders can create correct string and number formatters <nl> + + private final java . util . Locale javaLocale ; <nl> + + public java . util . Locale getJavaLocale ( ) { return javaLocale ; } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> index 6c01252 . . b72996f 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> @ @ - 25 , 8 + 25 , 10 @ @ <nl> package net . minecraftforge . client ; <nl> <nl> import java . util . BitSet ; <nl> + import java . util . Locale ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> + import net . minecraft . client . Minecraft ; <nl> import net . minecraft . util . BlockRenderLayer ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . world . ChunkCache ; <nl> @ @ - 50 , 6 + 52 , 15 @ @ public class MinecraftForgeClient <nl> return ForgeHooksClient . renderLayer . get ( ) ; <nl> } <nl> <nl> + / * * <nl> + * returns the Locale set by the player in Minecraft . <nl> + * Useful for creating string and number formatters . <nl> + * / <nl> + public static Locale getLocale ( ) <nl> + { <nl> + return Minecraft . getMinecraft ( ) . getLanguageManager ( ) . getCurrentLanguage ( ) . getJavaLocale ( ) ; <nl> + } <nl> + <nl> private static BitSet stencilBits = new BitSet ( 8 ) ; <nl> static <nl> {

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java . patch b / patches / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java . patch 
 new file mode 100644 
 index 0000000 . . e80c673 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java . patch 
 @ @ - 0 , 0 + 1 , 38 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / renderer / vertex / VertexFormat . java 
 + @ @ - 17 , 6 + 17 , 7 @ @ 
 + private int field _ 177354 _ e ; 
 + private final List < Integer > field _ 177351 _ f ; 
 + private int field _ 177352 _ g ; 
 + + private int hashCode ; 
 + 
 + public VertexFormat ( VertexFormat p _ i46097 _ 1 _ ) 
 + { 
 + @ @ - 47 , 6 + 48 , 7 @ @ 
 + this . field _ 177351 _ f . clear ( ) ; 
 + this . field _ 177352 _ g = - 1 ; 
 + this . field _ 177353 _ d = 0 ; 
 + + this . hashCode = 0 ; 
 + } 
 + 
 + @ SuppressWarnings ( " incomplete - switch " ) 
 + @ @ - 75 , 6 + 77 , 7 @ @ 
 + } 
 + 
 + this . field _ 177353 _ d + = p _ 181721 _ 1 _ . func _ 177368 _ f ( ) ; 
 + + this . hashCode = 0 ; 
 + return this ; 
 + } 
 + } 
 + @ @ - 204 , 9 + 207 , 11 @ @ 
 + 
 + public int hashCode ( ) 
 + { 
 + + if ( this . hashCode ! = 0 ) return this . hashCode ; 
 + int i = this . field _ 177355 _ b . hashCode ( ) ; 
 + i = 31 * i + this . field _ 177356 _ c . hashCode ( ) ; 
 + i = 31 * i + this . field _ 177353 _ d ; 
 + + this . hashCode = i ; 
 + return i ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 index cbdf436 . . 21bf325 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 @ @ - 30 , 9 + 30 , 8 @ @ import net . minecraftforge . client . ForgeHooksClient ; 
 
 import org . apache . commons . lang3 . tuple . Pair ; 
 
 - import com . google . common . cache . CacheBuilder ; 
 - import com . google . common . cache . CacheLoader ; 
 - import com . google . common . cache . LoadingCache ; 
 + import java . util . concurrent . ConcurrentHashMap ; 
 + import java . util . concurrent . ConcurrentMap ; 
 
 public class LightUtil 
 { 
 @ @ - 90 , 16 + 89 , 7 @ @ public class LightUtil 
 } 
 } 
 
 - private static final LoadingCache < Pair < VertexFormat , VertexFormat > , int [ ] > formatMaps = CacheBuilder . newBuilder ( ) 
 - . maximumSize ( 10 ) 
 - . build ( new CacheLoader < Pair < VertexFormat , VertexFormat > , int [ ] > ( ) 
 - { 
 - @ Override 
 - public int [ ] load ( Pair < VertexFormat , VertexFormat > pair ) 
 - { 
 - return mapFormats ( pair . getLeft ( ) , pair . getRight ( ) ) ; 
 - } 
 - } ) ; 
 + private static final ConcurrentMap < Pair < VertexFormat , VertexFormat > , int [ ] > formatMaps = new ConcurrentHashMap < > ( ) ; 
 
 public static void putBakedQuad ( IVertexConsumer consumer , BakedQuad quad ) 
 { 
 @ @ - 110 , 20 + 100 , 19 @ @ public class LightUtil 
 consumer . setQuadTint ( quad . getTintIndex ( ) ) ; 
 } 
 consumer . setApplyDiffuseLighting ( quad . shouldApplyDiffuseLighting ( ) ) ; 
 - / / int [ ] eMap = mapFormats ( consumer . getVertexFormat ( ) , DefaultVertexFormats . ITEM ) ; 
 float [ ] data = new float [ 4 ] ; 
 VertexFormat formatFrom = consumer . getVertexFormat ( ) ; 
 VertexFormat formatTo = quad . getFormat ( ) ; 
 int countFrom = formatFrom . getElementCount ( ) ; 
 int countTo = formatTo . getElementCount ( ) ; 
 - int [ ] eMap = formatMaps . getUnchecked ( Pair . of ( formatFrom , formatTo ) ) ; 
 + int [ ] eMap = mapFormats ( formatFrom , formatTo ) ; 
 for ( int v = 0 ; v < 4 ; v + + ) 
 { 
 for ( int e = 0 ; e < countFrom ; e + + ) 
 { 
 if ( eMap [ e ] ! = countTo ) 
 { 
 - unpack ( quad . getVertexData ( ) , data , quad . getFormat ( ) , v , eMap [ e ] ) ; 
 + unpack ( quad . getVertexData ( ) , data , formatTo , v , eMap [ e ] ) ; 
 consumer . put ( e , data ) ; 
 } 
 else 
 @ @ - 136 , 6 + 125 , 11 @ @ public class LightUtil 
 
 public static int [ ] mapFormats ( VertexFormat from , VertexFormat to ) 
 { 
 + return formatMaps . computeIfAbsent ( Pair . of ( from , to ) , pair - > generateMapping ( pair . getLeft ( ) , pair . getRight ( ) ) ) ; 
 + } 
 + 
 + private static int [ ] generateMapping ( VertexFormat from , VertexFormat to ) 
 + { 
 int fromCount = from . getElementCount ( ) ; 
 int toCount = to . getElementCount ( ) ; 
 int [ ] eMap = new int [ fromCount ] ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch b / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch 
 index 29caffe . . 4a59b77 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / FontRenderer . java . patch 
 @ @ - 27 , 7 + 27 , 15 @ @ 
 iresource . func _ 110527 _ b ( ) . read ( this . field _ 78287 _ e ) ; 
 } 
 catch ( IOException ioexception ) 
 - @ @ - 203 , 7 + 203 , 7 @ @ 
 + @ @ - 187 , 6 + 187 , 7 @ @ 
 + 
 + private float func _ 181559 _ a ( char p _ 181559 _ 1 _ , boolean p _ 181559 _ 2 _ ) 
 + { 
 + + if ( p _ 181559 _ 1 _ = = 160 ) return 4 . 0F ; / / forge : display nbsp as space . MC - 2595 
 + if ( p _ 181559 _ 1 _ = = 32 ) 
 + { 
 + return 4 . 0F ; 
 + @ @ - 203 , 7 + 204 , 7 @ @ 
 int i = p _ 78266 _ 1 _ % 16 * 8 ; 
 int j = p _ 78266 _ 1 _ / 16 * 8 ; 
 int k = p _ 78266 _ 2 _ ? 1 : 0 ; 
 @ @ - 36 , 7 + 44 , 7 @ @ 
 int l = this . field _ 78286 _ d [ p _ 78266 _ 1 _ ] ; 
 float f = ( float ) l - 0 . 01F ; 
 GlStateManager . func _ 187447 _ r ( 5 ) ; 
 - @ @ - 231 , 7 + 231 , 7 @ @ 
 + @ @ - 231 , 7 + 232 , 7 @ @ 
 
 private void func _ 78257 _ a ( int p _ 78257 _ 1 _ ) 
 { 
 @ @ - 45 , 7 + 53 , 7 @ @ 
 } 
 
 protected float func _ 78277 _ a ( char p _ 78277 _ 1 _ , boolean p _ 78277 _ 2 _ ) 
 - @ @ - 280 , 7 + 280 , 7 @ @ 
 + @ @ - 280 , 7 + 281 , 7 @ @ 
 
 public int func _ 175065 _ a ( String p _ 175065 _ 1 _ , float p _ 175065 _ 2 _ , float p _ 175065 _ 3 _ , int p _ 175065 _ 4 _ , boolean p _ 175065 _ 5 _ ) 
 { 
 @ @ - 54 , 7 + 62 , 7 @ @ 
 this . func _ 78265 _ b ( ) ; 
 int i ; 
 
 - @ @ - 350 , 7 + 350 , 7 @ @ 
 + @ @ - 350 , 7 + 351 , 7 @ @ 
 
 int j1 = this . field _ 78285 _ g [ i1 ] ; 
 this . field _ 78304 _ r = j1 ; 
 @ @ - 63 , 7 + 71 , 7 @ @ 
 } 
 else if ( i1 = = 16 ) 
 { 
 - @ @ - 379 , 7 + 379 , 7 @ @ 
 + @ @ - 379 , 7 + 380 , 7 @ @ 
 this . field _ 78299 _ w = false ; 
 this . field _ 78300 _ v = false ; 
 this . field _ 78301 _ u = false ; 
 @ @ - 72 , 7 + 80 , 7 @ @ 
 } 
 
 + + i ; 
 - @ @ - 407 , 7 + 407 , 7 @ @ 
 + @ @ - 407 , 7 + 408 , 7 @ @ 
 c0 = c1 ; 
 } 
 
 @ @ - 81 , 7 + 89 , 7 @ @ 
 boolean flag = ( c0 = = 0 | | j = = - 1 | | this . field _ 78293 _ l ) & & p _ 78255 _ 2 _ ; 
 
 if ( flag ) 
 - @ @ - 445 , 7 + 445 , 16 @ @ 
 + @ @ - 445 , 7 + 446 , 16 @ @ 
 
 + + f ; 
 } 
 @ @ - 98 , 7 + 106 , 7 @ @ 
 if ( this . field _ 78299 _ w ) 
 { 
 Tessellator tessellator = Tessellator . func _ 178181 _ a ( ) ; 
 - @ @ - 518 , 7 + 527 , 7 @ @ 
 + @ @ - 518 , 7 + 528 , 7 @ @ 
 this . field _ 78292 _ o = ( float ) ( p _ 180455 _ 4 _ > > 8 & 255 ) / 255 . 0F ; 
 this . field _ 78306 _ p = ( float ) ( p _ 180455 _ 4 _ & 255 ) / 255 . 0F ; 
 this . field _ 78305 _ q = ( float ) ( p _ 180455 _ 4 _ > > 24 & 255 ) / 255 . 0F ; 
 @ @ - 107 , 7 + 115 , 15 @ @ 
 this . field _ 78295 _ j = p _ 180455 _ 2 _ ; 
 this . field _ 78296 _ k = p _ 180455 _ 3 _ ; 
 this . func _ 78255 _ a ( p _ 180455 _ 1 _ , p _ 180455 _ 5 _ ) ; 
 - @ @ - 849 , 6 + 858 , 26 @ @ 
 + @ @ - 576 , 6 + 586 , 7 @ @ 
 + 
 + public int func _ 78263 _ a ( char p _ 78263 _ 1 _ ) 
 + { 
 + + if ( p _ 78263 _ 1 _ = = 160 ) return 4 ; / / forge : display nbsp as space . MC - 2595 
 + if ( p _ 78263 _ 1 _ = = 167 ) 
 + { 
 + return - 1 ; 
 + @ @ - 849 , 6 + 860 , 26 @ @ 
 return this . field _ 78294 _ m ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / client / resources / Language . java . patch b / patches / minecraft / net / minecraft / client / resources / Language . java . patch 
 new file mode 100644 
 index 0000000 . . 24f2c43 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / resources / Language . java . patch 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / resources / Language . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / resources / Language . java 
 + @ @ - 17 , 6 + 17 , 7 @ @ 
 + this . field _ 135037 _ b = p _ i1303 _ 2 _ ; 
 + this . field _ 135038 _ c = p _ i1303 _ 3 _ ; 
 + this . field _ 135036 _ d = p _ i1303 _ 4 _ ; 
 + + this . javaLocale = new java . util . Locale ( field _ 135039 _ a , field _ 135037 _ b ) ; 
 + } 
 + 
 + public String func _ 135034 _ a ( ) 
 + @ @ - 48 , 4 + 49 , 8 @ @ 
 + { 
 + return this . field _ 135039 _ a . compareTo ( p _ compareTo _ 1 _ . field _ 135039 _ a ) ; 
 + } 
 + + 
 + + / / Forge : add access to Locale so modders can create correct string and number formatters 
 + + private final java . util . Locale javaLocale ; 
 + + public java . util . Locale getJavaLocale ( ) { return javaLocale ; } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 index 6c01252 . . b72996f 100644 
 - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 @ @ - 25 , 8 + 25 , 10 @ @ 
 package net . minecraftforge . client ; 
 
 import java . util . BitSet ; 
 + import java . util . Locale ; 
 import java . util . concurrent . TimeUnit ; 
 
 + import net . minecraft . client . Minecraft ; 
 import net . minecraft . util . BlockRenderLayer ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . world . ChunkCache ; 
 @ @ - 50 , 6 + 52 , 15 @ @ public class MinecraftForgeClient 
 return ForgeHooksClient . renderLayer . get ( ) ; 
 } 
 
 + / * * 
 + * returns the Locale set by the player in Minecraft . 
 + * Useful for creating string and number formatters . 
 + * / 
 + public static Locale getLocale ( ) 
 + { 
 + return Minecraft . getMinecraft ( ) . getLanguageManager ( ) . getCurrentLanguage ( ) . getJavaLocale ( ) ; 
 + } 
 + 
 private static BitSet stencilBits = new BitSet ( 8 ) ; 
 static 
 {
