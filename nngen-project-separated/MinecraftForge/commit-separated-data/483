BLEU SCORE: 0.08116697886877475

TEST MSG: Added ClientChatEvent . Closes # 1442
GENERATED MSG: Added EquipmentChangeEvent

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> index b647b2c . . 7f30109 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> @ @ - 8 , 7 + 8 , 7 @ @ <nl> <nl> public void func _ 73863 _ a ( int p _ 73863 _ 1 _ , int p _ 73863 _ 2 _ , float p _ 73863 _ 3 _ ) <nl> { <nl> - @ @ - 147 , 7 + 148 , 10 @ @ <nl> + @ @ - 147 , 7 + 145 , 10 @ @ <nl> } <nl> } <nl> <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> } <nl> <nl> protected void func _ 146279 _ a ( String p _ 146279 _ 1 _ , int p _ 146279 _ 2 _ , int p _ 146279 _ 3 _ ) <nl> - @ @ - 157 , 7 + 161 , 13 @ @ <nl> + @ @ - 157 , 7 + 158 , 13 @ @ <nl> <nl> protected void func _ 146283 _ a ( List < String > p _ 146283 _ 1 _ , int p _ 146283 _ 2 _ , int p _ 146283 _ 3 _ ) <nl> { <nl> @ @ - 35 , 7 + 35 , 13 @ @ <nl> { <nl> GlStateManager . func _ 179101 _ C ( ) ; <nl> RenderHelper . func _ 74518 _ a ( ) ; <nl> - @ @ - 418 , 6 + 428 , 7 @ @ <nl> + @ @ - 414 , 10 + 421 , 13 @ @ <nl> + <nl> + public void func _ 175281 _ b ( String p _ 175281 _ 1 _ , boolean p _ 175281 _ 2 _ ) <nl> + { <nl> + + p _ 175281 _ 1 _ = net . minecraftforge . event . ForgeEventFactory . onClientSendMessage ( p _ 175281 _ 1 _ ) ; <nl> + + if ( p _ 175281 _ 1 _ . isEmpty ( ) ) return ; <nl> + if ( p _ 175281 _ 2 _ ) <nl> { <nl> this . field _ 146297 _ k . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146239 _ a ( p _ 175281 _ 1 _ ) ; <nl> } <nl> @ @ - 43 , 7 + 49 , 7 @ @ <nl> <nl> this . field _ 146297 _ k . field _ 71439 _ g . func _ 71165 _ d ( p _ 175281 _ 1 _ ) ; <nl> } <nl> - @ @ - 432 , 9 + 443 , 15 @ @ <nl> + @ @ - 432 , 9 + 442 , 15 @ @ <nl> <nl> if ( guibutton . func _ 146116 _ c ( this . field _ 146297 _ k , p _ 73864 _ 1 _ , p _ 73864 _ 2 _ ) ) <nl> { <nl> @ @ - 59 , 7 + 65 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 464 , 8 + 481 , 12 @ @ <nl> + @ @ - 464 , 8 + 480 , 12 @ @ <nl> this . field _ 146289 _ q = p _ 146280 _ 1 _ . field _ 71466 _ p ; <nl> this . field _ 146294 _ l = p _ 146280 _ 2 _ ; <nl> this . field _ 146295 _ m = p _ 146280 _ 3 _ ; <nl> @ @ - 72 , 7 + 78 , 7 @ @ <nl> } <nl> <nl> public void func _ 183500 _ a ( int p _ 183500 _ 1 _ , int p _ 183500 _ 2 _ ) <nl> - @ @ - 484 , 7 + 505 , 10 @ @ <nl> + @ @ - 484 , 7 + 504 , 10 @ @ <nl> { <nl> while ( Mouse . next ( ) ) <nl> { <nl> @ @ - 83 , 7 + 89 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 492 , 7 + 516 , 10 @ @ <nl> + @ @ - 492 , 7 + 515 , 10 @ @ <nl> { <nl> while ( Keyboard . next ( ) ) <nl> { <nl> @ @ - 94 , 7 + 100 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 554 , 6 + 581 , 7 @ @ <nl> + @ @ - 554 , 6 + 580 , 7 @ @ <nl> public void func _ 146276 _ q _ ( ) <nl> { <nl> this . func _ 146270 _ b ( 0 ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / ClientChatEvent . java b / src / main / java / net / minecraftforge / client / event / ClientChatEvent . java <nl> new file mode 100644 <nl> index 0000000 . . b4bb981 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / ClientChatEvent . java <nl> @ @ - 0 , 0 + 1 , 69 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import com . google . common . base . Strings ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event ; <nl> + import net . minecraftforge . event . ForgeEventFactory ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraft . client . gui . GuiScreen ; <nl> + <nl> + / * * <nl> + * ClientChatEvent is fired whenever the client is about to send a chat message or command to the server . < br > <nl> + * This event is fired via { @ link ForgeEventFactory # onClientSendMessage ( String ) } , <nl> + * which is executed by { @ link GuiScreen # sendChatMessage ( String , boolean ) } < br > <nl> + * < br > <nl> + * { @ link # message } contains the message that will be sent to the server . This can be changed by mods . < br > <nl> + * { @ link # originalMessage } contains the original message that was going to be sent to the server . This cannot be changed by mods . < br > <nl> + * < br > <nl> + * This event is { @ link Cancelable } . < br > <nl> + * If this event is canceled , the chat message or command is never sent to the server . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . <nl> + * * / <nl> + @ Cancelable <nl> + public class ClientChatEvent extends Event <nl> + { <nl> + private String message ; <nl> + private final String originalMessage ; <nl> + public ClientChatEvent ( String message ) <nl> + { <nl> + this . setMessage ( message ) ; <nl> + this . originalMessage = Strings . nullToEmpty ( message ) ; <nl> + } <nl> + <nl> + public String getMessage ( ) <nl> + { <nl> + return message ; <nl> + } <nl> + <nl> + public void setMessage ( String message ) <nl> + { <nl> + this . message = Strings . nullToEmpty ( message ) ; <nl> + } <nl> + <nl> + public String getOriginalMessage ( ) <nl> + { <nl> + return originalMessage ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index bc60d68 . . 238a886 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 64 , 6 + 64 , 7 @ @ import net . minecraft . world . chunk . IChunkGenerator ; <nl> import net . minecraft . world . storage . IPlayerFileData ; <nl> import net . minecraft . world . storage . SaveHandler ; <nl> import net . minecraft . world . storage . loot . LootTable ; <nl> + import net . minecraftforge . client . event . ClientChatEvent ; <nl> import net . minecraftforge . client . event . ClientChatReceivedEvent ; <nl> import net . minecraftforge . client . event . RenderBlockOverlayEvent ; <nl> import net . minecraftforge . client . event . RenderBlockOverlayEvent . OverlayType ; <nl> @ @ - 340 , 6 + 341 , 13 @ @ public class ForgeEventFactory <nl> return MinecraftForge . EVENT _ BUS . post ( event ) ? null : event . getMessage ( ) ; <nl> } <nl> <nl> + @ Nonnull <nl> + public static String onClientSendMessage ( String message ) <nl> + { <nl> + ClientChatEvent event = new ClientChatEvent ( message ) ; <nl> + return MinecraftForge . EVENT _ BUS . post ( event ) ? " " : event . getMessage ( ) ; <nl> + } <nl> + <nl> public static int onHoeUse ( ItemStack stack , EntityPlayer player , World worldIn , BlockPos pos ) <nl> { <nl> UseHoeEvent event = new UseHoeEvent ( player , stack , worldIn , pos ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / test / ClientChatEventTest . java b / src / test / java / net / minecraftforge / test / ClientChatEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . d6c5437 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / test / ClientChatEventTest . java <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + package net . minecraftforge . test ; <nl> + <nl> + import net . minecraftforge . client . event . ClientChatEvent ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " clientchateventtest " , name = " Client Chat Event Test " , version = " 0 . 0 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class ClientChatEventTest { <nl> + <nl> + @ EventHandler <nl> + public void init ( FMLInitializationEvent event ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onPlayerAttemptChat ( ClientChatEvent event ) <nl> + { <nl> + if ( event . getMessage ( ) . equals ( " Cancel " ) ) <nl> + event . setCanceled ( true ) ; <nl> + else if ( event . getMessage ( ) . equals ( " Replace this text " ) ) <nl> + event . setMessage ( " Text replaced . " ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index a6547e9 . . 1a7edb7 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 199 , 7 + 199 , 15 @ @ <nl> super . func _ 70071 _ h _ ( ) ; <nl> this . func _ 184608 _ ct ( ) ; <nl> <nl> - @ @ - 2488 , 6 + 2514 , 40 @ @ <nl> + @ @ - 2015 , 6 + 2041 , 7 @ @ <nl> + if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) <nl> + { <nl> + ( ( WorldServer ) this . field _ 70170 _ p ) . func _ 73039 _ n ( ) . func _ 151247 _ a ( this , new SPacketEntityEquipment ( this . func _ 145782 _ y ( ) , entityequipmentslot , itemstack1 ) ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ( this , entityequipmentslot , itemstack , itemstack1 ) ) ; <nl> + <nl> + if ( ! itemstack . func _ 190926 _ b ( ) ) <nl> + { <nl> + @ @ - 2488 , 6 + 2515 , 40 @ @ <nl> this . field _ 70752 _ e = true ; <nl> } <nl> <nl> @ @ - 240 , 7 + 248 , 7 @ @ <nl> public abstract EnumHandSide func _ 184591 _ cq ( ) ; <nl> <nl> public boolean func _ 184587 _ cr ( ) <nl> - @ @ - 2508 , 12 + 2568 , 19 @ @ <nl> + @ @ - 2508 , 12 + 2569 , 19 @ @ <nl> <nl> if ( itemstack = = this . field _ 184627 _ bm ) <nl> { <nl> @ @ - 261 , 7 + 269 , 7 @ @ <nl> { <nl> this . func _ 71036 _ o ( ) ; <nl> } <nl> - @ @ - 2531 , 8 + 2598 , 10 @ @ <nl> + @ @ - 2531 , 8 + 2599 , 10 @ @ <nl> <nl> if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) <nl> { <nl> @ @ - 273 , 7 + 281 , 7 @ @ <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> { <nl> - @ @ - 2613 , 7 + 2682 , 9 @ @ <nl> + @ @ - 2613 , 7 + 2683 , 9 @ @ <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) <nl> { <nl> this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; <nl> @ @ - 284 , 7 + 292 , 7 @ @ <nl> this . func _ 184602 _ cy ( ) ; <nl> } <nl> } <nl> - @ @ - 2637 , 7 + 2708 , 8 @ @ <nl> + @ @ - 2637 , 7 + 2709 , 8 @ @ <nl> { <nl> if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> @ @ - 294 , 7 + 302 , 7 @ @ <nl> } <nl> <nl> this . func _ 184602 _ cy ( ) ; <nl> - @ @ - 2761 , 4 + 2833 , 29 @ @ <nl> + @ @ - 2761 , 4 + 2834 , 29 @ @ <nl> { <nl> return true ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 1495e52 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java <nl> @ @ - 0 , 0 + 1 , 61 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . inventory . EntityEquipmentSlot ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + <nl> + / * * <nl> + * { @ link LivingEquipmentChangeEvent } is fired when the Equipment of a Entity changes . < br > <nl> + * This event is fired whenever changes in Equipment are detected in { @ link EntityLivingBase # onUpdate ( ) } . < br > <nl> + * This also includes entities joining the World , as well as being cloned . < br > <nl> + * This event is fired on server - side only . < br > <nl> + * < br > <nl> + * { @ link # slot } contains the affected { @ link EntityEquipmentSlot } . < br > <nl> + * { @ link # from } contains the { @ link ItemStack } that was equipped previously . < br > <nl> + * { @ link # to } contains the { @ link ItemStack } that is equipped now . < br > <nl> + * < br > <nl> + * This event is not { @ link Cancelable } . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . <nl> + * * / <nl> + public class LivingEquipmentChangeEvent extends LivingEvent <nl> + { <nl> + private final EntityEquipmentSlot slot ; <nl> + private final ItemStack from ; <nl> + private final ItemStack to ; <nl> + <nl> + public LivingEquipmentChangeEvent ( EntityLivingBase entity , EntityEquipmentSlot slot , ItemStack from , ItemStack to ) <nl> + { <nl> + super ( entity ) ; <nl> + this . slot = slot ; <nl> + this . from = from ; <nl> + this . to = to ; <nl> + } <nl> + <nl> + public EntityEquipmentSlot getSlot ( ) { return this . slot ; } <nl> + public ItemStack getFrom ( ) { return this . from ; } <nl> + public ItemStack getTo ( ) { return this . to ; } <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java <nl> new file mode 100644 <nl> index 0000000 . . 6588e55 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java <nl> @ @ - 0 , 0 + 1 , 52 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ; <nl> + import net . minecraftforge . fml . common . FMLLog ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " equipment _ change _ test " , version = " 1 . 0 . 0 " ) <nl> + public class EquipmentChangeTest <nl> + { <nl> + <nl> + @ Mod . EventHandler <nl> + public void onInit ( FMLInitializationEvent event ) <nl> + { <nl> + / / register the eventhandler <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + / * * <nl> + * the Method handling the { @ link LivingEquipmentChangeEvent } <nl> + * Serverside only ! <nl> + * / <nl> + @ SubscribeEvent <nl> + public void onEquipmentChange ( LivingEquipmentChangeEvent event ) <nl> + { <nl> + / / a debug console print <nl> + FMLLog . info ( " [ Equipment - Change ] " + event . getEntity ( ) + " changed his Equipment in " <nl> + + event . getSlot ( ) + " from " + event . getFrom ( ) + " to " + event . getTo ( ) ) ; <nl> + } <nl> + <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 index b647b2c . . 7f30109 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 @ @ - 8 , 7 + 8 , 7 @ @ 
 
 public void func _ 73863 _ a ( int p _ 73863 _ 1 _ , int p _ 73863 _ 2 _ , float p _ 73863 _ 3 _ ) 
 { 
 - @ @ - 147 , 7 + 148 , 10 @ @ 
 + @ @ - 147 , 7 + 145 , 10 @ @ 
 } 
 } 
 
 @ @ - 20 , 7 + 20 , 7 @ @ 
 } 
 
 protected void func _ 146279 _ a ( String p _ 146279 _ 1 _ , int p _ 146279 _ 2 _ , int p _ 146279 _ 3 _ ) 
 - @ @ - 157 , 7 + 161 , 13 @ @ 
 + @ @ - 157 , 7 + 158 , 13 @ @ 
 
 protected void func _ 146283 _ a ( List < String > p _ 146283 _ 1 _ , int p _ 146283 _ 2 _ , int p _ 146283 _ 3 _ ) 
 { 
 @ @ - 35 , 7 + 35 , 13 @ @ 
 { 
 GlStateManager . func _ 179101 _ C ( ) ; 
 RenderHelper . func _ 74518 _ a ( ) ; 
 - @ @ - 418 , 6 + 428 , 7 @ @ 
 + @ @ - 414 , 10 + 421 , 13 @ @ 
 + 
 + public void func _ 175281 _ b ( String p _ 175281 _ 1 _ , boolean p _ 175281 _ 2 _ ) 
 + { 
 + + p _ 175281 _ 1 _ = net . minecraftforge . event . ForgeEventFactory . onClientSendMessage ( p _ 175281 _ 1 _ ) ; 
 + + if ( p _ 175281 _ 1 _ . isEmpty ( ) ) return ; 
 + if ( p _ 175281 _ 2 _ ) 
 { 
 this . field _ 146297 _ k . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146239 _ a ( p _ 175281 _ 1 _ ) ; 
 } 
 @ @ - 43 , 7 + 49 , 7 @ @ 
 
 this . field _ 146297 _ k . field _ 71439 _ g . func _ 71165 _ d ( p _ 175281 _ 1 _ ) ; 
 } 
 - @ @ - 432 , 9 + 443 , 15 @ @ 
 + @ @ - 432 , 9 + 442 , 15 @ @ 
 
 if ( guibutton . func _ 146116 _ c ( this . field _ 146297 _ k , p _ 73864 _ 1 _ , p _ 73864 _ 2 _ ) ) 
 { 
 @ @ - 59 , 7 + 65 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 464 , 8 + 481 , 12 @ @ 
 + @ @ - 464 , 8 + 480 , 12 @ @ 
 this . field _ 146289 _ q = p _ 146280 _ 1 _ . field _ 71466 _ p ; 
 this . field _ 146294 _ l = p _ 146280 _ 2 _ ; 
 this . field _ 146295 _ m = p _ 146280 _ 3 _ ; 
 @ @ - 72 , 7 + 78 , 7 @ @ 
 } 
 
 public void func _ 183500 _ a ( int p _ 183500 _ 1 _ , int p _ 183500 _ 2 _ ) 
 - @ @ - 484 , 7 + 505 , 10 @ @ 
 + @ @ - 484 , 7 + 504 , 10 @ @ 
 { 
 while ( Mouse . next ( ) ) 
 { 
 @ @ - 83 , 7 + 89 , 7 @ @ 
 } 
 } 
 
 - @ @ - 492 , 7 + 516 , 10 @ @ 
 + @ @ - 492 , 7 + 515 , 10 @ @ 
 { 
 while ( Keyboard . next ( ) ) 
 { 
 @ @ - 94 , 7 + 100 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 554 , 6 + 581 , 7 @ @ 
 + @ @ - 554 , 6 + 580 , 7 @ @ 
 public void func _ 146276 _ q _ ( ) 
 { 
 this . func _ 146270 _ b ( 0 ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / event / ClientChatEvent . java b / src / main / java / net / minecraftforge / client / event / ClientChatEvent . java 
 new file mode 100644 
 index 0000000 . . b4bb981 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / ClientChatEvent . java 
 @ @ - 0 , 0 + 1 , 69 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . client . event ; 
 + 
 + import com . google . common . base . Strings ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + import net . minecraftforge . fml . common . eventhandler . Event ; 
 + import net . minecraftforge . event . ForgeEventFactory ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraft . client . gui . GuiScreen ; 
 + 
 + / * * 
 + * ClientChatEvent is fired whenever the client is about to send a chat message or command to the server . < br > 
 + * This event is fired via { @ link ForgeEventFactory # onClientSendMessage ( String ) } , 
 + * which is executed by { @ link GuiScreen # sendChatMessage ( String , boolean ) } < br > 
 + * < br > 
 + * { @ link # message } contains the message that will be sent to the server . This can be changed by mods . < br > 
 + * { @ link # originalMessage } contains the original message that was going to be sent to the server . This cannot be changed by mods . < br > 
 + * < br > 
 + * This event is { @ link Cancelable } . < br > 
 + * If this event is canceled , the chat message or command is never sent to the server . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . 
 + * * / 
 + @ Cancelable 
 + public class ClientChatEvent extends Event 
 + { 
 + private String message ; 
 + private final String originalMessage ; 
 + public ClientChatEvent ( String message ) 
 + { 
 + this . setMessage ( message ) ; 
 + this . originalMessage = Strings . nullToEmpty ( message ) ; 
 + } 
 + 
 + public String getMessage ( ) 
 + { 
 + return message ; 
 + } 
 + 
 + public void setMessage ( String message ) 
 + { 
 + this . message = Strings . nullToEmpty ( message ) ; 
 + } 
 + 
 + public String getOriginalMessage ( ) 
 + { 
 + return originalMessage ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index bc60d68 . . 238a886 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 64 , 6 + 64 , 7 @ @ import net . minecraft . world . chunk . IChunkGenerator ; 
 import net . minecraft . world . storage . IPlayerFileData ; 
 import net . minecraft . world . storage . SaveHandler ; 
 import net . minecraft . world . storage . loot . LootTable ; 
 + import net . minecraftforge . client . event . ClientChatEvent ; 
 import net . minecraftforge . client . event . ClientChatReceivedEvent ; 
 import net . minecraftforge . client . event . RenderBlockOverlayEvent ; 
 import net . minecraftforge . client . event . RenderBlockOverlayEvent . OverlayType ; 
 @ @ - 340 , 6 + 341 , 13 @ @ public class ForgeEventFactory 
 return MinecraftForge . EVENT _ BUS . post ( event ) ? null : event . getMessage ( ) ; 
 } 
 
 + @ Nonnull 
 + public static String onClientSendMessage ( String message ) 
 + { 
 + ClientChatEvent event = new ClientChatEvent ( message ) ; 
 + return MinecraftForge . EVENT _ BUS . post ( event ) ? " " : event . getMessage ( ) ; 
 + } 
 + 
 public static int onHoeUse ( ItemStack stack , EntityPlayer player , World worldIn , BlockPos pos ) 
 { 
 UseHoeEvent event = new UseHoeEvent ( player , stack , worldIn , pos ) ; 
 diff - - git a / src / test / java / net / minecraftforge / test / ClientChatEventTest . java b / src / test / java / net / minecraftforge / test / ClientChatEventTest . java 
 new file mode 100644 
 index 0000000 . . d6c5437 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / test / ClientChatEventTest . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + package net . minecraftforge . test ; 
 + 
 + import net . minecraftforge . client . event . ClientChatEvent ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " clientchateventtest " , name = " Client Chat Event Test " , version = " 0 . 0 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class ClientChatEventTest { 
 + 
 + @ EventHandler 
 + public void init ( FMLInitializationEvent event ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onPlayerAttemptChat ( ClientChatEvent event ) 
 + { 
 + if ( event . getMessage ( ) . equals ( " Cancel " ) ) 
 + event . setCanceled ( true ) ; 
 + else if ( event . getMessage ( ) . equals ( " Replace this text " ) ) 
 + event . setMessage ( " Text replaced . " ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index a6547e9 . . 1a7edb7 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 199 , 7 + 199 , 15 @ @ 
 super . func _ 70071 _ h _ ( ) ; 
 this . func _ 184608 _ ct ( ) ; 
 
 - @ @ - 2488 , 6 + 2514 , 40 @ @ 
 + @ @ - 2015 , 6 + 2041 , 7 @ @ 
 + if ( ! ItemStack . func _ 77989 _ b ( itemstack1 , itemstack ) ) 
 + { 
 + ( ( WorldServer ) this . field _ 70170 _ p ) . func _ 73039 _ n ( ) . func _ 151247 _ a ( this , new SPacketEntityEquipment ( this . func _ 145782 _ y ( ) , entityequipmentslot , itemstack1 ) ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ( this , entityequipmentslot , itemstack , itemstack1 ) ) ; 
 + 
 + if ( ! itemstack . func _ 190926 _ b ( ) ) 
 + { 
 + @ @ - 2488 , 6 + 2515 , 40 @ @ 
 this . field _ 70752 _ e = true ; 
 } 
 
 @ @ - 240 , 7 + 248 , 7 @ @ 
 public abstract EnumHandSide func _ 184591 _ cq ( ) ; 
 
 public boolean func _ 184587 _ cr ( ) 
 - @ @ - 2508 , 12 + 2568 , 19 @ @ 
 + @ @ - 2508 , 12 + 2569 , 19 @ @ 
 
 if ( itemstack = = this . field _ 184627 _ bm ) 
 { 
 @ @ - 261 , 7 + 269 , 7 @ @ 
 { 
 this . func _ 71036 _ o ( ) ; 
 } 
 - @ @ - 2531 , 8 + 2598 , 10 @ @ 
 + @ @ - 2531 , 8 + 2599 , 10 @ @ 
 
 if ( ! itemstack . func _ 190926 _ b ( ) & & ! this . func _ 184587 _ cr ( ) ) 
 { 
 @ @ - 273 , 7 + 281 , 7 @ @ 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 { 
 - @ @ - 2613 , 7 + 2682 , 9 @ @ 
 + @ @ - 2613 , 7 + 2683 , 9 @ @ 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) & & this . func _ 184587 _ cr ( ) ) 
 { 
 this . func _ 184584 _ a ( this . field _ 184627 _ bm , 16 ) ; 
 @ @ - 284 , 7 + 292 , 7 @ @ 
 this . func _ 184602 _ cy ( ) ; 
 } 
 } 
 - @ @ - 2637 , 7 + 2708 , 8 @ @ 
 + @ @ - 2637 , 7 + 2709 , 8 @ @ 
 { 
 if ( ! this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 @ @ - 294 , 7 + 302 , 7 @ @ 
 } 
 
 this . func _ 184602 _ cy ( ) ; 
 - @ @ - 2761 , 4 + 2833 , 29 @ @ 
 + @ @ - 2761 , 4 + 2834 , 29 @ @ 
 { 
 return true ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java 
 new file mode 100644 
 index 0000000 . . 1495e52 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingEquipmentChangeEvent . java 
 @ @ - 0 , 0 + 1 , 61 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . inventory . EntityEquipmentSlot ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + 
 + / * * 
 + * { @ link LivingEquipmentChangeEvent } is fired when the Equipment of a Entity changes . < br > 
 + * This event is fired whenever changes in Equipment are detected in { @ link EntityLivingBase # onUpdate ( ) } . < br > 
 + * This also includes entities joining the World , as well as being cloned . < br > 
 + * This event is fired on server - side only . < br > 
 + * < br > 
 + * { @ link # slot } contains the affected { @ link EntityEquipmentSlot } . < br > 
 + * { @ link # from } contains the { @ link ItemStack } that was equipped previously . < br > 
 + * { @ link # to } contains the { @ link ItemStack } that is equipped now . < br > 
 + * < br > 
 + * This event is not { @ link Cancelable } . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . 
 + * * / 
 + public class LivingEquipmentChangeEvent extends LivingEvent 
 + { 
 + private final EntityEquipmentSlot slot ; 
 + private final ItemStack from ; 
 + private final ItemStack to ; 
 + 
 + public LivingEquipmentChangeEvent ( EntityLivingBase entity , EntityEquipmentSlot slot , ItemStack from , ItemStack to ) 
 + { 
 + super ( entity ) ; 
 + this . slot = slot ; 
 + this . from = from ; 
 + this . to = to ; 
 + } 
 + 
 + public EntityEquipmentSlot getSlot ( ) { return this . slot ; } 
 + public ItemStack getFrom ( ) { return this . from ; } 
 + public ItemStack getTo ( ) { return this . to ; } 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java 
 new file mode 100644 
 index 0000000 . . 6588e55 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / EquipmentChangeTest . java 
 @ @ - 0 , 0 + 1 , 52 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . living . LivingEquipmentChangeEvent ; 
 + import net . minecraftforge . fml . common . FMLLog ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " equipment _ change _ test " , version = " 1 . 0 . 0 " ) 
 + public class EquipmentChangeTest 
 + { 
 + 
 + @ Mod . EventHandler 
 + public void onInit ( FMLInitializationEvent event ) 
 + { 
 + / / register the eventhandler 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + / * * 
 + * the Method handling the { @ link LivingEquipmentChangeEvent } 
 + * Serverside only ! 
 + * / 
 + @ SubscribeEvent 
 + public void onEquipmentChange ( LivingEquipmentChangeEvent event ) 
 + { 
 + / / a debug console print 
 + FMLLog . info ( " [ Equipment - Change ] " + event . getEntity ( ) + " changed his Equipment in " 
 + + event . getSlot ( ) + " from " + event . getFrom ( ) + " to " + event . getTo ( ) ) ; 
 + } 
 + 
 + }
