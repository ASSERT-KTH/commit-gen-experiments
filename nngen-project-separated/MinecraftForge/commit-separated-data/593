BLEU SCORE: 0.01898400888797787

TEST MSG: caseSensitiveCustomCategories must be set before loading the configuration file .
GENERATED MSG: Fixed missing assignment of constructor arg ( thanks @ Lunatrius )

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / config / Configuration . java b / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> index 37d0707 . . 985d61c 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> + + + b / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class Configuration <nl> / * * <nl> * Create a configuration file for the file given in parameter with the provided config version number . <nl> * / <nl> - public Configuration ( File file , String configVersion ) <nl> + private void runConfiguration ( File file , String configVersion ) <nl> { <nl> this . file = file ; <nl> this . definedConfigVersion = configVersion ; <nl> @ @ - 145 , 10 + 145 , 15 @ @ public class Configuration <nl> } <nl> } <nl> <nl> + public Configuration ( File file , String configVersion ) <nl> + { <nl> + runConfiguration ( file , configVersion ) ; <nl> + } <nl> + <nl> public Configuration ( File file , String configVersion , boolean caseSensitiveCustomCategories ) <nl> { <nl> - this ( file , configVersion ) ; <nl> this . caseSensitiveCustomCategories = caseSensitiveCustomCategories ; <nl> + runConfiguration ( file , configVersion ) ; <nl> } <nl> <nl> public Configuration ( File file , boolean caseSensitiveCustomCategories )
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / config / Configuration . java b / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> index 272984c . . 7e4011b 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> + + + b / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> @ @ - 93 , 6 + 93 , 7 @ @ public class Configuration <nl> public Configuration ( File file , String configVersion ) <nl> { <nl> this . file = file ; <nl> + this . definedConfigVersion = configVersion ; <nl> String basePath = ( ( File ) ( FMLInjectionData . data ( ) [ 6 ] ) ) . getAbsolutePath ( ) . replace ( File . separatorChar , ' / ' ) . replace ( " / . " , " " ) ; <nl> String path = file . getAbsolutePath ( ) . replace ( File . separatorChar , ' / ' ) . replace ( " / . / " , " / " ) . replace ( basePath , " " ) ; <nl> if ( PARENT ! = null ) <nl> @ @ - 1719 , 4 + 1720 , 4 @ @ public class Configuration <nl> { <nl> return file ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / config / Configuration . java b / src / main / java / net / minecraftforge / common / config / Configuration . java 
 index 37d0707 . . 985d61c 100644 
 - - - a / src / main / java / net / minecraftforge / common / config / Configuration . java 
 + + + b / src / main / java / net / minecraftforge / common / config / Configuration . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class Configuration 
 / * * 
 * Create a configuration file for the file given in parameter with the provided config version number . 
 * / 
 - public Configuration ( File file , String configVersion ) 
 + private void runConfiguration ( File file , String configVersion ) 
 { 
 this . file = file ; 
 this . definedConfigVersion = configVersion ; 
 @ @ - 145 , 10 + 145 , 15 @ @ public class Configuration 
 } 
 } 
 
 + public Configuration ( File file , String configVersion ) 
 + { 
 + runConfiguration ( file , configVersion ) ; 
 + } 
 + 
 public Configuration ( File file , String configVersion , boolean caseSensitiveCustomCategories ) 
 { 
 - this ( file , configVersion ) ; 
 this . caseSensitiveCustomCategories = caseSensitiveCustomCategories ; 
 + runConfiguration ( file , configVersion ) ; 
 } 
 
 public Configuration ( File file , boolean caseSensitiveCustomCategories )

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / config / Configuration . java b / src / main / java / net / minecraftforge / common / config / Configuration . java 
 index 272984c . . 7e4011b 100644 
 - - - a / src / main / java / net / minecraftforge / common / config / Configuration . java 
 + + + b / src / main / java / net / minecraftforge / common / config / Configuration . java 
 @ @ - 93 , 6 + 93 , 7 @ @ public class Configuration 
 public Configuration ( File file , String configVersion ) 
 { 
 this . file = file ; 
 + this . definedConfigVersion = configVersion ; 
 String basePath = ( ( File ) ( FMLInjectionData . data ( ) [ 6 ] ) ) . getAbsolutePath ( ) . replace ( File . separatorChar , ' / ' ) . replace ( " / . " , " " ) ; 
 String path = file . getAbsolutePath ( ) . replace ( File . separatorChar , ' / ' ) . replace ( " / . / " , " / " ) . replace ( basePath , " " ) ; 
 if ( PARENT ! = null ) 
 @ @ - 1719 , 4 + 1720 , 4 @ @ public class Configuration 
 { 
 return file ; 
 } 
 - } 
 \ No newline at end of file 
 + }
