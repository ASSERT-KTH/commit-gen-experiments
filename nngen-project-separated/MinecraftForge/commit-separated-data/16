BLEU SCORE: 0.06274655310994741

TEST MSG: Fix small logic error in emissive item rendering code
GENERATED MSG: Implement rendering for item models with emissive quads

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 0622268 . . 1586cc3 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 629 , 6 + 629 , 9 @ @ public class ForgeHooksClient <nl> int segmentSkyLight = - 1 ; <nl> / / Coloring of the current segment <nl> int segmentColorMultiplier = color ; <nl> + / / State changed by the current segment <nl> + boolean segmentLightingDirty = false ; <nl> + boolean segmentColorDirty = false ; <nl> / / If the current segment contains lighting data <nl> boolean hasLighting = false ; <nl> <nl> @ @ - 681 , 18 + 684 , 20 @ @ public class ForgeHooksClient <nl> { <nl> if ( i > 0 ) / / Make sure this isn ' t the first quad being processed <nl> { <nl> - drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , lightingDirty & & ( hasLighting | | segment . size ( ) < i ) , colorDirty ) ; <nl> + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , segmentLightingDirty & & ( hasLighting | | segment . size ( ) < i ) , segmentColorDirty ) ; <nl> } <nl> segmentBlockLight = bl ; <nl> segmentSkyLight = sl ; <nl> segmentColorMultiplier = colorMultiplier ; <nl> + segmentLightingDirty = lightingDirty ; <nl> + segmentColorDirty = colorDirty ; <nl> hasLighting = segmentBlockLight > 0 | | segmentSkyLight > 0 ; <nl> } <nl> <nl> segment . add ( q ) ; <nl> } <nl> <nl> - drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , hasLighting | | segment . size ( ) < allquads . size ( ) , false ) ; <nl> + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , segmentLightingDirty & & ( hasLighting | | segment . size ( ) < allquads . size ( ) ) , segmentColorDirty ) ; <nl> <nl> / / Clean up render state if necessary <nl> if ( hasLighting )
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch <nl> index 6767785 . . 0f9f576 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch <nl> @ @ - 16 , 7 + 16 , 18 @ @ <nl> <nl> this . field _ 184395 _ f = p _ i46552 _ 3 _ ; <nl> } <nl> - @ @ - 97 , 7 + 98 , 7 @ @ <nl> + @ @ - 74 , 6 + 75 , 10 @ @ <nl> + } <nl> + <nl> + private void func _ 191967 _ a ( IBakedModel p _ 191967 _ 1 _ , int p _ 191967 _ 2 _ , ItemStack p _ 191967 _ 3 _ ) { <nl> + + if ( net . minecraftforge . common . ForgeConfig . CLIENT . allowEmissiveItems . get ( ) ) { <nl> + + net . minecraftforge . client . ForgeHooksClient . renderLitItem ( this , p _ 191967 _ 1 _ , p _ 191967 _ 2 _ , p _ 191967 _ 3 _ ) ; <nl> + + return ; <nl> + + } <nl> + Tessellator tessellator = Tessellator . func _ 178181 _ a ( ) ; <nl> + BufferBuilder bufferbuilder = tessellator . func _ 178180 _ c ( ) ; <nl> + bufferbuilder . func _ 181668 _ a ( 7 , DefaultVertexFormats . field _ 176599 _ b ) ; <nl> + @ @ - 97 , 7 + 102 , 7 @ @ <nl> if ( p _ 180454 _ 2 _ . func _ 188618 _ c ( ) ) { <nl> GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; <nl> GlStateManager . func _ 179091 _ B ( ) ; <nl> @ @ - 25 , 7 + 36 , 7 @ @ <nl> } else { <nl> this . func _ 191961 _ a ( p _ 180454 _ 2 _ , p _ 180454 _ 1 _ ) ; <nl> if ( p _ 180454 _ 1 _ . func _ 77962 _ s ( ) ) { <nl> - @ @ - 163 , 7 + 164 , 7 @ @ <nl> + @ @ - 163 , 7 + 168 , 7 @ @ <nl> k = k | - 16777216 ; <nl> } <nl> <nl> @ @ - 34 , 7 + 45 , 7 @ @ <nl> } <nl> <nl> } <nl> - @ @ - 224 , 11 + 225 , 8 @ @ <nl> + @ @ - 224 , 11 + 229 , 8 @ @ <nl> GlStateManager . func _ 179147 _ l ( ) ; <nl> GlStateManager . func _ 187428 _ a ( GlStateManager . SourceFactor . SRC _ ALPHA , GlStateManager . DestFactor . ONE _ MINUS _ SRC _ ALPHA , GlStateManager . SourceFactor . ONE , GlStateManager . DestFactor . ZERO ) ; <nl> GlStateManager . func _ 179094 _ E ( ) ; <nl> @ @ - 48 , 7 + 59 , 7 @ @ <nl> <nl> this . func _ 180454 _ a ( p _ 184394 _ 1 _ , p _ 184394 _ 2 _ ) ; <nl> GlStateManager . func _ 187407 _ a ( GlStateManager . CullFace . BACK ) ; <nl> - @ @ - 259 , 7 + 257 , 7 @ @ <nl> + @ @ - 259 , 7 + 261 , 7 @ @ <nl> GlStateManager . func _ 187401 _ a ( GlStateManager . SourceFactor . SRC _ ALPHA , GlStateManager . DestFactor . ONE _ MINUS _ SRC _ ALPHA ) ; <nl> GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; <nl> this . func _ 180452 _ a ( p _ 191962 _ 2 _ , p _ 191962 _ 3 _ , p _ 191962 _ 4 _ . func _ 177556 _ c ( ) ) ; <nl> @ @ - 57 , 7 + 68 , 7 @ @ <nl> this . func _ 180454 _ a ( p _ 191962 _ 1 _ , p _ 191962 _ 4 _ ) ; <nl> GlStateManager . func _ 179118 _ c ( ) ; <nl> GlStateManager . func _ 179101 _ C ( ) ; <nl> - @ @ - 298 , 6 + 296 , 7 @ @ <nl> + @ @ - 298 , 6 + 300 , 7 @ @ <nl> crashreportcategory . func _ 189529 _ a ( " Item Type " , ( ) - > { <nl> return String . valueOf ( ( Object ) p _ 184391 _ 2 _ . func _ 77973 _ b ( ) ) ; <nl> } ) ; <nl> @ @ - 65 , 7 + 76 , 7 @ @ <nl> crashreportcategory . func _ 189529 _ a ( " Item Damage " , ( ) - > { <nl> return String . valueOf ( p _ 184391 _ 2 _ . func _ 77952 _ i ( ) ) ; <nl> } ) ; <nl> - @ @ - 329 , 9 + 328 , 12 @ @ <nl> + @ @ - 329 , 9 + 332 , 12 @ @ <nl> GlStateManager . func _ 179147 _ l ( ) ; <nl> GlStateManager . func _ 179145 _ e ( ) ; <nl> GlStateManager . func _ 179126 _ j ( ) ; <nl> @ @ - 79 , 7 + 90 , 7 @ @ <nl> GlStateManager . func _ 179140 _ f ( ) ; <nl> GlStateManager . func _ 179097 _ i ( ) ; <nl> GlStateManager . func _ 179090 _ x ( ) ; <nl> - @ @ - 339 , 11 + 341 , 9 @ @ <nl> + @ @ - 339 , 11 + 345 , 9 @ @ <nl> GlStateManager . func _ 179084 _ k ( ) ; <nl> Tessellator tessellator = Tessellator . func _ 178181 _ a ( ) ; <nl> BufferBuilder bufferbuilder = tessellator . func _ 178180 _ c ( ) ; <nl> @ @ - 94 , 7 + 105 , 7 @ @ <nl> this . func _ 181565 _ a ( bufferbuilder , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , 13 , 2 , 0 , 0 , 0 , 255 ) ; <nl> this . func _ 181565 _ a ( bufferbuilder , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , i , 1 , j > > 16 & 255 , j > > 8 & 255 , j & 255 , 255 ) ; <nl> GlStateManager . func _ 179147 _ l ( ) ; <nl> - @ @ - 382 , 4 + 382 , 9 @ @ <nl> + @ @ - 382 , 4 + 386 , 9 @ @ <nl> public void func _ 195410 _ a ( IResourceManager p _ 195410 _ 1 _ ) { <nl> this . field _ 175059 _ m . func _ 178085 _ b ( ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index e0c209f . . 057e7a9 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 29 , 6 + 29 , 8 @ @ import java . io . File ; <nl> import java . lang . reflect . Field ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . FloatBuffer ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Optional ; <nl> import java . util . Random ; <nl> @ @ - 47 , 6 + 49 , 7 @ @ import org . apache . logging . log4j . Logger ; <nl> import org . apache . logging . log4j . core . async . ThreadNameCachingStrategy ; <nl> import org . apache . logging . log4j . core . impl . ReusableLogEventFactory ; <nl> import org . lwjgl . BufferUtils ; <nl> + import org . lwjgl . opengl . GL11 ; <nl> <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . client . GameSettings ; <nl> @ @ - 62 , 7 + 65 , 10 @ @ import net . minecraft . client . renderer . BufferBuilder ; <nl> import net . minecraft . client . renderer . GameRenderer ; <nl> import net . minecraft . client . renderer . FogRenderer ; <nl> import net . minecraft . client . renderer . GlStateManager ; <nl> + import net . minecraft . client . renderer . ItemRenderer ; <nl> import net . minecraft . client . renderer . OpenGlHelper ; <nl> + import net . minecraft . client . renderer . RenderHelper ; <nl> + import net . minecraft . client . renderer . Tessellator ; <nl> import net . minecraft . client . renderer . WorldRenderer ; <nl> import net . minecraft . client . renderer . model . BakedQuad ; <nl> import net . minecraft . client . renderer . model . BlockFaceUV ; <nl> @ @ - 79 , 6 + 85 , 7 @ @ import net . minecraft . client . renderer . entity . model . ModelBiped ; <nl> import net . minecraft . client . renderer . texture . NativeImage ; <nl> import net . minecraft . client . renderer . texture . TextureAtlasSprite ; <nl> import net . minecraft . client . renderer . texture . TextureMap ; <nl> + import net . minecraft . client . renderer . vertex . DefaultVertexFormats ; <nl> import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> import net . minecraft . client . renderer . vertex . VertexFormatElement ; <nl> import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; <nl> @ @ - 119 , 6 + 126 , 7 @ @ import net . minecraftforge . client . event . sound . PlaySoundEvent ; <nl> import net . minecraftforge . client . model . ModelDynBucket ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> + import net . minecraftforge . client . model . pipeline . QuadGatheringTransformer ; <nl> import net . minecraftforge . common . ForgeMod ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . model . IModelPart ; <nl> @ @ - 548 , 6 + 556 , 197 @ @ public class ForgeHooksClient <nl> } <nl> } <nl> <nl> + private static class LightGatheringTransformer extends QuadGatheringTransformer { <nl> + <nl> + private static final VertexFormat FORMAT = new VertexFormat ( ) . addElement ( DefaultVertexFormats . TEX _ 2F ) . addElement ( DefaultVertexFormats . TEX _ 2S ) ; <nl> + <nl> + int blockLight , skyLight ; <nl> + <nl> + { setVertexFormat ( FORMAT ) ; } <nl> + <nl> + boolean hasLighting ( ) <nl> + { <nl> + return dataLength [ 1 ] > = 2 ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void processQuad ( ) <nl> + { <nl> + / / Reset light data <nl> + blockLight = 0 ; <nl> + skyLight = 0 ; <nl> + / / Compute average light for all 4 vertices <nl> + for ( int i = 0 ; i < 4 ; i + + ) <nl> + { <nl> + blockLight + = ( int ) ( ( quadData [ 1 ] [ i ] [ 0 ] * 0xFFFF ) / 0x20 ) ; <nl> + skyLight + = ( int ) ( ( quadData [ 1 ] [ i ] [ 1 ] * 0xFFFF ) / 0x20 ) ; <nl> + } <nl> + / / Values must be multiplied by 16 , divided by 4 for average = > x4 <nl> + blockLight * = 4 ; <nl> + skyLight * = 4 ; <nl> + } <nl> + <nl> + / / Dummy overrides <nl> + <nl> + @ Override <nl> + public void setQuadTint ( int tint ) { } <nl> + <nl> + @ Override <nl> + public void setQuadOrientation ( EnumFacing orientation ) { } <nl> + <nl> + @ Override <nl> + public void setApplyDiffuseLighting ( boolean diffuse ) { } <nl> + <nl> + @ Override <nl> + public void setTexture ( TextureAtlasSprite texture ) { } <nl> + } <nl> + <nl> + private static final LightGatheringTransformer lightGatherer = new LightGatheringTransformer ( ) ; <nl> + <nl> + public static void renderLitItem ( ItemRenderer ri , IBakedModel model , int color , ItemStack stack ) <nl> + { <nl> + List < BakedQuad > allquads = new ArrayList < > ( ) ; <nl> + Random random = new Random ( ) ; <nl> + long seed = 42L ; <nl> + <nl> + for ( EnumFacing enumfacing : EnumFacing . values ( ) ) <nl> + { <nl> + random . setSeed ( seed ) ; <nl> + allquads . addAll ( model . getQuads ( null , enumfacing , random ) ) ; <nl> + } <nl> + <nl> + random . setSeed ( seed ) ; <nl> + allquads . addAll ( model . getQuads ( null , null , random ) ) ; <nl> + <nl> + if ( allquads . isEmpty ( ) ) return ; <nl> + <nl> + / / Current list of consecutive quads with the same lighting <nl> + List < BakedQuad > segment = new ArrayList < > ( ) ; <nl> + <nl> + / / Lighting of the current segment <nl> + int segmentBlockLight = - 1 ; <nl> + int segmentSkyLight = - 1 ; <nl> + / / Coloring of the current segment <nl> + int segmentColorMultiplier = color ; <nl> + / / If the current segment contains lighting data <nl> + boolean hasLighting = false ; <nl> + <nl> + / / Tint index cache to avoid unnecessary IItemColor lookups <nl> + int prevTintIndex = - 1 ; <nl> + <nl> + for ( int i = 0 ; i < allquads . size ( ) ; i + + ) <nl> + { <nl> + BakedQuad q = allquads . get ( i ) ; <nl> + <nl> + / / Lighting of the current quad <nl> + int bl = 0 ; <nl> + int sl = 0 ; <nl> + <nl> + / / Fail - fast on ITEM , as it cannot have light data <nl> + if ( q . getFormat ( ) ! = DefaultVertexFormats . ITEM & & q . getFormat ( ) . hasUv ( 1 ) ) <nl> + { <nl> + q . pipe ( lightGatherer ) ; <nl> + if ( lightGatherer . hasLighting ( ) ) <nl> + { <nl> + bl = lightGatherer . blockLight ; <nl> + sl = lightGatherer . skyLight ; <nl> + } <nl> + } <nl> + <nl> + int colorMultiplier = segmentColorMultiplier ; <nl> + <nl> + / / If there is no color override , and this quad is tinted , we need to apply IItemColor <nl> + if ( color = = 0xFFFFFFFF & & q . hasTintIndex ( ) ) <nl> + { <nl> + int tintIndex = q . getTintIndex ( ) ; <nl> + <nl> + if ( prevTintIndex ! = tintIndex ) <nl> + { <nl> + colorMultiplier = getColorMultiplier ( stack , tintIndex ) ; <nl> + } <nl> + prevTintIndex = tintIndex ; <nl> + } <nl> + else <nl> + { <nl> + colorMultiplier = color ; <nl> + prevTintIndex = - 1 ; <nl> + } <nl> + <nl> + boolean lightingDirty = segmentBlockLight ! = bl | | segmentSkyLight ! = sl ; <nl> + boolean colorDirty = hasLighting & & segmentColorMultiplier ! = colorMultiplier ; <nl> + <nl> + / / If lighting or color data has changed , draw the segment and flush it <nl> + if ( lightingDirty | | colorDirty ) <nl> + { <nl> + if ( i > 0 ) / / Make sure this isn ' t the first quad being processed <nl> + { <nl> + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , lightingDirty & & ( hasLighting | | segment . size ( ) < i ) , colorDirty ) ; <nl> + } <nl> + segmentBlockLight = bl ; <nl> + segmentSkyLight = sl ; <nl> + segmentColorMultiplier = colorMultiplier ; <nl> + hasLighting = segmentBlockLight > 0 | | segmentSkyLight > 0 ; <nl> + } <nl> + <nl> + segment . add ( q ) ; <nl> + } <nl> + <nl> + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , hasLighting | | segment . size ( ) < allquads . size ( ) , false ) ; <nl> + <nl> + / / Clean up render state if necessary <nl> + if ( hasLighting ) <nl> + { <nl> + OpenGlHelper . glMultiTexCoord2f ( OpenGlHelper . GL _ TEXTURE1 , OpenGlHelper . lastBrightnessX , OpenGlHelper . lastBrightnessY ) ; <nl> + GL11 . glMaterialfv ( GL11 . GL _ FRONT _ AND _ BACK , GL11 . GL _ EMISSION , RenderHelper . setColorBuffer ( 0 , 0 , 0 , 1 ) ) ; <nl> + } <nl> + } <nl> + <nl> + private static void drawSegment ( ItemRenderer ri , int baseColor , ItemStack stack , List < BakedQuad > segment , int bl , int sl , int tintColor , boolean updateLighting , boolean updateColor ) <nl> + { <nl> + BufferBuilder bufferbuilder = Tessellator . getInstance ( ) . getBuffer ( ) ; <nl> + bufferbuilder . begin ( GL11 . GL _ QUADS , DefaultVertexFormats . ITEM ) ; <nl> + <nl> + float lastBl = OpenGlHelper . lastBrightnessX ; <nl> + float lastSl = OpenGlHelper . lastBrightnessY ; <nl> + <nl> + if ( updateLighting | | updateColor ) <nl> + { <nl> + float emissive = Math . max ( bl , sl ) / 240f ; <nl> + <nl> + float r = ( tintColor > > > 16 & 0xff ) / 255f ; <nl> + float g = ( tintColor > > > 8 & 0xff ) / 255f ; <nl> + float b = ( tintColor & 0xff ) / 255f ; <nl> + <nl> + GL11 . glMaterialfv ( GL11 . GL _ FRONT _ AND _ BACK , GL11 . GL _ EMISSION , RenderHelper . setColorBuffer ( emissive * r , emissive * g , emissive * b , 1 ) ) ; <nl> + <nl> + if ( updateLighting ) <nl> + { <nl> + OpenGlHelper . glMultiTexCoord2f ( OpenGlHelper . GL _ TEXTURE1 , Math . max ( bl , lastBl ) , Math . max ( sl , lastSl ) ) ; <nl> + } <nl> + } <nl> + <nl> + ri . renderQuads ( bufferbuilder , segment , baseColor , stack ) ; <nl> + Tessellator . getInstance ( ) . draw ( ) ; <nl> + <nl> + / / Preserve this as it represents the " world " lighting <nl> + OpenGlHelper . lastBrightnessX = lastBl ; <nl> + OpenGlHelper . lastBrightnessY = lastSl ; <nl> + <nl> + segment . clear ( ) ; <nl> + } <nl> + <nl> + private static int getColorMultiplier ( ItemStack stack , int tintIndex ) <nl> + { <nl> + if ( tintIndex = = - 1 | | stack . isEmpty ( ) ) return 0xFFFFFFFF ; <nl> + <nl> + int colorMultiplier = Minecraft . getInstance ( ) . getItemColors ( ) . getColor ( stack , tintIndex ) ; <nl> + <nl> + / / Always full opacity <nl> + colorMultiplier | = 0xff < < 24 ; / / - 16777216 <nl> + <nl> + return colorMultiplier ; <nl> + } <nl> + <nl> / * * <nl> * internal , relies on fixed format of FaceBakery <nl> * / <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeConfig . java b / src / main / java / net / minecraftforge / common / ForgeConfig . java <nl> index 490ebf9 . . c516be7 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeConfig . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeConfig . java <nl> @ @ - 125 , 6 + 125 , 8 @ @ public class ForgeConfig <nl> public final BooleanValue selectiveResourceReloadEnabled ; <nl> <nl> public final BooleanValue showLoadWarnings ; <nl> + <nl> + public final BooleanValue allowEmissiveItems ; <nl> <nl> Client ( ForgeConfigSpec . Builder builder ) { <nl> builder . comment ( " Client only settings , mostly things related to rendering " ) <nl> @ @ - 166 , 6 + 168 , 11 @ @ public class ForgeConfig <nl> . comment ( " When enabled , forge will show any warnings that occurred during loading " ) <nl> . translation ( " forge . configgui . showloadwarnings " ) <nl> . define ( " showLoadWarnings " , true ) ; <nl> + <nl> + allowEmissiveItems = builder <nl> + . comment ( " Allow item rendering to detect emissive quads and draw them properly . This allows glowing blocks to look the same in item form , but incurs a very slight performance hit . " ) <nl> + . translation ( " forge . configgui . allowEmissiveItems " ) <nl> + . define ( " allowEmissiveItems " , true ) ; <nl> <nl> builder . pop ( ) ; <nl> } <nl> diff - - git a / src / main / resources / META - INF / accesstransformer . cfg b / src / main / resources / META - INF / accesstransformer . cfg <nl> index 0c10d21 . . 52575b7 100644 <nl> - - - a / src / main / resources / META - INF / accesstransformer . cfg <nl> + + + b / src / main / resources / META - INF / accesstransformer . cfg <nl> @ @ - 90 , 6 + 90 , 8 @ @ public net . minecraft . entity . item . EntityXPOrb field _ 70530 _ e # xpValue <nl> public net . minecraft . world . gen . structure . StructureVillagePieces $ Village <nl> # RenderPlayer <nl> # public net . minecraft . client . renderer . entity . RenderBiped field _ 77071 _ a # modelBipedMain <nl> + # RenderItem <nl> + public net . minecraft . client . renderer . ItemRenderer func _ 191970 _ a ( Lnet / minecraft / client / renderer / BufferBuilder ; Ljava / util / List ; ILnet / minecraft / item / ItemStack ; ) V # renderQuads <nl> # ChunkProviderServer <nl> public net . minecraft . world . gen . ChunkProviderServer field _ 186029 _ c # chunkGenerator <nl> public net . minecraft . world . gen . ChunkProviderServer field _ 73244 _ f # loadedChunkHashMap

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 0622268 . . 1586cc3 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 629 , 6 + 629 , 9 @ @ public class ForgeHooksClient 
 int segmentSkyLight = - 1 ; 
 / / Coloring of the current segment 
 int segmentColorMultiplier = color ; 
 + / / State changed by the current segment 
 + boolean segmentLightingDirty = false ; 
 + boolean segmentColorDirty = false ; 
 / / If the current segment contains lighting data 
 boolean hasLighting = false ; 
 
 @ @ - 681 , 18 + 684 , 20 @ @ public class ForgeHooksClient 
 { 
 if ( i > 0 ) / / Make sure this isn ' t the first quad being processed 
 { 
 - drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , lightingDirty & & ( hasLighting | | segment . size ( ) < i ) , colorDirty ) ; 
 + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , segmentLightingDirty & & ( hasLighting | | segment . size ( ) < i ) , segmentColorDirty ) ; 
 } 
 segmentBlockLight = bl ; 
 segmentSkyLight = sl ; 
 segmentColorMultiplier = colorMultiplier ; 
 + segmentLightingDirty = lightingDirty ; 
 + segmentColorDirty = colorDirty ; 
 hasLighting = segmentBlockLight > 0 | | segmentSkyLight > 0 ; 
 } 
 
 segment . add ( q ) ; 
 } 
 
 - drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , hasLighting | | segment . size ( ) < allquads . size ( ) , false ) ; 
 + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , segmentLightingDirty & & ( hasLighting | | segment . size ( ) < allquads . size ( ) ) , segmentColorDirty ) ; 
 
 / / Clean up render state if necessary 
 if ( hasLighting )

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch 
 index 6767785 . . 0f9f576 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch 
 @ @ - 16 , 7 + 16 , 18 @ @ 
 
 this . field _ 184395 _ f = p _ i46552 _ 3 _ ; 
 } 
 - @ @ - 97 , 7 + 98 , 7 @ @ 
 + @ @ - 74 , 6 + 75 , 10 @ @ 
 + } 
 + 
 + private void func _ 191967 _ a ( IBakedModel p _ 191967 _ 1 _ , int p _ 191967 _ 2 _ , ItemStack p _ 191967 _ 3 _ ) { 
 + + if ( net . minecraftforge . common . ForgeConfig . CLIENT . allowEmissiveItems . get ( ) ) { 
 + + net . minecraftforge . client . ForgeHooksClient . renderLitItem ( this , p _ 191967 _ 1 _ , p _ 191967 _ 2 _ , p _ 191967 _ 3 _ ) ; 
 + + return ; 
 + + } 
 + Tessellator tessellator = Tessellator . func _ 178181 _ a ( ) ; 
 + BufferBuilder bufferbuilder = tessellator . func _ 178180 _ c ( ) ; 
 + bufferbuilder . func _ 181668 _ a ( 7 , DefaultVertexFormats . field _ 176599 _ b ) ; 
 + @ @ - 97 , 7 + 102 , 7 @ @ 
 if ( p _ 180454 _ 2 _ . func _ 188618 _ c ( ) ) { 
 GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; 
 GlStateManager . func _ 179091 _ B ( ) ; 
 @ @ - 25 , 7 + 36 , 7 @ @ 
 } else { 
 this . func _ 191961 _ a ( p _ 180454 _ 2 _ , p _ 180454 _ 1 _ ) ; 
 if ( p _ 180454 _ 1 _ . func _ 77962 _ s ( ) ) { 
 - @ @ - 163 , 7 + 164 , 7 @ @ 
 + @ @ - 163 , 7 + 168 , 7 @ @ 
 k = k | - 16777216 ; 
 } 
 
 @ @ - 34 , 7 + 45 , 7 @ @ 
 } 
 
 } 
 - @ @ - 224 , 11 + 225 , 8 @ @ 
 + @ @ - 224 , 11 + 229 , 8 @ @ 
 GlStateManager . func _ 179147 _ l ( ) ; 
 GlStateManager . func _ 187428 _ a ( GlStateManager . SourceFactor . SRC _ ALPHA , GlStateManager . DestFactor . ONE _ MINUS _ SRC _ ALPHA , GlStateManager . SourceFactor . ONE , GlStateManager . DestFactor . ZERO ) ; 
 GlStateManager . func _ 179094 _ E ( ) ; 
 @ @ - 48 , 7 + 59 , 7 @ @ 
 
 this . func _ 180454 _ a ( p _ 184394 _ 1 _ , p _ 184394 _ 2 _ ) ; 
 GlStateManager . func _ 187407 _ a ( GlStateManager . CullFace . BACK ) ; 
 - @ @ - 259 , 7 + 257 , 7 @ @ 
 + @ @ - 259 , 7 + 261 , 7 @ @ 
 GlStateManager . func _ 187401 _ a ( GlStateManager . SourceFactor . SRC _ ALPHA , GlStateManager . DestFactor . ONE _ MINUS _ SRC _ ALPHA ) ; 
 GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; 
 this . func _ 180452 _ a ( p _ 191962 _ 2 _ , p _ 191962 _ 3 _ , p _ 191962 _ 4 _ . func _ 177556 _ c ( ) ) ; 
 @ @ - 57 , 7 + 68 , 7 @ @ 
 this . func _ 180454 _ a ( p _ 191962 _ 1 _ , p _ 191962 _ 4 _ ) ; 
 GlStateManager . func _ 179118 _ c ( ) ; 
 GlStateManager . func _ 179101 _ C ( ) ; 
 - @ @ - 298 , 6 + 296 , 7 @ @ 
 + @ @ - 298 , 6 + 300 , 7 @ @ 
 crashreportcategory . func _ 189529 _ a ( " Item Type " , ( ) - > { 
 return String . valueOf ( ( Object ) p _ 184391 _ 2 _ . func _ 77973 _ b ( ) ) ; 
 } ) ; 
 @ @ - 65 , 7 + 76 , 7 @ @ 
 crashreportcategory . func _ 189529 _ a ( " Item Damage " , ( ) - > { 
 return String . valueOf ( p _ 184391 _ 2 _ . func _ 77952 _ i ( ) ) ; 
 } ) ; 
 - @ @ - 329 , 9 + 328 , 12 @ @ 
 + @ @ - 329 , 9 + 332 , 12 @ @ 
 GlStateManager . func _ 179147 _ l ( ) ; 
 GlStateManager . func _ 179145 _ e ( ) ; 
 GlStateManager . func _ 179126 _ j ( ) ; 
 @ @ - 79 , 7 + 90 , 7 @ @ 
 GlStateManager . func _ 179140 _ f ( ) ; 
 GlStateManager . func _ 179097 _ i ( ) ; 
 GlStateManager . func _ 179090 _ x ( ) ; 
 - @ @ - 339 , 11 + 341 , 9 @ @ 
 + @ @ - 339 , 11 + 345 , 9 @ @ 
 GlStateManager . func _ 179084 _ k ( ) ; 
 Tessellator tessellator = Tessellator . func _ 178181 _ a ( ) ; 
 BufferBuilder bufferbuilder = tessellator . func _ 178180 _ c ( ) ; 
 @ @ - 94 , 7 + 105 , 7 @ @ 
 this . func _ 181565 _ a ( bufferbuilder , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , 13 , 2 , 0 , 0 , 0 , 255 ) ; 
 this . func _ 181565 _ a ( bufferbuilder , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , i , 1 , j > > 16 & 255 , j > > 8 & 255 , j & 255 , 255 ) ; 
 GlStateManager . func _ 179147 _ l ( ) ; 
 - @ @ - 382 , 4 + 382 , 9 @ @ 
 + @ @ - 382 , 4 + 386 , 9 @ @ 
 public void func _ 195410 _ a ( IResourceManager p _ 195410 _ 1 _ ) { 
 this . field _ 175059 _ m . func _ 178085 _ b ( ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index e0c209f . . 057e7a9 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 29 , 6 + 29 , 8 @ @ import java . io . File ; 
 import java . lang . reflect . Field ; 
 import java . nio . ByteBuffer ; 
 import java . nio . FloatBuffer ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 import java . util . Map ; 
 import java . util . Optional ; 
 import java . util . Random ; 
 @ @ - 47 , 6 + 49 , 7 @ @ import org . apache . logging . log4j . Logger ; 
 import org . apache . logging . log4j . core . async . ThreadNameCachingStrategy ; 
 import org . apache . logging . log4j . core . impl . ReusableLogEventFactory ; 
 import org . lwjgl . BufferUtils ; 
 + import org . lwjgl . opengl . GL11 ; 
 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . client . GameSettings ; 
 @ @ - 62 , 7 + 65 , 10 @ @ import net . minecraft . client . renderer . BufferBuilder ; 
 import net . minecraft . client . renderer . GameRenderer ; 
 import net . minecraft . client . renderer . FogRenderer ; 
 import net . minecraft . client . renderer . GlStateManager ; 
 + import net . minecraft . client . renderer . ItemRenderer ; 
 import net . minecraft . client . renderer . OpenGlHelper ; 
 + import net . minecraft . client . renderer . RenderHelper ; 
 + import net . minecraft . client . renderer . Tessellator ; 
 import net . minecraft . client . renderer . WorldRenderer ; 
 import net . minecraft . client . renderer . model . BakedQuad ; 
 import net . minecraft . client . renderer . model . BlockFaceUV ; 
 @ @ - 79 , 6 + 85 , 7 @ @ import net . minecraft . client . renderer . entity . model . ModelBiped ; 
 import net . minecraft . client . renderer . texture . NativeImage ; 
 import net . minecraft . client . renderer . texture . TextureAtlasSprite ; 
 import net . minecraft . client . renderer . texture . TextureMap ; 
 + import net . minecraft . client . renderer . vertex . DefaultVertexFormats ; 
 import net . minecraft . client . renderer . vertex . VertexFormat ; 
 import net . minecraft . client . renderer . vertex . VertexFormatElement ; 
 import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; 
 @ @ - 119 , 6 + 126 , 7 @ @ import net . minecraftforge . client . event . sound . PlaySoundEvent ; 
 import net . minecraftforge . client . model . ModelDynBucket ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 + import net . minecraftforge . client . model . pipeline . QuadGatheringTransformer ; 
 import net . minecraftforge . common . ForgeMod ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . model . IModelPart ; 
 @ @ - 548 , 6 + 556 , 197 @ @ public class ForgeHooksClient 
 } 
 } 
 
 + private static class LightGatheringTransformer extends QuadGatheringTransformer { 
 + 
 + private static final VertexFormat FORMAT = new VertexFormat ( ) . addElement ( DefaultVertexFormats . TEX _ 2F ) . addElement ( DefaultVertexFormats . TEX _ 2S ) ; 
 + 
 + int blockLight , skyLight ; 
 + 
 + { setVertexFormat ( FORMAT ) ; } 
 + 
 + boolean hasLighting ( ) 
 + { 
 + return dataLength [ 1 ] > = 2 ; 
 + } 
 + 
 + @ Override 
 + protected void processQuad ( ) 
 + { 
 + / / Reset light data 
 + blockLight = 0 ; 
 + skyLight = 0 ; 
 + / / Compute average light for all 4 vertices 
 + for ( int i = 0 ; i < 4 ; i + + ) 
 + { 
 + blockLight + = ( int ) ( ( quadData [ 1 ] [ i ] [ 0 ] * 0xFFFF ) / 0x20 ) ; 
 + skyLight + = ( int ) ( ( quadData [ 1 ] [ i ] [ 1 ] * 0xFFFF ) / 0x20 ) ; 
 + } 
 + / / Values must be multiplied by 16 , divided by 4 for average = > x4 
 + blockLight * = 4 ; 
 + skyLight * = 4 ; 
 + } 
 + 
 + / / Dummy overrides 
 + 
 + @ Override 
 + public void setQuadTint ( int tint ) { } 
 + 
 + @ Override 
 + public void setQuadOrientation ( EnumFacing orientation ) { } 
 + 
 + @ Override 
 + public void setApplyDiffuseLighting ( boolean diffuse ) { } 
 + 
 + @ Override 
 + public void setTexture ( TextureAtlasSprite texture ) { } 
 + } 
 + 
 + private static final LightGatheringTransformer lightGatherer = new LightGatheringTransformer ( ) ; 
 + 
 + public static void renderLitItem ( ItemRenderer ri , IBakedModel model , int color , ItemStack stack ) 
 + { 
 + List < BakedQuad > allquads = new ArrayList < > ( ) ; 
 + Random random = new Random ( ) ; 
 + long seed = 42L ; 
 + 
 + for ( EnumFacing enumfacing : EnumFacing . values ( ) ) 
 + { 
 + random . setSeed ( seed ) ; 
 + allquads . addAll ( model . getQuads ( null , enumfacing , random ) ) ; 
 + } 
 + 
 + random . setSeed ( seed ) ; 
 + allquads . addAll ( model . getQuads ( null , null , random ) ) ; 
 + 
 + if ( allquads . isEmpty ( ) ) return ; 
 + 
 + / / Current list of consecutive quads with the same lighting 
 + List < BakedQuad > segment = new ArrayList < > ( ) ; 
 + 
 + / / Lighting of the current segment 
 + int segmentBlockLight = - 1 ; 
 + int segmentSkyLight = - 1 ; 
 + / / Coloring of the current segment 
 + int segmentColorMultiplier = color ; 
 + / / If the current segment contains lighting data 
 + boolean hasLighting = false ; 
 + 
 + / / Tint index cache to avoid unnecessary IItemColor lookups 
 + int prevTintIndex = - 1 ; 
 + 
 + for ( int i = 0 ; i < allquads . size ( ) ; i + + ) 
 + { 
 + BakedQuad q = allquads . get ( i ) ; 
 + 
 + / / Lighting of the current quad 
 + int bl = 0 ; 
 + int sl = 0 ; 
 + 
 + / / Fail - fast on ITEM , as it cannot have light data 
 + if ( q . getFormat ( ) ! = DefaultVertexFormats . ITEM & & q . getFormat ( ) . hasUv ( 1 ) ) 
 + { 
 + q . pipe ( lightGatherer ) ; 
 + if ( lightGatherer . hasLighting ( ) ) 
 + { 
 + bl = lightGatherer . blockLight ; 
 + sl = lightGatherer . skyLight ; 
 + } 
 + } 
 + 
 + int colorMultiplier = segmentColorMultiplier ; 
 + 
 + / / If there is no color override , and this quad is tinted , we need to apply IItemColor 
 + if ( color = = 0xFFFFFFFF & & q . hasTintIndex ( ) ) 
 + { 
 + int tintIndex = q . getTintIndex ( ) ; 
 + 
 + if ( prevTintIndex ! = tintIndex ) 
 + { 
 + colorMultiplier = getColorMultiplier ( stack , tintIndex ) ; 
 + } 
 + prevTintIndex = tintIndex ; 
 + } 
 + else 
 + { 
 + colorMultiplier = color ; 
 + prevTintIndex = - 1 ; 
 + } 
 + 
 + boolean lightingDirty = segmentBlockLight ! = bl | | segmentSkyLight ! = sl ; 
 + boolean colorDirty = hasLighting & & segmentColorMultiplier ! = colorMultiplier ; 
 + 
 + / / If lighting or color data has changed , draw the segment and flush it 
 + if ( lightingDirty | | colorDirty ) 
 + { 
 + if ( i > 0 ) / / Make sure this isn ' t the first quad being processed 
 + { 
 + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , lightingDirty & & ( hasLighting | | segment . size ( ) < i ) , colorDirty ) ; 
 + } 
 + segmentBlockLight = bl ; 
 + segmentSkyLight = sl ; 
 + segmentColorMultiplier = colorMultiplier ; 
 + hasLighting = segmentBlockLight > 0 | | segmentSkyLight > 0 ; 
 + } 
 + 
 + segment . add ( q ) ; 
 + } 
 + 
 + drawSegment ( ri , color , stack , segment , segmentBlockLight , segmentSkyLight , segmentColorMultiplier , hasLighting | | segment . size ( ) < allquads . size ( ) , false ) ; 
 + 
 + / / Clean up render state if necessary 
 + if ( hasLighting ) 
 + { 
 + OpenGlHelper . glMultiTexCoord2f ( OpenGlHelper . GL _ TEXTURE1 , OpenGlHelper . lastBrightnessX , OpenGlHelper . lastBrightnessY ) ; 
 + GL11 . glMaterialfv ( GL11 . GL _ FRONT _ AND _ BACK , GL11 . GL _ EMISSION , RenderHelper . setColorBuffer ( 0 , 0 , 0 , 1 ) ) ; 
 + } 
 + } 
 + 
 + private static void drawSegment ( ItemRenderer ri , int baseColor , ItemStack stack , List < BakedQuad > segment , int bl , int sl , int tintColor , boolean updateLighting , boolean updateColor ) 
 + { 
 + BufferBuilder bufferbuilder = Tessellator . getInstance ( ) . getBuffer ( ) ; 
 + bufferbuilder . begin ( GL11 . GL _ QUADS , DefaultVertexFormats . ITEM ) ; 
 + 
 + float lastBl = OpenGlHelper . lastBrightnessX ; 
 + float lastSl = OpenGlHelper . lastBrightnessY ; 
 + 
 + if ( updateLighting | | updateColor ) 
 + { 
 + float emissive = Math . max ( bl , sl ) / 240f ; 
 + 
 + float r = ( tintColor > > > 16 & 0xff ) / 255f ; 
 + float g = ( tintColor > > > 8 & 0xff ) / 255f ; 
 + float b = ( tintColor & 0xff ) / 255f ; 
 + 
 + GL11 . glMaterialfv ( GL11 . GL _ FRONT _ AND _ BACK , GL11 . GL _ EMISSION , RenderHelper . setColorBuffer ( emissive * r , emissive * g , emissive * b , 1 ) ) ; 
 + 
 + if ( updateLighting ) 
 + { 
 + OpenGlHelper . glMultiTexCoord2f ( OpenGlHelper . GL _ TEXTURE1 , Math . max ( bl , lastBl ) , Math . max ( sl , lastSl ) ) ; 
 + } 
 + } 
 + 
 + ri . renderQuads ( bufferbuilder , segment , baseColor , stack ) ; 
 + Tessellator . getInstance ( ) . draw ( ) ; 
 + 
 + / / Preserve this as it represents the " world " lighting 
 + OpenGlHelper . lastBrightnessX = lastBl ; 
 + OpenGlHelper . lastBrightnessY = lastSl ; 
 + 
 + segment . clear ( ) ; 
 + } 
 + 
 + private static int getColorMultiplier ( ItemStack stack , int tintIndex ) 
 + { 
 + if ( tintIndex = = - 1 | | stack . isEmpty ( ) ) return 0xFFFFFFFF ; 
 + 
 + int colorMultiplier = Minecraft . getInstance ( ) . getItemColors ( ) . getColor ( stack , tintIndex ) ; 
 + 
 + / / Always full opacity 
 + colorMultiplier | = 0xff < < 24 ; / / - 16777216 
 + 
 + return colorMultiplier ; 
 + } 
 + 
 / * * 
 * internal , relies on fixed format of FaceBakery 
 * / 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeConfig . java b / src / main / java / net / minecraftforge / common / ForgeConfig . java 
 index 490ebf9 . . c516be7 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeConfig . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeConfig . java 
 @ @ - 125 , 6 + 125 , 8 @ @ public class ForgeConfig 
 public final BooleanValue selectiveResourceReloadEnabled ; 
 
 public final BooleanValue showLoadWarnings ; 
 + 
 + public final BooleanValue allowEmissiveItems ; 
 
 Client ( ForgeConfigSpec . Builder builder ) { 
 builder . comment ( " Client only settings , mostly things related to rendering " ) 
 @ @ - 166 , 6 + 168 , 11 @ @ public class ForgeConfig 
 . comment ( " When enabled , forge will show any warnings that occurred during loading " ) 
 . translation ( " forge . configgui . showloadwarnings " ) 
 . define ( " showLoadWarnings " , true ) ; 
 + 
 + allowEmissiveItems = builder 
 + . comment ( " Allow item rendering to detect emissive quads and draw them properly . This allows glowing blocks to look the same in item form , but incurs a very slight performance hit . " ) 
 + . translation ( " forge . configgui . allowEmissiveItems " ) 
 + . define ( " allowEmissiveItems " , true ) ; 
 
 builder . pop ( ) ; 
 } 
 diff - - git a / src / main / resources / META - INF / accesstransformer . cfg b / src / main / resources / META - INF / accesstransformer . cfg 
 index 0c10d21 . . 52575b7 100644 
 - - - a / src / main / resources / META - INF / accesstransformer . cfg 
 + + + b / src / main / resources / META - INF / accesstransformer . cfg 
 @ @ - 90 , 6 + 90 , 8 @ @ public net . minecraft . entity . item . EntityXPOrb field _ 70530 _ e # xpValue 
 public net . minecraft . world . gen . structure . StructureVillagePieces $ Village 
 # RenderPlayer 
 # public net . minecraft . client . renderer . entity . RenderBiped field _ 77071 _ a # modelBipedMain 
 + # RenderItem 
 + public net . minecraft . client . renderer . ItemRenderer func _ 191970 _ a ( Lnet / minecraft / client / renderer / BufferBuilder ; Ljava / util / List ; ILnet / minecraft / item / ItemStack ; ) V # renderQuads 
 # ChunkProviderServer 
 public net . minecraft . world . gen . ChunkProviderServer field _ 186029 _ c # chunkGenerator 
 public net . minecraft . world . gen . ChunkProviderServer field _ 73244 _ f # loadedChunkHashMap
