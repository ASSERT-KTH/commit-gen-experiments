BLEU SCORE: 0.004443919932486925

TEST MSG: Fix DungeonHooks method to use correct type
GENERATED MSG: Be noisy when API is in a coremod . It ' ll never work and modders should realize that fact .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / DungeonHooks . java b / src / main / java / net / minecraftforge / common / DungeonHooks . java <nl> index c23ca8e . . 6ebdc85 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / DungeonHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / DungeonHooks . java <nl> @ @ - 62 , 13 + 62 , 21 @ @ public class DungeonHooks <nl> return rarity ; <nl> } <nl> <nl> + / / TODO : remove <nl> + / * * @ deprecated use { @ link # removeDungeonMob ( ResourceLocation ) } * / <nl> + @ Deprecated <nl> + public static int removeDungeonMob ( String name ) <nl> + { <nl> + return removeDungeonMob ( new ResourceLocation ( name ) ) ; <nl> + } <nl> + <nl> / * * <nl> * Will completely remove a Mob from the dungeon spawn list . <nl> * <nl> * @ param name The name of the mob to remove <nl> * @ return The rarity of the removed mob , prior to being removed . <nl> * / <nl> - public static int removeDungeonMob ( String name ) <nl> + public static int removeDungeonMob ( ResourceLocation name ) <nl> { <nl> for ( DungeonMob mob : dungeonMobs ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> index 14ee5d1 . . b58949b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> @ @ - 639 , 7 + 639 , 7 @ @ public class Loader <nl> return " 8 . 0 . 99 . 99 " ; <nl> } <nl> <nl> - public ClassLoader getModClassLoader ( ) <nl> + public ModClassLoader getModClassLoader ( ) <nl> { <nl> return modClassLoader ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java b / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java <nl> index 4f4d8b2 . . 5733190 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java <nl> @ @ - 90 , 6 + 90 , 9 @ @ public class ModAPIManager { <nl> <nl> public void validate ( String providedAPI , String apiOwner , String apiVersion ) <nl> { <nl> + if ( Loader . instance ( ) . getModClassLoader ( ) . containsSource ( this . getSource ( ) ) ) { <nl> + FMLLog . bigWarning ( " The API % s from source % s is loaded from an incompatible classloader . THIS WILL NOT WORK ! " , providedAPI , this . getSource ( ) . getAbsolutePath ( ) ) ; <nl> + } <nl> / / TODO Compare this annotation data to the one we first found . Maybe barf if there is inconsistency ? <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java b / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java <nl> index 161f936 . . 854ff23 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import java . net . URISyntaxException ; <nl> import java . net . URL ; <nl> import java . net . URLClassLoader ; <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> <nl> @ @ - 30 , 6 + 31 , 7 @ @ import net . minecraftforge . fml . common . discovery . ASMDataTable ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> + import com . google . common . collect . Lists ; <nl> <nl> / * * <nl> * A simple delegating class loader used to load mods into the system <nl> @ @ - 42 , 6 + 44 , 7 @ @ public class ModClassLoader extends URLClassLoader <nl> { <nl> private static final List < String > STANDARD _ LIBRARIES = ImmutableList . of ( " jinput . jar " , " lwjgl . jar " , " lwjgl _ util . jar " , " rt . jar " ) ; <nl> private LaunchClassLoader mainClassLoader ; <nl> + private List < File > sources ; <nl> <nl> public ModClassLoader ( ClassLoader parent ) { <nl> super ( new URL [ 0 ] , null ) ; <nl> @ @ - 52 , 6 + 55 , 7 @ @ public class ModClassLoader extends URLClassLoader <nl> { <nl> URL url = modFile . toURI ( ) . toURL ( ) ; <nl> mainClassLoader . addURL ( url ) ; <nl> + this . sources . add ( modFile ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 148 , 4 + 152 , 20 @ @ public class ModClassLoader extends URLClassLoader <nl> modAPI . initTable ( dataTable ) ; <nl> return modAPI ; <nl> } <nl> + <nl> + List < URL > parentURLs = null ; <nl> + public boolean containsSource ( File source ) <nl> + { <nl> + if ( parentURLs = = null ) { <nl> + parentURLs = Arrays . asList ( mainClassLoader . getURLs ( ) ) ; <nl> + } <nl> + try <nl> + { <nl> + return parentURLs . contains ( source . toURI ( ) . toURL ( ) ) ; <nl> + } catch ( MalformedURLException e ) <nl> + { <nl> + / / shouldn ' t happen <nl> + return false ; <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / DungeonHooks . java b / src / main / java / net / minecraftforge / common / DungeonHooks . java 
 index c23ca8e . . 6ebdc85 100644 
 - - - a / src / main / java / net / minecraftforge / common / DungeonHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / DungeonHooks . java 
 @ @ - 62 , 13 + 62 , 21 @ @ public class DungeonHooks 
 return rarity ; 
 } 
 
 + / / TODO : remove 
 + / * * @ deprecated use { @ link # removeDungeonMob ( ResourceLocation ) } * / 
 + @ Deprecated 
 + public static int removeDungeonMob ( String name ) 
 + { 
 + return removeDungeonMob ( new ResourceLocation ( name ) ) ; 
 + } 
 + 
 / * * 
 * Will completely remove a Mob from the dungeon spawn list . 
 * 
 * @ param name The name of the mob to remove 
 * @ return The rarity of the removed mob , prior to being removed . 
 * / 
 - public static int removeDungeonMob ( String name ) 
 + public static int removeDungeonMob ( ResourceLocation name ) 
 { 
 for ( DungeonMob mob : dungeonMobs ) 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 index 14ee5d1 . . b58949b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 @ @ - 639 , 7 + 639 , 7 @ @ public class Loader 
 return " 8 . 0 . 99 . 99 " ; 
 } 
 
 - public ClassLoader getModClassLoader ( ) 
 + public ModClassLoader getModClassLoader ( ) 
 { 
 return modClassLoader ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java b / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java 
 index 4f4d8b2 . . 5733190 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / ModAPIManager . java 
 @ @ - 90 , 6 + 90 , 9 @ @ public class ModAPIManager { 
 
 public void validate ( String providedAPI , String apiOwner , String apiVersion ) 
 { 
 + if ( Loader . instance ( ) . getModClassLoader ( ) . containsSource ( this . getSource ( ) ) ) { 
 + FMLLog . bigWarning ( " The API % s from source % s is loaded from an incompatible classloader . THIS WILL NOT WORK ! " , providedAPI , this . getSource ( ) . getAbsolutePath ( ) ) ; 
 + } 
 / / TODO Compare this annotation data to the one we first found . Maybe barf if there is inconsistency ? 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java b / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java 
 index 161f936 . . 854ff23 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / ModClassLoader . java 
 @ @ - 19 , 6 + 19 , 7 @ @ import java . net . URISyntaxException ; 
 import java . net . URL ; 
 import java . net . URLClassLoader ; 
 import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . List ; 
 import java . util . Set ; 
 
 @ @ - 30 , 6 + 31 , 7 @ @ import net . minecraftforge . fml . common . discovery . ASMDataTable ; 
 import org . apache . logging . log4j . Level ; 
 
 import com . google . common . collect . ImmutableList ; 
 + import com . google . common . collect . Lists ; 
 
 / * * 
 * A simple delegating class loader used to load mods into the system 
 @ @ - 42 , 6 + 44 , 7 @ @ public class ModClassLoader extends URLClassLoader 
 { 
 private static final List < String > STANDARD _ LIBRARIES = ImmutableList . of ( " jinput . jar " , " lwjgl . jar " , " lwjgl _ util . jar " , " rt . jar " ) ; 
 private LaunchClassLoader mainClassLoader ; 
 + private List < File > sources ; 
 
 public ModClassLoader ( ClassLoader parent ) { 
 super ( new URL [ 0 ] , null ) ; 
 @ @ - 52 , 6 + 55 , 7 @ @ public class ModClassLoader extends URLClassLoader 
 { 
 URL url = modFile . toURI ( ) . toURL ( ) ; 
 mainClassLoader . addURL ( url ) ; 
 + this . sources . add ( modFile ) ; 
 } 
 
 @ Override 
 @ @ - 148 , 4 + 152 , 20 @ @ public class ModClassLoader extends URLClassLoader 
 modAPI . initTable ( dataTable ) ; 
 return modAPI ; 
 } 
 + 
 + List < URL > parentURLs = null ; 
 + public boolean containsSource ( File source ) 
 + { 
 + if ( parentURLs = = null ) { 
 + parentURLs = Arrays . asList ( mainClassLoader . getURLs ( ) ) ; 
 + } 
 + try 
 + { 
 + return parentURLs . contains ( source . toURI ( ) . toURL ( ) ) ; 
 + } catch ( MalformedURLException e ) 
 + { 
 + / / shouldn ' t happen 
 + return false ; 
 + } 
 + } 
 }
