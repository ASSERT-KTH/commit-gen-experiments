BLEU SCORE: 0.05341087579952926

TEST MSG: Use java 8 collection functions
GENERATED MSG: Update mappings to 20151122 .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> index 22c6ac5 . . dfde59b 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ import net . minecraftforge . common . model . IModelState ; <nl> import net . minecraftforge . common . model . TRSRTransformation ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> <nl> + import java . util . Objects ; <nl> import java . util . Optional ; <nl> import com . google . common . collect . HashMultimap ; <nl> import com . google . common . collect . ImmutableMap ; <nl> @ @ - 169 , 15 + 170 , 7 @ @ public class ForgeBlockStateV1 extends Marker <nl> } <nl> } <nl> <nl> - Iterator < List < Variant > > iter = v . submodels . values ( ) . iterator ( ) ; <nl> - <nl> - while ( iter . hasNext ( ) ) <nl> - { <nl> - List < Variant > submodel = iter . next ( ) ; <nl> - <nl> - if ( submodel = = null ) <nl> - iter . remove ( ) ; <nl> - } <nl> + v . submodels . values ( ) . removeIf ( Objects : : isNull ) ; <nl> <nl> if ( v . textures ! = null ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index e3c9d06 . . 05c6e77 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 645 , 13 + 645 , 7 @ @ public final class ModelLoader extends ModelBakery <nl> / / Remove any faces that use a null texture , this is for performance reasons , also allows some cool layering stuff . <nl> for ( BlockPart part : newModel . getElements ( ) ) <nl> { <nl> - Iterator < Entry < EnumFacing , BlockPartFace > > itr = part . mapFaces . entrySet ( ) . iterator ( ) ; <nl> - while ( itr . hasNext ( ) ) <nl> - { <nl> - Entry < EnumFacing , BlockPartFace > entry = itr . next ( ) ; <nl> - if ( removed . contains ( entry . getValue ( ) . texture ) ) <nl> - itr . remove ( ) ; <nl> - } <nl> + part . mapFaces . entrySet ( ) . removeIf ( entry - > removed . contains ( entry . getValue ( ) . texture ) ) ; <nl> } <nl> <nl> return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java <nl> index 9e61cca . . 5d45059 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java <nl> @ @ - 138 , 14 + 138 , 7 @ @ public final class MultiLayerModel implements IModel <nl> this . models = models ; <nl> this . cameraTransforms = cameraTransforms ; <nl> this . missing = missing ; <nl> - if ( models . containsKey ( Optional . empty ( ) ) ) <nl> - { <nl> - base = models . get ( Optional . empty ( ) ) ; <nl> - } <nl> - else <nl> - { <nl> - base = missing ; <nl> - } <nl> + base = models . getOrDefault ( Optional . empty ( ) , missing ) ; <nl> ImmutableMap . Builder < Optional < EnumFacing > , ImmutableList < BakedQuad > > quadBuilder = ImmutableMap . builder ( ) ; <nl> quadBuilder . put ( Optional . empty ( ) , buildQuads ( models , Optional . empty ( ) ) ) ; <nl> for ( EnumFacing side : EnumFacing . values ( ) ) <nl> @ @ - 174 , 13 + 167 , 9 @ @ public final class MultiLayerModel implements IModel <nl> { <nl> return quads . get ( Optional . ofNullable ( side ) ) ; <nl> } <nl> - else if ( ! models . containsKey ( Optional . of ( layer ) ) ) <nl> - { <nl> - model = missing ; <nl> - } <nl> else <nl> { <nl> - model = models . get ( Optional . of ( layer ) ) ; <nl> + model = models . getOrDefault ( Optional . of ( layer ) , missing ) ; <nl> } <nl> / / assumes that child model will handle this state properly . FIXME ? <nl> return model . getQuads ( state , side , rand ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / BiomeDictionary . java b / src / main / java / net / minecraftforge / common / BiomeDictionary . java <nl> index d94a727 . . bedcbda 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / BiomeDictionary . java <nl> + + + b / src / main / java / net / minecraftforge / common / BiomeDictionary . java <nl> @ @ - 360 , 13 + 360 , 7 @ @ public class BiomeDictionary <nl> / / Internal implementation <nl> private static BiomeInfo getBiomeInfo ( Biome biome ) <nl> { <nl> - BiomeInfo info = biomeInfoMap . get ( biome . getRegistryName ( ) ) ; <nl> - if ( info = = null ) <nl> - { <nl> - info = new BiomeInfo ( ) ; <nl> - biomeInfoMap . put ( biome . getRegistryName ( ) , info ) ; <nl> - } <nl> - return info ; <nl> + return biomeInfoMap . computeIfAbsent ( biome . getRegistryName ( ) , k - > new BiomeInfo ( ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index c09ca0b . . c74cfb0 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 401 , 14 + 401 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> for ( ASMData asm : evt . getASMHarvestedData ( ) . getAll ( ICrashCallable . class . getName ( ) . replace ( ' . ' , ' / ' ) ) ) <nl> all . add ( asm . getClassName ( ) ) ; <nl> <nl> - Iterator < String > itr = all . iterator ( ) ; <nl> - while ( itr . hasNext ( ) ) <nl> - { <nl> - String cls = itr . next ( ) ; <nl> - if ( ! cls . startsWith ( " net / minecraft / " ) & & <nl> - ! cls . startsWith ( " net / minecraftforge / " ) ) <nl> - itr . remove ( ) ; <nl> - } <nl> + all . removeIf ( cls - > ! cls . startsWith ( " net / minecraft / " ) & & ! cls . startsWith ( " net / minecraftforge / " ) ) ; <nl> <nl> log . debug ( " Preloading CrashReport Classes " ) ; <nl> Collections . sort ( all ) ; / / Sort it because I like pretty output ; ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java b / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java <nl> index 113d499 . . 9218b87 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java <nl> + + + b / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java <nl> @ @ - 114 , 12 + 114 , 7 @ @ public enum CapabilityManager <nl> } <nl> final String capabilityName = type . getInternalName ( ) . replace ( ' / ' , ' . ' ) . intern ( ) ; <nl> <nl> - List < Function < Capability < ? > , Object > > list = callbacks . get ( capabilityName ) ; <nl> - if ( list = = null ) <nl> - { <nl> - list = Lists . newArrayList ( ) ; <nl> - callbacks . put ( capabilityName , list ) ; <nl> - } <nl> + List < Function < Capability < ? > , Object > > list = callbacks . computeIfAbsent ( capabilityName , k - > Lists . newArrayList ( ) ) ; <nl> <nl> if ( entry . getObjectName ( ) . indexOf ( ' ( ' ) > 0 ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / common / config / ConfigManager . java b / src / main / java / net / minecraftforge / common / config / ConfigManager . java <nl> index c43f460 . . 96001f8 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / config / ConfigManager . java <nl> + + + b / src / main / java / net / minecraftforge / common / config / ConfigManager . java <nl> @ @ - 108 , 12 + 108 , 7 @ @ public class ConfigManager <nl> for ( ASMData target : data . getAll ( Config . class . getName ( ) ) ) <nl> { <nl> String modid = ( String ) target . getAnnotationInfo ( ) . get ( " modid " ) ; <nl> - Multimap < Config . Type , ASMData > map = asm _ data . get ( modid ) ; <nl> - if ( map = = null ) <nl> - { <nl> - map = ArrayListMultimap . create ( ) ; <nl> - asm _ data . put ( modid , map ) ; <nl> - } <nl> + Multimap < Config . Type , ASMData > map = asm _ data . computeIfAbsent ( modid , k - > ArrayListMultimap . create ( ) ) ; <nl> <nl> EnumHolder tholder = ( EnumHolder ) target . getAnnotationInfo ( ) . get ( " type " ) ; <nl> Config . Type type = tholder = = null ? Config . Type . INSTANCE : Config . Type . valueOf ( tholder . getValue ( ) ) ; <nl> @ @ - 164 , 9 + 159 , 8 @ @ public class ConfigManager <nl> { <nl> Class < ? > cls = Class . forName ( targ . getClassName ( ) , true , mcl ) ; <nl> <nl> - if ( MOD _ CONFIG _ CLASSES . get ( modid ) = = null ) <nl> - MOD _ CONFIG _ CLASSES . put ( modid , Sets . < Class < ? > > newHashSet ( ) ) ; <nl> - MOD _ CONFIG _ CLASSES . get ( modid ) . add ( cls ) ; <nl> + Set < Class < ? > > modConfigClasses = MOD _ CONFIG _ CLASSES . computeIfAbsent ( modid , k - > Sets . < Class < ? > > newHashSet ( ) ) ; <nl> + modConfigClasses . add ( cls ) ; <nl> <nl> String name = ( String ) targ . getAnnotationInfo ( ) . get ( " name " ) ; <nl> if ( name = = null ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index 4439617 . . 8868a28 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 435 , 7 + 435 , 7 @ @ public class CraftingHelper { <nl> throw new JsonSyntaxException ( " Or condition values must be an array of JsonObjects " ) ; <nl> children . add ( CraftingHelper . getCondition ( j . getAsJsonObject ( ) , context ) ) ; <nl> } <nl> - return ( ) - > children . stream ( ) . anyMatch ( c - > c . getAsBoolean ( ) ) ; <nl> + return ( ) - > children . stream ( ) . anyMatch ( BooleanSupplier : : getAsBoolean ) ; <nl> } ) ; <nl> registerC ( " forge : and " , ( context , json ) - > { <nl> JsonArray values = JsonUtils . getJsonArray ( json , " values " ) ; <nl> @ @ - 610 , 8 + 610 , 8 @ @ public class CraftingHelper { <nl> GameData . revert ( RegistryManager . FROZEN , GameData . RECIPES , false ) ; <nl> / / ModContainer old = Loader . instance ( ) . activeModContainer ( ) ; <nl> Loader . instance ( ) . setActiveModContainer ( null ) ; <nl> - Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadFactories ( mod ) ) ; <nl> - Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadRecipes ( mod ) ) ; <nl> + Loader . instance ( ) . getActiveModList ( ) . forEach ( CraftingHelper : : loadFactories ) ; <nl> + Loader . instance ( ) . getActiveModList ( ) . forEach ( CraftingHelper : : loadRecipes ) ; <nl> Loader . instance ( ) . setActiveModContainer ( null ) ; <nl> / / reg . freeze ( ) ; <nl> FMLCommonHandler . instance ( ) . resetClientRecipeBook ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> index 6d86eb2 . . 293165b 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> @ @ - 108 , 13 + 108 , 7 @ @ public class CompoundDataFixer extends DataFixer <nl> <nl> private List < IDataWalker > getWalkers ( IFixType type ) <nl> { <nl> - List < IDataWalker > ret = walkers . get ( type ) ; <nl> - if ( ret = = null ) <nl> - { <nl> - ret = Lists . newArrayList ( ) ; <nl> - walkers . put ( type , ret ) ; <nl> - } <nl> - return ret ; <nl> + return walkers . computeIfAbsent ( type , k - > Lists . newArrayList ( ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java b / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java <nl> index 45a9ac6 . . c3e7897 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java <nl> @ @ - 67 , 14 + 67 , 6 @ @ public class FakePlayerFactory <nl> <nl> public static void unloadWorld ( WorldServer world ) <nl> { <nl> - Iterator < Entry < GameProfile , FakePlayer > > itr = fakePlayers . entrySet ( ) . iterator ( ) ; <nl> - while ( itr . hasNext ( ) ) <nl> - { <nl> - Entry < GameProfile , FakePlayer > entry = itr . next ( ) ; <nl> - if ( entry . getValue ( ) . world = = world ) <nl> - { <nl> - itr . remove ( ) ; <nl> - } <nl> - } <nl> + fakePlayers . entrySet ( ) . removeIf ( entry - > entry . getValue ( ) . world = = world ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> index 2dc01f2 . . 2514089 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> @ @ - 45 , 13 + 45 , 7 @ @ public class ModFixs <nl> <nl> public List < IFixableData > getFixes ( IFixType type ) <nl> { <nl> - List < IFixableData > ret = this . fixes . get ( type ) ; <nl> - if ( ret = = null ) <nl> - { <nl> - ret = Lists . newArrayList ( ) ; <nl> - this . fixes . put ( type , ret ) ; <nl> - } <nl> - return ret ; <nl> + return this . fixes . computeIfAbsent ( type , k - > Lists . newArrayList ( ) ) ; <nl> } <nl> <nl> public void registerFix ( IFixType type , IFixableData fixer ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> index e4c775e . . 8b32054 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> @ @ - 494 , 12 + 494 , 7 @ @ public class FMLDeobfuscatingRemapper extends Remapper { <nl> { <nl> return fType ; <nl> } <nl> - Map < String , String > newClassMap = fieldDescriptions . get ( newType ) ; <nl> - if ( newClassMap = = null ) <nl> - { <nl> - newClassMap = Maps . newHashMap ( ) ; <nl> - fieldDescriptions . put ( newType , newClassMap ) ; <nl> - } <nl> + Map < String , String > newClassMap = fieldDescriptions . computeIfAbsent ( newType , k - > Maps . newHashMap ( ) ) ; <nl> newClassMap . put ( newName , fType ) ; <nl> return fType ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java b / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java <nl> index 0477dc9 . . d08c548 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package net . minecraftforge . fml . common . event ; <nl> <nl> - import java . util . Collections ; <nl> + import java . util . Comparator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import com . google . common . collect . ImmutableList ; <nl> @ @ - 71 , 8 + 71 , 8 @ @ public class FMLModIdMappingEvent extends FMLEvent <nl> remaps . forEach ( ( name , rm ) - > <nl> { <nl> List < ModRemapping > tmp = Lists . newArrayList ( ) ; <nl> - rm . entrySet ( ) . forEach ( e - > tmp . add ( new ModRemapping ( name , e . getKey ( ) , e . getValue ( ) [ 0 ] , e . getValue ( ) [ 1 ] ) ) ) ; <nl> - Collections . sort ( tmp , ( o1 , o2 ) - > ( o1 . newId < o2 . newId ) ? - 1 : ( ( o1 . newId = = o2 . newId ) ? 0 : 1 ) ) ; <nl> + rm . forEach ( ( key , value ) - > tmp . add ( new ModRemapping ( name , key , value [ 0 ] , value [ 1 ] ) ) ) ; <nl> + tmp . sort ( Comparator . comparingInt ( o - > o . newId ) ) ; <nl> this . remaps . put ( name , ImmutableList . copyOf ( tmp ) ) ; <nl> } ) ; <nl> this . keys = ImmutableSet . copyOf ( this . remaps . keySet ( ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java b / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java <nl> index 5305f5f . . 2a8aaf9 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java <nl> @ @ - 150 , 12 + 150 , 7 @ @ public class EventBus implements IEventExceptionHandler <nl> <nl> event . getListenerList ( ) . register ( busID , asm . getPriority ( ) , listener ) ; <nl> <nl> - ArrayList < IEventListener > others = listeners . get ( target ) ; <nl> - if ( others = = null ) <nl> - { <nl> - others = new ArrayList < IEventListener > ( ) ; <nl> - listeners . put ( target , others ) ; <nl> - } <nl> + ArrayList < IEventListener > others = listeners . computeIfAbsent ( target , k - > new ArrayList < > ( ) ) ; <nl> others . add ( listener ) ; <nl> } <nl> catch ( Exception e ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> index a8e8aeb . . 77abd68 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> @ @ - 284 , 16 + 284 , 7 @ @ public class EntityRegistry <nl> { <nl> for ( Biome biome : biomes ) <nl> { <nl> - Iterator < SpawnListEntry > spawns = biome . getSpawnableList ( typeOfCreature ) . iterator ( ) ; <nl> - <nl> - while ( spawns . hasNext ( ) ) <nl> - { <nl> - SpawnListEntry entry = spawns . next ( ) ; <nl> - if ( entry . entityClass = = entityClass ) <nl> - { <nl> - spawns . remove ( ) ; <nl> - } <nl> - } <nl> + biome . getSpawnableList ( typeOfCreature ) . removeIf ( entry - > entry . entityClass = = entityClass ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> index 885cec7 . . 5718078 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> @ @ - 709 , 12 + 709 , 7 @ @ public class OreDictionary <nl> { <nl> hash | = ( ( ore . getItemDamage ( ) + 1 ) < < 16 ) ; / / + 1 so meta 0 is significant <nl> } <nl> - List < Integer > ids = stackToId . get ( hash ) ; <nl> - if ( ids = = null ) <nl> - { <nl> - ids = Lists . newArrayList ( ) ; <nl> - stackToId . put ( hash , ids ) ; <nl> - } <nl> + List < Integer > ids = stackToId . computeIfAbsent ( hash , k - > Lists . newArrayList ( ) ) ; <nl> ids . add ( id ) ; <nl> / / System . out . println ( id + " " + getOreName ( id ) + " " + Integer . toHexString ( hash ) + " " + ore ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> index 3718ad1 . . 1cfc2a8 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> @ @ - 469 , 7 + 469 , 7 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe <nl> this . min = from . min ; <nl> * / <nl> this . aliases . clear ( ) ; <nl> - from . aliases . forEach ( ( f , t ) - > this . addAlias ( f , t ) ) ; <nl> + from . aliases . forEach ( this : : addAlias ) ; <nl> <nl> this . ids . clear ( ) ; <nl> this . names . clear ( ) ; <nl> @ @ - 517 , 7 + 517 , 7 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe <nl> <nl> / / Needs to be below add so that dummies are persisted <nl> this . dummies . clear ( ) ; <nl> - from . dummies . forEach ( dummy - > this . addDummy ( dummy ) ) ; <nl> + from . dummies . forEach ( this : : addDummy ) ; <nl> <nl> if ( errored ) <nl> throw new RuntimeException ( " One of more entry values did not copy to the correct id . Check log for details ! " ) ; <nl> @ @ - 718 , 9 + 718 , 9 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe <nl> { <nl> Snapshot ret = new Snapshot ( ) ; <nl> this . ids . forEach ( ( id , value ) - > ret . ids . put ( getKey ( value ) , id ) ) ; <nl> - this . aliases . forEach ( ( from , to ) - > ret . aliases . put ( from , to ) ) ; <nl> - this . blocked . forEach ( id - > ret . blocked . add ( id ) ) ; <nl> - this . dummies . forEach ( name - > ret . dummied . add ( name ) ) ; <nl> + ret . aliases . putAll ( this . aliases ) ; <nl> + ret . blocked . addAll ( this . blocked ) ; <nl> + ret . dummied . addAll ( this . dummies ) ; <nl> ret . overrides . putAll ( getOverrideOwners ( ) ) ; <nl> return ret ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java <nl> index 77d6d42 . . 9865ad0 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / GameData . java <nl> + + + b / src / main / java / net / minecraftforge / registries / GameData . java <nl> @ @ - 469 , 20 + 469 , 20 @ @ public class GameData <nl> final Map < ResourceLocation , Map < ResourceLocation , Integer [ ] > > remaps = Maps . newHashMap ( ) ; <nl> final LinkedHashMap < ResourceLocation , Map < ResourceLocation , Integer > > missing = Maps . newLinkedHashMap ( ) ; <nl> / / Load the snapshot into the " STAGING " registry <nl> - snapshot . entrySet ( ) . forEach ( e - > <nl> + snapshot . forEach ( ( key , value ) - > <nl> { <nl> - final Class < ? extends IForgeRegistryEntry > clazz = RegistryManager . ACTIVE . getSuperType ( e . getKey ( ) ) ; <nl> - remaps . put ( e . getKey ( ) , Maps . newLinkedHashMap ( ) ) ; <nl> - missing . put ( e . getKey ( ) , Maps . newHashMap ( ) ) ; <nl> - loadPersistentDataToStagingRegistry ( RegistryManager . ACTIVE , STAGING , remaps . get ( e . getKey ( ) ) , missing . get ( e . getKey ( ) ) , e . getKey ( ) , e . getValue ( ) , clazz ) ; <nl> + final Class < ? extends IForgeRegistryEntry > clazz = RegistryManager . ACTIVE . getSuperType ( key ) ; <nl> + remaps . put ( key , Maps . newLinkedHashMap ( ) ) ; <nl> + missing . put ( key , Maps . newHashMap ( ) ) ; <nl> + loadPersistentDataToStagingRegistry ( RegistryManager . ACTIVE , STAGING , remaps . get ( key ) , missing . get ( key ) , key , value , clazz ) ; <nl> } ) ; <nl> <nl> - snapshot . entrySet ( ) . forEach ( e - > <nl> + snapshot . forEach ( ( key , value ) - > <nl> { <nl> - snapshot . get ( e . getKey ( ) ) . dummied . forEach ( dummy - > <nl> + value . dummied . forEach ( dummy - > <nl> { <nl> - Map < ResourceLocation , Integer > m = missing . get ( e . getKey ( ) ) ; <nl> - ForgeRegistry < ? > reg = STAGING . getRegistry ( e . getKey ( ) ) ; <nl> + Map < ResourceLocation , Integer > m = missing . get ( key ) ; <nl> + ForgeRegistry < ? > reg = STAGING . getRegistry ( key ) ; <nl> <nl> / / Currently missing locally , we just inject and carry on <nl> if ( m . containsKey ( dummy ) ) <nl> @ @ - 493 , 20 + 493 , 20 @ @ public class GameData <nl> else if ( isLocalWorld ) <nl> { <nl> if ( ForgeRegistry . DEBUG ) <nl> - FMLLog . log . debug ( " Registry { } : Resuscitating dummy entry { } " , e . getKey ( ) , dummy ) ; <nl> + FMLLog . log . debug ( " Registry { } : Resuscitating dummy entry { } " , key , dummy ) ; <nl> } <nl> else <nl> { <nl> / / The server believes this is a dummy block identity , but we seem to have one locally . This is likely a conflict <nl> / / in mod setup - Mark this entry as a dummy <nl> int id = reg . getID ( dummy ) ; <nl> - FMLLog . log . warn ( " Registry { } : The ID { } is currently locally mapped - it will be replaced with a dummy for this session " , e . getKey ( ) , id ) ; <nl> + FMLLog . log . warn ( " Registry { } : The ID { } is currently locally mapped - it will be replaced with a dummy for this session " , key , id ) ; <nl> reg . markDummy ( dummy , id ) ; <nl> } <nl> } ) ; <nl> } ) ; <nl> <nl> - int count = missing . values ( ) . stream ( ) . mapToInt ( e - > e . size ( ) ) . sum ( ) ; <nl> + int count = missing . values ( ) . stream ( ) . mapToInt ( Map : : size ) . sum ( ) ; <nl> if ( count > 0 ) <nl> { <nl> FMLLog . log . debug ( " There are { } mappings missing - attempting a mod remap " , count ) ; <nl> @ @ - 635 , 10 + 635 , 10 @ @ public class GameData <nl> if ( active = = null ) <nl> return ; / / We ' ve already asked the user if they wish to continue . So if the reg isnt found just assume the user knows and accepted it . <nl> ForgeRegistry < T > _ new = to . getRegistry ( name , RegistryManager . ACTIVE ) ; <nl> - snap . aliases . forEach ( ( f , t ) - > _ new . addAlias ( f , t ) ) ; <nl> - snap . blocked . forEach ( id - > _ new . block ( id ) ) ; <nl> + snap . aliases . forEach ( _ new : : addAlias ) ; <nl> + snap . blocked . forEach ( _ new : : block ) ; <nl> / / Load current dummies BEFORE the snapshot is loaded so that add ( ) will remove from the list . <nl> - snap . dummied . forEach ( key - > _ new . addDummy ( key ) ) ; <nl> + snap . dummied . forEach ( _ new : : addDummy ) ; <nl> _ new . loadIds ( snap . ids , snap . overrides , missing , remaps , active , name ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java <nl> index fbc5dff . . 53a7372 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java <nl> + + + b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java <nl> @ @ - 83 , 12 + 83 , 7 @ @ public class ForgeTimeTracker { <nl> / / race , exit <nl> return ; <nl> } <nl> - int [ ] timings = tileEntityTimings . get ( tileEntity ) ; <nl> - if ( timings = = null ) <nl> - { <nl> - timings = new int [ 101 ] ; <nl> - tileEntityTimings . put ( tileEntity , timings ) ; <nl> - } <nl> + int [ ] timings = tileEntityTimings . computeIfAbsent ( tileEntity , k - > new int [ 101 ] ) ; <nl> int idx = timings [ 100 ] = ( timings [ 100 ] + 1 ) % 100 ; <nl> timings [ idx ] = ( int ) ( nanoTime - timing ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index f6acdc6 . . e8c7fbf 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 28 , 7 + 28 , 7 @ @ apply plugin : " net . minecraftforge . gradle . launch4j " <nl> minecraft { <nl> version = " 1 . 8 . 8 " <nl> / / mappings = ' stable _ 16 ' <nl> - mappings = " snapshot _ nodoc _ 20141130 " <nl> + mappings = " snapshot _ nodoc _ 20151122 " <nl> workspaceDir = " projects " <nl> versionJson = " jsons / 1 . 8 . 8 - dev . json " <nl> buildUserdev = true <nl> diff - - git a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> index 4978616 . . 455c764 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> + + + b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class ClientCommandHandler extends CommandHandler <nl> return 0 ; <nl> } <nl> <nl> - if ( icommand . canCommandSenderUse ( sender ) ) <nl> + if ( icommand . canCommandSenderUseCommand ( sender ) ) <nl> { <nl> CommandEvent event = new CommandEvent ( icommand , sender , args ) ; <nl> if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class ClientCommandHandler extends CommandHandler <nl> return 0 ; <nl> } <nl> <nl> - icommand . execute ( sender , args ) ; <nl> + icommand . processCommand ( sender , args ) ; <nl> return 1 ; <nl> } <nl> else <nl> diff - - git a / src / main / java / net / minecraftforge / client / GuiIngameForge . java b / src / main / java / net / minecraftforge / client / GuiIngameForge . java <nl> index 5c3adae . . a41ecdf 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / GuiIngameForge . java <nl> + + + b / src / main / java / net / minecraftforge / client / GuiIngameForge . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class GuiIngameForge extends GuiIngame <nl> <nl> if ( Minecraft . isFancyGraphicsEnabled ( ) ) <nl> { <nl> - func _ 180480 _ a ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; <nl> + renderVignette ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; <nl> } <nl> else <nl> { <nl> @ @ - 163 , 16 + 163 , 16 @ @ public class GuiIngameForge extends GuiIngame <nl> <nl> Scoreboard scoreboard = this . mc . theWorld . getScoreboard ( ) ; <nl> ScoreObjective objective = null ; <nl> - ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getName ( ) ) ; <nl> + ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getCommandSenderName ( ) ) ; <nl> if ( scoreplayerteam ! = null ) <nl> { <nl> - int slot = scoreplayerteam . func _ 178775 _ l ( ) . getColorIndex ( ) ; <nl> + int slot = scoreplayerteam . getChatFormat ( ) . getColorIndex ( ) ; <nl> if ( slot > = 0 ) objective = scoreboard . getObjectiveInDisplaySlot ( 3 + slot ) ; <nl> } <nl> ScoreObjective scoreobjective1 = objective ! = null ? objective : scoreboard . getObjectiveInDisplaySlot ( 1 ) ; <nl> if ( renderObjective & & scoreobjective1 ! = null ) <nl> { <nl> - this . func _ 180475 _ a ( scoreobjective1 , res ) ; <nl> + this . renderScoreboard ( scoreobjective1 , res ) ; <nl> } <nl> <nl> GlStateManager . enableBlend ( ) ; <nl> @ @ - 234 , 7 + 234 , 7 @ @ public class GuiIngameForge extends GuiIngame <nl> { <nl> if ( itemstack . getItem ( ) = = Item . getItemFromBlock ( Blocks . pumpkin ) ) <nl> { <nl> - func _ 180476 _ e ( res ) ; <nl> + renderPumpkinOverlay ( res ) ; <nl> } <nl> else <nl> { <nl> @ @ - 345 , 28 + 345 , 28 @ @ public class GuiIngameForge extends GuiIngame <nl> <nl> EntityPlayer player = ( EntityPlayer ) this . mc . getRenderViewEntity ( ) ; <nl> int health = MathHelper . ceiling _ float _ int ( player . getHealth ( ) ) ; <nl> - boolean highlight = field _ 175191 _ F > ( long ) updateCounter & & ( field _ 175191 _ F - ( long ) updateCounter ) / 3L % 2L = = 1L ; <nl> + boolean highlight = healthUpdateCounter > ( long ) updateCounter & & ( healthUpdateCounter - ( long ) updateCounter ) / 3L % 2L = = 1L ; <nl> <nl> - if ( health < this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) <nl> + if ( health < this . playerHealth & & player . hurtResistantTime > 0 ) <nl> { <nl> this . lastSystemTime = Minecraft . getSystemTime ( ) ; <nl> - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 20 ) ; <nl> + this . healthUpdateCounter = ( long ) ( this . updateCounter + 20 ) ; <nl> } <nl> - else if ( health > this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) <nl> + else if ( health > this . playerHealth & & player . hurtResistantTime > 0 ) <nl> { <nl> this . lastSystemTime = Minecraft . getSystemTime ( ) ; <nl> - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 10 ) ; <nl> + this . healthUpdateCounter = ( long ) ( this . updateCounter + 10 ) ; <nl> } <nl> <nl> if ( Minecraft . getSystemTime ( ) - this . lastSystemTime > 1000L ) <nl> { <nl> - this . field _ 175194 _ C = health ; <nl> - this . field _ 175189 _ D = health ; <nl> + this . playerHealth = health ; <nl> + this . lastPlayerHealth = health ; <nl> this . lastSystemTime = Minecraft . getSystemTime ( ) ; <nl> } <nl> <nl> - this . field _ 175194 _ C = health ; <nl> - int healthLast = this . field _ 175189 _ D ; <nl> + this . playerHealth = health ; <nl> + int healthLast = this . lastPlayerHealth ; <nl> <nl> IAttributeInstance attrMaxHealth = player . getEntityAttribute ( SharedMonsterAttributes . maxHealth ) ; <nl> float healthMax = ( float ) attrMaxHealth . getAttributeValue ( ) ; <nl> @ @ - 748 , 11 + 748 , 11 @ @ public class GuiIngameForge extends GuiIngame <nl> GlStateManager . pushMatrix ( ) ; <nl> GlStateManager . scale ( 4 . 0F , 4 . 0F , 4 . 0F ) ; <nl> int l = opacity < < 24 & - 16777216 ; <nl> - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; <nl> + this . getFontRenderer ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; <nl> GlStateManager . popMatrix ( ) ; <nl> GlStateManager . pushMatrix ( ) ; <nl> GlStateManager . scale ( 2 . 0F , 2 . 0F , 2 . 0F ) ; <nl> - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; <nl> + this . getFontRenderer ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; <nl> GlStateManager . popMatrix ( ) ; <nl> GlStateManager . disableBlend ( ) ; <nl> GlStateManager . popMatrix ( ) ; <nl> @ @ - 784 , 16 + 784 , 16 @ @ public class GuiIngameForge extends GuiIngame <nl> ScoreObjective scoreobjective = this . mc . theWorld . getScoreboard ( ) . getObjectiveInDisplaySlot ( 0 ) ; <nl> NetHandlerPlayClient handler = mc . thePlayer . sendQueue ; <nl> <nl> - if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . func _ 175106 _ d ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) <nl> + if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . getPlayerInfoMap ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) <nl> { <nl> - this . overlayPlayerList . func _ 175246 _ a ( true ) ; <nl> + this . overlayPlayerList . updatePlayerList ( true ) ; <nl> if ( pre ( PLAYER _ LIST ) ) return ; <nl> - this . overlayPlayerList . func _ 175249 _ a ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; <nl> + this . overlayPlayerList . renderPlayerlist ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; <nl> post ( PLAYER _ LIST ) ; <nl> } <nl> else <nl> { <nl> - this . overlayPlayerList . func _ 175246 _ a ( false ) ; <nl> + this . overlayPlayerList . updatePlayerList ( false ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> index b5ced65 . . 462a307 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> @ @ - 50 , 7 + 50 , 7 @ @ public class ForgeBlockStateV1 extends Marker <nl> { <nl> JsonObject json = element . getAsJsonObject ( ) ; <nl> ForgeBlockStateV1 ret = new ForgeBlockStateV1 ( ) ; <nl> - ret . forge _ marker = JsonUtils . getJsonObjectIntegerFieldValue ( json , " forge _ marker " ) ; <nl> + ret . forge _ marker = JsonUtils . getInt ( json , " forge _ marker " ) ; <nl> <nl> if ( json . has ( " defaults " ) ) / / Load defaults Variant . <nl> { <nl> @ @ - 146 , 13 + 146 , 13 @ @ public class ForgeBlockStateV1 extends Marker <nl> part . state = state ; <nl> } <nl> } <nl> - <nl> + <nl> Iterator < List < Variant > > iter = v . submodels . values ( ) . iterator ( ) ; <nl> - <nl> + <nl> while ( iter . hasNext ( ) ) <nl> { <nl> List < Variant > submodel = iter . next ( ) ; <nl> - <nl> + <nl> if ( submodel = = null ) <nl> iter . remove ( ) ; <nl> } <nl> @ @ - 430 , 7 + 430 , 7 @ @ public class ForgeBlockStateV1 extends Marker <nl> if ( json . get ( " model " ) . isJsonNull ( ) ) <nl> ret . model = null ; / / Allow overriding base model to remove it from a state . <nl> else <nl> - ret . model = getBlockLocation ( JsonUtils . getJsonObjectStringFieldValue ( json , " model " ) ) ; <nl> + ret . model = getBlockLocation ( JsonUtils . getString ( json , " model " ) ) ; <nl> ret . modelSet = true ; <nl> } <nl> <nl> @ @ - 447 , 8 + 447 , 8 @ @ public class ForgeBlockStateV1 extends Marker <nl> <nl> if ( json . has ( " x " ) | | json . has ( " y " ) ) <nl> { / / Load rotation values . <nl> - int x = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " x " , 0 ) ; <nl> - int y = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " y " , 0 ) ; <nl> + int x = JsonUtils . getInt ( json , " x " , 0 ) ; <nl> + int y = JsonUtils . getInt ( json , " y " , 0 ) ; <nl> ret . state = Optional . < IModelState > of ( new TRSRTransformation ( ModelRotation . getModelRotation ( x , y ) ) ) ; <nl> if ( ! ret . state . isPresent ( ) ) <nl> throw new JsonParseException ( " Invalid BlockModelRotation x : " + x + " y : " + y ) ; <nl> @ @ - 589 , 12 + 589 , 12 @ @ public class ForgeBlockStateV1 extends Marker <nl> <nl> if ( json . has ( " uvlock " ) ) <nl> { / / Load uvlock . <nl> - ret . uvLock = Optional . of ( JsonUtils . getJsonObjectBooleanFieldValue ( json , " uvlock " ) ) ; <nl> + ret . uvLock = Optional . of ( JsonUtils . getBoolean ( json , " uvlock " ) ) ; <nl> } <nl> <nl> if ( json . has ( " weight " ) ) <nl> { / / Load weight . <nl> - ret . weight = Optional . of ( JsonUtils . getJsonObjectIntegerFieldValue ( json , " weight " ) ) ; <nl> + ret . weight = Optional . of ( JsonUtils . getInt ( json , " weight " ) ) ; <nl> } <nl> <nl> if ( json . has ( " submodel " ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / ChestGenHooks . java b / src / main / java / net / minecraftforge / common / ChestGenHooks . java <nl> index 55fd8e0 . . 61c0244 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ChestGenHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ChestGenHooks . java <nl> @ @ - 234 , 7 + 234 , 7 @ @ public class ChestGenHooks <nl> public ItemStack getOneItem ( Random rand ) <nl> { <nl> WeightedRandomChestContent item = ( WeightedRandomChestContent ) WeightedRandom . getRandomItem ( rand , getItems ( rand ) ) ; <nl> - ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . theMinimumChanceToGenerateItem , item . theMaximumChanceToGenerateItem ) ; <nl> + ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . minStackSize , item . maxStackSize ) ; <nl> return ( stacks . length > 0 ? stacks [ 0 ] : null ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 429a859 . . aab0aca 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 670 , 7 + 670 , 7 @ @ public class ForgeHooks <nl> if ( world . getTileEntity ( pos ) = = null ) <nl> { <nl> S23PacketBlockChange packet = new S23PacketBlockChange ( world , pos ) ; <nl> - packet . field _ 148883 _ d = Blocks . air . getDefaultState ( ) ; <nl> + packet . blockState = Blocks . air . getDefaultState ( ) ; <nl> entityPlayer . playerNetServerHandler . sendPacket ( packet ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayer . java b / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> index 2607377 . . 3cbb21e 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> @ @ - 23 , 7 + 23 , 7 @ @ public class FakePlayer extends EntityPlayerMP <nl> } <nl> <nl> @ Override public Vec3 getPositionVector ( ) { return new Vec3 ( 0 , 0 , 0 ) ; } <nl> - @ Override public boolean canUseCommand ( int i , String s ) { return false ; } <nl> + @ Override public boolean canCommandSenderUseCommand ( int i , String s ) { return false ; } <nl> @ Override public void addChatComponentMessage ( IChatComponent chatmessagecomponent ) { } <nl> @ Override public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> @ Override public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java <nl> index fc14d7d . . 167c097 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class ExplosionEvent extends Event <nl> / * * return the list of blocks affected by the explosion . * / <nl> public List < BlockPos > getAffectedBlocks ( ) <nl> { <nl> - return explosion . func _ 180343 _ e ( ) ; <nl> + return explosion . getAffectedBlockPositions ( ) ; <nl> } <nl> <nl> / * * return the list of entities affected by the explosion . * / <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiModList . java b / src / main / java / net / minecraftforge / fml / client / GuiModList . java <nl> index 8cb8efc . . 2792b7b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / GuiModList . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / GuiModList . java <nl> @ @ - 579 , 7 + 579 , 7 @ @ public class GuiModList extends GuiScreen <nl> k + = GuiModList . this . fontRendererObj . getStringWidth ( ( ( ChatComponentText ) part ) . getChatComponentText _ TextValue ( ) ) ; <nl> if ( k > = x ) <nl> { <nl> - GuiModList . this . func _ 175276 _ a ( part ) ; <nl> + GuiModList . this . handleComponentClick ( part ) ; <nl> break ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> index 657bb22 . . 2851281 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> @ @ - 90 , 7 + 90 , 7 @ @ public class FMLNetworkHandler <nl> embeddedChannel . writeOutbound ( openGui ) ; <nl> entityPlayerMP . openContainer = remoteGuiContainer ; <nl> entityPlayerMP . openContainer . windowId = windowId ; <nl> - entityPlayerMP . openContainer . addCraftingToCrafters ( entityPlayerMP ) ; <nl> + entityPlayerMP . openContainer . onCraftGuiOpened ( entityPlayerMP ) ; <nl> } <nl> } <nl> else if ( entityPlayer instanceof FakePlayer ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 81a3c91 . . da5139d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 456 , 7 + 456 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> <nl> for ( I thing : this . typeSafeIterable ( ) ) <nl> { <nl> - if ( ! registry . field _ 148758 _ b . containsKey ( thing ) ) <nl> + if ( ! registry . inverseObjectRegistry . containsKey ( thing ) ) <nl> { <nl> if ( ! registry . activeSubstitutions . containsKey ( getNameForObject ( thing ) . toString ( ) ) ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> index f222b1b . . 8116b20 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> @ @ - 506 , 7 + 506 , 7 @ @ public class GameRegistry <nl> NBTBase nbttag = null ; <nl> try <nl> { <nl> - nbttag = JsonToNBT . func _ 180713 _ a ( nbtString ) ; <nl> + nbttag = JsonToNBT . getTagFromJson ( nbtString ) ; <nl> } catch ( NBTException e ) <nl> { <nl> FMLLog . getLogger ( ) . log ( Level . WARN , " Encountered an exception parsing ItemStack NBT string { } " , nbtString , e ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index be2f2d6 . . 252e94d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 180 , 7 + 180 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> for ( Iterator < ServerCommand > it = GenericIterableFactory . newCastingIterable ( dedServer . pendingCommandList , ServerCommand . class ) . iterator ( ) ; it . hasNext ( ) ; ) <nl> { <nl> - String cmd = it . next ( ) . input . trim ( ) . toLowerCase ( ) ; <nl> + String cmd = it . next ( ) . command . trim ( ) . toLowerCase ( ) ; <nl> <nl> if ( cmd . equals ( " / fml confirm " ) ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> index 163bc34 . . a940bd8 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> } <nl> <nl> @ Override <nl> - public String getName ( ) <nl> + public String getCommandName ( ) <nl> { <nl> return " forge " ; <nl> } <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> return 2 ; <nl> } <nl> @ Override <nl> - public void execute ( ICommandSender sender , String [ ] args ) throws CommandException <nl> + public void processCommand ( ICommandSender sender , String [ ] args ) throws CommandException <nl> { <nl> if ( args . length = = 0 ) <nl> { <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> else if ( args . length = = 2 ) <nl> { <nl> if ( " tps " . equals ( args [ 0 ] ) ) { <nl> - return func _ 175762 _ a ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; <nl> + return getListOfStringsMatchingLastWord ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; <nl> } <nl> else if ( " track " . equals ( args [ 0 ] ) ) <nl> { <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> } <nl> return null ; <nl> } <nl> - <nl> + <nl> private void handleTracking ( ICommandSender sender , String [ ] args ) throws CommandException <nl> { <nl> if ( args . length ! = 3 ) <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> index 4dfa7b4 . . 1ad6504 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import net . minecraftforge . fml . relauncher . SideOnly ; <nl> public class ForgeBlockStatesLoaderDebug { <nl> public static final String MODID = " ForgeBlockStatesLoader " ; <nl> public static final String ASSETS = " forgeblockstatesloader : " ; <nl> - <nl> + <nl> public static final Block blockCustom = new CustomMappedBlock ( ) ; <nl> public static final String nameCustomWall = " custom _ wall " ; <nl> public static final BlockWall blockCustomWall = new BlockWall ( Blocks . cobblestone ) ; <nl> @ @ - 48 , 42 + 48 , 42 @ @ public class ForgeBlockStatesLoaderDebug { <nl> return BlockWall . EnumType . byMetadata ( stack . getMetadata ( ) ) . getUnlocalizedName ( ) ; <nl> } <nl> } ) ; <nl> - <nl> + <nl> @ EventHandler <nl> public void preInit ( FMLPreInitializationEvent event ) <nl> - { <nl> + { <nl> 	 blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) ; <nl> 	 GameRegistry . registerBlock ( blockCustom , " customBlock " ) ; <nl> - 	 <nl> + <nl> blockCustomWall . setUnlocalizedName ( MODID + " . customWall " ) ; <nl> GameRegistry . registerBlock ( blockCustomWall , null , nameCustomWall ) ; <nl> GameRegistry . registerItem ( itemCustomWall , nameCustomWall ) ; <nl> GameData . getBlockItemMap ( ) . put ( blockCustomWall , itemCustomWall ) ; <nl> - <nl> + <nl> if ( event . getSide ( ) = = Side . CLIENT ) <nl> preInitClient ( event ) ; <nl> } <nl> - <nl> + <nl> @ SideOnly ( Side . CLIENT ) <nl> public void preInitClient ( FMLPreInitializationEvent event ) <nl> { <nl> - 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . setProperty ( CustomMappedBlock . VARIANT ) . build ( ) ) ; <nl> - 	 <nl> + 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; <nl> + <nl> ModelLoader . setCustomStateMapper ( blockCustomWall , new IStateMapper ( ) <nl> { <nl> - StateMap stateMap = new StateMap . Builder ( ) . setProperty ( BlockWall . VARIANT ) . setBuilderSuffix ( " _ wall " ) . build ( ) ; <nl> + StateMap stateMap = new StateMap . Builder ( ) . withName ( BlockWall . VARIANT ) . withSuffix ( " _ wall " ) . build ( ) ; <nl> @ Override <nl> public Map putStateModelLocations ( Block block ) <nl> { <nl> Map < IBlockState , ModelResourceLocation > map = ( Map < IBlockState , ModelResourceLocation > ) stateMap . putStateModelLocations ( block ) ; <nl> Map < IBlockState , ModelResourceLocation > newMap = Maps . newHashMap ( ) ; <nl> - <nl> + <nl> for ( Entry < IBlockState , ModelResourceLocation > e : map . entrySet ( ) ) <nl> { <nl> ModelResourceLocation loc = e . getValue ( ) ; <nl> newMap . put ( e . getKey ( ) , new ModelResourceLocation ( ASSETS + loc . getResourcePath ( ) , loc . getVariant ( ) ) ) ; <nl> } <nl> - <nl> + <nl> return newMap ; <nl> } <nl> } ) ; <nl> @ @ - 92 , 41 + 92 , 41 @ @ public class ForgeBlockStatesLoaderDebug { <nl> ModelLoader . setCustomModelResourceLocation ( customWallItem , 1 , new ModelResourceLocation ( ASSETS + " mossy _ cobblestone _ wall " , " inventory " ) ) ; <nl> ModelBakery . addVariantName ( customWallItem , ASSETS + " cobblestone _ wall " , ASSETS + " mossy _ cobblestone _ wall " ) ; <nl> } <nl> - <nl> + <nl> / / this block is never actually used , it ' s only needed for the error message on load to see the variant it maps to <nl> public static class CustomMappedBlock extends Block { <nl> 	 public static final PropertyEnum VARIANT = PropertyEnum . create ( " type " , CustomVariant . class ) ; <nl> - 	 <nl> + <nl> 	 	 protected CustomMappedBlock ( ) { <nl> 	 	 	 super ( Material . rock ) ; <nl> - 	 	 	 <nl> + <nl> 	 	 	 this . setUnlocalizedName ( MODID + " . customMappedBlock " ) ; <nl> 	 	 } <nl> - 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 protected BlockState createBlockState ( ) { <nl> 	 	 	 return new BlockState ( this , VARIANT ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 public int getMetaFromState ( IBlockState state ) <nl> 	 	 { <nl> 	 	 return ( ( CustomVariant ) state . getValue ( VARIANT ) ) . ordinal ( ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 public IBlockState getStateFromMeta ( int meta ) <nl> 	 	 { <nl> 	 	 if ( meta > CustomVariant . values ( ) . length | | meta < 0 ) <nl> 	 	 meta = 0 ; <nl> - 	 	 <nl> + <nl> 	 	 return this . getDefaultState ( ) . withProperty ( VARIANT , CustomVariant . values ( ) [ meta ] ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 public static enum CustomVariant implements IStringSerializable { <nl> 	 	 	 TypeA , <nl> 	 	 	 TypeB ; <nl> - 	 	 	 <nl> + <nl> 	 	 	 public String getName ( ) { return this . toString ( ) ; } ; <nl> 	 	 } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 index 22c6ac5 . . dfde59b 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import net . minecraftforge . common . model . IModelState ; 
 import net . minecraftforge . common . model . TRSRTransformation ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 
 + import java . util . Objects ; 
 import java . util . Optional ; 
 import com . google . common . collect . HashMultimap ; 
 import com . google . common . collect . ImmutableMap ; 
 @ @ - 169 , 15 + 170 , 7 @ @ public class ForgeBlockStateV1 extends Marker 
 } 
 } 
 
 - Iterator < List < Variant > > iter = v . submodels . values ( ) . iterator ( ) ; 
 - 
 - while ( iter . hasNext ( ) ) 
 - { 
 - List < Variant > submodel = iter . next ( ) ; 
 - 
 - if ( submodel = = null ) 
 - iter . remove ( ) ; 
 - } 
 + v . submodels . values ( ) . removeIf ( Objects : : isNull ) ; 
 
 if ( v . textures ! = null ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index e3c9d06 . . 05c6e77 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 645 , 13 + 645 , 7 @ @ public final class ModelLoader extends ModelBakery 
 / / Remove any faces that use a null texture , this is for performance reasons , also allows some cool layering stuff . 
 for ( BlockPart part : newModel . getElements ( ) ) 
 { 
 - Iterator < Entry < EnumFacing , BlockPartFace > > itr = part . mapFaces . entrySet ( ) . iterator ( ) ; 
 - while ( itr . hasNext ( ) ) 
 - { 
 - Entry < EnumFacing , BlockPartFace > entry = itr . next ( ) ; 
 - if ( removed . contains ( entry . getValue ( ) . texture ) ) 
 - itr . remove ( ) ; 
 - } 
 + part . mapFaces . entrySet ( ) . removeIf ( entry - > removed . contains ( entry . getValue ( ) . texture ) ) ; 
 } 
 
 return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java 
 index 9e61cca . . 5d45059 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java 
 + + + b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java 
 @ @ - 138 , 14 + 138 , 7 @ @ public final class MultiLayerModel implements IModel 
 this . models = models ; 
 this . cameraTransforms = cameraTransforms ; 
 this . missing = missing ; 
 - if ( models . containsKey ( Optional . empty ( ) ) ) 
 - { 
 - base = models . get ( Optional . empty ( ) ) ; 
 - } 
 - else 
 - { 
 - base = missing ; 
 - } 
 + base = models . getOrDefault ( Optional . empty ( ) , missing ) ; 
 ImmutableMap . Builder < Optional < EnumFacing > , ImmutableList < BakedQuad > > quadBuilder = ImmutableMap . builder ( ) ; 
 quadBuilder . put ( Optional . empty ( ) , buildQuads ( models , Optional . empty ( ) ) ) ; 
 for ( EnumFacing side : EnumFacing . values ( ) ) 
 @ @ - 174 , 13 + 167 , 9 @ @ public final class MultiLayerModel implements IModel 
 { 
 return quads . get ( Optional . ofNullable ( side ) ) ; 
 } 
 - else if ( ! models . containsKey ( Optional . of ( layer ) ) ) 
 - { 
 - model = missing ; 
 - } 
 else 
 { 
 - model = models . get ( Optional . of ( layer ) ) ; 
 + model = models . getOrDefault ( Optional . of ( layer ) , missing ) ; 
 } 
 / / assumes that child model will handle this state properly . FIXME ? 
 return model . getQuads ( state , side , rand ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / BiomeDictionary . java b / src / main / java / net / minecraftforge / common / BiomeDictionary . java 
 index d94a727 . . bedcbda 100644 
 - - - a / src / main / java / net / minecraftforge / common / BiomeDictionary . java 
 + + + b / src / main / java / net / minecraftforge / common / BiomeDictionary . java 
 @ @ - 360 , 13 + 360 , 7 @ @ public class BiomeDictionary 
 / / Internal implementation 
 private static BiomeInfo getBiomeInfo ( Biome biome ) 
 { 
 - BiomeInfo info = biomeInfoMap . get ( biome . getRegistryName ( ) ) ; 
 - if ( info = = null ) 
 - { 
 - info = new BiomeInfo ( ) ; 
 - biomeInfoMap . put ( biome . getRegistryName ( ) , info ) ; 
 - } 
 - return info ; 
 + return biomeInfoMap . computeIfAbsent ( biome . getRegistryName ( ) , k - > new BiomeInfo ( ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index c09ca0b . . c74cfb0 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 401 , 14 + 401 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 for ( ASMData asm : evt . getASMHarvestedData ( ) . getAll ( ICrashCallable . class . getName ( ) . replace ( ' . ' , ' / ' ) ) ) 
 all . add ( asm . getClassName ( ) ) ; 
 
 - Iterator < String > itr = all . iterator ( ) ; 
 - while ( itr . hasNext ( ) ) 
 - { 
 - String cls = itr . next ( ) ; 
 - if ( ! cls . startsWith ( " net / minecraft / " ) & & 
 - ! cls . startsWith ( " net / minecraftforge / " ) ) 
 - itr . remove ( ) ; 
 - } 
 + all . removeIf ( cls - > ! cls . startsWith ( " net / minecraft / " ) & & ! cls . startsWith ( " net / minecraftforge / " ) ) ; 
 
 log . debug ( " Preloading CrashReport Classes " ) ; 
 Collections . sort ( all ) ; / / Sort it because I like pretty output ; ) 
 diff - - git a / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java b / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java 
 index 113d499 . . 9218b87 100644 
 - - - a / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java 
 + + + b / src / main / java / net / minecraftforge / common / capabilities / CapabilityManager . java 
 @ @ - 114 , 12 + 114 , 7 @ @ public enum CapabilityManager 
 } 
 final String capabilityName = type . getInternalName ( ) . replace ( ' / ' , ' . ' ) . intern ( ) ; 
 
 - List < Function < Capability < ? > , Object > > list = callbacks . get ( capabilityName ) ; 
 - if ( list = = null ) 
 - { 
 - list = Lists . newArrayList ( ) ; 
 - callbacks . put ( capabilityName , list ) ; 
 - } 
 + List < Function < Capability < ? > , Object > > list = callbacks . computeIfAbsent ( capabilityName , k - > Lists . newArrayList ( ) ) ; 
 
 if ( entry . getObjectName ( ) . indexOf ( ' ( ' ) > 0 ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / common / config / ConfigManager . java b / src / main / java / net / minecraftforge / common / config / ConfigManager . java 
 index c43f460 . . 96001f8 100644 
 - - - a / src / main / java / net / minecraftforge / common / config / ConfigManager . java 
 + + + b / src / main / java / net / minecraftforge / common / config / ConfigManager . java 
 @ @ - 108 , 12 + 108 , 7 @ @ public class ConfigManager 
 for ( ASMData target : data . getAll ( Config . class . getName ( ) ) ) 
 { 
 String modid = ( String ) target . getAnnotationInfo ( ) . get ( " modid " ) ; 
 - Multimap < Config . Type , ASMData > map = asm _ data . get ( modid ) ; 
 - if ( map = = null ) 
 - { 
 - map = ArrayListMultimap . create ( ) ; 
 - asm _ data . put ( modid , map ) ; 
 - } 
 + Multimap < Config . Type , ASMData > map = asm _ data . computeIfAbsent ( modid , k - > ArrayListMultimap . create ( ) ) ; 
 
 EnumHolder tholder = ( EnumHolder ) target . getAnnotationInfo ( ) . get ( " type " ) ; 
 Config . Type type = tholder = = null ? Config . Type . INSTANCE : Config . Type . valueOf ( tholder . getValue ( ) ) ; 
 @ @ - 164 , 9 + 159 , 8 @ @ public class ConfigManager 
 { 
 Class < ? > cls = Class . forName ( targ . getClassName ( ) , true , mcl ) ; 
 
 - if ( MOD _ CONFIG _ CLASSES . get ( modid ) = = null ) 
 - MOD _ CONFIG _ CLASSES . put ( modid , Sets . < Class < ? > > newHashSet ( ) ) ; 
 - MOD _ CONFIG _ CLASSES . get ( modid ) . add ( cls ) ; 
 + Set < Class < ? > > modConfigClasses = MOD _ CONFIG _ CLASSES . computeIfAbsent ( modid , k - > Sets . < Class < ? > > newHashSet ( ) ) ; 
 + modConfigClasses . add ( cls ) ; 
 
 String name = ( String ) targ . getAnnotationInfo ( ) . get ( " name " ) ; 
 if ( name = = null ) 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index 4439617 . . 8868a28 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 435 , 7 + 435 , 7 @ @ public class CraftingHelper { 
 throw new JsonSyntaxException ( " Or condition values must be an array of JsonObjects " ) ; 
 children . add ( CraftingHelper . getCondition ( j . getAsJsonObject ( ) , context ) ) ; 
 } 
 - return ( ) - > children . stream ( ) . anyMatch ( c - > c . getAsBoolean ( ) ) ; 
 + return ( ) - > children . stream ( ) . anyMatch ( BooleanSupplier : : getAsBoolean ) ; 
 } ) ; 
 registerC ( " forge : and " , ( context , json ) - > { 
 JsonArray values = JsonUtils . getJsonArray ( json , " values " ) ; 
 @ @ - 610 , 8 + 610 , 8 @ @ public class CraftingHelper { 
 GameData . revert ( RegistryManager . FROZEN , GameData . RECIPES , false ) ; 
 / / ModContainer old = Loader . instance ( ) . activeModContainer ( ) ; 
 Loader . instance ( ) . setActiveModContainer ( null ) ; 
 - Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadFactories ( mod ) ) ; 
 - Loader . instance ( ) . getActiveModList ( ) . forEach ( ( mod ) - > loadRecipes ( mod ) ) ; 
 + Loader . instance ( ) . getActiveModList ( ) . forEach ( CraftingHelper : : loadFactories ) ; 
 + Loader . instance ( ) . getActiveModList ( ) . forEach ( CraftingHelper : : loadRecipes ) ; 
 Loader . instance ( ) . setActiveModContainer ( null ) ; 
 / / reg . freeze ( ) ; 
 FMLCommonHandler . instance ( ) . resetClientRecipeBook ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 index 6d86eb2 . . 293165b 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 @ @ - 108 , 13 + 108 , 7 @ @ public class CompoundDataFixer extends DataFixer 
 
 private List < IDataWalker > getWalkers ( IFixType type ) 
 { 
 - List < IDataWalker > ret = walkers . get ( type ) ; 
 - if ( ret = = null ) 
 - { 
 - ret = Lists . newArrayList ( ) ; 
 - walkers . put ( type , ret ) ; 
 - } 
 - return ret ; 
 + return walkers . computeIfAbsent ( type , k - > Lists . newArrayList ( ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java b / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java 
 index 45a9ac6 . . c3e7897 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java 
 + + + b / src / main / java / net / minecraftforge / common / util / FakePlayerFactory . java 
 @ @ - 67 , 14 + 67 , 6 @ @ public class FakePlayerFactory 
 
 public static void unloadWorld ( WorldServer world ) 
 { 
 - Iterator < Entry < GameProfile , FakePlayer > > itr = fakePlayers . entrySet ( ) . iterator ( ) ; 
 - while ( itr . hasNext ( ) ) 
 - { 
 - Entry < GameProfile , FakePlayer > entry = itr . next ( ) ; 
 - if ( entry . getValue ( ) . world = = world ) 
 - { 
 - itr . remove ( ) ; 
 - } 
 - } 
 + fakePlayers . entrySet ( ) . removeIf ( entry - > entry . getValue ( ) . world = = world ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 index 2dc01f2 . . 2514089 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 @ @ - 45 , 13 + 45 , 7 @ @ public class ModFixs 
 
 public List < IFixableData > getFixes ( IFixType type ) 
 { 
 - List < IFixableData > ret = this . fixes . get ( type ) ; 
 - if ( ret = = null ) 
 - { 
 - ret = Lists . newArrayList ( ) ; 
 - this . fixes . put ( type , ret ) ; 
 - } 
 - return ret ; 
 + return this . fixes . computeIfAbsent ( type , k - > Lists . newArrayList ( ) ) ; 
 } 
 
 public void registerFix ( IFixType type , IFixableData fixer ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 index e4c775e . . 8b32054 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 @ @ - 494 , 12 + 494 , 7 @ @ public class FMLDeobfuscatingRemapper extends Remapper { 
 { 
 return fType ; 
 } 
 - Map < String , String > newClassMap = fieldDescriptions . get ( newType ) ; 
 - if ( newClassMap = = null ) 
 - { 
 - newClassMap = Maps . newHashMap ( ) ; 
 - fieldDescriptions . put ( newType , newClassMap ) ; 
 - } 
 + Map < String , String > newClassMap = fieldDescriptions . computeIfAbsent ( newType , k - > Maps . newHashMap ( ) ) ; 
 newClassMap . put ( newName , fType ) ; 
 return fType ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java b / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java 
 index 0477dc9 . . d08c548 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / event / FMLModIdMappingEvent . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package net . minecraftforge . fml . common . event ; 
 
 - import java . util . Collections ; 
 + import java . util . Comparator ; 
 import java . util . List ; 
 import java . util . Map ; 
 import com . google . common . collect . ImmutableList ; 
 @ @ - 71 , 8 + 71 , 8 @ @ public class FMLModIdMappingEvent extends FMLEvent 
 remaps . forEach ( ( name , rm ) - > 
 { 
 List < ModRemapping > tmp = Lists . newArrayList ( ) ; 
 - rm . entrySet ( ) . forEach ( e - > tmp . add ( new ModRemapping ( name , e . getKey ( ) , e . getValue ( ) [ 0 ] , e . getValue ( ) [ 1 ] ) ) ) ; 
 - Collections . sort ( tmp , ( o1 , o2 ) - > ( o1 . newId < o2 . newId ) ? - 1 : ( ( o1 . newId = = o2 . newId ) ? 0 : 1 ) ) ; 
 + rm . forEach ( ( key , value ) - > tmp . add ( new ModRemapping ( name , key , value [ 0 ] , value [ 1 ] ) ) ) ; 
 + tmp . sort ( Comparator . comparingInt ( o - > o . newId ) ) ; 
 this . remaps . put ( name , ImmutableList . copyOf ( tmp ) ) ; 
 } ) ; 
 this . keys = ImmutableSet . copyOf ( this . remaps . keySet ( ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java b / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java 
 index 5305f5f . . 2a8aaf9 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / eventhandler / EventBus . java 
 @ @ - 150 , 12 + 150 , 7 @ @ public class EventBus implements IEventExceptionHandler 
 
 event . getListenerList ( ) . register ( busID , asm . getPriority ( ) , listener ) ; 
 
 - ArrayList < IEventListener > others = listeners . get ( target ) ; 
 - if ( others = = null ) 
 - { 
 - others = new ArrayList < IEventListener > ( ) ; 
 - listeners . put ( target , others ) ; 
 - } 
 + ArrayList < IEventListener > others = listeners . computeIfAbsent ( target , k - > new ArrayList < > ( ) ) ; 
 others . add ( listener ) ; 
 } 
 catch ( Exception e ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 index a8e8aeb . . 77abd68 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 @ @ - 284 , 16 + 284 , 7 @ @ public class EntityRegistry 
 { 
 for ( Biome biome : biomes ) 
 { 
 - Iterator < SpawnListEntry > spawns = biome . getSpawnableList ( typeOfCreature ) . iterator ( ) ; 
 - 
 - while ( spawns . hasNext ( ) ) 
 - { 
 - SpawnListEntry entry = spawns . next ( ) ; 
 - if ( entry . entityClass = = entityClass ) 
 - { 
 - spawns . remove ( ) ; 
 - } 
 - } 
 + biome . getSpawnableList ( typeOfCreature ) . removeIf ( entry - > entry . entityClass = = entityClass ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 index 885cec7 . . 5718078 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 @ @ - 709 , 12 + 709 , 7 @ @ public class OreDictionary 
 { 
 hash | = ( ( ore . getItemDamage ( ) + 1 ) < < 16 ) ; / / + 1 so meta 0 is significant 
 } 
 - List < Integer > ids = stackToId . get ( hash ) ; 
 - if ( ids = = null ) 
 - { 
 - ids = Lists . newArrayList ( ) ; 
 - stackToId . put ( hash , ids ) ; 
 - } 
 + List < Integer > ids = stackToId . computeIfAbsent ( hash , k - > Lists . newArrayList ( ) ) ; 
 ids . add ( id ) ; 
 / / System . out . println ( id + " " + getOreName ( id ) + " " + Integer . toHexString ( hash ) + " " + ore ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 index 3718ad1 . . 1cfc2a8 100644 
 - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 @ @ - 469 , 7 + 469 , 7 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe 
 this . min = from . min ; 
 * / 
 this . aliases . clear ( ) ; 
 - from . aliases . forEach ( ( f , t ) - > this . addAlias ( f , t ) ) ; 
 + from . aliases . forEach ( this : : addAlias ) ; 
 
 this . ids . clear ( ) ; 
 this . names . clear ( ) ; 
 @ @ - 517 , 7 + 517 , 7 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe 
 
 / / Needs to be below add so that dummies are persisted 
 this . dummies . clear ( ) ; 
 - from . dummies . forEach ( dummy - > this . addDummy ( dummy ) ) ; 
 + from . dummies . forEach ( this : : addDummy ) ; 
 
 if ( errored ) 
 throw new RuntimeException ( " One of more entry values did not copy to the correct id . Check log for details ! " ) ; 
 @ @ - 718 , 9 + 718 , 9 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe 
 { 
 Snapshot ret = new Snapshot ( ) ; 
 this . ids . forEach ( ( id , value ) - > ret . ids . put ( getKey ( value ) , id ) ) ; 
 - this . aliases . forEach ( ( from , to ) - > ret . aliases . put ( from , to ) ) ; 
 - this . blocked . forEach ( id - > ret . blocked . add ( id ) ) ; 
 - this . dummies . forEach ( name - > ret . dummied . add ( name ) ) ; 
 + ret . aliases . putAll ( this . aliases ) ; 
 + ret . blocked . addAll ( this . blocked ) ; 
 + ret . dummied . addAll ( this . dummies ) ; 
 ret . overrides . putAll ( getOverrideOwners ( ) ) ; 
 return ret ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java 
 index 77d6d42 . . 9865ad0 100644 
 - - - a / src / main / java / net / minecraftforge / registries / GameData . java 
 + + + b / src / main / java / net / minecraftforge / registries / GameData . java 
 @ @ - 469 , 20 + 469 , 20 @ @ public class GameData 
 final Map < ResourceLocation , Map < ResourceLocation , Integer [ ] > > remaps = Maps . newHashMap ( ) ; 
 final LinkedHashMap < ResourceLocation , Map < ResourceLocation , Integer > > missing = Maps . newLinkedHashMap ( ) ; 
 / / Load the snapshot into the " STAGING " registry 
 - snapshot . entrySet ( ) . forEach ( e - > 
 + snapshot . forEach ( ( key , value ) - > 
 { 
 - final Class < ? extends IForgeRegistryEntry > clazz = RegistryManager . ACTIVE . getSuperType ( e . getKey ( ) ) ; 
 - remaps . put ( e . getKey ( ) , Maps . newLinkedHashMap ( ) ) ; 
 - missing . put ( e . getKey ( ) , Maps . newHashMap ( ) ) ; 
 - loadPersistentDataToStagingRegistry ( RegistryManager . ACTIVE , STAGING , remaps . get ( e . getKey ( ) ) , missing . get ( e . getKey ( ) ) , e . getKey ( ) , e . getValue ( ) , clazz ) ; 
 + final Class < ? extends IForgeRegistryEntry > clazz = RegistryManager . ACTIVE . getSuperType ( key ) ; 
 + remaps . put ( key , Maps . newLinkedHashMap ( ) ) ; 
 + missing . put ( key , Maps . newHashMap ( ) ) ; 
 + loadPersistentDataToStagingRegistry ( RegistryManager . ACTIVE , STAGING , remaps . get ( key ) , missing . get ( key ) , key , value , clazz ) ; 
 } ) ; 
 
 - snapshot . entrySet ( ) . forEach ( e - > 
 + snapshot . forEach ( ( key , value ) - > 
 { 
 - snapshot . get ( e . getKey ( ) ) . dummied . forEach ( dummy - > 
 + value . dummied . forEach ( dummy - > 
 { 
 - Map < ResourceLocation , Integer > m = missing . get ( e . getKey ( ) ) ; 
 - ForgeRegistry < ? > reg = STAGING . getRegistry ( e . getKey ( ) ) ; 
 + Map < ResourceLocation , Integer > m = missing . get ( key ) ; 
 + ForgeRegistry < ? > reg = STAGING . getRegistry ( key ) ; 
 
 / / Currently missing locally , we just inject and carry on 
 if ( m . containsKey ( dummy ) ) 
 @ @ - 493 , 20 + 493 , 20 @ @ public class GameData 
 else if ( isLocalWorld ) 
 { 
 if ( ForgeRegistry . DEBUG ) 
 - FMLLog . log . debug ( " Registry { } : Resuscitating dummy entry { } " , e . getKey ( ) , dummy ) ; 
 + FMLLog . log . debug ( " Registry { } : Resuscitating dummy entry { } " , key , dummy ) ; 
 } 
 else 
 { 
 / / The server believes this is a dummy block identity , but we seem to have one locally . This is likely a conflict 
 / / in mod setup - Mark this entry as a dummy 
 int id = reg . getID ( dummy ) ; 
 - FMLLog . log . warn ( " Registry { } : The ID { } is currently locally mapped - it will be replaced with a dummy for this session " , e . getKey ( ) , id ) ; 
 + FMLLog . log . warn ( " Registry { } : The ID { } is currently locally mapped - it will be replaced with a dummy for this session " , key , id ) ; 
 reg . markDummy ( dummy , id ) ; 
 } 
 } ) ; 
 } ) ; 
 
 - int count = missing . values ( ) . stream ( ) . mapToInt ( e - > e . size ( ) ) . sum ( ) ; 
 + int count = missing . values ( ) . stream ( ) . mapToInt ( Map : : size ) . sum ( ) ; 
 if ( count > 0 ) 
 { 
 FMLLog . log . debug ( " There are { } mappings missing - attempting a mod remap " , count ) ; 
 @ @ - 635 , 10 + 635 , 10 @ @ public class GameData 
 if ( active = = null ) 
 return ; / / We ' ve already asked the user if they wish to continue . So if the reg isnt found just assume the user knows and accepted it . 
 ForgeRegistry < T > _ new = to . getRegistry ( name , RegistryManager . ACTIVE ) ; 
 - snap . aliases . forEach ( ( f , t ) - > _ new . addAlias ( f , t ) ) ; 
 - snap . blocked . forEach ( id - > _ new . block ( id ) ) ; 
 + snap . aliases . forEach ( _ new : : addAlias ) ; 
 + snap . blocked . forEach ( _ new : : block ) ; 
 / / Load current dummies BEFORE the snapshot is loaded so that add ( ) will remove from the list . 
 - snap . dummied . forEach ( key - > _ new . addDummy ( key ) ) ; 
 + snap . dummied . forEach ( _ new : : addDummy ) ; 
 _ new . loadIds ( snap . ids , snap . overrides , missing , remaps , active , name ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java 
 index fbc5dff . . 53a7372 100644 
 - - - a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java 
 + + + b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java 
 @ @ - 83 , 12 + 83 , 7 @ @ public class ForgeTimeTracker { 
 / / race , exit 
 return ; 
 } 
 - int [ ] timings = tileEntityTimings . get ( tileEntity ) ; 
 - if ( timings = = null ) 
 - { 
 - timings = new int [ 101 ] ; 
 - tileEntityTimings . put ( tileEntity , timings ) ; 
 - } 
 + int [ ] timings = tileEntityTimings . computeIfAbsent ( tileEntity , k - > new int [ 101 ] ) ; 
 int idx = timings [ 100 ] = ( timings [ 100 ] + 1 ) % 100 ; 
 timings [ idx ] = ( int ) ( nanoTime - timing ) ; 
 }

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index f6acdc6 . . e8c7fbf 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 28 , 7 + 28 , 7 @ @ apply plugin : " net . minecraftforge . gradle . launch4j " 
 minecraft { 
 version = " 1 . 8 . 8 " 
 / / mappings = ' stable _ 16 ' 
 - mappings = " snapshot _ nodoc _ 20141130 " 
 + mappings = " snapshot _ nodoc _ 20151122 " 
 workspaceDir = " projects " 
 versionJson = " jsons / 1 . 8 . 8 - dev . json " 
 buildUserdev = true 
 diff - - git a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 index 4978616 . . 455c764 100644 
 - - - a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 + + + b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class ClientCommandHandler extends CommandHandler 
 return 0 ; 
 } 
 
 - if ( icommand . canCommandSenderUse ( sender ) ) 
 + if ( icommand . canCommandSenderUseCommand ( sender ) ) 
 { 
 CommandEvent event = new CommandEvent ( icommand , sender , args ) ; 
 if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 @ @ - 69 , 7 + 69 , 7 @ @ public class ClientCommandHandler extends CommandHandler 
 return 0 ; 
 } 
 
 - icommand . execute ( sender , args ) ; 
 + icommand . processCommand ( sender , args ) ; 
 return 1 ; 
 } 
 else 
 diff - - git a / src / main / java / net / minecraftforge / client / GuiIngameForge . java b / src / main / java / net / minecraftforge / client / GuiIngameForge . java 
 index 5c3adae . . a41ecdf 100644 
 - - - a / src / main / java / net / minecraftforge / client / GuiIngameForge . java 
 + + + b / src / main / java / net / minecraftforge / client / GuiIngameForge . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class GuiIngameForge extends GuiIngame 
 
 if ( Minecraft . isFancyGraphicsEnabled ( ) ) 
 { 
 - func _ 180480 _ a ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; 
 + renderVignette ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; 
 } 
 else 
 { 
 @ @ - 163 , 16 + 163 , 16 @ @ public class GuiIngameForge extends GuiIngame 
 
 Scoreboard scoreboard = this . mc . theWorld . getScoreboard ( ) ; 
 ScoreObjective objective = null ; 
 - ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getName ( ) ) ; 
 + ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getCommandSenderName ( ) ) ; 
 if ( scoreplayerteam ! = null ) 
 { 
 - int slot = scoreplayerteam . func _ 178775 _ l ( ) . getColorIndex ( ) ; 
 + int slot = scoreplayerteam . getChatFormat ( ) . getColorIndex ( ) ; 
 if ( slot > = 0 ) objective = scoreboard . getObjectiveInDisplaySlot ( 3 + slot ) ; 
 } 
 ScoreObjective scoreobjective1 = objective ! = null ? objective : scoreboard . getObjectiveInDisplaySlot ( 1 ) ; 
 if ( renderObjective & & scoreobjective1 ! = null ) 
 { 
 - this . func _ 180475 _ a ( scoreobjective1 , res ) ; 
 + this . renderScoreboard ( scoreobjective1 , res ) ; 
 } 
 
 GlStateManager . enableBlend ( ) ; 
 @ @ - 234 , 7 + 234 , 7 @ @ public class GuiIngameForge extends GuiIngame 
 { 
 if ( itemstack . getItem ( ) = = Item . getItemFromBlock ( Blocks . pumpkin ) ) 
 { 
 - func _ 180476 _ e ( res ) ; 
 + renderPumpkinOverlay ( res ) ; 
 } 
 else 
 { 
 @ @ - 345 , 28 + 345 , 28 @ @ public class GuiIngameForge extends GuiIngame 
 
 EntityPlayer player = ( EntityPlayer ) this . mc . getRenderViewEntity ( ) ; 
 int health = MathHelper . ceiling _ float _ int ( player . getHealth ( ) ) ; 
 - boolean highlight = field _ 175191 _ F > ( long ) updateCounter & & ( field _ 175191 _ F - ( long ) updateCounter ) / 3L % 2L = = 1L ; 
 + boolean highlight = healthUpdateCounter > ( long ) updateCounter & & ( healthUpdateCounter - ( long ) updateCounter ) / 3L % 2L = = 1L ; 
 
 - if ( health < this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) 
 + if ( health < this . playerHealth & & player . hurtResistantTime > 0 ) 
 { 
 this . lastSystemTime = Minecraft . getSystemTime ( ) ; 
 - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 20 ) ; 
 + this . healthUpdateCounter = ( long ) ( this . updateCounter + 20 ) ; 
 } 
 - else if ( health > this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) 
 + else if ( health > this . playerHealth & & player . hurtResistantTime > 0 ) 
 { 
 this . lastSystemTime = Minecraft . getSystemTime ( ) ; 
 - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 10 ) ; 
 + this . healthUpdateCounter = ( long ) ( this . updateCounter + 10 ) ; 
 } 
 
 if ( Minecraft . getSystemTime ( ) - this . lastSystemTime > 1000L ) 
 { 
 - this . field _ 175194 _ C = health ; 
 - this . field _ 175189 _ D = health ; 
 + this . playerHealth = health ; 
 + this . lastPlayerHealth = health ; 
 this . lastSystemTime = Minecraft . getSystemTime ( ) ; 
 } 
 
 - this . field _ 175194 _ C = health ; 
 - int healthLast = this . field _ 175189 _ D ; 
 + this . playerHealth = health ; 
 + int healthLast = this . lastPlayerHealth ; 
 
 IAttributeInstance attrMaxHealth = player . getEntityAttribute ( SharedMonsterAttributes . maxHealth ) ; 
 float healthMax = ( float ) attrMaxHealth . getAttributeValue ( ) ; 
 @ @ - 748 , 11 + 748 , 11 @ @ public class GuiIngameForge extends GuiIngame 
 GlStateManager . pushMatrix ( ) ; 
 GlStateManager . scale ( 4 . 0F , 4 . 0F , 4 . 0F ) ; 
 int l = opacity < < 24 & - 16777216 ; 
 - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; 
 + this . getFontRenderer ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; 
 GlStateManager . popMatrix ( ) ; 
 GlStateManager . pushMatrix ( ) ; 
 GlStateManager . scale ( 2 . 0F , 2 . 0F , 2 . 0F ) ; 
 - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; 
 + this . getFontRenderer ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; 
 GlStateManager . popMatrix ( ) ; 
 GlStateManager . disableBlend ( ) ; 
 GlStateManager . popMatrix ( ) ; 
 @ @ - 784 , 16 + 784 , 16 @ @ public class GuiIngameForge extends GuiIngame 
 ScoreObjective scoreobjective = this . mc . theWorld . getScoreboard ( ) . getObjectiveInDisplaySlot ( 0 ) ; 
 NetHandlerPlayClient handler = mc . thePlayer . sendQueue ; 
 
 - if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . func _ 175106 _ d ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) 
 + if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . getPlayerInfoMap ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) 
 { 
 - this . overlayPlayerList . func _ 175246 _ a ( true ) ; 
 + this . overlayPlayerList . updatePlayerList ( true ) ; 
 if ( pre ( PLAYER _ LIST ) ) return ; 
 - this . overlayPlayerList . func _ 175249 _ a ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; 
 + this . overlayPlayerList . renderPlayerlist ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; 
 post ( PLAYER _ LIST ) ; 
 } 
 else 
 { 
 - this . overlayPlayerList . func _ 175246 _ a ( false ) ; 
 + this . overlayPlayerList . updatePlayerList ( false ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 index b5ced65 . . 462a307 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 @ @ - 50 , 7 + 50 , 7 @ @ public class ForgeBlockStateV1 extends Marker 
 { 
 JsonObject json = element . getAsJsonObject ( ) ; 
 ForgeBlockStateV1 ret = new ForgeBlockStateV1 ( ) ; 
 - ret . forge _ marker = JsonUtils . getJsonObjectIntegerFieldValue ( json , " forge _ marker " ) ; 
 + ret . forge _ marker = JsonUtils . getInt ( json , " forge _ marker " ) ; 
 
 if ( json . has ( " defaults " ) ) / / Load defaults Variant . 
 { 
 @ @ - 146 , 13 + 146 , 13 @ @ public class ForgeBlockStateV1 extends Marker 
 part . state = state ; 
 } 
 } 
 - 
 + 
 Iterator < List < Variant > > iter = v . submodels . values ( ) . iterator ( ) ; 
 - 
 + 
 while ( iter . hasNext ( ) ) 
 { 
 List < Variant > submodel = iter . next ( ) ; 
 - 
 + 
 if ( submodel = = null ) 
 iter . remove ( ) ; 
 } 
 @ @ - 430 , 7 + 430 , 7 @ @ public class ForgeBlockStateV1 extends Marker 
 if ( json . get ( " model " ) . isJsonNull ( ) ) 
 ret . model = null ; / / Allow overriding base model to remove it from a state . 
 else 
 - ret . model = getBlockLocation ( JsonUtils . getJsonObjectStringFieldValue ( json , " model " ) ) ; 
 + ret . model = getBlockLocation ( JsonUtils . getString ( json , " model " ) ) ; 
 ret . modelSet = true ; 
 } 
 
 @ @ - 447 , 8 + 447 , 8 @ @ public class ForgeBlockStateV1 extends Marker 
 
 if ( json . has ( " x " ) | | json . has ( " y " ) ) 
 { / / Load rotation values . 
 - int x = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " x " , 0 ) ; 
 - int y = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " y " , 0 ) ; 
 + int x = JsonUtils . getInt ( json , " x " , 0 ) ; 
 + int y = JsonUtils . getInt ( json , " y " , 0 ) ; 
 ret . state = Optional . < IModelState > of ( new TRSRTransformation ( ModelRotation . getModelRotation ( x , y ) ) ) ; 
 if ( ! ret . state . isPresent ( ) ) 
 throw new JsonParseException ( " Invalid BlockModelRotation x : " + x + " y : " + y ) ; 
 @ @ - 589 , 12 + 589 , 12 @ @ public class ForgeBlockStateV1 extends Marker 
 
 if ( json . has ( " uvlock " ) ) 
 { / / Load uvlock . 
 - ret . uvLock = Optional . of ( JsonUtils . getJsonObjectBooleanFieldValue ( json , " uvlock " ) ) ; 
 + ret . uvLock = Optional . of ( JsonUtils . getBoolean ( json , " uvlock " ) ) ; 
 } 
 
 if ( json . has ( " weight " ) ) 
 { / / Load weight . 
 - ret . weight = Optional . of ( JsonUtils . getJsonObjectIntegerFieldValue ( json , " weight " ) ) ; 
 + ret . weight = Optional . of ( JsonUtils . getInt ( json , " weight " ) ) ; 
 } 
 
 if ( json . has ( " submodel " ) ) 
 diff - - git a / src / main / java / net / minecraftforge / common / ChestGenHooks . java b / src / main / java / net / minecraftforge / common / ChestGenHooks . java 
 index 55fd8e0 . . 61c0244 100644 
 - - - a / src / main / java / net / minecraftforge / common / ChestGenHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ChestGenHooks . java 
 @ @ - 234 , 7 + 234 , 7 @ @ public class ChestGenHooks 
 public ItemStack getOneItem ( Random rand ) 
 { 
 WeightedRandomChestContent item = ( WeightedRandomChestContent ) WeightedRandom . getRandomItem ( rand , getItems ( rand ) ) ; 
 - ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . theMinimumChanceToGenerateItem , item . theMaximumChanceToGenerateItem ) ; 
 + ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . minStackSize , item . maxStackSize ) ; 
 return ( stacks . length > 0 ? stacks [ 0 ] : null ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 429a859 . . aab0aca 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 670 , 7 + 670 , 7 @ @ public class ForgeHooks 
 if ( world . getTileEntity ( pos ) = = null ) 
 { 
 S23PacketBlockChange packet = new S23PacketBlockChange ( world , pos ) ; 
 - packet . field _ 148883 _ d = Blocks . air . getDefaultState ( ) ; 
 + packet . blockState = Blocks . air . getDefaultState ( ) ; 
 entityPlayer . playerNetServerHandler . sendPacket ( packet ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayer . java b / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 index 2607377 . . 3cbb21e 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 @ @ - 23 , 7 + 23 , 7 @ @ public class FakePlayer extends EntityPlayerMP 
 } 
 
 @ Override public Vec3 getPositionVector ( ) { return new Vec3 ( 0 , 0 , 0 ) ; } 
 - @ Override public boolean canUseCommand ( int i , String s ) { return false ; } 
 + @ Override public boolean canCommandSenderUseCommand ( int i , String s ) { return false ; } 
 @ Override public void addChatComponentMessage ( IChatComponent chatmessagecomponent ) { } 
 @ Override public void addStat ( StatBase par1StatBase , int par2 ) { } 
 @ Override public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 diff - - git a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java 
 index fc14d7d . . 167c097 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class ExplosionEvent extends Event 
 / * * return the list of blocks affected by the explosion . * / 
 public List < BlockPos > getAffectedBlocks ( ) 
 { 
 - return explosion . func _ 180343 _ e ( ) ; 
 + return explosion . getAffectedBlockPositions ( ) ; 
 } 
 
 / * * return the list of entities affected by the explosion . * / 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiModList . java b / src / main / java / net / minecraftforge / fml / client / GuiModList . java 
 index 8cb8efc . . 2792b7b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / GuiModList . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / GuiModList . java 
 @ @ - 579 , 7 + 579 , 7 @ @ public class GuiModList extends GuiScreen 
 k + = GuiModList . this . fontRendererObj . getStringWidth ( ( ( ChatComponentText ) part ) . getChatComponentText _ TextValue ( ) ) ; 
 if ( k > = x ) 
 { 
 - GuiModList . this . func _ 175276 _ a ( part ) ; 
 + GuiModList . this . handleComponentClick ( part ) ; 
 break ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 index 657bb22 . . 2851281 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 @ @ - 90 , 7 + 90 , 7 @ @ public class FMLNetworkHandler 
 embeddedChannel . writeOutbound ( openGui ) ; 
 entityPlayerMP . openContainer = remoteGuiContainer ; 
 entityPlayerMP . openContainer . windowId = windowId ; 
 - entityPlayerMP . openContainer . addCraftingToCrafters ( entityPlayerMP ) ; 
 + entityPlayerMP . openContainer . onCraftGuiOpened ( entityPlayerMP ) ; 
 } 
 } 
 else if ( entityPlayer instanceof FakePlayer ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 81a3c91 . . da5139d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 456 , 7 + 456 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 
 for ( I thing : this . typeSafeIterable ( ) ) 
 { 
 - if ( ! registry . field _ 148758 _ b . containsKey ( thing ) ) 
 + if ( ! registry . inverseObjectRegistry . containsKey ( thing ) ) 
 { 
 if ( ! registry . activeSubstitutions . containsKey ( getNameForObject ( thing ) . toString ( ) ) ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 index f222b1b . . 8116b20 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 @ @ - 506 , 7 + 506 , 7 @ @ public class GameRegistry 
 NBTBase nbttag = null ; 
 try 
 { 
 - nbttag = JsonToNBT . func _ 180713 _ a ( nbtString ) ; 
 + nbttag = JsonToNBT . getTagFromJson ( nbtString ) ; 
 } catch ( NBTException e ) 
 { 
 FMLLog . getLogger ( ) . log ( Level . WARN , " Encountered an exception parsing ItemStack NBT string { } " , nbtString , e ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index be2f2d6 . . 252e94d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 180 , 7 + 180 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 for ( Iterator < ServerCommand > it = GenericIterableFactory . newCastingIterable ( dedServer . pendingCommandList , ServerCommand . class ) . iterator ( ) ; it . hasNext ( ) ; ) 
 { 
 - String cmd = it . next ( ) . input . trim ( ) . toLowerCase ( ) ; 
 + String cmd = it . next ( ) . command . trim ( ) . toLowerCase ( ) ; 
 
 if ( cmd . equals ( " / fml confirm " ) ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 index 163bc34 . . a940bd8 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 + + + b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 @ @ - 25 , 7 + 25 , 7 @ @ public class ForgeCommand extends CommandBase { 
 } 
 
 @ Override 
 - public String getName ( ) 
 + public String getCommandName ( ) 
 { 
 return " forge " ; 
 } 
 @ @ - 42 , 7 + 42 , 7 @ @ public class ForgeCommand extends CommandBase { 
 return 2 ; 
 } 
 @ Override 
 - public void execute ( ICommandSender sender , String [ ] args ) throws CommandException 
 + public void processCommand ( ICommandSender sender , String [ ] args ) throws CommandException 
 { 
 if ( args . length = = 0 ) 
 { 
 @ @ - 80 , 7 + 80 , 7 @ @ public class ForgeCommand extends CommandBase { 
 else if ( args . length = = 2 ) 
 { 
 if ( " tps " . equals ( args [ 0 ] ) ) { 
 - return func _ 175762 _ a ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; 
 + return getListOfStringsMatchingLastWord ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; 
 } 
 else if ( " track " . equals ( args [ 0 ] ) ) 
 { 
 @ @ - 89 , 7 + 89 , 7 @ @ public class ForgeCommand extends CommandBase { 
 } 
 return null ; 
 } 
 - 
 + 
 private void handleTracking ( ICommandSender sender , String [ ] args ) throws CommandException 
 { 
 if ( args . length ! = 3 ) 
 diff - - git a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 index 4dfa7b4 . . 1ad6504 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import net . minecraftforge . fml . relauncher . SideOnly ; 
 public class ForgeBlockStatesLoaderDebug { 
 public static final String MODID = " ForgeBlockStatesLoader " ; 
 public static final String ASSETS = " forgeblockstatesloader : " ; 
 - 
 + 
 public static final Block blockCustom = new CustomMappedBlock ( ) ; 
 public static final String nameCustomWall = " custom _ wall " ; 
 public static final BlockWall blockCustomWall = new BlockWall ( Blocks . cobblestone ) ; 
 @ @ - 48 , 42 + 48 , 42 @ @ public class ForgeBlockStatesLoaderDebug { 
 return BlockWall . EnumType . byMetadata ( stack . getMetadata ( ) ) . getUnlocalizedName ( ) ; 
 } 
 } ) ; 
 - 
 + 
 @ EventHandler 
 public void preInit ( FMLPreInitializationEvent event ) 
 - { 
 + { 
 	 blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) ; 
 	 GameRegistry . registerBlock ( blockCustom , " customBlock " ) ; 
 - 	 
 + 
 blockCustomWall . setUnlocalizedName ( MODID + " . customWall " ) ; 
 GameRegistry . registerBlock ( blockCustomWall , null , nameCustomWall ) ; 
 GameRegistry . registerItem ( itemCustomWall , nameCustomWall ) ; 
 GameData . getBlockItemMap ( ) . put ( blockCustomWall , itemCustomWall ) ; 
 - 
 + 
 if ( event . getSide ( ) = = Side . CLIENT ) 
 preInitClient ( event ) ; 
 } 
 - 
 + 
 @ SideOnly ( Side . CLIENT ) 
 public void preInitClient ( FMLPreInitializationEvent event ) 
 { 
 - 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . setProperty ( CustomMappedBlock . VARIANT ) . build ( ) ) ; 
 - 	 
 + 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; 
 + 
 ModelLoader . setCustomStateMapper ( blockCustomWall , new IStateMapper ( ) 
 { 
 - StateMap stateMap = new StateMap . Builder ( ) . setProperty ( BlockWall . VARIANT ) . setBuilderSuffix ( " _ wall " ) . build ( ) ; 
 + StateMap stateMap = new StateMap . Builder ( ) . withName ( BlockWall . VARIANT ) . withSuffix ( " _ wall " ) . build ( ) ; 
 @ Override 
 public Map putStateModelLocations ( Block block ) 
 { 
 Map < IBlockState , ModelResourceLocation > map = ( Map < IBlockState , ModelResourceLocation > ) stateMap . putStateModelLocations ( block ) ; 
 Map < IBlockState , ModelResourceLocation > newMap = Maps . newHashMap ( ) ; 
 - 
 + 
 for ( Entry < IBlockState , ModelResourceLocation > e : map . entrySet ( ) ) 
 { 
 ModelResourceLocation loc = e . getValue ( ) ; 
 newMap . put ( e . getKey ( ) , new ModelResourceLocation ( ASSETS + loc . getResourcePath ( ) , loc . getVariant ( ) ) ) ; 
 } 
 - 
 + 
 return newMap ; 
 } 
 } ) ; 
 @ @ - 92 , 41 + 92 , 41 @ @ public class ForgeBlockStatesLoaderDebug { 
 ModelLoader . setCustomModelResourceLocation ( customWallItem , 1 , new ModelResourceLocation ( ASSETS + " mossy _ cobblestone _ wall " , " inventory " ) ) ; 
 ModelBakery . addVariantName ( customWallItem , ASSETS + " cobblestone _ wall " , ASSETS + " mossy _ cobblestone _ wall " ) ; 
 } 
 - 
 + 
 / / this block is never actually used , it ' s only needed for the error message on load to see the variant it maps to 
 public static class CustomMappedBlock extends Block { 
 	 public static final PropertyEnum VARIANT = PropertyEnum . create ( " type " , CustomVariant . class ) ; 
 - 	 
 + 
 	 	 protected CustomMappedBlock ( ) { 
 	 	 	 super ( Material . rock ) ; 
 - 	 	 	 
 + 
 	 	 	 this . setUnlocalizedName ( MODID + " . customMappedBlock " ) ; 
 	 	 } 
 - 	 
 + 
 	 	 @ Override 
 	 	 protected BlockState createBlockState ( ) { 
 	 	 	 return new BlockState ( this , VARIANT ) ; 
 	 	 } 
 - 	 	 
 + 
 	 	 @ Override 
 	 	 public int getMetaFromState ( IBlockState state ) 
 	 	 { 
 	 	 return ( ( CustomVariant ) state . getValue ( VARIANT ) ) . ordinal ( ) ; 
 	 	 } 
 - 	 	 
 + 
 	 	 @ Override 
 	 	 public IBlockState getStateFromMeta ( int meta ) 
 	 	 { 
 	 	 if ( meta > CustomVariant . values ( ) . length | | meta < 0 ) 
 	 	 meta = 0 ; 
 - 	 	 
 + 
 	 	 return this . getDefaultState ( ) . withProperty ( VARIANT , CustomVariant . values ( ) [ meta ] ) ; 
 	 	 } 
 - 	 	 
 + 
 	 	 public static enum CustomVariant implements IStringSerializable { 
 	 	 	 TypeA , 
 	 	 	 TypeB ; 
 - 	 	 	 
 + 
 	 	 	 public String getName ( ) { return this . toString ( ) ; } ; 
 	 	 } 
 }
