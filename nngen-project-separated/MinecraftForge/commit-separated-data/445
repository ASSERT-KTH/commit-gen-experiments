BLEU SCORE: 0.05341087579952926

TEST MSG: Update MCP mappings to 20170617
GENERATED MSG: Updated FML :

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index ee6e6a2 . . 5b22a17 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 29 , 7 + 29 , 7 @ @ apply plugin : " net . minecraftforge . gradle . launch4j " <nl> minecraft . version = " 1 . 12 " <nl> <nl> minecraft { <nl> - mappings = ' snapshot _ nodoc _ 20170611 ' <nl> + mappings = ' snapshot _ nodoc _ 20170617 ' <nl> workspaceDir = " projects " <nl> versionJson = " jsons / $ { minecraft . version } - dev . json " <nl> buildUserdev = true <nl> diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index 55c71d9 . . 180abb1 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 293 , 7 + 293 , 7 @ @ <nl> + * @ param side The side to check <nl> + * @ return True if the block is solid on the specified side . <nl> + * / <nl> - + @ Deprecated / / Use IBlockState . func _ 193401 _ d <nl> + + @ Deprecated / / Use IBlockState . getBlockFaceShape <nl> + public boolean isSideSolid ( IBlockState base _ state , IBlockAccess world , BlockPos pos , EnumFacing side ) <nl> + { <nl> + if ( base _ state . func _ 185896 _ q ( ) & & side = = EnumFacing . UP ) / / Short circuit to vanilla function if its true <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 9295716 . . 553bb8a 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 597 , 10 + 597 , 10 @ @ public class ForgeHooksClient <nl> Class < ? extends TileEntity > tileClass = tileItemMap . get ( Pair . of ( item , metadata ) ) ; <nl> if ( tileClass ! = null ) <nl> { <nl> - TileEntitySpecialRenderer < ? > r = TileEntityRendererDispatcher . instance . getSpecialRendererByClass ( tileClass ) ; <nl> + TileEntitySpecialRenderer < ? > r = TileEntityRendererDispatcher . instance . getRenderer ( tileClass ) ; <nl> if ( r ! = null ) <nl> { <nl> - r . func _ 192841 _ a ( null , 0 , 0 , 0 , 0 , - 1 , 0 . 0F ) ; <nl> + r . render ( null , 0 , 0 , 0 , 0 , - 1 , 0 . 0F ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java b / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java <nl> index 41af878 . . e318d10 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import javax . annotation . Nonnull ; <nl> public abstract class FastTESR < T extends TileEntity > extends TileEntitySpecialRenderer < T > <nl> { <nl> @ Override <nl> - public final void func _ 192841 _ a ( @ Nonnull T te , double x , double y , double z , float partialTicks , int destroyStage , float partial ) <nl> + public final void render ( @ Nonnull T te , double x , double y , double z , float partialTicks , int destroyStage , float partial ) <nl> { <nl> Tessellator tessellator = Tessellator . getInstance ( ) ; <nl> BufferBuilder buffer = tessellator . getBuffer ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java b / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java <nl> index 29f0330 . . 405d426 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java <nl> @ @ - 1 , 8 + 1 , 10 @ @ <nl> package net . minecraftforge . common . crafting ; <nl> <nl> import java . util . Collection ; <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> import javax . annotation . Nullable ; <nl> <nl> import com . google . common . collect . Lists ; <nl> @ @ - 28 , 29 + 30 , 31 @ @ public class CompoundIngredient extends Ingredient <nl> } <nl> <nl> @ Override <nl> - public ItemStack [ ] func _ 193365 _ a ( ) <nl> + @ Nonnull <nl> + public ItemStack [ ] getMatchingStacks ( ) <nl> { <nl> if ( stacks = = null ) <nl> { <nl> List < ItemStack > tmp = Lists . newArrayList ( ) ; <nl> for ( Ingredient child : children ) <nl> - for ( ItemStack stack : child . func _ 193365 _ a ( ) ) <nl> - tmp . add ( stack ) ; <nl> + Collections . addAll ( tmp , child . getMatchingStacks ( ) ) ; <nl> stacks = tmp . toArray ( new ItemStack [ tmp . size ( ) ] ) ; <nl> <nl> } <nl> return stacks ; <nl> } <nl> <nl> + @ Override <nl> + @ Nonnull <nl> @ SideOnly ( Side . CLIENT ) <nl> - public IntList func _ 194139 _ b ( ) <nl> + public IntList getValidItemStacksPacked ( ) <nl> { <nl> / / TODO : Add a child . isInvalid ( ) ? <nl> if ( this . itemIds = = null ) <nl> { <nl> this . itemIds = new IntArrayList ( ) ; <nl> for ( Ingredient child : children ) <nl> - this . itemIds . addAll ( child . func _ 194139 _ b ( ) ) ; <nl> + this . itemIds . addAll ( child . getValidItemStacksPacked ( ) ) ; <nl> this . itemIds . sort ( IntComparators . NATURAL _ COMPARATOR ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index 4c0c085 . . df928ff 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 114 , 11 + 114 , 11 @ @ public class CraftingHelper { <nl> if ( obj instanceof Ingredient ) <nl> return ( Ingredient ) obj ; <nl> else if ( obj instanceof ItemStack ) <nl> - return Ingredient . func _ 193369 _ a ( ( ( ItemStack ) obj ) . copy ( ) ) ; <nl> + return Ingredient . fromStacks ( ( ( ItemStack ) obj ) . copy ( ) ) ; <nl> else if ( obj instanceof Item ) <nl> - return Ingredient . func _ 193367 _ a ( ( Item ) obj ) ; <nl> + return Ingredient . fromItem ( ( Item ) obj ) ; <nl> else if ( obj instanceof Block ) <nl> - return Ingredient . func _ 193369 _ a ( new ItemStack ( ( Block ) obj , 1 , OreDictionary . WILDCARD _ VALUE ) ) ; <nl> + return Ingredient . fromStacks ( new ItemStack ( ( Block ) obj , 1 , OreDictionary . WILDCARD _ VALUE ) ) ; <nl> else if ( obj instanceof String ) <nl> return new OreIngredient ( ( String ) obj ) ; <nl> else if ( obj instanceof JsonElement ) <nl> @ @ - 144 , 7 + 144 , 7 @ @ public class CraftingHelper { <nl> <nl> if ( ing . getClass ( ) = = Ingredient . class ) { <nl> / / Vanilla , Due to how we read it splits each itemstack , so we pull out to re - merge later <nl> - for ( ItemStack stack : ing . func _ 193365 _ a ( ) ) <nl> + for ( ItemStack stack : ing . getMatchingStacks ( ) ) <nl> vanilla . add ( stack ) ; <nl> } <nl> else <nl> @ @ - 156 , 7 + 156 , 7 @ @ public class CraftingHelper { <nl> if ( ! vanilla . isEmpty ( ) ) <nl> { <nl> ItemStack [ ] items = vanilla . toArray ( new ItemStack [ vanilla . size ( ) ] ) ; <nl> - ingredients . add ( Ingredient . func _ 193369 _ a ( items ) ) ; <nl> + ingredients . add ( Ingredient . fromStacks ( items ) ) ; <nl> } <nl> <nl> if ( ingredients . size ( ) = = 0 ) <nl> @ @ - 308 , 7 + 308 , 7 @ @ public class CraftingHelper { <nl> } <nl> <nl> HashMap < Character , Ingredient > itemMap = Maps . newHashMap ( ) ; <nl> - itemMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; <nl> + itemMap . put ( ' ' , Ingredient . EMPTY ) ; <nl> <nl> for ( ; idx < recipe . length ; idx + = 2 ) <nl> { <nl> @ @ - 334 , 7 + 334 , 7 @ @ public class CraftingHelper { <nl> } <nl> } <nl> <nl> - ret . input = NonNullList . withSize ( ret . width * ret . height , Ingredient . field _ 193370 _ a ) ; <nl> + ret . input = NonNullList . withSize ( ret . width * ret . height , Ingredient . EMPTY ) ; <nl> <nl> Set < Character > keys = Sets . newHashSet ( itemMap . keySet ( ) ) ; <nl> keys . remove ( ' ' ) ; <nl> @ @ - 448 , 7 + 448 , 7 @ @ public class CraftingHelper { <nl> <nl> ingMap . put ( entry . getKey ( ) . toCharArray ( ) [ 0 ] , CraftingHelper . getIngredient ( entry . getValue ( ) , context ) ) ; <nl> } <nl> - ingMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; <nl> + ingMap . put ( ' ' , Ingredient . EMPTY ) ; <nl> <nl> JsonArray patternJ = JsonUtils . getJsonArray ( json , " pattern " ) ; <nl> <nl> @ @ - 468 , 7 + 468 , 7 @ @ public class CraftingHelper { <nl> pattern [ x ] = line ; <nl> } <nl> <nl> - NonNullList < Ingredient > input = NonNullList . withSize ( pattern [ 0 ] . length ( ) * pattern . length , Ingredient . field _ 193370 _ a ) ; <nl> + NonNullList < Ingredient > input = NonNullList . withSize ( pattern [ 0 ] . length ( ) * pattern . length , Ingredient . EMPTY ) ; <nl> Set < Character > keys = Sets . newHashSet ( ingMap . keySet ( ) ) ; <nl> keys . remove ( ' ' ) ; <nl> <nl> @ @ - 503 , 15 + 503 , 15 @ @ public class CraftingHelper { <nl> if ( ings . size ( ) > 9 ) <nl> throw new JsonParseException ( " Too many ingredients for shapeless recipe " ) ; <nl> <nl> - ItemStack itemstack = ShapedRecipes . func _ 192405 _ a ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; <nl> + ItemStack itemstack = ShapedRecipes . deserializeItem ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; <nl> return new ShapelessRecipes ( group , itemstack , ings ) ; <nl> } ) ; <nl> registerR ( " forge : ore _ shaped " , ShapedOreRecipe : : factory ) ; <nl> registerR ( " forge : ore _ shapeless " , ShapelessOreRecipe : : factory ) ; <nl> <nl> - registerI ( " minecraft : item " , ( context , json ) - > Ingredient . func _ 193369 _ a ( CraftingHelper . getItemStackBasic ( json , context ) ) ) ; <nl> - registerI ( " minecraft : empty " , ( context , json ) - > Ingredient . field _ 193370 _ a ) ; <nl> - registerI ( " minecraft : item _ nbt " , ( context , json ) - > Ingredient . func _ 193369 _ a ( CraftingHelper . getItemStack ( json , context ) ) ) ; <nl> + registerI ( " minecraft : item " , ( context , json ) - > Ingredient . fromStacks ( CraftingHelper . getItemStackBasic ( json , context ) ) ) ; <nl> + registerI ( " minecraft : empty " , ( context , json ) - > Ingredient . EMPTY ) ; <nl> + registerI ( " minecraft : item _ nbt " , ( context , json ) - > Ingredient . fromStacks ( CraftingHelper . getItemStack ( json , context ) ) ) ; <nl> registerI ( " forge : ore _ dict " , ( context , json ) - > new OreIngredient ( JsonUtils . getString ( json , " ore " ) ) ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> index fadb8d8 . . 1169f7b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> @ @ - 345 , 7 + 345 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> } <nl> <nl> @ Override <nl> - public boolean blocksMovement ( @ Nonnull IBlockAccess world , @ Nonnull BlockPos pos ) <nl> + public boolean isPassable ( @ Nonnull IBlockAccess world , @ Nonnull BlockPos pos ) <nl> { <nl> return true ; <nl> } <nl> @ @ - 731 , 7 + 731 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> <nl> private boolean isBlockSolid ( IBlockAccess world , BlockPos pos , EnumFacing face ) <nl> { <nl> - return world . getBlockState ( pos ) . func _ 193401 _ d ( world , pos , face ) = = BlockFaceShape . SOLID ; <nl> + return world . getBlockState ( pos ) . getBlockFaceShape ( world , pos , face ) = = BlockFaceShape . SOLID ; <nl> } <nl> <nl> / * IFluidBlock * / <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java <nl> index ef6496f . . f2bb8ba 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java <nl> @ @ - 106 , 7 + 106 , 7 @ @ public class UniversalBucket extends Item <nl> @ Override <nl> public void getSubItems ( @ Nullable CreativeTabs tab , @ Nonnull NonNullList < ItemStack > subItems ) <nl> { <nl> - if ( ! this . func _ 194125 _ a ( tab ) ) <nl> + if ( ! this . isInCreativeTab ( tab ) ) <nl> return ; <nl> for ( Fluid fluid : FluidRegistry . getRegisteredFluids ( ) . values ( ) ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java b / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java <nl> index 79e0593 . . 4184914 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java <nl> @ @ - 123 , 10 + 123 , 10 @ @ public class FMLConfigGuiFactory implements IModGuiFactory <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> textFieldValue . setTextColor ( ( int ) ( Math . random ( ) * 0xFFFFFF ) ) ; <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java b / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java <nl> index f2351bb . . 88c50ca 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java <nl> @ @ - 86 , 7 + 86 , 7 @ @ public class GuiErrorBase extends GuiErrorScreen <nl> { <nl> for ( GuiButton button : buttonList ) <nl> { <nl> - button . func _ 191745 _ a ( this . mc , mouseX , mouseY , partialTicks ) ; <nl> + button . drawButton ( this . mc , mouseX , mouseY , partialTicks ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java b / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java <nl> index a9dc121 . . f9e9c71 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class GuiOldSaveLoadConfirm extends GuiYesNo implements GuiYesNoCallback <nl> <nl> for ( k = 0 ; k < this . buttonList . size ( ) ; + + k ) <nl> { <nl> - this . buttonList . get ( k ) . func _ 191745 _ a ( this . mc , mouseX , mouseY , partialTicks ) ; <nl> + this . buttonList . get ( k ) . drawButton ( this . mc , mouseX , mouseY , partialTicks ) ; <nl> } <nl> <nl> for ( k = 0 ; k < this . labelList . size ( ) ; + + k ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java b / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java <nl> index 14e5e79 . . f9d4f9e 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java <nl> @ @ - 48 , 7 + 48 , 7 @ @ public class GuiButtonExt extends GuiButton <nl> * Draws this button to the screen . <nl> * / <nl> @ Override <nl> - public void func _ 191745 _ a ( Minecraft mc , int mouseX , int mouseY , float partial ) <nl> + public void drawButton ( Minecraft mc , int mouseX , int mouseY , float partial ) <nl> { <nl> if ( this . visible ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java b / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java <nl> index 9c51a37 . . 4819d6b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class GuiCheckBox extends GuiButton <nl> } <nl> <nl> @ Override <nl> - public void func _ 191745 _ a ( Minecraft mc , int mouseX , int mouseY , float partial ) <nl> + public void drawButton ( Minecraft mc , int mouseX , int mouseY , float partial ) <nl> { <nl> if ( this . visible ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java <nl> index db114fb . . 2762947 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java <nl> @ @ - 84 , 7 + 84 , 7 @ @ public class GuiConfigEntries extends GuiListExtended <nl> { <nl> super ( mc , parent . width , parent . height , parent . titleLine2 ! = null ? 33 : 23 , parent . height - 32 , 20 ) ; <nl> this . owningScreen = parent ; <nl> - this . func _ 193651 _ b ( false ) ; <nl> + this . setShowSelectionBox ( false ) ; <nl> this . mc = mc ; <nl> this . listEntries = new ArrayList < IConfigEntry > ( ) ; <nl> <nl> @ @ - 562 , 10 + 562 , 10 @ @ public class GuiConfigEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> this . btnValue . packedFGColour = GuiUtils . getColorCode ( this . configElement . getValidValues ( ) [ currentIndex ] . charAt ( 0 ) , true ) ; <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 910 , 14 + 910 , 14 @ @ public class GuiConfigEntries extends GuiListExtended <nl> public abstract void valueButtonPressed ( int slotIndex ) ; <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> this . btnValue . width = this . owningEntryList . controlWidth ; <nl> this . btnValue . x = this . owningScreen . entryList . controlX ; <nl> this . btnValue . y = y ; <nl> this . btnValue . enabled = enabled ( ) ; <nl> - this . btnValue . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; <nl> + this . btnValue . drawButton ( this . mc , mouseX , mouseY , partial ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 1190 , 9 + 1190 , 9 @ @ public class GuiConfigEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> this . textFieldValue . x = this . owningEntryList . controlX + 2 ; <nl> this . textFieldValue . y = y + 1 ; <nl> this . textFieldValue . width = this . owningEntryList . controlWidth - 4 ; <nl> @ @ - 1326 , 14 + 1326 , 14 @ @ public class GuiConfigEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> this . btnSelectCategory . x = listWidth / 2 - 150 ; <nl> this . btnSelectCategory . y = y ; <nl> this . btnSelectCategory . enabled = enabled ( ) ; <nl> - this . btnSelectCategory . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; <nl> + this . btnSelectCategory . drawButton ( this . mc , mouseX , mouseY , partial ) ; <nl> <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 1526 , 7 + 1526 , 7 @ @ public class GuiConfigEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> boolean isChanged = isChanged ( ) ; <nl> <nl> @ @ - 1545 , 12 + 1545 , 12 @ @ public class GuiConfigEntries extends GuiListExtended <nl> this . btnUndoChanges . x = this . owningEntryList . scrollBarX - 44 ; <nl> this . btnUndoChanges . y = y ; <nl> this . btnUndoChanges . enabled = enabled ( ) & & isChanged ; <nl> - this . btnUndoChanges . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; <nl> + this . btnUndoChanges . drawButton ( this . mc , mouseX , mouseY , partial ) ; <nl> <nl> this . btnDefault . x = this . owningEntryList . scrollBarX - 22 ; <nl> this . btnDefault . y = y ; <nl> this . btnDefault . enabled = enabled ( ) & & ! isDefault ( ) ; <nl> - this . btnDefault . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; <nl> + this . btnDefault . drawButton ( this . mc , mouseX , mouseY , partial ) ; <nl> <nl> if ( this . tooltipHoverChecker = = null ) <nl> this . tooltipHoverChecker = new HoverChecker ( y , y + slotHeight , x , this . owningScreen . entryList . controlX - 8 , 800 ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java <nl> index 5acca74 . . 338765d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> this . configElement = configElement ; <nl> this . beforeValues = beforeValues ; <nl> this . currentValues = currentValues ; <nl> - this . func _ 193651 _ b ( false ) ; <nl> + this . setShowSelectionBox ( false ) ; <nl> this . isChanged = ! Arrays . deepEquals ( beforeValues , currentValues ) ; <nl> this . isDefault = Arrays . deepEquals ( currentValues , configElement . getDefaults ( ) ) ; <nl> this . canAddMoreEntries = ! configElement . isListLengthFixed ( ) & & ( configElement . getMaxListLength ( ) = = - 1 | | currentValues . length < configElement . getMaxListLength ( ) ) ; <nl> @ @ - 450 , 9 + 450 , 9 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> if ( configElement . isListLengthFixed ( ) | | slotIndex ! = owningEntryList . listEntries . size ( ) - 1 ) <nl> { <nl> this . textFieldValue . setVisible ( true ) ; <nl> @ @ - 516 , 9 + 516 , 9 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; <nl> this . btnValue . x = listWidth / 4 ; <nl> this . btnValue . y = y ; <nl> <nl> @ @ - 529 , 7 + 529 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> this . btnValue . displayString = String . valueOf ( value ) ; <nl> btnValue . packedFGColour = value ? GuiUtils . getColorCode ( ' 2 ' , true ) : GuiUtils . getColorCode ( ' 4 ' , true ) ; <nl> <nl> - this . btnValue . func _ 191745 _ a ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; <nl> + this . btnValue . drawButton ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 593 , 7 + 593 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> if ( this . getValue ( ) ! = null & & this . isValidated ) <nl> owningEntryList . getMC ( ) . fontRenderer . drawString ( <nl> @ @ - 608 , 7 + 608 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> this . btnAddNewEntryAbove . visible = true ; <nl> this . btnAddNewEntryAbove . x = half + ( ( half / 2 ) - 44 ) ; <nl> this . btnAddNewEntryAbove . y = y ; <nl> - this . btnAddNewEntryAbove . func _ 191745 _ a ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; <nl> + this . btnAddNewEntryAbove . drawButton ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; <nl> } <nl> else <nl> this . btnAddNewEntryAbove . visible = false ; <nl> @ @ - 618 , 7 + 618 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> this . btnRemoveEntry . visible = true ; <nl> this . btnRemoveEntry . x = half + ( ( half / 2 ) - 22 ) ; <nl> this . btnRemoveEntry . y = y ; <nl> - this . btnRemoveEntry . func _ 191745 _ a ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; <nl> + this . btnRemoveEntry . drawButton ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; <nl> } <nl> else <nl> this . btnRemoveEntry . visible = false ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java <nl> index 477df15 . . bb498cf 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class GuiSelectStringEntries extends GuiListExtended <nl> this . mc = mc ; <nl> this . configElement = configElement ; <nl> this . selectableValues = selectableValues ; <nl> - this . func _ 193651 _ b ( true ) ; <nl> + this . setShowSelectionBox ( true ) ; <nl> <nl> listEntries = new ArrayList < IGuiSelectStringListEntry > ( ) ; <nl> <nl> @ @ - 173 , 7 + 173 , 7 @ @ public class GuiSelectStringEntries extends GuiListExtended <nl> } <nl> <nl> @ Override <nl> - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) <nl> { <nl> owningList . mc . fontRenderer . drawString ( value . getValue ( ) , x + 1 , y , slotIndex = = owningList . selectedIndex ? 16777215 : 14737632 ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java b / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java <nl> index 62bcd13 . . ed1958a 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java <nl> @ @ - 41 , 7 + 41 , 7 @ @ public class GuiUnicodeGlyphButton extends GuiButtonExt <nl> } <nl> <nl> @ Override <nl> - public void func _ 191745 _ a ( Minecraft mc , int mouseX , int mouseY , float partial ) <nl> + public void drawButton ( Minecraft mc , int mouseX , int mouseY , float partial ) <nl> { <nl> if ( this . visible ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java b / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java <nl> index d801a9b . . 7d9fde8 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class ClientRegistry <nl> <nl> public static < T extends TileEntity > void bindTileEntitySpecialRenderer ( Class < T > tileEntityClass , TileEntitySpecialRenderer < ? super T > specialRenderer ) <nl> { <nl> - TileEntityRendererDispatcher . instance . mapSpecialRenderers . put ( tileEntityClass , specialRenderer ) ; <nl> + TileEntityRendererDispatcher . instance . renderers . put ( tileEntityClass , specialRenderer ) ; <nl> specialRenderer . setRendererDispatcher ( TileEntityRendererDispatcher . instance ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> index 759282d . . 2d8468c 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> @ @ - 114 , 7 + 114 , 7 @ @ public class OreDictionary <nl> registerOre ( " ingotBrick " , Items . BRICK ) ; <nl> registerOre ( " ingotBrickNether " , Items . NETHERBRICK ) ; <nl> registerOre ( " nuggetGold " , Items . GOLD _ NUGGET ) ; <nl> - registerOre ( " nuggetIron " , Items . field _ 191525 _ da ) ; <nl> + registerOre ( " nuggetIron " , Items . IRON _ NUGGET ) ; <nl> <nl> / / gems and dusts <nl> registerOre ( " gemDiamond " , Items . DIAMOND ) ; <nl> @ @ - 351 , 7 + 351 , 7 @ @ public class OreDictionary <nl> <nl> int replaced = 0 ; <nl> / / Search vanilla recipes for recipes to replace <nl> - for ( IRecipe obj : CraftingManager . field _ 193380 _ a ) <nl> + for ( IRecipe obj : CraftingManager . REGISTRY ) <nl> { <nl> if ( obj . getClass ( ) = = ShapedRecipes . class | | obj . getClass ( ) = = ShapelessRecipes . class ) <nl> { <nl> @ @ - 361 , 11 + 361 , 11 @ @ public class OreDictionary <nl> continue ; <nl> } <nl> <nl> - NonNullList < Ingredient > lst = obj . func _ 192400 _ c ( ) ; <nl> + NonNullList < Ingredient > lst = obj . getIngredients ( ) ; <nl> for ( int x = 0 ; x < lst . size ( ) ; x + + ) <nl> { <nl> Ingredient ing = lst . get ( x ) ; <nl> - ItemStack [ ] ingredients = ing . func _ 193365 _ a ( ) ; <nl> + ItemStack [ ] ingredients = ing . getMatchingStacks ( ) ; <nl> String oreName = null ; <nl> boolean skip = false ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / OreIngredient . java b / src / main / java / net / minecraftforge / oredict / OreIngredient . java <nl> index 75a0409 . . 370a2a8 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / OreIngredient . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / OreIngredient . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> * / <nl> package net . minecraftforge . oredict ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> import javax . annotation . Nullable ; <nl> <nl> import it . unimi . dsi . fastutil . ints . IntArrayList ; <nl> @ @ - 42 , 13 + 43 , 17 @ @ public class OreIngredient extends Ingredient <nl> } <nl> <nl> @ Override <nl> - public ItemStack [ ] func _ 193365 _ a ( ) <nl> + @ Nonnull <nl> + public ItemStack [ ] getMatchingStacks ( ) <nl> { <nl> return ores . toArray ( new ItemStack [ ores . size ( ) ] ) ; <nl> } <nl> <nl> + <nl> + @ Override <nl> + @ Nonnull <nl> @ SideOnly ( Side . CLIENT ) <nl> - public IntList func _ 194139 _ b ( ) <nl> + public IntList getValidItemStacksPacked ( ) <nl> { <nl> if ( this . itemIds = = null | | this . itemIds . size ( ) ! = ores . size ( ) ) <nl> { <nl> @ @ - 56 , 7 + 61 , 7 @ @ public class OreIngredient extends Ingredient <nl> <nl> for ( ItemStack itemstack : this . ores ) <nl> { <nl> - this . itemIds . add ( RecipeItemHelper . func _ 194113 _ b ( itemstack ) ) ; <nl> + this . itemIds . add ( RecipeItemHelper . pack ( itemstack ) ) ; <nl> } <nl> <nl> this . itemIds . sort ( IntComparators . NATURAL _ COMPARATOR ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / RecipeSorter . java b / src / main / java / net / minecraftforge / oredict / RecipeSorter . java <nl> index 2dadc0f . . 0a608a7 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / RecipeSorter . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / RecipeSorter . java <nl> @ @ - 171 , 8 + 171 , 8 @ @ public class RecipeSorter implements Comparator < IRecipe > <nl> } <nl> else <nl> { <nl> - if ( r2 . func _ 192400 _ c ( ) . size ( ) < r1 . func _ 192400 _ c ( ) . size ( ) ) return - 1 ; <nl> - if ( r2 . func _ 192400 _ c ( ) . size ( ) > r1 . func _ 192400 _ c ( ) . size ( ) ) return 1 ; <nl> + if ( r2 . getIngredients ( ) . size ( ) < r1 . getIngredients ( ) . size ( ) ) return - 1 ; <nl> + if ( r2 . getIngredients ( ) . size ( ) > r1 . getIngredients ( ) . size ( ) ) return 1 ; <nl> return getPriority ( r2 ) - getPriority ( r1 ) ; / / high priority value first ! <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java <nl> old mode 100755 <nl> new mode 100644 <nl> index d128b82 . . aa813b6 <nl> - - - a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java <nl> @ @ - 143 , 8 + 143 , 9 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement <nl> return this ; <nl> } <nl> <nl> + @ Override <nl> @ Nonnull <nl> - public NonNullList < Ingredient > func _ 192400 _ c ( ) <nl> + public NonNullList < Ingredient > getIngredients ( ) <nl> { <nl> return this . input ; <nl> } <nl> @ @ - 168 , 12 + 169 , 13 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement <nl> <nl> @ Override <nl> @ Nonnull <nl> - public String func _ 193358 _ e ( ) <nl> + public String getGroup ( ) <nl> { <nl> return this . group . toString ( ) ; <nl> } <nl> <nl> - public boolean func _ 194133 _ a ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) <nl> + @ Override <nl> + public boolean canFit ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) <nl> { <nl> return p _ 194133 _ 1 _ > = this . width & & p _ 194133 _ 2 _ > = this . height ; <nl> } <nl> @ @ - 195 , 7 + 197 , 7 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement <nl> ingMap . put ( entry . getKey ( ) . toCharArray ( ) [ 0 ] , CraftingHelper . getIngredient ( entry . getValue ( ) , context ) ) ; <nl> } <nl> <nl> - ingMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; <nl> + ingMap . put ( ' ' , Ingredient . EMPTY ) ; <nl> <nl> JsonArray patternJ = JsonUtils . getJsonArray ( json , " pattern " ) ; <nl> <nl> @ @ - 215 , 7 + 217 , 7 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement <nl> primer . width = pattern [ 0 ] . length ( ) ; <nl> primer . height = pattern . length ; <nl> primer . mirrored = JsonUtils . getBoolean ( json , " mirrored " , true ) ; <nl> - primer . input = NonNullList . withSize ( primer . width * primer . height , Ingredient . field _ 193370 _ a ) ; <nl> + primer . input = NonNullList . withSize ( primer . width * primer . height , Ingredient . EMPTY ) ; <nl> <nl> Set < Character > keys = Sets . newHashSet ( ingMap . keySet ( ) ) ; <nl> keys . remove ( ' ' ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java b / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java <nl> old mode 100755 <nl> new mode 100644 <nl> index 8b3d481 . . 0771a46 <nl> - - - a / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java <nl> @ @ - 126 , 7 + 126 , 7 @ @ public class ShapelessOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implem <nl> <nl> @ Override <nl> @ Nonnull <nl> - public NonNullList < Ingredient > func _ 192400 _ c ( ) <nl> + public NonNullList < Ingredient > getIngredients ( ) <nl> { <nl> return this . input ; <nl> } <nl> @ @ - 140 , 12 + 140 , 13 @ @ public class ShapelessOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implem <nl> <nl> @ Override <nl> @ Nonnull <nl> - public String func _ 193358 _ e ( ) <nl> + public String getGroup ( ) <nl> { <nl> return this . group = = null ? " " : this . group . toString ( ) ; <nl> } <nl> <nl> - public boolean func _ 194133 _ a ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) <nl> + @ Override <nl> + public boolean canFit ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) <nl> { <nl> return p _ 194133 _ 1 _ * p _ 194133 _ 2 _ > = this . input . size ( ) ; <nl> } <nl> @ @ - 161 , 7 + 162 , 7 @ @ public class ShapelessOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implem <nl> if ( ings . isEmpty ( ) ) <nl> throw new JsonParseException ( " No ingredients for shapeless recipe " ) ; <nl> <nl> - ItemStack itemstack = ShapedRecipes . func _ 192405 _ a ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; <nl> + ItemStack itemstack = ShapedRecipes . deserializeItem ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; <nl> return new ShapelessOreRecipe ( group . isEmpty ( ) ? null : new ResourceLocation ( group ) , ings , itemstack ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> index 4223ee7 . . df79987 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> @ @ - 238 , 7 + 238 , 7 @ @ public class DynBucketTest <nl> @ Override <nl> public void getSubItems ( CreativeTabs tab , NonNullList < ItemStack > subItems ) <nl> { <nl> - if ( ! this . func _ 194125 _ a ( tab ) ) <nl> + if ( ! this . isInCreativeTab ( tab ) ) <nl> return ; <nl> for ( int i = 0 ; i < 4 ; i + + ) <nl> { <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> index d9ae12a . . 2374bf9 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> @ @ - 94 , 15 + 94 , 10 @ @ public class FluidPlacementTest <nl> ModelLoader . setBucketModelDefinition ( FluidContainer . instance ) ; <nl> / / no need to pass the locations here , since they ' ll be loaded by the block model logic . <nl> ModelBakery . registerItemVariants ( fluid ) ; <nl> - ModelLoader . setCustomMeshDefinition ( fluid , new ItemMeshDefinition ( ) <nl> - { <nl> - public ModelResourceLocation getModelLocation ( @ Nonnull ItemStack stack ) <nl> - { <nl> - return fluidLocation ; <nl> - } <nl> - } ) ; <nl> + ModelLoader . setCustomMeshDefinition ( fluid , stack - > fluidLocation ) ; <nl> ModelLoader . setCustomStateMapper ( FiniteFluidBlock . instance , new StateMapperBase ( ) <nl> { <nl> + @ Override <nl> protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) <nl> { <nl> return fluidLocation ; <nl> @ @ - 249 , 7 + 244 , 7 @ @ public class FluidPlacementTest <nl> @ Override <nl> public void getSubItems ( @ Nullable CreativeTabs tab , @ Nonnull NonNullList < ItemStack > subItems ) <nl> { <nl> - if ( ! this . func _ 194125 _ a ( tab ) ) <nl> + if ( ! this . isInCreativeTab ( tab ) ) <nl> return ; <nl> Fluid [ ] fluids = new Fluid [ ] { FluidRegistry . WATER , FluidRegistry . LAVA , FiniteFluid . instance , ModelFluidDebug . TestFluid . instance } ; <nl> / / add 16 variable fillings <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> index d4c2e66 . . a37eb72 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class ItemTileDebug <nl> } <nl> <nl> @ Override <nl> - public void func _ 192841 _ a ( CustomTileEntity p _ 180535 _ 1 _ , double x , double y , double z , float p _ 180535 _ 8 _ , int p _ 180535 _ 9 _ , float partial ) <nl> + public void render ( CustomTileEntity p _ 180535 _ 1 _ , double x , double y , double z , float p _ 180535 _ 8 _ , int p _ 180535 _ 9 _ , float partial ) <nl> { <nl> glPushMatrix ( ) ; <nl> glTranslated ( x , y , z ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java <nl> index 9a75ef1 . . 11c665c 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class NBTShareTagItemTest <nl> @ Override <nl> public void getSubItems ( CreativeTabs tab , NonNullList < ItemStack > subItems ) <nl> { <nl> - if ( ! this . func _ 194125 _ a ( tab ) ) <nl> + if ( ! this . isInCreativeTab ( tab ) ) <nl> return ; <nl> ItemStack creativeMenuItem = new ItemStack ( this ) ; <nl> NBTTagCompound creativeMenuNBT = new NBTTagCompound ( ) ;
NEAREST DIFF (one line): diff - - git a / fml - src - 1 . 4 . 6 - 4 . 6 . 0 . 502 - master . zip b / fml - src - 1 . 4 . 6 - 4 . 6 . 0 . 502 - master . zip <nl> deleted file mode 100644 <nl> index aeb7c55 . . 0000000 <nl> Binary files a / fml - src - 1 . 4 . 6 - 4 . 6 . 0 . 502 - master . zip and / dev / null differ <nl> diff - - git a / fml - src - 1 . 4 . 6 - 4 . 6 . 4 . 505 - master . zip b / fml - src - 1 . 4 . 6 - 4 . 6 . 4 . 505 - master . zip <nl> new file mode 100644 <nl> index 0000000 . . 49a3243 <nl> Binary files / dev / null and b / fml - src - 1 . 4 . 6 - 4 . 6 . 4 . 505 - master . zip differ

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index ee6e6a2 . . 5b22a17 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 29 , 7 + 29 , 7 @ @ apply plugin : " net . minecraftforge . gradle . launch4j " 
 minecraft . version = " 1 . 12 " 
 
 minecraft { 
 - mappings = ' snapshot _ nodoc _ 20170611 ' 
 + mappings = ' snapshot _ nodoc _ 20170617 ' 
 workspaceDir = " projects " 
 versionJson = " jsons / $ { minecraft . version } - dev . json " 
 buildUserdev = true 
 diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index 55c71d9 . . 180abb1 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 293 , 7 + 293 , 7 @ @ 
 + * @ param side The side to check 
 + * @ return True if the block is solid on the specified side . 
 + * / 
 - + @ Deprecated / / Use IBlockState . func _ 193401 _ d 
 + + @ Deprecated / / Use IBlockState . getBlockFaceShape 
 + public boolean isSideSolid ( IBlockState base _ state , IBlockAccess world , BlockPos pos , EnumFacing side ) 
 + { 
 + if ( base _ state . func _ 185896 _ q ( ) & & side = = EnumFacing . UP ) / / Short circuit to vanilla function if its true 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 9295716 . . 553bb8a 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 597 , 10 + 597 , 10 @ @ public class ForgeHooksClient 
 Class < ? extends TileEntity > tileClass = tileItemMap . get ( Pair . of ( item , metadata ) ) ; 
 if ( tileClass ! = null ) 
 { 
 - TileEntitySpecialRenderer < ? > r = TileEntityRendererDispatcher . instance . getSpecialRendererByClass ( tileClass ) ; 
 + TileEntitySpecialRenderer < ? > r = TileEntityRendererDispatcher . instance . getRenderer ( tileClass ) ; 
 if ( r ! = null ) 
 { 
 - r . func _ 192841 _ a ( null , 0 , 0 , 0 , 0 , - 1 , 0 . 0F ) ; 
 + r . render ( null , 0 , 0 , 0 , 0 , - 1 , 0 . 0F ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java b / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java 
 index 41af878 . . e318d10 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java 
 + + + b / src / main / java / net / minecraftforge / client / model / animation / FastTESR . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import javax . annotation . Nonnull ; 
 public abstract class FastTESR < T extends TileEntity > extends TileEntitySpecialRenderer < T > 
 { 
 @ Override 
 - public final void func _ 192841 _ a ( @ Nonnull T te , double x , double y , double z , float partialTicks , int destroyStage , float partial ) 
 + public final void render ( @ Nonnull T te , double x , double y , double z , float partialTicks , int destroyStage , float partial ) 
 { 
 Tessellator tessellator = Tessellator . getInstance ( ) ; 
 BufferBuilder buffer = tessellator . getBuffer ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java b / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java 
 index 29f0330 . . 405d426 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CompoundIngredient . java 
 @ @ - 1 , 8 + 1 , 10 @ @ 
 package net . minecraftforge . common . crafting ; 
 
 import java . util . Collection ; 
 + import java . util . Collections ; 
 import java . util . List ; 
 
 + import javax . annotation . Nonnull ; 
 import javax . annotation . Nullable ; 
 
 import com . google . common . collect . Lists ; 
 @ @ - 28 , 29 + 30 , 31 @ @ public class CompoundIngredient extends Ingredient 
 } 
 
 @ Override 
 - public ItemStack [ ] func _ 193365 _ a ( ) 
 + @ Nonnull 
 + public ItemStack [ ] getMatchingStacks ( ) 
 { 
 if ( stacks = = null ) 
 { 
 List < ItemStack > tmp = Lists . newArrayList ( ) ; 
 for ( Ingredient child : children ) 
 - for ( ItemStack stack : child . func _ 193365 _ a ( ) ) 
 - tmp . add ( stack ) ; 
 + Collections . addAll ( tmp , child . getMatchingStacks ( ) ) ; 
 stacks = tmp . toArray ( new ItemStack [ tmp . size ( ) ] ) ; 
 
 } 
 return stacks ; 
 } 
 
 + @ Override 
 + @ Nonnull 
 @ SideOnly ( Side . CLIENT ) 
 - public IntList func _ 194139 _ b ( ) 
 + public IntList getValidItemStacksPacked ( ) 
 { 
 / / TODO : Add a child . isInvalid ( ) ? 
 if ( this . itemIds = = null ) 
 { 
 this . itemIds = new IntArrayList ( ) ; 
 for ( Ingredient child : children ) 
 - this . itemIds . addAll ( child . func _ 194139 _ b ( ) ) ; 
 + this . itemIds . addAll ( child . getValidItemStacksPacked ( ) ) ; 
 this . itemIds . sort ( IntComparators . NATURAL _ COMPARATOR ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index 4c0c085 . . df928ff 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 114 , 11 + 114 , 11 @ @ public class CraftingHelper { 
 if ( obj instanceof Ingredient ) 
 return ( Ingredient ) obj ; 
 else if ( obj instanceof ItemStack ) 
 - return Ingredient . func _ 193369 _ a ( ( ( ItemStack ) obj ) . copy ( ) ) ; 
 + return Ingredient . fromStacks ( ( ( ItemStack ) obj ) . copy ( ) ) ; 
 else if ( obj instanceof Item ) 
 - return Ingredient . func _ 193367 _ a ( ( Item ) obj ) ; 
 + return Ingredient . fromItem ( ( Item ) obj ) ; 
 else if ( obj instanceof Block ) 
 - return Ingredient . func _ 193369 _ a ( new ItemStack ( ( Block ) obj , 1 , OreDictionary . WILDCARD _ VALUE ) ) ; 
 + return Ingredient . fromStacks ( new ItemStack ( ( Block ) obj , 1 , OreDictionary . WILDCARD _ VALUE ) ) ; 
 else if ( obj instanceof String ) 
 return new OreIngredient ( ( String ) obj ) ; 
 else if ( obj instanceof JsonElement ) 
 @ @ - 144 , 7 + 144 , 7 @ @ public class CraftingHelper { 
 
 if ( ing . getClass ( ) = = Ingredient . class ) { 
 / / Vanilla , Due to how we read it splits each itemstack , so we pull out to re - merge later 
 - for ( ItemStack stack : ing . func _ 193365 _ a ( ) ) 
 + for ( ItemStack stack : ing . getMatchingStacks ( ) ) 
 vanilla . add ( stack ) ; 
 } 
 else 
 @ @ - 156 , 7 + 156 , 7 @ @ public class CraftingHelper { 
 if ( ! vanilla . isEmpty ( ) ) 
 { 
 ItemStack [ ] items = vanilla . toArray ( new ItemStack [ vanilla . size ( ) ] ) ; 
 - ingredients . add ( Ingredient . func _ 193369 _ a ( items ) ) ; 
 + ingredients . add ( Ingredient . fromStacks ( items ) ) ; 
 } 
 
 if ( ingredients . size ( ) = = 0 ) 
 @ @ - 308 , 7 + 308 , 7 @ @ public class CraftingHelper { 
 } 
 
 HashMap < Character , Ingredient > itemMap = Maps . newHashMap ( ) ; 
 - itemMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; 
 + itemMap . put ( ' ' , Ingredient . EMPTY ) ; 
 
 for ( ; idx < recipe . length ; idx + = 2 ) 
 { 
 @ @ - 334 , 7 + 334 , 7 @ @ public class CraftingHelper { 
 } 
 } 
 
 - ret . input = NonNullList . withSize ( ret . width * ret . height , Ingredient . field _ 193370 _ a ) ; 
 + ret . input = NonNullList . withSize ( ret . width * ret . height , Ingredient . EMPTY ) ; 
 
 Set < Character > keys = Sets . newHashSet ( itemMap . keySet ( ) ) ; 
 keys . remove ( ' ' ) ; 
 @ @ - 448 , 7 + 448 , 7 @ @ public class CraftingHelper { 
 
 ingMap . put ( entry . getKey ( ) . toCharArray ( ) [ 0 ] , CraftingHelper . getIngredient ( entry . getValue ( ) , context ) ) ; 
 } 
 - ingMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; 
 + ingMap . put ( ' ' , Ingredient . EMPTY ) ; 
 
 JsonArray patternJ = JsonUtils . getJsonArray ( json , " pattern " ) ; 
 
 @ @ - 468 , 7 + 468 , 7 @ @ public class CraftingHelper { 
 pattern [ x ] = line ; 
 } 
 
 - NonNullList < Ingredient > input = NonNullList . withSize ( pattern [ 0 ] . length ( ) * pattern . length , Ingredient . field _ 193370 _ a ) ; 
 + NonNullList < Ingredient > input = NonNullList . withSize ( pattern [ 0 ] . length ( ) * pattern . length , Ingredient . EMPTY ) ; 
 Set < Character > keys = Sets . newHashSet ( ingMap . keySet ( ) ) ; 
 keys . remove ( ' ' ) ; 
 
 @ @ - 503 , 15 + 503 , 15 @ @ public class CraftingHelper { 
 if ( ings . size ( ) > 9 ) 
 throw new JsonParseException ( " Too many ingredients for shapeless recipe " ) ; 
 
 - ItemStack itemstack = ShapedRecipes . func _ 192405 _ a ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; 
 + ItemStack itemstack = ShapedRecipes . deserializeItem ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; 
 return new ShapelessRecipes ( group , itemstack , ings ) ; 
 } ) ; 
 registerR ( " forge : ore _ shaped " , ShapedOreRecipe : : factory ) ; 
 registerR ( " forge : ore _ shapeless " , ShapelessOreRecipe : : factory ) ; 
 
 - registerI ( " minecraft : item " , ( context , json ) - > Ingredient . func _ 193369 _ a ( CraftingHelper . getItemStackBasic ( json , context ) ) ) ; 
 - registerI ( " minecraft : empty " , ( context , json ) - > Ingredient . field _ 193370 _ a ) ; 
 - registerI ( " minecraft : item _ nbt " , ( context , json ) - > Ingredient . func _ 193369 _ a ( CraftingHelper . getItemStack ( json , context ) ) ) ; 
 + registerI ( " minecraft : item " , ( context , json ) - > Ingredient . fromStacks ( CraftingHelper . getItemStackBasic ( json , context ) ) ) ; 
 + registerI ( " minecraft : empty " , ( context , json ) - > Ingredient . EMPTY ) ; 
 + registerI ( " minecraft : item _ nbt " , ( context , json ) - > Ingredient . fromStacks ( CraftingHelper . getItemStack ( json , context ) ) ) ; 
 registerI ( " forge : ore _ dict " , ( context , json ) - > new OreIngredient ( JsonUtils . getString ( json , " ore " ) ) ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 index fadb8d8 . . 1169f7b 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 @ @ - 345 , 7 + 345 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 } 
 
 @ Override 
 - public boolean blocksMovement ( @ Nonnull IBlockAccess world , @ Nonnull BlockPos pos ) 
 + public boolean isPassable ( @ Nonnull IBlockAccess world , @ Nonnull BlockPos pos ) 
 { 
 return true ; 
 } 
 @ @ - 731 , 7 + 731 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 
 private boolean isBlockSolid ( IBlockAccess world , BlockPos pos , EnumFacing face ) 
 { 
 - return world . getBlockState ( pos ) . func _ 193401 _ d ( world , pos , face ) = = BlockFaceShape . SOLID ; 
 + return world . getBlockState ( pos ) . getBlockFaceShape ( world , pos , face ) = = BlockFaceShape . SOLID ; 
 } 
 
 / * IFluidBlock * / 
 diff - - git a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java 
 index ef6496f . . f2bb8ba 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / UniversalBucket . java 
 + + + b / src / main / java / net / minecraftforge / fluids / UniversalBucket . java 
 @ @ - 106 , 7 + 106 , 7 @ @ public class UniversalBucket extends Item 
 @ Override 
 public void getSubItems ( @ Nullable CreativeTabs tab , @ Nonnull NonNullList < ItemStack > subItems ) 
 { 
 - if ( ! this . func _ 194125 _ a ( tab ) ) 
 + if ( ! this . isInCreativeTab ( tab ) ) 
 return ; 
 for ( Fluid fluid : FluidRegistry . getRegisteredFluids ( ) . values ( ) ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java b / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java 
 index 79e0593 . . 4184914 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLConfigGuiFactory . java 
 @ @ - 123 , 10 + 123 , 10 @ @ public class FMLConfigGuiFactory implements IModGuiFactory 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 textFieldValue . setTextColor ( ( int ) ( Math . random ( ) * 0xFFFFFF ) ) ; 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java b / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java 
 index f2351bb . . 88c50ca 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / GuiErrorBase . java 
 @ @ - 86 , 7 + 86 , 7 @ @ public class GuiErrorBase extends GuiErrorScreen 
 { 
 for ( GuiButton button : buttonList ) 
 { 
 - button . func _ 191745 _ a ( this . mc , mouseX , mouseY , partialTicks ) ; 
 + button . drawButton ( this . mc , mouseX , mouseY , partialTicks ) ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java b / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java 
 index a9dc121 . . f9e9c71 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / GuiOldSaveLoadConfirm . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class GuiOldSaveLoadConfirm extends GuiYesNo implements GuiYesNoCallback 
 
 for ( k = 0 ; k < this . buttonList . size ( ) ; + + k ) 
 { 
 - this . buttonList . get ( k ) . func _ 191745 _ a ( this . mc , mouseX , mouseY , partialTicks ) ; 
 + this . buttonList . get ( k ) . drawButton ( this . mc , mouseX , mouseY , partialTicks ) ; 
 } 
 
 for ( k = 0 ; k < this . labelList . size ( ) ; + + k ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java b / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java 
 index 14e5e79 . . f9d4f9e 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiButtonExt . java 
 @ @ - 48 , 7 + 48 , 7 @ @ public class GuiButtonExt extends GuiButton 
 * Draws this button to the screen . 
 * / 
 @ Override 
 - public void func _ 191745 _ a ( Minecraft mc , int mouseX , int mouseY , float partial ) 
 + public void drawButton ( Minecraft mc , int mouseX , int mouseY , float partial ) 
 { 
 if ( this . visible ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java b / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java 
 index 9c51a37 . . 4819d6b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiCheckBox . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class GuiCheckBox extends GuiButton 
 } 
 
 @ Override 
 - public void func _ 191745 _ a ( Minecraft mc , int mouseX , int mouseY , float partial ) 
 + public void drawButton ( Minecraft mc , int mouseX , int mouseY , float partial ) 
 { 
 if ( this . visible ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java 
 index db114fb . . 2762947 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java 
 @ @ - 84 , 7 + 84 , 7 @ @ public class GuiConfigEntries extends GuiListExtended 
 { 
 super ( mc , parent . width , parent . height , parent . titleLine2 ! = null ? 33 : 23 , parent . height - 32 , 20 ) ; 
 this . owningScreen = parent ; 
 - this . func _ 193651 _ b ( false ) ; 
 + this . setShowSelectionBox ( false ) ; 
 this . mc = mc ; 
 this . listEntries = new ArrayList < IConfigEntry > ( ) ; 
 
 @ @ - 562 , 10 + 562 , 10 @ @ public class GuiConfigEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 this . btnValue . packedFGColour = GuiUtils . getColorCode ( this . configElement . getValidValues ( ) [ currentIndex ] . charAt ( 0 ) , true ) ; 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 } 
 
 @ Override 
 @ @ - 910 , 14 + 910 , 14 @ @ public class GuiConfigEntries extends GuiListExtended 
 public abstract void valueButtonPressed ( int slotIndex ) ; 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 this . btnValue . width = this . owningEntryList . controlWidth ; 
 this . btnValue . x = this . owningScreen . entryList . controlX ; 
 this . btnValue . y = y ; 
 this . btnValue . enabled = enabled ( ) ; 
 - this . btnValue . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; 
 + this . btnValue . drawButton ( this . mc , mouseX , mouseY , partial ) ; 
 } 
 
 / * * 
 @ @ - 1190 , 9 + 1190 , 9 @ @ public class GuiConfigEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 this . textFieldValue . x = this . owningEntryList . controlX + 2 ; 
 this . textFieldValue . y = y + 1 ; 
 this . textFieldValue . width = this . owningEntryList . controlWidth - 4 ; 
 @ @ - 1326 , 14 + 1326 , 14 @ @ public class GuiConfigEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 this . btnSelectCategory . x = listWidth / 2 - 150 ; 
 this . btnSelectCategory . y = y ; 
 this . btnSelectCategory . enabled = enabled ( ) ; 
 - this . btnSelectCategory . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; 
 + this . btnSelectCategory . drawButton ( this . mc , mouseX , mouseY , partial ) ; 
 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 } 
 
 @ Override 
 @ @ - 1526 , 7 + 1526 , 7 @ @ public class GuiConfigEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 boolean isChanged = isChanged ( ) ; 
 
 @ @ - 1545 , 12 + 1545 , 12 @ @ public class GuiConfigEntries extends GuiListExtended 
 this . btnUndoChanges . x = this . owningEntryList . scrollBarX - 44 ; 
 this . btnUndoChanges . y = y ; 
 this . btnUndoChanges . enabled = enabled ( ) & & isChanged ; 
 - this . btnUndoChanges . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; 
 + this . btnUndoChanges . drawButton ( this . mc , mouseX , mouseY , partial ) ; 
 
 this . btnDefault . x = this . owningEntryList . scrollBarX - 22 ; 
 this . btnDefault . y = y ; 
 this . btnDefault . enabled = enabled ( ) & & ! isDefault ( ) ; 
 - this . btnDefault . func _ 191745 _ a ( this . mc , mouseX , mouseY , partial ) ; 
 + this . btnDefault . drawButton ( this . mc , mouseX , mouseY , partial ) ; 
 
 if ( this . tooltipHoverChecker = = null ) 
 this . tooltipHoverChecker = new HoverChecker ( y , y + slotHeight , x , this . owningScreen . entryList . controlX - 8 , 800 ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java 
 index 5acca74 . . 338765d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java 
 @ @ - 60 , 7 + 60 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 this . configElement = configElement ; 
 this . beforeValues = beforeValues ; 
 this . currentValues = currentValues ; 
 - this . func _ 193651 _ b ( false ) ; 
 + this . setShowSelectionBox ( false ) ; 
 this . isChanged = ! Arrays . deepEquals ( beforeValues , currentValues ) ; 
 this . isDefault = Arrays . deepEquals ( currentValues , configElement . getDefaults ( ) ) ; 
 this . canAddMoreEntries = ! configElement . isListLengthFixed ( ) & & ( configElement . getMaxListLength ( ) = = - 1 | | currentValues . length < configElement . getMaxListLength ( ) ) ; 
 @ @ - 450 , 9 + 450 , 9 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 if ( configElement . isListLengthFixed ( ) | | slotIndex ! = owningEntryList . listEntries . size ( ) - 1 ) 
 { 
 this . textFieldValue . setVisible ( true ) ; 
 @ @ - 516 , 9 + 516 , 9 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 - super . func _ 192634 _ a ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 + super . drawEntry ( slotIndex , x , y , listWidth , slotHeight , mouseX , mouseY , isSelected , partial ) ; 
 this . btnValue . x = listWidth / 4 ; 
 this . btnValue . y = y ; 
 
 @ @ - 529 , 7 + 529 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 this . btnValue . displayString = String . valueOf ( value ) ; 
 btnValue . packedFGColour = value ? GuiUtils . getColorCode ( ' 2 ' , true ) : GuiUtils . getColorCode ( ' 4 ' , true ) ; 
 
 - this . btnValue . func _ 191745 _ a ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; 
 + this . btnValue . drawButton ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; 
 } 
 
 @ Override 
 @ @ - 593 , 7 + 593 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 if ( this . getValue ( ) ! = null & & this . isValidated ) 
 owningEntryList . getMC ( ) . fontRenderer . drawString ( 
 @ @ - 608 , 7 + 608 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 this . btnAddNewEntryAbove . visible = true ; 
 this . btnAddNewEntryAbove . x = half + ( ( half / 2 ) - 44 ) ; 
 this . btnAddNewEntryAbove . y = y ; 
 - this . btnAddNewEntryAbove . func _ 191745 _ a ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; 
 + this . btnAddNewEntryAbove . drawButton ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; 
 } 
 else 
 this . btnAddNewEntryAbove . visible = false ; 
 @ @ - 618 , 7 + 618 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 this . btnRemoveEntry . visible = true ; 
 this . btnRemoveEntry . x = half + ( ( half / 2 ) - 22 ) ; 
 this . btnRemoveEntry . y = y ; 
 - this . btnRemoveEntry . func _ 191745 _ a ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; 
 + this . btnRemoveEntry . drawButton ( owningEntryList . getMC ( ) , mouseX , mouseY , partial ) ; 
 } 
 else 
 this . btnRemoveEntry . visible = false ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java 
 index 477df15 . . bb498cf 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectStringEntries . java 
 @ @ - 54 , 7 + 54 , 7 @ @ public class GuiSelectStringEntries extends GuiListExtended 
 this . mc = mc ; 
 this . configElement = configElement ; 
 this . selectableValues = selectableValues ; 
 - this . func _ 193651 _ b ( true ) ; 
 + this . setShowSelectionBox ( true ) ; 
 
 listEntries = new ArrayList < IGuiSelectStringListEntry > ( ) ; 
 
 @ @ - 173 , 7 + 173 , 7 @ @ public class GuiSelectStringEntries extends GuiListExtended 
 } 
 
 @ Override 
 - public void func _ 192634 _ a ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 + public void drawEntry ( int slotIndex , int x , int y , int listWidth , int slotHeight , int mouseX , int mouseY , boolean isSelected , float partial ) 
 { 
 owningList . mc . fontRenderer . drawString ( value . getValue ( ) , x + 1 , y , slotIndex = = owningList . selectedIndex ? 16777215 : 14737632 ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java b / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java 
 index 62bcd13 . . ed1958a 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiUnicodeGlyphButton . java 
 @ @ - 41 , 7 + 41 , 7 @ @ public class GuiUnicodeGlyphButton extends GuiButtonExt 
 } 
 
 @ Override 
 - public void func _ 191745 _ a ( Minecraft mc , int mouseX , int mouseY , float partial ) 
 + public void drawButton ( Minecraft mc , int mouseX , int mouseY , float partial ) 
 { 
 if ( this . visible ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java b / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java 
 index d801a9b . . 7d9fde8 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / registry / ClientRegistry . java 
 @ @ - 53 , 7 + 53 , 7 @ @ public class ClientRegistry 
 
 public static < T extends TileEntity > void bindTileEntitySpecialRenderer ( Class < T > tileEntityClass , TileEntitySpecialRenderer < ? super T > specialRenderer ) 
 { 
 - TileEntityRendererDispatcher . instance . mapSpecialRenderers . put ( tileEntityClass , specialRenderer ) ; 
 + TileEntityRendererDispatcher . instance . renderers . put ( tileEntityClass , specialRenderer ) ; 
 specialRenderer . setRendererDispatcher ( TileEntityRendererDispatcher . instance ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 index 759282d . . 2d8468c 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class OreDictionary 
 registerOre ( " ingotBrick " , Items . BRICK ) ; 
 registerOre ( " ingotBrickNether " , Items . NETHERBRICK ) ; 
 registerOre ( " nuggetGold " , Items . GOLD _ NUGGET ) ; 
 - registerOre ( " nuggetIron " , Items . field _ 191525 _ da ) ; 
 + registerOre ( " nuggetIron " , Items . IRON _ NUGGET ) ; 
 
 / / gems and dusts 
 registerOre ( " gemDiamond " , Items . DIAMOND ) ; 
 @ @ - 351 , 7 + 351 , 7 @ @ public class OreDictionary 
 
 int replaced = 0 ; 
 / / Search vanilla recipes for recipes to replace 
 - for ( IRecipe obj : CraftingManager . field _ 193380 _ a ) 
 + for ( IRecipe obj : CraftingManager . REGISTRY ) 
 { 
 if ( obj . getClass ( ) = = ShapedRecipes . class | | obj . getClass ( ) = = ShapelessRecipes . class ) 
 { 
 @ @ - 361 , 11 + 361 , 11 @ @ public class OreDictionary 
 continue ; 
 } 
 
 - NonNullList < Ingredient > lst = obj . func _ 192400 _ c ( ) ; 
 + NonNullList < Ingredient > lst = obj . getIngredients ( ) ; 
 for ( int x = 0 ; x < lst . size ( ) ; x + + ) 
 { 
 Ingredient ing = lst . get ( x ) ; 
 - ItemStack [ ] ingredients = ing . func _ 193365 _ a ( ) ; 
 + ItemStack [ ] ingredients = ing . getMatchingStacks ( ) ; 
 String oreName = null ; 
 boolean skip = false ; 
 
 diff - - git a / src / main / java / net / minecraftforge / oredict / OreIngredient . java b / src / main / java / net / minecraftforge / oredict / OreIngredient . java 
 index 75a0409 . . 370a2a8 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / OreIngredient . java 
 + + + b / src / main / java / net / minecraftforge / oredict / OreIngredient . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 * / 
 package net . minecraftforge . oredict ; 
 
 + import javax . annotation . Nonnull ; 
 import javax . annotation . Nullable ; 
 
 import it . unimi . dsi . fastutil . ints . IntArrayList ; 
 @ @ - 42 , 13 + 43 , 17 @ @ public class OreIngredient extends Ingredient 
 } 
 
 @ Override 
 - public ItemStack [ ] func _ 193365 _ a ( ) 
 + @ Nonnull 
 + public ItemStack [ ] getMatchingStacks ( ) 
 { 
 return ores . toArray ( new ItemStack [ ores . size ( ) ] ) ; 
 } 
 
 + 
 + @ Override 
 + @ Nonnull 
 @ SideOnly ( Side . CLIENT ) 
 - public IntList func _ 194139 _ b ( ) 
 + public IntList getValidItemStacksPacked ( ) 
 { 
 if ( this . itemIds = = null | | this . itemIds . size ( ) ! = ores . size ( ) ) 
 { 
 @ @ - 56 , 7 + 61 , 7 @ @ public class OreIngredient extends Ingredient 
 
 for ( ItemStack itemstack : this . ores ) 
 { 
 - this . itemIds . add ( RecipeItemHelper . func _ 194113 _ b ( itemstack ) ) ; 
 + this . itemIds . add ( RecipeItemHelper . pack ( itemstack ) ) ; 
 } 
 
 this . itemIds . sort ( IntComparators . NATURAL _ COMPARATOR ) ; 
 diff - - git a / src / main / java / net / minecraftforge / oredict / RecipeSorter . java b / src / main / java / net / minecraftforge / oredict / RecipeSorter . java 
 index 2dadc0f . . 0a608a7 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / RecipeSorter . java 
 + + + b / src / main / java / net / minecraftforge / oredict / RecipeSorter . java 
 @ @ - 171 , 8 + 171 , 8 @ @ public class RecipeSorter implements Comparator < IRecipe > 
 } 
 else 
 { 
 - if ( r2 . func _ 192400 _ c ( ) . size ( ) < r1 . func _ 192400 _ c ( ) . size ( ) ) return - 1 ; 
 - if ( r2 . func _ 192400 _ c ( ) . size ( ) > r1 . func _ 192400 _ c ( ) . size ( ) ) return 1 ; 
 + if ( r2 . getIngredients ( ) . size ( ) < r1 . getIngredients ( ) . size ( ) ) return - 1 ; 
 + if ( r2 . getIngredients ( ) . size ( ) > r1 . getIngredients ( ) . size ( ) ) return 1 ; 
 return getPriority ( r2 ) - getPriority ( r1 ) ; / / high priority value first ! 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java 
 old mode 100755 
 new mode 100644 
 index d128b82 . . aa813b6 
 - - - a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java 
 + + + b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java 
 @ @ - 143 , 8 + 143 , 9 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement 
 return this ; 
 } 
 
 + @ Override 
 @ Nonnull 
 - public NonNullList < Ingredient > func _ 192400 _ c ( ) 
 + public NonNullList < Ingredient > getIngredients ( ) 
 { 
 return this . input ; 
 } 
 @ @ - 168 , 12 + 169 , 13 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement 
 
 @ Override 
 @ Nonnull 
 - public String func _ 193358 _ e ( ) 
 + public String getGroup ( ) 
 { 
 return this . group . toString ( ) ; 
 } 
 
 - public boolean func _ 194133 _ a ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) 
 + @ Override 
 + public boolean canFit ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) 
 { 
 return p _ 194133 _ 1 _ > = this . width & & p _ 194133 _ 2 _ > = this . height ; 
 } 
 @ @ - 195 , 7 + 197 , 7 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement 
 ingMap . put ( entry . getKey ( ) . toCharArray ( ) [ 0 ] , CraftingHelper . getIngredient ( entry . getValue ( ) , context ) ) ; 
 } 
 
 - ingMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; 
 + ingMap . put ( ' ' , Ingredient . EMPTY ) ; 
 
 JsonArray patternJ = JsonUtils . getJsonArray ( json , " pattern " ) ; 
 
 @ @ - 215 , 7 + 217 , 7 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement 
 primer . width = pattern [ 0 ] . length ( ) ; 
 primer . height = pattern . length ; 
 primer . mirrored = JsonUtils . getBoolean ( json , " mirrored " , true ) ; 
 - primer . input = NonNullList . withSize ( primer . width * primer . height , Ingredient . field _ 193370 _ a ) ; 
 + primer . input = NonNullList . withSize ( primer . width * primer . height , Ingredient . EMPTY ) ; 
 
 Set < Character > keys = Sets . newHashSet ( ingMap . keySet ( ) ) ; 
 keys . remove ( ' ' ) ; 
 diff - - git a / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java b / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java 
 old mode 100755 
 new mode 100644 
 index 8b3d481 . . 0771a46 
 - - - a / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java 
 + + + b / src / main / java / net / minecraftforge / oredict / ShapelessOreRecipe . java 
 @ @ - 126 , 7 + 126 , 7 @ @ public class ShapelessOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implem 
 
 @ Override 
 @ Nonnull 
 - public NonNullList < Ingredient > func _ 192400 _ c ( ) 
 + public NonNullList < Ingredient > getIngredients ( ) 
 { 
 return this . input ; 
 } 
 @ @ - 140 , 12 + 140 , 13 @ @ public class ShapelessOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implem 
 
 @ Override 
 @ Nonnull 
 - public String func _ 193358 _ e ( ) 
 + public String getGroup ( ) 
 { 
 return this . group = = null ? " " : this . group . toString ( ) ; 
 } 
 
 - public boolean func _ 194133 _ a ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) 
 + @ Override 
 + public boolean canFit ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) 
 { 
 return p _ 194133 _ 1 _ * p _ 194133 _ 2 _ > = this . input . size ( ) ; 
 } 
 @ @ - 161 , 7 + 162 , 7 @ @ public class ShapelessOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implem 
 if ( ings . isEmpty ( ) ) 
 throw new JsonParseException ( " No ingredients for shapeless recipe " ) ; 
 
 - ItemStack itemstack = ShapedRecipes . func _ 192405 _ a ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; 
 + ItemStack itemstack = ShapedRecipes . deserializeItem ( JsonUtils . getJsonObject ( json , " result " ) , true ) ; 
 return new ShapelessOreRecipe ( group . isEmpty ( ) ? null : new ResourceLocation ( group ) , ings , itemstack ) ; 
 } 
 } 
 diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 index 4223ee7 . . df79987 100644 
 - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 @ @ - 238 , 7 + 238 , 7 @ @ public class DynBucketTest 
 @ Override 
 public void getSubItems ( CreativeTabs tab , NonNullList < ItemStack > subItems ) 
 { 
 - if ( ! this . func _ 194125 _ a ( tab ) ) 
 + if ( ! this . isInCreativeTab ( tab ) ) 
 return ; 
 for ( int i = 0 ; i < 4 ; i + + ) 
 { 
 diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 index d9ae12a . . 2374bf9 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 @ @ - 94 , 15 + 94 , 10 @ @ public class FluidPlacementTest 
 ModelLoader . setBucketModelDefinition ( FluidContainer . instance ) ; 
 / / no need to pass the locations here , since they ' ll be loaded by the block model logic . 
 ModelBakery . registerItemVariants ( fluid ) ; 
 - ModelLoader . setCustomMeshDefinition ( fluid , new ItemMeshDefinition ( ) 
 - { 
 - public ModelResourceLocation getModelLocation ( @ Nonnull ItemStack stack ) 
 - { 
 - return fluidLocation ; 
 - } 
 - } ) ; 
 + ModelLoader . setCustomMeshDefinition ( fluid , stack - > fluidLocation ) ; 
 ModelLoader . setCustomStateMapper ( FiniteFluidBlock . instance , new StateMapperBase ( ) 
 { 
 + @ Override 
 protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) 
 { 
 return fluidLocation ; 
 @ @ - 249 , 7 + 244 , 7 @ @ public class FluidPlacementTest 
 @ Override 
 public void getSubItems ( @ Nullable CreativeTabs tab , @ Nonnull NonNullList < ItemStack > subItems ) 
 { 
 - if ( ! this . func _ 194125 _ a ( tab ) ) 
 + if ( ! this . isInCreativeTab ( tab ) ) 
 return ; 
 Fluid [ ] fluids = new Fluid [ ] { FluidRegistry . WATER , FluidRegistry . LAVA , FiniteFluid . instance , ModelFluidDebug . TestFluid . instance } ; 
 / / add 16 variable fillings 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 index d4c2e66 . . a37eb72 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class ItemTileDebug 
 } 
 
 @ Override 
 - public void func _ 192841 _ a ( CustomTileEntity p _ 180535 _ 1 _ , double x , double y , double z , float p _ 180535 _ 8 _ , int p _ 180535 _ 9 _ , float partial ) 
 + public void render ( CustomTileEntity p _ 180535 _ 1 _ , double x , double y , double z , float p _ 180535 _ 8 _ , int p _ 180535 _ 9 _ , float partial ) 
 { 
 glPushMatrix ( ) ; 
 glTranslated ( x , y , z ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java 
 index 9a75ef1 . . 11c665c 100644 
 - - - a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java 
 @ @ - 63 , 7 + 63 , 7 @ @ public class NBTShareTagItemTest 
 @ Override 
 public void getSubItems ( CreativeTabs tab , NonNullList < ItemStack > subItems ) 
 { 
 - if ( ! this . func _ 194125 _ a ( tab ) ) 
 + if ( ! this . isInCreativeTab ( tab ) ) 
 return ; 
 ItemStack creativeMenuItem = new ItemStack ( this ) ; 
 NBTTagCompound creativeMenuNBT = new NBTTagCompound ( ) ;

NEAREST DIFF:
diff - - git a / fml - src - 1 . 4 . 6 - 4 . 6 . 0 . 502 - master . zip b / fml - src - 1 . 4 . 6 - 4 . 6 . 0 . 502 - master . zip 
 deleted file mode 100644 
 index aeb7c55 . . 0000000 
 Binary files a / fml - src - 1 . 4 . 6 - 4 . 6 . 0 . 502 - master . zip and / dev / null differ 
 diff - - git a / fml - src - 1 . 4 . 6 - 4 . 6 . 4 . 505 - master . zip b / fml - src - 1 . 4 . 6 - 4 . 6 . 4 . 505 - master . zip 
 new file mode 100644 
 index 0000000 . . 49a3243 
 Binary files / dev / null and b / fml - src - 1 . 4 . 6 - 4 . 6 . 4 . 505 - master . zip differ
