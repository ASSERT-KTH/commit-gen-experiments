BLEU SCORE: 0.04027248192421852

TEST MSG: Fix serverlang loading issue , by frontloading MC and Forge langs ,
GENERATED MSG: Slight tweak to early loading , to accommodate FMP

TEST DIFF (one line): diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java <nl> index 160c4bf . . e0db812 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java <nl> @ @ - 105 , 8 + 105 , 11 @ @ public class LoadingModList <nl> return null ; <nl> } <nl> <nl> - public URL findURLForResource ( final String resourceName ) { <nl> + public URL findURLForResource ( String resourceName ) { <nl> for ( ModFileInfo mf : modFiles ) { <nl> + / / strip a leading slash <nl> + if ( resourceName . startsWith ( " / " ) ) resourceName = resourceName . substring ( 1 ) ; <nl> + <nl> final Path resource = mf . getFile ( ) . findResource ( resourceName ) ; <nl> if ( Files . exists ( resource ) ) { <nl> try { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / LanguageHook . java b / src / main / java / net / minecraftforge / fml / server / LanguageHook . java <nl> index 295a665 . . ebc324d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / LanguageHook . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / LanguageHook . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ import net . minecraft . resources . IResource ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . util . JsonUtils ; <nl> import net . minecraft . util . ResourceLocation ; <nl> - import net . minecraftforge . fml . packs . ResourcePackLoader ; <nl> + import net . minecraftforge . fml . ForgeI18n ; <nl> import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . LogManager ; <nl> import org . apache . logging . log4j . Logger ; <nl> @ @ - 91 , 6 + 91 , 17 @ @ public class LanguageHook <nl> } ) ; <nl> <nl> } <nl> + <nl> + static void loadForgeAndMCLangs ( ) { <nl> + modTable = new HashMap < > ( 5000 ) ; <nl> + final InputStream mc = Thread . currentThread ( ) . getContextClassLoader ( ) . getResourceAsStream ( " assets / minecraft / lang / en _ us . json " ) ; <nl> + final InputStream forge = Thread . currentThread ( ) . getContextClassLoader ( ) . getResourceAsStream ( " assets / forge / lang / en _ us . json " ) ; <nl> + loadLocaleData ( mc ) ; <nl> + loadLocaleData ( forge ) ; <nl> + capturedTables . forEach ( t - > t . putAll ( modTable ) ) ; <nl> + ForgeI18n . loadLanguageData ( modTable ) ; <nl> + } <nl> + <nl> static void loadLanguagesOnServer ( MinecraftServer server ) { <nl> modTable = new HashMap < > ( 5000 ) ; <nl> / / Possible multi - language server support ? <nl> @ @ - 98 , 5 + 109 , 6 @ @ public class LanguageHook <nl> loadLanguage ( lang , server ) ; <nl> } <nl> capturedTables . forEach ( t - > t . putAll ( modTable ) ) ; <nl> + ForgeI18n . loadLanguageData ( modTable ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java b / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java <nl> index 7092d70 . . 5222103 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ import net . minecraft . server . dedicated . DedicatedServer ; <nl> import net . minecraftforge . fml . LogicalSidedProvider ; <nl> import net . minecraftforge . fml . ModLoader ; <nl> import net . minecraftforge . fml . SidedProvider ; <nl> - import net . minecraftforge . fml . packs . ResourcePackLoader ; <nl> <nl> public class ServerModLoader <nl> { <nl> @ @ - 32 , 6 + 31 , 7 @ @ public class ServerModLoader <nl> ServerModLoader . server = dedicatedServer ; <nl> SidedProvider . setServer ( ( ) - > dedicatedServer ) ; <nl> LogicalSidedProvider . setServer ( ( ) - > dedicatedServer ) ; <nl> + LanguageHook . loadForgeAndMCLangs ( ) ; <nl> ModLoader . get ( ) . loadMods ( ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index 1afaf1c . . a072127 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 204 , 10 + 204 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> return ; <nl> } <nl> <nl> - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> + List < String > injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> try <nl> { <nl> - Loader . instance ( ) . loadMods ( ) ; <nl> + Loader . instance ( ) . loadMods ( injectedModContainers ) ; <nl> } <nl> catch ( WrongMinecraftVersionException wrong ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index f135488 . . 7e181d8 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 140 , 11 + 140 , 12 @ @ public class FMLCommonHandler <nl> return eventBus ; <nl> } <nl> <nl> - public void beginLoading ( IFMLSidedHandler handler ) <nl> + public List < String > beginLoading ( IFMLSidedHandler handler ) <nl> { <nl> sidedDelegate = handler ; <nl> MinecraftForge . initialize ( ) ; <nl> / / MinecraftForge . registerCrashCallable ( ) ; <nl> + return ImmutableList . < String > of ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> index 0e60836 . . e2771f3 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> @ @ - 26 , 14 + 26 , 11 @ @ import java . util . Map ; <nl> import java . util . Properties ; <nl> import java . util . Set ; <nl> <nl> - import net . minecraft . crash . CrashReport ; <nl> - import net . minecraft . crash . ICrashReportDetail ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraftforge . common . capabilities . CapabilityManager ; <nl> import net . minecraftforge . fml . common . LoaderState . ModState ; <nl> import net . minecraftforge . fml . common . ModContainer . Disableable ; <nl> import net . minecraftforge . fml . common . ProgressManager . ProgressBar ; <nl> - import net . minecraftforge . fml . common . discovery . ASMDataTable . ASMData ; <nl> import net . minecraftforge . fml . common . discovery . ModDiscoverer ; <nl> import net . minecraftforge . fml . common . event . FMLInterModComms ; <nl> import net . minecraftforge . fml . common . event . FMLLoadEvent ; <nl> @ @ - 338 , 8 + 335 , 9 @ @ public class Loader <nl> * Finally , if they are successfully loaded as classes , they are then added <nl> * to the available mod list . <nl> * / <nl> - private ModDiscoverer identifyMods ( ) <nl> + private ModDiscoverer identifyMods ( List < String > additionalContainers ) <nl> { <nl> + injectedContainers . addAll ( additionalContainers ) ; <nl> FMLLog . fine ( " Building injected Mod Containers % s " , injectedContainers ) ; <nl> / / Add in the MCP mod container <nl> mods . add ( new InjectedModContainer ( mcp , new File ( " minecraft . jar " ) ) ) ; <nl> @ @ - 487 , 8 + 485 , 9 @ @ public class Loader <nl> * Called from the hook to start mod loading . We trigger the <nl> * { @ link # identifyMods ( ) } and Constructing , Preinitalization , and Initalization phases here . Finally , <nl> * the mod list is frozen completely and is consider immutable from then on . <nl> + * @ param injectedModContainers <nl> * / <nl> - public void loadMods ( ) <nl> + public void loadMods ( List < String > injectedModContainers ) <nl> { <nl> progressBar = ProgressManager . push ( " Loading " , 7 ) ; <nl> progressBar . step ( " Constructing Mods " ) ; <nl> @ @ - 497 , 7 + 496 , 7 @ @ public class Loader <nl> namedMods = Maps . newHashMap ( ) ; <nl> modController = new LoadController ( this ) ; <nl> modController . transition ( LoaderState . LOADING , false ) ; <nl> - discoverer = identifyMods ( ) ; <nl> + discoverer = identifyMods ( injectedModContainers ) ; <nl> ModAPIManager . INSTANCE . manageAPI ( modClassLoader , discoverer ) ; <nl> disableRequestedMods ( ) ; <nl> modController . distributeStateMessage ( FMLLoadEvent . class ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index 7d82c64 . . d292218 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 13 , 7 + 13 , 6 @ @ <nl> package net . minecraftforge . fml . server ; <nl> <nl> import java . io . * ; <nl> - import java . util . Enumeration ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> @ @ - 74 , 22 + 73 , 22 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> * A reference to the server itself <nl> * / <nl> private MinecraftServer server ; <nl> - <nl> + private List < String > injectedModContainers ; <nl> private FMLServerHandler ( ) <nl> { <nl> - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> + injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> } <nl> / * * <nl> * Called to start the whole game off from <nl> * { @ link MinecraftServer # startServer } <nl> * <nl> - * @ param minecraftServer <nl> + * @ param minecraftServer server <nl> * / <nl> @ Override <nl> public void beginServerLoading ( MinecraftServer minecraftServer ) <nl> { <nl> server = minecraftServer ; <nl> - Loader . instance ( ) . loadMods ( ) ; <nl> + Loader . instance ( ) . loadMods ( injectedModContainers ) ; <nl> Loader . instance ( ) . preinitializeMods ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java 
 index 160c4bf . . e0db812 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / LoadingModList . java 
 @ @ - 105 , 8 + 105 , 11 @ @ public class LoadingModList 
 return null ; 
 } 
 
 - public URL findURLForResource ( final String resourceName ) { 
 + public URL findURLForResource ( String resourceName ) { 
 for ( ModFileInfo mf : modFiles ) { 
 + / / strip a leading slash 
 + if ( resourceName . startsWith ( " / " ) ) resourceName = resourceName . substring ( 1 ) ; 
 + 
 final Path resource = mf . getFile ( ) . findResource ( resourceName ) ; 
 if ( Files . exists ( resource ) ) { 
 try { 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / LanguageHook . java b / src / main / java / net / minecraftforge / fml / server / LanguageHook . java 
 index 295a665 . . ebc324d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / LanguageHook . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / LanguageHook . java 
 @ @ - 26 , 7 + 26 , 7 @ @ import net . minecraft . resources . IResource ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . util . JsonUtils ; 
 import net . minecraft . util . ResourceLocation ; 
 - import net . minecraftforge . fml . packs . ResourcePackLoader ; 
 + import net . minecraftforge . fml . ForgeI18n ; 
 import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . LogManager ; 
 import org . apache . logging . log4j . Logger ; 
 @ @ - 91 , 6 + 91 , 17 @ @ public class LanguageHook 
 } ) ; 
 
 } 
 + 
 + static void loadForgeAndMCLangs ( ) { 
 + modTable = new HashMap < > ( 5000 ) ; 
 + final InputStream mc = Thread . currentThread ( ) . getContextClassLoader ( ) . getResourceAsStream ( " assets / minecraft / lang / en _ us . json " ) ; 
 + final InputStream forge = Thread . currentThread ( ) . getContextClassLoader ( ) . getResourceAsStream ( " assets / forge / lang / en _ us . json " ) ; 
 + loadLocaleData ( mc ) ; 
 + loadLocaleData ( forge ) ; 
 + capturedTables . forEach ( t - > t . putAll ( modTable ) ) ; 
 + ForgeI18n . loadLanguageData ( modTable ) ; 
 + } 
 + 
 static void loadLanguagesOnServer ( MinecraftServer server ) { 
 modTable = new HashMap < > ( 5000 ) ; 
 / / Possible multi - language server support ? 
 @ @ - 98 , 5 + 109 , 6 @ @ public class LanguageHook 
 loadLanguage ( lang , server ) ; 
 } 
 capturedTables . forEach ( t - > t . putAll ( modTable ) ) ; 
 + ForgeI18n . loadLanguageData ( modTable ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java b / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java 
 index 7092d70 . . 5222103 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / ServerModLoader . java 
 @ @ - 23 , 7 + 23 , 6 @ @ import net . minecraft . server . dedicated . DedicatedServer ; 
 import net . minecraftforge . fml . LogicalSidedProvider ; 
 import net . minecraftforge . fml . ModLoader ; 
 import net . minecraftforge . fml . SidedProvider ; 
 - import net . minecraftforge . fml . packs . ResourcePackLoader ; 
 
 public class ServerModLoader 
 { 
 @ @ - 32 , 6 + 31 , 7 @ @ public class ServerModLoader 
 ServerModLoader . server = dedicatedServer ; 
 SidedProvider . setServer ( ( ) - > dedicatedServer ) ; 
 LogicalSidedProvider . setServer ( ( ) - > dedicatedServer ) ; 
 + LanguageHook . loadForgeAndMCLangs ( ) ; 
 ModLoader . get ( ) . loadMods ( ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index 1afaf1c . . a072127 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 204 , 10 + 204 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 return ; 
 } 
 
 - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 + List < String > injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 try 
 { 
 - Loader . instance ( ) . loadMods ( ) ; 
 + Loader . instance ( ) . loadMods ( injectedModContainers ) ; 
 } 
 catch ( WrongMinecraftVersionException wrong ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index f135488 . . 7e181d8 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 140 , 11 + 140 , 12 @ @ public class FMLCommonHandler 
 return eventBus ; 
 } 
 
 - public void beginLoading ( IFMLSidedHandler handler ) 
 + public List < String > beginLoading ( IFMLSidedHandler handler ) 
 { 
 sidedDelegate = handler ; 
 MinecraftForge . initialize ( ) ; 
 / / MinecraftForge . registerCrashCallable ( ) ; 
 + return ImmutableList . < String > of ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 index 0e60836 . . e2771f3 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 @ @ - 26 , 14 + 26 , 11 @ @ import java . util . Map ; 
 import java . util . Properties ; 
 import java . util . Set ; 
 
 - import net . minecraft . crash . CrashReport ; 
 - import net . minecraft . crash . ICrashReportDetail ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraftforge . common . capabilities . CapabilityManager ; 
 import net . minecraftforge . fml . common . LoaderState . ModState ; 
 import net . minecraftforge . fml . common . ModContainer . Disableable ; 
 import net . minecraftforge . fml . common . ProgressManager . ProgressBar ; 
 - import net . minecraftforge . fml . common . discovery . ASMDataTable . ASMData ; 
 import net . minecraftforge . fml . common . discovery . ModDiscoverer ; 
 import net . minecraftforge . fml . common . event . FMLInterModComms ; 
 import net . minecraftforge . fml . common . event . FMLLoadEvent ; 
 @ @ - 338 , 8 + 335 , 9 @ @ public class Loader 
 * Finally , if they are successfully loaded as classes , they are then added 
 * to the available mod list . 
 * / 
 - private ModDiscoverer identifyMods ( ) 
 + private ModDiscoverer identifyMods ( List < String > additionalContainers ) 
 { 
 + injectedContainers . addAll ( additionalContainers ) ; 
 FMLLog . fine ( " Building injected Mod Containers % s " , injectedContainers ) ; 
 / / Add in the MCP mod container 
 mods . add ( new InjectedModContainer ( mcp , new File ( " minecraft . jar " ) ) ) ; 
 @ @ - 487 , 8 + 485 , 9 @ @ public class Loader 
 * Called from the hook to start mod loading . We trigger the 
 * { @ link # identifyMods ( ) } and Constructing , Preinitalization , and Initalization phases here . Finally , 
 * the mod list is frozen completely and is consider immutable from then on . 
 + * @ param injectedModContainers 
 * / 
 - public void loadMods ( ) 
 + public void loadMods ( List < String > injectedModContainers ) 
 { 
 progressBar = ProgressManager . push ( " Loading " , 7 ) ; 
 progressBar . step ( " Constructing Mods " ) ; 
 @ @ - 497 , 7 + 496 , 7 @ @ public class Loader 
 namedMods = Maps . newHashMap ( ) ; 
 modController = new LoadController ( this ) ; 
 modController . transition ( LoaderState . LOADING , false ) ; 
 - discoverer = identifyMods ( ) ; 
 + discoverer = identifyMods ( injectedModContainers ) ; 
 ModAPIManager . INSTANCE . manageAPI ( modClassLoader , discoverer ) ; 
 disableRequestedMods ( ) ; 
 modController . distributeStateMessage ( FMLLoadEvent . class ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index 7d82c64 . . d292218 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 13 , 7 + 13 , 6 @ @ 
 package net . minecraftforge . fml . server ; 
 
 import java . io . * ; 
 - import java . util . Enumeration ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Set ; 
 @ @ - 74 , 22 + 73 , 22 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 * A reference to the server itself 
 * / 
 private MinecraftServer server ; 
 - 
 + private List < String > injectedModContainers ; 
 private FMLServerHandler ( ) 
 { 
 - FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 + injectedModContainers = FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 } 
 / * * 
 * Called to start the whole game off from 
 * { @ link MinecraftServer # startServer } 
 * 
 - * @ param minecraftServer 
 + * @ param minecraftServer server 
 * / 
 @ Override 
 public void beginServerLoading ( MinecraftServer minecraftServer ) 
 { 
 server = minecraftServer ; 
 - Loader . instance ( ) . loadMods ( ) ; 
 + Loader . instance ( ) . loadMods ( injectedModContainers ) ; 
 Loader . instance ( ) . preinitializeMods ( ) ; 
 } 

