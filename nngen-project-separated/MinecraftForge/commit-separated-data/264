BLEU SCORE: 0.021537493400170526

TEST MSG: Fix issues with the test mods
GENERATED MSG: Disable substitution test , substitutions are not managed the way they used to be .

TEST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java b / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java <nl> index fc0dc59 . . 9bcc4fe 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ import net . minecraftforge . fml . common . eventhandler . Event ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> import org . apache . logging . log4j . Logger ; <nl> <nl> - @ Mod ( modid = BonemealEventTest . MODID , name = " Bonemeal Event Test " , version = " 1 . 0 " , acceptableRemoteVersions = " * " , dependencies = " required - after : asdkfaskld " ) <nl> + @ Mod ( modid = BonemealEventTest . MODID , name = " Bonemeal Event Test " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> public class BonemealEventTest <nl> { <nl> public static final String MODID = " bonemealeventtest " ; <nl> diff - - git a / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json b / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json <nl> index b2749a7 . . 6aaed35 100644 <nl> - - - a / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json <nl> + + + b / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json <nl> @ @ - 1 , 11 + 1 , 11 @ @ <nl> { <nl> " ingredients " : { <nl> - " nbt " : " net . minecraftforge . debug . CraftingSystemTest $ IngredientFactory " <nl> + " nbt " : " net . minecraftforge . debug . gameplay . CraftingSystemTest $ IngredientFactory " <nl> } , <nl> " recipes " : { <nl> - " free " : " net . minecraftforge . debug . CraftingSystemTest $ RecipeFactory " <nl> + " free " : " net . minecraftforge . debug . gameplay . CraftingSystemTest $ RecipeFactory " <nl> } , <nl> " conditions " : { <nl> - " true " : " net . minecraftforge . debug . CraftingSystemTest $ ConditionFactory " <nl> + " true " : " net . minecraftforge . debug . gameplay . CraftingSystemTest $ ConditionFactory " <nl> } <nl> } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> index cb0675f . . 8d5c514 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> @ @ - 137 , 7 + 137 , 7 @ @ public class DynBucketTest <nl> public void registrRecipes ( RegistryEvent . Register < IRecipe > event ) <nl> { <nl> ItemStack filledBucket = FluidUtil . getFilledBucket ( new FluidStack ( TestFluid . instance , Fluid . BUCKET _ VOLUME ) ) ; <nl> - GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " diamond _ to _ fluid " ) , null , filledBucket , Ingredient . func _ 193368 _ a ( Items . DIAMOND ) ) ; <nl> + GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " diamond _ to _ fluid " ) , null , filledBucket , Ingredient . fromItem ( Items . DIAMOND ) ) ; <nl> } <nl> <nl> @ SuppressWarnings ( " unused " ) <nl> diff - - git a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java <nl> index fe02667 . . c0ed610 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ public class NBTShareTagItemTest <nl> nbt . setBoolean ( " crafted " , true ) ; <nl> crafted . setTagCompound ( nbt ) ; <nl> <nl> - GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " nbt _ share " ) , null , crafted , Ingredient . func _ 193367 _ a ( Items . STICK ) ) ; <nl> + GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " nbt _ share " ) , null , crafted , Ingredient . fromItem ( Items . STICK ) ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> diff - - git a / src / test / java / net / minecraftforge / debug / RecipeTestMod . java b / src / test / java / net / minecraftforge / debug / RecipeTestMod . java <nl> index ee77914 . . 7e46090 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / RecipeTestMod . java <nl> + + + b / src / test / java / net / minecraftforge / debug / RecipeTestMod . java <nl> @ @ - 2 , 12 + 2 , 15 @ @ package net . minecraftforge . debug ; <nl> <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . item . crafting . IRecipe ; <nl> import net . minecraft . item . crafting . ShapedRecipes ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . crafting . CraftingHelper ; <nl> + import net . minecraftforge . event . RegistryEvent ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> - import net . minecraftforge . fml . common . registry . GameRegistry ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> import net . minecraftforge . oredict . ShapedOreRecipe ; <nl> <nl> @ Mod ( modid = " recipetest " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> @ @ - 16 , 15 + 19 , 21 @ @ public class RecipeTestMod <nl> @ Mod . EventHandler <nl> public void preinit ( FMLPreInitializationEvent event ) <nl> { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void registerRecipes ( RegistryEvent . Register < IRecipe > event ) <nl> + { <nl> ResourceLocation location1 = new ResourceLocation ( " recipetest " , " dirt " ) ; <nl> ShapedOreRecipe recipe1 = new ShapedOreRecipe ( location1 , new ItemStack ( Blocks . DIAMOND _ BLOCK ) , " DDD " , ' D ' , new ItemStack ( Blocks . DIRT ) ) ; <nl> recipe1 . setRegistryName ( location1 ) ; <nl> - GameRegistry . register ( recipe1 ) ; <nl> + event . getRegistry ( ) . register ( recipe1 ) ; <nl> <nl> ResourceLocation location2 = new ResourceLocation ( " recipetest " , " stone " ) ; <nl> CraftingHelper . ShapedPrimer primer1 = CraftingHelper . parseShaped ( " SSS " , ' S ' , new ItemStack ( Blocks . IRON _ BLOCK ) ) ; <nl> ShapedRecipes recipe2 = new ShapedRecipes ( location2 . getResourcePath ( ) , primer1 . width , primer1 . height , primer1 . input , new ItemStack ( Blocks . GOLD _ BLOCK ) ) ; <nl> recipe2 . setRegistryName ( location2 ) ; <nl> - GameRegistry . register ( recipe2 ) ; <nl> + event . getRegistry ( ) . register ( recipe2 ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java <nl> index 793641c . . e1b9058 100644 <nl> - - - a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java <nl> + + + b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java <nl> @ @ - 58 , 6 + 58 , 10 @ @ public class SubstitutionInjectionTest <nl> @ Test <nl> public void testSubstitutionInjection ( ) throws Exception <nl> { <nl> + / / TODO : Decide exactly how I want to deal with subs , this test doesn ' t really do anything right now <nl> + if ( true = = Boolean . valueOf ( " true " ) . booleanValue ( ) ) <nl> + return ; <nl> + <nl> final ForgeRegistry < Block > blockRegistry = ( ForgeRegistry < Block > ) RegistryManager . ACTIVE . getRegistry ( Block . class ) ; <nl> final ForgeRegistry < Item > itemRegistry = ( ForgeRegistry < Item > ) RegistryManager . ACTIVE . getRegistry ( Item . class ) ; <nl>

TEST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java b / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java 
 index fc0dc59 . . 9bcc4fe 100644 
 - - - a / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / item / BonemealEventTest . java 
 @ @ - 28 , 7 + 28 , 7 @ @ import net . minecraftforge . fml . common . eventhandler . Event ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 import org . apache . logging . log4j . Logger ; 
 
 - @ Mod ( modid = BonemealEventTest . MODID , name = " Bonemeal Event Test " , version = " 1 . 0 " , acceptableRemoteVersions = " * " , dependencies = " required - after : asdkfaskld " ) 
 + @ Mod ( modid = BonemealEventTest . MODID , name = " Bonemeal Event Test " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 public class BonemealEventTest 
 { 
 public static final String MODID = " bonemealeventtest " ; 
 diff - - git a / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json b / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json 
 index b2749a7 . . 6aaed35 100644 
 - - - a / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json 
 + + + b / src / test / resources / assets / crafting _ system _ test / recipes / _ factories . json 
 @ @ - 1 , 11 + 1 , 11 @ @ 
 { 
 " ingredients " : { 
 - " nbt " : " net . minecraftforge . debug . CraftingSystemTest $ IngredientFactory " 
 + " nbt " : " net . minecraftforge . debug . gameplay . CraftingSystemTest $ IngredientFactory " 
 } , 
 " recipes " : { 
 - " free " : " net . minecraftforge . debug . CraftingSystemTest $ RecipeFactory " 
 + " free " : " net . minecraftforge . debug . gameplay . CraftingSystemTest $ RecipeFactory " 
 } , 
 " conditions " : { 
 - " true " : " net . minecraftforge . debug . CraftingSystemTest $ ConditionFactory " 
 + " true " : " net . minecraftforge . debug . gameplay . CraftingSystemTest $ ConditionFactory " 
 } 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 index cb0675f . . 8d5c514 100644 
 - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 @ @ - 137 , 7 + 137 , 7 @ @ public class DynBucketTest 
 public void registrRecipes ( RegistryEvent . Register < IRecipe > event ) 
 { 
 ItemStack filledBucket = FluidUtil . getFilledBucket ( new FluidStack ( TestFluid . instance , Fluid . BUCKET _ VOLUME ) ) ; 
 - GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " diamond _ to _ fluid " ) , null , filledBucket , Ingredient . func _ 193368 _ a ( Items . DIAMOND ) ) ; 
 + GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " diamond _ to _ fluid " ) , null , filledBucket , Ingredient . fromItem ( Items . DIAMOND ) ) ; 
 } 
 
 @ SuppressWarnings ( " unused " ) 
 diff - - git a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java 
 index fe02667 . . c0ed610 100644 
 - - - a / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / NBTShareTagItemTest . java 
 @ @ - 38 , 7 + 38 , 7 @ @ public class NBTShareTagItemTest 
 nbt . setBoolean ( " crafted " , true ) ; 
 crafted . setTagCompound ( nbt ) ; 
 
 - GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " nbt _ share " ) , null , crafted , Ingredient . func _ 193367 _ a ( Items . STICK ) ) ; 
 + GameRegistry . addShapelessRecipe ( new ResourceLocation ( MODID , " nbt _ share " ) , null , crafted , Ingredient . fromItem ( Items . STICK ) ) ; 
 } 
 
 @ SubscribeEvent 
 diff - - git a / src / test / java / net / minecraftforge / debug / RecipeTestMod . java b / src / test / java / net / minecraftforge / debug / RecipeTestMod . java 
 index ee77914 . . 7e46090 100644 
 - - - a / src / test / java / net / minecraftforge / debug / RecipeTestMod . java 
 + + + b / src / test / java / net / minecraftforge / debug / RecipeTestMod . java 
 @ @ - 2 , 12 + 2 , 15 @ @ package net . minecraftforge . debug ; 
 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . item . crafting . IRecipe ; 
 import net . minecraft . item . crafting . ShapedRecipes ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . crafting . CraftingHelper ; 
 + import net . minecraftforge . event . RegistryEvent ; 
 import net . minecraftforge . fml . common . Mod ; 
 import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 - import net . minecraftforge . fml . common . registry . GameRegistry ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 import net . minecraftforge . oredict . ShapedOreRecipe ; 
 
 @ Mod ( modid = " recipetest " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 @ @ - 16 , 15 + 19 , 21 @ @ public class RecipeTestMod 
 @ Mod . EventHandler 
 public void preinit ( FMLPreInitializationEvent event ) 
 { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void registerRecipes ( RegistryEvent . Register < IRecipe > event ) 
 + { 
 ResourceLocation location1 = new ResourceLocation ( " recipetest " , " dirt " ) ; 
 ShapedOreRecipe recipe1 = new ShapedOreRecipe ( location1 , new ItemStack ( Blocks . DIAMOND _ BLOCK ) , " DDD " , ' D ' , new ItemStack ( Blocks . DIRT ) ) ; 
 recipe1 . setRegistryName ( location1 ) ; 
 - GameRegistry . register ( recipe1 ) ; 
 + event . getRegistry ( ) . register ( recipe1 ) ; 
 
 ResourceLocation location2 = new ResourceLocation ( " recipetest " , " stone " ) ; 
 CraftingHelper . ShapedPrimer primer1 = CraftingHelper . parseShaped ( " SSS " , ' S ' , new ItemStack ( Blocks . IRON _ BLOCK ) ) ; 
 ShapedRecipes recipe2 = new ShapedRecipes ( location2 . getResourcePath ( ) , primer1 . width , primer1 . height , primer1 . input , new ItemStack ( Blocks . GOLD _ BLOCK ) ) ; 
 recipe2 . setRegistryName ( location2 ) ; 
 - GameRegistry . register ( recipe2 ) ; 
 + event . getRegistry ( ) . register ( recipe2 ) ; 
 } 
 } 
 diff - - git a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java 
 index 793641c . . e1b9058 100644 
 - - - a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java 
 + + + b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java 
 @ @ - 58 , 6 + 58 , 10 @ @ public class SubstitutionInjectionTest 
 @ Test 
 public void testSubstitutionInjection ( ) throws Exception 
 { 
 + / / TODO : Decide exactly how I want to deal with subs , this test doesn ' t really do anything right now 
 + if ( true = = Boolean . valueOf ( " true " ) . booleanValue ( ) ) 
 + return ; 
 + 
 final ForgeRegistry < Block > blockRegistry = ( ForgeRegistry < Block > ) RegistryManager . ACTIVE . getRegistry ( Block . class ) ; 
 final ForgeRegistry < Item > itemRegistry = ( ForgeRegistry < Item > ) RegistryManager . ACTIVE . getRegistry ( Item . class ) ; 

