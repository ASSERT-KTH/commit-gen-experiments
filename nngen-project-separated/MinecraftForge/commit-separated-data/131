BLEU SCORE: 0.03089055318156698

TEST MSG: Expose a couple of mods . toml properties properly . Half - implemented
GENERATED MSG: Update mappings to 20151122 .

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 6c22886 . . b5b1348 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 261 , 7 + 261 , 7 @ @ project ( ' : forge ' ) { <nl> installer ' cpw . mods : modlauncher : 0 . 6 . 0 ' <nl> installer ' net . minecraftforge : accesstransformers : 0 . 14 . + : shadowed ' <nl> installer ' net . minecraftforge : eventbus : 0 . 6 . + : service ' <nl> - installer ' net . minecraftforge : forgespi : 0 . 2 . + ' <nl> + installer ' net . minecraftforge : forgespi : 0 . 4 . + ' <nl> installer ' net . minecraftforge : coremods : 0 . 2 . + ' <nl> installer ' com . electronwill . night - config : core : 3 . 4 . 2 ' <nl> installer ' com . electronwill . night - config : toml : 3 . 4 . 2 ' <nl> diff - - git a / mods . toml b / mods . toml <nl> index 38978c6 . . a7b3d90 100644 <nl> - - - a / mods . toml <nl> + + + b / mods . toml <nl> @ @ - 25 , 13 + 25 , 16 @ @ key = " value " <nl> This is my mod , there may be <nl> others , but this one is mine <nl> ' ' ' <nl> + # Override the default resourcelocation namespace with this instead <nl> + # Currently not implemented <nl> + namespace = " invsorter " <nl> # A random extra property for a mod loader <nl> randomExtraProperty = " somevalue " <nl> # Arbitrary key - value pairs <nl> - [ inventorysorter . properties ] <nl> + [ modproperties . inventorysorter ] <nl> key = " value " <nl> # A list of dependencies <nl> - [ [ inventorysorter . dependencies ] ] <nl> + [ [ dependencies . inventorysorter ] ] <nl> # the modid of the dependency <nl> modid = " forge " <nl> # Does this dependency have to exist - if not , ordering below must be specified <nl> @ @ - 43 , 7 + 46 , 7 @ @ key = " value " <nl> # Side this dependency is applied on - BOTH , CLIENT or SERVER <nl> side = " BOTH " <nl> # Here ' s another dependency <nl> - [ [ inventorysorter . dependencies ] ] <nl> + [ [ dependencies . inventorysorter ] ] <nl> modid = " minecraft " <nl> mandatory = true <nl> versionRange = " [ 1 . 12 . 2 ] " <nl> diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java <nl> index c72ad45 . . 165d6b0 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java <nl> @ @ - 98 , 6 + 98 , 11 @ @ public class ModFileInfo implements IModFileInfo <nl> return modLoaderVersion ; <nl> } <nl> <nl> + @ Override <nl> + public Map < String , Object > getFileProperties ( ) { <nl> + return this . properties ; <nl> + } <nl> + <nl> public Optional < Manifest > getManifest ( ) { <nl> return modFile . getLocator ( ) . findManifest ( modFile . getFilePath ( ) ) ; <nl> } <nl> diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java <nl> index 6030b56 . . 4fa2b15 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java <nl> @ @ - 28 , 16 + 28 , 23 @ @ import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Optional ; <nl> + import java . util . regex . Pattern ; <nl> import java . util . stream . Collectors ; <nl> <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> import org . apache . maven . artifact . versioning . ArtifactVersion ; <nl> import org . apache . maven . artifact . versioning . DefaultArtifactVersion ; <nl> <nl> public class ModInfo implements IModInfo <nl> { <nl> + private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> private static final DefaultArtifactVersion DEFAULT _ VERSION = new DefaultArtifactVersion ( " 1 " ) ; <nl> + private static final Pattern VALID _ LABEL = Pattern . compile ( " ^ [ a - z ] [ a - z0 - 9 _ - ] { 1 , 63 } $ " ) ; <nl> + <nl> private final ModFileInfo owningFile ; <nl> private final String modId ; <nl> + private final String namespace ; <nl> private final ArtifactVersion version ; <nl> private final String displayName ; <nl> private final String description ; <nl> @ @ - 50 , 6 + 57 , 15 @ @ public class ModInfo implements IModInfo <nl> this . owningFile = owningFile ; <nl> this . modConfig = modConfig ; <nl> this . modId = modConfig . < String > getOptional ( " modId " ) . orElseThrow ( ( ) - > new InvalidModFileException ( " Missing modId entry " , owningFile ) ) ; <nl> + if ( ! VALID _ LABEL . matcher ( this . modId ) . matches ( ) ) { <nl> + LOGGER . fatal ( " Invalid modId found in file { } - { } does not match the standard : { } " , this . owningFile . getFile ( ) . getFilePath ( ) , this . modId , VALID _ LABEL . pattern ( ) ) ; <nl> + throw new InvalidModFileException ( " Invalid modId found : " + this . modId , owningFile ) ; <nl> + } <nl> + this . namespace = modConfig . < String > getOptional ( " namespace " ) . orElse ( this . modId ) ; <nl> + if ( ! VALID _ LABEL . matcher ( this . namespace ) . matches ( ) ) { <nl> + LOGGER . fatal ( " Invalid override namespace found in file { } - { } does not match the standard : { } " , this . owningFile . getFile ( ) . getFilePath ( ) , this . namespace , VALID _ LABEL . pattern ( ) ) ; <nl> + throw new InvalidModFileException ( " Invalid override namespace found : " + this . namespace , owningFile ) ; <nl> + } <nl> this . version = modConfig . < String > getOptional ( " version " ) . <nl> map ( s - > StringSubstitutor . replace ( s , owningFile ! = null ? owningFile . getFile ( ) : null ) ) . <nl> map ( DefaultArtifactVersion : : new ) . orElse ( DEFAULT _ VERSION ) ; <nl> @ @ - 102 , 6 + 118 , 16 @ @ public class ModInfo implements IModInfo <nl> return this . modConfig ; <nl> } <nl> <nl> + @ Override <nl> + public String getNamespace ( ) { <nl> + return this . namespace ; <nl> + } <nl> + <nl> + @ Override <nl> + public Map < String , Object > getModProperties ( ) { <nl> + return this . properties ; <nl> + } <nl> + <nl> public Optional < String > getLogoFile ( ) <nl> { <nl> return this . owningFile ! = null ? this . owningFile . getConfig ( ) . getOptional ( " logoFile " ) : this . modConfig . getOptional ( " logoFile " ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / ModContainer . java b / src / main / java / net / minecraftforge / fml / ModContainer . java <nl> index 09f18db . . 128107c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / ModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / ModContainer . java <nl> @ @ - 29 , 7 + 29 , 6 @ @ import java . util . Map ; <nl> import java . util . Optional ; <nl> import java . util . function . Consumer ; <nl> import java . util . function . Supplier ; <nl> - import java . util . regex . Pattern ; <nl> <nl> / * * <nl> * The container that wraps around mods in the system . <nl> @ @ - 46 , 8 + 45 , 8 @ @ import java . util . regex . Pattern ; <nl> <nl> public abstract class ModContainer <nl> { <nl> - private static final Pattern VALID _ MODIDS = Pattern . compile ( " ^ [ a - z0 - 9 _ - ] { 3 , 64 } $ " ) ; <nl> protected final String modId ; <nl> + protected final String namespace ; <nl> protected final IModInfo modInfo ; <nl> protected ModLoadingStage modLoadingStage ; <nl> protected final Map < ModLoadingStage , Consumer < LifecycleEventProvider . LifecycleEvent > > triggerMap ; <nl> @ @ - 55 , 9 + 54 , 9 @ @ public abstract class ModContainer <nl> <nl> public ModContainer ( IModInfo info ) <nl> { <nl> - if ( ! VALID _ MODIDS . matcher ( info . getModId ( ) ) . matches ( ) ) <nl> - throw new IllegalArgumentException ( " Invalid modid " + info . getModId ( ) + " ! Mod ids need to be lowercase alphanumeric characters or ' - ' / ' _ ' and need to be between 3 and 64 chars long . " ) ; <nl> this . modId = info . getModId ( ) ; <nl> + / / TODO : Currently not reading namespace from configuration . . <nl> + this . namespace = this . modId ; <nl> this . modInfo = info ; <nl> this . triggerMap = new HashMap < > ( ) ; <nl> this . modLoadingStage = ModLoadingStage . CONSTRUCT ; <nl> @ @ - 74 , 9 + 73 , 9 @ @ public abstract class ModContainer <nl> / * * <nl> * @ return the resource prefix for the mod <nl> * / <nl> - public final String getPrefix ( ) <nl> + public final String getNamespace ( ) <nl> { <nl> - return modId ; <nl> + return namespace ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> index ba0a1ac . . e11720e 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java <nl> @ @ - 276 , 7 + 276 , 7 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe <nl> <nl> int add ( int id , V value ) <nl> { <nl> - final String owner = ModThreadContext . get ( ) . getActiveContainer ( ) . getPrefix ( ) ; <nl> + final String owner = ModThreadContext . get ( ) . getActiveContainer ( ) . getNamespace ( ) ; <nl> return add ( id , value , owner ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java <nl> index 91b4d47 . . 9519fb3 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / GameData . java <nl> + + + b / src / main / java / net / minecraftforge / registries / GameData . java <nl> @ @ - 56 , 7 + 56 , 6 @ @ import org . apache . logging . log4j . MarkerManager ; <nl> import javax . annotation . Nullable ; <nl> import java . lang . reflect . Field ; <nl> import java . util . Collection ; <nl> - import java . util . Collections ; <nl> import java . util . LinkedHashMap ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> @ @ - 821 , 7 + 820 , 7 @ @ public class GameData <nl> int index = name . lastIndexOf ( ' : ' ) ; <nl> String oldPrefix = index = = - 1 ? " " : name . substring ( 0 , index ) . toLowerCase ( Locale . ROOT ) ; <nl> name = index = = - 1 ? name : name . substring ( index + 1 ) ; <nl> - String prefix = ModThreadContext . get ( ) . getActiveContainer ( ) . getPrefix ( ) ; <nl> + String prefix = ModThreadContext . get ( ) . getActiveContainer ( ) . getNamespace ( ) ; <nl> if ( ! oldPrefix . equals ( prefix ) & & oldPrefix . length ( ) > 0 ) <nl> { <nl> LogManager . getLogger ( ) . info ( " Potentially Dangerous alternative prefix ` { } ` for name ` { } ` , expected ` { } ` . This could be a intended override , but in most cases indicates a broken mod . " , oldPrefix , name , prefix ) ;
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index f6acdc6 . . e8c7fbf 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 28 , 7 + 28 , 7 @ @ apply plugin : " net . minecraftforge . gradle . launch4j " <nl> minecraft { <nl> version = " 1 . 8 . 8 " <nl> / / mappings = ' stable _ 16 ' <nl> - mappings = " snapshot _ nodoc _ 20141130 " <nl> + mappings = " snapshot _ nodoc _ 20151122 " <nl> workspaceDir = " projects " <nl> versionJson = " jsons / 1 . 8 . 8 - dev . json " <nl> buildUserdev = true <nl> diff - - git a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> index 4978616 . . 455c764 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> + + + b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class ClientCommandHandler extends CommandHandler <nl> return 0 ; <nl> } <nl> <nl> - if ( icommand . canCommandSenderUse ( sender ) ) <nl> + if ( icommand . canCommandSenderUseCommand ( sender ) ) <nl> { <nl> CommandEvent event = new CommandEvent ( icommand , sender , args ) ; <nl> if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class ClientCommandHandler extends CommandHandler <nl> return 0 ; <nl> } <nl> <nl> - icommand . execute ( sender , args ) ; <nl> + icommand . processCommand ( sender , args ) ; <nl> return 1 ; <nl> } <nl> else <nl> diff - - git a / src / main / java / net / minecraftforge / client / GuiIngameForge . java b / src / main / java / net / minecraftforge / client / GuiIngameForge . java <nl> index 5c3adae . . a41ecdf 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / GuiIngameForge . java <nl> + + + b / src / main / java / net / minecraftforge / client / GuiIngameForge . java <nl> @ @ - 113 , 7 + 113 , 7 @ @ public class GuiIngameForge extends GuiIngame <nl> <nl> if ( Minecraft . isFancyGraphicsEnabled ( ) ) <nl> { <nl> - func _ 180480 _ a ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; <nl> + renderVignette ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; <nl> } <nl> else <nl> { <nl> @ @ - 163 , 16 + 163 , 16 @ @ public class GuiIngameForge extends GuiIngame <nl> <nl> Scoreboard scoreboard = this . mc . theWorld . getScoreboard ( ) ; <nl> ScoreObjective objective = null ; <nl> - ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getName ( ) ) ; <nl> + ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getCommandSenderName ( ) ) ; <nl> if ( scoreplayerteam ! = null ) <nl> { <nl> - int slot = scoreplayerteam . func _ 178775 _ l ( ) . getColorIndex ( ) ; <nl> + int slot = scoreplayerteam . getChatFormat ( ) . getColorIndex ( ) ; <nl> if ( slot > = 0 ) objective = scoreboard . getObjectiveInDisplaySlot ( 3 + slot ) ; <nl> } <nl> ScoreObjective scoreobjective1 = objective ! = null ? objective : scoreboard . getObjectiveInDisplaySlot ( 1 ) ; <nl> if ( renderObjective & & scoreobjective1 ! = null ) <nl> { <nl> - this . func _ 180475 _ a ( scoreobjective1 , res ) ; <nl> + this . renderScoreboard ( scoreobjective1 , res ) ; <nl> } <nl> <nl> GlStateManager . enableBlend ( ) ; <nl> @ @ - 234 , 7 + 234 , 7 @ @ public class GuiIngameForge extends GuiIngame <nl> { <nl> if ( itemstack . getItem ( ) = = Item . getItemFromBlock ( Blocks . pumpkin ) ) <nl> { <nl> - func _ 180476 _ e ( res ) ; <nl> + renderPumpkinOverlay ( res ) ; <nl> } <nl> else <nl> { <nl> @ @ - 345 , 28 + 345 , 28 @ @ public class GuiIngameForge extends GuiIngame <nl> <nl> EntityPlayer player = ( EntityPlayer ) this . mc . getRenderViewEntity ( ) ; <nl> int health = MathHelper . ceiling _ float _ int ( player . getHealth ( ) ) ; <nl> - boolean highlight = field _ 175191 _ F > ( long ) updateCounter & & ( field _ 175191 _ F - ( long ) updateCounter ) / 3L % 2L = = 1L ; <nl> + boolean highlight = healthUpdateCounter > ( long ) updateCounter & & ( healthUpdateCounter - ( long ) updateCounter ) / 3L % 2L = = 1L ; <nl> <nl> - if ( health < this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) <nl> + if ( health < this . playerHealth & & player . hurtResistantTime > 0 ) <nl> { <nl> this . lastSystemTime = Minecraft . getSystemTime ( ) ; <nl> - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 20 ) ; <nl> + this . healthUpdateCounter = ( long ) ( this . updateCounter + 20 ) ; <nl> } <nl> - else if ( health > this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) <nl> + else if ( health > this . playerHealth & & player . hurtResistantTime > 0 ) <nl> { <nl> this . lastSystemTime = Minecraft . getSystemTime ( ) ; <nl> - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 10 ) ; <nl> + this . healthUpdateCounter = ( long ) ( this . updateCounter + 10 ) ; <nl> } <nl> <nl> if ( Minecraft . getSystemTime ( ) - this . lastSystemTime > 1000L ) <nl> { <nl> - this . field _ 175194 _ C = health ; <nl> - this . field _ 175189 _ D = health ; <nl> + this . playerHealth = health ; <nl> + this . lastPlayerHealth = health ; <nl> this . lastSystemTime = Minecraft . getSystemTime ( ) ; <nl> } <nl> <nl> - this . field _ 175194 _ C = health ; <nl> - int healthLast = this . field _ 175189 _ D ; <nl> + this . playerHealth = health ; <nl> + int healthLast = this . lastPlayerHealth ; <nl> <nl> IAttributeInstance attrMaxHealth = player . getEntityAttribute ( SharedMonsterAttributes . maxHealth ) ; <nl> float healthMax = ( float ) attrMaxHealth . getAttributeValue ( ) ; <nl> @ @ - 748 , 11 + 748 , 11 @ @ public class GuiIngameForge extends GuiIngame <nl> GlStateManager . pushMatrix ( ) ; <nl> GlStateManager . scale ( 4 . 0F , 4 . 0F , 4 . 0F ) ; <nl> int l = opacity < < 24 & - 16777216 ; <nl> - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; <nl> + this . getFontRenderer ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; <nl> GlStateManager . popMatrix ( ) ; <nl> GlStateManager . pushMatrix ( ) ; <nl> GlStateManager . scale ( 2 . 0F , 2 . 0F , 2 . 0F ) ; <nl> - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; <nl> + this . getFontRenderer ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; <nl> GlStateManager . popMatrix ( ) ; <nl> GlStateManager . disableBlend ( ) ; <nl> GlStateManager . popMatrix ( ) ; <nl> @ @ - 784 , 16 + 784 , 16 @ @ public class GuiIngameForge extends GuiIngame <nl> ScoreObjective scoreobjective = this . mc . theWorld . getScoreboard ( ) . getObjectiveInDisplaySlot ( 0 ) ; <nl> NetHandlerPlayClient handler = mc . thePlayer . sendQueue ; <nl> <nl> - if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . func _ 175106 _ d ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) <nl> + if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . getPlayerInfoMap ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) <nl> { <nl> - this . overlayPlayerList . func _ 175246 _ a ( true ) ; <nl> + this . overlayPlayerList . updatePlayerList ( true ) ; <nl> if ( pre ( PLAYER _ LIST ) ) return ; <nl> - this . overlayPlayerList . func _ 175249 _ a ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; <nl> + this . overlayPlayerList . renderPlayerlist ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; <nl> post ( PLAYER _ LIST ) ; <nl> } <nl> else <nl> { <nl> - this . overlayPlayerList . func _ 175246 _ a ( false ) ; <nl> + this . overlayPlayerList . updatePlayerList ( false ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> index b5ced65 . . 462a307 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java <nl> @ @ - 50 , 7 + 50 , 7 @ @ public class ForgeBlockStateV1 extends Marker <nl> { <nl> JsonObject json = element . getAsJsonObject ( ) ; <nl> ForgeBlockStateV1 ret = new ForgeBlockStateV1 ( ) ; <nl> - ret . forge _ marker = JsonUtils . getJsonObjectIntegerFieldValue ( json , " forge _ marker " ) ; <nl> + ret . forge _ marker = JsonUtils . getInt ( json , " forge _ marker " ) ; <nl> <nl> if ( json . has ( " defaults " ) ) / / Load defaults Variant . <nl> { <nl> @ @ - 146 , 13 + 146 , 13 @ @ public class ForgeBlockStateV1 extends Marker <nl> part . state = state ; <nl> } <nl> } <nl> - <nl> + <nl> Iterator < List < Variant > > iter = v . submodels . values ( ) . iterator ( ) ; <nl> - <nl> + <nl> while ( iter . hasNext ( ) ) <nl> { <nl> List < Variant > submodel = iter . next ( ) ; <nl> - <nl> + <nl> if ( submodel = = null ) <nl> iter . remove ( ) ; <nl> } <nl> @ @ - 430 , 7 + 430 , 7 @ @ public class ForgeBlockStateV1 extends Marker <nl> if ( json . get ( " model " ) . isJsonNull ( ) ) <nl> ret . model = null ; / / Allow overriding base model to remove it from a state . <nl> else <nl> - ret . model = getBlockLocation ( JsonUtils . getJsonObjectStringFieldValue ( json , " model " ) ) ; <nl> + ret . model = getBlockLocation ( JsonUtils . getString ( json , " model " ) ) ; <nl> ret . modelSet = true ; <nl> } <nl> <nl> @ @ - 447 , 8 + 447 , 8 @ @ public class ForgeBlockStateV1 extends Marker <nl> <nl> if ( json . has ( " x " ) | | json . has ( " y " ) ) <nl> { / / Load rotation values . <nl> - int x = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " x " , 0 ) ; <nl> - int y = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " y " , 0 ) ; <nl> + int x = JsonUtils . getInt ( json , " x " , 0 ) ; <nl> + int y = JsonUtils . getInt ( json , " y " , 0 ) ; <nl> ret . state = Optional . < IModelState > of ( new TRSRTransformation ( ModelRotation . getModelRotation ( x , y ) ) ) ; <nl> if ( ! ret . state . isPresent ( ) ) <nl> throw new JsonParseException ( " Invalid BlockModelRotation x : " + x + " y : " + y ) ; <nl> @ @ - 589 , 12 + 589 , 12 @ @ public class ForgeBlockStateV1 extends Marker <nl> <nl> if ( json . has ( " uvlock " ) ) <nl> { / / Load uvlock . <nl> - ret . uvLock = Optional . of ( JsonUtils . getJsonObjectBooleanFieldValue ( json , " uvlock " ) ) ; <nl> + ret . uvLock = Optional . of ( JsonUtils . getBoolean ( json , " uvlock " ) ) ; <nl> } <nl> <nl> if ( json . has ( " weight " ) ) <nl> { / / Load weight . <nl> - ret . weight = Optional . of ( JsonUtils . getJsonObjectIntegerFieldValue ( json , " weight " ) ) ; <nl> + ret . weight = Optional . of ( JsonUtils . getInt ( json , " weight " ) ) ; <nl> } <nl> <nl> if ( json . has ( " submodel " ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / ChestGenHooks . java b / src / main / java / net / minecraftforge / common / ChestGenHooks . java <nl> index 55fd8e0 . . 61c0244 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ChestGenHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ChestGenHooks . java <nl> @ @ - 234 , 7 + 234 , 7 @ @ public class ChestGenHooks <nl> public ItemStack getOneItem ( Random rand ) <nl> { <nl> WeightedRandomChestContent item = ( WeightedRandomChestContent ) WeightedRandom . getRandomItem ( rand , getItems ( rand ) ) ; <nl> - ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . theMinimumChanceToGenerateItem , item . theMaximumChanceToGenerateItem ) ; <nl> + ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . minStackSize , item . maxStackSize ) ; <nl> return ( stacks . length > 0 ? stacks [ 0 ] : null ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 429a859 . . aab0aca 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 670 , 7 + 670 , 7 @ @ public class ForgeHooks <nl> if ( world . getTileEntity ( pos ) = = null ) <nl> { <nl> S23PacketBlockChange packet = new S23PacketBlockChange ( world , pos ) ; <nl> - packet . field _ 148883 _ d = Blocks . air . getDefaultState ( ) ; <nl> + packet . blockState = Blocks . air . getDefaultState ( ) ; <nl> entityPlayer . playerNetServerHandler . sendPacket ( packet ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayer . java b / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> index 2607377 . . 3cbb21e 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / FakePlayer . java <nl> @ @ - 23 , 7 + 23 , 7 @ @ public class FakePlayer extends EntityPlayerMP <nl> } <nl> <nl> @ Override public Vec3 getPositionVector ( ) { return new Vec3 ( 0 , 0 , 0 ) ; } <nl> - @ Override public boolean canUseCommand ( int i , String s ) { return false ; } <nl> + @ Override public boolean canCommandSenderUseCommand ( int i , String s ) { return false ; } <nl> @ Override public void addChatComponentMessage ( IChatComponent chatmessagecomponent ) { } <nl> @ Override public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> @ Override public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java <nl> index fc14d7d . . 167c097 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class ExplosionEvent extends Event <nl> / * * return the list of blocks affected by the explosion . * / <nl> public List < BlockPos > getAffectedBlocks ( ) <nl> { <nl> - return explosion . func _ 180343 _ e ( ) ; <nl> + return explosion . getAffectedBlockPositions ( ) ; <nl> } <nl> <nl> / * * return the list of entities affected by the explosion . * / <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiModList . java b / src / main / java / net / minecraftforge / fml / client / GuiModList . java <nl> index 8cb8efc . . 2792b7b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / GuiModList . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / GuiModList . java <nl> @ @ - 579 , 7 + 579 , 7 @ @ public class GuiModList extends GuiScreen <nl> k + = GuiModList . this . fontRendererObj . getStringWidth ( ( ( ChatComponentText ) part ) . getChatComponentText _ TextValue ( ) ) ; <nl> if ( k > = x ) <nl> { <nl> - GuiModList . this . func _ 175276 _ a ( part ) ; <nl> + GuiModList . this . handleComponentClick ( part ) ; <nl> break ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> index 657bb22 . . 2851281 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> @ @ - 90 , 7 + 90 , 7 @ @ public class FMLNetworkHandler <nl> embeddedChannel . writeOutbound ( openGui ) ; <nl> entityPlayerMP . openContainer = remoteGuiContainer ; <nl> entityPlayerMP . openContainer . windowId = windowId ; <nl> - entityPlayerMP . openContainer . addCraftingToCrafters ( entityPlayerMP ) ; <nl> + entityPlayerMP . openContainer . onCraftGuiOpened ( entityPlayerMP ) ; <nl> } <nl> } <nl> else if ( entityPlayer instanceof FakePlayer ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 81a3c91 . . da5139d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 456 , 7 + 456 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> <nl> for ( I thing : this . typeSafeIterable ( ) ) <nl> { <nl> - if ( ! registry . field _ 148758 _ b . containsKey ( thing ) ) <nl> + if ( ! registry . inverseObjectRegistry . containsKey ( thing ) ) <nl> { <nl> if ( ! registry . activeSubstitutions . containsKey ( getNameForObject ( thing ) . toString ( ) ) ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> index f222b1b . . 8116b20 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> @ @ - 506 , 7 + 506 , 7 @ @ public class GameRegistry <nl> NBTBase nbttag = null ; <nl> try <nl> { <nl> - nbttag = JsonToNBT . func _ 180713 _ a ( nbtString ) ; <nl> + nbttag = JsonToNBT . getTagFromJson ( nbtString ) ; <nl> } catch ( NBTException e ) <nl> { <nl> FMLLog . getLogger ( ) . log ( Level . WARN , " Encountered an exception parsing ItemStack NBT string { } " , nbtString , e ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index be2f2d6 . . 252e94d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 180 , 7 + 180 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> for ( Iterator < ServerCommand > it = GenericIterableFactory . newCastingIterable ( dedServer . pendingCommandList , ServerCommand . class ) . iterator ( ) ; it . hasNext ( ) ; ) <nl> { <nl> - String cmd = it . next ( ) . input . trim ( ) . toLowerCase ( ) ; <nl> + String cmd = it . next ( ) . command . trim ( ) . toLowerCase ( ) ; <nl> <nl> if ( cmd . equals ( " / fml confirm " ) ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> index 163bc34 . . a940bd8 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> } <nl> <nl> @ Override <nl> - public String getName ( ) <nl> + public String getCommandName ( ) <nl> { <nl> return " forge " ; <nl> } <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> return 2 ; <nl> } <nl> @ Override <nl> - public void execute ( ICommandSender sender , String [ ] args ) throws CommandException <nl> + public void processCommand ( ICommandSender sender , String [ ] args ) throws CommandException <nl> { <nl> if ( args . length = = 0 ) <nl> { <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> else if ( args . length = = 2 ) <nl> { <nl> if ( " tps " . equals ( args [ 0 ] ) ) { <nl> - return func _ 175762 _ a ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; <nl> + return getListOfStringsMatchingLastWord ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; <nl> } <nl> else if ( " track " . equals ( args [ 0 ] ) ) <nl> { <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class ForgeCommand extends CommandBase { <nl> } <nl> return null ; <nl> } <nl> - <nl> + <nl> private void handleTracking ( ICommandSender sender , String [ ] args ) throws CommandException <nl> { <nl> if ( args . length ! = 3 ) <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> index 4dfa7b4 . . 1ad6504 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import net . minecraftforge . fml . relauncher . SideOnly ; <nl> public class ForgeBlockStatesLoaderDebug { <nl> public static final String MODID = " ForgeBlockStatesLoader " ; <nl> public static final String ASSETS = " forgeblockstatesloader : " ; <nl> - <nl> + <nl> public static final Block blockCustom = new CustomMappedBlock ( ) ; <nl> public static final String nameCustomWall = " custom _ wall " ; <nl> public static final BlockWall blockCustomWall = new BlockWall ( Blocks . cobblestone ) ; <nl> @ @ - 48 , 42 + 48 , 42 @ @ public class ForgeBlockStatesLoaderDebug { <nl> return BlockWall . EnumType . byMetadata ( stack . getMetadata ( ) ) . getUnlocalizedName ( ) ; <nl> } <nl> } ) ; <nl> - <nl> + <nl> @ EventHandler <nl> public void preInit ( FMLPreInitializationEvent event ) <nl> - { <nl> + { <nl> 	 blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) ; <nl> 	 GameRegistry . registerBlock ( blockCustom , " customBlock " ) ; <nl> - 	 <nl> + <nl> blockCustomWall . setUnlocalizedName ( MODID + " . customWall " ) ; <nl> GameRegistry . registerBlock ( blockCustomWall , null , nameCustomWall ) ; <nl> GameRegistry . registerItem ( itemCustomWall , nameCustomWall ) ; <nl> GameData . getBlockItemMap ( ) . put ( blockCustomWall , itemCustomWall ) ; <nl> - <nl> + <nl> if ( event . getSide ( ) = = Side . CLIENT ) <nl> preInitClient ( event ) ; <nl> } <nl> - <nl> + <nl> @ SideOnly ( Side . CLIENT ) <nl> public void preInitClient ( FMLPreInitializationEvent event ) <nl> { <nl> - 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . setProperty ( CustomMappedBlock . VARIANT ) . build ( ) ) ; <nl> - 	 <nl> + 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; <nl> + <nl> ModelLoader . setCustomStateMapper ( blockCustomWall , new IStateMapper ( ) <nl> { <nl> - StateMap stateMap = new StateMap . Builder ( ) . setProperty ( BlockWall . VARIANT ) . setBuilderSuffix ( " _ wall " ) . build ( ) ; <nl> + StateMap stateMap = new StateMap . Builder ( ) . withName ( BlockWall . VARIANT ) . withSuffix ( " _ wall " ) . build ( ) ; <nl> @ Override <nl> public Map putStateModelLocations ( Block block ) <nl> { <nl> Map < IBlockState , ModelResourceLocation > map = ( Map < IBlockState , ModelResourceLocation > ) stateMap . putStateModelLocations ( block ) ; <nl> Map < IBlockState , ModelResourceLocation > newMap = Maps . newHashMap ( ) ; <nl> - <nl> + <nl> for ( Entry < IBlockState , ModelResourceLocation > e : map . entrySet ( ) ) <nl> { <nl> ModelResourceLocation loc = e . getValue ( ) ; <nl> newMap . put ( e . getKey ( ) , new ModelResourceLocation ( ASSETS + loc . getResourcePath ( ) , loc . getVariant ( ) ) ) ; <nl> } <nl> - <nl> + <nl> return newMap ; <nl> } <nl> } ) ; <nl> @ @ - 92 , 41 + 92 , 41 @ @ public class ForgeBlockStatesLoaderDebug { <nl> ModelLoader . setCustomModelResourceLocation ( customWallItem , 1 , new ModelResourceLocation ( ASSETS + " mossy _ cobblestone _ wall " , " inventory " ) ) ; <nl> ModelBakery . addVariantName ( customWallItem , ASSETS + " cobblestone _ wall " , ASSETS + " mossy _ cobblestone _ wall " ) ; <nl> } <nl> - <nl> + <nl> / / this block is never actually used , it ' s only needed for the error message on load to see the variant it maps to <nl> public static class CustomMappedBlock extends Block { <nl> 	 public static final PropertyEnum VARIANT = PropertyEnum . create ( " type " , CustomVariant . class ) ; <nl> - 	 <nl> + <nl> 	 	 protected CustomMappedBlock ( ) { <nl> 	 	 	 super ( Material . rock ) ; <nl> - 	 	 	 <nl> + <nl> 	 	 	 this . setUnlocalizedName ( MODID + " . customMappedBlock " ) ; <nl> 	 	 } <nl> - 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 protected BlockState createBlockState ( ) { <nl> 	 	 	 return new BlockState ( this , VARIANT ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 public int getMetaFromState ( IBlockState state ) <nl> 	 	 { <nl> 	 	 return ( ( CustomVariant ) state . getValue ( VARIANT ) ) . ordinal ( ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 public IBlockState getStateFromMeta ( int meta ) <nl> 	 	 { <nl> 	 	 if ( meta > CustomVariant . values ( ) . length | | meta < 0 ) <nl> 	 	 meta = 0 ; <nl> - 	 	 <nl> + <nl> 	 	 return this . getDefaultState ( ) . withProperty ( VARIANT , CustomVariant . values ( ) [ meta ] ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 public static enum CustomVariant implements IStringSerializable { <nl> 	 	 	 TypeA , <nl> 	 	 	 TypeB ; <nl> - 	 	 	 <nl> + <nl> 	 	 	 public String getName ( ) { return this . toString ( ) ; } ; <nl> 	 	 } <nl> }

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 6c22886 . . b5b1348 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 261 , 7 + 261 , 7 @ @ project ( ' : forge ' ) { 
 installer ' cpw . mods : modlauncher : 0 . 6 . 0 ' 
 installer ' net . minecraftforge : accesstransformers : 0 . 14 . + : shadowed ' 
 installer ' net . minecraftforge : eventbus : 0 . 6 . + : service ' 
 - installer ' net . minecraftforge : forgespi : 0 . 2 . + ' 
 + installer ' net . minecraftforge : forgespi : 0 . 4 . + ' 
 installer ' net . minecraftforge : coremods : 0 . 2 . + ' 
 installer ' com . electronwill . night - config : core : 3 . 4 . 2 ' 
 installer ' com . electronwill . night - config : toml : 3 . 4 . 2 ' 
 diff - - git a / mods . toml b / mods . toml 
 index 38978c6 . . a7b3d90 100644 
 - - - a / mods . toml 
 + + + b / mods . toml 
 @ @ - 25 , 13 + 25 , 16 @ @ key = " value " 
 This is my mod , there may be 
 others , but this one is mine 
 ' ' ' 
 + # Override the default resourcelocation namespace with this instead 
 + # Currently not implemented 
 + namespace = " invsorter " 
 # A random extra property for a mod loader 
 randomExtraProperty = " somevalue " 
 # Arbitrary key - value pairs 
 - [ inventorysorter . properties ] 
 + [ modproperties . inventorysorter ] 
 key = " value " 
 # A list of dependencies 
 - [ [ inventorysorter . dependencies ] ] 
 + [ [ dependencies . inventorysorter ] ] 
 # the modid of the dependency 
 modid = " forge " 
 # Does this dependency have to exist - if not , ordering below must be specified 
 @ @ - 43 , 7 + 46 , 7 @ @ key = " value " 
 # Side this dependency is applied on - BOTH , CLIENT or SERVER 
 side = " BOTH " 
 # Here ' s another dependency 
 - [ [ inventorysorter . dependencies ] ] 
 + [ [ dependencies . inventorysorter ] ] 
 modid = " minecraft " 
 mandatory = true 
 versionRange = " [ 1 . 12 . 2 ] " 
 diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java 
 index c72ad45 . . 165d6b0 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModFileInfo . java 
 @ @ - 98 , 6 + 98 , 11 @ @ public class ModFileInfo implements IModFileInfo 
 return modLoaderVersion ; 
 } 
 
 + @ Override 
 + public Map < String , Object > getFileProperties ( ) { 
 + return this . properties ; 
 + } 
 + 
 public Optional < Manifest > getManifest ( ) { 
 return modFile . getLocator ( ) . findManifest ( modFile . getFilePath ( ) ) ; 
 } 
 diff - - git a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java 
 index 6030b56 . . 4fa2b15 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / fml / loading / moddiscovery / ModInfo . java 
 @ @ - 28 , 16 + 28 , 23 @ @ import java . util . Collections ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Optional ; 
 + import java . util . regex . Pattern ; 
 import java . util . stream . Collectors ; 
 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 import org . apache . maven . artifact . versioning . ArtifactVersion ; 
 import org . apache . maven . artifact . versioning . DefaultArtifactVersion ; 
 
 public class ModInfo implements IModInfo 
 { 
 + private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 private static final DefaultArtifactVersion DEFAULT _ VERSION = new DefaultArtifactVersion ( " 1 " ) ; 
 + private static final Pattern VALID _ LABEL = Pattern . compile ( " ^ [ a - z ] [ a - z0 - 9 _ - ] { 1 , 63 } $ " ) ; 
 + 
 private final ModFileInfo owningFile ; 
 private final String modId ; 
 + private final String namespace ; 
 private final ArtifactVersion version ; 
 private final String displayName ; 
 private final String description ; 
 @ @ - 50 , 6 + 57 , 15 @ @ public class ModInfo implements IModInfo 
 this . owningFile = owningFile ; 
 this . modConfig = modConfig ; 
 this . modId = modConfig . < String > getOptional ( " modId " ) . orElseThrow ( ( ) - > new InvalidModFileException ( " Missing modId entry " , owningFile ) ) ; 
 + if ( ! VALID _ LABEL . matcher ( this . modId ) . matches ( ) ) { 
 + LOGGER . fatal ( " Invalid modId found in file { } - { } does not match the standard : { } " , this . owningFile . getFile ( ) . getFilePath ( ) , this . modId , VALID _ LABEL . pattern ( ) ) ; 
 + throw new InvalidModFileException ( " Invalid modId found : " + this . modId , owningFile ) ; 
 + } 
 + this . namespace = modConfig . < String > getOptional ( " namespace " ) . orElse ( this . modId ) ; 
 + if ( ! VALID _ LABEL . matcher ( this . namespace ) . matches ( ) ) { 
 + LOGGER . fatal ( " Invalid override namespace found in file { } - { } does not match the standard : { } " , this . owningFile . getFile ( ) . getFilePath ( ) , this . namespace , VALID _ LABEL . pattern ( ) ) ; 
 + throw new InvalidModFileException ( " Invalid override namespace found : " + this . namespace , owningFile ) ; 
 + } 
 this . version = modConfig . < String > getOptional ( " version " ) . 
 map ( s - > StringSubstitutor . replace ( s , owningFile ! = null ? owningFile . getFile ( ) : null ) ) . 
 map ( DefaultArtifactVersion : : new ) . orElse ( DEFAULT _ VERSION ) ; 
 @ @ - 102 , 6 + 118 , 16 @ @ public class ModInfo implements IModInfo 
 return this . modConfig ; 
 } 
 
 + @ Override 
 + public String getNamespace ( ) { 
 + return this . namespace ; 
 + } 
 + 
 + @ Override 
 + public Map < String , Object > getModProperties ( ) { 
 + return this . properties ; 
 + } 
 + 
 public Optional < String > getLogoFile ( ) 
 { 
 return this . owningFile ! = null ? this . owningFile . getConfig ( ) . getOptional ( " logoFile " ) : this . modConfig . getOptional ( " logoFile " ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / ModContainer . java b / src / main / java / net / minecraftforge / fml / ModContainer . java 
 index 09f18db . . 128107c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / ModContainer . java 
 + + + b / src / main / java / net / minecraftforge / fml / ModContainer . java 
 @ @ - 29 , 7 + 29 , 6 @ @ import java . util . Map ; 
 import java . util . Optional ; 
 import java . util . function . Consumer ; 
 import java . util . function . Supplier ; 
 - import java . util . regex . Pattern ; 
 
 / * * 
 * The container that wraps around mods in the system . 
 @ @ - 46 , 8 + 45 , 8 @ @ import java . util . regex . Pattern ; 
 
 public abstract class ModContainer 
 { 
 - private static final Pattern VALID _ MODIDS = Pattern . compile ( " ^ [ a - z0 - 9 _ - ] { 3 , 64 } $ " ) ; 
 protected final String modId ; 
 + protected final String namespace ; 
 protected final IModInfo modInfo ; 
 protected ModLoadingStage modLoadingStage ; 
 protected final Map < ModLoadingStage , Consumer < LifecycleEventProvider . LifecycleEvent > > triggerMap ; 
 @ @ - 55 , 9 + 54 , 9 @ @ public abstract class ModContainer 
 
 public ModContainer ( IModInfo info ) 
 { 
 - if ( ! VALID _ MODIDS . matcher ( info . getModId ( ) ) . matches ( ) ) 
 - throw new IllegalArgumentException ( " Invalid modid " + info . getModId ( ) + " ! Mod ids need to be lowercase alphanumeric characters or ' - ' / ' _ ' and need to be between 3 and 64 chars long . " ) ; 
 this . modId = info . getModId ( ) ; 
 + / / TODO : Currently not reading namespace from configuration . . 
 + this . namespace = this . modId ; 
 this . modInfo = info ; 
 this . triggerMap = new HashMap < > ( ) ; 
 this . modLoadingStage = ModLoadingStage . CONSTRUCT ; 
 @ @ - 74 , 9 + 73 , 9 @ @ public abstract class ModContainer 
 / * * 
 * @ return the resource prefix for the mod 
 * / 
 - public final String getPrefix ( ) 
 + public final String getNamespace ( ) 
 { 
 - return modId ; 
 + return namespace ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 index ba0a1ac . . e11720e 100644 
 - - - a / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 + + + b / src / main / java / net / minecraftforge / registries / ForgeRegistry . java 
 @ @ - 276 , 7 + 276 , 7 @ @ public class ForgeRegistry < V extends IForgeRegistryEntry < V > > implements IForgeRe 
 
 int add ( int id , V value ) 
 { 
 - final String owner = ModThreadContext . get ( ) . getActiveContainer ( ) . getPrefix ( ) ; 
 + final String owner = ModThreadContext . get ( ) . getActiveContainer ( ) . getNamespace ( ) ; 
 return add ( id , value , owner ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java 
 index 91b4d47 . . 9519fb3 100644 
 - - - a / src / main / java / net / minecraftforge / registries / GameData . java 
 + + + b / src / main / java / net / minecraftforge / registries / GameData . java 
 @ @ - 56 , 7 + 56 , 6 @ @ import org . apache . logging . log4j . MarkerManager ; 
 import javax . annotation . Nullable ; 
 import java . lang . reflect . Field ; 
 import java . util . Collection ; 
 - import java . util . Collections ; 
 import java . util . LinkedHashMap ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 821 , 7 + 820 , 7 @ @ public class GameData 
 int index = name . lastIndexOf ( ' : ' ) ; 
 String oldPrefix = index = = - 1 ? " " : name . substring ( 0 , index ) . toLowerCase ( Locale . ROOT ) ; 
 name = index = = - 1 ? name : name . substring ( index + 1 ) ; 
 - String prefix = ModThreadContext . get ( ) . getActiveContainer ( ) . getPrefix ( ) ; 
 + String prefix = ModThreadContext . get ( ) . getActiveContainer ( ) . getNamespace ( ) ; 
 if ( ! oldPrefix . equals ( prefix ) & & oldPrefix . length ( ) > 0 ) 
 { 
 LogManager . getLogger ( ) . info ( " Potentially Dangerous alternative prefix ` { } ` for name ` { } ` , expected ` { } ` . This could be a intended override , but in most cases indicates a broken mod . " , oldPrefix , name , prefix ) ;

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index f6acdc6 . . e8c7fbf 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 28 , 7 + 28 , 7 @ @ apply plugin : " net . minecraftforge . gradle . launch4j " 
 minecraft { 
 version = " 1 . 8 . 8 " 
 / / mappings = ' stable _ 16 ' 
 - mappings = " snapshot _ nodoc _ 20141130 " 
 + mappings = " snapshot _ nodoc _ 20151122 " 
 workspaceDir = " projects " 
 versionJson = " jsons / 1 . 8 . 8 - dev . json " 
 buildUserdev = true 
 diff - - git a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 index 4978616 . . 455c764 100644 
 - - - a / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 + + + b / src / main / java / net / minecraftforge / client / ClientCommandHandler . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class ClientCommandHandler extends CommandHandler 
 return 0 ; 
 } 
 
 - if ( icommand . canCommandSenderUse ( sender ) ) 
 + if ( icommand . canCommandSenderUseCommand ( sender ) ) 
 { 
 CommandEvent event = new CommandEvent ( icommand , sender , args ) ; 
 if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 @ @ - 69 , 7 + 69 , 7 @ @ public class ClientCommandHandler extends CommandHandler 
 return 0 ; 
 } 
 
 - icommand . execute ( sender , args ) ; 
 + icommand . processCommand ( sender , args ) ; 
 return 1 ; 
 } 
 else 
 diff - - git a / src / main / java / net / minecraftforge / client / GuiIngameForge . java b / src / main / java / net / minecraftforge / client / GuiIngameForge . java 
 index 5c3adae . . a41ecdf 100644 
 - - - a / src / main / java / net / minecraftforge / client / GuiIngameForge . java 
 + + + b / src / main / java / net / minecraftforge / client / GuiIngameForge . java 
 @ @ - 113 , 7 + 113 , 7 @ @ public class GuiIngameForge extends GuiIngame 
 
 if ( Minecraft . isFancyGraphicsEnabled ( ) ) 
 { 
 - func _ 180480 _ a ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; 
 + renderVignette ( mc . thePlayer . getBrightness ( partialTicks ) , res ) ; 
 } 
 else 
 { 
 @ @ - 163 , 16 + 163 , 16 @ @ public class GuiIngameForge extends GuiIngame 
 
 Scoreboard scoreboard = this . mc . theWorld . getScoreboard ( ) ; 
 ScoreObjective objective = null ; 
 - ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getName ( ) ) ; 
 + ScorePlayerTeam scoreplayerteam = scoreboard . getPlayersTeam ( mc . thePlayer . getCommandSenderName ( ) ) ; 
 if ( scoreplayerteam ! = null ) 
 { 
 - int slot = scoreplayerteam . func _ 178775 _ l ( ) . getColorIndex ( ) ; 
 + int slot = scoreplayerteam . getChatFormat ( ) . getColorIndex ( ) ; 
 if ( slot > = 0 ) objective = scoreboard . getObjectiveInDisplaySlot ( 3 + slot ) ; 
 } 
 ScoreObjective scoreobjective1 = objective ! = null ? objective : scoreboard . getObjectiveInDisplaySlot ( 1 ) ; 
 if ( renderObjective & & scoreobjective1 ! = null ) 
 { 
 - this . func _ 180475 _ a ( scoreobjective1 , res ) ; 
 + this . renderScoreboard ( scoreobjective1 , res ) ; 
 } 
 
 GlStateManager . enableBlend ( ) ; 
 @ @ - 234 , 7 + 234 , 7 @ @ public class GuiIngameForge extends GuiIngame 
 { 
 if ( itemstack . getItem ( ) = = Item . getItemFromBlock ( Blocks . pumpkin ) ) 
 { 
 - func _ 180476 _ e ( res ) ; 
 + renderPumpkinOverlay ( res ) ; 
 } 
 else 
 { 
 @ @ - 345 , 28 + 345 , 28 @ @ public class GuiIngameForge extends GuiIngame 
 
 EntityPlayer player = ( EntityPlayer ) this . mc . getRenderViewEntity ( ) ; 
 int health = MathHelper . ceiling _ float _ int ( player . getHealth ( ) ) ; 
 - boolean highlight = field _ 175191 _ F > ( long ) updateCounter & & ( field _ 175191 _ F - ( long ) updateCounter ) / 3L % 2L = = 1L ; 
 + boolean highlight = healthUpdateCounter > ( long ) updateCounter & & ( healthUpdateCounter - ( long ) updateCounter ) / 3L % 2L = = 1L ; 
 
 - if ( health < this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) 
 + if ( health < this . playerHealth & & player . hurtResistantTime > 0 ) 
 { 
 this . lastSystemTime = Minecraft . getSystemTime ( ) ; 
 - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 20 ) ; 
 + this . healthUpdateCounter = ( long ) ( this . updateCounter + 20 ) ; 
 } 
 - else if ( health > this . field _ 175194 _ C & & player . hurtResistantTime > 0 ) 
 + else if ( health > this . playerHealth & & player . hurtResistantTime > 0 ) 
 { 
 this . lastSystemTime = Minecraft . getSystemTime ( ) ; 
 - this . field _ 175191 _ F = ( long ) ( this . updateCounter + 10 ) ; 
 + this . healthUpdateCounter = ( long ) ( this . updateCounter + 10 ) ; 
 } 
 
 if ( Minecraft . getSystemTime ( ) - this . lastSystemTime > 1000L ) 
 { 
 - this . field _ 175194 _ C = health ; 
 - this . field _ 175189 _ D = health ; 
 + this . playerHealth = health ; 
 + this . lastPlayerHealth = health ; 
 this . lastSystemTime = Minecraft . getSystemTime ( ) ; 
 } 
 
 - this . field _ 175194 _ C = health ; 
 - int healthLast = this . field _ 175189 _ D ; 
 + this . playerHealth = health ; 
 + int healthLast = this . lastPlayerHealth ; 
 
 IAttributeInstance attrMaxHealth = player . getEntityAttribute ( SharedMonsterAttributes . maxHealth ) ; 
 float healthMax = ( float ) attrMaxHealth . getAttributeValue ( ) ; 
 @ @ - 748 , 11 + 748 , 11 @ @ public class GuiIngameForge extends GuiIngame 
 GlStateManager . pushMatrix ( ) ; 
 GlStateManager . scale ( 4 . 0F , 4 . 0F , 4 . 0F ) ; 
 int l = opacity < < 24 & - 16777216 ; 
 - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; 
 + this . getFontRenderer ( ) . drawString ( this . field _ 175201 _ x , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175201 _ x ) / 2 ) , - 10 . 0F , 16777215 | l , true ) ; 
 GlStateManager . popMatrix ( ) ; 
 GlStateManager . pushMatrix ( ) ; 
 GlStateManager . scale ( 2 . 0F , 2 . 0F , 2 . 0F ) ; 
 - this . func _ 175179 _ f ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . func _ 175179 _ f ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; 
 + this . getFontRenderer ( ) . drawString ( this . field _ 175200 _ y , ( float ) ( - this . getFontRenderer ( ) . getStringWidth ( this . field _ 175200 _ y ) / 2 ) , 5 . 0F , 16777215 | l , true ) ; 
 GlStateManager . popMatrix ( ) ; 
 GlStateManager . disableBlend ( ) ; 
 GlStateManager . popMatrix ( ) ; 
 @ @ - 784 , 16 + 784 , 16 @ @ public class GuiIngameForge extends GuiIngame 
 ScoreObjective scoreobjective = this . mc . theWorld . getScoreboard ( ) . getObjectiveInDisplaySlot ( 0 ) ; 
 NetHandlerPlayClient handler = mc . thePlayer . sendQueue ; 
 
 - if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . func _ 175106 _ d ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) 
 + if ( mc . gameSettings . keyBindPlayerList . isKeyDown ( ) & & ( ! mc . isIntegratedServerRunning ( ) | | handler . getPlayerInfoMap ( ) . size ( ) > 1 | | scoreobjective ! = null ) ) 
 { 
 - this . overlayPlayerList . func _ 175246 _ a ( true ) ; 
 + this . overlayPlayerList . updatePlayerList ( true ) ; 
 if ( pre ( PLAYER _ LIST ) ) return ; 
 - this . overlayPlayerList . func _ 175249 _ a ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; 
 + this . overlayPlayerList . renderPlayerlist ( width , this . mc . theWorld . getScoreboard ( ) , scoreobjective ) ; 
 post ( PLAYER _ LIST ) ; 
 } 
 else 
 { 
 - this . overlayPlayerList . func _ 175246 _ a ( false ) ; 
 + this . overlayPlayerList . updatePlayerList ( false ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 index b5ced65 . . 462a307 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ForgeBlockStateV1 . java 
 @ @ - 50 , 7 + 50 , 7 @ @ public class ForgeBlockStateV1 extends Marker 
 { 
 JsonObject json = element . getAsJsonObject ( ) ; 
 ForgeBlockStateV1 ret = new ForgeBlockStateV1 ( ) ; 
 - ret . forge _ marker = JsonUtils . getJsonObjectIntegerFieldValue ( json , " forge _ marker " ) ; 
 + ret . forge _ marker = JsonUtils . getInt ( json , " forge _ marker " ) ; 
 
 if ( json . has ( " defaults " ) ) / / Load defaults Variant . 
 { 
 @ @ - 146 , 13 + 146 , 13 @ @ public class ForgeBlockStateV1 extends Marker 
 part . state = state ; 
 } 
 } 
 - 
 + 
 Iterator < List < Variant > > iter = v . submodels . values ( ) . iterator ( ) ; 
 - 
 + 
 while ( iter . hasNext ( ) ) 
 { 
 List < Variant > submodel = iter . next ( ) ; 
 - 
 + 
 if ( submodel = = null ) 
 iter . remove ( ) ; 
 } 
 @ @ - 430 , 7 + 430 , 7 @ @ public class ForgeBlockStateV1 extends Marker 
 if ( json . get ( " model " ) . isJsonNull ( ) ) 
 ret . model = null ; / / Allow overriding base model to remove it from a state . 
 else 
 - ret . model = getBlockLocation ( JsonUtils . getJsonObjectStringFieldValue ( json , " model " ) ) ; 
 + ret . model = getBlockLocation ( JsonUtils . getString ( json , " model " ) ) ; 
 ret . modelSet = true ; 
 } 
 
 @ @ - 447 , 8 + 447 , 8 @ @ public class ForgeBlockStateV1 extends Marker 
 
 if ( json . has ( " x " ) | | json . has ( " y " ) ) 
 { / / Load rotation values . 
 - int x = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " x " , 0 ) ; 
 - int y = JsonUtils . getJsonObjectIntegerFieldValueOrDefault ( json , " y " , 0 ) ; 
 + int x = JsonUtils . getInt ( json , " x " , 0 ) ; 
 + int y = JsonUtils . getInt ( json , " y " , 0 ) ; 
 ret . state = Optional . < IModelState > of ( new TRSRTransformation ( ModelRotation . getModelRotation ( x , y ) ) ) ; 
 if ( ! ret . state . isPresent ( ) ) 
 throw new JsonParseException ( " Invalid BlockModelRotation x : " + x + " y : " + y ) ; 
 @ @ - 589 , 12 + 589 , 12 @ @ public class ForgeBlockStateV1 extends Marker 
 
 if ( json . has ( " uvlock " ) ) 
 { / / Load uvlock . 
 - ret . uvLock = Optional . of ( JsonUtils . getJsonObjectBooleanFieldValue ( json , " uvlock " ) ) ; 
 + ret . uvLock = Optional . of ( JsonUtils . getBoolean ( json , " uvlock " ) ) ; 
 } 
 
 if ( json . has ( " weight " ) ) 
 { / / Load weight . 
 - ret . weight = Optional . of ( JsonUtils . getJsonObjectIntegerFieldValue ( json , " weight " ) ) ; 
 + ret . weight = Optional . of ( JsonUtils . getInt ( json , " weight " ) ) ; 
 } 
 
 if ( json . has ( " submodel " ) ) 
 diff - - git a / src / main / java / net / minecraftforge / common / ChestGenHooks . java b / src / main / java / net / minecraftforge / common / ChestGenHooks . java 
 index 55fd8e0 . . 61c0244 100644 
 - - - a / src / main / java / net / minecraftforge / common / ChestGenHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ChestGenHooks . java 
 @ @ - 234 , 7 + 234 , 7 @ @ public class ChestGenHooks 
 public ItemStack getOneItem ( Random rand ) 
 { 
 WeightedRandomChestContent item = ( WeightedRandomChestContent ) WeightedRandom . getRandomItem ( rand , getItems ( rand ) ) ; 
 - ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . theMinimumChanceToGenerateItem , item . theMaximumChanceToGenerateItem ) ; 
 + ItemStack [ ] stacks = ChestGenHooks . generateStacks ( rand , item . theItemId , item . minStackSize , item . maxStackSize ) ; 
 return ( stacks . length > 0 ? stacks [ 0 ] : null ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 429a859 . . aab0aca 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 670 , 7 + 670 , 7 @ @ public class ForgeHooks 
 if ( world . getTileEntity ( pos ) = = null ) 
 { 
 S23PacketBlockChange packet = new S23PacketBlockChange ( world , pos ) ; 
 - packet . field _ 148883 _ d = Blocks . air . getDefaultState ( ) ; 
 + packet . blockState = Blocks . air . getDefaultState ( ) ; 
 entityPlayer . playerNetServerHandler . sendPacket ( packet ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / FakePlayer . java b / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 index 2607377 . . 3cbb21e 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / util / FakePlayer . java 
 @ @ - 23 , 7 + 23 , 7 @ @ public class FakePlayer extends EntityPlayerMP 
 } 
 
 @ Override public Vec3 getPositionVector ( ) { return new Vec3 ( 0 , 0 , 0 ) ; } 
 - @ Override public boolean canUseCommand ( int i , String s ) { return false ; } 
 + @ Override public boolean canCommandSenderUseCommand ( int i , String s ) { return false ; } 
 @ Override public void addChatComponentMessage ( IChatComponent chatmessagecomponent ) { } 
 @ Override public void addStat ( StatBase par1StatBase , int par2 ) { } 
 @ Override public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 diff - - git a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java 
 index fc14d7d . . 167c097 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / ExplosionEvent . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class ExplosionEvent extends Event 
 / * * return the list of blocks affected by the explosion . * / 
 public List < BlockPos > getAffectedBlocks ( ) 
 { 
 - return explosion . func _ 180343 _ e ( ) ; 
 + return explosion . getAffectedBlockPositions ( ) ; 
 } 
 
 / * * return the list of entities affected by the explosion . * / 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / GuiModList . java b / src / main / java / net / minecraftforge / fml / client / GuiModList . java 
 index 8cb8efc . . 2792b7b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / GuiModList . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / GuiModList . java 
 @ @ - 579 , 7 + 579 , 7 @ @ public class GuiModList extends GuiScreen 
 k + = GuiModList . this . fontRendererObj . getStringWidth ( ( ( ChatComponentText ) part ) . getChatComponentText _ TextValue ( ) ) ; 
 if ( k > = x ) 
 { 
 - GuiModList . this . func _ 175276 _ a ( part ) ; 
 + GuiModList . this . handleComponentClick ( part ) ; 
 break ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 index 657bb22 . . 2851281 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 @ @ - 90 , 7 + 90 , 7 @ @ public class FMLNetworkHandler 
 embeddedChannel . writeOutbound ( openGui ) ; 
 entityPlayerMP . openContainer = remoteGuiContainer ; 
 entityPlayerMP . openContainer . windowId = windowId ; 
 - entityPlayerMP . openContainer . addCraftingToCrafters ( entityPlayerMP ) ; 
 + entityPlayerMP . openContainer . onCraftGuiOpened ( entityPlayerMP ) ; 
 } 
 } 
 else if ( entityPlayer instanceof FakePlayer ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 81a3c91 . . da5139d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 456 , 7 + 456 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 
 for ( I thing : this . typeSafeIterable ( ) ) 
 { 
 - if ( ! registry . field _ 148758 _ b . containsKey ( thing ) ) 
 + if ( ! registry . inverseObjectRegistry . containsKey ( thing ) ) 
 { 
 if ( ! registry . activeSubstitutions . containsKey ( getNameForObject ( thing ) . toString ( ) ) ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 index f222b1b . . 8116b20 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 @ @ - 506 , 7 + 506 , 7 @ @ public class GameRegistry 
 NBTBase nbttag = null ; 
 try 
 { 
 - nbttag = JsonToNBT . func _ 180713 _ a ( nbtString ) ; 
 + nbttag = JsonToNBT . getTagFromJson ( nbtString ) ; 
 } catch ( NBTException e ) 
 { 
 FMLLog . getLogger ( ) . log ( Level . WARN , " Encountered an exception parsing ItemStack NBT string { } " , nbtString , e ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index be2f2d6 . . 252e94d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 180 , 7 + 180 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 for ( Iterator < ServerCommand > it = GenericIterableFactory . newCastingIterable ( dedServer . pendingCommandList , ServerCommand . class ) . iterator ( ) ; it . hasNext ( ) ; ) 
 { 
 - String cmd = it . next ( ) . input . trim ( ) . toLowerCase ( ) ; 
 + String cmd = it . next ( ) . command . trim ( ) . toLowerCase ( ) ; 
 
 if ( cmd . equals ( " / fml confirm " ) ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 index 163bc34 . . a940bd8 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 + + + b / src / main / java / net / minecraftforge / server / command / ForgeCommand . java 
 @ @ - 25 , 7 + 25 , 7 @ @ public class ForgeCommand extends CommandBase { 
 } 
 
 @ Override 
 - public String getName ( ) 
 + public String getCommandName ( ) 
 { 
 return " forge " ; 
 } 
 @ @ - 42 , 7 + 42 , 7 @ @ public class ForgeCommand extends CommandBase { 
 return 2 ; 
 } 
 @ Override 
 - public void execute ( ICommandSender sender , String [ ] args ) throws CommandException 
 + public void processCommand ( ICommandSender sender , String [ ] args ) throws CommandException 
 { 
 if ( args . length = = 0 ) 
 { 
 @ @ - 80 , 7 + 80 , 7 @ @ public class ForgeCommand extends CommandBase { 
 else if ( args . length = = 2 ) 
 { 
 if ( " tps " . equals ( args [ 0 ] ) ) { 
 - return func _ 175762 _ a ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; 
 + return getListOfStringsMatchingLastWord ( args , getServer ( ) . worldTickTimes . keySet ( ) ) ; 
 } 
 else if ( " track " . equals ( args [ 0 ] ) ) 
 { 
 @ @ - 89 , 7 + 89 , 7 @ @ public class ForgeCommand extends CommandBase { 
 } 
 return null ; 
 } 
 - 
 + 
 private void handleTracking ( ICommandSender sender , String [ ] args ) throws CommandException 
 { 
 if ( args . length ! = 3 ) 
 diff - - git a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 index 4dfa7b4 . . 1ad6504 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ForgeBlockStatesLoaderDebug . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import net . minecraftforge . fml . relauncher . SideOnly ; 
 public class ForgeBlockStatesLoaderDebug { 
 public static final String MODID = " ForgeBlockStatesLoader " ; 
 public static final String ASSETS = " forgeblockstatesloader : " ; 
 - 
 + 
 public static final Block blockCustom = new CustomMappedBlock ( ) ; 
 public static final String nameCustomWall = " custom _ wall " ; 
 public static final BlockWall blockCustomWall = new BlockWall ( Blocks . cobblestone ) ; 
 @ @ - 48 , 42 + 48 , 42 @ @ public class ForgeBlockStatesLoaderDebug { 
 return BlockWall . EnumType . byMetadata ( stack . getMetadata ( ) ) . getUnlocalizedName ( ) ; 
 } 
 } ) ; 
 - 
 + 
 @ EventHandler 
 public void preInit ( FMLPreInitializationEvent event ) 
 - { 
 + { 
 	 blockCustom . setUnlocalizedName ( MODID + " . customBlock " ) ; 
 	 GameRegistry . registerBlock ( blockCustom , " customBlock " ) ; 
 - 	 
 + 
 blockCustomWall . setUnlocalizedName ( MODID + " . customWall " ) ; 
 GameRegistry . registerBlock ( blockCustomWall , null , nameCustomWall ) ; 
 GameRegistry . registerItem ( itemCustomWall , nameCustomWall ) ; 
 GameData . getBlockItemMap ( ) . put ( blockCustomWall , itemCustomWall ) ; 
 - 
 + 
 if ( event . getSide ( ) = = Side . CLIENT ) 
 preInitClient ( event ) ; 
 } 
 - 
 + 
 @ SideOnly ( Side . CLIENT ) 
 public void preInitClient ( FMLPreInitializationEvent event ) 
 { 
 - 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . setProperty ( CustomMappedBlock . VARIANT ) . build ( ) ) ; 
 - 	 
 + 	 ModelLoader . setCustomStateMapper ( blockCustom , new StateMap . Builder ( ) . withName ( CustomMappedBlock . VARIANT ) . build ( ) ) ; 
 + 
 ModelLoader . setCustomStateMapper ( blockCustomWall , new IStateMapper ( ) 
 { 
 - StateMap stateMap = new StateMap . Builder ( ) . setProperty ( BlockWall . VARIANT ) . setBuilderSuffix ( " _ wall " ) . build ( ) ; 
 + StateMap stateMap = new StateMap . Builder ( ) . withName ( BlockWall . VARIANT ) . withSuffix ( " _ wall " ) . build ( ) ; 
 @ Override 
 public Map putStateModelLocations ( Block block ) 
 { 
 Map < IBlockState , ModelResourceLocation > map = ( Map < IBlockState , ModelResourceLocation > ) stateMap . putStateModelLocations ( block ) ; 
 Map < IBlockState , ModelResourceLocation > newMap = Maps . newHashMap ( ) ; 
 - 
 + 
 for ( Entry < IBlockState , ModelResourceLocation > e : map . entrySet ( ) ) 
 { 
 ModelResourceLocation loc = e . getValue ( ) ; 
 newMap . put ( e . getKey ( ) , new ModelResourceLocation ( ASSETS + loc . getResourcePath ( ) , loc . getVariant ( ) ) ) ; 
 } 
 - 
 + 
 return newMap ; 
 } 
 } ) ; 
 @ @ - 92 , 41 + 92 , 41 @ @ public class ForgeBlockStatesLoaderDebug { 
 ModelLoader . setCustomModelResourceLocation ( customWallItem , 1 , new ModelResourceLocation ( ASSETS + " mossy _ cobblestone _ wall " , " inventory " ) ) ; 
 ModelBakery . addVariantName ( customWallItem , ASSETS + " cobblestone _ wall " , ASSETS + " mossy _ cobblestone _ wall " ) ; 
 } 
 - 
 + 
 / / this block is never actually used , it ' s only needed for the error message on load to see the variant it maps to 
 public static class CustomMappedBlock extends Block { 
 	 public static final PropertyEnum VARIANT = PropertyEnum . create ( " type " , CustomVariant . class ) ; 
 - 	 
 + 
 	 	 protected CustomMappedBlock ( ) { 
 	 	 	 super ( Material . rock ) ; 
 - 	 	 	 
 + 
 	 	 	 this . setUnlocalizedName ( MODID + " . customMappedBlock " ) ; 
 	 	 } 
 - 	 
 + 
 	 	 @ Override 
 	 	 protected BlockState createBlockState ( ) { 
 	 	 	 return new BlockState ( this , VARIANT ) ; 
 	 	 } 
 - 	 	 
 + 
 	 	 @ Override 
 	 	 public int getMetaFromState ( IBlockState state ) 
 	 	 { 
 	 	 return ( ( CustomVariant ) state . getValue ( VARIANT ) ) . ordinal ( ) ; 
 	 	 } 
 - 	 	 
 + 
 	 	 @ Override 
 	 	 public IBlockState getStateFromMeta ( int meta ) 
 	 	 { 
 	 	 if ( meta > CustomVariant . values ( ) . length | | meta < 0 ) 
 	 	 meta = 0 ; 
 - 	 	 
 + 
 	 	 return this . getDefaultState ( ) . withProperty ( VARIANT , CustomVariant . values ( ) [ meta ] ) ; 
 	 	 } 
 - 	 	 
 + 
 	 	 public static enum CustomVariant implements IStringSerializable { 
 	 	 	 TypeA , 
 	 	 	 TypeB ; 
 - 	 	 	 
 + 
 	 	 	 public String getName ( ) { return this . toString ( ) ; } ; 
 	 	 } 
 }
