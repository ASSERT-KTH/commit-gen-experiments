BLEU SCORE: 0.024367494694068095

TEST MSG: Add redirects to PotionEffect to respect registry replacement
GENERATED MSG: [ 1 . 13 . x ] Fire InputEvents

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch b / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch <nl> index 5a7f260 . . 9a39cf0 100644 <nl> - - - a / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch <nl> + + + b / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch <nl> @ @ - 17 , 7 + 17 , 18 @ @ <nl> } <nl> <nl> public boolean func _ 199308 _ a ( PotionEffect p _ 199308 _ 1 _ ) { <nl> - @ @ - 188 , 11 + 191 , 12 @ @ <nl> + @ @ - 88 , 6 + 91 , 10 @ @ <nl> + } <nl> + <nl> + public Potion func _ 188419 _ a ( ) { <nl> + + return this . getPotionRaw ( ) = = null ? null : this . getPotionRaw ( ) . delegate . get ( ) ; <nl> + + } <nl> + + <nl> + + private Potion getPotionRaw ( ) { <nl> + return this . field _ 188420 _ b ; <nl> + } <nl> + <nl> + @ @ - 188 , 11 + 195 , 12 @ @ <nl> p _ 82719 _ 1 _ . func _ 74757 _ a ( " Ambient " , this . func _ 82720 _ e ( ) ) ; <nl> p _ 82719 _ 1 _ . func _ 74757 _ a ( " ShowParticles " , this . func _ 188418 _ e ( ) ) ; <nl> p _ 82719 _ 1 _ . func _ 74757 _ a ( " ShowIcon " , this . func _ 205348 _ f ( ) ) ; <nl> @ @ - 31 , 7 + 42 , 7 @ @ <nl> Potion potion = Potion . func _ 188412 _ a ( i ) ; <nl> if ( potion = = null ) { <nl> return null ; <nl> - @ @ - 210 , 7 + 214 , 7 @ @ <nl> + @ @ - 210 , 7 + 218 , 7 @ @ <nl> flag2 = p _ 82722 _ 0 _ . func _ 74767 _ n ( " ShowIcon " ) ; <nl> } <nl> <nl> @ @ - 40 , 7 + 51 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 226 , 6 + 230 , 67 @ @ <nl> + @ @ - 226 , 6 + 234 , 67 @ @ <nl> <nl> public int compareTo ( PotionEffect p _ compareTo _ 1 _ ) { <nl> int i = 32147 ; <nl> diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java b / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java <nl> index 27724e2 . . d1c0366 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java <nl> @ @ - 33 , 6 + 33 , 7 @ @ import org . objectweb . asm . tree . MethodNode ; <nl> <nl> import cpw . mods . modlauncher . serviceapi . ILaunchPluginService ; <nl> <nl> + @ Deprecated / / TODO as this only targets a single class , it can be moved to a JS coremod <nl> public abstract class FieldRedirectTransformer implements ILaunchPluginService <nl> { <nl> private final String clsName ; <nl> diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / PotionEffectTransformer . java b / src / fmllauncher / java / net / minecraftforge / common / asm / PotionEffectTransformer . java <nl> new file mode 100644 <nl> index 0000000 . . 7a37fb0 <nl> - - - / dev / null <nl> + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / PotionEffectTransformer . java <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 - 2018 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . common . asm ; <nl> + <nl> + @ Deprecated <nl> + public class PotionEffectTransformer extends FieldRedirectTransformer <nl> + { <nl> + public PotionEffectTransformer ( ) <nl> + { <nl> + super ( " net . minecraft . potion . PotionEffect " , " Lnet / minecraft / potion / Potion ; " , " getPotionRaw " ) ; <nl> + } <nl> + } <nl> diff - - git a / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService b / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService <nl> index 502278a . . 7bfa2bf 100644 <nl> - - - a / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService <nl> + + + b / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService <nl> @ @ - 2 , 3 + 2 , 4 @ @ net . minecraftforge . fml . loading . RuntimeDistCleaner <nl> net . minecraftforge . common . asm . RuntimeEnumExtender <nl> net . minecraftforge . common . asm . ObjectHolderDefinalize <nl> net . minecraftforge . common . asm . CapabilityInjectDefinalize <nl> + net . minecraftforge . common . asm . PotionEffectTransformer <nl> diff - - git a / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java b / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java <nl> index b4dd2ae . . 204f9d0 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . creativetab . CreativeTabs ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . item . Item ; <nl> + import net . minecraft . potion . Potion ; <nl> + import net . minecraft . potion . PotionType ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . math . AxisAlignedBB ; <nl> @ @ - 75 , 6 + 77 , 22 @ @ public class RegistryOverrideTest <nl> } <nl> } <nl> <nl> + @ SubscribeEvent <nl> + public static void registerPotions ( RegistryEvent . Register < Potion > event ) <nl> + { <nl> + if ( ENABLED ) <nl> + { <nl> + event . getRegistry ( ) . register ( new Potion ( true , 0x00ffff ) <nl> + { <nl> + { <nl> + setPotionName ( " effect . poison " ) ; <nl> + setIconIndex ( 6 , 0 ) ; <nl> + setEffectiveness ( 0 . 25D ) ; <nl> + } <nl> + } . setRegistryName ( " minecraft : poison " ) ) ; <nl> + } <nl> + } <nl> + <nl> private static class BlockReplacement extends Block <nl> { <nl> AxisAlignedBB BB = FULL _ BLOCK _ AABB . contract ( 0 . 1 , 0 , 0 . 1 ) ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch <nl> index 7bce8fd . . 8ab9e8b 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch <nl> @ @ - 36 , 6 + 36 , 15 @ @ <nl> } <nl> <nl> } , " keyPressed event handler " , iguieventlistener . getClass ( ) . getCanonicalName ( ) ) ; <nl> + @ @ - 341 , 7 + 348 , 7 @ @ <nl> + } <nl> + } <nl> + } <nl> + - <nl> + + net . minecraftforge . client . ForgeHooksClient . fireKeyInput ( p _ 197961 _ 3 _ , p _ 197961 _ 4 _ , p _ 197961 _ 5 _ , p _ 197961 _ 6 _ ) ; <nl> + } <nl> + } <nl> + <nl> @ @ - 351 , 12 + 358 , 16 @ @ <nl> if ( iguieventlistener ! = null ) { <nl> if ( Character . charCount ( p _ 197963 _ 3 _ ) = = 1 ) { <nl> diff - - git a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch <nl> index 83522d3 . . 78581d4 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch <nl> @ @ - 18 , 6 + 18 , 15 @ @ <nl> } , " mouseReleased event handler " , this . field _ 198036 _ a . field _ 71462 _ r . getClass ( ) . getCanonicalName ( ) ) ; <nl> } <nl> } <nl> + @ @ - 103 , 7 + 107 , 7 @ @ <nl> + } <nl> + } <nl> + } <nl> + - <nl> + + net . minecraftforge . client . ForgeHooksClient . fireMouseInput ( p _ 198023 _ 3 _ , p _ 198023 _ 4 _ , p _ 198023 _ 5 _ ) ; <nl> + } <nl> + } <nl> + <nl> @ @ - 111 , 7 + 115 , 9 @ @ <nl> if ( p _ 198020 _ 1 _ = = Minecraft . func _ 71410 _ x ( ) . field _ 195558 _ d . func _ 198092 _ i ( ) ) { <nl> double d0 = p _ 198020 _ 5 _ * this . field _ 198036 _ a . field _ 71474 _ y . field _ 208033 _ V ; <nl> diff - - git a / patches _ old _ unknown / Minecraft . java . patch b / patches _ old _ unknown / Minecraft . java . patch <nl> index 7a9fad1 . . 48b53fd 100644 <nl> - - - a / patches _ old _ unknown / Minecraft . java . patch <nl> + + + b / patches _ old _ unknown / Minecraft . java . patch <nl> @ @ - 18 , 14 + 18 , 6 @ @ <nl> Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; <nl> this . func _ 175601 _ h ( ) ; <nl> } <nl> - @ @ - 1982 , 6 + 2013 , 7 @ @ <nl> - } <nl> - } <nl> - } <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireKeyInput ( ) ; <nl> - } <nl> - <nl> - this . func _ 184117 _ aA ( ) ; <nl> @ @ - 2239 , 6 + 2271 , 8 @ @ <nl> { <nl> while ( Mouse . next ( ) ) <nl> @ @ - 35 , 14 + 27 , 6 @ @ <nl> int i = Mouse . getEventButton ( ) ; <nl> KeyBinding . func _ 74510 _ a ( i - 100 , Mouse . getEventButtonState ( ) ) ; <nl> <nl> - @ @ - 2294 , 6 + 2328 , 7 @ @ <nl> - this . field _ 71462 _ r . func _ 146274 _ d ( ) ; <nl> - } <nl> - } <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireMouseInput ( ) ; <nl> - } <nl> - } <nl> - <nl> @ @ - 2304 , 6 + 2339 , 7 @ @ <nl> <nl> public void func _ 71371 _ a ( String p _ 71371 _ 1 _ , String p _ 71371 _ 2 _ , @ Nullable WorldSettings p _ 71371 _ 3 _ ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 057e7a9 . . 0622268 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 127 , 6 + 127 , 7 @ @ import net . minecraftforge . client . model . ModelDynBucket ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . client . model . pipeline . QuadGatheringTransformer ; <nl> + import net . minecraftforge . client . event . InputEvent ; <nl> import net . minecraftforge . common . ForgeMod ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . model . IModelPart ; <nl> @ @ - 1036 , 4 + 1037 , 14 @ @ public class ForgeHooksClient <nl> LOGGER . error ( " Unable to invalidate log4j thread cache , thread fields in logs may be inaccurate " , e ) ; <nl> } <nl> } <nl> + <nl> + public static void fireMouseInput ( int button , int action , int mods ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( button , action , mods ) ) ; <nl> + } <nl> + <nl> + public static void fireKeyInput ( int key , int scanCode , int action , int modifiers ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( key , scanCode , action , modifiers ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / InputEvent . java b / src / main / java / net / minecraftforge / client / event / InputEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 54bce01 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / InputEvent . java <nl> @ @ - 0 , 0 + 1 , 119 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 - 2019 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import net . minecraft . client . util . InputMappings ; <nl> + import net . minecraftforge . eventbus . api . Event ; <nl> + <nl> + import org . lwjgl . glfw . GLFW ; <nl> + <nl> + public class InputEvent extends Event <nl> + { <nl> + / * * <nl> + * This event fires when a mouse button is pressed . <nl> + * / <nl> + public static class MouseInputEvent extends InputEvent <nl> + { <nl> + private final int button ; <nl> + private final int action ; <nl> + private final int mods ; <nl> + public MouseInputEvent ( int button , int action , int mods ) <nl> + { <nl> + this . button = button ; <nl> + this . action = action ; <nl> + this . mods = mods ; <nl> + } <nl> + <nl> + public int getButton ( ) <nl> + { <nl> + return this . button ; <nl> + } <nl> + <nl> + public int getAction ( ) <nl> + { <nl> + return this . action ; <nl> + } <nl> + <nl> + public int getMods ( ) <nl> + { <nl> + return this . mods ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * This event fires when keyboard input is detected . <nl> + * / <nl> + public static class KeyInputEvent extends InputEvent <nl> + { <nl> + private final int key ; <nl> + private final int scanCode ; <nl> + private final int action ; <nl> + private final int modifiers ; <nl> + public KeyInputEvent ( int key , int scanCode , int action , int modifiers ) <nl> + { <nl> + this . key = key ; <nl> + this . scanCode = scanCode ; <nl> + this . action = action ; <nl> + this . modifiers = modifiers ; <nl> + } <nl> + <nl> + / * * <nl> + * The keyboard key that was pressed or released <nl> + * https : / / www . glfw . org / docs / latest / group _ _ keys . html <nl> + * <nl> + * @ see GLFW key constants starting with " GLFW _ KEY _ " <nl> + * / <nl> + public int getKey ( ) <nl> + { <nl> + return this . key ; <nl> + } <nl> + <nl> + / * * <nl> + * Platform - specific scan code . <nl> + * Used for { @ link InputMappings # getInputByCode ( int , int ) } <nl> + * <nl> + * The scan code is unique for every key , regardless of whether it has a key code . <nl> + * Scan codes are platform - specific but consistent over time , so keys will have different scan codes depending <nl> + * on the platform but they are safe to save to disk as custom key bindings . <nl> + * / <nl> + public int getScanCode ( ) <nl> + { <nl> + return this . scanCode ; <nl> + } <nl> + <nl> + public int getAction ( ) <nl> + { <nl> + return this . action ; <nl> + } <nl> + <nl> + / * * <nl> + * Bit field representing the modifier keys pressed . <nl> + * <nl> + * @ see GLFW # GLFW _ MOD _ SHIFT <nl> + * @ see GLFW # GLFW _ MOD _ CONTROL <nl> + * @ see GLFW # GLFW _ MOD _ ALT <nl> + * @ see GLFW # GLFW _ MOD _ SUPER <nl> + * / <nl> + public int getModifiers ( ) <nl> + { <nl> + return this . modifiers ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java b / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java <nl> deleted file mode 100644 <nl> index 9be287e . . 0000000 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - / * <nl> - * Minecraft Forge <nl> - * Copyright ( c ) 2016 - 2019 . <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation version 2 . 1 <nl> - * of the License . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * <nl> - * You should have received a copy of the GNU Lesser General Public <nl> - * License along with this library ; if not , write to the Free Software <nl> - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> - * / <nl> - <nl> - package net . minecraftforge . fml . common . gameevent ; <nl> - <nl> - import net . minecraftforge . eventbus . api . Event ; <nl> - <nl> - public class InputEvent extends Event { <nl> - public static class MouseInputEvent extends InputEvent { } <nl> - public static class KeyInputEvent extends InputEvent { } <nl> - } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java <nl> index 6f063cb . . af6848d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java <nl> + + + b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java <nl> @ @ - 28 , 22 + 28 , 11 @ @ import net . minecraft . world . dimension . DimensionType ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . fml . LogicalSide ; <nl> - import net . minecraftforge . fml . common . gameevent . InputEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent ; <nl> import net . minecraftforge . fml . common . gameevent . TickEvent ; <nl> <nl> public class BasicEventHooks <nl> { <nl> - public static void fireMouseInput ( ) <nl> - { <nl> - MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( ) ) ; <nl> - } <nl> - <nl> - public static void fireKeyInput ( ) <nl> - { <nl> - MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( ) ) ; <nl> - } <nl> - <nl> public static void firePlayerChangedDimensionEvent ( EntityPlayer player , DimensionType fromDim , DimensionType toDim ) <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . PlayerChangedDimensionEvent ( player , fromDim , toDim ) ) ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch b / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch 
 index 5a7f260 . . 9a39cf0 100644 
 - - - a / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch 
 + + + b / patches / minecraft / net / minecraft / potion / PotionEffect . java . patch 
 @ @ - 17 , 7 + 17 , 18 @ @ 
 } 
 
 public boolean func _ 199308 _ a ( PotionEffect p _ 199308 _ 1 _ ) { 
 - @ @ - 188 , 11 + 191 , 12 @ @ 
 + @ @ - 88 , 6 + 91 , 10 @ @ 
 + } 
 + 
 + public Potion func _ 188419 _ a ( ) { 
 + + return this . getPotionRaw ( ) = = null ? null : this . getPotionRaw ( ) . delegate . get ( ) ; 
 + + } 
 + + 
 + + private Potion getPotionRaw ( ) { 
 + return this . field _ 188420 _ b ; 
 + } 
 + 
 + @ @ - 188 , 11 + 195 , 12 @ @ 
 p _ 82719 _ 1 _ . func _ 74757 _ a ( " Ambient " , this . func _ 82720 _ e ( ) ) ; 
 p _ 82719 _ 1 _ . func _ 74757 _ a ( " ShowParticles " , this . func _ 188418 _ e ( ) ) ; 
 p _ 82719 _ 1 _ . func _ 74757 _ a ( " ShowIcon " , this . func _ 205348 _ f ( ) ) ; 
 @ @ - 31 , 7 + 42 , 7 @ @ 
 Potion potion = Potion . func _ 188412 _ a ( i ) ; 
 if ( potion = = null ) { 
 return null ; 
 - @ @ - 210 , 7 + 214 , 7 @ @ 
 + @ @ - 210 , 7 + 218 , 7 @ @ 
 flag2 = p _ 82722 _ 0 _ . func _ 74767 _ n ( " ShowIcon " ) ; 
 } 
 
 @ @ - 40 , 7 + 51 , 7 @ @ 
 } 
 } 
 
 - @ @ - 226 , 6 + 230 , 67 @ @ 
 + @ @ - 226 , 6 + 234 , 67 @ @ 
 
 public int compareTo ( PotionEffect p _ compareTo _ 1 _ ) { 
 int i = 32147 ; 
 diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java b / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java 
 index 27724e2 . . d1c0366 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / FieldRedirectTransformer . java 
 @ @ - 33 , 6 + 33 , 7 @ @ import org . objectweb . asm . tree . MethodNode ; 
 
 import cpw . mods . modlauncher . serviceapi . ILaunchPluginService ; 
 
 + @ Deprecated / / TODO as this only targets a single class , it can be moved to a JS coremod 
 public abstract class FieldRedirectTransformer implements ILaunchPluginService 
 { 
 private final String clsName ; 
 diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / PotionEffectTransformer . java b / src / fmllauncher / java / net / minecraftforge / common / asm / PotionEffectTransformer . java 
 new file mode 100644 
 index 0000000 . . 7a37fb0 
 - - - / dev / null 
 + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / PotionEffectTransformer . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 - 2018 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . common . asm ; 
 + 
 + @ Deprecated 
 + public class PotionEffectTransformer extends FieldRedirectTransformer 
 + { 
 + public PotionEffectTransformer ( ) 
 + { 
 + super ( " net . minecraft . potion . PotionEffect " , " Lnet / minecraft / potion / Potion ; " , " getPotionRaw " ) ; 
 + } 
 + } 
 diff - - git a / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService b / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService 
 index 502278a . . 7bfa2bf 100644 
 - - - a / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService 
 + + + b / src / fmllauncher / resources / META - INF / services / cpw . mods . modlauncher . serviceapi . ILaunchPluginService 
 @ @ - 2 , 3 + 2 , 4 @ @ net . minecraftforge . fml . loading . RuntimeDistCleaner 
 net . minecraftforge . common . asm . RuntimeEnumExtender 
 net . minecraftforge . common . asm . ObjectHolderDefinalize 
 net . minecraftforge . common . asm . CapabilityInjectDefinalize 
 + net . minecraftforge . common . asm . PotionEffectTransformer 
 diff - - git a / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java b / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java 
 index b4dd2ae . . 204f9d0 100644 
 - - - a / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / mod / RegistryOverrideTest . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . creativetab . CreativeTabs ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . item . Item ; 
 + import net . minecraft . potion . Potion ; 
 + import net . minecraft . potion . PotionType ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . math . AxisAlignedBB ; 
 @ @ - 75 , 6 + 77 , 22 @ @ public class RegistryOverrideTest 
 } 
 } 
 
 + @ SubscribeEvent 
 + public static void registerPotions ( RegistryEvent . Register < Potion > event ) 
 + { 
 + if ( ENABLED ) 
 + { 
 + event . getRegistry ( ) . register ( new Potion ( true , 0x00ffff ) 
 + { 
 + { 
 + setPotionName ( " effect . poison " ) ; 
 + setIconIndex ( 6 , 0 ) ; 
 + setEffectiveness ( 0 . 25D ) ; 
 + } 
 + } . setRegistryName ( " minecraft : poison " ) ) ; 
 + } 
 + } 
 + 
 private static class BlockReplacement extends Block 
 { 
 AxisAlignedBB BB = FULL _ BLOCK _ AABB . contract ( 0 . 1 , 0 , 0 . 1 ) ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch 
 index 7bce8fd . . 8ab9e8b 100644 
 - - - a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch 
 @ @ - 36 , 6 + 36 , 15 @ @ 
 } 
 
 } , " keyPressed event handler " , iguieventlistener . getClass ( ) . getCanonicalName ( ) ) ; 
 + @ @ - 341 , 7 + 348 , 7 @ @ 
 + } 
 + } 
 + } 
 + - 
 + + net . minecraftforge . client . ForgeHooksClient . fireKeyInput ( p _ 197961 _ 3 _ , p _ 197961 _ 4 _ , p _ 197961 _ 5 _ , p _ 197961 _ 6 _ ) ; 
 + } 
 + } 
 + 
 @ @ - 351 , 12 + 358 , 16 @ @ 
 if ( iguieventlistener ! = null ) { 
 if ( Character . charCount ( p _ 197963 _ 3 _ ) = = 1 ) { 
 diff - - git a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch 
 index 83522d3 . . 78581d4 100644 
 - - - a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch 
 @ @ - 18 , 6 + 18 , 15 @ @ 
 } , " mouseReleased event handler " , this . field _ 198036 _ a . field _ 71462 _ r . getClass ( ) . getCanonicalName ( ) ) ; 
 } 
 } 
 + @ @ - 103 , 7 + 107 , 7 @ @ 
 + } 
 + } 
 + } 
 + - 
 + + net . minecraftforge . client . ForgeHooksClient . fireMouseInput ( p _ 198023 _ 3 _ , p _ 198023 _ 4 _ , p _ 198023 _ 5 _ ) ; 
 + } 
 + } 
 + 
 @ @ - 111 , 7 + 115 , 9 @ @ 
 if ( p _ 198020 _ 1 _ = = Minecraft . func _ 71410 _ x ( ) . field _ 195558 _ d . func _ 198092 _ i ( ) ) { 
 double d0 = p _ 198020 _ 5 _ * this . field _ 198036 _ a . field _ 71474 _ y . field _ 208033 _ V ; 
 diff - - git a / patches _ old _ unknown / Minecraft . java . patch b / patches _ old _ unknown / Minecraft . java . patch 
 index 7a9fad1 . . 48b53fd 100644 
 - - - a / patches _ old _ unknown / Minecraft . java . patch 
 + + + b / patches _ old _ unknown / Minecraft . java . patch 
 @ @ - 18 , 14 + 18 , 6 @ @ 
 Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; 
 this . func _ 175601 _ h ( ) ; 
 } 
 - @ @ - 1982 , 6 + 2013 , 7 @ @ 
 - } 
 - } 
 - } 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireKeyInput ( ) ; 
 - } 
 - 
 - this . func _ 184117 _ aA ( ) ; 
 @ @ - 2239 , 6 + 2271 , 8 @ @ 
 { 
 while ( Mouse . next ( ) ) 
 @ @ - 35 , 14 + 27 , 6 @ @ 
 int i = Mouse . getEventButton ( ) ; 
 KeyBinding . func _ 74510 _ a ( i - 100 , Mouse . getEventButtonState ( ) ) ; 
 
 - @ @ - 2294 , 6 + 2328 , 7 @ @ 
 - this . field _ 71462 _ r . func _ 146274 _ d ( ) ; 
 - } 
 - } 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireMouseInput ( ) ; 
 - } 
 - } 
 - 
 @ @ - 2304 , 6 + 2339 , 7 @ @ 
 
 public void func _ 71371 _ a ( String p _ 71371 _ 1 _ , String p _ 71371 _ 2 _ , @ Nullable WorldSettings p _ 71371 _ 3 _ ) 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 057e7a9 . . 0622268 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 127 , 6 + 127 , 7 @ @ import net . minecraftforge . client . model . ModelDynBucket ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . client . model . pipeline . QuadGatheringTransformer ; 
 + import net . minecraftforge . client . event . InputEvent ; 
 import net . minecraftforge . common . ForgeMod ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . model . IModelPart ; 
 @ @ - 1036 , 4 + 1037 , 14 @ @ public class ForgeHooksClient 
 LOGGER . error ( " Unable to invalidate log4j thread cache , thread fields in logs may be inaccurate " , e ) ; 
 } 
 } 
 + 
 + public static void fireMouseInput ( int button , int action , int mods ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( button , action , mods ) ) ; 
 + } 
 + 
 + public static void fireKeyInput ( int key , int scanCode , int action , int modifiers ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( key , scanCode , action , modifiers ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / event / InputEvent . java b / src / main / java / net / minecraftforge / client / event / InputEvent . java 
 new file mode 100644 
 index 0000000 . . 54bce01 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / InputEvent . java 
 @ @ - 0 , 0 + 1 , 119 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 - 2019 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . client . event ; 
 + 
 + import net . minecraft . client . util . InputMappings ; 
 + import net . minecraftforge . eventbus . api . Event ; 
 + 
 + import org . lwjgl . glfw . GLFW ; 
 + 
 + public class InputEvent extends Event 
 + { 
 + / * * 
 + * This event fires when a mouse button is pressed . 
 + * / 
 + public static class MouseInputEvent extends InputEvent 
 + { 
 + private final int button ; 
 + private final int action ; 
 + private final int mods ; 
 + public MouseInputEvent ( int button , int action , int mods ) 
 + { 
 + this . button = button ; 
 + this . action = action ; 
 + this . mods = mods ; 
 + } 
 + 
 + public int getButton ( ) 
 + { 
 + return this . button ; 
 + } 
 + 
 + public int getAction ( ) 
 + { 
 + return this . action ; 
 + } 
 + 
 + public int getMods ( ) 
 + { 
 + return this . mods ; 
 + } 
 + } 
 + 
 + / * * 
 + * This event fires when keyboard input is detected . 
 + * / 
 + public static class KeyInputEvent extends InputEvent 
 + { 
 + private final int key ; 
 + private final int scanCode ; 
 + private final int action ; 
 + private final int modifiers ; 
 + public KeyInputEvent ( int key , int scanCode , int action , int modifiers ) 
 + { 
 + this . key = key ; 
 + this . scanCode = scanCode ; 
 + this . action = action ; 
 + this . modifiers = modifiers ; 
 + } 
 + 
 + / * * 
 + * The keyboard key that was pressed or released 
 + * https : / / www . glfw . org / docs / latest / group _ _ keys . html 
 + * 
 + * @ see GLFW key constants starting with " GLFW _ KEY _ " 
 + * / 
 + public int getKey ( ) 
 + { 
 + return this . key ; 
 + } 
 + 
 + / * * 
 + * Platform - specific scan code . 
 + * Used for { @ link InputMappings # getInputByCode ( int , int ) } 
 + * 
 + * The scan code is unique for every key , regardless of whether it has a key code . 
 + * Scan codes are platform - specific but consistent over time , so keys will have different scan codes depending 
 + * on the platform but they are safe to save to disk as custom key bindings . 
 + * / 
 + public int getScanCode ( ) 
 + { 
 + return this . scanCode ; 
 + } 
 + 
 + public int getAction ( ) 
 + { 
 + return this . action ; 
 + } 
 + 
 + / * * 
 + * Bit field representing the modifier keys pressed . 
 + * 
 + * @ see GLFW # GLFW _ MOD _ SHIFT 
 + * @ see GLFW # GLFW _ MOD _ CONTROL 
 + * @ see GLFW # GLFW _ MOD _ ALT 
 + * @ see GLFW # GLFW _ MOD _ SUPER 
 + * / 
 + public int getModifiers ( ) 
 + { 
 + return this . modifiers ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java b / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java 
 deleted file mode 100644 
 index 9be287e . . 0000000 
 - - - a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - / * 
 - * Minecraft Forge 
 - * Copyright ( c ) 2016 - 2019 . 
 - * 
 - * This library is free software ; you can redistribute it and / or 
 - * modify it under the terms of the GNU Lesser General Public 
 - * License as published by the Free Software Foundation version 2 . 1 
 - * of the License . 
 - * 
 - * This library is distributed in the hope that it will be useful , 
 - * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - * Lesser General Public License for more details . 
 - * 
 - * You should have received a copy of the GNU Lesser General Public 
 - * License along with this library ; if not , write to the Free Software 
 - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 - * / 
 - 
 - package net . minecraftforge . fml . common . gameevent ; 
 - 
 - import net . minecraftforge . eventbus . api . Event ; 
 - 
 - public class InputEvent extends Event { 
 - public static class MouseInputEvent extends InputEvent { } 
 - public static class KeyInputEvent extends InputEvent { } 
 - } 
 diff - - git a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java 
 index 6f063cb . . af6848d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java 
 + + + b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java 
 @ @ - 28 , 22 + 28 , 11 @ @ import net . minecraft . world . dimension . DimensionType ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . fml . LogicalSide ; 
 - import net . minecraftforge . fml . common . gameevent . InputEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent ; 
 import net . minecraftforge . fml . common . gameevent . TickEvent ; 
 
 public class BasicEventHooks 
 { 
 - public static void fireMouseInput ( ) 
 - { 
 - MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( ) ) ; 
 - } 
 - 
 - public static void fireKeyInput ( ) 
 - { 
 - MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( ) ) ; 
 - } 
 - 
 public static void firePlayerChangedDimensionEvent ( EntityPlayer player , DimensionType fromDim , DimensionType toDim ) 
 { 
 MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . PlayerChangedDimensionEvent ( player , fromDim , toDim ) ) ;
