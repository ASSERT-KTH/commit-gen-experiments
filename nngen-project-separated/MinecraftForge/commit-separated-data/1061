BLEU SCORE: 0.03635358866852297

TEST MSG: Extracted the creation of RegionRenderCache into a method .
GENERATED MSG: Allow optional rider interaction for entities , thanks for the suggestion Vswe .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> index 6b33267 . . 4de9b14 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> @ @ - 1 , 5 + 1 , 14 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java <nl> + @ @ - 124 , 7 + 124 , 7 @ @ <nl> + return ; <nl> + } <nl> + <nl> + - regionrendercache = new RegionRenderCache ( this . field _ 178588 _ d , blockpos . func _ 177982 _ a ( - 1 , - 1 , - 1 ) , blockpos1 . func _ 177982 _ a ( 1 , 1 , 1 ) , 1 ) ; <nl> + + regionrendercache = createRegionRenderCache ( this . field _ 178588 _ d , blockpos . func _ 177982 _ a ( - 1 , - 1 , - 1 ) , blockpos1 . func _ 177982 _ a ( 1 , 1 , 1 ) , 1 ) ; <nl> + p _ 178581 _ 4 _ . func _ 178543 _ a ( compiledchunk ) ; <nl> + } <nl> + finally <nl> @ @ - 150 , 7 + 150 , 7 @ @ <nl> visgraph . func _ 178606 _ a ( mutableblockpos ) ; <nl> } <nl> @ @ - 28 , 3 + 37 , 28 @ @ <nl> } <nl> <nl> EnumWorldBlockLayer [ ] aenumworldblocklayer = EnumWorldBlockLayer . values ( ) ; <nl> + @ @ - 374 , 4 + 377 , 24 @ @ <nl> + { <nl> + return this . field _ 178593 _ n ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + / * * <nl> + + * Creates a new RegionRenderCache instance . < br > <nl> + + * Extending classes can change the behavior of the cache , allowing to visually change <nl> + + * blocks ( schematics etc ) . <nl> + + * <nl> + + * @ see RegionRenderCache <nl> + + * @ param world The world to cache . <nl> + + * @ param from The starting position of the chunk minus one on each axis . <nl> + + * @ param to The ending position of the chunk plus one on each axis . <nl> + + * @ param subtract Padding used internally by the RegionRenderCache constructor to make <nl> + + * the cache a 20x20x20 cube , for a total of 8000 states in the cache . <nl> + + * @ return new RegionRenderCache instance <nl> + + * / <nl> + + protected RegionRenderCache createRegionRenderCache ( World world , BlockPos from , BlockPos to , int subtract ) <nl> + + { <nl> + + return new RegionRenderCache ( world , from , to , subtract ) ; <nl> + + } <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + }
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index d4d522c . . bc9d1fe 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit d4d522c5978ecd7a9195977b3327b441901bb5b4 <nl> + Subproject commit bc9d1fe657c7a0953adc7d4c5ed81c575bdfb0f1 <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch <nl> index ad8f316 . . d80636f 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch <nl> @ @ - 12 , 6 + 12 , 15 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public class EntityRenderer <nl> { <nl> + @ @ - 319 , 7 + 324 , 7 @ @ <nl> + <nl> + if ( d3 < d2 | | d2 = = 0 . 0D ) <nl> + { <nl> + - if ( entity = = this . mc . renderViewEntity . ridingEntity ) <nl> + + if ( entity = = this . mc . renderViewEntity . ridingEntity & & ! entity . canRiderInteract ( ) ) <nl> + { <nl> + if ( d2 = = 0 . 0D ) <nl> + { <nl> @ @ - 354 , 8 + 359 , 15 @ @ <nl> * / <nl> private void updateFovModifierHand ( ) <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> index cf6a060 . . 0559af7 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> @ @ - 22 , 19 + 22 , 7 @ @ <nl> Iterator iterator = this . field _ 110574 _ e . entrySet ( ) . iterator ( ) ; <nl> <nl> while ( iterator . hasNext ( ) ) <nl> - @ @ - 73 , 7 + 77 , 10 @ @ <nl> - <nl> - try <nl> - { <nl> - - textureatlassprite . func _ 130100 _ a ( par1ResourceManager . func _ 110536 _ a ( resourcelocation1 ) ) ; <nl> - + if ( ! textureatlassprite . load ( par1ResourceManager , resourcelocation1 ) ) <nl> - + { <nl> - + continue ; <nl> - + } <nl> - } <nl> - catch ( RuntimeException runtimeexception ) <nl> - { <nl> - @ @ - 142 , 6 + 149 , 7 @ @ <nl> + @ @ - 142 , 6 + 146 , 7 @ @ <nl> textureatlassprite1 = ( TextureAtlasSprite ) iterator1 . next ( ) ; <nl> textureatlassprite1 . copyFrom ( this . missingImage ) ; <nl> } <nl> @ @ - 42 , 7 + 30 , 7 @ @ <nl> } <nl> <nl> private void func _ 110573 _ f ( ) <nl> - @ @ - 212 , 6 + 220 , 7 @ @ <nl> + @ @ - 212 , 6 + 217 , 7 @ @ <nl> if ( par1Str = = null ) <nl> { <nl> ( new RuntimeException ( " Don \ ' t register null ! " ) ) . printStackTrace ( ) ; <nl> @ @ - 50 , 7 + 38 , 7 @ @ <nl> } <nl> <nl> Object object = ( TextureAtlasSprite ) this . field _ 110574 _ e . get ( par1Str ) ; <nl> - @ @ - 253 , 4 + 262 , 37 @ @ <nl> + @ @ - 253 , 4 + 259 , 37 @ @ <nl> { <nl> this . updateAnimations ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> index 9185eb7 . . a38d7c9 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> @ @ - 155 , 7 + 155 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 96091 _ a ( Explosion par1Explosion , World par2World , int par3 , int par4 , int par5 , int par6 , float par7 ) <nl> - @ @ - 2426 , 4 + 2496 , 149 @ @ <nl> + @ @ - 2426 , 4 + 2496 , 160 @ @ <nl> { <nl> return this . getEntityName ( ) ; <nl> } <nl> @ @ - 304 , 4 + 304 , 15 @ @ <nl> + { <nl> + return this . extendedProperties . get ( identifier ) ; <nl> + } <nl> + + <nl> + + / * * <nl> + + * If a rider of this entity can interact with this entity . Should return true on the <nl> + + * ridden entity if so . <nl> + + * <nl> + + * @ return if the entity can be interacted with from a rider <nl> + + * / <nl> + + public boolean canRiderInteract ( ) <nl> + + { <nl> + + return false ; <nl> + + } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 index 6b33267 . . 4de9b14 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 @ @ - 1 , 5 + 1 , 14 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java 
 + + + . . / src - work / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java 
 + @ @ - 124 , 7 + 124 , 7 @ @ 
 + return ; 
 + } 
 + 
 + - regionrendercache = new RegionRenderCache ( this . field _ 178588 _ d , blockpos . func _ 177982 _ a ( - 1 , - 1 , - 1 ) , blockpos1 . func _ 177982 _ a ( 1 , 1 , 1 ) , 1 ) ; 
 + + regionrendercache = createRegionRenderCache ( this . field _ 178588 _ d , blockpos . func _ 177982 _ a ( - 1 , - 1 , - 1 ) , blockpos1 . func _ 177982 _ a ( 1 , 1 , 1 ) , 1 ) ; 
 + p _ 178581 _ 4 _ . func _ 178543 _ a ( compiledchunk ) ; 
 + } 
 + finally 
 @ @ - 150 , 7 + 150 , 7 @ @ 
 visgraph . func _ 178606 _ a ( mutableblockpos ) ; 
 } 
 @ @ - 28 , 3 + 37 , 28 @ @ 
 } 
 
 EnumWorldBlockLayer [ ] aenumworldblocklayer = EnumWorldBlockLayer . values ( ) ; 
 + @ @ - 374 , 4 + 377 , 24 @ @ 
 + { 
 + return this . field _ 178593 _ n ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + / * * 
 + + * Creates a new RegionRenderCache instance . < br > 
 + + * Extending classes can change the behavior of the cache , allowing to visually change 
 + + * blocks ( schematics etc ) . 
 + + * 
 + + * @ see RegionRenderCache 
 + + * @ param world The world to cache . 
 + + * @ param from The starting position of the chunk minus one on each axis . 
 + + * @ param to The ending position of the chunk plus one on each axis . 
 + + * @ param subtract Padding used internally by the RegionRenderCache constructor to make 
 + + * the cache a 20x20x20 cube , for a total of 8000 states in the cache . 
 + + * @ return new RegionRenderCache instance 
 + + * / 
 + + protected RegionRenderCache createRegionRenderCache ( World world , BlockPos from , BlockPos to , int subtract ) 
 + + { 
 + + return new RegionRenderCache ( world , from , to , subtract ) ; 
 + + } 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + }

NEAREST DIFF:
diff - - git a / fml b / fml 
 index d4d522c . . bc9d1fe 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit d4d522c5978ecd7a9195977b3327b441901bb5b4 
 + Subproject commit bc9d1fe657c7a0953adc7d4c5ed81c575bdfb0f1 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch 
 index ad8f316 . . d80636f 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch 
 @ @ - 12 , 6 + 12 , 15 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public class EntityRenderer 
 { 
 + @ @ - 319 , 7 + 324 , 7 @ @ 
 + 
 + if ( d3 < d2 | | d2 = = 0 . 0D ) 
 + { 
 + - if ( entity = = this . mc . renderViewEntity . ridingEntity ) 
 + + if ( entity = = this . mc . renderViewEntity . ridingEntity & & ! entity . canRiderInteract ( ) ) 
 + { 
 + if ( d2 = = 0 . 0D ) 
 + { 
 @ @ - 354 , 8 + 359 , 15 @ @ 
 * / 
 private void updateFovModifierHand ( ) 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 index cf6a060 . . 0559af7 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 @ @ - 22 , 19 + 22 , 7 @ @ 
 Iterator iterator = this . field _ 110574 _ e . entrySet ( ) . iterator ( ) ; 
 
 while ( iterator . hasNext ( ) ) 
 - @ @ - 73 , 7 + 77 , 10 @ @ 
 - 
 - try 
 - { 
 - - textureatlassprite . func _ 130100 _ a ( par1ResourceManager . func _ 110536 _ a ( resourcelocation1 ) ) ; 
 - + if ( ! textureatlassprite . load ( par1ResourceManager , resourcelocation1 ) ) 
 - + { 
 - + continue ; 
 - + } 
 - } 
 - catch ( RuntimeException runtimeexception ) 
 - { 
 - @ @ - 142 , 6 + 149 , 7 @ @ 
 + @ @ - 142 , 6 + 146 , 7 @ @ 
 textureatlassprite1 = ( TextureAtlasSprite ) iterator1 . next ( ) ; 
 textureatlassprite1 . copyFrom ( this . missingImage ) ; 
 } 
 @ @ - 42 , 7 + 30 , 7 @ @ 
 } 
 
 private void func _ 110573 _ f ( ) 
 - @ @ - 212 , 6 + 220 , 7 @ @ 
 + @ @ - 212 , 6 + 217 , 7 @ @ 
 if ( par1Str = = null ) 
 { 
 ( new RuntimeException ( " Don \ ' t register null ! " ) ) . printStackTrace ( ) ; 
 @ @ - 50 , 7 + 38 , 7 @ @ 
 } 
 
 Object object = ( TextureAtlasSprite ) this . field _ 110574 _ e . get ( par1Str ) ; 
 - @ @ - 253 , 4 + 262 , 37 @ @ 
 + @ @ - 253 , 4 + 259 , 37 @ @ 
 { 
 this . updateAnimations ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 index 9185eb7 . . a38d7c9 100644 
 - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 @ @ - 155 , 7 + 155 , 7 @ @ 
 } 
 
 public boolean func _ 96091 _ a ( Explosion par1Explosion , World par2World , int par3 , int par4 , int par5 , int par6 , float par7 ) 
 - @ @ - 2426 , 4 + 2496 , 149 @ @ 
 + @ @ - 2426 , 4 + 2496 , 160 @ @ 
 { 
 return this . getEntityName ( ) ; 
 } 
 @ @ - 304 , 4 + 304 , 15 @ @ 
 + { 
 + return this . extendedProperties . get ( identifier ) ; 
 + } 
 + + 
 + + / * * 
 + + * If a rider of this entity can interact with this entity . Should return true on the 
 + + * ridden entity if so . 
 + + * 
 + + * @ return if the entity can be interacted with from a rider 
 + + * / 
 + + public boolean canRiderInteract ( ) 
 + + { 
 + + return false ; 
 + + } 
 }
