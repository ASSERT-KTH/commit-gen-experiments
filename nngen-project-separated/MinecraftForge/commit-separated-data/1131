BLEU SCORE: 0.005126655801558406

TEST MSG: ModelRotation . getMatrix ( ) now returns the correct matrix ; fixed the application of custom transformations to vanilla models ; fixed application of transformations to B3D models ; fixed the culling of rotated vanilla models
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch b / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch <nl> index c9b9efd . . 94750e3 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch <nl> @ @ - 69 , 7 + 69 , 7 @ @ <nl> { <nl> - this . func _ 178406 _ a ( p _ 178415 _ 1 _ , new Vector3d ( 0 . 5D , 0 . 5D , 0 . 5D ) , p _ 178415 _ 4 _ . func _ 177525 _ a ( ) , new Vector3d ( 1 . 0D , 1 . 0D , 1 . 0D ) ) ; <nl> - return p _ 178415 _ 4 _ . func _ 177520 _ a ( p _ 178415 _ 2 _ , p _ 178415 _ 3 _ ) ; <nl> - + this . func _ 178406 _ a ( p _ 178415 _ 1 _ , new Vector3d ( 0 . 5D , 0 . 5D , 0 . 5D ) , new Matrix4d ( p _ 178415 _ 4 _ . getMatrix ( ) ) , new Vector3d ( 1 . 0D , 1 . 0D , 1 . 0D ) ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . transform ( p _ 178415 _ 1 _ , p _ 178415 _ 4 _ . getMatrix ( ) ) ; <nl> + return p _ 178415 _ 4 _ . rotate ( p _ 178415 _ 2 _ , p _ 178415 _ 3 _ ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch b / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch <nl> index 8364265 . . ee7d7cd 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch <nl> @ @ - 29 , 9 + 29 , 12 @ @ <nl> TextureAtlasSprite textureatlassprite = ( TextureAtlasSprite ) this . field _ 177599 _ g . get ( new ResourceLocation ( p _ 177578 _ 1 _ . func _ 178308 _ c ( " particle " ) ) ) ; <nl> SimpleBakedModel . Builder builder = ( new SimpleBakedModel . Builder ( p _ 177578 _ 1 _ ) ) . func _ 177646 _ a ( textureatlassprite ) ; <nl> Iterator iterator = p _ 177578 _ 1 _ . func _ 178298 _ a ( ) . iterator ( ) ; <nl> - @ @ - 516 , 11 + 522 , 11 @ @ <nl> + @ @ - 514 , 13 + 520 , 13 @ @ <nl> + BlockPartFace blockpartface = ( BlockPartFace ) blockpart . field _ 178240 _ c . get ( enumfacing ) ; <nl> + TextureAtlasSprite textureatlassprite1 = ( TextureAtlasSprite ) this . field _ 177599 _ g . get ( new ResourceLocation ( p _ 177578 _ 1 _ . func _ 178308 _ c ( blockpartface . field _ 178242 _ d ) ) ) ; <nl> <nl> - if ( blockpartface . field _ 178244 _ b = = null ) <nl> + - if ( blockpartface . field _ 178244 _ b = = null ) <nl> + + if ( blockpartface . field _ 178244 _ b = = null | | ! net . minecraftforge . client . model . TRSRTransformation . isInteger ( p _ 177578 _ 2 _ . getMatrix ( ) ) ) <nl> { <nl> - builder . func _ 177648 _ a ( this . func _ 177589 _ a ( blockpart , blockpartface , textureatlassprite1 , enumfacing , p _ 177578 _ 2 _ , p _ 177578 _ 3 _ ) ) ; <nl> + builder . func _ 177648 _ a ( this . makeBakedQuad ( blockpart , blockpartface , textureatlassprite1 , enumfacing , p _ 177578 _ 2 _ , p _ 177578 _ 3 _ ) ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch b / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch <nl> index 01c3616 . . fc6faa7 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch <nl> @ @ - 15 , 7 + 15 , 7 @ @ <nl> } <nl> + <nl> + public net . minecraftforge . client . model . TRSRTransformation apply ( net . minecraftforge . client . model . IModelPart part ) { return new net . minecraftforge . client . model . TRSRTransformation ( getMatrix ( ) ) ; } <nl> - + public javax . vecmath . Matrix4f getMatrix ( ) { return new javax . vecmath . Matrix4f ( func _ 177525 _ a ( ) ) ; } <nl> + + public javax . vecmath . Matrix4f getMatrix ( ) { return net . minecraftforge . client . ForgeHooksClient . getMatrix ( this ) ; } <nl> + public EnumFacing rotate ( EnumFacing facing ) { return func _ 177523 _ a ( facing ) ; } <nl> + public int rotate ( EnumFacing facing , int vertexIndex ) { return func _ 177520 _ a ( facing , vertexIndex ) ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 971b167 . . 2d4f7f9 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 9 , 6 + 9 , 8 @ @ import java . nio . ByteBuffer ; <nl> import java . nio . FloatBuffer ; <nl> <nl> import javax . vecmath . Matrix4f ; <nl> + import javax . vecmath . Vector3d ; <nl> + import javax . vecmath . Vector4f ; <nl> <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . state . IBlockState ; <nl> @ @ - 35 , 6 + 37 , 7 @ @ import net . minecraft . client . resources . I18n ; <nl> import net . minecraft . client . resources . model . IBakedModel ; <nl> import net . minecraft . client . resources . model . ModelBakery ; <nl> import net . minecraft . client . resources . model . ModelManager ; <nl> + import net . minecraft . client . resources . model . ModelRotation ; <nl> import net . minecraft . client . settings . GameSettings ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . EntityLivingBase ; <nl> @ @ - 633 , 4 + 636 , 24 @ @ public class ForgeHooksClient <nl> FMLLog . severe ( " Unimplemented vanilla attribute upload : % s " , attrType . getDisplayName ( ) ) ; <nl> } <nl> } <nl> + <nl> + public static void transform ( Vector3d vec , Matrix4f m ) <nl> + { <nl> + Vector4f tmp = new Vector4f ( ( float ) vec . x , ( float ) vec . y , ( float ) vec . z , 1f ) ; <nl> + m . transform ( tmp ) ; <nl> + if ( Math . abs ( tmp . w - 1f ) > 1e - 5 ) tmp . scale ( 1f / tmp . w ) ; <nl> + vec . set ( tmp . x , tmp . y , tmp . z ) ; <nl> + } <nl> + <nl> + public static Matrix4f getMatrix ( ModelRotation modelRotation ) <nl> + { <nl> + Matrix4f ret = new Matrix4f ( modelRotation . getMatrix4d ( ) ) , tmp = new Matrix4f ( ) ; <nl> + tmp . setIdentity ( ) ; <nl> + tmp . m03 = tmp . m13 = tmp . m23 = . 5f ; <nl> + ret . mul ( tmp , ret ) ; <nl> + tmp . invert ( ) ; <nl> + / / tmp . m03 = tmp . m13 = tmp . m23 = - . 5f ; <nl> + ret . mul ( tmp ) ; <nl> + return ret ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java b / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java <nl> index c9c356f . . cd1eb84 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java <nl> @ @ - 9 , 6 + 9 , 7 @ @ import javax . vecmath . Vector4f ; <nl> import net . minecraft . client . renderer . block . model . ItemTransformVec3f ; <nl> import net . minecraft . client . resources . model . ModelRotation ; <nl> import net . minecraft . util . EnumFacing ; <nl> + import net . minecraft . util . Vec3i ; <nl> <nl> import org . apache . commons . lang3 . tuple . Pair ; <nl> import org . apache . commons . lang3 . tuple . Triple ; <nl> @ @ - 57 , 7 + 58 , 7 @ @ public class TRSRTransformation implements IModelState , ITransformation <nl> <nl> public TRSRTransformation ( ModelRotation rotation ) <nl> { <nl> - this ( new Matrix4f ( rotation . getMatrix4d ( ) ) ) ; <nl> + this ( rotation . getMatrix ( ) ) ; <nl> } <nl> <nl> private static final TRSRTransformation identity ; <nl> @ @ - 432 , 9 + 433 , 28 @ @ public class TRSRTransformation implements IModelState , ITransformation <nl> <nl> public static EnumFacing rotate ( Matrix4f matrix , EnumFacing facing ) <nl> { <nl> - Vector4f vec = new Vector4f ( facing . getDirectionVec ( ) . getX ( ) , facing . getDirectionVec ( ) . getY ( ) , facing . getDirectionVec ( ) . getZ ( ) , 1 ) ; <nl> + Vec3i dir = facing . getDirectionVec ( ) ; <nl> + Vector4f vec = new Vector4f ( dir . getX ( ) , dir . getY ( ) , dir . getZ ( ) , 0 ) ; <nl> matrix . transform ( vec ) ; <nl> - return EnumFacing . getFacingFromVector ( vec . x / vec . w , vec . y / vec . w , vec . z / vec . w ) ; <nl> + return EnumFacing . getFacingFromVector ( vec . x , vec . y , vec . z ) ; <nl> + } <nl> + <nl> + public static boolean isInteger ( Matrix4f matrix ) <nl> + { <nl> + Matrix4f m = new Matrix4f ( ) ; <nl> + m . setIdentity ( ) ; <nl> + m . m30 = m . m31 = m . m32 = 1 ; <nl> + m . m33 = 0 ; <nl> + m . mul ( matrix , m ) ; <nl> + for ( int i = 0 ; i < 3 ; i + + ) <nl> + { <nl> + for ( int j = 0 ; j < 3 ; j + + ) <nl> + { <nl> + float v = m . getElement ( i , j ) / m . getElement ( 3 , j ) ; <nl> + if ( Math . abs ( v - Math . round ( v ) ) > 1e - 5 ) return false ; <nl> + } <nl> + } <nl> + return true ; <nl> } <nl> <nl> public int rotate ( EnumFacing facing , int vertexIndex ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> index 3811249 . . 123e86f 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> @ @ - 236 , 6 + 236 , 11 @ @ public class B3DLoader implements ICustomModelLoader <nl> public static TRSRTransformation getNodeMatrix ( Animation animation , Node < ? > node , int frame ) <nl> { <nl> TRSRTransformation ret = TRSRTransformation . identity ( ) ; <nl> + if ( node . getParent ( ) ! = null ) <nl> + { <nl> + TRSRTransformation pm = cache . getUnchecked ( Triple . < Animation , Node < ? > , Integer > of ( animation , node . getParent ( ) , frame ) ) ; <nl> + ret = ret . compose ( pm ) ; <nl> + } <nl> Key key = null ; <nl> if ( animation ! = null ) key = animation . getKeys ( ) . get ( frame , node ) ; <nl> else if ( key = = null & & node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; <nl> @ @ - 441 , 14 + 446 , 7 @ @ public class B3DLoader implements ICustomModelLoader <nl> / / gets transformation in global space <nl> public Matrix4f apply ( Node < ? > node ) <nl> { <nl> - TRSRTransformation ret = TRSRTransformation . identity ( ) , pm = null ; <nl> - if ( node . getParent ( ) ! = null ) pm = new TRSRTransformation ( apply ( node . getParent ( ) ) ) ; <nl> - if ( pm ! = null ) <nl> - { <nl> - ret = ret . compose ( pm ) ; <nl> - } <nl> - ret = ret . compose ( state . apply ( PartWrapper . create ( node ) ) ) ; <nl> - return ret . getMatrix ( ) ; <nl> + return state . apply ( PartWrapper . create ( node ) ) . getMatrix ( ) ; <nl> } <nl> } ) ; <nl> for ( Face f : faces )
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch b / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch 
 index c9b9efd . . 94750e3 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / block / model / FaceBakery . java . patch 
 @ @ - 69 , 7 + 69 , 7 @ @ 
 { 
 - this . func _ 178406 _ a ( p _ 178415 _ 1 _ , new Vector3d ( 0 . 5D , 0 . 5D , 0 . 5D ) , p _ 178415 _ 4 _ . func _ 177525 _ a ( ) , new Vector3d ( 1 . 0D , 1 . 0D , 1 . 0D ) ) ; 
 - return p _ 178415 _ 4 _ . func _ 177520 _ a ( p _ 178415 _ 2 _ , p _ 178415 _ 3 _ ) ; 
 - + this . func _ 178406 _ a ( p _ 178415 _ 1 _ , new Vector3d ( 0 . 5D , 0 . 5D , 0 . 5D ) , new Matrix4d ( p _ 178415 _ 4 _ . getMatrix ( ) ) , new Vector3d ( 1 . 0D , 1 . 0D , 1 . 0D ) ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . transform ( p _ 178415 _ 1 _ , p _ 178415 _ 4 _ . getMatrix ( ) ) ; 
 + return p _ 178415 _ 4 _ . rotate ( p _ 178415 _ 2 _ , p _ 178415 _ 3 _ ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch b / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch 
 index 8364265 . . ee7d7cd 100644 
 - - - a / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / resources / model / ModelBakery . java . patch 
 @ @ - 29 , 9 + 29 , 12 @ @ 
 TextureAtlasSprite textureatlassprite = ( TextureAtlasSprite ) this . field _ 177599 _ g . get ( new ResourceLocation ( p _ 177578 _ 1 _ . func _ 178308 _ c ( " particle " ) ) ) ; 
 SimpleBakedModel . Builder builder = ( new SimpleBakedModel . Builder ( p _ 177578 _ 1 _ ) ) . func _ 177646 _ a ( textureatlassprite ) ; 
 Iterator iterator = p _ 177578 _ 1 _ . func _ 178298 _ a ( ) . iterator ( ) ; 
 - @ @ - 516 , 11 + 522 , 11 @ @ 
 + @ @ - 514 , 13 + 520 , 13 @ @ 
 + BlockPartFace blockpartface = ( BlockPartFace ) blockpart . field _ 178240 _ c . get ( enumfacing ) ; 
 + TextureAtlasSprite textureatlassprite1 = ( TextureAtlasSprite ) this . field _ 177599 _ g . get ( new ResourceLocation ( p _ 177578 _ 1 _ . func _ 178308 _ c ( blockpartface . field _ 178242 _ d ) ) ) ; 
 
 - if ( blockpartface . field _ 178244 _ b = = null ) 
 + - if ( blockpartface . field _ 178244 _ b = = null ) 
 + + if ( blockpartface . field _ 178244 _ b = = null | | ! net . minecraftforge . client . model . TRSRTransformation . isInteger ( p _ 177578 _ 2 _ . getMatrix ( ) ) ) 
 { 
 - builder . func _ 177648 _ a ( this . func _ 177589 _ a ( blockpart , blockpartface , textureatlassprite1 , enumfacing , p _ 177578 _ 2 _ , p _ 177578 _ 3 _ ) ) ; 
 + builder . func _ 177648 _ a ( this . makeBakedQuad ( blockpart , blockpartface , textureatlassprite1 , enumfacing , p _ 177578 _ 2 _ , p _ 177578 _ 3 _ ) ) ; 
 diff - - git a / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch b / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch 
 index 01c3616 . . fc6faa7 100644 
 - - - a / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / resources / model / ModelRotation . java . patch 
 @ @ - 15 , 7 + 15 , 7 @ @ 
 } 
 + 
 + public net . minecraftforge . client . model . TRSRTransformation apply ( net . minecraftforge . client . model . IModelPart part ) { return new net . minecraftforge . client . model . TRSRTransformation ( getMatrix ( ) ) ; } 
 - + public javax . vecmath . Matrix4f getMatrix ( ) { return new javax . vecmath . Matrix4f ( func _ 177525 _ a ( ) ) ; } 
 + + public javax . vecmath . Matrix4f getMatrix ( ) { return net . minecraftforge . client . ForgeHooksClient . getMatrix ( this ) ; } 
 + public EnumFacing rotate ( EnumFacing facing ) { return func _ 177523 _ a ( facing ) ; } 
 + public int rotate ( EnumFacing facing , int vertexIndex ) { return func _ 177520 _ a ( facing , vertexIndex ) ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 971b167 . . 2d4f7f9 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 9 , 6 + 9 , 8 @ @ import java . nio . ByteBuffer ; 
 import java . nio . FloatBuffer ; 
 
 import javax . vecmath . Matrix4f ; 
 + import javax . vecmath . Vector3d ; 
 + import javax . vecmath . Vector4f ; 
 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . state . IBlockState ; 
 @ @ - 35 , 6 + 37 , 7 @ @ import net . minecraft . client . resources . I18n ; 
 import net . minecraft . client . resources . model . IBakedModel ; 
 import net . minecraft . client . resources . model . ModelBakery ; 
 import net . minecraft . client . resources . model . ModelManager ; 
 + import net . minecraft . client . resources . model . ModelRotation ; 
 import net . minecraft . client . settings . GameSettings ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . EntityLivingBase ; 
 @ @ - 633 , 4 + 636 , 24 @ @ public class ForgeHooksClient 
 FMLLog . severe ( " Unimplemented vanilla attribute upload : % s " , attrType . getDisplayName ( ) ) ; 
 } 
 } 
 + 
 + public static void transform ( Vector3d vec , Matrix4f m ) 
 + { 
 + Vector4f tmp = new Vector4f ( ( float ) vec . x , ( float ) vec . y , ( float ) vec . z , 1f ) ; 
 + m . transform ( tmp ) ; 
 + if ( Math . abs ( tmp . w - 1f ) > 1e - 5 ) tmp . scale ( 1f / tmp . w ) ; 
 + vec . set ( tmp . x , tmp . y , tmp . z ) ; 
 + } 
 + 
 + public static Matrix4f getMatrix ( ModelRotation modelRotation ) 
 + { 
 + Matrix4f ret = new Matrix4f ( modelRotation . getMatrix4d ( ) ) , tmp = new Matrix4f ( ) ; 
 + tmp . setIdentity ( ) ; 
 + tmp . m03 = tmp . m13 = tmp . m23 = . 5f ; 
 + ret . mul ( tmp , ret ) ; 
 + tmp . invert ( ) ; 
 + / / tmp . m03 = tmp . m13 = tmp . m23 = - . 5f ; 
 + ret . mul ( tmp ) ; 
 + return ret ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java b / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java 
 index c9c356f . . cd1eb84 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java 
 + + + b / src / main / java / net / minecraftforge / client / model / TRSRTransformation . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import javax . vecmath . Vector4f ; 
 import net . minecraft . client . renderer . block . model . ItemTransformVec3f ; 
 import net . minecraft . client . resources . model . ModelRotation ; 
 import net . minecraft . util . EnumFacing ; 
 + import net . minecraft . util . Vec3i ; 
 
 import org . apache . commons . lang3 . tuple . Pair ; 
 import org . apache . commons . lang3 . tuple . Triple ; 
 @ @ - 57 , 7 + 58 , 7 @ @ public class TRSRTransformation implements IModelState , ITransformation 
 
 public TRSRTransformation ( ModelRotation rotation ) 
 { 
 - this ( new Matrix4f ( rotation . getMatrix4d ( ) ) ) ; 
 + this ( rotation . getMatrix ( ) ) ; 
 } 
 
 private static final TRSRTransformation identity ; 
 @ @ - 432 , 9 + 433 , 28 @ @ public class TRSRTransformation implements IModelState , ITransformation 
 
 public static EnumFacing rotate ( Matrix4f matrix , EnumFacing facing ) 
 { 
 - Vector4f vec = new Vector4f ( facing . getDirectionVec ( ) . getX ( ) , facing . getDirectionVec ( ) . getY ( ) , facing . getDirectionVec ( ) . getZ ( ) , 1 ) ; 
 + Vec3i dir = facing . getDirectionVec ( ) ; 
 + Vector4f vec = new Vector4f ( dir . getX ( ) , dir . getY ( ) , dir . getZ ( ) , 0 ) ; 
 matrix . transform ( vec ) ; 
 - return EnumFacing . getFacingFromVector ( vec . x / vec . w , vec . y / vec . w , vec . z / vec . w ) ; 
 + return EnumFacing . getFacingFromVector ( vec . x , vec . y , vec . z ) ; 
 + } 
 + 
 + public static boolean isInteger ( Matrix4f matrix ) 
 + { 
 + Matrix4f m = new Matrix4f ( ) ; 
 + m . setIdentity ( ) ; 
 + m . m30 = m . m31 = m . m32 = 1 ; 
 + m . m33 = 0 ; 
 + m . mul ( matrix , m ) ; 
 + for ( int i = 0 ; i < 3 ; i + + ) 
 + { 
 + for ( int j = 0 ; j < 3 ; j + + ) 
 + { 
 + float v = m . getElement ( i , j ) / m . getElement ( 3 , j ) ; 
 + if ( Math . abs ( v - Math . round ( v ) ) > 1e - 5 ) return false ; 
 + } 
 + } 
 + return true ; 
 } 
 
 public int rotate ( EnumFacing facing , int vertexIndex ) 
 diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 index 3811249 . . 123e86f 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 @ @ - 236 , 6 + 236 , 11 @ @ public class B3DLoader implements ICustomModelLoader 
 public static TRSRTransformation getNodeMatrix ( Animation animation , Node < ? > node , int frame ) 
 { 
 TRSRTransformation ret = TRSRTransformation . identity ( ) ; 
 + if ( node . getParent ( ) ! = null ) 
 + { 
 + TRSRTransformation pm = cache . getUnchecked ( Triple . < Animation , Node < ? > , Integer > of ( animation , node . getParent ( ) , frame ) ) ; 
 + ret = ret . compose ( pm ) ; 
 + } 
 Key key = null ; 
 if ( animation ! = null ) key = animation . getKeys ( ) . get ( frame , node ) ; 
 else if ( key = = null & & node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; 
 @ @ - 441 , 14 + 446 , 7 @ @ public class B3DLoader implements ICustomModelLoader 
 / / gets transformation in global space 
 public Matrix4f apply ( Node < ? > node ) 
 { 
 - TRSRTransformation ret = TRSRTransformation . identity ( ) , pm = null ; 
 - if ( node . getParent ( ) ! = null ) pm = new TRSRTransformation ( apply ( node . getParent ( ) ) ) ; 
 - if ( pm ! = null ) 
 - { 
 - ret = ret . compose ( pm ) ; 
 - } 
 - ret = ret . compose ( state . apply ( PartWrapper . create ( node ) ) ) ; 
 - return ret . getMatrix ( ) ; 
 + return state . apply ( PartWrapper . create ( node ) ) . getMatrix ( ) ; 
 } 
 } ) ; 
 for ( Face f : faces )

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

