BLEU SCORE: 0.034015426186864386

TEST MSG: Slow down Forge chunk gen worker when save queue is to high .
GENERATED MSG: Fix missing patch which caused per - world storage to not be saved .

TEST DIFF (one line): diff - - git a / jsons / 1 . 12 . 2 . json b / jsons / 1 . 12 . 2 . json <nl> index 5f6635f . . e09adb0 100644 <nl> - - - a / jsons / 1 . 12 . 2 . json <nl> + + + b / jsons / 1 . 12 . 2 . json <nl> @ @ - 1 , 10 + 1 , 10 @ @ <nl> { <nl> " assetIndex " : { <nl> " id " : " 1 . 12 " , <nl> - " sha1 " : " 98c430c16a705f18a58a281b27caabf3ef09d40d " , <nl> - " size " : 169253 , <nl> - " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / 98c430c16a705f18a58a281b27caabf3ef09d40d / 1 . 12 . json " , <nl> - " totalSize " : 127453671 <nl> + " sha1 " : " e75e9535754c6f2158b0b18b35660f45c4495d78 " , <nl> + " size " : 169257 , <nl> + " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / e75e9535754c6f2158b0b18b35660f45c4495d78 / 1 . 12 . json " , <nl> + " totalSize " : 127722338 <nl> } , <nl> " assets " : " 1 . 12 " , <nl> " downloads " : { <nl> @ @ - 719 , 6 + 719 , 6 @ @ <nl> " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , <nl> " minimumLauncherVersion " : 18 , <nl> " releaseTime " : " 2017 - 09 - 18T08 : 39 : 46 + 00 : 00 " , <nl> - " time " : " 2018 - 02 - 15T16 : 26 : 45 + 00 : 00 " , <nl> + " time " : " 2018 - 04 - 02T07 : 39 : 26 + 00 : 00 " , <nl> " type " : " release " <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index bafb37b . . 2d4bf10 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 179 , 3 + 179 , 13 @ @ <nl> } <nl> <nl> @ Nullable <nl> + @ @ - 563 , 4 + 650 , 9 @ @ <nl> + return entity ; <nl> + } <nl> + } <nl> + + <nl> + + public int getPendingSaveCount ( ) <nl> + + { <nl> + + return this . field _ 75828 _ a . size ( ) ; <nl> + + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java b / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java <nl> index 148bb1e . . 89a14ba 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> * / <nl> package net . minecraftforge . server . command ; <nl> <nl> + import java . io . IOException ; <nl> import java . util . ArrayDeque ; <nl> import java . util . Queue ; <nl> <nl> @ @ - 26 , 8 + 27 , 10 @ @ import net . minecraft . server . management . PlayerChunkMapEntry ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . text . TextComponentBase ; <nl> import net . minecraft . util . text . TextComponentTranslation ; <nl> + import net . minecraft . world . MinecraftException ; <nl> import net . minecraft . world . WorldServer ; <nl> import net . minecraft . world . chunk . Chunk ; <nl> + import net . minecraft . world . chunk . storage . AnvilChunkLoader ; <nl> import net . minecraftforge . common . DimensionManager ; <nl> import net . minecraftforge . common . WorldWorkerManager . IWorker ; <nl> <nl> @ @ - 40 , 6 + 43 , 7 @ @ public class ChunkGenWorker implements IWorker <nl> private final Queue < BlockPos > queue ; <nl> private final int notificationFrequency ; <nl> private int lastNotification = 0 ; <nl> + private long lastNotifcationTime = 0 ; <nl> private int genned = 0 ; <nl> private Boolean keepingLoaded ; <nl> <nl> @ @ - 51 , 6 + 55 , 7 @ @ public class ChunkGenWorker implements IWorker <nl> this . dim = dim ; <nl> this . queue = buildQueue ( ) ; <nl> this . notificationFrequency = interval ! = - 1 ? interval : Math . max ( total / 20 , 100 ) ; / / Every 5 % or every 100 , whichever is more . <nl> + this . lastNotifcationTime = System . currentTimeMillis ( ) ; / / We also notify at least once every 60 seconds , to show we haven ' t froze . <nl> } <nl> <nl> protected Queue < BlockPos > buildQueue ( ) <nl> @ @ - 97 , 34 + 102 , 48 @ @ public class ChunkGenWorker implements IWorker <nl> } <nl> <nl> @ Override <nl> - public void work ( ) <nl> + public boolean doWork ( ) <nl> { <nl> - BlockPos next = queue . poll ( ) ; <nl> - <nl> - if ( next ! = null ) <nl> + WorldServer world = DimensionManager . getWorld ( dim ) ; <nl> + if ( world = = null ) <nl> { <nl> - WorldServer world = DimensionManager . getWorld ( dim ) ; <nl> + DimensionManager . initDimension ( dim ) ; <nl> + world = DimensionManager . getWorld ( dim ) ; <nl> if ( world = = null ) <nl> { <nl> - DimensionManager . initDimension ( dim ) ; <nl> - world = DimensionManager . getWorld ( dim ) ; <nl> - if ( world = = null ) <nl> - { <nl> - listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . dim _ fail " , dim ) ) ; <nl> - queue . clear ( ) ; <nl> - return ; <nl> - } <nl> + listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . dim _ fail " , dim ) ) ; <nl> + queue . clear ( ) ; <nl> + return false ; <nl> + } <nl> + } <nl> + <nl> + AnvilChunkLoader loader = world . getChunkProvider ( ) . chunkLoader instanceof AnvilChunkLoader ? ( AnvilChunkLoader ) world . getChunkProvider ( ) . chunkLoader : null ; <nl> + if ( loader ! = null & & loader . getPendingSaveCount ( ) > 100 ) <nl> + { <nl> + <nl> + if ( lastNotifcationTime < System . currentTimeMillis ( ) - 10 * 1000 ) <nl> + { <nl> + listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . progress " , total - queue . size ( ) , total ) ) ; <nl> + lastNotifcationTime = System . currentTimeMillis ( ) ; <nl> } <nl> + return false ; <nl> + } <nl> + <nl> + BlockPos next = queue . poll ( ) ; <nl> + <nl> + if ( next ! = null ) <nl> + { <nl> / / While we work we don ' t want to cause world load spam so pause unloading the world . <nl> if ( keepingLoaded = = null ) <nl> { <nl> keepingLoaded = DimensionManager . keepDimensionLoaded ( dim , true ) ; <nl> } <nl> <nl> - if ( + + lastNotification > = notificationFrequency ) <nl> + if ( + + lastNotification > = notificationFrequency | | lastNotifcationTime < System . currentTimeMillis ( ) - 60 * 1000 ) <nl> { <nl> listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . progress " , total - queue . size ( ) , total ) ) ; <nl> lastNotification = 0 ; <nl> + lastNotifcationTime = System . currentTimeMillis ( ) ; <nl> } <nl> <nl> int x = next . getX ( ) ; <nl> @ @ - 144 , 6 + 163 , 14 @ @ public class ChunkGenWorker implements IWorker <nl> world . getChunkFromChunkCoords ( x + 1 , z + 1 ) , <nl> world . getChunkFromChunkCoords ( x , z + 1 ) , <nl> } ; <nl> + try <nl> + { <nl> + world . getChunkProvider ( ) . chunkLoader . saveChunk ( world , target ) ; <nl> + } <nl> + catch ( IOException | MinecraftException e ) <nl> + { <nl> + listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . saveerror " , e . getMessage ( ) ) ) ; <nl> + } <nl> genned + + ; <nl> } <nl> <nl> @ @ - 162 , 6 + 189 , 8 @ @ public class ChunkGenWorker implements IWorker <nl> { <nl> DimensionManager . keepDimensionLoaded ( dim , false ) ; <nl> } <nl> + return false ; <nl> } <nl> + return true ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / WorldServer . java . patch b / patches / minecraft / net / minecraft / world / WorldServer . java . patch <nl> index 2e82f75 . . 6f33e59 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldServer . java . patch <nl> @ @ - 1 , 15 + 1 , 14 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / world / WorldServer . java <nl> + + + . . / src _ work / minecraft / net / minecraft / world / WorldServer . java <nl> - @ @ - 2 , 6 + 2 , 8 @ @ <nl> + @ @ - 2 , 6 + 2 , 7 @ @ <nl> <nl> import cpw . mods . fml . relauncher . Side ; <nl> import cpw . mods . fml . relauncher . SideOnly ; <nl> - + <nl> + import java . io . File ; <nl> import java . util . ArrayList ; <nl> import java . util . HashSet ; <nl> import java . util . Iterator ; <nl> - @ @ - 47 , 11 + 49 , 19 @ @ <nl> + @ @ - 47 , 11 + 48 , 18 @ @ <nl> import net . minecraft . world . biome . WorldChunkManager ; <nl> import net . minecraft . world . chunk . Chunk ; <nl> import net . minecraft . world . chunk . IChunkProvider ; <nl> @ @ - 19 , 7 + 18 , 6 @ @ <nl> import net . minecraft . world . gen . ChunkProviderServer ; <nl> import net . minecraft . world . gen . feature . WorldGeneratorBonusChest ; <nl> import net . minecraft . world . storage . ISaveHandler ; <nl> - + <nl> + import net . minecraftforge . common . ChestGenHooks ; <nl> + import static net . minecraftforge . common . ChestGenHooks . * ; <nl> + import net . minecraftforge . common . DimensionManager ; <nl> @ @ - 29 , 7 + 27 , 7 @ @ <nl> <nl> public class WorldServer extends World <nl> { <nl> - @ @ - 93 , 6 + 103 , 10 @ @ <nl> + @ @ - 93 , 6 + 101 , 10 @ @ <nl> / * * An IntHashMap of entity IDs ( integers ) to their Entity objects . * / <nl> private IntHashMap entityIdMap ; <nl> <nl> @ @ - 40 , 7 + 38 , 7 @ @ <nl> public WorldServer ( MinecraftServer par1MinecraftServer , ISaveHandler par2ISaveHandler , String par3Str , int par4 , WorldSettings par5WorldSettings , Profiler par6Profiler , ILogAgent par7ILogAgent ) <nl> { <nl> super ( par2ISaveHandler , par3Str , par5WorldSettings , WorldProvider . getProviderForDimension ( par4 ) , par6Profiler , par7ILogAgent ) ; <nl> - @ @ - 125 , 8 + 139 , 12 @ @ <nl> + @ @ - 125 , 8 + 137 , 12 @ @ <nl> this . mapStorage . setData ( " scoreboard " , scoreboardsavedata ) ; <nl> } <nl> <nl> @ @ - 54 , 7 + 52 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 188 , 6 + 206 , 10 @ @ <nl> + @ @ - 188 , 6 + 204 , 10 @ @ <nl> this . villageSiegeObj . tick ( ) ; <nl> this . theProfiler . endStartSection ( " portalForcer " ) ; <nl> this . worldTeleporter . removeStalePortalLocations ( this . getTotalWorldTime ( ) ) ; <nl> @ @ - 65 , 7 + 63 , 7 @ @ <nl> this . theProfiler . endSection ( ) ; <nl> this . sendAndApplyBlockEvents ( ) ; <nl> } <nl> - @ @ - 198 , 6 + 220 , 7 @ @ <nl> + @ @ - 198 , 6 + 218 , 7 @ @ <nl> public SpawnListEntry spawnRandomCreature ( EnumCreatureType par1EnumCreatureType , int par2 , int par3 , int par4 ) <nl> { <nl> List list = this . getChunkProvider ( ) . getPossibleCreatures ( par1EnumCreatureType , par2 , par3 , par4 ) ; <nl> @ @ - 73 , 7 + 71 , 7 @ @ <nl> return list ! = null & & ! list . isEmpty ( ) ? ( SpawnListEntry ) WeightedRandom . getRandomItem ( this . rand , list ) : null ; <nl> } <nl> <nl> - @ @ - 241 , 10 + 264 , 7 @ @ <nl> + @ @ - 241 , 10 + 262 , 7 @ @ <nl> <nl> private void resetRainAndThunder ( ) <nl> { <nl> @ @ - 85 , 7 + 83 , 7 @ @ <nl> } <nl> <nl> public boolean areAllPlayersAsleep ( ) <nl> - @ @ - 315 , 6 + 335 , 14 @ @ <nl> + @ @ - 315 , 6 + 333 , 14 @ @ <nl> int i = 0 ; <nl> int j = 0 ; <nl> Iterator iterator = this . activeChunkSet . iterator ( ) ; <nl> @ @ - 100 , 7 + 98 , 7 @ @ <nl> <nl> while ( iterator . hasNext ( ) ) <nl> { <nl> - @ @ - 325 , 14 + 353 , 18 @ @ <nl> + @ @ - 325 , 14 + 351 , 18 @ @ <nl> Chunk chunk = this . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ; <nl> this . moodSoundAndLightCheck ( k , l , chunk ) ; <nl> this . theProfiler . endStartSection ( " tickChunk " ) ; <nl> @ @ - 121 , 7 + 119 , 7 @ @ <nl> { <nl> this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> i1 = this . updateLCG > > 2 ; <nl> - @ @ - 349 , 7 + 381 , 7 @ @ <nl> + @ @ - 349 , 7 + 379 , 7 @ @ <nl> this . theProfiler . endStartSection ( " iceandsnow " ) ; <nl> int i2 ; <nl> <nl> @ @ - 130 , 7 + 128 , 7 @ @ <nl> { <nl> this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> i1 = this . updateLCG > > 2 ; <nl> - @ @ - 437 , 6 + 469 , 9 @ @ <nl> + @ @ - 437 , 6 + 467 , 9 @ @ <nl> public void scheduleBlockUpdateWithPriority ( int par1 , int par2 , int par3 , int par4 , int par5 , int par6 ) <nl> { <nl> NextTickListEntry nextticklistentry = new NextTickListEntry ( par1 , par2 , par3 , par4 ) ; <nl> @ @ - 140 , 7 + 138 , 7 @ @ <nl> byte b0 = 0 ; <nl> <nl> if ( this . scheduledUpdatesAreImmediate & & par4 > 0 ) <nl> - @ @ - 502 , 7 + 537 , 7 @ @ <nl> + @ @ - 502 , 7 + 535 , 7 @ @ <nl> * / <nl> public void updateEntities ( ) <nl> { <nl> @ @ - 149 , 7 + 147 , 7 @ @ <nl> { <nl> if ( this . updateEntityTick + + > = 1200 ) <nl> { <nl> - @ @ - 568 , 6 + 603 , 9 @ @ <nl> + @ @ - 568 , 6 + 601 , 9 @ @ <nl> { <nl> nextticklistentry = ( NextTickListEntry ) iterator . next ( ) ; <nl> iterator . remove ( ) ; <nl> @ @ - 159 , 7 + 157 , 7 @ @ <nl> byte b0 = 0 ; <nl> <nl> if ( this . checkChunksExist ( nextticklistentry . xCoord - b0 , nextticklistentry . yCoord - b0 , nextticklistentry . zCoord - b0 , nextticklistentry . xCoord + b0 , nextticklistentry . yCoord + b0 , nextticklistentry . zCoord + b0 ) ) <nl> - @ @ - 700 , 16 + 738 , 28 @ @ <nl> + @ @ - 700 , 16 + 736 , 28 @ @ <nl> { <nl> ArrayList arraylist = new ArrayList ( ) ; <nl> <nl> @ @ - 198 , 7 + 196 , 7 @ @ <nl> return arraylist ; <nl> } <nl> <nl> - @ @ - 717 , 6 + 767 , 11 @ @ <nl> + @ @ - 717 , 6 + 765 , 11 @ @ <nl> * Called when checking if a certain block can be mined or not . The ' spawn safe zone ' check is located here . <nl> * / <nl> public boolean canMineBlock ( EntityPlayer par1EntityPlayer , int par2 , int par3 , int par4 ) <nl> @ @ - 210 , 7 + 208 , 7 @ @ <nl> { <nl> return ! this . mcServer . isBlockProtected ( this , par2 , par3 , par4 , par1EntityPlayer ) ; <nl> } <nl> - @ @ - 801 , 7 + 856 , 7 @ @ <nl> + @ @ - 801 , 7 + 854 , 7 @ @ <nl> * / <nl> protected void createBonusChest ( ) <nl> { <nl> @ @ - 219 , 7 + 217 , 7 @ @ <nl> <nl> for ( int i = 0 ; i < 10 ; + + i ) <nl> { <nl> - @ @ - 844 , 6 + 899 , 7 @ @ <nl> + @ @ - 844 , 6 + 897 , 7 @ @ <nl> } <nl> <nl> this . chunkProvider . saveChunks ( par1 , par2IProgressUpdate ) ; <nl> @ @ - 227 , 7 + 225 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 866 , 6 + 922 , 7 @ @ <nl> + @ @ - 866 , 6 + 920 , 7 @ @ <nl> this . checkSessionLock ( ) ; <nl> this . saveHandler . saveWorldInfoWithPlayer ( this . worldInfo , this . mcServer . getConfigurationManager ( ) . getHostPlayerData ( ) ) ; <nl> this . mapStorage . saveAllData ( ) ; <nl> @ @ - 235 , 7 + 233 , 7 @ @ <nl> } <nl> <nl> protected void onEntityAdded ( Entity par1Entity ) <nl> - @ @ - 1073 , 4 + 1130 , 9 @ @ <nl> + @ @ - 1073 , 4 + 1128 , 9 @ @ <nl> { <nl> return this . worldTeleporter ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldServerMulti . java . patch b / patches / minecraft / net / minecraft / world / WorldServerMulti . java . patch <nl> new file mode 100644 <nl> index 0000000 . . f127cbe <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / world / WorldServerMulti . java . patch <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + - - - . . / src _ base / minecraft / net / minecraft / world / WorldServerMulti . java <nl> + + + + . . / src _ work / minecraft / net / minecraft / world / WorldServerMulti . java <nl> + @ @ - 19 , 5 + 19 , 8 @ @ <nl> + / * * <nl> + * Saves the chunks to disk . <nl> + * / <nl> + - protected void saveLevel ( ) throws MinecraftException { } <nl> + + protected void saveLevel ( ) throws MinecraftException <nl> + + { <nl> + + this . perWorldStorage . saveAllData ( ) ; <nl> + + } <nl> + }

TEST DIFF:
diff - - git a / jsons / 1 . 12 . 2 . json b / jsons / 1 . 12 . 2 . json 
 index 5f6635f . . e09adb0 100644 
 - - - a / jsons / 1 . 12 . 2 . json 
 + + + b / jsons / 1 . 12 . 2 . json 
 @ @ - 1 , 10 + 1 , 10 @ @ 
 { 
 " assetIndex " : { 
 " id " : " 1 . 12 " , 
 - " sha1 " : " 98c430c16a705f18a58a281b27caabf3ef09d40d " , 
 - " size " : 169253 , 
 - " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / 98c430c16a705f18a58a281b27caabf3ef09d40d / 1 . 12 . json " , 
 - " totalSize " : 127453671 
 + " sha1 " : " e75e9535754c6f2158b0b18b35660f45c4495d78 " , 
 + " size " : 169257 , 
 + " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / e75e9535754c6f2158b0b18b35660f45c4495d78 / 1 . 12 . json " , 
 + " totalSize " : 127722338 
 } , 
 " assets " : " 1 . 12 " , 
 " downloads " : { 
 @ @ - 719 , 6 + 719 , 6 @ @ 
 " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , 
 " minimumLauncherVersion " : 18 , 
 " releaseTime " : " 2017 - 09 - 18T08 : 39 : 46 + 00 : 00 " , 
 - " time " : " 2018 - 02 - 15T16 : 26 : 45 + 00 : 00 " , 
 + " time " : " 2018 - 04 - 02T07 : 39 : 26 + 00 : 00 " , 
 " type " : " release " 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index bafb37b . . 2d4bf10 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 179 , 3 + 179 , 13 @ @ 
 } 
 
 @ Nullable 
 + @ @ - 563 , 4 + 650 , 9 @ @ 
 + return entity ; 
 + } 
 + } 
 + + 
 + + public int getPendingSaveCount ( ) 
 + + { 
 + + return this . field _ 75828 _ a . size ( ) ; 
 + + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java b / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java 
 index 148bb1e . . 89a14ba 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java 
 + + + b / src / main / java / net / minecraftforge / server / command / ChunkGenWorker . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 * / 
 package net . minecraftforge . server . command ; 
 
 + import java . io . IOException ; 
 import java . util . ArrayDeque ; 
 import java . util . Queue ; 
 
 @ @ - 26 , 8 + 27 , 10 @ @ import net . minecraft . server . management . PlayerChunkMapEntry ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . text . TextComponentBase ; 
 import net . minecraft . util . text . TextComponentTranslation ; 
 + import net . minecraft . world . MinecraftException ; 
 import net . minecraft . world . WorldServer ; 
 import net . minecraft . world . chunk . Chunk ; 
 + import net . minecraft . world . chunk . storage . AnvilChunkLoader ; 
 import net . minecraftforge . common . DimensionManager ; 
 import net . minecraftforge . common . WorldWorkerManager . IWorker ; 
 
 @ @ - 40 , 6 + 43 , 7 @ @ public class ChunkGenWorker implements IWorker 
 private final Queue < BlockPos > queue ; 
 private final int notificationFrequency ; 
 private int lastNotification = 0 ; 
 + private long lastNotifcationTime = 0 ; 
 private int genned = 0 ; 
 private Boolean keepingLoaded ; 
 
 @ @ - 51 , 6 + 55 , 7 @ @ public class ChunkGenWorker implements IWorker 
 this . dim = dim ; 
 this . queue = buildQueue ( ) ; 
 this . notificationFrequency = interval ! = - 1 ? interval : Math . max ( total / 20 , 100 ) ; / / Every 5 % or every 100 , whichever is more . 
 + this . lastNotifcationTime = System . currentTimeMillis ( ) ; / / We also notify at least once every 60 seconds , to show we haven ' t froze . 
 } 
 
 protected Queue < BlockPos > buildQueue ( ) 
 @ @ - 97 , 34 + 102 , 48 @ @ public class ChunkGenWorker implements IWorker 
 } 
 
 @ Override 
 - public void work ( ) 
 + public boolean doWork ( ) 
 { 
 - BlockPos next = queue . poll ( ) ; 
 - 
 - if ( next ! = null ) 
 + WorldServer world = DimensionManager . getWorld ( dim ) ; 
 + if ( world = = null ) 
 { 
 - WorldServer world = DimensionManager . getWorld ( dim ) ; 
 + DimensionManager . initDimension ( dim ) ; 
 + world = DimensionManager . getWorld ( dim ) ; 
 if ( world = = null ) 
 { 
 - DimensionManager . initDimension ( dim ) ; 
 - world = DimensionManager . getWorld ( dim ) ; 
 - if ( world = = null ) 
 - { 
 - listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . dim _ fail " , dim ) ) ; 
 - queue . clear ( ) ; 
 - return ; 
 - } 
 + listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . dim _ fail " , dim ) ) ; 
 + queue . clear ( ) ; 
 + return false ; 
 + } 
 + } 
 + 
 + AnvilChunkLoader loader = world . getChunkProvider ( ) . chunkLoader instanceof AnvilChunkLoader ? ( AnvilChunkLoader ) world . getChunkProvider ( ) . chunkLoader : null ; 
 + if ( loader ! = null & & loader . getPendingSaveCount ( ) > 100 ) 
 + { 
 + 
 + if ( lastNotifcationTime < System . currentTimeMillis ( ) - 10 * 1000 ) 
 + { 
 + listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . progress " , total - queue . size ( ) , total ) ) ; 
 + lastNotifcationTime = System . currentTimeMillis ( ) ; 
 } 
 + return false ; 
 + } 
 + 
 + BlockPos next = queue . poll ( ) ; 
 + 
 + if ( next ! = null ) 
 + { 
 / / While we work we don ' t want to cause world load spam so pause unloading the world . 
 if ( keepingLoaded = = null ) 
 { 
 keepingLoaded = DimensionManager . keepDimensionLoaded ( dim , true ) ; 
 } 
 
 - if ( + + lastNotification > = notificationFrequency ) 
 + if ( + + lastNotification > = notificationFrequency | | lastNotifcationTime < System . currentTimeMillis ( ) - 60 * 1000 ) 
 { 
 listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . progress " , total - queue . size ( ) , total ) ) ; 
 lastNotification = 0 ; 
 + lastNotifcationTime = System . currentTimeMillis ( ) ; 
 } 
 
 int x = next . getX ( ) ; 
 @ @ - 144 , 6 + 163 , 14 @ @ public class ChunkGenWorker implements IWorker 
 world . getChunkFromChunkCoords ( x + 1 , z + 1 ) , 
 world . getChunkFromChunkCoords ( x , z + 1 ) , 
 } ; 
 + try 
 + { 
 + world . getChunkProvider ( ) . chunkLoader . saveChunk ( world , target ) ; 
 + } 
 + catch ( IOException | MinecraftException e ) 
 + { 
 + listener . sendMessage ( TextComponentHelper . createComponentTranslation ( listener , " commands . forge . gen . saveerror " , e . getMessage ( ) ) ) ; 
 + } 
 genned + + ; 
 } 
 
 @ @ - 162 , 6 + 189 , 8 @ @ public class ChunkGenWorker implements IWorker 
 { 
 DimensionManager . keepDimensionLoaded ( dim , false ) ; 
 } 
 + return false ; 
 } 
 + return true ; 
 } 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / WorldServer . java . patch b / patches / minecraft / net / minecraft / world / WorldServer . java . patch 
 index 2e82f75 . . 6f33e59 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldServer . java . patch 
 @ @ - 1 , 15 + 1 , 14 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / world / WorldServer . java 
 + + + . . / src _ work / minecraft / net / minecraft / world / WorldServer . java 
 - @ @ - 2 , 6 + 2 , 8 @ @ 
 + @ @ - 2 , 6 + 2 , 7 @ @ 
 
 import cpw . mods . fml . relauncher . Side ; 
 import cpw . mods . fml . relauncher . SideOnly ; 
 - + 
 + import java . io . File ; 
 import java . util . ArrayList ; 
 import java . util . HashSet ; 
 import java . util . Iterator ; 
 - @ @ - 47 , 11 + 49 , 19 @ @ 
 + @ @ - 47 , 11 + 48 , 18 @ @ 
 import net . minecraft . world . biome . WorldChunkManager ; 
 import net . minecraft . world . chunk . Chunk ; 
 import net . minecraft . world . chunk . IChunkProvider ; 
 @ @ - 19 , 7 + 18 , 6 @ @ 
 import net . minecraft . world . gen . ChunkProviderServer ; 
 import net . minecraft . world . gen . feature . WorldGeneratorBonusChest ; 
 import net . minecraft . world . storage . ISaveHandler ; 
 - + 
 + import net . minecraftforge . common . ChestGenHooks ; 
 + import static net . minecraftforge . common . ChestGenHooks . * ; 
 + import net . minecraftforge . common . DimensionManager ; 
 @ @ - 29 , 7 + 27 , 7 @ @ 
 
 public class WorldServer extends World 
 { 
 - @ @ - 93 , 6 + 103 , 10 @ @ 
 + @ @ - 93 , 6 + 101 , 10 @ @ 
 / * * An IntHashMap of entity IDs ( integers ) to their Entity objects . * / 
 private IntHashMap entityIdMap ; 
 
 @ @ - 40 , 7 + 38 , 7 @ @ 
 public WorldServer ( MinecraftServer par1MinecraftServer , ISaveHandler par2ISaveHandler , String par3Str , int par4 , WorldSettings par5WorldSettings , Profiler par6Profiler , ILogAgent par7ILogAgent ) 
 { 
 super ( par2ISaveHandler , par3Str , par5WorldSettings , WorldProvider . getProviderForDimension ( par4 ) , par6Profiler , par7ILogAgent ) ; 
 - @ @ - 125 , 8 + 139 , 12 @ @ 
 + @ @ - 125 , 8 + 137 , 12 @ @ 
 this . mapStorage . setData ( " scoreboard " , scoreboardsavedata ) ; 
 } 
 
 @ @ - 54 , 7 + 52 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 188 , 6 + 206 , 10 @ @ 
 + @ @ - 188 , 6 + 204 , 10 @ @ 
 this . villageSiegeObj . tick ( ) ; 
 this . theProfiler . endStartSection ( " portalForcer " ) ; 
 this . worldTeleporter . removeStalePortalLocations ( this . getTotalWorldTime ( ) ) ; 
 @ @ - 65 , 7 + 63 , 7 @ @ 
 this . theProfiler . endSection ( ) ; 
 this . sendAndApplyBlockEvents ( ) ; 
 } 
 - @ @ - 198 , 6 + 220 , 7 @ @ 
 + @ @ - 198 , 6 + 218 , 7 @ @ 
 public SpawnListEntry spawnRandomCreature ( EnumCreatureType par1EnumCreatureType , int par2 , int par3 , int par4 ) 
 { 
 List list = this . getChunkProvider ( ) . getPossibleCreatures ( par1EnumCreatureType , par2 , par3 , par4 ) ; 
 @ @ - 73 , 7 + 71 , 7 @ @ 
 return list ! = null & & ! list . isEmpty ( ) ? ( SpawnListEntry ) WeightedRandom . getRandomItem ( this . rand , list ) : null ; 
 } 
 
 - @ @ - 241 , 10 + 264 , 7 @ @ 
 + @ @ - 241 , 10 + 262 , 7 @ @ 
 
 private void resetRainAndThunder ( ) 
 { 
 @ @ - 85 , 7 + 83 , 7 @ @ 
 } 
 
 public boolean areAllPlayersAsleep ( ) 
 - @ @ - 315 , 6 + 335 , 14 @ @ 
 + @ @ - 315 , 6 + 333 , 14 @ @ 
 int i = 0 ; 
 int j = 0 ; 
 Iterator iterator = this . activeChunkSet . iterator ( ) ; 
 @ @ - 100 , 7 + 98 , 7 @ @ 
 
 while ( iterator . hasNext ( ) ) 
 { 
 - @ @ - 325 , 14 + 353 , 18 @ @ 
 + @ @ - 325 , 14 + 351 , 18 @ @ 
 Chunk chunk = this . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ; 
 this . moodSoundAndLightCheck ( k , l , chunk ) ; 
 this . theProfiler . endStartSection ( " tickChunk " ) ; 
 @ @ - 121 , 7 + 119 , 7 @ @ 
 { 
 this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 i1 = this . updateLCG > > 2 ; 
 - @ @ - 349 , 7 + 381 , 7 @ @ 
 + @ @ - 349 , 7 + 379 , 7 @ @ 
 this . theProfiler . endStartSection ( " iceandsnow " ) ; 
 int i2 ; 
 
 @ @ - 130 , 7 + 128 , 7 @ @ 
 { 
 this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 i1 = this . updateLCG > > 2 ; 
 - @ @ - 437 , 6 + 469 , 9 @ @ 
 + @ @ - 437 , 6 + 467 , 9 @ @ 
 public void scheduleBlockUpdateWithPriority ( int par1 , int par2 , int par3 , int par4 , int par5 , int par6 ) 
 { 
 NextTickListEntry nextticklistentry = new NextTickListEntry ( par1 , par2 , par3 , par4 ) ; 
 @ @ - 140 , 7 + 138 , 7 @ @ 
 byte b0 = 0 ; 
 
 if ( this . scheduledUpdatesAreImmediate & & par4 > 0 ) 
 - @ @ - 502 , 7 + 537 , 7 @ @ 
 + @ @ - 502 , 7 + 535 , 7 @ @ 
 * / 
 public void updateEntities ( ) 
 { 
 @ @ - 149 , 7 + 147 , 7 @ @ 
 { 
 if ( this . updateEntityTick + + > = 1200 ) 
 { 
 - @ @ - 568 , 6 + 603 , 9 @ @ 
 + @ @ - 568 , 6 + 601 , 9 @ @ 
 { 
 nextticklistentry = ( NextTickListEntry ) iterator . next ( ) ; 
 iterator . remove ( ) ; 
 @ @ - 159 , 7 + 157 , 7 @ @ 
 byte b0 = 0 ; 
 
 if ( this . checkChunksExist ( nextticklistentry . xCoord - b0 , nextticklistentry . yCoord - b0 , nextticklistentry . zCoord - b0 , nextticklistentry . xCoord + b0 , nextticklistentry . yCoord + b0 , nextticklistentry . zCoord + b0 ) ) 
 - @ @ - 700 , 16 + 738 , 28 @ @ 
 + @ @ - 700 , 16 + 736 , 28 @ @ 
 { 
 ArrayList arraylist = new ArrayList ( ) ; 
 
 @ @ - 198 , 7 + 196 , 7 @ @ 
 return arraylist ; 
 } 
 
 - @ @ - 717 , 6 + 767 , 11 @ @ 
 + @ @ - 717 , 6 + 765 , 11 @ @ 
 * Called when checking if a certain block can be mined or not . The ' spawn safe zone ' check is located here . 
 * / 
 public boolean canMineBlock ( EntityPlayer par1EntityPlayer , int par2 , int par3 , int par4 ) 
 @ @ - 210 , 7 + 208 , 7 @ @ 
 { 
 return ! this . mcServer . isBlockProtected ( this , par2 , par3 , par4 , par1EntityPlayer ) ; 
 } 
 - @ @ - 801 , 7 + 856 , 7 @ @ 
 + @ @ - 801 , 7 + 854 , 7 @ @ 
 * / 
 protected void createBonusChest ( ) 
 { 
 @ @ - 219 , 7 + 217 , 7 @ @ 
 
 for ( int i = 0 ; i < 10 ; + + i ) 
 { 
 - @ @ - 844 , 6 + 899 , 7 @ @ 
 + @ @ - 844 , 6 + 897 , 7 @ @ 
 } 
 
 this . chunkProvider . saveChunks ( par1 , par2IProgressUpdate ) ; 
 @ @ - 227 , 7 + 225 , 7 @ @ 
 } 
 } 
 
 - @ @ - 866 , 6 + 922 , 7 @ @ 
 + @ @ - 866 , 6 + 920 , 7 @ @ 
 this . checkSessionLock ( ) ; 
 this . saveHandler . saveWorldInfoWithPlayer ( this . worldInfo , this . mcServer . getConfigurationManager ( ) . getHostPlayerData ( ) ) ; 
 this . mapStorage . saveAllData ( ) ; 
 @ @ - 235 , 7 + 233 , 7 @ @ 
 } 
 
 protected void onEntityAdded ( Entity par1Entity ) 
 - @ @ - 1073 , 4 + 1130 , 9 @ @ 
 + @ @ - 1073 , 4 + 1128 , 9 @ @ 
 { 
 return this . worldTeleporter ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldServerMulti . java . patch b / patches / minecraft / net / minecraft / world / WorldServerMulti . java . patch 
 new file mode 100644 
 index 0000000 . . f127cbe 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / world / WorldServerMulti . java . patch 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + - - - . . / src _ base / minecraft / net / minecraft / world / WorldServerMulti . java 
 + + + + . . / src _ work / minecraft / net / minecraft / world / WorldServerMulti . java 
 + @ @ - 19 , 5 + 19 , 8 @ @ 
 + / * * 
 + * Saves the chunks to disk . 
 + * / 
 + - protected void saveLevel ( ) throws MinecraftException { } 
 + + protected void saveLevel ( ) throws MinecraftException 
 + + { 
 + + this . perWorldStorage . saveAllData ( ) ; 
 + + } 
 + }
