BLEU SCORE: 0.004985938711569524

TEST MSG: PlayerManager updated .
GENERATED MSG: WorldServer : NOTE - ChestGenHooks has NOT been updated in accordance with plans for removing it

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch <nl> index 7bb6f7e . . 7340a0b 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch <nl> @ @ - 1 , 10 + 1 , 121 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / server / management / PlayerManager . java <nl> + + + . . / src - work / minecraft / net / minecraft / server / management / PlayerManager . java <nl> - @ @ - 338 , 6 + 338 , 7 @ @ <nl> - int i1 = this . field _ 72698 _ e ; <nl> - int j1 = i - k ; <nl> - int k1 = j - l ; <nl> - + List < ChunkCoordIntPair > chunksToLoad = Lists . newArrayList ( ) ; <nl> + @ @ - 468 , 11 + 468 , 18 @ @ <nl> + private int field _ 187288 _ h ; <nl> + private long field _ 187289 _ i ; <nl> + private boolean field _ 187290 _ j ; <nl> + + private Runnable loadedRunnable = new Runnable ( ) <nl> + + { <nl> + + public void run ( ) <nl> + + { <nl> + + PlayerInstance . this . field _ 187286 _ f = PlayerManager . this . func _ 72688 _ a ( ) . func _ 72863 _ F ( ) . func _ 186028 _ c ( PlayerInstance . this . field _ 187284 _ d . field _ 77276 _ a , PlayerInstance . this . field _ 187284 _ d . field _ 77275 _ b ) ; <nl> + + } <nl> + + } ; <nl> <nl> - if ( j1 ! = 0 | | k1 ! = 0 ) <nl> + public PlayerInstance ( int p _ i1518 _ 2 _ , int p _ i1518 _ 3 _ ) <nl> + { <nl> + this . field _ 187284 _ d = new ChunkCoordIntPair ( p _ i1518 _ 2 _ , p _ i1518 _ 3 _ ) ; <nl> + - this . field _ 187286 _ f = PlayerManager . this . func _ 72688 _ a ( ) . func _ 72863 _ F ( ) . func _ 186028 _ c ( p _ i1518 _ 2 _ , p _ i1518 _ 3 _ ) ; <nl> + + PlayerManager . this . func _ 72688 _ a ( ) . func _ 72863 _ F ( ) . loadChunk ( p _ i1518 _ 2 _ , p _ i1518 _ 3 _ , this . loadedRunnable ) ; <nl> + } <nl> + <nl> + public ChunkCoordIntPair func _ 187264 _ a ( ) <nl> + @ @ - 506 , 6 + 513 , 20 @ @ <nl> + { <nl> + if ( this . field _ 187283 _ c . contains ( p _ 187277 _ 1 _ ) ) <nl> { <nl> + + / / If we haven ' t loaded yet don ' t load the chunk just so we can clean it up <nl> + + if ( this . field _ 187286 _ f = = null ) <nl> + + { <nl> + + this . field _ 187283 _ c . remove ( p _ 187277 _ 1 _ ) ; <nl> + + <nl> + + if ( this . field _ 187283 _ c . isEmpty ( ) ) <nl> + + { <nl> + + net . minecraftforge . common . chunkio . ChunkIOExecutor . dropQueuedChunkLoad ( PlayerManager . this . func _ 72688 _ a ( ) , this . field _ 187284 _ d . field _ 77276 _ a , this . field _ 187284 _ d . field _ 77275 _ b , this . loadedRunnable ) ; <nl> + + PlayerManager . this . func _ 187305 _ b ( this ) ; <nl> + + } <nl> + + <nl> + + return ; <nl> + + } <nl> + + <nl> + if ( this . field _ 187290 _ j ) <nl> + { <nl> + p _ 187277 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new SPacketUnloadChunk ( this . field _ 187284 _ d . field _ 77276 _ a , this . field _ 187284 _ d . field _ 77275 _ b ) ) ; <nl> + @ @ - 513 , 6 + 534 , 8 @ @ <nl> + <nl> + this . field _ 187283 _ c . remove ( p _ 187277 _ 1 _ ) ; <nl> + <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkWatchEvent . UnWatch ( this . field _ 187284 _ d , p _ 187277 _ 1 _ ) ) ; <nl> + + <nl> + if ( this . field _ 187283 _ c . isEmpty ( ) ) <nl> + { <nl> + PlayerManager . this . func _ 187305 _ b ( this ) ; <nl> + @ @ - 625 , 7 + 648 , 7 @ @ <nl> + <nl> + this . field _ 187288 _ h | = 1 < < ( p _ 187265 _ 2 _ > > 4 ) ; <nl> + <nl> + - if ( this . field _ 187287 _ g < 64 ) <nl> + + / / Forge ; Cache everything , so always run <nl> + { <nl> + short short1 = ( short ) ( p _ 187265 _ 1 _ < < 12 | p _ 187265 _ 3 _ < < 8 | p _ 187265 _ 2 _ ) ; <nl> + <nl> + @ @ - 637 , 6 + 660 , 8 @ @ <nl> + } <nl> + } <nl> + <nl> + + if ( this . field _ 187287 _ g = = this . field _ 187285 _ e . length ) <nl> + + this . field _ 187285 _ e = java . util . Arrays . copyOf ( this . field _ 187285 _ e , this . field _ 187285 _ e . length < < 1 ) ; <nl> + this . field _ 187285 _ e [ this . field _ 187287 _ g + + ] = short1 ; <nl> + } <nl> + } <nl> + @ @ - 653 , 6 + 678 , 7 @ @ <nl> + } <nl> + } <nl> + <nl> + + @ SuppressWarnings ( " unused " ) <nl> + public void func _ 187280 _ d ( ) <nl> + { <nl> + if ( this . field _ 187290 _ j & & this . field _ 187286 _ f ! = null ) <nl> + @ @ - 666 , 18 + 692 , 20 @ @ <nl> + int k = ( this . field _ 187285 _ e [ 0 ] > > 8 & 15 ) + this . field _ 187284 _ d . field _ 77275 _ b * 16 ; <nl> + BlockPos blockpos = new BlockPos ( i , j , k ) ; <nl> + this . func _ 187267 _ a ( new SPacketBlockChange ( PlayerManager . this . func _ 72688 _ a ( ) , blockpos ) ) ; <nl> + + net . minecraft . block . state . IBlockState state = PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos ) ; <nl> + <nl> + - if ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos ) . func _ 177230 _ c ( ) . func _ 149716 _ u ( ) ) <nl> + + if ( state . func _ 177230 _ c ( ) . hasTileEntity ( state ) ) <nl> + { <nl> + this . func _ 187273 _ a ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 175625 _ s ( blockpos ) ) ; <nl> + } <nl> + } <nl> + - else if ( this . field _ 187287 _ g = = 64 ) <nl> + + else if ( this . field _ 187287 _ g > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) <nl> + { <nl> + int i1 = this . field _ 187284 _ d . field _ 77276 _ a * 16 ; <nl> + int k1 = this . field _ 187284 _ d . field _ 77275 _ b * 16 ; <nl> + this . func _ 187267 _ a ( new SPacketChunkData ( this . field _ 187286 _ f , false , this . field _ 187288 _ h ) ) ; <nl> + <nl> + + if ( false ) / / Forge : Grabs ALL the tile entities , costly on a modded server , only send needed ones <nl> + for ( int i2 = 0 ; i2 < 16 ; + + i2 ) <nl> + { <nl> + if ( ( this . field _ 187288 _ h & 1 < < i2 ) ! = 0 ) <nl> + @ @ - 695 , 15 + 723 , 17 @ @ <nl> + else <nl> + { <nl> + this . func _ 187267 _ a ( new SPacketMultiBlockChange ( this . field _ 187287 _ g , this . field _ 187285 _ e , this . field _ 187286 _ f ) ) ; <nl> + - <nl> + + } <nl> + + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small <nl> + for ( int j1 = 0 ; j1 < this . field _ 187287 _ g ; + + j1 ) <nl> + { <nl> + int l1 = ( this . field _ 187285 _ e [ j1 ] > > 12 & 15 ) + this . field _ 187284 _ d . field _ 77276 _ a * 16 ; <nl> + int j2 = this . field _ 187285 _ e [ j1 ] & 255 ; <nl> + int l2 = ( this . field _ 187285 _ e [ j1 ] > > 8 & 15 ) + this . field _ 187284 _ d . field _ 77275 _ b * 16 ; <nl> + BlockPos blockpos1 = new BlockPos ( l1 , j2 , l2 ) ; <nl> + + net . minecraft . block . state . IBlockState state = PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos1 ) ; <nl> + <nl> + - if ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos1 ) . func _ 177230 _ c ( ) . func _ 149716 _ u ( ) ) <nl> + + if ( state . func _ 177230 _ c ( ) . hasTileEntity ( state ) ) <nl> + { <nl> + this . func _ 187273 _ a ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 175625 _ s ( blockpos1 ) ) ; <nl> + } <nl> diff - - git a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej <nl> deleted file mode 100644 <nl> index cb7cb9c . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 223 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - int j = ( int ) player . posZ > > 4 ; <nl> - player . managedPosX = player . posX ; <nl> - player . managedPosZ = player . posZ ; <nl> - + / / Load nearby chunks first <nl> - + List < ChunkCoordIntPair > chunkList = Lists . newArrayList ( ) ; <nl> - <nl> - for ( int k = i - this . playerViewRadius ; k < = i + this . playerViewRadius ; + + k ) <nl> - { <nl> - for ( int l = j - this . playerViewRadius ; l < = j + this . playerViewRadius ; + + l ) <nl> - { <nl> - - this . getPlayerInstance ( k , l , true ) . addPlayer ( player ) ; <nl> - + chunkList . add ( new ChunkCoordIntPair ( k , l ) ) ; <nl> - } <nl> - } <nl> - <nl> - + java . util . Collections . sort ( chunkList , new net . minecraftforge . common . util . ChunkCoordComparator ( player ) ) ; <nl> - + <nl> - + for ( ChunkCoordIntPair pair : chunkList ) <nl> - + { <nl> - + this . getPlayerInstance ( pair . chunkXPos , pair . chunkZPos , true ) . addPlayer ( player ) ; <nl> - + } <nl> - + <nl> - this . players . add ( player ) ; <nl> - this . filterChunkLoadQueue ( player ) ; <nl> - } <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 3 <nl> - { <nl> - if ( ! this . overlaps ( l1 , i2 , k , l , i1 ) ) <nl> - { <nl> - - this . getPlayerInstance ( l1 , i2 , true ) . addPlayer ( player ) ; <nl> - + chunksToLoad . add ( new ChunkCoordIntPair ( l1 , i2 ) ) ; <nl> - } <nl> - <nl> - if ( ! this . overlaps ( l1 - j1 , i2 - k1 , i , j , i1 ) ) <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 4 <nl> - this . filterChunkLoadQueue ( player ) ; <nl> - player . managedPosX = player . posX ; <nl> - player . managedPosZ = player . posZ ; <nl> - + / / send nearest chunks first <nl> - + java . util . Collections . sort ( chunksToLoad , new net . minecraftforge . common . util . ChunkCoordComparator ( player ) ) ; <nl> - + <nl> - + for ( ChunkCoordIntPair pair : chunksToLoad ) <nl> - + { <nl> - + this . getPlayerInstance ( pair . chunkXPos , pair . chunkZPos , true ) . addPlayer ( player ) ; <nl> - + } <nl> - + <nl> - + if ( i1 > 1 | | i1 < - 1 | | j1 > 1 | | j1 < - 1 ) <nl> - + { <nl> - + java . util . Collections . sort ( player . loadedChunks , new net . minecraftforge . common . util . ChunkCoordComparator ( player ) ) ; <nl> - + } <nl> - } <nl> - } <nl> - } <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 5 <nl> - private int numBlocksToUpdate ; <nl> - private int flagsYAreasToUpdate ; <nl> - private long previousWorldTime ; <nl> - + private final java . util . HashMap < EntityPlayerMP , Runnable > players = new java . util . HashMap < EntityPlayerMP , Runnable > ( ) ; <nl> - + private boolean loaded = false ; <nl> - + private Runnable loadedRunnable = new Runnable ( ) <nl> - + { <nl> - + public void run ( ) <nl> - + { <nl> - + PlayerInstance . this . loaded = true ; <nl> - + } <nl> - + } ; <nl> - <nl> - public PlayerInstance ( int chunkX , int chunkZ ) <nl> - { <nl> - this . chunkCoords = new ChunkCoordIntPair ( chunkX , chunkZ ) ; <nl> - - PlayerManager . this . getWorldServer ( ) . theChunkProviderServer . loadChunk ( chunkX , chunkZ ) ; <nl> - + PlayerManager . this . getWorldServer ( ) . theChunkProviderServer . loadChunk ( chunkX , chunkZ , this . loadedRunnable ) ; <nl> - } <nl> - <nl> - public void addPlayer ( EntityPlayerMP player ) <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 6 <nl> - } <nl> - <nl> - this . playersWatchingChunk . add ( player ) ; <nl> - + Runnable playerRunnable = null ; <nl> - + if ( this . loaded ) <nl> - + { <nl> - player . loadedChunks . add ( this . chunkCoords ) ; <nl> - + } <nl> - + else <nl> - + { <nl> - + final EntityPlayerMP tmp = player ; <nl> - + playerRunnable = new Runnable ( ) <nl> - + { <nl> - + public void run ( ) <nl> - + { <nl> - + tmp . loadedChunks . add ( PlayerInstance . this . chunkCoords ) ; <nl> - + } <nl> - + } ; <nl> - + PlayerManager . this . getWorldServer ( ) . theChunkProviderServer . loadChunk ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos , playerRunnable ) ; <nl> - + } <nl> - + this . players . put ( player , playerRunnable ) ; <nl> - } <nl> - } <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 7 <nl> - { <nl> - if ( this . playersWatchingChunk . contains ( player ) ) <nl> - { <nl> - + / / If we haven ' t loaded yet don ' t load the chunk just so we can clean it up <nl> - + if ( ! this . loaded ) <nl> - + { <nl> - + net . minecraftforge . common . chunkio . ChunkIOExecutor . dropQueuedChunkLoad ( PlayerManager . this . getWorldServer ( ) , this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos , this . players . get ( player ) ) ; <nl> - + this . playersWatchingChunk . remove ( player ) ; <nl> - + this . players . remove ( player ) ; <nl> - + <nl> - + if ( this . playersWatchingChunk . isEmpty ( ) ) <nl> - + { <nl> - + net . minecraftforge . common . chunkio . ChunkIOExecutor . dropQueuedChunkLoad ( PlayerManager . this . getWorldServer ( ) , this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos , this . loadedRunnable ) ; <nl> - + long i = ( long ) this . chunkCoords . chunkXPos + 2147483647L | ( long ) this . chunkCoords . chunkZPos + 2147483647L < < 32 ; <nl> - + PlayerManager . this . playerInstances . remove ( i ) ; <nl> - + PlayerManager . this . playerInstanceList . remove ( this ) ; <nl> - + } <nl> - + <nl> - + return ; <nl> - + } <nl> - + <nl> - Chunk chunk = PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ; <nl> - <nl> - if ( chunk . isPopulated ( ) ) <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 8 <nl> - player . playerNetServerHandler . sendPacket ( new S21PacketChunkData ( chunk , true , 0 ) ) ; <nl> - } <nl> - <nl> - + this . players . remove ( player ) ; <nl> - this . playersWatchingChunk . remove ( player ) ; <nl> - player . loadedChunks . remove ( this . chunkCoords ) ; <nl> - <nl> - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkWatchEvent . UnWatch ( chunkCoords , player ) ) ; <nl> - + <nl> - if ( this . playersWatchingChunk . isEmpty ( ) ) <nl> - { <nl> - long i = ( long ) this . chunkCoords . chunkXPos + 2147483647L | ( long ) this . chunkCoords . chunkZPos + 2147483647L < < 32 ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 9 <nl> - <nl> - this . flagsYAreasToUpdate | = 1 < < ( y > > 4 ) ; <nl> - <nl> - - if ( this . numBlocksToUpdate < 64 ) <nl> - + / / Forge ; Cache everything , so always run <nl> - { <nl> - short short1 = ( short ) ( x < < 12 | z < < 8 | y ) ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 10 <nl> - } <nl> - } <nl> - <nl> - + if ( numBlocksToUpdate = = locationOfBlockChange . length ) <nl> - + { <nl> - + locationOfBlockChange = java . util . Arrays . copyOf ( locationOfBlockChange , locationOfBlockChange . length < < 1 ) ; <nl> - + } <nl> - this . locationOfBlockChange [ this . numBlocksToUpdate + + ] = short1 ; <nl> - } <nl> - } <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 11 <nl> - } <nl> - } <nl> - <nl> - + @ SuppressWarnings ( " unused " ) <nl> - public void onUpdate ( ) <nl> - { <nl> - if ( this . numBlocksToUpdate ! = 0 ) <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 12 <nl> - BlockPos blockpos = new BlockPos ( i , j , k ) ; <nl> - this . sendToAllPlayersWatchingChunk ( new S23PacketBlockChange ( PlayerManager . this . theWorldServer , blockpos ) ) ; <nl> - <nl> - - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos ) . getBlock ( ) . hasTileEntity ( ) ) <nl> - + if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos ) . getBlock ( ) . hasTileEntity ( PlayerManager . this . theWorldServer . getBlockState ( blockpos ) ) ) <nl> - { <nl> - this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos ) ) ; <nl> - } <nl> - } <nl> - - else if ( this . numBlocksToUpdate = = 64 ) <nl> - + else if ( this . numBlocksToUpdate > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) <nl> - { <nl> - int i1 = this . chunkCoords . chunkXPos * 16 ; <nl> - int k1 = this . chunkCoords . chunkZPos * 16 ; <nl> - this . sendToAllPlayersWatchingChunk ( new S21PacketChunkData ( PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) , false , this . flagsYAreasToUpdate ) ) ; <nl> - <nl> - - for ( int i2 = 0 ; i2 < 16 ; + + i2 ) <nl> - + / / Forge : Grabs ALL tile entities is costly on a modded server , only send needed ones <nl> - + for ( int i2 = 0 ; false & & i2 < 16 ; + + i2 ) <nl> - { <nl> - if ( ( this . flagsYAreasToUpdate & 1 < < i2 ) ! = 0 ) <nl> - { <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 13 <nl> - else <nl> - { <nl> - this . sendToAllPlayersWatchingChunk ( new S22PacketMultiBlockChange ( this . numBlocksToUpdate , this . locationOfBlockChange , PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ) ) ; <nl> - - <nl> - + } <nl> - + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small <nl> - + WorldServer world = PlayerManager . this . theWorldServer ; <nl> - for ( int j1 = 0 ; j1 < this . numBlocksToUpdate ; + + j1 ) <nl> - { <nl> - int l1 = ( this . locationOfBlockChange [ j1 ] > > 12 & 15 ) + this . chunkCoords . chunkXPos * 16 ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 14 <nl> - int l2 = ( this . locationOfBlockChange [ j1 ] > > 8 & 15 ) + this . chunkCoords . chunkZPos * 16 ; <nl> - BlockPos blockpos1 = new BlockPos ( l1 , j2 , l2 ) ; <nl> - <nl> - - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( ) ) <nl> - + if ( world . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( world . getBlockState ( blockpos1 ) ) ) <nl> - { <nl> - this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos1 ) ) ; <nl> - } <nl> - + + + + END PATCH <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 4281d02 . . a2df630 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 279 , 3 + 279 , 6 @ @ public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185946 _ g # scale <nl> public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185947 _ h # depth <nl> private - f net / minecraft / world / gen / ChunkProviderHell / field _ 185939 _ I # netherCaveGenerator <nl> private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73172 _ c # netherBridgeGenerator <nl> + <nl> + # PlayerManager <nl> + private - f net . minecraft . server . management . PlayerManager $ PlayerInstance field _ 187285 _ e # field _ 187285 _ e <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch b / patches . mcp / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch <nl> deleted file mode 100644 <nl> index d120f75 . . 0000000 <nl> - - - a / patches . mcp / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 11 + 0 , 0 @ @ <nl> - - - - . . / src - base / minecraft / net / minecraft / client / gui / achievement / GuiStats . java <nl> - + + + . . / src - work / minecraft / net / minecraft / client / gui / achievement / GuiStats . java <nl> - @ @ - 877 , 7 + 877 , 7 @ @ <nl> - super ( mcIn , GuiStats . this . width , GuiStats . this . height , 32 , GuiStats . this . height - 64 , GuiStats . this . fontRendererObj . FONT _ HEIGHT * 4 ) ; <nl> - this . setShowSelectionBox ( false ) ; <nl> - <nl> - - for ( EntityList . EntityEggInfo entitylist $ entityegginfo : EntityList . entityEggs . values ( ) ) <nl> - + for ( EntityList . EntityEggInfo entitylist $ entityegginfo : com . google . common . collect . Iterables . concat ( EntityList . entityEggs . values ( ) , net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . values ( ) ) ) <nl> - { <nl> - if ( GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151512 _ d ) > 0 | | GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151513 _ e ) > 0 ) <nl> - { <nl> diff - - git a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> index 3e6d94c . . 606ef18 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> @ @ - 1 , 6 + 1 , 48 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / WorldServer . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / WorldServer . java <nl> - @ @ - 214 , 6 + 214 , 10 @ @ <nl> + @ @ - 97 , 30 + 97 , 39 @ @ <nl> + private int blockEventCacheIndex ; <nl> + private List < NextTickListEntry > pendingTickListEntriesThisTick = Lists . < NextTickListEntry > newArrayList ( ) ; <nl> + <nl> + + / * * Stores the recently processed ( lighting ) chunks * / <nl> + + protected Set < ChunkCoordIntPair > doneChunks = new java . util . HashSet < ChunkCoordIntPair > ( ) ; <nl> + + public List < Teleporter > customTeleporters = new ArrayList < Teleporter > ( ) ; <nl> + + <nl> + public WorldServer ( MinecraftServer server , ISaveHandler saveHandlerIn , WorldInfo info , int dimensionId , Profiler profilerIn ) <nl> + { <nl> + super ( saveHandlerIn , info , DimensionType . func _ 186069 _ a ( dimensionId ) . func _ 186070 _ d ( ) , profilerIn , false ) ; <nl> + this . mcServer = server ; <nl> + this . theEntityTracker = new EntityTracker ( this ) ; <nl> + this . thePlayerManager = new PlayerManager ( this ) ; <nl> + + / / Guarantee the dimension ID was not reset by the provider <nl> + + int providerDim = this . provider . dimensionId ; <nl> + this . provider . registerWorld ( this ) ; <nl> + + this . provider . dimensionId = providerDim ; <nl> + this . chunkProvider = this . createChunkProvider ( ) ; <nl> + + perWorldStorage = new MapStorage ( new net . minecraftforge . common . WorldSpecificSaveHandler ( ( WorldServer ) this , saveHandlerIn ) ) ; <nl> + this . worldTeleporter = new Teleporter ( this ) ; <nl> + this . calculateInitialSkylight ( ) ; <nl> + this . calculateInitialWeather ( ) ; <nl> + this . getWorldBorder ( ) . setSize ( server . getMaxWorldSize ( ) ) ; <nl> + + net . minecraftforge . common . DimensionManager . setWorld ( dimensionId , this ) ; <nl> + } <nl> + <nl> + public World init ( ) <nl> + { <nl> + this . mapStorage = new MapStorage ( this . saveHandler ) ; <nl> + String s = VillageCollection . fileNameForProvider ( this . provider ) ; <nl> + - VillageCollection villagecollection = ( VillageCollection ) this . mapStorage . loadData ( VillageCollection . class , s ) ; <nl> + + VillageCollection villagecollection = ( VillageCollection ) this . perWorldStorage . loadData ( VillageCollection . class , s ) ; <nl> + <nl> + if ( villagecollection = = null ) <nl> + { <nl> + this . villageCollectionObj = new VillageCollection ( this ) ; <nl> + - this . mapStorage . setData ( s , this . villageCollectionObj ) ; <nl> + + this . perWorldStorage . setData ( s , this . villageCollectionObj ) ; <nl> + } <nl> + else <nl> + { <nl> + @ @ - 214 , 6 + 223 , 10 @ @ <nl> this . villageSiege . tick ( ) ; <nl> this . theProfiler . endStartSection ( " portalForcer " ) ; <nl> this . worldTeleporter . removeStalePortalLocations ( this . getTotalWorldTime ( ) ) ; <nl> @ @ - 11 , 7 + 53 , 7 @ @ <nl> this . theProfiler . endSection ( ) ; <nl> this . sendQueuedBlockEvents ( ) ; <nl> } <nl> - @ @ - 221 , 12 + 225 , 14 @ @ <nl> + @ @ - 221 , 12 + 234 , 14 @ @ <nl> public BiomeGenBase . SpawnListEntry getSpawnListEntryForTypeAt ( EnumCreatureType creatureType , BlockPos pos ) <nl> { <nl> List < BiomeGenBase . SpawnListEntry > list = this . getChunkProvider ( ) . getPossibleCreatures ( creatureType , pos ) ; <nl> @ @ - 26 , 7 + 68 , 7 @ @ <nl> return list ! = null & & ! list . isEmpty ( ) ? list . contains ( spawnListEntry ) : false ; <nl> } <nl> <nl> - @ @ - 272 , 10 + 278 , 7 @ @ <nl> + @ @ - 272 , 10 + 287 , 7 @ @ <nl> <nl> private void resetRainAndThunder ( ) <nl> { <nl> @ @ - 38 , 7 + 80 , 16 @ @ <nl> } <nl> <nl> public boolean areAllPlayersAsleep ( ) <nl> - @ @ - 409 , 7 + 412 , 7 @ @ <nl> + @ @ - 380 , 7 + 392 , 7 @ @ <nl> + chunk . func _ 150804 _ b ( false ) ; <nl> + this . theProfiler . endStartSection ( " thunder " ) ; <nl> + <nl> + - if ( flag & & flag1 & & this . rand . nextInt ( 100000 ) = = 0 ) <nl> + + if ( this . provider . canDoLightning ( chunk ) & & flag & & flag1 & & this . rand . nextInt ( 100000 ) = = 0 ) <nl> + { <nl> + this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> + int l = this . updateLCG > > 2 ; <nl> + @ @ - 409 , 7 + 421 , 7 @ @ <nl> <nl> this . theProfiler . endStartSection ( " iceandsnow " ) ; <nl> <nl> @ @ - 47 , 7 + 98 , 7 @ @ <nl> { <nl> this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> int j2 = this . updateLCG > > 2 ; <nl> - @ @ - 527 , 6 + 530 , 9 @ @ <nl> + @ @ - 527 , 6 + 539 , 9 @ @ <nl> if ( blockIn . requiresUpdates ( ) ) <nl> { <nl> i = 8 ; <nl> @ @ - 57 , 7 + 108 , 7 @ @ <nl> <nl> if ( this . isAreaLoaded ( pos . add ( - i , - i , - i ) , pos . add ( i , i , i ) ) ) <nl> { <nl> - @ @ - 588 , 7 + 594 , 7 @ @ <nl> + @ @ - 588 , 7 + 603 , 7 @ @ <nl> <nl> public void updateEntities ( ) <nl> { <nl> @ @ - 66 , 7 + 117 , 7 @ @ <nl> { <nl> if ( this . updateEntityTick + + > = 300 ) <nl> { <nl> - @ @ - 712 , 6 + 718 , 9 @ @ <nl> + @ @ - 712 , 6 + 727 , 9 @ @ <nl> { <nl> NextTickListEntry nextticklistentry1 = ( NextTickListEntry ) iterator . next ( ) ; <nl> iterator . remove ( ) ; <nl> @ @ - 76 , 7 + 127 , 7 @ @ <nl> int k = 0 ; <nl> <nl> if ( this . isAreaLoaded ( nextticklistentry1 . position . add ( - k , - k , - k ) , nextticklistentry1 . position . add ( k , k , k ) ) ) <nl> - @ @ - 838 , 22 + 847 , 40 @ @ <nl> + @ @ - 838 , 22 + 856 , 40 @ @ <nl> { <nl> List < TileEntity > list = Lists . < TileEntity > newArrayList ( ) ; <nl> <nl> @ @ - 124 , 7 + 175 , 7 @ @ <nl> return ! this . mcServer . isBlockProtected ( this , pos , player ) & & this . getWorldBorder ( ) . contains ( pos ) ; <nl> } <nl> <nl> - @ @ - 919 , 6 + 946 , 7 @ @ <nl> + @ @ - 919 , 6 + 955 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 132 , 7 + 183 , 15 @ @ <nl> this . findingSpawnPoint = true ; <nl> BiomeProvider biomeprovider = this . provider . getWorldChunkManager ( ) ; <nl> List < BiomeGenBase > list = biomeprovider . getBiomesToSpawnIn ( ) ; <nl> - @ @ - 1047 , 6 + 1075 , 7 @ @ <nl> + @ @ - 1003 , 6 + 1040 , 7 @ @ <nl> + } <nl> + <nl> + chunkproviderserver . func _ 186027 _ a ( p _ 73044 _ 1 _ ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . WorldEvent . Save ( this ) ) ; <nl> + <nl> + for ( Chunk chunk : Lists . newArrayList ( chunkproviderserver . func _ 152380 _ a ( ) ) ) <nl> + { <nl> + @ @ - 1047 , 6 + 1085 , 7 @ @ <nl> this . worldInfo . setBorderLerpTime ( this . getWorldBorder ( ) . getTimeUntilTarget ( ) ) ; <nl> this . saveHandler . saveWorldInfoWithPlayer ( this . worldInfo , this . mcServer . func _ 184103 _ al ( ) . getHostPlayerData ( ) ) ; <nl> this . mapStorage . saveAllData ( ) ; <nl> @ @ - 140 , 7 + 199 , 7 @ @ <nl> } <nl> <nl> public boolean spawnEntityInWorld ( Entity entityIn ) <nl> - @ @ - 1161 , 6 + 1190 , 7 @ @ <nl> + @ @ - 1161 , 6 + 1200 , 7 @ @ <nl> public Explosion newExplosion ( Entity entityIn , double x , double y , double z , float strength , boolean isFlaming , boolean isSmoking ) <nl> { <nl> Explosion explosion = new Explosion ( this , entityIn , x , y , z , strength , isFlaming , isSmoking ) ; <nl> @ @ - 148 , 7 + 207 , 35 @ @ <nl> explosion . doExplosionA ( ) ; <nl> explosion . doExplosionB ( false ) ; <nl> <nl> - @ @ - 1329 , 6 + 1359 , 11 @ @ <nl> + @ @ - 1240 , 19 + 1280 , 23 @ @ <nl> + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . func _ 186058 _ p ( ) . func _ 186068 _ a ( ) ) ; <nl> + } <nl> + <nl> + + / * The function in use here has been replaced in order to only send the weather info to players in the correct dimension , <nl> + + * rather than to all players on the server . This is what causes the client - side rain , as the <nl> + + * client believes that it has started raining locally , rather than in another dimension . <nl> + + * / <nl> + if ( flag ! = this . isRaining ( ) ) <nl> + { <nl> + if ( flag ) <nl> + { <nl> + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 2 , 0 . 0F ) ) ; <nl> + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 2 , 0 . 0F ) , this . provider . dimensionId ) ; <nl> + } <nl> + else <nl> + { <nl> + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 1 , 0 . 0F ) ) ; <nl> + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 1 , 0 . 0F ) , this . provider . dimensionId ) ; <nl> + } <nl> + <nl> + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 7 , this . rainingStrength ) ) ; <nl> + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 8 , this . thunderingStrength ) ) ; <nl> + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 7 , this . rainingStrength ) , this . provider . dimensionId ) ; <nl> + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . dimensionId ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 1329 , 6 + 1373 , 11 @ @ <nl> return this . mcServer . isCallingFromMinecraftThread ( ) ; <nl> } <nl> <nl> diff - - git a / rejects / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch . rej b / rejects / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch . rej <nl> deleted file mode 100644 <nl> index 52c077e . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 62 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - import java . util . Collections ; <nl> - import java . util . Comparator ; <nl> - import java . util . List ; <nl> - + <nl> - + import net . minecraft . block . Block ; <nl> - import net . minecraft . client . Minecraft ; <nl> - import net . minecraft . client . audio . PositionedSoundRecord ; <nl> - import net . minecraft . client . gui . GuiButton ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 2 <nl> - for ( StatCrafting statcrafting : StatList . objectMineStats ) <nl> - { <nl> - boolean flag = false ; <nl> - - int i = Item . getIdFromItem ( statcrafting . func _ 150959 _ a ( ) ) ; <nl> - + int i = Block . getIdFromBlock ( Block . getBlockFromItem ( statcrafting . func _ 150959 _ a ( ) ) ) ; <nl> - + int itemId = Item . getIdFromItem ( statcrafting . func _ 150959 _ a ( ) ) ; <nl> - <nl> - if ( GuiStats . this . field _ 146546 _ t . readStat ( statcrafting ) > 0 ) <nl> - { <nl> - flag = true ; <nl> - } <nl> - - else if ( StatList . objectUseStats [ i ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectUseStats [ i ] ) > 0 ) <nl> - + else if ( StatList . objectUseStats [ itemId ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectUseStats [ itemId ] ) > 0 ) <nl> - { <nl> - flag = true ; <nl> - } <nl> - - else if ( StatList . objectCraftStats [ i ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectCraftStats [ i ] ) > 0 ) <nl> - + else if ( StatList . objectCraftStats [ itemId ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectCraftStats [ itemId ] ) > 0 ) <nl> - { <nl> - flag = true ; <nl> - } <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 3 <nl> - { <nl> - public int compare ( StatCrafting p _ compare _ 1 _ , StatCrafting p _ compare _ 2 _ ) <nl> - { <nl> - - int j = Item . getIdFromItem ( p _ compare _ 1 _ . func _ 150959 _ a ( ) ) ; <nl> - - int k = Item . getIdFromItem ( p _ compare _ 2 _ . func _ 150959 _ a ( ) ) ; <nl> - + int j ; <nl> - + int k ; <nl> - + if ( StatsBlock . this . field _ 148217 _ o = = 2 ) { <nl> - + j = Block . getIdFromBlock ( Block . getBlockFromItem ( p _ compare _ 1 _ . func _ 150959 _ a ( ) ) ) ; <nl> - + k = Block . getIdFromBlock ( Block . getBlockFromItem ( p _ compare _ 2 _ . func _ 150959 _ a ( ) ) ) ; <nl> - + } else { <nl> - + j = Item . getIdFromItem ( p _ compare _ 1 _ . func _ 150959 _ a ( ) ) ; <nl> - + k = Item . getIdFromItem ( p _ compare _ 2 _ . func _ 150959 _ a ( ) ) ; <nl> - + } <nl> - StatBase statbase = null ; <nl> - StatBase statbase1 = null ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 5 <nl> - protected void drawSlot ( int entryID , int p _ 180791 _ 2 _ , int p _ 180791 _ 3 _ , int p _ 180791 _ 4 _ , int mouseXIn , int mouseYIn ) <nl> - { <nl> - EntityList . EntityEggInfo entitylist $ entityegginfo = ( EntityList . EntityEggInfo ) this . field _ 148222 _ l . get ( entryID ) ; <nl> - - String s = I18n . format ( " entity . " + EntityList . getStringFromID ( entitylist $ entityegginfo . spawnedID ) + " . name " , new Object [ 0 ] ) ; <nl> - + String s = I18n . format ( " entity . " + entitylist $ entityegginfo . name + " . name " , new Object [ 0 ] ) ; <nl> - int i = GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151512 _ d ) ; <nl> - int j = GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151513 _ e ) ; <nl> - String s1 = I18n . format ( " stat . entityKills " , new Object [ ] { Integer . valueOf ( i ) , s } ) ; <nl> - + + + + END PATCH <nl> diff - - git a / rejects / minecraft / net / minecraft / world / WorldServer . java . patch . rej b / rejects / minecraft / net / minecraft / world / WorldServer . java . patch . rej <nl> deleted file mode 100644 <nl> index 217fa3a . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / world / WorldServer . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 108 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - private static final List < WeightedRandomChestContent > bonusChestContent = Lists . newArrayList ( new WeightedRandomChestContent [ ] { new WeightedRandomChestContent ( Items . stick , 0 , 1 , 3 , 10 ) , new WeightedRandomChestContent ( Item . getItemFromBlock ( Blocks . planks ) , 0 , 1 , 3 , 10 ) , new WeightedRandomChestContent ( Item . getItemFromBlock ( Blocks . log ) , 0 , 1 , 3 , 10 ) , new WeightedRandomChestContent ( Items . stone _ axe , 0 , 1 , 1 , 3 ) , new WeightedRandomChestContent ( Items . wooden _ axe , 0 , 1 , 1 , 5 ) , new WeightedRandomChestContent ( Items . stone _ pickaxe , 0 , 1 , 1 , 3 ) , new WeightedRandomChestContent ( Items . wooden _ pickaxe , 0 , 1 , 1 , 5 ) , new WeightedRandomChestContent ( Items . apple , 0 , 2 , 3 , 5 ) , new WeightedRandomChestContent ( Items . bread , 0 , 2 , 3 , 3 ) , new WeightedRandomChestContent ( Item . getItemFromBlock ( Blocks . log2 ) , 0 , 1 , 3 , 10 ) } ) ; <nl> - private List < NextTickListEntry > pendingTickListEntriesThisTick = Lists . < NextTickListEntry > newArrayList ( ) ; <nl> - <nl> - + / * * Stores the recently processed ( lighting ) chunks * / <nl> - + protected Set < ChunkCoordIntPair > doneChunks = new java . util . HashSet < ChunkCoordIntPair > ( ) ; <nl> - + public List < Teleporter > customTeleporters = new ArrayList < Teleporter > ( ) ; <nl> - + private static boolean initChest = false ; <nl> - + public static void fillChestHook ( ) <nl> - + { <nl> - + if ( ! initChest ) <nl> - + net . minecraftforge . common . ChestGenHooks . init ( net . minecraftforge . common . ChestGenHooks . BONUS _ CHEST , bonusChestContent , 10 , 10 ) ; <nl> - + initChest = true ; <nl> - + } <nl> - + <nl> - public WorldServer ( MinecraftServer server , ISaveHandler saveHandlerIn , WorldInfo info , int dimensionId , Profiler profilerIn ) <nl> - { <nl> - super ( saveHandlerIn , info , WorldProvider . getProviderForDimension ( dimensionId ) , profilerIn , false ) ; <nl> - this . mcServer = server ; <nl> - this . theEntityTracker = new EntityTracker ( this ) ; <nl> - this . thePlayerManager = new PlayerManager ( this ) ; <nl> - + / / Guarantee the dimension ID was not reset by the provider <nl> - + int providerDim = this . provider . dimensionId ; <nl> - this . provider . registerWorld ( this ) ; <nl> - + this . provider . dimensionId = providerDim ; <nl> - this . chunkProvider = this . createChunkProvider ( ) ; <nl> - + perWorldStorage = new MapStorage ( new net . minecraftforge . common . WorldSpecificSaveHandler ( ( WorldServer ) this , saveHandlerIn ) ) ; <nl> - this . worldTeleporter = new Teleporter ( this ) ; <nl> - this . calculateInitialSkylight ( ) ; <nl> - this . calculateInitialWeather ( ) ; <nl> - this . getWorldBorder ( ) . setSize ( server . getMaxWorldSize ( ) ) ; <nl> - + net . minecraftforge . common . DimensionManager . setWorld ( dimensionId , this ) ; <nl> - } <nl> - <nl> - public World init ( ) <nl> - { <nl> - this . mapStorage = new MapStorage ( this . saveHandler ) ; <nl> - String s = VillageCollection . fileNameForProvider ( this . provider ) ; <nl> - - VillageCollection villagecollection = ( VillageCollection ) this . mapStorage . loadData ( VillageCollection . class , s ) ; <nl> - + VillageCollection villagecollection = ( VillageCollection ) this . perWorldStorage . loadData ( VillageCollection . class , s ) ; <nl> - <nl> - if ( villagecollection = = null ) <nl> - { <nl> - this . villageCollectionObj = new VillageCollection ( this ) ; <nl> - - this . mapStorage . setData ( s , this . villageCollectionObj ) ; <nl> - + this . perWorldStorage . setData ( s , this . villageCollectionObj ) ; <nl> - } <nl> - else <nl> - { <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 5 <nl> - chunk . func _ 150804 _ b ( false ) ; <nl> - this . theProfiler . endStartSection ( " thunder " ) ; <nl> - <nl> - - if ( this . rand . nextInt ( 100000 ) = = 0 & & this . isRaining ( ) & & this . isThundering ( ) ) <nl> - + if ( this . provider . canDoLightning ( chunk ) & & this . rand . nextInt ( 100000 ) = = 0 & & this . isRaining ( ) & & this . isThundering ( ) ) <nl> - { <nl> - this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> - int i1 = this . updateLCG > > 2 ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 12 <nl> - <nl> - protected void createBonusChest ( ) <nl> - { <nl> - - WorldGeneratorBonusChest worldgeneratorbonuschest = new WorldGeneratorBonusChest ( bonusChestContent , 10 ) ; <nl> - + WorldGeneratorBonusChest worldgeneratorbonuschest = net . minecraftforge . common . ForgeHooks . getBonusChest ( rand ) ; <nl> - <nl> - for ( int i = 0 ; i < 10 ; + + i ) <nl> - { <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 13 <nl> - } <nl> - <nl> - this . chunkProvider . saveChunks ( p _ 73044 _ 1 _ , progressCallback ) ; <nl> - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . WorldEvent . Save ( this ) ) ; <nl> - <nl> - for ( Chunk chunk : Lists . newArrayList ( this . theChunkProviderServer . func _ 152380 _ a ( ) ) ) <nl> - { <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 16 <nl> - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . getDimensionId ( ) ) ; <nl> - } <nl> - <nl> - + / * The function in use here has been replaced in order to only send the weather info to players in the correct dimension , <nl> - + * rather than to all players on the server . This is what causes the client - side rain , as the <nl> - + * client believes that it has started raining locally , rather than in another dimension . <nl> - + * / <nl> - if ( flag ! = this . isRaining ( ) ) <nl> - { <nl> - if ( flag ) <nl> - { <nl> - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 2 , 0 . 0F ) ) ; <nl> - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 2 , 0 . 0F ) , this . provider . dimensionId ) ; <nl> - } <nl> - else <nl> - { <nl> - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 1 , 0 . 0F ) ) ; <nl> - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 1 , 0 . 0F ) , this . provider . dimensionId ) ; <nl> - } <nl> - <nl> - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 7 , this . rainingStrength ) ) ; <nl> - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 8 , this . thunderingStrength ) ) ; <nl> - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 7 , this . rainingStrength ) , this . provider . dimensionId ) ; <nl> - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . dimensionId ) ; <nl> - } <nl> - } <nl> - <nl> - + + + + END PATCH <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> index 7a6506c . . 51fb8e0 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> @ @ - 199 , 6 + 199 , 34 @ @ public class EntityRegistry <nl> } <nl> <nl> / * * <nl> + * Registers a spawn egg for the specified entity class . <nl> + * The class must already be registered in the EntityList . classToStringMapping . <nl> + * This can be done either by using the global ID system , or preferably the registerModEntity functions above . <nl> + * Once registered mob eggs can be created by using minecraft : spawn _ egg with NBT entry ' entity _ name ' with <nl> + * value of the name this class is registered in the classToStringMapping with . <nl> + * <nl> + * @ param entityClass The entity class <nl> + * @ param primary Primary egg color <nl> + * @ param secondary Secondary egg color <nl> + * <nl> + * @ throws IllegalArgumentException if entityClass is not registered in classToStringMapping . <nl> + * <nl> + * / <nl> + <nl> + public static void registerEgg ( Class < ? extends Entity > entityClass , int primary , int secondary ) <nl> + { <nl> + if ( EntityList . classToStringMapping . containsKey ( entityClass ) ) <nl> + { <nl> + String name = EntityList . classToStringMapping . get ( entityClass ) ; <nl> + EntityList . entityEggs . put ( name , new EntityList . EntityEggInfo ( name , primary , secondary ) ) ; <nl> + FMLLog . fine ( " Registering entity egg ' % s ' for % s " , name , entityClass ) ; <nl> + } <nl> + else <nl> + { <nl> + FMLLog . fine ( " Failed registering entity egg % s ( No entity found ) " , entityClass . getName ( ) ) ; <nl> + } <nl> + } <nl> + / * * <nl> * Registers in the minecraft Entity ID list . This is generally not a good idea and shouldn ' t be used . <nl> * Simply use { @ link # registerModEntity ( Class , String , int , Object , int , int , boolean , int , int ) } instead . <nl> *

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch 
 index 7bb6f7e . . 7340a0b 100644 
 - - - a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch 
 @ @ - 1 , 10 + 1 , 121 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / server / management / PlayerManager . java 
 + + + . . / src - work / minecraft / net / minecraft / server / management / PlayerManager . java 
 - @ @ - 338 , 6 + 338 , 7 @ @ 
 - int i1 = this . field _ 72698 _ e ; 
 - int j1 = i - k ; 
 - int k1 = j - l ; 
 - + List < ChunkCoordIntPair > chunksToLoad = Lists . newArrayList ( ) ; 
 + @ @ - 468 , 11 + 468 , 18 @ @ 
 + private int field _ 187288 _ h ; 
 + private long field _ 187289 _ i ; 
 + private boolean field _ 187290 _ j ; 
 + + private Runnable loadedRunnable = new Runnable ( ) 
 + + { 
 + + public void run ( ) 
 + + { 
 + + PlayerInstance . this . field _ 187286 _ f = PlayerManager . this . func _ 72688 _ a ( ) . func _ 72863 _ F ( ) . func _ 186028 _ c ( PlayerInstance . this . field _ 187284 _ d . field _ 77276 _ a , PlayerInstance . this . field _ 187284 _ d . field _ 77275 _ b ) ; 
 + + } 
 + + } ; 
 
 - if ( j1 ! = 0 | | k1 ! = 0 ) 
 + public PlayerInstance ( int p _ i1518 _ 2 _ , int p _ i1518 _ 3 _ ) 
 + { 
 + this . field _ 187284 _ d = new ChunkCoordIntPair ( p _ i1518 _ 2 _ , p _ i1518 _ 3 _ ) ; 
 + - this . field _ 187286 _ f = PlayerManager . this . func _ 72688 _ a ( ) . func _ 72863 _ F ( ) . func _ 186028 _ c ( p _ i1518 _ 2 _ , p _ i1518 _ 3 _ ) ; 
 + + PlayerManager . this . func _ 72688 _ a ( ) . func _ 72863 _ F ( ) . loadChunk ( p _ i1518 _ 2 _ , p _ i1518 _ 3 _ , this . loadedRunnable ) ; 
 + } 
 + 
 + public ChunkCoordIntPair func _ 187264 _ a ( ) 
 + @ @ - 506 , 6 + 513 , 20 @ @ 
 + { 
 + if ( this . field _ 187283 _ c . contains ( p _ 187277 _ 1 _ ) ) 
 { 
 + + / / If we haven ' t loaded yet don ' t load the chunk just so we can clean it up 
 + + if ( this . field _ 187286 _ f = = null ) 
 + + { 
 + + this . field _ 187283 _ c . remove ( p _ 187277 _ 1 _ ) ; 
 + + 
 + + if ( this . field _ 187283 _ c . isEmpty ( ) ) 
 + + { 
 + + net . minecraftforge . common . chunkio . ChunkIOExecutor . dropQueuedChunkLoad ( PlayerManager . this . func _ 72688 _ a ( ) , this . field _ 187284 _ d . field _ 77276 _ a , this . field _ 187284 _ d . field _ 77275 _ b , this . loadedRunnable ) ; 
 + + PlayerManager . this . func _ 187305 _ b ( this ) ; 
 + + } 
 + + 
 + + return ; 
 + + } 
 + + 
 + if ( this . field _ 187290 _ j ) 
 + { 
 + p _ 187277 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new SPacketUnloadChunk ( this . field _ 187284 _ d . field _ 77276 _ a , this . field _ 187284 _ d . field _ 77275 _ b ) ) ; 
 + @ @ - 513 , 6 + 534 , 8 @ @ 
 + 
 + this . field _ 187283 _ c . remove ( p _ 187277 _ 1 _ ) ; 
 + 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkWatchEvent . UnWatch ( this . field _ 187284 _ d , p _ 187277 _ 1 _ ) ) ; 
 + + 
 + if ( this . field _ 187283 _ c . isEmpty ( ) ) 
 + { 
 + PlayerManager . this . func _ 187305 _ b ( this ) ; 
 + @ @ - 625 , 7 + 648 , 7 @ @ 
 + 
 + this . field _ 187288 _ h | = 1 < < ( p _ 187265 _ 2 _ > > 4 ) ; 
 + 
 + - if ( this . field _ 187287 _ g < 64 ) 
 + + / / Forge ; Cache everything , so always run 
 + { 
 + short short1 = ( short ) ( p _ 187265 _ 1 _ < < 12 | p _ 187265 _ 3 _ < < 8 | p _ 187265 _ 2 _ ) ; 
 + 
 + @ @ - 637 , 6 + 660 , 8 @ @ 
 + } 
 + } 
 + 
 + + if ( this . field _ 187287 _ g = = this . field _ 187285 _ e . length ) 
 + + this . field _ 187285 _ e = java . util . Arrays . copyOf ( this . field _ 187285 _ e , this . field _ 187285 _ e . length < < 1 ) ; 
 + this . field _ 187285 _ e [ this . field _ 187287 _ g + + ] = short1 ; 
 + } 
 + } 
 + @ @ - 653 , 6 + 678 , 7 @ @ 
 + } 
 + } 
 + 
 + + @ SuppressWarnings ( " unused " ) 
 + public void func _ 187280 _ d ( ) 
 + { 
 + if ( this . field _ 187290 _ j & & this . field _ 187286 _ f ! = null ) 
 + @ @ - 666 , 18 + 692 , 20 @ @ 
 + int k = ( this . field _ 187285 _ e [ 0 ] > > 8 & 15 ) + this . field _ 187284 _ d . field _ 77275 _ b * 16 ; 
 + BlockPos blockpos = new BlockPos ( i , j , k ) ; 
 + this . func _ 187267 _ a ( new SPacketBlockChange ( PlayerManager . this . func _ 72688 _ a ( ) , blockpos ) ) ; 
 + + net . minecraft . block . state . IBlockState state = PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos ) ; 
 + 
 + - if ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos ) . func _ 177230 _ c ( ) . func _ 149716 _ u ( ) ) 
 + + if ( state . func _ 177230 _ c ( ) . hasTileEntity ( state ) ) 
 + { 
 + this . func _ 187273 _ a ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 175625 _ s ( blockpos ) ) ; 
 + } 
 + } 
 + - else if ( this . field _ 187287 _ g = = 64 ) 
 + + else if ( this . field _ 187287 _ g > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) 
 + { 
 + int i1 = this . field _ 187284 _ d . field _ 77276 _ a * 16 ; 
 + int k1 = this . field _ 187284 _ d . field _ 77275 _ b * 16 ; 
 + this . func _ 187267 _ a ( new SPacketChunkData ( this . field _ 187286 _ f , false , this . field _ 187288 _ h ) ) ; 
 + 
 + + if ( false ) / / Forge : Grabs ALL the tile entities , costly on a modded server , only send needed ones 
 + for ( int i2 = 0 ; i2 < 16 ; + + i2 ) 
 + { 
 + if ( ( this . field _ 187288 _ h & 1 < < i2 ) ! = 0 ) 
 + @ @ - 695 , 15 + 723 , 17 @ @ 
 + else 
 + { 
 + this . func _ 187267 _ a ( new SPacketMultiBlockChange ( this . field _ 187287 _ g , this . field _ 187285 _ e , this . field _ 187286 _ f ) ) ; 
 + - 
 + + } 
 + + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small 
 + for ( int j1 = 0 ; j1 < this . field _ 187287 _ g ; + + j1 ) 
 + { 
 + int l1 = ( this . field _ 187285 _ e [ j1 ] > > 12 & 15 ) + this . field _ 187284 _ d . field _ 77276 _ a * 16 ; 
 + int j2 = this . field _ 187285 _ e [ j1 ] & 255 ; 
 + int l2 = ( this . field _ 187285 _ e [ j1 ] > > 8 & 15 ) + this . field _ 187284 _ d . field _ 77275 _ b * 16 ; 
 + BlockPos blockpos1 = new BlockPos ( l1 , j2 , l2 ) ; 
 + + net . minecraft . block . state . IBlockState state = PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos1 ) ; 
 + 
 + - if ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 180495 _ p ( blockpos1 ) . func _ 177230 _ c ( ) . func _ 149716 _ u ( ) ) 
 + + if ( state . func _ 177230 _ c ( ) . hasTileEntity ( state ) ) 
 + { 
 + this . func _ 187273 _ a ( PlayerManager . this . func _ 72688 _ a ( ) . func _ 175625 _ s ( blockpos1 ) ) ; 
 + } 
 diff - - git a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej 
 deleted file mode 100644 
 index cb7cb9c . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 223 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - int j = ( int ) player . posZ > > 4 ; 
 - player . managedPosX = player . posX ; 
 - player . managedPosZ = player . posZ ; 
 - + / / Load nearby chunks first 
 - + List < ChunkCoordIntPair > chunkList = Lists . newArrayList ( ) ; 
 - 
 - for ( int k = i - this . playerViewRadius ; k < = i + this . playerViewRadius ; + + k ) 
 - { 
 - for ( int l = j - this . playerViewRadius ; l < = j + this . playerViewRadius ; + + l ) 
 - { 
 - - this . getPlayerInstance ( k , l , true ) . addPlayer ( player ) ; 
 - + chunkList . add ( new ChunkCoordIntPair ( k , l ) ) ; 
 - } 
 - } 
 - 
 - + java . util . Collections . sort ( chunkList , new net . minecraftforge . common . util . ChunkCoordComparator ( player ) ) ; 
 - + 
 - + for ( ChunkCoordIntPair pair : chunkList ) 
 - + { 
 - + this . getPlayerInstance ( pair . chunkXPos , pair . chunkZPos , true ) . addPlayer ( player ) ; 
 - + } 
 - + 
 - this . players . add ( player ) ; 
 - this . filterChunkLoadQueue ( player ) ; 
 - } 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 3 
 - { 
 - if ( ! this . overlaps ( l1 , i2 , k , l , i1 ) ) 
 - { 
 - - this . getPlayerInstance ( l1 , i2 , true ) . addPlayer ( player ) ; 
 - + chunksToLoad . add ( new ChunkCoordIntPair ( l1 , i2 ) ) ; 
 - } 
 - 
 - if ( ! this . overlaps ( l1 - j1 , i2 - k1 , i , j , i1 ) ) 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 4 
 - this . filterChunkLoadQueue ( player ) ; 
 - player . managedPosX = player . posX ; 
 - player . managedPosZ = player . posZ ; 
 - + / / send nearest chunks first 
 - + java . util . Collections . sort ( chunksToLoad , new net . minecraftforge . common . util . ChunkCoordComparator ( player ) ) ; 
 - + 
 - + for ( ChunkCoordIntPair pair : chunksToLoad ) 
 - + { 
 - + this . getPlayerInstance ( pair . chunkXPos , pair . chunkZPos , true ) . addPlayer ( player ) ; 
 - + } 
 - + 
 - + if ( i1 > 1 | | i1 < - 1 | | j1 > 1 | | j1 < - 1 ) 
 - + { 
 - + java . util . Collections . sort ( player . loadedChunks , new net . minecraftforge . common . util . ChunkCoordComparator ( player ) ) ; 
 - + } 
 - } 
 - } 
 - } 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 5 
 - private int numBlocksToUpdate ; 
 - private int flagsYAreasToUpdate ; 
 - private long previousWorldTime ; 
 - + private final java . util . HashMap < EntityPlayerMP , Runnable > players = new java . util . HashMap < EntityPlayerMP , Runnable > ( ) ; 
 - + private boolean loaded = false ; 
 - + private Runnable loadedRunnable = new Runnable ( ) 
 - + { 
 - + public void run ( ) 
 - + { 
 - + PlayerInstance . this . loaded = true ; 
 - + } 
 - + } ; 
 - 
 - public PlayerInstance ( int chunkX , int chunkZ ) 
 - { 
 - this . chunkCoords = new ChunkCoordIntPair ( chunkX , chunkZ ) ; 
 - - PlayerManager . this . getWorldServer ( ) . theChunkProviderServer . loadChunk ( chunkX , chunkZ ) ; 
 - + PlayerManager . this . getWorldServer ( ) . theChunkProviderServer . loadChunk ( chunkX , chunkZ , this . loadedRunnable ) ; 
 - } 
 - 
 - public void addPlayer ( EntityPlayerMP player ) 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 6 
 - } 
 - 
 - this . playersWatchingChunk . add ( player ) ; 
 - + Runnable playerRunnable = null ; 
 - + if ( this . loaded ) 
 - + { 
 - player . loadedChunks . add ( this . chunkCoords ) ; 
 - + } 
 - + else 
 - + { 
 - + final EntityPlayerMP tmp = player ; 
 - + playerRunnable = new Runnable ( ) 
 - + { 
 - + public void run ( ) 
 - + { 
 - + tmp . loadedChunks . add ( PlayerInstance . this . chunkCoords ) ; 
 - + } 
 - + } ; 
 - + PlayerManager . this . getWorldServer ( ) . theChunkProviderServer . loadChunk ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos , playerRunnable ) ; 
 - + } 
 - + this . players . put ( player , playerRunnable ) ; 
 - } 
 - } 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 7 
 - { 
 - if ( this . playersWatchingChunk . contains ( player ) ) 
 - { 
 - + / / If we haven ' t loaded yet don ' t load the chunk just so we can clean it up 
 - + if ( ! this . loaded ) 
 - + { 
 - + net . minecraftforge . common . chunkio . ChunkIOExecutor . dropQueuedChunkLoad ( PlayerManager . this . getWorldServer ( ) , this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos , this . players . get ( player ) ) ; 
 - + this . playersWatchingChunk . remove ( player ) ; 
 - + this . players . remove ( player ) ; 
 - + 
 - + if ( this . playersWatchingChunk . isEmpty ( ) ) 
 - + { 
 - + net . minecraftforge . common . chunkio . ChunkIOExecutor . dropQueuedChunkLoad ( PlayerManager . this . getWorldServer ( ) , this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos , this . loadedRunnable ) ; 
 - + long i = ( long ) this . chunkCoords . chunkXPos + 2147483647L | ( long ) this . chunkCoords . chunkZPos + 2147483647L < < 32 ; 
 - + PlayerManager . this . playerInstances . remove ( i ) ; 
 - + PlayerManager . this . playerInstanceList . remove ( this ) ; 
 - + } 
 - + 
 - + return ; 
 - + } 
 - + 
 - Chunk chunk = PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ; 
 - 
 - if ( chunk . isPopulated ( ) ) 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 8 
 - player . playerNetServerHandler . sendPacket ( new S21PacketChunkData ( chunk , true , 0 ) ) ; 
 - } 
 - 
 - + this . players . remove ( player ) ; 
 - this . playersWatchingChunk . remove ( player ) ; 
 - player . loadedChunks . remove ( this . chunkCoords ) ; 
 - 
 - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkWatchEvent . UnWatch ( chunkCoords , player ) ) ; 
 - + 
 - if ( this . playersWatchingChunk . isEmpty ( ) ) 
 - { 
 - long i = ( long ) this . chunkCoords . chunkXPos + 2147483647L | ( long ) this . chunkCoords . chunkZPos + 2147483647L < < 32 ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 9 
 - 
 - this . flagsYAreasToUpdate | = 1 < < ( y > > 4 ) ; 
 - 
 - - if ( this . numBlocksToUpdate < 64 ) 
 - + / / Forge ; Cache everything , so always run 
 - { 
 - short short1 = ( short ) ( x < < 12 | z < < 8 | y ) ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 10 
 - } 
 - } 
 - 
 - + if ( numBlocksToUpdate = = locationOfBlockChange . length ) 
 - + { 
 - + locationOfBlockChange = java . util . Arrays . copyOf ( locationOfBlockChange , locationOfBlockChange . length < < 1 ) ; 
 - + } 
 - this . locationOfBlockChange [ this . numBlocksToUpdate + + ] = short1 ; 
 - } 
 - } 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 11 
 - } 
 - } 
 - 
 - + @ SuppressWarnings ( " unused " ) 
 - public void onUpdate ( ) 
 - { 
 - if ( this . numBlocksToUpdate ! = 0 ) 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 12 
 - BlockPos blockpos = new BlockPos ( i , j , k ) ; 
 - this . sendToAllPlayersWatchingChunk ( new S23PacketBlockChange ( PlayerManager . this . theWorldServer , blockpos ) ) ; 
 - 
 - - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos ) . getBlock ( ) . hasTileEntity ( ) ) 
 - + if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos ) . getBlock ( ) . hasTileEntity ( PlayerManager . this . theWorldServer . getBlockState ( blockpos ) ) ) 
 - { 
 - this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos ) ) ; 
 - } 
 - } 
 - - else if ( this . numBlocksToUpdate = = 64 ) 
 - + else if ( this . numBlocksToUpdate > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) 
 - { 
 - int i1 = this . chunkCoords . chunkXPos * 16 ; 
 - int k1 = this . chunkCoords . chunkZPos * 16 ; 
 - this . sendToAllPlayersWatchingChunk ( new S21PacketChunkData ( PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) , false , this . flagsYAreasToUpdate ) ) ; 
 - 
 - - for ( int i2 = 0 ; i2 < 16 ; + + i2 ) 
 - + / / Forge : Grabs ALL tile entities is costly on a modded server , only send needed ones 
 - + for ( int i2 = 0 ; false & & i2 < 16 ; + + i2 ) 
 - { 
 - if ( ( this . flagsYAreasToUpdate & 1 < < i2 ) ! = 0 ) 
 - { 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 13 
 - else 
 - { 
 - this . sendToAllPlayersWatchingChunk ( new S22PacketMultiBlockChange ( this . numBlocksToUpdate , this . locationOfBlockChange , PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ) ) ; 
 - - 
 - + } 
 - + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small 
 - + WorldServer world = PlayerManager . this . theWorldServer ; 
 - for ( int j1 = 0 ; j1 < this . numBlocksToUpdate ; + + j1 ) 
 - { 
 - int l1 = ( this . locationOfBlockChange [ j1 ] > > 12 & 15 ) + this . chunkCoords . chunkXPos * 16 ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 14 
 - int l2 = ( this . locationOfBlockChange [ j1 ] > > 8 & 15 ) + this . chunkCoords . chunkZPos * 16 ; 
 - BlockPos blockpos1 = new BlockPos ( l1 , j2 , l2 ) ; 
 - 
 - - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( ) ) 
 - + if ( world . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( world . getBlockState ( blockpos1 ) ) ) 
 - { 
 - this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos1 ) ) ; 
 - } 
 - + + + + END PATCH 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 4281d02 . . a2df630 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 279 , 3 + 279 , 6 @ @ public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185946 _ g # scale 
 public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185947 _ h # depth 
 private - f net / minecraft / world / gen / ChunkProviderHell / field _ 185939 _ I # netherCaveGenerator 
 private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73172 _ c # netherBridgeGenerator 
 + 
 + # PlayerManager 
 + private - f net . minecraft . server . management . PlayerManager $ PlayerInstance field _ 187285 _ e # field _ 187285 _ e 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch b / patches . mcp / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch 
 deleted file mode 100644 
 index d120f75 . . 0000000 
 - - - a / patches . mcp / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch 
 + + + / dev / null 
 @ @ - 1 , 11 + 0 , 0 @ @ 
 - - - - . . / src - base / minecraft / net / minecraft / client / gui / achievement / GuiStats . java 
 - + + + . . / src - work / minecraft / net / minecraft / client / gui / achievement / GuiStats . java 
 - @ @ - 877 , 7 + 877 , 7 @ @ 
 - super ( mcIn , GuiStats . this . width , GuiStats . this . height , 32 , GuiStats . this . height - 64 , GuiStats . this . fontRendererObj . FONT _ HEIGHT * 4 ) ; 
 - this . setShowSelectionBox ( false ) ; 
 - 
 - - for ( EntityList . EntityEggInfo entitylist $ entityegginfo : EntityList . entityEggs . values ( ) ) 
 - + for ( EntityList . EntityEggInfo entitylist $ entityegginfo : com . google . common . collect . Iterables . concat ( EntityList . entityEggs . values ( ) , net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . values ( ) ) ) 
 - { 
 - if ( GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151512 _ d ) > 0 | | GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151513 _ e ) > 0 ) 
 - { 
 diff - - git a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 index 3e6d94c . . 606ef18 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 @ @ - 1 , 6 + 1 , 48 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / WorldServer . java 
 + + + . . / src - work / minecraft / net / minecraft / world / WorldServer . java 
 - @ @ - 214 , 6 + 214 , 10 @ @ 
 + @ @ - 97 , 30 + 97 , 39 @ @ 
 + private int blockEventCacheIndex ; 
 + private List < NextTickListEntry > pendingTickListEntriesThisTick = Lists . < NextTickListEntry > newArrayList ( ) ; 
 + 
 + + / * * Stores the recently processed ( lighting ) chunks * / 
 + + protected Set < ChunkCoordIntPair > doneChunks = new java . util . HashSet < ChunkCoordIntPair > ( ) ; 
 + + public List < Teleporter > customTeleporters = new ArrayList < Teleporter > ( ) ; 
 + + 
 + public WorldServer ( MinecraftServer server , ISaveHandler saveHandlerIn , WorldInfo info , int dimensionId , Profiler profilerIn ) 
 + { 
 + super ( saveHandlerIn , info , DimensionType . func _ 186069 _ a ( dimensionId ) . func _ 186070 _ d ( ) , profilerIn , false ) ; 
 + this . mcServer = server ; 
 + this . theEntityTracker = new EntityTracker ( this ) ; 
 + this . thePlayerManager = new PlayerManager ( this ) ; 
 + + / / Guarantee the dimension ID was not reset by the provider 
 + + int providerDim = this . provider . dimensionId ; 
 + this . provider . registerWorld ( this ) ; 
 + + this . provider . dimensionId = providerDim ; 
 + this . chunkProvider = this . createChunkProvider ( ) ; 
 + + perWorldStorage = new MapStorage ( new net . minecraftforge . common . WorldSpecificSaveHandler ( ( WorldServer ) this , saveHandlerIn ) ) ; 
 + this . worldTeleporter = new Teleporter ( this ) ; 
 + this . calculateInitialSkylight ( ) ; 
 + this . calculateInitialWeather ( ) ; 
 + this . getWorldBorder ( ) . setSize ( server . getMaxWorldSize ( ) ) ; 
 + + net . minecraftforge . common . DimensionManager . setWorld ( dimensionId , this ) ; 
 + } 
 + 
 + public World init ( ) 
 + { 
 + this . mapStorage = new MapStorage ( this . saveHandler ) ; 
 + String s = VillageCollection . fileNameForProvider ( this . provider ) ; 
 + - VillageCollection villagecollection = ( VillageCollection ) this . mapStorage . loadData ( VillageCollection . class , s ) ; 
 + + VillageCollection villagecollection = ( VillageCollection ) this . perWorldStorage . loadData ( VillageCollection . class , s ) ; 
 + 
 + if ( villagecollection = = null ) 
 + { 
 + this . villageCollectionObj = new VillageCollection ( this ) ; 
 + - this . mapStorage . setData ( s , this . villageCollectionObj ) ; 
 + + this . perWorldStorage . setData ( s , this . villageCollectionObj ) ; 
 + } 
 + else 
 + { 
 + @ @ - 214 , 6 + 223 , 10 @ @ 
 this . villageSiege . tick ( ) ; 
 this . theProfiler . endStartSection ( " portalForcer " ) ; 
 this . worldTeleporter . removeStalePortalLocations ( this . getTotalWorldTime ( ) ) ; 
 @ @ - 11 , 7 + 53 , 7 @ @ 
 this . theProfiler . endSection ( ) ; 
 this . sendQueuedBlockEvents ( ) ; 
 } 
 - @ @ - 221 , 12 + 225 , 14 @ @ 
 + @ @ - 221 , 12 + 234 , 14 @ @ 
 public BiomeGenBase . SpawnListEntry getSpawnListEntryForTypeAt ( EnumCreatureType creatureType , BlockPos pos ) 
 { 
 List < BiomeGenBase . SpawnListEntry > list = this . getChunkProvider ( ) . getPossibleCreatures ( creatureType , pos ) ; 
 @ @ - 26 , 7 + 68 , 7 @ @ 
 return list ! = null & & ! list . isEmpty ( ) ? list . contains ( spawnListEntry ) : false ; 
 } 
 
 - @ @ - 272 , 10 + 278 , 7 @ @ 
 + @ @ - 272 , 10 + 287 , 7 @ @ 
 
 private void resetRainAndThunder ( ) 
 { 
 @ @ - 38 , 7 + 80 , 16 @ @ 
 } 
 
 public boolean areAllPlayersAsleep ( ) 
 - @ @ - 409 , 7 + 412 , 7 @ @ 
 + @ @ - 380 , 7 + 392 , 7 @ @ 
 + chunk . func _ 150804 _ b ( false ) ; 
 + this . theProfiler . endStartSection ( " thunder " ) ; 
 + 
 + - if ( flag & & flag1 & & this . rand . nextInt ( 100000 ) = = 0 ) 
 + + if ( this . provider . canDoLightning ( chunk ) & & flag & & flag1 & & this . rand . nextInt ( 100000 ) = = 0 ) 
 + { 
 + this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 + int l = this . updateLCG > > 2 ; 
 + @ @ - 409 , 7 + 421 , 7 @ @ 
 
 this . theProfiler . endStartSection ( " iceandsnow " ) ; 
 
 @ @ - 47 , 7 + 98 , 7 @ @ 
 { 
 this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 int j2 = this . updateLCG > > 2 ; 
 - @ @ - 527 , 6 + 530 , 9 @ @ 
 + @ @ - 527 , 6 + 539 , 9 @ @ 
 if ( blockIn . requiresUpdates ( ) ) 
 { 
 i = 8 ; 
 @ @ - 57 , 7 + 108 , 7 @ @ 
 
 if ( this . isAreaLoaded ( pos . add ( - i , - i , - i ) , pos . add ( i , i , i ) ) ) 
 { 
 - @ @ - 588 , 7 + 594 , 7 @ @ 
 + @ @ - 588 , 7 + 603 , 7 @ @ 
 
 public void updateEntities ( ) 
 { 
 @ @ - 66 , 7 + 117 , 7 @ @ 
 { 
 if ( this . updateEntityTick + + > = 300 ) 
 { 
 - @ @ - 712 , 6 + 718 , 9 @ @ 
 + @ @ - 712 , 6 + 727 , 9 @ @ 
 { 
 NextTickListEntry nextticklistentry1 = ( NextTickListEntry ) iterator . next ( ) ; 
 iterator . remove ( ) ; 
 @ @ - 76 , 7 + 127 , 7 @ @ 
 int k = 0 ; 
 
 if ( this . isAreaLoaded ( nextticklistentry1 . position . add ( - k , - k , - k ) , nextticklistentry1 . position . add ( k , k , k ) ) ) 
 - @ @ - 838 , 22 + 847 , 40 @ @ 
 + @ @ - 838 , 22 + 856 , 40 @ @ 
 { 
 List < TileEntity > list = Lists . < TileEntity > newArrayList ( ) ; 
 
 @ @ - 124 , 7 + 175 , 7 @ @ 
 return ! this . mcServer . isBlockProtected ( this , pos , player ) & & this . getWorldBorder ( ) . contains ( pos ) ; 
 } 
 
 - @ @ - 919 , 6 + 946 , 7 @ @ 
 + @ @ - 919 , 6 + 955 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 132 , 7 + 183 , 15 @ @ 
 this . findingSpawnPoint = true ; 
 BiomeProvider biomeprovider = this . provider . getWorldChunkManager ( ) ; 
 List < BiomeGenBase > list = biomeprovider . getBiomesToSpawnIn ( ) ; 
 - @ @ - 1047 , 6 + 1075 , 7 @ @ 
 + @ @ - 1003 , 6 + 1040 , 7 @ @ 
 + } 
 + 
 + chunkproviderserver . func _ 186027 _ a ( p _ 73044 _ 1 _ ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . WorldEvent . Save ( this ) ) ; 
 + 
 + for ( Chunk chunk : Lists . newArrayList ( chunkproviderserver . func _ 152380 _ a ( ) ) ) 
 + { 
 + @ @ - 1047 , 6 + 1085 , 7 @ @ 
 this . worldInfo . setBorderLerpTime ( this . getWorldBorder ( ) . getTimeUntilTarget ( ) ) ; 
 this . saveHandler . saveWorldInfoWithPlayer ( this . worldInfo , this . mcServer . func _ 184103 _ al ( ) . getHostPlayerData ( ) ) ; 
 this . mapStorage . saveAllData ( ) ; 
 @ @ - 140 , 7 + 199 , 7 @ @ 
 } 
 
 public boolean spawnEntityInWorld ( Entity entityIn ) 
 - @ @ - 1161 , 6 + 1190 , 7 @ @ 
 + @ @ - 1161 , 6 + 1200 , 7 @ @ 
 public Explosion newExplosion ( Entity entityIn , double x , double y , double z , float strength , boolean isFlaming , boolean isSmoking ) 
 { 
 Explosion explosion = new Explosion ( this , entityIn , x , y , z , strength , isFlaming , isSmoking ) ; 
 @ @ - 148 , 7 + 207 , 35 @ @ 
 explosion . doExplosionA ( ) ; 
 explosion . doExplosionB ( false ) ; 
 
 - @ @ - 1329 , 6 + 1359 , 11 @ @ 
 + @ @ - 1240 , 19 + 1280 , 23 @ @ 
 + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . func _ 186058 _ p ( ) . func _ 186068 _ a ( ) ) ; 
 + } 
 + 
 + + / * The function in use here has been replaced in order to only send the weather info to players in the correct dimension , 
 + + * rather than to all players on the server . This is what causes the client - side rain , as the 
 + + * client believes that it has started raining locally , rather than in another dimension . 
 + + * / 
 + if ( flag ! = this . isRaining ( ) ) 
 + { 
 + if ( flag ) 
 + { 
 + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 2 , 0 . 0F ) ) ; 
 + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 2 , 0 . 0F ) , this . provider . dimensionId ) ; 
 + } 
 + else 
 + { 
 + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 1 , 0 . 0F ) ) ; 
 + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 1 , 0 . 0F ) , this . provider . dimensionId ) ; 
 + } 
 + 
 + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 7 , this . rainingStrength ) ) ; 
 + - this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayers ( new SPacketChangeGameState ( 8 , this . thunderingStrength ) ) ; 
 + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 7 , this . rainingStrength ) , this . provider . dimensionId ) ; 
 + + this . mcServer . func _ 184103 _ al ( ) . sendPacketToAllPlayersInDimension ( new SPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . dimensionId ) ; 
 + } 
 + } 
 + 
 + @ @ - 1329 , 6 + 1373 , 11 @ @ 
 return this . mcServer . isCallingFromMinecraftThread ( ) ; 
 } 
 
 diff - - git a / rejects / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch . rej b / rejects / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch . rej 
 deleted file mode 100644 
 index 52c077e . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 62 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - import java . util . Collections ; 
 - import java . util . Comparator ; 
 - import java . util . List ; 
 - + 
 - + import net . minecraft . block . Block ; 
 - import net . minecraft . client . Minecraft ; 
 - import net . minecraft . client . audio . PositionedSoundRecord ; 
 - import net . minecraft . client . gui . GuiButton ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 2 
 - for ( StatCrafting statcrafting : StatList . objectMineStats ) 
 - { 
 - boolean flag = false ; 
 - - int i = Item . getIdFromItem ( statcrafting . func _ 150959 _ a ( ) ) ; 
 - + int i = Block . getIdFromBlock ( Block . getBlockFromItem ( statcrafting . func _ 150959 _ a ( ) ) ) ; 
 - + int itemId = Item . getIdFromItem ( statcrafting . func _ 150959 _ a ( ) ) ; 
 - 
 - if ( GuiStats . this . field _ 146546 _ t . readStat ( statcrafting ) > 0 ) 
 - { 
 - flag = true ; 
 - } 
 - - else if ( StatList . objectUseStats [ i ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectUseStats [ i ] ) > 0 ) 
 - + else if ( StatList . objectUseStats [ itemId ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectUseStats [ itemId ] ) > 0 ) 
 - { 
 - flag = true ; 
 - } 
 - - else if ( StatList . objectCraftStats [ i ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectCraftStats [ i ] ) > 0 ) 
 - + else if ( StatList . objectCraftStats [ itemId ] ! = null & & GuiStats . this . field _ 146546 _ t . readStat ( StatList . objectCraftStats [ itemId ] ) > 0 ) 
 - { 
 - flag = true ; 
 - } 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 3 
 - { 
 - public int compare ( StatCrafting p _ compare _ 1 _ , StatCrafting p _ compare _ 2 _ ) 
 - { 
 - - int j = Item . getIdFromItem ( p _ compare _ 1 _ . func _ 150959 _ a ( ) ) ; 
 - - int k = Item . getIdFromItem ( p _ compare _ 2 _ . func _ 150959 _ a ( ) ) ; 
 - + int j ; 
 - + int k ; 
 - + if ( StatsBlock . this . field _ 148217 _ o = = 2 ) { 
 - + j = Block . getIdFromBlock ( Block . getBlockFromItem ( p _ compare _ 1 _ . func _ 150959 _ a ( ) ) ) ; 
 - + k = Block . getIdFromBlock ( Block . getBlockFromItem ( p _ compare _ 2 _ . func _ 150959 _ a ( ) ) ) ; 
 - + } else { 
 - + j = Item . getIdFromItem ( p _ compare _ 1 _ . func _ 150959 _ a ( ) ) ; 
 - + k = Item . getIdFromItem ( p _ compare _ 2 _ . func _ 150959 _ a ( ) ) ; 
 - + } 
 - StatBase statbase = null ; 
 - StatBase statbase1 = null ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 5 
 - protected void drawSlot ( int entryID , int p _ 180791 _ 2 _ , int p _ 180791 _ 3 _ , int p _ 180791 _ 4 _ , int mouseXIn , int mouseYIn ) 
 - { 
 - EntityList . EntityEggInfo entitylist $ entityegginfo = ( EntityList . EntityEggInfo ) this . field _ 148222 _ l . get ( entryID ) ; 
 - - String s = I18n . format ( " entity . " + EntityList . getStringFromID ( entitylist $ entityegginfo . spawnedID ) + " . name " , new Object [ 0 ] ) ; 
 - + String s = I18n . format ( " entity . " + entitylist $ entityegginfo . name + " . name " , new Object [ 0 ] ) ; 
 - int i = GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151512 _ d ) ; 
 - int j = GuiStats . this . field _ 146546 _ t . readStat ( entitylist $ entityegginfo . field _ 151513 _ e ) ; 
 - String s1 = I18n . format ( " stat . entityKills " , new Object [ ] { Integer . valueOf ( i ) , s } ) ; 
 - + + + + END PATCH 
 diff - - git a / rejects / minecraft / net / minecraft / world / WorldServer . java . patch . rej b / rejects / minecraft / net / minecraft / world / WorldServer . java . patch . rej 
 deleted file mode 100644 
 index 217fa3a . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / world / WorldServer . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 108 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - private static final List < WeightedRandomChestContent > bonusChestContent = Lists . newArrayList ( new WeightedRandomChestContent [ ] { new WeightedRandomChestContent ( Items . stick , 0 , 1 , 3 , 10 ) , new WeightedRandomChestContent ( Item . getItemFromBlock ( Blocks . planks ) , 0 , 1 , 3 , 10 ) , new WeightedRandomChestContent ( Item . getItemFromBlock ( Blocks . log ) , 0 , 1 , 3 , 10 ) , new WeightedRandomChestContent ( Items . stone _ axe , 0 , 1 , 1 , 3 ) , new WeightedRandomChestContent ( Items . wooden _ axe , 0 , 1 , 1 , 5 ) , new WeightedRandomChestContent ( Items . stone _ pickaxe , 0 , 1 , 1 , 3 ) , new WeightedRandomChestContent ( Items . wooden _ pickaxe , 0 , 1 , 1 , 5 ) , new WeightedRandomChestContent ( Items . apple , 0 , 2 , 3 , 5 ) , new WeightedRandomChestContent ( Items . bread , 0 , 2 , 3 , 3 ) , new WeightedRandomChestContent ( Item . getItemFromBlock ( Blocks . log2 ) , 0 , 1 , 3 , 10 ) } ) ; 
 - private List < NextTickListEntry > pendingTickListEntriesThisTick = Lists . < NextTickListEntry > newArrayList ( ) ; 
 - 
 - + / * * Stores the recently processed ( lighting ) chunks * / 
 - + protected Set < ChunkCoordIntPair > doneChunks = new java . util . HashSet < ChunkCoordIntPair > ( ) ; 
 - + public List < Teleporter > customTeleporters = new ArrayList < Teleporter > ( ) ; 
 - + private static boolean initChest = false ; 
 - + public static void fillChestHook ( ) 
 - + { 
 - + if ( ! initChest ) 
 - + net . minecraftforge . common . ChestGenHooks . init ( net . minecraftforge . common . ChestGenHooks . BONUS _ CHEST , bonusChestContent , 10 , 10 ) ; 
 - + initChest = true ; 
 - + } 
 - + 
 - public WorldServer ( MinecraftServer server , ISaveHandler saveHandlerIn , WorldInfo info , int dimensionId , Profiler profilerIn ) 
 - { 
 - super ( saveHandlerIn , info , WorldProvider . getProviderForDimension ( dimensionId ) , profilerIn , false ) ; 
 - this . mcServer = server ; 
 - this . theEntityTracker = new EntityTracker ( this ) ; 
 - this . thePlayerManager = new PlayerManager ( this ) ; 
 - + / / Guarantee the dimension ID was not reset by the provider 
 - + int providerDim = this . provider . dimensionId ; 
 - this . provider . registerWorld ( this ) ; 
 - + this . provider . dimensionId = providerDim ; 
 - this . chunkProvider = this . createChunkProvider ( ) ; 
 - + perWorldStorage = new MapStorage ( new net . minecraftforge . common . WorldSpecificSaveHandler ( ( WorldServer ) this , saveHandlerIn ) ) ; 
 - this . worldTeleporter = new Teleporter ( this ) ; 
 - this . calculateInitialSkylight ( ) ; 
 - this . calculateInitialWeather ( ) ; 
 - this . getWorldBorder ( ) . setSize ( server . getMaxWorldSize ( ) ) ; 
 - + net . minecraftforge . common . DimensionManager . setWorld ( dimensionId , this ) ; 
 - } 
 - 
 - public World init ( ) 
 - { 
 - this . mapStorage = new MapStorage ( this . saveHandler ) ; 
 - String s = VillageCollection . fileNameForProvider ( this . provider ) ; 
 - - VillageCollection villagecollection = ( VillageCollection ) this . mapStorage . loadData ( VillageCollection . class , s ) ; 
 - + VillageCollection villagecollection = ( VillageCollection ) this . perWorldStorage . loadData ( VillageCollection . class , s ) ; 
 - 
 - if ( villagecollection = = null ) 
 - { 
 - this . villageCollectionObj = new VillageCollection ( this ) ; 
 - - this . mapStorage . setData ( s , this . villageCollectionObj ) ; 
 - + this . perWorldStorage . setData ( s , this . villageCollectionObj ) ; 
 - } 
 - else 
 - { 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 5 
 - chunk . func _ 150804 _ b ( false ) ; 
 - this . theProfiler . endStartSection ( " thunder " ) ; 
 - 
 - - if ( this . rand . nextInt ( 100000 ) = = 0 & & this . isRaining ( ) & & this . isThundering ( ) ) 
 - + if ( this . provider . canDoLightning ( chunk ) & & this . rand . nextInt ( 100000 ) = = 0 & & this . isRaining ( ) & & this . isThundering ( ) ) 
 - { 
 - this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 - int i1 = this . updateLCG > > 2 ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 12 
 - 
 - protected void createBonusChest ( ) 
 - { 
 - - WorldGeneratorBonusChest worldgeneratorbonuschest = new WorldGeneratorBonusChest ( bonusChestContent , 10 ) ; 
 - + WorldGeneratorBonusChest worldgeneratorbonuschest = net . minecraftforge . common . ForgeHooks . getBonusChest ( rand ) ; 
 - 
 - for ( int i = 0 ; i < 10 ; + + i ) 
 - { 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 13 
 - } 
 - 
 - this . chunkProvider . saveChunks ( p _ 73044 _ 1 _ , progressCallback ) ; 
 - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . WorldEvent . Save ( this ) ) ; 
 - 
 - for ( Chunk chunk : Lists . newArrayList ( this . theChunkProviderServer . func _ 152380 _ a ( ) ) ) 
 - { 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 16 
 - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . getDimensionId ( ) ) ; 
 - } 
 - 
 - + / * The function in use here has been replaced in order to only send the weather info to players in the correct dimension , 
 - + * rather than to all players on the server . This is what causes the client - side rain , as the 
 - + * client believes that it has started raining locally , rather than in another dimension . 
 - + * / 
 - if ( flag ! = this . isRaining ( ) ) 
 - { 
 - if ( flag ) 
 - { 
 - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 2 , 0 . 0F ) ) ; 
 - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 2 , 0 . 0F ) , this . provider . dimensionId ) ; 
 - } 
 - else 
 - { 
 - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 1 , 0 . 0F ) ) ; 
 - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 1 , 0 . 0F ) , this . provider . dimensionId ) ; 
 - } 
 - 
 - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 7 , this . rainingStrength ) ) ; 
 - - this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayers ( new S2BPacketChangeGameState ( 8 , this . thunderingStrength ) ) ; 
 - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 7 , this . rainingStrength ) , this . provider . dimensionId ) ; 
 - + this . mcServer . getConfigurationManager ( ) . sendPacketToAllPlayersInDimension ( new S2BPacketChangeGameState ( 8 , this . thunderingStrength ) , this . provider . dimensionId ) ; 
 - } 
 - } 
 - 
 - + + + + END PATCH 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 index 7a6506c . . 51fb8e0 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 @ @ - 199 , 6 + 199 , 34 @ @ public class EntityRegistry 
 } 
 
 / * * 
 + * Registers a spawn egg for the specified entity class . 
 + * The class must already be registered in the EntityList . classToStringMapping . 
 + * This can be done either by using the global ID system , or preferably the registerModEntity functions above . 
 + * Once registered mob eggs can be created by using minecraft : spawn _ egg with NBT entry ' entity _ name ' with 
 + * value of the name this class is registered in the classToStringMapping with . 
 + * 
 + * @ param entityClass The entity class 
 + * @ param primary Primary egg color 
 + * @ param secondary Secondary egg color 
 + * 
 + * @ throws IllegalArgumentException if entityClass is not registered in classToStringMapping . 
 + * 
 + * / 
 + 
 + public static void registerEgg ( Class < ? extends Entity > entityClass , int primary , int secondary ) 
 + { 
 + if ( EntityList . classToStringMapping . containsKey ( entityClass ) ) 
 + { 
 + String name = EntityList . classToStringMapping . get ( entityClass ) ; 
 + EntityList . entityEggs . put ( name , new EntityList . EntityEggInfo ( name , primary , secondary ) ) ; 
 + FMLLog . fine ( " Registering entity egg ' % s ' for % s " , name , entityClass ) ; 
 + } 
 + else 
 + { 
 + FMLLog . fine ( " Failed registering entity egg % s ( No entity found ) " , entityClass . getName ( ) ) ; 
 + } 
 + } 
 + / * * 
 * Registers in the minecraft Entity ID list . This is generally not a good idea and shouldn ' t be used . 
 * Simply use { @ link # registerModEntity ( Class , String , int , Object , int , int , boolean , int , int ) } instead . 
 *
