BLEU SCORE: 1.0

TEST MSG: Attempt to disable the new splash screen if there are errors detected finishing up . Print a slightly more helpful error message .
GENERATED MSG: Attempt to disable the new splash screen if there are errors detected finishing up . Print a slightly more helpful error message .

TEST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java <nl> index d52154d . . cf1c07b 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java <nl> @ @ - 9 , 6 + 9 , 8 @ @ import java . io . FileReader ; <nl> import java . io . FileWriter ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . io . PrintStream ; <nl> + import java . io . PrintWriter ; <nl> import java . lang . Thread . UncaughtExceptionHandler ; <nl> import java . nio . IntBuffer ; <nl> import java . util . Iterator ; <nl> @ @ - 41 , 6 + 43 , 7 @ @ import org . lwjgl . opengl . GL11 ; <nl> import org . lwjgl . opengl . SharedDrawable ; <nl> import org . lwjgl . util . glu . GLU ; <nl> <nl> + import cpw . mods . fml . common . EnhancedRuntimeException ; <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> import cpw . mods . fml . common . FMLLog ; <nl> import cpw . mods . fml . common . ICrashCallable ; <nl> @ @ - 176 , 7 + 179 , 12 @ @ public class SplashProgress <nl> return " GL info " ; <nl> } <nl> } ) ; <nl> - CrashReport report = CrashReport . makeCrashReport ( new Throwable ( ) , " Loading screen debug info " ) ; <nl> + CrashReport report = CrashReport . makeCrashReport ( new Throwable ( ) <nl> + { <nl> + @ Override public String getMessage ( ) { return " This is just a prompt for computer specs to be printed . THIS IS NOT A ERROR " ; } <nl> + @ Override public void printStackTrace ( final PrintWriter s ) { s . println ( getMessage ( ) ) ; } <nl> + @ Override public void printStackTrace ( final PrintStream s ) { s . println ( getMessage ( ) ) ; } <nl> + } , " Loading screen debug info " ) ; <nl> System . out . println ( report . getCompleteReport ( ) ) ; <nl> <nl> try <nl> @ @ - 272 , 8 + 280 , 8 @ @ public class SplashProgress <nl> <nl> / / forge logo <nl> setColor ( backgroundColor ) ; <nl> - float fw = ( float ) forgeTexture . getWidth ( ) / 2 ; <nl> - float fh = ( float ) forgeTexture . getHeight ( ) / 2 ; <nl> + float fw = ( float ) forgeTexture . getWidth ( ) / 2 / 2 ; <nl> + float fh = ( float ) forgeTexture . getHeight ( ) / 2 / 2 ; <nl> if ( rotate ) <nl> { <nl> float sh = Math . max ( fw , fh ) ; <nl> @ @ - 494 , 8 + 502 , 60 @ @ public class SplashProgress <nl> catch ( Exception e ) <nl> { <nl> e . printStackTrace ( ) ; <nl> - throw new RuntimeException ( e ) ; <nl> + if ( disableSplash ( ) ) <nl> + { <nl> + throw new EnhancedRuntimeException ( e ) <nl> + { <nl> + @ Override <nl> + protected void printStackTrace ( WrappedPrintStream stream ) <nl> + { <nl> + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; <nl> + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; <nl> + stream . println ( " We have automatically disabeled the new Splash Screen in config / splash . properties . " ) ; <nl> + stream . println ( " Try reloading minecraft before reporting any errors . " ) ; <nl> + } <nl> + } ; <nl> + } <nl> + else <nl> + { <nl> + throw new EnhancedRuntimeException ( e ) <nl> + { <nl> + @ Override <nl> + protected void printStackTrace ( WrappedPrintStream stream ) <nl> + { <nl> + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; <nl> + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; <nl> + stream . println ( " Please try disabeling the new Splash Screen in config / splash . properties . " ) ; <nl> + stream . println ( " After doing so , try reloading minecraft before reporting any errors . " ) ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private static boolean disableSplash ( ) <nl> + { <nl> + File configFile = new File ( Minecraft . getMinecraft ( ) . mcDataDir , " config / splash . properties " ) ; <nl> + FileReader r = null ; <nl> + enabled = false ; <nl> + config . setProperty ( " enabled " , " false " ) ; <nl> + <nl> + FileWriter w = null ; <nl> + try <nl> + { <nl> + w = new FileWriter ( configFile ) ; <nl> + config . store ( w , " Splash screen properties " ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + FMLLog . log ( Level . ERROR , e , " Could not save the splash . properties file " ) ; <nl> + return false ; <nl> + } <nl> + finally <nl> + { <nl> + IOUtils . closeQuietly ( w ) ; <nl> } <nl> + return true ; <nl> } <nl> <nl> private static IResourcePack createResourcePack ( File file ) <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java b / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java <nl> index 894b7f3 . . c761d36 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> this . printStackTrace ( new WrappedPrintStream ( ) <nl> { <nl> @ Override <nl> - void println ( String line ) <nl> + public void println ( String line ) <nl> { <nl> buf . append ( line ) . append ( ' \ n ' ) ; <nl> } <nl> @ @ - 60 , 7 + 60 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> printStackTrace ( new WrappedPrintStream ( ) <nl> { <nl> @ Override <nl> - void println ( String line ) <nl> + public void println ( String line ) <nl> { <nl> s . println ( line ) ; <nl> } <nl> @ @ - 72 , 7 + 72 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> printStackTrace ( new WrappedPrintStream ( ) <nl> { <nl> @ Override <nl> - void println ( String line ) <nl> + public void println ( String line ) <nl> { <nl> s . println ( line ) ; <nl> } <nl> @ @ - 84 , 6 + 84 , 6 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> <nl> public static abstract class WrappedPrintStream <nl> { <nl> - abstract void println ( String line ) ; <nl> + public abstract void println ( String line ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java b / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java <nl> index 7f53da6 . . 5370c23 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java <nl> @ @ - 79 , 6 + 79 , 8 @ @ import net . minecraft . client . resources . IResourcePack ; <nl> import net . minecraft . crash . CrashReport ; <nl> import net . minecraft . launchwrapper . Launch ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraftforge . fml . common . EnhancedRuntimeException ; <nl> + import net . minecraftforge . fml . common . EnhancedRuntimeException . WrappedPrintStream ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . ICrashCallable ; <nl> @ @ - 536 , 8 + 538 , 60 @ @ public class SplashProgress <nl> catch ( Exception e ) <nl> { <nl> e . printStackTrace ( ) ; <nl> - throw new RuntimeException ( e ) ; <nl> + if ( disableSplash ( ) ) <nl> + { <nl> + throw new EnhancedRuntimeException ( e ) <nl> + { <nl> + @ Override <nl> + protected void printStackTrace ( WrappedPrintStream stream ) <nl> + { <nl> + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; <nl> + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; <nl> + stream . println ( " We have automatically disabeled the new Splash Screen in config / splash . properties . " ) ; <nl> + stream . println ( " Try reloading minecraft before reporting any errors . " ) ; <nl> + } <nl> + } ; <nl> + } <nl> + else <nl> + { <nl> + throw new EnhancedRuntimeException ( e ) <nl> + { <nl> + @ Override <nl> + protected void printStackTrace ( WrappedPrintStream stream ) <nl> + { <nl> + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; <nl> + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; <nl> + stream . println ( " Please try disabeling the new Splash Screen in config / splash . properties . " ) ; <nl> + stream . println ( " After doing so , try reloading minecraft before reporting any errors . " ) ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private static boolean disableSplash ( ) <nl> + { <nl> + File configFile = new File ( Minecraft . getMinecraft ( ) . mcDataDir , " config / splash . properties " ) ; <nl> + FileReader r = null ; <nl> + enabled = false ; <nl> + config . setProperty ( " enabled " , " false " ) ; <nl> + <nl> + FileWriter w = null ; <nl> + try <nl> + { <nl> + w = new FileWriter ( configFile ) ; <nl> + config . store ( w , " Splash screen properties " ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + FMLLog . log ( Level . ERROR , e , " Could not save the splash . properties file " ) ; <nl> + return false ; <nl> + } <nl> + finally <nl> + { <nl> + IOUtils . closeQuietly ( w ) ; <nl> } <nl> + return true ; <nl> } <nl> <nl> private static IResourcePack createResourcePack ( File file ) <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java b / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java <nl> index a52ddf8 . . 553f680 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> this . printStackTrace ( new WrappedPrintStream ( ) <nl> { <nl> @ Override <nl> - void println ( String line ) <nl> + public void println ( String line ) <nl> { <nl> buf . append ( line ) . append ( ' \ n ' ) ; <nl> } <nl> @ @ - 60 , 7 + 60 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> printStackTrace ( new WrappedPrintStream ( ) <nl> { <nl> @ Override <nl> - void println ( String line ) <nl> + public void println ( String line ) <nl> { <nl> s . println ( line ) ; <nl> } <nl> @ @ - 72 , 7 + 72 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> printStackTrace ( new WrappedPrintStream ( ) <nl> { <nl> @ Override <nl> - void println ( String line ) <nl> + public void println ( String line ) <nl> { <nl> s . println ( line ) ; <nl> } <nl> @ @ - 84 , 6 + 84 , 6 @ @ public abstract class EnhancedRuntimeException extends RuntimeException <nl> <nl> public static abstract class WrappedPrintStream <nl> { <nl> - abstract void println ( String line ) ; <nl> + public abstract void println ( String line ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java 
 index d52154d . . cf1c07b 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java 
 @ @ - 9 , 6 + 9 , 8 @ @ import java . io . FileReader ; 
 import java . io . FileWriter ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . io . PrintStream ; 
 + import java . io . PrintWriter ; 
 import java . lang . Thread . UncaughtExceptionHandler ; 
 import java . nio . IntBuffer ; 
 import java . util . Iterator ; 
 @ @ - 41 , 6 + 43 , 7 @ @ import org . lwjgl . opengl . GL11 ; 
 import org . lwjgl . opengl . SharedDrawable ; 
 import org . lwjgl . util . glu . GLU ; 
 
 + import cpw . mods . fml . common . EnhancedRuntimeException ; 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 import cpw . mods . fml . common . FMLLog ; 
 import cpw . mods . fml . common . ICrashCallable ; 
 @ @ - 176 , 7 + 179 , 12 @ @ public class SplashProgress 
 return " GL info " ; 
 } 
 } ) ; 
 - CrashReport report = CrashReport . makeCrashReport ( new Throwable ( ) , " Loading screen debug info " ) ; 
 + CrashReport report = CrashReport . makeCrashReport ( new Throwable ( ) 
 + { 
 + @ Override public String getMessage ( ) { return " This is just a prompt for computer specs to be printed . THIS IS NOT A ERROR " ; } 
 + @ Override public void printStackTrace ( final PrintWriter s ) { s . println ( getMessage ( ) ) ; } 
 + @ Override public void printStackTrace ( final PrintStream s ) { s . println ( getMessage ( ) ) ; } 
 + } , " Loading screen debug info " ) ; 
 System . out . println ( report . getCompleteReport ( ) ) ; 
 
 try 
 @ @ - 272 , 8 + 280 , 8 @ @ public class SplashProgress 
 
 / / forge logo 
 setColor ( backgroundColor ) ; 
 - float fw = ( float ) forgeTexture . getWidth ( ) / 2 ; 
 - float fh = ( float ) forgeTexture . getHeight ( ) / 2 ; 
 + float fw = ( float ) forgeTexture . getWidth ( ) / 2 / 2 ; 
 + float fh = ( float ) forgeTexture . getHeight ( ) / 2 / 2 ; 
 if ( rotate ) 
 { 
 float sh = Math . max ( fw , fh ) ; 
 @ @ - 494 , 8 + 502 , 60 @ @ public class SplashProgress 
 catch ( Exception e ) 
 { 
 e . printStackTrace ( ) ; 
 - throw new RuntimeException ( e ) ; 
 + if ( disableSplash ( ) ) 
 + { 
 + throw new EnhancedRuntimeException ( e ) 
 + { 
 + @ Override 
 + protected void printStackTrace ( WrappedPrintStream stream ) 
 + { 
 + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; 
 + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; 
 + stream . println ( " We have automatically disabeled the new Splash Screen in config / splash . properties . " ) ; 
 + stream . println ( " Try reloading minecraft before reporting any errors . " ) ; 
 + } 
 + } ; 
 + } 
 + else 
 + { 
 + throw new EnhancedRuntimeException ( e ) 
 + { 
 + @ Override 
 + protected void printStackTrace ( WrappedPrintStream stream ) 
 + { 
 + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; 
 + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; 
 + stream . println ( " Please try disabeling the new Splash Screen in config / splash . properties . " ) ; 
 + stream . println ( " After doing so , try reloading minecraft before reporting any errors . " ) ; 
 + } 
 + } ; 
 + } 
 + } 
 + } 
 + 
 + private static boolean disableSplash ( ) 
 + { 
 + File configFile = new File ( Minecraft . getMinecraft ( ) . mcDataDir , " config / splash . properties " ) ; 
 + FileReader r = null ; 
 + enabled = false ; 
 + config . setProperty ( " enabled " , " false " ) ; 
 + 
 + FileWriter w = null ; 
 + try 
 + { 
 + w = new FileWriter ( configFile ) ; 
 + config . store ( w , " Splash screen properties " ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + FMLLog . log ( Level . ERROR , e , " Could not save the splash . properties file " ) ; 
 + return false ; 
 + } 
 + finally 
 + { 
 + IOUtils . closeQuietly ( w ) ; 
 } 
 + return true ; 
 } 
 
 private static IResourcePack createResourcePack ( File file ) 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java b / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java 
 index 894b7f3 . . c761d36 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / EnhancedRuntimeException . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 this . printStackTrace ( new WrappedPrintStream ( ) 
 { 
 @ Override 
 - void println ( String line ) 
 + public void println ( String line ) 
 { 
 buf . append ( line ) . append ( ' \ n ' ) ; 
 } 
 @ @ - 60 , 7 + 60 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 printStackTrace ( new WrappedPrintStream ( ) 
 { 
 @ Override 
 - void println ( String line ) 
 + public void println ( String line ) 
 { 
 s . println ( line ) ; 
 } 
 @ @ - 72 , 7 + 72 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 printStackTrace ( new WrappedPrintStream ( ) 
 { 
 @ Override 
 - void println ( String line ) 
 + public void println ( String line ) 
 { 
 s . println ( line ) ; 
 } 
 @ @ - 84 , 6 + 84 , 6 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 
 public static abstract class WrappedPrintStream 
 { 
 - abstract void println ( String line ) ; 
 + public abstract void println ( String line ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java b / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java 
 index 7f53da6 . . 5370c23 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / client / SplashProgress . java 
 @ @ - 79 , 6 + 79 , 8 @ @ import net . minecraft . client . resources . IResourcePack ; 
 import net . minecraft . crash . CrashReport ; 
 import net . minecraft . launchwrapper . Launch ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraftforge . fml . common . EnhancedRuntimeException ; 
 + import net . minecraftforge . fml . common . EnhancedRuntimeException . WrappedPrintStream ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . ICrashCallable ; 
 @ @ - 536 , 8 + 538 , 60 @ @ public class SplashProgress 
 catch ( Exception e ) 
 { 
 e . printStackTrace ( ) ; 
 - throw new RuntimeException ( e ) ; 
 + if ( disableSplash ( ) ) 
 + { 
 + throw new EnhancedRuntimeException ( e ) 
 + { 
 + @ Override 
 + protected void printStackTrace ( WrappedPrintStream stream ) 
 + { 
 + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; 
 + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; 
 + stream . println ( " We have automatically disabeled the new Splash Screen in config / splash . properties . " ) ; 
 + stream . println ( " Try reloading minecraft before reporting any errors . " ) ; 
 + } 
 + } ; 
 + } 
 + else 
 + { 
 + throw new EnhancedRuntimeException ( e ) 
 + { 
 + @ Override 
 + protected void printStackTrace ( WrappedPrintStream stream ) 
 + { 
 + stream . println ( " SplashProgress has detected a error loading Minecraft . " ) ; 
 + stream . println ( " This can sometimes be caused by bad video drivers . " ) ; 
 + stream . println ( " Please try disabeling the new Splash Screen in config / splash . properties . " ) ; 
 + stream . println ( " After doing so , try reloading minecraft before reporting any errors . " ) ; 
 + } 
 + } ; 
 + } 
 + } 
 + } 
 + 
 + private static boolean disableSplash ( ) 
 + { 
 + File configFile = new File ( Minecraft . getMinecraft ( ) . mcDataDir , " config / splash . properties " ) ; 
 + FileReader r = null ; 
 + enabled = false ; 
 + config . setProperty ( " enabled " , " false " ) ; 
 + 
 + FileWriter w = null ; 
 + try 
 + { 
 + w = new FileWriter ( configFile ) ; 
 + config . store ( w , " Splash screen properties " ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + FMLLog . log ( Level . ERROR , e , " Could not save the splash . properties file " ) ; 
 + return false ; 
 + } 
 + finally 
 + { 
 + IOUtils . closeQuietly ( w ) ; 
 } 
 + return true ; 
 } 
 
 private static IResourcePack createResourcePack ( File file ) 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java b / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java 
 index a52ddf8 . . 553f680 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / EnhancedRuntimeException . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 this . printStackTrace ( new WrappedPrintStream ( ) 
 { 
 @ Override 
 - void println ( String line ) 
 + public void println ( String line ) 
 { 
 buf . append ( line ) . append ( ' \ n ' ) ; 
 } 
 @ @ - 60 , 7 + 60 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 printStackTrace ( new WrappedPrintStream ( ) 
 { 
 @ Override 
 - void println ( String line ) 
 + public void println ( String line ) 
 { 
 s . println ( line ) ; 
 } 
 @ @ - 72 , 7 + 72 , 7 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 printStackTrace ( new WrappedPrintStream ( ) 
 { 
 @ Override 
 - void println ( String line ) 
 + public void println ( String line ) 
 { 
 s . println ( line ) ; 
 } 
 @ @ - 84 , 6 + 84 , 6 @ @ public abstract class EnhancedRuntimeException extends RuntimeException 
 
 public static abstract class WrappedPrintStream 
 { 
 - abstract void println ( String line ) ; 
 + public abstract void println ( String line ) ; 
 } 
 }
