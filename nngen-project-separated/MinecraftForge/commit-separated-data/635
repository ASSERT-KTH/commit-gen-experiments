BLEU SCORE: 0.08116697886877475

TEST MSG: Add hand - specific render event
GENERATED MSG: Added world display list render events

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch <nl> index d09c933 . . 5ba13cd 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch <nl> @ @ - 9 , 7 + 9 , 23 @ @ <nl> { <nl> EnumHand enumhand1 = abstractclientplayer . func _ 184600 _ cs ( ) ; <nl> flag = enumhand1 = = EnumHand . MAIN _ HAND ; <nl> - @ @ - 361 , 7 + 361 , 7 @ @ <nl> + @ @ - 334 , 6 + 334 , 7 @ @ <nl> + { <nl> + float f3 = enumhand = = EnumHand . MAIN _ HAND ? f : 0 . 0F ; <nl> + float f5 = 1 . 0F - ( this . field _ 187470 _ g + ( this . field _ 187469 _ f - this . field _ 187470 _ g ) * p _ 78440 _ 1 _ ) ; <nl> + + if ( ! net . minecraftforge . client . ForgeHooksClient . renderFirstPersonHandSpecific ( EnumHand . MAIN _ HAND , p _ 78440 _ 1 _ , f1 , f3 , f5 , this . field _ 187467 _ d ) ) <nl> + this . func _ 187457 _ a ( abstractclientplayer , p _ 78440 _ 1 _ , f1 , EnumHand . MAIN _ HAND , f3 , this . field _ 187467 _ d , f5 ) ; <nl> + } <nl> + <nl> + @ @ - 341 , 6 + 342 , 7 @ @ <nl> + { <nl> + float f4 = enumhand = = EnumHand . OFF _ HAND ? f : 0 . 0F ; <nl> + float f6 = 1 . 0F - ( this . field _ 187472 _ i + ( this . field _ 187471 _ h - this . field _ 187472 _ i ) * p _ 78440 _ 1 _ ) ; <nl> + + if ( ! net . minecraftforge . client . ForgeHooksClient . renderFirstPersonHandSpecific ( EnumHand . OFF _ HAND , p _ 78440 _ 1 _ , f1 , f4 , f6 , this . field _ 187468 _ e ) ) <nl> + this . func _ 187457 _ a ( abstractclientplayer , p _ 78440 _ 1 _ , f1 , EnumHand . OFF _ HAND , f4 , this . field _ 187468 _ e , f6 ) ; <nl> + } <nl> + <nl> + @ @ - 361 , 7 + 363 , 7 @ @ <nl> this . func _ 187456 _ a ( p _ 187457 _ 7 _ , p _ 187457 _ 5 _ , enumhandside ) ; <nl> } <nl> } <nl> @ @ - 18 , 7 + 34 , 7 @ @ <nl> { <nl> if ( flag & & this . field _ 187468 _ e = = null ) <nl> { <nl> - @ @ - 445 , 6 + 445 , 7 @ @ <nl> + @ @ - 445 , 6 + 447 , 7 @ @ <nl> if ( this . field _ 78455 _ a . field _ 71439 _ g . func _ 70094 _ T ( ) ) <nl> { <nl> IBlockState iblockstate = this . field _ 78455 _ a . field _ 71441 _ e . func _ 180495 _ p ( new BlockPos ( this . field _ 78455 _ a . field _ 71439 _ g ) ) ; <nl> @ @ - 26 , 7 + 42 , 7 @ @ <nl> EntityPlayer entityplayer = this . field _ 78455 _ a . field _ 71439 _ g ; <nl> <nl> for ( int i = 0 ; i < 8 ; + + i ) <nl> - @ @ - 458 , 11 + 459 , 13 @ @ <nl> + @ @ - 458 , 11 + 461 , 13 @ @ <nl> if ( iblockstate1 . func _ 177230 _ c ( ) . func _ 176214 _ u ( ) ) <nl> { <nl> iblockstate = iblockstate1 ; <nl> @ @ - 40 , 7 + 56 , 7 @ @ <nl> this . func _ 178108 _ a ( p _ 78447 _ 1 _ , this . field _ 78455 _ a . func _ 175602 _ ab ( ) . func _ 175023 _ a ( ) . func _ 178122 _ a ( iblockstate ) ) ; <nl> } <nl> } <nl> - @ @ - 471 , 11 + 474 , 13 @ @ <nl> + @ @ - 471 , 11 + 476 , 13 @ @ <nl> { <nl> if ( this . field _ 78455 _ a . field _ 71439 _ g . func _ 70055 _ a ( Material . field _ 151586 _ h ) ) <nl> { <nl> @ @ - 54 , 7 + 70 , 7 @ @ <nl> this . func _ 78442 _ d ( p _ 78447 _ 1 _ ) ; <nl> } <nl> } <nl> - @ @ - 597 , 8 + 602 , 8 @ @ <nl> + @ @ - 597 , 8 + 604 , 8 @ @ <nl> else <nl> { <nl> float f = entityplayersp . func _ 184825 _ o ( 1 . 0F ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index c76503a . . e7609db 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 79 , 6 + 79 , 7 @ @ import net . minecraft . item . ItemStack ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . BlockRenderLayer ; <nl> import net . minecraft . util . EnumFacing ; <nl> + import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . MathHelper ; <nl> @ @ - 97 , 6 + 98 , 7 @ @ import net . minecraftforge . client . event . ModelBakeEvent ; <nl> import net . minecraftforge . client . event . MouseEvent ; <nl> import net . minecraftforge . client . event . RenderGameOverlayEvent ; <nl> import net . minecraftforge . client . event . RenderHandEvent ; <nl> + import net . minecraftforge . client . event . RenderHandEventSpecific ; <nl> import net . minecraftforge . client . event . RenderWorldLastEvent ; <nl> import net . minecraftforge . client . event . ScreenshotEvent ; <nl> import net . minecraftforge . client . event . TextureStitchEvent ; <nl> @ @ - 168 , 6 + 170 , 11 @ @ public class ForgeHooksClient <nl> return MinecraftForge . EVENT _ BUS . post ( new RenderHandEvent ( context , partialTicks , renderPass ) ) ; <nl> } <nl> <nl> + public static boolean renderFirstPersonHandSpecific ( EnumHand hand , float partialTicks , float interpPitch , float swingProgress , float equipProgress , ItemStack stack ) <nl> + { <nl> + return MinecraftForge . EVENT _ BUS . post ( new RenderHandEventSpecific ( hand , partialTicks , interpPitch , swingProgress , equipProgress , stack ) ) ; <nl> + } <nl> + <nl> public static void onTextureStitchedPre ( TextureMap map ) <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new TextureStitchEvent . Pre ( map ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java b / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java <nl> index f158e05 . . 7e8d527 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java <nl> + + + b / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java <nl> @ @ - 23 , 6 + 23 , 12 @ @ import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> import net . minecraftforge . fml . common . eventhandler . Event ; <nl> import net . minecraft . client . renderer . RenderGlobal ; <nl> <nl> + / * * <nl> + * This event is fired on { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } <nl> + * before both hands are rendered . <nl> + * Canceling this event prevents either hand from being rendered , <nl> + * and prevents { @ link RenderHandEventSpecific } from firing . <nl> + * / <nl> @ Cancelable <nl> public class RenderHandEvent extends Event <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / RenderHandEventSpecific . java b / src / main / java / net / minecraftforge / client / event / RenderHandEventSpecific . java <nl> new file mode 100644 <nl> index 0000000 . . 63a4d49 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / RenderHandEventSpecific . java <nl> @ @ - 0 , 0 + 1 , 75 @ @ <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . util . EnumHand ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event ; <nl> + <nl> + import javax . annotation . Nullable ; <nl> + <nl> + / * * <nl> + * This event is fired on the { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } <nl> + * whenever a hand is rendered in first person . <nl> + * Canceling the event causes the hand to not render . <nl> + * / <nl> + public class RenderHandEventSpecific extends Event <nl> + { <nl> + private final EnumHand hand ; <nl> + private final float partialTicks ; <nl> + private final float interpolatedPitch ; <nl> + private final float swingProgress ; <nl> + private final float equipProgress ; <nl> + private final ItemStack stack ; <nl> + <nl> + public RenderHandEventSpecific ( EnumHand hand , float partialTicks , float interpolatedPitch , float swingProgress , float equipProgress , ItemStack stack ) <nl> + { <nl> + this . hand = hand ; <nl> + this . partialTicks = partialTicks ; <nl> + this . interpolatedPitch = interpolatedPitch ; <nl> + this . swingProgress = swingProgress ; <nl> + this . equipProgress = equipProgress ; <nl> + this . stack = stack ; <nl> + } <nl> + <nl> + public EnumHand getHand ( ) <nl> + { <nl> + return hand ; <nl> + } <nl> + <nl> + public float getPartialTicks ( ) <nl> + { <nl> + return partialTicks ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The interpolated pitch of the player entity <nl> + * / <nl> + public float getInterpolatedPitch ( ) <nl> + { <nl> + return interpolatedPitch ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The swing progress of the hand being rendered <nl> + * / <nl> + public float getSwingProgress ( ) <nl> + { <nl> + return swingProgress ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The progress of the equip animation . 1 . 0 is fully equipped . <nl> + * / <nl> + public float getEquipProgress ( ) <nl> + { <nl> + return equipProgress ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The ItemStack to be rendered , or null . <nl> + * / <nl> + @ Nullable <nl> + public ItemStack getItemStack ( ) <nl> + { <nl> + return stack ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> index 8e74e13 . . db5e237 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> @ @ - 9 , 7 + 9 , 15 @ @ <nl> public static int field _ 78922 _ b ; <nl> public int field _ 78923 _ c ; <nl> public int field _ 78920 _ d ; <nl> - @ @ - 157 , 7 + 157 , 7 @ @ <nl> + @ @ - 132 , 6 + 132 , 7 @ @ <nl> + { <nl> + + + field _ 78922 _ b ; <nl> + RenderBlocks renderblocks = new RenderBlocks ( chunkcache ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( renderblocks ) ; <nl> + this . field _ 78917 _ C = 0 ; <nl> + this . field _ 147894 _ y = null ; <nl> + <nl> + @ @ - 157 , 7 + 158 , 7 @ @ <nl> this . func _ 147890 _ b ( k2 ) ; <nl> } <nl> <nl> @ @ - 18 , 7 + 26 , 7 @ @ <nl> { <nl> TileEntity tileentity = chunkcache . func _ 147438 _ o ( j3 , l2 , i3 ) ; <nl> <nl> - @ @ - 173 , 7 + 173 , 9 @ @ <nl> + @ @ - 173 , 7 + 174 , 9 @ @ <nl> { <nl> flag = true ; <nl> } <nl> @ @ - 29 , 12 + 37 , 21 @ @ <nl> { <nl> flag1 | = renderblocks . func _ 147805 _ b ( block , j3 , l2 , i3 ) ; <nl> <nl> - @ @ - 232 , 21 + 234 , 22 @ @ <nl> + @ @ - 210 , 6 + 213 , 7 @ @ <nl> + break ; <nl> + } <nl> + } <nl> + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( null ) ; <nl> + } <nl> + <nl> + HashSet hashset1 = new HashSet ( ) ; <nl> + @ @ - 232 , 21 + 236 , 23 @ @ <nl> GL11 . glTranslatef ( - 8 . 0F , - 8 . 0F , - 8 . 0F ) ; <nl> GL11 . glScalef ( f , f , f ) ; <nl> GL11 . glTranslatef ( 8 . 0F , 8 . 0F , 8 . 0F ) ; <nl> - field _ 78941 _ z . func _ 78382 _ b ( ) ; <nl> - field _ 78941 _ z . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . onPreRenderWorld ( this , p _ 147890 _ 1 _ ) ; <nl> + Tessellator . field _ 78398 _ a . func _ 78382 _ b ( ) ; <nl> + Tessellator . field _ 78398 _ a . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; <nl> } <nl> @ @ - 48 , 8 + 65 , 8 @ @ <nl> } <nl> <nl> - this . field _ 78917 _ C + = field _ 78941 _ z . func _ 78381 _ a ( ) ; <nl> - + / / ForgeHooksClient . afterRenderPass ( l1 ) ; Noop fo now , TODO : Event if anyone needs <nl> + this . field _ 78917 _ C + = Tessellator . field _ 78398 _ a . func _ 78381 _ a ( ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . onPostRenderWorld ( this , p _ 147891 _ 1 _ ) ; <nl> GL11 . glPopMatrix ( ) ; <nl> GL11 . glEndList ( ) ; <nl> - field _ 78941 _ z . func _ 78373 _ b ( 0 . 0D , 0 . 0D , 0 . 0D ) ; <nl> @ @ - 57 , 7 + 74 , 7 @ @ <nl> } <nl> <nl> public void func _ 147889 _ b ( EntityLivingBase p _ 147889 _ 1 _ ) <nl> - @ @ - 254 , 7 + 257 , 7 @ @ <nl> + @ @ - 254 , 7 + 260 , 7 @ @ <nl> if ( this . field _ 147894 _ y ! = null & & ! this . field _ 78928 _ m [ 1 ] ) <nl> { <nl> this . func _ 147890 _ b ( 1 ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index d80abf1 . . b960a31 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . util . ChatComponentTranslation ; <nl> import net . minecraft . util . EnumChatFormatting ; <nl> import net . minecraft . util . MathHelper ; <nl> import net . minecraft . util . MovingObjectPosition ; <nl> + import net . minecraft . world . ChunkCache ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . biome . BiomeGenBase ; <nl> import net . minecraft . client . model . ModelBiped ; <nl> @ @ - 42 , 6 + 43 , 7 @ @ import net . minecraft . client . renderer . OpenGlHelper ; <nl> import net . minecraft . client . renderer . RenderBlocks ; <nl> import net . minecraft . client . renderer . RenderGlobal ; <nl> import net . minecraft . client . renderer . Tessellator ; <nl> + import net . minecraft . client . renderer . WorldRenderer ; <nl> import net . minecraft . client . renderer . entity . RenderItem ; <nl> import net . minecraft . client . renderer . texture . TextureManager ; <nl> import net . minecraft . client . renderer . texture . TextureMap ; <nl> @ @ - 49 , 6 + 51 , 7 @ @ import net . minecraft . client . settings . GameSettings ; <nl> import net . minecraftforge . client . IItemRenderer . ItemRenderType ; <nl> import net . minecraftforge . client . event . DrawBlockHighlightEvent ; <nl> import net . minecraftforge . client . event . RenderHandEvent ; <nl> + import net . minecraftforge . client . event . RenderWorldEvent ; <nl> import net . minecraftforge . client . event . RenderWorldLastEvent ; <nl> import net . minecraftforge . client . event . TextureStitchEvent ; <nl> import net . minecraftforge . client . event . sound . PlaySoundEvent17 ; <nl> @ @ - 453 , 4 + 456 , 35 @ @ public class ForgeHooksClient <nl> MinecraftForge . EVENT _ BUS . post ( e ) ; <nl> return e . result ; <nl> } <nl> + <nl> + static RenderBlocks worldRendererRB ; <nl> + static int worldRenderPass ; <nl> + <nl> + public static int getWorldRenderPass ( ) <nl> + { <nl> + return worldRenderPass ; <nl> + } <nl> + <nl> + public static void setWorldRendererRB ( RenderBlocks renderBlocks ) <nl> + { <nl> + worldRendererRB = renderBlocks ; <nl> + } <nl> + <nl> + public static void onPreRenderWorld ( WorldRenderer worldRenderer , int pass ) <nl> + { <nl> + if ( worldRendererRB ! = null ) <nl> + { <nl> + worldRenderPass = pass ; <nl> + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Pre ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; <nl> + } <nl> + } <nl> + <nl> + public static void onPostRenderWorld ( WorldRenderer worldRenderer , int pass ) <nl> + { <nl> + if ( worldRendererRB ! = null ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Post ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; <nl> + worldRenderPass = - 1 ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 5b353f3 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import cpw . mods . fml . common . eventhandler . Event ; <nl> + import net . minecraft . client . renderer . RenderBlocks ; <nl> + import net . minecraft . client . renderer . WorldRenderer ; <nl> + import net . minecraft . world . ChunkCache ; <nl> + <nl> + public abstract class RenderWorldEvent extends Event <nl> + { <nl> + public final WorldRenderer renderer ; <nl> + public final ChunkCache chunkCache ; <nl> + public final RenderBlocks renderBlocks ; <nl> + public final int pass ; <nl> + <nl> + public RenderWorldEvent ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) <nl> + { <nl> + this . renderer = renderer ; <nl> + this . chunkCache = chunkCache ; <nl> + this . renderBlocks = renderBlocks ; <nl> + this . pass = pass ; <nl> + } <nl> + <nl> + / * * <nl> + * Fired when 16x16x16 chunk area is being redrawn . <nl> + * Fired after GL state is setup , before tessellator is started . <nl> + * / <nl> + public static class Pre extends RenderWorldEvent <nl> + { <nl> + public Pre ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } <nl> + } <nl> + <nl> + / * * <nl> + * Fired after the tessellator is stopped , before the display list is ended . <nl> + * / <nl> + public static class Post extends RenderWorldEvent <nl> + { <nl> + public Post ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch 
 index d09c933 . . 5ba13cd 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / ItemRenderer . java . patch 
 @ @ - 9 , 7 + 9 , 23 @ @ 
 { 
 EnumHand enumhand1 = abstractclientplayer . func _ 184600 _ cs ( ) ; 
 flag = enumhand1 = = EnumHand . MAIN _ HAND ; 
 - @ @ - 361 , 7 + 361 , 7 @ @ 
 + @ @ - 334 , 6 + 334 , 7 @ @ 
 + { 
 + float f3 = enumhand = = EnumHand . MAIN _ HAND ? f : 0 . 0F ; 
 + float f5 = 1 . 0F - ( this . field _ 187470 _ g + ( this . field _ 187469 _ f - this . field _ 187470 _ g ) * p _ 78440 _ 1 _ ) ; 
 + + if ( ! net . minecraftforge . client . ForgeHooksClient . renderFirstPersonHandSpecific ( EnumHand . MAIN _ HAND , p _ 78440 _ 1 _ , f1 , f3 , f5 , this . field _ 187467 _ d ) ) 
 + this . func _ 187457 _ a ( abstractclientplayer , p _ 78440 _ 1 _ , f1 , EnumHand . MAIN _ HAND , f3 , this . field _ 187467 _ d , f5 ) ; 
 + } 
 + 
 + @ @ - 341 , 6 + 342 , 7 @ @ 
 + { 
 + float f4 = enumhand = = EnumHand . OFF _ HAND ? f : 0 . 0F ; 
 + float f6 = 1 . 0F - ( this . field _ 187472 _ i + ( this . field _ 187471 _ h - this . field _ 187472 _ i ) * p _ 78440 _ 1 _ ) ; 
 + + if ( ! net . minecraftforge . client . ForgeHooksClient . renderFirstPersonHandSpecific ( EnumHand . OFF _ HAND , p _ 78440 _ 1 _ , f1 , f4 , f6 , this . field _ 187468 _ e ) ) 
 + this . func _ 187457 _ a ( abstractclientplayer , p _ 78440 _ 1 _ , f1 , EnumHand . OFF _ HAND , f4 , this . field _ 187468 _ e , f6 ) ; 
 + } 
 + 
 + @ @ - 361 , 7 + 363 , 7 @ @ 
 this . func _ 187456 _ a ( p _ 187457 _ 7 _ , p _ 187457 _ 5 _ , enumhandside ) ; 
 } 
 } 
 @ @ - 18 , 7 + 34 , 7 @ @ 
 { 
 if ( flag & & this . field _ 187468 _ e = = null ) 
 { 
 - @ @ - 445 , 6 + 445 , 7 @ @ 
 + @ @ - 445 , 6 + 447 , 7 @ @ 
 if ( this . field _ 78455 _ a . field _ 71439 _ g . func _ 70094 _ T ( ) ) 
 { 
 IBlockState iblockstate = this . field _ 78455 _ a . field _ 71441 _ e . func _ 180495 _ p ( new BlockPos ( this . field _ 78455 _ a . field _ 71439 _ g ) ) ; 
 @ @ - 26 , 7 + 42 , 7 @ @ 
 EntityPlayer entityplayer = this . field _ 78455 _ a . field _ 71439 _ g ; 
 
 for ( int i = 0 ; i < 8 ; + + i ) 
 - @ @ - 458 , 11 + 459 , 13 @ @ 
 + @ @ - 458 , 11 + 461 , 13 @ @ 
 if ( iblockstate1 . func _ 177230 _ c ( ) . func _ 176214 _ u ( ) ) 
 { 
 iblockstate = iblockstate1 ; 
 @ @ - 40 , 7 + 56 , 7 @ @ 
 this . func _ 178108 _ a ( p _ 78447 _ 1 _ , this . field _ 78455 _ a . func _ 175602 _ ab ( ) . func _ 175023 _ a ( ) . func _ 178122 _ a ( iblockstate ) ) ; 
 } 
 } 
 - @ @ - 471 , 11 + 474 , 13 @ @ 
 + @ @ - 471 , 11 + 476 , 13 @ @ 
 { 
 if ( this . field _ 78455 _ a . field _ 71439 _ g . func _ 70055 _ a ( Material . field _ 151586 _ h ) ) 
 { 
 @ @ - 54 , 7 + 70 , 7 @ @ 
 this . func _ 78442 _ d ( p _ 78447 _ 1 _ ) ; 
 } 
 } 
 - @ @ - 597 , 8 + 602 , 8 @ @ 
 + @ @ - 597 , 8 + 604 , 8 @ @ 
 else 
 { 
 float f = entityplayersp . func _ 184825 _ o ( 1 . 0F ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index c76503a . . e7609db 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 79 , 6 + 79 , 7 @ @ import net . minecraft . item . ItemStack ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . BlockRenderLayer ; 
 import net . minecraft . util . EnumFacing ; 
 + import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . MathHelper ; 
 @ @ - 97 , 6 + 98 , 7 @ @ import net . minecraftforge . client . event . ModelBakeEvent ; 
 import net . minecraftforge . client . event . MouseEvent ; 
 import net . minecraftforge . client . event . RenderGameOverlayEvent ; 
 import net . minecraftforge . client . event . RenderHandEvent ; 
 + import net . minecraftforge . client . event . RenderHandEventSpecific ; 
 import net . minecraftforge . client . event . RenderWorldLastEvent ; 
 import net . minecraftforge . client . event . ScreenshotEvent ; 
 import net . minecraftforge . client . event . TextureStitchEvent ; 
 @ @ - 168 , 6 + 170 , 11 @ @ public class ForgeHooksClient 
 return MinecraftForge . EVENT _ BUS . post ( new RenderHandEvent ( context , partialTicks , renderPass ) ) ; 
 } 
 
 + public static boolean renderFirstPersonHandSpecific ( EnumHand hand , float partialTicks , float interpPitch , float swingProgress , float equipProgress , ItemStack stack ) 
 + { 
 + return MinecraftForge . EVENT _ BUS . post ( new RenderHandEventSpecific ( hand , partialTicks , interpPitch , swingProgress , equipProgress , stack ) ) ; 
 + } 
 + 
 public static void onTextureStitchedPre ( TextureMap map ) 
 { 
 MinecraftForge . EVENT _ BUS . post ( new TextureStitchEvent . Pre ( map ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java b / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java 
 index f158e05 . . 7e8d527 100644 
 - - - a / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java 
 + + + b / src / main / java / net / minecraftforge / client / event / RenderHandEvent . java 
 @ @ - 23 , 6 + 23 , 12 @ @ import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 import net . minecraftforge . fml . common . eventhandler . Event ; 
 import net . minecraft . client . renderer . RenderGlobal ; 
 
 + / * * 
 + * This event is fired on { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } 
 + * before both hands are rendered . 
 + * Canceling this event prevents either hand from being rendered , 
 + * and prevents { @ link RenderHandEventSpecific } from firing . 
 + * / 
 @ Cancelable 
 public class RenderHandEvent extends Event 
 { 
 diff - - git a / src / main / java / net / minecraftforge / client / event / RenderHandEventSpecific . java b / src / main / java / net / minecraftforge / client / event / RenderHandEventSpecific . java 
 new file mode 100644 
 index 0000000 . . 63a4d49 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / RenderHandEventSpecific . java 
 @ @ - 0 , 0 + 1 , 75 @ @ 
 + package net . minecraftforge . client . event ; 
 + 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraft . util . EnumHand ; 
 + import net . minecraftforge . fml . common . eventhandler . Event ; 
 + 
 + import javax . annotation . Nullable ; 
 + 
 + / * * 
 + * This event is fired on the { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } 
 + * whenever a hand is rendered in first person . 
 + * Canceling the event causes the hand to not render . 
 + * / 
 + public class RenderHandEventSpecific extends Event 
 + { 
 + private final EnumHand hand ; 
 + private final float partialTicks ; 
 + private final float interpolatedPitch ; 
 + private final float swingProgress ; 
 + private final float equipProgress ; 
 + private final ItemStack stack ; 
 + 
 + public RenderHandEventSpecific ( EnumHand hand , float partialTicks , float interpolatedPitch , float swingProgress , float equipProgress , ItemStack stack ) 
 + { 
 + this . hand = hand ; 
 + this . partialTicks = partialTicks ; 
 + this . interpolatedPitch = interpolatedPitch ; 
 + this . swingProgress = swingProgress ; 
 + this . equipProgress = equipProgress ; 
 + this . stack = stack ; 
 + } 
 + 
 + public EnumHand getHand ( ) 
 + { 
 + return hand ; 
 + } 
 + 
 + public float getPartialTicks ( ) 
 + { 
 + return partialTicks ; 
 + } 
 + 
 + / * * 
 + * @ return The interpolated pitch of the player entity 
 + * / 
 + public float getInterpolatedPitch ( ) 
 + { 
 + return interpolatedPitch ; 
 + } 
 + 
 + / * * 
 + * @ return The swing progress of the hand being rendered 
 + * / 
 + public float getSwingProgress ( ) 
 + { 
 + return swingProgress ; 
 + } 
 + 
 + / * * 
 + * @ return The progress of the equip animation . 1 . 0 is fully equipped . 
 + * / 
 + public float getEquipProgress ( ) 
 + { 
 + return equipProgress ; 
 + } 
 + 
 + / * * 
 + * @ return The ItemStack to be rendered , or null . 
 + * / 
 + @ Nullable 
 + public ItemStack getItemStack ( ) 
 + { 
 + return stack ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 index 8e74e13 . . db5e237 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 @ @ - 9 , 7 + 9 , 15 @ @ 
 public static int field _ 78922 _ b ; 
 public int field _ 78923 _ c ; 
 public int field _ 78920 _ d ; 
 - @ @ - 157 , 7 + 157 , 7 @ @ 
 + @ @ - 132 , 6 + 132 , 7 @ @ 
 + { 
 + + + field _ 78922 _ b ; 
 + RenderBlocks renderblocks = new RenderBlocks ( chunkcache ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( renderblocks ) ; 
 + this . field _ 78917 _ C = 0 ; 
 + this . field _ 147894 _ y = null ; 
 + 
 + @ @ - 157 , 7 + 158 , 7 @ @ 
 this . func _ 147890 _ b ( k2 ) ; 
 } 
 
 @ @ - 18 , 7 + 26 , 7 @ @ 
 { 
 TileEntity tileentity = chunkcache . func _ 147438 _ o ( j3 , l2 , i3 ) ; 
 
 - @ @ - 173 , 7 + 173 , 9 @ @ 
 + @ @ - 173 , 7 + 174 , 9 @ @ 
 { 
 flag = true ; 
 } 
 @ @ - 29 , 12 + 37 , 21 @ @ 
 { 
 flag1 | = renderblocks . func _ 147805 _ b ( block , j3 , l2 , i3 ) ; 
 
 - @ @ - 232 , 21 + 234 , 22 @ @ 
 + @ @ - 210 , 6 + 213 , 7 @ @ 
 + break ; 
 + } 
 + } 
 + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( null ) ; 
 + } 
 + 
 + HashSet hashset1 = new HashSet ( ) ; 
 + @ @ - 232 , 21 + 236 , 23 @ @ 
 GL11 . glTranslatef ( - 8 . 0F , - 8 . 0F , - 8 . 0F ) ; 
 GL11 . glScalef ( f , f , f ) ; 
 GL11 . glTranslatef ( 8 . 0F , 8 . 0F , 8 . 0F ) ; 
 - field _ 78941 _ z . func _ 78382 _ b ( ) ; 
 - field _ 78941 _ z . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . onPreRenderWorld ( this , p _ 147890 _ 1 _ ) ; 
 + Tessellator . field _ 78398 _ a . func _ 78382 _ b ( ) ; 
 + Tessellator . field _ 78398 _ a . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; 
 } 
 @ @ - 48 , 8 + 65 , 8 @ @ 
 } 
 
 - this . field _ 78917 _ C + = field _ 78941 _ z . func _ 78381 _ a ( ) ; 
 - + / / ForgeHooksClient . afterRenderPass ( l1 ) ; Noop fo now , TODO : Event if anyone needs 
 + this . field _ 78917 _ C + = Tessellator . field _ 78398 _ a . func _ 78381 _ a ( ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . onPostRenderWorld ( this , p _ 147891 _ 1 _ ) ; 
 GL11 . glPopMatrix ( ) ; 
 GL11 . glEndList ( ) ; 
 - field _ 78941 _ z . func _ 78373 _ b ( 0 . 0D , 0 . 0D , 0 . 0D ) ; 
 @ @ - 57 , 7 + 74 , 7 @ @ 
 } 
 
 public void func _ 147889 _ b ( EntityLivingBase p _ 147889 _ 1 _ ) 
 - @ @ - 254 , 7 + 257 , 7 @ @ 
 + @ @ - 254 , 7 + 260 , 7 @ @ 
 if ( this . field _ 147894 _ y ! = null & & ! this . field _ 78928 _ m [ 1 ] ) 
 { 
 this . func _ 147890 _ b ( 1 ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index d80abf1 . . b960a31 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . util . ChatComponentTranslation ; 
 import net . minecraft . util . EnumChatFormatting ; 
 import net . minecraft . util . MathHelper ; 
 import net . minecraft . util . MovingObjectPosition ; 
 + import net . minecraft . world . ChunkCache ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . biome . BiomeGenBase ; 
 import net . minecraft . client . model . ModelBiped ; 
 @ @ - 42 , 6 + 43 , 7 @ @ import net . minecraft . client . renderer . OpenGlHelper ; 
 import net . minecraft . client . renderer . RenderBlocks ; 
 import net . minecraft . client . renderer . RenderGlobal ; 
 import net . minecraft . client . renderer . Tessellator ; 
 + import net . minecraft . client . renderer . WorldRenderer ; 
 import net . minecraft . client . renderer . entity . RenderItem ; 
 import net . minecraft . client . renderer . texture . TextureManager ; 
 import net . minecraft . client . renderer . texture . TextureMap ; 
 @ @ - 49 , 6 + 51 , 7 @ @ import net . minecraft . client . settings . GameSettings ; 
 import net . minecraftforge . client . IItemRenderer . ItemRenderType ; 
 import net . minecraftforge . client . event . DrawBlockHighlightEvent ; 
 import net . minecraftforge . client . event . RenderHandEvent ; 
 + import net . minecraftforge . client . event . RenderWorldEvent ; 
 import net . minecraftforge . client . event . RenderWorldLastEvent ; 
 import net . minecraftforge . client . event . TextureStitchEvent ; 
 import net . minecraftforge . client . event . sound . PlaySoundEvent17 ; 
 @ @ - 453 , 4 + 456 , 35 @ @ public class ForgeHooksClient 
 MinecraftForge . EVENT _ BUS . post ( e ) ; 
 return e . result ; 
 } 
 + 
 + static RenderBlocks worldRendererRB ; 
 + static int worldRenderPass ; 
 + 
 + public static int getWorldRenderPass ( ) 
 + { 
 + return worldRenderPass ; 
 + } 
 + 
 + public static void setWorldRendererRB ( RenderBlocks renderBlocks ) 
 + { 
 + worldRendererRB = renderBlocks ; 
 + } 
 + 
 + public static void onPreRenderWorld ( WorldRenderer worldRenderer , int pass ) 
 + { 
 + if ( worldRendererRB ! = null ) 
 + { 
 + worldRenderPass = pass ; 
 + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Pre ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; 
 + } 
 + } 
 + 
 + public static void onPostRenderWorld ( WorldRenderer worldRenderer , int pass ) 
 + { 
 + if ( worldRendererRB ! = null ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Post ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; 
 + worldRenderPass = - 1 ; 
 + } 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java 
 new file mode 100644 
 index 0000000 . . 5b353f3 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + package net . minecraftforge . client . event ; 
 + 
 + import cpw . mods . fml . common . eventhandler . Event ; 
 + import net . minecraft . client . renderer . RenderBlocks ; 
 + import net . minecraft . client . renderer . WorldRenderer ; 
 + import net . minecraft . world . ChunkCache ; 
 + 
 + public abstract class RenderWorldEvent extends Event 
 + { 
 + public final WorldRenderer renderer ; 
 + public final ChunkCache chunkCache ; 
 + public final RenderBlocks renderBlocks ; 
 + public final int pass ; 
 + 
 + public RenderWorldEvent ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) 
 + { 
 + this . renderer = renderer ; 
 + this . chunkCache = chunkCache ; 
 + this . renderBlocks = renderBlocks ; 
 + this . pass = pass ; 
 + } 
 + 
 + / * * 
 + * Fired when 16x16x16 chunk area is being redrawn . 
 + * Fired after GL state is setup , before tessellator is started . 
 + * / 
 + public static class Pre extends RenderWorldEvent 
 + { 
 + public Pre ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } 
 + } 
 + 
 + / * * 
 + * Fired after the tessellator is stopped , before the display list is ended . 
 + * / 
 + public static class Post extends RenderWorldEvent 
 + { 
 + public Post ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } 
 + } 
 + }
