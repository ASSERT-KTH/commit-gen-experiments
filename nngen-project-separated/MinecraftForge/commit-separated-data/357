BLEU SCORE: 0.008418013465838444

TEST MSG: Fix up test mods
GENERATED MSG: SidedProxy now has sensible default values - nested ClientProxy and ServerProxy classes .

TEST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java b / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java <nl> index 1fbca49 . . 02fba79 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java <nl> @ @ - 16 , 7 + 16 , 7 @ @ import net . minecraftforge . fml . relauncher . Side ; <nl> @ Mod . EventBusSubscriber <nl> public class BigNetworkMessageTest <nl> { <nl> - static final boolean ENABLED = true ; <nl> + static final boolean ENABLED = false ; <nl> static final String MOD _ ID = " big _ packet _ test " ; <nl> public static final SimpleNetworkWrapper INSTANCE = NetworkRegistry . INSTANCE . newSimpleChannel ( MOD _ ID ) ; <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / BreedingTest . java b / src / test / java / net / minecraftforge / debug / BreedingTest . java <nl> index 8eac5d0 . . 2acf483 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / BreedingTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / BreedingTest . java <nl> @ @ - 11 , 11 + 11 , 15 @ @ import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> public class BreedingTest <nl> { <nl> public static final String MODID = " breedingtest " ; <nl> + static final boolean ENABLED = false ; <nl> <nl> @ Mod . EventHandler <nl> public void preInit ( FMLPreInitializationEvent event ) <nl> { <nl> - MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + if ( ENABLED ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> } <nl> <nl> @ SubscribeEvent <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java b / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java <nl> index 4b8e654 . . ba273e9 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java <nl> @ @ - 10 , 11 + 10 , 15 @ @ import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> @ Mod ( modid = " clientchateventtest " , name = " Client Chat Event Test " , version = " 0 . 0 . 0 " , clientSideOnly = true ) <nl> public class ClientChatEventTest <nl> { <nl> + static final boolean ENABLED = false ; <nl> <nl> @ EventHandler <nl> public void init ( FMLInitializationEvent event ) <nl> { <nl> - MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + if ( ENABLED ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> } <nl> <nl> @ SubscribeEvent <nl> diff - - git a / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java b / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java <nl> index 3d29ac9 . . 0c5128c 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java <nl> + + + b / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java <nl> @ @ - 13 , 8 + 13 , 9 @ @ import net . minecraftforge . fml . relauncher . SideOnly ; <nl> public class DebugSearchTabs <nl> { <nl> public static final String MODID = " debugsearchtab " ; <nl> + static final boolean ENABLED = false ; <nl> <nl> - public static final CreativeTabs SEARCH _ TAB = new CreativeTabs ( 1 , " searchtab " ) <nl> + public static final CreativeTabs SEARCH _ TAB = ! ENABLED ? null : new CreativeTabs ( 1 , " searchtab " ) <nl> { <nl> @ SideOnly ( Side . CLIENT ) <nl> public ItemStack getTabIconItem ( ) <nl> @ @ - 23 , 8 + 24 , 8 @ @ public class DebugSearchTabs <nl> } <nl> <nl> @ Override <nl> - public boolean hasSearchBar ( ) { <nl> - 	 <nl> + public boolean hasSearchBar ( ) <nl> + { <nl> 	 return true ; <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FOVModifierTest . java b / src / test / java / net / minecraftforge / debug / FOVModifierTest . java <nl> index e9a51ec . . bb3294c 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FOVModifierTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FOVModifierTest . java <nl> @ @ - 14 , 11 + 14 , 15 @ @ import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> @ Mod ( modid = " fovmodifiertest " , name = " FOV Modifier Test " , version = " 0 . 0 . 0 " , clientSideOnly = true ) <nl> public class FOVModifierTest <nl> { <nl> + static final boolean ENABLED = false ; <nl> <nl> @ EventHandler <nl> public void init ( FMLInitializationEvent event ) <nl> { <nl> - MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + if ( ENABLED ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> } <nl> <nl> @ SubscribeEvent <nl> diff - - git a / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java b / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java <nl> index d2e9007 . . ac65963 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ import net . minecraftforge . fml . relauncher . Side ; <nl> @ Mod ( modid = " guicontainereventtest " , name = " GuiContainer Event Tests ! " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> public class GuiContainerEventTest <nl> { <nl> + static final boolean ENABLED = false ; <nl> <nl> @ ObjectHolder ( " minecraft : stone " ) <nl> public static final Item STONE _ ITEM = null ; <nl> @ @ - 41 , 6 + 42 , 8 @ @ public class GuiContainerEventTest <nl> @ SubscribeEvent <nl> public static void onForegroundRender ( GuiContainerEvent . DrawForeground event ) <nl> { <nl> + if ( ! ENABLED ) return ; <nl> + <nl> for ( Slot slot : event . getGuiContainer ( ) . inventorySlots . inventorySlots ) <nl> { <nl> if ( slot . getStack ( ) . getItem ( ) = = STONE _ ITEM ) <nl> diff - - git a / src / test / java / net / minecraftforge / debug / MapDataTest . java b / src / test / java / net / minecraftforge / debug / MapDataTest . java <nl> index 8732d7d . . b9b93c0 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / MapDataTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / MapDataTest . java <nl> @ @ - 216 , 30 + 216 , 34 @ @ public class MapDataTest <nl> { <nl> @ Nullable <nl> @ Override <nl> - public IMessage onMessage ( CustomMapPacket message , MessageContext ctx ) { <nl> + public IMessage onMessage ( CustomMapPacket message , MessageContext ctx ) <nl> + { <nl> / / Like NetHandlerPlayClient . handleMaps but using our custom type <nl> - Minecraft . getMinecraft ( ) . addScheduledTask ( ( ) - > <nl> - { <nl> - MapItemRenderer mapitemrenderer = Minecraft . getMinecraft ( ) . entityRenderer . getMapItemRenderer ( ) ; <nl> - MapData mapdata = CustomMap . loadMapData ( message . vanillaPacket . getMapId ( ) , Minecraft . getMinecraft ( ) . world ) ; <nl> + Minecraft . getMinecraft ( ) . addScheduledTask ( new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) <nl> + { <nl> + MapItemRenderer mapitemrenderer = Minecraft . getMinecraft ( ) . entityRenderer . getMapItemRenderer ( ) ; <nl> + MapData mapdata = CustomMap . loadMapData ( message . vanillaPacket . getMapId ( ) , Minecraft . getMinecraft ( ) . world ) ; <nl> <nl> - if ( mapdata = = null ) { <nl> - String s = CustomMap . PREFIX + " _ " + message . vanillaPacket . getMapId ( ) ; <nl> - mapdata = new CustomMapData ( s ) ; <nl> + if ( mapdata = = null ) { <nl> + String s = CustomMap . PREFIX + " _ " + message . vanillaPacket . getMapId ( ) ; <nl> + mapdata = new CustomMapData ( s ) ; <nl> <nl> - if ( mapitemrenderer . getMapInstanceIfExists ( s ) ! = null ) { <nl> - MapData mapdata1 = mapitemrenderer . getData ( mapitemrenderer . getMapInstanceIfExists ( s ) ) ; <nl> + if ( mapitemrenderer . getMapInstanceIfExists ( s ) ! = null ) { <nl> + MapData mapdata1 = mapitemrenderer . getData ( mapitemrenderer . getMapInstanceIfExists ( s ) ) ; <nl> <nl> - if ( mapdata1 ! = null ) { <nl> - mapdata = mapdata1 ; <nl> + if ( mapdata1 ! = null ) { <nl> + mapdata = mapdata1 ; <nl> + } <nl> } <nl> + <nl> + Minecraft . getMinecraft ( ) . world . setData ( s , mapdata ) ; <nl> } <nl> <nl> - Minecraft . getMinecraft ( ) . world . setData ( s , mapdata ) ; <nl> + message . vanillaPacket . setMapdataTo ( mapdata ) ; <nl> + mapitemrenderer . updateMapTexture ( mapdata ) ; <nl> } <nl> - <nl> - message . vanillaPacket . setMapdataTo ( mapdata ) ; <nl> - mapitemrenderer . updateMapTexture ( mapdata ) ; <nl> } ) ; <nl> <nl> return null ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java b / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java <nl> index 205ea89 . . 2c8263f 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java <nl> + + + b / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java <nl> @ @ - 42 , 6 + 42 , 7 @ @ public class TestCapabilityMod <nl> @ CapabilityInject ( IExampleCapability . class ) <nl> private static final Capability < IExampleCapability > TEST _ CAP = null ; <nl> <nl> + static final boolean ENABLED = false ; <nl> private static Logger logger ; <nl> <nl> @ Mod . EventHandler <nl> @ @ - 58 , 7 + 59 , 7 @ @ public class TestCapabilityMod <nl> @ SubscribeEvent <nl> public void onInteract ( PlayerInteractEvent . LeftClickBlock event ) <nl> { <nl> - if ( event . getItemStack ( ) . getItem ( ) ! = Items . STICK ) <nl> + if ( ! ENABLED | | event . getItemStack ( ) . getItem ( ) ! = Items . STICK ) <nl> { <nl> return ; <nl> } <nl> @ @ - 82 , 7 + 83 , 7 @ @ public class TestCapabilityMod <nl> @ SubscribeEvent <nl> public void onInteractItem ( PlayerInteractEvent . RightClickItem event ) <nl> { <nl> - if ( ! event . getEntityPlayer ( ) . isSneaking ( ) ) <nl> + if ( ! ENABLED | | ! event . getEntityPlayer ( ) . isSneaking ( ) ) <nl> { <nl> return ; <nl> } <nl> @ @ - 215 , 7 + 216 , 7 @ @ public class TestCapabilityMod <nl> @ SubscribeEvent <nl> public void tick ( TickEvent . WorldTickEvent event ) <nl> { <nl> - if ( ! event . world . isRemote ) <nl> + if ( ENABLED & & ! event . world . isRemote ) <nl> { <nl> List < EntityPlayer > players = event . world . playerEntities ; <nl> int i = 0 ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java b / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java <nl> index 1d0710c . . bce974a 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import javax . annotation . Nullable ; <nl> public class WorldCapabilityRainTimerTest <nl> { <nl> public static final String MODID = " worldperiodicrainchecktest " ; <nl> + static final boolean ENABLED = false ; <nl> <nl> @ CapabilityInject ( IRainTimer . class ) <nl> public static final Capability < IRainTimer > TIMER _ CAP = null ; <nl> @ @ - 53 , 7 + 54 , 7 @ @ public class WorldCapabilityRainTimerTest <nl> @ SubscribeEvent <nl> public void onTick ( TickEvent . WorldTickEvent event ) <nl> { <nl> - if ( event . world . isRemote ) <nl> + if ( ! ENABLED | | event . world . isRemote ) <nl> { <nl> return ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java b / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java <nl> index bfd116d . . c44bca6 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java <nl> @ @ - 57 , 6 + 57 , 10 @ @ public class ProxyInjector <nl> continue ; <nl> } <nl> String targetType = side . isClient ( ) ? annotation . clientSide ( ) : annotation . serverSide ( ) ; <nl> + if ( targetType . equals ( " " ) ) <nl> + { <nl> + targetType = targ . getClassName ( ) + ( side . isClient ( ) ? " $ ClientProxy " : " $ ServerProxy " ) ; <nl> + } <nl> Object proxy = Class . forName ( targetType , true , mcl ) . newInstance ( ) ; <nl> <nl> if ( languageAdapter . supportsStatics ( ) & & ( target . getModifiers ( ) & Modifier . STATIC ) = = 0 ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / SidedProxy . java b / src / main / java / net / minecraftforge / fml / common / SidedProxy . java <nl> index 472df00 . . 817ffe7 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / SidedProxy . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / SidedProxy . java <nl> @ @ - 50 , 12 + 50 , 14 @ @ import java . lang . annotation . Target ; <nl> public @ interface SidedProxy <nl> { <nl> / * * <nl> - * The name of the client side class to load and populate <nl> + * The full name of the client side class to load and populate . <nl> + * Defaults to the nested class named " ClientProxy " in the current class . <nl> * / <nl> String clientSide ( ) default " " ; <nl> <nl> / * * <nl> - * The name of the server side class to load and populate <nl> + * The full name of the server side class to load and populate . <nl> + * Defaults to the nested class named " ServerProxy " in the current class . <nl> * / <nl> String serverSide ( ) default " " ; <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> index 06e88db . . cfa8128 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package net . minecraftforge . debug ; <nl> <nl> + import java . util . List ; <nl> + <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . client . renderer . ItemMeshDefinition ; <nl> import net . minecraft . client . resources . model . ModelBakery ; <nl> @ @ - 9 , 13 + 11 , 16 @ @ import net . minecraft . init . Items ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . util . ResourceLocation ; <nl> - import net . minecraftforge . client . model . ModelDynBucket ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . debug . ModelFluidDebug . TestFluid ; <nl> import net . minecraftforge . debug . ModelFluidDebug . TestGas ; <nl> import net . minecraftforge . event . entity . player . FillBucketEvent ; <nl> - import net . minecraftforge . fluids . * ; <nl> + import net . minecraftforge . fluids . Fluid ; <nl> + import net . minecraftforge . fluids . FluidContainerRegistry ; <nl> + import net . minecraftforge . fluids . FluidRegistry ; <nl> + import net . minecraftforge . fluids . FluidStack ; <nl> + import net . minecraftforge . fluids . IFluidBlock ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> import net . minecraftforge . fml . common . SidedProxy ; <nl> @ @ - 24 , 15 + 29 , 13 @ @ import net . minecraftforge . fml . common . eventhandler . Event . Result ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> import net . minecraftforge . fml . common . registry . GameRegistry ; <nl> <nl> - import java . util . List ; <nl> - <nl> @ Mod ( modid = " DynBucketTest " , version = " 0 . 1 " , dependencies = " after : " + ModelFluidDebug . MODID ) <nl> public class DynBucketTest <nl> { <nl> public static final Item dynBucket = new DynBucket ( ) ; <nl> public static final Item dynBottle = new DynBottle ( ) ; <nl> <nl> - @ SidedProxy ( clientSide = " net . minecraftforge . debug . DynBucketTest $ ClientProxy " , serverSide = " net . minecraftforge . debug . DynBucketTest $ CommonProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> public static class CommonProxy <nl> @ @ - 42 , 6 + 45 , 8 @ @ public class DynBucketTest <nl> } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> @ Override <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java <nl> index 78f74ed . . da52b7f 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java <nl> @ @ - 16 , 7 + 16 , 7 @ @ public class ItemLayerModelDebug <nl> public static final String MODID = " ForgeDebugItemLayerModel " ; <nl> public static final String VERSION = " 1 . 0 " ; <nl> <nl> - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ItemLayerModelDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ItemLayerModelDebug $ ClientProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> @ EventHandler <nl> @ @ - 30 , 6 + 30 , 8 @ @ public class ItemLayerModelDebug <nl> } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> private static ModelResourceLocation modelLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestItem . name , " inventory " ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> index 0f1dec7 . . 6a21bba 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public class ItemTileDebug <nl> <nl> private static String blockName = MODID . toLowerCase ( ) + " : " + TestBlock . name ; <nl> <nl> - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ItemTileDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ItemTileDebug $ ClientProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> @ EventHandler <nl> @ @ - 50 , 6 + 50 , 8 @ @ public class ItemTileDebug <nl> public void init ( FMLInitializationEvent event ) { } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> private static ModelResourceLocation itemLocation = new ModelResourceLocation ( blockName , " inventory " ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> index 8a1de58 . . 79d762c 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ public class ModelAnimationDebug <nl> public static final PropertyDirection FACING = PropertyDirection . create ( " facing " ) ; <nl> public static final PropertyBool STATIC = PropertyBool . create ( " static " ) ; ; <nl> <nl> - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ModelAnimationDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ModelAnimationDebug $ ClientProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> public static class CommonProxy <nl> @ @ - 142 , 6 + 142 , 8 @ @ public class ModelAnimationDebug <nl> public void init ( FMLInitializationEvent event ) { } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> @ Override <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java <nl> index 4a8253b . . fc61e2a 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java <nl> @ @ - 66 , 7 + 66 , 7 @ @ public class ModelBakeEventDebug <nl> } <nl> } <nl> <nl> - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ModelBakeEventDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ModelBakeEventDebug $ ClientProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> @ EventHandler <nl> @ @ - 81 , 6 + 81 , 8 @ @ public class ModelBakeEventDebug <nl> } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> private static ModelResourceLocation blockLocation = new ModelResourceLocation ( blockName , " normal " ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java <nl> index 5eb6b27 . . 9a48af7 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ public class ModelFluidDebug <nl> public static final String MODID = " ForgeDebugModelFluid " ; <nl> public static final String VERSION = " 1 . 0 " ; <nl> <nl> - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ModelFluidDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ModelFluidDebug $ ClientProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> public static final Fluid milkFluid = new Fluid ( " milk " , new ResourceLocation ( " forge " , " blocks / milk _ still " ) , new ResourceLocation ( " forge " , " blocks / milk _ flow " ) ) ; <nl> @ @ - 47 , 6 + 47 , 8 @ @ public class ModelFluidDebug <nl> } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " fluid " ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java b / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java <nl> index c50bbdd . . 061f884 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java <nl> @ @ - 21 , 7 + 21 , 7 @ @ public class MultiLayerModelDebug <nl> <nl> public static String blockName = " test _ layer _ block " ; <nl> <nl> - @ SidedProxy ( serverSide = " net . minecraftforge . debug . MultiLayerModelDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . MultiLayerModelDebug $ ClientProxy " ) <nl> + @ SidedProxy <nl> public static CommonProxy proxy ; <nl> <nl> public static class CommonProxy <nl> @ @ - 50 , 6 + 50 , 8 @ @ public class MultiLayerModelDebug <nl> } <nl> } <nl> <nl> + public static class ServerProxy extends CommonProxy { } <nl> + <nl> public static class ClientProxy extends CommonProxy <nl> { <nl> @ Override

TEST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java b / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java 
 index 1fbca49 . . 02fba79 100644 
 - - - a / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / BigNetworkMessageTest . java 
 @ @ - 16 , 7 + 16 , 7 @ @ import net . minecraftforge . fml . relauncher . Side ; 
 @ Mod . EventBusSubscriber 
 public class BigNetworkMessageTest 
 { 
 - static final boolean ENABLED = true ; 
 + static final boolean ENABLED = false ; 
 static final String MOD _ ID = " big _ packet _ test " ; 
 public static final SimpleNetworkWrapper INSTANCE = NetworkRegistry . INSTANCE . newSimpleChannel ( MOD _ ID ) ; 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / BreedingTest . java b / src / test / java / net / minecraftforge / debug / BreedingTest . java 
 index 8eac5d0 . . 2acf483 100644 
 - - - a / src / test / java / net / minecraftforge / debug / BreedingTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / BreedingTest . java 
 @ @ - 11 , 11 + 11 , 15 @ @ import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 public class BreedingTest 
 { 
 public static final String MODID = " breedingtest " ; 
 + static final boolean ENABLED = false ; 
 
 @ Mod . EventHandler 
 public void preInit ( FMLPreInitializationEvent event ) 
 { 
 - MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + if ( ENABLED ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 } 
 
 @ SubscribeEvent 
 diff - - git a / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java b / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java 
 index 4b8e654 . . ba273e9 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / ClientChatEventTest . java 
 @ @ - 10 , 11 + 10 , 15 @ @ import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 @ Mod ( modid = " clientchateventtest " , name = " Client Chat Event Test " , version = " 0 . 0 . 0 " , clientSideOnly = true ) 
 public class ClientChatEventTest 
 { 
 + static final boolean ENABLED = false ; 
 
 @ EventHandler 
 public void init ( FMLInitializationEvent event ) 
 { 
 - MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + if ( ENABLED ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 } 
 
 @ SubscribeEvent 
 diff - - git a / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java b / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java 
 index 3d29ac9 . . 0c5128c 100644 
 - - - a / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java 
 + + + b / src / test / java / net / minecraftforge / debug / DebugSearchTabs . java 
 @ @ - 13 , 8 + 13 , 9 @ @ import net . minecraftforge . fml . relauncher . SideOnly ; 
 public class DebugSearchTabs 
 { 
 public static final String MODID = " debugsearchtab " ; 
 + static final boolean ENABLED = false ; 
 
 - public static final CreativeTabs SEARCH _ TAB = new CreativeTabs ( 1 , " searchtab " ) 
 + public static final CreativeTabs SEARCH _ TAB = ! ENABLED ? null : new CreativeTabs ( 1 , " searchtab " ) 
 { 
 @ SideOnly ( Side . CLIENT ) 
 public ItemStack getTabIconItem ( ) 
 @ @ - 23 , 8 + 24 , 8 @ @ public class DebugSearchTabs 
 } 
 
 @ Override 
 - public boolean hasSearchBar ( ) { 
 - 	 
 + public boolean hasSearchBar ( ) 
 + { 
 	 return true ; 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / FOVModifierTest . java b / src / test / java / net / minecraftforge / debug / FOVModifierTest . java 
 index e9a51ec . . bb3294c 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FOVModifierTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FOVModifierTest . java 
 @ @ - 14 , 11 + 14 , 15 @ @ import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 @ Mod ( modid = " fovmodifiertest " , name = " FOV Modifier Test " , version = " 0 . 0 . 0 " , clientSideOnly = true ) 
 public class FOVModifierTest 
 { 
 + static final boolean ENABLED = false ; 
 
 @ EventHandler 
 public void init ( FMLInitializationEvent event ) 
 { 
 - MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + if ( ENABLED ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 } 
 
 @ SubscribeEvent 
 diff - - git a / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java b / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java 
 index d2e9007 . . ac65963 100644 
 - - - a / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / GuiContainerEventTest . java 
 @ @ - 34 , 6 + 34 , 7 @ @ import net . minecraftforge . fml . relauncher . Side ; 
 @ Mod ( modid = " guicontainereventtest " , name = " GuiContainer Event Tests ! " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 public class GuiContainerEventTest 
 { 
 + static final boolean ENABLED = false ; 
 
 @ ObjectHolder ( " minecraft : stone " ) 
 public static final Item STONE _ ITEM = null ; 
 @ @ - 41 , 6 + 42 , 8 @ @ public class GuiContainerEventTest 
 @ SubscribeEvent 
 public static void onForegroundRender ( GuiContainerEvent . DrawForeground event ) 
 { 
 + if ( ! ENABLED ) return ; 
 + 
 for ( Slot slot : event . getGuiContainer ( ) . inventorySlots . inventorySlots ) 
 { 
 if ( slot . getStack ( ) . getItem ( ) = = STONE _ ITEM ) 
 diff - - git a / src / test / java / net / minecraftforge / debug / MapDataTest . java b / src / test / java / net / minecraftforge / debug / MapDataTest . java 
 index 8732d7d . . b9b93c0 100644 
 - - - a / src / test / java / net / minecraftforge / debug / MapDataTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / MapDataTest . java 
 @ @ - 216 , 30 + 216 , 34 @ @ public class MapDataTest 
 { 
 @ Nullable 
 @ Override 
 - public IMessage onMessage ( CustomMapPacket message , MessageContext ctx ) { 
 + public IMessage onMessage ( CustomMapPacket message , MessageContext ctx ) 
 + { 
 / / Like NetHandlerPlayClient . handleMaps but using our custom type 
 - Minecraft . getMinecraft ( ) . addScheduledTask ( ( ) - > 
 - { 
 - MapItemRenderer mapitemrenderer = Minecraft . getMinecraft ( ) . entityRenderer . getMapItemRenderer ( ) ; 
 - MapData mapdata = CustomMap . loadMapData ( message . vanillaPacket . getMapId ( ) , Minecraft . getMinecraft ( ) . world ) ; 
 + Minecraft . getMinecraft ( ) . addScheduledTask ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) 
 + { 
 + MapItemRenderer mapitemrenderer = Minecraft . getMinecraft ( ) . entityRenderer . getMapItemRenderer ( ) ; 
 + MapData mapdata = CustomMap . loadMapData ( message . vanillaPacket . getMapId ( ) , Minecraft . getMinecraft ( ) . world ) ; 
 
 - if ( mapdata = = null ) { 
 - String s = CustomMap . PREFIX + " _ " + message . vanillaPacket . getMapId ( ) ; 
 - mapdata = new CustomMapData ( s ) ; 
 + if ( mapdata = = null ) { 
 + String s = CustomMap . PREFIX + " _ " + message . vanillaPacket . getMapId ( ) ; 
 + mapdata = new CustomMapData ( s ) ; 
 
 - if ( mapitemrenderer . getMapInstanceIfExists ( s ) ! = null ) { 
 - MapData mapdata1 = mapitemrenderer . getData ( mapitemrenderer . getMapInstanceIfExists ( s ) ) ; 
 + if ( mapitemrenderer . getMapInstanceIfExists ( s ) ! = null ) { 
 + MapData mapdata1 = mapitemrenderer . getData ( mapitemrenderer . getMapInstanceIfExists ( s ) ) ; 
 
 - if ( mapdata1 ! = null ) { 
 - mapdata = mapdata1 ; 
 + if ( mapdata1 ! = null ) { 
 + mapdata = mapdata1 ; 
 + } 
 } 
 + 
 + Minecraft . getMinecraft ( ) . world . setData ( s , mapdata ) ; 
 } 
 
 - Minecraft . getMinecraft ( ) . world . setData ( s , mapdata ) ; 
 + message . vanillaPacket . setMapdataTo ( mapdata ) ; 
 + mapitemrenderer . updateMapTexture ( mapdata ) ; 
 } 
 - 
 - message . vanillaPacket . setMapdataTo ( mapdata ) ; 
 - mapitemrenderer . updateMapTexture ( mapdata ) ; 
 } ) ; 
 
 return null ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java b / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java 
 index 205ea89 . . 2c8263f 100644 
 - - - a / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java 
 + + + b / src / test / java / net / minecraftforge / debug / TestCapabilityMod . java 
 @ @ - 42 , 6 + 42 , 7 @ @ public class TestCapabilityMod 
 @ CapabilityInject ( IExampleCapability . class ) 
 private static final Capability < IExampleCapability > TEST _ CAP = null ; 
 
 + static final boolean ENABLED = false ; 
 private static Logger logger ; 
 
 @ Mod . EventHandler 
 @ @ - 58 , 7 + 59 , 7 @ @ public class TestCapabilityMod 
 @ SubscribeEvent 
 public void onInteract ( PlayerInteractEvent . LeftClickBlock event ) 
 { 
 - if ( event . getItemStack ( ) . getItem ( ) ! = Items . STICK ) 
 + if ( ! ENABLED | | event . getItemStack ( ) . getItem ( ) ! = Items . STICK ) 
 { 
 return ; 
 } 
 @ @ - 82 , 7 + 83 , 7 @ @ public class TestCapabilityMod 
 @ SubscribeEvent 
 public void onInteractItem ( PlayerInteractEvent . RightClickItem event ) 
 { 
 - if ( ! event . getEntityPlayer ( ) . isSneaking ( ) ) 
 + if ( ! ENABLED | | ! event . getEntityPlayer ( ) . isSneaking ( ) ) 
 { 
 return ; 
 } 
 @ @ - 215 , 7 + 216 , 7 @ @ public class TestCapabilityMod 
 @ SubscribeEvent 
 public void tick ( TickEvent . WorldTickEvent event ) 
 { 
 - if ( ! event . world . isRemote ) 
 + if ( ENABLED & & ! event . world . isRemote ) 
 { 
 List < EntityPlayer > players = event . world . playerEntities ; 
 int i = 0 ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java b / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java 
 index 1d0710c . . bce974a 100644 
 - - - a / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / WorldCapabilityRainTimerTest . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import javax . annotation . Nullable ; 
 public class WorldCapabilityRainTimerTest 
 { 
 public static final String MODID = " worldperiodicrainchecktest " ; 
 + static final boolean ENABLED = false ; 
 
 @ CapabilityInject ( IRainTimer . class ) 
 public static final Capability < IRainTimer > TIMER _ CAP = null ; 
 @ @ - 53 , 7 + 54 , 7 @ @ public class WorldCapabilityRainTimerTest 
 @ SubscribeEvent 
 public void onTick ( TickEvent . WorldTickEvent event ) 
 { 
 - if ( event . world . isRemote ) 
 + if ( ! ENABLED | | event . world . isRemote ) 
 { 
 return ; 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java b / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java 
 index bfd116d . . c44bca6 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / ProxyInjector . java 
 @ @ - 57 , 6 + 57 , 10 @ @ public class ProxyInjector 
 continue ; 
 } 
 String targetType = side . isClient ( ) ? annotation . clientSide ( ) : annotation . serverSide ( ) ; 
 + if ( targetType . equals ( " " ) ) 
 + { 
 + targetType = targ . getClassName ( ) + ( side . isClient ( ) ? " $ ClientProxy " : " $ ServerProxy " ) ; 
 + } 
 Object proxy = Class . forName ( targetType , true , mcl ) . newInstance ( ) ; 
 
 if ( languageAdapter . supportsStatics ( ) & & ( target . getModifiers ( ) & Modifier . STATIC ) = = 0 ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / SidedProxy . java b / src / main / java / net / minecraftforge / fml / common / SidedProxy . java 
 index 472df00 . . 817ffe7 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / SidedProxy . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / SidedProxy . java 
 @ @ - 50 , 12 + 50 , 14 @ @ import java . lang . annotation . Target ; 
 public @ interface SidedProxy 
 { 
 / * * 
 - * The name of the client side class to load and populate 
 + * The full name of the client side class to load and populate . 
 + * Defaults to the nested class named " ClientProxy " in the current class . 
 * / 
 String clientSide ( ) default " " ; 
 
 / * * 
 - * The name of the server side class to load and populate 
 + * The full name of the server side class to load and populate . 
 + * Defaults to the nested class named " ServerProxy " in the current class . 
 * / 
 String serverSide ( ) default " " ; 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / DynBucketTest . java b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 index 06e88db . . cfa8128 100644 
 - - - a / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / DynBucketTest . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package net . minecraftforge . debug ; 
 
 + import java . util . List ; 
 + 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . client . renderer . ItemMeshDefinition ; 
 import net . minecraft . client . resources . model . ModelBakery ; 
 @ @ - 9 , 13 + 11 , 16 @ @ import net . minecraft . init . Items ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . util . ResourceLocation ; 
 - import net . minecraftforge . client . model . ModelDynBucket ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . debug . ModelFluidDebug . TestFluid ; 
 import net . minecraftforge . debug . ModelFluidDebug . TestGas ; 
 import net . minecraftforge . event . entity . player . FillBucketEvent ; 
 - import net . minecraftforge . fluids . * ; 
 + import net . minecraftforge . fluids . Fluid ; 
 + import net . minecraftforge . fluids . FluidContainerRegistry ; 
 + import net . minecraftforge . fluids . FluidRegistry ; 
 + import net . minecraftforge . fluids . FluidStack ; 
 + import net . minecraftforge . fluids . IFluidBlock ; 
 import net . minecraftforge . fml . common . Mod ; 
 import net . minecraftforge . fml . common . Mod . EventHandler ; 
 import net . minecraftforge . fml . common . SidedProxy ; 
 @ @ - 24 , 15 + 29 , 13 @ @ import net . minecraftforge . fml . common . eventhandler . Event . Result ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 import net . minecraftforge . fml . common . registry . GameRegistry ; 
 
 - import java . util . List ; 
 - 
 @ Mod ( modid = " DynBucketTest " , version = " 0 . 1 " , dependencies = " after : " + ModelFluidDebug . MODID ) 
 public class DynBucketTest 
 { 
 public static final Item dynBucket = new DynBucket ( ) ; 
 public static final Item dynBottle = new DynBottle ( ) ; 
 
 - @ SidedProxy ( clientSide = " net . minecraftforge . debug . DynBucketTest $ ClientProxy " , serverSide = " net . minecraftforge . debug . DynBucketTest $ CommonProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 public static class CommonProxy 
 @ @ - 42 , 6 + 45 , 8 @ @ public class DynBucketTest 
 } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 @ Override 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java 
 index 78f74ed . . da52b7f 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java 
 @ @ - 16 , 7 + 16 , 7 @ @ public class ItemLayerModelDebug 
 public static final String MODID = " ForgeDebugItemLayerModel " ; 
 public static final String VERSION = " 1 . 0 " ; 
 
 - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ItemLayerModelDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ItemLayerModelDebug $ ClientProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 @ EventHandler 
 @ @ - 30 , 6 + 30 , 8 @ @ public class ItemLayerModelDebug 
 } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 private static ModelResourceLocation modelLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestItem . name , " inventory " ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 index 0f1dec7 . . 6a21bba 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public class ItemTileDebug 
 
 private static String blockName = MODID . toLowerCase ( ) + " : " + TestBlock . name ; 
 
 - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ItemTileDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ItemTileDebug $ ClientProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 @ EventHandler 
 @ @ - 50 , 6 + 50 , 8 @ @ public class ItemTileDebug 
 public void init ( FMLInitializationEvent event ) { } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 private static ModelResourceLocation itemLocation = new ModelResourceLocation ( blockName , " inventory " ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 index 8a1de58 . . 79d762c 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public class ModelAnimationDebug 
 public static final PropertyDirection FACING = PropertyDirection . create ( " facing " ) ; 
 public static final PropertyBool STATIC = PropertyBool . create ( " static " ) ; ; 
 
 - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ModelAnimationDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ModelAnimationDebug $ ClientProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 public static class CommonProxy 
 @ @ - 142 , 6 + 142 , 8 @ @ public class ModelAnimationDebug 
 public void init ( FMLInitializationEvent event ) { } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 @ Override 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java 
 index 4a8253b . . fc61e2a 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java 
 @ @ - 66 , 7 + 66 , 7 @ @ public class ModelBakeEventDebug 
 } 
 } 
 
 - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ModelBakeEventDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ModelBakeEventDebug $ ClientProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 @ EventHandler 
 @ @ - 81 , 6 + 81 , 8 @ @ public class ModelBakeEventDebug 
 } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 private static ModelResourceLocation blockLocation = new ModelResourceLocation ( blockName , " normal " ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java 
 index 5eb6b27 . . 9a48af7 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelFluidDebug . java 
 @ @ - 26 , 7 + 26 , 7 @ @ public class ModelFluidDebug 
 public static final String MODID = " ForgeDebugModelFluid " ; 
 public static final String VERSION = " 1 . 0 " ; 
 
 - @ SidedProxy ( serverSide = " net . minecraftforge . debug . ModelFluidDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . ModelFluidDebug $ ClientProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 public static final Fluid milkFluid = new Fluid ( " milk " , new ResourceLocation ( " forge " , " blocks / milk _ still " ) , new ResourceLocation ( " forge " , " blocks / milk _ flow " ) ) ; 
 @ @ - 47 , 6 + 47 , 8 @ @ public class ModelFluidDebug 
 } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + TestFluidBlock . name , " fluid " ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java b / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java 
 index c50bbdd . . 061f884 100644 
 - - - a / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / MultiLayerModelDebug . java 
 @ @ - 21 , 7 + 21 , 7 @ @ public class MultiLayerModelDebug 
 
 public static String blockName = " test _ layer _ block " ; 
 
 - @ SidedProxy ( serverSide = " net . minecraftforge . debug . MultiLayerModelDebug $ CommonProxy " , clientSide = " net . minecraftforge . debug . MultiLayerModelDebug $ ClientProxy " ) 
 + @ SidedProxy 
 public static CommonProxy proxy ; 
 
 public static class CommonProxy 
 @ @ - 50 , 6 + 50 , 8 @ @ public class MultiLayerModelDebug 
 } 
 } 
 
 + public static class ServerProxy extends CommonProxy { } 
 + 
 public static class ClientProxy extends CommonProxy 
 { 
 @ Override
