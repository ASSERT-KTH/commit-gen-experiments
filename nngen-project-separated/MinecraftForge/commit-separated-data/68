BLEU SCORE: 0.05815868174415823

TEST MSG: Fix reference to UnsafeHacks in RuntimeEnumExtender
GENERATED MSG: Add synchronized modifier to runtime enhanced enum methods

TEST DIFF (one line): diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> index a1ef806 . . 93bc020 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> @ @ - 48 , 7 + 48 , 7 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { <nl> private final Type MARKER _ IFACE = Type . getType ( " Lnet / minecraftforge / common / IExtensibleEnum ; " ) ; <nl> private final Type ARRAY _ UTILS = Type . getType ( " Lorg / apache / commons / lang3 / ArrayUtils ; " ) ; / / Don ' t directly reference this to prevent class loading . <nl> private final String ADD _ DESC = Type . getMethodDescriptor ( Type . getType ( Object [ ] . class ) , Type . getType ( Object [ ] . class ) , Type . getType ( Object . class ) ) ; <nl> - private final Type UNSAFE _ HACKS = Type . getType ( " Lnet / minecraftforge / fml / UnsafeHacks ; " ) ; / / Again , not direct reference to prevent class loading . <nl> + private final Type UNSAFE _ HACKS = Type . getType ( " Lnet / minecraftforge / fml / unsafe / UnsafeHacks ; " ) ; / / Again , not direct reference to prevent class loading . <nl> private final String CLEAN _ DESC = Type . getMethodDescriptor ( Type . VOID _ TYPE , Type . getType ( Class . class ) ) ; <nl> private final String NAME _ DESC = Type . getMethodDescriptor ( STRING ) ; <nl> private final String EQUALS _ DESC = Type . getMethodDescriptor ( Type . BOOLEAN _ TYPE , STRING ) ;
NEAREST DIFF (one line): diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> index 92f9423 . . 3b7dc7a 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> @ @ - 133 , 6 + 133 , 7 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { <nl> <nl> values . access & = values . access & ~ Opcodes . ACC _ FINAL ; / / Strip the final so JITer doesn ' t inline things . <nl> <nl> + mtd . access | = Opcodes . ACC _ SYNCHRONIZED ; <nl> mtd . instructions . clear ( ) ; <nl> InstructionAdapter ins = new InstructionAdapter ( mtd ) ; <nl>

TEST DIFF:
diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 index a1ef806 . . 93bc020 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 @ @ - 48 , 7 + 48 , 7 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { 
 private final Type MARKER _ IFACE = Type . getType ( " Lnet / minecraftforge / common / IExtensibleEnum ; " ) ; 
 private final Type ARRAY _ UTILS = Type . getType ( " Lorg / apache / commons / lang3 / ArrayUtils ; " ) ; / / Don ' t directly reference this to prevent class loading . 
 private final String ADD _ DESC = Type . getMethodDescriptor ( Type . getType ( Object [ ] . class ) , Type . getType ( Object [ ] . class ) , Type . getType ( Object . class ) ) ; 
 - private final Type UNSAFE _ HACKS = Type . getType ( " Lnet / minecraftforge / fml / UnsafeHacks ; " ) ; / / Again , not direct reference to prevent class loading . 
 + private final Type UNSAFE _ HACKS = Type . getType ( " Lnet / minecraftforge / fml / unsafe / UnsafeHacks ; " ) ; / / Again , not direct reference to prevent class loading . 
 private final String CLEAN _ DESC = Type . getMethodDescriptor ( Type . VOID _ TYPE , Type . getType ( Class . class ) ) ; 
 private final String NAME _ DESC = Type . getMethodDescriptor ( STRING ) ; 
 private final String EQUALS _ DESC = Type . getMethodDescriptor ( Type . BOOLEAN _ TYPE , STRING ) ;

NEAREST DIFF:
diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 index 92f9423 . . 3b7dc7a 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 @ @ - 133 , 6 + 133 , 7 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { 
 
 values . access & = values . access & ~ Opcodes . ACC _ FINAL ; / / Strip the final so JITer doesn ' t inline things . 
 
 + mtd . access | = Opcodes . ACC _ SYNCHRONIZED ; 
 mtd . instructions . clear ( ) ; 
 InstructionAdapter ins = new InstructionAdapter ( mtd ) ; 

