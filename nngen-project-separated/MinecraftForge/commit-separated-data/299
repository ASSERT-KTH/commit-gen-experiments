BLEU SCORE: 0.013492405302858666

TEST MSG: Add some extra context to Advancements / Minecart / Fishing / TileEntity loot handlers .
GENERATED MSG: Need to load the dimension from disk - do it without filling out the player so that the normal player loading ( including events )

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / advancements / AdvancementRewards . java . patch b / patches / minecraft / net / minecraft / advancements / AdvancementRewards . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 782e793 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / advancements / AdvancementRewards . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / advancements / AdvancementRewards . java <nl> + + + + . . / src - work / minecraft / net / minecraft / advancements / AdvancementRewards . java <nl> + @ @ - 49 , 7 + 49 , 7 @ @ <nl> + public void func _ 192113 _ a ( final EntityPlayerMP p _ 192113 _ 1 _ ) <nl> + { <nl> + p _ 192113 _ 1 _ . func _ 71023 _ q ( this . field _ 192115 _ b ) ; <nl> + - LootContext lootcontext = ( new LootContext . Builder ( p _ 192113 _ 1 _ . func _ 71121 _ q ( ) ) ) . func _ 186472 _ a ( p _ 192113 _ 1 _ ) . func _ 186471 _ a ( ) ; <nl> + + LootContext lootcontext = ( new LootContext . Builder ( p _ 192113 _ 1 _ . func _ 71121 _ q ( ) ) ) . func _ 186472 _ a ( p _ 192113 _ 1 _ ) . func _ 186470 _ a ( p _ 192113 _ 1 _ ) . func _ 186469 _ a ( p _ 192113 _ 1 _ . func _ 184817 _ da ( ) ) . func _ 186471 _ a ( ) ; / / Forge : add player & luck to LootContext <nl> + boolean flag = false ; <nl> + <nl> + for ( ResourceLocation resourcelocation : this . field _ 192116 _ c ) <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> index ec3b8b0 . . 2650118 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch <nl> @ @ - 8 , 7 + 8 , 20 @ @ <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> { <nl> p _ 184230 _ 1 _ . func _ 71007 _ a ( this ) ; <nl> - @ @ - 281 , 6 + 282 , 26 @ @ <nl> + @ @ - 270 , 17 + 271 , 37 @ @ <nl> + random = new Random ( this . field _ 184291 _ d ) ; <nl> + } <nl> + <nl> + - LootContext . Builder lootcontext $ builder = new LootContext . Builder ( ( WorldServer ) this . field _ 70170 _ p ) ; <nl> + + LootContext . Builder lootcontext $ builder = new LootContext . Builder ( ( WorldServer ) this . field _ 70170 _ p ) . func _ 186472 _ a ( this ) ; / / Forge : add looted entity to LootContext <nl> + <nl> + if ( p _ 184288 _ 1 _ ! = null ) <nl> + { <nl> + - lootcontext $ builder . func _ 186469 _ a ( p _ 184288 _ 1 _ . func _ 184817 _ da ( ) ) ; <nl> + + lootcontext $ builder . func _ 186469 _ a ( p _ 184288 _ 1 _ . func _ 184817 _ da ( ) ) . func _ 186470 _ a ( p _ 184288 _ 1 _ ) ; / / Forge : add player to LootContext <nl> + } <nl> + <nl> + loottable . func _ 186460 _ a ( this , random , lootcontext $ builder . func _ 186471 _ a ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch <nl> index ecdec2a . . 316ef38 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch <nl> @ @ - 43 , 10 + 43 , 12 @ @ <nl> if ( this . field _ 146043 _ c ! = null ) <nl> { <nl> this . func _ 184527 _ k ( ) ; <nl> - @ @ - 516 , 8 + 517 , 16 @ @ <nl> + @ @ - 515 , 9 + 516 , 17 @ @ <nl> + else if ( this . field _ 146045 _ ax > 0 ) <nl> { <nl> LootContext . Builder lootcontext $ builder = new LootContext . Builder ( ( WorldServer ) this . field _ 70170 _ p ) ; <nl> - lootcontext $ builder . func _ 186469 _ a ( ( float ) this . field _ 191518 _ aw + this . field _ 146042 _ b . func _ 184817 _ da ( ) ) ; <nl> + - lootcontext $ builder . func _ 186469 _ a ( ( float ) this . field _ 191518 _ aw + this . field _ 146042 _ b . func _ 184817 _ da ( ) ) ; <nl> + + lootcontext $ builder . func _ 186469 _ a ( ( float ) this . field _ 191518 _ aw + this . field _ 146042 _ b . func _ 184817 _ da ( ) ) . func _ 186470 _ a ( this . field _ 146042 _ b ) . func _ 186472 _ a ( this ) ; / / Forge : add player & looted entity to LootContext <nl> + List < ItemStack > result = this . field _ 70170 _ p . func _ 184146 _ ak ( ) . func _ 186521 _ a ( LootTableList . field _ 186387 _ al ) . func _ 186462 _ a ( this . field _ 70146 _ Z , lootcontext $ builder . func _ 186471 _ a ( ) ) ; <nl> + event = new net . minecraftforge . event . entity . player . ItemFishedEvent ( result , this . field _ 146051 _ au ? 2 : 1 , this ) ; <nl> + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 3ec94d9 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java <nl> + + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java <nl> + @ @ - 73 , 7 + 73 , 7 @ @ <nl> + <nl> + if ( p _ 184281 _ 1 _ ! = null ) <nl> + { <nl> + - lootcontext $ builder . func _ 186469 _ a ( p _ 184281 _ 1 _ . func _ 184817 _ da ( ) ) ; <nl> + + lootcontext $ builder . func _ 186469 _ a ( p _ 184281 _ 1 _ . func _ 184817 _ da ( ) ) . func _ 186470 _ a ( p _ 184281 _ 1 _ ) ; / / Forge : add player to LootContext <nl> + } <nl> + <nl> + loottable . func _ 186460 _ a ( this , random , lootcontext $ builder . func _ 186471 _ a ( ) ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / LootContextTweaksTest . java b / src / test / java / net / minecraftforge / debug / LootContextTweaksTest . java <nl> new file mode 100644 <nl> index 0000000 . . 0dfc854 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / LootContextTweaksTest . java <nl> @ @ - 0 , 0 + 1 , 105 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import java . util . Random ; <nl> + <nl> + import com . google . gson . JsonDeserializationContext ; <nl> + import com . google . gson . JsonObject ; <nl> + import com . google . gson . JsonSerializationContext ; <nl> + import com . google . gson . JsonSyntaxException ; <nl> + <nl> + import net . minecraft . init . Biomes ; <nl> + import net . minecraft . init . Items ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . world . biome . Biome ; <nl> + import net . minecraft . world . storage . loot . LootContext ; <nl> + import net . minecraft . world . storage . loot . LootEntryItem ; <nl> + import net . minecraft . world . storage . loot . LootPool ; <nl> + import net . minecraft . world . storage . loot . LootTableList ; <nl> + import net . minecraft . world . storage . loot . RandomValueRange ; <nl> + import net . minecraft . world . storage . loot . conditions . EntityHasProperty ; <nl> + import net . minecraft . world . storage . loot . conditions . LootCondition ; <nl> + import net . minecraft . world . storage . loot . conditions . LootConditionManager ; <nl> + import net . minecraft . world . storage . loot . functions . LootFunction ; <nl> + import net . minecraft . world . storage . loot . functions . SetCount ; <nl> + import net . minecraft . world . storage . loot . properties . EntityOnFire ; <nl> + import net . minecraft . world . storage . loot . properties . EntityProperty ; <nl> + import net . minecraftforge . event . LootTableLoadEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import net . minecraftforge . fml . common . registry . ForgeRegistries ; <nl> + <nl> + @ EventBusSubscriber <nl> + @ Mod ( modid = LootContextTweaksTest . MODID , name = " LootContextTweaksTest " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class LootContextTweaksTest <nl> + { <nl> + public static final String MODID = " loot _ context _ tweaks _ test " ; <nl> + public static final boolean ENABLED = false ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + if ( ! ENABLED ) return ; <nl> + LootConditionManager . registerCondition ( new InBiome . Serialiser ( ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public static void onLootTableLoad ( LootTableLoadEvent event ) <nl> + { <nl> + if ( ! ENABLED ) return ; <nl> + if ( event . getName ( ) . equals ( LootTableList . GAMEPLAY _ FISHING ) ) <nl> + { <nl> + LootPool main = event . getTable ( ) . getPool ( " main " ) ; <nl> + main . addEntry ( new LootEntryItem ( Items . ACACIA _ BOAT , 100 , 1 , new LootFunction [ 0 ] , new LootCondition [ ] { new InBiome ( Biomes . SAVANNA ) } , " fishing _ test " ) ) ; <nl> + } <nl> + else if ( event . getName ( ) . equals ( LootTableList . CHESTS _ SIMPLE _ DUNGEON ) ) <nl> + { <nl> + LootPool main = event . getTable ( ) . getPool ( " main " ) ; <nl> + LootCondition onFire = new EntityHasProperty ( new EntityProperty [ ] { new EntityOnFire ( true ) } , LootContext . EntityTarget . KILLER _ PLAYER ) ; <nl> + main . addEntry ( new LootEntryItem ( Items . BLAZE _ POWDER , 100 , 1 , new LootFunction [ ] { new SetCount ( new LootCondition [ 0 ] , new RandomValueRange ( 64 ) ) } , new LootCondition [ ] { onFire } , " minecart _ test " ) ) ; <nl> + } <nl> + } <nl> + <nl> + private static class InBiome implements LootCondition <nl> + { <nl> + private final Biome requiredBiome ; <nl> + <nl> + public InBiome ( Biome requiredBiome ) <nl> + { <nl> + this . requiredBiome = requiredBiome ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean testCondition ( Random rand , LootContext context ) <nl> + { <nl> + if ( context . getLootedEntity ( ) = = null ) return false ; <nl> + Biome biome = context . getWorld ( ) . getBiome ( context . getLootedEntity ( ) . getPosition ( ) ) ; <nl> + return biome = = requiredBiome ; <nl> + } <nl> + <nl> + private static class Serialiser extends LootCondition . Serializer < InBiome > <nl> + { <nl> + protected Serialiser ( ) <nl> + { <nl> + super ( new ResourceLocation ( MODID , " in _ biome " ) , InBiome . class ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void serialize ( JsonObject json , InBiome value , JsonSerializationContext context ) <nl> + { <nl> + json . addProperty ( " biome " , value . requiredBiome . getRegistryName ( ) . toString ( ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public InBiome deserialize ( JsonObject json , JsonDeserializationContext context ) <nl> + { <nl> + if ( ! json . has ( " biome " ) ) throw new JsonSyntaxException ( " Missing biome tag , expected to find a biome registry name " ) ; <nl> + ResourceLocation biomeResLoc = new ResourceLocation ( json . get ( " biome " ) . getAsString ( ) ) ; <nl> + Biome biome = ForgeRegistries . BIOMES . getValue ( biomeResLoc ) ; <nl> + if ( biome = = null ) throw new JsonSyntaxException ( " Invalid biome tag . " + biomeResLoc + " does not exist in the biome registry . " ) ; <nl> + return new InBiome ( biome ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / loot _ context _ tweaks _ test / advancements / test / root . json b / src / test / resources / assets / loot _ context _ tweaks _ test / advancements / test / root . json <nl> new file mode 100644 <nl> index 0000000 . . 0292610 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / loot _ context _ tweaks _ test / advancements / test / root . json <nl> @ @ - 0 , 0 + 1 , 22 @ @ <nl> + { <nl> + 	 " display " : <nl> + 	 { <nl> + " icon " : { <nl> + " item " : " minecraft : stone " <nl> + } , <nl> + 	 	 " description " : " From LootContextTweaksTest " , <nl> + 	 	 " title " : " Test " , <nl> + 	 	 " background " : " minecraft : textures / blocks / stone . png " <nl> + 	 } , <nl> + 	 " criteria " : <nl> + 	 { <nl> + " no " : <nl> + { <nl> + " trigger " : " minecraft : impossible " <nl> + } <nl> + } , <nl> + 	 " rewards " : <nl> + 	 { <nl> + 	 	 " loot " : [ " minecraft : chests / simple _ dungeon " ] <nl> + 	 } <nl> + } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch b / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch <nl> index 33ab404 . . f0be5d4 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch <nl> @ @ - 9 , 7 + 9 , 15 @ @ <nl> import cpw . mods . fml . relauncher . Side ; <nl> import cpw . mods . fml . relauncher . SideOnly ; <nl> import java . io . File ; <nl> - @ @ - 98 , 7 + 100 , 7 @ @ <nl> + @ @ - 58 , 6 + 60 , 7 @ @ <nl> + import net . minecraft . world . WorldSettings ; <nl> + import net . minecraft . world . demo . DemoWorldManager ; <nl> + import net . minecraft . world . storage . IPlayerFileData ; <nl> + + import net . minecraft . world . storage . SaveHandler ; <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + @ @ - 98 , 7 + 101 , 7 @ @ <nl> this . field _ 72405 _ c = 8 ; <nl> } <nl> <nl> @ @ - 18 , 7 + 26 , 7 @ @ <nl> { <nl> GameProfile gameprofile = p _ 72355 _ 2 _ . func _ 146103 _ bH ( ) ; <nl> PlayerProfileCache playerprofilecache = this . field _ 72400 _ f . func _ 152358 _ ax ( ) ; <nl> - @ @ - 119 , 7 + 121 , 7 @ @ <nl> + @ @ - 119 , 7 + 122 , 7 @ @ <nl> WorldServer worldserver = this . field _ 72400 _ f . func _ 71218 _ a ( p _ 72355 _ 2 _ . field _ 71093 _ bK ) ; <nl> ChunkCoordinates chunkcoordinates = worldserver . func _ 72861 _ E ( ) ; <nl> this . func _ 72381 _ a ( p _ 72355 _ 2 _ , ( EntityPlayerMP ) null , worldserver ) ; <nl> @ @ - 27 , 7 + 35 , 7 @ @ <nl> nethandlerplayserver . func _ 147359 _ a ( new S01PacketJoinGame ( p _ 72355 _ 2 _ . func _ 145782 _ y ( ) , p _ 72355 _ 2 _ . field _ 71134 _ c . func _ 73081 _ b ( ) , worldserver . func _ 72912 _ H ( ) . func _ 76093 _ s ( ) , worldserver . field _ 73011 _ w . field _ 76574 _ g , worldserver . field _ 73013 _ u , this . func _ 72352 _ l ( ) , worldserver . func _ 72912 _ H ( ) . func _ 76067 _ t ( ) ) ) ; <nl> nethandlerplayserver . func _ 147359 _ a ( new S3FPacketCustomPayload ( " MC | Brand " , this . func _ 72365 _ p ( ) . getServerModName ( ) . getBytes ( Charsets . UTF _ 8 ) ) ) ; <nl> nethandlerplayserver . func _ 147359 _ a ( new S05PacketSpawnPosition ( chunkcoordinates . field _ 71574 _ a , chunkcoordinates . field _ 71572 _ b , chunkcoordinates . field _ 71573 _ c ) ) ; <nl> - @ @ - 161 , 6 + 163 , 7 @ @ <nl> + @ @ - 161 , 6 + 164 , 7 @ @ <nl> <nl> p _ 72355 _ 2 _ . func _ 71116 _ b ( ) ; <nl> <nl> @ @ - 35 , 8 + 43 , 23 @ @ <nl> if ( nbttagcompound ! = null & & nbttagcompound . func _ 150297 _ b ( " Riding " , 10 ) ) <nl> { <nl> Entity entity = EntityList . func _ 75615 _ a ( nbttagcompound . func _ 74775 _ l ( " Riding " ) , worldserver ) ; <nl> - @ @ - 250 , 6 + 253 , 8 @ @ <nl> + @ @ - 248 , 8 + 252 , 23 @ @ <nl> + return nbttagcompound1 ; <nl> + } <nl> <nl> + + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) <nl> + + { <nl> + + / / Hacky method to allow loading the NBT for a player prior to login <nl> + + NBTTagCompound nbttagcompound = this . field _ 72400 _ f . field _ 71305 _ c [ 0 ] . func _ 72912 _ H ( ) . func _ 76072 _ h ( ) ; <nl> + + if ( player . func _ 70005 _ c _ ( ) . equals ( this . field _ 72400 _ f . func _ 71214 _ G ( ) ) & & nbttagcompound ! = null ) <nl> + + { <nl> + + return nbttagcompound ; <nl> + + } <nl> + + else <nl> + + { <nl> + + return ( ( SaveHandler ) this . field _ 72412 _ k ) . getPlayerNBT ( player ) ; <nl> + + } <nl> + + } <nl> protected void func _ 72391 _ b ( EntityPlayerMP p _ 72391 _ 1 _ ) <nl> { <nl> + if ( p _ 72391 _ 1 _ . field _ 71135 _ a = = null ) return ; <nl> @ @ - 44 , 7 + 67 , 7 @ @ <nl> this . field _ 72412 _ k . func _ 75753 _ a ( p _ 72391 _ 1 _ ) ; <nl> StatisticsFile statisticsfile = ( StatisticsFile ) this . field _ 148547 _ k . get ( p _ 72391 _ 1 _ . func _ 110124 _ au ( ) ) ; <nl> <nl> - @ @ - 281 , 6 + 286 , 7 @ @ <nl> + @ @ - 281 , 6 + 300 , 7 @ @ <nl> <nl> public void func _ 72367 _ e ( EntityPlayerMP p _ 72367 _ 1 _ ) <nl> { <nl> @ @ - 52 , 7 + 75 , 7 @ @ <nl> p _ 72367 _ 1 _ . func _ 71029 _ a ( StatList . field _ 75947 _ j ) ; <nl> this . func _ 72391 _ b ( p _ 72367 _ 1 _ ) ; <nl> WorldServer worldserver = p _ 72367 _ 1 _ . func _ 71121 _ q ( ) ; <nl> - @ @ - 436 , 6 + 442 , 7 @ @ <nl> + @ @ - 436 , 6 + 456 , 7 @ @ <nl> this . field _ 72404 _ b . add ( entityplayermp1 ) ; <nl> entityplayermp1 . func _ 71116 _ b ( ) ; <nl> entityplayermp1 . func _ 70606 _ j ( entityplayermp1 . func _ 110143 _ aJ ( ) ) ; <nl> @ @ - 60 , 7 + 83 , 7 @ @ <nl> return entityplayermp1 ; <nl> } <nl> <nl> - @ @ - 461 , 6 + 468 , 7 @ @ <nl> + @ @ - 461 , 6 + 482 , 7 @ @ <nl> PotionEffect potioneffect = ( PotionEffect ) iterator . next ( ) ; <nl> p _ 72356 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new S1DPacketEntityEffect ( p _ 72356 _ 1 _ . func _ 145782 _ y ( ) , potioneffect ) ) ; <nl> } <nl> diff - - git a / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch b / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch <nl> index dddda84 . . 48bf1c4 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / storage / SaveHandler . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / storage / SaveHandler . java <nl> - @ @ - 6 , 6 + 6 , 9 @ @ <nl> + @ @ - 6 , 13 + 6 , 18 @ @ <nl> import java . io . FileInputStream ; <nl> import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> @ @ - 8 , 9 + 8 , 18 @ @ <nl> + import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import cpw . mods . fml . common . StartupQuery ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> + + import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . nbt . CompressedStreamTools ; <nl> import net . minecraft . nbt . NBTTagCompound ; <nl> - @ @ - 107 , 20 + 110 , 29 @ @ <nl> + import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . world . MinecraftException ; <nl> + import net . minecraft . world . WorldProvider ; <nl> + import net . minecraft . world . chunk . storage . IChunkLoader ; <nl> + + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + @ @ - 107 , 20 + 112 , 29 @ @ <nl> NBTTagCompound nbttagcompound ; <nl> NBTTagCompound nbttagcompound1 ; <nl> <nl> @ @ - 41 , 7 + 50 , 7 @ @ <nl> file1 = new File ( this . field _ 75770 _ b , " level . dat _ old " ) ; <nl> <nl> if ( file1 . exists ( ) ) <nl> - @ @ - 129 , 8 + 141 , 14 @ @ <nl> + @ @ - 129 , 8 + 143 , 14 @ @ <nl> { <nl> nbttagcompound = CompressedStreamTools . func _ 74796 _ a ( new FileInputStream ( file1 ) ) ; <nl> nbttagcompound1 = nbttagcompound . func _ 74775 _ l ( " Data " ) ; <nl> @ @ - 57 , 7 + 66 , 7 @ @ <nl> catch ( Exception exception ) <nl> { <nl> exception . printStackTrace ( ) ; <nl> - @ @ - 146 , 6 + 164 , 8 @ @ <nl> + @ @ - 146 , 6 + 166 , 8 @ @ <nl> NBTTagCompound nbttagcompound2 = new NBTTagCompound ( ) ; <nl> nbttagcompound2 . func _ 74782 _ a ( " Data " , nbttagcompound1 ) ; <nl> <nl> @ @ - 66 , 7 + 75 , 7 @ @ <nl> try <nl> { <nl> File file1 = new File ( this . field _ 75770 _ b , " level . dat _ new " ) ; <nl> - @ @ - 184 , 6 + 204 , 8 @ @ <nl> + @ @ - 184 , 6 + 206 , 8 @ @ <nl> NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; <nl> nbttagcompound1 . func _ 74782 _ a ( " Data " , nbttagcompound ) ; <nl> <nl> @ @ - 75 , 3 + 84 , 26 @ @ <nl> try <nl> { <nl> File file1 = new File ( this . field _ 75770 _ b , " level . dat _ new " ) ; <nl> + @ @ - 296 , 4 + 320 , 22 @ @ <nl> + { <nl> + return this . field _ 75767 _ f ; <nl> + } <nl> + + <nl> + + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) <nl> + + { <nl> + + try <nl> + + { <nl> + + File file1 = new File ( this . field _ 75771 _ c , player . func _ 110124 _ au ( ) . toString ( ) + " . dat " ) ; <nl> + + <nl> + + if ( file1 . exists ( ) & & file1 . isFile ( ) ) <nl> + + { <nl> + + return CompressedStreamTools . func _ 74796 _ a ( new FileInputStream ( file1 ) ) ; <nl> + + } <nl> + + } <nl> + + catch ( Exception exception ) <nl> + + { <nl> + + field _ 151478 _ a . warn ( " Failed to load player data for " + player . func _ 70005 _ c _ ( ) ) ; <nl> + + } <nl> + + return null ; <nl> + + } <nl> + } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java <nl> index 9ea04fa . . 628d318 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java <nl> @ @ - 10 , 14 + 10 , 18 @ @ import io . netty . util . AttributeKey ; <nl> import io . netty . util . concurrent . Future ; <nl> import io . netty . util . concurrent . GenericFutureListener ; <nl> import io . netty . util . concurrent . ScheduledFuture ; <nl> + <nl> import java . net . SocketAddress ; <nl> import java . nio . channels . ClosedChannelException ; <nl> import java . util . List ; <nl> import java . util . Locale ; <nl> import java . util . concurrent . Callable ; <nl> import java . util . concurrent . TimeUnit ; <nl> + <nl> import org . apache . logging . log4j . Level ; <nl> + <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> + import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . network . EnumConnectionState ; <nl> import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetHandlerPlayServer ; <nl> @ @ - 149 , 7 + 153 , 16 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet > imple <nl> this . manager . setConnectionState ( EnumConnectionState . PLAY ) ; <nl> <nl> / / Return the dimension the player is in , so it can be pre - sent to the client in the ServerHello v2 packet <nl> - return player . dimension ; <nl> + / / Requires some hackery to the serverconfigmanager and stuff for this to work <nl> + NBTTagCompound playerNBT = scm . getPlayerNBT ( player ) ; <nl> + if ( playerNBT ! = null ) <nl> + { <nl> + return playerNBT . getInteger ( " Dimension " ) ; <nl> + } <nl> + else <nl> + { <nl> + return 0 ; <nl> + } <nl> } <nl> <nl> void clientListenForServerHandshake ( )

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / advancements / AdvancementRewards . java . patch b / patches / minecraft / net / minecraft / advancements / AdvancementRewards . java . patch 
 new file mode 100644 
 index 0000000 . . 782e793 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / advancements / AdvancementRewards . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / advancements / AdvancementRewards . java 
 + + + + . . / src - work / minecraft / net / minecraft / advancements / AdvancementRewards . java 
 + @ @ - 49 , 7 + 49 , 7 @ @ 
 + public void func _ 192113 _ a ( final EntityPlayerMP p _ 192113 _ 1 _ ) 
 + { 
 + p _ 192113 _ 1 _ . func _ 71023 _ q ( this . field _ 192115 _ b ) ; 
 + - LootContext lootcontext = ( new LootContext . Builder ( p _ 192113 _ 1 _ . func _ 71121 _ q ( ) ) ) . func _ 186472 _ a ( p _ 192113 _ 1 _ ) . func _ 186471 _ a ( ) ; 
 + + LootContext lootcontext = ( new LootContext . Builder ( p _ 192113 _ 1 _ . func _ 71121 _ q ( ) ) ) . func _ 186472 _ a ( p _ 192113 _ 1 _ ) . func _ 186470 _ a ( p _ 192113 _ 1 _ ) . func _ 186469 _ a ( p _ 192113 _ 1 _ . func _ 184817 _ da ( ) ) . func _ 186471 _ a ( ) ; / / Forge : add player & luck to LootContext 
 + boolean flag = false ; 
 + 
 + for ( ResourceLocation resourcelocation : this . field _ 192116 _ c ) 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 index ec3b8b0 . . 2650118 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartContainer . java . patch 
 @ @ - 8 , 7 + 8 , 20 @ @ 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 { 
 p _ 184230 _ 1 _ . func _ 71007 _ a ( this ) ; 
 - @ @ - 281 , 6 + 282 , 26 @ @ 
 + @ @ - 270 , 17 + 271 , 37 @ @ 
 + random = new Random ( this . field _ 184291 _ d ) ; 
 + } 
 + 
 + - LootContext . Builder lootcontext $ builder = new LootContext . Builder ( ( WorldServer ) this . field _ 70170 _ p ) ; 
 + + LootContext . Builder lootcontext $ builder = new LootContext . Builder ( ( WorldServer ) this . field _ 70170 _ p ) . func _ 186472 _ a ( this ) ; / / Forge : add looted entity to LootContext 
 + 
 + if ( p _ 184288 _ 1 _ ! = null ) 
 + { 
 + - lootcontext $ builder . func _ 186469 _ a ( p _ 184288 _ 1 _ . func _ 184817 _ da ( ) ) ; 
 + + lootcontext $ builder . func _ 186469 _ a ( p _ 184288 _ 1 _ . func _ 184817 _ da ( ) ) . func _ 186470 _ a ( p _ 184288 _ 1 _ ) ; / / Forge : add player to LootContext 
 + } 
 + 
 + loottable . func _ 186460 _ a ( this , random , lootcontext $ builder . func _ 186471 _ a ( ) ) ; 
 } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch 
 index ecdec2a . . 316ef38 100644 
 - - - a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch 
 @ @ - 43 , 10 + 43 , 12 @ @ 
 if ( this . field _ 146043 _ c ! = null ) 
 { 
 this . func _ 184527 _ k ( ) ; 
 - @ @ - 516 , 8 + 517 , 16 @ @ 
 + @ @ - 515 , 9 + 516 , 17 @ @ 
 + else if ( this . field _ 146045 _ ax > 0 ) 
 { 
 LootContext . Builder lootcontext $ builder = new LootContext . Builder ( ( WorldServer ) this . field _ 70170 _ p ) ; 
 - lootcontext $ builder . func _ 186469 _ a ( ( float ) this . field _ 191518 _ aw + this . field _ 146042 _ b . func _ 184817 _ da ( ) ) ; 
 + - lootcontext $ builder . func _ 186469 _ a ( ( float ) this . field _ 191518 _ aw + this . field _ 146042 _ b . func _ 184817 _ da ( ) ) ; 
 + + lootcontext $ builder . func _ 186469 _ a ( ( float ) this . field _ 191518 _ aw + this . field _ 146042 _ b . func _ 184817 _ da ( ) ) . func _ 186470 _ a ( this . field _ 146042 _ b ) . func _ 186472 _ a ( this ) ; / / Forge : add player & looted entity to LootContext 
 + List < ItemStack > result = this . field _ 70170 _ p . func _ 184146 _ ak ( ) . func _ 186521 _ a ( LootTableList . field _ 186387 _ al ) . func _ 186462 _ a ( this . field _ 70146 _ Z , lootcontext $ builder . func _ 186471 _ a ( ) ) ; 
 + event = new net . minecraftforge . event . entity . player . ItemFishedEvent ( result , this . field _ 146051 _ au ? 2 : 1 , this ) ; 
 + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ; 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java . patch 
 new file mode 100644 
 index 0000000 . . 3ec94d9 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java 
 + + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityLockableLoot . java 
 + @ @ - 73 , 7 + 73 , 7 @ @ 
 + 
 + if ( p _ 184281 _ 1 _ ! = null ) 
 + { 
 + - lootcontext $ builder . func _ 186469 _ a ( p _ 184281 _ 1 _ . func _ 184817 _ da ( ) ) ; 
 + + lootcontext $ builder . func _ 186469 _ a ( p _ 184281 _ 1 _ . func _ 184817 _ da ( ) ) . func _ 186470 _ a ( p _ 184281 _ 1 _ ) ; / / Forge : add player to LootContext 
 + } 
 + 
 + loottable . func _ 186460 _ a ( this , random , lootcontext $ builder . func _ 186471 _ a ( ) ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / LootContextTweaksTest . java b / src / test / java / net / minecraftforge / debug / LootContextTweaksTest . java 
 new file mode 100644 
 index 0000000 . . 0dfc854 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / LootContextTweaksTest . java 
 @ @ - 0 , 0 + 1 , 105 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import java . util . Random ; 
 + 
 + import com . google . gson . JsonDeserializationContext ; 
 + import com . google . gson . JsonObject ; 
 + import com . google . gson . JsonSerializationContext ; 
 + import com . google . gson . JsonSyntaxException ; 
 + 
 + import net . minecraft . init . Biomes ; 
 + import net . minecraft . init . Items ; 
 + import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . world . biome . Biome ; 
 + import net . minecraft . world . storage . loot . LootContext ; 
 + import net . minecraft . world . storage . loot . LootEntryItem ; 
 + import net . minecraft . world . storage . loot . LootPool ; 
 + import net . minecraft . world . storage . loot . LootTableList ; 
 + import net . minecraft . world . storage . loot . RandomValueRange ; 
 + import net . minecraft . world . storage . loot . conditions . EntityHasProperty ; 
 + import net . minecraft . world . storage . loot . conditions . LootCondition ; 
 + import net . minecraft . world . storage . loot . conditions . LootConditionManager ; 
 + import net . minecraft . world . storage . loot . functions . LootFunction ; 
 + import net . minecraft . world . storage . loot . functions . SetCount ; 
 + import net . minecraft . world . storage . loot . properties . EntityOnFire ; 
 + import net . minecraft . world . storage . loot . properties . EntityProperty ; 
 + import net . minecraftforge . event . LootTableLoadEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import net . minecraftforge . fml . common . registry . ForgeRegistries ; 
 + 
 + @ EventBusSubscriber 
 + @ Mod ( modid = LootContextTweaksTest . MODID , name = " LootContextTweaksTest " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class LootContextTweaksTest 
 + { 
 + public static final String MODID = " loot _ context _ tweaks _ test " ; 
 + public static final boolean ENABLED = false ; 
 + 
 + @ Mod . EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + if ( ! ENABLED ) return ; 
 + LootConditionManager . registerCondition ( new InBiome . Serialiser ( ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public static void onLootTableLoad ( LootTableLoadEvent event ) 
 + { 
 + if ( ! ENABLED ) return ; 
 + if ( event . getName ( ) . equals ( LootTableList . GAMEPLAY _ FISHING ) ) 
 + { 
 + LootPool main = event . getTable ( ) . getPool ( " main " ) ; 
 + main . addEntry ( new LootEntryItem ( Items . ACACIA _ BOAT , 100 , 1 , new LootFunction [ 0 ] , new LootCondition [ ] { new InBiome ( Biomes . SAVANNA ) } , " fishing _ test " ) ) ; 
 + } 
 + else if ( event . getName ( ) . equals ( LootTableList . CHESTS _ SIMPLE _ DUNGEON ) ) 
 + { 
 + LootPool main = event . getTable ( ) . getPool ( " main " ) ; 
 + LootCondition onFire = new EntityHasProperty ( new EntityProperty [ ] { new EntityOnFire ( true ) } , LootContext . EntityTarget . KILLER _ PLAYER ) ; 
 + main . addEntry ( new LootEntryItem ( Items . BLAZE _ POWDER , 100 , 1 , new LootFunction [ ] { new SetCount ( new LootCondition [ 0 ] , new RandomValueRange ( 64 ) ) } , new LootCondition [ ] { onFire } , " minecart _ test " ) ) ; 
 + } 
 + } 
 + 
 + private static class InBiome implements LootCondition 
 + { 
 + private final Biome requiredBiome ; 
 + 
 + public InBiome ( Biome requiredBiome ) 
 + { 
 + this . requiredBiome = requiredBiome ; 
 + } 
 + 
 + @ Override 
 + public boolean testCondition ( Random rand , LootContext context ) 
 + { 
 + if ( context . getLootedEntity ( ) = = null ) return false ; 
 + Biome biome = context . getWorld ( ) . getBiome ( context . getLootedEntity ( ) . getPosition ( ) ) ; 
 + return biome = = requiredBiome ; 
 + } 
 + 
 + private static class Serialiser extends LootCondition . Serializer < InBiome > 
 + { 
 + protected Serialiser ( ) 
 + { 
 + super ( new ResourceLocation ( MODID , " in _ biome " ) , InBiome . class ) ; 
 + } 
 + 
 + @ Override 
 + public void serialize ( JsonObject json , InBiome value , JsonSerializationContext context ) 
 + { 
 + json . addProperty ( " biome " , value . requiredBiome . getRegistryName ( ) . toString ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public InBiome deserialize ( JsonObject json , JsonDeserializationContext context ) 
 + { 
 + if ( ! json . has ( " biome " ) ) throw new JsonSyntaxException ( " Missing biome tag , expected to find a biome registry name " ) ; 
 + ResourceLocation biomeResLoc = new ResourceLocation ( json . get ( " biome " ) . getAsString ( ) ) ; 
 + Biome biome = ForgeRegistries . BIOMES . getValue ( biomeResLoc ) ; 
 + if ( biome = = null ) throw new JsonSyntaxException ( " Invalid biome tag . " + biomeResLoc + " does not exist in the biome registry . " ) ; 
 + return new InBiome ( biome ) ; 
 + } 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / loot _ context _ tweaks _ test / advancements / test / root . json b / src / test / resources / assets / loot _ context _ tweaks _ test / advancements / test / root . json 
 new file mode 100644 
 index 0000000 . . 0292610 
 - - - / dev / null 
 + + + b / src / test / resources / assets / loot _ context _ tweaks _ test / advancements / test / root . json 
 @ @ - 0 , 0 + 1 , 22 @ @ 
 + { 
 + 	 " display " : 
 + 	 { 
 + " icon " : { 
 + " item " : " minecraft : stone " 
 + } , 
 + 	 	 " description " : " From LootContextTweaksTest " , 
 + 	 	 " title " : " Test " , 
 + 	 	 " background " : " minecraft : textures / blocks / stone . png " 
 + 	 } , 
 + 	 " criteria " : 
 + 	 { 
 + " no " : 
 + { 
 + " trigger " : " minecraft : impossible " 
 + } 
 + } , 
 + 	 " rewards " : 
 + 	 { 
 + 	 	 " loot " : [ " minecraft : chests / simple _ dungeon " ] 
 + 	 } 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch b / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch 
 index 33ab404 . . f0be5d4 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch 
 @ @ - 9 , 7 + 9 , 15 @ @ 
 import cpw . mods . fml . relauncher . Side ; 
 import cpw . mods . fml . relauncher . SideOnly ; 
 import java . io . File ; 
 - @ @ - 98 , 7 + 100 , 7 @ @ 
 + @ @ - 58 , 6 + 60 , 7 @ @ 
 + import net . minecraft . world . WorldSettings ; 
 + import net . minecraft . world . demo . DemoWorldManager ; 
 + import net . minecraft . world . storage . IPlayerFileData ; 
 + + import net . minecraft . world . storage . SaveHandler ; 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + @ @ - 98 , 7 + 101 , 7 @ @ 
 this . field _ 72405 _ c = 8 ; 
 } 
 
 @ @ - 18 , 7 + 26 , 7 @ @ 
 { 
 GameProfile gameprofile = p _ 72355 _ 2 _ . func _ 146103 _ bH ( ) ; 
 PlayerProfileCache playerprofilecache = this . field _ 72400 _ f . func _ 152358 _ ax ( ) ; 
 - @ @ - 119 , 7 + 121 , 7 @ @ 
 + @ @ - 119 , 7 + 122 , 7 @ @ 
 WorldServer worldserver = this . field _ 72400 _ f . func _ 71218 _ a ( p _ 72355 _ 2 _ . field _ 71093 _ bK ) ; 
 ChunkCoordinates chunkcoordinates = worldserver . func _ 72861 _ E ( ) ; 
 this . func _ 72381 _ a ( p _ 72355 _ 2 _ , ( EntityPlayerMP ) null , worldserver ) ; 
 @ @ - 27 , 7 + 35 , 7 @ @ 
 nethandlerplayserver . func _ 147359 _ a ( new S01PacketJoinGame ( p _ 72355 _ 2 _ . func _ 145782 _ y ( ) , p _ 72355 _ 2 _ . field _ 71134 _ c . func _ 73081 _ b ( ) , worldserver . func _ 72912 _ H ( ) . func _ 76093 _ s ( ) , worldserver . field _ 73011 _ w . field _ 76574 _ g , worldserver . field _ 73013 _ u , this . func _ 72352 _ l ( ) , worldserver . func _ 72912 _ H ( ) . func _ 76067 _ t ( ) ) ) ; 
 nethandlerplayserver . func _ 147359 _ a ( new S3FPacketCustomPayload ( " MC | Brand " , this . func _ 72365 _ p ( ) . getServerModName ( ) . getBytes ( Charsets . UTF _ 8 ) ) ) ; 
 nethandlerplayserver . func _ 147359 _ a ( new S05PacketSpawnPosition ( chunkcoordinates . field _ 71574 _ a , chunkcoordinates . field _ 71572 _ b , chunkcoordinates . field _ 71573 _ c ) ) ; 
 - @ @ - 161 , 6 + 163 , 7 @ @ 
 + @ @ - 161 , 6 + 164 , 7 @ @ 
 
 p _ 72355 _ 2 _ . func _ 71116 _ b ( ) ; 
 
 @ @ - 35 , 8 + 43 , 23 @ @ 
 if ( nbttagcompound ! = null & & nbttagcompound . func _ 150297 _ b ( " Riding " , 10 ) ) 
 { 
 Entity entity = EntityList . func _ 75615 _ a ( nbttagcompound . func _ 74775 _ l ( " Riding " ) , worldserver ) ; 
 - @ @ - 250 , 6 + 253 , 8 @ @ 
 + @ @ - 248 , 8 + 252 , 23 @ @ 
 + return nbttagcompound1 ; 
 + } 
 
 + + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) 
 + + { 
 + + / / Hacky method to allow loading the NBT for a player prior to login 
 + + NBTTagCompound nbttagcompound = this . field _ 72400 _ f . field _ 71305 _ c [ 0 ] . func _ 72912 _ H ( ) . func _ 76072 _ h ( ) ; 
 + + if ( player . func _ 70005 _ c _ ( ) . equals ( this . field _ 72400 _ f . func _ 71214 _ G ( ) ) & & nbttagcompound ! = null ) 
 + + { 
 + + return nbttagcompound ; 
 + + } 
 + + else 
 + + { 
 + + return ( ( SaveHandler ) this . field _ 72412 _ k ) . getPlayerNBT ( player ) ; 
 + + } 
 + + } 
 protected void func _ 72391 _ b ( EntityPlayerMP p _ 72391 _ 1 _ ) 
 { 
 + if ( p _ 72391 _ 1 _ . field _ 71135 _ a = = null ) return ; 
 @ @ - 44 , 7 + 67 , 7 @ @ 
 this . field _ 72412 _ k . func _ 75753 _ a ( p _ 72391 _ 1 _ ) ; 
 StatisticsFile statisticsfile = ( StatisticsFile ) this . field _ 148547 _ k . get ( p _ 72391 _ 1 _ . func _ 110124 _ au ( ) ) ; 
 
 - @ @ - 281 , 6 + 286 , 7 @ @ 
 + @ @ - 281 , 6 + 300 , 7 @ @ 
 
 public void func _ 72367 _ e ( EntityPlayerMP p _ 72367 _ 1 _ ) 
 { 
 @ @ - 52 , 7 + 75 , 7 @ @ 
 p _ 72367 _ 1 _ . func _ 71029 _ a ( StatList . field _ 75947 _ j ) ; 
 this . func _ 72391 _ b ( p _ 72367 _ 1 _ ) ; 
 WorldServer worldserver = p _ 72367 _ 1 _ . func _ 71121 _ q ( ) ; 
 - @ @ - 436 , 6 + 442 , 7 @ @ 
 + @ @ - 436 , 6 + 456 , 7 @ @ 
 this . field _ 72404 _ b . add ( entityplayermp1 ) ; 
 entityplayermp1 . func _ 71116 _ b ( ) ; 
 entityplayermp1 . func _ 70606 _ j ( entityplayermp1 . func _ 110143 _ aJ ( ) ) ; 
 @ @ - 60 , 7 + 83 , 7 @ @ 
 return entityplayermp1 ; 
 } 
 
 - @ @ - 461 , 6 + 468 , 7 @ @ 
 + @ @ - 461 , 6 + 482 , 7 @ @ 
 PotionEffect potioneffect = ( PotionEffect ) iterator . next ( ) ; 
 p _ 72356 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new S1DPacketEntityEffect ( p _ 72356 _ 1 _ . func _ 145782 _ y ( ) , potioneffect ) ) ; 
 } 
 diff - - git a / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch b / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch 
 index dddda84 . . 48bf1c4 100644 
 - - - a / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / world / storage / SaveHandler . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / storage / SaveHandler . java 
 + + + . . / src - work / minecraft / net / minecraft / world / storage / SaveHandler . java 
 - @ @ - 6 , 6 + 6 , 9 @ @ 
 + @ @ - 6 , 13 + 6 , 18 @ @ 
 import java . io . FileInputStream ; 
 import java . io . FileOutputStream ; 
 import java . io . IOException ; 
 @ @ - 8 , 9 + 8 , 18 @ @ 
 + import cpw . mods . fml . common . FMLCommonHandler ; 
 + import cpw . mods . fml . common . StartupQuery ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 + + import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . nbt . CompressedStreamTools ; 
 import net . minecraft . nbt . NBTTagCompound ; 
 - @ @ - 107 , 20 + 110 , 29 @ @ 
 + import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . world . MinecraftException ; 
 + import net . minecraft . world . WorldProvider ; 
 + import net . minecraft . world . chunk . storage . IChunkLoader ; 
 + + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + @ @ - 107 , 20 + 112 , 29 @ @ 
 NBTTagCompound nbttagcompound ; 
 NBTTagCompound nbttagcompound1 ; 
 
 @ @ - 41 , 7 + 50 , 7 @ @ 
 file1 = new File ( this . field _ 75770 _ b , " level . dat _ old " ) ; 
 
 if ( file1 . exists ( ) ) 
 - @ @ - 129 , 8 + 141 , 14 @ @ 
 + @ @ - 129 , 8 + 143 , 14 @ @ 
 { 
 nbttagcompound = CompressedStreamTools . func _ 74796 _ a ( new FileInputStream ( file1 ) ) ; 
 nbttagcompound1 = nbttagcompound . func _ 74775 _ l ( " Data " ) ; 
 @ @ - 57 , 7 + 66 , 7 @ @ 
 catch ( Exception exception ) 
 { 
 exception . printStackTrace ( ) ; 
 - @ @ - 146 , 6 + 164 , 8 @ @ 
 + @ @ - 146 , 6 + 166 , 8 @ @ 
 NBTTagCompound nbttagcompound2 = new NBTTagCompound ( ) ; 
 nbttagcompound2 . func _ 74782 _ a ( " Data " , nbttagcompound1 ) ; 
 
 @ @ - 66 , 7 + 75 , 7 @ @ 
 try 
 { 
 File file1 = new File ( this . field _ 75770 _ b , " level . dat _ new " ) ; 
 - @ @ - 184 , 6 + 204 , 8 @ @ 
 + @ @ - 184 , 6 + 206 , 8 @ @ 
 NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; 
 nbttagcompound1 . func _ 74782 _ a ( " Data " , nbttagcompound ) ; 
 
 @ @ - 75 , 3 + 84 , 26 @ @ 
 try 
 { 
 File file1 = new File ( this . field _ 75770 _ b , " level . dat _ new " ) ; 
 + @ @ - 296 , 4 + 320 , 22 @ @ 
 + { 
 + return this . field _ 75767 _ f ; 
 + } 
 + + 
 + + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) 
 + + { 
 + + try 
 + + { 
 + + File file1 = new File ( this . field _ 75771 _ c , player . func _ 110124 _ au ( ) . toString ( ) + " . dat " ) ; 
 + + 
 + + if ( file1 . exists ( ) & & file1 . isFile ( ) ) 
 + + { 
 + + return CompressedStreamTools . func _ 74796 _ a ( new FileInputStream ( file1 ) ) ; 
 + + } 
 + + } 
 + + catch ( Exception exception ) 
 + + { 
 + + field _ 151478 _ a . warn ( " Failed to load player data for " + player . func _ 70005 _ c _ ( ) ) ; 
 + + } 
 + + return null ; 
 + + } 
 + } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java 
 index 9ea04fa . . 628d318 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java 
 @ @ - 10 , 14 + 10 , 18 @ @ import io . netty . util . AttributeKey ; 
 import io . netty . util . concurrent . Future ; 
 import io . netty . util . concurrent . GenericFutureListener ; 
 import io . netty . util . concurrent . ScheduledFuture ; 
 + 
 import java . net . SocketAddress ; 
 import java . nio . channels . ClosedChannelException ; 
 import java . util . List ; 
 import java . util . Locale ; 
 import java . util . concurrent . Callable ; 
 import java . util . concurrent . TimeUnit ; 
 + 
 import org . apache . logging . log4j . Level ; 
 + 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 + import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . network . EnumConnectionState ; 
 import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetHandlerPlayServer ; 
 @ @ - 149 , 7 + 153 , 16 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet > imple 
 this . manager . setConnectionState ( EnumConnectionState . PLAY ) ; 
 
 / / Return the dimension the player is in , so it can be pre - sent to the client in the ServerHello v2 packet 
 - return player . dimension ; 
 + / / Requires some hackery to the serverconfigmanager and stuff for this to work 
 + NBTTagCompound playerNBT = scm . getPlayerNBT ( player ) ; 
 + if ( playerNBT ! = null ) 
 + { 
 + return playerNBT . getInteger ( " Dimension " ) ; 
 + } 
 + else 
 + { 
 + return 0 ; 
 + } 
 } 
 
 void clientListenForServerHandshake ( )
