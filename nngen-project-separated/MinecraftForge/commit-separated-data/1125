BLEU SCORE: 0.009077715544186328

TEST MSG: Removed event bus call from the ModelLoader
GENERATED MSG: made renderLayer ThreadLocal , now it should hold correct value for use inside custom baked models

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index e236112 . . 93819a3 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 284 , 6 + 284 , 7 @ @ public class ForgeHooksClient <nl> public static void onTextureStitchedPre ( TextureMap map ) <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new TextureStitchEvent . Pre ( map ) ) ; <nl> + ModelLoader . White . instance . register ( map ) ; <nl> } <nl> <nl> public static void onTextureStitchedPost ( TextureMap map ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index 6364608 . . d4b896c 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 77 , 7 + 77 , 6 @ @ public class ModelLoader extends ModelBakery <nl> super ( manager , map , shapes ) ; <nl> VanillaLoader . instance . setLoader ( this ) ; <nl> ModelLoaderRegistry . clearModelCache ( ) ; <nl> - MinecraftForge . EVENT _ BUS . register ( White . instance ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 484 , 10 + 483 , 9 @ @ public class ModelLoader extends ModelBakery <nl> return false ; <nl> } <nl> <nl> - @ SubscribeEvent <nl> - public void handleStitchPre ( TextureStitchEvent . Pre event ) <nl> + public void register ( TextureMap map ) <nl> { <nl> - event . map . setTextureEntry ( White . loc . toString ( ) , White . instance ) ; <nl> + map . setTextureEntry ( White . loc . toString ( ) , White . instance ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 2407f52 . . 971b167 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 295 , 10 + 295 , 17 @ @ public class ForgeHooksClient <nl> renderPass = pass ; <nl> } <nl> <nl> - static EnumWorldBlockLayer renderLayer = EnumWorldBlockLayer . SOLID ; <nl> + static final ThreadLocal < EnumWorldBlockLayer > renderLayer = new ThreadLocal < EnumWorldBlockLayer > ( ) <nl> + { <nl> + protected EnumWorldBlockLayer initialValue ( ) <nl> + { <nl> + return EnumWorldBlockLayer . SOLID ; <nl> + } <nl> + } ; <nl> + <nl> public static void setRenderLayer ( EnumWorldBlockLayer layer ) <nl> { <nl> - renderLayer = layer ; <nl> + renderLayer . set ( layer ) ; <nl> } <nl> <nl> public static ModelBase getArmorModel ( EntityLivingBase entityLiving , ItemStack itemStack , int slotID , ModelBase _ default ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> index 39afb26 . . ae5194e 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class MinecraftForgeClient <nl> <nl> public static EnumWorldBlockLayer getRenderLayer ( ) <nl> { <nl> - return ForgeHooksClient . renderLayer ; <nl> + return ForgeHooksClient . renderLayer . get ( ) ; <nl> } <nl> <nl> private static BitSet stencilBits = new BitSet ( 8 ) ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index e236112 . . 93819a3 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 284 , 6 + 284 , 7 @ @ public class ForgeHooksClient 
 public static void onTextureStitchedPre ( TextureMap map ) 
 { 
 MinecraftForge . EVENT _ BUS . post ( new TextureStitchEvent . Pre ( map ) ) ; 
 + ModelLoader . White . instance . register ( map ) ; 
 } 
 
 public static void onTextureStitchedPost ( TextureMap map ) 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index 6364608 . . d4b896c 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 77 , 7 + 77 , 6 @ @ public class ModelLoader extends ModelBakery 
 super ( manager , map , shapes ) ; 
 VanillaLoader . instance . setLoader ( this ) ; 
 ModelLoaderRegistry . clearModelCache ( ) ; 
 - MinecraftForge . EVENT _ BUS . register ( White . instance ) ; 
 } 
 
 @ Override 
 @ @ - 484 , 10 + 483 , 9 @ @ public class ModelLoader extends ModelBakery 
 return false ; 
 } 
 
 - @ SubscribeEvent 
 - public void handleStitchPre ( TextureStitchEvent . Pre event ) 
 + public void register ( TextureMap map ) 
 { 
 - event . map . setTextureEntry ( White . loc . toString ( ) , White . instance ) ; 
 + map . setTextureEntry ( White . loc . toString ( ) , White . instance ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 2407f52 . . 971b167 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 295 , 10 + 295 , 17 @ @ public class ForgeHooksClient 
 renderPass = pass ; 
 } 
 
 - static EnumWorldBlockLayer renderLayer = EnumWorldBlockLayer . SOLID ; 
 + static final ThreadLocal < EnumWorldBlockLayer > renderLayer = new ThreadLocal < EnumWorldBlockLayer > ( ) 
 + { 
 + protected EnumWorldBlockLayer initialValue ( ) 
 + { 
 + return EnumWorldBlockLayer . SOLID ; 
 + } 
 + } ; 
 + 
 public static void setRenderLayer ( EnumWorldBlockLayer layer ) 
 { 
 - renderLayer = layer ; 
 + renderLayer . set ( layer ) ; 
 } 
 
 public static ModelBase getArmorModel ( EntityLivingBase entityLiving , ItemStack itemStack , int slotID , ModelBase _ default ) 
 diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 index 39afb26 . . ae5194e 100644 
 - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class MinecraftForgeClient 
 
 public static EnumWorldBlockLayer getRenderLayer ( ) 
 { 
 - return ForgeHooksClient . renderLayer ; 
 + return ForgeHooksClient . renderLayer . get ( ) ; 
 } 
 
 private static BitSet stencilBits = new BitSet ( 8 ) ;
