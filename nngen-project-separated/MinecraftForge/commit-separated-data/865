BLEU SCORE: 0.07545383788761362

TEST MSG: Add GuiScreenEvent . BackgroundDrawnEvent
GENERATED MSG: Add GuiScreenEvents for keyboard and mouse input

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> index 85fa875 . . 1a343c6 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> @ @ - 97 , 3 + 97 , 11 @ @ <nl> } <nl> } <nl> } <nl> + @ @ - 570 , 6 + 591 , 7 @ @ <nl> + public void func _ 146276 _ q _ ( ) <nl> + { <nl> + this . func _ 146270 _ b ( 0 ) ; <nl> + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . BackgroundDrawnEvent ( this ) ) ; <nl> + } <nl> + <nl> + public void func _ 146270 _ b ( int p _ 146270 _ 1 _ ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java <nl> index 7ed451c . . b38feff 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java <nl> + + + b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java <nl> @ @ - 3 , 8 + 3 , 12 @ @ package net . minecraftforge . client . event ; <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> <nl> + import org . lwjgl . input . Mouse ; <nl> + <nl> import net . minecraft . client . gui . GuiButton ; <nl> import net . minecraft . client . gui . GuiScreen ; <nl> + import net . minecraft . client . gui . ScaledResolution ; <nl> + <nl> import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> import net . minecraftforge . fml . common . eventhandler . Event ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> @ @ - 119 , 6 + 123 , 42 @ @ public class GuiScreenEvent extends Event <nl> } <nl> } <nl> } <nl> + <nl> + / * * <nl> + * This event fires at the end of { @ code GuiScreen . drawDefaultBackground ( ) } and before the rest of the Gui draws . <nl> + * This allows drawing next to Guis , above the background but below any tooltips . <nl> + * / <nl> + public static class BackgroundDrawnEvent extends GuiScreenEvent <nl> + { <nl> + private final int mouseX ; <nl> + private final int mouseY ; <nl> + <nl> + public BackgroundDrawnEvent ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + final ScaledResolution scaledresolution = new ScaledResolution ( gui . mc ) ; <nl> + final int scaledWidth = scaledresolution . getScaledWidth ( ) ; <nl> + final int scaledHeight = scaledresolution . getScaledHeight ( ) ; <nl> + this . mouseX = Mouse . getX ( ) * scaledWidth / gui . mc . displayWidth ; <nl> + this . mouseY = scaledHeight - Mouse . getY ( ) * scaledHeight / gui . mc . displayHeight - 1 ; <nl> + } <nl> + <nl> + / * * <nl> + * The x coordinate of the mouse pointer on the screen . <nl> + * / <nl> + public int getMouseX ( ) <nl> + { <nl> + return mouseX ; <nl> + } <nl> + <nl> + / * * <nl> + * The y coordinate of the mouse pointer on the screen . <nl> + * / <nl> + public int getMouseY ( ) <nl> + { <nl> + return mouseY ; <nl> + } <nl> + } <nl> <nl> public static class ActionPerformedEvent extends GuiScreenEvent <nl> {
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> index 986a5b8 . . 120578e 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch <nl> @ @ - 84 , 3 + 84 , 23 @ @ <nl> } <nl> <nl> public void func _ 73866 _ w _ ( ) { } <nl> + @ @ - 246 , 7 + 265 , 9 @ @ <nl> + { <nl> + while ( Mouse . next ( ) ) <nl> + { <nl> + + if ( MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . MouseInputEvent . Pre ( this ) ) ) continue ; <nl> + this . func _ 146274 _ d ( ) ; <nl> + + if ( this . equals ( this . field _ 146297 _ k . field _ 71462 _ r ) ) MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . MouseInputEvent . Post ( this ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 254 , 7 + 275 , 9 @ @ <nl> + { <nl> + while ( Keyboard . next ( ) ) <nl> + { <nl> + + if ( MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . KeyboardInputEvent . Pre ( this ) ) ) continue ; <nl> + this . func _ 146282 _ l ( ) ; <nl> + + if ( this . equals ( this . field _ 146297 _ k . field _ 71462 _ r ) ) MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . KeyboardInputEvent . Post ( this ) ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch <nl> index 955cd84 . . c21ff7d 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch <nl> @ @ - 53 , 3 + 53 , 20 @ @ <nl> Slot slot = this . func _ 146975 _ c ( p _ 146286 _ 1 _ , p _ 146286 _ 2 _ ) ; <nl> int l = this . field _ 147003 _ i ; <nl> int i1 = this . field _ 147009 _ r ; <nl> + @ @ - 691 , 4 + 702 , 16 @ @ <nl> + this . field _ 146297 _ k . field _ 71439 _ g . func _ 71053 _ j ( ) ; <nl> + } <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + <nl> + + / * * <nl> + + * Returns the slot that is currently displayed under the mouse . <nl> + + * / <nl> + + public Slot getSlotUnderMouse ( ) <nl> + + { <nl> + + return this . field _ 147006 _ u ; <nl> + + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java <nl> index fc7a78f . . 7e7e9d3 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java <nl> + + + b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java <nl> @ @ - 176 , 4 + 176 , 70 @ @ public class GuiScreenEvent extends Event <nl> } <nl> } <nl> } <nl> + <nl> + public static class MouseInputEvent extends GuiScreenEvent <nl> + { <nl> + public MouseInputEvent ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + } <nl> + <nl> + / * * <nl> + * This event fires when mouse input is detected by a GuiScreen . <nl> + * Cancel this event to bypass { @ code GuiScreen . handleMouseInput ( ) } . <nl> + * / <nl> + @ Cancelable <nl> + public static class Pre extends MouseInputEvent <nl> + { <nl> + public Pre ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * This event fires after { @ code GuiScreen . handleMouseInput ( ) } provided that the active <nl> + * screen has not been changed as a result of { @ code GuiScreen . handleMouseInput ( ) } . <nl> + * / <nl> + public static class Post extends MouseInputEvent <nl> + { <nl> + public Post ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public static class KeyboardInputEvent extends GuiScreenEvent <nl> + { <nl> + public KeyboardInputEvent ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + } <nl> + <nl> + / * * <nl> + * This event fires when keyboard input is detected by a GuiScreen . <nl> + * Cancel this event to bypass { @ code GuiScreen . handleKeyboardInput ( ) } . <nl> + * / <nl> + @ Cancelable <nl> + public static class Pre extends KeyboardInputEvent <nl> + { <nl> + public Pre ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * This event fires after { @ code GuiScreen . handleKeyboardInput ( ) } provided that the active <nl> + * screen has not been changed as a result of { @ code GuiScreen . handleKeyboardInput ( ) } . <nl> + * / <nl> + public static class Post extends KeyboardInputEvent <nl> + { <nl> + public Post ( GuiScreen gui ) <nl> + { <nl> + super ( gui ) ; <nl> + } <nl> + } <nl> + } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 index 85fa875 . . 1a343c6 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 @ @ - 97 , 3 + 97 , 11 @ @ 
 } 
 } 
 } 
 + @ @ - 570 , 6 + 591 , 7 @ @ 
 + public void func _ 146276 _ q _ ( ) 
 + { 
 + this . func _ 146270 _ b ( 0 ) ; 
 + + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . BackgroundDrawnEvent ( this ) ) ; 
 + } 
 + 
 + public void func _ 146270 _ b ( int p _ 146270 _ 1 _ ) 
 diff - - git a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java 
 index 7ed451c . . b38feff 100644 
 - - - a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java 
 + + + b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java 
 @ @ - 3 , 8 + 3 , 12 @ @ package net . minecraftforge . client . event ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 
 + import org . lwjgl . input . Mouse ; 
 + 
 import net . minecraft . client . gui . GuiButton ; 
 import net . minecraft . client . gui . GuiScreen ; 
 + import net . minecraft . client . gui . ScaledResolution ; 
 + 
 import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 import net . minecraftforge . fml . common . eventhandler . Event ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 @ @ - 119 , 6 + 123 , 42 @ @ public class GuiScreenEvent extends Event 
 } 
 } 
 } 
 + 
 + / * * 
 + * This event fires at the end of { @ code GuiScreen . drawDefaultBackground ( ) } and before the rest of the Gui draws . 
 + * This allows drawing next to Guis , above the background but below any tooltips . 
 + * / 
 + public static class BackgroundDrawnEvent extends GuiScreenEvent 
 + { 
 + private final int mouseX ; 
 + private final int mouseY ; 
 + 
 + public BackgroundDrawnEvent ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + final ScaledResolution scaledresolution = new ScaledResolution ( gui . mc ) ; 
 + final int scaledWidth = scaledresolution . getScaledWidth ( ) ; 
 + final int scaledHeight = scaledresolution . getScaledHeight ( ) ; 
 + this . mouseX = Mouse . getX ( ) * scaledWidth / gui . mc . displayWidth ; 
 + this . mouseY = scaledHeight - Mouse . getY ( ) * scaledHeight / gui . mc . displayHeight - 1 ; 
 + } 
 + 
 + / * * 
 + * The x coordinate of the mouse pointer on the screen . 
 + * / 
 + public int getMouseX ( ) 
 + { 
 + return mouseX ; 
 + } 
 + 
 + / * * 
 + * The y coordinate of the mouse pointer on the screen . 
 + * / 
 + public int getMouseY ( ) 
 + { 
 + return mouseY ; 
 + } 
 + } 
 
 public static class ActionPerformedEvent extends GuiScreenEvent 
 {

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 index 986a5b8 . . 120578e 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreen . java . patch 
 @ @ - 84 , 3 + 84 , 23 @ @ 
 } 
 
 public void func _ 73866 _ w _ ( ) { } 
 + @ @ - 246 , 7 + 265 , 9 @ @ 
 + { 
 + while ( Mouse . next ( ) ) 
 + { 
 + + if ( MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . MouseInputEvent . Pre ( this ) ) ) continue ; 
 + this . func _ 146274 _ d ( ) ; 
 + + if ( this . equals ( this . field _ 146297 _ k . field _ 71462 _ r ) ) MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . MouseInputEvent . Post ( this ) ) ; 
 + } 
 + } 
 + 
 + @ @ - 254 , 7 + 275 , 9 @ @ 
 + { 
 + while ( Keyboard . next ( ) ) 
 + { 
 + + if ( MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . KeyboardInputEvent . Pre ( this ) ) ) continue ; 
 + this . func _ 146282 _ l ( ) ; 
 + + if ( this . equals ( this . field _ 146297 _ k . field _ 71462 _ r ) ) MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . client . event . GuiScreenEvent . KeyboardInputEvent . Post ( this ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch 
 index 955cd84 . . c21ff7d 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch 
 @ @ - 53 , 3 + 53 , 20 @ @ 
 Slot slot = this . func _ 146975 _ c ( p _ 146286 _ 1 _ , p _ 146286 _ 2 _ ) ; 
 int l = this . field _ 147003 _ i ; 
 int i1 = this . field _ 147009 _ r ; 
 + @ @ - 691 , 4 + 702 , 16 @ @ 
 + this . field _ 146297 _ k . field _ 71439 _ g . func _ 71053 _ j ( ) ; 
 + } 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + 
 + + / * * 
 + + * Returns the slot that is currently displayed under the mouse . 
 + + * / 
 + + public Slot getSlotUnderMouse ( ) 
 + + { 
 + + return this . field _ 147006 _ u ; 
 + + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java 
 index fc7a78f . . 7e7e9d3 100644 
 - - - a / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java 
 + + + b / src / main / java / net / minecraftforge / client / event / GuiScreenEvent . java 
 @ @ - 176 , 4 + 176 , 70 @ @ public class GuiScreenEvent extends Event 
 } 
 } 
 } 
 + 
 + public static class MouseInputEvent extends GuiScreenEvent 
 + { 
 + public MouseInputEvent ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + } 
 + 
 + / * * 
 + * This event fires when mouse input is detected by a GuiScreen . 
 + * Cancel this event to bypass { @ code GuiScreen . handleMouseInput ( ) } . 
 + * / 
 + @ Cancelable 
 + public static class Pre extends MouseInputEvent 
 + { 
 + public Pre ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * This event fires after { @ code GuiScreen . handleMouseInput ( ) } provided that the active 
 + * screen has not been changed as a result of { @ code GuiScreen . handleMouseInput ( ) } . 
 + * / 
 + public static class Post extends MouseInputEvent 
 + { 
 + public Post ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + } 
 + } 
 + } 
 + 
 + public static class KeyboardInputEvent extends GuiScreenEvent 
 + { 
 + public KeyboardInputEvent ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + } 
 + 
 + / * * 
 + * This event fires when keyboard input is detected by a GuiScreen . 
 + * Cancel this event to bypass { @ code GuiScreen . handleKeyboardInput ( ) } . 
 + * / 
 + @ Cancelable 
 + public static class Pre extends KeyboardInputEvent 
 + { 
 + public Pre ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * This event fires after { @ code GuiScreen . handleKeyboardInput ( ) } provided that the active 
 + * screen has not been changed as a result of { @ code GuiScreen . handleKeyboardInput ( ) } . 
 + * / 
 + public static class Post extends KeyboardInputEvent 
 + { 
 + public Post ( GuiScreen gui ) 
 + { 
 + super ( gui ) ; 
 + } 
 + } 
 + } 
 }
