BLEU SCORE: 0.011216940038341035

TEST MSG: Fix # 3126 - duplicate stat id error - don ' t use the " universal iterators " in statbuilding , use the one without the duplicate entries . ( The duplicate entry one is for rendering setup )
GENERATED MSG: Take control over Item . BLOCK _ TO _ ITEM map and register Block ' s to this map from GameRegistry .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / stats / StatList . java . patch b / patches / minecraft / net / minecraft / stats / StatList . java . patch <nl> index 5380750 . . 9b4b7eb 100644 <nl> - - - a / patches / minecraft / net / minecraft / stats / StatList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / stats / StatList . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / stats / StatList . java <nl> + + + . . / src - work / minecraft / net / minecraft / stats / StatList . java <nl> - @ @ - 162 , 7 + 162 , 7 @ @ <nl> + @ @ - 162 , 12 + 162 , 12 @ @ <nl> } <nl> } <nl> <nl> @ @ - 9 , 7 + 9 , 13 @ @ <nl> } <nl> <nl> private static void func _ 151181 _ c ( ) <nl> - @ @ - 184 , 7 + 184 , 7 @ @ <nl> + { <nl> + - for ( Block block : Block . field _ 149771 _ c ) <nl> + + for ( Block block : net . minecraftforge . fml . common . registry . GameData . getBlockRegistry ( ) . typeSafeIterable ( ) ) <nl> + { <nl> + Item item = Item . func _ 150898 _ a ( block ) ; <nl> + <nl> + @ @ - 184 , 12 + 184 , 12 @ @ <nl> } <nl> } <nl> <nl> @ @ - 18 , 7 + 24 , 13 @ @ <nl> } <nl> <nl> private static void func _ 75925 _ c ( ) <nl> - @ @ - 208 , 7 + 208 , 7 @ @ <nl> + { <nl> + - for ( Item item : Item . field _ 150901 _ e ) <nl> + + for ( Item item : net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) . typeSafeIterable ( ) ) <nl> + { <nl> + if ( item ! = null ) <nl> + { <nl> + @ @ - 208 , 12 + 208 , 12 @ @ <nl> } <nl> } <nl> <nl> @ @ - 27 , 7 + 39 , 13 @ @ <nl> } <nl> <nl> private static void func _ 151179 _ e ( ) <nl> - @ @ - 227 , 7 + 227 , 7 @ @ <nl> + { <nl> + - for ( Item item : Item . field _ 150901 _ e ) <nl> + + for ( Item item : net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) . typeSafeIterable ( ) ) <nl> + { <nl> + if ( item ! = null ) <nl> + { <nl> + @ @ - 227 , 12 + 227 , 12 @ @ <nl> } <nl> } <nl> <nl> @ @ - 36 , 6 + 54 , 12 @ @ <nl> } <nl> <nl> private static void func _ 188054 _ f ( ) <nl> + { <nl> + - for ( Item item : Item . field _ 150901 _ e ) <nl> + + for ( Item item : net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) . typeSafeIterable ( ) ) <nl> + { <nl> + if ( item ! = null ) <nl> + { <nl> @ @ - 247 , 7 + 247 , 7 @ @ <nl> } <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java <nl> index 6e0a3ec . . 55030c2 100644 <nl> - - - a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java <nl> + + + b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockDirt ; <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . init . Bootstrap ; <nl> + import net . minecraft . stats . StatList ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraftforge . fml . common . DummyModContainer ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> @ @ - 45 , 6 + 46 , 8 @ @ public class SubstitutionInjectionTest <nl> GameRegistry . addSubstitutionAlias ( " minecraft : dirt " , GameRegistry . Type . BLOCK , toSub ) ; <nl> PersistentRegistryManager . freezeData ( ) ; <nl> ObjectHolderRegistry . INSTANCE . applyObjectHolders ( ) ; <nl> + / / This should not throw an exception <nl> + StatList . reinit ( ) ; <nl> <nl> final FMLControlledNamespacedRegistry < Block > blockRegistry = ( FMLControlledNamespacedRegistry < Block > ) PersistentRegistryManager . findRegistryByType ( Block . class ) ; <nl>
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / item / Item . java . patch b / fml / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index c1115d8 . . bf45b6c 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 1 , 14 + 1 , 16 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / item / Item . java <nl> + + + . . / src - work / minecraft / net / minecraft / item / Item . java <nl> - @ @ - 47 , 7 + 47 , 7 @ @ <nl> + @ @ - 47 , 8 + 47 , 8 @ @ <nl> <nl> public class Item <nl> { <nl> - public static final RegistryNamespaced field _ 150901 _ e = new RegistryNamespaced ( ) ; <nl> + - private static final Map field _ 179220 _ a = Maps . newHashMap ( ) ; <nl> + public static final RegistryNamespaced field _ 150901 _ e = net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) ; <nl> - private static final Map field _ 179220 _ a = Maps . newHashMap ( ) ; <nl> + + private static final Map field _ 179220 _ a = net . minecraftforge . fml . common . registry . GameData . getBlockItemMap ( ) ; <nl> protected static final UUID field _ 111210 _ e = UUID . fromString ( " CB3F55D3 - 645C - 4F38 - A497 - 9C13A33DB5CF " ) ; <nl> private CreativeTabs field _ 77701 _ a ; <nl> + protected static Random field _ 77697 _ d = new Random ( ) ; <nl> @ @ - 61 , 6 + 61 , 9 @ @ <nl> private String field _ 77774 _ bZ ; <nl> private static final String _ _ OBFID = " CL _ 00000041 " ; <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> index 3007fbc . . 02da755 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> @ @ - 142 , 23 + 142 , 9 @ @ public class GameData { <nl> return snap ; <nl> } <nl> <nl> - public static int [ ] getBlockedIds ( ) <nl> - { <nl> - int [ ] ret = new int [ getMain ( ) . blockedIds . size ( ) ] ; <nl> - int index = 0 ; <nl> - <nl> - for ( int id : getMain ( ) . blockedIds ) <nl> - { <nl> - ret [ index ] = id ; <nl> - index + + ; <nl> - } <nl> - <nl> - return ret ; <nl> - } <nl> - <nl> static Item findItem ( String modId , String name ) <nl> { <nl> - return ( Item ) getMain ( ) . iItemRegistry . getObject ( modId + " : " + name ) ; <nl> + return ( Item ) getMain ( ) . iItemRegistry . getObject ( modId + " : " + name ) ; <nl> } <nl> <nl> static Block findBlock ( String modId , String name ) <nl> @ @ - 940 , 4 + 926 , 11 @ @ public class GameData { <nl> throw new RuntimeException ( " WHAT ? " ) ; <nl> } <nl> } <nl> + <nl> + private static Map < Block , Item > BLOCK _ TO _ ITEM = Maps . newHashMap ( ) ; <nl> + / / Internal : DO NOT USE , will change without warning . <nl> + public static Map getBlockItemMap ( ) <nl> + { <nl> + return BLOCK _ TO _ ITEM ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> index 0286fcc . . e962249 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java <nl> @ @ - 183 , 15 + 183 , 6 @ @ public class GameRegistry <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use the registerBlock version without the modId parameter instead . <nl> - * / <nl> - @ Deprecated <nl> - public static Block registerBlock ( Block block , Class < ? extends ItemBlock > itemclass , String name , String modId , Object . . . itemCtorArgs ) <nl> - { <nl> - return registerBlock ( block , itemclass , name , itemCtorArgs ) ; <nl> - } <nl> - <nl> - / * * <nl> * Register a block with the world , with the specified item class , block name and owning modId <nl> * @ param block The block to register <nl> * @ param itemclass The item type to register with it : null registers a block without associated item . <nl> @ @ - 224 , 6 + 215 , 7 @ @ public class GameRegistry <nl> if ( i ! = null ) <nl> { <nl> GameData . getMain ( ) . registerItem ( i , name ) ; <nl> + GameData . getBlockItemMap ( ) . put ( block , i ) ; <nl> } <nl> return block ; <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / stats / StatList . java . patch b / patches / minecraft / net / minecraft / stats / StatList . java . patch 
 index 5380750 . . 9b4b7eb 100644 
 - - - a / patches / minecraft / net / minecraft / stats / StatList . java . patch 
 + + + b / patches / minecraft / net / minecraft / stats / StatList . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / stats / StatList . java 
 + + + . . / src - work / minecraft / net / minecraft / stats / StatList . java 
 - @ @ - 162 , 7 + 162 , 7 @ @ 
 + @ @ - 162 , 12 + 162 , 12 @ @ 
 } 
 } 
 
 @ @ - 9 , 7 + 9 , 13 @ @ 
 } 
 
 private static void func _ 151181 _ c ( ) 
 - @ @ - 184 , 7 + 184 , 7 @ @ 
 + { 
 + - for ( Block block : Block . field _ 149771 _ c ) 
 + + for ( Block block : net . minecraftforge . fml . common . registry . GameData . getBlockRegistry ( ) . typeSafeIterable ( ) ) 
 + { 
 + Item item = Item . func _ 150898 _ a ( block ) ; 
 + 
 + @ @ - 184 , 12 + 184 , 12 @ @ 
 } 
 } 
 
 @ @ - 18 , 7 + 24 , 13 @ @ 
 } 
 
 private static void func _ 75925 _ c ( ) 
 - @ @ - 208 , 7 + 208 , 7 @ @ 
 + { 
 + - for ( Item item : Item . field _ 150901 _ e ) 
 + + for ( Item item : net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) . typeSafeIterable ( ) ) 
 + { 
 + if ( item ! = null ) 
 + { 
 + @ @ - 208 , 12 + 208 , 12 @ @ 
 } 
 } 
 
 @ @ - 27 , 7 + 39 , 13 @ @ 
 } 
 
 private static void func _ 151179 _ e ( ) 
 - @ @ - 227 , 7 + 227 , 7 @ @ 
 + { 
 + - for ( Item item : Item . field _ 150901 _ e ) 
 + + for ( Item item : net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) . typeSafeIterable ( ) ) 
 + { 
 + if ( item ! = null ) 
 + { 
 + @ @ - 227 , 12 + 227 , 12 @ @ 
 } 
 } 
 
 @ @ - 36 , 6 + 54 , 12 @ @ 
 } 
 
 private static void func _ 188054 _ f ( ) 
 + { 
 + - for ( Item item : Item . field _ 150901 _ e ) 
 + + for ( Item item : net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) . typeSafeIterable ( ) ) 
 + { 
 + if ( item ! = null ) 
 + { 
 @ @ - 247 , 7 + 247 , 7 @ @ 
 } 
 } 
 diff - - git a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java 
 index 6e0a3ec . . 55030c2 100644 
 - - - a / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java 
 + + + b / src / test / java / net / minecraftforge / fml / common / registry / SubstitutionInjectionTest . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockDirt ; 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . init . Bootstrap ; 
 + import net . minecraft . stats . StatList ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraftforge . fml . common . DummyModContainer ; 
 import net . minecraftforge . fml . common . Loader ; 
 @ @ - 45 , 6 + 46 , 8 @ @ public class SubstitutionInjectionTest 
 GameRegistry . addSubstitutionAlias ( " minecraft : dirt " , GameRegistry . Type . BLOCK , toSub ) ; 
 PersistentRegistryManager . freezeData ( ) ; 
 ObjectHolderRegistry . INSTANCE . applyObjectHolders ( ) ; 
 + / / This should not throw an exception 
 + StatList . reinit ( ) ; 
 
 final FMLControlledNamespacedRegistry < Block > blockRegistry = ( FMLControlledNamespacedRegistry < Block > ) PersistentRegistryManager . findRegistryByType ( Block . class ) ; 


NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / item / Item . java . patch b / fml / patches / minecraft / net / minecraft / item / Item . java . patch 
 index c1115d8 . . bf45b6c 100644 
 - - - a / fml / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 1 , 14 + 1 , 16 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / item / Item . java 
 + + + . . / src - work / minecraft / net / minecraft / item / Item . java 
 - @ @ - 47 , 7 + 47 , 7 @ @ 
 + @ @ - 47 , 8 + 47 , 8 @ @ 
 
 public class Item 
 { 
 - public static final RegistryNamespaced field _ 150901 _ e = new RegistryNamespaced ( ) ; 
 + - private static final Map field _ 179220 _ a = Maps . newHashMap ( ) ; 
 + public static final RegistryNamespaced field _ 150901 _ e = net . minecraftforge . fml . common . registry . GameData . getItemRegistry ( ) ; 
 - private static final Map field _ 179220 _ a = Maps . newHashMap ( ) ; 
 + + private static final Map field _ 179220 _ a = net . minecraftforge . fml . common . registry . GameData . getBlockItemMap ( ) ; 
 protected static final UUID field _ 111210 _ e = UUID . fromString ( " CB3F55D3 - 645C - 4F38 - A497 - 9C13A33DB5CF " ) ; 
 private CreativeTabs field _ 77701 _ a ; 
 + protected static Random field _ 77697 _ d = new Random ( ) ; 
 @ @ - 61 , 6 + 61 , 9 @ @ 
 private String field _ 77774 _ bZ ; 
 private static final String _ _ OBFID = " CL _ 00000041 " ; 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 index 3007fbc . . 02da755 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 @ @ - 142 , 23 + 142 , 9 @ @ public class GameData { 
 return snap ; 
 } 
 
 - public static int [ ] getBlockedIds ( ) 
 - { 
 - int [ ] ret = new int [ getMain ( ) . blockedIds . size ( ) ] ; 
 - int index = 0 ; 
 - 
 - for ( int id : getMain ( ) . blockedIds ) 
 - { 
 - ret [ index ] = id ; 
 - index + + ; 
 - } 
 - 
 - return ret ; 
 - } 
 - 
 static Item findItem ( String modId , String name ) 
 { 
 - return ( Item ) getMain ( ) . iItemRegistry . getObject ( modId + " : " + name ) ; 
 + return ( Item ) getMain ( ) . iItemRegistry . getObject ( modId + " : " + name ) ; 
 } 
 
 static Block findBlock ( String modId , String name ) 
 @ @ - 940 , 4 + 926 , 11 @ @ public class GameData { 
 throw new RuntimeException ( " WHAT ? " ) ; 
 } 
 } 
 + 
 + private static Map < Block , Item > BLOCK _ TO _ ITEM = Maps . newHashMap ( ) ; 
 + / / Internal : DO NOT USE , will change without warning . 
 + public static Map getBlockItemMap ( ) 
 + { 
 + return BLOCK _ TO _ ITEM ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 index 0286fcc . . e962249 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / registry / GameRegistry . java 
 @ @ - 183 , 15 + 183 , 6 @ @ public class GameRegistry 
 } 
 
 / * * 
 - * @ deprecated Use the registerBlock version without the modId parameter instead . 
 - * / 
 - @ Deprecated 
 - public static Block registerBlock ( Block block , Class < ? extends ItemBlock > itemclass , String name , String modId , Object . . . itemCtorArgs ) 
 - { 
 - return registerBlock ( block , itemclass , name , itemCtorArgs ) ; 
 - } 
 - 
 - / * * 
 * Register a block with the world , with the specified item class , block name and owning modId 
 * @ param block The block to register 
 * @ param itemclass The item type to register with it : null registers a block without associated item . 
 @ @ - 224 , 6 + 215 , 7 @ @ public class GameRegistry 
 if ( i ! = null ) 
 { 
 GameData . getMain ( ) . registerItem ( i , name ) ; 
 + GameData . getBlockItemMap ( ) . put ( block , i ) ; 
 } 
 return block ; 
 }
