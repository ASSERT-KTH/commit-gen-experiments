BLEU SCORE: 0.011827156917279504

TEST MSG: Add ability for custom detector rail output
GENERATED MSG: Added PotionBrewEvent . Pre / Post . To allow for modification and cancelation of Brewing . Closes # 1248

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / BlockRailDetector . java . patch b / patches / minecraft / net / minecraft / block / BlockRailDetector . java . patch <nl> new file mode 100644 <nl> index 0000000 . . a502ddb <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / block / BlockRailDetector . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / block / BlockRailDetector . java <nl> + + + + . . / src - work / minecraft / net / minecraft / block / BlockRailDetector . java <nl> + @ @ - 156 , 6 + 156 , 8 @ @ <nl> + { <nl> + if ( ( ( Boolean ) p _ 180641 _ 1 _ . func _ 177229 _ b ( field _ 176574 _ M ) ) . booleanValue ( ) ) <nl> + { <nl> + + int result = net . minecraftforge . event . ForgeEventFactory . onDetectorRailCompare ( p _ 180641 _ 3 _ , func _ 176572 _ a ( p _ 180641 _ 3 _ ) ) ; <nl> + + if ( result > - 1 ) return result ; <nl> + List < EntityMinecartCommandBlock > list = this . < EntityMinecartCommandBlock > func _ 176571 _ a ( p _ 180641 _ 2 _ , p _ 180641 _ 3 _ , EntityMinecartCommandBlock . class , new Predicate [ 0 ] ) ; <nl> + <nl> + if ( ! list . isEmpty ( ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index eead4df . . 40512e3 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . util . SoundCategory ; <nl> import net . minecraft . util . SoundEvent ; <nl> + import net . minecraft . util . math . AxisAlignedBB ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . RayTraceResult ; <nl> import net . minecraft . util . math . Vec3d ; <nl> @ @ - 101 , 6 + 102 , 7 @ @ import net . minecraftforge . event . world . BlockEvent ; <nl> import net . minecraftforge . event . world . BlockEvent . MultiPlaceEvent ; <nl> import net . minecraftforge . event . world . BlockEvent . NeighborNotifyEvent ; <nl> import net . minecraftforge . event . world . BlockEvent . PlaceEvent ; <nl> + import net . minecraftforge . event . world . DetectorRailComparatorEvent ; <nl> import net . minecraftforge . event . world . ExplosionEvent ; <nl> import net . minecraftforge . event . world . WorldEvent ; <nl> import net . minecraftforge . fml . common . ObfuscationReflectionHelper ; <nl> @ @ - 585 , 4 + 587 , 11 @ @ public class ForgeEventFactory <nl> return event . getTable ( ) ; <nl> } <nl> <nl> + public static int onDetectorRailCompare ( BlockPos pos , AxisAlignedBB box ) <nl> + { <nl> + DetectorRailComparatorEvent evt = new DetectorRailComparatorEvent ( pos , box ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( evt ) ; <nl> + return evt . getRedstonePower ( ) ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / DetectorRailComparatorEvent . java b / src / main / java / net / minecraftforge / event / world / DetectorRailComparatorEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 6848a6c <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / world / DetectorRailComparatorEvent . java <nl> @ @ - 0 , 0 + 1 , 59 @ @ <nl> + package net . minecraftforge . event . world ; <nl> + <nl> + import net . minecraft . util . math . AxisAlignedBB ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event ; <nl> + <nl> + / * * <nl> + * This event is fired serverside whenever a Detector Rail looks for a minecart to get a comparator value from <nl> + * in { @ link net . minecraft . block . BlockRailDetector # getComparatorInputOverride } . <nl> + * This event is not cancelable . <nl> + * This event is fired on the { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } . <nl> + * / <nl> + public class DetectorRailComparatorEvent extends Event <nl> + { <nl> + <nl> + private final BlockPos pos ; <nl> + private final AxisAlignedBB searchBox ; <nl> + private int redstonePower ; <nl> + <nl> + public DetectorRailComparatorEvent ( BlockPos pos , AxisAlignedBB searchBox ) <nl> + { <nl> + this . pos = pos ; <nl> + this . searchBox = searchBox ; <nl> + this . redstonePower = - 1 ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The position of the Detector Rail <nl> + * / <nl> + public BlockPos getPos ( ) <nl> + { <nl> + return pos ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The bounding box that is to be searched for minecarts <nl> + * / <nl> + public AxisAlignedBB getSearchBox ( ) <nl> + { <nl> + return searchBox ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The redstone signal strength to give the comparator . Values below 0 mean vanilla logic will run . <nl> + * / <nl> + public int getRedstonePower ( ) <nl> + { <nl> + return redstonePower ; <nl> + } <nl> + <nl> + / * * <nl> + * Set the redstone power to give the comparator . Values below 0 mean vanilla logic will run . <nl> + * / <nl> + public void setRedstonePower ( int redstonePower ) <nl> + { <nl> + this . redstonePower = redstonePower ; <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> index 6bd1efd . . 979435f 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> @ @ - 1 , 15 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java <nl> + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java <nl> - @ @ - 12 , 6 + 12 , 8 @ @ <nl> - import net . minecraft . nbt . NBTTagCompound ; <nl> - import net . minecraft . nbt . NBTTagList ; <nl> - import net . minecraft . potion . PotionHelper ; <nl> - + import net . minecraftforge . common . MinecraftForge ; <nl> - + import net . minecraftforge . event . brewing . PotionBrewedEvent ; <nl> - <nl> - public class TileEntityBrewingStand extends TileEntity implements ISidedInventory <nl> - { <nl> - @ @ - 104 , 7 + 106 , 7 @ @ <nl> + @ @ - 104 , 7 + 104 , 7 @ @ <nl> <nl> for ( int i = 0 ; i < 3 ; + + i ) <nl> { <nl> @ @ - 18 , 7 + 9 , 14 @ @ <nl> { <nl> int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; <nl> int k = this . func _ 145936 _ c ( j , itemstack ) ; <nl> - @ @ - 143 , 7 + 145 , 7 @ @ <nl> + @ @ - 137 , 13 + 137 , 14 @ @ <nl> + <nl> + private void func _ 145940 _ l ( ) <nl> + { <nl> + + if ( net . minecraftforge . event . ForgeEventFactory . onPotionAttemptBreaw ( field _ 145945 _ j ) ) return ; <nl> + if ( this . func _ 145934 _ k ( ) ) <nl> + { <nl> + ItemStack itemstack = this . field _ 145945 _ j [ 3 ] ; <nl> <nl> for ( int i = 0 ; i < 3 ; + + i ) <nl> { <nl> @ @ - 27 , 7 + 25 , 7 @ @ <nl> { <nl> int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; <nl> int k = this . func _ 145936 _ c ( j , itemstack ) ; <nl> - @ @ - 164 , 9 + 166 , 9 @ @ <nl> + @ @ - 164 , 9 + 165 , 9 @ @ <nl> } <nl> } <nl> <nl> @ @ - 39 , 15 + 37 , 15 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 177 , 6 + 179 , 7 @ @ <nl> + @ @ - 177 , 6 + 178 , 7 @ @ <nl> this . field _ 145945 _ j [ 3 ] = null ; <nl> } <nl> } <nl> - + MinecraftForge . EVENT _ BUS . post ( new PotionBrewedEvent ( field _ 145945 _ j ) ) ; <nl> + + net . minecraftforge . event . ForgeEventFactory . onPotionBrewed ( field _ 145945 _ j ) ; <nl> } <nl> } <nl> <nl> - @ @ - 292 , 7 + 295 , 7 @ @ <nl> + @ @ - 292 , 7 + 294 , 7 @ @ <nl> <nl> public boolean func _ 94041 _ b ( int p _ 94041 _ 1 _ , ItemStack p _ 94041 _ 2 _ ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 8dad798 . . 1765ada 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . tileentity . TileEntityBrewingStand ; <nl> import net . minecraft . world . Explosion ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . WorldServer ; <nl> @ @ - 28 , 6 + 29 , 8 @ @ import net . minecraft . world . storage . SaveHandler ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . util . BlockSnapshot ; <nl> import net . minecraftforge . common . util . ForgeDirection ; <nl> + import net . minecraftforge . event . brewing . PotionBrewEvent ; <nl> + import net . minecraftforge . event . brewing . PotionBrewedEvent ; <nl> import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; <nl> import net . minecraftforge . event . entity . living . LivingHealEvent ; <nl> import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; <nl> @ @ - 253 , 4 + 256 , 31 @ @ public class ForgeEventFactory <nl> LivingHealEvent event = new LivingHealEvent ( entity , amount ) ; <nl> return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . amount ) ; <nl> } <nl> + <nl> + public static boolean onPotionAttemptBreaw ( ItemStack [ ] stacks ) <nl> + { <nl> + ItemStack [ ] tmp = new ItemStack [ stacks . length ] ; <nl> + for ( int x = 0 ; x < tmp . length ; x + + ) <nl> + tmp [ x ] = stacks [ x ] . copy ( ) ; <nl> + <nl> + PotionBrewEvent . Pre event = new PotionBrewEvent . Pre ( tmp ) ; <nl> + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> + { <nl> + boolean changed = false ; <nl> + for ( int x = 0 ; x < stacks . length ; x + + ) <nl> + { <nl> + changed | = ItemStack . areItemStacksEqual ( tmp [ x ] , stacks [ x ] ) ; <nl> + stacks [ x ] = event . getItem ( x ) ; <nl> + } <nl> + if ( changed ) <nl> + onPotionBrewed ( stacks ) ; <nl> + return true ; <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> + public static void onPotionBrewed ( ItemStack [ ] brewingItemStacks ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 1c26cd9 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java <nl> @ @ - 0 , 0 + 1 , 83 @ @ <nl> + package net . minecraftforge . event . brewing ; <nl> + <nl> + import net . minecraft . item . ItemStack ; <nl> + import cpw . mods . fml . common . eventhandler . Cancelable ; <nl> + import cpw . mods . fml . common . eventhandler . Event ; <nl> + import cpw . mods . fml . common . eventhandler . Event . HasResult ; <nl> + <nl> + <nl> + public class PotionBrewEvent extends Event <nl> + { <nl> + private ItemStack [ ] stacks ; <nl> + <nl> + protected PotionBrewEvent ( ItemStack [ ] stacks ) <nl> + { <nl> + this . stacks = stacks ; <nl> + } <nl> + <nl> + public ItemStack getItem ( int index ) <nl> + { <nl> + if ( index > = stacks . length ) return null ; <nl> + return stacks [ index ] ; <nl> + } <nl> + <nl> + public void setItem ( int index , ItemStack stack ) <nl> + { <nl> + if ( index < stacks . length ) <nl> + { <nl> + stacks [ index ] = stack ; <nl> + } <nl> + } <nl> + <nl> + public int getLength ( ) <nl> + { <nl> + return stacks . length ; <nl> + } <nl> + <nl> + / * * <nl> + * PotionBrewEvent . Pre is fired before vanilla brewing takes place . <nl> + * All changes made to the event ' s array will be made to the TileEntity if the event is canceled . <nl> + * < br > <nl> + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > <nl> + * < br > <nl> + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > <nl> + * < br > <nl> + * This event is { @ link Cancelable } . < br > <nl> + * If the event is not canceled , the vanilla brewing will take place instead of modded brewing . <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> + * < br > <nl> + * If this event is canceled , and items have been modified , PotionBrewEvent . Post will automatically be fired . <nl> + * * / <nl> + @ Cancelable <nl> + public static class Pre extends PotionBrewEvent <nl> + { <nl> + public Pre ( ItemStack [ ] stacks ) <nl> + { <nl> + super ( stacks ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * PotionBrewEvent . Post is fired when a potion is brewed in the brewing stand . <nl> + * < br > <nl> + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > <nl> + * < br > <nl> + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > <nl> + * < br > <nl> + * This event is not { @ link Cancelable } . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> + * * / <nl> + public static class Post extends PotionBrewedEvent <nl> + { <nl> + public Post ( ItemStack [ ] stacks ) <nl> + { <nl> + super ( stacks ) ; <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java <nl> index 4af2825 . . e958684 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package net . minecraftforge . event . brewing ; <nl> <nl> + import cpw . mods . fml . common . eventhandler . Cancelable ; <nl> import cpw . mods . fml . common . eventhandler . Event ; <nl> import net . minecraft . item . ItemStack ; <nl> <nl> @ @ - 16 , 14 + 17 , 18 @ @ import net . minecraft . item . ItemStack ; <nl> * < br > <nl> * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> * * / <nl> - public class PotionBrewedEvent extends Event <nl> + @ Deprecated / / Remove in 1 . 8 . 1 <nl> + public class PotionBrewedEvent extends PotionBrewEvent <nl> { <nl> / * * <nl> * The brewing stacks in the brewing stand . Each index has the possibility to be null , so make sure you check . <nl> + * Changing this array to another one has no effect . <nl> * / <nl> + @ Deprecated <nl> public ItemStack [ ] brewingStacks ; <nl> public PotionBrewedEvent ( ItemStack [ ] brewingStacks ) <nl> { <nl> + super ( brewingStacks ) ; <nl> this . brewingStacks = brewingStacks ; <nl> } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / BlockRailDetector . java . patch b / patches / minecraft / net / minecraft / block / BlockRailDetector . java . patch 
 new file mode 100644 
 index 0000000 . . a502ddb 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / block / BlockRailDetector . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / block / BlockRailDetector . java 
 + + + + . . / src - work / minecraft / net / minecraft / block / BlockRailDetector . java 
 + @ @ - 156 , 6 + 156 , 8 @ @ 
 + { 
 + if ( ( ( Boolean ) p _ 180641 _ 1 _ . func _ 177229 _ b ( field _ 176574 _ M ) ) . booleanValue ( ) ) 
 + { 
 + + int result = net . minecraftforge . event . ForgeEventFactory . onDetectorRailCompare ( p _ 180641 _ 3 _ , func _ 176572 _ a ( p _ 180641 _ 3 _ ) ) ; 
 + + if ( result > - 1 ) return result ; 
 + List < EntityMinecartCommandBlock > list = this . < EntityMinecartCommandBlock > func _ 176571 _ a ( p _ 180641 _ 2 _ , p _ 180641 _ 3 _ , EntityMinecartCommandBlock . class , new Predicate [ 0 ] ) ; 
 + 
 + if ( ! list . isEmpty ( ) ) 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index eead4df . . 40512e3 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . util . SoundCategory ; 
 import net . minecraft . util . SoundEvent ; 
 + import net . minecraft . util . math . AxisAlignedBB ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . RayTraceResult ; 
 import net . minecraft . util . math . Vec3d ; 
 @ @ - 101 , 6 + 102 , 7 @ @ import net . minecraftforge . event . world . BlockEvent ; 
 import net . minecraftforge . event . world . BlockEvent . MultiPlaceEvent ; 
 import net . minecraftforge . event . world . BlockEvent . NeighborNotifyEvent ; 
 import net . minecraftforge . event . world . BlockEvent . PlaceEvent ; 
 + import net . minecraftforge . event . world . DetectorRailComparatorEvent ; 
 import net . minecraftforge . event . world . ExplosionEvent ; 
 import net . minecraftforge . event . world . WorldEvent ; 
 import net . minecraftforge . fml . common . ObfuscationReflectionHelper ; 
 @ @ - 585 , 4 + 587 , 11 @ @ public class ForgeEventFactory 
 return event . getTable ( ) ; 
 } 
 
 + public static int onDetectorRailCompare ( BlockPos pos , AxisAlignedBB box ) 
 + { 
 + DetectorRailComparatorEvent evt = new DetectorRailComparatorEvent ( pos , box ) ; 
 + MinecraftForge . EVENT _ BUS . post ( evt ) ; 
 + return evt . getRedstonePower ( ) ; 
 + } 
 + 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / world / DetectorRailComparatorEvent . java b / src / main / java / net / minecraftforge / event / world / DetectorRailComparatorEvent . java 
 new file mode 100644 
 index 0000000 . . 6848a6c 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / world / DetectorRailComparatorEvent . java 
 @ @ - 0 , 0 + 1 , 59 @ @ 
 + package net . minecraftforge . event . world ; 
 + 
 + import net . minecraft . util . math . AxisAlignedBB ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraftforge . fml . common . eventhandler . Event ; 
 + 
 + / * * 
 + * This event is fired serverside whenever a Detector Rail looks for a minecart to get a comparator value from 
 + * in { @ link net . minecraft . block . BlockRailDetector # getComparatorInputOverride } . 
 + * This event is not cancelable . 
 + * This event is fired on the { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } . 
 + * / 
 + public class DetectorRailComparatorEvent extends Event 
 + { 
 + 
 + private final BlockPos pos ; 
 + private final AxisAlignedBB searchBox ; 
 + private int redstonePower ; 
 + 
 + public DetectorRailComparatorEvent ( BlockPos pos , AxisAlignedBB searchBox ) 
 + { 
 + this . pos = pos ; 
 + this . searchBox = searchBox ; 
 + this . redstonePower = - 1 ; 
 + } 
 + 
 + / * * 
 + * @ return The position of the Detector Rail 
 + * / 
 + public BlockPos getPos ( ) 
 + { 
 + return pos ; 
 + } 
 + 
 + / * * 
 + * @ return The bounding box that is to be searched for minecarts 
 + * / 
 + public AxisAlignedBB getSearchBox ( ) 
 + { 
 + return searchBox ; 
 + } 
 + 
 + / * * 
 + * @ return The redstone signal strength to give the comparator . Values below 0 mean vanilla logic will run . 
 + * / 
 + public int getRedstonePower ( ) 
 + { 
 + return redstonePower ; 
 + } 
 + 
 + / * * 
 + * Set the redstone power to give the comparator . Values below 0 mean vanilla logic will run . 
 + * / 
 + public void setRedstonePower ( int redstonePower ) 
 + { 
 + this . redstonePower = redstonePower ; 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 index 6bd1efd . . 979435f 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 @ @ - 1 , 15 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java 
 + + + . . / src - work / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java 
 - @ @ - 12 , 6 + 12 , 8 @ @ 
 - import net . minecraft . nbt . NBTTagCompound ; 
 - import net . minecraft . nbt . NBTTagList ; 
 - import net . minecraft . potion . PotionHelper ; 
 - + import net . minecraftforge . common . MinecraftForge ; 
 - + import net . minecraftforge . event . brewing . PotionBrewedEvent ; 
 - 
 - public class TileEntityBrewingStand extends TileEntity implements ISidedInventory 
 - { 
 - @ @ - 104 , 7 + 106 , 7 @ @ 
 + @ @ - 104 , 7 + 104 , 7 @ @ 
 
 for ( int i = 0 ; i < 3 ; + + i ) 
 { 
 @ @ - 18 , 7 + 9 , 14 @ @ 
 { 
 int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; 
 int k = this . func _ 145936 _ c ( j , itemstack ) ; 
 - @ @ - 143 , 7 + 145 , 7 @ @ 
 + @ @ - 137 , 13 + 137 , 14 @ @ 
 + 
 + private void func _ 145940 _ l ( ) 
 + { 
 + + if ( net . minecraftforge . event . ForgeEventFactory . onPotionAttemptBreaw ( field _ 145945 _ j ) ) return ; 
 + if ( this . func _ 145934 _ k ( ) ) 
 + { 
 + ItemStack itemstack = this . field _ 145945 _ j [ 3 ] ; 
 
 for ( int i = 0 ; i < 3 ; + + i ) 
 { 
 @ @ - 27 , 7 + 25 , 7 @ @ 
 { 
 int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; 
 int k = this . func _ 145936 _ c ( j , itemstack ) ; 
 - @ @ - 164 , 9 + 166 , 9 @ @ 
 + @ @ - 164 , 9 + 165 , 9 @ @ 
 } 
 } 
 
 @ @ - 39 , 15 + 37 , 15 @ @ 
 } 
 else 
 { 
 - @ @ - 177 , 6 + 179 , 7 @ @ 
 + @ @ - 177 , 6 + 178 , 7 @ @ 
 this . field _ 145945 _ j [ 3 ] = null ; 
 } 
 } 
 - + MinecraftForge . EVENT _ BUS . post ( new PotionBrewedEvent ( field _ 145945 _ j ) ) ; 
 + + net . minecraftforge . event . ForgeEventFactory . onPotionBrewed ( field _ 145945 _ j ) ; 
 } 
 } 
 
 - @ @ - 292 , 7 + 295 , 7 @ @ 
 + @ @ - 292 , 7 + 294 , 7 @ @ 
 
 public boolean func _ 94041 _ b ( int p _ 94041 _ 1 _ , ItemStack p _ 94041 _ 2 _ ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 8dad798 . . 1765ada 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 18 , 6 + 18 , 7 @ @ import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . tileentity . TileEntityBrewingStand ; 
 import net . minecraft . world . Explosion ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . WorldServer ; 
 @ @ - 28 , 6 + 29 , 8 @ @ import net . minecraft . world . storage . SaveHandler ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . util . BlockSnapshot ; 
 import net . minecraftforge . common . util . ForgeDirection ; 
 + import net . minecraftforge . event . brewing . PotionBrewEvent ; 
 + import net . minecraftforge . event . brewing . PotionBrewedEvent ; 
 import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; 
 import net . minecraftforge . event . entity . living . LivingHealEvent ; 
 import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; 
 @ @ - 253 , 4 + 256 , 31 @ @ public class ForgeEventFactory 
 LivingHealEvent event = new LivingHealEvent ( entity , amount ) ; 
 return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . amount ) ; 
 } 
 + 
 + public static boolean onPotionAttemptBreaw ( ItemStack [ ] stacks ) 
 + { 
 + ItemStack [ ] tmp = new ItemStack [ stacks . length ] ; 
 + for ( int x = 0 ; x < tmp . length ; x + + ) 
 + tmp [ x ] = stacks [ x ] . copy ( ) ; 
 + 
 + PotionBrewEvent . Pre event = new PotionBrewEvent . Pre ( tmp ) ; 
 + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 + { 
 + boolean changed = false ; 
 + for ( int x = 0 ; x < stacks . length ; x + + ) 
 + { 
 + changed | = ItemStack . areItemStacksEqual ( tmp [ x ] , stacks [ x ] ) ; 
 + stacks [ x ] = event . getItem ( x ) ; 
 + } 
 + if ( changed ) 
 + onPotionBrewed ( stacks ) ; 
 + return true ; 
 + } 
 + return false ; 
 + } 
 + 
 + public static void onPotionBrewed ( ItemStack [ ] brewingItemStacks ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java 
 new file mode 100644 
 index 0000000 . . 1c26cd9 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java 
 @ @ - 0 , 0 + 1 , 83 @ @ 
 + package net . minecraftforge . event . brewing ; 
 + 
 + import net . minecraft . item . ItemStack ; 
 + import cpw . mods . fml . common . eventhandler . Cancelable ; 
 + import cpw . mods . fml . common . eventhandler . Event ; 
 + import cpw . mods . fml . common . eventhandler . Event . HasResult ; 
 + 
 + 
 + public class PotionBrewEvent extends Event 
 + { 
 + private ItemStack [ ] stacks ; 
 + 
 + protected PotionBrewEvent ( ItemStack [ ] stacks ) 
 + { 
 + this . stacks = stacks ; 
 + } 
 + 
 + public ItemStack getItem ( int index ) 
 + { 
 + if ( index > = stacks . length ) return null ; 
 + return stacks [ index ] ; 
 + } 
 + 
 + public void setItem ( int index , ItemStack stack ) 
 + { 
 + if ( index < stacks . length ) 
 + { 
 + stacks [ index ] = stack ; 
 + } 
 + } 
 + 
 + public int getLength ( ) 
 + { 
 + return stacks . length ; 
 + } 
 + 
 + / * * 
 + * PotionBrewEvent . Pre is fired before vanilla brewing takes place . 
 + * All changes made to the event ' s array will be made to the TileEntity if the event is canceled . 
 + * < br > 
 + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > 
 + * < br > 
 + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > 
 + * < br > 
 + * This event is { @ link Cancelable } . < br > 
 + * If the event is not canceled , the vanilla brewing will take place instead of modded brewing . 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 + * < br > 
 + * If this event is canceled , and items have been modified , PotionBrewEvent . Post will automatically be fired . 
 + * * / 
 + @ Cancelable 
 + public static class Pre extends PotionBrewEvent 
 + { 
 + public Pre ( ItemStack [ ] stacks ) 
 + { 
 + super ( stacks ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * PotionBrewEvent . Post is fired when a potion is brewed in the brewing stand . 
 + * < br > 
 + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > 
 + * < br > 
 + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > 
 + * < br > 
 + * This event is not { @ link Cancelable } . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 + * * / 
 + public static class Post extends PotionBrewedEvent 
 + { 
 + public Post ( ItemStack [ ] stacks ) 
 + { 
 + super ( stacks ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java 
 index 4af2825 . . e958684 100644 
 - - - a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package net . minecraftforge . event . brewing ; 
 
 + import cpw . mods . fml . common . eventhandler . Cancelable ; 
 import cpw . mods . fml . common . eventhandler . Event ; 
 import net . minecraft . item . ItemStack ; 
 
 @ @ - 16 , 14 + 17 , 18 @ @ import net . minecraft . item . ItemStack ; 
 * < br > 
 * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 * * / 
 - public class PotionBrewedEvent extends Event 
 + @ Deprecated / / Remove in 1 . 8 . 1 
 + public class PotionBrewedEvent extends PotionBrewEvent 
 { 
 / * * 
 * The brewing stacks in the brewing stand . Each index has the possibility to be null , so make sure you check . 
 + * Changing this array to another one has no effect . 
 * / 
 + @ Deprecated 
 public ItemStack [ ] brewingStacks ; 
 public PotionBrewedEvent ( ItemStack [ ] brewingStacks ) 
 { 
 + super ( brewingStacks ) ; 
 this . brewingStacks = brewingStacks ; 
 } 
 }
