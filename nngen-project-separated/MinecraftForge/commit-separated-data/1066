BLEU SCORE: 0.0028418304454033354

TEST MSG: Fix static initializer derp .
GENERATED MSG: Fix potential threading issue if FluidRegistry . loopupFluidForBlock is called from two threads at the same time before being setup . Closes # 936

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index dce949f . . 697d25b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ public abstract class FluidRegistry <nl> / / the globally unique fluid map - only used to associate non - defaults during world / server loading <nl> static BiMap < String , Fluid > masterFluidReference = HashBiMap . create ( ) ; <nl> static BiMap < String , String > defaultFluidName = HashBiMap . create ( ) ; <nl> + static Map < Fluid , FluidDelegate > delegates = Maps . newHashMap ( ) ; <nl> <nl> public static final Fluid WATER = new Fluid ( " water " ) { <nl> @ Override <nl> @ @ - 350 , 7 + 351 , 6 @ @ public abstract class FluidRegistry <nl> } <nl> } <nl> <nl> - private static Map < Fluid , FluidDelegate > delegates = Maps . newHashMap ( ) ; <nl> static RegistryDelegate < Fluid > makeDelegate ( Fluid fl ) <nl> { <nl> return delegates . get ( fl ) ;
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index b3a7e16 . . 4fb50d1 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 148 , 14 + 148 , 15 @ @ public abstract class FluidRegistry <nl> { <nl> if ( fluidBlocks = = null ) <nl> { <nl> - fluidBlocks = HashBiMap . create ( ) ; <nl> + BiMap < Block , Fluid > tmp = HashBiMap . create ( ) ; <nl> for ( Fluid fluid : fluids . values ( ) ) <nl> { <nl> if ( fluid . canBePlacedInWorld ( ) & & fluid . getBlock ( ) ! = null ) <nl> { <nl> - fluidBlocks . put ( fluid . getBlock ( ) , fluid ) ; <nl> + tmp . put ( fluid . getBlock ( ) , fluid ) ; <nl> } <nl> } <nl> + fluidBlocks = tmp ; <nl> } <nl> return fluidBlocks . get ( block ) ; <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index dce949f . . 697d25b 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 46 , 6 + 46 , 7 @ @ public abstract class FluidRegistry 
 / / the globally unique fluid map - only used to associate non - defaults during world / server loading 
 static BiMap < String , Fluid > masterFluidReference = HashBiMap . create ( ) ; 
 static BiMap < String , String > defaultFluidName = HashBiMap . create ( ) ; 
 + static Map < Fluid , FluidDelegate > delegates = Maps . newHashMap ( ) ; 
 
 public static final Fluid WATER = new Fluid ( " water " ) { 
 @ Override 
 @ @ - 350 , 7 + 351 , 6 @ @ public abstract class FluidRegistry 
 } 
 } 
 
 - private static Map < Fluid , FluidDelegate > delegates = Maps . newHashMap ( ) ; 
 static RegistryDelegate < Fluid > makeDelegate ( Fluid fl ) 
 { 
 return delegates . get ( fl ) ;

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index b3a7e16 . . 4fb50d1 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 148 , 14 + 148 , 15 @ @ public abstract class FluidRegistry 
 { 
 if ( fluidBlocks = = null ) 
 { 
 - fluidBlocks = HashBiMap . create ( ) ; 
 + BiMap < Block , Fluid > tmp = HashBiMap . create ( ) ; 
 for ( Fluid fluid : fluids . values ( ) ) 
 { 
 if ( fluid . canBePlacedInWorld ( ) & & fluid . getBlock ( ) ! = null ) 
 { 
 - fluidBlocks . put ( fluid . getBlock ( ) , fluid ) ; 
 + tmp . put ( fluid . getBlock ( ) , fluid ) ; 
 } 
 } 
 + fluidBlocks = tmp ; 
 } 
 return fluidBlocks . get ( block ) ; 
 }
