BLEU SCORE: 0.03149696072246703

TEST MSG: Splash progress screen will not load in the presence of optifine anymore .
GENERATED MSG: AllowPlayerLogins only after the server has completed the core init tasks . Closes # 372

TEST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> index 42a2027 . . 5a41a72 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> @ @ - 187 , 6 + 187 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void beginMinecraftLoading ( Minecraft minecraft , @ SuppressWarnings ( " rawtypes " ) List resourcePackList , IReloadableResourceManager resourceManager ) <nl> { <nl> + detectOptifine ( ) ; <nl> SplashProgress . start ( ) ; <nl> client = minecraft ; <nl> this . resourcePackList = resourcePackList ; <nl> @ @ - 202 , 19 + 203 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> FMLCommonHandler . instance ( ) . beginLoading ( this ) ; <nl> try <nl> { <nl> - Class < ? > optifineConfig = Class . forName ( " Config " , false , Loader . instance ( ) . getModClassLoader ( ) ) ; <nl> - String optifineVersion = ( String ) optifineConfig . getField ( " VERSION " ) . get ( null ) ; <nl> - Map < String , Object > dummyOptifineMeta = ImmutableMap . < String , Object > builder ( ) . put ( " name " , " Optifine " ) . put ( " version " , optifineVersion ) . build ( ) ; <nl> - ModMetadata optifineMetadata = MetadataCollection . from ( getClass ( ) . getResourceAsStream ( " optifinemod . info " ) , " optifine " ) . getMetadataForId ( " optifine " , dummyOptifineMeta ) ; <nl> - optifineContainer = new DummyModContainer ( optifineMetadata ) ; <nl> - FMLLog . info ( " Forge Mod Loader has detected optifine % s , enabling compatibility features " , optifineContainer . getVersion ( ) ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - optifineContainer = null ; <nl> - } <nl> - try <nl> - { <nl> Loader . instance ( ) . loadMods ( ) ; <nl> } <nl> catch ( WrongMinecraftVersionException wrong ) <nl> @ @ - 279 , 6 + 267 , 23 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> } <nl> } <nl> <nl> + private void detectOptifine ( ) <nl> + { <nl> + try <nl> + { <nl> + Class < ? > optifineConfig = Class . forName ( " Config " , false , Loader . instance ( ) . getModClassLoader ( ) ) ; <nl> + String optifineVersion = ( String ) optifineConfig . getField ( " VERSION " ) . get ( null ) ; <nl> + Map < String , Object > dummyOptifineMeta = ImmutableMap . < String , Object > builder ( ) . put ( " name " , " Optifine " ) . put ( " version " , optifineVersion ) . build ( ) ; <nl> + ModMetadata optifineMetadata = MetadataCollection . from ( getClass ( ) . getResourceAsStream ( " optifinemod . info " ) , " optifine " ) . getMetadataForId ( " optifine " , dummyOptifineMeta ) ; <nl> + optifineContainer = new DummyModContainer ( optifineMetadata ) ; <nl> + FMLLog . info ( " Forge Mod Loader has detected optifine % s , enabling compatibility features " , optifineContainer . getVersion ( ) ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + optifineContainer = null ; <nl> + } <nl> + } <nl> + <nl> @ Override <nl> public void haltGame ( String message , Throwable t ) <nl> { <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java <nl> index 2d4354a . . defb8df 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class SplashProgress <nl> private static ResourceLocation configLocation = new ResourceLocation ( " fml " , " splash . properties " ) ; <nl> private static final Properties config = loadConfig ( ) ; <nl> <nl> - private static final boolean enabled = Boolean . parseBoolean ( config . getProperty ( " enabled " ) ) ; <nl> + private static final boolean enabled = Boolean . parseBoolean ( config . getProperty ( " enabled " ) ) & & ! FMLClientHandler . instance ( ) . hasOptifine ( ) ; <nl> private static final boolean rotate = Boolean . parseBoolean ( config . getProperty ( " rotate " ) ) ; <nl> private static final int logoOffset = getInt ( " logoOffset " ) ; <nl> private static final int backgroundColor = getInt ( " background " ) ;
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> index a89788b . . 10c0aef 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> @ @ - 40 , 12 + 40 , 11 @ @ <nl> field _ 155771 _ h . info ( " Preparing level \ " " + this . func _ 71270 _ I ( ) + " \ " " ) ; <nl> this . func _ 71247 _ a ( this . func _ 71270 _ I ( ) , this . func _ 71270 _ I ( ) , k , worldtype , s2 ) ; <nl> long i1 = System . nanoTime ( ) - j ; <nl> - @ @ - 268 , 7 + 274 , 8 @ @ <nl> + @ @ - 268 , 7 + 274 , 7 @ @ <nl> this . field _ 71339 _ n . func _ 72602 _ a ( ) ; <nl> } <nl> <nl> - return true ; <nl> - + allowPlayerLogins = true ; <nl> + return FMLCommonHandler . instance ( ) . handleServerStarting ( this ) ; <nl> } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> index 889b6d3 . . 217ca15 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java <nl> @ @ - 146 , 7 + 146 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> <nl> private CustomModLoadingErrorDisplayException customError ; <nl> <nl> - 	 private DuplicateModsFoundException dupesFound ; <nl> + private DuplicateModsFoundException dupesFound ; <nl> <nl> private boolean serverShouldBeKilledQuietly ; <nl> <nl> @ @ - 209 , 7 + 209 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> } <nl> catch ( DuplicateModsFoundException dupes ) <nl> { <nl> - 	 dupesFound = dupes ; <nl> + dupesFound = dupes ; <nl> } <nl> catch ( MissingModsException missing ) <nl> { <nl> @ @ - 371 , 9 + 371 , 9 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> showGuiScreen ( new GuiSortingProblem ( modSorting ) ) ; <nl> } <nl> - 	 	 else if ( customError ! = null ) <nl> + else if ( customError ! = null ) <nl> { <nl> - 	 	 showGuiScreen ( new GuiCustomModLoadingErrorScreen ( customError ) ) ; <nl> + showGuiScreen ( new GuiCustomModLoadingErrorScreen ( customError ) ) ; <nl> } <nl> else <nl> { <nl> @ @ - 870 , 4 + 870 , 9 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> return true ; / / Always true as the server has to be started before clicking ' Open to lan ' <nl> } <nl> + <nl> + @ Override <nl> + public void allowLogins ( ) { <nl> + / / NOOP for integrated server <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> index 906e8d4 . . 4c74039 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java <nl> @ @ - 215 , 7 + 215 , 7 @ @ public class FMLCommonHandler <nl> } <nl> if ( sidedDelegate ! = null ) <nl> { <nl> - 	 brd . addAll ( sidedDelegate . getAdditionalBrandingInformation ( ) ) ; <nl> + brd . addAll ( sidedDelegate . getAdditionalBrandingInformation ( ) ) ; <nl> } <nl> if ( Loader . instance ( ) . getFMLBrandingProperties ( ) . containsKey ( " fmlbranding " ) ) <nl> { <nl> @ @ - 281 , 6 + 281 , 7 @ @ public class FMLCommonHandler <nl> public void handleServerStarted ( ) <nl> { <nl> Loader . instance ( ) . serverStarted ( ) ; <nl> + sidedDelegate . allowLogins ( ) ; <nl> } <nl> <nl> public void handleServerStopping ( ) <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java <nl> index 3ab8795 . . ec230f3 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java <nl> @ @ - 59 , 4 + 59 , 6 @ @ public interface IFMLSidedHandler <nl> void fireNetRegistrationEvent ( EventBus bus , NetworkManager manager , Set < String > channelSet , String channel , Side side ) ; <nl> <nl> boolean shouldAllowPlayerLogins ( ) ; <nl> + <nl> + void allowLogins ( ) ; <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java <nl> index 3692c66 . . 91eb2c7 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java <nl> @ @ - 259 , 4 + 259 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> return DedicatedServer . allowPlayerLogins ; <nl> } <nl> + <nl> + @ Override <nl> + public void allowLogins ( ) { <nl> + DedicatedServer . allowPlayerLogins = true ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 index 42a2027 . . 5a41a72 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 @ @ - 187 , 6 + 187 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 @ SuppressWarnings ( " unchecked " ) 
 public void beginMinecraftLoading ( Minecraft minecraft , @ SuppressWarnings ( " rawtypes " ) List resourcePackList , IReloadableResourceManager resourceManager ) 
 { 
 + detectOptifine ( ) ; 
 SplashProgress . start ( ) ; 
 client = minecraft ; 
 this . resourcePackList = resourcePackList ; 
 @ @ - 202 , 19 + 203 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 FMLCommonHandler . instance ( ) . beginLoading ( this ) ; 
 try 
 { 
 - Class < ? > optifineConfig = Class . forName ( " Config " , false , Loader . instance ( ) . getModClassLoader ( ) ) ; 
 - String optifineVersion = ( String ) optifineConfig . getField ( " VERSION " ) . get ( null ) ; 
 - Map < String , Object > dummyOptifineMeta = ImmutableMap . < String , Object > builder ( ) . put ( " name " , " Optifine " ) . put ( " version " , optifineVersion ) . build ( ) ; 
 - ModMetadata optifineMetadata = MetadataCollection . from ( getClass ( ) . getResourceAsStream ( " optifinemod . info " ) , " optifine " ) . getMetadataForId ( " optifine " , dummyOptifineMeta ) ; 
 - optifineContainer = new DummyModContainer ( optifineMetadata ) ; 
 - FMLLog . info ( " Forge Mod Loader has detected optifine % s , enabling compatibility features " , optifineContainer . getVersion ( ) ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - optifineContainer = null ; 
 - } 
 - try 
 - { 
 Loader . instance ( ) . loadMods ( ) ; 
 } 
 catch ( WrongMinecraftVersionException wrong ) 
 @ @ - 279 , 6 + 267 , 23 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 } 
 } 
 
 + private void detectOptifine ( ) 
 + { 
 + try 
 + { 
 + Class < ? > optifineConfig = Class . forName ( " Config " , false , Loader . instance ( ) . getModClassLoader ( ) ) ; 
 + String optifineVersion = ( String ) optifineConfig . getField ( " VERSION " ) . get ( null ) ; 
 + Map < String , Object > dummyOptifineMeta = ImmutableMap . < String , Object > builder ( ) . put ( " name " , " Optifine " ) . put ( " version " , optifineVersion ) . build ( ) ; 
 + ModMetadata optifineMetadata = MetadataCollection . from ( getClass ( ) . getResourceAsStream ( " optifinemod . info " ) , " optifine " ) . getMetadataForId ( " optifine " , dummyOptifineMeta ) ; 
 + optifineContainer = new DummyModContainer ( optifineMetadata ) ; 
 + FMLLog . info ( " Forge Mod Loader has detected optifine % s , enabling compatibility features " , optifineContainer . getVersion ( ) ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + optifineContainer = null ; 
 + } 
 + } 
 + 
 @ Override 
 public void haltGame ( String message , Throwable t ) 
 { 
 diff - - git a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java 
 index 2d4354a . . defb8df 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / SplashProgress . java 
 @ @ - 68 , 7 + 68 , 7 @ @ public class SplashProgress 
 private static ResourceLocation configLocation = new ResourceLocation ( " fml " , " splash . properties " ) ; 
 private static final Properties config = loadConfig ( ) ; 
 
 - private static final boolean enabled = Boolean . parseBoolean ( config . getProperty ( " enabled " ) ) ; 
 + private static final boolean enabled = Boolean . parseBoolean ( config . getProperty ( " enabled " ) ) & & ! FMLClientHandler . instance ( ) . hasOptifine ( ) ; 
 private static final boolean rotate = Boolean . parseBoolean ( config . getProperty ( " rotate " ) ) ; 
 private static final int logoOffset = getInt ( " logoOffset " ) ; 
 private static final int backgroundColor = getInt ( " background " ) ;

NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 index a89788b . . 10c0aef 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 @ @ - 40 , 12 + 40 , 11 @ @ 
 field _ 155771 _ h . info ( " Preparing level \ " " + this . func _ 71270 _ I ( ) + " \ " " ) ; 
 this . func _ 71247 _ a ( this . func _ 71270 _ I ( ) , this . func _ 71270 _ I ( ) , k , worldtype , s2 ) ; 
 long i1 = System . nanoTime ( ) - j ; 
 - @ @ - 268 , 7 + 274 , 8 @ @ 
 + @ @ - 268 , 7 + 274 , 7 @ @ 
 this . field _ 71339 _ n . func _ 72602 _ a ( ) ; 
 } 
 
 - return true ; 
 - + allowPlayerLogins = true ; 
 + return FMLCommonHandler . instance ( ) . handleServerStarting ( this ) ; 
 } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 index 889b6d3 . . 217ca15 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / client / FMLClientHandler . java 
 @ @ - 146 , 7 + 146 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 
 private CustomModLoadingErrorDisplayException customError ; 
 
 - 	 private DuplicateModsFoundException dupesFound ; 
 + private DuplicateModsFoundException dupesFound ; 
 
 private boolean serverShouldBeKilledQuietly ; 
 
 @ @ - 209 , 7 + 209 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 } 
 catch ( DuplicateModsFoundException dupes ) 
 { 
 - 	 dupesFound = dupes ; 
 + dupesFound = dupes ; 
 } 
 catch ( MissingModsException missing ) 
 { 
 @ @ - 371 , 9 + 371 , 9 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 showGuiScreen ( new GuiSortingProblem ( modSorting ) ) ; 
 } 
 - 	 	 else if ( customError ! = null ) 
 + else if ( customError ! = null ) 
 { 
 - 	 	 showGuiScreen ( new GuiCustomModLoadingErrorScreen ( customError ) ) ; 
 + showGuiScreen ( new GuiCustomModLoadingErrorScreen ( customError ) ) ; 
 } 
 else 
 { 
 @ @ - 870 , 4 + 870 , 9 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 return true ; / / Always true as the server has to be started before clicking ' Open to lan ' 
 } 
 + 
 + @ Override 
 + public void allowLogins ( ) { 
 + / / NOOP for integrated server 
 + } 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 index 906e8d4 . . 4c74039 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / FMLCommonHandler . java 
 @ @ - 215 , 7 + 215 , 7 @ @ public class FMLCommonHandler 
 } 
 if ( sidedDelegate ! = null ) 
 { 
 - 	 brd . addAll ( sidedDelegate . getAdditionalBrandingInformation ( ) ) ; 
 + brd . addAll ( sidedDelegate . getAdditionalBrandingInformation ( ) ) ; 
 } 
 if ( Loader . instance ( ) . getFMLBrandingProperties ( ) . containsKey ( " fmlbranding " ) ) 
 { 
 @ @ - 281 , 6 + 281 , 7 @ @ public class FMLCommonHandler 
 public void handleServerStarted ( ) 
 { 
 Loader . instance ( ) . serverStarted ( ) ; 
 + sidedDelegate . allowLogins ( ) ; 
 } 
 
 public void handleServerStopping ( ) 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java 
 index 3ab8795 . . ec230f3 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / IFMLSidedHandler . java 
 @ @ - 59 , 4 + 59 , 6 @ @ public interface IFMLSidedHandler 
 void fireNetRegistrationEvent ( EventBus bus , NetworkManager manager , Set < String > channelSet , String channel , Side side ) ; 
 
 boolean shouldAllowPlayerLogins ( ) ; 
 + 
 + void allowLogins ( ) ; 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java 
 index 3692c66 . . 91eb2c7 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java 
 + + + b / fml / src / main / java / cpw / mods / fml / server / FMLServerHandler . java 
 @ @ - 259 , 4 + 259 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 return DedicatedServer . allowPlayerLogins ; 
 } 
 + 
 + @ Override 
 + public void allowLogins ( ) { 
 + DedicatedServer . allowPlayerLogins = true ; 
 + } 
 }
