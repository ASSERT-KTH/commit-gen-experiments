BLEU SCORE: 0.014262733286728259

TEST MSG: Modified SimpleModelState to ignore the parts it doesn ' t know about . Fixes model part hiding always applying to some models when transformations are specified in the blockstate json .
GENERATED MSG: Removed blockCenterToCorner from TRSRTransformation constructor . Closes # 2461 .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / SimpleModelState . java b / src / main / java / net / minecraftforge / client / model / SimpleModelState . java <nl> index 2f52a66 . . 9497605 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / SimpleModelState . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / SimpleModelState . java <nl> @ @ - 28 , 7 + 28 , 14 @ @ public final class SimpleModelState implements IModelState <nl> <nl> public Optional < TRSRTransformation > apply ( Optional < ? extends IModelPart > part ) <nl> { <nl> - if ( ! part . isPresent ( ) | | ! map . containsKey ( part . get ( ) ) ) return def ; <nl> + if ( ! part . isPresent ( ) ) <nl> + { <nl> + return def ; <nl> + } <nl> + if ( ! map . containsKey ( part . get ( ) ) ) <nl> + { <nl> + return Optional . absent ( ) ; <nl> + } <nl> return Optional . fromNullable ( map . get ( part . get ( ) ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 6e6f59c . . 45ef4d4 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 597 , 7 + 597 , 7 @ @ public class ForgeHooksClient <nl> public static Optional < TRSRTransformation > applyTransform ( net . minecraft . client . renderer . block . model . ItemTransformVec3f transform , Optional < ? extends IModelPart > part ) <nl> { <nl> if ( part . isPresent ( ) ) return Optional . absent ( ) ; <nl> - return Optional . of ( new TRSRTransformation ( transform ) ) ; <nl> + return Optional . of ( TRSRTransformation . blockCenterToCorner ( new TRSRTransformation ( transform ) ) ) ; <nl> } <nl> <nl> public static Optional < TRSRTransformation > applyTransform ( Matrix4f matrix , Optional < ? extends IModelPart > part ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java b / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java <nl> index 2c529f9 . . fae2959 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java <nl> @ @ - 68 , 7 + 68 , 7 @ @ public interface IPerspectiveAwareModel extends IBakedModel <nl> ImmutableMap . Builder < TransformType , TRSRTransformation > builder = ImmutableMap . builder ( ) ; <nl> for ( TransformType type : TransformType . values ( ) ) <nl> { <nl> - builder . put ( type , new TRSRTransformation ( transforms . getTransform ( type ) ) ) ; <nl> + builder . put ( type , TRSRTransformation . blockCenterToCorner ( new TRSRTransformation ( transforms . getTransform ( type ) ) ) ) ; <nl> } <nl> return builder . build ( ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java b / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java <nl> index 91ddf6c . . 77ecb62 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java <nl> + + + b / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java <nl> @ @ - 73 , 15 + 73 , 7 @ @ public final class TRSRTransformation implements IModelState , ITransformation <nl> @ SideOnly ( Side . CLIENT ) <nl> public TRSRTransformation ( net . minecraft . client . renderer . block . model . ItemTransformVec3f transform ) <nl> { <nl> - this ( getMatrix ( transform ) ) ; <nl> - } <nl> - <nl> - @ Deprecated <nl> - @ SideOnly ( Side . CLIENT ) <nl> - public static Matrix4f getMatrix ( net . minecraft . client . renderer . block . model . ItemTransformVec3f transform ) <nl> - { <nl> - TRSRTransformation ret = new TRSRTransformation ( toVecmath ( transform . translation ) , quatFromXYZDegrees ( toVecmath ( transform . rotation ) ) , toVecmath ( transform . scale ) , null ) ; <nl> - return blockCenterToCorner ( ret ) . getMatrix ( ) ; <nl> + this ( toVecmath ( transform . translation ) , quatFromXYZDegrees ( toVecmath ( transform . rotation ) ) , toVecmath ( transform . scale ) , null ) ; <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / SimpleModelState . java b / src / main / java / net / minecraftforge / client / model / SimpleModelState . java 
 index 2f52a66 . . 9497605 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / SimpleModelState . java 
 + + + b / src / main / java / net / minecraftforge / client / model / SimpleModelState . java 
 @ @ - 28 , 7 + 28 , 14 @ @ public final class SimpleModelState implements IModelState 
 
 public Optional < TRSRTransformation > apply ( Optional < ? extends IModelPart > part ) 
 { 
 - if ( ! part . isPresent ( ) | | ! map . containsKey ( part . get ( ) ) ) return def ; 
 + if ( ! part . isPresent ( ) ) 
 + { 
 + return def ; 
 + } 
 + if ( ! map . containsKey ( part . get ( ) ) ) 
 + { 
 + return Optional . absent ( ) ; 
 + } 
 return Optional . fromNullable ( map . get ( part . get ( ) ) ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 6e6f59c . . 45ef4d4 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 597 , 7 + 597 , 7 @ @ public class ForgeHooksClient 
 public static Optional < TRSRTransformation > applyTransform ( net . minecraft . client . renderer . block . model . ItemTransformVec3f transform , Optional < ? extends IModelPart > part ) 
 { 
 if ( part . isPresent ( ) ) return Optional . absent ( ) ; 
 - return Optional . of ( new TRSRTransformation ( transform ) ) ; 
 + return Optional . of ( TRSRTransformation . blockCenterToCorner ( new TRSRTransformation ( transform ) ) ) ; 
 } 
 
 public static Optional < TRSRTransformation > applyTransform ( Matrix4f matrix , Optional < ? extends IModelPart > part ) 
 diff - - git a / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java b / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java 
 index 2c529f9 . . fae2959 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java 
 + + + b / src / main / java / net / minecraftforge / client / model / IPerspectiveAwareModel . java 
 @ @ - 68 , 7 + 68 , 7 @ @ public interface IPerspectiveAwareModel extends IBakedModel 
 ImmutableMap . Builder < TransformType , TRSRTransformation > builder = ImmutableMap . builder ( ) ; 
 for ( TransformType type : TransformType . values ( ) ) 
 { 
 - builder . put ( type , new TRSRTransformation ( transforms . getTransform ( type ) ) ) ; 
 + builder . put ( type , TRSRTransformation . blockCenterToCorner ( new TRSRTransformation ( transforms . getTransform ( type ) ) ) ) ; 
 } 
 return builder . build ( ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java b / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java 
 index 91ddf6c . . 77ecb62 100644 
 - - - a / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java 
 + + + b / src / main / java / net / minecraftforge / common / model / TRSRTransformation . java 
 @ @ - 73 , 15 + 73 , 7 @ @ public final class TRSRTransformation implements IModelState , ITransformation 
 @ SideOnly ( Side . CLIENT ) 
 public TRSRTransformation ( net . minecraft . client . renderer . block . model . ItemTransformVec3f transform ) 
 { 
 - this ( getMatrix ( transform ) ) ; 
 - } 
 - 
 - @ Deprecated 
 - @ SideOnly ( Side . CLIENT ) 
 - public static Matrix4f getMatrix ( net . minecraft . client . renderer . block . model . ItemTransformVec3f transform ) 
 - { 
 - TRSRTransformation ret = new TRSRTransformation ( toVecmath ( transform . translation ) , quatFromXYZDegrees ( toVecmath ( transform . rotation ) ) , toVecmath ( transform . scale ) , null ) ; 
 - return blockCenterToCorner ( ret ) . getMatrix ( ) ; 
 + this ( toVecmath ( transform . translation ) , quatFromXYZDegrees ( toVecmath ( transform . rotation ) ) , toVecmath ( transform . scale ) , null ) ; 
 } 
 
 @ SideOnly ( Side . CLIENT )
