BLEU SCORE: 0.21972813874997157

TEST MSG: fix ( server : sequence ) : broadcastClientUpdate should not push to current authSid
GENERATED MSG: fix ( server : push ) : exclude auth sid of sender

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala < nl > index 318b47f . . 1190217 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala < nl > @ @ - 189 , 7 + 189 , 7 @ @ private [ user ] sealed trait Commands extends AuthCommands { < nl > seqUpdExt . deliverSingleUpdate ( < nl > userId = clientUserId , < nl > update = update , < nl > - pushRules = PushRules ( isFat = isFat ) . withData ( PushData ( ) . withText ( pushText . getOrElse ( " " ) ) ) , < nl > + pushRules = PushRules ( isFat = isFat , excludeAuthSids = Seq ( clientAuthSid ) ) . withData ( PushData ( ) . withText ( pushText . getOrElse ( " " ) ) ) , < nl > deliveryId = deliveryId . getOrElse ( " " ) < nl > )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala < nl > index 71c4080 . . b7d0db9 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala < nl > @ @ - 80 , 7 + 80 , 7 @ @ final class ActorDelivery ( ) ( implicit val system : ActorSystem ) < nl > userId = senderUserId , < nl > default = Some ( senderUpdate ) , < nl > custom = Map ( senderAuthSid → senderClientUpdate ) , < nl > - pushRules = PushRules ( isFat = isFat ) , < nl > + pushRules = PushRules ( isFat = isFat , excludeAuthSids = Seq ( senderAuthSid ) ) , < nl > deliveryId = s " msg _ $ { peer . toString } _ $ randomId " < nl > ) < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala 
 index 318b47f . . 1190217 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserOperations . scala 
 @ @ - 189 , 7 + 189 , 7 @ @ private [ user ] sealed trait Commands extends AuthCommands { 
 seqUpdExt . deliverSingleUpdate ( 
 userId = clientUserId , 
 update = update , 
 - pushRules = PushRules ( isFat = isFat ) . withData ( PushData ( ) . withText ( pushText . getOrElse ( " " ) ) ) , 
 + pushRules = PushRules ( isFat = isFat , excludeAuthSids = Seq ( clientAuthSid ) ) . withData ( PushData ( ) . withText ( pushText . getOrElse ( " " ) ) ) , 
 deliveryId = deliveryId . getOrElse ( " " ) 
 )

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala 
 index 71c4080 . . b7d0db9 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / ActorDelivery . scala 
 @ @ - 80 , 7 + 80 , 7 @ @ final class ActorDelivery ( ) ( implicit val system : ActorSystem ) 
 userId = senderUserId , 
 default = Some ( senderUpdate ) , 
 custom = Map ( senderAuthSid → senderClientUpdate ) , 
 - pushRules = PushRules ( isFat = isFat ) , 
 + pushRules = PushRules ( isFat = isFat , excludeAuthSids = Seq ( senderAuthSid ) ) , 
 deliveryId = s " msg _ $ { peer . toString } _ $ randomId " 
 ) 
 }
