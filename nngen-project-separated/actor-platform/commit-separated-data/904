BLEU SCORE: 0.05439330544349821

TEST MSG: fix + feat ( runtime + ios + android ) : Implemented Dispatchers and fixing iOS build
GENERATED MSG: wip ( js + core ) : Integration of WebRTC

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > index 2ee242b . . 51aae70 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > @ @ - 22 , 7 + 22 , 7 @ @ import java . util . List ; < nl > < nl > import im . actor . core . AndroidMessenger ; < nl > import im . actor . core . Messenger ; < nl > - import im . actor . core . notifications . NotificationProvider ; < nl > + import im . actor . core . providers . NotificationProvider ; < nl > import im . actor . core . entity . Avatar ; < nl > import im . actor . core . entity . Notification ; < nl > import im . actor . core . entity . Peer ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java < nl > index 3a90f16 . . 241a93a 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java < nl > @ @ - 18 , 7 + 18 , 7 @ @ import java . util . HashMap ; < nl > import java . util . HashSet ; < nl > < nl > import im . actor . sdk . util . Devices ; < nl > - import im . actor . core . phonebook . PhoneBookProvider ; < nl > + import im . actor . core . providers . PhoneBookProvider ; < nl > import im . actor . core . entity . PhoneBookContact ; < nl > import im . actor . core . entity . PhoneBookEmail ; < nl > import im . actor . core . entity . PhoneBookPhone ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile < nl > index 47d2bb5 . . 4f4a784 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile < nl > @ @ - 69 , 6 + 69 , 34 @ @ endef < nl > define EOL < nl > < nl > < nl > + < nl > + < nl > + endef < nl > + < nl > + < nl > + define long _ list _ to _ file < nl > + @ if [ - e $ ( 1 ) ] ; then rm $ ( 1 ) ; fi < nl > + @ files = ' $ ( wordlist 1 , 499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 500 , 999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 1000 , 1499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 1500 , 1999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 2000 , 2499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 2500 , 2999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 3000 , 3499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 3500 , 3999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 4000 , 4499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 4500 , 4999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 5000 , 5499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 5500 , 5999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 6000 , 6499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 6500 , 6999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 7000 , 7499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 7500 , 7999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 8000 , 8499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 8500 , 8999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 9000 , 9499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ files = ' $ ( wordlist 9500 , 9999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done < nl > + @ if [ ! - e $ ( 1 ) ] ; then touch $ ( 1 ) ; fi < nl > endef < nl > < nl > # Build Tasks < nl > @ @ - 102 , 10 + 130 , 11 @ @ $ ( foreach root , $ ( SOURCE _ ROOTS ) , $ ( eval $ ( call SOURCE _ ROOT _ RULE , $ ( root ) ) ) ) < nl > # @ rm - f $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) < nl > # $ ( call max _ args , @ ar crv $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) , 2 , $ ( OBJECT _ FILES ) ) < nl > # @ $ ( call max _ args , ar rcs $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) , 1100 , $ ( OBJECT _ FILES ) ) < nl > + < nl > build : $ ( OBJ _ DIR ) $ ( OBJECT _ FILES ) < nl > 	 @ rm - f $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) < nl > - 	 @ ar rcs $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) $ ( OBJECT _ FILES ) < nl > - 	 @ ranlib $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) < nl > + 	 $ ( call long _ list _ to _ file , $ ( OBJ _ DIR ) / _ objs _ list , $ ( OBJECT _ FILES ) ) < nl > + 	 @ libtool - static - o $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) - filelist $ ( OBJ _ DIR ) / _ objs _ list < nl > < nl > $ ( OBJ _ DIR ) / % . o : $ ( SOURCES _ DIR ) / % . m < nl > 	 @ mkdir - p $ ( dir $ @ ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 3c0191a . . 27fb0b8 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 105 , 9 + 105 , 6 @ @ public class ActorSDK { < nl > / / / Web Invite Domain host < nl > public var inviteUrlHost : String ? = nil < nl > < nl > - / / / Extensions < nl > - private var extensions = [ ActorExtension ] ( ) < nl > - < nl > / / / Enable experimental features < nl > public var enableExperimentalFeatures : Bool = false < nl > < nl > @ @ - 138 , 14 + 135 , 6 @ @ public class ActorSDK { < nl > / / Reachability < nl > private var reachability : Reachability ! < nl > < nl > - / / < nl > - / / Initialization < nl > - / / < nl > - < nl > - public func registerExtension ( key : String , ext : ACExtension ) { < nl > - extensions . append ( ActorExtension ( key : key , ext : ext ) ) < nl > - } < nl > - < nl > public func createActor ( ) { < nl > < nl > if isStarted { < nl > @ @ - 188 , 11 + 177 , 6 @ @ public class ActorSDK { < nl > log ( " Found time zone : \ ( timeZone ) " ) < nl > builder . setTimeZone ( timeZone ) < nl > < nl > - / / Extensions < nl > - for ex in extensions { < nl > - builder . addExtensionWithNSString ( ex . key , withACExtension : ex . ext ) < nl > - } < nl > - < nl > / / Logs < nl > / / builder . setEnableFilesLogging ( true ) < nl > < nl > @ @ - 700 , 14 + 684 , 4 @ @ public enum AAAutoPush { < nl > case None < nl > case FromStart < nl > case AfterLogin < nl > - } < nl > - < nl > - class ActorExtension { < nl > - let key : String < nl > - let ext : ACExtension < nl > - < nl > - init ( key : String , ext : ACExtension ) { < nl > - self . key = key < nl > - self . ext = ext < nl > - } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties b / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties < nl > index 6fc1adf . . 6e82a8e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties < nl > + + + b / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties < nl > @ @ - 40 , 6 + 40 , 8 @ @ im . actor . core . modules . internal . users : AC < nl > < nl > im . actor . core . i18n : AC < nl > < nl > + im . actor . core . providers : AC < nl > + < nl > im . actor . core . entity : AC < nl > im . actor . core . entity . compat : AC < nl > im . actor . core . entity . compat . content : AC < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > index 7312a54 . . 3426e87 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > @ @ - 16 , 7 + 16 , 7 @ @ import im . actor . core . js . JsMessenger ; < nl > import im . actor . core . js . providers . electron . JsElectronApp ; < nl > import im . actor . core . js . providers . notification . JsManagedNotification ; < nl > import im . actor . core . js . providers . notification . JsNotification ; < nl > - import im . actor . core . notifications . NotificationProvider ; < nl > + import im . actor . core . providers . NotificationProvider ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java < nl > index f648753 . . f6b81af 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java < nl > @ @ - 7 , 7 + 7 , 7 @ @ package im . actor . core . js . providers ; < nl > import java . util . ArrayList ; < nl > < nl > import im . actor . core . entity . PhoneBookContact ; < nl > - import im . actor . core . phonebook . PhoneBookProvider ; < nl > + import im . actor . core . providers . PhoneBookProvider ; < nl > < nl > public class JsPhoneBookProvider implements PhoneBookProvider { < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > index dc0aa16 . . 2bf1337 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > @ @ - 5 , 8 + 5 , 8 @ @ < nl > package im . actor . core ; < nl > < nl > import im . actor . core . network . TrustedKey ; < nl > - import im . actor . core . notifications . NotificationProvider ; < nl > - import im . actor . core . phonebook . PhoneBookProvider ; < nl > + import im . actor . core . providers . NotificationProvider ; < nl > + import im . actor . core . providers . PhoneBookProvider ; < nl > import im . actor . core . webrtc . WebRTCProvider ; < nl > import im . actor . runtime . mtproto . ConnectionEndpoint ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > index 22e4ca7 . . 0b4e8cf 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > @ @ - 11 , 8 + 11 , 8 @ @ import org . jetbrains . annotations . NotNull ; < nl > import java . util . ArrayList ; < nl > < nl > import im . actor . core . network . TrustedKey ; < nl > - import im . actor . core . notifications . NotificationProvider ; < nl > - import im . actor . core . phonebook . PhoneBookProvider ; < nl > + import im . actor . core . providers . NotificationProvider ; < nl > + import im . actor . core . providers . PhoneBookProvider ; < nl > import im . actor . core . webrtc . WebRTCProvider ; < nl > import im . actor . runtime . Crypto ; < nl > import im . actor . runtime . Log ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > index cc505b9 . . eb20fef 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > @ @ - 8 , 7 + 8 , 7 @ @ import java . util . ArrayList ; < nl > import java . util . HashSet ; < nl > import java . util . List ; < nl > < nl > - import im . actor . core . phonebook . PhoneBookProvider ; < nl > + import im . actor . core . providers . PhoneBookProvider ; < nl > import im . actor . core . api . ApiEmailToImport ; < nl > import im . actor . core . api . ApiGroup ; < nl > import im . actor . core . api . ApiPhoneToImport ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / notifications / NotificationProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / notifications / NotificationProvider . java < nl > deleted file mode 100644 < nl > index 5f9bc31 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / notifications / NotificationProvider . java < nl > + + + / dev / null < nl > @ @ - 1 , 54 + 0 , 0 @ @ < nl > - / * < nl > - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - * / < nl > - < nl > - package im . actor . core . notifications ; < nl > - < nl > - import com . google . j2objc . annotations . ObjectiveCName ; < nl > - < nl > - import java . util . List ; < nl > - < nl > - import im . actor . core . Messenger ; < nl > - import im . actor . core . entity . Notification ; < nl > - < nl > - / * * < nl > - * Provider for notifications support < nl > - * / < nl > - public interface NotificationProvider { < nl > - / * * < nl > - * Called when message arrive when user is in app ( used for play in app sound ) . < nl > - * < nl > - * @ param messenger Messenger object < nl > - * / < nl > - @ ObjectiveCName ( " onMessageArriveInAppWithMessenger : " ) < nl > - void onMessageArriveInApp ( Messenger messenger ) ; < nl > - < nl > - / * * < nl > - * On background notification < nl > - * < nl > - * @ param messenger Messenger object < nl > - * @ param topNotifications top 10 notifications < nl > - * @ param messagesCount total messages count < nl > - * @ param conversationsCount total conversations count < nl > - * / < nl > - @ ObjectiveCName ( " onNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) < nl > - void onNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) ; < nl > - < nl > - / * * < nl > - * On Notification panel update < nl > - * < nl > - * @ param messenger Messenger object < nl > - * @ param topNotifications top 10 notifications < nl > - * @ param messagesCount total messages count < nl > - * @ param conversationsCount total conversations count < nl > - * / < nl > - @ ObjectiveCName ( " onUpdateNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) < nl > - void onUpdateNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , < nl > - int conversationsCount ) ; < nl > - < nl > - / * * < nl > - * Hide all notifications < nl > - * / < nl > - @ ObjectiveCName ( " hideAllNotifications " ) < nl > - void hideAllNotifications ( ) ; < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / phonebook / PhoneBookProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / phonebook / PhoneBookProvider . java < nl > deleted file mode 100644 < nl > index 4ee0037 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / phonebook / PhoneBookProvider . java < nl > + + + / dev / null < nl > @ @ - 1 , 38 + 0 , 0 @ @ < nl > - / * < nl > - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - * / < nl > - < nl > - package im . actor . core . phonebook ; < nl > - < nl > - import com . google . j2objc . annotations . ObjectiveCName ; < nl > - < nl > - import java . util . List ; < nl > - < nl > - import im . actor . core . entity . PhoneBookContact ; < nl > - < nl > - / * * < nl > - * Provider for PhoneBook import . If not available use EmptyPhoneProvider . < nl > - * Call Messenger . onPhoneBookChanged when you detect possible phone book changes . < nl > - * / < nl > - public interface PhoneBookProvider { < nl > - / * * < nl > - * Perform async phone book loading < nl > - * < nl > - * @ param callback completion callback < nl > - * / < nl > - @ ObjectiveCName ( " loadPhoneBookWithCallback : " ) < nl > - void loadPhoneBook ( Callback callback ) ; < nl > - < nl > - / * * < nl > - * Callback about phone book load < nl > - * / < nl > - interface Callback { < nl > - / * * < nl > - * On PhoneBook loaded < nl > - * < nl > - * @ param contacts loaded contacts < nl > - * / < nl > - @ ObjectiveCName ( " onLoadedWithContacts : " ) < nl > - void onLoaded ( List < PhoneBookContact > contacts ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / NotificationProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / NotificationProvider . java < nl > new file mode 100644 < nl > index 0000000 . . 118022e < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / NotificationProvider . java < nl > @ @ - 0 , 0 + 1 , 54 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . providers ; < nl > + < nl > + import com . google . j2objc . annotations . ObjectiveCName ; < nl > + < nl > + import java . util . List ; < nl > + < nl > + import im . actor . core . Messenger ; < nl > + import im . actor . core . entity . Notification ; < nl > + < nl > + / * * < nl > + * Provider for notifications support < nl > + * / < nl > + public interface NotificationProvider { < nl > + / * * < nl > + * Called when message arrive when user is in app ( used for play in app sound ) . < nl > + * < nl > + * @ param messenger Messenger object < nl > + * / < nl > + @ ObjectiveCName ( " onMessageArriveInAppWithMessenger : " ) < nl > + void onMessageArriveInApp ( Messenger messenger ) ; < nl > + < nl > + / * * < nl > + * On background notification < nl > + * < nl > + * @ param messenger Messenger object < nl > + * @ param topNotifications top 10 notifications < nl > + * @ param messagesCount total messages count < nl > + * @ param conversationsCount total conversations count < nl > + * / < nl > + @ ObjectiveCName ( " onNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) < nl > + void onNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) ; < nl > + < nl > + / * * < nl > + * On Notification panel update < nl > + * < nl > + * @ param messenger Messenger object < nl > + * @ param topNotifications top 10 notifications < nl > + * @ param messagesCount total messages count < nl > + * @ param conversationsCount total conversations count < nl > + * / < nl > + @ ObjectiveCName ( " onUpdateNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) < nl > + void onUpdateNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , < nl > + int conversationsCount ) ; < nl > + < nl > + / * * < nl > + * Hide all notifications < nl > + * / < nl > + @ ObjectiveCName ( " hideAllNotifications " ) < nl > + void hideAllNotifications ( ) ; < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / PhoneBookProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / PhoneBookProvider . java < nl > new file mode 100644 < nl > index 0000000 . . 8b61f5a < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / PhoneBookProvider . java < nl > @ @ - 0 , 0 + 1 , 38 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . providers ; < nl > + < nl > + import com . google . j2objc . annotations . ObjectiveCName ; < nl > + < nl > + import java . util . List ; < nl > + < nl > + import im . actor . core . entity . PhoneBookContact ; < nl > + < nl > + / * * < nl > + * Provider for PhoneBook import . If not available use EmptyPhoneProvider . < nl > + * Call Messenger . onPhoneBookChanged when you detect possible phone book changes . < nl > + * / < nl > + public interface PhoneBookProvider { < nl > + / * * < nl > + * Perform async phone book loading < nl > + * < nl > + * @ param callback completion callback < nl > + * / < nl > + @ ObjectiveCName ( " loadPhoneBookWithCallback : " ) < nl > + void loadPhoneBook ( Callback callback ) ; < nl > + < nl > + / * * < nl > + * Callback about phone book load < nl > + * / < nl > + interface Callback { < nl > + / * * < nl > + * On PhoneBook loaded < nl > + * < nl > + * @ param contacts loaded contacts < nl > + * / < nl > + @ ObjectiveCName ( " onLoadedWithContacts : " ) < nl > + void onLoaded ( List < PhoneBookContact > contacts ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java < nl > index f44f271 . . cbe7d65 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import android . content . Intent ; < nl > import android . content . IntentFilter ; < nl > import android . content . SharedPreferences ; < nl > < nl > + import im . actor . runtime . android . threading . AndroidDispatcher ; < nl > import im . actor . runtime . android . time . SntpClient ; < nl > import im . actor . runtime . generic . GenericThreadingProvider ; < nl > import im . actor . runtime . Log ; < nl > @ @ - 66 , 6 + 67 , 6 @ @ public class AndroidThreadingProvider extends GenericThreadingProvider { < nl > < nl > @ Override < nl > public Dispatcher createDispatcher ( ) { < nl > - return null ; < nl > + return new AndroidDispatcher ( ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java < nl > new file mode 100644 < nl > index 0000000 . . 6b6b721 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java < nl > @ @ - 0 , 0 + 1 , 29 @ @ < nl > + package im . actor . runtime . android . threading ; < nl > + < nl > + import android . os . Handler ; < nl > + import android . os . HandlerThread ; < nl > + < nl > + import im . actor . runtime . threading . Dispatcher ; < nl > + < nl > + public class AndroidDispatcher implements Dispatcher { < nl > + < nl > + private HandlerThread handlerThread ; < nl > + private Handler handler ; < nl > + < nl > + public AndroidDispatcher ( ) { < nl > + handlerThread = new HandlerThread ( " dispatcher " , Thread . NORM _ PRIORITY ) ; < nl > + handlerThread . start ( ) ; < nl > + < nl > + / / Wait for Looper ready < nl > + while ( handlerThread . getLooper ( ) = = null ) { < nl > + < nl > + } < nl > + < nl > + handler = new Handler ( handlerThread . getLooper ( ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void dispatch ( Runnable message , long delay ) { < nl > + handler . postDelayed ( message , delay ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java < nl > index 0467a7d . . 5b068b0 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java < nl > @ @ - 4 , 8 + 4 , 14 @ @ < nl > < nl > package im . actor . runtime . cocoa ; < nl > < nl > + import im . actor . runtime . cocoa . threading . CocoaDispatcher ; < nl > import im . actor . runtime . generic . GenericThreadingProvider ; < nl > + import im . actor . runtime . threading . Dispatcher ; < nl > < nl > public class CocoaThreadingProvider extends GenericThreadingProvider { < nl > < nl > + @ Override < nl > + public Dispatcher createDispatcher ( ) { < nl > + return new CocoaDispatcher ( ) ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / threading / CocoaDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / threading / CocoaDispatcher . java < nl > new file mode 100644 < nl > index 0000000 . . 919f602 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / threading / CocoaDispatcher . java < nl > @ @ - 0 , 0 + 1 , 17 @ @ < nl > + package im . actor . runtime . cocoa . threading ; < nl > + < nl > + import im . actor . runtime . threading . Dispatcher ; < nl > + < nl > + public class CocoaDispatcher implements Dispatcher { < nl > + < nl > + @ Override < nl > + public void dispatch ( Runnable message , long delay ) { < nl > + dispatchCocoa ( message , delay ) ; < nl > + } < nl > + < nl > + private native void dispatchCocoa ( Runnable runnable , long delay ) / * - [ < nl > + dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , delay * NSEC _ PER _ MSEC ) , dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ DEFAULT , 0 ) , ^ { < nl > + [ runnable run ] ; < nl > + } ) ; < nl > + ] - * / ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java < nl > index 61eee7c . . c30c10d 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java < nl > @ @ - 84 , 7 + 84 , 7 @ @ public interface ThreadingRuntime { < nl > * < nl > * @ return the Dispatcher object < nl > * / < nl > - @ ObjectiveCName ( " createDispatcher : " ) < nl > + @ ObjectiveCName ( " createDispatcher " ) < nl > Dispatcher createDispatcher ( ) ; < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java < nl > index a370094 . . fbb319a 100755 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java < nl > @ @ - 102 , 12 + 102 , 6 @ @ public abstract class ActorDispatcher { < nl > return false ; < nl > } < nl > < nl > - public final void sendMessageAtTime ( ActorEndpoint endpoint , Object message , long time , ActorRef sender ) { < nl > - if ( ! isDisconnected ( endpoint , message , sender ) ) { < nl > - endpoint . getMailbox ( ) . schedule ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , time ) ; < nl > - } < nl > - } < nl > - < nl > public final void sendMessageNow ( ActorEndpoint endpoint , Object message , ActorRef sender ) { < nl > if ( ! isDisconnected ( endpoint , message , sender ) ) { < nl > endpoint . getMailbox ( ) . schedule ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , 0 ) ; < nl > @ @ - 120 , 25 + 114 , 6 @ @ public abstract class ActorDispatcher { < nl > } < nl > } < nl > < nl > - public final void sendMessageOnceAtTime ( ActorEndpoint endpoint , Object message , long time , ActorRef sender ) { < nl > - if ( ! isDisconnected ( endpoint , message , sender ) ) { < nl > - endpoint . getMailbox ( ) . scheduleOnce ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , time ) ; < nl > - } < nl > - } < nl > - < nl > - public final void sendMessageOnceNow ( ActorEndpoint endpoint , Object message , ActorRef sender ) { < nl > - if ( ! isDisconnected ( endpoint , message , sender ) ) { < nl > - endpoint . getMailbox ( ) . scheduleOnce ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , 0 ) ; < nl > - } < nl > - } < nl > - < nl > - public final void cancelSend ( ActorEndpoint endpoint , Object message , ActorRef sender ) { < nl > - if ( ! endpoint . isDisconnected ( ) ) { < nl > - endpoint . getMailbox ( ) . unschedule ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) ) ; < nl > - } < nl > - } < nl > - < nl > - < nl > public String getName ( ) { < nl > return name ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java < nl > index 3a4a0fa . . 411b668 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java < nl > @ @ - 4 , 13 + 4 , 6 @ @ < nl > < nl > package im . actor . core . js . entity ; < nl > < nl > - < nl > - import org . timepedia . exporter . client . Export ; < nl > - import org . timepedia . exporter . client . ExportClosure ; < nl > - import org . timepedia . exporter . client . Exportable ; < nl > - < nl > - @ Export < nl > - @ ExportClosure < nl > - public interface JsClosure extends Exportable { < nl > + public interface JsClosure { < nl > void callback ( ) ; < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosureError . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosureError . java < nl > new file mode 100644 < nl > index 0000000 . . 9a50080 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosureError . java < nl > @ @ - 0 , 0 + 1 , 7 @ @ < nl > + package im . actor . core . js . entity ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + < nl > + public interface JsClosureError { < nl > + void onError ( JavaScriptObject error ) ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java < nl > index 2f01f33 . . c1e728f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java < nl > @ @ - 1 , 31 + 1 , 107 @ @ < nl > package im . actor . core . js . providers ; < nl > < nl > import im . actor . core . WebRTCProvider ; < nl > + import im . actor . core . entity . signals . AbsSignal ; < nl > + import im . actor . core . entity . signals . AnswerSignal ; < nl > + import im . actor . core . entity . signals . CandidateSignal ; < nl > + import im . actor . core . entity . signals . OfferSignal ; < nl > + import im . actor . core . js . JsMessenger ; < nl > + import im . actor . core . js . providers . webrtc . JsPeerConnection ; < nl > + import im . actor . core . js . providers . webrtc . JsPeerConnectionListener ; < nl > + import im . actor . core . js . providers . webrtc . JsSessionDescription ; < nl > + import im . actor . core . js . providers . webrtc . JsStreaming ; < nl > + import im . actor . core . js . providers . webrtc . JsUserMediaStream ; < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . function . Consumer ; < nl > < nl > public class JsWebRTCProvider implements WebRTCProvider { < nl > < nl > + private static final String TAG = " JsWebRTCProvider " ; < nl > + < nl > + private JsPeerConnection peerConnection ; < nl > + private JsUserMediaStream mediaStream ; < nl > + < nl > @ Override < nl > public void onIncomingCall ( ) { < nl > - < nl > + Log . d ( TAG , " onIncomingCall " ) ; < nl > + JsMessenger . getInstance ( ) . callAnswer ( ) ; < nl > + peerConnection = JsPeerConnection . create ( null ) ; < nl > + peerConnection . setListener ( new JsPeerConnectionListener ( ) { < nl > + @ Override < nl > + public void onIceCandidate ( String candidate ) { < nl > + Log . d ( TAG , " onIceCandidate : " + candidate ) ; < nl > + } < nl > + } ) ; < nl > + JsStreaming . getUserAudio ( ) . then ( new Consumer < JsUserMediaStream > ( ) { < nl > + @ Override < nl > + public void apply ( JsUserMediaStream jsUserMediaStream ) { < nl > + Log . d ( TAG , " Audio is created " ) ; < nl > + peerConnection . setLocalDescription ( JsSessionDescription . create ( jsUserMediaStream ) ) ; < nl > + } < nl > + } ) . failure ( new Consumer < Exception > ( ) { < nl > + @ Override < nl > + public void apply ( Exception e ) { < nl > + Log . d ( TAG , " Audio failured " ) ; < nl > + } < nl > + } ) ; < nl > } < nl > < nl > @ Override < nl > public void onOutgoingCall ( ) { < nl > - < nl > + Log . d ( TAG , " onOutgoingCall " ) ; < nl > } < nl > < nl > @ Override < nl > public void onCallStarted ( ) { < nl > - < nl > + Log . d ( TAG , " onCallStarted " ) ; < nl > } < nl > < nl > @ Override < nl > - public void onSignalingReceived ( byte [ ] data ) { < nl > + public void onSignalingReceived ( AbsSignal signal ) { < nl > + Log . d ( TAG , " onSignalingReceived : " + signal ) ; < nl > + if ( signal instanceof OfferSignal ) { < nl > + String sdp = ( ( OfferSignal ) signal ) . getSdp ( ) ; < nl > + JsSessionDescription description = JsSessionDescription . createOffer ( sdp ) ; < nl > + peerConnection . setRemoteDescription ( description ) . then ( new Consumer < String > ( ) { < nl > + @ Override < nl > + public void apply ( String s ) { < nl > + Log . d ( TAG , " Description set " ) ; < nl > + peerConnection . createAnswer ( ) . then ( new Consumer < JsSessionDescription > ( ) { < nl > + @ Override < nl > + public void apply ( JsSessionDescription jsSessionDescription ) { < nl > + Log . d ( TAG , " Session desc : " + jsSessionDescription ) ; < nl > + JsMessenger . getInstance ( ) . callSendSignaling ( new AnswerSignal ( jsSessionDescription . getSDP ( ) ) ) ; < nl > + } < nl > + } ) . failure ( new Consumer < Exception > ( ) { < nl > + @ Override < nl > + public void apply ( Exception e ) { < nl > + Log . d ( TAG , " Description desc error " ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) . failure ( new Consumer < Exception > ( ) { < nl > + @ Override < nl > + public void apply ( Exception e ) { < nl > + Log . d ( TAG , " Description error " ) ; < nl > + } < nl > + } ) ; < nl > < nl > + } else if ( signal instanceof CandidateSignal ) { < nl > + CandidateSignal candidateSignal = ( CandidateSignal ) signal ; < nl > + try { < nl > + peerConnection . addIceCandidate ( candidateSignal . getLabel ( ) , candidateSignal . getSdp ( ) ) ; < nl > + } catch ( Exception e ) { < nl > + Log . e ( TAG , e ) ; < nl > + } < nl > + } < nl > } < nl > < nl > @ Override < nl > public void onCallEnded ( ) { < nl > + Log . d ( TAG , " onCallEnded " ) ; < nl > < nl > + / / TODO : Close < nl > + peerConnection = null ; < nl > + mediaStream = null ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java < nl > index ccee846 . . 34f9f9c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java < nl > @ @ - 2 , 6 + 2 , 8 @ @ package im . actor . core . js . providers . webrtc ; < nl > < nl > import com . google . gwt . core . client . JavaScriptObject ; < nl > < nl > + import im . actor . core . js . entity . JsClosure ; < nl > + import im . actor . core . js . entity . JsClosureError ; < nl > import im . actor . core . js . modules . JsScheduller ; < nl > import im . actor . runtime . promise . Promise ; < nl > import im . actor . runtime . promise . PromiseFunc ; < nl > @ @ - 10 , 7 + 12 , 7 @ @ import im . actor . runtime . promise . PromiseResolver ; < nl > public class JsPeerConnection extends JavaScriptObject { < nl > < nl > public static native JsPeerConnection create ( JsPeerConnectionConfig config ) / * - { < nl > - return { peerConnection : new webkitRTCPeerConnection ( config ) } ; < nl > + return { peerConnection : new webkitRTCPeerConnection ( config , { optional : [ { DtlsSrtpKeyAgreement : true } ] } ) } ; < nl > } - * / ; < nl > < nl > protected JsPeerConnection ( ) { < nl > @ @ - 27 , 8 + 29 , 27 @ @ public class JsPeerConnection extends JavaScriptObject { < nl > this . peerConnection . setLocalDescription ( description ) ; < nl > } - * / ; < nl > < nl > - public final native void setRemoteDescription ( JsSessionDescription description ) / * - { < nl > - this . peerConnection . setRemoteDescription ( description ) ; < nl > + public final Promise < String > setRemoteDescription ( final JsSessionDescription description ) { < nl > + return new Promise < > ( new PromiseFunc < String > ( ) { < nl > + @ Override < nl > + public void exec ( final PromiseResolver < String > resolver ) { < nl > + setRemoteDescription ( description , new JsClosure ( ) { < nl > + @ Override < nl > + public void callback ( ) { < nl > + resolver . result ( null ) ; < nl > + } < nl > + } , new JsClosureError ( ) { < nl > + @ Override < nl > + public void onError ( JavaScriptObject error ) { < nl > + resolver . error ( new RuntimeException ( ) ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) . done ( JsScheduller . scheduller ( ) ) ; < nl > + } < nl > + < nl > + public final native void addIceCandidate ( int label , String candidate ) / * - { < nl > + this . peerConnection . addIceCandidate ( new RTCIceCandidate ( { sdpMLineIndex : label , candidate : candidate } ) ) ; < nl > } - * / ; < nl > < nl > public final Promise < JsSessionDescription > createOffer ( ) { < nl > @ @ - 50 , 11 + 71 , 50 @ @ public class JsPeerConnection extends JavaScriptObject { < nl > } ) . done ( JsScheduller . scheduller ( ) ) ; < nl > } < nl > < nl > + public final Promise < JsSessionDescription > createAnswer ( ) { < nl > + return new Promise < > ( new PromiseFunc < JsSessionDescription > ( ) { < nl > + @ Override < nl > + public void exec ( final PromiseResolver < JsSessionDescription > resolver ) { < nl > + createAnswer ( new JsSessionDescriptionCallback ( ) { < nl > + @ Override < nl > + public void onOfferCreated ( JsSessionDescription offer ) { < nl > + resolver . result ( offer ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOfferFailure ( ) { < nl > + resolver . error ( new RuntimeException ( " Offer failure " ) ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) . done ( JsScheduller . scheduller ( ) ) ; < nl > + } < nl > + < nl > private final native void createOffer ( JsSessionDescriptionCallback callback ) / * - { < nl > this . peerConnection . createOffer ( function ( offer ) { < nl > callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferCreated ( * ) ( offer ) ; < nl > } , function ( error ) { < nl > + $ wnd . console . warn ( error ) ; < nl > + callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferFailure ( * ) ( ) ; < nl > + } ) ; < nl > + } - * / ; < nl > + < nl > + private final native void createAnswer ( JsSessionDescriptionCallback callback ) / * - { < nl > + this . peerConnection . createAnswer ( function ( offer ) { < nl > + callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferCreated ( * ) ( offer ) ; < nl > + } , function ( error ) { < nl > + $ wnd . console . warn ( error ) ; < nl > callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferFailure ( * ) ( ) ; < nl > } ) ; < nl > } - * / ; < nl > + < nl > + < nl > + private final native void setRemoteDescription ( JsSessionDescription description , JsClosure closure , JsClosureError error ) / * - { < nl > + this . peerConnection . setRemoteDescription ( description , function ( ) { < nl > + closure . @ im . actor . core . js . entity . JsClosure : : callback ( * ) ( ) ; < nl > + } , function ( e ) { < nl > + $ wnd . console . warn ( e ) ; < nl > + error . @ im . actor . core . js . entity . JsClosureError : : onError ( * ) ( e ) ; < nl > + } ) ; < nl > + } - * / ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsRTCIceCandidate . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsRTCIceCandidate . java < nl > new file mode 100644 < nl > index 0000000 . . 0dd3617 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsRTCIceCandidate . java < nl > @ @ - 0 , 0 + 1 , 14 @ @ < nl > + package im . actor . core . js . providers . webrtc ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + < nl > + public class JsRTCIceCandidate extends JavaScriptObject { < nl > + < nl > + public native static JsRTCIceCandidate create ( String candidate ) / * - { < nl > + return new RTCIceCandidate ( candidate ) ; < nl > + } - * / ; < nl > + < nl > + protected JsRTCIceCandidate ( ) { < nl > + < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java < nl > index 4154488 . . 7df0909 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java < nl > @ @ - 4 , 6 + 4 , 14 @ @ import com . google . gwt . core . client . JavaScriptObject ; < nl > < nl > public class JsSessionDescription extends JavaScriptObject { < nl > < nl > + public static native JsSessionDescription createOffer ( String sdp ) / * - { < nl > + return new RTCSessionDescription ( { type : ' offer ' , sdp : sdp } ) ; < nl > + } - * / ; < nl > + < nl > + public static native JsSessionDescription create ( JsUserMediaStream stream ) / * - { < nl > + return new RTCSessionDescription ( stream ) ; < nl > + } - * / ; < nl > + < nl > protected JsSessionDescription ( ) { < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 180a9e6 . . f040452 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 43 , 6 + 43 , 7 @ @ import im . actor . core . events . PeerChatOpened ; < nl > import im . actor . core . events . PeerInfoClosed ; < nl > import im . actor . core . events . PeerInfoOpened ; < nl > import im . actor . core . events . UserVisible ; < nl > + import im . actor . core . modules . calls . CallManagerActor ; < nl > import im . actor . core . modules . calls . CallsModule ; < nl > import im . actor . core . network . NetworkState ; < nl > import im . actor . core . util . ActorTrace ; < nl > @ @ - 1031 , 6 + 1032 , 14 @ @ public class Messenger { < nl > modules . getCallsModule ( ) . sendSignal ( callId , data ) ; < nl > } < nl > < nl > + public void callSendSignaling ( AbsSignal data ) { < nl > + modules . getCallsModule ( ) . getCallManager ( ) . send ( new CallManagerActor . SendSignaling ( data ) ) ; < nl > + } < nl > + < nl > + public void callAnswer ( ) { < nl > + modules . getCallsModule ( ) . getCallManager ( ) . send ( new CallManagerActor . AnswerCall ( ) ) ; < nl > + } < nl > + < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / Peer operations < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java < nl > index e278409 . . 200013c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java < nl > @ @ - 1 , 5 + 1 , 7 @ @ < nl > package im . actor . core ; < nl > < nl > + import im . actor . core . entity . signals . AbsSignal ; < nl > + < nl > public interface WebRTCProvider { < nl > < nl > void onIncomingCall ( ) ; < nl > @ @ - 8 , 7 + 10 , 7 @ @ public interface WebRTCProvider { < nl > < nl > void onCallStarted ( ) ; < nl > < nl > - void onSignalingReceived ( byte [ ] data ) ; < nl > + void onSignalingReceived ( AbsSignal signal ) ; < nl > < nl > void onCallEnded ( ) ; < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java < nl > index c78d8fb . . 99de9b6 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java < nl > @ @ - 11 , 7 + 11 , 7 @ @ import im . actor . runtime . bser . DataInput ; < nl > < nl > public abstract class AbsSignal extends BserObject { < nl > < nl > - String type ; < nl > + private String type ; < nl > < nl > @ Override < nl > public void parse ( BserValues values ) throws IOException { < nl > @ @ - 27 , 22 + 27 , 19 @ @ public abstract class AbsSignal extends BserObject { < nl > < nl > public static AbsSignal fromBytes ( byte [ ] data ) { < nl > try { < nl > - < nl > - AbsSignal res = null ; < nl > BserValues values = new BserValues ( BserParser . deserialize ( new DataInput ( data , 0 , data . length ) ) ) ; < nl > - if ( values . getString ( 1 ) . equals ( new OfferSignal ( ) . getType ( ) ) ) { < nl > + String type = values . getString ( 1 ) ; < nl > + AbsSignal res ; < nl > + if ( OfferSignal . TYPE . equals ( type ) ) { < nl > res = new OfferSignal ( ) ; < nl > - } else if ( values . getString ( 1 ) . equals ( new AnswerSignal ( ) . getType ( ) ) ) { < nl > + } else if ( AnswerSignal . TYPE . equals ( type ) ) { < nl > res = new AnswerSignal ( ) ; < nl > - } else if ( values . getString ( 1 ) . equals ( new CandidateSignal ( ) . getType ( ) ) ) { < nl > + } else if ( CandidateSignal . TYPE . equals ( type ) ) { < nl > res = new CandidateSignal ( ) ; < nl > - } < nl > - < nl > - if ( res ! = null ) { < nl > - res . parse ( values ) ; < nl > } else { < nl > - Log . w ( " Signaling parser " , " unknown signal " ) ; < nl > + throw new IOException ( " Unknown signal type " + type ) ; < nl > } < nl > + res . parse ( values ) ; < nl > return res ; < nl > } catch ( IOException e ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java < nl > index 9baf5de . . 2cc526c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java < nl > @ @ - 5 , 11 + 5 , 10 @ @ import java . io . IOException ; < nl > import im . actor . runtime . bser . BserValues ; < nl > import im . actor . runtime . bser . BserWriter ; < nl > < nl > - / * * < nl > - * Created by root on 1 / 15 / 16 . < nl > - * / < nl > public class AnswerSignal extends AbsSignal { < nl > < nl > + public static final String TYPE = " answer " ; < nl > + < nl > private String sdp ; < nl > < nl > public AnswerSignal ( String sdp ) { < nl > @ @ - 35 , 6 + 34 , 11 @ @ public class AnswerSignal extends AbsSignal { < nl > < nl > @ Override < nl > public String getType ( ) { < nl > - return " answer " ; < nl > + return TYPE ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + return " { type : " + TYPE + " , sdp : " + sdp + " } " ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java < nl > index bd82885 . . 1b13e43 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java < nl > @ @ - 7 , 6 + 7 , 8 @ @ import im . actor . runtime . bser . BserWriter ; < nl > < nl > public class CandidateSignal extends AbsSignal { < nl > < nl > + public static final String TYPE = " candidate " ; < nl > + < nl > private String sdp ; < nl > private int label ; < nl > private String id ; < nl > @ @ - 19 , 6 + 21 , 7 @ @ public class CandidateSignal extends AbsSignal { < nl > } < nl > < nl > public CandidateSignal ( ) { < nl > + < nl > } < nl > < nl > public String getSdp ( ) { < nl > @ @ - 49 , 6 + 52 , 11 @ @ public class CandidateSignal extends AbsSignal { < nl > < nl > @ Override < nl > public String getType ( ) { < nl > - return " candidate " ; < nl > + return TYPE ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + return " { type : " + TYPE + " , id : " + id + " , label : " + label + " sdp : " + sdp + " } " ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java < nl > index f4cd4f2 . . 456ad69 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java < nl > @ @ - 7 , 6 + 7 , 7 @ @ import im . actor . runtime . bser . BserWriter ; < nl > < nl > public class OfferSignal extends AbsSignal { < nl > < nl > + public static final String TYPE = " OFFER " ; < nl > < nl > private String sdp ; < nl > < nl > @ @ - 15 , 8 + 16 , 8 @ @ public class OfferSignal extends AbsSignal { < nl > } < nl > < nl > public OfferSignal ( ) { < nl > - } < nl > < nl > + } < nl > < nl > public String getSdp ( ) { < nl > return sdp ; < nl > @ @ - 34 , 6 + 35 , 11 @ @ public class OfferSignal extends AbsSignal { < nl > < nl > @ Override < nl > public String getType ( ) { < nl > - return " OFFER " ; < nl > + return TYPE ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + return " { type : " + TYPE + " , sdp : " + sdp + " } " ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index c5f0055 . . 0df9b8b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 15 , 7 + 15 , 7 @ @ public class CallActor extends ModuleActor { < nl > private boolean alive = false ; < nl > private long callId ; < nl > private CallsModule . CallCallback callback ; < nl > - private ArrayList < byte [ ] > signals = new ArrayList < byte [ ] > ( ) ; < nl > + private ArrayList < byte [ ] > signals = new ArrayList < > ( ) ; < nl > < nl > public CallActor ( long callId , ModuleContext context ) { < nl > super ( context ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index e496823 . . df83bde 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 1 , 6 + 1 , 9 @ @ < nl > package im . actor . core . modules . calls ; < nl > < nl > + import im . actor . core . api . rpc . RequestCallInProgress ; < nl > + import im . actor . core . api . rpc . RequestSendCallSignal ; < nl > import im . actor . core . api . rpc . RequestSubscribeToCalls ; < nl > + import im . actor . core . entity . signals . AbsSignal ; < nl > import im . actor . core . events . NewSessionCreated ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . util . ModuleActor ; < nl > @ @ - 20 , 8 + 23 , 12 @ @ public class CallManagerActor extends ModuleActor { < nl > } < nl > < nl > private static final String TAG = " CallManagerActor " ; < nl > + private static final int IN _ PROGRESS _ TIMEOUT = 15000 ; < nl > < nl > private long subscribeRequest = - 1 ; < nl > + private long progressRequest = - 1 ; < nl > + < nl > + private long runningCallId = - 1 ; < nl > < nl > public CallManagerActor ( ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 36 , 10 + 43 , 41 @ @ public class CallManagerActor extends ModuleActor { < nl > < nl > private void onIncomingCall ( long callId , int uid ) { < nl > Log . d ( TAG , " onIncomingCall ( " + callId + " , " + uid + " ) " ) ; < nl > + if ( runningCallId ! = - 1 ) { < nl > + return ; < nl > + } < nl > + runningCallId = callId ; < nl > + config ( ) . getWebRTCProvider ( ) . onIncomingCall ( ) ; < nl > + } < nl > + < nl > + private void onAnswerCall ( ) { < nl > + Log . d ( TAG , " onAnswerCall " ) ; < nl > + if ( runningCallId = = - 1 ) { < nl > + return ; < nl > + } < nl > + < nl > + progressRequest = request ( new RequestCallInProgress ( runningCallId , IN _ PROGRESS _ TIMEOUT ) ) ; < nl > } < nl > < nl > private void onSignaling ( long callId , byte [ ] message ) { < nl > Log . d ( TAG , " onSignaling ( " + callId + " ) " ) ; < nl > + if ( runningCallId ! = callId ) { < nl > + return ; < nl > + } < nl > + < nl > + AbsSignal signal = AbsSignal . fromBytes ( message ) ; < nl > + if ( signal ! = null ) { < nl > + config ( ) . getWebRTCProvider ( ) . onSignalingReceived ( signal ) ; < nl > + } < nl > + } < nl > + < nl > + private void onSendSignal ( AbsSignal signal ) { < nl > + Log . d ( TAG , " onSendSignal : " + signal ) ; < nl > + if ( runningCallId = = - 1 ) { < nl > + return ; < nl > + } < nl > + < nl > + request ( new RequestSendCallSignal ( runningCallId , signal . toByteArray ( ) ) ) ; < nl > } < nl > < nl > private void subscribeForCalls ( ) { < nl > @ @ - 67 , 6 + 105 , 10 @ @ public class CallManagerActor extends ModuleActor { < nl > } else if ( message instanceof OnSignaling ) { < nl > OnSignaling signaling = ( OnSignaling ) message ; < nl > onSignaling ( signaling . getCallId ( ) , signaling . getMessage ( ) ) ; < nl > + } else if ( message instanceof AnswerCall ) { < nl > + onAnswerCall ( ) ; < nl > + } else if ( message instanceof SendSignaling ) { < nl > + onSendSignal ( ( ( SendSignaling ) message ) . getSignal ( ) ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > @ @ - 108 , 4 + 150 , 21 @ @ public class CallManagerActor extends ModuleActor { < nl > return message ; < nl > } < nl > } < nl > + < nl > + public static class AnswerCall { < nl > + < nl > + } < nl > + < nl > + public static class SendSignaling { < nl > + < nl > + private AbsSignal signal ; < nl > + < nl > + public SendSignaling ( AbsSignal signal ) { < nl > + this . signal = signal ; < nl > + } < nl > + < nl > + public AbsSignal getSignal ( ) { < nl > + return signal ; < nl > + } < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java < nl > index 027b5ac . . 5941ae3 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . core . modules . calls ; < nl > < nl > + import im . actor . core . api . updates . UpdateCallEnded ; < nl > import im . actor . core . api . updates . UpdateCallSignal ; < nl > import im . actor . core . api . updates . UpdateIncomingCall ; < nl > import im . actor . core . modules . ModuleContext ; < nl > @ @ - 27 , 6 + 28 , 11 @ @ public class CallsProcessor implements Processor { < nl > new CallManagerActor . OnSignaling ( < nl > updateCallSignal . getCallId ( ) , < nl > updateCallSignal . getContent ( ) ) ) ; < nl > + return true ; < nl > + } else if ( update instanceof UpdateCallEnded ) { < nl > + UpdateCallEnded callEnded = ( UpdateCallEnded ) update ; < nl > + < nl > + return true ; < nl > } < nl > return false ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 index 2ee242b . . 51aae70 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 @ @ - 22 , 7 + 22 , 7 @ @ import java . util . List ; 
 
 import im . actor . core . AndroidMessenger ; 
 import im . actor . core . Messenger ; 
 - import im . actor . core . notifications . NotificationProvider ; 
 + import im . actor . core . providers . NotificationProvider ; 
 import im . actor . core . entity . Avatar ; 
 import im . actor . core . entity . Notification ; 
 import im . actor . core . entity . Peer ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java 
 index 3a90f16 . . 241a93a 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPhoneBook . java 
 @ @ - 18 , 7 + 18 , 7 @ @ import java . util . HashMap ; 
 import java . util . HashSet ; 
 
 import im . actor . sdk . util . Devices ; 
 - import im . actor . core . phonebook . PhoneBookProvider ; 
 + import im . actor . core . providers . PhoneBookProvider ; 
 import im . actor . core . entity . PhoneBookContact ; 
 import im . actor . core . entity . PhoneBookEmail ; 
 import im . actor . core . entity . PhoneBookPhone ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile 
 index 47d2bb5 . . 4f4a784 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile 
 @ @ - 69 , 6 + 69 , 34 @ @ endef 
 define EOL 
 
 
 + 
 + 
 + endef 
 + 
 + 
 + define long _ list _ to _ file 
 + @ if [ - e $ ( 1 ) ] ; then rm $ ( 1 ) ; fi 
 + @ files = ' $ ( wordlist 1 , 499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 500 , 999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 1000 , 1499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 1500 , 1999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 2000 , 2499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 2500 , 2999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 3000 , 3499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 3500 , 3999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 4000 , 4499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 4500 , 4999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 5000 , 5499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 5500 , 5999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 6000 , 6499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 6500 , 6999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 7000 , 7499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 7500 , 7999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 8000 , 8499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 8500 , 8999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 9000 , 9499 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ files = ' $ ( wordlist 9500 , 9999 , $ ( 2 ) ) ' & & for i in $ $ files ; do echo $ $ i > > $ ( 1 ) ; done 
 + @ if [ ! - e $ ( 1 ) ] ; then touch $ ( 1 ) ; fi 
 endef 
 
 # Build Tasks 
 @ @ - 102 , 10 + 130 , 11 @ @ $ ( foreach root , $ ( SOURCE _ ROOTS ) , $ ( eval $ ( call SOURCE _ ROOT _ RULE , $ ( root ) ) ) ) 
 # @ rm - f $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) 
 # $ ( call max _ args , @ ar crv $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) , 2 , $ ( OBJECT _ FILES ) ) 
 # @ $ ( call max _ args , ar rcs $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) , 1100 , $ ( OBJECT _ FILES ) ) 
 + 
 build : $ ( OBJ _ DIR ) $ ( OBJECT _ FILES ) 
 	 @ rm - f $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) 
 - 	 @ ar rcs $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) $ ( OBJECT _ FILES ) 
 - 	 @ ranlib $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) 
 + 	 $ ( call long _ list _ to _ file , $ ( OBJ _ DIR ) / _ objs _ list , $ ( OBJECT _ FILES ) ) 
 + 	 @ libtool - static - o $ ( OBJ _ DIR ) / $ ( LIBRARY _ NAME ) - filelist $ ( OBJ _ DIR ) / _ objs _ list 
 
 $ ( OBJ _ DIR ) / % . o : $ ( SOURCES _ DIR ) / % . m 
 	 @ mkdir - p $ ( dir $ @ ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 3c0191a . . 27fb0b8 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 105 , 9 + 105 , 6 @ @ public class ActorSDK { 
 / / / Web Invite Domain host 
 public var inviteUrlHost : String ? = nil 
 
 - / / / Extensions 
 - private var extensions = [ ActorExtension ] ( ) 
 - 
 / / / Enable experimental features 
 public var enableExperimentalFeatures : Bool = false 
 
 @ @ - 138 , 14 + 135 , 6 @ @ public class ActorSDK { 
 / / Reachability 
 private var reachability : Reachability ! 
 
 - / / 
 - / / Initialization 
 - / / 
 - 
 - public func registerExtension ( key : String , ext : ACExtension ) { 
 - extensions . append ( ActorExtension ( key : key , ext : ext ) ) 
 - } 
 - 
 public func createActor ( ) { 
 
 if isStarted { 
 @ @ - 188 , 11 + 177 , 6 @ @ public class ActorSDK { 
 log ( " Found time zone : \ ( timeZone ) " ) 
 builder . setTimeZone ( timeZone ) 
 
 - / / Extensions 
 - for ex in extensions { 
 - builder . addExtensionWithNSString ( ex . key , withACExtension : ex . ext ) 
 - } 
 - 
 / / Logs 
 / / builder . setEnableFilesLogging ( true ) 
 
 @ @ - 700 , 14 + 684 , 4 @ @ public enum AAAutoPush { 
 case None 
 case FromStart 
 case AfterLogin 
 - } 
 - 
 - class ActorExtension { 
 - let key : String 
 - let ext : ACExtension 
 - 
 - init ( key : String , ext : ACExtension ) { 
 - self . key = key 
 - self . ext = ext 
 - } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties b / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties 
 index 6fc1adf . . 6e82a8e 100644 
 - - - a / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties 
 + + + b / actor - sdk / sdk - core / core / core - cocoa / prefixes . properties 
 @ @ - 40 , 6 + 40 , 8 @ @ im . actor . core . modules . internal . users : AC 
 
 im . actor . core . i18n : AC 
 
 + im . actor . core . providers : AC 
 + 
 im . actor . core . entity : AC 
 im . actor . core . entity . compat : AC 
 im . actor . core . entity . compat . content : AC 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 index 7312a54 . . 3426e87 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 @ @ - 16 , 7 + 16 , 7 @ @ import im . actor . core . js . JsMessenger ; 
 import im . actor . core . js . providers . electron . JsElectronApp ; 
 import im . actor . core . js . providers . notification . JsManagedNotification ; 
 import im . actor . core . js . providers . notification . JsNotification ; 
 - import im . actor . core . notifications . NotificationProvider ; 
 + import im . actor . core . providers . NotificationProvider ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java 
 index f648753 . . f6b81af 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsPhoneBookProvider . java 
 @ @ - 7 , 7 + 7 , 7 @ @ package im . actor . core . js . providers ; 
 import java . util . ArrayList ; 
 
 import im . actor . core . entity . PhoneBookContact ; 
 - import im . actor . core . phonebook . PhoneBookProvider ; 
 + import im . actor . core . providers . PhoneBookProvider ; 
 
 public class JsPhoneBookProvider implements PhoneBookProvider { 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 index dc0aa16 . . 2bf1337 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 @ @ - 5 , 8 + 5 , 8 @ @ 
 package im . actor . core ; 
 
 import im . actor . core . network . TrustedKey ; 
 - import im . actor . core . notifications . NotificationProvider ; 
 - import im . actor . core . phonebook . PhoneBookProvider ; 
 + import im . actor . core . providers . NotificationProvider ; 
 + import im . actor . core . providers . PhoneBookProvider ; 
 import im . actor . core . webrtc . WebRTCProvider ; 
 import im . actor . runtime . mtproto . ConnectionEndpoint ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 index 22e4ca7 . . 0b4e8cf 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 @ @ - 11 , 8 + 11 , 8 @ @ import org . jetbrains . annotations . NotNull ; 
 import java . util . ArrayList ; 
 
 import im . actor . core . network . TrustedKey ; 
 - import im . actor . core . notifications . NotificationProvider ; 
 - import im . actor . core . phonebook . PhoneBookProvider ; 
 + import im . actor . core . providers . NotificationProvider ; 
 + import im . actor . core . providers . PhoneBookProvider ; 
 import im . actor . core . webrtc . WebRTCProvider ; 
 import im . actor . runtime . Crypto ; 
 import im . actor . runtime . Log ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 index cc505b9 . . eb20fef 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import java . util . ArrayList ; 
 import java . util . HashSet ; 
 import java . util . List ; 
 
 - import im . actor . core . phonebook . PhoneBookProvider ; 
 + import im . actor . core . providers . PhoneBookProvider ; 
 import im . actor . core . api . ApiEmailToImport ; 
 import im . actor . core . api . ApiGroup ; 
 import im . actor . core . api . ApiPhoneToImport ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / notifications / NotificationProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / notifications / NotificationProvider . java 
 deleted file mode 100644 
 index 5f9bc31 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / notifications / NotificationProvider . java 
 + + + / dev / null 
 @ @ - 1 , 54 + 0 , 0 @ @ 
 - / * 
 - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - * / 
 - 
 - package im . actor . core . notifications ; 
 - 
 - import com . google . j2objc . annotations . ObjectiveCName ; 
 - 
 - import java . util . List ; 
 - 
 - import im . actor . core . Messenger ; 
 - import im . actor . core . entity . Notification ; 
 - 
 - / * * 
 - * Provider for notifications support 
 - * / 
 - public interface NotificationProvider { 
 - / * * 
 - * Called when message arrive when user is in app ( used for play in app sound ) . 
 - * 
 - * @ param messenger Messenger object 
 - * / 
 - @ ObjectiveCName ( " onMessageArriveInAppWithMessenger : " ) 
 - void onMessageArriveInApp ( Messenger messenger ) ; 
 - 
 - / * * 
 - * On background notification 
 - * 
 - * @ param messenger Messenger object 
 - * @ param topNotifications top 10 notifications 
 - * @ param messagesCount total messages count 
 - * @ param conversationsCount total conversations count 
 - * / 
 - @ ObjectiveCName ( " onNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) 
 - void onNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) ; 
 - 
 - / * * 
 - * On Notification panel update 
 - * 
 - * @ param messenger Messenger object 
 - * @ param topNotifications top 10 notifications 
 - * @ param messagesCount total messages count 
 - * @ param conversationsCount total conversations count 
 - * / 
 - @ ObjectiveCName ( " onUpdateNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) 
 - void onUpdateNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , 
 - int conversationsCount ) ; 
 - 
 - / * * 
 - * Hide all notifications 
 - * / 
 - @ ObjectiveCName ( " hideAllNotifications " ) 
 - void hideAllNotifications ( ) ; 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / phonebook / PhoneBookProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / phonebook / PhoneBookProvider . java 
 deleted file mode 100644 
 index 4ee0037 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / phonebook / PhoneBookProvider . java 
 + + + / dev / null 
 @ @ - 1 , 38 + 0 , 0 @ @ 
 - / * 
 - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - * / 
 - 
 - package im . actor . core . phonebook ; 
 - 
 - import com . google . j2objc . annotations . ObjectiveCName ; 
 - 
 - import java . util . List ; 
 - 
 - import im . actor . core . entity . PhoneBookContact ; 
 - 
 - / * * 
 - * Provider for PhoneBook import . If not available use EmptyPhoneProvider . 
 - * Call Messenger . onPhoneBookChanged when you detect possible phone book changes . 
 - * / 
 - public interface PhoneBookProvider { 
 - / * * 
 - * Perform async phone book loading 
 - * 
 - * @ param callback completion callback 
 - * / 
 - @ ObjectiveCName ( " loadPhoneBookWithCallback : " ) 
 - void loadPhoneBook ( Callback callback ) ; 
 - 
 - / * * 
 - * Callback about phone book load 
 - * / 
 - interface Callback { 
 - / * * 
 - * On PhoneBook loaded 
 - * 
 - * @ param contacts loaded contacts 
 - * / 
 - @ ObjectiveCName ( " onLoadedWithContacts : " ) 
 - void onLoaded ( List < PhoneBookContact > contacts ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / NotificationProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / NotificationProvider . java 
 new file mode 100644 
 index 0000000 . . 118022e 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / NotificationProvider . java 
 @ @ - 0 , 0 + 1 , 54 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . providers ; 
 + 
 + import com . google . j2objc . annotations . ObjectiveCName ; 
 + 
 + import java . util . List ; 
 + 
 + import im . actor . core . Messenger ; 
 + import im . actor . core . entity . Notification ; 
 + 
 + / * * 
 + * Provider for notifications support 
 + * / 
 + public interface NotificationProvider { 
 + / * * 
 + * Called when message arrive when user is in app ( used for play in app sound ) . 
 + * 
 + * @ param messenger Messenger object 
 + * / 
 + @ ObjectiveCName ( " onMessageArriveInAppWithMessenger : " ) 
 + void onMessageArriveInApp ( Messenger messenger ) ; 
 + 
 + / * * 
 + * On background notification 
 + * 
 + * @ param messenger Messenger object 
 + * @ param topNotifications top 10 notifications 
 + * @ param messagesCount total messages count 
 + * @ param conversationsCount total conversations count 
 + * / 
 + @ ObjectiveCName ( " onNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) 
 + void onNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) ; 
 + 
 + / * * 
 + * On Notification panel update 
 + * 
 + * @ param messenger Messenger object 
 + * @ param topNotifications top 10 notifications 
 + * @ param messagesCount total messages count 
 + * @ param conversationsCount total conversations count 
 + * / 
 + @ ObjectiveCName ( " onUpdateNotificationWithMessenger : withTopNotifications : withMessagesCount : withConversationsCount : " ) 
 + void onUpdateNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , 
 + int conversationsCount ) ; 
 + 
 + / * * 
 + * Hide all notifications 
 + * / 
 + @ ObjectiveCName ( " hideAllNotifications " ) 
 + void hideAllNotifications ( ) ; 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / PhoneBookProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / PhoneBookProvider . java 
 new file mode 100644 
 index 0000000 . . 8b61f5a 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / providers / PhoneBookProvider . java 
 @ @ - 0 , 0 + 1 , 38 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . providers ; 
 + 
 + import com . google . j2objc . annotations . ObjectiveCName ; 
 + 
 + import java . util . List ; 
 + 
 + import im . actor . core . entity . PhoneBookContact ; 
 + 
 + / * * 
 + * Provider for PhoneBook import . If not available use EmptyPhoneProvider . 
 + * Call Messenger . onPhoneBookChanged when you detect possible phone book changes . 
 + * / 
 + public interface PhoneBookProvider { 
 + / * * 
 + * Perform async phone book loading 
 + * 
 + * @ param callback completion callback 
 + * / 
 + @ ObjectiveCName ( " loadPhoneBookWithCallback : " ) 
 + void loadPhoneBook ( Callback callback ) ; 
 + 
 + / * * 
 + * Callback about phone book load 
 + * / 
 + interface Callback { 
 + / * * 
 + * On PhoneBook loaded 
 + * 
 + * @ param contacts loaded contacts 
 + * / 
 + @ ObjectiveCName ( " onLoadedWithContacts : " ) 
 + void onLoaded ( List < PhoneBookContact > contacts ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java 
 index f44f271 . . cbe7d65 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import android . content . Intent ; 
 import android . content . IntentFilter ; 
 import android . content . SharedPreferences ; 
 
 + import im . actor . runtime . android . threading . AndroidDispatcher ; 
 import im . actor . runtime . android . time . SntpClient ; 
 import im . actor . runtime . generic . GenericThreadingProvider ; 
 import im . actor . runtime . Log ; 
 @ @ - 66 , 6 + 67 , 6 @ @ public class AndroidThreadingProvider extends GenericThreadingProvider { 
 
 @ Override 
 public Dispatcher createDispatcher ( ) { 
 - return null ; 
 + return new AndroidDispatcher ( ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java 
 new file mode 100644 
 index 0000000 . . 6b6b721 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package im . actor . runtime . android . threading ; 
 + 
 + import android . os . Handler ; 
 + import android . os . HandlerThread ; 
 + 
 + import im . actor . runtime . threading . Dispatcher ; 
 + 
 + public class AndroidDispatcher implements Dispatcher { 
 + 
 + private HandlerThread handlerThread ; 
 + private Handler handler ; 
 + 
 + public AndroidDispatcher ( ) { 
 + handlerThread = new HandlerThread ( " dispatcher " , Thread . NORM _ PRIORITY ) ; 
 + handlerThread . start ( ) ; 
 + 
 + / / Wait for Looper ready 
 + while ( handlerThread . getLooper ( ) = = null ) { 
 + 
 + } 
 + 
 + handler = new Handler ( handlerThread . getLooper ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public void dispatch ( Runnable message , long delay ) { 
 + handler . postDelayed ( message , delay ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java 
 index 0467a7d . . 5b068b0 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaThreadingProvider . java 
 @ @ - 4 , 8 + 4 , 14 @ @ 
 
 package im . actor . runtime . cocoa ; 
 
 + import im . actor . runtime . cocoa . threading . CocoaDispatcher ; 
 import im . actor . runtime . generic . GenericThreadingProvider ; 
 + import im . actor . runtime . threading . Dispatcher ; 
 
 public class CocoaThreadingProvider extends GenericThreadingProvider { 
 
 + @ Override 
 + public Dispatcher createDispatcher ( ) { 
 + return new CocoaDispatcher ( ) ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / threading / CocoaDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / threading / CocoaDispatcher . java 
 new file mode 100644 
 index 0000000 . . 919f602 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / threading / CocoaDispatcher . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + package im . actor . runtime . cocoa . threading ; 
 + 
 + import im . actor . runtime . threading . Dispatcher ; 
 + 
 + public class CocoaDispatcher implements Dispatcher { 
 + 
 + @ Override 
 + public void dispatch ( Runnable message , long delay ) { 
 + dispatchCocoa ( message , delay ) ; 
 + } 
 + 
 + private native void dispatchCocoa ( Runnable runnable , long delay ) / * - [ 
 + dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , delay * NSEC _ PER _ MSEC ) , dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ DEFAULT , 0 ) , ^ { 
 + [ runnable run ] ; 
 + } ) ; 
 + ] - * / ; 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java 
 index 61eee7c . . c30c10d 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / ThreadingRuntime . java 
 @ @ - 84 , 7 + 84 , 7 @ @ public interface ThreadingRuntime { 
 * 
 * @ return the Dispatcher object 
 * / 
 - @ ObjectiveCName ( " createDispatcher : " ) 
 + @ ObjectiveCName ( " createDispatcher " ) 
 Dispatcher createDispatcher ( ) ; 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java 
 index a370094 . . fbb319a 100755 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / mailbox / ActorDispatcher . java 
 @ @ - 102 , 12 + 102 , 6 @ @ public abstract class ActorDispatcher { 
 return false ; 
 } 
 
 - public final void sendMessageAtTime ( ActorEndpoint endpoint , Object message , long time , ActorRef sender ) { 
 - if ( ! isDisconnected ( endpoint , message , sender ) ) { 
 - endpoint . getMailbox ( ) . schedule ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , time ) ; 
 - } 
 - } 
 - 
 public final void sendMessageNow ( ActorEndpoint endpoint , Object message , ActorRef sender ) { 
 if ( ! isDisconnected ( endpoint , message , sender ) ) { 
 endpoint . getMailbox ( ) . schedule ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , 0 ) ; 
 @ @ - 120 , 25 + 114 , 6 @ @ public abstract class ActorDispatcher { 
 } 
 } 
 
 - public final void sendMessageOnceAtTime ( ActorEndpoint endpoint , Object message , long time , ActorRef sender ) { 
 - if ( ! isDisconnected ( endpoint , message , sender ) ) { 
 - endpoint . getMailbox ( ) . scheduleOnce ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , time ) ; 
 - } 
 - } 
 - 
 - public final void sendMessageOnceNow ( ActorEndpoint endpoint , Object message , ActorRef sender ) { 
 - if ( ! isDisconnected ( endpoint , message , sender ) ) { 
 - endpoint . getMailbox ( ) . scheduleOnce ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) , 0 ) ; 
 - } 
 - } 
 - 
 - public final void cancelSend ( ActorEndpoint endpoint , Object message , ActorRef sender ) { 
 - if ( ! endpoint . isDisconnected ( ) ) { 
 - endpoint . getMailbox ( ) . unschedule ( new Envelope ( message , endpoint . getScope ( ) , endpoint . getMailbox ( ) , sender ) ) ; 
 - } 
 - } 
 - 
 - 
 public String getName ( ) { 
 return name ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java 
 index 3a4a0fa . . 411b668 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosure . java 
 @ @ - 4 , 13 + 4 , 6 @ @ 
 
 package im . actor . core . js . entity ; 
 
 - 
 - import org . timepedia . exporter . client . Export ; 
 - import org . timepedia . exporter . client . ExportClosure ; 
 - import org . timepedia . exporter . client . Exportable ; 
 - 
 - @ Export 
 - @ ExportClosure 
 - public interface JsClosure extends Exportable { 
 + public interface JsClosure { 
 void callback ( ) ; 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosureError . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosureError . java 
 new file mode 100644 
 index 0000000 . . 9a50080 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsClosureError . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package im . actor . core . js . entity ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + 
 + public interface JsClosureError { 
 + void onError ( JavaScriptObject error ) ; 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java 
 index 2f01f33 . . c1e728f 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsWebRTCProvider . java 
 @ @ - 1 , 31 + 1 , 107 @ @ 
 package im . actor . core . js . providers ; 
 
 import im . actor . core . WebRTCProvider ; 
 + import im . actor . core . entity . signals . AbsSignal ; 
 + import im . actor . core . entity . signals . AnswerSignal ; 
 + import im . actor . core . entity . signals . CandidateSignal ; 
 + import im . actor . core . entity . signals . OfferSignal ; 
 + import im . actor . core . js . JsMessenger ; 
 + import im . actor . core . js . providers . webrtc . JsPeerConnection ; 
 + import im . actor . core . js . providers . webrtc . JsPeerConnectionListener ; 
 + import im . actor . core . js . providers . webrtc . JsSessionDescription ; 
 + import im . actor . core . js . providers . webrtc . JsStreaming ; 
 + import im . actor . core . js . providers . webrtc . JsUserMediaStream ; 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . function . Consumer ; 
 
 public class JsWebRTCProvider implements WebRTCProvider { 
 
 + private static final String TAG = " JsWebRTCProvider " ; 
 + 
 + private JsPeerConnection peerConnection ; 
 + private JsUserMediaStream mediaStream ; 
 + 
 @ Override 
 public void onIncomingCall ( ) { 
 - 
 + Log . d ( TAG , " onIncomingCall " ) ; 
 + JsMessenger . getInstance ( ) . callAnswer ( ) ; 
 + peerConnection = JsPeerConnection . create ( null ) ; 
 + peerConnection . setListener ( new JsPeerConnectionListener ( ) { 
 + @ Override 
 + public void onIceCandidate ( String candidate ) { 
 + Log . d ( TAG , " onIceCandidate : " + candidate ) ; 
 + } 
 + } ) ; 
 + JsStreaming . getUserAudio ( ) . then ( new Consumer < JsUserMediaStream > ( ) { 
 + @ Override 
 + public void apply ( JsUserMediaStream jsUserMediaStream ) { 
 + Log . d ( TAG , " Audio is created " ) ; 
 + peerConnection . setLocalDescription ( JsSessionDescription . create ( jsUserMediaStream ) ) ; 
 + } 
 + } ) . failure ( new Consumer < Exception > ( ) { 
 + @ Override 
 + public void apply ( Exception e ) { 
 + Log . d ( TAG , " Audio failured " ) ; 
 + } 
 + } ) ; 
 } 
 
 @ Override 
 public void onOutgoingCall ( ) { 
 - 
 + Log . d ( TAG , " onOutgoingCall " ) ; 
 } 
 
 @ Override 
 public void onCallStarted ( ) { 
 - 
 + Log . d ( TAG , " onCallStarted " ) ; 
 } 
 
 @ Override 
 - public void onSignalingReceived ( byte [ ] data ) { 
 + public void onSignalingReceived ( AbsSignal signal ) { 
 + Log . d ( TAG , " onSignalingReceived : " + signal ) ; 
 + if ( signal instanceof OfferSignal ) { 
 + String sdp = ( ( OfferSignal ) signal ) . getSdp ( ) ; 
 + JsSessionDescription description = JsSessionDescription . createOffer ( sdp ) ; 
 + peerConnection . setRemoteDescription ( description ) . then ( new Consumer < String > ( ) { 
 + @ Override 
 + public void apply ( String s ) { 
 + Log . d ( TAG , " Description set " ) ; 
 + peerConnection . createAnswer ( ) . then ( new Consumer < JsSessionDescription > ( ) { 
 + @ Override 
 + public void apply ( JsSessionDescription jsSessionDescription ) { 
 + Log . d ( TAG , " Session desc : " + jsSessionDescription ) ; 
 + JsMessenger . getInstance ( ) . callSendSignaling ( new AnswerSignal ( jsSessionDescription . getSDP ( ) ) ) ; 
 + } 
 + } ) . failure ( new Consumer < Exception > ( ) { 
 + @ Override 
 + public void apply ( Exception e ) { 
 + Log . d ( TAG , " Description desc error " ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) . failure ( new Consumer < Exception > ( ) { 
 + @ Override 
 + public void apply ( Exception e ) { 
 + Log . d ( TAG , " Description error " ) ; 
 + } 
 + } ) ; 
 
 + } else if ( signal instanceof CandidateSignal ) { 
 + CandidateSignal candidateSignal = ( CandidateSignal ) signal ; 
 + try { 
 + peerConnection . addIceCandidate ( candidateSignal . getLabel ( ) , candidateSignal . getSdp ( ) ) ; 
 + } catch ( Exception e ) { 
 + Log . e ( TAG , e ) ; 
 + } 
 + } 
 } 
 
 @ Override 
 public void onCallEnded ( ) { 
 + Log . d ( TAG , " onCallEnded " ) ; 
 
 + / / TODO : Close 
 + peerConnection = null ; 
 + mediaStream = null ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java 
 index ccee846 . . 34f9f9c 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsPeerConnection . java 
 @ @ - 2 , 6 + 2 , 8 @ @ package im . actor . core . js . providers . webrtc ; 
 
 import com . google . gwt . core . client . JavaScriptObject ; 
 
 + import im . actor . core . js . entity . JsClosure ; 
 + import im . actor . core . js . entity . JsClosureError ; 
 import im . actor . core . js . modules . JsScheduller ; 
 import im . actor . runtime . promise . Promise ; 
 import im . actor . runtime . promise . PromiseFunc ; 
 @ @ - 10 , 7 + 12 , 7 @ @ import im . actor . runtime . promise . PromiseResolver ; 
 public class JsPeerConnection extends JavaScriptObject { 
 
 public static native JsPeerConnection create ( JsPeerConnectionConfig config ) / * - { 
 - return { peerConnection : new webkitRTCPeerConnection ( config ) } ; 
 + return { peerConnection : new webkitRTCPeerConnection ( config , { optional : [ { DtlsSrtpKeyAgreement : true } ] } ) } ; 
 } - * / ; 
 
 protected JsPeerConnection ( ) { 
 @ @ - 27 , 8 + 29 , 27 @ @ public class JsPeerConnection extends JavaScriptObject { 
 this . peerConnection . setLocalDescription ( description ) ; 
 } - * / ; 
 
 - public final native void setRemoteDescription ( JsSessionDescription description ) / * - { 
 - this . peerConnection . setRemoteDescription ( description ) ; 
 + public final Promise < String > setRemoteDescription ( final JsSessionDescription description ) { 
 + return new Promise < > ( new PromiseFunc < String > ( ) { 
 + @ Override 
 + public void exec ( final PromiseResolver < String > resolver ) { 
 + setRemoteDescription ( description , new JsClosure ( ) { 
 + @ Override 
 + public void callback ( ) { 
 + resolver . result ( null ) ; 
 + } 
 + } , new JsClosureError ( ) { 
 + @ Override 
 + public void onError ( JavaScriptObject error ) { 
 + resolver . error ( new RuntimeException ( ) ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) . done ( JsScheduller . scheduller ( ) ) ; 
 + } 
 + 
 + public final native void addIceCandidate ( int label , String candidate ) / * - { 
 + this . peerConnection . addIceCandidate ( new RTCIceCandidate ( { sdpMLineIndex : label , candidate : candidate } ) ) ; 
 } - * / ; 
 
 public final Promise < JsSessionDescription > createOffer ( ) { 
 @ @ - 50 , 11 + 71 , 50 @ @ public class JsPeerConnection extends JavaScriptObject { 
 } ) . done ( JsScheduller . scheduller ( ) ) ; 
 } 
 
 + public final Promise < JsSessionDescription > createAnswer ( ) { 
 + return new Promise < > ( new PromiseFunc < JsSessionDescription > ( ) { 
 + @ Override 
 + public void exec ( final PromiseResolver < JsSessionDescription > resolver ) { 
 + createAnswer ( new JsSessionDescriptionCallback ( ) { 
 + @ Override 
 + public void onOfferCreated ( JsSessionDescription offer ) { 
 + resolver . result ( offer ) ; 
 + } 
 + 
 + @ Override 
 + public void onOfferFailure ( ) { 
 + resolver . error ( new RuntimeException ( " Offer failure " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) . done ( JsScheduller . scheduller ( ) ) ; 
 + } 
 + 
 private final native void createOffer ( JsSessionDescriptionCallback callback ) / * - { 
 this . peerConnection . createOffer ( function ( offer ) { 
 callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferCreated ( * ) ( offer ) ; 
 } , function ( error ) { 
 + $ wnd . console . warn ( error ) ; 
 + callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferFailure ( * ) ( ) ; 
 + } ) ; 
 + } - * / ; 
 + 
 + private final native void createAnswer ( JsSessionDescriptionCallback callback ) / * - { 
 + this . peerConnection . createAnswer ( function ( offer ) { 
 + callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferCreated ( * ) ( offer ) ; 
 + } , function ( error ) { 
 + $ wnd . console . warn ( error ) ; 
 callback . @ im . actor . core . js . providers . webrtc . JsSessionDescriptionCallback : : onOfferFailure ( * ) ( ) ; 
 } ) ; 
 } - * / ; 
 + 
 + 
 + private final native void setRemoteDescription ( JsSessionDescription description , JsClosure closure , JsClosureError error ) / * - { 
 + this . peerConnection . setRemoteDescription ( description , function ( ) { 
 + closure . @ im . actor . core . js . entity . JsClosure : : callback ( * ) ( ) ; 
 + } , function ( e ) { 
 + $ wnd . console . warn ( e ) ; 
 + error . @ im . actor . core . js . entity . JsClosureError : : onError ( * ) ( e ) ; 
 + } ) ; 
 + } - * / ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsRTCIceCandidate . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsRTCIceCandidate . java 
 new file mode 100644 
 index 0000000 . . 0dd3617 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsRTCIceCandidate . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package im . actor . core . js . providers . webrtc ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + 
 + public class JsRTCIceCandidate extends JavaScriptObject { 
 + 
 + public native static JsRTCIceCandidate create ( String candidate ) / * - { 
 + return new RTCIceCandidate ( candidate ) ; 
 + } - * / ; 
 + 
 + protected JsRTCIceCandidate ( ) { 
 + 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java 
 index 4154488 . . 7df0909 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / webrtc / JsSessionDescription . java 
 @ @ - 4 , 6 + 4 , 14 @ @ import com . google . gwt . core . client . JavaScriptObject ; 
 
 public class JsSessionDescription extends JavaScriptObject { 
 
 + public static native JsSessionDescription createOffer ( String sdp ) / * - { 
 + return new RTCSessionDescription ( { type : ' offer ' , sdp : sdp } ) ; 
 + } - * / ; 
 + 
 + public static native JsSessionDescription create ( JsUserMediaStream stream ) / * - { 
 + return new RTCSessionDescription ( stream ) ; 
 + } - * / ; 
 + 
 protected JsSessionDescription ( ) { 
 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 180a9e6 . . f040452 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 43 , 6 + 43 , 7 @ @ import im . actor . core . events . PeerChatOpened ; 
 import im . actor . core . events . PeerInfoClosed ; 
 import im . actor . core . events . PeerInfoOpened ; 
 import im . actor . core . events . UserVisible ; 
 + import im . actor . core . modules . calls . CallManagerActor ; 
 import im . actor . core . modules . calls . CallsModule ; 
 import im . actor . core . network . NetworkState ; 
 import im . actor . core . util . ActorTrace ; 
 @ @ - 1031 , 6 + 1032 , 14 @ @ public class Messenger { 
 modules . getCallsModule ( ) . sendSignal ( callId , data ) ; 
 } 
 
 + public void callSendSignaling ( AbsSignal data ) { 
 + modules . getCallsModule ( ) . getCallManager ( ) . send ( new CallManagerActor . SendSignaling ( data ) ) ; 
 + } 
 + 
 + public void callAnswer ( ) { 
 + modules . getCallsModule ( ) . getCallManager ( ) . send ( new CallManagerActor . AnswerCall ( ) ) ; 
 + } 
 + 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / Peer operations 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java 
 index e278409 . . 200013c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / WebRTCProvider . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package im . actor . core ; 
 
 + import im . actor . core . entity . signals . AbsSignal ; 
 + 
 public interface WebRTCProvider { 
 
 void onIncomingCall ( ) ; 
 @ @ - 8 , 7 + 10 , 7 @ @ public interface WebRTCProvider { 
 
 void onCallStarted ( ) ; 
 
 - void onSignalingReceived ( byte [ ] data ) ; 
 + void onSignalingReceived ( AbsSignal signal ) ; 
 
 void onCallEnded ( ) ; 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java 
 index c78d8fb . . 99de9b6 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AbsSignal . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import im . actor . runtime . bser . DataInput ; 
 
 public abstract class AbsSignal extends BserObject { 
 
 - String type ; 
 + private String type ; 
 
 @ Override 
 public void parse ( BserValues values ) throws IOException { 
 @ @ - 27 , 22 + 27 , 19 @ @ public abstract class AbsSignal extends BserObject { 
 
 public static AbsSignal fromBytes ( byte [ ] data ) { 
 try { 
 - 
 - AbsSignal res = null ; 
 BserValues values = new BserValues ( BserParser . deserialize ( new DataInput ( data , 0 , data . length ) ) ) ; 
 - if ( values . getString ( 1 ) . equals ( new OfferSignal ( ) . getType ( ) ) ) { 
 + String type = values . getString ( 1 ) ; 
 + AbsSignal res ; 
 + if ( OfferSignal . TYPE . equals ( type ) ) { 
 res = new OfferSignal ( ) ; 
 - } else if ( values . getString ( 1 ) . equals ( new AnswerSignal ( ) . getType ( ) ) ) { 
 + } else if ( AnswerSignal . TYPE . equals ( type ) ) { 
 res = new AnswerSignal ( ) ; 
 - } else if ( values . getString ( 1 ) . equals ( new CandidateSignal ( ) . getType ( ) ) ) { 
 + } else if ( CandidateSignal . TYPE . equals ( type ) ) { 
 res = new CandidateSignal ( ) ; 
 - } 
 - 
 - if ( res ! = null ) { 
 - res . parse ( values ) ; 
 } else { 
 - Log . w ( " Signaling parser " , " unknown signal " ) ; 
 + throw new IOException ( " Unknown signal type " + type ) ; 
 } 
 + res . parse ( values ) ; 
 return res ; 
 } catch ( IOException e ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java 
 index 9baf5de . . 2cc526c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / AnswerSignal . java 
 @ @ - 5 , 11 + 5 , 10 @ @ import java . io . IOException ; 
 import im . actor . runtime . bser . BserValues ; 
 import im . actor . runtime . bser . BserWriter ; 
 
 - / * * 
 - * Created by root on 1 / 15 / 16 . 
 - * / 
 public class AnswerSignal extends AbsSignal { 
 
 + public static final String TYPE = " answer " ; 
 + 
 private String sdp ; 
 
 public AnswerSignal ( String sdp ) { 
 @ @ - 35 , 6 + 34 , 11 @ @ public class AnswerSignal extends AbsSignal { 
 
 @ Override 
 public String getType ( ) { 
 - return " answer " ; 
 + return TYPE ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return " { type : " + TYPE + " , sdp : " + sdp + " } " ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java 
 index bd82885 . . 1b13e43 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / CandidateSignal . java 
 @ @ - 7 , 6 + 7 , 8 @ @ import im . actor . runtime . bser . BserWriter ; 
 
 public class CandidateSignal extends AbsSignal { 
 
 + public static final String TYPE = " candidate " ; 
 + 
 private String sdp ; 
 private int label ; 
 private String id ; 
 @ @ - 19 , 6 + 21 , 7 @ @ public class CandidateSignal extends AbsSignal { 
 } 
 
 public CandidateSignal ( ) { 
 + 
 } 
 
 public String getSdp ( ) { 
 @ @ - 49 , 6 + 52 , 11 @ @ public class CandidateSignal extends AbsSignal { 
 
 @ Override 
 public String getType ( ) { 
 - return " candidate " ; 
 + return TYPE ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return " { type : " + TYPE + " , id : " + id + " , label : " + label + " sdp : " + sdp + " } " ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java 
 index f4cd4f2 . . 456ad69 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / signals / OfferSignal . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import im . actor . runtime . bser . BserWriter ; 
 
 public class OfferSignal extends AbsSignal { 
 
 + public static final String TYPE = " OFFER " ; 
 
 private String sdp ; 
 
 @ @ - 15 , 8 + 16 , 8 @ @ public class OfferSignal extends AbsSignal { 
 } 
 
 public OfferSignal ( ) { 
 - } 
 
 + } 
 
 public String getSdp ( ) { 
 return sdp ; 
 @ @ - 34 , 6 + 35 , 11 @ @ public class OfferSignal extends AbsSignal { 
 
 @ Override 
 public String getType ( ) { 
 - return " OFFER " ; 
 + return TYPE ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return " { type : " + TYPE + " , sdp : " + sdp + " } " ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index c5f0055 . . 0df9b8b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 15 , 7 + 15 , 7 @ @ public class CallActor extends ModuleActor { 
 private boolean alive = false ; 
 private long callId ; 
 private CallsModule . CallCallback callback ; 
 - private ArrayList < byte [ ] > signals = new ArrayList < byte [ ] > ( ) ; 
 + private ArrayList < byte [ ] > signals = new ArrayList < > ( ) ; 
 
 public CallActor ( long callId , ModuleContext context ) { 
 super ( context ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index e496823 . . df83bde 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 1 , 6 + 1 , 9 @ @ 
 package im . actor . core . modules . calls ; 
 
 + import im . actor . core . api . rpc . RequestCallInProgress ; 
 + import im . actor . core . api . rpc . RequestSendCallSignal ; 
 import im . actor . core . api . rpc . RequestSubscribeToCalls ; 
 + import im . actor . core . entity . signals . AbsSignal ; 
 import im . actor . core . events . NewSessionCreated ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . util . ModuleActor ; 
 @ @ - 20 , 8 + 23 , 12 @ @ public class CallManagerActor extends ModuleActor { 
 } 
 
 private static final String TAG = " CallManagerActor " ; 
 + private static final int IN _ PROGRESS _ TIMEOUT = 15000 ; 
 
 private long subscribeRequest = - 1 ; 
 + private long progressRequest = - 1 ; 
 + 
 + private long runningCallId = - 1 ; 
 
 public CallManagerActor ( ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 36 , 10 + 43 , 41 @ @ public class CallManagerActor extends ModuleActor { 
 
 private void onIncomingCall ( long callId , int uid ) { 
 Log . d ( TAG , " onIncomingCall ( " + callId + " , " + uid + " ) " ) ; 
 + if ( runningCallId ! = - 1 ) { 
 + return ; 
 + } 
 + runningCallId = callId ; 
 + config ( ) . getWebRTCProvider ( ) . onIncomingCall ( ) ; 
 + } 
 + 
 + private void onAnswerCall ( ) { 
 + Log . d ( TAG , " onAnswerCall " ) ; 
 + if ( runningCallId = = - 1 ) { 
 + return ; 
 + } 
 + 
 + progressRequest = request ( new RequestCallInProgress ( runningCallId , IN _ PROGRESS _ TIMEOUT ) ) ; 
 } 
 
 private void onSignaling ( long callId , byte [ ] message ) { 
 Log . d ( TAG , " onSignaling ( " + callId + " ) " ) ; 
 + if ( runningCallId ! = callId ) { 
 + return ; 
 + } 
 + 
 + AbsSignal signal = AbsSignal . fromBytes ( message ) ; 
 + if ( signal ! = null ) { 
 + config ( ) . getWebRTCProvider ( ) . onSignalingReceived ( signal ) ; 
 + } 
 + } 
 + 
 + private void onSendSignal ( AbsSignal signal ) { 
 + Log . d ( TAG , " onSendSignal : " + signal ) ; 
 + if ( runningCallId = = - 1 ) { 
 + return ; 
 + } 
 + 
 + request ( new RequestSendCallSignal ( runningCallId , signal . toByteArray ( ) ) ) ; 
 } 
 
 private void subscribeForCalls ( ) { 
 @ @ - 67 , 6 + 105 , 10 @ @ public class CallManagerActor extends ModuleActor { 
 } else if ( message instanceof OnSignaling ) { 
 OnSignaling signaling = ( OnSignaling ) message ; 
 onSignaling ( signaling . getCallId ( ) , signaling . getMessage ( ) ) ; 
 + } else if ( message instanceof AnswerCall ) { 
 + onAnswerCall ( ) ; 
 + } else if ( message instanceof SendSignaling ) { 
 + onSendSignal ( ( ( SendSignaling ) message ) . getSignal ( ) ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 @ @ - 108 , 4 + 150 , 21 @ @ public class CallManagerActor extends ModuleActor { 
 return message ; 
 } 
 } 
 + 
 + public static class AnswerCall { 
 + 
 + } 
 + 
 + public static class SendSignaling { 
 + 
 + private AbsSignal signal ; 
 + 
 + public SendSignaling ( AbsSignal signal ) { 
 + this . signal = signal ; 
 + } 
 + 
 + public AbsSignal getSignal ( ) { 
 + return signal ; 
 + } 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java 
 index 027b5ac . . 5941ae3 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsProcessor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . core . modules . calls ; 
 
 + import im . actor . core . api . updates . UpdateCallEnded ; 
 import im . actor . core . api . updates . UpdateCallSignal ; 
 import im . actor . core . api . updates . UpdateIncomingCall ; 
 import im . actor . core . modules . ModuleContext ; 
 @ @ - 27 , 6 + 28 , 11 @ @ public class CallsProcessor implements Processor { 
 new CallManagerActor . OnSignaling ( 
 updateCallSignal . getCallId ( ) , 
 updateCallSignal . getContent ( ) ) ) ; 
 + return true ; 
 + } else if ( update instanceof UpdateCallEnded ) { 
 + UpdateCallEnded callEnded = ( UpdateCallEnded ) update ; 
 + 
 + return true ; 
 } 
 return false ; 
 }
