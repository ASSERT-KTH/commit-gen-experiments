BLEU SCORE: 0.8633400213704505

TEST MSG: fix ( android ) : notification settings in delegate
GENERATED MSG: feat ( android ) : notification settings in delegate

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > index 3fcd812 . . 7855a9b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > @ @ - 7 , 9 + 7 , 11 @ @ import android . content . Intent ; < nl > import android . graphics . Bitmap ; < nl > import android . graphics . BitmapFactory ; < nl > import android . graphics . Canvas ; < nl > + import android . graphics . Color ; < nl > import android . graphics . drawable . Drawable ; < nl > import android . media . AudioManager ; < nl > import android . media . SoundPool ; < nl > + import android . net . Uri ; < nl > import android . support . v4 . app . NotificationCompat ; < nl > import android . support . v4 . graphics . drawable . RoundedBitmapDrawable ; < nl > import android . support . v4 . graphics . drawable . RoundedBitmapDrawableFactory ; < nl > @ @ - 77 , 9 + 79 , 6 @ @ public class AndroidNotifications implements NotificationProvider { < nl > builder . setCategory ( NotificationCompat . CATEGORY _ MESSAGE ) ; < nl > < nl > int defaults = NotificationCompat . DEFAULT _ LIGHTS ; < nl > - if ( messenger . isNotificationSoundEnabled ( ) ) { < nl > - defaults | = NotificationCompat . DEFAULT _ SOUND ; < nl > - } < nl > if ( messenger . isNotificationVibrationEnabled ( ) ) { < nl > defaults | = NotificationCompat . DEFAULT _ VIBRATE ; < nl > } < nl > @ @ - 229 , 8 + 228 , 6 @ @ public class AndroidNotifications implements NotificationProvider { < nl > / / Multiple conversations notification < nl > builder . setContentTitle ( ActorSDK . sharedActor ( ) . getAppName ( ) ) ; < nl > builder . setContentText ( messagesCount + context . getString ( R . string . notification _ multiple _ canversations _ after _ msg _ count ) + conversationsCount + context . getString ( R . string . notifications _ multiple _ canversations _ after _ coversations _ count ) ) ; < nl > - builder . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColor ( ) ) ; < nl > - builder . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSound ( ) ) ; < nl > visiblePeer = null ; < nl > < nl > intent = new Intent ( context , ActorMainActivity . class ) ; < nl > @ @ - 248 , 6 + 245 , 7 @ @ public class AndroidNotifications implements NotificationProvider { < nl > result = builder < nl > . setStyle ( inboxStyle ) < nl > . build ( ) ; < nl > + addCustomLedAndSound ( topNotification , result ) ; < nl > < nl > NotificationManager manager = ( NotificationManager ) context . getSystemService ( Context . NOTIFICATION _ SERVICE ) ; < nl > manager . notify ( NOTIFICATION _ ID , result ) ; < nl > @ @ - 256 , 6 + 254 , 20 @ @ public class AndroidNotifications implements NotificationProvider { < nl > < nl > } < nl > < nl > + public void addCustomLedAndSound ( Notification topNotification , android . app . Notification result ) { < nl > + if ( messenger ( ) . isNotificationSoundEnabled ( ) ) { < nl > + result . defaults & = ~ NotificationCompat . DEFAULT _ SOUND ; < nl > + result . sound = ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ; < nl > + } < nl > + result . ledARGB = ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ; < nl > + if ( result . ledARGB ! = 0 ) { < nl > + result . ledOnMS = 100 ; < nl > + result . ledOffMS = 100 ; < nl > + result . defaults & = ~ NotificationCompat . DEFAULT _ LIGHTS ; < nl > + result . flags | = NotificationCompat . FLAG _ SHOW _ LIGHTS ; < nl > + } < nl > + } < nl > + < nl > @ Override < nl > public void onUpdateNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) { < nl > / / TODO : Implement < nl > @ @ - 279 , 21 + 291 , 19 @ @ public class AndroidNotifications implements NotificationProvider { < nl > < nl > private android . app . Notification buildSingleConversationNotification ( NotificationCompat . Builder builder , NotificationCompat . InboxStyle inboxStyle , Drawable avatarDrawable , Notification topNotification ) { < nl > < nl > - return builder < nl > - . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) < nl > - . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) < nl > + android . app . Notification notification = builder < nl > . setLargeIcon ( drawableToBitmap ( avatarDrawable ) ) < nl > . setContentIntent ( PendingIntent . getActivity ( context , 0 , < nl > Intents . openDialog ( topNotification . getPeer ( ) , false , context ) , < nl > PendingIntent . FLAG _ UPDATE _ CURRENT ) ) < nl > . setStyle ( inboxStyle ) < nl > . build ( ) ; < nl > + addCustomLedAndSound ( topNotification , notification ) ; < nl > + return notification ; < nl > } < nl > < nl > private android . app . Notification buildSingleMessageNotification ( Drawable d , NotificationCompat . Builder builder , String sender , CharSequence text , Notification topNotification ) { < nl > - return builder < nl > - . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) < nl > - . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) < nl > + android . app . Notification notification = builder < nl > . setContentTitle ( sender ) < nl > . setContentText ( text ) < nl > . setLargeIcon ( drawableToBitmap ( d ) ) < nl > @ @ - 302 , 6 + 312 , 8 @ @ public class AndroidNotifications implements NotificationProvider { < nl > PendingIntent . FLAG _ CANCEL _ CURRENT ) ) < nl > . setStyle ( new NotificationCompat . BigTextStyle ( ) . bigText ( text ) ) < nl > . build ( ) ; < nl > + addCustomLedAndSound ( topNotification , notification ) ; < nl > + return notification ; < nl > } < nl > < nl > public static Bitmap drawableToBitmap ( Drawable drawable ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > index ac57135 . . ec9baf7 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > @ @ - 1 , 6 + 1 , 8 @ @ < nl > package im . actor . sdk ; < nl > < nl > import android . content . Context ; < nl > + import android . net . Uri ; < nl > + import android . provider . Settings ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > < nl > @ @ - 126 , 6 + 128 , 37 @ @ public interface ActorSDKDelegate { < nl > * / < nl > MessageHolder getCustomMessageViewHolder ( int dataTypeHash , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) ; < nl > < nl > + / * * < nl > + * Override for setting specific notification sound for peer < nl > + * < nl > + * @ param peer peer to set notification sound < nl > + * @ return notification sound uri < nl > + * / < nl > + Uri getNotificationSoundForPeer ( Peer peer ) ; < nl > + < nl > + < nl > + / * * < nl > + * Override for setting specific notification color for peer < nl > + * < nl > + * @ param peer peer to set notification color < nl > + * @ return notification sound color < nl > + * / < nl > + int getNotificationColorForPeer ( Peer peer ) ; < nl > + < nl > + < nl > + / * * < nl > + * Override change notification sound < nl > + * < nl > + * @ return notification sound uri < nl > + * / < nl > + Uri getNotificationSound ( ) ; < nl > + < nl > + / * * < nl > + * Override change notification color < nl > + * < nl > + * @ return notification sound color < nl > + * / < nl > + int getNotificationColor ( ) ; < nl > < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index f5c47cc . . 52bc3ac 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 1 , 6 + 1 , 8 @ @ < nl > package im . actor . sdk ; < nl > < nl > import android . content . Context ; < nl > + import android . net . Uri ; < nl > + import android . provider . Settings ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > < nl > @ @ - 253 , 4 + 255 , 21 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > return null ; < nl > } < nl > < nl > + public Uri getNotificationSoundForPeer ( Peer peer ) { < nl > + return getNotificationSound ( ) ; < nl > + } < nl > + < nl > + public int getNotificationColorForPeer ( Peer peer ) { < nl > + return getNotificationColor ( ) ; < nl > + } < nl > + < nl > + public Uri getNotificationSound ( ) { < nl > + return Settings . System . DEFAULT _ NOTIFICATION _ URI ; < nl > + } < nl > + < nl > + public int getNotificationColor ( ) { < nl > + return ActorSDK . sharedActor ( ) . style . getMainColor ( ) ; < nl > + } < nl > + < nl > + < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > index fe59815 . . 3fcd812 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > @ @ - 229 , 6 + 229 , 8 @ @ public class AndroidNotifications implements NotificationProvider { < nl > / / Multiple conversations notification < nl > builder . setContentTitle ( ActorSDK . sharedActor ( ) . getAppName ( ) ) ; < nl > builder . setContentText ( messagesCount + context . getString ( R . string . notification _ multiple _ canversations _ after _ msg _ count ) + conversationsCount + context . getString ( R . string . notifications _ multiple _ canversations _ after _ coversations _ count ) ) ; < nl > + builder . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColor ( ) ) ; < nl > + builder . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSound ( ) ) ; < nl > visiblePeer = null ; < nl > < nl > intent = new Intent ( context , ActorMainActivity . class ) ; < nl > @ @ - 278 , 6 + 280 , 8 @ @ public class AndroidNotifications implements NotificationProvider { < nl > private android . app . Notification buildSingleConversationNotification ( NotificationCompat . Builder builder , NotificationCompat . InboxStyle inboxStyle , Drawable avatarDrawable , Notification topNotification ) { < nl > < nl > return builder < nl > + . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) < nl > + . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) < nl > . setLargeIcon ( drawableToBitmap ( avatarDrawable ) ) < nl > . setContentIntent ( PendingIntent . getActivity ( context , 0 , < nl > Intents . openDialog ( topNotification . getPeer ( ) , false , context ) , < nl > @ @ - 288 , 6 + 292 , 8 @ @ public class AndroidNotifications implements NotificationProvider { < nl > < nl > private android . app . Notification buildSingleMessageNotification ( Drawable d , NotificationCompat . Builder builder , String sender , CharSequence text , Notification topNotification ) { < nl > return builder < nl > + . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) < nl > + . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) < nl > . setContentTitle ( sender ) < nl > . setContentText ( text ) < nl > . setLargeIcon ( drawableToBitmap ( d ) )

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 index 3fcd812 . . 7855a9b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 @ @ - 7 , 9 + 7 , 11 @ @ import android . content . Intent ; 
 import android . graphics . Bitmap ; 
 import android . graphics . BitmapFactory ; 
 import android . graphics . Canvas ; 
 + import android . graphics . Color ; 
 import android . graphics . drawable . Drawable ; 
 import android . media . AudioManager ; 
 import android . media . SoundPool ; 
 + import android . net . Uri ; 
 import android . support . v4 . app . NotificationCompat ; 
 import android . support . v4 . graphics . drawable . RoundedBitmapDrawable ; 
 import android . support . v4 . graphics . drawable . RoundedBitmapDrawableFactory ; 
 @ @ - 77 , 9 + 79 , 6 @ @ public class AndroidNotifications implements NotificationProvider { 
 builder . setCategory ( NotificationCompat . CATEGORY _ MESSAGE ) ; 
 
 int defaults = NotificationCompat . DEFAULT _ LIGHTS ; 
 - if ( messenger . isNotificationSoundEnabled ( ) ) { 
 - defaults | = NotificationCompat . DEFAULT _ SOUND ; 
 - } 
 if ( messenger . isNotificationVibrationEnabled ( ) ) { 
 defaults | = NotificationCompat . DEFAULT _ VIBRATE ; 
 } 
 @ @ - 229 , 8 + 228 , 6 @ @ public class AndroidNotifications implements NotificationProvider { 
 / / Multiple conversations notification 
 builder . setContentTitle ( ActorSDK . sharedActor ( ) . getAppName ( ) ) ; 
 builder . setContentText ( messagesCount + context . getString ( R . string . notification _ multiple _ canversations _ after _ msg _ count ) + conversationsCount + context . getString ( R . string . notifications _ multiple _ canversations _ after _ coversations _ count ) ) ; 
 - builder . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColor ( ) ) ; 
 - builder . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSound ( ) ) ; 
 visiblePeer = null ; 
 
 intent = new Intent ( context , ActorMainActivity . class ) ; 
 @ @ - 248 , 6 + 245 , 7 @ @ public class AndroidNotifications implements NotificationProvider { 
 result = builder 
 . setStyle ( inboxStyle ) 
 . build ( ) ; 
 + addCustomLedAndSound ( topNotification , result ) ; 
 
 NotificationManager manager = ( NotificationManager ) context . getSystemService ( Context . NOTIFICATION _ SERVICE ) ; 
 manager . notify ( NOTIFICATION _ ID , result ) ; 
 @ @ - 256 , 6 + 254 , 20 @ @ public class AndroidNotifications implements NotificationProvider { 
 
 } 
 
 + public void addCustomLedAndSound ( Notification topNotification , android . app . Notification result ) { 
 + if ( messenger ( ) . isNotificationSoundEnabled ( ) ) { 
 + result . defaults & = ~ NotificationCompat . DEFAULT _ SOUND ; 
 + result . sound = ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ; 
 + } 
 + result . ledARGB = ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ; 
 + if ( result . ledARGB ! = 0 ) { 
 + result . ledOnMS = 100 ; 
 + result . ledOffMS = 100 ; 
 + result . defaults & = ~ NotificationCompat . DEFAULT _ LIGHTS ; 
 + result . flags | = NotificationCompat . FLAG _ SHOW _ LIGHTS ; 
 + } 
 + } 
 + 
 @ Override 
 public void onUpdateNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) { 
 / / TODO : Implement 
 @ @ - 279 , 21 + 291 , 19 @ @ public class AndroidNotifications implements NotificationProvider { 
 
 private android . app . Notification buildSingleConversationNotification ( NotificationCompat . Builder builder , NotificationCompat . InboxStyle inboxStyle , Drawable avatarDrawable , Notification topNotification ) { 
 
 - return builder 
 - . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) 
 - . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) 
 + android . app . Notification notification = builder 
 . setLargeIcon ( drawableToBitmap ( avatarDrawable ) ) 
 . setContentIntent ( PendingIntent . getActivity ( context , 0 , 
 Intents . openDialog ( topNotification . getPeer ( ) , false , context ) , 
 PendingIntent . FLAG _ UPDATE _ CURRENT ) ) 
 . setStyle ( inboxStyle ) 
 . build ( ) ; 
 + addCustomLedAndSound ( topNotification , notification ) ; 
 + return notification ; 
 } 
 
 private android . app . Notification buildSingleMessageNotification ( Drawable d , NotificationCompat . Builder builder , String sender , CharSequence text , Notification topNotification ) { 
 - return builder 
 - . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) 
 - . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) 
 + android . app . Notification notification = builder 
 . setContentTitle ( sender ) 
 . setContentText ( text ) 
 . setLargeIcon ( drawableToBitmap ( d ) ) 
 @ @ - 302 , 6 + 312 , 8 @ @ public class AndroidNotifications implements NotificationProvider { 
 PendingIntent . FLAG _ CANCEL _ CURRENT ) ) 
 . setStyle ( new NotificationCompat . BigTextStyle ( ) . bigText ( text ) ) 
 . build ( ) ; 
 + addCustomLedAndSound ( topNotification , notification ) ; 
 + return notification ; 
 } 
 
 public static Bitmap drawableToBitmap ( Drawable drawable ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 index ac57135 . . ec9baf7 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 @ @ - 1 , 6 + 1 , 8 @ @ 
 package im . actor . sdk ; 
 
 import android . content . Context ; 
 + import android . net . Uri ; 
 + import android . provider . Settings ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 
 @ @ - 126 , 6 + 128 , 37 @ @ public interface ActorSDKDelegate { 
 * / 
 MessageHolder getCustomMessageViewHolder ( int dataTypeHash , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) ; 
 
 + / * * 
 + * Override for setting specific notification sound for peer 
 + * 
 + * @ param peer peer to set notification sound 
 + * @ return notification sound uri 
 + * / 
 + Uri getNotificationSoundForPeer ( Peer peer ) ; 
 + 
 + 
 + / * * 
 + * Override for setting specific notification color for peer 
 + * 
 + * @ param peer peer to set notification color 
 + * @ return notification sound color 
 + * / 
 + int getNotificationColorForPeer ( Peer peer ) ; 
 + 
 + 
 + / * * 
 + * Override change notification sound 
 + * 
 + * @ return notification sound uri 
 + * / 
 + Uri getNotificationSound ( ) ; 
 + 
 + / * * 
 + * Override change notification color 
 + * 
 + * @ return notification sound color 
 + * / 
 + int getNotificationColor ( ) ; 
 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index f5c47cc . . 52bc3ac 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 1 , 6 + 1 , 8 @ @ 
 package im . actor . sdk ; 
 
 import android . content . Context ; 
 + import android . net . Uri ; 
 + import android . provider . Settings ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 
 @ @ - 253 , 4 + 255 , 21 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 return null ; 
 } 
 
 + public Uri getNotificationSoundForPeer ( Peer peer ) { 
 + return getNotificationSound ( ) ; 
 + } 
 + 
 + public int getNotificationColorForPeer ( Peer peer ) { 
 + return getNotificationColor ( ) ; 
 + } 
 + 
 + public Uri getNotificationSound ( ) { 
 + return Settings . System . DEFAULT _ NOTIFICATION _ URI ; 
 + } 
 + 
 + public int getNotificationColor ( ) { 
 + return ActorSDK . sharedActor ( ) . style . getMainColor ( ) ; 
 + } 
 + 
 + 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 index fe59815 . . 3fcd812 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 @ @ - 229 , 6 + 229 , 8 @ @ public class AndroidNotifications implements NotificationProvider { 
 / / Multiple conversations notification 
 builder . setContentTitle ( ActorSDK . sharedActor ( ) . getAppName ( ) ) ; 
 builder . setContentText ( messagesCount + context . getString ( R . string . notification _ multiple _ canversations _ after _ msg _ count ) + conversationsCount + context . getString ( R . string . notifications _ multiple _ canversations _ after _ coversations _ count ) ) ; 
 + builder . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColor ( ) ) ; 
 + builder . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSound ( ) ) ; 
 visiblePeer = null ; 
 
 intent = new Intent ( context , ActorMainActivity . class ) ; 
 @ @ - 278 , 6 + 280 , 8 @ @ public class AndroidNotifications implements NotificationProvider { 
 private android . app . Notification buildSingleConversationNotification ( NotificationCompat . Builder builder , NotificationCompat . InboxStyle inboxStyle , Drawable avatarDrawable , Notification topNotification ) { 
 
 return builder 
 + . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) 
 + . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) 
 . setLargeIcon ( drawableToBitmap ( avatarDrawable ) ) 
 . setContentIntent ( PendingIntent . getActivity ( context , 0 , 
 Intents . openDialog ( topNotification . getPeer ( ) , false , context ) , 
 @ @ - 288 , 6 + 292 , 8 @ @ public class AndroidNotifications implements NotificationProvider { 
 
 private android . app . Notification buildSingleMessageNotification ( Drawable d , NotificationCompat . Builder builder , String sender , CharSequence text , Notification topNotification ) { 
 return builder 
 + . setSound ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationSoundForPeer ( topNotification . getPeer ( ) ) ) 
 + . setColor ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getNotificationColorForPeer ( topNotification . getPeer ( ) ) ) 
 . setContentTitle ( sender ) 
 . setContentText ( text ) 
 . setLargeIcon ( drawableToBitmap ( d ) )
