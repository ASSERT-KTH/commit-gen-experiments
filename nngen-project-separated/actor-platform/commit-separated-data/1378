BLEU SCORE: 0.23462350320528

TEST MSG: feat ( android ) : handle " send : " links
GENERATED MSG: fix ( android ) : bad link crash

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index ce697ba . . 5c2d9e8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 1204 , 4 + 1204 , 8 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > oa . setDuration ( 0 ) ; < nl > oa . start ( ) ; < nl > } < nl > + < nl > + public Peer getPeer ( ) { < nl > + return peer ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java < nl > index e002956 . . fd94417 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . sdk . view . markdown ; < nl > < nl > + import android . content . Context ; < nl > import android . content . Intent ; < nl > import android . graphics . Color ; < nl > import android . graphics . Typeface ; < nl > @ @ - 14 , 6 + 15 , 8 @ @ import android . text . style . StyleSpan ; < nl > import android . view . View ; < nl > import android . widget . Toast ; < nl > < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . controllers . conversation . ChatActivity ; < nl > import im . actor . sdk . controllers . fragment . preview . CodePreviewActivity ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > import im . actor . runtime . markdown . MDDocument ; < nl > @ @ - 93 , 21 + 96 , 28 @ @ public class AndroidMarkdown { < nl > builder . setSpan ( new ClickableSpan ( ) { < nl > @ Override < nl > public void onClick ( View view ) { < nl > - Intent intent = new Intent ( Intent . ACTION _ VIEW ) < nl > - . setData ( Uri . parse ( url . getUrl ( ) ) ) < nl > - . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; < nl > - if ( intent . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { < nl > - AndroidContext . getContext ( ) . startActivity ( < nl > - intent ) ; < nl > + if ( url . getUrl ( ) . startsWith ( " send : " ) ) { < nl > + Context ctx = view . getContext ( ) ; < nl > + if ( ctx instanceof ChatActivity ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . sendMessage ( ( ( ChatActivity ) ctx ) . getPeer ( ) , url . getUrl ( ) . replace ( " send : " , " " ) ) ; < nl > + } < nl > } else { < nl > - Intent WithSchema = new Intent ( Intent . ACTION _ VIEW ) < nl > - . setData ( Uri . parse ( " http : / / " . concat ( url . getUrl ( ) ) ) ) < nl > + Intent intent = new Intent ( Intent . ACTION _ VIEW ) < nl > + . setData ( Uri . parse ( url . getUrl ( ) ) ) < nl > . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; < nl > - if ( WithSchema . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { < nl > + if ( intent . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { < nl > AndroidContext . getContext ( ) . startActivity ( < nl > - WithSchema ) ; < nl > + intent ) ; < nl > } else { < nl > - Toast . makeText ( view . getContext ( ) , " Unknown URL type " , Toast . LENGTH _ SHORT ) . show ( ) ; < nl > + Intent WithSchema = new Intent ( Intent . ACTION _ VIEW ) < nl > + . setData ( Uri . parse ( " http : / / " . concat ( url . getUrl ( ) ) ) ) < nl > + . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; < nl > + if ( WithSchema . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { < nl > + AndroidContext . getContext ( ) . startActivity ( < nl > + WithSchema ) ; < nl > + } else { < nl > + Toast . makeText ( view . getContext ( ) , " Unknown URL type " , Toast . LENGTH _ SHORT ) . show ( ) ; < nl > + } < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index f8ee6ef . . 8a52e33 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 29 , 6 + 29 , 7 @ @ import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . conversation . view . MentionSpan ; < nl > import im . actor . sdk . util . Strings ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > import im . actor . sdk . view . markdown . AndroidMarkdown ; < nl > import im . actor . runtime . generic . mvvm . ListProcessor ; < nl > @ @ - 251 , 7 + 252 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > return false ; < nl > } < nl > < nl > - URLSpan span = ( isMention & & isGroup & & found ) ? new MentionSpan ( nick , userId , false ) : new URLSpan ( m . group ( ) ) ; < nl > + URLSpan span = ( isMention & & isGroup & & found ) ? new MentionSpan ( nick , userId , false ) : new BaseUrlSpan ( m . group ( ) , false ) ; < nl > < nl > < nl > spannable . setSpan ( span , m . start ( ) , m . end ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java < nl > index 50efbd8 . . cea6b77 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java < nl > @ @ - 12 , 6 + 12 , 7 @ @ import android . text . style . ForegroundColorSpan ; < nl > import android . text . style . RelativeSizeSpan ; < nl > import android . text . style . StyleSpan ; < nl > import android . view . View ; < nl > + import android . widget . Toast ; < nl > < nl > import im . actor . sdk . controllers . fragment . preview . CodePreviewActivity ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > @ @ - 92 , 10 + 93 , 16 @ @ public class AndroidMarkdown { < nl > builder . setSpan ( new ClickableSpan ( ) { < nl > @ Override < nl > public void onClick ( View view ) { < nl > - AndroidContext . getContext ( ) . startActivity ( < nl > - new Intent ( Intent . ACTION _ VIEW ) < nl > - . setData ( Uri . parse ( url . getUrl ( ) ) ) < nl > - . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ) ; < nl > + Intent intent = new Intent ( Intent . ACTION _ VIEW ) < nl > + . setData ( Uri . parse ( url . getUrl ( ) ) ) < nl > + . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; < nl > + if ( intent . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { < nl > + AndroidContext . getContext ( ) . startActivity ( < nl > + intent ) ; < nl > + } else { < nl > + Toast . makeText ( view . getContext ( ) , " Unknown URL type " , Toast . LENGTH _ SHORT ) . show ( ) ; < nl > + } < nl > + < nl > } < nl > } , start , builder . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > } else {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index ce697ba . . 5c2d9e8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 1204 , 4 + 1204 , 8 @ @ public class ChatActivity extends ActorEditTextActivity { 
 oa . setDuration ( 0 ) ; 
 oa . start ( ) ; 
 } 
 + 
 + public Peer getPeer ( ) { 
 + return peer ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java 
 index e002956 . . fd94417 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . sdk . view . markdown ; 
 
 + import android . content . Context ; 
 import android . content . Intent ; 
 import android . graphics . Color ; 
 import android . graphics . Typeface ; 
 @ @ - 14 , 6 + 15 , 8 @ @ import android . text . style . StyleSpan ; 
 import android . view . View ; 
 import android . widget . Toast ; 
 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . controllers . conversation . ChatActivity ; 
 import im . actor . sdk . controllers . fragment . preview . CodePreviewActivity ; 
 import im . actor . runtime . android . AndroidContext ; 
 import im . actor . runtime . markdown . MDDocument ; 
 @ @ - 93 , 21 + 96 , 28 @ @ public class AndroidMarkdown { 
 builder . setSpan ( new ClickableSpan ( ) { 
 @ Override 
 public void onClick ( View view ) { 
 - Intent intent = new Intent ( Intent . ACTION _ VIEW ) 
 - . setData ( Uri . parse ( url . getUrl ( ) ) ) 
 - . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; 
 - if ( intent . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { 
 - AndroidContext . getContext ( ) . startActivity ( 
 - intent ) ; 
 + if ( url . getUrl ( ) . startsWith ( " send : " ) ) { 
 + Context ctx = view . getContext ( ) ; 
 + if ( ctx instanceof ChatActivity ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . sendMessage ( ( ( ChatActivity ) ctx ) . getPeer ( ) , url . getUrl ( ) . replace ( " send : " , " " ) ) ; 
 + } 
 } else { 
 - Intent WithSchema = new Intent ( Intent . ACTION _ VIEW ) 
 - . setData ( Uri . parse ( " http : / / " . concat ( url . getUrl ( ) ) ) ) 
 + Intent intent = new Intent ( Intent . ACTION _ VIEW ) 
 + . setData ( Uri . parse ( url . getUrl ( ) ) ) 
 . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; 
 - if ( WithSchema . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { 
 + if ( intent . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { 
 AndroidContext . getContext ( ) . startActivity ( 
 - WithSchema ) ; 
 + intent ) ; 
 } else { 
 - Toast . makeText ( view . getContext ( ) , " Unknown URL type " , Toast . LENGTH _ SHORT ) . show ( ) ; 
 + Intent WithSchema = new Intent ( Intent . ACTION _ VIEW ) 
 + . setData ( Uri . parse ( " http : / / " . concat ( url . getUrl ( ) ) ) ) 
 + . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; 
 + if ( WithSchema . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { 
 + AndroidContext . getContext ( ) . startActivity ( 
 + WithSchema ) ; 
 + } else { 
 + Toast . makeText ( view . getContext ( ) , " Unknown URL type " , Toast . LENGTH _ SHORT ) . show ( ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index f8ee6ef . . 8a52e33 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . conversation . view . MentionSpan ; 
 import im . actor . sdk . util . Strings ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 import im . actor . sdk . view . markdown . AndroidMarkdown ; 
 import im . actor . runtime . generic . mvvm . ListProcessor ; 
 @ @ - 251 , 7 + 252 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 return false ; 
 } 
 
 - URLSpan span = ( isMention & & isGroup & & found ) ? new MentionSpan ( nick , userId , false ) : new URLSpan ( m . group ( ) ) ; 
 + URLSpan span = ( isMention & & isGroup & & found ) ? new MentionSpan ( nick , userId , false ) : new BaseUrlSpan ( m . group ( ) , false ) ; 
 
 
 spannable . setSpan ( span , m . start ( ) , m . end ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java 
 index 50efbd8 . . cea6b77 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / markdown / AndroidMarkdown . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import android . text . style . ForegroundColorSpan ; 
 import android . text . style . RelativeSizeSpan ; 
 import android . text . style . StyleSpan ; 
 import android . view . View ; 
 + import android . widget . Toast ; 
 
 import im . actor . sdk . controllers . fragment . preview . CodePreviewActivity ; 
 import im . actor . runtime . android . AndroidContext ; 
 @ @ - 92 , 10 + 93 , 16 @ @ public class AndroidMarkdown { 
 builder . setSpan ( new ClickableSpan ( ) { 
 @ Override 
 public void onClick ( View view ) { 
 - AndroidContext . getContext ( ) . startActivity ( 
 - new Intent ( Intent . ACTION _ VIEW ) 
 - . setData ( Uri . parse ( url . getUrl ( ) ) ) 
 - . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ) ; 
 + Intent intent = new Intent ( Intent . ACTION _ VIEW ) 
 + . setData ( Uri . parse ( url . getUrl ( ) ) ) 
 + . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK ) ; 
 + if ( intent . resolveActivity ( view . getContext ( ) . getPackageManager ( ) ) ! = null ) { 
 + AndroidContext . getContext ( ) . startActivity ( 
 + intent ) ; 
 + } else { 
 + Toast . makeText ( view . getContext ( ) , " Unknown URL type " , Toast . LENGTH _ SHORT ) . show ( ) ; 
 + } 
 + 
 } 
 } , start , builder . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 } else {
