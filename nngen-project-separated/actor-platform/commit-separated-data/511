BLEU SCORE: 0.02383853510228548

TEST MSG: feat ( android ) : unblock user in chat
GENERATED MSG: Merge commit ' 38f34b306a02a3f49f7f937eb5d33aacab3a4e26 ' into calls / v2

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > index 6668ebf . . 84d8197 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > @ @ - 14 , 6 + 14 , 14 @ @ import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > + import im . actor . runtime . actors . Props ; < nl > + import im . actor . runtime . actors . messages . PoisonPill ; < nl > + import im . actor . runtime . function . Consumer ; < nl > + import im . actor . runtime . promise . Promise ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . fragment . ActorBinder ; < nl > @ @ - 29 , 6 + 37 , 13 @ @ public class BaseActivity extends AppCompatActivity { < nl > < nl > private boolean isResumed = false ; < nl > < nl > + private ActorRef promiseActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public Actor create ( ) { < nl > + return new Actor ( ) ; < nl > + } < nl > + } ) , " actor / promise _ actor _ " + hashCode ( ) ) ; < nl > + < nl > @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > super . onCreate ( savedInstanceState ) ; < nl > @ @ - 114 , 6 + 129 , 7 @ @ public class BaseActivity extends AppCompatActivity { < nl > protected void onDestroy ( ) { < nl > super . onDestroy ( ) ; < nl > notifyOnPause ( ) ; < nl > + promiseActor . send ( PoisonPill . INSTANCE ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 188 , 13 + 204 , 13 @ @ public class BaseActivity extends AppCompatActivity { < nl > cmd . start ( new CommandCallback < T > ( ) { < nl > @ Override < nl > public void onResult ( T res ) { < nl > - dismissDiaog ( progressDialog ) ; < nl > + dismissDialog ( progressDialog ) ; < nl > callback . onResult ( res ) ; < nl > } < nl > < nl > @ Override < nl > public void onError ( Exception e ) { < nl > - dismissDiaog ( progressDialog ) ; < nl > + dismissDialog ( progressDialog ) ; < nl > callback . onError ( e ) ; < nl > } < nl > } ) ; < nl > @ @ - 217 , 17 + 233 , 39 @ @ public class BaseActivity extends AppCompatActivity { < nl > cmd . start ( new CommandCallback < T > ( ) { < nl > @ Override < nl > public void onResult ( T res ) { < nl > - dismissDiaog ( progressDialog ) ; < nl > + dismissDialog ( progressDialog ) ; < nl > } < nl > < nl > @ Override < nl > public void onError ( Exception e ) { < nl > - dismissDiaog ( progressDialog ) ; < nl > + dismissDialog ( progressDialog ) ; < nl > } < nl > } ) ; < nl > } < nl > < nl > - public void dismissDiaog ( ProgressDialog progressDialog ) { < nl > + public < T > void execute ( Promise < T > promise ) { < nl > + execute ( promise , R . string . progress _ common ) ; < nl > + } < nl > + < nl > + public < T > void execute ( Promise < T > promise , int title ) { < nl > + final ProgressDialog dialog = ProgressDialog . show ( this , " " , getString ( title ) , true , false ) ; < nl > + promise < nl > + . then ( new Consumer < T > ( ) { < nl > + @ Override < nl > + public void apply ( T t ) { < nl > + dismissDialog ( dialog ) ; < nl > + } < nl > + } ) < nl > + . failure ( new Consumer < Exception > ( ) { < nl > + @ Override < nl > + public void apply ( Exception e ) { < nl > + dismissDialog ( dialog ) ; < nl > + } < nl > + } ) < nl > + . done ( promiseActor ) ; < nl > + } < nl > + < nl > + public void dismissDialog ( ProgressDialog progressDialog ) { < nl > try { < nl > progressDialog . dismiss ( ) ; < nl > } catch ( Exception ex ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java < nl > index f8b793e . . be29eec 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java < nl > @ @ - 41 , 7 + 41 , 7 @ @ public abstract class ActorEditTextActivity extends BaseActivity { < nl > / / Attach button < nl > protected ImageButton attachButton ; < nl > / / Removed from group panel < nl > - protected View removedFromGroup ; < nl > + protected View inputBlockContainer ; < nl > < nl > / / Helper for hide / show keyboard < nl > protected KeyboardHelper keyboardUtils ; < nl > @ @ - 50 , 6 + 50 , 7 @ @ public abstract class ActorEditTextActivity extends BaseActivity { < nl > protected EmojiKeyboard emojiKeyboard ; < nl > protected ImageView emojiButton ; < nl > protected FrameLayout sendContainer ; < nl > + protected TextView inputBlockedText ; < nl > < nl > @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > @ @ - 146 , 9 + 147 , 10 @ @ public abstract class ActorEditTextActivity extends BaseActivity { < nl > } ) ; < nl > < nl > / / Kick panel < nl > - removedFromGroup = findViewById ( R . id . kickedFromChat ) ; < nl > - removedFromGroup . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - ( ( TextView ) removedFromGroup . findViewById ( R . id . kicked _ text ) ) . setTextColor ( style . getMainColor ( ) ) ; < nl > + inputBlockContainer = findViewById ( R . id . kickedFromChat ) ; < nl > + inputBlockContainer . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + inputBlockedText = ( TextView ) inputBlockContainer . findViewById ( R . id . kicked _ text ) ; < nl > + inputBlockedText . setTextColor ( style . getMainColor ( ) ) ; < nl > < nl > / / Emoji keyboard < nl > emojiButton = ( ImageView ) findViewById ( R . id . ib _ emoji ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index bac5ac6 . . 27baa07 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 701 , 8 + 701 , 20 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / Binding User typing to Toolbar < nl > bindPrivateTyping ( barTyping , barTypingContainer , barSubtitle , messenger ( ) . getTyping ( user . getId ( ) ) ) ; < nl > < nl > - / / Hide removedFromGroup panel as we are not in group < nl > - removedFromGroup . setVisibility ( View . GONE ) ; < nl > + / / Bind user blocked < nl > + inputBlockedText . setText ( R . string . profile _ settings _ unblock ) ; < nl > + bind ( users ( ) . get ( peer . getPeerId ( ) ) . getIsBlocked ( ) , new ValueChangedListener < Boolean > ( ) { < nl > + @ Override < nl > + public void onChanged ( Boolean val , Value < Boolean > valueModel ) { < nl > + inputBlockContainer . setVisibility ( val ? View . VISIBLE : View . GONE ) ; < nl > + } < nl > + } ) ; < nl > + inputBlockedText . setOnClickListener ( new View . OnClickListener ( ) { < nl > + @ Override < nl > + public void onClick ( View v ) { < nl > + execute ( messenger ( ) . unblockUser ( peer . getPeerId ( ) ) ) ; < nl > + } < nl > + } ) ; < nl > < nl > } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > < nl > @ @ - 728 , 11 + 740 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / Binding group typing < nl > bindGroupTyping ( barTyping , barTypingContainer , barSubtitle , messenger ( ) . getGroupTyping ( group . getId ( ) ) ) ; < nl > < nl > - / / Binding membership flag to removedFromGroup panel < nl > + / / Binding membership flag to inputBlockContainer panel < nl > bind ( messenger ( ) . getGroups ( ) . get ( peer . getPeerId ( ) ) . isMember ( ) , new ValueChangedListener < Boolean > ( ) { < nl > @ Override < nl > public void onChanged ( Boolean val , Value < Boolean > Value ) { < nl > - removedFromGroup . setVisibility ( val ? View . GONE : View . VISIBLE ) ; < nl > + inputBlockContainer . setVisibility ( val ? View . GONE : View . VISIBLE ) ; < nl > } < nl > } ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java < nl > index 51390ab . . 4b20039 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java < nl > @ @ - 1 , 11 + 1 , 9 @ @ < nl > package im . actor . sdk . controllers . fragment ; < nl > < nl > - import android . support . v7 . app . AlertDialog ; < nl > import android . app . ProgressDialog ; < nl > import android . graphics . drawable . Drawable ; < nl > import android . os . Bundle ; < nl > import android . support . v4 . graphics . drawable . DrawableCompat ; < nl > - import android . support . v7 . app . AppCompatDialog ; < nl > import android . view . LayoutInflater ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > @ @ - 130 , 13 + 128 , 15 @ @ public class BaseFragment extends BinderCompatFragment { < nl > cmd . start ( new CommandCallback < T > ( ) { < nl > @ Override < nl > public void onResult ( T res ) { < nl > - dialog . dismiss ( ) ; < nl > + dismissDialog ( dialog ) ; < nl > + ; < nl > callback . onResult ( res ) ; < nl > } < nl > < nl > @ Override < nl > public void onError ( Exception e ) { < nl > - dialog . dismiss ( ) ; < nl > + dismissDialog ( dialog ) ; < nl > + ; < nl > callback . onError ( e ) ; < nl > } < nl > } ) ; < nl > @ @ - 153 , 12 + 153 , 14 @ @ public class BaseFragment extends BinderCompatFragment { < nl > cmd . start ( new CommandCallback < T > ( ) { < nl > @ Override < nl > public void onResult ( T res ) { < nl > - dialog . dismiss ( ) ; < nl > + dismissDialog ( dialog ) ; < nl > + ; < nl > } < nl > < nl > @ Override < nl > public void onError ( Exception e ) { < nl > - dialog . dismiss ( ) ; < nl > + dismissDialog ( dialog ) ; < nl > + ; < nl > } < nl > } ) ; < nl > } < nl > @ @ - 173 , 13 + 175 , 13 @ @ public class BaseFragment extends BinderCompatFragment { < nl > . then ( new Consumer < T > ( ) { < nl > @ Override < nl > public void apply ( T t ) { < nl > - dialog . dismiss ( ) ; < nl > + dismissDialog ( dialog ) ; < nl > } < nl > } ) < nl > . failure ( new Consumer < Exception > ( ) { < nl > @ Override < nl > public void apply ( Exception e ) { < nl > - dialog . dismiss ( ) ; < nl > + dismissDialog ( dialog ) ; < nl > } < nl > } ) < nl > . done ( promiseActor ) ; < nl > @ @ - 271 , 6 + 273 , 14 @ @ public class BaseFragment extends BinderCompatFragment { < nl > return recordView ; < nl > } < nl > < nl > + public void dismissDialog ( ProgressDialog progressDialog ) { < nl > + try { < nl > + progressDialog . dismiss ( ) ; < nl > + } catch ( Exception ex ) { < nl > + ex . printStackTrace ( ) ; < nl > + } < nl > + } < nl > + < nl > @ Override < nl > public void onDestroyView ( ) { < nl > super . onDestroyView ( ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > index 1a5bdbd . . ab63452 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > @ @ - 33 , 7 + 33 , 7 @ @ public class AudioActorEx extends AndroidPlayerActor { < nl > < nl > mplayer = new MediaPlayer ( ) ; < nl > mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; < nl > - / / mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; < nl > + mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; < nl > mplayer . prepare ( ) ; < nl > mplayer . setLooping ( true ) ; < nl > mplayer . start ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index dc07f04 . . fa9298f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 64 , 7 + 64 , 6 @ @ public class CallFragment extends BaseFragment { < nl > private Vibrator v ; < nl > private View answerContainer ; < nl > private Ringtone ringtone ; < nl > - private ActorRef toneActor ; < nl > private CallVM call ; < nl > private ActorRef timer ; < nl > private TextView timerTV ; < nl > @ @ - 160 , 7 + 159 , 7 @ @ public class CallFragment extends BaseFragment { < nl > initIncoming ( ) ; < nl > break ; < nl > case CALLING _ OUTGOING : < nl > - / / onConnecting ( ) ; < nl > + onConnecting ( ) ; < nl > break ; < nl > } < nl > } < nl > @ @ - 237 , 7 + 236 , 7 @ @ public class CallFragment extends BaseFragment { < nl > < nl > private void onAnswer ( ) { < nl > < nl > - / / onConnecting ( ) ; < nl > + onConnecting ( ) ; < nl > answerContainer . setVisibility ( View . INVISIBLE ) ; < nl > if ( ringtone ! = null ) { < nl > ringtone . stop ( ) ; < nl > @ @ - 261 , 64 + 260 , 6 @ @ public class CallFragment extends BaseFragment { < nl > < nl > < nl > public void onConnecting ( ) { < nl > - if ( toneActor = = null ) { < nl > - toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public AudioActorEx create ( ) { < nl > - return new AudioActorEx ( getActivity ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { < nl > - @ Override < nl > - public void onStart ( String fileName ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onStop ( String fileName ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onPause ( String fileName , float progress ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onProgress ( String fileName , float progress ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( String fileName ) { < nl > - < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) , " actor / android _ tone " ) ; < nl > - } < nl > - < nl > - toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; < nl > - < nl > - < nl > - vibrate = true ; < nl > - new Thread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - while ( vibrate ) { < nl > - try { < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 5 ) ; < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 200 ) ; < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 5 ) ; < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 600 ) ; < nl > - } catch ( InterruptedException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - } < nl > - } < nl > - } ) . start ( ) ; < nl > - < nl > powerManager = ( PowerManager ) getActivity ( ) . getSystemService ( Context . POWER _ SERVICE ) ; < nl > wakeLock = powerManager . newWakeLock ( field , getActivity ( ) . getLocalClassName ( ) ) ; < nl > < nl > @ @ - 329 , 9 + 270 , 6 @ @ public class CallFragment extends BaseFragment { < nl > < nl > < nl > public void onConnected ( ) { < nl > - if ( toneActor ! = null ) { < nl > - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; < nl > - } < nl > vibrate = false ; < nl > v . cancel ( ) ; < nl > v . vibrate ( 200 ) ; < nl > @ @ - 339 , 9 + 277 , 6 @ @ public class CallFragment extends BaseFragment { < nl > } < nl > < nl > public void onCallEnd ( ) { < nl > - if ( toneActor ! = null ) { < nl > - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; < nl > - } < nl > vibrate = false ; < nl > if ( ringtone ! = null ) { < nl > ringtone . stop ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > index 09a946c . . 661e59e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > @ @ - 5 , 12 + 5 , 21 @ @ import android . content . Intent ; < nl > < nl > import im . actor . core . providers . CallsProvider ; < nl > import im . actor . core . viewmodel . CallState ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > + import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . controllers . calls . AudioActorEx ; < nl > import im . actor . sdk . controllers . calls . CallActivity ; < nl > + import im . actor . sdk . core . audio . AndroidPlayerActor ; < nl > + import im . actor . sdk . core . audio . AudioPlayerActor ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > < nl > public class AndroidCallProvider implements CallsProvider { < nl > + private ActorRef toneActor ; < nl > + < nl > < nl > @ Override < nl > public void onCallStart ( long callId ) { < nl > @ @ - 29 , 16 + 38 , 52 @ @ public class AndroidCallProvider implements CallsProvider { < nl > < nl > @ Override < nl > public void onCallEnd ( long callId ) { < nl > - messenger ( ) . getCall ( callId ) . getState ( ) . change ( CallState . ENDED ) ; < nl > + < nl > } < nl > < nl > @ Override < nl > public void startOutgoingBeep ( ) { < nl > - / / TODO : Implement < nl > + if ( toneActor = = null ) { < nl > + toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public AudioActorEx create ( ) { < nl > + return new AudioActorEx ( messenger ( ) . getContext ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { < nl > + @ Override < nl > + public void onStart ( String fileName ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onStop ( String fileName ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onPause ( String fileName , float progress ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onProgress ( String fileName , float progress ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( String fileName ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) , " actor / android _ tone " ) ; < nl > + } < nl > + < nl > + toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; < nl > } < nl > < nl > @ Override < nl > public void stopOutgoingBeep ( ) { < nl > - / / TODO : Implement < nl > + if ( toneActor ! = null ) { < nl > + toneActor . send ( new AudioActorEx . Stop ( ) ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav < nl > new file mode 100644 < nl > index 0000000 . . 65f98cb < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav differ

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 index 6668ebf . . 84d8197 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 @ @ - 14 , 6 + 14 , 14 @ @ import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 + import im . actor . runtime . actors . Props ; 
 + import im . actor . runtime . actors . messages . PoisonPill ; 
 + import im . actor . runtime . function . Consumer ; 
 + import im . actor . runtime . promise . Promise ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . fragment . ActorBinder ; 
 @ @ - 29 , 6 + 37 , 13 @ @ public class BaseActivity extends AppCompatActivity { 
 
 private boolean isResumed = false ; 
 
 + private ActorRef promiseActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public Actor create ( ) { 
 + return new Actor ( ) ; 
 + } 
 + } ) , " actor / promise _ actor _ " + hashCode ( ) ) ; 
 + 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 super . onCreate ( savedInstanceState ) ; 
 @ @ - 114 , 6 + 129 , 7 @ @ public class BaseActivity extends AppCompatActivity { 
 protected void onDestroy ( ) { 
 super . onDestroy ( ) ; 
 notifyOnPause ( ) ; 
 + promiseActor . send ( PoisonPill . INSTANCE ) ; 
 } 
 
 @ Override 
 @ @ - 188 , 13 + 204 , 13 @ @ public class BaseActivity extends AppCompatActivity { 
 cmd . start ( new CommandCallback < T > ( ) { 
 @ Override 
 public void onResult ( T res ) { 
 - dismissDiaog ( progressDialog ) ; 
 + dismissDialog ( progressDialog ) ; 
 callback . onResult ( res ) ; 
 } 
 
 @ Override 
 public void onError ( Exception e ) { 
 - dismissDiaog ( progressDialog ) ; 
 + dismissDialog ( progressDialog ) ; 
 callback . onError ( e ) ; 
 } 
 } ) ; 
 @ @ - 217 , 17 + 233 , 39 @ @ public class BaseActivity extends AppCompatActivity { 
 cmd . start ( new CommandCallback < T > ( ) { 
 @ Override 
 public void onResult ( T res ) { 
 - dismissDiaog ( progressDialog ) ; 
 + dismissDialog ( progressDialog ) ; 
 } 
 
 @ Override 
 public void onError ( Exception e ) { 
 - dismissDiaog ( progressDialog ) ; 
 + dismissDialog ( progressDialog ) ; 
 } 
 } ) ; 
 } 
 
 - public void dismissDiaog ( ProgressDialog progressDialog ) { 
 + public < T > void execute ( Promise < T > promise ) { 
 + execute ( promise , R . string . progress _ common ) ; 
 + } 
 + 
 + public < T > void execute ( Promise < T > promise , int title ) { 
 + final ProgressDialog dialog = ProgressDialog . show ( this , " " , getString ( title ) , true , false ) ; 
 + promise 
 + . then ( new Consumer < T > ( ) { 
 + @ Override 
 + public void apply ( T t ) { 
 + dismissDialog ( dialog ) ; 
 + } 
 + } ) 
 + . failure ( new Consumer < Exception > ( ) { 
 + @ Override 
 + public void apply ( Exception e ) { 
 + dismissDialog ( dialog ) ; 
 + } 
 + } ) 
 + . done ( promiseActor ) ; 
 + } 
 + 
 + public void dismissDialog ( ProgressDialog progressDialog ) { 
 try { 
 progressDialog . dismiss ( ) ; 
 } catch ( Exception ex ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java 
 index f8b793e . . be29eec 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ActorEditTextActivity . java 
 @ @ - 41 , 7 + 41 , 7 @ @ public abstract class ActorEditTextActivity extends BaseActivity { 
 / / Attach button 
 protected ImageButton attachButton ; 
 / / Removed from group panel 
 - protected View removedFromGroup ; 
 + protected View inputBlockContainer ; 
 
 / / Helper for hide / show keyboard 
 protected KeyboardHelper keyboardUtils ; 
 @ @ - 50 , 6 + 50 , 7 @ @ public abstract class ActorEditTextActivity extends BaseActivity { 
 protected EmojiKeyboard emojiKeyboard ; 
 protected ImageView emojiButton ; 
 protected FrameLayout sendContainer ; 
 + protected TextView inputBlockedText ; 
 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 @ @ - 146 , 9 + 147 , 10 @ @ public abstract class ActorEditTextActivity extends BaseActivity { 
 } ) ; 
 
 / / Kick panel 
 - removedFromGroup = findViewById ( R . id . kickedFromChat ) ; 
 - removedFromGroup . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - ( ( TextView ) removedFromGroup . findViewById ( R . id . kicked _ text ) ) . setTextColor ( style . getMainColor ( ) ) ; 
 + inputBlockContainer = findViewById ( R . id . kickedFromChat ) ; 
 + inputBlockContainer . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + inputBlockedText = ( TextView ) inputBlockContainer . findViewById ( R . id . kicked _ text ) ; 
 + inputBlockedText . setTextColor ( style . getMainColor ( ) ) ; 
 
 / / Emoji keyboard 
 emojiButton = ( ImageView ) findViewById ( R . id . ib _ emoji ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index bac5ac6 . . 27baa07 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 701 , 8 + 701 , 20 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / Binding User typing to Toolbar 
 bindPrivateTyping ( barTyping , barTypingContainer , barSubtitle , messenger ( ) . getTyping ( user . getId ( ) ) ) ; 
 
 - / / Hide removedFromGroup panel as we are not in group 
 - removedFromGroup . setVisibility ( View . GONE ) ; 
 + / / Bind user blocked 
 + inputBlockedText . setText ( R . string . profile _ settings _ unblock ) ; 
 + bind ( users ( ) . get ( peer . getPeerId ( ) ) . getIsBlocked ( ) , new ValueChangedListener < Boolean > ( ) { 
 + @ Override 
 + public void onChanged ( Boolean val , Value < Boolean > valueModel ) { 
 + inputBlockContainer . setVisibility ( val ? View . VISIBLE : View . GONE ) ; 
 + } 
 + } ) ; 
 + inputBlockedText . setOnClickListener ( new View . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( View v ) { 
 + execute ( messenger ( ) . unblockUser ( peer . getPeerId ( ) ) ) ; 
 + } 
 + } ) ; 
 
 } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 
 @ @ - 728 , 11 + 740 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / Binding group typing 
 bindGroupTyping ( barTyping , barTypingContainer , barSubtitle , messenger ( ) . getGroupTyping ( group . getId ( ) ) ) ; 
 
 - / / Binding membership flag to removedFromGroup panel 
 + / / Binding membership flag to inputBlockContainer panel 
 bind ( messenger ( ) . getGroups ( ) . get ( peer . getPeerId ( ) ) . isMember ( ) , new ValueChangedListener < Boolean > ( ) { 
 @ Override 
 public void onChanged ( Boolean val , Value < Boolean > Value ) { 
 - removedFromGroup . setVisibility ( val ? View . GONE : View . VISIBLE ) ; 
 + inputBlockContainer . setVisibility ( val ? View . GONE : View . VISIBLE ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java 
 index 51390ab . . 4b20039 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java 
 @ @ - 1 , 11 + 1 , 9 @ @ 
 package im . actor . sdk . controllers . fragment ; 
 
 - import android . support . v7 . app . AlertDialog ; 
 import android . app . ProgressDialog ; 
 import android . graphics . drawable . Drawable ; 
 import android . os . Bundle ; 
 import android . support . v4 . graphics . drawable . DrawableCompat ; 
 - import android . support . v7 . app . AppCompatDialog ; 
 import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 @ @ - 130 , 13 + 128 , 15 @ @ public class BaseFragment extends BinderCompatFragment { 
 cmd . start ( new CommandCallback < T > ( ) { 
 @ Override 
 public void onResult ( T res ) { 
 - dialog . dismiss ( ) ; 
 + dismissDialog ( dialog ) ; 
 + ; 
 callback . onResult ( res ) ; 
 } 
 
 @ Override 
 public void onError ( Exception e ) { 
 - dialog . dismiss ( ) ; 
 + dismissDialog ( dialog ) ; 
 + ; 
 callback . onError ( e ) ; 
 } 
 } ) ; 
 @ @ - 153 , 12 + 153 , 14 @ @ public class BaseFragment extends BinderCompatFragment { 
 cmd . start ( new CommandCallback < T > ( ) { 
 @ Override 
 public void onResult ( T res ) { 
 - dialog . dismiss ( ) ; 
 + dismissDialog ( dialog ) ; 
 + ; 
 } 
 
 @ Override 
 public void onError ( Exception e ) { 
 - dialog . dismiss ( ) ; 
 + dismissDialog ( dialog ) ; 
 + ; 
 } 
 } ) ; 
 } 
 @ @ - 173 , 13 + 175 , 13 @ @ public class BaseFragment extends BinderCompatFragment { 
 . then ( new Consumer < T > ( ) { 
 @ Override 
 public void apply ( T t ) { 
 - dialog . dismiss ( ) ; 
 + dismissDialog ( dialog ) ; 
 } 
 } ) 
 . failure ( new Consumer < Exception > ( ) { 
 @ Override 
 public void apply ( Exception e ) { 
 - dialog . dismiss ( ) ; 
 + dismissDialog ( dialog ) ; 
 } 
 } ) 
 . done ( promiseActor ) ; 
 @ @ - 271 , 6 + 273 , 14 @ @ public class BaseFragment extends BinderCompatFragment { 
 return recordView ; 
 } 
 
 + public void dismissDialog ( ProgressDialog progressDialog ) { 
 + try { 
 + progressDialog . dismiss ( ) ; 
 + } catch ( Exception ex ) { 
 + ex . printStackTrace ( ) ; 
 + } 
 + } 
 + 
 @ Override 
 public void onDestroyView ( ) { 
 super . onDestroyView ( ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 index 1a5bdbd . . ab63452 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 @ @ - 33 , 7 + 33 , 7 @ @ public class AudioActorEx extends AndroidPlayerActor { 
 
 mplayer = new MediaPlayer ( ) ; 
 mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; 
 - / / mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; 
 + mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; 
 mplayer . prepare ( ) ; 
 mplayer . setLooping ( true ) ; 
 mplayer . start ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index dc07f04 . . fa9298f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 64 , 7 + 64 , 6 @ @ public class CallFragment extends BaseFragment { 
 private Vibrator v ; 
 private View answerContainer ; 
 private Ringtone ringtone ; 
 - private ActorRef toneActor ; 
 private CallVM call ; 
 private ActorRef timer ; 
 private TextView timerTV ; 
 @ @ - 160 , 7 + 159 , 7 @ @ public class CallFragment extends BaseFragment { 
 initIncoming ( ) ; 
 break ; 
 case CALLING _ OUTGOING : 
 - / / onConnecting ( ) ; 
 + onConnecting ( ) ; 
 break ; 
 } 
 } 
 @ @ - 237 , 7 + 236 , 7 @ @ public class CallFragment extends BaseFragment { 
 
 private void onAnswer ( ) { 
 
 - / / onConnecting ( ) ; 
 + onConnecting ( ) ; 
 answerContainer . setVisibility ( View . INVISIBLE ) ; 
 if ( ringtone ! = null ) { 
 ringtone . stop ( ) ; 
 @ @ - 261 , 64 + 260 , 6 @ @ public class CallFragment extends BaseFragment { 
 
 
 public void onConnecting ( ) { 
 - if ( toneActor = = null ) { 
 - toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public AudioActorEx create ( ) { 
 - return new AudioActorEx ( getActivity ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { 
 - @ Override 
 - public void onStart ( String fileName ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onStop ( String fileName ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onPause ( String fileName , float progress ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onProgress ( String fileName , float progress ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onError ( String fileName ) { 
 - 
 - } 
 - } ) ; 
 - } 
 - } ) , " actor / android _ tone " ) ; 
 - } 
 - 
 - toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; 
 - 
 - 
 - vibrate = true ; 
 - new Thread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - while ( vibrate ) { 
 - try { 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 5 ) ; 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 200 ) ; 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 5 ) ; 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 600 ) ; 
 - } catch ( InterruptedException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - } 
 - } 
 - } ) . start ( ) ; 
 - 
 powerManager = ( PowerManager ) getActivity ( ) . getSystemService ( Context . POWER _ SERVICE ) ; 
 wakeLock = powerManager . newWakeLock ( field , getActivity ( ) . getLocalClassName ( ) ) ; 
 
 @ @ - 329 , 9 + 270 , 6 @ @ public class CallFragment extends BaseFragment { 
 
 
 public void onConnected ( ) { 
 - if ( toneActor ! = null ) { 
 - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; 
 - } 
 vibrate = false ; 
 v . cancel ( ) ; 
 v . vibrate ( 200 ) ; 
 @ @ - 339 , 9 + 277 , 6 @ @ public class CallFragment extends BaseFragment { 
 } 
 
 public void onCallEnd ( ) { 
 - if ( toneActor ! = null ) { 
 - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; 
 - } 
 vibrate = false ; 
 if ( ringtone ! = null ) { 
 ringtone . stop ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 index 09a946c . . 661e59e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 @ @ - 5 , 12 + 5 , 21 @ @ import android . content . Intent ; 
 
 import im . actor . core . providers . CallsProvider ; 
 import im . actor . core . viewmodel . CallState ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 + import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . controllers . calls . AudioActorEx ; 
 import im . actor . sdk . controllers . calls . CallActivity ; 
 + import im . actor . sdk . core . audio . AndroidPlayerActor ; 
 + import im . actor . sdk . core . audio . AudioPlayerActor ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 
 public class AndroidCallProvider implements CallsProvider { 
 + private ActorRef toneActor ; 
 + 
 
 @ Override 
 public void onCallStart ( long callId ) { 
 @ @ - 29 , 16 + 38 , 52 @ @ public class AndroidCallProvider implements CallsProvider { 
 
 @ Override 
 public void onCallEnd ( long callId ) { 
 - messenger ( ) . getCall ( callId ) . getState ( ) . change ( CallState . ENDED ) ; 
 + 
 } 
 
 @ Override 
 public void startOutgoingBeep ( ) { 
 - / / TODO : Implement 
 + if ( toneActor = = null ) { 
 + toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public AudioActorEx create ( ) { 
 + return new AudioActorEx ( messenger ( ) . getContext ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { 
 + @ Override 
 + public void onStart ( String fileName ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onStop ( String fileName ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onPause ( String fileName , float progress ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onProgress ( String fileName , float progress ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( String fileName ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } ) , " actor / android _ tone " ) ; 
 + } 
 + 
 + toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; 
 } 
 
 @ Override 
 public void stopOutgoingBeep ( ) { 
 - / / TODO : Implement 
 + if ( toneActor ! = null ) { 
 + toneActor . send ( new AudioActorEx . Stop ( ) ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav 
 new file mode 100644 
 index 0000000 . . 65f98cb 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav differ
