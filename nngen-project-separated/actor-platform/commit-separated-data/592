BLEU SCORE: 0.3050975216056289

TEST MSG: ref ( android ) : Refactored package structure
GENERATED MSG: feat ( android ) : add fast share menu

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > index 16e78f7 . . 470055e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > @ @ - 141 , 7 + 141 , 7 @ @ < nl > < ! - - Compose - - > < nl > < nl > < activity < nl > - android : name = " im . actor . sdk . controllers . fragment . compose . ComposeActivity " < nl > + android : name = " . controllers . compose . ComposeActivity " < nl > android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " < nl > android : theme = " @ style / CommonActivityTheme " < nl > android : windowSoftInputMode = " adjustResize " / > < nl > @ @ - 159 , 7 + 159 , 7 @ @ < nl > android : windowSoftInputMode = " adjustResize " / > < nl > < nl > < activity < nl > - android : name = " im . actor . sdk . controllers . fragment . compose . CreateGroupActivity " < nl > + android : name = " . controllers . compose . CreateGroupActivity " < nl > android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " < nl > android : theme = " @ style / CommonActivityTheme " < nl > android : windowSoftInputMode = " adjustResize | stateVisible " / > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > index 6a514e0 . . c80455e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > @ @ - 38 , 8 + 38 , 8 @ @ import im . actor . runtime . generic . mvvm . DisplayList ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > import im . actor . sdk . controllers . activity . AddContactActivity ; < nl > - import im . actor . sdk . controllers . fragment . compose . ComposeActivity ; < nl > - import im . actor . sdk . controllers . fragment . compose . CreateGroupActivity ; < nl > + import im . actor . sdk . controllers . compose . ComposeActivity ; < nl > + import im . actor . sdk . controllers . compose . CreateGroupActivity ; < nl > import im . actor . sdk . controllers . contacts . ContactsFragment ; < nl > import im . actor . sdk . controllers . dialogs . DialogsFragment ; < nl > import im . actor . sdk . controllers . fragment . help . HelpActivity ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeActivity . java < nl > new file mode 100644 < nl > index 0000000 . . da71dfe < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeActivity . java < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + package im . actor . sdk . controllers . compose ; < nl > + < nl > + import android . os . Bundle ; < nl > + < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > + < nl > + / * * < nl > + * Created by ex3ndr on 20 . 09 . 14 . < nl > + * / < nl > + public class ComposeActivity extends BaseFragmentActivity { < nl > + < nl > + @ Override < nl > + protected void onCreate ( Bundle savedInstanceState ) { < nl > + super . onCreate ( savedInstanceState ) ; < nl > + < nl > + getSupportActionBar ( ) . setTitle ( R . string . compose _ title ) ; < nl > + < nl > + showFragment ( new ComposeFragment ( ) , false , false ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeFragment . java < nl > new file mode 100644 < nl > index 0000000 . . e3b7469 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeFragment . java < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + package im . actor . sdk . controllers . compose ; < nl > + < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . contacts . BaseContactFragment ; < nl > + import im . actor . core . entity . Contact ; < nl > + < nl > + / * * < nl > + * Created by ex3ndr on 23 . 09 . 14 . < nl > + * / < nl > + public class ComposeFragment extends BaseContactFragment { < nl > + < nl > + public ComposeFragment ( ) { < nl > + super ( true , true , false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onItemClicked ( Contact contact ) { < nl > + getActivity ( ) . startActivity ( Intents . openPrivateDialog ( contact . getUid ( ) , true , getActivity ( ) ) ) ; < nl > + getActivity ( ) . finish ( ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / CreateGroupActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / CreateGroupActivity . java < nl > new file mode 100644 < nl > index 0000000 . . cf5f343 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / CreateGroupActivity . java < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + package im . actor . sdk . controllers . compose ; < nl > + < nl > + import android . os . Bundle ; < nl > + < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > + < nl > + / * * < nl > + * Created by ex3ndr on 04 . 10 . 14 . < nl > + * / < nl > + public class CreateGroupActivity extends BaseFragmentActivity { < nl > + < nl > + @ Override < nl > + protected void onCreate ( Bundle savedInstanceState ) { < nl > + super . onCreate ( savedInstanceState ) ; < nl > + getSupportActionBar ( ) . setTitle ( R . string . create _ group _ title ) ; < nl > + showFragment ( new GroupNameFragment ( ) , false , false ) ; < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupNameFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupNameFragment . java < nl > new file mode 100644 < nl > index 0000000 . . ed36f21 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupNameFragment . java < nl > @ @ - 0 , 0 + 1 , 125 @ @ < nl > + package im . actor . sdk . controllers . compose ; < nl > + < nl > + import android . app . Activity ; < nl > + import android . content . Intent ; < nl > + import android . os . Bundle ; < nl > + import android . view . KeyEvent ; < nl > + import android . view . LayoutInflater ; < nl > + import android . view . Menu ; < nl > + import android . view . MenuInflater ; < nl > + import android . view . MenuItem ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . view . inputmethod . EditorInfo ; < nl > + import android . widget . EditText ; < nl > + import android . widget . TextView ; < nl > + < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . fragment . BaseFragment ; < nl > + import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . view . avatar . AvatarView ; < nl > + import im . actor . sdk . util . KeyboardHelper ; < nl > + < nl > + / * * < nl > + * Created by ex3ndr on 04 . 10 . 14 . < nl > + * / < nl > + public class GroupNameFragment extends BaseFragment { < nl > + < nl > + private static final int REQUEST _ AVATAR = 1 ; < nl > + < nl > + private EditText groupName ; < nl > + private AvatarView avatarView ; < nl > + < nl > + private String avatarPath ; < nl > + < nl > + private KeyboardHelper helper ; < nl > + < nl > + @ Override < nl > + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > + helper = new KeyboardHelper ( getActivity ( ) ) ; < nl > + < nl > + View res = inflater . inflate ( R . layout . fragment _ create _ group _ name , container , false ) ; < nl > + res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + ( ( TextView ) res . findViewById ( R . id . create _ group _ hint ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > + groupName = ( EditText ) res . findViewById ( R . id . groupTitle ) ; < nl > + groupName . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { < nl > + @ Override < nl > + public boolean onEditorAction ( TextView v , int actionId , KeyEvent event ) { < nl > + if ( actionId = = EditorInfo . IME _ ACTION _ NEXT ) { < nl > + next ( ) ; < nl > + return true ; < nl > + } < nl > + return false ; < nl > + } < nl > + } ) ; < nl > + groupName . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > + groupName . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; < nl > + < nl > + avatarView = ( AvatarView ) res . findViewById ( R . id . avatar ) ; < nl > + avatarView . init ( Screen . dp ( 96 ) , 24 ) ; < nl > + avatarView . getHierarchy ( ) . setPlaceholderImage ( R . drawable . circle _ placeholder ) ; < nl > + / / avatarView . getHierarchy ( ) . setControllerOverlay ( getResources ( ) . getDrawable ( R . drawable . circle _ selector ) ) ; < nl > + avatarView . setImageURI ( null ) ; < nl > + < nl > + res . findViewById ( R . id . pickAvatar ) . setOnClickListener ( new View . OnClickListener ( ) { < nl > + @ Override < nl > + public void onClick ( View view ) { < nl > + startActivityForResult ( Intents . pickAvatar ( avatarPath ! = null , getActivity ( ) ) , REQUEST _ AVATAR ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + return res ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onResume ( ) { < nl > + super . onResume ( ) ; < nl > + groupName . requestFocus ( ) ; < nl > + helper . setImeVisibility ( groupName , true ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { < nl > + super . onCreateOptionsMenu ( menu , inflater ) ; < nl > + inflater . inflate ( R . menu . next , menu ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public boolean onOptionsItemSelected ( MenuItem item ) { < nl > + if ( item . getItemId ( ) = = R . id . next ) { < nl > + next ( ) ; < nl > + return true ; < nl > + } < nl > + return super . onOptionsItemSelected ( item ) ; < nl > + } < nl > + < nl > + private void next ( ) { < nl > + String title = groupName . getText ( ) . toString ( ) . trim ( ) ; < nl > + if ( title . length ( ) > 0 ) { < nl > + ( ( CreateGroupActivity ) getActivity ( ) ) . showNextFragment ( < nl > + GroupUsersFragment . create ( groupName . getText ( ) . toString ( ) . trim ( ) , avatarPath ) , false , true ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onActivityResult ( int requestCode , int resultCode , Intent data ) { < nl > + if ( requestCode = = REQUEST _ AVATAR & & resultCode = = Activity . RESULT _ OK ) { < nl > + int res = data . getIntExtra ( Intents . EXTRA _ RESULT , Intents . RESULT _ IMAGE ) ; < nl > + if ( res = = Intents . RESULT _ DELETE ) { < nl > + this . avatarPath = null ; < nl > + this . avatarView . unbind ( ) ; < nl > + } else if ( res = = Intents . RESULT _ IMAGE ) { < nl > + this . avatarPath = data . getStringExtra ( Intents . EXTRA _ IMAGE ) ; < nl > + this . avatarView . bindRaw ( avatarPath ) ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onPause ( ) { < nl > + super . onPause ( ) ; < nl > + helper . setImeVisibility ( groupName , false ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupUsersFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupUsersFragment . java < nl > new file mode 100644 < nl > index 0000000 . . 237720d < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupUsersFragment . java < nl > @ @ - 0 , 0 + 1 , 191 @ @ < nl > + package im . actor . sdk . controllers . compose ; < nl > + < nl > + import android . os . Bundle ; < nl > + import android . text . Editable ; < nl > + import android . text . Spannable ; < nl > + import android . text . SpannableString ; < nl > + import android . text . Spanned ; < nl > + import android . text . TextWatcher ; < nl > + import android . view . LayoutInflater ; < nl > + import android . view . Menu ; < nl > + import android . view . MenuInflater ; < nl > + import android . view . MenuItem ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . widget . EditText ; < nl > + < nl > + import im . actor . core . entity . Contact ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . compose . view . UserSpan ; < nl > + import im . actor . sdk . controllers . contacts . BaseContactFragment ; < nl > + import im . actor . sdk . util . BoxUtil ; < nl > + import im . actor . sdk . util . Screen ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > + < nl > + public class GroupUsersFragment extends BaseContactFragment { < nl > + < nl > + private String title ; < nl > + private String avatarPath ; < nl > + private EditText searchField ; < nl > + private TextWatcher textWatcher ; < nl > + < nl > + public GroupUsersFragment ( ) { < nl > + super ( true , false , true ) ; < nl > + } < nl > + < nl > + public static GroupUsersFragment create ( String title , String avatarPath ) { < nl > + GroupUsersFragment res = new GroupUsersFragment ( ) ; < nl > + Bundle args = new Bundle ( ) ; < nl > + args . putString ( " title " , title ) ; < nl > + args . putString ( " avatarPath " , avatarPath ) ; < nl > + res . setArguments ( args ) ; < nl > + return res ; < nl > + } < nl > + < nl > + @ Override < nl > + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > + < nl > + title = getArguments ( ) . getString ( " title " ) ; < nl > + avatarPath = getArguments ( ) . getString ( " avatarPath " ) ; < nl > + < nl > + View res = onCreateContactsView ( R . layout . fragment _ create _ group _ participants , inflater , < nl > + container , savedInstanceState ) ; < nl > + res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + searchField = ( EditText ) res . findViewById ( R . id . searchField ) ; < nl > + searchField . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > + searchField . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; < nl > + textWatcher = new TextWatcher ( ) { < nl > + @ Override < nl > + public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onTextChanged ( CharSequence s , int start , int before , int count ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void afterTextChanged ( Editable s ) { < nl > + checkForDeletions ( s ) ; < nl > + String filter = s . toString ( ) . trim ( ) ; < nl > + while ( filter . length ( ) > 0 & & filter . charAt ( 0 ) = = ' ! ' ) { < nl > + filter = filter . substring ( 1 ) ; < nl > + } < nl > + filter ( filter ) ; < nl > + } < nl > + } ; < nl > + return res ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onResume ( ) { < nl > + super . onResume ( ) ; < nl > + searchField . addTextChangedListener ( textWatcher ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { < nl > + super . onCreateOptionsMenu ( menu , inflater ) ; < nl > + inflater . inflate ( R . menu . create _ group , menu ) ; < nl > + menu . findItem ( R . id . done ) . setEnabled ( getSelectedCount ( ) > 0 ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public boolean onOptionsItemSelected ( MenuItem item ) { < nl > + if ( item . getItemId ( ) = = R . id . done ) { < nl > + if ( getSelectedCount ( ) > 0 ) { < nl > + execute ( messenger ( ) . createGroup ( title , avatarPath , BoxUtil . unbox ( getSelected ( ) ) ) , < nl > + R . string . progress _ common , new CommandCallback < Integer > ( ) { < nl > + @ Override < nl > + public void onResult ( Integer res ) { < nl > + getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; < nl > + getActivity ( ) . finish ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + return true ; < nl > + } < nl > + return super . onOptionsItemSelected ( item ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onItemClicked ( Contact contact ) { < nl > + if ( isSelected ( contact . getUid ( ) ) ) { < nl > + unselect ( contact . getUid ( ) ) ; < nl > + } else { < nl > + select ( contact . getUid ( ) ) ; < nl > + } < nl > + getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > + updateEditText ( ) ; < nl > + } < nl > + < nl > + private void updateEditText ( ) { < nl > + Integer [ ] selected = getSelected ( ) ; < nl > + String src = " " ; < nl > + for ( int i = 0 ; i < selected . length ; i + + ) { < nl > + src + = " ! " ; < nl > + } < nl > + Spannable spannable = new SpannableString ( src ) ; < nl > + for ( int i = 0 ; i < selected . length ; i + + ) { < nl > + spannable . setSpan ( new UserSpan ( users ( ) . get ( selected [ i ] ) , Screen . dp ( 200 ) ) , i , i + 1 , Spanned . SPAN _ INCLUSIVE _ EXCLUSIVE ) ; < nl > + } < nl > + searchField . removeTextChangedListener ( textWatcher ) ; < nl > + searchField . setText ( spannable ) ; < nl > + searchField . setSelection ( spannable . length ( ) ) ; < nl > + searchField . addTextChangedListener ( textWatcher ) ; < nl > + filter ( " " ) ; < nl > + getAdapter ( ) . notifyDataSetChanged ( ) ; < nl > + } < nl > + < nl > + private void checkForDeletions ( Editable editable ) { < nl > + Integer [ ] selected = getSelected ( ) ; < nl > + boolean hasDeletions = false ; < nl > + UserSpan [ ] spans = editable . getSpans ( 0 , editable . length ( ) , UserSpan . class ) ; < nl > + for ( Integer u : selected ) { < nl > + boolean founded = false ; < nl > + for ( UserSpan span : spans ) { < nl > + if ( span . getUser ( ) . getId ( ) = = u ) { < nl > + if ( editable . getSpanStart ( span ) = = editable . getSpanEnd ( span ) ) { < nl > + break ; < nl > + } else { < nl > + founded = true ; < nl > + break ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + if ( ! founded ) { < nl > + hasDeletions = true ; < nl > + unselect ( u ) ; < nl > + } < nl > + } < nl > + if ( hasDeletions ) { < nl > + getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > + getAdapter ( ) . notifyDataSetChanged ( ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onPause ( ) { < nl > + super . onPause ( ) ; < nl > + searchField . removeTextChangedListener ( textWatcher ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onDestroyView ( ) { < nl > + super . onDestroyView ( ) ; < nl > + textWatcher = null ; < nl > + searchField = null ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / view / UserSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / view / UserSpan . java < nl > new file mode 100644 < nl > index 0000000 . . d93ccf9 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / view / UserSpan . java < nl > @ @ - 0 , 0 + 1 , 65 @ @ < nl > + package im . actor . sdk . controllers . compose . view ; < nl > + < nl > + import android . graphics . Canvas ; < nl > + import android . graphics . Paint ; < nl > + import android . graphics . RectF ; < nl > + import android . text . TextPaint ; < nl > + import android . text . TextUtils ; < nl > + import android . text . style . ReplacementSpan ; < nl > + < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . util . Screen ; < nl > + import im . actor . core . viewmodel . UserVM ; < nl > + < nl > + / * * < nl > + * Created by ex3ndr on 26 . 03 . 15 . < nl > + * / < nl > + public class UserSpan extends ReplacementSpan { < nl > + < nl > + private UserVM user ; < nl > + private int maxW ; < nl > + private String userText ; < nl > + private TextPaint textPaint ; < nl > + < nl > + public UserSpan ( UserVM user , int maxW ) { < nl > + this . user = user ; < nl > + this . maxW = maxW ; < nl > + if ( textPaint = = null ) { < nl > + textPaint = new TextPaint ( Paint . ANTI _ ALIAS _ FLAG | Paint . SUBPIXEL _ TEXT _ FLAG ) ; < nl > + textPaint . setTextSize ( Screen . sp ( 16 ) ) ; < nl > + textPaint . setColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > + } < nl > + < nl > + int padding = Screen . dp ( 18 ) ; < nl > + int maxWidth = maxW - padding ; < nl > + userText = TextUtils . ellipsize ( user . getName ( ) . get ( ) , textPaint , maxWidth , TextUtils . TruncateAt . END ) . toString ( ) ; < nl > + } < nl > + < nl > + public UserVM getUser ( ) { < nl > + return user ; < nl > + } < nl > + < nl > + @ Override < nl > + public int getSize ( Paint paint , CharSequence charSequence , int start , int end , Paint . FontMetricsInt fm ) { < nl > + if ( fm ! = null ) { < nl > + / / WTF ? ? ? < nl > + fm . ascent = - Screen . dp ( 21 + 3 ) ; < nl > + fm . descent = Screen . dp ( 10 + 3 ) ; < nl > + < nl > + fm . top = fm . ascent ; < nl > + fm . bottom = fm . descent ; < nl > + } < nl > + return ( int ) textPaint . measureText ( userText ) + Screen . dp ( 24 + 8 ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void draw ( Canvas canvas , CharSequence charSequence , int start , int end , < nl > + float x , int top , int y , int bottom , Paint paint ) { < nl > + int size = ( int ) textPaint . measureText ( userText ) ; < nl > + Paint debug = new Paint ( ) ; < nl > + debug . setColor ( 0xffebebeb ) ; < nl > + debug . setStyle ( Paint . Style . FILL _ AND _ STROKE ) ; < nl > + canvas . drawRoundRect ( new RectF ( x + Screen . dp ( 4 ) , y - Screen . dp ( 20 ) , x + size + Screen . dp ( 4 + 24 ) , y + Screen . dp ( 8 ) ) , Screen . dp ( 14 ) , Screen . dp ( 14 ) , debug ) ; < nl > + canvas . drawText ( userText , x + Screen . dp ( 4 + 12 ) , y , textPaint ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeActivity . java < nl > deleted file mode 100644 < nl > index 0edd816 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeActivity . java < nl > + + + / dev / null < nl > @ @ - 1 , 21 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . compose ; < nl > - < nl > - import android . os . Bundle ; < nl > - < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > - < nl > - / * * < nl > - * Created by ex3ndr on 20 . 09 . 14 . < nl > - * / < nl > - public class ComposeActivity extends BaseFragmentActivity { < nl > - < nl > - @ Override < nl > - protected void onCreate ( Bundle savedInstanceState ) { < nl > - super . onCreate ( savedInstanceState ) ; < nl > - < nl > - getSupportActionBar ( ) . setTitle ( R . string . compose _ title ) ; < nl > - < nl > - showFragment ( new ComposeFragment ( ) , false , false ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeFragment . java < nl > deleted file mode 100644 < nl > index c1ec395 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeFragment . java < nl > + + + / dev / null < nl > @ @ - 1 , 21 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . compose ; < nl > - < nl > - import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . contacts . BaseContactFragment ; < nl > - import im . actor . core . entity . Contact ; < nl > - < nl > - / * * < nl > - * Created by ex3ndr on 23 . 09 . 14 . < nl > - * / < nl > - public class ComposeFragment extends BaseContactFragment { < nl > - < nl > - public ComposeFragment ( ) { < nl > - super ( true , true , false ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onItemClicked ( Contact contact ) { < nl > - getActivity ( ) . startActivity ( Intents . openPrivateDialog ( contact . getUid ( ) , true , getActivity ( ) ) ) ; < nl > - getActivity ( ) . finish ( ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / CreateGroupActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / CreateGroupActivity . java < nl > deleted file mode 100644 < nl > index 4a205ae . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / CreateGroupActivity . java < nl > + + + / dev / null < nl > @ @ - 1 , 19 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . compose ; < nl > - < nl > - import android . os . Bundle ; < nl > - < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > - < nl > - / * * < nl > - * Created by ex3ndr on 04 . 10 . 14 . < nl > - * / < nl > - public class CreateGroupActivity extends BaseFragmentActivity { < nl > - < nl > - @ Override < nl > - protected void onCreate ( Bundle savedInstanceState ) { < nl > - super . onCreate ( savedInstanceState ) ; < nl > - getSupportActionBar ( ) . setTitle ( R . string . create _ group _ title ) ; < nl > - showFragment ( new GroupNameFragment ( ) , false , false ) ; < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupNameFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupNameFragment . java < nl > deleted file mode 100644 < nl > index 01153ef . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupNameFragment . java < nl > + + + / dev / null < nl > @ @ - 1 , 125 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . compose ; < nl > - < nl > - import android . app . Activity ; < nl > - import android . content . Intent ; < nl > - import android . os . Bundle ; < nl > - import android . view . KeyEvent ; < nl > - import android . view . LayoutInflater ; < nl > - import android . view . Menu ; < nl > - import android . view . MenuInflater ; < nl > - import android . view . MenuItem ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . view . inputmethod . EditorInfo ; < nl > - import android . widget . EditText ; < nl > - import android . widget . TextView ; < nl > - < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . fragment . BaseFragment ; < nl > - import im . actor . sdk . util . Screen ; < nl > - import im . actor . sdk . view . avatar . AvatarView ; < nl > - import im . actor . sdk . util . KeyboardHelper ; < nl > - < nl > - / * * < nl > - * Created by ex3ndr on 04 . 10 . 14 . < nl > - * / < nl > - public class GroupNameFragment extends BaseFragment { < nl > - < nl > - private static final int REQUEST _ AVATAR = 1 ; < nl > - < nl > - private EditText groupName ; < nl > - private AvatarView avatarView ; < nl > - < nl > - private String avatarPath ; < nl > - < nl > - private KeyboardHelper helper ; < nl > - < nl > - @ Override < nl > - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > - helper = new KeyboardHelper ( getActivity ( ) ) ; < nl > - < nl > - View res = inflater . inflate ( R . layout . fragment _ create _ group _ name , container , false ) ; < nl > - res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - ( ( TextView ) res . findViewById ( R . id . create _ group _ hint ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > - groupName = ( EditText ) res . findViewById ( R . id . groupTitle ) ; < nl > - groupName . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { < nl > - @ Override < nl > - public boolean onEditorAction ( TextView v , int actionId , KeyEvent event ) { < nl > - if ( actionId = = EditorInfo . IME _ ACTION _ NEXT ) { < nl > - next ( ) ; < nl > - return true ; < nl > - } < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - groupName . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > - groupName . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; < nl > - < nl > - avatarView = ( AvatarView ) res . findViewById ( R . id . avatar ) ; < nl > - avatarView . init ( Screen . dp ( 96 ) , 24 ) ; < nl > - avatarView . getHierarchy ( ) . setPlaceholderImage ( R . drawable . circle _ placeholder ) ; < nl > - / / avatarView . getHierarchy ( ) . setControllerOverlay ( getResources ( ) . getDrawable ( R . drawable . circle _ selector ) ) ; < nl > - avatarView . setImageURI ( null ) ; < nl > - < nl > - res . findViewById ( R . id . pickAvatar ) . setOnClickListener ( new View . OnClickListener ( ) { < nl > - @ Override < nl > - public void onClick ( View view ) { < nl > - startActivityForResult ( Intents . pickAvatar ( avatarPath ! = null , getActivity ( ) ) , REQUEST _ AVATAR ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onResume ( ) { < nl > - super . onResume ( ) ; < nl > - groupName . requestFocus ( ) ; < nl > - helper . setImeVisibility ( groupName , true ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { < nl > - super . onCreateOptionsMenu ( menu , inflater ) ; < nl > - inflater . inflate ( R . menu . next , menu ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onOptionsItemSelected ( MenuItem item ) { < nl > - if ( item . getItemId ( ) = = R . id . next ) { < nl > - next ( ) ; < nl > - return true ; < nl > - } < nl > - return super . onOptionsItemSelected ( item ) ; < nl > - } < nl > - < nl > - private void next ( ) { < nl > - String title = groupName . getText ( ) . toString ( ) . trim ( ) ; < nl > - if ( title . length ( ) > 0 ) { < nl > - ( ( CreateGroupActivity ) getActivity ( ) ) . showNextFragment ( < nl > - GroupUsersFragment . create ( groupName . getText ( ) . toString ( ) . trim ( ) , avatarPath ) , false , true ) ; < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onActivityResult ( int requestCode , int resultCode , Intent data ) { < nl > - if ( requestCode = = REQUEST _ AVATAR & & resultCode = = Activity . RESULT _ OK ) { < nl > - int res = data . getIntExtra ( Intents . EXTRA _ RESULT , Intents . RESULT _ IMAGE ) ; < nl > - if ( res = = Intents . RESULT _ DELETE ) { < nl > - this . avatarPath = null ; < nl > - this . avatarView . unbind ( ) ; < nl > - } else if ( res = = Intents . RESULT _ IMAGE ) { < nl > - this . avatarPath = data . getStringExtra ( Intents . EXTRA _ IMAGE ) ; < nl > - this . avatarView . bindRaw ( avatarPath ) ; < nl > - } < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onPause ( ) { < nl > - super . onPause ( ) ; < nl > - helper . setImeVisibility ( groupName , false ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupUsersFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupUsersFragment . java < nl > deleted file mode 100644 < nl > index 9d0445d . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupUsersFragment . java < nl > + + + / dev / null < nl > @ @ - 1 , 191 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . compose ; < nl > - < nl > - import android . os . Bundle ; < nl > - import android . text . Editable ; < nl > - import android . text . Spannable ; < nl > - import android . text . SpannableString ; < nl > - import android . text . Spanned ; < nl > - import android . text . TextWatcher ; < nl > - import android . view . LayoutInflater ; < nl > - import android . view . Menu ; < nl > - import android . view . MenuInflater ; < nl > - import android . view . MenuItem ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . widget . EditText ; < nl > - < nl > - import im . actor . core . entity . Contact ; < nl > - import im . actor . core . viewmodel . CommandCallback ; < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . fragment . compose . view . UserSpan ; < nl > - import im . actor . sdk . controllers . contacts . BaseContactFragment ; < nl > - import im . actor . sdk . util . BoxUtil ; < nl > - import im . actor . sdk . util . Screen ; < nl > - < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > - < nl > - public class GroupUsersFragment extends BaseContactFragment { < nl > - < nl > - private String title ; < nl > - private String avatarPath ; < nl > - private EditText searchField ; < nl > - private TextWatcher textWatcher ; < nl > - < nl > - public GroupUsersFragment ( ) { < nl > - super ( true , false , true ) ; < nl > - } < nl > - < nl > - public static GroupUsersFragment create ( String title , String avatarPath ) { < nl > - GroupUsersFragment res = new GroupUsersFragment ( ) ; < nl > - Bundle args = new Bundle ( ) ; < nl > - args . putString ( " title " , title ) ; < nl > - args . putString ( " avatarPath " , avatarPath ) ; < nl > - res . setArguments ( args ) ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > - < nl > - title = getArguments ( ) . getString ( " title " ) ; < nl > - avatarPath = getArguments ( ) . getString ( " avatarPath " ) ; < nl > - < nl > - View res = onCreateContactsView ( R . layout . fragment _ create _ group _ participants , inflater , < nl > - container , savedInstanceState ) ; < nl > - res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - searchField = ( EditText ) res . findViewById ( R . id . searchField ) ; < nl > - searchField . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > - searchField . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; < nl > - textWatcher = new TextWatcher ( ) { < nl > - @ Override < nl > - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onTextChanged ( CharSequence s , int start , int before , int count ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void afterTextChanged ( Editable s ) { < nl > - checkForDeletions ( s ) ; < nl > - String filter = s . toString ( ) . trim ( ) ; < nl > - while ( filter . length ( ) > 0 & & filter . charAt ( 0 ) = = ' ! ' ) { < nl > - filter = filter . substring ( 1 ) ; < nl > - } < nl > - filter ( filter ) ; < nl > - } < nl > - } ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onResume ( ) { < nl > - super . onResume ( ) ; < nl > - searchField . addTextChangedListener ( textWatcher ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { < nl > - super . onCreateOptionsMenu ( menu , inflater ) ; < nl > - inflater . inflate ( R . menu . create _ group , menu ) ; < nl > - menu . findItem ( R . id . done ) . setEnabled ( getSelectedCount ( ) > 0 ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onOptionsItemSelected ( MenuItem item ) { < nl > - if ( item . getItemId ( ) = = R . id . done ) { < nl > - if ( getSelectedCount ( ) > 0 ) { < nl > - execute ( messenger ( ) . createGroup ( title , avatarPath , BoxUtil . unbox ( getSelected ( ) ) ) , < nl > - R . string . progress _ common , new CommandCallback < Integer > ( ) { < nl > - @ Override < nl > - public void onResult ( Integer res ) { < nl > - getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; < nl > - getActivity ( ) . finish ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - < nl > - } < nl > - } ) ; < nl > - } < nl > - return true ; < nl > - } < nl > - return super . onOptionsItemSelected ( item ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onItemClicked ( Contact contact ) { < nl > - if ( isSelected ( contact . getUid ( ) ) ) { < nl > - unselect ( contact . getUid ( ) ) ; < nl > - } else { < nl > - select ( contact . getUid ( ) ) ; < nl > - } < nl > - getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > - updateEditText ( ) ; < nl > - } < nl > - < nl > - private void updateEditText ( ) { < nl > - Integer [ ] selected = getSelected ( ) ; < nl > - String src = " " ; < nl > - for ( int i = 0 ; i < selected . length ; i + + ) { < nl > - src + = " ! " ; < nl > - } < nl > - Spannable spannable = new SpannableString ( src ) ; < nl > - for ( int i = 0 ; i < selected . length ; i + + ) { < nl > - spannable . setSpan ( new UserSpan ( users ( ) . get ( selected [ i ] ) , Screen . dp ( 200 ) ) , i , i + 1 , Spanned . SPAN _ INCLUSIVE _ EXCLUSIVE ) ; < nl > - } < nl > - searchField . removeTextChangedListener ( textWatcher ) ; < nl > - searchField . setText ( spannable ) ; < nl > - searchField . setSelection ( spannable . length ( ) ) ; < nl > - searchField . addTextChangedListener ( textWatcher ) ; < nl > - filter ( " " ) ; < nl > - getAdapter ( ) . notifyDataSetChanged ( ) ; < nl > - } < nl > - < nl > - private void checkForDeletions ( Editable editable ) { < nl > - Integer [ ] selected = getSelected ( ) ; < nl > - boolean hasDeletions = false ; < nl > - UserSpan [ ] spans = editable . getSpans ( 0 , editable . length ( ) , UserSpan . class ) ; < nl > - for ( Integer u : selected ) { < nl > - boolean founded = false ; < nl > - for ( UserSpan span : spans ) { < nl > - if ( span . getUser ( ) . getId ( ) = = u ) { < nl > - if ( editable . getSpanStart ( span ) = = editable . getSpanEnd ( span ) ) { < nl > - break ; < nl > - } else { < nl > - founded = true ; < nl > - break ; < nl > - } < nl > - } < nl > - } < nl > - < nl > - if ( ! founded ) { < nl > - hasDeletions = true ; < nl > - unselect ( u ) ; < nl > - } < nl > - } < nl > - if ( hasDeletions ) { < nl > - getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > - getAdapter ( ) . notifyDataSetChanged ( ) ; < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onPause ( ) { < nl > - super . onPause ( ) ; < nl > - searchField . removeTextChangedListener ( textWatcher ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onDestroyView ( ) { < nl > - super . onDestroyView ( ) ; < nl > - textWatcher = null ; < nl > - searchField = null ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / view / UserSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / view / UserSpan . java < nl > deleted file mode 100644 < nl > index 8a968ae . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / view / UserSpan . java < nl > + + + / dev / null < nl > @ @ - 1 , 65 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . compose . view ; < nl > - < nl > - import android . graphics . Canvas ; < nl > - import android . graphics . Paint ; < nl > - import android . graphics . RectF ; < nl > - import android . text . TextPaint ; < nl > - import android . text . TextUtils ; < nl > - import android . text . style . ReplacementSpan ; < nl > - < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . util . Screen ; < nl > - import im . actor . core . viewmodel . UserVM ; < nl > - < nl > - / * * < nl > - * Created by ex3ndr on 26 . 03 . 15 . < nl > - * / < nl > - public class UserSpan extends ReplacementSpan { < nl > - < nl > - private UserVM user ; < nl > - private int maxW ; < nl > - private String userText ; < nl > - private TextPaint textPaint ; < nl > - < nl > - public UserSpan ( UserVM user , int maxW ) { < nl > - this . user = user ; < nl > - this . maxW = maxW ; < nl > - if ( textPaint = = null ) { < nl > - textPaint = new TextPaint ( Paint . ANTI _ ALIAS _ FLAG | Paint . SUBPIXEL _ TEXT _ FLAG ) ; < nl > - textPaint . setTextSize ( Screen . sp ( 16 ) ) ; < nl > - textPaint . setColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > - } < nl > - < nl > - int padding = Screen . dp ( 18 ) ; < nl > - int maxWidth = maxW - padding ; < nl > - userText = TextUtils . ellipsize ( user . getName ( ) . get ( ) , textPaint , maxWidth , TextUtils . TruncateAt . END ) . toString ( ) ; < nl > - } < nl > - < nl > - public UserVM getUser ( ) { < nl > - return user ; < nl > - } < nl > - < nl > - @ Override < nl > - public int getSize ( Paint paint , CharSequence charSequence , int start , int end , Paint . FontMetricsInt fm ) { < nl > - if ( fm ! = null ) { < nl > - / / WTF ? ? ? < nl > - fm . ascent = - Screen . dp ( 21 + 3 ) ; < nl > - fm . descent = Screen . dp ( 10 + 3 ) ; < nl > - < nl > - fm . top = fm . ascent ; < nl > - fm . bottom = fm . descent ; < nl > - } < nl > - return ( int ) textPaint . measureText ( userText ) + Screen . dp ( 24 + 8 ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void draw ( Canvas canvas , CharSequence charSequence , int start , int end , < nl > - float x , int top , int y , int bottom , Paint paint ) { < nl > - int size = ( int ) textPaint . measureText ( userText ) ; < nl > - Paint debug = new Paint ( ) ; < nl > - debug . setColor ( 0xffebebeb ) ; < nl > - debug . setStyle ( Paint . Style . FILL _ AND _ STROKE ) ; < nl > - canvas . drawRoundRect ( new RectF ( x + Screen . dp ( 4 ) , y - Screen . dp ( 20 ) , x + size + Screen . dp ( 4 + 24 ) , y + Screen . dp ( 8 ) ) , Screen . dp ( 14 ) , Screen . dp ( 14 ) , debug ) ; < nl > - canvas . drawText ( userText , x + Screen . dp ( 4 + 12 ) , y , textPaint ) ; < nl > - } < nl > - }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index bf6a2fa . . e54c5ad 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import android . os . Bundle ; < nl > import android . view . ViewGroup ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . imagepipeline . core . ImagePipelineConfig ; < nl > < nl > import org . jetbrains . annotations . NotNull ; < nl > < nl > @ @ - 193 , 7 + 194 , 10 @ @ public class ActorSDK { < nl > / / SDK Tools < nl > / / < nl > < nl > - Fresco . initialize ( application ) ; < nl > + ImagePipelineConfig config = ImagePipelineConfig . newBuilder ( application ) < nl > + . setDownsampleEnabled ( true ) < nl > + . build ( ) ; < nl > + Fresco . initialize ( application , config ) ; < nl > AndroidContext . setContext ( application ) ; < nl > / / TODO : Replace < nl > new SmileProcessor ( application ) . loadEmoji ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 885ab7a . . 19ce772 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 22 , 6 + 22 , 8 @ @ import android . support . v4 . app . Fragment ; < nl > import android . support . v4 . content . ContextCompat ; < nl > import android . support . v7 . app . ActionBar ; < nl > import android . support . v7 . view . ActionMode ; < nl > + import android . support . v7 . widget . LinearLayoutManager ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > import android . text . Editable ; < nl > import android . text . Spannable ; < nl > import android . text . TextWatcher ; < nl > @ @ - 32 , 6 + 34 , 7 @ @ import android . view . MenuItem ; < nl > import android . view . MotionEvent ; < nl > import android . view . View ; < nl > import android . view . animation . AlphaAnimation ; < nl > + import android . view . animation . Animation ; < nl > import android . view . animation . TranslateAnimation ; < nl > import android . widget . AdapterView ; < nl > import android . widget . FrameLayout ; < nl > @ @ - 53 , 6 + 56 , 7 @ @ import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > @ @ - 62 , 15 + 66 , 16 @ @ import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . ActorStyle ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . calls . CallActivity ; < nl > import im . actor . sdk . controllers . conversation . mentions . MentionsAdapter ; < nl > import im . actor . sdk . controllers . conversation . messages . AudioHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . MessagesFragment ; < nl > + import im . actor . sdk . controllers . conversation . view . FastShareAdapter ; < nl > import im . actor . sdk . controllers . fragment . settings . BaseActorChatActivity ; < nl > import im . actor . sdk . core . audio . VoiceCaptureActor ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > import im . actor . sdk . util . Randoms ; < nl > import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . util . images . GalleryScannerActor ; < nl > import im . actor . sdk . view . avatar . AvatarView ; < nl > import im . actor . sdk . controllers . conversation . view . TypingDrawable ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > @ @ - 78 , 7 + 83 , 6 @ @ import im . actor . sdk . view . markdown . AndroidMarkdown ; < nl > import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > < nl > - import static im . actor . sdk . util . ViewUtils . expand ; < nl > import static im . actor . sdk . util . ViewUtils . expandMentions ; < nl > import static im . actor . sdk . util . ViewUtils . goneView ; < nl > import static im . actor . sdk . util . ViewUtils . hideView ; < nl > @ @ - 152 , 6 + 156 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private int slideStart ; < nl > private TextView audioTimer ; < nl > private boolean isAudioVisible ; < nl > + private boolean isShareVisible ; < nl > private int SLIDE _ LIMIT ; < nl > ActorRef voiceRecordActor ; < nl > private String audioFile ; < nl > @ @ - 204 , 6 + 209 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private Intent intent ; < nl > private boolean textEditing = false ; < nl > private long currentEditRid ; < nl > + private Animation . AnimationListener animationListener ; < nl > < nl > public static Intent build ( Peer peer , boolean compose , Context context ) { < nl > final Intent intent = new Intent ( context , ChatActivity . class ) ; < nl > @ @ - 283 , 7 + 289 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > goneView ( quoteContainer ) ; < nl > quoteText . setText ( " " ) ; < nl > currentQuote = " " ; < nl > - if ( textEditing ) { < nl > + if ( textEditing ) { < nl > messageEditText . setText ( " " ) ; < nl > } < nl > textEditing = false ; < nl > @ @ - 301 , 10 + 307 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } ) ; < nl > shareContainer = findViewById ( R . id . closeMenuLayout ) ; < nl > - shareContainer . setOnClickListener ( new View . OnClickListener ( ) { < nl > + shareContainer . setOnTouchListener ( new View . OnTouchListener ( ) { < nl > @ Override < nl > - public void onClick ( View v ) { < nl > - hideShareMenu ( ) ; < nl > + public boolean onTouch ( View v , MotionEvent event ) { < nl > + hideShare ( ) ; < nl > + return false ; < nl > } < nl > } ) ; < nl > < nl > @ @ - 382 , 7 + 389 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > < nl > / / hide it < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > } < nl > } ; < nl > < nl > @ @ - 395 , 6 + 402 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; < nl > handleIntent ( ) ; < nl > < nl > + RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; < nl > + FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; < nl > + LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; < nl > + fastShare . setAdapter ( fastShareAdapter ) ; < nl > + fastShare . setLayoutManager ( layoutManager ) ; < nl > < nl > } < nl > < nl > @ @ - 434 , 13 + 446 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > handleIntent ( ) ; < nl > } < nl > < nl > - private void hideShareMenu ( ) { < nl > - if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { < nl > - / / hideView ( shareMenu ) ; < nl > - expand ( shareMenu , 0 ) ; < nl > - shareContainer . setVisibility ( View . GONE ) ; < nl > - } < nl > - } < nl > + < nl > < nl > @ Override < nl > protected Fragment onCreateFragment ( ) { < nl > @ @ - 831 , 13 + 837 , 13 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / } ) ; < nl > / / popup . show ( ) ; < nl > if ( shareMenuMaxHeight = = 0 ) { < nl > - shareMenuMaxHeight = Screen . dp ( 180 ) ; < nl > + shareMenuMaxHeight = Screen . dp ( 245 ) ; < nl > } < nl > if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > } else { < nl > shareContainer . setVisibility ( View . VISIBLE ) ; < nl > - expand ( shareMenu , shareMenuMaxHeight ) ; < nl > + showShare ( ) ; < nl > if ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ LANDSCAPE ) { < nl > keyboardUtils . setImeVisibility ( messageEditText , false ) ; < nl > } < nl > @ @ - 982 , 7 + 988 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } < nl > } ) ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > expandMentions ( mentionsList , 0 , mentionsList . getCount ( ) ) ; < nl > } < nl > < nl > @ @ - 1028 , 7 + 1034 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > quoteText . setText ( rawQuote ) ; < nl > } < nl > currentQuote = rawQuote ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; < nl > showView ( quoteContainer ) ; < nl > } < nl > @ @ - 1195 , 7 + 1201 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; < nl > quoteText . setText ( R . string . edit _ message ) ; < nl > messageEditText . setText ( text ) ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > showView ( quoteContainer ) ; < nl > < nl > } < nl > @ @ - 1343 , 6 + 1349 , 60 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > < nl > } < nl > < nl > + private boolean animationInProgress = false ; < nl > + < nl > + private void showShare ( ) { < nl > + if ( animationInProgress ) { < nl > + return ; < nl > + } < nl > + if ( animationListener = = null ) { < nl > + animationListener = new Animation . AnimationListener ( ) { < nl > + @ Override < nl > + public void onAnimationStart ( Animation animation ) { < nl > + animationInProgress = true ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationEnd ( Animation animation ) { < nl > + animationInProgress = false ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationRepeat ( Animation animation ) { < nl > + < nl > + } < nl > + } ; < nl > + } < nl > + < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , Screen . getHeight ( ) , 0 ) ; < nl > + animation . setDuration ( 160 ) ; < nl > + animation . setAnimationListener ( animationListener ) ; < nl > + shareMenu . clearAnimation ( ) ; < nl > + shareMenu . setAnimation ( animation ) ; < nl > + shareMenu . animate ( ) ; < nl > + shareMenu . setVisibility ( View . VISIBLE ) ; < nl > + isShareVisible = true ; < nl > + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( true ) ) ; < nl > + } < nl > + < nl > + private void hideShare ( ) { < nl > + if ( ! isShareVisible | | animationInProgress ) { < nl > + return ; < nl > + } < nl > + isShareVisible = false ; < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , Screen . getHeight ( ) ) ; < nl > + animation . setDuration ( 160 ) ; < nl > + < nl > + animation . setAnimationListener ( animationListener ) ; < nl > + shareMenu . clearAnimation ( ) ; < nl > + shareMenu . setAnimation ( animation ) ; < nl > + shareMenu . animate ( ) ; < nl > + shareMenu . setVisibility ( View . GONE ) ; < nl > + shareContainer . setVisibility ( View . GONE ) ; < nl > + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( false ) ) ; < nl > + < nl > + } < nl > + < nl > private void slideAudio ( int value ) { < nl > ObjectAnimator oa = ObjectAnimator . ofFloat ( audioSlide , " translationX " , audioSlide . getX ( ) , - value ) ; < nl > oa . setDuration ( 0 ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > new file mode 100644 < nl > index 0000000 . . a7cc631 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > @ @ - 0 , 0 + 1 , 109 @ @ < nl > + package im . actor . sdk . controllers . conversation . view ; < nl > + < nl > + import android . content . Context ; < nl > + import android . net . Uri ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > + import android . view . LayoutInflater ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . widget . CheckBox ; < nl > + import android . widget . CompoundButton ; < nl > + import android . widget . FrameLayout ; < nl > + < nl > + import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; < nl > + import com . facebook . drawee . view . SimpleDraweeView ; < nl > + import com . facebook . imagepipeline . common . ResizeOptions ; < nl > + import com . facebook . imagepipeline . request . ImageRequest ; < nl > + import com . facebook . imagepipeline . request . ImageRequestBuilder ; < nl > + < nl > + import java . io . File ; < nl > + import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > + import java . util . Set ; < nl > + < nl > + import im . actor . runtime . mvvm . Value ; < nl > + import im . actor . runtime . mvvm . ValueChangedListener ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . util . Screen ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { < nl > + < nl > + ArrayList < String > imagesPath = new ArrayList < > ( ) ; < nl > + Set < String > selected = new HashSet < > ( ) ; < nl > + Context context ; < nl > + < nl > + public FastShareAdapter ( Context context ) { < nl > + this . context = context ; < nl > + messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { < nl > + @ Override < nl > + public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { < nl > + imagesPath . clear ( ) ; < nl > + imagesPath . addAll ( val ) ; < nl > + notifyDataSetChanged ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + protected View inflate ( int id , ViewGroup viewGroup ) { < nl > + return LayoutInflater < nl > + . from ( context ) < nl > + . inflate ( id , viewGroup , false ) ; < nl > + } < nl > + < nl > + < nl > + @ Override < nl > + public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { < nl > + return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onBindViewHolder ( FastShareVH holder , int position ) { < nl > + holder . bind ( imagesPath . get ( position ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public int getItemCount ( ) { < nl > + return imagesPath . size ( ) ; < nl > + } < nl > + < nl > + public class FastShareVH extends RecyclerView . ViewHolder { < nl > + SimpleDraweeView v ; < nl > + CheckBox chb ; < nl > + String data ; < nl > + < nl > + public FastShareVH ( View itemView ) { < nl > + super ( itemView ) ; < nl > + v = ( SimpleDraweeView ) itemView . findViewById ( R . id . image ) ; < nl > + chb = ( CheckBox ) itemView . findViewById ( R . id . check ) ; < nl > + int size = context . getResources ( ) . getDimensionPixelSize ( R . dimen . share _ btn _ size ) ; < nl > + v . setLayoutParams ( new FrameLayout . LayoutParams ( size , size ) ) ; < nl > + chb . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { < nl > + @ Override < nl > + public void onCheckedChanged ( CompoundButton buttonView , boolean isChecked ) { < nl > + if ( isChecked & & data ! = null ) { < nl > + selected . add ( data ) ; < nl > + } else { < nl > + selected . remove ( data ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + public void bind ( String path ) { < nl > + data = path ; < nl > + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( path ) ) ) < nl > + . setResizeOptions ( new ResizeOptions ( v . getLayoutParams ( ) . width , < nl > + v . getLayoutParams ( ) . height ) ) < nl > + . build ( ) ; < nl > + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) < nl > + . setOldController ( v . getController ( ) ) < nl > + . setImageRequest ( request ) < nl > + . build ( ) ; < nl > + v . setController ( controller ) ; < nl > + chb . setChecked ( selected . contains ( data ) ) ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java < nl > new file mode 100644 < nl > index 0000000 . . e2dcc9b < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java < nl > @ @ - 0 , 0 + 1 , 171 @ @ < nl > + package im . actor . sdk . util . images ; < nl > + < nl > + import android . content . BroadcastReceiver ; < nl > + import android . content . Context ; < nl > + import android . content . Intent ; < nl > + import android . content . IntentFilter ; < nl > + import android . database . Cursor ; < nl > + import android . graphics . Bitmap ; < nl > + import android . graphics . BitmapFactory ; < nl > + import android . net . Uri ; < nl > + import android . provider . MediaStore ; < nl > + < nl > + import java . io . File ; < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . utils . ImageHelper ; < nl > + import im . actor . core . viewmodel . GalleryVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class GalleryScannerActor extends Actor { < nl > + < nl > + Context context ; < nl > + Uri uri ; < nl > + Cursor cursor ; < nl > + int offset = 0 ; < nl > + int column _ index _ data , column _ index _ folder _ name , column _ index _ date ; < nl > + < nl > + ArrayList < String > listOfAllImages = new ArrayList < String > ( ) ; < nl > + ArrayList < String > newMedia = new ArrayList < > ( ) ; < nl > + < nl > + String absolutePathOfImage = null ; < nl > + GalleryVM galleryVM ; < nl > + Uri lastScan ; < nl > + < nl > + private static final int SCAN _ COUNT = 10 ; < nl > + < nl > + ArrayList < String > loaded = new ArrayList < > ( ) ; < nl > + private boolean visible = false ; < nl > + private boolean scanned = false ; < nl > + private String [ ] projection ; < nl > + < nl > + public GalleryScannerActor ( Context context ) { < nl > + this . context = context ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + galleryVM = messenger ( ) . getGalleryVM ( ) ; < nl > + uri = android . provider . MediaStore . Images . Media . EXTERNAL _ CONTENT _ URI ; < nl > + < nl > + self ( ) . send ( new InitScan ( ) ) ; < nl > + } < nl > + < nl > + public void initScan ( ) { < nl > + projection = new String [ ] { MediaStore . MediaColumns . DATA , < nl > + MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME , < nl > + MediaStore . Images . Media . DATE _ MODIFIED } ; < nl > + < nl > + cursor = getQuery ( ) ; < nl > + < nl > + if ( cursor ! = null & & cursor . getCount ( ) > 0 ) { < nl > + column _ index _ data = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATA ) ; < nl > + column _ index _ date = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATE _ MODIFIED ) ; < nl > + column _ index _ folder _ name = cursor < nl > + . getColumnIndexOrThrow ( MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME ) ; < nl > + < nl > + < nl > + self ( ) . send ( new Scan ( ) ) ; < nl > + } else { < nl > + schedule ( new InitScan ( ) , 1000 ) ; < nl > + } < nl > + < nl > + } < nl > + < nl > + public Cursor getQuery ( ) { < nl > + return context . getContentResolver ( ) . query ( uri , projection , null , < nl > + null , MediaStore . MediaColumns . DATE _ MODIFIED + " DESC " ) ; < nl > + } < nl > + < nl > + private void scan ( ) { < nl > + < nl > + < nl > + int i = 0 ; < nl > + while ( offset + i + + < offset + SCAN _ COUNT & & cursor . moveToNext ( ) ) { < nl > + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; < nl > + < nl > + listOfAllImages . add ( absolutePathOfImage ) ; < nl > + } < nl > + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; < nl > + offset + = i ; < nl > + if ( offset < cursor . getCount ( ) ) { < nl > + self ( ) . send ( new Scan ( ) ) ; < nl > + } else { < nl > + lastScan = MediaStore . getMediaScannerUri ( ) ; < nl > + scanned = true ; < nl > + schedule ( new CheckNew ( ) , 1000 ) ; < nl > + } < nl > + } < nl > + < nl > + private void checkNew ( ) { < nl > + cursor = getQuery ( ) ; < nl > + newMedia . clear ( ) ; < nl > + while ( cursor ! = null & & cursor . moveToNext ( ) ) { < nl > + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; < nl > + if ( ! listOfAllImages . contains ( absolutePathOfImage ) ) { < nl > + Bitmap bitmap = ImageHelper . loadOptimizedHQ ( absolutePathOfImage ) ; < nl > + if ( bitmap ! = null ) { < nl > + bitmap . recycle ( ) ; < nl > + newMedia . add ( absolutePathOfImage ) ; < nl > + } else { < nl > + break ; < nl > + } < nl > + } else { < nl > + break ; < nl > + } < nl > + } < nl > + if ( newMedia . size ( ) > 0 ) { < nl > + listOfAllImages . addAll ( 0 , newMedia ) ; < nl > + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; < nl > + } < nl > + if ( visible ) { < nl > + schedule ( new CheckNew ( ) , 1000 ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof Scan ) { < nl > + scan ( ) ; < nl > + } else if ( message instanceof InitScan ) { < nl > + initScan ( ) ; < nl > + } else if ( message instanceof CheckNew ) { < nl > + checkNew ( ) ; < nl > + } else if ( message instanceof Visible ) { < nl > + if ( ( ( Visible ) message ) . isVisible ( ) ) { < nl > + visible = true ; < nl > + if ( scanned ) { < nl > + self ( ) . send ( new CheckNew ( ) ) ; < nl > + } < nl > + } else { < nl > + visible = false ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + private static class Scan { < nl > + < nl > + } < nl > + < nl > + private static class InitScan { < nl > + < nl > + } < nl > + < nl > + private static class CheckNew { < nl > + < nl > + } < nl > + < nl > + public static class Visible { < nl > + boolean visible ; < nl > + < nl > + public Visible ( boolean visible ) { < nl > + this . visible = visible ; < nl > + } < nl > + < nl > + public boolean isVisible ( ) { < nl > + return visible ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > index 68cf866 . . 029cf8f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > @ @ - 81 , 11 + 81 , 12 @ @ < nl > < nl > < LinearLayout < nl > android : layout _ width = " match _ parent " < nl > - android : layout _ height = " 0dp " < nl > + android : layout _ height = " 245dp " < nl > android : layout _ above = " @ + id / fl _ send _ panel " < nl > android : id = " @ + id / share _ container " < nl > android : visibility = " invisible " < nl > android : orientation = " vertical " < nl > + android : gravity = " bottom " < nl > android : background = " @ android : color / transparent " > < nl > < nl > < ImageView < nl > @ @ - 96 , 7 + 97 , 7 @ @ < nl > < nl > < TableLayout < nl > android : id = " @ + id / share _ menu " < nl > - android : paddingTop = " 20dp " < nl > + android : paddingTop = " 5dp " < nl > android : layout _ gravity = " bottom " < nl > android : layout _ width = " wrap _ content " < nl > android : layout _ height = " wrap _ content " < nl > @ @ - 105 , 6 + 106 , 15 @ @ < nl > < nl > < TableRow > < nl > < nl > + < android . support . v7 . widget . RecyclerView < nl > + android : id = " @ + id / fast _ share " < nl > + android : layout _ width = " 0dp " < nl > + android : layout _ weight = " 1 " < nl > + android : layout _ height = " @ dimen / fast _ share _ size " / > < nl > + < / TableRow > < nl > + < nl > + < TableRow > < nl > + < nl > < LinearLayout < nl > android : gravity = " center _ horizontal " < nl > android : layout _ width = " wrap _ content " < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml < nl > new file mode 100644 < nl > index 0000000 . . 4814076 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < nl > + < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " < nl > + android : padding = " 5dp " > < nl > + < nl > + < com . facebook . drawee . view . SimpleDraweeView < nl > + android : id = " @ + id / image " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " / > < nl > + < nl > + < CheckBox < nl > + android : layout _ gravity = " top | right " < nl > + < nl > + android : id = " @ + id / check " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " / > < nl > + < nl > + < / FrameLayout > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > index 6f29efa . . e2e84c6 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > @ @ - 24 , 6 + 24 , 7 @ @ < nl > < dimen name = " tour _ card _ message " > 14sp < / dimen > < nl > < dimen name = " keyboard _ height " > 250dp < / dimen > < nl > < dimen name = " share _ btn _ size " > 60dp < / dimen > < nl > + < dimen name = " fast _ share _ size " > 70dp < / dimen > < nl > < nl > < dimen name = " call _ btn _ size " > 40dp < / dimen > < nl > < dimen name = " end _ call _ btn _ size " > 70dp < / dimen > < nl > diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > index 8fd7d10 . . 27391fb 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > @ @ - 40 , 8 + 40 , 11 @ @ import im . actor . core . utils . IOUtils ; < nl > import im . actor . core . utils . ImageHelper ; < nl > import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . core . viewmodel . GalleryVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . Props ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > import im . actor . runtime . bser . BserCreator ; < nl > @ @ - 51 , 6 + 54 , 7 @ @ import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > import im . actor . runtime . storage . ListEngineItem ; < nl > + import im . actor . sdk . util . images . GalleryScannerActor ; < nl > import me . leolin . shortcutbadger . ShortcutBadger ; < nl > < nl > import static im . actor . runtime . actors . ActorSystem . system ; < nl > @ @ - 68 , 6 + 72 , 8 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > private HashMap < Peer , BindedDisplayList < Message > > messagesLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; < nl > private HashMap < Peer , BindedDisplayList < Message > > docsLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; < nl > private HashMap < String , BindedDisplayList > customLists = new HashMap < String , BindedDisplayList > ( ) ; < nl > + private GalleryVM galleryVM ; < nl > + private ActorRef galleryScannerActor ; < nl > < nl > public AndroidMessenger ( Context context , im . actor . core . Configuration configuration ) { < nl > super ( configuration ) ; < nl > @ @ - 482 , 6 + 488 , 23 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > return customLists . get ( key ) ; < nl > } < nl > < nl > + public GalleryVM getGalleryVM ( ) { < nl > + if ( galleryVM = = null ) { < nl > + galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public Actor create ( ) { < nl > + return new GalleryScannerActor ( AndroidContext . getContext ( ) ) ; < nl > + } < nl > + } ) , " actor / gallery _ scanner " ) ; < nl > + galleryVM = new GalleryVM ( ) ; < nl > + } < nl > + return galleryVM ; < nl > + } < nl > + < nl > + public ActorRef getGalleryScannerActor ( ) { < nl > + return galleryScannerActor ; < nl > + } < nl > + < nl > public EventBus getEvents ( ) { < nl > return modules . getEvents ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java < nl > new file mode 100644 < nl > index 0000000 . . 9a3eb07 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + package im . actor . core . viewmodel ; < nl > + < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . entity . StickerPack ; < nl > + import im . actor . runtime . mvvm . ValueModel ; < nl > + < nl > + public class GalleryVM { < nl > + < nl > + private ValueModel < ArrayList < String > > galleryMediaPath ; < nl > + < nl > + public GalleryVM ( ) { < nl > + galleryMediaPath = new ValueModel < > ( " gallery . photo " , new ArrayList < String > ( ) ) ; < nl > + } < nl > + < nl > + public ValueModel < ArrayList < String > > getGalleryMediaPath ( ) { < nl > + return galleryMediaPath ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 index 16e78f7 . . 470055e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 @ @ - 141 , 7 + 141 , 7 @ @ 
 < ! - - Compose - - > 
 
 < activity 
 - android : name = " im . actor . sdk . controllers . fragment . compose . ComposeActivity " 
 + android : name = " . controllers . compose . ComposeActivity " 
 android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " 
 android : theme = " @ style / CommonActivityTheme " 
 android : windowSoftInputMode = " adjustResize " / > 
 @ @ - 159 , 7 + 159 , 7 @ @ 
 android : windowSoftInputMode = " adjustResize " / > 
 
 < activity 
 - android : name = " im . actor . sdk . controllers . fragment . compose . CreateGroupActivity " 
 + android : name = " . controllers . compose . CreateGroupActivity " 
 android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " 
 android : theme = " @ style / CommonActivityTheme " 
 android : windowSoftInputMode = " adjustResize | stateVisible " / > 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 index 6a514e0 . . c80455e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 @ @ - 38 , 8 + 38 , 8 @ @ import im . actor . runtime . generic . mvvm . DisplayList ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 import im . actor . sdk . controllers . activity . AddContactActivity ; 
 - import im . actor . sdk . controllers . fragment . compose . ComposeActivity ; 
 - import im . actor . sdk . controllers . fragment . compose . CreateGroupActivity ; 
 + import im . actor . sdk . controllers . compose . ComposeActivity ; 
 + import im . actor . sdk . controllers . compose . CreateGroupActivity ; 
 import im . actor . sdk . controllers . contacts . ContactsFragment ; 
 import im . actor . sdk . controllers . dialogs . DialogsFragment ; 
 import im . actor . sdk . controllers . fragment . help . HelpActivity ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeActivity . java 
 new file mode 100644 
 index 0000000 . . da71dfe 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeActivity . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package im . actor . sdk . controllers . compose ; 
 + 
 + import android . os . Bundle ; 
 + 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 + 
 + / * * 
 + * Created by ex3ndr on 20 . 09 . 14 . 
 + * / 
 + public class ComposeActivity extends BaseFragmentActivity { 
 + 
 + @ Override 
 + protected void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + 
 + getSupportActionBar ( ) . setTitle ( R . string . compose _ title ) ; 
 + 
 + showFragment ( new ComposeFragment ( ) , false , false ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeFragment . java 
 new file mode 100644 
 index 0000000 . . e3b7469 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / ComposeFragment . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package im . actor . sdk . controllers . compose ; 
 + 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . contacts . BaseContactFragment ; 
 + import im . actor . core . entity . Contact ; 
 + 
 + / * * 
 + * Created by ex3ndr on 23 . 09 . 14 . 
 + * / 
 + public class ComposeFragment extends BaseContactFragment { 
 + 
 + public ComposeFragment ( ) { 
 + super ( true , true , false ) ; 
 + } 
 + 
 + @ Override 
 + public void onItemClicked ( Contact contact ) { 
 + getActivity ( ) . startActivity ( Intents . openPrivateDialog ( contact . getUid ( ) , true , getActivity ( ) ) ) ; 
 + getActivity ( ) . finish ( ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / CreateGroupActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / CreateGroupActivity . java 
 new file mode 100644 
 index 0000000 . . cf5f343 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / CreateGroupActivity . java 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + package im . actor . sdk . controllers . compose ; 
 + 
 + import android . os . Bundle ; 
 + 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 + 
 + / * * 
 + * Created by ex3ndr on 04 . 10 . 14 . 
 + * / 
 + public class CreateGroupActivity extends BaseFragmentActivity { 
 + 
 + @ Override 
 + protected void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + getSupportActionBar ( ) . setTitle ( R . string . create _ group _ title ) ; 
 + showFragment ( new GroupNameFragment ( ) , false , false ) ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupNameFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupNameFragment . java 
 new file mode 100644 
 index 0000000 . . ed36f21 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupNameFragment . java 
 @ @ - 0 , 0 + 1 , 125 @ @ 
 + package im . actor . sdk . controllers . compose ; 
 + 
 + import android . app . Activity ; 
 + import android . content . Intent ; 
 + import android . os . Bundle ; 
 + import android . view . KeyEvent ; 
 + import android . view . LayoutInflater ; 
 + import android . view . Menu ; 
 + import android . view . MenuInflater ; 
 + import android . view . MenuItem ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . view . inputmethod . EditorInfo ; 
 + import android . widget . EditText ; 
 + import android . widget . TextView ; 
 + 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . fragment . BaseFragment ; 
 + import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . view . avatar . AvatarView ; 
 + import im . actor . sdk . util . KeyboardHelper ; 
 + 
 + / * * 
 + * Created by ex3ndr on 04 . 10 . 14 . 
 + * / 
 + public class GroupNameFragment extends BaseFragment { 
 + 
 + private static final int REQUEST _ AVATAR = 1 ; 
 + 
 + private EditText groupName ; 
 + private AvatarView avatarView ; 
 + 
 + private String avatarPath ; 
 + 
 + private KeyboardHelper helper ; 
 + 
 + @ Override 
 + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 + helper = new KeyboardHelper ( getActivity ( ) ) ; 
 + 
 + View res = inflater . inflate ( R . layout . fragment _ create _ group _ name , container , false ) ; 
 + res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + ( ( TextView ) res . findViewById ( R . id . create _ group _ hint ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 + groupName = ( EditText ) res . findViewById ( R . id . groupTitle ) ; 
 + groupName . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { 
 + @ Override 
 + public boolean onEditorAction ( TextView v , int actionId , KeyEvent event ) { 
 + if ( actionId = = EditorInfo . IME _ ACTION _ NEXT ) { 
 + next ( ) ; 
 + return true ; 
 + } 
 + return false ; 
 + } 
 + } ) ; 
 + groupName . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 + groupName . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; 
 + 
 + avatarView = ( AvatarView ) res . findViewById ( R . id . avatar ) ; 
 + avatarView . init ( Screen . dp ( 96 ) , 24 ) ; 
 + avatarView . getHierarchy ( ) . setPlaceholderImage ( R . drawable . circle _ placeholder ) ; 
 + / / avatarView . getHierarchy ( ) . setControllerOverlay ( getResources ( ) . getDrawable ( R . drawable . circle _ selector ) ) ; 
 + avatarView . setImageURI ( null ) ; 
 + 
 + res . findViewById ( R . id . pickAvatar ) . setOnClickListener ( new View . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( View view ) { 
 + startActivityForResult ( Intents . pickAvatar ( avatarPath ! = null , getActivity ( ) ) , REQUEST _ AVATAR ) ; 
 + } 
 + } ) ; 
 + 
 + return res ; 
 + } 
 + 
 + @ Override 
 + public void onResume ( ) { 
 + super . onResume ( ) ; 
 + groupName . requestFocus ( ) ; 
 + helper . setImeVisibility ( groupName , true ) ; 
 + } 
 + 
 + @ Override 
 + public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { 
 + super . onCreateOptionsMenu ( menu , inflater ) ; 
 + inflater . inflate ( R . menu . next , menu ) ; 
 + } 
 + 
 + @ Override 
 + public boolean onOptionsItemSelected ( MenuItem item ) { 
 + if ( item . getItemId ( ) = = R . id . next ) { 
 + next ( ) ; 
 + return true ; 
 + } 
 + return super . onOptionsItemSelected ( item ) ; 
 + } 
 + 
 + private void next ( ) { 
 + String title = groupName . getText ( ) . toString ( ) . trim ( ) ; 
 + if ( title . length ( ) > 0 ) { 
 + ( ( CreateGroupActivity ) getActivity ( ) ) . showNextFragment ( 
 + GroupUsersFragment . create ( groupName . getText ( ) . toString ( ) . trim ( ) , avatarPath ) , false , true ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onActivityResult ( int requestCode , int resultCode , Intent data ) { 
 + if ( requestCode = = REQUEST _ AVATAR & & resultCode = = Activity . RESULT _ OK ) { 
 + int res = data . getIntExtra ( Intents . EXTRA _ RESULT , Intents . RESULT _ IMAGE ) ; 
 + if ( res = = Intents . RESULT _ DELETE ) { 
 + this . avatarPath = null ; 
 + this . avatarView . unbind ( ) ; 
 + } else if ( res = = Intents . RESULT _ IMAGE ) { 
 + this . avatarPath = data . getStringExtra ( Intents . EXTRA _ IMAGE ) ; 
 + this . avatarView . bindRaw ( avatarPath ) ; 
 + } 
 + } 
 + } 
 + 
 + @ Override 
 + public void onPause ( ) { 
 + super . onPause ( ) ; 
 + helper . setImeVisibility ( groupName , false ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupUsersFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupUsersFragment . java 
 new file mode 100644 
 index 0000000 . . 237720d 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / GroupUsersFragment . java 
 @ @ - 0 , 0 + 1 , 191 @ @ 
 + package im . actor . sdk . controllers . compose ; 
 + 
 + import android . os . Bundle ; 
 + import android . text . Editable ; 
 + import android . text . Spannable ; 
 + import android . text . SpannableString ; 
 + import android . text . Spanned ; 
 + import android . text . TextWatcher ; 
 + import android . view . LayoutInflater ; 
 + import android . view . Menu ; 
 + import android . view . MenuInflater ; 
 + import android . view . MenuItem ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . widget . EditText ; 
 + 
 + import im . actor . core . entity . Contact ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . compose . view . UserSpan ; 
 + import im . actor . sdk . controllers . contacts . BaseContactFragment ; 
 + import im . actor . sdk . util . BoxUtil ; 
 + import im . actor . sdk . util . Screen ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 + 
 + public class GroupUsersFragment extends BaseContactFragment { 
 + 
 + private String title ; 
 + private String avatarPath ; 
 + private EditText searchField ; 
 + private TextWatcher textWatcher ; 
 + 
 + public GroupUsersFragment ( ) { 
 + super ( true , false , true ) ; 
 + } 
 + 
 + public static GroupUsersFragment create ( String title , String avatarPath ) { 
 + GroupUsersFragment res = new GroupUsersFragment ( ) ; 
 + Bundle args = new Bundle ( ) ; 
 + args . putString ( " title " , title ) ; 
 + args . putString ( " avatarPath " , avatarPath ) ; 
 + res . setArguments ( args ) ; 
 + return res ; 
 + } 
 + 
 + @ Override 
 + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 + 
 + title = getArguments ( ) . getString ( " title " ) ; 
 + avatarPath = getArguments ( ) . getString ( " avatarPath " ) ; 
 + 
 + View res = onCreateContactsView ( R . layout . fragment _ create _ group _ participants , inflater , 
 + container , savedInstanceState ) ; 
 + res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + searchField = ( EditText ) res . findViewById ( R . id . searchField ) ; 
 + searchField . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 + searchField . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; 
 + textWatcher = new TextWatcher ( ) { 
 + @ Override 
 + public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onTextChanged ( CharSequence s , int start , int before , int count ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void afterTextChanged ( Editable s ) { 
 + checkForDeletions ( s ) ; 
 + String filter = s . toString ( ) . trim ( ) ; 
 + while ( filter . length ( ) > 0 & & filter . charAt ( 0 ) = = ' ! ' ) { 
 + filter = filter . substring ( 1 ) ; 
 + } 
 + filter ( filter ) ; 
 + } 
 + } ; 
 + return res ; 
 + } 
 + 
 + @ Override 
 + public void onResume ( ) { 
 + super . onResume ( ) ; 
 + searchField . addTextChangedListener ( textWatcher ) ; 
 + } 
 + 
 + @ Override 
 + public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { 
 + super . onCreateOptionsMenu ( menu , inflater ) ; 
 + inflater . inflate ( R . menu . create _ group , menu ) ; 
 + menu . findItem ( R . id . done ) . setEnabled ( getSelectedCount ( ) > 0 ) ; 
 + } 
 + 
 + @ Override 
 + public boolean onOptionsItemSelected ( MenuItem item ) { 
 + if ( item . getItemId ( ) = = R . id . done ) { 
 + if ( getSelectedCount ( ) > 0 ) { 
 + execute ( messenger ( ) . createGroup ( title , avatarPath , BoxUtil . unbox ( getSelected ( ) ) ) , 
 + R . string . progress _ common , new CommandCallback < Integer > ( ) { 
 + @ Override 
 + public void onResult ( Integer res ) { 
 + getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; 
 + getActivity ( ) . finish ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + return true ; 
 + } 
 + return super . onOptionsItemSelected ( item ) ; 
 + } 
 + 
 + @ Override 
 + public void onItemClicked ( Contact contact ) { 
 + if ( isSelected ( contact . getUid ( ) ) ) { 
 + unselect ( contact . getUid ( ) ) ; 
 + } else { 
 + select ( contact . getUid ( ) ) ; 
 + } 
 + getActivity ( ) . invalidateOptionsMenu ( ) ; 
 + updateEditText ( ) ; 
 + } 
 + 
 + private void updateEditText ( ) { 
 + Integer [ ] selected = getSelected ( ) ; 
 + String src = " " ; 
 + for ( int i = 0 ; i < selected . length ; i + + ) { 
 + src + = " ! " ; 
 + } 
 + Spannable spannable = new SpannableString ( src ) ; 
 + for ( int i = 0 ; i < selected . length ; i + + ) { 
 + spannable . setSpan ( new UserSpan ( users ( ) . get ( selected [ i ] ) , Screen . dp ( 200 ) ) , i , i + 1 , Spanned . SPAN _ INCLUSIVE _ EXCLUSIVE ) ; 
 + } 
 + searchField . removeTextChangedListener ( textWatcher ) ; 
 + searchField . setText ( spannable ) ; 
 + searchField . setSelection ( spannable . length ( ) ) ; 
 + searchField . addTextChangedListener ( textWatcher ) ; 
 + filter ( " " ) ; 
 + getAdapter ( ) . notifyDataSetChanged ( ) ; 
 + } 
 + 
 + private void checkForDeletions ( Editable editable ) { 
 + Integer [ ] selected = getSelected ( ) ; 
 + boolean hasDeletions = false ; 
 + UserSpan [ ] spans = editable . getSpans ( 0 , editable . length ( ) , UserSpan . class ) ; 
 + for ( Integer u : selected ) { 
 + boolean founded = false ; 
 + for ( UserSpan span : spans ) { 
 + if ( span . getUser ( ) . getId ( ) = = u ) { 
 + if ( editable . getSpanStart ( span ) = = editable . getSpanEnd ( span ) ) { 
 + break ; 
 + } else { 
 + founded = true ; 
 + break ; 
 + } 
 + } 
 + } 
 + 
 + if ( ! founded ) { 
 + hasDeletions = true ; 
 + unselect ( u ) ; 
 + } 
 + } 
 + if ( hasDeletions ) { 
 + getActivity ( ) . invalidateOptionsMenu ( ) ; 
 + getAdapter ( ) . notifyDataSetChanged ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onPause ( ) { 
 + super . onPause ( ) ; 
 + searchField . removeTextChangedListener ( textWatcher ) ; 
 + } 
 + 
 + @ Override 
 + public void onDestroyView ( ) { 
 + super . onDestroyView ( ) ; 
 + textWatcher = null ; 
 + searchField = null ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / view / UserSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / view / UserSpan . java 
 new file mode 100644 
 index 0000000 . . d93ccf9 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / compose / view / UserSpan . java 
 @ @ - 0 , 0 + 1 , 65 @ @ 
 + package im . actor . sdk . controllers . compose . view ; 
 + 
 + import android . graphics . Canvas ; 
 + import android . graphics . Paint ; 
 + import android . graphics . RectF ; 
 + import android . text . TextPaint ; 
 + import android . text . TextUtils ; 
 + import android . text . style . ReplacementSpan ; 
 + 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . util . Screen ; 
 + import im . actor . core . viewmodel . UserVM ; 
 + 
 + / * * 
 + * Created by ex3ndr on 26 . 03 . 15 . 
 + * / 
 + public class UserSpan extends ReplacementSpan { 
 + 
 + private UserVM user ; 
 + private int maxW ; 
 + private String userText ; 
 + private TextPaint textPaint ; 
 + 
 + public UserSpan ( UserVM user , int maxW ) { 
 + this . user = user ; 
 + this . maxW = maxW ; 
 + if ( textPaint = = null ) { 
 + textPaint = new TextPaint ( Paint . ANTI _ ALIAS _ FLAG | Paint . SUBPIXEL _ TEXT _ FLAG ) ; 
 + textPaint . setTextSize ( Screen . sp ( 16 ) ) ; 
 + textPaint . setColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 + } 
 + 
 + int padding = Screen . dp ( 18 ) ; 
 + int maxWidth = maxW - padding ; 
 + userText = TextUtils . ellipsize ( user . getName ( ) . get ( ) , textPaint , maxWidth , TextUtils . TruncateAt . END ) . toString ( ) ; 
 + } 
 + 
 + public UserVM getUser ( ) { 
 + return user ; 
 + } 
 + 
 + @ Override 
 + public int getSize ( Paint paint , CharSequence charSequence , int start , int end , Paint . FontMetricsInt fm ) { 
 + if ( fm ! = null ) { 
 + / / WTF ? ? ? 
 + fm . ascent = - Screen . dp ( 21 + 3 ) ; 
 + fm . descent = Screen . dp ( 10 + 3 ) ; 
 + 
 + fm . top = fm . ascent ; 
 + fm . bottom = fm . descent ; 
 + } 
 + return ( int ) textPaint . measureText ( userText ) + Screen . dp ( 24 + 8 ) ; 
 + } 
 + 
 + @ Override 
 + public void draw ( Canvas canvas , CharSequence charSequence , int start , int end , 
 + float x , int top , int y , int bottom , Paint paint ) { 
 + int size = ( int ) textPaint . measureText ( userText ) ; 
 + Paint debug = new Paint ( ) ; 
 + debug . setColor ( 0xffebebeb ) ; 
 + debug . setStyle ( Paint . Style . FILL _ AND _ STROKE ) ; 
 + canvas . drawRoundRect ( new RectF ( x + Screen . dp ( 4 ) , y - Screen . dp ( 20 ) , x + size + Screen . dp ( 4 + 24 ) , y + Screen . dp ( 8 ) ) , Screen . dp ( 14 ) , Screen . dp ( 14 ) , debug ) ; 
 + canvas . drawText ( userText , x + Screen . dp ( 4 + 12 ) , y , textPaint ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeActivity . java 
 deleted file mode 100644 
 index 0edd816 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeActivity . java 
 + + + / dev / null 
 @ @ - 1 , 21 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . compose ; 
 - 
 - import android . os . Bundle ; 
 - 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 - 
 - / * * 
 - * Created by ex3ndr on 20 . 09 . 14 . 
 - * / 
 - public class ComposeActivity extends BaseFragmentActivity { 
 - 
 - @ Override 
 - protected void onCreate ( Bundle savedInstanceState ) { 
 - super . onCreate ( savedInstanceState ) ; 
 - 
 - getSupportActionBar ( ) . setTitle ( R . string . compose _ title ) ; 
 - 
 - showFragment ( new ComposeFragment ( ) , false , false ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeFragment . java 
 deleted file mode 100644 
 index c1ec395 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / ComposeFragment . java 
 + + + / dev / null 
 @ @ - 1 , 21 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . compose ; 
 - 
 - import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . contacts . BaseContactFragment ; 
 - import im . actor . core . entity . Contact ; 
 - 
 - / * * 
 - * Created by ex3ndr on 23 . 09 . 14 . 
 - * / 
 - public class ComposeFragment extends BaseContactFragment { 
 - 
 - public ComposeFragment ( ) { 
 - super ( true , true , false ) ; 
 - } 
 - 
 - @ Override 
 - public void onItemClicked ( Contact contact ) { 
 - getActivity ( ) . startActivity ( Intents . openPrivateDialog ( contact . getUid ( ) , true , getActivity ( ) ) ) ; 
 - getActivity ( ) . finish ( ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / CreateGroupActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / CreateGroupActivity . java 
 deleted file mode 100644 
 index 4a205ae . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / CreateGroupActivity . java 
 + + + / dev / null 
 @ @ - 1 , 19 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . compose ; 
 - 
 - import android . os . Bundle ; 
 - 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 - 
 - / * * 
 - * Created by ex3ndr on 04 . 10 . 14 . 
 - * / 
 - public class CreateGroupActivity extends BaseFragmentActivity { 
 - 
 - @ Override 
 - protected void onCreate ( Bundle savedInstanceState ) { 
 - super . onCreate ( savedInstanceState ) ; 
 - getSupportActionBar ( ) . setTitle ( R . string . create _ group _ title ) ; 
 - showFragment ( new GroupNameFragment ( ) , false , false ) ; 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupNameFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupNameFragment . java 
 deleted file mode 100644 
 index 01153ef . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupNameFragment . java 
 + + + / dev / null 
 @ @ - 1 , 125 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . compose ; 
 - 
 - import android . app . Activity ; 
 - import android . content . Intent ; 
 - import android . os . Bundle ; 
 - import android . view . KeyEvent ; 
 - import android . view . LayoutInflater ; 
 - import android . view . Menu ; 
 - import android . view . MenuInflater ; 
 - import android . view . MenuItem ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . view . inputmethod . EditorInfo ; 
 - import android . widget . EditText ; 
 - import android . widget . TextView ; 
 - 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . fragment . BaseFragment ; 
 - import im . actor . sdk . util . Screen ; 
 - import im . actor . sdk . view . avatar . AvatarView ; 
 - import im . actor . sdk . util . KeyboardHelper ; 
 - 
 - / * * 
 - * Created by ex3ndr on 04 . 10 . 14 . 
 - * / 
 - public class GroupNameFragment extends BaseFragment { 
 - 
 - private static final int REQUEST _ AVATAR = 1 ; 
 - 
 - private EditText groupName ; 
 - private AvatarView avatarView ; 
 - 
 - private String avatarPath ; 
 - 
 - private KeyboardHelper helper ; 
 - 
 - @ Override 
 - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 - helper = new KeyboardHelper ( getActivity ( ) ) ; 
 - 
 - View res = inflater . inflate ( R . layout . fragment _ create _ group _ name , container , false ) ; 
 - res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - ( ( TextView ) res . findViewById ( R . id . create _ group _ hint ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 - groupName = ( EditText ) res . findViewById ( R . id . groupTitle ) ; 
 - groupName . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { 
 - @ Override 
 - public boolean onEditorAction ( TextView v , int actionId , KeyEvent event ) { 
 - if ( actionId = = EditorInfo . IME _ ACTION _ NEXT ) { 
 - next ( ) ; 
 - return true ; 
 - } 
 - return false ; 
 - } 
 - } ) ; 
 - groupName . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 - groupName . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; 
 - 
 - avatarView = ( AvatarView ) res . findViewById ( R . id . avatar ) ; 
 - avatarView . init ( Screen . dp ( 96 ) , 24 ) ; 
 - avatarView . getHierarchy ( ) . setPlaceholderImage ( R . drawable . circle _ placeholder ) ; 
 - / / avatarView . getHierarchy ( ) . setControllerOverlay ( getResources ( ) . getDrawable ( R . drawable . circle _ selector ) ) ; 
 - avatarView . setImageURI ( null ) ; 
 - 
 - res . findViewById ( R . id . pickAvatar ) . setOnClickListener ( new View . OnClickListener ( ) { 
 - @ Override 
 - public void onClick ( View view ) { 
 - startActivityForResult ( Intents . pickAvatar ( avatarPath ! = null , getActivity ( ) ) , REQUEST _ AVATAR ) ; 
 - } 
 - } ) ; 
 - 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public void onResume ( ) { 
 - super . onResume ( ) ; 
 - groupName . requestFocus ( ) ; 
 - helper . setImeVisibility ( groupName , true ) ; 
 - } 
 - 
 - @ Override 
 - public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { 
 - super . onCreateOptionsMenu ( menu , inflater ) ; 
 - inflater . inflate ( R . menu . next , menu ) ; 
 - } 
 - 
 - @ Override 
 - public boolean onOptionsItemSelected ( MenuItem item ) { 
 - if ( item . getItemId ( ) = = R . id . next ) { 
 - next ( ) ; 
 - return true ; 
 - } 
 - return super . onOptionsItemSelected ( item ) ; 
 - } 
 - 
 - private void next ( ) { 
 - String title = groupName . getText ( ) . toString ( ) . trim ( ) ; 
 - if ( title . length ( ) > 0 ) { 
 - ( ( CreateGroupActivity ) getActivity ( ) ) . showNextFragment ( 
 - GroupUsersFragment . create ( groupName . getText ( ) . toString ( ) . trim ( ) , avatarPath ) , false , true ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void onActivityResult ( int requestCode , int resultCode , Intent data ) { 
 - if ( requestCode = = REQUEST _ AVATAR & & resultCode = = Activity . RESULT _ OK ) { 
 - int res = data . getIntExtra ( Intents . EXTRA _ RESULT , Intents . RESULT _ IMAGE ) ; 
 - if ( res = = Intents . RESULT _ DELETE ) { 
 - this . avatarPath = null ; 
 - this . avatarView . unbind ( ) ; 
 - } else if ( res = = Intents . RESULT _ IMAGE ) { 
 - this . avatarPath = data . getStringExtra ( Intents . EXTRA _ IMAGE ) ; 
 - this . avatarView . bindRaw ( avatarPath ) ; 
 - } 
 - } 
 - } 
 - 
 - @ Override 
 - public void onPause ( ) { 
 - super . onPause ( ) ; 
 - helper . setImeVisibility ( groupName , false ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupUsersFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupUsersFragment . java 
 deleted file mode 100644 
 index 9d0445d . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / GroupUsersFragment . java 
 + + + / dev / null 
 @ @ - 1 , 191 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . compose ; 
 - 
 - import android . os . Bundle ; 
 - import android . text . Editable ; 
 - import android . text . Spannable ; 
 - import android . text . SpannableString ; 
 - import android . text . Spanned ; 
 - import android . text . TextWatcher ; 
 - import android . view . LayoutInflater ; 
 - import android . view . Menu ; 
 - import android . view . MenuInflater ; 
 - import android . view . MenuItem ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . widget . EditText ; 
 - 
 - import im . actor . core . entity . Contact ; 
 - import im . actor . core . viewmodel . CommandCallback ; 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . fragment . compose . view . UserSpan ; 
 - import im . actor . sdk . controllers . contacts . BaseContactFragment ; 
 - import im . actor . sdk . util . BoxUtil ; 
 - import im . actor . sdk . util . Screen ; 
 - 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 - 
 - public class GroupUsersFragment extends BaseContactFragment { 
 - 
 - private String title ; 
 - private String avatarPath ; 
 - private EditText searchField ; 
 - private TextWatcher textWatcher ; 
 - 
 - public GroupUsersFragment ( ) { 
 - super ( true , false , true ) ; 
 - } 
 - 
 - public static GroupUsersFragment create ( String title , String avatarPath ) { 
 - GroupUsersFragment res = new GroupUsersFragment ( ) ; 
 - Bundle args = new Bundle ( ) ; 
 - args . putString ( " title " , title ) ; 
 - args . putString ( " avatarPath " , avatarPath ) ; 
 - res . setArguments ( args ) ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 - 
 - title = getArguments ( ) . getString ( " title " ) ; 
 - avatarPath = getArguments ( ) . getString ( " avatarPath " ) ; 
 - 
 - View res = onCreateContactsView ( R . layout . fragment _ create _ group _ participants , inflater , 
 - container , savedInstanceState ) ; 
 - res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - searchField = ( EditText ) res . findViewById ( R . id . searchField ) ; 
 - searchField . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 - searchField . setHintTextColor ( ActorSDK . sharedActor ( ) . style . getTextHintColor ( ) ) ; 
 - textWatcher = new TextWatcher ( ) { 
 - @ Override 
 - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onTextChanged ( CharSequence s , int start , int before , int count ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void afterTextChanged ( Editable s ) { 
 - checkForDeletions ( s ) ; 
 - String filter = s . toString ( ) . trim ( ) ; 
 - while ( filter . length ( ) > 0 & & filter . charAt ( 0 ) = = ' ! ' ) { 
 - filter = filter . substring ( 1 ) ; 
 - } 
 - filter ( filter ) ; 
 - } 
 - } ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public void onResume ( ) { 
 - super . onResume ( ) ; 
 - searchField . addTextChangedListener ( textWatcher ) ; 
 - } 
 - 
 - @ Override 
 - public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { 
 - super . onCreateOptionsMenu ( menu , inflater ) ; 
 - inflater . inflate ( R . menu . create _ group , menu ) ; 
 - menu . findItem ( R . id . done ) . setEnabled ( getSelectedCount ( ) > 0 ) ; 
 - } 
 - 
 - @ Override 
 - public boolean onOptionsItemSelected ( MenuItem item ) { 
 - if ( item . getItemId ( ) = = R . id . done ) { 
 - if ( getSelectedCount ( ) > 0 ) { 
 - execute ( messenger ( ) . createGroup ( title , avatarPath , BoxUtil . unbox ( getSelected ( ) ) ) , 
 - R . string . progress _ common , new CommandCallback < Integer > ( ) { 
 - @ Override 
 - public void onResult ( Integer res ) { 
 - getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; 
 - getActivity ( ) . finish ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - 
 - } 
 - } ) ; 
 - } 
 - return true ; 
 - } 
 - return super . onOptionsItemSelected ( item ) ; 
 - } 
 - 
 - @ Override 
 - public void onItemClicked ( Contact contact ) { 
 - if ( isSelected ( contact . getUid ( ) ) ) { 
 - unselect ( contact . getUid ( ) ) ; 
 - } else { 
 - select ( contact . getUid ( ) ) ; 
 - } 
 - getActivity ( ) . invalidateOptionsMenu ( ) ; 
 - updateEditText ( ) ; 
 - } 
 - 
 - private void updateEditText ( ) { 
 - Integer [ ] selected = getSelected ( ) ; 
 - String src = " " ; 
 - for ( int i = 0 ; i < selected . length ; i + + ) { 
 - src + = " ! " ; 
 - } 
 - Spannable spannable = new SpannableString ( src ) ; 
 - for ( int i = 0 ; i < selected . length ; i + + ) { 
 - spannable . setSpan ( new UserSpan ( users ( ) . get ( selected [ i ] ) , Screen . dp ( 200 ) ) , i , i + 1 , Spanned . SPAN _ INCLUSIVE _ EXCLUSIVE ) ; 
 - } 
 - searchField . removeTextChangedListener ( textWatcher ) ; 
 - searchField . setText ( spannable ) ; 
 - searchField . setSelection ( spannable . length ( ) ) ; 
 - searchField . addTextChangedListener ( textWatcher ) ; 
 - filter ( " " ) ; 
 - getAdapter ( ) . notifyDataSetChanged ( ) ; 
 - } 
 - 
 - private void checkForDeletions ( Editable editable ) { 
 - Integer [ ] selected = getSelected ( ) ; 
 - boolean hasDeletions = false ; 
 - UserSpan [ ] spans = editable . getSpans ( 0 , editable . length ( ) , UserSpan . class ) ; 
 - for ( Integer u : selected ) { 
 - boolean founded = false ; 
 - for ( UserSpan span : spans ) { 
 - if ( span . getUser ( ) . getId ( ) = = u ) { 
 - if ( editable . getSpanStart ( span ) = = editable . getSpanEnd ( span ) ) { 
 - break ; 
 - } else { 
 - founded = true ; 
 - break ; 
 - } 
 - } 
 - } 
 - 
 - if ( ! founded ) { 
 - hasDeletions = true ; 
 - unselect ( u ) ; 
 - } 
 - } 
 - if ( hasDeletions ) { 
 - getActivity ( ) . invalidateOptionsMenu ( ) ; 
 - getAdapter ( ) . notifyDataSetChanged ( ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void onPause ( ) { 
 - super . onPause ( ) ; 
 - searchField . removeTextChangedListener ( textWatcher ) ; 
 - } 
 - 
 - @ Override 
 - public void onDestroyView ( ) { 
 - super . onDestroyView ( ) ; 
 - textWatcher = null ; 
 - searchField = null ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / view / UserSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / view / UserSpan . java 
 deleted file mode 100644 
 index 8a968ae . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / compose / view / UserSpan . java 
 + + + / dev / null 
 @ @ - 1 , 65 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . compose . view ; 
 - 
 - import android . graphics . Canvas ; 
 - import android . graphics . Paint ; 
 - import android . graphics . RectF ; 
 - import android . text . TextPaint ; 
 - import android . text . TextUtils ; 
 - import android . text . style . ReplacementSpan ; 
 - 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . util . Screen ; 
 - import im . actor . core . viewmodel . UserVM ; 
 - 
 - / * * 
 - * Created by ex3ndr on 26 . 03 . 15 . 
 - * / 
 - public class UserSpan extends ReplacementSpan { 
 - 
 - private UserVM user ; 
 - private int maxW ; 
 - private String userText ; 
 - private TextPaint textPaint ; 
 - 
 - public UserSpan ( UserVM user , int maxW ) { 
 - this . user = user ; 
 - this . maxW = maxW ; 
 - if ( textPaint = = null ) { 
 - textPaint = new TextPaint ( Paint . ANTI _ ALIAS _ FLAG | Paint . SUBPIXEL _ TEXT _ FLAG ) ; 
 - textPaint . setTextSize ( Screen . sp ( 16 ) ) ; 
 - textPaint . setColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 - } 
 - 
 - int padding = Screen . dp ( 18 ) ; 
 - int maxWidth = maxW - padding ; 
 - userText = TextUtils . ellipsize ( user . getName ( ) . get ( ) , textPaint , maxWidth , TextUtils . TruncateAt . END ) . toString ( ) ; 
 - } 
 - 
 - public UserVM getUser ( ) { 
 - return user ; 
 - } 
 - 
 - @ Override 
 - public int getSize ( Paint paint , CharSequence charSequence , int start , int end , Paint . FontMetricsInt fm ) { 
 - if ( fm ! = null ) { 
 - / / WTF ? ? ? 
 - fm . ascent = - Screen . dp ( 21 + 3 ) ; 
 - fm . descent = Screen . dp ( 10 + 3 ) ; 
 - 
 - fm . top = fm . ascent ; 
 - fm . bottom = fm . descent ; 
 - } 
 - return ( int ) textPaint . measureText ( userText ) + Screen . dp ( 24 + 8 ) ; 
 - } 
 - 
 - @ Override 
 - public void draw ( Canvas canvas , CharSequence charSequence , int start , int end , 
 - float x , int top , int y , int bottom , Paint paint ) { 
 - int size = ( int ) textPaint . measureText ( userText ) ; 
 - Paint debug = new Paint ( ) ; 
 - debug . setColor ( 0xffebebeb ) ; 
 - debug . setStyle ( Paint . Style . FILL _ AND _ STROKE ) ; 
 - canvas . drawRoundRect ( new RectF ( x + Screen . dp ( 4 ) , y - Screen . dp ( 20 ) , x + size + Screen . dp ( 4 + 24 ) , y + Screen . dp ( 8 ) ) , Screen . dp ( 14 ) , Screen . dp ( 14 ) , debug ) ; 
 - canvas . drawText ( userText , x + Screen . dp ( 4 + 12 ) , y , textPaint ) ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index bf6a2fa . . e54c5ad 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import android . os . Bundle ; 
 import android . view . ViewGroup ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . imagepipeline . core . ImagePipelineConfig ; 
 
 import org . jetbrains . annotations . NotNull ; 
 
 @ @ - 193 , 7 + 194 , 10 @ @ public class ActorSDK { 
 / / SDK Tools 
 / / 
 
 - Fresco . initialize ( application ) ; 
 + ImagePipelineConfig config = ImagePipelineConfig . newBuilder ( application ) 
 + . setDownsampleEnabled ( true ) 
 + . build ( ) ; 
 + Fresco . initialize ( application , config ) ; 
 AndroidContext . setContext ( application ) ; 
 / / TODO : Replace 
 new SmileProcessor ( application ) . loadEmoji ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 885ab7a . . 19ce772 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 22 , 6 + 22 , 8 @ @ import android . support . v4 . app . Fragment ; 
 import android . support . v4 . content . ContextCompat ; 
 import android . support . v7 . app . ActionBar ; 
 import android . support . v7 . view . ActionMode ; 
 + import android . support . v7 . widget . LinearLayoutManager ; 
 + import android . support . v7 . widget . RecyclerView ; 
 import android . text . Editable ; 
 import android . text . Spannable ; 
 import android . text . TextWatcher ; 
 @ @ - 32 , 6 + 34 , 7 @ @ import android . view . MenuItem ; 
 import android . view . MotionEvent ; 
 import android . view . View ; 
 import android . view . animation . AlphaAnimation ; 
 + import android . view . animation . Animation ; 
 import android . view . animation . TranslateAnimation ; 
 import android . widget . AdapterView ; 
 import android . widget . FrameLayout ; 
 @ @ - 53 , 6 + 56 , 7 @ @ import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . ActorSystem ; 
 @ @ - 62 , 15 + 66 , 16 @ @ import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . ActorStyle ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . calls . CallActivity ; 
 import im . actor . sdk . controllers . conversation . mentions . MentionsAdapter ; 
 import im . actor . sdk . controllers . conversation . messages . AudioHolder ; 
 import im . actor . sdk . controllers . conversation . messages . MessagesFragment ; 
 + import im . actor . sdk . controllers . conversation . view . FastShareAdapter ; 
 import im . actor . sdk . controllers . fragment . settings . BaseActorChatActivity ; 
 import im . actor . sdk . core . audio . VoiceCaptureActor ; 
 import im . actor . sdk . intents . ActorIntent ; 
 import im . actor . sdk . util . Randoms ; 
 import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . util . images . GalleryScannerActor ; 
 import im . actor . sdk . view . avatar . AvatarView ; 
 import im . actor . sdk . controllers . conversation . view . TypingDrawable ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 @ @ - 78 , 7 + 83 , 6 @ @ import im . actor . sdk . view . markdown . AndroidMarkdown ; 
 import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 
 - import static im . actor . sdk . util . ViewUtils . expand ; 
 import static im . actor . sdk . util . ViewUtils . expandMentions ; 
 import static im . actor . sdk . util . ViewUtils . goneView ; 
 import static im . actor . sdk . util . ViewUtils . hideView ; 
 @ @ - 152 , 6 + 156 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private int slideStart ; 
 private TextView audioTimer ; 
 private boolean isAudioVisible ; 
 + private boolean isShareVisible ; 
 private int SLIDE _ LIMIT ; 
 ActorRef voiceRecordActor ; 
 private String audioFile ; 
 @ @ - 204 , 6 + 209 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private Intent intent ; 
 private boolean textEditing = false ; 
 private long currentEditRid ; 
 + private Animation . AnimationListener animationListener ; 
 
 public static Intent build ( Peer peer , boolean compose , Context context ) { 
 final Intent intent = new Intent ( context , ChatActivity . class ) ; 
 @ @ - 283 , 7 + 289 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 goneView ( quoteContainer ) ; 
 quoteText . setText ( " " ) ; 
 currentQuote = " " ; 
 - if ( textEditing ) { 
 + if ( textEditing ) { 
 messageEditText . setText ( " " ) ; 
 } 
 textEditing = false ; 
 @ @ - 301 , 10 + 307 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } ) ; 
 shareContainer = findViewById ( R . id . closeMenuLayout ) ; 
 - shareContainer . setOnClickListener ( new View . OnClickListener ( ) { 
 + shareContainer . setOnTouchListener ( new View . OnTouchListener ( ) { 
 @ Override 
 - public void onClick ( View v ) { 
 - hideShareMenu ( ) ; 
 + public boolean onTouch ( View v , MotionEvent event ) { 
 + hideShare ( ) ; 
 + return false ; 
 } 
 } ) ; 
 
 @ @ - 382 , 7 + 389 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 
 / / hide it 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 } 
 } ; 
 
 @ @ - 395 , 6 + 402 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; 
 handleIntent ( ) ; 
 
 + RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; 
 + FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; 
 + LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; 
 + fastShare . setAdapter ( fastShareAdapter ) ; 
 + fastShare . setLayoutManager ( layoutManager ) ; 
 
 } 
 
 @ @ - 434 , 13 + 446 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 handleIntent ( ) ; 
 } 
 
 - private void hideShareMenu ( ) { 
 - if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { 
 - / / hideView ( shareMenu ) ; 
 - expand ( shareMenu , 0 ) ; 
 - shareContainer . setVisibility ( View . GONE ) ; 
 - } 
 - } 
 + 
 
 @ Override 
 protected Fragment onCreateFragment ( ) { 
 @ @ - 831 , 13 + 837 , 13 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / } ) ; 
 / / popup . show ( ) ; 
 if ( shareMenuMaxHeight = = 0 ) { 
 - shareMenuMaxHeight = Screen . dp ( 180 ) ; 
 + shareMenuMaxHeight = Screen . dp ( 245 ) ; 
 } 
 if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 } else { 
 shareContainer . setVisibility ( View . VISIBLE ) ; 
 - expand ( shareMenu , shareMenuMaxHeight ) ; 
 + showShare ( ) ; 
 if ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ LANDSCAPE ) { 
 keyboardUtils . setImeVisibility ( messageEditText , false ) ; 
 } 
 @ @ - 982 , 7 + 988 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } 
 } ) ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 expandMentions ( mentionsList , 0 , mentionsList . getCount ( ) ) ; 
 } 
 
 @ @ - 1028 , 7 + 1034 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 quoteText . setText ( rawQuote ) ; 
 } 
 currentQuote = rawQuote ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; 
 showView ( quoteContainer ) ; 
 } 
 @ @ - 1195 , 7 + 1201 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; 
 quoteText . setText ( R . string . edit _ message ) ; 
 messageEditText . setText ( text ) ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 showView ( quoteContainer ) ; 
 
 } 
 @ @ - 1343 , 6 + 1349 , 60 @ @ public class ChatActivity extends ActorEditTextActivity { 
 
 } 
 
 + private boolean animationInProgress = false ; 
 + 
 + private void showShare ( ) { 
 + if ( animationInProgress ) { 
 + return ; 
 + } 
 + if ( animationListener = = null ) { 
 + animationListener = new Animation . AnimationListener ( ) { 
 + @ Override 
 + public void onAnimationStart ( Animation animation ) { 
 + animationInProgress = true ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationEnd ( Animation animation ) { 
 + animationInProgress = false ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationRepeat ( Animation animation ) { 
 + 
 + } 
 + } ; 
 + } 
 + 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , Screen . getHeight ( ) , 0 ) ; 
 + animation . setDuration ( 160 ) ; 
 + animation . setAnimationListener ( animationListener ) ; 
 + shareMenu . clearAnimation ( ) ; 
 + shareMenu . setAnimation ( animation ) ; 
 + shareMenu . animate ( ) ; 
 + shareMenu . setVisibility ( View . VISIBLE ) ; 
 + isShareVisible = true ; 
 + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( true ) ) ; 
 + } 
 + 
 + private void hideShare ( ) { 
 + if ( ! isShareVisible | | animationInProgress ) { 
 + return ; 
 + } 
 + isShareVisible = false ; 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , Screen . getHeight ( ) ) ; 
 + animation . setDuration ( 160 ) ; 
 + 
 + animation . setAnimationListener ( animationListener ) ; 
 + shareMenu . clearAnimation ( ) ; 
 + shareMenu . setAnimation ( animation ) ; 
 + shareMenu . animate ( ) ; 
 + shareMenu . setVisibility ( View . GONE ) ; 
 + shareContainer . setVisibility ( View . GONE ) ; 
 + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( false ) ) ; 
 + 
 + } 
 + 
 private void slideAudio ( int value ) { 
 ObjectAnimator oa = ObjectAnimator . ofFloat ( audioSlide , " translationX " , audioSlide . getX ( ) , - value ) ; 
 oa . setDuration ( 0 ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 new file mode 100644 
 index 0000000 . . a7cc631 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package im . actor . sdk . controllers . conversation . view ; 
 + 
 + import android . content . Context ; 
 + import android . net . Uri ; 
 + import android . support . v7 . widget . RecyclerView ; 
 + import android . view . LayoutInflater ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . widget . CheckBox ; 
 + import android . widget . CompoundButton ; 
 + import android . widget . FrameLayout ; 
 + 
 + import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; 
 + import com . facebook . drawee . view . SimpleDraweeView ; 
 + import com . facebook . imagepipeline . common . ResizeOptions ; 
 + import com . facebook . imagepipeline . request . ImageRequest ; 
 + import com . facebook . imagepipeline . request . ImageRequestBuilder ; 
 + 
 + import java . io . File ; 
 + import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 + import java . util . Set ; 
 + 
 + import im . actor . runtime . mvvm . Value ; 
 + import im . actor . runtime . mvvm . ValueChangedListener ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . util . Screen ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { 
 + 
 + ArrayList < String > imagesPath = new ArrayList < > ( ) ; 
 + Set < String > selected = new HashSet < > ( ) ; 
 + Context context ; 
 + 
 + public FastShareAdapter ( Context context ) { 
 + this . context = context ; 
 + messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { 
 + @ Override 
 + public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { 
 + imagesPath . clear ( ) ; 
 + imagesPath . addAll ( val ) ; 
 + notifyDataSetChanged ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + protected View inflate ( int id , ViewGroup viewGroup ) { 
 + return LayoutInflater 
 + . from ( context ) 
 + . inflate ( id , viewGroup , false ) ; 
 + } 
 + 
 + 
 + @ Override 
 + public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { 
 + return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onBindViewHolder ( FastShareVH holder , int position ) { 
 + holder . bind ( imagesPath . get ( position ) ) ; 
 + } 
 + 
 + @ Override 
 + public int getItemCount ( ) { 
 + return imagesPath . size ( ) ; 
 + } 
 + 
 + public class FastShareVH extends RecyclerView . ViewHolder { 
 + SimpleDraweeView v ; 
 + CheckBox chb ; 
 + String data ; 
 + 
 + public FastShareVH ( View itemView ) { 
 + super ( itemView ) ; 
 + v = ( SimpleDraweeView ) itemView . findViewById ( R . id . image ) ; 
 + chb = ( CheckBox ) itemView . findViewById ( R . id . check ) ; 
 + int size = context . getResources ( ) . getDimensionPixelSize ( R . dimen . share _ btn _ size ) ; 
 + v . setLayoutParams ( new FrameLayout . LayoutParams ( size , size ) ) ; 
 + chb . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { 
 + @ Override 
 + public void onCheckedChanged ( CompoundButton buttonView , boolean isChecked ) { 
 + if ( isChecked & & data ! = null ) { 
 + selected . add ( data ) ; 
 + } else { 
 + selected . remove ( data ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 + public void bind ( String path ) { 
 + data = path ; 
 + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( path ) ) ) 
 + . setResizeOptions ( new ResizeOptions ( v . getLayoutParams ( ) . width , 
 + v . getLayoutParams ( ) . height ) ) 
 + . build ( ) ; 
 + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) 
 + . setOldController ( v . getController ( ) ) 
 + . setImageRequest ( request ) 
 + . build ( ) ; 
 + v . setController ( controller ) ; 
 + chb . setChecked ( selected . contains ( data ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java 
 new file mode 100644 
 index 0000000 . . e2dcc9b 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java 
 @ @ - 0 , 0 + 1 , 171 @ @ 
 + package im . actor . sdk . util . images ; 
 + 
 + import android . content . BroadcastReceiver ; 
 + import android . content . Context ; 
 + import android . content . Intent ; 
 + import android . content . IntentFilter ; 
 + import android . database . Cursor ; 
 + import android . graphics . Bitmap ; 
 + import android . graphics . BitmapFactory ; 
 + import android . net . Uri ; 
 + import android . provider . MediaStore ; 
 + 
 + import java . io . File ; 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . utils . ImageHelper ; 
 + import im . actor . core . viewmodel . GalleryVM ; 
 + import im . actor . runtime . actors . Actor ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class GalleryScannerActor extends Actor { 
 + 
 + Context context ; 
 + Uri uri ; 
 + Cursor cursor ; 
 + int offset = 0 ; 
 + int column _ index _ data , column _ index _ folder _ name , column _ index _ date ; 
 + 
 + ArrayList < String > listOfAllImages = new ArrayList < String > ( ) ; 
 + ArrayList < String > newMedia = new ArrayList < > ( ) ; 
 + 
 + String absolutePathOfImage = null ; 
 + GalleryVM galleryVM ; 
 + Uri lastScan ; 
 + 
 + private static final int SCAN _ COUNT = 10 ; 
 + 
 + ArrayList < String > loaded = new ArrayList < > ( ) ; 
 + private boolean visible = false ; 
 + private boolean scanned = false ; 
 + private String [ ] projection ; 
 + 
 + public GalleryScannerActor ( Context context ) { 
 + this . context = context ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + galleryVM = messenger ( ) . getGalleryVM ( ) ; 
 + uri = android . provider . MediaStore . Images . Media . EXTERNAL _ CONTENT _ URI ; 
 + 
 + self ( ) . send ( new InitScan ( ) ) ; 
 + } 
 + 
 + public void initScan ( ) { 
 + projection = new String [ ] { MediaStore . MediaColumns . DATA , 
 + MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME , 
 + MediaStore . Images . Media . DATE _ MODIFIED } ; 
 + 
 + cursor = getQuery ( ) ; 
 + 
 + if ( cursor ! = null & & cursor . getCount ( ) > 0 ) { 
 + column _ index _ data = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATA ) ; 
 + column _ index _ date = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATE _ MODIFIED ) ; 
 + column _ index _ folder _ name = cursor 
 + . getColumnIndexOrThrow ( MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME ) ; 
 + 
 + 
 + self ( ) . send ( new Scan ( ) ) ; 
 + } else { 
 + schedule ( new InitScan ( ) , 1000 ) ; 
 + } 
 + 
 + } 
 + 
 + public Cursor getQuery ( ) { 
 + return context . getContentResolver ( ) . query ( uri , projection , null , 
 + null , MediaStore . MediaColumns . DATE _ MODIFIED + " DESC " ) ; 
 + } 
 + 
 + private void scan ( ) { 
 + 
 + 
 + int i = 0 ; 
 + while ( offset + i + + < offset + SCAN _ COUNT & & cursor . moveToNext ( ) ) { 
 + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; 
 + 
 + listOfAllImages . add ( absolutePathOfImage ) ; 
 + } 
 + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; 
 + offset + = i ; 
 + if ( offset < cursor . getCount ( ) ) { 
 + self ( ) . send ( new Scan ( ) ) ; 
 + } else { 
 + lastScan = MediaStore . getMediaScannerUri ( ) ; 
 + scanned = true ; 
 + schedule ( new CheckNew ( ) , 1000 ) ; 
 + } 
 + } 
 + 
 + private void checkNew ( ) { 
 + cursor = getQuery ( ) ; 
 + newMedia . clear ( ) ; 
 + while ( cursor ! = null & & cursor . moveToNext ( ) ) { 
 + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; 
 + if ( ! listOfAllImages . contains ( absolutePathOfImage ) ) { 
 + Bitmap bitmap = ImageHelper . loadOptimizedHQ ( absolutePathOfImage ) ; 
 + if ( bitmap ! = null ) { 
 + bitmap . recycle ( ) ; 
 + newMedia . add ( absolutePathOfImage ) ; 
 + } else { 
 + break ; 
 + } 
 + } else { 
 + break ; 
 + } 
 + } 
 + if ( newMedia . size ( ) > 0 ) { 
 + listOfAllImages . addAll ( 0 , newMedia ) ; 
 + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; 
 + } 
 + if ( visible ) { 
 + schedule ( new CheckNew ( ) , 1000 ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof Scan ) { 
 + scan ( ) ; 
 + } else if ( message instanceof InitScan ) { 
 + initScan ( ) ; 
 + } else if ( message instanceof CheckNew ) { 
 + checkNew ( ) ; 
 + } else if ( message instanceof Visible ) { 
 + if ( ( ( Visible ) message ) . isVisible ( ) ) { 
 + visible = true ; 
 + if ( scanned ) { 
 + self ( ) . send ( new CheckNew ( ) ) ; 
 + } 
 + } else { 
 + visible = false ; 
 + } 
 + } 
 + } 
 + 
 + private static class Scan { 
 + 
 + } 
 + 
 + private static class InitScan { 
 + 
 + } 
 + 
 + private static class CheckNew { 
 + 
 + } 
 + 
 + public static class Visible { 
 + boolean visible ; 
 + 
 + public Visible ( boolean visible ) { 
 + this . visible = visible ; 
 + } 
 + 
 + public boolean isVisible ( ) { 
 + return visible ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 index 68cf866 . . 029cf8f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 @ @ - 81 , 11 + 81 , 12 @ @ 
 
 < LinearLayout 
 android : layout _ width = " match _ parent " 
 - android : layout _ height = " 0dp " 
 + android : layout _ height = " 245dp " 
 android : layout _ above = " @ + id / fl _ send _ panel " 
 android : id = " @ + id / share _ container " 
 android : visibility = " invisible " 
 android : orientation = " vertical " 
 + android : gravity = " bottom " 
 android : background = " @ android : color / transparent " > 
 
 < ImageView 
 @ @ - 96 , 7 + 97 , 7 @ @ 
 
 < TableLayout 
 android : id = " @ + id / share _ menu " 
 - android : paddingTop = " 20dp " 
 + android : paddingTop = " 5dp " 
 android : layout _ gravity = " bottom " 
 android : layout _ width = " wrap _ content " 
 android : layout _ height = " wrap _ content " 
 @ @ - 105 , 6 + 106 , 15 @ @ 
 
 < TableRow > 
 
 + < android . support . v7 . widget . RecyclerView 
 + android : id = " @ + id / fast _ share " 
 + android : layout _ width = " 0dp " 
 + android : layout _ weight = " 1 " 
 + android : layout _ height = " @ dimen / fast _ share _ size " / > 
 + < / TableRow > 
 + 
 + < TableRow > 
 + 
 < LinearLayout 
 android : gravity = " center _ horizontal " 
 android : layout _ width = " wrap _ content " 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml 
 new file mode 100644 
 index 0000000 . . 4814076 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + android : padding = " 5dp " > 
 + 
 + < com . facebook . drawee . view . SimpleDraweeView 
 + android : id = " @ + id / image " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " / > 
 + 
 + < CheckBox 
 + android : layout _ gravity = " top | right " 
 + 
 + android : id = " @ + id / check " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " / > 
 + 
 + < / FrameLayout > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 index 6f29efa . . e2e84c6 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 @ @ - 24 , 6 + 24 , 7 @ @ 
 < dimen name = " tour _ card _ message " > 14sp < / dimen > 
 < dimen name = " keyboard _ height " > 250dp < / dimen > 
 < dimen name = " share _ btn _ size " > 60dp < / dimen > 
 + < dimen name = " fast _ share _ size " > 70dp < / dimen > 
 
 < dimen name = " call _ btn _ size " > 40dp < / dimen > 
 < dimen name = " end _ call _ btn _ size " > 70dp < / dimen > 
 diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 index 8fd7d10 . . 27391fb 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 @ @ - 40 , 8 + 40 , 11 @ @ import im . actor . core . utils . IOUtils ; 
 import im . actor . core . utils . ImageHelper ; 
 import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . core . viewmodel . GalleryVM ; 
 + import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . Props ; 
 import im . actor . runtime . android . AndroidContext ; 
 import im . actor . runtime . bser . BserCreator ; 
 @ @ - 51 , 6 + 54 , 7 @ @ import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 import im . actor . runtime . storage . ListEngineItem ; 
 + import im . actor . sdk . util . images . GalleryScannerActor ; 
 import me . leolin . shortcutbadger . ShortcutBadger ; 
 
 import static im . actor . runtime . actors . ActorSystem . system ; 
 @ @ - 68 , 6 + 72 , 8 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 private HashMap < Peer , BindedDisplayList < Message > > messagesLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; 
 private HashMap < Peer , BindedDisplayList < Message > > docsLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; 
 private HashMap < String , BindedDisplayList > customLists = new HashMap < String , BindedDisplayList > ( ) ; 
 + private GalleryVM galleryVM ; 
 + private ActorRef galleryScannerActor ; 
 
 public AndroidMessenger ( Context context , im . actor . core . Configuration configuration ) { 
 super ( configuration ) ; 
 @ @ - 482 , 6 + 488 , 23 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 return customLists . get ( key ) ; 
 } 
 
 + public GalleryVM getGalleryVM ( ) { 
 + if ( galleryVM = = null ) { 
 + galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public Actor create ( ) { 
 + return new GalleryScannerActor ( AndroidContext . getContext ( ) ) ; 
 + } 
 + } ) , " actor / gallery _ scanner " ) ; 
 + galleryVM = new GalleryVM ( ) ; 
 + } 
 + return galleryVM ; 
 + } 
 + 
 + public ActorRef getGalleryScannerActor ( ) { 
 + return galleryScannerActor ; 
 + } 
 + 
 public EventBus getEvents ( ) { 
 return modules . getEvents ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java 
 new file mode 100644 
 index 0000000 . . 9a3eb07 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + package im . actor . core . viewmodel ; 
 + 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . entity . StickerPack ; 
 + import im . actor . runtime . mvvm . ValueModel ; 
 + 
 + public class GalleryVM { 
 + 
 + private ValueModel < ArrayList < String > > galleryMediaPath ; 
 + 
 + public GalleryVM ( ) { 
 + galleryMediaPath = new ValueModel < > ( " gallery . photo " , new ArrayList < String > ( ) ) ; 
 + } 
 + 
 + public ValueModel < ArrayList < String > > getGalleryMediaPath ( ) { 
 + return galleryMediaPath ; 
 + } 
 + }
