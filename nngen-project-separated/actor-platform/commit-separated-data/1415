BLEU SCORE: 0.07334599066596144

TEST MSG: chore ( server ) : added kamon akka , scala , system metrics
GENERATED MSG: chore ( build ) : upgrade to scala 2 . 11 . 7 and new optimizer

TEST DIFF (one line): diff - - git a / actor - server / notes / 1 . 0 . 69 . markdown b / actor - server / notes / 1 . 0 . 69 . markdown < nl > new file mode 100644 < nl > index 0000000 . . fefa1e8 < nl > - - - / dev / null < nl > + + + b / actor - server / notes / 1 . 0 . 69 . markdown < nl > @ @ - 0 , 0 + 1 @ @ < nl > + * added kamon modules for scala , akka , system metrics < nl > \ No newline at end of file < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 3203755 . . d4d91b2 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 68 , 7 + 68 , 11 @ @ object Dependencies { < nl > < nl > val bcprov = " org . bouncycastle " % " bcprov - jdk15on " % " 1 . 50 " < nl > < nl > - val kamon = " io . kamon " % % " kamon - core " % V . kamon < nl > + val kamonCore = " io . kamon " % % " kamon - core " % V . kamon < nl > + val kamonScala = " io . kamon " % % " kamon - scala " % V . kamon < nl > + val kamonAkka = " io . kamon " % % " kamon - akka " % V . kamon < nl > + val kamonAkkaRemote = " io . kamon " % % " kamon - akka - remote " % V . kamon < nl > + val kamonSystemMetrics = " io . kamon " % % " kamon - system - metrics " % V . kamon < nl > val kamonDatadog = " io . kamon " % % " kamon - datadog " % V . kamon < nl > < nl > val libPhoneNumber = " com . googlecode . libphonenumber " % " libphonenumber " % " 7 . 0 . + " < nl > @ @ - 115 , 7 + 119 , 19 @ @ object Dependencies { < nl > import Compile . _ < nl > import Testing . _ < nl > < nl > - val shared = Seq ( configs , javaCompat , logbackClassic , scalaLogging , tyrex , kamon , kamonDatadog ) < nl > + val shared = Seq ( < nl > + configs , < nl > + javaCompat , < nl > + logbackClassic , < nl > + scalaLogging , < nl > + tyrex , < nl > + kamonCore , < nl > + kamonScala , < nl > + kamonAkka , < nl > + kamonAkkaRemote , < nl > + kamonSystemMetrics , < nl > + kamonDatadog < nl > + ) < nl > < nl > val root = shared + + Seq ( < nl > akkaSlf4j , akkaActor , akkaStream
NEAREST DIFF (one line): diff - - git a / actor - server / project / Build . scala b / actor - server / project / Build . scala < nl > index 0c7a5d9 . . 895b034 100644 < nl > - - - a / actor - server / project / Build . scala < nl > + + + b / actor - server / project / Build . scala < nl > @ @ - 8 , 7 + 8 , 7 @ @ import spray . revolver . RevolverPlugin . _ < nl > < nl > object Build extends sbt . Build { < nl > val Version = " 0 . 1 . 0 - SNAPSHOT " < nl > - val ScalaVersion = " 2 . 11 . 6 " < nl > + val ScalaVersion = " 2 . 11 . 7 " < nl > < nl > lazy val buildSettings = < nl > Defaults . coreDefaultSettings + + < nl > @ @ - 28 , 6 + 28 , 9 @ @ object Build extends sbt . Build { < nl > < nl > lazy val defaultScalacOptions = Seq ( < nl > " - target : jvm - 1 . 8 " , < nl > + " - Ybackend : GenBCode " , < nl > + " - Ydelambdafy : method " , < nl > + " - Yopt : l : classpath " , < nl > " - encoding " , < nl > " UTF - 8 " , < nl > " - deprecation " , < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 3f37ed7 . . d6174b5 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 27 , 6 + 27 , 7 @ @ object Dependencies { < nl > val eaioUuid = " com . eaio . uuid " % " uuid " % " 3 . 4 " < nl > < nl > val dispatch = " net . databinder . dispatch " % % " dispatch - core " % " 0 . 11 . 2 " < nl > + val javaCompat = " org . scala - lang . modules " % % " scala - java8 - compat " % " 0 . 5 . 0 " < nl > < nl > @ deprecated ( " use ` playJson ` instead " ) < nl > val sprayJson = " io . spray " % % " spray - json " % " 1 . 3 . 1 " < nl > @ @ - 81 , 7 + 82 , 7 @ @ object Dependencies { < nl > val scalacheck = " org . scalacheck " % % " scalacheck " % " 1 . 12 . 2 " % " test " < nl > val scalatest = " org . scalatest " % % " scalatest " % V . scalatest % " test " < nl > val scalaTestPlay = " org . scalatestplus " % % " play " % " 1 . 2 . 0 " % " test " < nl > - < nl > + < nl > val jfairy = " io . codearte . jfairy " % " jfairy " % " 0 . 3 . 1 " % " test " < nl > < nl > val utilTesting = " im . actor " % % " actor - util - testing " % " 0 . 0 . 2 " % " test " < nl > @ @ - 90 , 7 + 91 , 7 @ @ object Dependencies { < nl > import Compile . _ < nl > import Testing . _ < nl > < nl > - val shared = Seq ( logbackClassic , scalaLogging ) < nl > + val shared = Seq ( logbackClassic , scalaLogging , javaCompat ) < nl > < nl > val root = shared + + Seq ( < nl > akkaSlf4j , akkaActor , akkaKernel , akkaStream

TEST DIFF:
diff - - git a / actor - server / notes / 1 . 0 . 69 . markdown b / actor - server / notes / 1 . 0 . 69 . markdown 
 new file mode 100644 
 index 0000000 . . fefa1e8 
 - - - / dev / null 
 + + + b / actor - server / notes / 1 . 0 . 69 . markdown 
 @ @ - 0 , 0 + 1 @ @ 
 + * added kamon modules for scala , akka , system metrics 
 \ No newline at end of file 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 3203755 . . d4d91b2 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 68 , 7 + 68 , 11 @ @ object Dependencies { 
 
 val bcprov = " org . bouncycastle " % " bcprov - jdk15on " % " 1 . 50 " 
 
 - val kamon = " io . kamon " % % " kamon - core " % V . kamon 
 + val kamonCore = " io . kamon " % % " kamon - core " % V . kamon 
 + val kamonScala = " io . kamon " % % " kamon - scala " % V . kamon 
 + val kamonAkka = " io . kamon " % % " kamon - akka " % V . kamon 
 + val kamonAkkaRemote = " io . kamon " % % " kamon - akka - remote " % V . kamon 
 + val kamonSystemMetrics = " io . kamon " % % " kamon - system - metrics " % V . kamon 
 val kamonDatadog = " io . kamon " % % " kamon - datadog " % V . kamon 
 
 val libPhoneNumber = " com . googlecode . libphonenumber " % " libphonenumber " % " 7 . 0 . + " 
 @ @ - 115 , 7 + 119 , 19 @ @ object Dependencies { 
 import Compile . _ 
 import Testing . _ 
 
 - val shared = Seq ( configs , javaCompat , logbackClassic , scalaLogging , tyrex , kamon , kamonDatadog ) 
 + val shared = Seq ( 
 + configs , 
 + javaCompat , 
 + logbackClassic , 
 + scalaLogging , 
 + tyrex , 
 + kamonCore , 
 + kamonScala , 
 + kamonAkka , 
 + kamonAkkaRemote , 
 + kamonSystemMetrics , 
 + kamonDatadog 
 + ) 
 
 val root = shared + + Seq ( 
 akkaSlf4j , akkaActor , akkaStream

NEAREST DIFF:
diff - - git a / actor - server / project / Build . scala b / actor - server / project / Build . scala 
 index 0c7a5d9 . . 895b034 100644 
 - - - a / actor - server / project / Build . scala 
 + + + b / actor - server / project / Build . scala 
 @ @ - 8 , 7 + 8 , 7 @ @ import spray . revolver . RevolverPlugin . _ 
 
 object Build extends sbt . Build { 
 val Version = " 0 . 1 . 0 - SNAPSHOT " 
 - val ScalaVersion = " 2 . 11 . 6 " 
 + val ScalaVersion = " 2 . 11 . 7 " 
 
 lazy val buildSettings = 
 Defaults . coreDefaultSettings + + 
 @ @ - 28 , 6 + 28 , 9 @ @ object Build extends sbt . Build { 
 
 lazy val defaultScalacOptions = Seq ( 
 " - target : jvm - 1 . 8 " , 
 + " - Ybackend : GenBCode " , 
 + " - Ydelambdafy : method " , 
 + " - Yopt : l : classpath " , 
 " - encoding " , 
 " UTF - 8 " , 
 " - deprecation " , 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 3f37ed7 . . d6174b5 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 27 , 6 + 27 , 7 @ @ object Dependencies { 
 val eaioUuid = " com . eaio . uuid " % " uuid " % " 3 . 4 " 
 
 val dispatch = " net . databinder . dispatch " % % " dispatch - core " % " 0 . 11 . 2 " 
 + val javaCompat = " org . scala - lang . modules " % % " scala - java8 - compat " % " 0 . 5 . 0 " 
 
 @ deprecated ( " use ` playJson ` instead " ) 
 val sprayJson = " io . spray " % % " spray - json " % " 1 . 3 . 1 " 
 @ @ - 81 , 7 + 82 , 7 @ @ object Dependencies { 
 val scalacheck = " org . scalacheck " % % " scalacheck " % " 1 . 12 . 2 " % " test " 
 val scalatest = " org . scalatest " % % " scalatest " % V . scalatest % " test " 
 val scalaTestPlay = " org . scalatestplus " % % " play " % " 1 . 2 . 0 " % " test " 
 - 
 + 
 val jfairy = " io . codearte . jfairy " % " jfairy " % " 0 . 3 . 1 " % " test " 
 
 val utilTesting = " im . actor " % % " actor - util - testing " % " 0 . 0 . 2 " % " test " 
 @ @ - 90 , 7 + 91 , 7 @ @ object Dependencies { 
 import Compile . _ 
 import Testing . _ 
 
 - val shared = Seq ( logbackClassic , scalaLogging ) 
 + val shared = Seq ( logbackClassic , scalaLogging , javaCompat ) 
 
 val root = shared + + Seq ( 
 akkaSlf4j , akkaActor , akkaKernel , akkaStream
