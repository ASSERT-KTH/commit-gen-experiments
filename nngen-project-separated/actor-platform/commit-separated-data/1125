BLEU SCORE: 0.11868405219520975

TEST MSG: feat ( se ) : Basic implementation of SE runtime
GENERATED MSG: feat ( js ) : Enable stack trace logging

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java b / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java < nl > index a57b3c6 . . ecb80d3 100644 < nl > - - - a / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java < nl > + + + b / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java < nl > @ @ - 1 , 13 + 1 , 25 @ @ < nl > package im . actor . app ; < nl > < nl > + import im . actor . core . ApiConfiguration ; < nl > import im . actor . core . ConfigurationBuilder ; < nl > import im . actor . core . JavaSeMessenger ; < nl > + import im . actor . core . PhoneBookProvider ; < nl > < nl > public class Main { < nl > < nl > public static void main ( String [ ] args ) { < nl > ConfigurationBuilder builder = new ConfigurationBuilder ( ) ; < nl > - / / TODO : Perform required configuration < nl > + builder . addEndpoint ( " tcp : / / front1 - mtproto - api - rev3 . actor . im : 443 " ) ; < nl > + builder . addEndpoint ( " tcp : / / front2 - mtproto - api - rev3 . actor . im : 443 " ) ; < nl > + builder . setPhoneBookProvider ( new PhoneBookProvider ( ) { < nl > + @ Override < nl > + public void loadPhoneBook ( Callback callback ) { < nl > + < nl > + } < nl > + } ) ; < nl > + builder . setPhoneBookImportEnabled ( false ) ; < nl > + builder . setApiConfiguration ( new ApiConfiguration ( " " , 0 , < nl > + " " , " " , " " ) ) ; < nl > JavaSeMessenger messenger = new JavaSeMessenger ( builder . build ( ) ) ; < nl > / / TODO : Start working with messenger object < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java < nl > index f8e7435 . . f5bdb6f 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java < nl > @ @ - 14 , 9 + 14 , 6 @ @ import im . actor . runtime . threading . AtomicLongCompat ; < nl > import im . actor . runtime . threading . ThreadLocalCompat ; < nl > import im . actor . runtime . threading . TimerCompat ; < nl > < nl > - / * * < nl > - * Created by ex3ndr on 07 . 08 . 15 . < nl > - * / < nl > public class GenericThreadingProvider implements ThreadingRuntime { < nl > < nl > public GenericThreadingProvider ( ) { < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java < nl > index f49601d . . ce97256 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java < nl > @ @ - 8 , 22 + 8 , 22 @ @ import im . actor . runtime . LogRuntime ; < nl > < nl > public class JavaSeLogProvider implements LogRuntime { < nl > @ Override < nl > - public void w ( String tag , String message ) { < nl > - / / TODO : Implement < nl > + public synchronized void w ( String tag , String message ) { < nl > + System . out . println ( tag + " [ w ] : " + message ) ; < nl > } < nl > < nl > @ Override < nl > public void e ( String tag , Throwable throwable ) { < nl > - / / TODO : Implement < nl > + System . out . println ( tag + " [ e ] : " + throwable ) ; < nl > } < nl > < nl > @ Override < nl > public void d ( String tag , String message ) { < nl > - / / TODO : Implement < nl > + System . out . println ( tag + " [ d ] : " + message ) ; < nl > } < nl > < nl > @ Override < nl > public void v ( String tag , String message ) { < nl > - / / TODO : Implement < nl > + System . out . println ( tag + " [ v ] : " + message ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java < nl > index f1ea9d6 . . 9587437 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java < nl > @ @ - 4 , 5 + 4 , 4 @ @ import im . actor . runtime . generic . GenericRandomProvider ; < nl > < nl > public class JavaSeRandomProvider extends GenericRandomProvider { < nl > < nl > - < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java < nl > index 9171ba7 . . 0a76646 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java < nl > @ @ - 9 , 7 + 9 , 9 @ @ import im . actor . runtime . storage . IndexStorage ; < nl > import im . actor . runtime . storage . KeyValueStorage ; < nl > import im . actor . runtime . storage . ListStorage ; < nl > import im . actor . runtime . storage . PreferencesStorage ; < nl > - import sun . reflect . generics . reflectiveObjects . NotImplementedException ; < nl > + import im . actor . runtime . storage . memory . MemoryKeyValueStorage ; < nl > + import im . actor . runtime . storage . memory . MemoryListStorage ; < nl > + import im . actor . runtime . storage . memory . MemoryPreferencesStorage ; < nl > < nl > public class JavaSeStorageProvider implements StorageRuntime { < nl > < nl > @ @ - 19 , 26 + 21 , 26 @ @ public class JavaSeStorageProvider implements StorageRuntime { < nl > < nl > @ Override < nl > public PreferencesStorage createPreferencesStorage ( ) { < nl > - throw new NotImplementedException ( ) ; < nl > + return new MemoryPreferencesStorage ( ) ; < nl > } < nl > < nl > @ Override < nl > public IndexStorage createIndex ( String name ) { < nl > - throw new NotImplementedException ( ) ; < nl > + throw new RuntimeException ( ) ; < nl > } < nl > < nl > @ Override < nl > public KeyValueStorage createKeyValue ( String name ) { < nl > - throw new NotImplementedException ( ) ; < nl > + return new MemoryKeyValueStorage ( ) ; < nl > } < nl > < nl > @ Override < nl > public ListStorage createList ( String name ) { < nl > - throw new NotImplementedException ( ) ; < nl > + return new MemoryListStorage ( ) ; < nl > } < nl > < nl > @ Override < nl > public void resetStorage ( ) { < nl > - throw new NotImplementedException ( ) ; < nl > + < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java < nl > index 544d94d . . 3d7743a 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java < nl > @ @ - 6 , 6 + 6 , 8 @ @ package im . actor . runtime ; < nl > < nl > import java . math . BigInteger ; < nl > < nl > + import im . actor . runtime . crypto . primitives . digest . SHA256 ; < nl > + < nl > public class Crypto { < nl > < nl > final protected static char [ ] hexArray = " 0123456789abcdef " . toCharArray ( ) ; < nl > @ @ - 24 , 17 + 26 , 12 @ @ public class Crypto { < nl > * @ return SHA256 of data < nl > * / < nl > public static byte [ ] SHA256 ( byte [ ] data ) { < nl > - return provider . SHA256 ( data ) ; < nl > - } < nl > - < nl > - / * * < nl > - * Calculating SHA256 < nl > - * < nl > - * @ param data source data < nl > - * @ return SHA256 of data < nl > - * / < nl > - public static byte [ ] SHA512 ( byte [ ] data ) { < nl > - return provider . SHA512 ( data ) ; < nl > + SHA256 sha256 = new SHA256 ( ) ; < nl > + sha256 . reset ( ) ; < nl > + sha256 . update ( data , 0 , data . length ) ; < nl > + byte [ ] res = new byte [ 32 ] ; < nl > + sha256 . doFinal ( res , 0 ) ; < nl > + return res ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java < nl > index 1531a8f . . 00a7331 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java < nl > @ @ - 19 , 22 + 19 , 4 @ @ public interface CryptoRuntime { < nl > * / < nl > @ ObjectiveCName ( " MD5WithData : " ) < nl > byte [ ] MD5 ( byte [ ] data ) ; < nl > - < nl > - / * * < nl > - * Calculate SHA256 < nl > - * < nl > - * @ param data source data < nl > - * @ return sha256 hash of data < nl > - * / < nl > - @ ObjectiveCName ( " SHA256WithData : " ) < nl > - byte [ ] SHA256 ( byte [ ] data ) ; < nl > - < nl > - / * * < nl > - * Calculate SHA512 < nl > - * < nl > - * @ param data source data < nl > - * @ return sha512 hash of data < nl > - * / < nl > - @ ObjectiveCName ( " SHA512WithData : " ) < nl > - byte [ ] SHA512 ( byte [ ] data ) ; < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java < nl > index edbe3a9 . . d2a3070 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java < nl > @ @ - 19 , 22 + 19 , 4 @ @ public class BouncyCastleRuntime implements CryptoRuntime { < nl > digest . doFinal ( res , 0 ) ; < nl > return res ; < nl > } < nl > - < nl > - @ Override < nl > - public byte [ ] SHA256 ( byte [ ] data ) { < nl > - SHA256Digest digest = new SHA256Digest ( ) ; < nl > - digest . update ( data , 0 , data . length ) ; < nl > - byte [ ] res = new byte [ 32 ] ; < nl > - digest . doFinal ( res , 0 ) ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public byte [ ] SHA512 ( byte [ ] data ) { < nl > - SHA512Digest digest = new SHA512Digest ( ) ; < nl > - digest . update ( data , 0 , data . length ) ; < nl > - byte [ ] res = new byte [ 64 ] ; < nl > - digest . doFinal ( res , 0 ) ; < nl > - return res ; < nl > - } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java < nl > index eef1d68 . . 02b1bf7 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java < nl > @ @ - 49 , 7 + 49 , 11 @ @ public class MemoryPreferencesStorage implements PreferencesStorage { < nl > < nl > @ Override < nl > public void putBytes ( String key , byte [ ] v ) { < nl > - keys . put ( key , v ) ; < nl > + if ( v ! = null ) { < nl > + keys . put ( key , v ) ; < nl > + } else { < nl > + keys . remove ( key ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > @ @ - 62 , 7 + 66 , 11 @ @ public class MemoryPreferencesStorage implements PreferencesStorage { < nl > < nl > @ Override < nl > public void putString ( String key , String v ) { < nl > - keys . put ( key , v ) ; < nl > + if ( v ! = null ) { < nl > + keys . put ( key , v ) ; < nl > + } else { < nl > + keys . remove ( key ) ; < nl > + } < nl > } < nl > < nl > @ Override
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index f60dff5 . . cb3bc8f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 249 , 7 + 249 , 7 @ @ public class JsFacade implements Exportable { < nl > } < nl > } ) ; < nl > } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java < nl > index d47abf7 . . 109599c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java < nl > @ @ - 65 , 7 + 65 , 7 @ @ public class JsFilesModule extends AbsModule { < nl > try { < nl > return CachedFileUrl . fromBytes ( data ) ; < nl > } catch ( IOException e ) { < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > return null ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java < nl > index ff0d4a0 . . 6672fe1 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java < nl > @ @ - 25 , 7 + 25 , 12 @ @ public class JsLogProvider implements LogRuntime { < nl > < nl > @ Override < nl > public void e ( String tag , Throwable throwable ) { < nl > - error ( formatTime ( ) + " [ E ] " + tag + " : " + throwable ) ; < nl > + String stackTrace = " " ; < nl > + for ( StackTraceElement element : throwable . getStackTrace ( ) ) { < nl > + stackTrace + = element + " \ n " ; < nl > + } < nl > + < nl > + error ( formatTime ( ) + " [ E ] " + tag + " : " + throwable + " \ n " + stackTrace ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java < nl > index 27d0af1 . . e8f198d 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java < nl > @ @ - 7 , 6 + 7 , 7 @ @ import java . util . HashSet ; < nl > import java . util . List ; < nl > import java . util . Set ; < nl > < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . bser . DataInput ; < nl > import im . actor . runtime . bser . DataOutput ; < nl > import im . actor . runtime . storage . IndexStorage ; < nl > @ @ - 16 , 6 + 17 , 8 @ @ import static im . actor . runtime . crypto . Base64Utils . toBase64 ; < nl > < nl > public class JsIndexStorage implements IndexStorage { < nl > < nl > + private static final String TAG = " JsIndexStorage " ; < nl > + < nl > private Storage storage ; < nl > private String prefix ; < nl > private Set < Item > items = new HashSet < Item > ( ) ; < nl > @ @ - 37 , 7 + 40 , 7 @ @ public class JsIndexStorage implements IndexStorage { < nl > } < nl > } < nl > } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java < nl > index 8846506 . . d00ddb6 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import java . util . HashSet ; < nl > import java . util . List ; < nl > import java . util . Set ; < nl > < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . bser . DataInput ; < nl > import im . actor . runtime . bser . DataOutput ; < nl > import im . actor . runtime . storage . KeyValueRecord ; < nl > @ @ - 20 , 6 + 21 , 8 @ @ import static im . actor . runtime . crypto . Base64Utils . toBase64 ; < nl > < nl > public class JsKeyValueStorage implements KeyValueStorage { < nl > < nl > + private static final String TAG = " JsKeyValueStorage " ; < nl > + < nl > private Storage storage ; < nl > private String prefix ; < nl > private Set < Long > items = new HashSet < Long > ( ) ; < nl > @ @ - 39 , 7 + 42 , 7 @ @ public class JsKeyValueStorage implements KeyValueStorage { < nl > } < nl > } < nl > } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java < nl > index fe4de7f . . 878ff80 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java < nl > @ @ - 43 , 7 + 43 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > callback . onItemAddedOrUpdated ( item ) ; < nl > } catch ( Exception e ) { < nl > Log . d ( TAG , " Exception during update ( addOrUpdateItem ) " ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > < nl > @ @ - 65 , 7 + 65 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > callback . onItemsAddedOrUpdated ( items ) ; < nl > } catch ( Exception e ) { < nl > Log . d ( TAG , " Exception during update ( addOrUpdateItems ) " ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > } < nl > @ @ - 87 , 7 + 87 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > callback . onItemsReplaced ( items ) ; < nl > } catch ( Exception e ) { < nl > Log . d ( TAG , " Exception during update ( replaceItems ) " ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > } < nl > @ @ - 102 , 7 + 102 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > callback . onItemRemoved ( key ) ; < nl > } catch ( Exception e ) { < nl > Log . d ( TAG , " Exception during update ( removeItem ) " ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > } < nl > @ @ - 118 , 7 + 118 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > callback . onItemsRemoved ( keys ) ; < nl > } catch ( Exception e ) { < nl > Log . d ( TAG , " Exception during update ( removeItems ) " ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > } < nl > @ @ - 132 , 7 + 132 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > callback . onClear ( ) ; < nl > } catch ( Exception e ) { < nl > Log . d ( TAG , " Exception during update ( clear ) " ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > } < nl > @ @ - 150 , 7 + 150 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List < nl > return res ; < nl > } catch ( IOException e ) { < nl > Log . d ( " JsListEngine " , " Unable to decode : " + e . getMessage ( ) ) ; < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java < nl > index 99a11a0 . . 06935e0 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import java . util . Collections ; < nl > import java . util . Comparator ; < nl > import java . util . List ; < nl > < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . bser . DataInput ; < nl > import im . actor . runtime . bser . DataOutput ; < nl > import im . actor . runtime . storage . ListEngineRecord ; < nl > @ @ - 21 , 6 + 22 , 8 @ @ import static im . actor . runtime . crypto . Base64Utils . toBase64 ; < nl > < nl > public class JsListStorage implements ListStorage { < nl > < nl > + private static final String TAG = " JsListStorage " ; < nl > + < nl > private final Storage storage ; < nl > private final String prefix ; < nl > private final ArrayList < Index > index = new ArrayList < Index > ( ) ; < nl > @ @ - 51 , 7 + 54 , 7 @ @ public class JsListStorage implements ListStorage { < nl > index . add ( new Index ( id , order ) ) ; < nl > } < nl > } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > + Log . e ( TAG , e ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java b / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java 
 index a57b3c6 . . ecb80d3 100644 
 - - - a / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java 
 + + + b / actor - sdk / sdk - core - se / src / main / java / im / actor / app / Main . java 
 @ @ - 1 , 13 + 1 , 25 @ @ 
 package im . actor . app ; 
 
 + import im . actor . core . ApiConfiguration ; 
 import im . actor . core . ConfigurationBuilder ; 
 import im . actor . core . JavaSeMessenger ; 
 + import im . actor . core . PhoneBookProvider ; 
 
 public class Main { 
 
 public static void main ( String [ ] args ) { 
 ConfigurationBuilder builder = new ConfigurationBuilder ( ) ; 
 - / / TODO : Perform required configuration 
 + builder . addEndpoint ( " tcp : / / front1 - mtproto - api - rev3 . actor . im : 443 " ) ; 
 + builder . addEndpoint ( " tcp : / / front2 - mtproto - api - rev3 . actor . im : 443 " ) ; 
 + builder . setPhoneBookProvider ( new PhoneBookProvider ( ) { 
 + @ Override 
 + public void loadPhoneBook ( Callback callback ) { 
 + 
 + } 
 + } ) ; 
 + builder . setPhoneBookImportEnabled ( false ) ; 
 + builder . setApiConfiguration ( new ApiConfiguration ( " " , 0 , 
 + " " , " " , " " ) ) ; 
 JavaSeMessenger messenger = new JavaSeMessenger ( builder . build ( ) ) ; 
 / / TODO : Start working with messenger object 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java 
 index f8e7435 . . f5bdb6f 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / GenericThreadingProvider . java 
 @ @ - 14 , 9 + 14 , 6 @ @ import im . actor . runtime . threading . AtomicLongCompat ; 
 import im . actor . runtime . threading . ThreadLocalCompat ; 
 import im . actor . runtime . threading . TimerCompat ; 
 
 - / * * 
 - * Created by ex3ndr on 07 . 08 . 15 . 
 - * / 
 public class GenericThreadingProvider implements ThreadingRuntime { 
 
 public GenericThreadingProvider ( ) { 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java 
 index f49601d . . ce97256 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeLogProvider . java 
 @ @ - 8 , 22 + 8 , 22 @ @ import im . actor . runtime . LogRuntime ; 
 
 public class JavaSeLogProvider implements LogRuntime { 
 @ Override 
 - public void w ( String tag , String message ) { 
 - / / TODO : Implement 
 + public synchronized void w ( String tag , String message ) { 
 + System . out . println ( tag + " [ w ] : " + message ) ; 
 } 
 
 @ Override 
 public void e ( String tag , Throwable throwable ) { 
 - / / TODO : Implement 
 + System . out . println ( tag + " [ e ] : " + throwable ) ; 
 } 
 
 @ Override 
 public void d ( String tag , String message ) { 
 - / / TODO : Implement 
 + System . out . println ( tag + " [ d ] : " + message ) ; 
 } 
 
 @ Override 
 public void v ( String tag , String message ) { 
 - / / TODO : Implement 
 + System . out . println ( tag + " [ v ] : " + message ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java 
 index f1ea9d6 . . 9587437 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeRandomProvider . java 
 @ @ - 4 , 5 + 4 , 4 @ @ import im . actor . runtime . generic . GenericRandomProvider ; 
 
 public class JavaSeRandomProvider extends GenericRandomProvider { 
 
 - 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java 
 index 9171ba7 . . 0a76646 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - se / src / main / java / im / actor / runtime / se / JavaSeStorageProvider . java 
 @ @ - 9 , 7 + 9 , 9 @ @ import im . actor . runtime . storage . IndexStorage ; 
 import im . actor . runtime . storage . KeyValueStorage ; 
 import im . actor . runtime . storage . ListStorage ; 
 import im . actor . runtime . storage . PreferencesStorage ; 
 - import sun . reflect . generics . reflectiveObjects . NotImplementedException ; 
 + import im . actor . runtime . storage . memory . MemoryKeyValueStorage ; 
 + import im . actor . runtime . storage . memory . MemoryListStorage ; 
 + import im . actor . runtime . storage . memory . MemoryPreferencesStorage ; 
 
 public class JavaSeStorageProvider implements StorageRuntime { 
 
 @ @ - 19 , 26 + 21 , 26 @ @ public class JavaSeStorageProvider implements StorageRuntime { 
 
 @ Override 
 public PreferencesStorage createPreferencesStorage ( ) { 
 - throw new NotImplementedException ( ) ; 
 + return new MemoryPreferencesStorage ( ) ; 
 } 
 
 @ Override 
 public IndexStorage createIndex ( String name ) { 
 - throw new NotImplementedException ( ) ; 
 + throw new RuntimeException ( ) ; 
 } 
 
 @ Override 
 public KeyValueStorage createKeyValue ( String name ) { 
 - throw new NotImplementedException ( ) ; 
 + return new MemoryKeyValueStorage ( ) ; 
 } 
 
 @ Override 
 public ListStorage createList ( String name ) { 
 - throw new NotImplementedException ( ) ; 
 + return new MemoryListStorage ( ) ; 
 } 
 
 @ Override 
 public void resetStorage ( ) { 
 - throw new NotImplementedException ( ) ; 
 + 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java 
 index 544d94d . . 3d7743a 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Crypto . java 
 @ @ - 6 , 6 + 6 , 8 @ @ package im . actor . runtime ; 
 
 import java . math . BigInteger ; 
 
 + import im . actor . runtime . crypto . primitives . digest . SHA256 ; 
 + 
 public class Crypto { 
 
 final protected static char [ ] hexArray = " 0123456789abcdef " . toCharArray ( ) ; 
 @ @ - 24 , 17 + 26 , 12 @ @ public class Crypto { 
 * @ return SHA256 of data 
 * / 
 public static byte [ ] SHA256 ( byte [ ] data ) { 
 - return provider . SHA256 ( data ) ; 
 - } 
 - 
 - / * * 
 - * Calculating SHA256 
 - * 
 - * @ param data source data 
 - * @ return SHA256 of data 
 - * / 
 - public static byte [ ] SHA512 ( byte [ ] data ) { 
 - return provider . SHA512 ( data ) ; 
 + SHA256 sha256 = new SHA256 ( ) ; 
 + sha256 . reset ( ) ; 
 + sha256 . update ( data , 0 , data . length ) ; 
 + byte [ ] res = new byte [ 32 ] ; 
 + sha256 . doFinal ( res , 0 ) ; 
 + return res ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java 
 index 1531a8f . . 00a7331 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / CryptoRuntime . java 
 @ @ - 19 , 22 + 19 , 4 @ @ public interface CryptoRuntime { 
 * / 
 @ ObjectiveCName ( " MD5WithData : " ) 
 byte [ ] MD5 ( byte [ ] data ) ; 
 - 
 - / * * 
 - * Calculate SHA256 
 - * 
 - * @ param data source data 
 - * @ return sha256 hash of data 
 - * / 
 - @ ObjectiveCName ( " SHA256WithData : " ) 
 - byte [ ] SHA256 ( byte [ ] data ) ; 
 - 
 - / * * 
 - * Calculate SHA512 
 - * 
 - * @ param data source data 
 - * @ return sha512 hash of data 
 - * / 
 - @ ObjectiveCName ( " SHA512WithData : " ) 
 - byte [ ] SHA512 ( byte [ ] data ) ; 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java 
 index edbe3a9 . . d2a3070 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / bouncycastle / BouncyCastleRuntime . java 
 @ @ - 19 , 22 + 19 , 4 @ @ public class BouncyCastleRuntime implements CryptoRuntime { 
 digest . doFinal ( res , 0 ) ; 
 return res ; 
 } 
 - 
 - @ Override 
 - public byte [ ] SHA256 ( byte [ ] data ) { 
 - SHA256Digest digest = new SHA256Digest ( ) ; 
 - digest . update ( data , 0 , data . length ) ; 
 - byte [ ] res = new byte [ 32 ] ; 
 - digest . doFinal ( res , 0 ) ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public byte [ ] SHA512 ( byte [ ] data ) { 
 - SHA512Digest digest = new SHA512Digest ( ) ; 
 - digest . update ( data , 0 , data . length ) ; 
 - byte [ ] res = new byte [ 64 ] ; 
 - digest . doFinal ( res , 0 ) ; 
 - return res ; 
 - } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java 
 index eef1d68 . . 02b1bf7 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / storage / memory / MemoryPreferencesStorage . java 
 @ @ - 49 , 7 + 49 , 11 @ @ public class MemoryPreferencesStorage implements PreferencesStorage { 
 
 @ Override 
 public void putBytes ( String key , byte [ ] v ) { 
 - keys . put ( key , v ) ; 
 + if ( v ! = null ) { 
 + keys . put ( key , v ) ; 
 + } else { 
 + keys . remove ( key ) ; 
 + } 
 } 
 
 @ Override 
 @ @ - 62 , 7 + 66 , 11 @ @ public class MemoryPreferencesStorage implements PreferencesStorage { 
 
 @ Override 
 public void putString ( String key , String v ) { 
 - keys . put ( key , v ) ; 
 + if ( v ! = null ) { 
 + keys . put ( key , v ) ; 
 + } else { 
 + keys . remove ( key ) ; 
 + } 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index f60dff5 . . cb3bc8f 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 249 , 7 + 249 , 7 @ @ public class JsFacade implements Exportable { 
 } 
 } ) ; 
 } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java 
 index d47abf7 . . 109599c 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class JsFilesModule extends AbsModule { 
 try { 
 return CachedFileUrl . fromBytes ( data ) ; 
 } catch ( IOException e ) { 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 return null ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java 
 index ff0d4a0 . . 6672fe1 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsLogProvider . java 
 @ @ - 25 , 7 + 25 , 12 @ @ public class JsLogProvider implements LogRuntime { 
 
 @ Override 
 public void e ( String tag , Throwable throwable ) { 
 - error ( formatTime ( ) + " [ E ] " + tag + " : " + throwable ) ; 
 + String stackTrace = " " ; 
 + for ( StackTraceElement element : throwable . getStackTrace ( ) ) { 
 + stackTrace + = element + " \ n " ; 
 + } 
 + 
 + error ( formatTime ( ) + " [ E ] " + tag + " : " + throwable + " \ n " + stackTrace ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java 
 index 27d0af1 . . e8f198d 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsIndexStorage . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . Set ; 
 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . bser . DataInput ; 
 import im . actor . runtime . bser . DataOutput ; 
 import im . actor . runtime . storage . IndexStorage ; 
 @ @ - 16 , 6 + 17 , 8 @ @ import static im . actor . runtime . crypto . Base64Utils . toBase64 ; 
 
 public class JsIndexStorage implements IndexStorage { 
 
 + private static final String TAG = " JsIndexStorage " ; 
 + 
 private Storage storage ; 
 private String prefix ; 
 private Set < Item > items = new HashSet < Item > ( ) ; 
 @ @ - 37 , 7 + 40 , 7 @ @ public class JsIndexStorage implements IndexStorage { 
 } 
 } 
 } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java 
 index 8846506 . . d00ddb6 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsKeyValueStorage . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . Set ; 
 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . bser . DataInput ; 
 import im . actor . runtime . bser . DataOutput ; 
 import im . actor . runtime . storage . KeyValueRecord ; 
 @ @ - 20 , 6 + 21 , 8 @ @ import static im . actor . runtime . crypto . Base64Utils . toBase64 ; 
 
 public class JsKeyValueStorage implements KeyValueStorage { 
 
 + private static final String TAG = " JsKeyValueStorage " ; 
 + 
 private Storage storage ; 
 private String prefix ; 
 private Set < Long > items = new HashSet < Long > ( ) ; 
 @ @ - 39 , 7 + 42 , 7 @ @ public class JsKeyValueStorage implements KeyValueStorage { 
 } 
 } 
 } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java 
 index fe4de7f . . 878ff80 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListEngine . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 callback . onItemAddedOrUpdated ( item ) ; 
 } catch ( Exception e ) { 
 Log . d ( TAG , " Exception during update ( addOrUpdateItem ) " ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 
 @ @ - 65 , 7 + 65 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 callback . onItemsAddedOrUpdated ( items ) ; 
 } catch ( Exception e ) { 
 Log . d ( TAG , " Exception during update ( addOrUpdateItems ) " ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 } 
 @ @ - 87 , 7 + 87 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 callback . onItemsReplaced ( items ) ; 
 } catch ( Exception e ) { 
 Log . d ( TAG , " Exception during update ( replaceItems ) " ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 } 
 @ @ - 102 , 7 + 102 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 callback . onItemRemoved ( key ) ; 
 } catch ( Exception e ) { 
 Log . d ( TAG , " Exception during update ( removeItem ) " ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 } 
 @ @ - 118 , 7 + 118 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 callback . onItemsRemoved ( keys ) ; 
 } catch ( Exception e ) { 
 Log . d ( TAG , " Exception during update ( removeItems ) " ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 } 
 @ @ - 132 , 7 + 132 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 callback . onClear ( ) ; 
 } catch ( Exception e ) { 
 Log . d ( TAG , " Exception during update ( clear ) " ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 } 
 @ @ - 150 , 7 + 150 , 7 @ @ public class JsListEngine < T extends BserObject & ListEngineItem > implements List 
 return res ; 
 } catch ( IOException e ) { 
 Log . d ( " JsListEngine " , " Unable to decode : " + e . getMessage ( ) ) ; 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java 
 index 99a11a0 . . 06935e0 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import java . util . Collections ; 
 import java . util . Comparator ; 
 import java . util . List ; 
 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . bser . DataInput ; 
 import im . actor . runtime . bser . DataOutput ; 
 import im . actor . runtime . storage . ListEngineRecord ; 
 @ @ - 21 , 6 + 22 , 8 @ @ import static im . actor . runtime . crypto . Base64Utils . toBase64 ; 
 
 public class JsListStorage implements ListStorage { 
 
 + private static final String TAG = " JsListStorage " ; 
 + 
 private final Storage storage ; 
 private final String prefix ; 
 private final ArrayList < Index > index = new ArrayList < Index > ( ) ; 
 @ @ - 51 , 7 + 54 , 7 @ @ public class JsListStorage implements ListStorage { 
 index . add ( new Index ( id , order ) ) ; 
 } 
 } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 + Log . e ( TAG , e ) ; 
 } 
 }
