BLEU SCORE: 0.41722614486115056

TEST MSG: feat ( android ) : add autocomplete and quote fragments to delegate
GENERATED MSG: feat ( android ) : add / remove reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > index a1fff73 . . f79148c 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > @ @ - 11 , 8 + 11 , 10 @ @ import im . actor . runtime . android . view . BindedViewHolder ; < nl > import im . actor . sdk . controllers . conversation . ChatFragment ; < nl > import im . actor . sdk . controllers . conversation . attach . AbsAttachFragment ; < nl > import im . actor . sdk . controllers . conversation . inputbar . InputBarFragment ; < nl > + import im . actor . sdk . controllers . conversation . mentions . AutocompleteFragment ; < nl > import im . actor . sdk . controllers . conversation . messages . content . MessageHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . MessagesAdapter ; < nl > + import im . actor . sdk . controllers . conversation . quote . QuoteFragment ; < nl > import im . actor . sdk . controllers . settings . BaseGroupInfoActivity ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > import im . actor . sdk . intents . ActorIntentFragmentActivity ; < nl > @ @ - 99 , 6 + 101 , 21 @ @ public interface ActorSDKDelegate { < nl > InputBarFragment fragmentForChatInput ( ) ; < nl > < nl > / * * < nl > + * If Not null returned , overrides chat autocomplete fragment < nl > + * < nl > + * @ return Custom chat autocomplete fragment < nl > + * @ param peer peer < nl > + * / < nl > + AutocompleteFragment fragmentForAutocomplete ( Peer peer ) ; < nl > + < nl > + / * * < nl > + * If Not null returned , overrides chat quote fragment < nl > + * < nl > + * @ return Custom chat quote fragment < nl > + * / < nl > + QuoteFragment fragmentForQuote ( ) ; < nl > + < nl > + / * * < nl > * If Not null returned , overrides default toolbar ( no - ui ) fragment < nl > * < nl > * @ param peer peer < nl > @ @ - 201 , 4 + 218 , 6 @ @ public interface ActorSDKDelegate { < nl > * @ return notification sound color < nl > * / < nl > int getNotificationColor ( ) ; < nl > + < nl > + < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index 8bb53d4 . . ad319c7 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 12 , 8 + 12 , 10 @ @ import im . actor . runtime . android . view . BindedViewHolder ; < nl > import im . actor . sdk . controllers . conversation . ChatFragment ; < nl > import im . actor . sdk . controllers . conversation . attach . AbsAttachFragment ; < nl > import im . actor . sdk . controllers . conversation . inputbar . InputBarFragment ; < nl > + import im . actor . sdk . controllers . conversation . mentions . AutocompleteFragment ; < nl > import im . actor . sdk . controllers . conversation . messages . content . MessageHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . MessagesAdapter ; < nl > + import im . actor . sdk . controllers . conversation . quote . QuoteFragment ; < nl > import im . actor . sdk . controllers . settings . BaseGroupInfoActivity ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > import im . actor . sdk . intents . ActorIntentFragmentActivity ; < nl > @ @ - 74 , 6 + 76 , 16 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > return null ; < nl > } < nl > < nl > + @ Override < nl > + public AutocompleteFragment fragmentForAutocomplete ( Peer peer ) { < nl > + return null ; < nl > + } < nl > + < nl > + @ Override < nl > + public QuoteFragment fragmentForQuote ( ) { < nl > + return null ; < nl > + } < nl > + < nl > @ Nullable < nl > @ Override < nl > public Fragment fragmentForToolbar ( Peer peer ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java < nl > index e41470f . . 8bde151 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java < nl > @ @ - 101 , 13 + 101 , 23 @ @ public class ChatFragment extends BaseFragment implements InputBarCallback , Mess < nl > if ( inputBarFragment = = null ) { < nl > inputBarFragment = new InputBarFragment ( ) ; < nl > } < nl > + < nl > + AutocompleteFragment autocompleteFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForAutocomplete ( peer ) ; < nl > + if ( autocompleteFragment = = null ) { < nl > + autocompleteFragment = AutocompleteFragment . create ( peer ) ; < nl > + } < nl > + < nl > + QuoteFragment quoteFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForQuote ( ) ; < nl > + if ( quoteFragment = = null ) { < nl > + quoteFragment = new QuoteFragment ( ) ; < nl > + } < nl > getChildFragmentManager ( ) . beginTransaction ( ) < nl > . add ( toolbarFragment , " toolbar " ) < nl > . add ( R . id . messagesFragment , MessagesDefaultFragment . create ( peer ) ) < nl > . add ( R . id . sendFragment , inputBarFragment ) < nl > - . add ( R . id . quoteFragment , new QuoteFragment ( ) ) < nl > + . add ( R . id . quoteFragment , quoteFragment ) < nl > . add ( R . id . emptyPlaceholder , new EmptyChatPlaceholder ( ) ) < nl > - . add ( R . id . autocompleteContainer , new AutocompleteFragment ( peer ) ) < nl > + . add ( R . id . autocompleteContainer , autocompleteFragment ) < nl > . commitNow ( ) ; < nl > < nl > AbsAttachFragment fragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForAttachMenu ( peer ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java < nl > index 57d0eaf . . ff37afe 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java < nl > @ @ - 34 , 10 + 34 , 12 @ @ public class AutocompleteFragment extends BaseFragment { < nl > private HolderAdapter autocompleteAdapter ; < nl > private RecyclerListView autocompleteList ; < nl > < nl > - public AutocompleteFragment ( Peer peer ) { < nl > + public static AutocompleteFragment create ( Peer peer ) { < nl > + AutocompleteFragment res = new AutocompleteFragment ( ) ; < nl > Bundle bundle = new Bundle ( ) ; < nl > bundle . putLong ( " peer " , peer . getUnuqueId ( ) ) ; < nl > - setArguments ( bundle ) ; < nl > + res . setArguments ( bundle ) ; < nl > + return res ; < nl > } < nl > < nl > public AutocompleteFragment ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > index 692b43e . . 40e59cf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { < nl > < nl > private static final String TAG = " LinearLayoutManager " ; < nl > < nl > - private static final boolean DEBUG = true ; < nl > + private static final boolean DEBUG = false ; < nl > < nl > public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 7c42967 . . f8ee6ef 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > new file mode 100644 < nl > index 0000000 . . abfa92c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . graphics . Color ; < nl > + import android . graphics . Typeface ; < nl > + import android . text . TextPaint ; < nl > + import android . view . View ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > + < nl > + public class ReactionSpan extends BaseUrlSpan { < nl > + < nl > + boolean hasMyReaction ; < nl > + Peer peer ; < nl > + long rid ; < nl > + String code ; < nl > + < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + super ( code , false ) ; < nl > + this . code = code ; < nl > + this . hasMyReaction = hasMyReaction ; < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + } < nl > + < nl > + @ Override < nl > + public void updateDrawState ( TextPaint ds ) { < nl > + super . updateDrawState ( ds ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setUnderlineText ( false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( View widget ) { < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1a7465a . . 1c0ce2f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { < nl > timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > } < nl > time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > - < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 index a1fff73 . . f79148c 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 @ @ - 11 , 8 + 11 , 10 @ @ import im . actor . runtime . android . view . BindedViewHolder ; 
 import im . actor . sdk . controllers . conversation . ChatFragment ; 
 import im . actor . sdk . controllers . conversation . attach . AbsAttachFragment ; 
 import im . actor . sdk . controllers . conversation . inputbar . InputBarFragment ; 
 + import im . actor . sdk . controllers . conversation . mentions . AutocompleteFragment ; 
 import im . actor . sdk . controllers . conversation . messages . content . MessageHolder ; 
 import im . actor . sdk . controllers . conversation . messages . MessagesAdapter ; 
 + import im . actor . sdk . controllers . conversation . quote . QuoteFragment ; 
 import im . actor . sdk . controllers . settings . BaseGroupInfoActivity ; 
 import im . actor . sdk . intents . ActorIntent ; 
 import im . actor . sdk . intents . ActorIntentFragmentActivity ; 
 @ @ - 99 , 6 + 101 , 21 @ @ public interface ActorSDKDelegate { 
 InputBarFragment fragmentForChatInput ( ) ; 
 
 / * * 
 + * If Not null returned , overrides chat autocomplete fragment 
 + * 
 + * @ return Custom chat autocomplete fragment 
 + * @ param peer peer 
 + * / 
 + AutocompleteFragment fragmentForAutocomplete ( Peer peer ) ; 
 + 
 + / * * 
 + * If Not null returned , overrides chat quote fragment 
 + * 
 + * @ return Custom chat quote fragment 
 + * / 
 + QuoteFragment fragmentForQuote ( ) ; 
 + 
 + / * * 
 * If Not null returned , overrides default toolbar ( no - ui ) fragment 
 * 
 * @ param peer peer 
 @ @ - 201 , 4 + 218 , 6 @ @ public interface ActorSDKDelegate { 
 * @ return notification sound color 
 * / 
 int getNotificationColor ( ) ; 
 + 
 + 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index 8bb53d4 . . ad319c7 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 12 , 8 + 12 , 10 @ @ import im . actor . runtime . android . view . BindedViewHolder ; 
 import im . actor . sdk . controllers . conversation . ChatFragment ; 
 import im . actor . sdk . controllers . conversation . attach . AbsAttachFragment ; 
 import im . actor . sdk . controllers . conversation . inputbar . InputBarFragment ; 
 + import im . actor . sdk . controllers . conversation . mentions . AutocompleteFragment ; 
 import im . actor . sdk . controllers . conversation . messages . content . MessageHolder ; 
 import im . actor . sdk . controllers . conversation . messages . MessagesAdapter ; 
 + import im . actor . sdk . controllers . conversation . quote . QuoteFragment ; 
 import im . actor . sdk . controllers . settings . BaseGroupInfoActivity ; 
 import im . actor . sdk . intents . ActorIntent ; 
 import im . actor . sdk . intents . ActorIntentFragmentActivity ; 
 @ @ - 74 , 6 + 76 , 16 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 return null ; 
 } 
 
 + @ Override 
 + public AutocompleteFragment fragmentForAutocomplete ( Peer peer ) { 
 + return null ; 
 + } 
 + 
 + @ Override 
 + public QuoteFragment fragmentForQuote ( ) { 
 + return null ; 
 + } 
 + 
 @ Nullable 
 @ Override 
 public Fragment fragmentForToolbar ( Peer peer ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java 
 index e41470f . . 8bde151 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java 
 @ @ - 101 , 13 + 101 , 23 @ @ public class ChatFragment extends BaseFragment implements InputBarCallback , Mess 
 if ( inputBarFragment = = null ) { 
 inputBarFragment = new InputBarFragment ( ) ; 
 } 
 + 
 + AutocompleteFragment autocompleteFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForAutocomplete ( peer ) ; 
 + if ( autocompleteFragment = = null ) { 
 + autocompleteFragment = AutocompleteFragment . create ( peer ) ; 
 + } 
 + 
 + QuoteFragment quoteFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForQuote ( ) ; 
 + if ( quoteFragment = = null ) { 
 + quoteFragment = new QuoteFragment ( ) ; 
 + } 
 getChildFragmentManager ( ) . beginTransaction ( ) 
 . add ( toolbarFragment , " toolbar " ) 
 . add ( R . id . messagesFragment , MessagesDefaultFragment . create ( peer ) ) 
 . add ( R . id . sendFragment , inputBarFragment ) 
 - . add ( R . id . quoteFragment , new QuoteFragment ( ) ) 
 + . add ( R . id . quoteFragment , quoteFragment ) 
 . add ( R . id . emptyPlaceholder , new EmptyChatPlaceholder ( ) ) 
 - . add ( R . id . autocompleteContainer , new AutocompleteFragment ( peer ) ) 
 + . add ( R . id . autocompleteContainer , autocompleteFragment ) 
 . commitNow ( ) ; 
 
 AbsAttachFragment fragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForAttachMenu ( peer ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java 
 index 57d0eaf . . ff37afe 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java 
 @ @ - 34 , 10 + 34 , 12 @ @ public class AutocompleteFragment extends BaseFragment { 
 private HolderAdapter autocompleteAdapter ; 
 private RecyclerListView autocompleteList ; 
 
 - public AutocompleteFragment ( Peer peer ) { 
 + public static AutocompleteFragment create ( Peer peer ) { 
 + AutocompleteFragment res = new AutocompleteFragment ( ) ; 
 Bundle bundle = new Bundle ( ) ; 
 bundle . putLong ( " peer " , peer . getUnuqueId ( ) ) ; 
 - setArguments ( bundle ) ; 
 + res . setArguments ( bundle ) ; 
 + return res ; 
 } 
 
 public AutocompleteFragment ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 index 692b43e . . 40e59cf 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { 
 
 private static final String TAG = " LinearLayoutManager " ; 
 
 - private static final boolean DEBUG = true ; 
 + private static final boolean DEBUG = false ; 
 
 public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 7c42967 . . f8ee6ef 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 new file mode 100644 
 index 0000000 . . abfa92c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . graphics . Color ; 
 + import android . graphics . Typeface ; 
 + import android . text . TextPaint ; 
 + import android . view . View ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 + 
 + public class ReactionSpan extends BaseUrlSpan { 
 + 
 + boolean hasMyReaction ; 
 + Peer peer ; 
 + long rid ; 
 + String code ; 
 + 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + super ( code , false ) ; 
 + this . code = code ; 
 + this . hasMyReaction = hasMyReaction ; 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + } 
 + 
 + @ Override 
 + public void updateDrawState ( TextPaint ds ) { 
 + super . updateDrawState ( ds ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setUnderlineText ( false ) ; 
 + } 
 + 
 + @ Override 
 + public void onClick ( View widget ) { 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1a7465a . . 1c0ce2f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { 
 timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 } 
 time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 - 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod {
