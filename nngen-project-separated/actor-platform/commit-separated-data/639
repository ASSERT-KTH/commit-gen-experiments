BLEU SCORE: 0.5169731539571706

TEST MSG: fix ( iOS ) : Fixing Date algnment
GENERATED MSG: fix ( iOS ) : Missing changes

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift < nl > index 1050d5e . . cfe26db 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift < nl > @ @ - 31 , 6 + 31 , 7 @ @ public class AABubbleTextCell : AABubbleCell { < nl > private var isClanchTop : Bool = false < nl > private var isClanchBottom : Bool = false < nl > < nl > + private var dateWidth : CGFloat = 0 < nl > < nl > private var messageState = ACMessageState . UNKNOWN ( ) . ordinal ( ) < nl > private var cellLayout : TextCellLayout ! < nl > @ @ - 119 , 7 + 120 , 6 @ @ public class AABubbleTextCell : AABubbleCell { < nl > / / Always update bubble insets < nl > if ( isOut ) { < nl > bindBubbleType ( . TextOut , isCompact : isClanchBottom ) < nl > - / / dateText . textColor = appStyle . chatTextDateOutColor < nl > < nl > bubbleInsets = UIEdgeInsets ( < nl > top : ( isClanchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop ) , < nl > @ @ - 147 , 9 + 147 , 8 @ @ public class AABubbleTextCell : AABubbleCell { < nl > right : 10 ) < nl > } < nl > < nl > - < nl > - / / Always update date and state < nl > dateText . textLayout = self . cellLayout . dateLayout < nl > + dateWidth = self . cellLayout . dateWidth ! < nl > < nl > messageState = message . messageState . ordinal ( ) < nl > < nl > @ @ - 245 , 12 + 244 , 12 @ @ public class AABubbleTextCell : AABubbleCell { < nl > / / Layout elements < nl > if ( self . isOut ) { < nl > self . messageText . frame . origin = CGPoint ( x : contentWidth - bubbleWidth - insets . right , y : insets . top / * + topPadding * / ) < nl > - self . dateText . frame = CGRectMake ( contentWidth - insets . right - 70 , bubbleHeight + insets . top - 20 , 46 , 26 ) < nl > + self . dateText . frame = CGRectMake ( contentWidth - insets . right - 70 + 46 - dateWidth , bubbleHeight + insets . top - 20 , dateWidth , 26 ) < nl > self . statusView . frame = CGRectMake ( contentWidth - insets . right - 24 , bubbleHeight + insets . top - 20 , 20 , 26 ) < nl > self . statusView . hidden = false < nl > } else { < nl > self . messageText . frame . origin = CGPoint ( x : insets . left , y : insets . top / * + topPadding * / ) < nl > - self . dateText . frame = CGRectMake ( insets . left + bubbleWidth - 47 , bubbleHeight + insets . top - 20 , 46 , 26 ) < nl > + self . dateText . frame = CGRectMake ( insets . left + bubbleWidth - 47 + 46 - dateWidth , bubbleHeight + insets . top - 20 , dateWidth , 26 ) < nl > self . statusView . hidden = true < nl > } < nl > < nl > @ @ - 303 , 6 + 302 , 7 @ @ public class TextCellLayout : AACellLayout { < nl > var textLayout : YYTextLayout < nl > var senderLayout : YYTextLayout ? < nl > var dateLayout : YYTextLayout ? < nl > + var dateWidth : CGFloat ? < nl > < nl > var isUnsupported : Bool = false < nl > var bubbleSize : CGSize < nl > @ @ - 383 , 11 + 383 , 13 @ @ public class TextCellLayout : AACellLayout { < nl > attrDate . yy _ font = AABubbleTextCell . dateFont < nl > attrDate . yy _ color = ActorSDK . sharedActor ( ) . style . chatTextDateOutColor < nl > dateLayout = YYTextLayout ( containerSize : CGSizeMake ( timeWidth , CGFloat . max ) , text : attrDate ) < nl > + dateWidth = dateLayout ? . textBoundingSize . width < nl > } else { < nl > let attrDate = NSMutableAttributedString ( string : AACellLayout . formatDate ( date ) ) < nl > attrDate . yy _ font = AABubbleTextCell . dateFont < nl > attrDate . yy _ color = ActorSDK . sharedActor ( ) . style . chatTextDateInColor < nl > dateLayout = YYTextLayout ( containerSize : CGSizeMake ( timeWidth , CGFloat . max ) , text : attrDate ) < nl > + dateWidth = dateLayout ? . textBoundingSize . width < nl > } < nl > < nl > / / Calculating bubble height
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift < nl > index e760fc8 . . a3596c3 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift < nl > @ @ - 24 , 7 + 24 , 7 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { < nl > static let bubbleFontUnsupported = fontItalic < nl > static let senderHeight = CGFloat ( 20 ) < nl > < nl > - / / let messageText = TTTAttributedLabel ( frame : CGRectZero ) < nl > + let messageText = TTTAttributedLabel ( frame : CGRectZero ) < nl > let statusView = UIImageView ( ) ; < nl > let senderNameLabel = AttributedLabel ( ) ; < nl > var needRelayout = true < nl > @ @ - 40 , 16 + 40 , 16 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { < nl > < nl > senderNameLabel . font = AABubbleTextCell . senderFont < nl > < nl > - / / messageText . font = AABubbleTextCell . bubbleFont < nl > - / / messageText . lineBreakMode = . ByWordWrapping < nl > - / / messageText . numberOfLines = 0 < nl > - / / messageText . userInteractionEnabled = true < nl > - / / messageText . delegate = self < nl > - / / messageText . linkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , < nl > - / / kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] < nl > - / / messageText . activeLinkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , < nl > - / / kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] < nl > - / / messageText . verticalAlignment = TTTAttributedLabelVerticalAlignment . Center < nl > + messageText . font = AABubbleTextCell . bubbleFont < nl > + messageText . lineBreakMode = . ByWordWrapping < nl > + messageText . numberOfLines = 0 < nl > + messageText . userInteractionEnabled = true < nl > + messageText . delegate = self < nl > + messageText . linkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , < nl > + kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] < nl > + messageText . activeLinkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , < nl > + kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] < nl > + messageText . verticalAlignment = TTTAttributedLabelVerticalAlignment . Center < nl > < nl > < nl > dateText . font = AABubbleTextCell . dateFont < nl > @ @ - 60 , 7 + 60 , 7 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { < nl > < nl > statusView . contentMode = UIViewContentMode . Center < nl > < nl > - / / contentView . addSubview ( messageText ) < nl > + contentView . addSubview ( messageText ) < nl > contentView . addSubview ( dateText ) < nl > contentView . addSubview ( statusView ) < nl > } < nl > @ @ - 84 , 16 + 84 , 16 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { < nl > needRelayout = true < nl > < nl > / / Setting text ' s font size and color < nl > - / / messageText . textColor = self . cellLayout . textColor < nl > + messageText . textColor = self . cellLayout . textColor < nl > < nl > if self . cellLayout . text ! = nil { < nl > < nl > / / Setting text < nl > - / / messageText . text = self . cellLayout . text < nl > + messageText . text = self . cellLayout . text < nl > } else { < nl > < nl > / / Setting attributed text < nl > - / / messageText . setText ( self . cellLayout . attrText ) < nl > + messageText . setText ( self . cellLayout . attrText ) < nl > } < nl > < nl > / / Setting sender name if needed < nl > @ @ - 243 , 7 + 243 , 7 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { < nl > / / Measure Text < nl > let senderNameBounds = self . senderNameLabel . sizeThatFits ( CGSize ( width : CGFloat . max , height : CGFloat . max ) ) < nl > < nl > - / / self . messageText . frame = CGRectMake ( 0 , 0 , self . cellLayout . textSize . width , self . cellLayout . textSize . height ) < nl > + self . messageText . frame = CGRectMake ( 0 , 0 , self . cellLayout . textSize . width , self . cellLayout . textSize . height ) < nl > < nl > var textWidth = round ( self . cellLayout . textSizeWithPadding . width ) < nl > let textHeight = round ( self . cellLayout . textSizeWithPadding . height ) < nl > @ @ - 255 , 12 + 255 , 12 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { < nl > / / Layout elements < nl > let topPadding : CGFloat = self . cellLayout . attrText ! = nil ? - 0 . 5 : 0 < nl > if ( self . isOut ) { < nl > - / / self . messageText . frame . origin = CGPoint ( x : contentWidth - textWidth - insets . right , y : insets . top + topPadding ) < nl > + self . messageText . frame . origin = CGPoint ( x : contentWidth - textWidth - insets . right , y : insets . top + topPadding ) < nl > self . dateText . frame = CGRectMake ( contentWidth - insets . right - 70 , textHeight + insets . top - 20 , 46 , 26 ) < nl > self . statusView . frame = CGRectMake ( contentWidth - insets . right - 24 , textHeight + insets . top - 20 , 20 , 26 ) < nl > self . statusView . hidden = false < nl > } else { < nl > - / / self . messageText . frame . origin = CGPoint ( x : insets . left , y : insets . top + topPadding ) < nl > + self . messageText . frame . origin = CGPoint ( x : insets . left , y : insets . top + topPadding ) < nl > self . dateText . frame = CGRectMake ( insets . left + textWidth - 47 , textHeight + insets . top - 20 , 46 , 26 ) < nl > self . statusView . hidden = true < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift 
 index 1050d5e . . cfe26db 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift 
 @ @ - 31 , 6 + 31 , 7 @ @ public class AABubbleTextCell : AABubbleCell { 
 private var isClanchTop : Bool = false 
 private var isClanchBottom : Bool = false 
 
 + private var dateWidth : CGFloat = 0 
 
 private var messageState = ACMessageState . UNKNOWN ( ) . ordinal ( ) 
 private var cellLayout : TextCellLayout ! 
 @ @ - 119 , 7 + 120 , 6 @ @ public class AABubbleTextCell : AABubbleCell { 
 / / Always update bubble insets 
 if ( isOut ) { 
 bindBubbleType ( . TextOut , isCompact : isClanchBottom ) 
 - / / dateText . textColor = appStyle . chatTextDateOutColor 
 
 bubbleInsets = UIEdgeInsets ( 
 top : ( isClanchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop ) , 
 @ @ - 147 , 9 + 147 , 8 @ @ public class AABubbleTextCell : AABubbleCell { 
 right : 10 ) 
 } 
 
 - 
 - / / Always update date and state 
 dateText . textLayout = self . cellLayout . dateLayout 
 + dateWidth = self . cellLayout . dateWidth ! 
 
 messageState = message . messageState . ordinal ( ) 
 
 @ @ - 245 , 12 + 244 , 12 @ @ public class AABubbleTextCell : AABubbleCell { 
 / / Layout elements 
 if ( self . isOut ) { 
 self . messageText . frame . origin = CGPoint ( x : contentWidth - bubbleWidth - insets . right , y : insets . top / * + topPadding * / ) 
 - self . dateText . frame = CGRectMake ( contentWidth - insets . right - 70 , bubbleHeight + insets . top - 20 , 46 , 26 ) 
 + self . dateText . frame = CGRectMake ( contentWidth - insets . right - 70 + 46 - dateWidth , bubbleHeight + insets . top - 20 , dateWidth , 26 ) 
 self . statusView . frame = CGRectMake ( contentWidth - insets . right - 24 , bubbleHeight + insets . top - 20 , 20 , 26 ) 
 self . statusView . hidden = false 
 } else { 
 self . messageText . frame . origin = CGPoint ( x : insets . left , y : insets . top / * + topPadding * / ) 
 - self . dateText . frame = CGRectMake ( insets . left + bubbleWidth - 47 , bubbleHeight + insets . top - 20 , 46 , 26 ) 
 + self . dateText . frame = CGRectMake ( insets . left + bubbleWidth - 47 + 46 - dateWidth , bubbleHeight + insets . top - 20 , dateWidth , 26 ) 
 self . statusView . hidden = true 
 } 
 
 @ @ - 303 , 6 + 302 , 7 @ @ public class TextCellLayout : AACellLayout { 
 var textLayout : YYTextLayout 
 var senderLayout : YYTextLayout ? 
 var dateLayout : YYTextLayout ? 
 + var dateWidth : CGFloat ? 
 
 var isUnsupported : Bool = false 
 var bubbleSize : CGSize 
 @ @ - 383 , 11 + 383 , 13 @ @ public class TextCellLayout : AACellLayout { 
 attrDate . yy _ font = AABubbleTextCell . dateFont 
 attrDate . yy _ color = ActorSDK . sharedActor ( ) . style . chatTextDateOutColor 
 dateLayout = YYTextLayout ( containerSize : CGSizeMake ( timeWidth , CGFloat . max ) , text : attrDate ) 
 + dateWidth = dateLayout ? . textBoundingSize . width 
 } else { 
 let attrDate = NSMutableAttributedString ( string : AACellLayout . formatDate ( date ) ) 
 attrDate . yy _ font = AABubbleTextCell . dateFont 
 attrDate . yy _ color = ActorSDK . sharedActor ( ) . style . chatTextDateInColor 
 dateLayout = YYTextLayout ( containerSize : CGSizeMake ( timeWidth , CGFloat . max ) , text : attrDate ) 
 + dateWidth = dateLayout ? . textBoundingSize . width 
 } 
 
 / / Calculating bubble height

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift 
 index e760fc8 . . a3596c3 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleTextCell . swift 
 @ @ - 24 , 7 + 24 , 7 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { 
 static let bubbleFontUnsupported = fontItalic 
 static let senderHeight = CGFloat ( 20 ) 
 
 - / / let messageText = TTTAttributedLabel ( frame : CGRectZero ) 
 + let messageText = TTTAttributedLabel ( frame : CGRectZero ) 
 let statusView = UIImageView ( ) ; 
 let senderNameLabel = AttributedLabel ( ) ; 
 var needRelayout = true 
 @ @ - 40 , 16 + 40 , 16 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { 
 
 senderNameLabel . font = AABubbleTextCell . senderFont 
 
 - / / messageText . font = AABubbleTextCell . bubbleFont 
 - / / messageText . lineBreakMode = . ByWordWrapping 
 - / / messageText . numberOfLines = 0 
 - / / messageText . userInteractionEnabled = true 
 - / / messageText . delegate = self 
 - / / messageText . linkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , 
 - / / kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] 
 - / / messageText . activeLinkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , 
 - / / kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] 
 - / / messageText . verticalAlignment = TTTAttributedLabelVerticalAlignment . Center 
 + messageText . font = AABubbleTextCell . bubbleFont 
 + messageText . lineBreakMode = . ByWordWrapping 
 + messageText . numberOfLines = 0 
 + messageText . userInteractionEnabled = true 
 + messageText . delegate = self 
 + messageText . linkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , 
 + kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] 
 + messageText . activeLinkAttributes = [ kCTForegroundColorAttributeName : appStyle . chatUrlColor , 
 + kCTUnderlineStyleAttributeName : NSNumber ( bool : false ) ] 
 + messageText . verticalAlignment = TTTAttributedLabelVerticalAlignment . Center 
 
 
 dateText . font = AABubbleTextCell . dateFont 
 @ @ - 60 , 7 + 60 , 7 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { 
 
 statusView . contentMode = UIViewContentMode . Center 
 
 - / / contentView . addSubview ( messageText ) 
 + contentView . addSubview ( messageText ) 
 contentView . addSubview ( dateText ) 
 contentView . addSubview ( statusView ) 
 } 
 @ @ - 84 , 16 + 84 , 16 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { 
 needRelayout = true 
 
 / / Setting text ' s font size and color 
 - / / messageText . textColor = self . cellLayout . textColor 
 + messageText . textColor = self . cellLayout . textColor 
 
 if self . cellLayout . text ! = nil { 
 
 / / Setting text 
 - / / messageText . text = self . cellLayout . text 
 + messageText . text = self . cellLayout . text 
 } else { 
 
 / / Setting attributed text 
 - / / messageText . setText ( self . cellLayout . attrText ) 
 + messageText . setText ( self . cellLayout . attrText ) 
 } 
 
 / / Setting sender name if needed 
 @ @ - 243 , 7 + 243 , 7 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { 
 / / Measure Text 
 let senderNameBounds = self . senderNameLabel . sizeThatFits ( CGSize ( width : CGFloat . max , height : CGFloat . max ) ) 
 
 - / / self . messageText . frame = CGRectMake ( 0 , 0 , self . cellLayout . textSize . width , self . cellLayout . textSize . height ) 
 + self . messageText . frame = CGRectMake ( 0 , 0 , self . cellLayout . textSize . width , self . cellLayout . textSize . height ) 
 
 var textWidth = round ( self . cellLayout . textSizeWithPadding . width ) 
 let textHeight = round ( self . cellLayout . textSizeWithPadding . height ) 
 @ @ - 255 , 12 + 255 , 12 @ @ public class AABubbleTextCell : AABubbleCell , TTTAttributedLabelDelegate { 
 / / Layout elements 
 let topPadding : CGFloat = self . cellLayout . attrText ! = nil ? - 0 . 5 : 0 
 if ( self . isOut ) { 
 - / / self . messageText . frame . origin = CGPoint ( x : contentWidth - textWidth - insets . right , y : insets . top + topPadding ) 
 + self . messageText . frame . origin = CGPoint ( x : contentWidth - textWidth - insets . right , y : insets . top + topPadding ) 
 self . dateText . frame = CGRectMake ( contentWidth - insets . right - 70 , textHeight + insets . top - 20 , 46 , 26 ) 
 self . statusView . frame = CGRectMake ( contentWidth - insets . right - 24 , textHeight + insets . top - 20 , 20 , 26 ) 
 self . statusView . hidden = false 
 } else { 
 - / / self . messageText . frame . origin = CGPoint ( x : insets . left , y : insets . top + topPadding ) 
 + self . messageText . frame . origin = CGPoint ( x : insets . left , y : insets . top + topPadding ) 
 self . dateText . frame = CGRectMake ( insets . left + textWidth - 47 , textHeight + insets . top - 20 , 46 , 26 ) 
 self . statusView . hidden = true 
 }
