BLEU SCORE: 0.2626909894424158

TEST MSG: fix ( server ) : add debug log to pushes
GENERATED MSG: refactor ( server ) : more logging on VendorPush

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala < nl > index 1120794 . . eafd892 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala < nl > @ @ - 91 , 6 + 91 , 7 @ @ final class ApplePushExtension ( system : ActorSystem ) extends Extension with AnyRe < nl > blocking { < nl > val client = new ApnsClient [ SimpleApnsPushNotification ] ( new File ( cert . path ) , cert . password ) < nl > client . connect ( host ) . get ( 20 , TimeUnit . SECONDS ) < nl > + log . debug ( " Established client connection with push key : { } " , cert . key ) < nl > client < nl > } < nl > } < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala < nl > index f04d276 . . c933613 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala < nl > @ @ - 19 , 7 + 19 , 9 @ @ final class PushFutureListener ( userId : Int , token : ByteString ) ( implicit system : < nl > def operationComplete ( future : Future [ PushNotificationResponse [ SimpleApnsPushNotification ] ] ) : Unit = { < nl > Try ( future . get ( ) ) match { < nl > case Success ( response ) ⇒ < nl > - if ( ! response . isAccepted ) { < nl > + if ( response . isAccepted ) { < nl > + log . debug ( " Successfully delivered apple notification to userId : { } " , userId ) < nl > + } else { < nl > log . warning ( " APNS rejected notification with reason : { } " , response . getRejectionReason ) < nl > Option ( response . getTokenInvalidationTimestamp ) foreach { ts ⇒ < nl > log . warning ( " APNS token for user : { } invalidated at { } . Deleting token now " , userId , ts )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala < nl > index c3bddf0 . . a389108 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala < nl > @ @ - 181 , 6 + 181 , 7 @ @ private [ sequence ] final class VendorPush ( < nl > } < nl > < nl > private def init ( ) : Unit = { < nl > + log . debug ( " Initializing " ) < nl > db . run ( for { < nl > googleCreds ← GooglePushCredentialsRepo . findByUser ( userId ) < nl > appleCreds ← ApplePushCredentialsRepo . findByUser ( userId )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala 
 index 1120794 . . eafd892 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala 
 @ @ - 91 , 6 + 91 , 7 @ @ final class ApplePushExtension ( system : ActorSystem ) extends Extension with AnyRe 
 blocking { 
 val client = new ApnsClient [ SimpleApnsPushNotification ] ( new File ( cert . path ) , cert . password ) 
 client . connect ( host ) . get ( 20 , TimeUnit . SECONDS ) 
 + log . debug ( " Established client connection with push key : { } " , cert . key ) 
 client 
 } 
 } 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala 
 index f04d276 . . c933613 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / PushFutureListener . scala 
 @ @ - 19 , 7 + 19 , 9 @ @ final class PushFutureListener ( userId : Int , token : ByteString ) ( implicit system : 
 def operationComplete ( future : Future [ PushNotificationResponse [ SimpleApnsPushNotification ] ] ) : Unit = { 
 Try ( future . get ( ) ) match { 
 case Success ( response ) ⇒ 
 - if ( ! response . isAccepted ) { 
 + if ( response . isAccepted ) { 
 + log . debug ( " Successfully delivered apple notification to userId : { } " , userId ) 
 + } else { 
 log . warning ( " APNS rejected notification with reason : { } " , response . getRejectionReason ) 
 Option ( response . getTokenInvalidationTimestamp ) foreach { ts ⇒ 
 log . warning ( " APNS token for user : { } invalidated at { } . Deleting token now " , userId , ts )

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala 
 index c3bddf0 . . a389108 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / VendorPush . scala 
 @ @ - 181 , 6 + 181 , 7 @ @ private [ sequence ] final class VendorPush ( 
 } 
 
 private def init ( ) : Unit = { 
 + log . debug ( " Initializing " ) 
 db . run ( for { 
 googleCreds ← GooglePushCredentialsRepo . findByUser ( userId ) 
 appleCreds ← ApplePushCredentialsRepo . findByUser ( userId )
