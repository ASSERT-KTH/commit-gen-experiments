BLEU SCORE: 0.06837203339116285

TEST MSG: fix ( core ) : Fixing sequence updates , adding access hash logging
GENERATED MSG: feat ( android ) : get auth id

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > index 691b782 . . ce5311c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > @ @ - 70 , 8 + 70 , 9 @ @ public class SequenceActor extends ModuleActor { < nl > @ Override < nl > public void preStart ( ) { < nl > seq = preferences ( ) . getInt ( KEY _ SEQ , - 1 ) ; < nl > - finishedSeq = seq ; < nl > state = preferences ( ) . getBytes ( KEY _ STATE ) ; < nl > + finishedSeq = seq ; < nl > + finishedState = state ; < nl > < nl > handler = context ( ) . getUpdatesModule ( ) . getUpdateHandler ( ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java < nl > index ea9f6cf . . f210c74 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java < nl > @ @ - 50 , 7 + 50 , 9 @ @ public class UsersProcessor extends AbsModule implements Processor { < nl > < nl > if ( saved ! = null ) { < nl > if ( saved . getAccessHash ( ) ! = u . getAccessHash ( ) ) { < nl > - Log . w ( " UsersProcessor " , " User ' s Access Hash changed ! " ) ; < nl > + Log . w ( " UsersProcessor " , " User # " + u . getId ( ) + " Access Hash changed ! " + < nl > + " Was : " + saved . getAccessHash ( ) + " " + < nl > + " Got : " + u . getAccessHash ( ) ) ; < nl > } < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 99c6fb2 . . 830d0b5 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 1919 , 4 + 1919 , 8 @ @ public class Messenger { < nl > ModuleContext getModuleContext ( ) { < nl > return modules ; < nl > } < nl > + < nl > + public long getAuthId ( ) { < nl > + return modules . getApiModule ( ) . getActorApi ( ) . getKeyStorage ( ) . getAuthKey ( ) ; < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java < nl > index acfcafa . . 85b25fd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java < nl > @ @ - 99 , 4 + 99 , 8 @ @ public class ActorApi { < nl > public synchronized void forceNetworkCheck ( ) { < nl > this . apiBroker . send ( new ApiBroker . ForceNetworkCheck ( ) ) ; < nl > } < nl > + < nl > + public AuthKeyStorage getKeyStorage ( ) { < nl > + return keyStorage ; < nl > + } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 index 691b782 . . ce5311c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 @ @ - 70 , 8 + 70 , 9 @ @ public class SequenceActor extends ModuleActor { 
 @ Override 
 public void preStart ( ) { 
 seq = preferences ( ) . getInt ( KEY _ SEQ , - 1 ) ; 
 - finishedSeq = seq ; 
 state = preferences ( ) . getBytes ( KEY _ STATE ) ; 
 + finishedSeq = seq ; 
 + finishedState = state ; 
 
 handler = context ( ) . getUpdatesModule ( ) . getUpdateHandler ( ) ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java 
 index ea9f6cf . . f210c74 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / UsersProcessor . java 
 @ @ - 50 , 7 + 50 , 9 @ @ public class UsersProcessor extends AbsModule implements Processor { 
 
 if ( saved ! = null ) { 
 if ( saved . getAccessHash ( ) ! = u . getAccessHash ( ) ) { 
 - Log . w ( " UsersProcessor " , " User ' s Access Hash changed ! " ) ; 
 + Log . w ( " UsersProcessor " , " User # " + u . getId ( ) + " Access Hash changed ! " + 
 + " Was : " + saved . getAccessHash ( ) + " " + 
 + " Got : " + u . getAccessHash ( ) ) ; 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 99c6fb2 . . 830d0b5 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 1919 , 4 + 1919 , 8 @ @ public class Messenger { 
 ModuleContext getModuleContext ( ) { 
 return modules ; 
 } 
 + 
 + public long getAuthId ( ) { 
 + return modules . getApiModule ( ) . getActorApi ( ) . getKeyStorage ( ) . getAuthKey ( ) ; 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java 
 index acfcafa . . 85b25fd 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java 
 @ @ - 99 , 4 + 99 , 8 @ @ public class ActorApi { 
 public synchronized void forceNetworkCheck ( ) { 
 this . apiBroker . send ( new ApiBroker . ForceNetworkCheck ( ) ) ; 
 } 
 + 
 + public AuthKeyStorage getKeyStorage ( ) { 
 + return keyStorage ; 
 + } 
 }
