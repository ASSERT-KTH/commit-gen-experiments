BLEU SCORE: 0.34823528327578535

TEST MSG: fix ( server : session ) : allow push which is larger than max push buffer size
GENERATED MSG: fix ( server : session ) : cancel resend on stream finish

TEST DIFF (one line): diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > index e9f8313 . . 8c793e5 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > @ @ - 233 , 10 + 233 , 10 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > < nl > item match { < nl > case p : PushItem ⇒ < nl > - this . resendPushBufferSize + = item . size < nl > - < nl > if ( this . resendPushBufferSize > config . maxPushBufferSize ) < nl > clearPushBuffer ( ) < nl > + else < nl > + this . resendPushBufferSize + = item . size < nl > case _ ⇒ < nl > } < nl > } < nl > diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala < nl > index 4c18fb6 . . 2abd8e7 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala < nl > @ @ - 174 , 7 + 174 , 7 @ @ final class SessionSpec extends BaseSessionSpec { < nl > expectMessageAck ( ) < nl > expectRpcResult ( authId , sessionId ) < nl > < nl > - val updatesCount = 31 < nl > + val updatesCount = 32 < nl > < nl > / / each update is 1024 bytes < nl > val payload = Array ( List . range ( 0 , 1005 ) . map ( _ . toByte ) : _ * )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > index 6c2c827 . . 7f0485c 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > @ @ - 410 , 4 + 410 , 9 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > log . warning ( msg ) < nl > onError ( new RuntimeException ( msg ) with NoStackTrace ) < nl > } < nl > + < nl > + override def postStop ( ) : Unit = { < nl > + super . postStop ( ) < nl > + pushBuffer . values foreach ( _ . _ 2 . cancel ( ) ) < nl > + } < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 index e9f8313 . . 8c793e5 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 @ @ - 233 , 10 + 233 , 10 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 
 item match { 
 case p : PushItem ⇒ 
 - this . resendPushBufferSize + = item . size 
 - 
 if ( this . resendPushBufferSize > config . maxPushBufferSize ) 
 clearPushBuffer ( ) 
 + else 
 + this . resendPushBufferSize + = item . size 
 case _ ⇒ 
 } 
 } 
 diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala 
 index 4c18fb6 . . 2abd8e7 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / session / SessionSpec . scala 
 @ @ - 174 , 7 + 174 , 7 @ @ final class SessionSpec extends BaseSessionSpec { 
 expectMessageAck ( ) 
 expectRpcResult ( authId , sessionId ) 
 
 - val updatesCount = 31 
 + val updatesCount = 32 
 
 / / each update is 1024 bytes 
 val payload = Array ( List . range ( 0 , 1005 ) . map ( _ . toByte ) : _ * )

NEAREST DIFF:
diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 index 6c2c827 . . 7f0485c 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 @ @ - 410 , 4 + 410 , 9 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 log . warning ( msg ) 
 onError ( new RuntimeException ( msg ) with NoStackTrace ) 
 } 
 + 
 + override def postStop ( ) : Unit = { 
 + super . postStop ( ) 
 + pushBuffer . values foreach ( _ . _ 2 . cancel ( ) ) 
 + } 
 }
