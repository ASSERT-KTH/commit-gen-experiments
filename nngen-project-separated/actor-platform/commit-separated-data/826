BLEU SCORE: 0.5873949094699213

TEST MSG: fix ( core ) : Fixing new signaling support
GENERATED MSG: fix ( core ) : Fixing authentication freezing

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java < nl > index 0505a19 . . 65981cf 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java < nl > @ @ - 17 , 7 + 17 , 7 @ @ public class JsCall extends JavaScriptObject { < nl > } < nl > String state ; < nl > switch ( model . getState ( ) . get ( ) ) { < nl > - case CALLING : < nl > + case RINGING : < nl > state = " calling " ; < nl > break ; < nl > case CONNECTING : < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 8284edc . . 5ff7abf 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 63 , 6 + 63 , 8 @ @ public class CallActor extends AbsCallActor { < nl > self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > } < nl > } ) . done ( self ( ) ) ; < nl > + } else { < nl > + callBus . startMaster ( ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index 4341294 . . 2f87e31 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 8 , 6 + 8 , 7 @ @ import im . actor . core . api . ApiAdvertiseMaster ; < nl > import im . actor . core . api . ApiAdvertiseSelf ; < nl > import im . actor . core . api . ApiAnswer ; < nl > import im . actor . core . api . ApiCandidate ; < nl > + import im . actor . core . api . ApiEnableConnection ; < nl > import im . actor . core . api . ApiNeedDisconnect ; < nl > import im . actor . core . api . ApiNeedOffer ; < nl > import im . actor . core . api . ApiOffer ; < nl > @ @ - 159 , 6 + 160 , 10 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > } else if ( signal instanceof ApiNeedDisconnect ) { < nl > ApiNeedDisconnect disconnect = ( ApiNeedDisconnect ) signal ; < nl > peerCall . disposePeer ( disconnect . getDevice ( ) ) ; < nl > + } else if ( signal instanceof ApiEnableConnection ) { < nl > + ApiEnableConnection connection = ( ApiEnableConnection ) signal ; < nl > + peerCall . onOwnStarted ( ) ; < nl > + peerCall . onTheirStarted ( connection . getDevice ( ) ) ; < nl > } else if ( signal instanceof ApiAdvertiseMaster ) { < nl > if ( isMasterReady ) { < nl > return ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 5776d0f . . 84eb242 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 523 , 6 + 523 , 7 @ @ public class Authentication { < nl > modules . getPreferences ( ) . putBool ( KEY _ AUTH , true ) ; < nl > modules . getPreferences ( ) . putInt ( KEY _ AUTH _ UID , myUid ) ; < nl > modules . onLoggedIn ( ) ; < nl > + modules . getUsersModule ( ) . getUsersStorage ( ) . addOrUpdateItem ( new User ( response . getUser ( ) ) ) ; < nl > modules . getUpdatesModule ( ) . onUpdateReceived ( new LoggedIn ( response , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > @ @ - 540 , 7 + 541 , 7 @ @ public class Authentication { < nl > } < nl > } < nl > } < nl > - } ) , 500L ) ; < nl > + } ) ) ; < nl > } < nl > < nl > private < T extends Response > void request ( Request < T > request , RpcCallback < T > callback ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java < nl > index 3c7f119 . . afb97a8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java < nl > @ @ - 20 , 6 + 20 , 7 @ @ import im . actor . core . api . rpc . ResponseGetReferencedEntitites ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . updates . UpdateProcessor ; < nl > import im . actor . core . modules . updates . internal . InternalUpdate ; < nl > + import im . actor . core . modules . updates . internal . LoggedIn ; < nl > import im . actor . core . modules . updates . internal . RelatedResponse ; < nl > import im . actor . core . util . ModuleActor ; < nl > import im . actor . core . network . parser . Update ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java < nl > index 9a8f9db . . ae25d11 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java < nl > @ @ - 78 , 9 + 78 , 9 @ @ public class Updates extends AbsModule implements BusSubscriber { < nl > } < nl > } < nl > < nl > - public void onUpdateReceived ( Object update , Long delay ) { < nl > - updateActor . send ( update , delay ) ; < nl > - } < nl > + / / public void onUpdateReceived ( Object update , Long delay ) { < nl > + / / updateActor . send ( update , delay ) ; < nl > + / / } < nl > < nl > public void executeAfter ( int seq , Runnable runnable ) { < nl > updateActor . send ( new ExecuteAfter ( seq , runnable ) ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java 
 index 0505a19 . . 65981cf 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java 
 @ @ - 17 , 7 + 17 , 7 @ @ public class JsCall extends JavaScriptObject { 
 } 
 String state ; 
 switch ( model . getState ( ) . get ( ) ) { 
 - case CALLING : 
 + case RINGING : 
 state = " calling " ; 
 break ; 
 case CONNECTING : 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 8284edc . . 5ff7abf 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 63 , 6 + 63 , 8 @ @ public class CallActor extends AbsCallActor { 
 self ( ) . send ( PoisonPill . INSTANCE ) ; 
 } 
 } ) . done ( self ( ) ) ; 
 + } else { 
 + callBus . startMaster ( ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index 4341294 . . 2f87e31 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import im . actor . core . api . ApiAdvertiseMaster ; 
 import im . actor . core . api . ApiAdvertiseSelf ; 
 import im . actor . core . api . ApiAnswer ; 
 import im . actor . core . api . ApiCandidate ; 
 + import im . actor . core . api . ApiEnableConnection ; 
 import im . actor . core . api . ApiNeedDisconnect ; 
 import im . actor . core . api . ApiNeedOffer ; 
 import im . actor . core . api . ApiOffer ; 
 @ @ - 159 , 6 + 160 , 10 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 } else if ( signal instanceof ApiNeedDisconnect ) { 
 ApiNeedDisconnect disconnect = ( ApiNeedDisconnect ) signal ; 
 peerCall . disposePeer ( disconnect . getDevice ( ) ) ; 
 + } else if ( signal instanceof ApiEnableConnection ) { 
 + ApiEnableConnection connection = ( ApiEnableConnection ) signal ; 
 + peerCall . onOwnStarted ( ) ; 
 + peerCall . onTheirStarted ( connection . getDevice ( ) ) ; 
 } else if ( signal instanceof ApiAdvertiseMaster ) { 
 if ( isMasterReady ) { 
 return ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 5776d0f . . 84eb242 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 523 , 6 + 523 , 7 @ @ public class Authentication { 
 modules . getPreferences ( ) . putBool ( KEY _ AUTH , true ) ; 
 modules . getPreferences ( ) . putInt ( KEY _ AUTH _ UID , myUid ) ; 
 modules . onLoggedIn ( ) ; 
 + modules . getUsersModule ( ) . getUsersStorage ( ) . addOrUpdateItem ( new User ( response . getUser ( ) ) ) ; 
 modules . getUpdatesModule ( ) . onUpdateReceived ( new LoggedIn ( response , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 @ @ - 540 , 7 + 541 , 7 @ @ public class Authentication { 
 } 
 } 
 } 
 - } ) , 500L ) ; 
 + } ) ) ; 
 } 
 
 private < T extends Response > void request ( Request < T > request , RpcCallback < T > callback ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java 
 index 3c7f119 . . afb97a8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java 
 @ @ - 20 , 6 + 20 , 7 @ @ import im . actor . core . api . rpc . ResponseGetReferencedEntitites ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . updates . UpdateProcessor ; 
 import im . actor . core . modules . updates . internal . InternalUpdate ; 
 + import im . actor . core . modules . updates . internal . LoggedIn ; 
 import im . actor . core . modules . updates . internal . RelatedResponse ; 
 import im . actor . core . util . ModuleActor ; 
 import im . actor . core . network . parser . Update ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java 
 index 9a8f9db . . ae25d11 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / Updates . java 
 @ @ - 78 , 9 + 78 , 9 @ @ public class Updates extends AbsModule implements BusSubscriber { 
 } 
 } 
 
 - public void onUpdateReceived ( Object update , Long delay ) { 
 - updateActor . send ( update , delay ) ; 
 - } 
 + / / public void onUpdateReceived ( Object update , Long delay ) { 
 + / / updateActor . send ( update , delay ) ; 
 + / / } 
 
 public void executeAfter ( int seq , Runnable runnable ) { 
 updateActor . send ( new ExecuteAfter ( seq , runnable ) ) ;
