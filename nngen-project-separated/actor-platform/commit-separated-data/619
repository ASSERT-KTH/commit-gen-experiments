BLEU SCORE: 0.10552670315936319

TEST MSG: fix ( server : bots ) : compilation error
GENERATED MSG: feat ( botkit ) : added preferredLanguages and timeZone

TEST DIFF (one line): diff - - git a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala < nl > index 06a9a45 . . 34b157a 100644 < nl > - - - a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala < nl > + + + b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala < nl > @ @ - 164 , 7 + 164 , 8 @ @ trait ApiToBotConversions { < nl > isBot = apiUser . isBot , < nl > contactRecords = apiUser . contactInfo , < nl > timeZone = apiUser . timeZone , < nl > - preferredLanguages = apiUser . preferredLanguages < nl > + preferredLanguages = apiUser . preferredLanguages , < nl > + botCommands = apiUser . botCommands < nl > ) < nl > < nl > implicit def toUsers ( apiUsers : Seq [ ApiUser ] ) : Seq [ User ] = apiUsers map toUser < nl > diff - - git a / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala b / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala < nl > index 5120500 . . 4deeb58 100644 < nl > - - - a / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala < nl > + + + b / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala < nl > @ @ - 3 , 8 + 3 , 8 @ @ package im . actor . concurrent < nl > import akka . actor . DiagnosticActorLogging < nl > < nl > trait ImActorLogging extends DiagnosticActorLogging { < nl > - def markFailure [ T ] ( f : = > T ) : T = { < nl > - log . mdc ( log . mdc + ( " failure " - > true ) ) < nl > + def markFailure [ T ] ( f : ⇒ T ) : T = { < nl > + log . mdc ( log . mdc + ( " failure " → true ) ) < nl > f < nl > } < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index 81674ab . . 6fdc598 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 65 , 7 + 65 , 9 @ @ object BotMessages { < nl > avatar : Option [ Avatar ] , < nl > username : Option [ String ] , < nl > isBot : Option [ Boolean ] , < nl > - contactRecords : Seq [ ContactRecord ] < nl > + contactRecords : Seq [ ContactRecord ] , < nl > + timeZone : Option [ String ] , < nl > + preferredLanguages : Seq [ String ] < nl > ) { < nl > def isMale = sex . contains ( 1 ) < nl > < nl > @ @ - 92 , 6 + 94 , 10 @ @ object BotMessages { < nl > def getPhoneContactRecords = seqAsJavaList ( contactRecords collect { < nl > case p : PhoneContactRecord ⇒ p < nl > } ) < nl > + < nl > + def getTimeZone = timeZone . asJava < nl > + < nl > + def getPreferredLanguages = seqAsJavaList ( preferredLanguages ) < nl > } < nl > < nl > final case class GroupMember ( < nl > diff - - git a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala < nl > index 0598e25 . . bf96941 100644 < nl > - - - a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala < nl > + + + b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala < nl > @ @ - 105 , 7 + 105 , 9 @ @ trait ApiToBotConversions { < nl > avatar = apiUser . avatar , < nl > username = apiUser . nick , < nl > isBot = apiUser . isBot , < nl > - contactRecords = apiUser . contactInfo < nl > + contactRecords = apiUser . contactInfo , < nl > + timeZone = apiUser . timeZone , < nl > + preferredLanguages = apiUser . preferredLanguages < nl > ) < nl > < nl > implicit def toUsers ( apiUsers : Seq [ ApiUser ] ) : Seq [ User ] = apiUsers map toUser

TEST DIFF:
diff - - git a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala 
 index 06a9a45 . . 34b157a 100644 
 - - - a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala 
 + + + b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala 
 @ @ - 164 , 7 + 164 , 8 @ @ trait ApiToBotConversions { 
 isBot = apiUser . isBot , 
 contactRecords = apiUser . contactInfo , 
 timeZone = apiUser . timeZone , 
 - preferredLanguages = apiUser . preferredLanguages 
 + preferredLanguages = apiUser . preferredLanguages , 
 + botCommands = apiUser . botCommands 
 ) 
 
 implicit def toUsers ( apiUsers : Seq [ ApiUser ] ) : Seq [ User ] = apiUsers map toUser 
 diff - - git a / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala b / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala 
 index 5120500 . . 4deeb58 100644 
 - - - a / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala 
 + + + b / actor - server / actor - runtime / src / main / scala / im / actor / concurrent / ImActorLogging . scala 
 @ @ - 3 , 8 + 3 , 8 @ @ package im . actor . concurrent 
 import akka . actor . DiagnosticActorLogging 
 
 trait ImActorLogging extends DiagnosticActorLogging { 
 - def markFailure [ T ] ( f : = > T ) : T = { 
 - log . mdc ( log . mdc + ( " failure " - > true ) ) 
 + def markFailure [ T ] ( f : ⇒ T ) : T = { 
 + log . mdc ( log . mdc + ( " failure " → true ) ) 
 f 
 } 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index 81674ab . . 6fdc598 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 65 , 7 + 65 , 9 @ @ object BotMessages { 
 avatar : Option [ Avatar ] , 
 username : Option [ String ] , 
 isBot : Option [ Boolean ] , 
 - contactRecords : Seq [ ContactRecord ] 
 + contactRecords : Seq [ ContactRecord ] , 
 + timeZone : Option [ String ] , 
 + preferredLanguages : Seq [ String ] 
 ) { 
 def isMale = sex . contains ( 1 ) 
 
 @ @ - 92 , 6 + 94 , 10 @ @ object BotMessages { 
 def getPhoneContactRecords = seqAsJavaList ( contactRecords collect { 
 case p : PhoneContactRecord ⇒ p 
 } ) 
 + 
 + def getTimeZone = timeZone . asJava 
 + 
 + def getPreferredLanguages = seqAsJavaList ( preferredLanguages ) 
 } 
 
 final case class GroupMember ( 
 diff - - git a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala 
 index 0598e25 . . bf96941 100644 
 - - - a / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala 
 + + + b / actor - server / actor - bots / src / main / scala / im / actor / server / bot / ApiToBotConversions . scala 
 @ @ - 105 , 7 + 105 , 9 @ @ trait ApiToBotConversions { 
 avatar = apiUser . avatar , 
 username = apiUser . nick , 
 isBot = apiUser . isBot , 
 - contactRecords = apiUser . contactInfo 
 + contactRecords = apiUser . contactInfo , 
 + timeZone = apiUser . timeZone , 
 + preferredLanguages = apiUser . preferredLanguages 
 ) 
 
 implicit def toUsers ( apiUsers : Seq [ ApiUser ] ) : Seq [ User ] = apiUsers map toUser
