BLEU SCORE: 0.46548383647045716

TEST MSG: fix ( server : user ) : missing unstash
GENERATED MSG: fix ( server : user ) : non - threadsafe access to MessageDigest

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala < nl > index 92b8023 . . 5500b24 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala < nl > @ @ - 44 , 9 + 44 , 11 @ @ private [ user ] trait UserQueriesHandlers { < nl > context become { < nl > case rsp : GetApiStructResponse = > < nl > replyTo ! rsp < nl > + unstashAll ( ) < nl > context become working ( state ) < nl > case fail : Status . Failure = > < nl > replyTo ! fail < nl > + unstashAll ( ) < nl > context become working ( state ) < nl > case _ = > stash < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala < nl > index 564650b . . 92b8023 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > package im . actor . server . user < nl > < nl > - import akka . actor . ActorSystem < nl > + import akka . actor . { ActorSystem , Status } < nl > import akka . pattern . pipe < nl > import im . actor . api . rpc . users . ApiUser < nl > import im . actor . server . ApiConversions . _ < nl > @ @ - 37 , 7 + 37 , 19 @ @ private [ user ] trait UserQueriesHandlers { < nl > external = state . external , < nl > preferredLanguages = state . preferredLanguages . toVector , < nl > timeZone = state . timeZone < nl > - ) ) ) pipeTo sender ( ) < nl > + ) ) ) pipeTo context . self < nl > + < nl > + val replyTo = sender ( ) < nl > + < nl > + context become { < nl > + case rsp : GetApiStructResponse = > < nl > + replyTo ! rsp < nl > + context become working ( state ) < nl > + case fail : Status . Failure = > < nl > + replyTo ! fail < nl > + context become working ( state ) < nl > + case _ = > stash < nl > + } < nl > } < nl > < nl > protected def getContactRecords ( state : UserState ) : Unit =

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala 
 index 92b8023 . . 5500b24 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala 
 @ @ - 44 , 9 + 44 , 11 @ @ private [ user ] trait UserQueriesHandlers { 
 context become { 
 case rsp : GetApiStructResponse = > 
 replyTo ! rsp 
 + unstashAll ( ) 
 context become working ( state ) 
 case fail : Status . Failure = > 
 replyTo ! fail 
 + unstashAll ( ) 
 context become working ( state ) 
 case _ = > stash 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala 
 index 564650b . . 92b8023 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserQueriesHandlers . scala 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package im . actor . server . user 
 
 - import akka . actor . ActorSystem 
 + import akka . actor . { ActorSystem , Status } 
 import akka . pattern . pipe 
 import im . actor . api . rpc . users . ApiUser 
 import im . actor . server . ApiConversions . _ 
 @ @ - 37 , 7 + 37 , 19 @ @ private [ user ] trait UserQueriesHandlers { 
 external = state . external , 
 preferredLanguages = state . preferredLanguages . toVector , 
 timeZone = state . timeZone 
 - ) ) ) pipeTo sender ( ) 
 + ) ) ) pipeTo context . self 
 + 
 + val replyTo = sender ( ) 
 + 
 + context become { 
 + case rsp : GetApiStructResponse = > 
 + replyTo ! rsp 
 + context become working ( state ) 
 + case fail : Status . Failure = > 
 + replyTo ! fail 
 + context become working ( state ) 
 + case _ = > stash 
 + } 
 } 
 
 protected def getContactRecords ( state : UserState ) : Unit =
