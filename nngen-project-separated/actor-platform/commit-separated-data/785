BLEU SCORE: 0.345720784641941

TEST MSG: style ( android ) : call avatar animation
GENERATED MSG: wip ( android ) : Commenting code

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index 4cb5158 . . 35e1965 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 132 , 6 + 132 , 8 @ @ public class CallFragment extends BaseFragment { < nl > cont . findViewById ( R . id . layer4 ) < nl > } ; < nl > < nl > + wave ( avatarLayers , 1 . 1f , 1200 , 200 ) ; < nl > + < nl > for ( int i = 0 ; i < avatarLayers . length ; i + + ) { < nl > View layer = avatarLayers [ i ] ; < nl > ( ( GradientDrawable ) layer . getBackground ( ) ) . setColor ( Color . WHITE ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 8ce5079 . . 9003bf8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 1091 , 25 + 1091 , 25 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > < nl > if ( ActorSDK . sharedActor ( ) . isCallsEnabled ( ) ) { < nl > - if ( item . getItemId ( ) = = R . id . call ) { < nl > - if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . RECORD _ AUDIO ) ! = PackageManager . PERMISSION _ GRANTED | | < nl > - ContextCompat . checkSelfPermission ( this , Manifest . permission . VIBRATE ) ! = PackageManager . PERMISSION _ GRANTED | | < nl > - ContextCompat . checkSelfPermission ( this , Manifest . permission . WAKE _ LOCK ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > - Log . d ( " Permissions " , " call - no permission : c " ) ; < nl > - ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . RECORD _ AUDIO , Manifest . permission . VIBRATE , Manifest . permission . WAKE _ LOCK } , < nl > - PERMISSIONS _ REQUEST _ FOR _ CALL ) ; < nl > - < nl > - } else { < nl > - startCall ( ) ; < nl > - } < nl > - } < nl > + / / if ( item . getItemId ( ) = = R . id . call ) { < nl > + / / if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . RECORD _ AUDIO ) ! = PackageManager . PERMISSION _ GRANTED | | < nl > + / / ContextCompat . checkSelfPermission ( this , Manifest . permission . VIBRATE ) ! = PackageManager . PERMISSION _ GRANTED | | < nl > + / / ContextCompat . checkSelfPermission ( this , Manifest . permission . WAKE _ LOCK ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > + / / Log . d ( " Permissions " , " call - no permission : c " ) ; < nl > + / / ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . RECORD _ AUDIO , Manifest . permission . VIBRATE , Manifest . permission . WAKE _ LOCK } , < nl > + / / PERMISSIONS _ REQUEST _ FOR _ CALL ) ; < nl > + / / < nl > + / / } else { < nl > + / / startCall ( ) ; < nl > + / / } < nl > + / / } < nl > < nl > - / / Context context = ActorSDK . sharedActor ( ) . getMessenger ( ) . getContext ( ) ; < nl > - / / Intent callIntent = new Intent ( context , CallActivity . class ) ; < nl > - / / callIntent . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK | Intent . FLAG _ ACTIVITY _ MULTIPLE _ TASK | Intent . FLAG _ ACTIVITY _ NEW _ DOCUMENT ) ; < nl > - / / callIntent . putExtra ( " callId " , 0 ) ; < nl > - / / context . startActivity ( callIntent ) ; < nl > - / / context . startActivity ( callIntent ) ; < nl > + Context context = ActorSDK . sharedActor ( ) . getMessenger ( ) . getContext ( ) ; < nl > + Intent callIntent = new Intent ( context , CallActivity . class ) ; < nl > + callIntent . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK | Intent . FLAG _ ACTIVITY _ MULTIPLE _ TASK | Intent . FLAG _ ACTIVITY _ NEW _ DOCUMENT ) ; < nl > + callIntent . putExtra ( " callId " , 0 ) ; < nl > + context . startActivity ( callIntent ) ; < nl > + context . startActivity ( callIntent ) ; < nl > } < nl > < nl > return super . onOptionsItemSelected ( item ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java < nl > index f7fe46f . . ed702ab 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java < nl > @ @ - 54 , 6 + 54 , 10 @ @ public class BaseFragment extends BinderCompatFragment { < nl > ViewUtils . showView ( view , isAnimated , isSlow ) ; < nl > } < nl > < nl > + public void wave ( View [ ] layers , float scale , int duration , int stepOffset ) { < nl > + ViewUtils . wave ( layers , scale , duration , stepOffset ) ; < nl > + } < nl > + < nl > public void elevateView ( View view ) { < nl > ViewUtils . elevateView ( view ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / OffsetCycleInterpolator . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / OffsetCycleInterpolator . java < nl > new file mode 100644 < nl > index 0000000 . . e8b60fb < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / OffsetCycleInterpolator . java < nl > @ @ - 0 , 0 + 1 , 25 @ @ < nl > + package im . actor . sdk . util ; < nl > + < nl > + import android . content . Context ; < nl > + import android . util . AttributeSet ; < nl > + import android . view . animation . CycleInterpolator ; < nl > + < nl > + / * * < nl > + * Created by root on 3 / 1 / 16 . < nl > + * / < nl > + public class OffsetCycleInterpolator extends CycleInterpolator { < nl > + private float offset ; < nl > + public OffsetCycleInterpolator ( float offset ) { < nl > + super ( 1f ) ; < nl > + this . offset = offset ; < nl > + } < nl > + < nl > + public OffsetCycleInterpolator ( Context context , AttributeSet attrs ) { < nl > + super ( context , attrs ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public float getInterpolation ( float input ) { < nl > + return ( float ) ( Math . sin ( 2 * Math . PI * input + offset ) ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java < nl > index f681998 . . 4cfab50 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java < nl > @ @ - 1 , 8 + 1 , 10 @ @ < nl > package im . actor . sdk . util ; < nl > < nl > + import android . os . Handler ; < nl > import android . view . View ; < nl > import android . view . animation . AlphaAnimation ; < nl > import android . view . animation . Animation ; < nl > + import android . view . animation . CycleInterpolator ; < nl > import android . view . animation . ScaleAnimation ; < nl > import android . view . animation . Transformation ; < nl > import android . widget . AbsListView ; < nl > @ @ - 186 , 7 + 188 , 6 @ @ public class ViewUtils { < nl > elevateView ( view , true ) ; < nl > } < nl > < nl > - < nl > public static void elevateView ( final View view , float scale ) { < nl > elevateView ( view , true , scale ) ; < nl > } < nl > @ @ - 247 , 6 + 248 , 26 @ @ public class ViewUtils { < nl > } < nl > } < nl > < nl > + public static void wave ( View [ ] layers , float scale , int duration , int stepOffset ) { < nl > + int step = 0 ; < nl > + < nl > + for ( View l : layers ) { < nl > + wave ( l , scale , duration , ( ( float ) 1 / layers . length ) * step ) ; < nl > + step + + ; < nl > + } < nl > + } < nl > + < nl > + public static void wave ( final View layer , float scale , int duration , float stepOffset ) { < nl > + final ScaleAnimation scaleAnimation = new ScaleAnimation ( 1 . 0f , scale , 1 . 0f , scale , Animation . RELATIVE _ TO _ SELF , ( float ) 0 . 5 , Animation . RELATIVE _ TO _ SELF , ( float ) 0 . 5 ) ; < nl > + scaleAnimation . setDuration ( duration ) ; < nl > + < nl > + scaleAnimation . setInterpolator ( new OffsetCycleInterpolator ( stepOffset ) ) ; < nl > + scaleAnimation . setRepeatCount ( Animation . INFINITE ) ; < nl > + layer . clearAnimation ( ) ; < nl > + layer . startAnimation ( scaleAnimation ) ; < nl > + } < nl > + < nl > + < nl > < nl > < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 8674ea8 . . dcd2ef1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > import java . util . Locale ; < nl > @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { < nl > / * * < nl > * Delegate < nl > * / < nl > + @ NotNull < nl > private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; < nl > / * * < nl > * ActivityManager < nl > @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { < nl > if ( pushId ! = 0 ) { < nl > pushManager . registerPush ( application ) ; < nl > } < nl > - } catch ( ClassNotFoundException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( InstantiationException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > + } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > - < nl > - < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { < nl > this . pushId = pushId ; < nl > } < nl > < nl > + / * * < nl > + * Getting Application Delegate . < nl > + * < nl > + * @ return Application Delegate < nl > + * / < nl > + @ NotNull < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > < nl > - public void setDelegate ( ActorSDKDelegate delegate ) { < nl > + / * * < nl > + * Setting Application Delegate . Useful for hacking various parts of SDK < nl > + * < nl > + * @ param delegate Application Delegate < nl > + * / < nl > + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { < nl > this . delegate = delegate ; < nl > } < nl > < nl > + @ Deprecated < nl > public ActivityManager getActivityManager ( ) { < nl > return activityManager ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 0ddb728 . . f404f54 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; < nl > < nl > import android . app . Application ; < nl > < nl > + / * * < nl > + * Implementation of Application object that handles everything required for creating and < nl > + * managing Actor SDK < nl > + * / < nl > public class ActorSDKApplication extends Application { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index 9c2321e . . 2488fa2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; < nl > < nl > import android . graphics . Color ; < nl > < nl > + / * * < nl > + * Actor Styling class < nl > + * / < nl > public class ActorStyle { < nl > private int toolBarColor = 0 ; < nl > private int fabColor = 0 ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index de2e346 . . 68ec210 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > < nl > + / * * < nl > + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead < nl > + * of implementing ActorSDKDelegate < nl > + * / < nl > public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > - < nl > + < nl > + / / < nl > + / / Authentication Activity < nl > + / / < nl > + < nl > + @ Deprecated < nl > @ Override < nl > - public ActorIntent getAuthStartIntent ( ) { < nl > - return null ; < nl > + public AuthState getAuthStartState ( ) { < nl > + return AuthState . AUTH _ START ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartAfterLoginIntent ( ) { < nl > - return null ; < nl > + public BaseAuthFragment getSignFragment ( ) { < nl > + return new SignPhoneFragment ( ) ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartIntent ( ) { < nl > + public ActorIntent getAuthStartIntent ( ) { < nl > return null ; < nl > } < nl > < nl > + / / < nl > + / / Starting Activity < nl > + / / < nl > + < nl > + / * * < nl > + * Return non - null to open specific Activity after user ' s successful log in . < nl > + * If null is specified , result of getStartIntent is used . < nl > + * < nl > + * @ return ActorIntent for activity after login < nl > + * / < nl > @ Override < nl > - public AuthState getAuthStartState ( ) { < nl > - return AuthState . AUTH _ START ; < nl > + public ActorIntent getStartAfterLoginIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / * * < nl > + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch < nl > + * standard Messaging activity with contacts and recent list < nl > + * < nl > + * @ return ActorIntent for start activity < nl > + * / < nl > @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignPhoneFragment ( ) ; < nl > + public ActorIntent getStartIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / / < nl > + / / Hacking settings activity < nl > + / / < nl > + < nl > @ Override < nl > public View getBeforeNickSettingsView ( Context context ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > index dd19ba4 . . 64c5706 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . fragment . auth . AuthActivity ; < nl > < nl > - / * * < nl > - * Created by root on 10 / 20 / 15 . < nl > - * / < nl > + @ Deprecated < nl > public class ActivityManager { < nl > < nl > - < nl > public void startAuthActivity ( Context context ) { < nl > startAuthActivity ( context , null ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index 4cb5158 . . 35e1965 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 132 , 6 + 132 , 8 @ @ public class CallFragment extends BaseFragment { 
 cont . findViewById ( R . id . layer4 ) 
 } ; 
 
 + wave ( avatarLayers , 1 . 1f , 1200 , 200 ) ; 
 + 
 for ( int i = 0 ; i < avatarLayers . length ; i + + ) { 
 View layer = avatarLayers [ i ] ; 
 ( ( GradientDrawable ) layer . getBackground ( ) ) . setColor ( Color . WHITE ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 8ce5079 . . 9003bf8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 1091 , 25 + 1091 , 25 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 
 if ( ActorSDK . sharedActor ( ) . isCallsEnabled ( ) ) { 
 - if ( item . getItemId ( ) = = R . id . call ) { 
 - if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . RECORD _ AUDIO ) ! = PackageManager . PERMISSION _ GRANTED | | 
 - ContextCompat . checkSelfPermission ( this , Manifest . permission . VIBRATE ) ! = PackageManager . PERMISSION _ GRANTED | | 
 - ContextCompat . checkSelfPermission ( this , Manifest . permission . WAKE _ LOCK ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 - Log . d ( " Permissions " , " call - no permission : c " ) ; 
 - ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . RECORD _ AUDIO , Manifest . permission . VIBRATE , Manifest . permission . WAKE _ LOCK } , 
 - PERMISSIONS _ REQUEST _ FOR _ CALL ) ; 
 - 
 - } else { 
 - startCall ( ) ; 
 - } 
 - } 
 + / / if ( item . getItemId ( ) = = R . id . call ) { 
 + / / if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . RECORD _ AUDIO ) ! = PackageManager . PERMISSION _ GRANTED | | 
 + / / ContextCompat . checkSelfPermission ( this , Manifest . permission . VIBRATE ) ! = PackageManager . PERMISSION _ GRANTED | | 
 + / / ContextCompat . checkSelfPermission ( this , Manifest . permission . WAKE _ LOCK ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 + / / Log . d ( " Permissions " , " call - no permission : c " ) ; 
 + / / ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . RECORD _ AUDIO , Manifest . permission . VIBRATE , Manifest . permission . WAKE _ LOCK } , 
 + / / PERMISSIONS _ REQUEST _ FOR _ CALL ) ; 
 + / / 
 + / / } else { 
 + / / startCall ( ) ; 
 + / / } 
 + / / } 
 
 - / / Context context = ActorSDK . sharedActor ( ) . getMessenger ( ) . getContext ( ) ; 
 - / / Intent callIntent = new Intent ( context , CallActivity . class ) ; 
 - / / callIntent . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK | Intent . FLAG _ ACTIVITY _ MULTIPLE _ TASK | Intent . FLAG _ ACTIVITY _ NEW _ DOCUMENT ) ; 
 - / / callIntent . putExtra ( " callId " , 0 ) ; 
 - / / context . startActivity ( callIntent ) ; 
 - / / context . startActivity ( callIntent ) ; 
 + Context context = ActorSDK . sharedActor ( ) . getMessenger ( ) . getContext ( ) ; 
 + Intent callIntent = new Intent ( context , CallActivity . class ) ; 
 + callIntent . setFlags ( Intent . FLAG _ ACTIVITY _ NEW _ TASK | Intent . FLAG _ ACTIVITY _ MULTIPLE _ TASK | Intent . FLAG _ ACTIVITY _ NEW _ DOCUMENT ) ; 
 + callIntent . putExtra ( " callId " , 0 ) ; 
 + context . startActivity ( callIntent ) ; 
 + context . startActivity ( callIntent ) ; 
 } 
 
 return super . onOptionsItemSelected ( item ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java 
 index f7fe46f . . ed702ab 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / BaseFragment . java 
 @ @ - 54 , 6 + 54 , 10 @ @ public class BaseFragment extends BinderCompatFragment { 
 ViewUtils . showView ( view , isAnimated , isSlow ) ; 
 } 
 
 + public void wave ( View [ ] layers , float scale , int duration , int stepOffset ) { 
 + ViewUtils . wave ( layers , scale , duration , stepOffset ) ; 
 + } 
 + 
 public void elevateView ( View view ) { 
 ViewUtils . elevateView ( view ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / OffsetCycleInterpolator . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / OffsetCycleInterpolator . java 
 new file mode 100644 
 index 0000000 . . e8b60fb 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / OffsetCycleInterpolator . java 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + package im . actor . sdk . util ; 
 + 
 + import android . content . Context ; 
 + import android . util . AttributeSet ; 
 + import android . view . animation . CycleInterpolator ; 
 + 
 + / * * 
 + * Created by root on 3 / 1 / 16 . 
 + * / 
 + public class OffsetCycleInterpolator extends CycleInterpolator { 
 + private float offset ; 
 + public OffsetCycleInterpolator ( float offset ) { 
 + super ( 1f ) ; 
 + this . offset = offset ; 
 + } 
 + 
 + public OffsetCycleInterpolator ( Context context , AttributeSet attrs ) { 
 + super ( context , attrs ) ; 
 + } 
 + 
 + @ Override 
 + public float getInterpolation ( float input ) { 
 + return ( float ) ( Math . sin ( 2 * Math . PI * input + offset ) ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java 
 index f681998 . . 4cfab50 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java 
 @ @ - 1 , 8 + 1 , 10 @ @ 
 package im . actor . sdk . util ; 
 
 + import android . os . Handler ; 
 import android . view . View ; 
 import android . view . animation . AlphaAnimation ; 
 import android . view . animation . Animation ; 
 + import android . view . animation . CycleInterpolator ; 
 import android . view . animation . ScaleAnimation ; 
 import android . view . animation . Transformation ; 
 import android . widget . AbsListView ; 
 @ @ - 186 , 7 + 188 , 6 @ @ public class ViewUtils { 
 elevateView ( view , true ) ; 
 } 
 
 - 
 public static void elevateView ( final View view , float scale ) { 
 elevateView ( view , true , scale ) ; 
 } 
 @ @ - 247 , 6 + 248 , 26 @ @ public class ViewUtils { 
 } 
 } 
 
 + public static void wave ( View [ ] layers , float scale , int duration , int stepOffset ) { 
 + int step = 0 ; 
 + 
 + for ( View l : layers ) { 
 + wave ( l , scale , duration , ( ( float ) 1 / layers . length ) * step ) ; 
 + step + + ; 
 + } 
 + } 
 + 
 + public static void wave ( final View layer , float scale , int duration , float stepOffset ) { 
 + final ScaleAnimation scaleAnimation = new ScaleAnimation ( 1 . 0f , scale , 1 . 0f , scale , Animation . RELATIVE _ TO _ SELF , ( float ) 0 . 5 , Animation . RELATIVE _ TO _ SELF , ( float ) 0 . 5 ) ; 
 + scaleAnimation . setDuration ( duration ) ; 
 + 
 + scaleAnimation . setInterpolator ( new OffsetCycleInterpolator ( stepOffset ) ) ; 
 + scaleAnimation . setRepeatCount ( Animation . INFINITE ) ; 
 + layer . clearAnimation ( ) ; 
 + layer . startAnimation ( scaleAnimation ) ; 
 + } 
 + 
 + 
 
 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 8674ea8 . . dcd2ef1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 
 + import org . jetbrains . annotations . NotNull ; 
 + import org . jetbrains . annotations . Nullable ; 
 + 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { 
 / * * 
 * Delegate 
 * / 
 + @ NotNull 
 private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; 
 / * * 
 * ActivityManager 
 @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { 
 if ( pushId ! = 0 ) { 
 pushManager . registerPush ( application ) ; 
 } 
 - } catch ( ClassNotFoundException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( InstantiationException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( IllegalAccessException e ) { 
 + } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 - 
 - 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { 
 this . pushId = pushId ; 
 } 
 
 + / * * 
 + * Getting Application Delegate . 
 + * 
 + * @ return Application Delegate 
 + * / 
 + @ NotNull 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 
 - public void setDelegate ( ActorSDKDelegate delegate ) { 
 + / * * 
 + * Setting Application Delegate . Useful for hacking various parts of SDK 
 + * 
 + * @ param delegate Application Delegate 
 + * / 
 + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { 
 this . delegate = delegate ; 
 } 
 
 + @ Deprecated 
 public ActivityManager getActivityManager ( ) { 
 return activityManager ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 0ddb728 . . f404f54 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; 
 
 import android . app . Application ; 
 
 + / * * 
 + * Implementation of Application object that handles everything required for creating and 
 + * managing Actor SDK 
 + * / 
 public class ActorSDKApplication extends Application { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index 9c2321e . . 2488fa2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; 
 
 import android . graphics . Color ; 
 
 + / * * 
 + * Actor Styling class 
 + * / 
 public class ActorStyle { 
 private int toolBarColor = 0 ; 
 private int fabColor = 0 ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index de2e346 . . 68ec210 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; 
 import im . actor . sdk . intents . ActorIntent ; 
 
 + / * * 
 + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead 
 + * of implementing ActorSDKDelegate 
 + * / 
 public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 - 
 + 
 + / / 
 + / / Authentication Activity 
 + / / 
 + 
 + @ Deprecated 
 @ Override 
 - public ActorIntent getAuthStartIntent ( ) { 
 - return null ; 
 + public AuthState getAuthStartState ( ) { 
 + return AuthState . AUTH _ START ; 
 } 
 
 @ Override 
 - public ActorIntent getStartAfterLoginIntent ( ) { 
 - return null ; 
 + public BaseAuthFragment getSignFragment ( ) { 
 + return new SignPhoneFragment ( ) ; 
 } 
 
 @ Override 
 - public ActorIntent getStartIntent ( ) { 
 + public ActorIntent getAuthStartIntent ( ) { 
 return null ; 
 } 
 
 + / / 
 + / / Starting Activity 
 + / / 
 + 
 + / * * 
 + * Return non - null to open specific Activity after user ' s successful log in . 
 + * If null is specified , result of getStartIntent is used . 
 + * 
 + * @ return ActorIntent for activity after login 
 + * / 
 @ Override 
 - public AuthState getAuthStartState ( ) { 
 - return AuthState . AUTH _ START ; 
 + public ActorIntent getStartAfterLoginIntent ( ) { 
 + return null ; 
 } 
 
 + / * * 
 + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch 
 + * standard Messaging activity with contacts and recent list 
 + * 
 + * @ return ActorIntent for start activity 
 + * / 
 @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignPhoneFragment ( ) ; 
 + public ActorIntent getStartIntent ( ) { 
 + return null ; 
 } 
 
 + / / 
 + / / Hacking settings activity 
 + / / 
 + 
 @ Override 
 public View getBeforeNickSettingsView ( Context context ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 index dd19ba4 . . 64c5706 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . fragment . auth . AuthActivity ; 
 
 - / * * 
 - * Created by root on 10 / 20 / 15 . 
 - * / 
 + @ Deprecated 
 public class ActivityManager { 
 
 - 
 public void startAuthActivity ( Context context ) { 
 startAuthActivity ( context , null ) ; 
 }
