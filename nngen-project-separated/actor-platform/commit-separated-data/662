BLEU SCORE: 0.15228763726734104

TEST MSG: fix ( server : push ) : fixing GCM problems
GENERATED MSG: feat ( server : webrtc ) : send google push on incoming call

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > index f6de790 . . 7a2edaa 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > @ @ - 45 , 9 + 45 , 10 @ @ object GooglePushManagerConfig { < nl > } < nl > < nl > final case class GooglePushMessage ( < nl > - to : String , < nl > - collapseKey : Option [ String ] , < nl > - data : Option [ Map [ String , String ] ] < nl > + to : String , < nl > + collapse _ key : Option [ String ] , < nl > + data : Option [ Map [ String , String ] ] , < nl > + time _ to _ live : Option [ Int ] < nl > ) < nl > < nl > object GooglePushExtension extends ExtensionId [ GooglePushExtension ] with ExtensionIdProvider { < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala < nl > index 2ec1f93 . . 8e4d6a4 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala < nl > @ @ - 9 , 8 + 9 , 9 @ @ private [ sequence ] final class GooglePushProvider ( userId : Int , system : ActorSyste < nl > def deliverInvisible ( seq : Int , creds : GooglePushCredentials ) : Unit = { < nl > val message = GooglePushMessage ( < nl > to = creds . regId , < nl > - collapseKey = Some ( s " seq - invisible - $ { userId . toString } " ) , < nl > - data = Some ( Map ( " seq " → seq . toString ) ) < nl > + collapse _ key = Some ( s " seq - invisible - $ { userId . toString } " ) , < nl > + data = Some ( Map ( " seq " → seq . toString ) ) , < nl > + time _ to _ live = None < nl > ) < nl > < nl > googlePushExt . send ( creds . projectId , message ) < nl > @ @ - 26 , 14 + 27 , 15 @ @ private [ sequence ] final class GooglePushProvider ( userId : Int , system : ActorSyste < nl > ) : Unit = { < nl > val message = GooglePushMessage ( < nl > to = creds . regId , < nl > - collapseKey = Some ( s " seq - visible - $ { userId . toString } " ) , < nl > + collapse _ key = Some ( s " seq - visible - $ { userId . toString } " ) , < nl > data = Some ( Map ( " seq " → seq . toString ) + + ( < nl > data . text match { < nl > case text if text . nonEmpty & & isTextEnabled ⇒ < nl > Map ( " message " → text ) < nl > case _ ⇒ Map . empty < nl > } < nl > - ) ) < nl > + ) ) , < nl > + time _ to _ live = None < nl > ) < nl > < nl > googlePushExt . send ( creds . projectId , message ) < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > index cac5371 . . 83f446d 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > @ @ - 532 , 7 + 532 , 8 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with < nl > val message = new GooglePushMessage ( < nl > cred . regId , < nl > None , < nl > - Some ( Map ( " callId " → id . toString , " attemptIndex " → member . callAttempts . toString ) ) < nl > + Some ( Map ( " callId " → id . toString , " attemptIndex " → member . callAttempts . toString ) ) , < nl > + time _ to _ live = Some ( 0 ) < nl > ) < nl > gcmExt . send ( cred . projectId , message ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala < nl > index bb69ead . . 1889ef5 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala < nl > @ @ - 70 , 9 + 70 , 9 @ @ final class ApplePushExtension ( system : ActorSystem ) extends Extension { < nl > < nl > def findCreds ( authId : Long ) : Future [ Option [ ApplePushCredentials ] ] = db . run ( ApplePushCredentialsRepo . find ( authId ) ) < nl > < nl > - def findCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = db . run ( ApplePushCredentialsRepo . find ( authIds ) ) < nl > + def fetchCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = db . run ( ApplePushCredentialsRepo . find ( authIds ) ) < nl > < nl > - def findVoipCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = findCreds ( authIds ) map ( _ filter ( _ . isVoip ) ) < nl > + def fetchVoipCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = fetchCreds ( authIds ) map ( _ filter ( _ . isVoip ) ) < nl > < nl > private def createManager ( cert : ApnsCert ) = { < nl > val env = cert . isSandbox match { < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > index c898226 . . f6de790 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > @ @ - 13 , 6 + 13 , 7 @ @ import cats . data . Xor < nl > import com . github . kxbmap . configs . syntax . _ < nl > import com . typesafe . config . Config < nl > import im . actor . server . db . DbExtension < nl > + import im . actor . server . model . push . GooglePushCredentials < nl > import im . actor . server . persist . push . GooglePushCredentialsRepo < nl > import io . circe . generic . auto . _ < nl > import io . circe . jawn . _ < nl > @ @ - 119 , 6 + 120 , 9 @ @ final class GooglePushExtension ( system : ActorSystem ) extends Extension { < nl > case None ⇒ < nl > log . warning ( " Key not found for projectId : { } " , projectId ) < nl > } < nl > + < nl > + def fetchCreds ( authIds : Set [ Long ] ) : Future [ Seq [ GooglePushCredentials ] ] = < nl > + db . run ( GooglePushCredentialsRepo . find ( authIds ) ) < nl > } < nl > < nl > private object GooglePushDelivery { < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > index 91f032d . . 025c37a 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > @ @ - 13 , 7 + 13 , 7 @ @ import im . actor . server . dialog . DialogExtension < nl > import im . actor . server . eventbus . { EventBus , EventBusExtension } < nl > import im . actor . server . group . GroupExtension < nl > import im . actor . server . model . { Peer , PeerType } < nl > - import im . actor . server . sequence . { ApplePushExtension , WeakUpdatesExtension } < nl > + import im . actor . server . sequence . { GooglePushMessage , GooglePushExtension , ApplePushExtension , WeakUpdatesExtension } < nl > import im . actor . server . user . UserExtension < nl > import im . actor . server . values . ValuesExtension < nl > import im . actor . types . _ < nl > @ @ - 151 , 6 + 151 , 7 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with < nl > private val groupExt = GroupExtension ( context . system ) < nl > private val valuesExt = ValuesExtension ( context . system ) < nl > private val apnsExt = ApplePushExtension ( context . system ) < nl > + private val gcmExt = GooglePushExtension ( context . system ) < nl > private val webrtcExt = WebrtcExtension ( context . system ) < nl > < nl > case class Device ( < nl > @ @ - 472 , 10 + 473 , 14 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with < nl > < nl > private def scheduleIncomingCallUpdates ( callees : Seq [ UserId ] ) : Future [ Unit ] = { < nl > for { < nl > - authIds ← userExt . getAuthIds ( callees . toSet ) < nl > - credss ← apnsExt . findVoipCreds ( authIds . toSet ) < nl > + authIdsMap ← userExt . getAuthIdsMap ( callees . toSet ) < nl > + acredss ← apnsExt . fetchVoipCreds ( authIdsMap . values . flatten . toSet ) < nl > + gcredsMap ← FutureExt . ftraverse ( authIdsMap . toSeq ) { < nl > + case ( userId , authIds ) ⇒ < nl > + gcmExt . fetchCreds ( authIds . toSet ) map ( userId → _ ) < nl > + } < nl > } yield { < nl > - credss foreach { creds ⇒ < nl > + acredss foreach { creds ⇒ < nl > val payload = ( new ApnsPayloadBuilder ) . addCustomProperty ( " callId " , id ) . buildWithDefaultMaximumLength ( ) < nl > < nl > val instanceCreds = apnsExt . getVoipInstance ( creds . apnsKey ) map ( _ → creds ) < nl > @ @ - 485 , 6 + 490 , 17 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with < nl > } < nl > } < nl > < nl > + gcredsMap foreach { < nl > + case ( userId , credss ) ⇒ < nl > + for { < nl > + member ← getMember ( userId ) < nl > + creds ← credss < nl > + } { < nl > + val message = new GooglePushMessage ( creds . regId , None , Some ( Map ( " callId " → id . toString , " attemptIndex " → member . callAttempts . toString ) ) ) < nl > + gcmExt . send ( creds . projectId , message ) < nl > + } < nl > + } < nl > + < nl > scheduledUpds = < nl > callees . map { userId ⇒ < nl > (

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 index f6de790 . . 7a2edaa 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 @ @ - 45 , 9 + 45 , 10 @ @ object GooglePushManagerConfig { 
 } 
 
 final case class GooglePushMessage ( 
 - to : String , 
 - collapseKey : Option [ String ] , 
 - data : Option [ Map [ String , String ] ] 
 + to : String , 
 + collapse _ key : Option [ String ] , 
 + data : Option [ Map [ String , String ] ] , 
 + time _ to _ live : Option [ Int ] 
 ) 
 
 object GooglePushExtension extends ExtensionId [ GooglePushExtension ] with ExtensionIdProvider { 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala 
 index 2ec1f93 . . 8e4d6a4 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushProvider . scala 
 @ @ - 9 , 8 + 9 , 9 @ @ private [ sequence ] final class GooglePushProvider ( userId : Int , system : ActorSyste 
 def deliverInvisible ( seq : Int , creds : GooglePushCredentials ) : Unit = { 
 val message = GooglePushMessage ( 
 to = creds . regId , 
 - collapseKey = Some ( s " seq - invisible - $ { userId . toString } " ) , 
 - data = Some ( Map ( " seq " → seq . toString ) ) 
 + collapse _ key = Some ( s " seq - invisible - $ { userId . toString } " ) , 
 + data = Some ( Map ( " seq " → seq . toString ) ) , 
 + time _ to _ live = None 
 ) 
 
 googlePushExt . send ( creds . projectId , message ) 
 @ @ - 26 , 14 + 27 , 15 @ @ private [ sequence ] final class GooglePushProvider ( userId : Int , system : ActorSyste 
 ) : Unit = { 
 val message = GooglePushMessage ( 
 to = creds . regId , 
 - collapseKey = Some ( s " seq - visible - $ { userId . toString } " ) , 
 + collapse _ key = Some ( s " seq - visible - $ { userId . toString } " ) , 
 data = Some ( Map ( " seq " → seq . toString ) + + ( 
 data . text match { 
 case text if text . nonEmpty & & isTextEnabled ⇒ 
 Map ( " message " → text ) 
 case _ ⇒ Map . empty 
 } 
 - ) ) 
 + ) ) , 
 + time _ to _ live = None 
 ) 
 
 googlePushExt . send ( creds . projectId , message ) 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 index cac5371 . . 83f446d 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 @ @ - 532 , 7 + 532 , 8 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with 
 val message = new GooglePushMessage ( 
 cred . regId , 
 None , 
 - Some ( Map ( " callId " → id . toString , " attemptIndex " → member . callAttempts . toString ) ) 
 + Some ( Map ( " callId " → id . toString , " attemptIndex " → member . callAttempts . toString ) ) , 
 + time _ to _ live = Some ( 0 ) 
 ) 
 gcmExt . send ( cred . projectId , message ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala 
 index bb69ead . . 1889ef5 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / ApplePushExtension . scala 
 @ @ - 70 , 9 + 70 , 9 @ @ final class ApplePushExtension ( system : ActorSystem ) extends Extension { 
 
 def findCreds ( authId : Long ) : Future [ Option [ ApplePushCredentials ] ] = db . run ( ApplePushCredentialsRepo . find ( authId ) ) 
 
 - def findCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = db . run ( ApplePushCredentialsRepo . find ( authIds ) ) 
 + def fetchCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = db . run ( ApplePushCredentialsRepo . find ( authIds ) ) 
 
 - def findVoipCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = findCreds ( authIds ) map ( _ filter ( _ . isVoip ) ) 
 + def fetchVoipCreds ( authIds : Set [ Long ] ) : Future [ Seq [ ApplePushCredentials ] ] = fetchCreds ( authIds ) map ( _ filter ( _ . isVoip ) ) 
 
 private def createManager ( cert : ApnsCert ) = { 
 val env = cert . isSandbox match { 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 index c898226 . . f6de790 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 @ @ - 13 , 6 + 13 , 7 @ @ import cats . data . Xor 
 import com . github . kxbmap . configs . syntax . _ 
 import com . typesafe . config . Config 
 import im . actor . server . db . DbExtension 
 + import im . actor . server . model . push . GooglePushCredentials 
 import im . actor . server . persist . push . GooglePushCredentialsRepo 
 import io . circe . generic . auto . _ 
 import io . circe . jawn . _ 
 @ @ - 119 , 6 + 120 , 9 @ @ final class GooglePushExtension ( system : ActorSystem ) extends Extension { 
 case None ⇒ 
 log . warning ( " Key not found for projectId : { } " , projectId ) 
 } 
 + 
 + def fetchCreds ( authIds : Set [ Long ] ) : Future [ Seq [ GooglePushCredentials ] ] = 
 + db . run ( GooglePushCredentialsRepo . find ( authIds ) ) 
 } 
 
 private object GooglePushDelivery { 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 index 91f032d . . 025c37a 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 @ @ - 13 , 7 + 13 , 7 @ @ import im . actor . server . dialog . DialogExtension 
 import im . actor . server . eventbus . { EventBus , EventBusExtension } 
 import im . actor . server . group . GroupExtension 
 import im . actor . server . model . { Peer , PeerType } 
 - import im . actor . server . sequence . { ApplePushExtension , WeakUpdatesExtension } 
 + import im . actor . server . sequence . { GooglePushMessage , GooglePushExtension , ApplePushExtension , WeakUpdatesExtension } 
 import im . actor . server . user . UserExtension 
 import im . actor . server . values . ValuesExtension 
 import im . actor . types . _ 
 @ @ - 151 , 6 + 151 , 7 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with 
 private val groupExt = GroupExtension ( context . system ) 
 private val valuesExt = ValuesExtension ( context . system ) 
 private val apnsExt = ApplePushExtension ( context . system ) 
 + private val gcmExt = GooglePushExtension ( context . system ) 
 private val webrtcExt = WebrtcExtension ( context . system ) 
 
 case class Device ( 
 @ @ - 472 , 10 + 473 , 14 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with 
 
 private def scheduleIncomingCallUpdates ( callees : Seq [ UserId ] ) : Future [ Unit ] = { 
 for { 
 - authIds ← userExt . getAuthIds ( callees . toSet ) 
 - credss ← apnsExt . findVoipCreds ( authIds . toSet ) 
 + authIdsMap ← userExt . getAuthIdsMap ( callees . toSet ) 
 + acredss ← apnsExt . fetchVoipCreds ( authIdsMap . values . flatten . toSet ) 
 + gcredsMap ← FutureExt . ftraverse ( authIdsMap . toSeq ) { 
 + case ( userId , authIds ) ⇒ 
 + gcmExt . fetchCreds ( authIds . toSet ) map ( userId → _ ) 
 + } 
 } yield { 
 - credss foreach { creds ⇒ 
 + acredss foreach { creds ⇒ 
 val payload = ( new ApnsPayloadBuilder ) . addCustomProperty ( " callId " , id ) . buildWithDefaultMaximumLength ( ) 
 
 val instanceCreds = apnsExt . getVoipInstance ( creds . apnsKey ) map ( _ → creds ) 
 @ @ - 485 , 6 + 490 , 17 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with 
 } 
 } 
 
 + gcredsMap foreach { 
 + case ( userId , credss ) ⇒ 
 + for { 
 + member ← getMember ( userId ) 
 + creds ← credss 
 + } { 
 + val message = new GooglePushMessage ( creds . regId , None , Some ( Map ( " callId " → id . toString , " attemptIndex " → member . callAttempts . toString ) ) ) 
 + gcmExt . send ( creds . projectId , message ) 
 + } 
 + } 
 + 
 scheduledUpds = 
 callees . map { userId ⇒ 
 (
