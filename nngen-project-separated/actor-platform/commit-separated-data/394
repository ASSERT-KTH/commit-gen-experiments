BLEU SCORE: 0.392814650900513

TEST MSG: fix ( js ) : Disable IDLE detection on Electron
GENERATED MSG: fix ( js ) : Removing idle module logging

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java < nl > index 7920a57 . . a4137ea 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java < nl > @ @ - 1 , 6 + 1 , 7 @ @ < nl > package im . actor . core . js . modules ; < nl > < nl > import im . actor . core . js . JsMessenger ; < nl > + import im . actor . core . js . providers . electron . JsElectronApp ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleActor ; < nl > import im . actor . core . modules . ModuleContext ; < nl > @ @ - 25 , 12 + 26 , 7 @ @ public class JsIdleModule extends AbsModule { < nl > < nl > this . messenger . onAppVisible ( ) ; < nl > < nl > - idleActor = system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public IdleActor create ( ) { < nl > - return new IdleActor ( messenger , context ) ; < nl > - } < nl > - } ) , " js / idle _ timer " ) ; < nl > + idleActor = system ( ) . actorOf ( " js / idle _ timer " , ( ) - > new IdleActor ( messenger , context ) ) ; < nl > } < nl > < nl > public void onHidden ( ) { < nl > @ @ - 46 , 6 + 42 , 7 @ @ public class JsIdleModule extends AbsModule { < nl > private boolean isAppVisible = true ; < nl > private JsMessenger messenger ; < nl > private Cancellable flushCancellable ; < nl > + private boolean isElectron = JsElectronApp . isElectron ( ) ; < nl > < nl > public IdleActor ( JsMessenger messenger , ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 54 , 18 + 51 , 20 @ @ public class JsIdleModule extends AbsModule { < nl > < nl > @ Override < nl > public void preStart ( ) { < nl > - / / Log . d ( " JsIdle " , " preStart " ) ; < nl > - JsIdleDetection . subscribe ( this ) ; < nl > - scheduleFlush ( ) ; < nl > + if ( ! isElectron ) { < nl > + JsIdleDetection . subscribe ( this ) ; < nl > + scheduleFlush ( ) ; < nl > + } < nl > } < nl > < nl > public void onActionDetected ( ) { < nl > - / / Log . d ( " JsIdle " , " onActionDetected " ) ; < nl > if ( ! isAppVisible ) { < nl > isAppVisible = true ; < nl > messenger . onAppVisible ( ) ; < nl > } < nl > - scheduleFlush ( ) ; < nl > + if ( ! isElectron ) { < nl > + scheduleFlush ( ) ; < nl > + } < nl > } < nl > < nl > void scheduleFlush ( ) { < nl > @ @ - 77 , 7 + 76 , 6 @ @ public class JsIdleModule extends AbsModule { < nl > } < nl > < nl > public void onTimeoutDetected ( ) { < nl > - / / Log . d ( " JsIdle " , " onTimeoutDetected " ) ; < nl > if ( isAppVisible ) { < nl > isAppVisible = false ; < nl > messenger . onAppHidden ( ) ; < nl > @ @ - 85 , 12 + 83 , 10 @ @ public class JsIdleModule extends AbsModule { < nl > } < nl > < nl > public void onHidden ( ) { < nl > - / / Log . d ( " JsIdle " , " onHidden " ) ; < nl > onTimeoutDetected ( ) ; < nl > } < nl > < nl > public void onVisible ( ) { < nl > - / / Log . d ( " JsIdle " , " onVisible " ) ; < nl > onActionDetected ( ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java < nl > index bea818a . . 0aeaf46 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java < nl > @ @ - 53 , 13 + 53 , 13 @ @ public class JsIdleModule extends AbsModule { < nl > < nl > @ Override < nl > public void preStart ( ) { < nl > - Log . d ( " JsIdle " , " preStart " ) ; < nl > + / / Log . d ( " JsIdle " , " preStart " ) ; < nl > JsIdleDetection . subscribe ( this ) ; < nl > self ( ) . sendOnce ( new FlushTimeout ( ) , TIMEOUT ) ; < nl > } < nl > < nl > public void onActionDetected ( ) { < nl > - Log . d ( " JsIdle " , " onActionDetected " ) ; < nl > + / / Log . d ( " JsIdle " , " onActionDetected " ) ; < nl > if ( ! isAppVisible ) { < nl > isAppVisible = true ; < nl > messenger . onAppVisible ( ) ; < nl > @ @ - 68 , 7 + 68 , 7 @ @ public class JsIdleModule extends AbsModule { < nl > } < nl > < nl > public void onTimeoutDetected ( ) { < nl > - Log . d ( " JsIdle " , " onTimeoutDetected " ) ; < nl > + / / Log . d ( " JsIdle " , " onTimeoutDetected " ) ; < nl > if ( isAppVisible ) { < nl > isAppVisible = false ; < nl > messenger . onAppHidden ( ) ; < nl > @ @ - 76 , 13 + 76 , 13 @ @ public class JsIdleModule extends AbsModule { < nl > } < nl > < nl > public void onHidden ( ) { < nl > - Log . d ( " JsIdle " , " onHidden " ) ; < nl > + / / Log . d ( " JsIdle " , " onHidden " ) ; < nl > onTimeoutDetected ( ) ; < nl > } < nl > < nl > public void onVisible ( ) { < nl > + / / Log . d ( " JsIdle " , " onVisible " ) ; < nl > onActionDetected ( ) ; < nl > - Log . d ( " JsIdle " , " onVisible " ) ; < nl > } < nl > < nl > @ Override

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java 
 index 7920a57 . . a4137ea 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package im . actor . core . js . modules ; 
 
 import im . actor . core . js . JsMessenger ; 
 + import im . actor . core . js . providers . electron . JsElectronApp ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleActor ; 
 import im . actor . core . modules . ModuleContext ; 
 @ @ - 25 , 12 + 26 , 7 @ @ public class JsIdleModule extends AbsModule { 
 
 this . messenger . onAppVisible ( ) ; 
 
 - idleActor = system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public IdleActor create ( ) { 
 - return new IdleActor ( messenger , context ) ; 
 - } 
 - } ) , " js / idle _ timer " ) ; 
 + idleActor = system ( ) . actorOf ( " js / idle _ timer " , ( ) - > new IdleActor ( messenger , context ) ) ; 
 } 
 
 public void onHidden ( ) { 
 @ @ - 46 , 6 + 42 , 7 @ @ public class JsIdleModule extends AbsModule { 
 private boolean isAppVisible = true ; 
 private JsMessenger messenger ; 
 private Cancellable flushCancellable ; 
 + private boolean isElectron = JsElectronApp . isElectron ( ) ; 
 
 public IdleActor ( JsMessenger messenger , ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 54 , 18 + 51 , 20 @ @ public class JsIdleModule extends AbsModule { 
 
 @ Override 
 public void preStart ( ) { 
 - / / Log . d ( " JsIdle " , " preStart " ) ; 
 - JsIdleDetection . subscribe ( this ) ; 
 - scheduleFlush ( ) ; 
 + if ( ! isElectron ) { 
 + JsIdleDetection . subscribe ( this ) ; 
 + scheduleFlush ( ) ; 
 + } 
 } 
 
 public void onActionDetected ( ) { 
 - / / Log . d ( " JsIdle " , " onActionDetected " ) ; 
 if ( ! isAppVisible ) { 
 isAppVisible = true ; 
 messenger . onAppVisible ( ) ; 
 } 
 - scheduleFlush ( ) ; 
 + if ( ! isElectron ) { 
 + scheduleFlush ( ) ; 
 + } 
 } 
 
 void scheduleFlush ( ) { 
 @ @ - 77 , 7 + 76 , 6 @ @ public class JsIdleModule extends AbsModule { 
 } 
 
 public void onTimeoutDetected ( ) { 
 - / / Log . d ( " JsIdle " , " onTimeoutDetected " ) ; 
 if ( isAppVisible ) { 
 isAppVisible = false ; 
 messenger . onAppHidden ( ) ; 
 @ @ - 85 , 12 + 83 , 10 @ @ public class JsIdleModule extends AbsModule { 
 } 
 
 public void onHidden ( ) { 
 - / / Log . d ( " JsIdle " , " onHidden " ) ; 
 onTimeoutDetected ( ) ; 
 } 
 
 public void onVisible ( ) { 
 - / / Log . d ( " JsIdle " , " onVisible " ) ; 
 onActionDetected ( ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java 
 index bea818a . . 0aeaf46 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsIdleModule . java 
 @ @ - 53 , 13 + 53 , 13 @ @ public class JsIdleModule extends AbsModule { 
 
 @ Override 
 public void preStart ( ) { 
 - Log . d ( " JsIdle " , " preStart " ) ; 
 + / / Log . d ( " JsIdle " , " preStart " ) ; 
 JsIdleDetection . subscribe ( this ) ; 
 self ( ) . sendOnce ( new FlushTimeout ( ) , TIMEOUT ) ; 
 } 
 
 public void onActionDetected ( ) { 
 - Log . d ( " JsIdle " , " onActionDetected " ) ; 
 + / / Log . d ( " JsIdle " , " onActionDetected " ) ; 
 if ( ! isAppVisible ) { 
 isAppVisible = true ; 
 messenger . onAppVisible ( ) ; 
 @ @ - 68 , 7 + 68 , 7 @ @ public class JsIdleModule extends AbsModule { 
 } 
 
 public void onTimeoutDetected ( ) { 
 - Log . d ( " JsIdle " , " onTimeoutDetected " ) ; 
 + / / Log . d ( " JsIdle " , " onTimeoutDetected " ) ; 
 if ( isAppVisible ) { 
 isAppVisible = false ; 
 messenger . onAppHidden ( ) ; 
 @ @ - 76 , 13 + 76 , 13 @ @ public class JsIdleModule extends AbsModule { 
 } 
 
 public void onHidden ( ) { 
 - Log . d ( " JsIdle " , " onHidden " ) ; 
 + / / Log . d ( " JsIdle " , " onHidden " ) ; 
 onTimeoutDetected ( ) ; 
 } 
 
 public void onVisible ( ) { 
 + / / Log . d ( " JsIdle " , " onVisible " ) ; 
 onActionDetected ( ) ; 
 - Log . d ( " JsIdle " , " onVisible " ) ; 
 } 
 
 @ Override
