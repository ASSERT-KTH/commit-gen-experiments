BLEU SCORE: 0.5706745777055999

TEST MSG: fix ( server : botkit ) : methods to create group
GENERATED MSG: fix ( server : botkit ) : add new sticker commands

TEST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index d828afb . . 41b25b9 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 542 , 14 + 542 , 19 @ @ object BotMessages { < nl > < nl > @ key ( " CreateGroup " ) < nl > final case class CreateGroup ( < nl > - @ beanGetter title : String , < nl > - ownerUserId : Option [ Int ] < nl > + @ beanGetter title : String < nl > ) extends RequestBody { < nl > - def this ( title : String ) = this ( title , None ) < nl > - def this ( title : String , ownerUserId : Int ) = this ( title , Option ( ownerUserId ) ) < nl > + override type Response = ResponseCreateGroup < nl > + override val service : String = Services . Groups < nl > < nl > - def getOwnerUserId = ownerUserId . asJava < nl > + override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > + } < nl > < nl > + @ key ( " CreateGroupWithOwner " ) < nl > + final case class CreateGroupWithOwner ( < nl > + @ beanGetter title : String , < nl > + @ beanGetter user : UserPeer < nl > + ) extends RequestBody { < nl > override type Response = ResponseCreateGroup < nl > override val service : String = Services . Groups < nl > < nl > @ @ - 560 , 9 + 565 , 9 @ @ object BotMessages { < nl > < nl > @ key ( " UpdateGroupShortName " ) < nl > final case class UpdateGroupShortName ( < nl > - @ beanGetter groupId : Int , < nl > - shortName : Option [ String ] < nl > - ) extends RequestBody { < nl > + @ beanGetter groupId : Int , < nl > + shortName : Option [ String ] < nl > + ) extends RequestBody { < nl > def this ( groupId : Int , shortName : String ) = this ( groupId , Option ( shortName ) ) < nl > < nl > def getShortName = shortName . asJava < nl > @ @ - 573 , 12 + 578 , 11 @ @ object BotMessages { < nl > override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > } < nl > < nl > - < nl > @ key ( " AddGroupExtString " ) < nl > final case class AddGroupExtString ( < nl > @ beanGetter groupId : Int , < nl > - @ beanGetter key : String , < nl > - @ beanGetter value : String < nl > + @ beanGetter key : String , < nl > + @ beanGetter value : String < nl > ) extends RequestBody { < nl > override type Response = Void < nl > override val service : String = Services . Groups < nl > @ @ - 589 , 8 + 593 , 8 @ @ object BotMessages { < nl > @ key ( " AddGroupExtBool " ) < nl > final case class AddGroupExtBool ( < nl > @ beanGetter groupId : Int , < nl > - @ beanGetter key : String , < nl > - @ beanGetter value : Boolean < nl > + @ beanGetter key : String , < nl > + @ beanGetter value : Boolean < nl > ) extends RequestBody { < nl > override type Response = Void < nl > override val service : String = Services . Groups < nl > @ @ - 601 , 7 + 605 , 7 @ @ object BotMessages { < nl > @ key ( " RemoveGroupExt " ) < nl > final case class RemoveGroupExt ( < nl > @ beanGetter groupId : Int , < nl > - @ beanGetter key : String < nl > + @ beanGetter key : String < nl > ) extends RequestBody { < nl > override type Response = Void < nl > override val service : String = Services . Groups < nl > @ @ - 906 , 8 + 910 , 8 @ @ object BotMessages { < nl > < nl > @ key ( " AnimationVid " ) < nl > final case class DocumentExAnimationVid ( < nl > - @ beanGetter width : Int , < nl > - @ beanGetter height : Int , < nl > + @ beanGetter width : Int , < nl > + @ beanGetter height : Int , < nl > @ beanGetter duration : Int < nl > ) extends DocumentEx
NEAREST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index 36da6fe . . 07d5a02 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 453 , 7 + 453 , 7 @ @ object BotMessages { < nl > } < nl > < nl > @ key ( " CreateStickerPack " ) < nl > - final case class CreateStickerPack ( @ beanGetter ownerUserId : Int ) extends RequestBody { < nl > + final case class CreateStickerPack ( @ beanGetter creatorUserId : Int ) extends RequestBody { < nl > override type Response = Container [ String ] < nl > override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > override val service : String = Services . Stickers < nl > @ @ - 461 , 24 + 461 , 32 @ @ object BotMessages { < nl > < nl > @ key ( " ShowStickerPacks " ) < nl > final case class ShowStickerPacks ( @ beanGetter ownerUserId : Int ) extends RequestBody { < nl > - override type Response = ContainerList [ String ] < nl > + override type Response = StickerPackIds < nl > override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > override val service : String = Services . Stickers < nl > } < nl > < nl > + final case class StickerPackIds ( ids : Seq [ Int ] ) extends ResponseBody { < nl > + def getIds = seqAsJavaList ( ids ) < nl > + } < nl > + < nl > @ key ( " ShowStickers " ) < nl > final case class ShowStickers ( < nl > @ beanGetter ownerUserId : Int , < nl > @ beanGetter packId : Int < nl > ) extends RequestBody { < nl > - override type Response = ContainerList [ String ] < nl > + override type Response = StickerIds < nl > override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > override val service : String = Services . Stickers < nl > } < nl > < nl > + final case class StickerIds ( ids : Seq [ Int ] ) extends ResponseBody { < nl > + def getIds = seqAsJavaList ( ids ) < nl > + } < nl > + < nl > @ key ( " AddSticker " ) < nl > final case class AddSticker ( < nl > - @ beanGetter userId : Int , < nl > + @ beanGetter ownerUserId : Int , < nl > @ beanGetter packId : Int , < nl > emoji : Option [ String ] , < nl > @ beanGetter fileLocation : FileLocation < nl > @ @ - 511 , 6 + 519 , 16 @ @ object BotMessages { < nl > override val service : String = Services . Stickers < nl > } < nl > < nl > + @ key ( " UnmakeStickerPackDefault " ) < nl > + final case class UnmakeStickerPackDefault ( < nl > + @ beanGetter userId : Int , < nl > + @ beanGetter packId : Int < nl > + ) extends RequestBody { < nl > + override type Response = Void < nl > + override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > + override val service : String = Services . Stickers < nl > + } < nl > + < nl > @ key ( " Message " ) < nl > final case class Message ( < nl > @ beanGetter peer : OutPeer ,

TEST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index d828afb . . 41b25b9 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 542 , 14 + 542 , 19 @ @ object BotMessages { 
 
 @ key ( " CreateGroup " ) 
 final case class CreateGroup ( 
 - @ beanGetter title : String , 
 - ownerUserId : Option [ Int ] 
 + @ beanGetter title : String 
 ) extends RequestBody { 
 - def this ( title : String ) = this ( title , None ) 
 - def this ( title : String , ownerUserId : Int ) = this ( title , Option ( ownerUserId ) ) 
 + override type Response = ResponseCreateGroup 
 + override val service : String = Services . Groups 
 
 - def getOwnerUserId = ownerUserId . asJava 
 + override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 + } 
 
 + @ key ( " CreateGroupWithOwner " ) 
 + final case class CreateGroupWithOwner ( 
 + @ beanGetter title : String , 
 + @ beanGetter user : UserPeer 
 + ) extends RequestBody { 
 override type Response = ResponseCreateGroup 
 override val service : String = Services . Groups 
 
 @ @ - 560 , 9 + 565 , 9 @ @ object BotMessages { 
 
 @ key ( " UpdateGroupShortName " ) 
 final case class UpdateGroupShortName ( 
 - @ beanGetter groupId : Int , 
 - shortName : Option [ String ] 
 - ) extends RequestBody { 
 + @ beanGetter groupId : Int , 
 + shortName : Option [ String ] 
 + ) extends RequestBody { 
 def this ( groupId : Int , shortName : String ) = this ( groupId , Option ( shortName ) ) 
 
 def getShortName = shortName . asJava 
 @ @ - 573 , 12 + 578 , 11 @ @ object BotMessages { 
 override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 } 
 
 - 
 @ key ( " AddGroupExtString " ) 
 final case class AddGroupExtString ( 
 @ beanGetter groupId : Int , 
 - @ beanGetter key : String , 
 - @ beanGetter value : String 
 + @ beanGetter key : String , 
 + @ beanGetter value : String 
 ) extends RequestBody { 
 override type Response = Void 
 override val service : String = Services . Groups 
 @ @ - 589 , 8 + 593 , 8 @ @ object BotMessages { 
 @ key ( " AddGroupExtBool " ) 
 final case class AddGroupExtBool ( 
 @ beanGetter groupId : Int , 
 - @ beanGetter key : String , 
 - @ beanGetter value : Boolean 
 + @ beanGetter key : String , 
 + @ beanGetter value : Boolean 
 ) extends RequestBody { 
 override type Response = Void 
 override val service : String = Services . Groups 
 @ @ - 601 , 7 + 605 , 7 @ @ object BotMessages { 
 @ key ( " RemoveGroupExt " ) 
 final case class RemoveGroupExt ( 
 @ beanGetter groupId : Int , 
 - @ beanGetter key : String 
 + @ beanGetter key : String 
 ) extends RequestBody { 
 override type Response = Void 
 override val service : String = Services . Groups 
 @ @ - 906 , 8 + 910 , 8 @ @ object BotMessages { 
 
 @ key ( " AnimationVid " ) 
 final case class DocumentExAnimationVid ( 
 - @ beanGetter width : Int , 
 - @ beanGetter height : Int , 
 + @ beanGetter width : Int , 
 + @ beanGetter height : Int , 
 @ beanGetter duration : Int 
 ) extends DocumentEx

NEAREST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index 36da6fe . . 07d5a02 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 453 , 7 + 453 , 7 @ @ object BotMessages { 
 } 
 
 @ key ( " CreateStickerPack " ) 
 - final case class CreateStickerPack ( @ beanGetter ownerUserId : Int ) extends RequestBody { 
 + final case class CreateStickerPack ( @ beanGetter creatorUserId : Int ) extends RequestBody { 
 override type Response = Container [ String ] 
 override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 override val service : String = Services . Stickers 
 @ @ - 461 , 24 + 461 , 32 @ @ object BotMessages { 
 
 @ key ( " ShowStickerPacks " ) 
 final case class ShowStickerPacks ( @ beanGetter ownerUserId : Int ) extends RequestBody { 
 - override type Response = ContainerList [ String ] 
 + override type Response = StickerPackIds 
 override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 override val service : String = Services . Stickers 
 } 
 
 + final case class StickerPackIds ( ids : Seq [ Int ] ) extends ResponseBody { 
 + def getIds = seqAsJavaList ( ids ) 
 + } 
 + 
 @ key ( " ShowStickers " ) 
 final case class ShowStickers ( 
 @ beanGetter ownerUserId : Int , 
 @ beanGetter packId : Int 
 ) extends RequestBody { 
 - override type Response = ContainerList [ String ] 
 + override type Response = StickerIds 
 override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 override val service : String = Services . Stickers 
 } 
 
 + final case class StickerIds ( ids : Seq [ Int ] ) extends ResponseBody { 
 + def getIds = seqAsJavaList ( ids ) 
 + } 
 + 
 @ key ( " AddSticker " ) 
 final case class AddSticker ( 
 - @ beanGetter userId : Int , 
 + @ beanGetter ownerUserId : Int , 
 @ beanGetter packId : Int , 
 emoji : Option [ String ] , 
 @ beanGetter fileLocation : FileLocation 
 @ @ - 511 , 6 + 519 , 16 @ @ object BotMessages { 
 override val service : String = Services . Stickers 
 } 
 
 + @ key ( " UnmakeStickerPackDefault " ) 
 + final case class UnmakeStickerPackDefault ( 
 + @ beanGetter userId : Int , 
 + @ beanGetter packId : Int 
 + ) extends RequestBody { 
 + override type Response = Void 
 + override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 + override val service : String = Services . Stickers 
 + } 
 + 
 @ key ( " Message " ) 
 final case class Message ( 
 @ beanGetter peer : OutPeer ,
