BLEU SCORE: 0.345720784641941

TEST MSG: fix ( server ) : changing unnecessary Option
GENERATED MSG: style ( server ) : autoformat

TEST DIFF (one line): diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala < nl > index d9f8750 . . 4357175 100644 < nl > - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala < nl > + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala < nl > @ @ - 213 , 7 + 213 , 7 @ @ private [ frontend ] final class SessionClient ( sessionRegion : SessionRegion , remote < nl > } else { < nl > unpack ( mbBits ) match { < nl > case Success ( rawBits ) ⇒ < nl > - sessionRegion . ref ! SessionEnvelope ( authId , sessionId ) . withHandleMessageBox ( HandleMessageBox ( ByteString . copyFrom ( rawBits . toByteBuffer ) , Option ( remoteAddr ) ) ) < nl > + sessionRegion . ref ! SessionEnvelope ( authId , sessionId ) . withHandleMessageBox ( HandleMessageBox ( ByteString . copyFrom ( rawBits . toByteBuffer ) , Some ( remoteAddr ) ) ) < nl > case Failure ( EncryptedPackageDecodeError ) ⇒ < nl > enqueuePackage ( Drop ( 0 , 0 , " Cannot parse EncryptedPackage " ) ) < nl > onCompleteThenStop ( )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala < nl > index 5c94b7e . . 829b63b 100644 < nl > - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala < nl > + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala < nl > @ @ - 193 , 7 + 193 , 7 @ @ private [ frontend ] final class SessionClient ( sessionRegion : SessionRegion ) < nl > case Status . Failure ( e ) ⇒ < nl > log . error ( e , " Failed to check authId " ) < nl > onErrorThenStop ( e ) < nl > - case other = > stash ( ) < nl > + case other ⇒ stash ( ) < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala 
 index d9f8750 . . 4357175 100644 
 - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala 
 + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala 
 @ @ - 213 , 7 + 213 , 7 @ @ private [ frontend ] final class SessionClient ( sessionRegion : SessionRegion , remote 
 } else { 
 unpack ( mbBits ) match { 
 case Success ( rawBits ) ⇒ 
 - sessionRegion . ref ! SessionEnvelope ( authId , sessionId ) . withHandleMessageBox ( HandleMessageBox ( ByteString . copyFrom ( rawBits . toByteBuffer ) , Option ( remoteAddr ) ) ) 
 + sessionRegion . ref ! SessionEnvelope ( authId , sessionId ) . withHandleMessageBox ( HandleMessageBox ( ByteString . copyFrom ( rawBits . toByteBuffer ) , Some ( remoteAddr ) ) ) 
 case Failure ( EncryptedPackageDecodeError ) ⇒ 
 enqueuePackage ( Drop ( 0 , 0 , " Cannot parse EncryptedPackage " ) ) 
 onCompleteThenStop ( )

NEAREST DIFF:
diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala 
 index 5c94b7e . . 829b63b 100644 
 - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala 
 + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / SessionClient . scala 
 @ @ - 193 , 7 + 193 , 7 @ @ private [ frontend ] final class SessionClient ( sessionRegion : SessionRegion ) 
 case Status . Failure ( e ) ⇒ 
 log . error ( e , " Failed to check authId " ) 
 onErrorThenStop ( e ) 
 - case other = > stash ( ) 
 + case other ⇒ stash ( ) 
 } 
 }
