BLEU SCORE: 0.31356006812336346

TEST MSG: fix ( core ) : Fixing compilation errors
GENERATED MSG: fix ( core ) : user from dialog not found in users

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java < nl > index 4b55b63 . . 81c8915 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import java . util . List ; < nl > < nl > import im . actor . core . api . ApiGroup ; < nl > import im . actor . core . api . ApiUpdateContainer ; < nl > + import im . actor . core . api . ApiUpdateOptimization ; < nl > import im . actor . core . api . ApiUser ; < nl > import im . actor . core . api . base . FatSeqUpdate ; < nl > import im . actor . core . api . base . SeqUpdate ; < nl > @ @ - 252 , 7 + 253 , 7 @ @ public class SequenceActor extends ModuleActor { < nl > Log . d ( TAG , " Loading difference . . . " ) ; < nl > onUpdateStarted ( ) ; < nl > final long loadStart = im . actor . runtime . Runtime . getCurrentTime ( ) ; < nl > - request ( new RequestGetDifference ( seq , state ) , new RpcCallback < ResponseGetDifference > ( ) { < nl > + request ( new RequestGetDifference ( seq , state , new ArrayList < ApiUpdateOptimization > ( ) ) , new RpcCallback < ResponseGetDifference > ( ) { < nl > @ Override < nl > public void onResult ( ResponseGetDifference response ) { < nl > if ( isValidated ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java < nl > index 14ac2d4 . . c70978a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java < nl > @ @ - 4 , 6 + 4 , 7 @ @ import java . io . IOException ; < nl > import java . util . ArrayList ; < nl > < nl > import im . actor . core . api . ApiEncryptedBox ; < nl > + import im . actor . core . api . ApiEncryptedBoxSignature ; < nl > import im . actor . core . api . ApiEncryptedMessage ; < nl > import im . actor . core . api . ApiEncyptedBoxKey ; < nl > import im . actor . core . api . ApiMessage ; < nl > @ @ - 38 , 8 + 39 , 8 @ @ public class EncryptedMsgActor extends ModuleActor { < nl > boxKeys . add ( new ApiEncyptedBoxKey ( b . getUid ( ) , < nl > b . getKeyGroupId ( ) , " curve25519 " , b . getEncryptedKey ( ) ) ) ; < nl > } < nl > - ArrayList < Integer > ignored = new ArrayList < Integer > ( ) ; < nl > - ApiEncryptedBox apiEncryptedBox = new ApiEncryptedBox ( 0 , boxKeys , ignored , " aes - kuznechik " , encryptedBox . getBox ( ) . getEncryptedPackage ( ) ) ; < nl > + ApiEncryptedBox apiEncryptedBox = new ApiEncryptedBox ( 0 , boxKeys , " aes - kuznechik " , encryptedBox . getBox ( ) . getEncryptedPackage ( ) , < nl > + new ArrayList < ApiEncryptedBoxSignature > ( ) ) ; < nl > ApiEncryptedMessage apiEncryptedMessage = new ApiEncryptedMessage ( apiEncryptedBox ) ; < nl > future . result ( new EncryptedMessage ( apiEncryptedMessage ) ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java < nl > index 6031237 . . 11495be 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java < nl > @ @ - 59 , 7 + 59 , 7 @ @ public class OwnPresenceActor extends ModuleActor implements BusSubscriber { < nl > prevRid = 0 ; < nl > } < nl > boolean isOnline = isVisible | | isAlwaysOnline ; < nl > - prevRid = request ( new RequestSetOnline ( isOnline , TIMEOUT ) , < nl > + prevRid = request ( new RequestSetOnline ( isOnline , TIMEOUT , null , null ) , < nl > new RpcCallback < ResponseVoid > ( ) { < nl > @ Override < nl > public void onResult ( ResponseVoid response ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java < nl > index bd83c77 . . e8e50c4 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java < nl > @ @ - 100 , 7 + 100 , 6 @ @ public class StickersModule extends AbsModule { < nl > < nl > vms . removeAll ( remove ) ; < nl > } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > } < nl > return vms ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java < nl > index b77ac37 . . fdeca48 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java < nl > @ @ - 298 , 9 + 298 , 15 @ @ public class DialogsActor extends ModuleActor { < nl > switch ( peer . getPeerType ( ) ) { < nl > case PRIVATE : < nl > User u = getUser ( peer . getPeerId ( ) ) ; < nl > + if ( u = = null ) { < nl > + return null ; < nl > + } < nl > return new PeerDesc ( u . getName ( ) , u . getAvatar ( ) ) ; < nl > case GROUP : < nl > Group g = getGroup ( peer . getPeerId ( ) ) ; < nl > + if ( g = = null ) { < nl > + return null ; < nl > + } < nl > return new PeerDesc ( g . getTitle ( ) , g . getAvatar ( ) ) ; < nl > default : < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java < nl > index 2350be1 . . b92cf4d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java < nl > @ @ - 127 , 10 + 127 , 16 @ @ public class GroupedDialogsActor extends ModuleActor { < nl > Avatar avatar ; < nl > if ( p . getPeerType ( ) = = PeerType . GROUP ) { < nl > Group group = getGroup ( p . getPeerId ( ) ) ; < nl > + if ( group = = null ) { < nl > + continue ; < nl > + } < nl > title = group . getTitle ( ) ; < nl > avatar = group . getAvatar ( ) ; < nl > } else if ( p . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > User user = getUser ( p . getPeerId ( ) ) ; < nl > + if ( user = = null ) { < nl > + continue ; < nl > + } < nl > title = user . getName ( ) ; < nl > avatar = user . getAvatar ( ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java < nl > index 1afd14b . . 2b7a6cf 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java < nl > @ @ - 47 , 6 + 47 , 7 @ @ public class ActorTrace implements TraceInterface { < nl > @ Override < nl > public void onActorDie ( ActorRef ref , Envelope envelope , Exception e ) { < nl > Log . w ( TAG , " Die ( " + ref . getPath ( ) + " ) by " + envelope . getMessage ( ) ) ; < nl > - Log . e ( TAG , e ) ; < nl > + / / Log . e ( TAG , e ) ; < nl > + e . printStackTrace ( ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java 
 index 4b55b63 . . 81c8915 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / api / SequenceActor . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import java . util . List ; 
 
 import im . actor . core . api . ApiGroup ; 
 import im . actor . core . api . ApiUpdateContainer ; 
 + import im . actor . core . api . ApiUpdateOptimization ; 
 import im . actor . core . api . ApiUser ; 
 import im . actor . core . api . base . FatSeqUpdate ; 
 import im . actor . core . api . base . SeqUpdate ; 
 @ @ - 252 , 7 + 253 , 7 @ @ public class SequenceActor extends ModuleActor { 
 Log . d ( TAG , " Loading difference . . . " ) ; 
 onUpdateStarted ( ) ; 
 final long loadStart = im . actor . runtime . Runtime . getCurrentTime ( ) ; 
 - request ( new RequestGetDifference ( seq , state ) , new RpcCallback < ResponseGetDifference > ( ) { 
 + request ( new RequestGetDifference ( seq , state , new ArrayList < ApiUpdateOptimization > ( ) ) , new RpcCallback < ResponseGetDifference > ( ) { 
 @ Override 
 public void onResult ( ResponseGetDifference response ) { 
 if ( isValidated ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java 
 index 14ac2d4 . . c70978a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / EncryptedMsgActor . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . io . IOException ; 
 import java . util . ArrayList ; 
 
 import im . actor . core . api . ApiEncryptedBox ; 
 + import im . actor . core . api . ApiEncryptedBoxSignature ; 
 import im . actor . core . api . ApiEncryptedMessage ; 
 import im . actor . core . api . ApiEncyptedBoxKey ; 
 import im . actor . core . api . ApiMessage ; 
 @ @ - 38 , 8 + 39 , 8 @ @ public class EncryptedMsgActor extends ModuleActor { 
 boxKeys . add ( new ApiEncyptedBoxKey ( b . getUid ( ) , 
 b . getKeyGroupId ( ) , " curve25519 " , b . getEncryptedKey ( ) ) ) ; 
 } 
 - ArrayList < Integer > ignored = new ArrayList < Integer > ( ) ; 
 - ApiEncryptedBox apiEncryptedBox = new ApiEncryptedBox ( 0 , boxKeys , ignored , " aes - kuznechik " , encryptedBox . getBox ( ) . getEncryptedPackage ( ) ) ; 
 + ApiEncryptedBox apiEncryptedBox = new ApiEncryptedBox ( 0 , boxKeys , " aes - kuznechik " , encryptedBox . getBox ( ) . getEncryptedPackage ( ) , 
 + new ArrayList < ApiEncryptedBoxSignature > ( ) ) ; 
 ApiEncryptedMessage apiEncryptedMessage = new ApiEncryptedMessage ( apiEncryptedBox ) ; 
 future . result ( new EncryptedMessage ( apiEncryptedMessage ) ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java 
 index 6031237 . . 11495be 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java 
 @ @ - 59 , 7 + 59 , 7 @ @ public class OwnPresenceActor extends ModuleActor implements BusSubscriber { 
 prevRid = 0 ; 
 } 
 boolean isOnline = isVisible | | isAlwaysOnline ; 
 - prevRid = request ( new RequestSetOnline ( isOnline , TIMEOUT ) , 
 + prevRid = request ( new RequestSetOnline ( isOnline , TIMEOUT , null , null ) , 
 new RpcCallback < ResponseVoid > ( ) { 
 @ Override 
 public void onResult ( ResponseVoid response ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java 
 index bd83c77 . . e8e50c4 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java 
 @ @ - 100 , 7 + 100 , 6 @ @ public class StickersModule extends AbsModule { 
 
 vms . removeAll ( remove ) ; 
 } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 } 
 return vms ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java 
 index b77ac37 . . fdeca48 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / DialogsActor . java 
 @ @ - 298 , 9 + 298 , 15 @ @ public class DialogsActor extends ModuleActor { 
 switch ( peer . getPeerType ( ) ) { 
 case PRIVATE : 
 User u = getUser ( peer . getPeerId ( ) ) ; 
 + if ( u = = null ) { 
 + return null ; 
 + } 
 return new PeerDesc ( u . getName ( ) , u . getAvatar ( ) ) ; 
 case GROUP : 
 Group g = getGroup ( peer . getPeerId ( ) ) ; 
 + if ( g = = null ) { 
 + return null ; 
 + } 
 return new PeerDesc ( g . getTitle ( ) , g . getAvatar ( ) ) ; 
 default : 
 return null ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java 
 index 2350be1 . . b92cf4d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / GroupedDialogsActor . java 
 @ @ - 127 , 10 + 127 , 16 @ @ public class GroupedDialogsActor extends ModuleActor { 
 Avatar avatar ; 
 if ( p . getPeerType ( ) = = PeerType . GROUP ) { 
 Group group = getGroup ( p . getPeerId ( ) ) ; 
 + if ( group = = null ) { 
 + continue ; 
 + } 
 title = group . getTitle ( ) ; 
 avatar = group . getAvatar ( ) ; 
 } else if ( p . getPeerType ( ) = = PeerType . PRIVATE ) { 
 User user = getUser ( p . getPeerId ( ) ) ; 
 + if ( user = = null ) { 
 + continue ; 
 + } 
 title = user . getName ( ) ; 
 avatar = user . getAvatar ( ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java 
 index 1afd14b . . 2b7a6cf 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ActorTrace . java 
 @ @ - 47 , 6 + 47 , 7 @ @ public class ActorTrace implements TraceInterface { 
 @ Override 
 public void onActorDie ( ActorRef ref , Envelope envelope , Exception e ) { 
 Log . w ( TAG , " Die ( " + ref . getPath ( ) + " ) by " + envelope . getMessage ( ) ) ; 
 - Log . e ( TAG , e ) ; 
 + / / Log . e ( TAG , e ) ; 
 + e . printStackTrace ( ) ; 
 } 
 }
