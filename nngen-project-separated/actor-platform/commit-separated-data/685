BLEU SCORE: 0.020244462660665517

TEST MSG: Merge branch ' master ' of https : / / github . com / actorapp / actor - platform
GENERATED MSG: fix ( server ) : start HttpApi explicitly

TEST DIFF (one line): diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala < nl > index 7c47ebe . . bf8b9cb 100644 < nl > - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala < nl > + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala < nl > @ @ - 30 , 8 + 30 , 8 @ @ private [ http ] final class AboutHttpHandler ( ) ( implicit system : ActorSystem ) exten < nl > el match { < nl > case e if e . startsWith ( " tcp " ) ⇒ Endpoints ( e : : tcp , tls , ws , wss ) < nl > case e if e . startsWith ( " tls " ) ⇒ Endpoints ( tcp , e : : tls , ws , wss ) < nl > - case e if e . startsWith ( " ws " ) ⇒ Endpoints ( tcp , tls , e : : ws , wss ) < nl > case e if e . startsWith ( " wss " ) ⇒ Endpoints ( tcp , tls , ws , e : : wss ) < nl > + case e if e . startsWith ( " ws " ) ⇒ Endpoints ( tcp , tls , e : : ws , wss ) < nl > } < nl > } < nl > ServerInfo ( ActorConfig . projectName , publicEndPoints ) < nl > diff - - git a / actor - server / notes / 1 . 0 . 152 . markdown b / actor - server / notes / 1 . 0 . 152 . markdown < nl > new file mode 100644 < nl > index 0000000 . . f38a231 < nl > - - - / dev / null < nl > + + + b / actor - server / notes / 1 . 0 . 152 . markdown < nl > @ @ - 0 , 0 + 1 @ @ < nl > + * : bug : Various bug fixes and stability improvements < nl > diff - - git a / actor - server / version . sbt b / actor - server / version . sbt < nl > index 23c9f02 . . 87b0a39 100644 < nl > - - - a / actor - server / version . sbt < nl > + + + b / actor - server / version . sbt < nl > @ @ - 1 + 1 @ @ < nl > - version in ThisBuild : = " 1 . 0 . 152 - SNAPSHOT " < nl > \ No newline at end of file < nl > + version in ThisBuild : = " 1 . 0 . 152 " < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > index 8e54282 . . 7c94e1a 100644 < nl > - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > @ @ - 39 , 8 + 39 , 6 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { < nl > } < nl > } < nl > < nl > - HttpApiFrontend . start ( system . settings . config ) < nl > - < nl > val authenticator : AsyncAuthenticator [ Boolean ] = { < nl > case p @ Credentials . Provided ( _ ) ⇒ < nl > for { < nl > @ @ - 51 , 6 + 49 , 9 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { < nl > < nl > val adminAuthenticator : AsyncAuthenticator [ Unit ] = < nl > authenticator andThen ( _ map ( isAdminOpt ⇒ if ( isAdminOpt . isDefined ) Some ( ( ) ) else None ) ) < nl > + < nl > + def start ( ) : Unit = < nl > + HttpApiFrontend . start ( system . settings . config ) < nl > } < nl > < nl > object HttpApi extends ExtensionId [ HttpApi ] with ExtensionIdProvider { < nl > diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > index c138818 . . 473ba73 100644 < nl > - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > @ @ - 266 , 7 + 266 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( < nl > Frontend . start ( serverConfig ) < nl > < nl > system . log . debug ( " Starting Http Api " ) < nl > - HttpApi ( system ) < nl > + HttpApi ( system ) . start ( ) < nl > < nl > ActorServer ( system ) < nl > } catch {

TEST DIFF:
diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala 
 index 7c47ebe . . bf8b9cb 100644 
 - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala 
 + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / info / AboutHttpHandler . scala 
 @ @ - 30 , 8 + 30 , 8 @ @ private [ http ] final class AboutHttpHandler ( ) ( implicit system : ActorSystem ) exten 
 el match { 
 case e if e . startsWith ( " tcp " ) ⇒ Endpoints ( e : : tcp , tls , ws , wss ) 
 case e if e . startsWith ( " tls " ) ⇒ Endpoints ( tcp , e : : tls , ws , wss ) 
 - case e if e . startsWith ( " ws " ) ⇒ Endpoints ( tcp , tls , e : : ws , wss ) 
 case e if e . startsWith ( " wss " ) ⇒ Endpoints ( tcp , tls , ws , e : : wss ) 
 + case e if e . startsWith ( " ws " ) ⇒ Endpoints ( tcp , tls , e : : ws , wss ) 
 } 
 } 
 ServerInfo ( ActorConfig . projectName , publicEndPoints ) 
 diff - - git a / actor - server / notes / 1 . 0 . 152 . markdown b / actor - server / notes / 1 . 0 . 152 . markdown 
 new file mode 100644 
 index 0000000 . . f38a231 
 - - - / dev / null 
 + + + b / actor - server / notes / 1 . 0 . 152 . markdown 
 @ @ - 0 , 0 + 1 @ @ 
 + * : bug : Various bug fixes and stability improvements 
 diff - - git a / actor - server / version . sbt b / actor - server / version . sbt 
 index 23c9f02 . . 87b0a39 100644 
 - - - a / actor - server / version . sbt 
 + + + b / actor - server / version . sbt 
 @ @ - 1 + 1 @ @ 
 - version in ThisBuild : = " 1 . 0 . 152 - SNAPSHOT " 
 \ No newline at end of file 
 + version in ThisBuild : = " 1 . 0 . 152 " 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 index 8e54282 . . 7c94e1a 100644 
 - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 @ @ - 39 , 8 + 39 , 6 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { 
 } 
 } 
 
 - HttpApiFrontend . start ( system . settings . config ) 
 - 
 val authenticator : AsyncAuthenticator [ Boolean ] = { 
 case p @ Credentials . Provided ( _ ) ⇒ 
 for { 
 @ @ - 51 , 6 + 49 , 9 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { 
 
 val adminAuthenticator : AsyncAuthenticator [ Unit ] = 
 authenticator andThen ( _ map ( isAdminOpt ⇒ if ( isAdminOpt . isDefined ) Some ( ( ) ) else None ) ) 
 + 
 + def start ( ) : Unit = 
 + HttpApiFrontend . start ( system . settings . config ) 
 } 
 
 object HttpApi extends ExtensionId [ HttpApi ] with ExtensionIdProvider { 
 diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 index c138818 . . 473ba73 100644 
 - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 @ @ - 266 , 7 + 266 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( 
 Frontend . start ( serverConfig ) 
 
 system . log . debug ( " Starting Http Api " ) 
 - HttpApi ( system ) 
 + HttpApi ( system ) . start ( ) 
 
 ActorServer ( system ) 
 } catch {
