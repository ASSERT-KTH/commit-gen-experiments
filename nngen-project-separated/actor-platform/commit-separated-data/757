BLEU SCORE: 0.2590647110307136

TEST MSG: feat ( iOS ) : Implemented Log In controller , Minor Auth UX improvements
GENERATED MSG: feat ( iOS ) : New Welcome Screen , starting of implementation of new signup

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java < nl > index 790cf4e . . d8334e8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java < nl > @ @ - 107 , 17 + 107 , 10 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > showFragment ( signFragment , false , false ) ; < nl > authType = AUTH _ TYPE _ PHONE ; < nl > break ; < nl > - case CODE _ VALIDATION _ CUSTOM : < nl > case CODE _ VALIDATION _ PHONE : < nl > - < nl > Fragment signInFragment = new SignInFragment ( ) ; < nl > Bundle args = new Bundle ( ) ; < nl > args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ PHONE ) ; < nl > - if ( state = = AuthState . CODE _ VALIDATION _ CUSTOM ) { < nl > - args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ CUSTOM ) ; < nl > - args . putString ( " authId " , signFragment . getAuthId ( ) ) ; < nl > - args . putString ( " authHint " , signFragment . getHintText ( ) ) ; < nl > - } < nl > signInFragment . setArguments ( args ) ; < nl > showFragment ( signInFragment , false , false ) ; < nl > break ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java < nl > index 6b9de89 . . 94141ed 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java < nl > @ @ - 9 , 8 + 9 , 6 @ @ import im . actor . sdk . controllers . fragment . BaseFragment ; < nl > < nl > public abstract class BaseAuthFragment extends BaseFragment { < nl > < nl > - private String authId ; < nl > - < nl > public BaseAuthFragment ( ) { < nl > < nl > } < nl > @ @ - 48 , 17 + 46 , 4 @ @ public abstract class BaseAuthFragment extends BaseFragment { < nl > } < nl > } ) ; < nl > } < nl > - < nl > - public String getAuthId ( ) { < nl > - return authId ; < nl > - } < nl > - < nl > - protected void setAuthId ( String authId ) { < nl > - this . authId = authId ; < nl > - } < nl > - < nl > - public String getHintText ( ) { < nl > - return null ; < nl > - } < nl > - < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 3b0065f . . 9a87951 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 166 , 7 + 166 , 6 @ @ < nl > 	 	 066A53391BC5456B000E606E / * ActorStyle . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53381BC5456B000E606E / * ActorStyle . swift * / ; } ; < nl > 	 	 066CBCDC1C8D419F004507E2 / * AAAuthEmailViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066CBCDB1C8D419F004507E2 / * AAAuthEmailViewController . swift * / ; } ; < nl > 	 	 068B39831C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / ; } ; < nl > - 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / ; } ; < nl > 	 	 069CF4CC1BCB909A00C66E12 / * CLBackspaceDetectingTextField . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / ; } ; < nl > 	 	 069CF4CD1BCB909A00C66E12 / * CLBackspaceDetectingTextField . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / ; } ; < nl > 	 	 069CF4CE1BCB909A00C66E12 / * CLToken . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C61BCB909A00C66E12 / * CLToken . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > @ @ - 181 , 6 + 180 , 7 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > + 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / ; } ; < nl > 	 	 06E322C91C69344A00D66F53 / * iOSCallsProvider . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / ; } ; < nl > 	 	 06E3230E1C69445C00D66F53 / * WebRTC . h in Headers * / = { isa = PBXBuildFile ; fileRef = 06E3230D1C6942C400D66F53 / * WebRTC . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 06E323111C694C1D00D66F53 / * WebRTCExt . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / ; } ; < nl > @ @ - 475 , 7 + 475 , 6 @ @ < nl > 	 	 066A53381BC5456B000E606E / * ActorStyle . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorStyle . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 066CBCDB1C8D419F004507E2 / * AAAuthEmailViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthEmailViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthCodeViewController . swift ; sourceTree = " < group > " ; } ; < nl > - 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLBackspaceDetectingTextField . h ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLBackspaceDetectingTextField . m ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4C61BCB909A00C66E12 / * CLToken . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLToken . h ; sourceTree = " < group > " ; } ; < nl > @ @ - 490 , 6 + 489 , 7 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthLogInViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = iOSCallsProvider . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E3230D1C6942C400D66F53 / * WebRTC . h * / = { isa = PBXFileReference ; lastKnownFileType = sourcecode . c . h ; path = WebRTC . h ; sourceTree = " < group > " ; } ; < nl > 	 	 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = WebRTCExt . swift ; sourceTree = " < group > " ; } ; < nl > @ @ - 896 , 13 + 896 , 13 @ @ < nl > 	 	 	 	 066A526B1BC50E83000E606E / * Cells * / , < nl > 	 	 	 	 066A526E1BC51007000E606E / * Views * / , < nl > 	 	 	 	 066CBCDA1C8D4121004507E2 / * Controllers * / , < nl > + 	 	 	 	 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / , < nl > 	 	 	 	 06C1D0761C8BC9FC00B73632 / * AAAuthNameViewController . swift * / , < nl > 	 	 	 	 06C1D07A1C8BFE5C00B73632 / * AAAuthPhoneViewController . swift * / , < nl > 	 	 	 	 066CBCDB1C8D419F004507E2 / * AAAuthEmailViewController . swift * / , < nl > 	 	 	 	 066A52631BC50E7B000E606E / * AAAuthCodeViewController . swift * / , < nl > - 	 	 	 	 066A52641BC50E7B000E606E / * AAAuthRegisterViewController . swift * / , < nl > 	 	 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / , < nl > - 	 	 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / , < nl > + 	 	 	 	 066A52641BC50E7B000E606E / * AAAuthRegisterViewController . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Auth ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1757 , 7 + 1757 , 6 @ @ < nl > 	 	 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / , < nl > 	 	 	 	 066A525E1BC503BB000E606E / * ActorApplicationDelegate . swift in Sources * / , < nl > 	 	 	 	 BED5A1F91C48396A0045FDB0 / * NYTPhotosViewController . m in Sources * / , < nl > - 	 	 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / , < nl > 	 	 	 	 066A53101BC53317000E606E / * AAWallpapperPreviewController . swift in Sources * / , < nl > 	 	 	 	 152AA8B91C2989270030DEEE / * UIView + SLKAdditions . m in Sources * / , < nl > 	 	 	 	 066A52F21BC52B02000E606E / * AASettingsPrivacyViewController . swift in Sources * / , < nl > @ @ - 1954 , 6 + 1953 , 7 @ @ < nl > 	 	 	 	 066A52421BC4EECD000E606E / * AATableViewHeader . swift in Sources * / , < nl > 	 	 	 	 066A52CD1BC521FA000E606E / * AADialogsListContentControllerDelegate . swift in Sources * / , < nl > 	 	 	 	 15D35F261C20186200E3717A / * framing . c in Sources * / , < nl > + 	 	 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / , < nl > 	 	 	 	 06E323111C694C1D00D66F53 / * WebRTCExt . swift in Sources * / , < nl > 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , < nl > 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift < nl > index ceaea0a . . ce3405d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift < nl > @ @ - 118 , 6 + 118 , 8 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate < nl > counterTimer . invalidate ( ) < nl > counterTimer = nil < nl > } < nl > + < nl > + codeTextField . resignFirstResponder ( ) < nl > } < nl > < nl > public override func viewWillLayoutSubviews ( ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > index f5868ae . . 6ed3802 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > @ @ - 55 , 6 + 55 , 7 @ @ public class AAAuthEmailViewController : AAAuthViewController { < nl > emailField . textColor = UIColor . alphaBlack ( 0 . 64 ) < nl > emailField . placeholder = " Your email " < nl > emailField . keyboardType = . EmailAddress < nl > + emailField . autocapitalizationType = . None < nl > < nl > emailFieldLine . backgroundColor = UIColor . alphaBlack ( 0 . 2 ) < nl > < nl > @ @ - 136 , 6 + 137 , 13 @ @ public class AAAuthEmailViewController : AAAuthViewController { < nl > < nl > public override func nextDidTap ( ) { < nl > let email = emailField . text ! < nl > + < nl > + if ! AATools . isValidEmail ( email ) { < nl > + shakeView ( emailField , originalX : view . width / 2 ) < nl > + shakeView ( emailFieldLine , originalX : view . width / 2 ) < nl > + return < nl > + } < nl > + < nl > executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in < nl > self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) ) < nl > } < nl > @ @ - 154 , 4 + 162 , 10 @ @ public class AAAuthEmailViewController : AAAuthViewController { < nl > public override func keyboardWillDisappear ( ) { < nl > scrollView . frame = CGRectMake ( 0 , 0 , view . width , view . height ) < nl > } < nl > + < nl > + public override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + < nl > + emailField . resignFirstResponder ( ) < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > new file mode 100644 < nl > index 0000000 . . 1e18f66 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > @ @ - 0 , 0 + 1 , 107 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public class AAAuthLogInViewController : AAAuthViewController { < nl > + < nl > + let scrollView = UIScrollView ( ) < nl > + < nl > + let welcomeLabel = UILabel ( ) < nl > + let field = UITextField ( ) < nl > + let fieldLine = UIView ( ) < nl > + < nl > + var isFirstAppear = true < nl > + < nl > + public override init ( ) { < nl > + super . init ( nibName : nil , bundle : nil ) < nl > + < nl > + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " dismiss " ) < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + public override func viewDidLoad ( ) { < nl > + < nl > + view . backgroundColor = UIColor . whiteColor ( ) < nl > + < nl > + scrollView . keyboardDismissMode = . OnDrag < nl > + scrollView . scrollEnabled = true < nl > + scrollView . alwaysBounceVertical = true < nl > + < nl > + welcomeLabel . font = UIFont . lightSystemFontOfSize ( 23 ) < nl > + welcomeLabel . text = " Log In to Actor " < nl > + welcomeLabel . textColor = UIColor . blackColor ( ) . alpha ( 0 . 87 ) < nl > + welcomeLabel . textAlignment = . Center < nl > + < nl > + field . placeholder = " Phone or Email " < nl > + field . keyboardType = . Default < nl > + field . autocapitalizationType = . None < nl > + / / field . addTarget ( self , action : " fieldDidChanged " , forControlEvents : . EditingChanged ) < nl > + < nl > + fieldLine . backgroundColor = UIColor . blackColor ( ) . alpha ( 0 . 2 ) < nl > + fieldLine . opaque = false < nl > + < nl > + scrollView . addSubview ( welcomeLabel ) < nl > + scrollView . addSubview ( field ) < nl > + scrollView . addSubview ( fieldLine ) < nl > + view . addSubview ( scrollView ) < nl > + < nl > + super . viewDidLoad ( ) < nl > + } < nl > + < nl > + public override func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + welcomeLabel . frame = CGRectMake ( 15 , 90 - 66 , view . width - 30 , 28 ) < nl > + < nl > + fieldLine . frame = CGRectMake ( 10 , 200 - 66 , view . width - 20 , 0 . 5 ) < nl > + field . frame = CGRectMake ( 20 , 156 - 66 , view . width - 40 , 44 ) < nl > + < nl > + scrollView . frame = view . bounds < nl > + scrollView . contentSize = CGSizeMake ( view . width , 240 - 66 ) < nl > + } < nl > + < nl > + public override func nextDidTap ( ) { < nl > + let value = field . text ! . trim ( ) < nl > + if value . length = = 0 { < nl > + shakeView ( field , originalX : 20 ) < nl > + shakeView ( fieldLine , originalX : 10 ) < nl > + return < nl > + } < nl > + if ( AATools . isValidEmail ( value ) ) { < nl > + executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( value ) , successBlock : { ( val ) - > Void in < nl > + self . navigateNext ( AAEmailAuthCodeViewController ( email : value ) ) < nl > + } ) < nl > + } else { < nl > + let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet < nl > + let stripped = value . strip ( numbersSet ) < nl > + if let parsed = Int64 ( stripped ) { < nl > + executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( jlong ( parsed ) ) , successBlock : { ( val ) - > Void in < nl > + self . navigateNext ( AAAuthCodeViewController ( phoneNumber : value ) ) < nl > + } ) < nl > + } else { < nl > + shakeView ( field , originalX : 20 ) < nl > + shakeView ( fieldLine , originalX : 10 ) < nl > + } < nl > + } < nl > + } < nl > + < nl > + public override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + < nl > + field . resignFirstResponder ( ) < nl > + } < nl > + < nl > + public override func viewWillAppear ( animated : Bool ) { < nl > + super . viewWillAppear ( animated ) < nl > + < nl > + if isFirstAppear { < nl > + isFirstAppear = false < nl > + field . becomeFirstResponder ( ) < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift < nl > index d084d99 . . 6be1c1b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift < nl > @ @ - 46 , 6 + 46 , 7 @ @ public class AAAuthNameViewController : AAAuthViewController { < nl > < nl > field . placeholder = " Your Name " < nl > field . keyboardType = . Default < nl > + field . autocapitalizationType = . Words < nl > field . addTarget ( self , action : " fieldDidChanged " , forControlEvents : . EditingChanged ) < nl > < nl > fieldLine . backgroundColor = UIColor . blackColor ( ) . alpha ( 0 . 2 ) < nl > @ @ - 90 , 12 + 91 , 6 @ @ public class AAAuthNameViewController : AAAuthViewController { < nl > } < nl > } < nl > < nl > - public override func viewDidAppear ( animated : Bool ) { < nl > - super . viewDidAppear ( animated ) < nl > - < nl > - field . becomeFirstResponder ( ) < nl > - } < nl > - < nl > public override func nextDidTap ( ) { < nl > let name = field . text ! . trim ( ) < nl > if name . length > 0 { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > index 1a40ed9 . . 8a8e6d5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > @ @ - 184 , 6 + 184 , 7 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe < nl > < nl > override func nextDidTap ( ) { < nl > let number = phoneNumberLabel . phoneNumber . toJLong ( ) < nl > + < nl > executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( number ) ) { ( val ) - > Void in < nl > self . navigateNext ( AAAuthCodeViewController ( phoneNumber : " \ ( number ) " ) ) < nl > } < nl > @ @ - 202 , 4 + 203 , 10 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe < nl > override func keyboardWillDisappear ( ) { < nl > scrollView . frame = CGRectMake ( 0 , 0 , view . width , view . height ) < nl > } < nl > + < nl > + override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + < nl > + phoneNumberLabel . resignFirstResponder ( ) < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift < nl > index 9c90aa0 . . ea7e5a0 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift < nl > @ @ - 92 , 7 + 92 , 9 @ @ public class AAWelcomeController : AAViewController { < nl > } < nl > < nl > public func signInAction ( ) { < nl > - < nl > + / / TODO : Remove BG after auth ? < nl > + UIApplication . sharedApplication ( ) . keyWindow ? . backgroundColor = UIColor ( red : 94 , green : 142 , blue : 192 ) < nl > + self . presentElegantViewController ( AAAuthNavigationController ( rootViewController : AAAuthLogInViewController ( ) ) ) < nl > } < nl > < nl > public override func viewWillAppear ( animated : Bool ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift < nl > index df912e3 . . 50ac221 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift < nl > @ @ - 50 , 7 + 50 , 7 @ @ class AAEmailAuthCodeViewController : AAAuthViewController { < nl > codeTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) < nl > codeTextField . backgroundColor = UIColor . whiteColor ( ) < nl > codeTextField . placeholder = AALocalized ( " AuthEmailCodeFieldHint " ) < nl > - codeTextField . keyboardType = UIKeyboardType . EmailAddress < nl > + codeTextField . keyboardType = UIKeyboardType . NumberPad < nl > codeTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center < nl > codeTextField . textAlignment = . Center < nl > view . addSubview ( codeTextField ) < nl > @ @ - 121 , 6 + 121 , 11 @ @ class AAEmailAuthCodeViewController : AAAuthViewController { < nl > codeTextField . becomeFirstResponder ( ) < nl > } < nl > < nl > + override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + codeTextField . resignFirstResponder ( ) < nl > + } < nl > + < nl > / / Actions < nl > < nl > func nextButtonPressed ( ) { < nl > @ @ - 137 , 9 + 142 , 10 @ @ class AAEmailAuthCodeViewController : AAAuthViewController { < nl > let state = Actor . getAuthState ( ) . ordinal ( ) < nl > < nl > if state = = ACAuthState . LOGGED _ IN ( ) . ordinal ( ) { < nl > - < nl > + self . codeTextField . resignFirstResponder ( ) < nl > / / If logged in state : end authentication < nl > self . onAuthenticated ( ) < nl > + < nl > } else if state = = ACAuthState . SIGN _ UP ( ) . ordinal ( ) { < nl > < nl > / / Is signup go to signup controller < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift < nl > deleted file mode 100644 < nl > index 584adfd . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift < nl > + + + / dev / null < nl > @ @ - 1 , 161 + 0 , 0 @ @ < nl > - / / < nl > - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > - / / < nl > - < nl > - import Foundation < nl > - < nl > - class AAEmailAuthViewController : AAAuthViewController { < nl > - < nl > - / / Views < nl > - < nl > - private var grayBackground : UIView ! < nl > - private var titleLabel : UILabel ! < nl > - private var emailTextField : UITextField ! < nl > - private var emailTextSeparator = UIView ( ) < nl > - private var hintLabel : UILabel ! < nl > - private var navigationBarSeparator : UIView ! < nl > - < nl > - / / Constructors < nl > - < nl > - override init ( ) { < nl > - super . init ( ) < nl > - < nl > - self . content = ACAllEvents _ Auth . AUTH _ PHONE ( ) < nl > - } < nl > - < nl > - required init ( coder aDecoder : NSCoder ) { < nl > - fatalError ( " init ( coder : ) has not been implemented " ) < nl > - } < nl > - < nl > - / / Layouting < nl > - < nl > - override func loadView ( ) { < nl > - super . loadView ( ) < nl > - < nl > - view . backgroundColor = UIColor . whiteColor ( ) < nl > - < nl > - grayBackground = UIView ( ) < nl > - grayBackground . backgroundColor = UIColor ( rgb : 0xf2f2f2 ) < nl > - view . addSubview ( grayBackground ) < nl > - < nl > - titleLabel = UILabel ( ) < nl > - titleLabel . backgroundColor = UIColor . clearColor ( ) < nl > - titleLabel . textColor = UIColor . blackColor ( ) < nl > - titleLabel . font = AADevice . isiPad < nl > - ? UIFont . thinSystemFontOfSize ( 50 . 0 ) < nl > - : UIFont . lightSystemFontOfSize ( 30 ) < nl > - < nl > - titleLabel . textLocalized = " AuthEmailTitle " < nl > - grayBackground . addSubview ( titleLabel ) < nl > - < nl > - emailTextField = UITextField ( ) < nl > - emailTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) < nl > - emailTextField . backgroundColor = UIColor . whiteColor ( ) < nl > - emailTextField . placeholder = AALocalized ( " AuthEmailFieldHint " ) < nl > - emailTextField . keyboardType = UIKeyboardType . EmailAddress < nl > - emailTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center < nl > - emailTextField . textAlignment = . Center < nl > - emailTextField . autocapitalizationType = . None < nl > - / / phoneTextField . delegate = self < nl > - view . addSubview ( emailTextField ) < nl > - < nl > - emailTextSeparator = UIView ( ) < nl > - emailTextSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) < nl > - view . addSubview ( emailTextSeparator ) < nl > - < nl > - navigationBarSeparator = UIView ( ) < nl > - navigationBarSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) < nl > - view . addSubview ( navigationBarSeparator ) < nl > - < nl > - hintLabel = UILabel ( ) < nl > - hintLabel . font = UIFont . systemFontOfSize ( 17 . 0 ) < nl > - hintLabel . textColor = UIColor ( rgb : 0x999999 ) < nl > - hintLabel . lineBreakMode = NSLineBreakMode . ByWordWrapping < nl > - hintLabel . backgroundColor = UIColor . whiteColor ( ) < nl > - hintLabel . textAlignment = NSTextAlignment . Center < nl > - hintLabel . contentMode = UIViewContentMode . Center < nl > - hintLabel . numberOfLines = 0 < nl > - hintLabel . textLocalized = " AuthEmailHint " < nl > - view . addSubview ( hintLabel ) < nl > - < nl > - / / Configure navigation bar < nl > - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationNext " ) , style : UIBarButtonItemStyle . Done , target : self , action : " nextButtonPressed " ) < nl > - } < nl > - < nl > - override func viewWillLayoutSubviews ( ) { < nl > - super . viewWillLayoutSubviews ( ) < nl > - < nl > - let screenSize = UIScreen . mainScreen ( ) . bounds . size < nl > - let isWidescreen = screenSize . width > 320 | | screenSize . height > 480 < nl > - let isPortraint = screenSize . width < screenSize . height < nl > - < nl > - let bgSize = AADevice . isiPad < nl > - ? ( isPortraint ? 304 . 0 : 140 ) < nl > - : ( isWidescreen ? 131 . 0 : 90 . 0 ) < nl > - grayBackground . frame = CGRect ( x : 0 . 0 , y : 0 . 0 , width : screenSize . width , height : CGFloat ( bgSize ) ) < nl > - < nl > - let padding = AADevice . isiPad < nl > - ? ( isPortraint ? 48 : 20 ) < nl > - : ( 20 ) < nl > - titleLabel . sizeToFit ( ) < nl > - titleLabel . frame = CGRect ( x : ( screenSize . width - titleLabel . frame . size . width ) / 2 . 0 , y : grayBackground . frame . height - titleLabel . frame . size . height - CGFloat ( padding ) , width : titleLabel . frame . size . width , height : titleLabel . frame . size . height ) < nl > - < nl > - navigationBarSeparator . frame = CGRect ( x : 0 , y : grayBackground . bounds . size . height , width : screenSize . width , height : 0 . 5 ) < nl > - < nl > - let fieldWidth : CGFloat = AADevice . isiPad < nl > - ? ( 520 ) < nl > - : ( screenSize . width ) < nl > - < nl > - emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 32 , y : navigationBarSeparator . top + 16 , width : fieldWidth - 10 . 0 - 64 , height : 50 - 2 ) < nl > - < nl > - emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 , y : navigationBarSeparator . frame . origin . y + navigationBarSeparator . bounds . size . height , width : fieldWidth , height : 56 . 0 ) < nl > - < nl > - emailTextSeparator . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 22 , y : emailTextField . frame . origin . y + emailTextField . height , width : fieldWidth - 44 , height : 0 . 5 ) < nl > - < nl > - let hintPadding : CGFloat = AADevice . isiPad < nl > - ? ( isPortraint ? 460 . 0 : 274 . 0 ) < nl > - : ( isWidescreen ? 214 . 0 : 184 . 0 ) < nl > - < nl > - let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) < nl > - hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; < nl > - } < nl > - < nl > - / / Constoller states < nl > - < nl > - override func viewDidAppear ( animated : Bool ) { < nl > - super . viewDidAppear ( animated ) < nl > - emailTextField . becomeFirstResponder ( ) < nl > - } < nl > - < nl > - / / Actions < nl > - < nl > - func nextButtonPressed ( ) { < nl > - < nl > - if emailTextField . text = = nil | | ! isValidEmail ( emailTextField . text ! ) { < nl > - let fieldWidth : CGFloat = AADevice . isiPad < nl > - ? ( 520 ) < nl > - : ( view . width ) < nl > - self . shakeView ( emailTextField , originalX : ( view . width - fieldWidth ) / 2 ) < nl > - return < nl > - } < nl > - < nl > - let email = emailTextField . text ! < nl > - executeSafe ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in < nl > - self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) , removeCurrent : false ) < nl > - } < nl > - } < nl > - < nl > - func isValidEmail ( testStr : String ) - > Bool { < nl > - < nl > - let emailRegEx = " ^ [ A - Z0 - 9a - z . _ % + - ] + @ [ A - Za - z0 - 9 . - ] + \ \ . [ A - Za - z ] { 2 , 6 } " < nl > - < nl > - let emailTest = NSPredicate ( format : " SELF MATCHES % @ " , emailRegEx ) < nl > - return emailTest . evaluateWithObject ( testStr ) < nl > - } < nl > - < nl > - / / Events < nl > - < nl > - func textField ( textField : UITextField , shouldChangeCharactersInRange range : NSRange , replacementString string : String ) - > Bool { < nl > - return true < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift < nl > index c7408f6 . . 1e9584a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift < nl > @ @ - 14 , 6 + 14 , 14 @ @ class AATools { < nl > class func zipDirectoryCommand ( from : String , to : String ) - > ACCommand { < nl > return ZipCommand ( dir : from , to : to ) < nl > } < nl > + < nl > + class func isValidEmail ( testStr : String ) - > Bool { < nl > + < nl > + let emailRegEx = " ^ [ A - Z0 - 9a - z . _ % + - ] + @ [ A - Za - z0 - 9 . - ] + \ \ . [ A - Za - z ] { 2 , 6 } " < nl > + < nl > + let emailTest = NSPredicate ( format : " SELF MATCHES % @ " , emailRegEx ) < nl > + return emailTest . evaluateWithObject ( testStr ) < nl > + } < nl > } < nl > < nl > private class ZipCommand : BackgroundCommand { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java < nl > index a677dbc . . df968a0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java < nl > @ @ - 15 , 7 + 15 , 6 @ @ public enum AuthState { < nl > CODE _ VALIDATION _ PHONE , < nl > CODE _ VALIDATION _ EMAIL , < nl > PASSWORD _ VALIDATION , < nl > - CODE _ VALIDATION _ CUSTOM , < nl > GET _ OAUTH _ PARAMS , < nl > COMPLETE _ OAUTH , < nl > SIGN _ UP , < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 244a97b . . 6c348f3 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 9 , 6 + 9 , 7 @ @ import java . util . ArrayList ; < nl > import im . actor . core . ApiConfiguration ; < nl > import im . actor . core . AuthState ; < nl > import im . actor . core . api . ApiEmailActivationType ; < nl > + import im . actor . core . api . ApiPhoneActivationType ; < nl > import im . actor . core . api . ApiSex ; < nl > import im . actor . core . api . rpc . RequestCompleteOAuth2 ; < nl > import im . actor . core . api . rpc . RequestGetOAuth2Params ; < nl > @ @ - 111 , 7 + 112 , 7 @ @ public class Authentication { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > - ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + ArrayList < String > langs = new ArrayList < > ( ) ; < nl > for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > langs . add ( s ) ; < nl > } < nl > @ @ - 146 , 7 + 147 , 7 @ @ public class Authentication { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > - ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + ArrayList < String > langs = new ArrayList < > ( ) ; < nl > for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > langs . add ( s ) ; < nl > } < nl > @ @ - 170 , 6 + 171 , 8 @ @ public class Authentication { < nl > state = AuthState . CODE _ VALIDATION _ EMAIL ; < nl > } else if ( emailActivationType . equals ( ApiEmailActivationType . PASSWORD ) ) { < nl > state = AuthState . PASSWORD _ VALIDATION ; < nl > + } else { < nl > + state = AuthState . CODE _ VALIDATION _ EMAIL ; < nl > } < nl > < nl > im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > @ @ - 199 , 7 + 202 , 7 @ @ public class Authentication { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > - ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + ArrayList < String > langs = new ArrayList < > ( ) ; < nl > for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > langs . add ( s ) ; < nl > } < nl > @ @ - 244 , 7 + 247 , 7 @ @ public class Authentication { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > - ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + ArrayList < String > langs = new ArrayList < > ( ) ; < nl > for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > langs . add ( s ) ; < nl > } < nl > @ @ - 261 , 7 + 264 , 13 @ @ public class Authentication { < nl > modules . getPreferences ( ) . putLong ( KEY _ PHONE , phone ) ; < nl > modules . getPreferences ( ) . putString ( KEY _ TRANSACTION _ HASH , response . getTransactionHash ( ) ) ; < nl > < nl > - state = AuthState . CODE _ VALIDATION _ PHONE ; < nl > + if ( response . getActivationType ( ) = = ApiPhoneActivationType . CODE ) { < nl > + state = AuthState . CODE _ VALIDATION _ PHONE ; < nl > + } else if ( response . getActivationType ( ) = = ApiPhoneActivationType . PASSWORD ) { < nl > + state = AuthState . PASSWORD _ VALIDATION ; < nl > + } else { < nl > + state = AuthState . CODE _ VALIDATION _ PHONE ; < nl > + } < nl > < nl > im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > @ Override < nl > @ @ - 518 , 19 + 527 , 8 @ @ public class Authentication { < nl > modules . getUpdatesModule ( ) . onUpdateReceived ( new LoggedIn ( response , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > - < nl > state = AuthState . LOGGED _ IN ; < nl > - < nl > callback . onResult ( state ) ; < nl > - < nl > - / / Notify ActorAnalytics < nl > - User user = modules . getUsersModule ( ) . getUsersStorage ( ) . getValue ( myUid ) ; < nl > - ArrayList < Long > records = new ArrayList < Long > ( ) ; < nl > - for ( ContactRecord contactRecord : user . getRecords ( ) ) { < nl > - if ( contactRecord . getRecordType ( ) = = ContactRecordType . PHONE ) { < nl > - records . add ( Long . parseLong ( contactRecord . getRecordData ( ) ) ) ; < nl > - } < nl > - } < nl > } < nl > } ) ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index b63b5f5 . . a71e545 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 175 , 6 + 175 , 8 @ @ < nl > 	 	 069CF4D11BCB909A00C66E12 / * CLTokenInputView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4C91BCB909A00C66E12 / * CLTokenInputView . m * / ; } ; < nl > 	 	 069CF4D21BCB909A00C66E12 / * CLTokenView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4CA1BCB909A00C66E12 / * CLTokenView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 069CF4D31BCB909A00C66E12 / * CLTokenView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4CB1BCB909A00C66E12 / * CLTokenView . m * / ; } ; < nl > + 	 	 06C1D0771C8BC9FC00B73632 / * AAAuthAskName . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06C1D0761C8BC9FC00B73632 / * AAAuthAskName . swift * / ; } ; < nl > + 	 	 06C1D07B1C8BFE5C00B73632 / * AAAuthAskPhone . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06C1D07A1C8BFE5C00B73632 / * AAAuthAskPhone . swift * / ; } ; < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > @ @ - 481 , 6 + 483 , 8 @ @ < nl > 	 	 069CF4C91BCB909A00C66E12 / * CLTokenInputView . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLTokenInputView . m ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4CA1BCB909A00C66E12 / * CLTokenView . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLTokenView . h ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4CB1BCB909A00C66E12 / * CLTokenView . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLTokenView . m ; sourceTree = " < group > " ; } ; < nl > + 	 	 06C1D0761C8BC9FC00B73632 / * AAAuthAskName . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthAskName . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06C1D07A1C8BFE5C00B73632 / * AAAuthAskPhone . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthAskPhone . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > @ @ - 521 , 7 + 525 , 7 @ @ < nl > 	 	 153F6B3C1C2A9B1900C0B960 / * begin _ record . caf * / = { isa = PBXFileReference ; lastKnownFileType = file ; path = begin _ record . caf ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVoiceCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleStickerCell . swift ; sourceTree = " < group > " ; } ; < nl > - 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthWelcomeController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; name = AAAuthWelcomeController . swift ; path = Auth / AAAuthWelcomeController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabelDelegate . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabel . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATermsController . swift ; sourceTree = " < group > " ; } ; < nl > @ @ - 865 , 6 + 869 , 7 @ @ < nl > 	 	 066A525F1BC50E53000E606E / * Controllers * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > + 	 	 	 	 06C1D0751C8BC55100B73632 / * Welcome * / , < nl > 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , < nl > 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , < nl > 	 	 	 	 066A53021BC53171000E606E / * Contacts * / , < nl > @ @ - 887 , 13 + 892 , 14 @ @ < nl > 	 	 	 children = ( < nl > 	 	 	 	 066A526B1BC50E83000E606E / * Cells * / , < nl > 	 	 	 	 066A526E1BC51007000E606E / * Views * / , < nl > + 	 	 	 	 06C1D0761C8BC9FC00B73632 / * AAAuthAskName . swift * / , < nl > + 	 	 	 	 06C1D07A1C8BFE5C00B73632 / * AAAuthAskPhone . swift * / , < nl > 	 	 	 	 066A52631BC50E7B000E606E / * AAAuthCodeViewController . swift * / , < nl > 	 	 	 	 066A52611BC50E7B000E606E / * AAAuthCountriesViewController . swift * / , < nl > 	 	 	 	 065974A41BC621F100B8C7DF / * AAAuthNavigationController . swift * / , < nl > 	 	 	 	 066A52621BC50E7B000E606E / * AAAuthPhoneViewController . swift * / , < nl > 	 	 	 	 066A52641BC50E7B000E606E / * AAAuthRegisterViewController . swift * / , < nl > 	 	 	 	 066A52651BC50E7B000E606E / * AAAuthViewController . swift * / , < nl > - 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , < nl > 	 	 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / , < nl > 	 	 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / , < nl > 	 	 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / , < nl > @ @ - 1179 , 6 + 1185 , 14 @ @ < nl > 	 	 	 path = CLTokenInputView ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > 	 	 } ; < nl > + 	 	 06C1D0751C8BC55100B73632 / * Welcome * / = { < nl > + 	 	 	 isa = PBXGroup ; < nl > + 	 	 	 children = ( < nl > + 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , < nl > + 	 	 	 ) ; < nl > + 	 	 	 name = Welcome ; < nl > + 	 	 	 sourceTree = " < group > " ; < nl > + 	 	 } ; < nl > 	 	 06E322CB1C69392F00D66F53 / * Libs * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > @ @ - 1794 , 6 + 1808 , 7 @ @ < nl > 	 	 	 	 065A06B61C6CEFE00012EA09 / * CocoaWebRTCRuntime . swift in Sources * / , < nl > 	 	 	 	 15D35F5A1C20187E00E3717A / * AATimer . m in Sources * / , < nl > 	 	 	 	 066A52381BC4EEBA000E606E / * AAHeaderCell . swift in Sources * / , < nl > + 	 	 	 	 06C1D0771C8BC9FC00B73632 / * AAAuthAskName . swift in Sources * / , < nl > 	 	 	 	 066A524B1BC4EF49000E606E / * AAViewController . swift in Sources * / , < nl > 	 	 	 	 066A51521BC4BE34000E606E / * Logs . swift in Sources * / , < nl > 	 	 	 	 066A52D71BC52378000E606E / * AAContactsListContentControllerDelegate . swift in Sources * / , < nl > @ @ - 1838 , 6 + 1853 , 7 @ @ < nl > 	 	 	 	 066A53041BC53177000E606E / * AAContactsViewController . swift in Sources * / , < nl > 	 	 	 	 066A51801BC4C373000E606E / * FMDatabasePool . m in Sources * / , < nl > 	 	 	 	 06129AA91C8394700099286B / * AAAudioManager . swift in Sources * / , < nl > + 	 	 	 	 06C1D07B1C8BFE5C00B73632 / * AAAuthAskPhone . swift in Sources * / , < nl > 	 	 	 	 066A518F1BC4C383000E606E / * iOSPhoneBookProvider . swift in Sources * / , < nl > 	 	 	 	 066A530B1BC531A2000E606E / * AAUserViewController . swift in Sources * / , < nl > 	 	 	 	 06E3C5B81C80EE21004776CD / * AACircleButton . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 18e4ddb < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 23 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " actorLogoMessenger . png " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " actorLogoMessenger @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " actorLogoMessenger @ 3x . png " , < nl > + " scale " : " 3x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger . png < nl > new file mode 100644 < nl > index 0000000 . . 17d7d17 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 09ec973 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 3x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 3x . png < nl > new file mode 100644 < nl > index 0000000 . . 1a54129 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 3x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 425eb4d . . afc0843 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 431 , 17 + 431 , 17 @ @ import PushKit < nl > } < nl > window . rootViewController = controller ! < nl > } else { < nl > - var controller : UIViewController ! = delegate . actorControllerForAuthStart ( ) < nl > - if controller = = nil { < nl > - if self . authStrategy = = . PhoneOnly { < nl > - controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) < nl > - } else if self . authStrategy = = . EmailOnly { < nl > - controller = AAAuthNavigationController ( rootViewController : AAEmailAuthViewController ( ) ) < nl > - } else { < nl > - / / ? ? ? < nl > - } < nl > - } < nl > - window . rootViewController = controller ! < nl > + / / var controller : UIViewController ! = delegate . actorControllerForAuthStart ( ) < nl > + / / if controller = = nil { < nl > + / / if self . authStrategy = = . PhoneOnly { < nl > + / / controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) < nl > + / / } else if self . authStrategy = = . EmailOnly { < nl > + / / controller = AAAuthNavigationController ( rootViewController : AAEmailAuthViewController ( ) ) < nl > + / / } else { < nl > + / / / / ? ? ? < nl > + / / } < nl > + / / } < nl > + window . rootViewController = AAWelcomeController ( ) < nl > } < nl > < nl > / / Bind Status Bar connecting < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskName . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskName . swift < nl > new file mode 100644 < nl > index 0000000 . . 17b2285 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskName . swift < nl > @ @ - 0 , 0 + 1 , 101 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + class AAAuthAskName : AAAuthViewController { < nl > + < nl > + let welcomeLabel = UILabel ( ) < nl > + let field = UITextField ( ) < nl > + let fieldLine = UIView ( ) < nl > + let fieldSuccess = UILabel ( ) < nl > + < nl > + var isFirstAppear = true < nl > + < nl > + override init ( ) { < nl > + super . init ( nibName : nil , bundle : nil ) < nl > + < nl > + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " dismiss " ) < nl > + } < nl > + < nl > + required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + override func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + view . backgroundColor = UIColor . whiteColor ( ) < nl > + < nl > + welcomeLabel . font = UIFont . lightSystemFontOfSize ( 23 ) < nl > + welcomeLabel . text = " Hi ! What ' s your name ? " < nl > + welcomeLabel . textColor = UIColor . blackColor ( ) . alpha ( 0 . 87 ) < nl > + welcomeLabel . textAlignment = . Center < nl > + < nl > + fieldSuccess . font = UIFont . systemFontOfSize ( 18 ) < nl > + fieldSuccess . text = " Name looks great ! " < nl > + fieldSuccess . textColor = UIColor . greenColor ( ) < nl > + fieldSuccess . textAlignment = . Left < nl > + fieldSuccess . hidden = true < nl > + < nl > + field . placeholder = " Your Name " < nl > + field . addTarget ( self , action : " fieldDidChanged " , forControlEvents : . EditingChanged ) < nl > + < nl > + fieldLine . backgroundColor = UIColor . blackColor ( ) . alpha ( 0 . 2 ) < nl > + fieldLine . opaque = false < nl > + < nl > + view . addSubview ( welcomeLabel ) < nl > + view . addSubview ( fieldLine ) < nl > + view . addSubview ( field ) < nl > + view . addSubview ( fieldSuccess ) < nl > + } < nl > + < nl > + override func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + welcomeLabel . frame = CGRectMake ( 15 , 90 , view . width - 30 , 28 ) < nl > + fieldLine . frame = CGRectMake ( 10 , 200 , view . width - 20 , 0 . 5 ) < nl > + field . frame = CGRectMake ( 20 , 156 , view . width - 40 , 44 ) < nl > + fieldSuccess . frame = CGRectMake ( 20 , field . bottom + 15 , view . width - 40 , 44 ) < nl > + } < nl > + < nl > + func fieldDidChanged ( ) { < nl > + if field . text ! . trim ( ) . length > 0 { < nl > + fieldSuccess . hidden = false < nl > + } else { < nl > + fieldSuccess . hidden = true < nl > + } < nl > + } < nl > + < nl > + override func viewWillAppear ( animated : Bool ) { < nl > + super . viewWillAppear ( animated ) < nl > + < nl > + if isFirstAppear { < nl > + isFirstAppear = false < nl > + field . becomeFirstResponder ( ) < nl > + } < nl > + } < nl > + < nl > + override func viewDidAppear ( animated : Bool ) { < nl > + super . viewDidAppear ( animated ) < nl > + < nl > + field . becomeFirstResponder ( ) < nl > + } < nl > + < nl > + override func nextDidTap ( ) { < nl > + let name = field . text ! . trim ( ) < nl > + if name . length > 0 { < nl > + navigateNext ( AAAuthAskPhone ( name : name ) ) < nl > + } else { < nl > + shakeView ( field , originalX : 20 ) < nl > + shakeView ( fieldLine , originalX : 10 ) < nl > + } < nl > + } < nl > + < nl > + override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + < nl > + field . resignFirstResponder ( ) < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskPhone . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskPhone . swift < nl > new file mode 100644 < nl > index 0000000 . . 9cff77d < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskPhone . swift < nl > @ @ - 0 , 0 + 1 , 28 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + class AAAuthAskPhone : AAAuthViewController { < nl > + < nl > + let name : String < nl > + < nl > + init ( name : String ) { < nl > + self . name = name < nl > + super . init ( ) < nl > + < nl > + navigationItem . title = " Phone Number " < nl > + } < nl > + < nl > + required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + override func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + view . backgroundColor = UIColor . whiteColor ( ) < nl > + } < nl > + < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift < nl > index 0336da8 . . dbfe321 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift < nl > @ @ - 11 , 6 + 11 , 9 @ @ public class AAAuthNavigationController : UINavigationController { < nl > < nl > navigationBar . setTransparentBackground ( ) < nl > navigationBar . tintColor = ActorSDK . sharedActor ( ) . style . authTintColor < nl > + navigationBar . hairlineHidden = true < nl > + < nl > + view . backgroundColor = UIColor . whiteColor ( ) < nl > } < nl > < nl > public override func viewWillAppear ( animated : Bool ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift < nl > index 7dee9a6 . . 58260a1 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift < nl > @ @ - 6 , 8 + 6 , 92 @ @ import Foundation < nl > < nl > public class AAAuthViewController : AAViewController { < nl > < nl > + public let nextBar = UIView ( ) < nl > + public let nextBarButton = UIButton ( ) < nl > + private let nextBarLine = UIView ( ) < nl > + private var keyboardHeight : CGFloat = 0 < nl > + < nl > + override public func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + nextBarButton . setTitle ( " Next " , forState : . Normal ) < nl > + nextBarButton . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) < nl > + nextBarButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( red : 94 , green : 142 , blue : 192 ) , radius : 4 ) , forState : . Normal ) < nl > + nextBarButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( red : 94 , green : 142 , blue : 192 ) . alpha ( 0 . 7 ) , radius : 4 ) , forState : . Highlighted ) < nl > + nextBarButton . addTarget ( self , action : " nextDidTap " , forControlEvents : . TouchUpInside ) < nl > + < nl > + nextBarLine . backgroundColor = UIColor . alphaBlack ( 0 . 2 ) < nl > + < nl > + nextBar . addSubview ( nextBarButton ) < nl > + nextBar . addSubview ( nextBarLine ) < nl > + < nl > + view . addSubview ( nextBar ) < nl > + } < nl > + < nl > + override public func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + layoutNextBar ( ) < nl > + } < nl > + < nl > + override public func viewWillAppear ( animated : Bool ) { < nl > + super . viewWillAppear ( animated ) < nl > + < nl > + / / Forcing initial layout before keyboard show to avoid weird animations < nl > + layoutNextBar ( ) < nl > + < nl > + NSNotificationCenter . defaultCenter ( ) . addObserver ( self , selector : " keyboardWillAppear : " , name : UIKeyboardWillShowNotification , object : nil ) < nl > + NSNotificationCenter . defaultCenter ( ) . addObserver ( self , selector : " keyboardWillDisappear : " , name : UIKeyboardWillHideNotification , object : nil ) < nl > + } < nl > + < nl > + func keyboardWillAppear ( notification : NSNotification ) { < nl > + let dict = notification . userInfo ! < nl > + let rect = dict [ UIKeyboardFrameBeginUserInfoKey ] ! . CGRectValue < nl > + < nl > + let orientation = UIApplication . sharedApplication ( ) . statusBarOrientation < nl > + let frameInWindow = self . view . superview ! . convertRect ( view . bounds , toView : nil ) < nl > + let windowBounds = view . window ! . bounds < nl > + < nl > + let keyboardTop : CGFloat = windowBounds . size . height - rect . height < nl > + let heightCoveredByKeyboard : CGFloat < nl > + if AADevice . isiPad { < nl > + if orientation = = . LandscapeLeft | | orientation = = . LandscapeRight { < nl > + heightCoveredByKeyboard = frameInWindow . maxY - keyboardTop - 52 / * ? ? ? * / < nl > + } else if orientation = = . Portrait | | orientation = = . PortraitUpsideDown { < nl > + heightCoveredByKeyboard = CGRectGetMaxY ( frameInWindow ) - keyboardTop < nl > + } else { < nl > + heightCoveredByKeyboard = 0 < nl > + } < nl > + } else { < nl > + heightCoveredByKeyboard = rect . height < nl > + } < nl > + < nl > + keyboardHeight = max ( 0 , heightCoveredByKeyboard ) < nl > + layoutNextBar ( ) < nl > + } < nl > + < nl > + private func layoutNextBar ( ) { < nl > + nextBar . frame = CGRectMake ( 0 , view . height - 44 - keyboardHeight , view . width , 44 ) < nl > + nextBarButton . frame = CGRectMake ( nextBar . width - 95 , 6 , 85 , 32 ) < nl > + nextBarLine . frame = CGRectMake ( 0 , 0 , nextBar . width , 0 . 5 ) < nl > + } < nl > + < nl > + func keyboardWillDisappear ( notification : NSNotification ) { < nl > + keyboardHeight = 0 < nl > + layoutNextBar ( ) < nl > + } < nl > + < nl > + override public func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + < nl > + NSNotificationCenter . defaultCenter ( ) . removeObserver ( self ) < nl > + } < nl > + < nl > / / / Call this method when authentication successful < nl > public func onAuthenticated ( ) { < nl > ActorSDK . sharedActor ( ) . didLoggedIn ( ) < nl > } < nl > + < nl > + public func nextDidTap ( ) { < nl > + < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift < nl > index d80486c . . eb93051 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift < nl > @ @ - 3 , 112 + 3 , 91 @ @ < nl > / / < nl > < nl > import UIKit < nl > + import ElegantPresentations < nl > < nl > - class AAWelcomeController : UIViewController { < nl > + public class AAWelcomeController : AAViewController { < nl > < nl > - var backgroundImage : UIImageView ! < nl > + / / var backgroundImage : UIImageView ! < nl > < nl > - var logoView : UIImageView ! < nl > - var appNameLabel : UILabel ! < nl > - var someInfoLabel : UILabel ! < nl > + let logoView : UIImageView = UIImageView ( ) < nl > + let appNameLabel : UILabel = UILabel ( ) < nl > + let someInfoLabel : UILabel = UILabel ( ) < nl > + let signupButton : UIButton = UIButton ( ) < nl > + let signinButton : UIButton = UIButton ( ) < nl > < nl > - var doneButton : UIButton ! < nl > - < nl > - < nl > - override func loadView ( ) { < nl > + public override init ( ) { < nl > + super . init ( nibName : nil , bundle : nil ) < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + public override func loadView ( ) { < nl > super . loadView ( ) < nl > < nl > - self . backgroundImage = UIImageView ( ) < nl > - < nl > - self . logoView = UIImageView ( ) < nl > - self . appNameLabel = UILabel ( ) < nl > - self . someInfoLabel = UILabel ( ) < nl > - < nl > - self . doneButton = UIButton ( type : UIButtonType . System ) < nl > - < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > - < nl > - let screenWidth = UIScreen . mainScreen ( ) . bounds . size . width < nl > - let screenHeight = UIScreen . mainScreen ( ) . bounds . size . height < nl > - < nl > - self . backgroundImage . frame = CGRectMake ( 0 , 0 , screenWidth , screenHeight ) < nl > - self . backgroundImage . backgroundColor = UIColor . whiteColor ( ) < nl > - < nl > - if ActorSDK . sharedActor ( ) . useBackgroundOnWelcomeScreen = = true { < nl > - < nl > - self . backgroundImage . image = UIImage . bundled ( " bg _ 2 . jpg " ) < nl > - < nl > - } < nl > - < nl > - self . logoView . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 , 80 , screenWidth / 2 , screenWidth / 2 ) < nl > - < nl > - self . logoView . image = UIImage . bundled ( " main _ logo " ) < nl > - < nl > - / / / < nl > - < nl > - self . appNameLabel . text = ActorSDK . sharedActor ( ) . appNameInLocStrings < nl > - self . appNameLabel . textAlignment = . Center < nl > - self . appNameLabel . backgroundColor = UIColor . clearColor ( ) < nl > - self . appNameLabel . font = UIFont ( name : " HelveticaNeue - Light " , size : 35 ) < nl > - self . appNameLabel . textColor = ActorSDK . sharedActor ( ) . style . vcStarInfoTextColor < nl > + self . view . backgroundColor = UIColor ( red : 94 , green : 142 , blue : 192 ) < nl > < nl > - self . appNameLabel . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 , self . logoView . frame . maxY + 10 , screenWidth / 2 , 40 ) < nl > + self . logoView . image = UIImage . bundled ( " logo _ welcome " ) < nl > < nl > - / / / < nl > + appNameLabel . text = " Welcome To Actor ! " < nl > + appNameLabel . textAlignment = . Center < nl > + appNameLabel . backgroundColor = UIColor . clearColor ( ) < nl > + appNameLabel . font = UIFont . mediumSystemFontOfSize ( 24 ) < nl > + appNameLabel . textColor = UIColor . whiteColor ( ) < nl > < nl > - self . someInfoLabel . text = AALocalized ( " AuthMoreInfo " ) < nl > - self . someInfoLabel . textAlignment = . Center < nl > - self . someInfoLabel . backgroundColor = UIColor . clearColor ( ) < nl > - self . someInfoLabel . font = UIFont ( name : " HelveticaNeue - Light " , size : 17 ) < nl > - self . someInfoLabel . numberOfLines = 0 < nl > - self . someInfoLabel . textColor = ActorSDK . sharedActor ( ) . style . vcStarInfoTextColor < nl > + someInfoLabel . text = " \ " Open messaging that respects you \ " " < nl > + someInfoLabel . textAlignment = . Center < nl > + someInfoLabel . backgroundColor = UIColor . clearColor ( ) < nl > + someInfoLabel . font = UIFont . systemFontOfSize ( 16 ) < nl > + someInfoLabel . numberOfLines = 1 < nl > + someInfoLabel . textColor = UIColor . whiteColor ( ) < nl > < nl > - self . someInfoLabel . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 - 45 , self . appNameLabel . frame . maxY + 5 , screenWidth / 2 + 90 , 60 ) < nl > + signupButton . setTitle ( " Sign Up " , forState : . Normal ) < nl > + signupButton . titleLabel ? . font = UIFont . mediumSystemFontOfSize ( 17 ) < nl > + signupButton . setTitleColor ( UIColor ( red : 94 , green : 142 , blue : 192 ) , forState : . Normal ) < nl > + signupButton . setBackgroundImage ( Imaging . roundedImage ( UIColor . whiteColor ( ) , radius : 22 ) , forState : . Normal ) < nl > + signupButton . setBackgroundImage ( Imaging . roundedImage ( UIColor . whiteColor ( ) . alpha ( 0 . 7 ) , radius : 22 ) , forState : . Highlighted ) < nl > + signupButton . addTarget ( self , action : " signupAction " , forControlEvents : UIControlEvents . TouchUpInside ) < nl > < nl > - / / / < nl > - self . doneButton . setTitle ( AALocalized ( " AuthStarButton " ) , forState : UIControlState . Normal ) < nl > - self . doneButton . setTitleColor ( ActorSDK . sharedActor ( ) . style . vcStarButton , forState : UIControlState . Normal ) < nl > - self . doneButton . tintColor = ActorSDK . sharedActor ( ) . style . vcStarButton < nl > - self . doneButton . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 - 20 , screenHeight - 50 , screenWidth / 2 , 30 ) < nl > - < nl > - self . doneButton . titleLabel ! . font = UIFont ( name : " HelveticaNeue - Light " , size : 17 ) < nl > - < nl > - self . doneButton . setImage ( UIImage . bundled ( " OnboardNext " ) , forState : UIControlState . Normal ) < nl > - self . doneButton . imageEdgeInsets = UIEdgeInsetsMake ( 5 , screenWidth / 2 + 20 , 0 , 0 ) < nl > - < nl > - self . doneButton . addTarget ( self , action : " doneButtonAction " , forControlEvents : UIControlEvents . TouchUpInside ) < nl > - < nl > - < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > - < nl > - self . view . addSubview ( self . backgroundImage ) < nl > + signinButton . setTitle ( " Sign In " , forState : . Normal ) < nl > + signinButton . titleLabel ? . font = UIFont . systemFontOfSize ( 17 ) < nl > + signinButton . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) < nl > + signinButton . setTitleColor ( UIColor . whiteColor ( ) . alpha ( 0 . 7 ) , forState : . Highlighted ) < nl > + signinButton . addTarget ( self , action : " signInAction " , forControlEvents : UIControlEvents . TouchUpInside ) < nl > < nl > self . view . addSubview ( self . logoView ) < nl > self . view . addSubview ( self . appNameLabel ) < nl > self . view . addSubview ( self . someInfoLabel ) < nl > + self . view . addSubview ( self . signupButton ) < nl > + self . view . addSubview ( self . signinButton ) < nl > + } < nl > + < nl > + override public func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > < nl > - self . view . addSubview ( self . doneButton ) < nl > - < nl > + logoView . frame = CGRectMake ( ( view . width - 90 ) / 2 , 145 , 90 , 90 ) < nl > + appNameLabel . frame = CGRectMake ( ( view . width - 300 ) / 2 , logoView . bottom + 35 , 300 , 29 ) < nl > + someInfoLabel . frame = CGRectMake ( ( view . width - 300 ) / 2 , appNameLabel . bottom + 8 , 300 , 46 ) < nl > < nl > + signupButton . frame = CGRectMake ( ( view . width - 136 ) / 2 , view . height - 44 - 90 , 136 , 44 ) < nl > + signinButton . frame = CGRectMake ( ( view . width - 136 ) / 2 , view . height - 44 - 35 , 136 , 44 ) < nl > } < nl > < nl > - override func viewDidLoad ( ) { < nl > - super . viewDidLoad ( ) < nl > - < nl > - / / Do any additional setup after loading the view . < nl > - } < nl > - < nl > - override func didReceiveMemoryWarning ( ) { < nl > - super . didReceiveMemoryWarning ( ) < nl > - / / Dispose of any resources that can be recreated . < nl > + public func signupAction ( ) { < nl > + / / TODO : Remove BG after auth ? < nl > + UIApplication . sharedApplication ( ) . keyWindow ? . backgroundColor = UIColor ( red : 94 , green : 142 , blue : 192 ) < nl > + self . presentElegantViewController ( AAAuthNavigationController ( rootViewController : AAAuthAskName ( ) ) ) < nl > } < nl > < nl > - < nl > - func doneButtonAction ( ) { < nl > - < nl > - self . navigationController ? . pushViewController ( AAAuthPhoneViewController ( ) , animated : true ) < nl > + public func signInAction ( ) { < nl > < nl > } < nl > < nl > - < nl > + public override func viewWillAppear ( animated : Bool ) { < nl > + super . viewWillAppear ( animated ) < nl > + < nl > + / / TODO : Fix after cancel ? < nl > + UIApplication . sharedApplication ( ) . setStatusBarStyle ( . LightContent , animated : true ) < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift < nl > index e0292e8 . . b0c317f 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift 	 < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift 	 < nl > @ @ - 5 , 8 + 5 , 9 @ @ < nl > import UIKit < nl > import MobileCoreServices < nl > import RSKImageCropper < nl > + import ElegantPresentations < nl > < nl > - public class AAViewController : UIViewController , UINavigationControllerDelegate , UIImagePickerControllerDelegate , RSKImageCropViewControllerDelegate { < nl > + public class AAViewController : UIViewController , UINavigationControllerDelegate , UIImagePickerControllerDelegate , RSKImageCropViewControllerDelegate , UIViewControllerTransitioningDelegate { < nl > < nl > / / MARK : - < nl > / / MARK : Public vars < nl > @ @ - 215 , 4 + 216 , 19 @ @ public class AAViewController : UIViewController , UINavigationControllerDelegate , < nl > pendingPickClosure = nil < nl > self . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > - } < nl > + < nl > + public func presentationControllerForPresentedViewController ( presented : UIViewController , presentingViewController presenting : UIViewController , sourceViewController source : UIViewController ) - > UIPresentationController ? { < nl > + return ElegantPresentations . controller ( presentedViewController : presented , presentingViewController : presenting , options : [ ] ) < nl > + } < nl > + < nl > + public func presentElegantViewController ( controller : UIViewController ) { < nl > + if AADevice . isiPad { < nl > + controller . modalPresentationStyle = . FormSheet < nl > + presentViewController ( controller , animated : true , completion : nil ) < nl > + } else { < nl > + controller . modalPresentationStyle = . Custom < nl > + controller . transitioningDelegate = self < nl > + presentViewController ( controller , animated : true , completion : nil ) < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift < nl > index a79b97c . . 11ad585 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift < nl > @ @ - 20 , 6 + 20 , 13 @ @ public extension UIColor { < nl > alpha : CGFloat ( alpha ) ) < nl > } < nl > < nl > + public convenience init ( red : UInt , green : UInt , blue : UInt ) { < nl > + self . init ( red : CGFloat ( red ) / 255 . 0 , < nl > + green : CGFloat ( green ) / 255 . 0 , < nl > + blue : CGFloat ( blue ) / 255 . 0 , < nl > + alpha : CGFloat ( 1 . 0 ) ) < nl > + } < nl > + < nl > public class func alphaBlack ( alpha : Double ) - > UIColor { < nl > return UIColor ( red : 0 , green : 0 , blue : 0 , alpha : CGFloat ( alpha ) ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / Podfile b / actor - sdk / sdk - core - ios / Podfile < nl > index 9d6bf42 . . cca02a4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / Podfile < nl > + + + b / actor - sdk / sdk - core - ios / Podfile < nl > @ @ - 28 , 6 + 28 , 7 @ @ target ' ActorApp ' do < nl > pod ' RSKImageCropper ' < nl > pod ' JDStatusBarNotification ' < nl > pod ' Neon ' < nl > + pod ' ElegantPresentations ' < nl > < nl > # Small UI < nl > pod ' VBFPopFlatButton ' < nl > @ @ - 63 , 6 + 64 , 7 @ @ target ' ActorSDK ' do < nl > pod ' TTTAttributedLabel ' < nl > pod ' RSKImageCropper ' < nl > pod ' JDStatusBarNotification ' < nl > + pod ' ElegantPresentations ' < nl > < nl > # Small UI < nl > pod ' VBFPopFlatButton '

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java 
 index 790cf4e . . d8334e8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java 
 @ @ - 107 , 17 + 107 , 10 @ @ public class AuthActivity extends BaseFragmentActivity { 
 showFragment ( signFragment , false , false ) ; 
 authType = AUTH _ TYPE _ PHONE ; 
 break ; 
 - case CODE _ VALIDATION _ CUSTOM : 
 case CODE _ VALIDATION _ PHONE : 
 - 
 Fragment signInFragment = new SignInFragment ( ) ; 
 Bundle args = new Bundle ( ) ; 
 args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ PHONE ) ; 
 - if ( state = = AuthState . CODE _ VALIDATION _ CUSTOM ) { 
 - args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ CUSTOM ) ; 
 - args . putString ( " authId " , signFragment . getAuthId ( ) ) ; 
 - args . putString ( " authHint " , signFragment . getHintText ( ) ) ; 
 - } 
 signInFragment . setArguments ( args ) ; 
 showFragment ( signInFragment , false , false ) ; 
 break ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java 
 index 6b9de89 . . 94141ed 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / BaseAuthFragment . java 
 @ @ - 9 , 8 + 9 , 6 @ @ import im . actor . sdk . controllers . fragment . BaseFragment ; 
 
 public abstract class BaseAuthFragment extends BaseFragment { 
 
 - private String authId ; 
 - 
 public BaseAuthFragment ( ) { 
 
 } 
 @ @ - 48 , 17 + 46 , 4 @ @ public abstract class BaseAuthFragment extends BaseFragment { 
 } 
 } ) ; 
 } 
 - 
 - public String getAuthId ( ) { 
 - return authId ; 
 - } 
 - 
 - protected void setAuthId ( String authId ) { 
 - this . authId = authId ; 
 - } 
 - 
 - public String getHintText ( ) { 
 - return null ; 
 - } 
 - 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 3b0065f . . 9a87951 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 166 , 7 + 166 , 6 @ @ 
 	 	 066A53391BC5456B000E606E / * ActorStyle . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53381BC5456B000E606E / * ActorStyle . swift * / ; } ; 
 	 	 066CBCDC1C8D419F004507E2 / * AAAuthEmailViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066CBCDB1C8D419F004507E2 / * AAAuthEmailViewController . swift * / ; } ; 
 	 	 068B39831C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / ; } ; 
 - 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / ; } ; 
 	 	 069CF4CC1BCB909A00C66E12 / * CLBackspaceDetectingTextField . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / ; } ; 
 	 	 069CF4CD1BCB909A00C66E12 / * CLBackspaceDetectingTextField . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / ; } ; 
 	 	 069CF4CE1BCB909A00C66E12 / * CLToken . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C61BCB909A00C66E12 / * CLToken . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 @ @ - 181 , 6 + 180 , 7 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 + 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / ; } ; 
 	 	 06E322C91C69344A00D66F53 / * iOSCallsProvider . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / ; } ; 
 	 	 06E3230E1C69445C00D66F53 / * WebRTC . h in Headers * / = { isa = PBXBuildFile ; fileRef = 06E3230D1C6942C400D66F53 / * WebRTC . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 06E323111C694C1D00D66F53 / * WebRTCExt . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / ; } ; 
 @ @ - 475 , 7 + 475 , 6 @ @ 
 	 	 066A53381BC5456B000E606E / * ActorStyle . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorStyle . swift ; sourceTree = " < group > " ; } ; 
 	 	 066CBCDB1C8D419F004507E2 / * AAAuthEmailViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthEmailViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthCodeViewController . swift ; sourceTree = " < group > " ; } ; 
 - 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLBackspaceDetectingTextField . h ; sourceTree = " < group > " ; } ; 
 	 	 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLBackspaceDetectingTextField . m ; sourceTree = " < group > " ; } ; 
 	 	 069CF4C61BCB909A00C66E12 / * CLToken . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLToken . h ; sourceTree = " < group > " ; } ; 
 @ @ - 490 , 6 + 489 , 7 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthLogInViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = iOSCallsProvider . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E3230D1C6942C400D66F53 / * WebRTC . h * / = { isa = PBXFileReference ; lastKnownFileType = sourcecode . c . h ; path = WebRTC . h ; sourceTree = " < group > " ; } ; 
 	 	 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = WebRTCExt . swift ; sourceTree = " < group > " ; } ; 
 @ @ - 896 , 13 + 896 , 13 @ @ 
 	 	 	 	 066A526B1BC50E83000E606E / * Cells * / , 
 	 	 	 	 066A526E1BC51007000E606E / * Views * / , 
 	 	 	 	 066CBCDA1C8D4121004507E2 / * Controllers * / , 
 + 	 	 	 	 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / , 
 	 	 	 	 06C1D0761C8BC9FC00B73632 / * AAAuthNameViewController . swift * / , 
 	 	 	 	 06C1D07A1C8BFE5C00B73632 / * AAAuthPhoneViewController . swift * / , 
 	 	 	 	 066CBCDB1C8D419F004507E2 / * AAAuthEmailViewController . swift * / , 
 	 	 	 	 066A52631BC50E7B000E606E / * AAAuthCodeViewController . swift * / , 
 - 	 	 	 	 066A52641BC50E7B000E606E / * AAAuthRegisterViewController . swift * / , 
 	 	 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / , 
 - 	 	 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / , 
 + 	 	 	 	 066A52641BC50E7B000E606E / * AAAuthRegisterViewController . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Auth ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1757 , 7 + 1757 , 6 @ @ 
 	 	 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / , 
 	 	 	 	 066A525E1BC503BB000E606E / * ActorApplicationDelegate . swift in Sources * / , 
 	 	 	 	 BED5A1F91C48396A0045FDB0 / * NYTPhotosViewController . m in Sources * / , 
 - 	 	 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / , 
 	 	 	 	 066A53101BC53317000E606E / * AAWallpapperPreviewController . swift in Sources * / , 
 	 	 	 	 152AA8B91C2989270030DEEE / * UIView + SLKAdditions . m in Sources * / , 
 	 	 	 	 066A52F21BC52B02000E606E / * AASettingsPrivacyViewController . swift in Sources * / , 
 @ @ - 1954 , 6 + 1953 , 7 @ @ 
 	 	 	 	 066A52421BC4EECD000E606E / * AATableViewHeader . swift in Sources * / , 
 	 	 	 	 066A52CD1BC521FA000E606E / * AADialogsListContentControllerDelegate . swift in Sources * / , 
 	 	 	 	 15D35F261C20186200E3717A / * framing . c in Sources * / , 
 + 	 	 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / , 
 	 	 	 	 06E323111C694C1D00D66F53 / * WebRTCExt . swift in Sources * / , 
 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , 
 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift 
 index ceaea0a . . ce3405d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift 
 @ @ - 118 , 6 + 118 , 8 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate 
 counterTimer . invalidate ( ) 
 counterTimer = nil 
 } 
 + 
 + codeTextField . resignFirstResponder ( ) 
 } 
 
 public override func viewWillLayoutSubviews ( ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 index f5868ae . . 6ed3802 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 @ @ - 55 , 6 + 55 , 7 @ @ public class AAAuthEmailViewController : AAAuthViewController { 
 emailField . textColor = UIColor . alphaBlack ( 0 . 64 ) 
 emailField . placeholder = " Your email " 
 emailField . keyboardType = . EmailAddress 
 + emailField . autocapitalizationType = . None 
 
 emailFieldLine . backgroundColor = UIColor . alphaBlack ( 0 . 2 ) 
 
 @ @ - 136 , 6 + 137 , 13 @ @ public class AAAuthEmailViewController : AAAuthViewController { 
 
 public override func nextDidTap ( ) { 
 let email = emailField . text ! 
 + 
 + if ! AATools . isValidEmail ( email ) { 
 + shakeView ( emailField , originalX : view . width / 2 ) 
 + shakeView ( emailFieldLine , originalX : view . width / 2 ) 
 + return 
 + } 
 + 
 executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in 
 self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) ) 
 } 
 @ @ - 154 , 4 + 162 , 10 @ @ public class AAAuthEmailViewController : AAAuthViewController { 
 public override func keyboardWillDisappear ( ) { 
 scrollView . frame = CGRectMake ( 0 , 0 , view . width , view . height ) 
 } 
 + 
 + public override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + 
 + emailField . resignFirstResponder ( ) 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 new file mode 100644 
 index 0000000 . . 1e18f66 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 @ @ - 0 , 0 + 1 , 107 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public class AAAuthLogInViewController : AAAuthViewController { 
 + 
 + let scrollView = UIScrollView ( ) 
 + 
 + let welcomeLabel = UILabel ( ) 
 + let field = UITextField ( ) 
 + let fieldLine = UIView ( ) 
 + 
 + var isFirstAppear = true 
 + 
 + public override init ( ) { 
 + super . init ( nibName : nil , bundle : nil ) 
 + 
 + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " dismiss " ) 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + public override func viewDidLoad ( ) { 
 + 
 + view . backgroundColor = UIColor . whiteColor ( ) 
 + 
 + scrollView . keyboardDismissMode = . OnDrag 
 + scrollView . scrollEnabled = true 
 + scrollView . alwaysBounceVertical = true 
 + 
 + welcomeLabel . font = UIFont . lightSystemFontOfSize ( 23 ) 
 + welcomeLabel . text = " Log In to Actor " 
 + welcomeLabel . textColor = UIColor . blackColor ( ) . alpha ( 0 . 87 ) 
 + welcomeLabel . textAlignment = . Center 
 + 
 + field . placeholder = " Phone or Email " 
 + field . keyboardType = . Default 
 + field . autocapitalizationType = . None 
 + / / field . addTarget ( self , action : " fieldDidChanged " , forControlEvents : . EditingChanged ) 
 + 
 + fieldLine . backgroundColor = UIColor . blackColor ( ) . alpha ( 0 . 2 ) 
 + fieldLine . opaque = false 
 + 
 + scrollView . addSubview ( welcomeLabel ) 
 + scrollView . addSubview ( field ) 
 + scrollView . addSubview ( fieldLine ) 
 + view . addSubview ( scrollView ) 
 + 
 + super . viewDidLoad ( ) 
 + } 
 + 
 + public override func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + welcomeLabel . frame = CGRectMake ( 15 , 90 - 66 , view . width - 30 , 28 ) 
 + 
 + fieldLine . frame = CGRectMake ( 10 , 200 - 66 , view . width - 20 , 0 . 5 ) 
 + field . frame = CGRectMake ( 20 , 156 - 66 , view . width - 40 , 44 ) 
 + 
 + scrollView . frame = view . bounds 
 + scrollView . contentSize = CGSizeMake ( view . width , 240 - 66 ) 
 + } 
 + 
 + public override func nextDidTap ( ) { 
 + let value = field . text ! . trim ( ) 
 + if value . length = = 0 { 
 + shakeView ( field , originalX : 20 ) 
 + shakeView ( fieldLine , originalX : 10 ) 
 + return 
 + } 
 + if ( AATools . isValidEmail ( value ) ) { 
 + executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( value ) , successBlock : { ( val ) - > Void in 
 + self . navigateNext ( AAEmailAuthCodeViewController ( email : value ) ) 
 + } ) 
 + } else { 
 + let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet 
 + let stripped = value . strip ( numbersSet ) 
 + if let parsed = Int64 ( stripped ) { 
 + executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( jlong ( parsed ) ) , successBlock : { ( val ) - > Void in 
 + self . navigateNext ( AAAuthCodeViewController ( phoneNumber : value ) ) 
 + } ) 
 + } else { 
 + shakeView ( field , originalX : 20 ) 
 + shakeView ( fieldLine , originalX : 10 ) 
 + } 
 + } 
 + } 
 + 
 + public override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + 
 + field . resignFirstResponder ( ) 
 + } 
 + 
 + public override func viewWillAppear ( animated : Bool ) { 
 + super . viewWillAppear ( animated ) 
 + 
 + if isFirstAppear { 
 + isFirstAppear = false 
 + field . becomeFirstResponder ( ) 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift 
 index d084d99 . . 6be1c1b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNameViewController . swift 
 @ @ - 46 , 6 + 46 , 7 @ @ public class AAAuthNameViewController : AAAuthViewController { 
 
 field . placeholder = " Your Name " 
 field . keyboardType = . Default 
 + field . autocapitalizationType = . Words 
 field . addTarget ( self , action : " fieldDidChanged " , forControlEvents : . EditingChanged ) 
 
 fieldLine . backgroundColor = UIColor . blackColor ( ) . alpha ( 0 . 2 ) 
 @ @ - 90 , 12 + 91 , 6 @ @ public class AAAuthNameViewController : AAAuthViewController { 
 } 
 } 
 
 - public override func viewDidAppear ( animated : Bool ) { 
 - super . viewDidAppear ( animated ) 
 - 
 - field . becomeFirstResponder ( ) 
 - } 
 - 
 public override func nextDidTap ( ) { 
 let name = field . text ! . trim ( ) 
 if name . length > 0 { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 index 1a40ed9 . . 8a8e6d5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 @ @ - 184 , 6 + 184 , 7 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe 
 
 override func nextDidTap ( ) { 
 let number = phoneNumberLabel . phoneNumber . toJLong ( ) 
 + 
 executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( number ) ) { ( val ) - > Void in 
 self . navigateNext ( AAAuthCodeViewController ( phoneNumber : " \ ( number ) " ) ) 
 } 
 @ @ - 202 , 4 + 203 , 10 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe 
 override func keyboardWillDisappear ( ) { 
 scrollView . frame = CGRectMake ( 0 , 0 , view . width , view . height ) 
 } 
 + 
 + override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + 
 + phoneNumberLabel . resignFirstResponder ( ) 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift 
 index 9c90aa0 . . ea7e5a0 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift 
 @ @ - 92 , 7 + 92 , 9 @ @ public class AAWelcomeController : AAViewController { 
 } 
 
 public func signInAction ( ) { 
 - 
 + / / TODO : Remove BG after auth ? 
 + UIApplication . sharedApplication ( ) . keyWindow ? . backgroundColor = UIColor ( red : 94 , green : 142 , blue : 192 ) 
 + self . presentElegantViewController ( AAAuthNavigationController ( rootViewController : AAAuthLogInViewController ( ) ) ) 
 } 
 
 public override func viewWillAppear ( animated : Bool ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift 
 index df912e3 . . 50ac221 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift 
 @ @ - 50 , 7 + 50 , 7 @ @ class AAEmailAuthCodeViewController : AAAuthViewController { 
 codeTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) 
 codeTextField . backgroundColor = UIColor . whiteColor ( ) 
 codeTextField . placeholder = AALocalized ( " AuthEmailCodeFieldHint " ) 
 - codeTextField . keyboardType = UIKeyboardType . EmailAddress 
 + codeTextField . keyboardType = UIKeyboardType . NumberPad 
 codeTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center 
 codeTextField . textAlignment = . Center 
 view . addSubview ( codeTextField ) 
 @ @ - 121 , 6 + 121 , 11 @ @ class AAEmailAuthCodeViewController : AAAuthViewController { 
 codeTextField . becomeFirstResponder ( ) 
 } 
 
 + override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + codeTextField . resignFirstResponder ( ) 
 + } 
 + 
 / / Actions 
 
 func nextButtonPressed ( ) { 
 @ @ - 137 , 9 + 142 , 10 @ @ class AAEmailAuthCodeViewController : AAAuthViewController { 
 let state = Actor . getAuthState ( ) . ordinal ( ) 
 
 if state = = ACAuthState . LOGGED _ IN ( ) . ordinal ( ) { 
 - 
 + self . codeTextField . resignFirstResponder ( ) 
 / / If logged in state : end authentication 
 self . onAuthenticated ( ) 
 + 
 } else if state = = ACAuthState . SIGN _ UP ( ) . ordinal ( ) { 
 
 / / Is signup go to signup controller 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift 
 deleted file mode 100644 
 index 584adfd . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift 
 + + + / dev / null 
 @ @ - 1 , 161 + 0 , 0 @ @ 
 - / / 
 - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 - / / 
 - 
 - import Foundation 
 - 
 - class AAEmailAuthViewController : AAAuthViewController { 
 - 
 - / / Views 
 - 
 - private var grayBackground : UIView ! 
 - private var titleLabel : UILabel ! 
 - private var emailTextField : UITextField ! 
 - private var emailTextSeparator = UIView ( ) 
 - private var hintLabel : UILabel ! 
 - private var navigationBarSeparator : UIView ! 
 - 
 - / / Constructors 
 - 
 - override init ( ) { 
 - super . init ( ) 
 - 
 - self . content = ACAllEvents _ Auth . AUTH _ PHONE ( ) 
 - } 
 - 
 - required init ( coder aDecoder : NSCoder ) { 
 - fatalError ( " init ( coder : ) has not been implemented " ) 
 - } 
 - 
 - / / Layouting 
 - 
 - override func loadView ( ) { 
 - super . loadView ( ) 
 - 
 - view . backgroundColor = UIColor . whiteColor ( ) 
 - 
 - grayBackground = UIView ( ) 
 - grayBackground . backgroundColor = UIColor ( rgb : 0xf2f2f2 ) 
 - view . addSubview ( grayBackground ) 
 - 
 - titleLabel = UILabel ( ) 
 - titleLabel . backgroundColor = UIColor . clearColor ( ) 
 - titleLabel . textColor = UIColor . blackColor ( ) 
 - titleLabel . font = AADevice . isiPad 
 - ? UIFont . thinSystemFontOfSize ( 50 . 0 ) 
 - : UIFont . lightSystemFontOfSize ( 30 ) 
 - 
 - titleLabel . textLocalized = " AuthEmailTitle " 
 - grayBackground . addSubview ( titleLabel ) 
 - 
 - emailTextField = UITextField ( ) 
 - emailTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) 
 - emailTextField . backgroundColor = UIColor . whiteColor ( ) 
 - emailTextField . placeholder = AALocalized ( " AuthEmailFieldHint " ) 
 - emailTextField . keyboardType = UIKeyboardType . EmailAddress 
 - emailTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center 
 - emailTextField . textAlignment = . Center 
 - emailTextField . autocapitalizationType = . None 
 - / / phoneTextField . delegate = self 
 - view . addSubview ( emailTextField ) 
 - 
 - emailTextSeparator = UIView ( ) 
 - emailTextSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) 
 - view . addSubview ( emailTextSeparator ) 
 - 
 - navigationBarSeparator = UIView ( ) 
 - navigationBarSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) 
 - view . addSubview ( navigationBarSeparator ) 
 - 
 - hintLabel = UILabel ( ) 
 - hintLabel . font = UIFont . systemFontOfSize ( 17 . 0 ) 
 - hintLabel . textColor = UIColor ( rgb : 0x999999 ) 
 - hintLabel . lineBreakMode = NSLineBreakMode . ByWordWrapping 
 - hintLabel . backgroundColor = UIColor . whiteColor ( ) 
 - hintLabel . textAlignment = NSTextAlignment . Center 
 - hintLabel . contentMode = UIViewContentMode . Center 
 - hintLabel . numberOfLines = 0 
 - hintLabel . textLocalized = " AuthEmailHint " 
 - view . addSubview ( hintLabel ) 
 - 
 - / / Configure navigation bar 
 - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationNext " ) , style : UIBarButtonItemStyle . Done , target : self , action : " nextButtonPressed " ) 
 - } 
 - 
 - override func viewWillLayoutSubviews ( ) { 
 - super . viewWillLayoutSubviews ( ) 
 - 
 - let screenSize = UIScreen . mainScreen ( ) . bounds . size 
 - let isWidescreen = screenSize . width > 320 | | screenSize . height > 480 
 - let isPortraint = screenSize . width < screenSize . height 
 - 
 - let bgSize = AADevice . isiPad 
 - ? ( isPortraint ? 304 . 0 : 140 ) 
 - : ( isWidescreen ? 131 . 0 : 90 . 0 ) 
 - grayBackground . frame = CGRect ( x : 0 . 0 , y : 0 . 0 , width : screenSize . width , height : CGFloat ( bgSize ) ) 
 - 
 - let padding = AADevice . isiPad 
 - ? ( isPortraint ? 48 : 20 ) 
 - : ( 20 ) 
 - titleLabel . sizeToFit ( ) 
 - titleLabel . frame = CGRect ( x : ( screenSize . width - titleLabel . frame . size . width ) / 2 . 0 , y : grayBackground . frame . height - titleLabel . frame . size . height - CGFloat ( padding ) , width : titleLabel . frame . size . width , height : titleLabel . frame . size . height ) 
 - 
 - navigationBarSeparator . frame = CGRect ( x : 0 , y : grayBackground . bounds . size . height , width : screenSize . width , height : 0 . 5 ) 
 - 
 - let fieldWidth : CGFloat = AADevice . isiPad 
 - ? ( 520 ) 
 - : ( screenSize . width ) 
 - 
 - emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 32 , y : navigationBarSeparator . top + 16 , width : fieldWidth - 10 . 0 - 64 , height : 50 - 2 ) 
 - 
 - emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 , y : navigationBarSeparator . frame . origin . y + navigationBarSeparator . bounds . size . height , width : fieldWidth , height : 56 . 0 ) 
 - 
 - emailTextSeparator . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 22 , y : emailTextField . frame . origin . y + emailTextField . height , width : fieldWidth - 44 , height : 0 . 5 ) 
 - 
 - let hintPadding : CGFloat = AADevice . isiPad 
 - ? ( isPortraint ? 460 . 0 : 274 . 0 ) 
 - : ( isWidescreen ? 214 . 0 : 184 . 0 ) 
 - 
 - let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) 
 - hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; 
 - } 
 - 
 - / / Constoller states 
 - 
 - override func viewDidAppear ( animated : Bool ) { 
 - super . viewDidAppear ( animated ) 
 - emailTextField . becomeFirstResponder ( ) 
 - } 
 - 
 - / / Actions 
 - 
 - func nextButtonPressed ( ) { 
 - 
 - if emailTextField . text = = nil | | ! isValidEmail ( emailTextField . text ! ) { 
 - let fieldWidth : CGFloat = AADevice . isiPad 
 - ? ( 520 ) 
 - : ( view . width ) 
 - self . shakeView ( emailTextField , originalX : ( view . width - fieldWidth ) / 2 ) 
 - return 
 - } 
 - 
 - let email = emailTextField . text ! 
 - executeSafe ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in 
 - self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) , removeCurrent : false ) 
 - } 
 - } 
 - 
 - func isValidEmail ( testStr : String ) - > Bool { 
 - 
 - let emailRegEx = " ^ [ A - Z0 - 9a - z . _ % + - ] + @ [ A - Za - z0 - 9 . - ] + \ \ . [ A - Za - z ] { 2 , 6 } " 
 - 
 - let emailTest = NSPredicate ( format : " SELF MATCHES % @ " , emailRegEx ) 
 - return emailTest . evaluateWithObject ( testStr ) 
 - } 
 - 
 - / / Events 
 - 
 - func textField ( textField : UITextField , shouldChangeCharactersInRange range : NSRange , replacementString string : String ) - > Bool { 
 - return true 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift 
 index c7408f6 . . 1e9584a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift 
 @ @ - 14 , 6 + 14 , 14 @ @ class AATools { 
 class func zipDirectoryCommand ( from : String , to : String ) - > ACCommand { 
 return ZipCommand ( dir : from , to : to ) 
 } 
 + 
 + class func isValidEmail ( testStr : String ) - > Bool { 
 + 
 + let emailRegEx = " ^ [ A - Z0 - 9a - z . _ % + - ] + @ [ A - Za - z0 - 9 . - ] + \ \ . [ A - Za - z ] { 2 , 6 } " 
 + 
 + let emailTest = NSPredicate ( format : " SELF MATCHES % @ " , emailRegEx ) 
 + return emailTest . evaluateWithObject ( testStr ) 
 + } 
 } 
 
 private class ZipCommand : BackgroundCommand { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java 
 index a677dbc . . df968a0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / AuthState . java 
 @ @ - 15 , 7 + 15 , 6 @ @ public enum AuthState { 
 CODE _ VALIDATION _ PHONE , 
 CODE _ VALIDATION _ EMAIL , 
 PASSWORD _ VALIDATION , 
 - CODE _ VALIDATION _ CUSTOM , 
 GET _ OAUTH _ PARAMS , 
 COMPLETE _ OAUTH , 
 SIGN _ UP , 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 244a97b . . 6c348f3 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import java . util . ArrayList ; 
 import im . actor . core . ApiConfiguration ; 
 import im . actor . core . AuthState ; 
 import im . actor . core . api . ApiEmailActivationType ; 
 + import im . actor . core . api . ApiPhoneActivationType ; 
 import im . actor . core . api . ApiSex ; 
 import im . actor . core . api . rpc . RequestCompleteOAuth2 ; 
 import im . actor . core . api . rpc . RequestGetOAuth2Params ; 
 @ @ - 111 , 7 + 112 , 7 @ @ public class Authentication { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 - ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + ArrayList < String > langs = new ArrayList < > ( ) ; 
 for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 langs . add ( s ) ; 
 } 
 @ @ - 146 , 7 + 147 , 7 @ @ public class Authentication { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 - ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + ArrayList < String > langs = new ArrayList < > ( ) ; 
 for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 langs . add ( s ) ; 
 } 
 @ @ - 170 , 6 + 171 , 8 @ @ public class Authentication { 
 state = AuthState . CODE _ VALIDATION _ EMAIL ; 
 } else if ( emailActivationType . equals ( ApiEmailActivationType . PASSWORD ) ) { 
 state = AuthState . PASSWORD _ VALIDATION ; 
 + } else { 
 + state = AuthState . CODE _ VALIDATION _ EMAIL ; 
 } 
 
 im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 @ @ - 199 , 7 + 202 , 7 @ @ public class Authentication { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 - ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + ArrayList < String > langs = new ArrayList < > ( ) ; 
 for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 langs . add ( s ) ; 
 } 
 @ @ - 244 , 7 + 247 , 7 @ @ public class Authentication { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 - ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + ArrayList < String > langs = new ArrayList < > ( ) ; 
 for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 langs . add ( s ) ; 
 } 
 @ @ - 261 , 7 + 264 , 13 @ @ public class Authentication { 
 modules . getPreferences ( ) . putLong ( KEY _ PHONE , phone ) ; 
 modules . getPreferences ( ) . putString ( KEY _ TRANSACTION _ HASH , response . getTransactionHash ( ) ) ; 
 
 - state = AuthState . CODE _ VALIDATION _ PHONE ; 
 + if ( response . getActivationType ( ) = = ApiPhoneActivationType . CODE ) { 
 + state = AuthState . CODE _ VALIDATION _ PHONE ; 
 + } else if ( response . getActivationType ( ) = = ApiPhoneActivationType . PASSWORD ) { 
 + state = AuthState . PASSWORD _ VALIDATION ; 
 + } else { 
 + state = AuthState . CODE _ VALIDATION _ PHONE ; 
 + } 
 
 im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 @ Override 
 @ @ - 518 , 19 + 527 , 8 @ @ public class Authentication { 
 modules . getUpdatesModule ( ) . onUpdateReceived ( new LoggedIn ( response , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - 
 state = AuthState . LOGGED _ IN ; 
 - 
 callback . onResult ( state ) ; 
 - 
 - / / Notify ActorAnalytics 
 - User user = modules . getUsersModule ( ) . getUsersStorage ( ) . getValue ( myUid ) ; 
 - ArrayList < Long > records = new ArrayList < Long > ( ) ; 
 - for ( ContactRecord contactRecord : user . getRecords ( ) ) { 
 - if ( contactRecord . getRecordType ( ) = = ContactRecordType . PHONE ) { 
 - records . add ( Long . parseLong ( contactRecord . getRecordData ( ) ) ) ; 
 - } 
 - } 
 } 
 } ) ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index b63b5f5 . . a71e545 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 175 , 6 + 175 , 8 @ @ 
 	 	 069CF4D11BCB909A00C66E12 / * CLTokenInputView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4C91BCB909A00C66E12 / * CLTokenInputView . m * / ; } ; 
 	 	 069CF4D21BCB909A00C66E12 / * CLTokenView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4CA1BCB909A00C66E12 / * CLTokenView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 069CF4D31BCB909A00C66E12 / * CLTokenView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4CB1BCB909A00C66E12 / * CLTokenView . m * / ; } ; 
 + 	 	 06C1D0771C8BC9FC00B73632 / * AAAuthAskName . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06C1D0761C8BC9FC00B73632 / * AAAuthAskName . swift * / ; } ; 
 + 	 	 06C1D07B1C8BFE5C00B73632 / * AAAuthAskPhone . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06C1D07A1C8BFE5C00B73632 / * AAAuthAskPhone . swift * / ; } ; 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 @ @ - 481 , 6 + 483 , 8 @ @ 
 	 	 069CF4C91BCB909A00C66E12 / * CLTokenInputView . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLTokenInputView . m ; sourceTree = " < group > " ; } ; 
 	 	 069CF4CA1BCB909A00C66E12 / * CLTokenView . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLTokenView . h ; sourceTree = " < group > " ; } ; 
 	 	 069CF4CB1BCB909A00C66E12 / * CLTokenView . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLTokenView . m ; sourceTree = " < group > " ; } ; 
 + 	 	 06C1D0761C8BC9FC00B73632 / * AAAuthAskName . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthAskName . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06C1D07A1C8BFE5C00B73632 / * AAAuthAskPhone . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthAskPhone . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 @ @ - 521 , 7 + 525 , 7 @ @ 
 	 	 153F6B3C1C2A9B1900C0B960 / * begin _ record . caf * / = { isa = PBXFileReference ; lastKnownFileType = file ; path = begin _ record . caf ; sourceTree = " < group > " ; } ; 
 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVoiceCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleStickerCell . swift ; sourceTree = " < group > " ; } ; 
 - 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthWelcomeController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; name = AAAuthWelcomeController . swift ; path = Auth / AAAuthWelcomeController . swift ; sourceTree = " < group > " ; } ; 
 	 	 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabelDelegate . swift ; sourceTree = " < group > " ; } ; 
 	 	 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabel . swift ; sourceTree = " < group > " ; } ; 
 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATermsController . swift ; sourceTree = " < group > " ; } ; 
 @ @ - 865 , 6 + 869 , 7 @ @ 
 	 	 066A525F1BC50E53000E606E / * Controllers * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 + 	 	 	 	 06C1D0751C8BC55100B73632 / * Welcome * / , 
 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , 
 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , 
 	 	 	 	 066A53021BC53171000E606E / * Contacts * / , 
 @ @ - 887 , 13 + 892 , 14 @ @ 
 	 	 	 children = ( 
 	 	 	 	 066A526B1BC50E83000E606E / * Cells * / , 
 	 	 	 	 066A526E1BC51007000E606E / * Views * / , 
 + 	 	 	 	 06C1D0761C8BC9FC00B73632 / * AAAuthAskName . swift * / , 
 + 	 	 	 	 06C1D07A1C8BFE5C00B73632 / * AAAuthAskPhone . swift * / , 
 	 	 	 	 066A52631BC50E7B000E606E / * AAAuthCodeViewController . swift * / , 
 	 	 	 	 066A52611BC50E7B000E606E / * AAAuthCountriesViewController . swift * / , 
 	 	 	 	 065974A41BC621F100B8C7DF / * AAAuthNavigationController . swift * / , 
 	 	 	 	 066A52621BC50E7B000E606E / * AAAuthPhoneViewController . swift * / , 
 	 	 	 	 066A52641BC50E7B000E606E / * AAAuthRegisterViewController . swift * / , 
 	 	 	 	 066A52651BC50E7B000E606E / * AAAuthViewController . swift * / , 
 - 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , 
 	 	 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / , 
 	 	 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / , 
 	 	 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / , 
 @ @ - 1179 , 6 + 1185 , 14 @ @ 
 	 	 	 path = CLTokenInputView ; 
 	 	 	 sourceTree = " < group > " ; 
 	 	 } ; 
 + 	 	 06C1D0751C8BC55100B73632 / * Welcome * / = { 
 + 	 	 	 isa = PBXGroup ; 
 + 	 	 	 children = ( 
 + 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , 
 + 	 	 	 ) ; 
 + 	 	 	 name = Welcome ; 
 + 	 	 	 sourceTree = " < group > " ; 
 + 	 	 } ; 
 	 	 06E322CB1C69392F00D66F53 / * Libs * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 @ @ - 1794 , 6 + 1808 , 7 @ @ 
 	 	 	 	 065A06B61C6CEFE00012EA09 / * CocoaWebRTCRuntime . swift in Sources * / , 
 	 	 	 	 15D35F5A1C20187E00E3717A / * AATimer . m in Sources * / , 
 	 	 	 	 066A52381BC4EEBA000E606E / * AAHeaderCell . swift in Sources * / , 
 + 	 	 	 	 06C1D0771C8BC9FC00B73632 / * AAAuthAskName . swift in Sources * / , 
 	 	 	 	 066A524B1BC4EF49000E606E / * AAViewController . swift in Sources * / , 
 	 	 	 	 066A51521BC4BE34000E606E / * Logs . swift in Sources * / , 
 	 	 	 	 066A52D71BC52378000E606E / * AAContactsListContentControllerDelegate . swift in Sources * / , 
 @ @ - 1838 , 6 + 1853 , 7 @ @ 
 	 	 	 	 066A53041BC53177000E606E / * AAContactsViewController . swift in Sources * / , 
 	 	 	 	 066A51801BC4C373000E606E / * FMDatabasePool . m in Sources * / , 
 	 	 	 	 06129AA91C8394700099286B / * AAAudioManager . swift in Sources * / , 
 + 	 	 	 	 06C1D07B1C8BFE5C00B73632 / * AAAuthAskPhone . swift in Sources * / , 
 	 	 	 	 066A518F1BC4C383000E606E / * iOSPhoneBookProvider . swift in Sources * / , 
 	 	 	 	 066A530B1BC531A2000E606E / * AAUserViewController . swift in Sources * / , 
 	 	 	 	 06E3C5B81C80EE21004776CD / * AACircleButton . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 18e4ddb 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " actorLogoMessenger . png " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " actorLogoMessenger @ 2x . png " , 
 + " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " actorLogoMessenger @ 3x . png " , 
 + " scale " : " 3x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger . png 
 new file mode 100644 
 index 0000000 . . 17d7d17 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 2x . png 
 new file mode 100644 
 index 0000000 . . 09ec973 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 3x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 3x . png 
 new file mode 100644 
 index 0000000 . . 1a54129 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / logo _ welcome . imageset / actorLogoMessenger @ 3x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 425eb4d . . afc0843 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 431 , 17 + 431 , 17 @ @ import PushKit 
 } 
 window . rootViewController = controller ! 
 } else { 
 - var controller : UIViewController ! = delegate . actorControllerForAuthStart ( ) 
 - if controller = = nil { 
 - if self . authStrategy = = . PhoneOnly { 
 - controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) 
 - } else if self . authStrategy = = . EmailOnly { 
 - controller = AAAuthNavigationController ( rootViewController : AAEmailAuthViewController ( ) ) 
 - } else { 
 - / / ? ? ? 
 - } 
 - } 
 - window . rootViewController = controller ! 
 + / / var controller : UIViewController ! = delegate . actorControllerForAuthStart ( ) 
 + / / if controller = = nil { 
 + / / if self . authStrategy = = . PhoneOnly { 
 + / / controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) 
 + / / } else if self . authStrategy = = . EmailOnly { 
 + / / controller = AAAuthNavigationController ( rootViewController : AAEmailAuthViewController ( ) ) 
 + / / } else { 
 + / / / / ? ? ? 
 + / / } 
 + / / } 
 + window . rootViewController = AAWelcomeController ( ) 
 } 
 
 / / Bind Status Bar connecting 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskName . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskName . swift 
 new file mode 100644 
 index 0000000 . . 17b2285 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskName . swift 
 @ @ - 0 , 0 + 1 , 101 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + class AAAuthAskName : AAAuthViewController { 
 + 
 + let welcomeLabel = UILabel ( ) 
 + let field = UITextField ( ) 
 + let fieldLine = UIView ( ) 
 + let fieldSuccess = UILabel ( ) 
 + 
 + var isFirstAppear = true 
 + 
 + override init ( ) { 
 + super . init ( nibName : nil , bundle : nil ) 
 + 
 + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " dismiss " ) 
 + } 
 + 
 + required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + override func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + view . backgroundColor = UIColor . whiteColor ( ) 
 + 
 + welcomeLabel . font = UIFont . lightSystemFontOfSize ( 23 ) 
 + welcomeLabel . text = " Hi ! What ' s your name ? " 
 + welcomeLabel . textColor = UIColor . blackColor ( ) . alpha ( 0 . 87 ) 
 + welcomeLabel . textAlignment = . Center 
 + 
 + fieldSuccess . font = UIFont . systemFontOfSize ( 18 ) 
 + fieldSuccess . text = " Name looks great ! " 
 + fieldSuccess . textColor = UIColor . greenColor ( ) 
 + fieldSuccess . textAlignment = . Left 
 + fieldSuccess . hidden = true 
 + 
 + field . placeholder = " Your Name " 
 + field . addTarget ( self , action : " fieldDidChanged " , forControlEvents : . EditingChanged ) 
 + 
 + fieldLine . backgroundColor = UIColor . blackColor ( ) . alpha ( 0 . 2 ) 
 + fieldLine . opaque = false 
 + 
 + view . addSubview ( welcomeLabel ) 
 + view . addSubview ( fieldLine ) 
 + view . addSubview ( field ) 
 + view . addSubview ( fieldSuccess ) 
 + } 
 + 
 + override func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + welcomeLabel . frame = CGRectMake ( 15 , 90 , view . width - 30 , 28 ) 
 + fieldLine . frame = CGRectMake ( 10 , 200 , view . width - 20 , 0 . 5 ) 
 + field . frame = CGRectMake ( 20 , 156 , view . width - 40 , 44 ) 
 + fieldSuccess . frame = CGRectMake ( 20 , field . bottom + 15 , view . width - 40 , 44 ) 
 + } 
 + 
 + func fieldDidChanged ( ) { 
 + if field . text ! . trim ( ) . length > 0 { 
 + fieldSuccess . hidden = false 
 + } else { 
 + fieldSuccess . hidden = true 
 + } 
 + } 
 + 
 + override func viewWillAppear ( animated : Bool ) { 
 + super . viewWillAppear ( animated ) 
 + 
 + if isFirstAppear { 
 + isFirstAppear = false 
 + field . becomeFirstResponder ( ) 
 + } 
 + } 
 + 
 + override func viewDidAppear ( animated : Bool ) { 
 + super . viewDidAppear ( animated ) 
 + 
 + field . becomeFirstResponder ( ) 
 + } 
 + 
 + override func nextDidTap ( ) { 
 + let name = field . text ! . trim ( ) 
 + if name . length > 0 { 
 + navigateNext ( AAAuthAskPhone ( name : name ) ) 
 + } else { 
 + shakeView ( field , originalX : 20 ) 
 + shakeView ( fieldLine , originalX : 10 ) 
 + } 
 + } 
 + 
 + override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + 
 + field . resignFirstResponder ( ) 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskPhone . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskPhone . swift 
 new file mode 100644 
 index 0000000 . . 9cff77d 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthAskPhone . swift 
 @ @ - 0 , 0 + 1 , 28 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + class AAAuthAskPhone : AAAuthViewController { 
 + 
 + let name : String 
 + 
 + init ( name : String ) { 
 + self . name = name 
 + super . init ( ) 
 + 
 + navigationItem . title = " Phone Number " 
 + } 
 + 
 + required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + override func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + view . backgroundColor = UIColor . whiteColor ( ) 
 + } 
 + 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift 
 index 0336da8 . . dbfe321 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthNavigationController . swift 
 @ @ - 11 , 6 + 11 , 9 @ @ public class AAAuthNavigationController : UINavigationController { 
 
 navigationBar . setTransparentBackground ( ) 
 navigationBar . tintColor = ActorSDK . sharedActor ( ) . style . authTintColor 
 + navigationBar . hairlineHidden = true 
 + 
 + view . backgroundColor = UIColor . whiteColor ( ) 
 } 
 
 public override func viewWillAppear ( animated : Bool ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift 
 index 7dee9a6 . . 58260a1 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthViewController . swift 
 @ @ - 6 , 8 + 6 , 92 @ @ import Foundation 
 
 public class AAAuthViewController : AAViewController { 
 
 + public let nextBar = UIView ( ) 
 + public let nextBarButton = UIButton ( ) 
 + private let nextBarLine = UIView ( ) 
 + private var keyboardHeight : CGFloat = 0 
 + 
 + override public func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + nextBarButton . setTitle ( " Next " , forState : . Normal ) 
 + nextBarButton . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) 
 + nextBarButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( red : 94 , green : 142 , blue : 192 ) , radius : 4 ) , forState : . Normal ) 
 + nextBarButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( red : 94 , green : 142 , blue : 192 ) . alpha ( 0 . 7 ) , radius : 4 ) , forState : . Highlighted ) 
 + nextBarButton . addTarget ( self , action : " nextDidTap " , forControlEvents : . TouchUpInside ) 
 + 
 + nextBarLine . backgroundColor = UIColor . alphaBlack ( 0 . 2 ) 
 + 
 + nextBar . addSubview ( nextBarButton ) 
 + nextBar . addSubview ( nextBarLine ) 
 + 
 + view . addSubview ( nextBar ) 
 + } 
 + 
 + override public func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + layoutNextBar ( ) 
 + } 
 + 
 + override public func viewWillAppear ( animated : Bool ) { 
 + super . viewWillAppear ( animated ) 
 + 
 + / / Forcing initial layout before keyboard show to avoid weird animations 
 + layoutNextBar ( ) 
 + 
 + NSNotificationCenter . defaultCenter ( ) . addObserver ( self , selector : " keyboardWillAppear : " , name : UIKeyboardWillShowNotification , object : nil ) 
 + NSNotificationCenter . defaultCenter ( ) . addObserver ( self , selector : " keyboardWillDisappear : " , name : UIKeyboardWillHideNotification , object : nil ) 
 + } 
 + 
 + func keyboardWillAppear ( notification : NSNotification ) { 
 + let dict = notification . userInfo ! 
 + let rect = dict [ UIKeyboardFrameBeginUserInfoKey ] ! . CGRectValue 
 + 
 + let orientation = UIApplication . sharedApplication ( ) . statusBarOrientation 
 + let frameInWindow = self . view . superview ! . convertRect ( view . bounds , toView : nil ) 
 + let windowBounds = view . window ! . bounds 
 + 
 + let keyboardTop : CGFloat = windowBounds . size . height - rect . height 
 + let heightCoveredByKeyboard : CGFloat 
 + if AADevice . isiPad { 
 + if orientation = = . LandscapeLeft | | orientation = = . LandscapeRight { 
 + heightCoveredByKeyboard = frameInWindow . maxY - keyboardTop - 52 / * ? ? ? * / 
 + } else if orientation = = . Portrait | | orientation = = . PortraitUpsideDown { 
 + heightCoveredByKeyboard = CGRectGetMaxY ( frameInWindow ) - keyboardTop 
 + } else { 
 + heightCoveredByKeyboard = 0 
 + } 
 + } else { 
 + heightCoveredByKeyboard = rect . height 
 + } 
 + 
 + keyboardHeight = max ( 0 , heightCoveredByKeyboard ) 
 + layoutNextBar ( ) 
 + } 
 + 
 + private func layoutNextBar ( ) { 
 + nextBar . frame = CGRectMake ( 0 , view . height - 44 - keyboardHeight , view . width , 44 ) 
 + nextBarButton . frame = CGRectMake ( nextBar . width - 95 , 6 , 85 , 32 ) 
 + nextBarLine . frame = CGRectMake ( 0 , 0 , nextBar . width , 0 . 5 ) 
 + } 
 + 
 + func keyboardWillDisappear ( notification : NSNotification ) { 
 + keyboardHeight = 0 
 + layoutNextBar ( ) 
 + } 
 + 
 + override public func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + 
 + NSNotificationCenter . defaultCenter ( ) . removeObserver ( self ) 
 + } 
 + 
 / / / Call this method when authentication successful 
 public func onAuthenticated ( ) { 
 ActorSDK . sharedActor ( ) . didLoggedIn ( ) 
 } 
 + 
 + public func nextDidTap ( ) { 
 + 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift 
 index d80486c . . eb93051 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthWelcomeController . swift 
 @ @ - 3 , 112 + 3 , 91 @ @ 
 / / 
 
 import UIKit 
 + import ElegantPresentations 
 
 - class AAWelcomeController : UIViewController { 
 + public class AAWelcomeController : AAViewController { 
 
 - var backgroundImage : UIImageView ! 
 + / / var backgroundImage : UIImageView ! 
 
 - var logoView : UIImageView ! 
 - var appNameLabel : UILabel ! 
 - var someInfoLabel : UILabel ! 
 + let logoView : UIImageView = UIImageView ( ) 
 + let appNameLabel : UILabel = UILabel ( ) 
 + let someInfoLabel : UILabel = UILabel ( ) 
 + let signupButton : UIButton = UIButton ( ) 
 + let signinButton : UIButton = UIButton ( ) 
 
 - var doneButton : UIButton ! 
 - 
 - 
 - override func loadView ( ) { 
 + public override init ( ) { 
 + super . init ( nibName : nil , bundle : nil ) 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + public override func loadView ( ) { 
 super . loadView ( ) 
 
 - self . backgroundImage = UIImageView ( ) 
 - 
 - self . logoView = UIImageView ( ) 
 - self . appNameLabel = UILabel ( ) 
 - self . someInfoLabel = UILabel ( ) 
 - 
 - self . doneButton = UIButton ( type : UIButtonType . System ) 
 - 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - let screenWidth = UIScreen . mainScreen ( ) . bounds . size . width 
 - let screenHeight = UIScreen . mainScreen ( ) . bounds . size . height 
 - 
 - self . backgroundImage . frame = CGRectMake ( 0 , 0 , screenWidth , screenHeight ) 
 - self . backgroundImage . backgroundColor = UIColor . whiteColor ( ) 
 - 
 - if ActorSDK . sharedActor ( ) . useBackgroundOnWelcomeScreen = = true { 
 - 
 - self . backgroundImage . image = UIImage . bundled ( " bg _ 2 . jpg " ) 
 - 
 - } 
 - 
 - self . logoView . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 , 80 , screenWidth / 2 , screenWidth / 2 ) 
 - 
 - self . logoView . image = UIImage . bundled ( " main _ logo " ) 
 - 
 - / / / 
 - 
 - self . appNameLabel . text = ActorSDK . sharedActor ( ) . appNameInLocStrings 
 - self . appNameLabel . textAlignment = . Center 
 - self . appNameLabel . backgroundColor = UIColor . clearColor ( ) 
 - self . appNameLabel . font = UIFont ( name : " HelveticaNeue - Light " , size : 35 ) 
 - self . appNameLabel . textColor = ActorSDK . sharedActor ( ) . style . vcStarInfoTextColor 
 + self . view . backgroundColor = UIColor ( red : 94 , green : 142 , blue : 192 ) 
 
 - self . appNameLabel . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 , self . logoView . frame . maxY + 10 , screenWidth / 2 , 40 ) 
 + self . logoView . image = UIImage . bundled ( " logo _ welcome " ) 
 
 - / / / 
 + appNameLabel . text = " Welcome To Actor ! " 
 + appNameLabel . textAlignment = . Center 
 + appNameLabel . backgroundColor = UIColor . clearColor ( ) 
 + appNameLabel . font = UIFont . mediumSystemFontOfSize ( 24 ) 
 + appNameLabel . textColor = UIColor . whiteColor ( ) 
 
 - self . someInfoLabel . text = AALocalized ( " AuthMoreInfo " ) 
 - self . someInfoLabel . textAlignment = . Center 
 - self . someInfoLabel . backgroundColor = UIColor . clearColor ( ) 
 - self . someInfoLabel . font = UIFont ( name : " HelveticaNeue - Light " , size : 17 ) 
 - self . someInfoLabel . numberOfLines = 0 
 - self . someInfoLabel . textColor = ActorSDK . sharedActor ( ) . style . vcStarInfoTextColor 
 + someInfoLabel . text = " \ " Open messaging that respects you \ " " 
 + someInfoLabel . textAlignment = . Center 
 + someInfoLabel . backgroundColor = UIColor . clearColor ( ) 
 + someInfoLabel . font = UIFont . systemFontOfSize ( 16 ) 
 + someInfoLabel . numberOfLines = 1 
 + someInfoLabel . textColor = UIColor . whiteColor ( ) 
 
 - self . someInfoLabel . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 - 45 , self . appNameLabel . frame . maxY + 5 , screenWidth / 2 + 90 , 60 ) 
 + signupButton . setTitle ( " Sign Up " , forState : . Normal ) 
 + signupButton . titleLabel ? . font = UIFont . mediumSystemFontOfSize ( 17 ) 
 + signupButton . setTitleColor ( UIColor ( red : 94 , green : 142 , blue : 192 ) , forState : . Normal ) 
 + signupButton . setBackgroundImage ( Imaging . roundedImage ( UIColor . whiteColor ( ) , radius : 22 ) , forState : . Normal ) 
 + signupButton . setBackgroundImage ( Imaging . roundedImage ( UIColor . whiteColor ( ) . alpha ( 0 . 7 ) , radius : 22 ) , forState : . Highlighted ) 
 + signupButton . addTarget ( self , action : " signupAction " , forControlEvents : UIControlEvents . TouchUpInside ) 
 
 - / / / 
 - self . doneButton . setTitle ( AALocalized ( " AuthStarButton " ) , forState : UIControlState . Normal ) 
 - self . doneButton . setTitleColor ( ActorSDK . sharedActor ( ) . style . vcStarButton , forState : UIControlState . Normal ) 
 - self . doneButton . tintColor = ActorSDK . sharedActor ( ) . style . vcStarButton 
 - self . doneButton . frame = CGRectMake ( screenWidth / 2 - screenWidth / 4 - 20 , screenHeight - 50 , screenWidth / 2 , 30 ) 
 - 
 - self . doneButton . titleLabel ! . font = UIFont ( name : " HelveticaNeue - Light " , size : 17 ) 
 - 
 - self . doneButton . setImage ( UIImage . bundled ( " OnboardNext " ) , forState : UIControlState . Normal ) 
 - self . doneButton . imageEdgeInsets = UIEdgeInsetsMake ( 5 , screenWidth / 2 + 20 , 0 , 0 ) 
 - 
 - self . doneButton . addTarget ( self , action : " doneButtonAction " , forControlEvents : UIControlEvents . TouchUpInside ) 
 - 
 - 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - self . view . addSubview ( self . backgroundImage ) 
 + signinButton . setTitle ( " Sign In " , forState : . Normal ) 
 + signinButton . titleLabel ? . font = UIFont . systemFontOfSize ( 17 ) 
 + signinButton . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) 
 + signinButton . setTitleColor ( UIColor . whiteColor ( ) . alpha ( 0 . 7 ) , forState : . Highlighted ) 
 + signinButton . addTarget ( self , action : " signInAction " , forControlEvents : UIControlEvents . TouchUpInside ) 
 
 self . view . addSubview ( self . logoView ) 
 self . view . addSubview ( self . appNameLabel ) 
 self . view . addSubview ( self . someInfoLabel ) 
 + self . view . addSubview ( self . signupButton ) 
 + self . view . addSubview ( self . signinButton ) 
 + } 
 + 
 + override public func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 
 - self . view . addSubview ( self . doneButton ) 
 - 
 + logoView . frame = CGRectMake ( ( view . width - 90 ) / 2 , 145 , 90 , 90 ) 
 + appNameLabel . frame = CGRectMake ( ( view . width - 300 ) / 2 , logoView . bottom + 35 , 300 , 29 ) 
 + someInfoLabel . frame = CGRectMake ( ( view . width - 300 ) / 2 , appNameLabel . bottom + 8 , 300 , 46 ) 
 
 + signupButton . frame = CGRectMake ( ( view . width - 136 ) / 2 , view . height - 44 - 90 , 136 , 44 ) 
 + signinButton . frame = CGRectMake ( ( view . width - 136 ) / 2 , view . height - 44 - 35 , 136 , 44 ) 
 } 
 
 - override func viewDidLoad ( ) { 
 - super . viewDidLoad ( ) 
 - 
 - / / Do any additional setup after loading the view . 
 - } 
 - 
 - override func didReceiveMemoryWarning ( ) { 
 - super . didReceiveMemoryWarning ( ) 
 - / / Dispose of any resources that can be recreated . 
 + public func signupAction ( ) { 
 + / / TODO : Remove BG after auth ? 
 + UIApplication . sharedApplication ( ) . keyWindow ? . backgroundColor = UIColor ( red : 94 , green : 142 , blue : 192 ) 
 + self . presentElegantViewController ( AAAuthNavigationController ( rootViewController : AAAuthAskName ( ) ) ) 
 } 
 
 - 
 - func doneButtonAction ( ) { 
 - 
 - self . navigationController ? . pushViewController ( AAAuthPhoneViewController ( ) , animated : true ) 
 + public func signInAction ( ) { 
 
 } 
 
 - 
 + public override func viewWillAppear ( animated : Bool ) { 
 + super . viewWillAppear ( animated ) 
 + 
 + / / TODO : Fix after cancel ? 
 + UIApplication . sharedApplication ( ) . setStatusBarStyle ( . LightContent , animated : true ) 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift 
 index e0292e8 . . b0c317f 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift 	 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / AAViewController . swift 	 
 @ @ - 5 , 8 + 5 , 9 @ @ 
 import UIKit 
 import MobileCoreServices 
 import RSKImageCropper 
 + import ElegantPresentations 
 
 - public class AAViewController : UIViewController , UINavigationControllerDelegate , UIImagePickerControllerDelegate , RSKImageCropViewControllerDelegate { 
 + public class AAViewController : UIViewController , UINavigationControllerDelegate , UIImagePickerControllerDelegate , RSKImageCropViewControllerDelegate , UIViewControllerTransitioningDelegate { 
 
 / / MARK : - 
 / / MARK : Public vars 
 @ @ - 215 , 4 + 216 , 19 @ @ public class AAViewController : UIViewController , UINavigationControllerDelegate , 
 pendingPickClosure = nil 
 self . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 - } 
 + 
 + public func presentationControllerForPresentedViewController ( presented : UIViewController , presentingViewController presenting : UIViewController , sourceViewController source : UIViewController ) - > UIPresentationController ? { 
 + return ElegantPresentations . controller ( presentedViewController : presented , presentingViewController : presenting , options : [ ] ) 
 + } 
 + 
 + public func presentElegantViewController ( controller : UIViewController ) { 
 + if AADevice . isiPad { 
 + controller . modalPresentationStyle = . FormSheet 
 + presentViewController ( controller , animated : true , completion : nil ) 
 + } else { 
 + controller . modalPresentationStyle = . Custom 
 + controller . transitioningDelegate = self 
 + presentViewController ( controller , animated : true , completion : nil ) 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift 
 index a79b97c . . 11ad585 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Colors . swift 
 @ @ - 20 , 6 + 20 , 13 @ @ public extension UIColor { 
 alpha : CGFloat ( alpha ) ) 
 } 
 
 + public convenience init ( red : UInt , green : UInt , blue : UInt ) { 
 + self . init ( red : CGFloat ( red ) / 255 . 0 , 
 + green : CGFloat ( green ) / 255 . 0 , 
 + blue : CGFloat ( blue ) / 255 . 0 , 
 + alpha : CGFloat ( 1 . 0 ) ) 
 + } 
 + 
 public class func alphaBlack ( alpha : Double ) - > UIColor { 
 return UIColor ( red : 0 , green : 0 , blue : 0 , alpha : CGFloat ( alpha ) ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / Podfile b / actor - sdk / sdk - core - ios / Podfile 
 index 9d6bf42 . . cca02a4 100644 
 - - - a / actor - sdk / sdk - core - ios / Podfile 
 + + + b / actor - sdk / sdk - core - ios / Podfile 
 @ @ - 28 , 6 + 28 , 7 @ @ target ' ActorApp ' do 
 pod ' RSKImageCropper ' 
 pod ' JDStatusBarNotification ' 
 pod ' Neon ' 
 + pod ' ElegantPresentations ' 
 
 # Small UI 
 pod ' VBFPopFlatButton ' 
 @ @ - 63 , 6 + 64 , 7 @ @ target ' ActorSDK ' do 
 pod ' TTTAttributedLabel ' 
 pod ' RSKImageCropper ' 
 pod ' JDStatusBarNotification ' 
 + pod ' ElegantPresentations ' 
 
 # Small UI 
 pod ' VBFPopFlatButton '
