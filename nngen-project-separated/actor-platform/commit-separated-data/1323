BLEU SCORE: 0.317023313852343

TEST MSG: feat ( iOS ) : terms of use on auth + locs
GENERATED MSG: feat ( iOS ) : Location preview cell

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 5221704 . . 3b63c61 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 212 , 6 + 212 , 9 @ @ < nl > 	 	 153F6B5B1C2B109400C0B960 / * AABubbleVoiceCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / ; } ; < nl > 	 	 153F6B5D1C2B3AC500C0B960 / * AABubbleStickerCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / ; } ; < nl > 	 	 153F6B611C2BF8EC00C0B960 / * AAAuthWelcomeController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / ; } ; < nl > + 	 	 153F6B8A1C2D7BA300C0B960 / * AATapLabelDelegate . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / ; } ; < nl > + 	 	 153F6B8B1C2D7BA400C0B960 / * AATapLabel . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / ; } ; < nl > + 	 	 153F6B8E1C2D868100C0B960 / * AATermsController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / ; } ; < nl > 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0C1C20185500E3717A / * diag _ range . c * / ; } ; < nl > 	 	 15D35F171C20185500E3717A / * diag _ range . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15D35F0D1C20185500E3717A / * diag _ range . h * / ; } ; < nl > 	 	 15D35F181C20185500E3717A / * opus _ header . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0E1C20185500E3717A / * opus _ header . c * / ; } ; < nl > @ @ - 482 , 6 + 485 , 9 @ @ < nl > 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVoiceCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleStickerCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; name = AAAuthWelcomeController . swift ; path = . . / AAAuthWelcomeController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabelDelegate . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabel . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATermsController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 15D35F0C1C20185500E3717A / * diag _ range . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = diag _ range . c ; sourceTree = " < group > " ; } ; < nl > 	 	 15D35F0D1C20185500E3717A / * diag _ range . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = diag _ range . h ; sourceTree = " < group > " ; } ; < nl > 	 	 15D35F0E1C20185500E3717A / * opus _ header . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = opus _ header . c ; sourceTree = " < group > " ; } ; < nl > @ @ - 797 , 6 + 803 , 7 @ @ < nl > 	 	 066A52601BC50E6B000E606E / * Auth * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > + 	 	 	 	 153F6B8C1C2D83B200C0B960 / * Views * / , < nl > 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , < nl > 	 	 	 	 066A526E1BC51007000E606E / * Views * / , < nl > 	 	 	 	 066A526B1BC50E83000E606E / * Cells * / , < nl > @ @ - 1096 , 6 + 1103 , 7 @ @ < nl > 	 	 152AA8901C29887A0030DEEE / * Extensions * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > + 	 	 	 	 153F6B871C2D7B9700C0B960 / * TapedLabel * / , < nl > 	 	 	 	 152AA8911C29891B0030DEEE / * SlackTextViewController * / , < nl > 	 	 	 ) ; < nl > 	 	 	 name = Extensions ; < nl > @ @ - 1145 , 6 + 1153 , 23 @ @ < nl > 	 	 	 name = Ext ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > 	 	 } ; < nl > + 	 	 153F6B871C2D7B9700C0B960 / * TapedLabel * / = { < nl > + 	 	 	 isa = PBXGroup ; < nl > + 	 	 	 children = ( < nl > + 	 	 	 	 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / , < nl > + 	 	 	 	 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / , < nl > + 	 	 	 ) ; < nl > + 	 	 	 name = TapedLabel ; < nl > + 	 	 	 sourceTree = " < group > " ; < nl > + 	 	 } ; < nl > + 	 	 153F6B8C1C2D83B200C0B960 / * Views * / = { < nl > + 	 	 	 isa = PBXGroup ; < nl > + 	 	 	 children = ( < nl > + 	 	 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / , < nl > + 	 	 	 ) ; < nl > + 	 	 	 name = Views ; < nl > + 	 	 	 sourceTree = " < group > " ; < nl > + 	 	 } ; < nl > 	 	 15D35F0A1C20182900E3717A / * AudioRecorder * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > @ @ - 1560 , 6 + 1585 , 7 @ @ < nl > 	 	 	 	 066A51241BC4B56D000E606E / * Colors . swift in Sources * / , < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 153F6B591C2B03E300C0B960 / * AAGarbageView . m in Sources * / , < nl > + 	 	 	 	 153F6B8B1C2D7BA400C0B960 / * AATapLabel . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , < nl > @ @ - 1572 , 6 + 1598 , 7 @ @ < nl > 	 	 	 	 066A51541BC4BE95000E606E / * Images . swift in Sources * / , < nl > 	 	 	 	 152AA8A71C2989270030DEEE / * SLKInputAccessoryView . m in Sources * / , < nl > 	 	 	 	 066A52801BC51ED0000E606E / * AARootTabViewController . swift in Sources * / , < nl > + 	 	 	 	 153F6B8E1C2D868100C0B960 / * AATermsController . swift in Sources * / , < nl > 	 	 	 	 066A522A1BC4EEAC000E606E / * ManagedAlerts . swift in Sources * / , < nl > 	 	 	 	 069CF4D11BCB909A00C66E12 / * CLTokenInputView . m in Sources * / , < nl > 	 	 	 	 066A52451BC4EECD000E606E / * AAAvatarCell . swift in Sources * / , < nl > @ @ - 1582 , 6 + 1609 , 7 @ @ < nl > 	 	 	 	 066A52151BC4EE04000E606E / * AAAvatarView . swift in Sources * / , < nl > 	 	 	 	 066A52591BC4EF61000E606E / * Executions . swift in Sources * / , < nl > 	 	 	 	 066A519C1BC4C390000E606E / * FMDBIndex . swift in Sources * / , < nl > + 	 	 	 	 153F6B8A1C2D7BA300C0B960 / * AATapLabelDelegate . swift in Sources * / , < nl > 	 	 	 	 15D35F5E1C20187E00E3717A / * AANativeAudioPlayer . m in Sources * / , < nl > 	 	 	 	 066A52DB1BC52385000E606E / * AAContactActionCell . swift in Sources * / , < nl > 	 	 	 	 15D35F331C20187200E3717A / * opusfile . c in Sources * / , < nl > @ @ - 1835 , 7 + 1863 , 7 @ @ < nl > 	 	 	 	 SKIP _ INSTALL = YES ; < nl > 	 	 	 	 STRIP _ INSTALLED _ PRODUCT = YES ; < nl > 	 	 	 	 SWIFT _ OBJC _ BRIDGING _ HEADER = " " ; < nl > - 	 	 	 	 SWIFT _ OPTIMIZATION _ LEVEL = " - Onone " ; < nl > + 	 	 	 	 SWIFT _ OPTIMIZATION _ LEVEL = " - Owholemodule " ; < nl > 	 	 	 } ; < nl > 	 	 	 name = Debug ; < nl > 	 	 } ; < nl > @ @ - 1871 , 6 + 1899 , 7 @ @ < nl > 	 	 	 	 	 " $ ( PROJECT _ DIR ) / ActorSDK / Sources / Utils " , < nl > 	 	 	 	 ) ; < nl > 	 	 	 	 MACH _ O _ TYPE = mh _ dylib ; < nl > + 	 	 	 	 ONLY _ ACTIVE _ ARCH = YES ; < nl > 	 	 	 	 OTHER _ LDFLAGS = ( < nl > 	 	 	 	 	 " - lactor " , < nl > 	 	 	 	 	 " $ ( inherited ) " , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index 4d5901c . . 4fde493 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 380 , 6 + 380 , 10 @ @ < nl > < nl > " AuthPhoneHint " = " Please confirm your country code and enter your phone number . " ; < nl > < nl > + " AuthTermsOfServiceFull " = " By signing up , you agree to the Terms of Service . " ; < nl > + < nl > + " AuthTermsOfService " = " Terms of Service " ; < nl > + < nl > " AuthPhoneTooShort " = " Phone number too short " ; < nl > < nl > " AuthCodeFieldHint " = " Code " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > index 5a6beb2 . . afe2c9d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > @ @ - 6 , 7 + 6 , 9 @ @ < nl > < nl > " AuthStarButton " = " Empieza a chatear " ; < nl > < nl > - / / / < nl > + " AuthTermsOfServiceFull " = " Al inscribirte , aceptas las Condiciones del servicio . " ; < nl > + < nl > + " AuthTermsOfService " = " Condiciones del servicio " ; < nl > < nl > " TabMessages " = " Mensajes " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > index 92deae0 . . fae671e 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > @ @ - 3 , 8 + 3 , 10 @ @ < nl > / / < nl > < nl > import UIKit < nl > + import TTTAttributedLabel < nl > < nl > - public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegate , AAAuthCountriesViewControllerDelegate { < nl > + public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegate , AAAuthCountriesViewControllerDelegate , < nl > + AATapLabelDelegate { < nl > < nl > / / Views < nl > < nl > @ @ - 13 , 10 + 15 , 13 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat < nl > private var countryButton : UIButton ! < nl > private var phoneBackgroundView : UIImageView ! < nl > private var countryCodeLabel : UILabel ! < nl > + private var termsofuseLabel : TapLabel ! < nl > private var phoneTextField : ABPhoneField ! < nl > private var hintLabel : UILabel ! < nl > private var navigationBarSeparator : UIView ! < nl > + / / " AuthTermsOfServiceFull " = " By signing up , you agree to the Terms of Service . " ; < nl > < nl > + / / " AuthTermsOfService " = " Terms of Service " ; < nl > / / Constructors < nl > < nl > public override init ( ) { < nl > @ @ - 99 , 6 + 104 , 41 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat < nl > hintLabel . textLocalized = " AuthPhoneHint " < nl > view . addSubview ( hintLabel ) < nl > < nl > + / / terms of use < nl > + termsofuseLabel = TapLabel ( ) < nl > + < nl > + termsofuseLabel . delegate = self < nl > + termsofuseLabel . numberOfLines = 0 < nl > + < nl > + let termsFullString = AALocalized ( " AuthTermsOfServiceFull " ) < nl > + let termsString = AALocalized ( " AuthTermsOfService " ) < nl > + < nl > + let paragrahStyle = NSMutableParagraphStyle ( ) < nl > + paragrahStyle . alignment = NSTextAlignment . Center < nl > + < nl > + let atrsPolicy = [ NSFontAttributeName : UIFont . systemFontOfSize ( 11 ) , < nl > + NSParagraphStyleAttributeName : paragrahStyle , < nl > + NSForegroundColorAttributeName : UIColor . lightGrayColor ( ) ] < nl > + < nl > + let policyMutText = NSMutableAttributedString ( string : termsFullString , < nl > + attributes : atrsPolicy ) < nl > + < nl > + termsofuseLabel . attributedText = policyMutText < nl > + < nl > + let termsRangeSwift = termsofuseLabel . text ? . rangeOfString ( termsString ) < nl > + let termsPos = termsofuseLabel . text ? . startIndex . distanceTo ( termsRangeSwift ! . startIndex ) < nl > + < nl > + let termsRange = NSMakeRange ( termsPos ! , termsString . length ) < nl > + < nl > + policyMutText . addAttribute ( TapLabel . LinkContentName , value : " openterms " , range : termsRange ) < nl > + policyMutText . addAttribute ( NSForegroundColorAttributeName , value : UIColor . blueColor ( ) , range : termsRange ) < nl > + policyMutText . addAttribute ( TapLabel . SelectedForegroudColorName , value : UIColor . blueColor ( ) , range : termsRange ) < nl > + < nl > + termsofuseLabel . attributedText = policyMutText < nl > + < nl > + self . view . addSubview ( termsofuseLabel ) < nl > + < nl > + < nl > / / Setting default country < nl > let defaultIso = phoneTextField . currentIso < nl > let countryCode = ABPhoneField . callingCodeByCountryCode ( ) [ defaultIso ] as ! String < nl > @ @ - 151 , 6 + 191 , 11 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat < nl > < nl > let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) < nl > hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; < nl > + < nl > + let termsLabelSize = termsofuseLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) < nl > + < nl > + termsofuseLabel . frame = CGRect ( x : ( screenSize . width - termsLabelSize . width ) / 2 . 0 , y : hintLabel . frame . maxY + 5 , width : termsLabelSize . width , height : termsLabelSize . height ) ; < nl > + < nl > } < nl > < nl > / / Constoller states < nl > @ @ - 160 , 6 + 205 , 11 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat < nl > phoneTextField . becomeFirstResponder ( ) < nl > } < nl > < nl > + public override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + phoneTextField . resignFirstResponder ( ) < nl > + } < nl > + < nl > / / Actions < nl > < nl > public func nextButtonPressed ( ) { < nl > @ @ - 207 , 4 + 257 , 12 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat < nl > public func textField ( textField : UITextField , shouldChangeCharactersInRange range : NSRange , replacementString string : String ) - > Bool { < nl > return true < nl > } < nl > + < nl > + public func tapLabel ( tapLabel : TapLabel , didSelectLink link : String ) { < nl > + < nl > + / / open terms < nl > + < nl > + self . presentViewController ( AATermsController ( ) , animated : true , completion : nil ) < nl > + < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AATermsController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AATermsController . swift < nl > new file mode 100644 < nl > index 0000000 . . cb82d60 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AATermsController . swift < nl > @ @ - 0 , 0 + 1 , 125 @ @ < nl > + / / < nl > + / / AATermsController . swift < nl > + / / ActorSDK < nl > + < nl > + < nl > + import UIKit < nl > + < nl > + class AATermsController : UIViewController , UIViewControllerTransitioningDelegate { < nl > + < nl > + var alertView : UIView ! < nl > + var alertTitleLabel : UILabel ! < nl > + var alertTextView : UITextView ! < nl > + var buttonOk : UIButton ! < nl > + < nl > + < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + < nl > + required init ( coder aDecoder : NSCoder ) { < nl > + super . init ( coder : aDecoder ) ! < nl > + < nl > + self . commonInit ( ) < nl > + < nl > + } < nl > + < nl > + override init ( nibName nibNameOrNil : String ! , bundle nibBundleOrNil : NSBundle ! ) { < nl > + super . init ( nibName : nibNameOrNil , bundle : nibBundleOrNil ) < nl > + < nl > + self . commonInit ( ) < nl > + < nl > + } < nl > + < nl > + func commonInit ( ) { < nl > + self . modalPresentationStyle = . Custom < nl > + self . transitioningDelegate = self < nl > + } < nl > + < nl > + override func preferredStatusBarStyle ( ) - > UIStatusBarStyle { < nl > + return UIStatusBarStyle . LightContent < nl > + } < nl > + < nl > + / / - - - - UIViewControllerTransitioningDelegate methods < nl > + func presentationControllerForPresentedViewController ( presented : UIViewController , presentingViewController presenting : UIViewController , sourceViewController source : UIViewController ) - > UIPresentationController ? { < nl > + < nl > + if presented = = self { < nl > + return AACustomPresentationController ( presentedViewController : presented , presentingViewController : presenting ) < nl > + } < nl > + < nl > + return nil < nl > + } < nl > + < nl > + func animationControllerForPresentedController ( presented : UIViewController , presentingController presenting : UIViewController , sourceController source : UIViewController ) - > UIViewControllerAnimatedTransitioning ? { < nl > + < nl > + if presented = = self { < nl > + return AACustomPresentationAnimationController ( isPresenting : true ) < nl > + } < nl > + else { < nl > + return nil < nl > + } < nl > + } < nl > + < nl > + func animationControllerForDismissedController ( dismissed : UIViewController ) - > UIViewControllerAnimatedTransitioning ? { < nl > + < nl > + if dismissed = = self { < nl > + return AACustomPresentationAnimationController ( isPresenting : false ) < nl > + } < nl > + else { < nl > + return nil < nl > + } < nl > + } < nl > + < nl > + override func loadView ( ) { < nl > + super . loadView ( ) < nl > + < nl > + self . alertView = UIView ( ) < nl > + self . alertView . frame = CGRectMake ( self . view . frame . width / 2 - 120 , self . view . frame . height / 2 - 165 , 240 , 330 ) < nl > + self . alertView . backgroundColor = UIColor . whiteColor ( ) < nl > + self . alertView . layer . cornerRadius = 10 < nl > + self . alertView . layer . masksToBounds = true < nl > + self . view . addSubview ( self . alertView ) < nl > + < nl > + self . alertTitleLabel = UILabel ( ) < nl > + self . alertTitleLabel . font = UIFont ( name : " HelveticaNeue - Bold " , size : 17 ) < nl > + self . alertTitleLabel . frame = CGRectMake ( 10 , 10 , 220 , 30 ) < nl > + self . alertTitleLabel . text = AALocalized ( " AuthTermsOfService " ) < nl > + self . alertTitleLabel . backgroundColor = UIColor . clearColor ( ) < nl > + self . alertTitleLabel . textAlignment = . Center < nl > + self . alertView . addSubview ( self . alertTitleLabel ) < nl > + < nl > + self . alertTextView = UITextView ( ) < nl > + self . alertTextView . font = UIFont ( name : " HelveticaNeue - Light " , size : 13 ) < nl > + self . alertTextView . scrollEnabled = false < nl > + self . alertTextView . backgroundColor = UIColor . clearColor ( ) < nl > + self . alertTextView . editable = false < nl > + self . alertTextView . text = " By signing up to \ ( ActorSDK . sharedActor ( ) . appNameInLocStrings ) , you agree not to : \ n \ n - use our service to send spam and scam users . \ n " + " - use our service to send spam and scam users . \ n " + " - use our service to send spam and scam users . \ n " + " - promote violence on publicly viewable \ ( ActorSDK . sharedActor ( ) . appNameInLocStrings ) bots or channels . \ n \ n " + " We reserve the right to update these Terms of Service later . " < nl > + self . alertTextView . frame = CGRectMake ( 10 , 45 , 220 , 270 ) ; < nl > + self . alertView . addSubview ( self . alertTextView ) < nl > + < nl > + let separatorView = UIView ( ) < nl > + separatorView . frame = CGRectMake ( 0 , 290 , 240 , 0 . 5 ) < nl > + separatorView . backgroundColor = UIColor . lightGrayColor ( ) . colorWithAlphaComponent ( 0 . 5 ) < nl > + self . alertView . addSubview ( separatorView ) < nl > + < nl > + self . buttonOk = UIButton ( type : UIButtonType . System ) < nl > + self . buttonOk . setTitle ( " OK " , forState : UIControlState . Normal ) < nl > + self . buttonOk . setTitleColor ( UIColor . blueColor ( ) , forState : UIControlState . Normal ) < nl > + self . buttonOk . frame = CGRectMake ( 0 , 291 , 240 , 39 ) < nl > + self . buttonOk . addTarget ( self , action : " closeController " , forControlEvents : UIControlEvents . TouchUpInside ) < nl > + self . alertView . addSubview ( self . buttonOk ) < nl > + < nl > + } < nl > + < nl > + override func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + let touch = UITapGestureRecognizer ( target : self , action : " closeController " ) < nl > + self . view . addGestureRecognizer ( touch ) < nl > + < nl > + } < nl > + < nl > + / / actions < nl > + func closeController ( ) { < nl > + self . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > + < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabel . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabel . swift < nl > new file mode 100755 < nl > index 0000000 . . 80eb4fd < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabel . swift < nl > @ @ - 0 , 0 + 1 , 267 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public class TapLabel : UILabel , NSLayoutManagerDelegate { < nl > + < nl > + public static let LinkContentName = " TapLabelLinkContentName " < nl > + public static let SelectedForegroudColorName = " TapLabelSelectedForegroudColorName " < nl > + < nl > + public weak var delegate : AATapLabelDelegate ? < nl > + < nl > + private let layoutManager = NSLayoutManager ( ) < nl > + private let textContainer = NSTextContainer ( ) < nl > + private let textStorage = NSTextStorage ( ) < nl > + private var rangesForUrls = [ NSRange ] ( ) < nl > + private var links = [ String : NSRange ] ( ) < nl > + private var isTouchMoved = false < nl > + private var defaultSelectedForegroundColor : UIColor ? < nl > + < nl > + private var selected : ( String , NSRange ) ? { < nl > + didSet { < nl > + if let ( _ , range ) = selected < nl > + { < nl > + if let currentColor = textStorage . attribute ( NSForegroundColorAttributeName , < nl > + atIndex : range . location , < nl > + effectiveRange : nil ) as ? UIColor < nl > + { < nl > + defaultSelectedForegroundColor = currentColor < nl > + } < nl > + < nl > + if let color = textStorage . attribute ( TapLabel . SelectedForegroudColorName , < nl > + atIndex : range . location , < nl > + effectiveRange : nil ) as ? UIColor < nl > + { < nl > + textStorage . addAttribute ( NSForegroundColorAttributeName , value : color , range : range ) < nl > + } < nl > + } < nl > + else if let ( _ , range ) = oldValue < nl > + { < nl > + textStorage . addAttribute ( NSForegroundColorAttributeName , < nl > + value : defaultSelectedForegroundColor ! , < nl > + range : range ) < nl > + } < nl > + < nl > + setNeedsDisplay ( ) < nl > + } < nl > + } < nl > + < nl > + public override var lineBreakMode : NSLineBreakMode { < nl > + didSet { < nl > + textContainer . lineBreakMode = lineBreakMode < nl > + } < nl > + } < nl > + < nl > + public override var numberOfLines : Int { < nl > + didSet { < nl > + textContainer . maximumNumberOfLines = numberOfLines < nl > + } < nl > + } < nl > + < nl > + public override var attributedText : NSAttributedString ! { < nl > + didSet { < nl > + textStorage . setAttributedString ( attributedText ) < nl > + updateLinks ( ) < nl > + updateRangesForUrls ( ) < nl > + } < nl > + } < nl > + < nl > + public override var frame : CGRect { < nl > + didSet { < nl > + textContainer . size = frame . size < nl > + } < nl > + } < nl > + < nl > + public override var bounds : CGRect { < nl > + didSet { < nl > + textContainer . size = bounds . size < nl > + } < nl > + } < nl > + < nl > + public override init ( frame : CGRect ) { < nl > + super . init ( frame : frame ) < nl > + < nl > + textContainer . lineFragmentPadding = 0 < nl > + textContainer . lineBreakMode = lineBreakMode < nl > + textContainer . maximumNumberOfLines = numberOfLines < nl > + textContainer . size = frame . size < nl > + < nl > + layoutManager . addTextContainer ( textContainer ) < nl > + layoutManager . delegate = self < nl > + < nl > + textStorage . addLayoutManager ( layoutManager ) < nl > + < nl > + userInteractionEnabled = true < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + private func updateLinks ( ) { < nl > + links = [ String : NSRange ] ( ) < nl > + < nl > + attributedText . enumerateAttribute ( TapLabel . LinkContentName , < nl > + inRange : NSMakeRange ( 0 , attributedText . length ) , < nl > + options : NSAttributedStringEnumerationOptions ( rawValue : 0 ) ) < nl > + { < nl > + value , range , stop in < nl > + < nl > + if let v = value as ? String { < nl > + self . links [ v ] = range < nl > + } < nl > + } < nl > + } < nl > + < nl > + private func updateRangesForUrls ( ) < nl > + { < nl > + / / var error : NSError ? < nl > + < nl > + / / NSDataDetector ( types : NSTextCheckingType . Link . rawValue , error : & error ) ! < nl > + < nl > + < nl > + / / do { < nl > + / / try ! < nl > + / / } < nl > + / / < nl > + / / < nl > + / / let detector = NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) < nl > + / / let plainText = attributedText . string < nl > + / / let matches = detector . matchesInString ( plainText , < nl > + / / options : NSMatchingOptions ( 0 ) , < nl > + / / range : NSMakeRange ( 0 , count ( plainText ) ) ) as ! [ NSTextCheckingResult ] < nl > + / / < nl > + / / rangesForUrls = matches . map { $ 0 . range } < nl > + } < nl > + < nl > + public override func textRectForBounds ( bounds : CGRect , limitedToNumberOfLines numberOfLines : Int ) - > CGRect < nl > + { < nl > + let savedTextContainerSize = textContainer . size < nl > + let savedTextContainerNumberOfLines = textContainer . maximumNumberOfLines < nl > + < nl > + textContainer . size = bounds . size < nl > + textContainer . maximumNumberOfLines = numberOfLines < nl > + < nl > + let glyphRange = layoutManager . glyphRangeForTextContainer ( textContainer ) < nl > + var textBounds = layoutManager . boundingRectForGlyphRange ( glyphRange , inTextContainer : textContainer ) < nl > + < nl > + textBounds . origin = bounds . origin < nl > + textBounds . size . width = ceil ( textBounds . size . width ) < nl > + textBounds . size . height = ceil ( textBounds . size . height ) < nl > + < nl > + textContainer . size = savedTextContainerSize < nl > + textContainer . maximumNumberOfLines = savedTextContainerNumberOfLines < nl > + < nl > + return textBounds ; < nl > + } < nl > + < nl > + public override func drawTextInRect ( rect : CGRect ) < nl > + { < nl > + let glyphRange = layoutManager . glyphRangeForTextContainer ( textContainer ) < nl > + let textOffset = calcTextOffsetForGlyphRange ( glyphRange ) < nl > + < nl > + layoutManager . drawBackgroundForGlyphRange ( glyphRange , atPoint : textOffset ) < nl > + layoutManager . drawGlyphsForGlyphRange ( glyphRange , atPoint : textOffset ) < nl > + } < nl > + < nl > + private func calcTextOffsetForGlyphRange ( glyphRange : NSRange ) - > CGPoint < nl > + { < nl > + var textOffset = CGPointZero < nl > + < nl > + let textBounds = layoutManager . boundingRectForGlyphRange ( glyphRange , inTextContainer : textContainer ) < nl > + let paddingHeight = ( self . bounds . size . height - textBounds . size . height ) / 2 < nl > + if ( paddingHeight > 0 ) { < nl > + textOffset . y = paddingHeight ; < nl > + } < nl > + < nl > + return textOffset ; < nl > + } < nl > + < nl > + private func linkAtPoint ( var point : CGPoint ) - > ( String , NSRange ) ? < nl > + { < nl > + if textStorage . length = = 0 { < nl > + return nil < nl > + } < nl > + < nl > + let glyphRange = layoutManager . glyphRangeForTextContainer ( textContainer ) < nl > + let textOffset = calcTextOffsetForGlyphRange ( glyphRange ) < nl > + < nl > + point . x = point . x - textOffset . x < nl > + point . y = point . y - textOffset . y < nl > + < nl > + let touchedChar = layoutManager . glyphIndexForPoint ( point , inTextContainer : textContainer ) < nl > + < nl > + var lineRange = NSRange ( ) < nl > + let lineRect = layoutManager . lineFragmentUsedRectForGlyphAtIndex ( touchedChar , effectiveRange : & lineRange ) < nl > + < nl > + if ! CGRectContainsPoint ( lineRect , point ) { < nl > + return nil < nl > + } < nl > + < nl > + / / Find the word that was touched and call the detection block < nl > + for ( link , range ) in links { < nl > + if range . location < = touchedChar & & touchedChar < range . location + range . length { < nl > + return ( link , range ) < nl > + } < nl > + } < nl > + < nl > + return nil < nl > + } < nl > + < nl > + / / MARK : - Interactions < nl > + < nl > + public override func touchesBegan ( touches : Set < UITouch > , withEvent event : UIEvent ? ) { < nl > + isTouchMoved = false < nl > + < nl > + let touchLocation = touches . first ! . locationInView ( self ) < nl > + < nl > + if let ( link , range ) = linkAtPoint ( touchLocation ) { < nl > + selected = ( link , range ) < nl > + } else { < nl > + super . touchesBegan ( touches , withEvent : event ) < nl > + } < nl > + < nl > + } < nl > + < nl > + public override func touchesMoved ( touches : Set < UITouch > , withEvent event : UIEvent ? ) { < nl > + super . touchesMoved ( touches , withEvent : event ) < nl > + isTouchMoved = true < nl > + selected = nil < nl > + } < nl > + < nl > + public override func touchesEnded ( touches : Set < UITouch > , withEvent event : UIEvent ? ) { < nl > + super . touchesEnded ( touches , withEvent : event ) < nl > + < nl > + if ! isTouchMoved { < nl > + if ( selected ! = nil ) { < nl > + delegate ? . tapLabel ( self , didSelectLink : selected ! . 0 ) < nl > + } < nl > + } < nl > + < nl > + selected = nil < nl > + } < nl > + < nl > + < nl > + public override func touchesCancelled ( touches : Set < UITouch > ? , withEvent event : UIEvent ? ) { < nl > + super . touchesCancelled ( touches , withEvent : event ) < nl > + selected = nil < nl > + } < nl > + < nl > + < nl > + / / MARK : - NSLayoutManagerDelegate < nl > + < nl > + @ objc public func layoutManager ( < nl > + layoutManager : NSLayoutManager , < nl > + shouldBreakLineByWordBeforeCharacterAtIndex charIndex : Int ) - > Bool < nl > + { < nl > + for range in rangesForUrls { < nl > + if range . location < charIndex & & charIndex < range . location + range . length { < nl > + return false < nl > + } < nl > + } < nl > + return true < nl > + } < nl > + < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabelDelegate . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabelDelegate . swift < nl > new file mode 100755 < nl > index 0000000 . . 9318d79 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabelDelegate . swift < nl > @ @ - 0 , 0 + 1 , 11 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public protocol AATapLabelDelegate : class { < nl > + < nl > + func tapLabel ( tapLabel : TapLabel , didSelectLink link : String ) < nl > + < nl > + } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > index c38d4cd . . 56b461b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > @ @ - 22 , 6 + 22 , 9 @ @ import ActorSDK < nl > < nl > ActorSDK . sharedActor ( ) . style . searchStatusBarStyle = . Default < nl > < nl > + / / Enabling experimental features < nl > + ActorSDK . sharedActor ( ) . enableExperimentalFeatures = true < nl > + < nl > / / Creating Actor < nl > ActorSDK . sharedActor ( ) . createActor ( ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 9bf41a2 . . f26bdd0 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 172 , 6 + 172 , 9 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > + 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; < nl > + 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > + 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 347 , 6 + 350 , 9 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 530 , 6 + 536 , 7 @ @ < nl > 	 	 	 	 069CF4C31BCB908C00C66E12 / * CLTokenInputView * / , < nl > 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , < nl > 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , < nl > + 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , < nl > 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , < nl > 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , < nl > 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , < nl > @ @ - 589 , 6 + 596 , 7 @ @ < nl > 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , < nl > 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , < nl > 	 	 	 	 066A52C41BC521D5000E606E / * Content * / , < nl > + 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , < nl > 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , < nl > 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , < nl > 	 	 	 ) ; < nl > @ @ - 832 , 6 + 840 , 7 @ @ < nl > 	 	 	 	 066A53281BC53406000E606E / * AABubbleBaseFileCell . swift * / , < nl > 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , < nl > 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , < nl > + 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Cell ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 878 , 6 + 887 , 14 @ @ < nl > 	 	 	 name = CLTokenInputView ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > 	 	 } ; < nl > + 	 	 06E7B2451C0F8D410090660C / * Location * / = { < nl > + 	 	 	 isa = PBXGroup ; < nl > + 	 	 	 children = ( < nl > + 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , < nl > + 	 	 	 ) ; < nl > + 	 	 	 path = Location ; < nl > + 	 	 	 sourceTree = " < group > " ; < nl > + 	 	 } ; < nl > 	 	 2F428D134E194A828C3DF863 / * Frameworks * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > @ @ - 1107 , 6 + 1124 , 7 @ @ < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > + 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , < nl > 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , < nl > 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , < nl > 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , < nl > @ @ - 1171 , 6 + 1189 , 7 @ @ < nl > 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , < nl > 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , < nl > 	 	 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / , < nl > + 	 	 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / , < nl > 	 	 	 	 066A516D1BC4C366000E606E / * ActorCoreExt . swift in Sources * / , < nl > 	 	 	 	 066A517E1BC4C373000E606E / * FMDatabaseAdditions . m in Sources * / , < nl > 	 	 	 	 066A519A1BC4C390000E606E / * FMDBList . swift in Sources * / , < nl > @ @ - 1187 , 6 + 1206 , 7 @ @ < nl > 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , < nl > 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , < nl > 	 	 	 	 066A51901BC4C383000E606E / * CocoaNetworkRuntime . swift in Sources * / , < nl > + 	 	 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / , < nl > 	 	 	 	 066A52581BC4EF61000E606E / * Alerts . swift in Sources * / , < nl > 	 	 	 	 066A51691BC4C366000E606E / * AATools . swift in Sources * / , < nl > 	 	 	 	 066A53201BC533F5000E606E / * AABubbleBackgroundProcessor . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 3f92572 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPin @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 709d3b0 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 587321a . . 9edb0ad 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 82 , 6 + 82 , 9 @ @ public class ActorSDK { < nl > / / / Extensions < nl > private var extensions = [ ActorExtension ] ( ) < nl > < nl > + / / / Enable experimental features < nl > + public var enableExperimentalFeatures : Bool = false < nl > + < nl > / / < nl > / / User Onlines < nl > / / < nl > @ @ - 91 , 7 + 94 , 7 @ @ public class ActorSDK { < nl > < nl > / / / Disable this if you want manually handle online states < nl > public var automaticOnlineHandling = true < nl > - < nl > + < nl > / / < nl > / / Internal State < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > index ca23c70 . . a98f2ef 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > @ @ - 10 , 11 + 10 , 13 @ @ class AABubbles { < nl > static let mediaLayouter = AABubbleMediaCellLayouter ( ) < nl > static let documentLayouter = AABubbleDocumentCellLayout ( ) < nl > static let serviceLayouter = AABubbleServiceCellLayouter ( ) < nl > + static let locationLayouter = AABubbleLocationCellLayouter ( ) < nl > < nl > static let builtInLayouters : [ AABubbleLayouter ] = [ < nl > serviceLayouter , < nl > mediaLayouter , < nl > documentLayouter , < nl > + locationLayouter , < nl > textLayouter < nl > ] < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > new file mode 100644 < nl > index 0000000 . . 1c539ce < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 0 , 0 + 1 , 179 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + private let mapWidth : CGFloat = 200 < nl > + private let mapHeight : CGFloat = 160 < nl > + < nl > + public class AABubbleLocationCell : AABubbleCell { < nl > + < nl > + private let map = AAMapFastView ( mapWidth : mapWidth , mapHeight : mapHeight ) < nl > + < nl > + private let pin = UIImageView ( ) < nl > + private let timeBg = UIImageView ( ) < nl > + private let timeLabel = UILabel ( ) < nl > + private let statusView = UIImageView ( ) < nl > + < nl > + private var bindedLat : Double ? = nil < nl > + private var bindedLon : Double ? = nil < nl > + < nl > + public init ( frame : CGRect ) { < nl > + super . init ( frame : frame , isFullSize : false ) < nl > + < nl > + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) < nl > + < nl > + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > + timeLabel . textColor = appStyle . chatMediaDateColor < nl > + < nl > + statusView . contentMode = UIViewContentMode . Center < nl > + < nl > + pin . image = UIImage . bundled ( " LocationPin " ) < nl > + < nl > + contentView . addSubview ( map ) < nl > + map . addSubview ( pin ) < nl > + < nl > + contentView . addSubview ( timeBg ) < nl > + contentView . addSubview ( timeLabel ) < nl > + contentView . addSubview ( statusView ) < nl > + < nl > + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + < nl > + map . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mapDidTap " ) ) < nl > + map . userInteractionEnabled = true < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func mapDidTap ( ) { < nl > + let url = " http : / / maps . apple . com / ? q = \ ( bindedLat ! ) , \ ( bindedLon ! ) " < nl > + / / print ( " url : \ ( url ) " ) < nl > + UIApplication . sharedApplication ( ) . openURL ( NSURL ( string : url ) ! ) < nl > + } < nl > + < nl > + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > + < nl > + let layout = cellLayout as ! AALocationCellLayout < nl > + < nl > + bindedLat = layout . latitude < nl > + bindedLon = layout . longitude < nl > + < nl > + bubbleInsets = UIEdgeInsets ( < nl > + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , < nl > + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , < nl > + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , < nl > + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > + < nl > + if ( ! reuse ) { < nl > + < nl > + / / Bind bubble < nl > + if ( self . isOut ) { < nl > + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) < nl > + } else { < nl > + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) < nl > + } < nl > + } < nl > + < nl > + map . bind ( layout . latitude , longitude : layout . longitude ) < nl > + < nl > + / / Update time < nl > + timeLabel . text = cellLayout . date < nl > + < nl > + / / Update status < nl > + if ( isOut ) { < nl > + statusView . hidden = false < nl > + switch ( UInt ( message . messageState . ordinal ( ) ) ) { < nl > + case ACMessageState . PENDING . rawValue : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + case ACMessageState . SENT . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck1 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSent < nl > + break ; < nl > + case ACMessageState . RECEIVED . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaReceived < nl > + break ; < nl > + case ACMessageState . READ . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaRead < nl > + break ; < nl > + case ACMessageState . ERROR . rawValue : < nl > + self . statusView . image = appStyle . chatIconError ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaError < nl > + break < nl > + default : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + } < nl > + } else { < nl > + statusView . hidden = true < nl > + } < nl > + } < nl > + < nl > + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > + let insets = fullContentInsets < nl > + < nl > + layoutBubble ( mapWidth , contentHeight : mapHeight ) < nl > + < nl > + if isOut { < nl > + map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > + } else { < nl > + map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) < nl > + } < nl > + < nl > + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) < nl > + timeLabel . sizeToFit ( ) < nl > + < nl > + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width < nl > + let timeHeight : CGFloat = 20 < nl > + < nl > + timeLabel . frame = CGRectMake ( map . frame . maxX - timeWidth - 18 , map . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) < nl > + < nl > + if ( isOut ) { < nl > + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) < nl > + } < nl > + < nl > + pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height - pin . image ! . size . height ) / 2 , < nl > + pin . image ! . size . width , pin . image ! . size . height ) < nl > + < nl > + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) < nl > + } < nl > + } < nl > + < nl > + public class AALocationCellLayout : AACellLayout { < nl > + < nl > + let latitude : Double < nl > + let longitude : Double < nl > + < nl > + init ( latitude : Double , longitude : Double , date : Int64 ) { < nl > + self . latitude = latitude < nl > + self . longitude = longitude < nl > + super . init ( height : mapHeight , date : date , key : " location " ) < nl > + } < nl > + } < nl > + < nl > + public class AABubbleLocationCellLayouter : AABubbleLayouter { < nl > + < nl > + public func isSuitable ( message : ACMessage ) - > Bool { < nl > + if ( message . content is ACLocationContent ) { < nl > + return true < nl > + } < nl > + return false < nl > + } < nl > + < nl > + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { < nl > + let content = message . content as ! ACLocationContent < nl > + return AALocationCellLayout ( latitude : Double ( content . getLatitude ( ) ) , longitude : Double ( content . getLongitude ( ) ) , date : Int64 ( message . date ) ) < nl > + } < nl > + < nl > + public func cellClass ( ) - > AnyClass { < nl > + return AABubbleLocationCell . self < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 7704094 . . af819ab 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 308 , 6 + 308 , 12 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > self . pickDocument ( ) < nl > } < nl > < nl > + if ( ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { < nl > + builder . add ( " Location " ) { ( ) - > ( ) in < nl > + self . pickLocation ( ) < nl > + } < nl > + } < nl > + < nl > showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) < nl > } < nl > < nl > @ @ - 452 , 4 + 458 , 10 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > func imagePickerControllerDidCancel ( picker : UIImagePickerController ) { < nl > picker . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > + < nl > + / / Location picking < nl > + < nl > + func pickLocation ( ) { < nl > + < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > new file mode 100644 < nl > index 0000000 . . 123575a < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > @ @ - 0 , 0 + 1 , 24 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + class AALocationPickerController : AAViewController { < nl > + < nl > + let map = MKMapView ( ) < nl > + < nl > + override func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + self . view . addSubview ( map ) < nl > + } < nl > + < nl > + < nl > + override func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + map . frame = self . view . bounds < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 3d7e2c7 . . bf761a5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 17 , 8 + 17 , 8 @ @ public class AAAvatarView : UIImageView { < nl > < nl > var enableAnimation : Bool = false < nl > < nl > - private let cacheSize = 10 < nl > - private var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) < nl > + private static let cacheSize = 10 < nl > + private static var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) < nl > < nl > private var bindedFileId : jlong ! = nil < nl > private var bindedTitle : String ! = nil < nl > @ @ - 233 , 7 + 233 , 7 @ @ public class AAAvatarView : UIImageView { < nl > / / < nl > < nl > private func checkCache ( size : Int , id : Int64 ) - > UIImage ? { < nl > - if let cache = avatarCache [ size ] { < nl > + if let cache = AAAvatarView . avatarCache [ size ] { < nl > if let img = cache [ id ] { < nl > return img < nl > } < nl > @ @ - 242 , 12 + 242 , 12 @ @ public class AAAvatarView : UIImageView { < nl > } < nl > < nl > private func putToCache ( size : Int , id : Int64 , image : UIImage ) { < nl > - if let cache = avatarCache [ size ] { < nl > + if let cache = AAAvatarView . avatarCache [ size ] { < nl > cache [ id ] = image < nl > } else { < nl > - let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : cacheSize ) ; < nl > + let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : AAAvatarView . cacheSize ) ; < nl > cache [ id ] = image < nl > - avatarCache . updateValue ( cache , forKey : size ) < nl > + AAAvatarView . avatarCache . updateValue ( cache , forKey : size ) < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift < nl > new file mode 100644 < nl > index 0000000 . . 217c38e < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift < nl > @ @ - 0 , 0 + 1 , 58 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + public class AAMapFastView : UIImageView { < nl > + < nl > + static private var mapCache = AASwiftlyLRU < String , UIImage > ( capacity : 16 ) < nl > + < nl > + let mapWidth : CGFloat < nl > + let mapHeight : CGFloat < nl > + var mapKey : String ? = nil < nl > + < nl > + public init ( mapWidth : CGFloat , mapHeight : CGFloat ) { < nl > + self . mapWidth = mapWidth < nl > + self . mapHeight = mapHeight < nl > + super . init ( image : nil ) < nl > + } < nl > + < nl > + required public init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func bind ( latitude : Double , longitude : Double ) { < nl > + let key = " \ ( Int ( latitude * 1000000 ) ) _ \ ( Int ( longitude * 1000000 ) ) " < nl > + < nl > + / / Same Key < nl > + if ( self . mapKey = = key ) { < nl > + return < nl > + } < nl > + < nl > + self . mapKey = key < nl > + < nl > + let cached = AAMapFastView . mapCache [ key ] < nl > + if ( cached ! = nil ) { < nl > + self . image = cached < nl > + return < nl > + } < nl > + < nl > + let options = MKMapSnapshotOptions ( ) < nl > + options . region = MKCoordinateRegion ( center : CLLocationCoordinate2D ( latitude : latitude , longitude : longitude ) , span : MKCoordinateSpan ( latitudeDelta : 0 . 005 , longitudeDelta : 0 . 005 ) ) < nl > + options . size = CGSizeMake ( mapWidth , mapHeight ) < nl > + options . scale = UIScreen . mainScreen ( ) . scale < nl > + < nl > + let snapshotter = MKMapSnapshotter ( options : options ) < nl > + snapshotter . startWithCompletionHandler { snapshot , error in < nl > + if let img = snapshot ? . image { < nl > + let rounded = img . roundCorners ( img . size . width , h : img . size . height , roundSize : 14 ) < nl > + dispatchOnUi { < nl > + AAMapFastView . mapCache [ key ] = rounded < nl > + self . image = rounded < nl > + } < nl > + } < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 5221704 . . 3b63c61 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 212 , 6 + 212 , 9 @ @ 
 	 	 153F6B5B1C2B109400C0B960 / * AABubbleVoiceCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / ; } ; 
 	 	 153F6B5D1C2B3AC500C0B960 / * AABubbleStickerCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / ; } ; 
 	 	 153F6B611C2BF8EC00C0B960 / * AAAuthWelcomeController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / ; } ; 
 + 	 	 153F6B8A1C2D7BA300C0B960 / * AATapLabelDelegate . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / ; } ; 
 + 	 	 153F6B8B1C2D7BA400C0B960 / * AATapLabel . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / ; } ; 
 + 	 	 153F6B8E1C2D868100C0B960 / * AATermsController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / ; } ; 
 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0C1C20185500E3717A / * diag _ range . c * / ; } ; 
 	 	 15D35F171C20185500E3717A / * diag _ range . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15D35F0D1C20185500E3717A / * diag _ range . h * / ; } ; 
 	 	 15D35F181C20185500E3717A / * opus _ header . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0E1C20185500E3717A / * opus _ header . c * / ; } ; 
 @ @ - 482 , 6 + 485 , 9 @ @ 
 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVoiceCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleStickerCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; name = AAAuthWelcomeController . swift ; path = . . / AAAuthWelcomeController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabelDelegate . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATapLabel . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AATermsController . swift ; sourceTree = " < group > " ; } ; 
 	 	 15D35F0C1C20185500E3717A / * diag _ range . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = diag _ range . c ; sourceTree = " < group > " ; } ; 
 	 	 15D35F0D1C20185500E3717A / * diag _ range . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = diag _ range . h ; sourceTree = " < group > " ; } ; 
 	 	 15D35F0E1C20185500E3717A / * opus _ header . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = opus _ header . c ; sourceTree = " < group > " ; } ; 
 @ @ - 797 , 6 + 803 , 7 @ @ 
 	 	 066A52601BC50E6B000E606E / * Auth * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 + 	 	 	 	 153F6B8C1C2D83B200C0B960 / * Views * / , 
 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , 
 	 	 	 	 066A526E1BC51007000E606E / * Views * / , 
 	 	 	 	 066A526B1BC50E83000E606E / * Cells * / , 
 @ @ - 1096 , 6 + 1103 , 7 @ @ 
 	 	 152AA8901C29887A0030DEEE / * Extensions * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 + 	 	 	 	 153F6B871C2D7B9700C0B960 / * TapedLabel * / , 
 	 	 	 	 152AA8911C29891B0030DEEE / * SlackTextViewController * / , 
 	 	 	 ) ; 
 	 	 	 name = Extensions ; 
 @ @ - 1145 , 6 + 1153 , 23 @ @ 
 	 	 	 name = Ext ; 
 	 	 	 sourceTree = " < group > " ; 
 	 	 } ; 
 + 	 	 153F6B871C2D7B9700C0B960 / * TapedLabel * / = { 
 + 	 	 	 isa = PBXGroup ; 
 + 	 	 	 children = ( 
 + 	 	 	 	 153F6B881C2D7BA300C0B960 / * AATapLabelDelegate . swift * / , 
 + 	 	 	 	 153F6B891C2D7BA300C0B960 / * AATapLabel . swift * / , 
 + 	 	 	 ) ; 
 + 	 	 	 name = TapedLabel ; 
 + 	 	 	 sourceTree = " < group > " ; 
 + 	 	 } ; 
 + 	 	 153F6B8C1C2D83B200C0B960 / * Views * / = { 
 + 	 	 	 isa = PBXGroup ; 
 + 	 	 	 children = ( 
 + 	 	 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / , 
 + 	 	 	 ) ; 
 + 	 	 	 name = Views ; 
 + 	 	 	 sourceTree = " < group > " ; 
 + 	 	 } ; 
 	 	 15D35F0A1C20182900E3717A / * AudioRecorder * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 @ @ - 1560 , 6 + 1585 , 7 @ @ 
 	 	 	 	 066A51241BC4B56D000E606E / * Colors . swift in Sources * / , 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 153F6B591C2B03E300C0B960 / * AAGarbageView . m in Sources * / , 
 + 	 	 	 	 153F6B8B1C2D7BA400C0B960 / * AATapLabel . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , 
 @ @ - 1572 , 6 + 1598 , 7 @ @ 
 	 	 	 	 066A51541BC4BE95000E606E / * Images . swift in Sources * / , 
 	 	 	 	 152AA8A71C2989270030DEEE / * SLKInputAccessoryView . m in Sources * / , 
 	 	 	 	 066A52801BC51ED0000E606E / * AARootTabViewController . swift in Sources * / , 
 + 	 	 	 	 153F6B8E1C2D868100C0B960 / * AATermsController . swift in Sources * / , 
 	 	 	 	 066A522A1BC4EEAC000E606E / * ManagedAlerts . swift in Sources * / , 
 	 	 	 	 069CF4D11BCB909A00C66E12 / * CLTokenInputView . m in Sources * / , 
 	 	 	 	 066A52451BC4EECD000E606E / * AAAvatarCell . swift in Sources * / , 
 @ @ - 1582 , 6 + 1609 , 7 @ @ 
 	 	 	 	 066A52151BC4EE04000E606E / * AAAvatarView . swift in Sources * / , 
 	 	 	 	 066A52591BC4EF61000E606E / * Executions . swift in Sources * / , 
 	 	 	 	 066A519C1BC4C390000E606E / * FMDBIndex . swift in Sources * / , 
 + 	 	 	 	 153F6B8A1C2D7BA300C0B960 / * AATapLabelDelegate . swift in Sources * / , 
 	 	 	 	 15D35F5E1C20187E00E3717A / * AANativeAudioPlayer . m in Sources * / , 
 	 	 	 	 066A52DB1BC52385000E606E / * AAContactActionCell . swift in Sources * / , 
 	 	 	 	 15D35F331C20187200E3717A / * opusfile . c in Sources * / , 
 @ @ - 1835 , 7 + 1863 , 7 @ @ 
 	 	 	 	 SKIP _ INSTALL = YES ; 
 	 	 	 	 STRIP _ INSTALLED _ PRODUCT = YES ; 
 	 	 	 	 SWIFT _ OBJC _ BRIDGING _ HEADER = " " ; 
 - 	 	 	 	 SWIFT _ OPTIMIZATION _ LEVEL = " - Onone " ; 
 + 	 	 	 	 SWIFT _ OPTIMIZATION _ LEVEL = " - Owholemodule " ; 
 	 	 	 } ; 
 	 	 	 name = Debug ; 
 	 	 } ; 
 @ @ - 1871 , 6 + 1899 , 7 @ @ 
 	 	 	 	 	 " $ ( PROJECT _ DIR ) / ActorSDK / Sources / Utils " , 
 	 	 	 	 ) ; 
 	 	 	 	 MACH _ O _ TYPE = mh _ dylib ; 
 + 	 	 	 	 ONLY _ ACTIVE _ ARCH = YES ; 
 	 	 	 	 OTHER _ LDFLAGS = ( 
 	 	 	 	 	 " - lactor " , 
 	 	 	 	 	 " $ ( inherited ) " , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index 4d5901c . . 4fde493 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 380 , 6 + 380 , 10 @ @ 
 
 " AuthPhoneHint " = " Please confirm your country code and enter your phone number . " ; 
 
 + " AuthTermsOfServiceFull " = " By signing up , you agree to the Terms of Service . " ; 
 + 
 + " AuthTermsOfService " = " Terms of Service " ; 
 + 
 " AuthPhoneTooShort " = " Phone number too short " ; 
 
 " AuthCodeFieldHint " = " Code " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 index 5a6beb2 . . afe2c9d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 @ @ - 6 , 7 + 6 , 9 @ @ 
 
 " AuthStarButton " = " Empieza a chatear " ; 
 
 - / / / 
 + " AuthTermsOfServiceFull " = " Al inscribirte , aceptas las Condiciones del servicio . " ; 
 + 
 + " AuthTermsOfService " = " Condiciones del servicio " ; 
 
 " TabMessages " = " Mensajes " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 index 92deae0 . . fae671e 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 @ @ - 3 , 8 + 3 , 10 @ @ 
 / / 
 
 import UIKit 
 + import TTTAttributedLabel 
 
 - public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegate , AAAuthCountriesViewControllerDelegate { 
 + public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegate , AAAuthCountriesViewControllerDelegate , 
 + AATapLabelDelegate { 
 
 / / Views 
 
 @ @ - 13 , 10 + 15 , 13 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat 
 private var countryButton : UIButton ! 
 private var phoneBackgroundView : UIImageView ! 
 private var countryCodeLabel : UILabel ! 
 + private var termsofuseLabel : TapLabel ! 
 private var phoneTextField : ABPhoneField ! 
 private var hintLabel : UILabel ! 
 private var navigationBarSeparator : UIView ! 
 + / / " AuthTermsOfServiceFull " = " By signing up , you agree to the Terms of Service . " ; 
 
 + / / " AuthTermsOfService " = " Terms of Service " ; 
 / / Constructors 
 
 public override init ( ) { 
 @ @ - 99 , 6 + 104 , 41 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat 
 hintLabel . textLocalized = " AuthPhoneHint " 
 view . addSubview ( hintLabel ) 
 
 + / / terms of use 
 + termsofuseLabel = TapLabel ( ) 
 + 
 + termsofuseLabel . delegate = self 
 + termsofuseLabel . numberOfLines = 0 
 + 
 + let termsFullString = AALocalized ( " AuthTermsOfServiceFull " ) 
 + let termsString = AALocalized ( " AuthTermsOfService " ) 
 + 
 + let paragrahStyle = NSMutableParagraphStyle ( ) 
 + paragrahStyle . alignment = NSTextAlignment . Center 
 + 
 + let atrsPolicy = [ NSFontAttributeName : UIFont . systemFontOfSize ( 11 ) , 
 + NSParagraphStyleAttributeName : paragrahStyle , 
 + NSForegroundColorAttributeName : UIColor . lightGrayColor ( ) ] 
 + 
 + let policyMutText = NSMutableAttributedString ( string : termsFullString , 
 + attributes : atrsPolicy ) 
 + 
 + termsofuseLabel . attributedText = policyMutText 
 + 
 + let termsRangeSwift = termsofuseLabel . text ? . rangeOfString ( termsString ) 
 + let termsPos = termsofuseLabel . text ? . startIndex . distanceTo ( termsRangeSwift ! . startIndex ) 
 + 
 + let termsRange = NSMakeRange ( termsPos ! , termsString . length ) 
 + 
 + policyMutText . addAttribute ( TapLabel . LinkContentName , value : " openterms " , range : termsRange ) 
 + policyMutText . addAttribute ( NSForegroundColorAttributeName , value : UIColor . blueColor ( ) , range : termsRange ) 
 + policyMutText . addAttribute ( TapLabel . SelectedForegroudColorName , value : UIColor . blueColor ( ) , range : termsRange ) 
 + 
 + termsofuseLabel . attributedText = policyMutText 
 + 
 + self . view . addSubview ( termsofuseLabel ) 
 + 
 + 
 / / Setting default country 
 let defaultIso = phoneTextField . currentIso 
 let countryCode = ABPhoneField . callingCodeByCountryCode ( ) [ defaultIso ] as ! String 
 @ @ - 151 , 6 + 191 , 11 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat 
 
 let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) 
 hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; 
 + 
 + let termsLabelSize = termsofuseLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) 
 + 
 + termsofuseLabel . frame = CGRect ( x : ( screenSize . width - termsLabelSize . width ) / 2 . 0 , y : hintLabel . frame . maxY + 5 , width : termsLabelSize . width , height : termsLabelSize . height ) ; 
 + 
 } 
 
 / / Constoller states 
 @ @ - 160 , 6 + 205 , 11 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat 
 phoneTextField . becomeFirstResponder ( ) 
 } 
 
 + public override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + phoneTextField . resignFirstResponder ( ) 
 + } 
 + 
 / / Actions 
 
 public func nextButtonPressed ( ) { 
 @ @ - 207 , 4 + 257 , 12 @ @ public class AAAuthPhoneViewController : AAAuthViewController , UITextFieldDelegat 
 public func textField ( textField : UITextField , shouldChangeCharactersInRange range : NSRange , replacementString string : String ) - > Bool { 
 return true 
 } 
 + 
 + public func tapLabel ( tapLabel : TapLabel , didSelectLink link : String ) { 
 + 
 + / / open terms 
 + 
 + self . presentViewController ( AATermsController ( ) , animated : true , completion : nil ) 
 + 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AATermsController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AATermsController . swift 
 new file mode 100644 
 index 0000000 . . cb82d60 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AATermsController . swift 
 @ @ - 0 , 0 + 1 , 125 @ @ 
 + / / 
 + / / AATermsController . swift 
 + / / ActorSDK 
 + 
 + 
 + import UIKit 
 + 
 + class AATermsController : UIViewController , UIViewControllerTransitioningDelegate { 
 + 
 + var alertView : UIView ! 
 + var alertTitleLabel : UILabel ! 
 + var alertTextView : UITextView ! 
 + var buttonOk : UIButton ! 
 + 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + required init ( coder aDecoder : NSCoder ) { 
 + super . init ( coder : aDecoder ) ! 
 + 
 + self . commonInit ( ) 
 + 
 + } 
 + 
 + override init ( nibName nibNameOrNil : String ! , bundle nibBundleOrNil : NSBundle ! ) { 
 + super . init ( nibName : nibNameOrNil , bundle : nibBundleOrNil ) 
 + 
 + self . commonInit ( ) 
 + 
 + } 
 + 
 + func commonInit ( ) { 
 + self . modalPresentationStyle = . Custom 
 + self . transitioningDelegate = self 
 + } 
 + 
 + override func preferredStatusBarStyle ( ) - > UIStatusBarStyle { 
 + return UIStatusBarStyle . LightContent 
 + } 
 + 
 + / / - - - - UIViewControllerTransitioningDelegate methods 
 + func presentationControllerForPresentedViewController ( presented : UIViewController , presentingViewController presenting : UIViewController , sourceViewController source : UIViewController ) - > UIPresentationController ? { 
 + 
 + if presented = = self { 
 + return AACustomPresentationController ( presentedViewController : presented , presentingViewController : presenting ) 
 + } 
 + 
 + return nil 
 + } 
 + 
 + func animationControllerForPresentedController ( presented : UIViewController , presentingController presenting : UIViewController , sourceController source : UIViewController ) - > UIViewControllerAnimatedTransitioning ? { 
 + 
 + if presented = = self { 
 + return AACustomPresentationAnimationController ( isPresenting : true ) 
 + } 
 + else { 
 + return nil 
 + } 
 + } 
 + 
 + func animationControllerForDismissedController ( dismissed : UIViewController ) - > UIViewControllerAnimatedTransitioning ? { 
 + 
 + if dismissed = = self { 
 + return AACustomPresentationAnimationController ( isPresenting : false ) 
 + } 
 + else { 
 + return nil 
 + } 
 + } 
 + 
 + override func loadView ( ) { 
 + super . loadView ( ) 
 + 
 + self . alertView = UIView ( ) 
 + self . alertView . frame = CGRectMake ( self . view . frame . width / 2 - 120 , self . view . frame . height / 2 - 165 , 240 , 330 ) 
 + self . alertView . backgroundColor = UIColor . whiteColor ( ) 
 + self . alertView . layer . cornerRadius = 10 
 + self . alertView . layer . masksToBounds = true 
 + self . view . addSubview ( self . alertView ) 
 + 
 + self . alertTitleLabel = UILabel ( ) 
 + self . alertTitleLabel . font = UIFont ( name : " HelveticaNeue - Bold " , size : 17 ) 
 + self . alertTitleLabel . frame = CGRectMake ( 10 , 10 , 220 , 30 ) 
 + self . alertTitleLabel . text = AALocalized ( " AuthTermsOfService " ) 
 + self . alertTitleLabel . backgroundColor = UIColor . clearColor ( ) 
 + self . alertTitleLabel . textAlignment = . Center 
 + self . alertView . addSubview ( self . alertTitleLabel ) 
 + 
 + self . alertTextView = UITextView ( ) 
 + self . alertTextView . font = UIFont ( name : " HelveticaNeue - Light " , size : 13 ) 
 + self . alertTextView . scrollEnabled = false 
 + self . alertTextView . backgroundColor = UIColor . clearColor ( ) 
 + self . alertTextView . editable = false 
 + self . alertTextView . text = " By signing up to \ ( ActorSDK . sharedActor ( ) . appNameInLocStrings ) , you agree not to : \ n \ n - use our service to send spam and scam users . \ n " + " - use our service to send spam and scam users . \ n " + " - use our service to send spam and scam users . \ n " + " - promote violence on publicly viewable \ ( ActorSDK . sharedActor ( ) . appNameInLocStrings ) bots or channels . \ n \ n " + " We reserve the right to update these Terms of Service later . " 
 + self . alertTextView . frame = CGRectMake ( 10 , 45 , 220 , 270 ) ; 
 + self . alertView . addSubview ( self . alertTextView ) 
 + 
 + let separatorView = UIView ( ) 
 + separatorView . frame = CGRectMake ( 0 , 290 , 240 , 0 . 5 ) 
 + separatorView . backgroundColor = UIColor . lightGrayColor ( ) . colorWithAlphaComponent ( 0 . 5 ) 
 + self . alertView . addSubview ( separatorView ) 
 + 
 + self . buttonOk = UIButton ( type : UIButtonType . System ) 
 + self . buttonOk . setTitle ( " OK " , forState : UIControlState . Normal ) 
 + self . buttonOk . setTitleColor ( UIColor . blueColor ( ) , forState : UIControlState . Normal ) 
 + self . buttonOk . frame = CGRectMake ( 0 , 291 , 240 , 39 ) 
 + self . buttonOk . addTarget ( self , action : " closeController " , forControlEvents : UIControlEvents . TouchUpInside ) 
 + self . alertView . addSubview ( self . buttonOk ) 
 + 
 + } 
 + 
 + override func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + let touch = UITapGestureRecognizer ( target : self , action : " closeController " ) 
 + self . view . addGestureRecognizer ( touch ) 
 + 
 + } 
 + 
 + / / actions 
 + func closeController ( ) { 
 + self . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 + 
 + } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabel . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabel . swift 
 new file mode 100755 
 index 0000000 . . 80eb4fd 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabel . swift 
 @ @ - 0 , 0 + 1 , 267 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public class TapLabel : UILabel , NSLayoutManagerDelegate { 
 + 
 + public static let LinkContentName = " TapLabelLinkContentName " 
 + public static let SelectedForegroudColorName = " TapLabelSelectedForegroudColorName " 
 + 
 + public weak var delegate : AATapLabelDelegate ? 
 + 
 + private let layoutManager = NSLayoutManager ( ) 
 + private let textContainer = NSTextContainer ( ) 
 + private let textStorage = NSTextStorage ( ) 
 + private var rangesForUrls = [ NSRange ] ( ) 
 + private var links = [ String : NSRange ] ( ) 
 + private var isTouchMoved = false 
 + private var defaultSelectedForegroundColor : UIColor ? 
 + 
 + private var selected : ( String , NSRange ) ? { 
 + didSet { 
 + if let ( _ , range ) = selected 
 + { 
 + if let currentColor = textStorage . attribute ( NSForegroundColorAttributeName , 
 + atIndex : range . location , 
 + effectiveRange : nil ) as ? UIColor 
 + { 
 + defaultSelectedForegroundColor = currentColor 
 + } 
 + 
 + if let color = textStorage . attribute ( TapLabel . SelectedForegroudColorName , 
 + atIndex : range . location , 
 + effectiveRange : nil ) as ? UIColor 
 + { 
 + textStorage . addAttribute ( NSForegroundColorAttributeName , value : color , range : range ) 
 + } 
 + } 
 + else if let ( _ , range ) = oldValue 
 + { 
 + textStorage . addAttribute ( NSForegroundColorAttributeName , 
 + value : defaultSelectedForegroundColor ! , 
 + range : range ) 
 + } 
 + 
 + setNeedsDisplay ( ) 
 + } 
 + } 
 + 
 + public override var lineBreakMode : NSLineBreakMode { 
 + didSet { 
 + textContainer . lineBreakMode = lineBreakMode 
 + } 
 + } 
 + 
 + public override var numberOfLines : Int { 
 + didSet { 
 + textContainer . maximumNumberOfLines = numberOfLines 
 + } 
 + } 
 + 
 + public override var attributedText : NSAttributedString ! { 
 + didSet { 
 + textStorage . setAttributedString ( attributedText ) 
 + updateLinks ( ) 
 + updateRangesForUrls ( ) 
 + } 
 + } 
 + 
 + public override var frame : CGRect { 
 + didSet { 
 + textContainer . size = frame . size 
 + } 
 + } 
 + 
 + public override var bounds : CGRect { 
 + didSet { 
 + textContainer . size = bounds . size 
 + } 
 + } 
 + 
 + public override init ( frame : CGRect ) { 
 + super . init ( frame : frame ) 
 + 
 + textContainer . lineFragmentPadding = 0 
 + textContainer . lineBreakMode = lineBreakMode 
 + textContainer . maximumNumberOfLines = numberOfLines 
 + textContainer . size = frame . size 
 + 
 + layoutManager . addTextContainer ( textContainer ) 
 + layoutManager . delegate = self 
 + 
 + textStorage . addLayoutManager ( layoutManager ) 
 + 
 + userInteractionEnabled = true 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + private func updateLinks ( ) { 
 + links = [ String : NSRange ] ( ) 
 + 
 + attributedText . enumerateAttribute ( TapLabel . LinkContentName , 
 + inRange : NSMakeRange ( 0 , attributedText . length ) , 
 + options : NSAttributedStringEnumerationOptions ( rawValue : 0 ) ) 
 + { 
 + value , range , stop in 
 + 
 + if let v = value as ? String { 
 + self . links [ v ] = range 
 + } 
 + } 
 + } 
 + 
 + private func updateRangesForUrls ( ) 
 + { 
 + / / var error : NSError ? 
 + 
 + / / NSDataDetector ( types : NSTextCheckingType . Link . rawValue , error : & error ) ! 
 + 
 + 
 + / / do { 
 + / / try ! 
 + / / } 
 + / / 
 + / / 
 + / / let detector = NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) 
 + / / let plainText = attributedText . string 
 + / / let matches = detector . matchesInString ( plainText , 
 + / / options : NSMatchingOptions ( 0 ) , 
 + / / range : NSMakeRange ( 0 , count ( plainText ) ) ) as ! [ NSTextCheckingResult ] 
 + / / 
 + / / rangesForUrls = matches . map { $ 0 . range } 
 + } 
 + 
 + public override func textRectForBounds ( bounds : CGRect , limitedToNumberOfLines numberOfLines : Int ) - > CGRect 
 + { 
 + let savedTextContainerSize = textContainer . size 
 + let savedTextContainerNumberOfLines = textContainer . maximumNumberOfLines 
 + 
 + textContainer . size = bounds . size 
 + textContainer . maximumNumberOfLines = numberOfLines 
 + 
 + let glyphRange = layoutManager . glyphRangeForTextContainer ( textContainer ) 
 + var textBounds = layoutManager . boundingRectForGlyphRange ( glyphRange , inTextContainer : textContainer ) 
 + 
 + textBounds . origin = bounds . origin 
 + textBounds . size . width = ceil ( textBounds . size . width ) 
 + textBounds . size . height = ceil ( textBounds . size . height ) 
 + 
 + textContainer . size = savedTextContainerSize 
 + textContainer . maximumNumberOfLines = savedTextContainerNumberOfLines 
 + 
 + return textBounds ; 
 + } 
 + 
 + public override func drawTextInRect ( rect : CGRect ) 
 + { 
 + let glyphRange = layoutManager . glyphRangeForTextContainer ( textContainer ) 
 + let textOffset = calcTextOffsetForGlyphRange ( glyphRange ) 
 + 
 + layoutManager . drawBackgroundForGlyphRange ( glyphRange , atPoint : textOffset ) 
 + layoutManager . drawGlyphsForGlyphRange ( glyphRange , atPoint : textOffset ) 
 + } 
 + 
 + private func calcTextOffsetForGlyphRange ( glyphRange : NSRange ) - > CGPoint 
 + { 
 + var textOffset = CGPointZero 
 + 
 + let textBounds = layoutManager . boundingRectForGlyphRange ( glyphRange , inTextContainer : textContainer ) 
 + let paddingHeight = ( self . bounds . size . height - textBounds . size . height ) / 2 
 + if ( paddingHeight > 0 ) { 
 + textOffset . y = paddingHeight ; 
 + } 
 + 
 + return textOffset ; 
 + } 
 + 
 + private func linkAtPoint ( var point : CGPoint ) - > ( String , NSRange ) ? 
 + { 
 + if textStorage . length = = 0 { 
 + return nil 
 + } 
 + 
 + let glyphRange = layoutManager . glyphRangeForTextContainer ( textContainer ) 
 + let textOffset = calcTextOffsetForGlyphRange ( glyphRange ) 
 + 
 + point . x = point . x - textOffset . x 
 + point . y = point . y - textOffset . y 
 + 
 + let touchedChar = layoutManager . glyphIndexForPoint ( point , inTextContainer : textContainer ) 
 + 
 + var lineRange = NSRange ( ) 
 + let lineRect = layoutManager . lineFragmentUsedRectForGlyphAtIndex ( touchedChar , effectiveRange : & lineRange ) 
 + 
 + if ! CGRectContainsPoint ( lineRect , point ) { 
 + return nil 
 + } 
 + 
 + / / Find the word that was touched and call the detection block 
 + for ( link , range ) in links { 
 + if range . location < = touchedChar & & touchedChar < range . location + range . length { 
 + return ( link , range ) 
 + } 
 + } 
 + 
 + return nil 
 + } 
 + 
 + / / MARK : - Interactions 
 + 
 + public override func touchesBegan ( touches : Set < UITouch > , withEvent event : UIEvent ? ) { 
 + isTouchMoved = false 
 + 
 + let touchLocation = touches . first ! . locationInView ( self ) 
 + 
 + if let ( link , range ) = linkAtPoint ( touchLocation ) { 
 + selected = ( link , range ) 
 + } else { 
 + super . touchesBegan ( touches , withEvent : event ) 
 + } 
 + 
 + } 
 + 
 + public override func touchesMoved ( touches : Set < UITouch > , withEvent event : UIEvent ? ) { 
 + super . touchesMoved ( touches , withEvent : event ) 
 + isTouchMoved = true 
 + selected = nil 
 + } 
 + 
 + public override func touchesEnded ( touches : Set < UITouch > , withEvent event : UIEvent ? ) { 
 + super . touchesEnded ( touches , withEvent : event ) 
 + 
 + if ! isTouchMoved { 
 + if ( selected ! = nil ) { 
 + delegate ? . tapLabel ( self , didSelectLink : selected ! . 0 ) 
 + } 
 + } 
 + 
 + selected = nil 
 + } 
 + 
 + 
 + public override func touchesCancelled ( touches : Set < UITouch > ? , withEvent event : UIEvent ? ) { 
 + super . touchesCancelled ( touches , withEvent : event ) 
 + selected = nil 
 + } 
 + 
 + 
 + / / MARK : - NSLayoutManagerDelegate 
 + 
 + @ objc public func layoutManager ( 
 + layoutManager : NSLayoutManager , 
 + shouldBreakLineByWordBeforeCharacterAtIndex charIndex : Int ) - > Bool 
 + { 
 + for range in rangesForUrls { 
 + if range . location < charIndex & & charIndex < range . location + range . length { 
 + return false 
 + } 
 + } 
 + return true 
 + } 
 + 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabelDelegate . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabelDelegate . swift 
 new file mode 100755 
 index 0000000 . . 9318d79 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATapLabelDelegate . swift 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public protocol AATapLabelDelegate : class { 
 + 
 + func tapLabel ( tapLabel : TapLabel , didSelectLink link : String ) 
 + 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 index c38d4cd . . 56b461b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 @ @ - 22 , 6 + 22 , 9 @ @ import ActorSDK 
 
 ActorSDK . sharedActor ( ) . style . searchStatusBarStyle = . Default 
 
 + / / Enabling experimental features 
 + ActorSDK . sharedActor ( ) . enableExperimentalFeatures = true 
 + 
 / / Creating Actor 
 ActorSDK . sharedActor ( ) . createActor ( ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 9bf41a2 . . f26bdd0 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 172 , 6 + 172 , 9 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 + 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; 
 + 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 + 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 347 , 6 + 350 , 9 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 530 , 6 + 536 , 7 @ @ 
 	 	 	 	 069CF4C31BCB908C00C66E12 / * CLTokenInputView * / , 
 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , 
 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , 
 + 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , 
 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , 
 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , 
 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , 
 @ @ - 589 , 6 + 596 , 7 @ @ 
 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , 
 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , 
 	 	 	 	 066A52C41BC521D5000E606E / * Content * / , 
 + 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , 
 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , 
 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , 
 	 	 	 ) ; 
 @ @ - 832 , 6 + 840 , 7 @ @ 
 	 	 	 	 066A53281BC53406000E606E / * AABubbleBaseFileCell . swift * / , 
 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , 
 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , 
 + 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Cell ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 878 , 6 + 887 , 14 @ @ 
 	 	 	 name = CLTokenInputView ; 
 	 	 	 sourceTree = " < group > " ; 
 	 	 } ; 
 + 	 	 06E7B2451C0F8D410090660C / * Location * / = { 
 + 	 	 	 isa = PBXGroup ; 
 + 	 	 	 children = ( 
 + 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , 
 + 	 	 	 ) ; 
 + 	 	 	 path = Location ; 
 + 	 	 	 sourceTree = " < group > " ; 
 + 	 	 } ; 
 	 	 2F428D134E194A828C3DF863 / * Frameworks * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 @ @ - 1107 , 6 + 1124 , 7 @ @ 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 + 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , 
 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , 
 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , 
 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , 
 @ @ - 1171 , 6 + 1189 , 7 @ @ 
 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , 
 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , 
 	 	 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / , 
 + 	 	 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / , 
 	 	 	 	 066A516D1BC4C366000E606E / * ActorCoreExt . swift in Sources * / , 
 	 	 	 	 066A517E1BC4C373000E606E / * FMDatabaseAdditions . m in Sources * / , 
 	 	 	 	 066A519A1BC4C390000E606E / * FMDBList . swift in Sources * / , 
 @ @ - 1187 , 6 + 1206 , 7 @ @ 
 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , 
 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , 
 	 	 	 	 066A51901BC4C383000E606E / * CocoaNetworkRuntime . swift in Sources * / , 
 + 	 	 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / , 
 	 	 	 	 066A52581BC4EF61000E606E / * Alerts . swift in Sources * / , 
 	 	 	 	 066A51691BC4C366000E606E / * AATools . swift in Sources * / , 
 	 	 	 	 066A53201BC533F5000E606E / * AABubbleBackgroundProcessor . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 3f92572 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPin @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png 
 new file mode 100644 
 index 0000000 . . 709d3b0 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 587321a . . 9edb0ad 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 82 , 6 + 82 , 9 @ @ public class ActorSDK { 
 / / / Extensions 
 private var extensions = [ ActorExtension ] ( ) 
 
 + / / / Enable experimental features 
 + public var enableExperimentalFeatures : Bool = false 
 + 
 / / 
 / / User Onlines 
 / / 
 @ @ - 91 , 7 + 94 , 7 @ @ public class ActorSDK { 
 
 / / / Disable this if you want manually handle online states 
 public var automaticOnlineHandling = true 
 - 
 + 
 / / 
 / / Internal State 
 / / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 index ca23c70 . . a98f2ef 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 @ @ - 10 , 11 + 10 , 13 @ @ class AABubbles { 
 static let mediaLayouter = AABubbleMediaCellLayouter ( ) 
 static let documentLayouter = AABubbleDocumentCellLayout ( ) 
 static let serviceLayouter = AABubbleServiceCellLayouter ( ) 
 + static let locationLayouter = AABubbleLocationCellLayouter ( ) 
 
 static let builtInLayouters : [ AABubbleLayouter ] = [ 
 serviceLayouter , 
 mediaLayouter , 
 documentLayouter , 
 + locationLayouter , 
 textLayouter 
 ] 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 new file mode 100644 
 index 0000000 . . 1c539ce 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 0 , 0 + 1 , 179 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + private let mapWidth : CGFloat = 200 
 + private let mapHeight : CGFloat = 160 
 + 
 + public class AABubbleLocationCell : AABubbleCell { 
 + 
 + private let map = AAMapFastView ( mapWidth : mapWidth , mapHeight : mapHeight ) 
 + 
 + private let pin = UIImageView ( ) 
 + private let timeBg = UIImageView ( ) 
 + private let timeLabel = UILabel ( ) 
 + private let statusView = UIImageView ( ) 
 + 
 + private var bindedLat : Double ? = nil 
 + private var bindedLon : Double ? = nil 
 + 
 + public init ( frame : CGRect ) { 
 + super . init ( frame : frame , isFullSize : false ) 
 + 
 + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) 
 + 
 + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 + timeLabel . textColor = appStyle . chatMediaDateColor 
 + 
 + statusView . contentMode = UIViewContentMode . Center 
 + 
 + pin . image = UIImage . bundled ( " LocationPin " ) 
 + 
 + contentView . addSubview ( map ) 
 + map . addSubview ( pin ) 
 + 
 + contentView . addSubview ( timeBg ) 
 + contentView . addSubview ( timeLabel ) 
 + contentView . addSubview ( statusView ) 
 + 
 + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + 
 + map . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mapDidTap " ) ) 
 + map . userInteractionEnabled = true 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func mapDidTap ( ) { 
 + let url = " http : / / maps . apple . com / ? q = \ ( bindedLat ! ) , \ ( bindedLon ! ) " 
 + / / print ( " url : \ ( url ) " ) 
 + UIApplication . sharedApplication ( ) . openURL ( NSURL ( string : url ) ! ) 
 + } 
 + 
 + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 + 
 + let layout = cellLayout as ! AALocationCellLayout 
 + 
 + bindedLat = layout . latitude 
 + bindedLon = layout . longitude 
 + 
 + bubbleInsets = UIEdgeInsets ( 
 + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , 
 + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , 
 + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , 
 + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) 
 + 
 + if ( ! reuse ) { 
 + 
 + / / Bind bubble 
 + if ( self . isOut ) { 
 + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) 
 + } else { 
 + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) 
 + } 
 + } 
 + 
 + map . bind ( layout . latitude , longitude : layout . longitude ) 
 + 
 + / / Update time 
 + timeLabel . text = cellLayout . date 
 + 
 + / / Update status 
 + if ( isOut ) { 
 + statusView . hidden = false 
 + switch ( UInt ( message . messageState . ordinal ( ) ) ) { 
 + case ACMessageState . PENDING . rawValue : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + case ACMessageState . SENT . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck1 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSent 
 + break ; 
 + case ACMessageState . RECEIVED . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaReceived 
 + break ; 
 + case ACMessageState . READ . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaRead 
 + break ; 
 + case ACMessageState . ERROR . rawValue : 
 + self . statusView . image = appStyle . chatIconError ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaError 
 + break 
 + default : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + } 
 + } else { 
 + statusView . hidden = true 
 + } 
 + } 
 + 
 + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 + let insets = fullContentInsets 
 + 
 + layoutBubble ( mapWidth , contentHeight : mapHeight ) 
 + 
 + if isOut { 
 + map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 + } else { 
 + map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) 
 + } 
 + 
 + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) 
 + timeLabel . sizeToFit ( ) 
 + 
 + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width 
 + let timeHeight : CGFloat = 20 
 + 
 + timeLabel . frame = CGRectMake ( map . frame . maxX - timeWidth - 18 , map . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) 
 + 
 + if ( isOut ) { 
 + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) 
 + } 
 + 
 + pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height - pin . image ! . size . height ) / 2 , 
 + pin . image ! . size . width , pin . image ! . size . height ) 
 + 
 + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) 
 + } 
 + } 
 + 
 + public class AALocationCellLayout : AACellLayout { 
 + 
 + let latitude : Double 
 + let longitude : Double 
 + 
 + init ( latitude : Double , longitude : Double , date : Int64 ) { 
 + self . latitude = latitude 
 + self . longitude = longitude 
 + super . init ( height : mapHeight , date : date , key : " location " ) 
 + } 
 + } 
 + 
 + public class AABubbleLocationCellLayouter : AABubbleLayouter { 
 + 
 + public func isSuitable ( message : ACMessage ) - > Bool { 
 + if ( message . content is ACLocationContent ) { 
 + return true 
 + } 
 + return false 
 + } 
 + 
 + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { 
 + let content = message . content as ! ACLocationContent 
 + return AALocationCellLayout ( latitude : Double ( content . getLatitude ( ) ) , longitude : Double ( content . getLongitude ( ) ) , date : Int64 ( message . date ) ) 
 + } 
 + 
 + public func cellClass ( ) - > AnyClass { 
 + return AABubbleLocationCell . self 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 7704094 . . af819ab 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 308 , 6 + 308 , 12 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 self . pickDocument ( ) 
 } 
 
 + if ( ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { 
 + builder . add ( " Location " ) { ( ) - > ( ) in 
 + self . pickLocation ( ) 
 + } 
 + } 
 + 
 showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) 
 } 
 
 @ @ - 452 , 4 + 458 , 10 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 func imagePickerControllerDidCancel ( picker : UIImagePickerController ) { 
 picker . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 + 
 + / / Location picking 
 + 
 + func pickLocation ( ) { 
 + 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 new file mode 100644 
 index 0000000 . . 123575a 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + class AALocationPickerController : AAViewController { 
 + 
 + let map = MKMapView ( ) 
 + 
 + override func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + self . view . addSubview ( map ) 
 + } 
 + 
 + 
 + override func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + map . frame = self . view . bounds 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 3d7e2c7 . . bf761a5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 17 , 8 + 17 , 8 @ @ public class AAAvatarView : UIImageView { 
 
 var enableAnimation : Bool = false 
 
 - private let cacheSize = 10 
 - private var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) 
 + private static let cacheSize = 10 
 + private static var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) 
 
 private var bindedFileId : jlong ! = nil 
 private var bindedTitle : String ! = nil 
 @ @ - 233 , 7 + 233 , 7 @ @ public class AAAvatarView : UIImageView { 
 / / 
 
 private func checkCache ( size : Int , id : Int64 ) - > UIImage ? { 
 - if let cache = avatarCache [ size ] { 
 + if let cache = AAAvatarView . avatarCache [ size ] { 
 if let img = cache [ id ] { 
 return img 
 } 
 @ @ - 242 , 12 + 242 , 12 @ @ public class AAAvatarView : UIImageView { 
 } 
 
 private func putToCache ( size : Int , id : Int64 , image : UIImage ) { 
 - if let cache = avatarCache [ size ] { 
 + if let cache = AAAvatarView . avatarCache [ size ] { 
 cache [ id ] = image 
 } else { 
 - let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : cacheSize ) ; 
 + let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : AAAvatarView . cacheSize ) ; 
 cache [ id ] = image 
 - avatarCache . updateValue ( cache , forKey : size ) 
 + AAAvatarView . avatarCache . updateValue ( cache , forKey : size ) 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift 
 new file mode 100644 
 index 0000000 . . 217c38e 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift 
 @ @ - 0 , 0 + 1 , 58 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + public class AAMapFastView : UIImageView { 
 + 
 + static private var mapCache = AASwiftlyLRU < String , UIImage > ( capacity : 16 ) 
 + 
 + let mapWidth : CGFloat 
 + let mapHeight : CGFloat 
 + var mapKey : String ? = nil 
 + 
 + public init ( mapWidth : CGFloat , mapHeight : CGFloat ) { 
 + self . mapWidth = mapWidth 
 + self . mapHeight = mapHeight 
 + super . init ( image : nil ) 
 + } 
 + 
 + required public init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func bind ( latitude : Double , longitude : Double ) { 
 + let key = " \ ( Int ( latitude * 1000000 ) ) _ \ ( Int ( longitude * 1000000 ) ) " 
 + 
 + / / Same Key 
 + if ( self . mapKey = = key ) { 
 + return 
 + } 
 + 
 + self . mapKey = key 
 + 
 + let cached = AAMapFastView . mapCache [ key ] 
 + if ( cached ! = nil ) { 
 + self . image = cached 
 + return 
 + } 
 + 
 + let options = MKMapSnapshotOptions ( ) 
 + options . region = MKCoordinateRegion ( center : CLLocationCoordinate2D ( latitude : latitude , longitude : longitude ) , span : MKCoordinateSpan ( latitudeDelta : 0 . 005 , longitudeDelta : 0 . 005 ) ) 
 + options . size = CGSizeMake ( mapWidth , mapHeight ) 
 + options . scale = UIScreen . mainScreen ( ) . scale 
 + 
 + let snapshotter = MKMapSnapshotter ( options : options ) 
 + snapshotter . startWithCompletionHandler { snapshot , error in 
 + if let img = snapshot ? . image { 
 + let rounded = img . roundCorners ( img . size . width , h : img . size . height , roundSize : 14 ) 
 + dispatchOnUi { 
 + AAMapFastView . mapCache [ key ] = rounded 
 + self . image = rounded 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file
