BLEU SCORE: 0.1354599427337814

TEST MSG: fix ( android + core ) : upload picture after kill app
GENERATED MSG: wip ( core ) : Adding idle events

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > index ecb3ac2 . . 8b2a3ee 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > @ @ - 243 , 7 + 243 , 7 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > } < nl > Bitmap fastThumb = ImageHelper . scaleFit ( bmp , 90 , 90 ) ; < nl > < nl > - String resultFileName = getExternalTempFile ( " image " , " jpg " ) ; < nl > + String resultFileName = getExternalUploadTempFile ( " image " , " jpg " ) ; < nl > if ( resultFileName = = null ) { < nl > return ; < nl > } < nl > @ @ - 414 , 6 + 414 , 21 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > return outputFile . getAbsolutePath ( ) ; < nl > } < nl > < nl > + < nl > + public String getExternalUploadTempFile ( String prefix , String postfix ) { < nl > + File externalFile = context . getExternalFilesDir ( null ) ; < nl > + if ( externalFile = = null ) { < nl > + return null ; < nl > + } < nl > + String externalPath = externalFile . getAbsolutePath ( ) ; < nl > + < nl > + File dest = new File ( externalPath + " / actor / upload _ tmp / " ) ; < nl > + dest . mkdirs ( ) ; < nl > + < nl > + File outputFile = new File ( dest , prefix + " _ " + random . nextLong ( ) + " . " + postfix ) ; < nl > + return outputFile . getAbsolutePath ( ) ; < nl > + } < nl > + < nl > public String getInternalTempFile ( String prefix , String postfix ) { < nl > File externalFile = context . getFilesDir ( ) ; < nl > if ( externalFile = = null ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java < nl > index c1df522 . . 1af61e1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java < nl > @ @ - 63 , 6 + 63 , 7 @ @ public class UploadTask extends ModuleActor { < nl > private CRC32 crc32 ; < nl > < nl > private float currentProgress ; < nl > + private boolean alreadyInTemp ; < nl > < nl > public UploadTask ( long rid , String descriptor , String fileName , ActorRef manager , ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 76 , 7 + 77 , 8 @ @ public class UploadTask extends ModuleActor { < nl > < nl > @ Override < nl > public void preStart ( ) { < nl > - isWriteToDestProvider = Storage . isFsPersistent ( ) ; < nl > + alreadyInTemp = Storage . isAlreadyInTemp ( descriptor ) ; < nl > + isWriteToDestProvider = Storage . isFsPersistent ( ) & & ! alreadyInTemp ; < nl > < nl > srcReference = Storage . fileFromDescriptor ( descriptor ) ; < nl > if ( srcReference = = null ) { < nl > @ @ - 196 , 8 + 198 , 8 @ @ public class UploadTask extends ModuleActor { < nl > FileReference location = new FileReference ( response . getUploadedFileLocation ( ) , < nl > fileName , srcReference . getSize ( ) ) ; < nl > < nl > - if ( isWriteToDestProvider ) { < nl > - FileSystemReference reference = Storage . commitTempFile ( destReference , location . getFileId ( ) , < nl > + if ( isWriteToDestProvider | | alreadyInTemp ) { < nl > + FileSystemReference reference = Storage . commitTempFile ( alreadyInTemp ? srcReference : destReference , location . getFileId ( ) , < nl > location . getFileName ( ) ) ; < nl > reportComplete ( location , reference ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > index c84b3c4 . . c4421a6 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > @ @ - 115 , 6 + 115 , 12 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > } < nl > < nl > @ Override < nl > + public boolean isAlreadyInTemp ( String descriptor ) { < nl > + File externalFile = AndroidContext . getContext ( ) . getExternalFilesDir ( null ) ; < nl > + return externalFile ! = null & & descriptor . startsWith ( externalFile . getAbsolutePath ( ) + " / actor / upload _ tmp / " ) ; < nl > + } < nl > + < nl > + @ Override < nl > public synchronized FileSystemReference fileFromDescriptor ( String descriptor ) { < nl > checkTempDirs ( ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java < nl > index 4b5118a . . 501290d 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java < nl > @ @ - 41 , 6 + 41 , 15 @ @ public interface FileSystemRuntime { < nl > boolean isFsPersistent ( ) ; < nl > < nl > / * * < nl > + * Is file already in temp < nl > + * < nl > + * @ param descriptor file descriptor < nl > + * @ return is file already in temp < nl > + * / < nl > + @ ObjectiveCName ( " isAlreadyInTemp : withDescriptor " ) < nl > + boolean isAlreadyInTemp ( String descriptor ) ; < nl > + < nl > + / * * < nl > * Create FileSystemReference from descriptor < nl > * < nl > * @ param descriptor descriptor < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java < nl > index 3dc3eae . . add9a81 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java < nl > @ @ - 82 , 6 + 82 , 10 @ @ public class Storage { < nl > return fileSystemRuntime . isFsPersistent ( ) ; < nl > } < nl > < nl > + public static boolean isAlreadyInTemp ( String descriptor ) { < nl > + return fileSystemRuntime . isAlreadyInTemp ( descriptor ) ; < nl > + } < nl > + < nl > public static FileSystemReference fileFromDescriptor ( String descriptor ) { < nl > return fileSystemRuntime . fileFromDescriptor ( descriptor ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index a44d871 . . a9ec5fc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 41 , 6 + 41 , 7 @ @ import im . actor . core . modules . events . PeerChatClosed ; < nl > import im . actor . core . modules . events . PeerChatOpened ; < nl > import im . actor . core . modules . events . PeerInfoClosed ; < nl > import im . actor . core . modules . events . PeerInfoOpened ; < nl > + import im . actor . core . modules . events . UserIDLEChanged ; < nl > import im . actor . core . modules . events . UserVisible ; < nl > import im . actor . core . modules . internal . CallsModule ; < nl > import im . actor . core . network . NetworkState ; < nl > @ @ - 449 , 6 + 450 , 22 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Can be called to indicate that user is active < nl > + * / < nl > + @ ObjectiveCName ( " onUserActive " ) < nl > + public void onUserActive ( ) { < nl > + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( false ) ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Can be called to indicate that user became idle < nl > + * / < nl > + @ ObjectiveCName ( " onUserIDLE " ) < nl > + public void onUserIDLE ( ) { < nl > + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( true ) ) ; < nl > + } < nl > + < nl > + / * * < nl > * MUST be called on dialogs open < nl > * / < nl > @ ObjectiveCName ( " onDialogsOpen " ) < nl > @ @ - 733 , 7 + 750 , 7 @ @ public class Messenger { < nl > * Send json message < nl > * < nl > * @ param peer destination peer < nl > - * @ param json json content < nl > + * @ param content json content < nl > * / < nl > @ ObjectiveCName ( " sendJsonWithPeer : withJson : " ) < nl > public void sendCustomJsonMessage ( @ NotNull Peer peer , @ NotNull JsonContent content ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java < nl > new file mode 100644 < nl > index 0000000 . . b70bb54 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java < nl > @ @ - 0 , 0 + 1 , 29 @ @ < nl > + package im . actor . core . modules . events ; < nl > + < nl > + import im . actor . runtime . eventbus . Event ; < nl > + < nl > + public class UserIDLEChanged extends Event { < nl > + < nl > + public static final String EVENT = " user _ idle _ changed " ; < nl > + < nl > + private boolean isIDLE ; < nl > + < nl > + public UserIDLEChanged ( boolean isIDLE ) { < nl > + this . isIDLE = isIDLE ; < nl > + } < nl > + < nl > + < nl > + public boolean isIDLE ( ) { < nl > + return isIDLE ; < nl > + } < nl > + < nl > + @ Override < nl > + public String getType ( ) { < nl > + return EVENT ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + return EVENT + " { " + isIDLE + " } " ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java < nl > index 55643c3 . . aca6bd6 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java < nl > @ @ - 6 , 5 + 6 , 5 @ @ public class CryptoRuntimeProvider implements CryptoRuntime { < nl > public byte [ ] MD5 ( byte [ ] data ) { < nl > throw new RuntimeException ( " Dumb " ) ; < nl > } < nl > - < nl > + < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 index ecb3ac2 . . 8b2a3ee 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 @ @ - 243 , 7 + 243 , 7 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 } 
 Bitmap fastThumb = ImageHelper . scaleFit ( bmp , 90 , 90 ) ; 
 
 - String resultFileName = getExternalTempFile ( " image " , " jpg " ) ; 
 + String resultFileName = getExternalUploadTempFile ( " image " , " jpg " ) ; 
 if ( resultFileName = = null ) { 
 return ; 
 } 
 @ @ - 414 , 6 + 414 , 21 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 return outputFile . getAbsolutePath ( ) ; 
 } 
 
 + 
 + public String getExternalUploadTempFile ( String prefix , String postfix ) { 
 + File externalFile = context . getExternalFilesDir ( null ) ; 
 + if ( externalFile = = null ) { 
 + return null ; 
 + } 
 + String externalPath = externalFile . getAbsolutePath ( ) ; 
 + 
 + File dest = new File ( externalPath + " / actor / upload _ tmp / " ) ; 
 + dest . mkdirs ( ) ; 
 + 
 + File outputFile = new File ( dest , prefix + " _ " + random . nextLong ( ) + " . " + postfix ) ; 
 + return outputFile . getAbsolutePath ( ) ; 
 + } 
 + 
 public String getInternalTempFile ( String prefix , String postfix ) { 
 File externalFile = context . getFilesDir ( ) ; 
 if ( externalFile = = null ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java 
 index c1df522 . . 1af61e1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / UploadTask . java 
 @ @ - 63 , 6 + 63 , 7 @ @ public class UploadTask extends ModuleActor { 
 private CRC32 crc32 ; 
 
 private float currentProgress ; 
 + private boolean alreadyInTemp ; 
 
 public UploadTask ( long rid , String descriptor , String fileName , ActorRef manager , ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 76 , 7 + 77 , 8 @ @ public class UploadTask extends ModuleActor { 
 
 @ Override 
 public void preStart ( ) { 
 - isWriteToDestProvider = Storage . isFsPersistent ( ) ; 
 + alreadyInTemp = Storage . isAlreadyInTemp ( descriptor ) ; 
 + isWriteToDestProvider = Storage . isFsPersistent ( ) & & ! alreadyInTemp ; 
 
 srcReference = Storage . fileFromDescriptor ( descriptor ) ; 
 if ( srcReference = = null ) { 
 @ @ - 196 , 8 + 198 , 8 @ @ public class UploadTask extends ModuleActor { 
 FileReference location = new FileReference ( response . getUploadedFileLocation ( ) , 
 fileName , srcReference . getSize ( ) ) ; 
 
 - if ( isWriteToDestProvider ) { 
 - FileSystemReference reference = Storage . commitTempFile ( destReference , location . getFileId ( ) , 
 + if ( isWriteToDestProvider | | alreadyInTemp ) { 
 + FileSystemReference reference = Storage . commitTempFile ( alreadyInTemp ? srcReference : destReference , location . getFileId ( ) , 
 location . getFileName ( ) ) ; 
 reportComplete ( location , reference ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 index c84b3c4 . . c4421a6 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 @ @ - 115 , 6 + 115 , 12 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 } 
 
 @ Override 
 + public boolean isAlreadyInTemp ( String descriptor ) { 
 + File externalFile = AndroidContext . getContext ( ) . getExternalFilesDir ( null ) ; 
 + return externalFile ! = null & & descriptor . startsWith ( externalFile . getAbsolutePath ( ) + " / actor / upload _ tmp / " ) ; 
 + } 
 + 
 + @ Override 
 public synchronized FileSystemReference fileFromDescriptor ( String descriptor ) { 
 checkTempDirs ( ) ; 
 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java 
 index 4b5118a . . 501290d 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / FileSystemRuntime . java 
 @ @ - 41 , 6 + 41 , 15 @ @ public interface FileSystemRuntime { 
 boolean isFsPersistent ( ) ; 
 
 / * * 
 + * Is file already in temp 
 + * 
 + * @ param descriptor file descriptor 
 + * @ return is file already in temp 
 + * / 
 + @ ObjectiveCName ( " isAlreadyInTemp : withDescriptor " ) 
 + boolean isAlreadyInTemp ( String descriptor ) ; 
 + 
 + / * * 
 * Create FileSystemReference from descriptor 
 * 
 * @ param descriptor descriptor 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java 
 index 3dc3eae . . add9a81 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / Storage . java 
 @ @ - 82 , 6 + 82 , 10 @ @ public class Storage { 
 return fileSystemRuntime . isFsPersistent ( ) ; 
 } 
 
 + public static boolean isAlreadyInTemp ( String descriptor ) { 
 + return fileSystemRuntime . isAlreadyInTemp ( descriptor ) ; 
 + } 
 + 
 public static FileSystemReference fileFromDescriptor ( String descriptor ) { 
 return fileSystemRuntime . fileFromDescriptor ( descriptor ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index a44d871 . . a9ec5fc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 41 , 6 + 41 , 7 @ @ import im . actor . core . modules . events . PeerChatClosed ; 
 import im . actor . core . modules . events . PeerChatOpened ; 
 import im . actor . core . modules . events . PeerInfoClosed ; 
 import im . actor . core . modules . events . PeerInfoOpened ; 
 + import im . actor . core . modules . events . UserIDLEChanged ; 
 import im . actor . core . modules . events . UserVisible ; 
 import im . actor . core . modules . internal . CallsModule ; 
 import im . actor . core . network . NetworkState ; 
 @ @ - 449 , 6 + 450 , 22 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Can be called to indicate that user is active 
 + * / 
 + @ ObjectiveCName ( " onUserActive " ) 
 + public void onUserActive ( ) { 
 + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( false ) ) ; 
 + } 
 + 
 + / * * 
 + * Can be called to indicate that user became idle 
 + * / 
 + @ ObjectiveCName ( " onUserIDLE " ) 
 + public void onUserIDLE ( ) { 
 + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( true ) ) ; 
 + } 
 + 
 + / * * 
 * MUST be called on dialogs open 
 * / 
 @ ObjectiveCName ( " onDialogsOpen " ) 
 @ @ - 733 , 7 + 750 , 7 @ @ public class Messenger { 
 * Send json message 
 * 
 * @ param peer destination peer 
 - * @ param json json content 
 + * @ param content json content 
 * / 
 @ ObjectiveCName ( " sendJsonWithPeer : withJson : " ) 
 public void sendCustomJsonMessage ( @ NotNull Peer peer , @ NotNull JsonContent content ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java 
 new file mode 100644 
 index 0000000 . . b70bb54 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package im . actor . core . modules . events ; 
 + 
 + import im . actor . runtime . eventbus . Event ; 
 + 
 + public class UserIDLEChanged extends Event { 
 + 
 + public static final String EVENT = " user _ idle _ changed " ; 
 + 
 + private boolean isIDLE ; 
 + 
 + public UserIDLEChanged ( boolean isIDLE ) { 
 + this . isIDLE = isIDLE ; 
 + } 
 + 
 + 
 + public boolean isIDLE ( ) { 
 + return isIDLE ; 
 + } 
 + 
 + @ Override 
 + public String getType ( ) { 
 + return EVENT ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return EVENT + " { " + isIDLE + " } " ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java 
 index 55643c3 . . aca6bd6 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java 
 @ @ - 6 , 5 + 6 , 5 @ @ public class CryptoRuntimeProvider implements CryptoRuntime { 
 public byte [ ] MD5 ( byte [ ] data ) { 
 throw new RuntimeException ( " Dumb " ) ; 
 } 
 - 
 + 
 }
