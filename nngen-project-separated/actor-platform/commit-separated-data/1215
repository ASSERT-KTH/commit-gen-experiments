BLEU SCORE: 0.392814650900513

TEST MSG: feat ( core ) : Adding username - based authentication
GENERATED MSG: feat ( core ) : Avoiding unnecessary device info upload

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 797a6a1 . . 8e518f2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 146 , 6 + 146 , 18 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Request user name auth < nl > + * < nl > + * @ param userName userName to authenticate < nl > + * @ return Command for execution < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " requestStartAuthCommandWithUserName : " ) < nl > + public Command < AuthState > requestStartUserNameAuth ( String userName ) { < nl > + return modules . getAuthModule ( ) . requestStartUserNameAuth ( userName ) ; < nl > + } < nl > + < nl > + / * * < nl > * Request OAuth params < nl > * < nl > * @ return Command for execution < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 93798a5 . . 02e9edc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 16 , 12 + 16 , 14 @ @ import im . actor . core . api . rpc . RequestSendCodeByPhoneCall ; < nl > import im . actor . core . api . rpc . RequestSignUp ; < nl > import im . actor . core . api . rpc . RequestStartEmailAuth ; < nl > import im . actor . core . api . rpc . RequestStartPhoneAuth ; < nl > + import im . actor . core . api . rpc . RequestStartUsernameAuth ; < nl > import im . actor . core . api . rpc . RequestValidateCode ; < nl > import im . actor . core . api . rpc . RequestValidatePassword ; < nl > import im . actor . core . api . rpc . ResponseAuth ; < nl > import im . actor . core . api . rpc . ResponseGetOAuth2Params ; < nl > import im . actor . core . api . rpc . ResponseStartEmailAuth ; < nl > import im . actor . core . api . rpc . ResponseStartPhoneAuth ; < nl > + import im . actor . core . api . rpc . ResponseStartUsernameAuth ; < nl > import im . actor . core . api . rpc . ResponseVoid ; < nl > import im . actor . core . entity . ContactRecord ; < nl > import im . actor . core . entity . ContactRecordType ; < nl > @ @ - 164 , 6 + 166 , 51 @ @ public class Authentication { < nl > } ; < nl > } < nl > < nl > + public Command < AuthState > requestStartUserNameAuth ( final String userName ) { < nl > + return new Command < AuthState > ( ) { < nl > + @ Override < nl > + public void start ( final CommandCallback < AuthState > callback ) { < nl > + ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > + langs . add ( s ) ; < nl > + } < nl > + request ( new RequestStartUsernameAuth ( userName , < nl > + apiConfiguration . getAppId ( ) , < nl > + apiConfiguration . getAppKey ( ) , < nl > + deviceHash , < nl > + apiConfiguration . getDeviceTitle ( ) , < nl > + modules . getConfiguration ( ) . getTimeZone ( ) , < nl > + langs ) , new RpcCallback < ResponseStartUsernameAuth > ( ) { < nl > + < nl > + @ Override < nl > + public void onResult ( ResponseStartUsernameAuth response ) { < nl > + modules . getPreferences ( ) . putString ( KEY _ TRANSACTION _ HASH , response . getTransactionHash ( ) ) ; < nl > + < nl > + state = AuthState . PASSWORD _ VALIDATION ; < nl > + < nl > + im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onResult ( state ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( final RpcException e ) { < nl > + im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onError ( e ) ; < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ; < nl > + } < nl > + < nl > public Command < AuthState > requestStartPhoneAuth ( final long phone ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java < nl > index b991f5e . . 6334a91 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java < nl > @ @ - 1 , 23 + 1 , 28 @ @ < nl > package im . actor . core . modules . internal ; < nl > < nl > - import java . util . ArrayList ; < nl > - < nl > - import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > + import im . actor . core . modules . internal . device . DeviceInfoActor ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . Props ; < nl > + < nl > + import static im . actor . runtime . actors . ActorSystem . system ; < nl > < nl > public class DeviceInfoModule extends AbsModule { < nl > < nl > + private ActorRef actorRef ; < nl > + < nl > public DeviceInfoModule ( ModuleContext context ) { < nl > super ( context ) ; < nl > } < nl > < nl > public void run ( ) { < nl > - ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > - for ( String s : context ( ) . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > - langs . add ( s ) ; < nl > - } < nl > - String timeZone = context ( ) . getConfiguration ( ) . getTimeZone ( ) ; < nl > - request ( new RequestNotifyAboutDeviceInfo ( langs , timeZone ) ) ; < nl > + actorRef = system ( ) . actorOf ( Props . create ( DeviceInfoActor . class , new ActorCreator < DeviceInfoActor > ( ) { < nl > + @ Override < nl > + public DeviceInfoActor create ( ) { < nl > + return new DeviceInfoActor ( context ( ) ) ; < nl > + } < nl > + } ) , " device _ info / notifier " ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java < nl > index cb19e9f . . 52217bf 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java < nl > @ @ - 61 , 7 + 61 , 7 @ @ public class ContactsSyncActor extends ModuleActor { < nl > } < nl > } < nl > notifyState ( ) ; < nl > - self ( ) . send ( new PerformSync ( ) ) ; < nl > + / / self ( ) . send ( new PerformSync ( ) ) ; < nl > } < nl > < nl > public void performSync ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / device / DeviceInfoActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / device / DeviceInfoActor . java < nl > new file mode 100644 < nl > index 0000000 . . b7838f2 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / device / DeviceInfoActor . java < nl > @ @ - 0 , 0 + 1 , 68 @ @ < nl > + package im . actor . core . modules . internal . device ; < nl > + < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; < nl > + import im . actor . core . api . rpc . ResponseVoid ; < nl > + import im . actor . core . modules . ModuleContext ; < nl > + import im . actor . core . modules . utils . ModuleActor ; < nl > + import im . actor . core . network . RpcCallback ; < nl > + import im . actor . core . network . RpcException ; < nl > + import im . actor . core . util . JavaUtil ; < nl > + < nl > + public class DeviceInfoActor extends ModuleActor { < nl > + < nl > + public DeviceInfoActor ( ModuleContext context ) { < nl > + super ( context ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + super . preStart ( ) ; < nl > + < nl > + / / < nl > + / / Loading Information < nl > + / / < nl > + ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + for ( String s : context ( ) . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > + langs . add ( s ) ; < nl > + } < nl > + final String timeZone = context ( ) . getConfiguration ( ) . getTimeZone ( ) ; < nl > + < nl > + / / < nl > + / / Checking if information changed < nl > + / / < nl > + String expectedLangs = " " ; < nl > + for ( String s : langs ) { < nl > + if ( ! " " . equals ( expectedLangs ) ) { < nl > + expectedLangs + = " , " ; < nl > + } < nl > + expectedLangs + = s . toLowerCase ( ) ; < nl > + } < nl > + < nl > + if ( expectedLangs . equals ( preferences ( ) . getString ( " device _ info _ langs " ) ) & & < nl > + JavaUtil . equalsE ( timeZone , preferences ( ) . getString ( " device _ info _ timezone " ) ) ) { < nl > + / / Already sent < nl > + return ; < nl > + } < nl > + < nl > + / / < nl > + / / Performing Notification < nl > + / / < nl > + final String finalExpectedLangs = expectedLangs ; < nl > + request ( new RequestNotifyAboutDeviceInfo ( langs , timeZone ) , new RpcCallback < ResponseVoid > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseVoid response ) { < nl > + < nl > + / / Mark as sent < nl > + preferences ( ) . putString ( " device _ info _ langs " , finalExpectedLangs ) ; < nl > + preferences ( ) . putString ( " device _ info _ timezone " , timeZone ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( RpcException e ) { < nl > + / / Ignoring error < nl > + } < nl > + } ) ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 797a6a1 . . 8e518f2 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 146 , 6 + 146 , 18 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Request user name auth 
 + * 
 + * @ param userName userName to authenticate 
 + * @ return Command for execution 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " requestStartAuthCommandWithUserName : " ) 
 + public Command < AuthState > requestStartUserNameAuth ( String userName ) { 
 + return modules . getAuthModule ( ) . requestStartUserNameAuth ( userName ) ; 
 + } 
 + 
 + / * * 
 * Request OAuth params 
 * 
 * @ return Command for execution 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 93798a5 . . 02e9edc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 16 , 12 + 16 , 14 @ @ import im . actor . core . api . rpc . RequestSendCodeByPhoneCall ; 
 import im . actor . core . api . rpc . RequestSignUp ; 
 import im . actor . core . api . rpc . RequestStartEmailAuth ; 
 import im . actor . core . api . rpc . RequestStartPhoneAuth ; 
 + import im . actor . core . api . rpc . RequestStartUsernameAuth ; 
 import im . actor . core . api . rpc . RequestValidateCode ; 
 import im . actor . core . api . rpc . RequestValidatePassword ; 
 import im . actor . core . api . rpc . ResponseAuth ; 
 import im . actor . core . api . rpc . ResponseGetOAuth2Params ; 
 import im . actor . core . api . rpc . ResponseStartEmailAuth ; 
 import im . actor . core . api . rpc . ResponseStartPhoneAuth ; 
 + import im . actor . core . api . rpc . ResponseStartUsernameAuth ; 
 import im . actor . core . api . rpc . ResponseVoid ; 
 import im . actor . core . entity . ContactRecord ; 
 import im . actor . core . entity . ContactRecordType ; 
 @ @ - 164 , 6 + 166 , 51 @ @ public class Authentication { 
 } ; 
 } 
 
 + public Command < AuthState > requestStartUserNameAuth ( final String userName ) { 
 + return new Command < AuthState > ( ) { 
 + @ Override 
 + public void start ( final CommandCallback < AuthState > callback ) { 
 + ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 + langs . add ( s ) ; 
 + } 
 + request ( new RequestStartUsernameAuth ( userName , 
 + apiConfiguration . getAppId ( ) , 
 + apiConfiguration . getAppKey ( ) , 
 + deviceHash , 
 + apiConfiguration . getDeviceTitle ( ) , 
 + modules . getConfiguration ( ) . getTimeZone ( ) , 
 + langs ) , new RpcCallback < ResponseStartUsernameAuth > ( ) { 
 + 
 + @ Override 
 + public void onResult ( ResponseStartUsernameAuth response ) { 
 + modules . getPreferences ( ) . putString ( KEY _ TRANSACTION _ HASH , response . getTransactionHash ( ) ) ; 
 + 
 + state = AuthState . PASSWORD _ VALIDATION ; 
 + 
 + im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onResult ( state ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( final RpcException e ) { 
 + im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onError ( e ) ; 
 + e . printStackTrace ( ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + } ; 
 + } 
 + 
 public Command < AuthState > requestStartPhoneAuth ( final long phone ) { 
 return new Command < AuthState > ( ) { 
 @ Override

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java 
 index b991f5e . . 6334a91 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java 
 @ @ - 1 , 23 + 1 , 28 @ @ 
 package im . actor . core . modules . internal ; 
 
 - import java . util . ArrayList ; 
 - 
 - import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 + import im . actor . core . modules . internal . device . DeviceInfoActor ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . Props ; 
 + 
 + import static im . actor . runtime . actors . ActorSystem . system ; 
 
 public class DeviceInfoModule extends AbsModule { 
 
 + private ActorRef actorRef ; 
 + 
 public DeviceInfoModule ( ModuleContext context ) { 
 super ( context ) ; 
 } 
 
 public void run ( ) { 
 - ArrayList < String > langs = new ArrayList < String > ( ) ; 
 - for ( String s : context ( ) . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 - langs . add ( s ) ; 
 - } 
 - String timeZone = context ( ) . getConfiguration ( ) . getTimeZone ( ) ; 
 - request ( new RequestNotifyAboutDeviceInfo ( langs , timeZone ) ) ; 
 + actorRef = system ( ) . actorOf ( Props . create ( DeviceInfoActor . class , new ActorCreator < DeviceInfoActor > ( ) { 
 + @ Override 
 + public DeviceInfoActor create ( ) { 
 + return new DeviceInfoActor ( context ( ) ) ; 
 + } 
 + } ) , " device _ info / notifier " ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java 
 index cb19e9f . . 52217bf 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / ContactsSyncActor . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class ContactsSyncActor extends ModuleActor { 
 } 
 } 
 notifyState ( ) ; 
 - self ( ) . send ( new PerformSync ( ) ) ; 
 + / / self ( ) . send ( new PerformSync ( ) ) ; 
 } 
 
 public void performSync ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / device / DeviceInfoActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / device / DeviceInfoActor . java 
 new file mode 100644 
 index 0000000 . . b7838f2 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / device / DeviceInfoActor . java 
 @ @ - 0 , 0 + 1 , 68 @ @ 
 + package im . actor . core . modules . internal . device ; 
 + 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; 
 + import im . actor . core . api . rpc . ResponseVoid ; 
 + import im . actor . core . modules . ModuleContext ; 
 + import im . actor . core . modules . utils . ModuleActor ; 
 + import im . actor . core . network . RpcCallback ; 
 + import im . actor . core . network . RpcException ; 
 + import im . actor . core . util . JavaUtil ; 
 + 
 + public class DeviceInfoActor extends ModuleActor { 
 + 
 + public DeviceInfoActor ( ModuleContext context ) { 
 + super ( context ) ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + super . preStart ( ) ; 
 + 
 + / / 
 + / / Loading Information 
 + / / 
 + ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + for ( String s : context ( ) . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 + langs . add ( s ) ; 
 + } 
 + final String timeZone = context ( ) . getConfiguration ( ) . getTimeZone ( ) ; 
 + 
 + / / 
 + / / Checking if information changed 
 + / / 
 + String expectedLangs = " " ; 
 + for ( String s : langs ) { 
 + if ( ! " " . equals ( expectedLangs ) ) { 
 + expectedLangs + = " , " ; 
 + } 
 + expectedLangs + = s . toLowerCase ( ) ; 
 + } 
 + 
 + if ( expectedLangs . equals ( preferences ( ) . getString ( " device _ info _ langs " ) ) & & 
 + JavaUtil . equalsE ( timeZone , preferences ( ) . getString ( " device _ info _ timezone " ) ) ) { 
 + / / Already sent 
 + return ; 
 + } 
 + 
 + / / 
 + / / Performing Notification 
 + / / 
 + final String finalExpectedLangs = expectedLangs ; 
 + request ( new RequestNotifyAboutDeviceInfo ( langs , timeZone ) , new RpcCallback < ResponseVoid > ( ) { 
 + @ Override 
 + public void onResult ( ResponseVoid response ) { 
 + 
 + / / Mark as sent 
 + preferences ( ) . putString ( " device _ info _ langs " , finalExpectedLangs ) ; 
 + preferences ( ) . putString ( " device _ info _ timezone " , timeZone ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( RpcException e ) { 
 + / / Ignoring error 
 + } 
 + } ) ; 
 + } 
 + }
