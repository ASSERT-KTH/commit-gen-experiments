BLEU SCORE: 1.0

TEST MSG: Update key - creation . md
GENERATED MSG: Update key - creation . md

TEST DIFF (one line): diff - - git a / docs / protocol / key - creation . md b / docs / protocol / key - creation . md < nl > index d138542 . . 5f39e21 100644 < nl > - - - a / docs / protocol / key - creation . md < nl > + + + b / docs / protocol / key - creation . md < nl > @ @ - 12 , 7 + 12 , 7 @ @ This technique use [ TLS 1 . 2 RFC ] ( https : / / tools . ietf . org / html / rfc5246 ) for it ' s b < nl > * Not sending server certificates if not needed on every connection . < nl > * One DiffieHellman to build one shared secret without repeating on almost every reconnect . ( we will implement PFS in next revision of MTProto v2 ) < nl > * Using only Curve25519 , AES - CBC , Kuznechik - CBC and Streebog < nl > - * Extending master _ secret to make it 256 bytes long < nl > + * Extending master _ secret to make it 256 bytes long with two different algorithms based on TLS ' s PRF function with SHA256 and Streebog hashes . < nl > * Added Signing of response just to check that everything is ok and add one more protection level < nl > < nl > # Primitives < nl > @ @ - 90 , 12 + 90 , 16 @ @ RequestDH { < nl > Calculations < nl > ` ` ` < nl > pre _ master _ secret : = < result _ of _ dh > < nl > - master _ secret : = PRF ( pre _ master _ secret , " master secret " , clientNonce + ServerNonce ) < nl > - verify : = PRF ( master _ secret , " client finished " , clientNonce + ServerNonce ) < nl > + master _ secret : = < nl > + PRF _ SHA256 ( pre _ master _ secret , " kgb secret " , clientNonce + ServerNonce , 128 ) + < nl > + PRF _ STREEBOG256 ( pre _ master _ secret , " nsa secret " , clientNonce + ServerNonce , 128 ) < nl > + verify : = < nl > + PRF _ SHA256 ( master _ secret , " client finished " , clientNonce + ServerNonce , 128 ) + < nl > + PRF _ STREEBOG256 ( master _ secret , " patron finished " , clientNonce + ServerNonce , 128 ) < nl > verify _ sign : = Ed25519 ( verification , server _ private _ signing _ key ) < nl > ` ` ` < nl > < nl > - master _ secret is resulted < nl > + master _ secret is result encryption key . First 128 bytes is US encryption keys and last 128 bytes is Russian encryption keys . < nl > < nl > ` ` ` < nl > ResponseDoDH {
NEAREST DIFF (one line): diff - - git a / docs / protocol / key - creation . md b / docs / protocol / key - creation . md < nl > index 96cd3e8 . . 0d6ca1f 100644 < nl > - - - a / docs / protocol / key - creation . md < nl > + + + b / docs / protocol / key - creation . md < nl > @ @ - 72 , 8 + 72 , 8 @ @ RequestStartDH { < nl > / / Used keyId for Diffie - Hellman start < nl > keyId : long < nl > < nl > - / / DH parameter used for encryption < nl > - dh _ x : bytes < nl > + / / Client ' s key used for encryption < nl > + clientKey : bytes < nl > / / Encrypted DH request < nl > encrypted : bytes < nl > }

TEST DIFF:
diff - - git a / docs / protocol / key - creation . md b / docs / protocol / key - creation . md 
 index d138542 . . 5f39e21 100644 
 - - - a / docs / protocol / key - creation . md 
 + + + b / docs / protocol / key - creation . md 
 @ @ - 12 , 7 + 12 , 7 @ @ This technique use [ TLS 1 . 2 RFC ] ( https : / / tools . ietf . org / html / rfc5246 ) for it ' s b 
 * Not sending server certificates if not needed on every connection . 
 * One DiffieHellman to build one shared secret without repeating on almost every reconnect . ( we will implement PFS in next revision of MTProto v2 ) 
 * Using only Curve25519 , AES - CBC , Kuznechik - CBC and Streebog 
 - * Extending master _ secret to make it 256 bytes long 
 + * Extending master _ secret to make it 256 bytes long with two different algorithms based on TLS ' s PRF function with SHA256 and Streebog hashes . 
 * Added Signing of response just to check that everything is ok and add one more protection level 
 
 # Primitives 
 @ @ - 90 , 12 + 90 , 16 @ @ RequestDH { 
 Calculations 
 ` ` ` 
 pre _ master _ secret : = < result _ of _ dh > 
 - master _ secret : = PRF ( pre _ master _ secret , " master secret " , clientNonce + ServerNonce ) 
 - verify : = PRF ( master _ secret , " client finished " , clientNonce + ServerNonce ) 
 + master _ secret : = 
 + PRF _ SHA256 ( pre _ master _ secret , " kgb secret " , clientNonce + ServerNonce , 128 ) + 
 + PRF _ STREEBOG256 ( pre _ master _ secret , " nsa secret " , clientNonce + ServerNonce , 128 ) 
 + verify : = 
 + PRF _ SHA256 ( master _ secret , " client finished " , clientNonce + ServerNonce , 128 ) + 
 + PRF _ STREEBOG256 ( master _ secret , " patron finished " , clientNonce + ServerNonce , 128 ) 
 verify _ sign : = Ed25519 ( verification , server _ private _ signing _ key ) 
 ` ` ` 
 
 - master _ secret is resulted 
 + master _ secret is result encryption key . First 128 bytes is US encryption keys and last 128 bytes is Russian encryption keys . 
 
 ` ` ` 
 ResponseDoDH {

NEAREST DIFF:
diff - - git a / docs / protocol / key - creation . md b / docs / protocol / key - creation . md 
 index 96cd3e8 . . 0d6ca1f 100644 
 - - - a / docs / protocol / key - creation . md 
 + + + b / docs / protocol / key - creation . md 
 @ @ - 72 , 8 + 72 , 8 @ @ RequestStartDH { 
 / / Used keyId for Diffie - Hellman start 
 keyId : long 
 
 - / / DH parameter used for encryption 
 - dh _ x : bytes 
 + / / Client ' s key used for encryption 
 + clientKey : bytes 
 / / Encrypted DH request 
 encrypted : bytes 
 }
