BLEU SCORE: 0.02383853510228548

TEST MSG: Fix feedback to onbody when SMS code not received
GENERATED MSG: wip ( iOS ) : Contact bubble

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift < nl > index ff30eef . . 9227aa9 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift < nl > @ @ - 27 , 13 + 27 , 10 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate < nl > private var counter = AAAuthCodeViewController . DIAL _ SECONDS < nl > < nl > private let phoneNumber : String < nl > - private let supportEnabled : Bool < nl > - < nl > + < nl > public init ( phoneNumber : String ) { < nl > < nl > self . phoneNumber = phoneNumber < nl > - self . supportEnabled = true < nl > - / / self . supportEnabled = AppConfig . activationEmail ! = nil | | AppConfig . supportEmail ! = nil < nl > < nl > super . init ( ) < nl > < nl > @ @ - 178 , 10 + 175 , 14 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate < nl > updateTimerText ( ) < nl > } < nl > < nl > + func supportEnabled ( ) - > Bool { < nl > + return ActorSDK . sharedActor ( ) . supportEmail ! = nil < nl > + } < nl > + < nl > func updateTimerText ( ) { < nl > if dialed { < nl > callHintLabel . textLocalized = " AuthCallDoneHint " < nl > - if self . supportEnabled { < nl > + if self . supportEnabled ( ) { < nl > callActionLabel . hidden = false < nl > } < nl > } else { < nl > @ @ - 231 , 18 + 232 , 14 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate < nl > } < nl > < nl > public func noCodeDidPressed ( ) { < nl > - let emailController = MFMailComposeViewController ( ) < nl > - emailController . setSubject ( " Activation code problem ( \ ( phoneNumber ) ) " ) < nl > - / / if AppConfig . activationEmail ! = nil { < nl > - / / emailController . setToRecipients ( [ AppConfig . activationEmail ! ] ) < nl > - / / } else if AppConfig . supportEmail ! = nil { < nl > - / / emailController . setToRecipients ( [ AppConfig . supportEmail ! ] ) < nl > - / / } else { < nl > - / / fatalError ( " Support emails not set " ) < nl > - / / } < nl > - emailController . setMessageBody ( " Hello , Dear Support ! \ n \ nI can ' t receive any activation codes to the phone : \ ( phoneNumber ) . \ n \ nHope , you will answer soon . Thank you ! " , isHTML : false ) < nl > - emailController . delegate = self < nl > - presentViewController ( emailController , animated : true , completion : nil ) < nl > + if self . supportEnabled ( ) { < nl > + let emailController = MFMailComposeViewController ( ) < nl > + emailController . setSubject ( " Activation code problem ( \ ( phoneNumber ) ) " ) < nl > + emailController . setToRecipients ( [ ActorSDK . sharedActor ( ) . supportEmail ! ] ) < nl > + emailController . setMessageBody ( " Hello , Dear Support ! \ n \ nI can ' t receive any activation codes to the phone : \ ( phoneNumber ) . \ n \ nHope , you will answer soon . Thank you ! " , isHTML : false ) < nl > + emailController . delegate = self < nl > + presentViewController ( emailController , animated : true , completion : nil ) < nl > + } < nl > } < nl > < nl > public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 5fc91d4 . . 313043c 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 176 , 6 + 176 , 7 @ @ < nl > 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; < nl > + 	 	 06E7B2541C139B6F0090660C / * AABubbleContactCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 355 , 6 + 356 , 7 @ @ < nl > 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleContactCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 844 , 6 + 846 , 7 @ @ < nl > 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , < nl > 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , < nl > 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , < nl > + 	 	 	 	 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Cell ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1098 , 6 + 1101 , 7 @ @ < nl > 	 	 	 	 065974A51BC621F100B8C7DF / * AAAuthNavigationController . swift in Sources * / , < nl > 	 	 	 	 066A518E1BC4C383000E606E / * iOSNotificationProvider . swift in Sources * / , < nl > 	 	 	 	 066A52681BC50E7B000E606E / * AAAuthCodeViewController . swift in Sources * / , < nl > + 	 	 	 	 06E7B2541C139B6F0090660C / * AABubbleContactCell . swift in Sources * / , < nl > 	 	 	 	 066A52CC1BC521FA000E606E / * AADialogsListContentController . swift in Sources * / , < nl > 	 	 	 	 066A52571BC4EF61000E606E / * AACollectionViewController . swift in Sources * / , < nl > 	 	 	 	 066A532F1BC53406000E606E / * AABubbleMediaCell . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > index a98f2ef . . f76b530 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > @ @ - 11 , 12 + 11 , 14 @ @ class AABubbles { < nl > static let documentLayouter = AABubbleDocumentCellLayout ( ) < nl > static let serviceLayouter = AABubbleServiceCellLayouter ( ) < nl > static let locationLayouter = AABubbleLocationCellLayouter ( ) < nl > + static let contactLayouter = AABubbleContactCellLayouter ( ) < nl > < nl > static let builtInLayouters : [ AABubbleLayouter ] = [ < nl > serviceLayouter , < nl > mediaLayouter , < nl > documentLayouter , < nl > locationLayouter , < nl > + contactLayouter , < nl > textLayouter < nl > ] < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > new file mode 100644 < nl > index 0000000 . . 4a76f56 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > @ @ - 0 , 0 + 1 , 143 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public class AABubbleContactCell : AABubbleCell { < nl > + < nl > + private let avatar = AAAvatarView ( frameSize : 44 ) < nl > + private let name = UILabel ( ) < nl > + private let contact = UILabel ( ) < nl > + private var bindedRecords = [ String ] ( ) < nl > + < nl > + public init ( frame : CGRect ) { < nl > + super . init ( frame : frame , isFullSize : false ) < nl > + < nl > + name . font = UIFont . mediumSystemFontOfSize ( 17 ) < nl > + contact . font = UIFont . systemFontOfSize ( 15 ) < nl > + < nl > + contentView . addSubview ( avatar ) < nl > + contentView . addSubview ( name ) < nl > + contentView . addSubview ( contact ) < nl > + < nl > + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > + < nl > + let contactLayout = cellLayout as ! AAContactCellLayout < nl > + < nl > + / / Always update bubble insets < nl > + if ( isOut ) { < nl > + bindBubbleType ( . TextOut , isCompact : false ) < nl > + < nl > + bubbleInsets = UIEdgeInsets ( < nl > + top : AABubbleCell . bubbleTop , < nl > + left : 0 + ( AADevice . isiPad ? 16 : 0 ) , < nl > + bottom : AABubbleCell . bubbleBottom , < nl > + right : 4 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > + contentInsets = UIEdgeInsets ( < nl > + top : AABubbleCell . bubbleContentTop , < nl > + left : 6 , < nl > + bottom : AABubbleCell . bubbleContentBottom , < nl > + right : 10 ) < nl > + < nl > + name . textColor = ActorSDK . sharedActor ( ) . style . chatTextOutColor < nl > + } else { < nl > + bindBubbleType ( . TextIn , isCompact : false ) < nl > + < nl > + bubbleInsets = UIEdgeInsets ( < nl > + top : AABubbleCell . bubbleTop , < nl > + left : 4 + ( AADevice . isiPad ? 16 : 0 ) , < nl > + bottom : AABubbleCell . bubbleBottom , < nl > + right : 0 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > + contentInsets = UIEdgeInsets ( < nl > + top : ( isGroup ? 18 : 0 ) + AABubbleCell . bubbleContentTop , < nl > + left : 13 , < nl > + bottom : AABubbleCell . bubbleContentBottom , < nl > + right : 10 ) < nl > + < nl > + name . textColor = ActorSDK . sharedActor ( ) . style . chatTextInColor < nl > + } < nl > + name . text = contactLayout . name < nl > + < nl > + var s = " " < nl > + for i in contactLayout . records { < nl > + if ( s ! = " " ) { < nl > + s + = " \ n " < nl > + } < nl > + s + = i < nl > + } < nl > + contact . text = s < nl > + contact . numberOfLines = contactLayout . records . count < nl > + bindedRecords = contactLayout . records < nl > + < nl > + avatar . bind ( contactLayout . name , id : 0 , avatar : nil ) < nl > + } < nl > + < nl > + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > + / / Convenience < nl > + let insets = fullContentInsets < nl > + let contentWidth = self . contentView . frame . width < nl > + < nl > + let height = max ( 44 , bindedRecords . count * 18 + 22 ) < nl > + layoutBubble ( 200 , contentHeight : CGFloat ( height ) ) < nl > + < nl > + if ( isOut ) { < nl > + avatar . frame = CGRectMake ( contentWidth - insets . right - 200 , insets . top , 44 , 44 ) < nl > + } else { < nl > + avatar . frame = CGRectMake ( insets . left , insets . top , 44 , 44 ) < nl > + } < nl > + name . frame = CGRectMake ( avatar . right + 6 , insets . top , 200 - 58 , 22 ) < nl > + contact . frame = CGRectMake ( avatar . right + 6 , insets . top + 22 , 200 - 58 , 200 ) < nl > + contact . sizeToFit ( ) < nl > + } < nl > + } < nl > + < nl > + public class AAContactCellLayout : AACellLayout { < nl > + < nl > + let name : String < nl > + let records : [ String ] < nl > + < nl > + init ( name : String , records : [ String ] , date : Int64 ) { < nl > + self . name = name < nl > + self . records = records < nl > + let height = max ( 44 , records . count * 18 + 22 ) + 12 < nl > + super . init ( height : CGFloat ( height ) , date : date , key : " location " ) < nl > + } < nl > + } < nl > + < nl > + public class AABubbleContactCellLayouter : AABubbleLayouter { < nl > + public func isSuitable ( message : ACMessage ) - > Bool { < nl > + if ( ! ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { < nl > + return false < nl > + } < nl > + < nl > + if ( message . content is ACContactContent ) { < nl > + return true < nl > + } < nl > + < nl > + return false < nl > + } < nl > + < nl > + public func cellClass ( ) - > AnyClass { < nl > + return AABubbleContactCell . self < nl > + } < nl > + < nl > + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { < nl > + let content = message . content as ! ACContactContent < nl > + var records = [ String ] ( ) < nl > + for i in 0 . . < content . getPhones ( ) . size ( ) { < nl > + records . append ( content . getPhones ( ) . getWithInt ( i ) as ! String ) < nl > + } < nl > + for i in 0 . . < content . getEmails ( ) . size ( ) { < nl > + records . append ( content . getEmails ( ) . getWithInt ( i ) as ! String ) < nl > + } < nl > + return AAContactCellLayout ( name : content . getName ( ) , records : records , date : Int64 ( message . date ) ) < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 8ccbd9f . . a4084c5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 5 , 8 + 5 , 11 @ @ < nl > import Foundation < nl > import UIKit < nl > import MobileCoreServices < nl > + import AddressBook < nl > + import AddressBookUI < nl > < nl > - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { < nl > + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate , < nl > + ABPeoplePickerNavigationControllerDelegate { < nl > < nl > / / Data binder < nl > private let binder = AABinder ( ) < nl > @ @ - 295 , 23 + 298 , 27 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > let builder = AAMenuBuilder ( ) < nl > < nl > if hasCamera { < nl > - builder . add ( " PhotoCamera " ) { ( ) - > ( ) in < nl > + builder . add ( " PhotoCamera " ) { < nl > self . pickImage ( . Camera ) < nl > } < nl > } < nl > < nl > - builder . add ( " PhotoLibrary " ) { ( ) - > ( ) in < nl > + builder . add ( " PhotoLibrary " ) { < nl > self . pickImage ( . PhotoLibrary ) < nl > } < nl > < nl > - builder . add ( " SendDocument " ) { ( ) - > ( ) in < nl > + builder . add ( " SendDocument " ) { < nl > self . pickDocument ( ) < nl > } < nl > < nl > - builder . add ( " ShareLocation " ) { ( ) - > ( ) in < nl > + builder . add ( " ShareLocation " ) { < nl > self . pickLocation ( ) < nl > } < nl > < nl > + builder . add ( " ShareContact " ) { < nl > + self . pickContact ( ) < nl > + } < nl > + < nl > showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) < nl > } < nl > < nl > @ @ - 473 , 4 + 480 , 62 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) < nl > controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > + < nl > + func pickContact ( ) { < nl > + let pickerController = ABPeoplePickerNavigationController ( ) < nl > + pickerController . peoplePickerDelegate = self < nl > + self . presentViewController ( pickerController , animated : true , completion : nil ) < nl > + } < nl > + < nl > + func peoplePickerNavigationController ( peoplePicker : ABPeoplePickerNavigationController , didSelectPerson person : ABRecord ) { < nl > + < nl > + / / Dismissing picker < nl > + < nl > + peoplePicker . dismissViewControllerAnimated ( true , completion : nil ) < nl > + < nl > + / / Names < nl > + < nl > + let firstname : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonFirstNameProperty ) . takeRetainedValue ( ) < nl > + let lastname : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonLastNameProperty ) . takeRetainedValue ( ) < nl > + let name = ( firstname . description + " " + lastname . description ) . trim ( ) < nl > + < nl > + / / Avatar < nl > + < nl > + var jAvatarImage : String ? = nil < nl > + let hasAvatarImage = ABPersonHasImageData ( person ) < nl > + if ( hasAvatarImage ) { < nl > + let imgData = ABPersonCopyImageDataWithFormat ( person , kABPersonImageFormatOriginalSize ) . takeRetainedValue ( ) < nl > + let image = UIImage ( data : imgData ) ? . resizeSquare ( 90 , maxH : 90 ) < nl > + if ( image ! = nil ) { < nl > + let thumbData = UIImageJPEGRepresentation ( image ! , 0 . 55 ) < nl > + jAvatarImage = thumbData ? . base64EncodedStringWithOptions ( NSDataBase64EncodingOptions ( ) ) < nl > + } < nl > + } < nl > + < nl > + / / Phones < nl > + < nl > + let jPhones = JavaUtilHashSet ( ) < nl > + let phoneNumbers : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonPhoneProperty ) . takeRetainedValue ( ) < nl > + let phoneCount = ABMultiValueGetCount ( phoneNumbers ) < nl > + for ( var i = 0 ; i < phoneCount ; i + + ) { < nl > + let phone = ( ABMultiValueCopyValueAtIndex ( phoneNumbers , i ) . takeRetainedValue ( ) as ! String ) . trim ( ) < nl > + jPhones . addWithId ( phone ) < nl > + } < nl > + < nl > + < nl > + / / Email < nl > + let jEmails = JavaUtilHashSet ( ) < nl > + let emails : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonEmailProperty ) . takeRetainedValue ( ) < nl > + let emailsCount = ABMultiValueGetCount ( emails ) < nl > + for ( var i = 0 ; i < emailsCount ; i + + ) { < nl > + let email = ( ABMultiValueCopyValueAtIndex ( emails , i ) . takeRetainedValue ( ) as ! String ) . trim ( ) < nl > + if ( email . length > 0 ) { < nl > + jEmails . addWithId ( email ) < nl > + } < nl > + } < nl > + < nl > + / / Sending < nl > + < nl > + Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : JavaUtilHashSet ( ) , withPhoto : jAvatarImage ) < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / Podfile b / actor - sdk / sdk - core - ios / Podfile < nl > index c412c0a . . 56bc277 100644 < nl > - - - a / actor - sdk / sdk - core - ios / Podfile < nl > + + + b / actor - sdk / sdk - core - ios / Podfile < nl > @ @ - 28 , 6 + 28 , 7 @ @ target ' ActorApp ' do < nl > pod ' TTTAttributedLabel ' < nl > pod ' RSKImageCropper ' < nl > pod ' JDStatusBarNotification ' < nl > + pod ' Neon ' < nl > < nl > # Small UI < nl > pod ' VBFPopFlatButton '

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift 
 index ff30eef . . 9227aa9 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthCodeViewController . swift 
 @ @ - 27 , 13 + 27 , 10 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate 
 private var counter = AAAuthCodeViewController . DIAL _ SECONDS 
 
 private let phoneNumber : String 
 - private let supportEnabled : Bool 
 - 
 + 
 public init ( phoneNumber : String ) { 
 
 self . phoneNumber = phoneNumber 
 - self . supportEnabled = true 
 - / / self . supportEnabled = AppConfig . activationEmail ! = nil | | AppConfig . supportEmail ! = nil 
 
 super . init ( ) 
 
 @ @ - 178 , 10 + 175 , 14 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate 
 updateTimerText ( ) 
 } 
 
 + func supportEnabled ( ) - > Bool { 
 + return ActorSDK . sharedActor ( ) . supportEmail ! = nil 
 + } 
 + 
 func updateTimerText ( ) { 
 if dialed { 
 callHintLabel . textLocalized = " AuthCallDoneHint " 
 - if self . supportEnabled { 
 + if self . supportEnabled ( ) { 
 callActionLabel . hidden = false 
 } 
 } else { 
 @ @ - 231 , 18 + 232 , 14 @ @ public class AAAuthCodeViewController : AAAuthViewController , UIAlertViewDelegate 
 } 
 
 public func noCodeDidPressed ( ) { 
 - let emailController = MFMailComposeViewController ( ) 
 - emailController . setSubject ( " Activation code problem ( \ ( phoneNumber ) ) " ) 
 - / / if AppConfig . activationEmail ! = nil { 
 - / / emailController . setToRecipients ( [ AppConfig . activationEmail ! ] ) 
 - / / } else if AppConfig . supportEmail ! = nil { 
 - / / emailController . setToRecipients ( [ AppConfig . supportEmail ! ] ) 
 - / / } else { 
 - / / fatalError ( " Support emails not set " ) 
 - / / } 
 - emailController . setMessageBody ( " Hello , Dear Support ! \ n \ nI can ' t receive any activation codes to the phone : \ ( phoneNumber ) . \ n \ nHope , you will answer soon . Thank you ! " , isHTML : false ) 
 - emailController . delegate = self 
 - presentViewController ( emailController , animated : true , completion : nil ) 
 + if self . supportEnabled ( ) { 
 + let emailController = MFMailComposeViewController ( ) 
 + emailController . setSubject ( " Activation code problem ( \ ( phoneNumber ) ) " ) 
 + emailController . setToRecipients ( [ ActorSDK . sharedActor ( ) . supportEmail ! ] ) 
 + emailController . setMessageBody ( " Hello , Dear Support ! \ n \ nI can ' t receive any activation codes to the phone : \ ( phoneNumber ) . \ n \ nHope , you will answer soon . Thank you ! " , isHTML : false ) 
 + emailController . delegate = self 
 + presentViewController ( emailController , animated : true , completion : nil ) 
 + } 
 } 
 
 public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 5fc91d4 . . 313043c 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 176 , 6 + 176 , 7 @ @ 
 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; 
 + 	 	 06E7B2541C139B6F0090660C / * AABubbleContactCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 355 , 6 + 356 , 7 @ @ 
 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleContactCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 844 , 6 + 846 , 7 @ @ 
 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , 
 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , 
 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , 
 + 	 	 	 	 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Cell ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1098 , 6 + 1101 , 7 @ @ 
 	 	 	 	 065974A51BC621F100B8C7DF / * AAAuthNavigationController . swift in Sources * / , 
 	 	 	 	 066A518E1BC4C383000E606E / * iOSNotificationProvider . swift in Sources * / , 
 	 	 	 	 066A52681BC50E7B000E606E / * AAAuthCodeViewController . swift in Sources * / , 
 + 	 	 	 	 06E7B2541C139B6F0090660C / * AABubbleContactCell . swift in Sources * / , 
 	 	 	 	 066A52CC1BC521FA000E606E / * AADialogsListContentController . swift in Sources * / , 
 	 	 	 	 066A52571BC4EF61000E606E / * AACollectionViewController . swift in Sources * / , 
 	 	 	 	 066A532F1BC53406000E606E / * AABubbleMediaCell . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 index a98f2ef . . f76b530 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 @ @ - 11 , 12 + 11 , 14 @ @ class AABubbles { 
 static let documentLayouter = AABubbleDocumentCellLayout ( ) 
 static let serviceLayouter = AABubbleServiceCellLayouter ( ) 
 static let locationLayouter = AABubbleLocationCellLayouter ( ) 
 + static let contactLayouter = AABubbleContactCellLayouter ( ) 
 
 static let builtInLayouters : [ AABubbleLayouter ] = [ 
 serviceLayouter , 
 mediaLayouter , 
 documentLayouter , 
 locationLayouter , 
 + contactLayouter , 
 textLayouter 
 ] 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 new file mode 100644 
 index 0000000 . . 4a76f56 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 @ @ - 0 , 0 + 1 , 143 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public class AABubbleContactCell : AABubbleCell { 
 + 
 + private let avatar = AAAvatarView ( frameSize : 44 ) 
 + private let name = UILabel ( ) 
 + private let contact = UILabel ( ) 
 + private var bindedRecords = [ String ] ( ) 
 + 
 + public init ( frame : CGRect ) { 
 + super . init ( frame : frame , isFullSize : false ) 
 + 
 + name . font = UIFont . mediumSystemFontOfSize ( 17 ) 
 + contact . font = UIFont . systemFontOfSize ( 15 ) 
 + 
 + contentView . addSubview ( avatar ) 
 + contentView . addSubview ( name ) 
 + contentView . addSubview ( contact ) 
 + 
 + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 + 
 + let contactLayout = cellLayout as ! AAContactCellLayout 
 + 
 + / / Always update bubble insets 
 + if ( isOut ) { 
 + bindBubbleType ( . TextOut , isCompact : false ) 
 + 
 + bubbleInsets = UIEdgeInsets ( 
 + top : AABubbleCell . bubbleTop , 
 + left : 0 + ( AADevice . isiPad ? 16 : 0 ) , 
 + bottom : AABubbleCell . bubbleBottom , 
 + right : 4 + ( AADevice . isiPad ? 16 : 0 ) ) 
 + contentInsets = UIEdgeInsets ( 
 + top : AABubbleCell . bubbleContentTop , 
 + left : 6 , 
 + bottom : AABubbleCell . bubbleContentBottom , 
 + right : 10 ) 
 + 
 + name . textColor = ActorSDK . sharedActor ( ) . style . chatTextOutColor 
 + } else { 
 + bindBubbleType ( . TextIn , isCompact : false ) 
 + 
 + bubbleInsets = UIEdgeInsets ( 
 + top : AABubbleCell . bubbleTop , 
 + left : 4 + ( AADevice . isiPad ? 16 : 0 ) , 
 + bottom : AABubbleCell . bubbleBottom , 
 + right : 0 + ( AADevice . isiPad ? 16 : 0 ) ) 
 + contentInsets = UIEdgeInsets ( 
 + top : ( isGroup ? 18 : 0 ) + AABubbleCell . bubbleContentTop , 
 + left : 13 , 
 + bottom : AABubbleCell . bubbleContentBottom , 
 + right : 10 ) 
 + 
 + name . textColor = ActorSDK . sharedActor ( ) . style . chatTextInColor 
 + } 
 + name . text = contactLayout . name 
 + 
 + var s = " " 
 + for i in contactLayout . records { 
 + if ( s ! = " " ) { 
 + s + = " \ n " 
 + } 
 + s + = i 
 + } 
 + contact . text = s 
 + contact . numberOfLines = contactLayout . records . count 
 + bindedRecords = contactLayout . records 
 + 
 + avatar . bind ( contactLayout . name , id : 0 , avatar : nil ) 
 + } 
 + 
 + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 + / / Convenience 
 + let insets = fullContentInsets 
 + let contentWidth = self . contentView . frame . width 
 + 
 + let height = max ( 44 , bindedRecords . count * 18 + 22 ) 
 + layoutBubble ( 200 , contentHeight : CGFloat ( height ) ) 
 + 
 + if ( isOut ) { 
 + avatar . frame = CGRectMake ( contentWidth - insets . right - 200 , insets . top , 44 , 44 ) 
 + } else { 
 + avatar . frame = CGRectMake ( insets . left , insets . top , 44 , 44 ) 
 + } 
 + name . frame = CGRectMake ( avatar . right + 6 , insets . top , 200 - 58 , 22 ) 
 + contact . frame = CGRectMake ( avatar . right + 6 , insets . top + 22 , 200 - 58 , 200 ) 
 + contact . sizeToFit ( ) 
 + } 
 + } 
 + 
 + public class AAContactCellLayout : AACellLayout { 
 + 
 + let name : String 
 + let records : [ String ] 
 + 
 + init ( name : String , records : [ String ] , date : Int64 ) { 
 + self . name = name 
 + self . records = records 
 + let height = max ( 44 , records . count * 18 + 22 ) + 12 
 + super . init ( height : CGFloat ( height ) , date : date , key : " location " ) 
 + } 
 + } 
 + 
 + public class AABubbleContactCellLayouter : AABubbleLayouter { 
 + public func isSuitable ( message : ACMessage ) - > Bool { 
 + if ( ! ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { 
 + return false 
 + } 
 + 
 + if ( message . content is ACContactContent ) { 
 + return true 
 + } 
 + 
 + return false 
 + } 
 + 
 + public func cellClass ( ) - > AnyClass { 
 + return AABubbleContactCell . self 
 + } 
 + 
 + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { 
 + let content = message . content as ! ACContactContent 
 + var records = [ String ] ( ) 
 + for i in 0 . . < content . getPhones ( ) . size ( ) { 
 + records . append ( content . getPhones ( ) . getWithInt ( i ) as ! String ) 
 + } 
 + for i in 0 . . < content . getEmails ( ) . size ( ) { 
 + records . append ( content . getEmails ( ) . getWithInt ( i ) as ! String ) 
 + } 
 + return AAContactCellLayout ( name : content . getName ( ) , records : records , date : Int64 ( message . date ) ) 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 8ccbd9f . . a4084c5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 5 , 8 + 5 , 11 @ @ 
 import Foundation 
 import UIKit 
 import MobileCoreServices 
 + import AddressBook 
 + import AddressBookUI 
 
 - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { 
 + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate , 
 + ABPeoplePickerNavigationControllerDelegate { 
 
 / / Data binder 
 private let binder = AABinder ( ) 
 @ @ - 295 , 23 + 298 , 27 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 let builder = AAMenuBuilder ( ) 
 
 if hasCamera { 
 - builder . add ( " PhotoCamera " ) { ( ) - > ( ) in 
 + builder . add ( " PhotoCamera " ) { 
 self . pickImage ( . Camera ) 
 } 
 } 
 
 - builder . add ( " PhotoLibrary " ) { ( ) - > ( ) in 
 + builder . add ( " PhotoLibrary " ) { 
 self . pickImage ( . PhotoLibrary ) 
 } 
 
 - builder . add ( " SendDocument " ) { ( ) - > ( ) in 
 + builder . add ( " SendDocument " ) { 
 self . pickDocument ( ) 
 } 
 
 - builder . add ( " ShareLocation " ) { ( ) - > ( ) in 
 + builder . add ( " ShareLocation " ) { 
 self . pickLocation ( ) 
 } 
 
 + builder . add ( " ShareContact " ) { 
 + self . pickContact ( ) 
 + } 
 + 
 showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) 
 } 
 
 @ @ - 473 , 4 + 480 , 62 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) 
 controller . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 + 
 + func pickContact ( ) { 
 + let pickerController = ABPeoplePickerNavigationController ( ) 
 + pickerController . peoplePickerDelegate = self 
 + self . presentViewController ( pickerController , animated : true , completion : nil ) 
 + } 
 + 
 + func peoplePickerNavigationController ( peoplePicker : ABPeoplePickerNavigationController , didSelectPerson person : ABRecord ) { 
 + 
 + / / Dismissing picker 
 + 
 + peoplePicker . dismissViewControllerAnimated ( true , completion : nil ) 
 + 
 + / / Names 
 + 
 + let firstname : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonFirstNameProperty ) . takeRetainedValue ( ) 
 + let lastname : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonLastNameProperty ) . takeRetainedValue ( ) 
 + let name = ( firstname . description + " " + lastname . description ) . trim ( ) 
 + 
 + / / Avatar 
 + 
 + var jAvatarImage : String ? = nil 
 + let hasAvatarImage = ABPersonHasImageData ( person ) 
 + if ( hasAvatarImage ) { 
 + let imgData = ABPersonCopyImageDataWithFormat ( person , kABPersonImageFormatOriginalSize ) . takeRetainedValue ( ) 
 + let image = UIImage ( data : imgData ) ? . resizeSquare ( 90 , maxH : 90 ) 
 + if ( image ! = nil ) { 
 + let thumbData = UIImageJPEGRepresentation ( image ! , 0 . 55 ) 
 + jAvatarImage = thumbData ? . base64EncodedStringWithOptions ( NSDataBase64EncodingOptions ( ) ) 
 + } 
 + } 
 + 
 + / / Phones 
 + 
 + let jPhones = JavaUtilHashSet ( ) 
 + let phoneNumbers : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonPhoneProperty ) . takeRetainedValue ( ) 
 + let phoneCount = ABMultiValueGetCount ( phoneNumbers ) 
 + for ( var i = 0 ; i < phoneCount ; i + + ) { 
 + let phone = ( ABMultiValueCopyValueAtIndex ( phoneNumbers , i ) . takeRetainedValue ( ) as ! String ) . trim ( ) 
 + jPhones . addWithId ( phone ) 
 + } 
 + 
 + 
 + / / Email 
 + let jEmails = JavaUtilHashSet ( ) 
 + let emails : ABMultiValueRef = ABRecordCopyValue ( person , kABPersonEmailProperty ) . takeRetainedValue ( ) 
 + let emailsCount = ABMultiValueGetCount ( emails ) 
 + for ( var i = 0 ; i < emailsCount ; i + + ) { 
 + let email = ( ABMultiValueCopyValueAtIndex ( emails , i ) . takeRetainedValue ( ) as ! String ) . trim ( ) 
 + if ( email . length > 0 ) { 
 + jEmails . addWithId ( email ) 
 + } 
 + } 
 + 
 + / / Sending 
 + 
 + Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : JavaUtilHashSet ( ) , withPhoto : jAvatarImage ) 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / Podfile b / actor - sdk / sdk - core - ios / Podfile 
 index c412c0a . . 56bc277 100644 
 - - - a / actor - sdk / sdk - core - ios / Podfile 
 + + + b / actor - sdk / sdk - core - ios / Podfile 
 @ @ - 28 , 6 + 28 , 7 @ @ target ' ActorApp ' do 
 pod ' TTTAttributedLabel ' 
 pod ' RSKImageCropper ' 
 pod ' JDStatusBarNotification ' 
 + pod ' Neon ' 
 
 # Small UI 
 pod ' VBFPopFlatButton '
