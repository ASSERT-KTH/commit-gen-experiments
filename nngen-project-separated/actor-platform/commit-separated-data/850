BLEU SCORE: 0.05417921591708778

TEST MSG: fix ( core ) : Fixing Audio type picking
GENERATED MSG: feat ( js ) : In electron runtime getting window state from electron main process

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java < nl > index 4f06e38 . . f201224 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java < nl > @ @ - 16 , 7 + 16 , 7 @ @ public class JsCallsProvider implements CallsProvider { < nl > < nl > Audio callBeep = Audio . createIfSupported ( ) ; < nl > if ( callBeep ! = null ) { < nl > - if ( " " . equals ( callBeep . canPlayType ( " audio / ogg ; " ) ) ) { < nl > + if ( ! " " . equals ( callBeep . canPlayType ( " audio / ogg ; " ) ) ) { < nl > callBeep . setSrc ( " assets / sound / tone . ogg " ) ; < nl > } else if ( ! " " . equals ( callBeep . canPlayType ( " audio / mpeg ; " ) ) ) { < nl > callBeep . setSrc ( " assets / sound / tone . mp3 " ) ; < nl > @ @ - 30 , 9 + 30 , 9 @ @ public class JsCallsProvider implements CallsProvider { < nl > < nl > Audio callRingtone = Audio . createIfSupported ( ) ; < nl > if ( callRingtone ! = null ) { < nl > - if ( " " . equals ( callRingtone . canPlayType ( " audio / ogg ; " ) ) ) { < nl > + if ( ! " " . equals ( callRingtone . canPlayType ( " audio / ogg ; " ) ) ) { < nl > callRingtone . setSrc ( " assets / sound / ringtone . ogg " ) ; < nl > - } else if ( " " . equals ( callRingtone . canPlayType ( " audio / mpeg ; " ) ) ) { < nl > + } else if ( ! " " . equals ( callRingtone . canPlayType ( " audio / mpeg ; " ) ) ) { < nl > callRingtone . setSrc ( " assets / sound / ringtone . mp3 " ) ; < nl > } else { < nl > / / Not Supported
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 07d9399 . . 4b5bf28 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 15 , 6 + 15 , 8 @ @ import im . actor . core . js . entity . * ; < nl > import im . actor . core . js . modules . JsBindedValueCallback ; < nl > import im . actor . core . js . providers . JsNotificationsProvider ; < nl > import im . actor . core . js . providers . JsPhoneBookProvider ; < nl > + import im . actor . core . js . providers . electron . JsElectronApp ; < nl > + import im . actor . core . js . providers . electron . JsElectronListener ; < nl > import im . actor . core . js . utils . HtmlMarkdownUtils ; < nl > import im . actor . core . js . utils . IdentityUtils ; < nl > import im . actor . core . network . RpcException ; < nl > @ @ - 100 , 6 + 102 , 19 @ @ public class JsFacade implements Exportable { < nl > < nl > messenger = new JsMessenger ( configuration . build ( ) ) ; < nl > < nl > + if ( isElectron ( ) ) { < nl > + JsElectronApp . subscribe ( " window " , new JsElectronListener ( ) { < nl > + @ Override < nl > + public void onEvent ( String content ) { < nl > + if ( " focus " . equals ( content ) ) { < nl > + messenger . onAppVisible ( ) ; < nl > + } else if ( " blur " . equals ( content ) ) { < nl > + messenger . onAppHidden ( ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > Log . d ( TAG , " JsMessenger created " ) ; < nl > } < nl > < nl > @ @ - 558 , 10 + 573 , 18 @ @ public class JsFacade implements Exportable { < nl > / / Events < nl > < nl > public void onAppVisible ( ) { < nl > + / / Ignore for electron runtime < nl > + if ( isElectron ( ) ) { < nl > + return ; < nl > + } < nl > messenger . onAppVisible ( ) ; < nl > } < nl > < nl > public void onAppHidden ( ) { < nl > + / / Ignore for electron runtime < nl > + if ( isElectron ( ) ) { < nl > + return ; < nl > + } < nl > messenger . onAppHidden ( ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > index e124f8e . . 50d9572 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > @ @ - 11 , 11 + 11 , 6 @ @ public class JsElectronApp { < nl > ipc . send ( ' tray - bounce ' ) ; < nl > } - * / ; < nl > < nl > - public static native void showNewMessages ( ) / * - { < nl > - var ipc = $ wnd . require ( ' ipc ' ) ; < nl > - ipc . send ( ' new - messages - show ' ) ; < nl > - } - * / ; < nl > - < nl > public static native void hideNewMessages ( ) / * - { < nl > var ipc = $ wnd . require ( ' ipc ' ) ; < nl > ipc . send ( ' new - messages - hide ' ) ; < nl > @ @ - 25 , 4 + 20 , 12 @ @ public class JsElectronApp { < nl > var ipc = $ wnd . require ( ' ipc ' ) ; < nl > ipc . send ( ' tray - badge ' , { count : count } ) ; < nl > } - * / ; < nl > - } < nl > + < nl > + < nl > + public static native void subscribe ( String topic , JsElectronListener listener ) / * - { < nl > + var ipc = $ wnd . require ( ' ipc ' ) ; < nl > + ipc . on ( topic , function ( message ) { < nl > + listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; < nl > + } ) ; < nl > + } - * / ; < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java < nl > new file mode 100644 < nl > index 0000000 . . f3a5ccf < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java < nl > @ @ - 0 , 0 + 1 , 5 @ @ < nl > + package im . actor . core . js . providers . electron ; < nl > + < nl > + public interface JsElectronListener { < nl > + void onEvent ( String content ) ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > index 21e8876 . . 1b001fc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > @ @ - 22 , 7 + 22 , 6 @ @ public class JsManagedNotification { < nl > tag : ' new - message ' , < nl > icon : icon , < nl > } ) ; < nl > - < nl > n . onclick = function ( ) { < nl > $ wnd . focus ( ) ; < nl > this . close ( ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java 
 index 4f06e38 . . f201224 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsCallsProvider . java 
 @ @ - 16 , 7 + 16 , 7 @ @ public class JsCallsProvider implements CallsProvider { 
 
 Audio callBeep = Audio . createIfSupported ( ) ; 
 if ( callBeep ! = null ) { 
 - if ( " " . equals ( callBeep . canPlayType ( " audio / ogg ; " ) ) ) { 
 + if ( ! " " . equals ( callBeep . canPlayType ( " audio / ogg ; " ) ) ) { 
 callBeep . setSrc ( " assets / sound / tone . ogg " ) ; 
 } else if ( ! " " . equals ( callBeep . canPlayType ( " audio / mpeg ; " ) ) ) { 
 callBeep . setSrc ( " assets / sound / tone . mp3 " ) ; 
 @ @ - 30 , 9 + 30 , 9 @ @ public class JsCallsProvider implements CallsProvider { 
 
 Audio callRingtone = Audio . createIfSupported ( ) ; 
 if ( callRingtone ! = null ) { 
 - if ( " " . equals ( callRingtone . canPlayType ( " audio / ogg ; " ) ) ) { 
 + if ( ! " " . equals ( callRingtone . canPlayType ( " audio / ogg ; " ) ) ) { 
 callRingtone . setSrc ( " assets / sound / ringtone . ogg " ) ; 
 - } else if ( " " . equals ( callRingtone . canPlayType ( " audio / mpeg ; " ) ) ) { 
 + } else if ( ! " " . equals ( callRingtone . canPlayType ( " audio / mpeg ; " ) ) ) { 
 callRingtone . setSrc ( " assets / sound / ringtone . mp3 " ) ; 
 } else { 
 / / Not Supported

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 07d9399 . . 4b5bf28 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 15 , 6 + 15 , 8 @ @ import im . actor . core . js . entity . * ; 
 import im . actor . core . js . modules . JsBindedValueCallback ; 
 import im . actor . core . js . providers . JsNotificationsProvider ; 
 import im . actor . core . js . providers . JsPhoneBookProvider ; 
 + import im . actor . core . js . providers . electron . JsElectronApp ; 
 + import im . actor . core . js . providers . electron . JsElectronListener ; 
 import im . actor . core . js . utils . HtmlMarkdownUtils ; 
 import im . actor . core . js . utils . IdentityUtils ; 
 import im . actor . core . network . RpcException ; 
 @ @ - 100 , 6 + 102 , 19 @ @ public class JsFacade implements Exportable { 
 
 messenger = new JsMessenger ( configuration . build ( ) ) ; 
 
 + if ( isElectron ( ) ) { 
 + JsElectronApp . subscribe ( " window " , new JsElectronListener ( ) { 
 + @ Override 
 + public void onEvent ( String content ) { 
 + if ( " focus " . equals ( content ) ) { 
 + messenger . onAppVisible ( ) ; 
 + } else if ( " blur " . equals ( content ) ) { 
 + messenger . onAppHidden ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 Log . d ( TAG , " JsMessenger created " ) ; 
 } 
 
 @ @ - 558 , 10 + 573 , 18 @ @ public class JsFacade implements Exportable { 
 / / Events 
 
 public void onAppVisible ( ) { 
 + / / Ignore for electron runtime 
 + if ( isElectron ( ) ) { 
 + return ; 
 + } 
 messenger . onAppVisible ( ) ; 
 } 
 
 public void onAppHidden ( ) { 
 + / / Ignore for electron runtime 
 + if ( isElectron ( ) ) { 
 + return ; 
 + } 
 messenger . onAppHidden ( ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 index e124f8e . . 50d9572 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 @ @ - 11 , 11 + 11 , 6 @ @ public class JsElectronApp { 
 ipc . send ( ' tray - bounce ' ) ; 
 } - * / ; 
 
 - public static native void showNewMessages ( ) / * - { 
 - var ipc = $ wnd . require ( ' ipc ' ) ; 
 - ipc . send ( ' new - messages - show ' ) ; 
 - } - * / ; 
 - 
 public static native void hideNewMessages ( ) / * - { 
 var ipc = $ wnd . require ( ' ipc ' ) ; 
 ipc . send ( ' new - messages - hide ' ) ; 
 @ @ - 25 , 4 + 20 , 12 @ @ public class JsElectronApp { 
 var ipc = $ wnd . require ( ' ipc ' ) ; 
 ipc . send ( ' tray - badge ' , { count : count } ) ; 
 } - * / ; 
 - } 
 + 
 + 
 + public static native void subscribe ( String topic , JsElectronListener listener ) / * - { 
 + var ipc = $ wnd . require ( ' ipc ' ) ; 
 + ipc . on ( topic , function ( message ) { 
 + listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; 
 + } ) ; 
 + } - * / ; 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java 
 new file mode 100644 
 index 0000000 . . f3a5ccf 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package im . actor . core . js . providers . electron ; 
 + 
 + public interface JsElectronListener { 
 + void onEvent ( String content ) ; 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 index 21e8876 . . 1b001fc 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 @ @ - 22 , 7 + 22 , 6 @ @ public class JsManagedNotification { 
 tag : ' new - message ' , 
 icon : icon , 
 } ) ; 
 - 
 n . onclick = function ( ) { 
 $ wnd . focus ( ) ; 
 this . close ( ) ;
