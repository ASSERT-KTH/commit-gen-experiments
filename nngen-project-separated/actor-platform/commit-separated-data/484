BLEU SCORE: 0.10738977135035864

TEST MSG: fix ( server : core ) : fix fatal typo
GENERATED MSG: perf ( server ) : compiled query for config parameter read

TEST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala < nl > index 460f2a0 . . 1d25b93 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala < nl > @ @ - 45 , 7 + 45 , 7 @ @ object RelationRepo { < nl > related ( userId , relatedTo ) . map ( _ . status ) . update ( RelationStatus . Approved ) < nl > < nl > def isBlocked ( userId : Int , relatedTo : Int ) : DBIO [ Boolean ] = < nl > - related ( userId , relatedTo ) . map ( _ . status = = = RelationStatus . Approved ) . exists . result < nl > + related ( userId , relatedTo ) . filter ( _ . status = = = RelationStatus . Blocked ) . exists . result < nl > < nl > def fetchBlockedIds ( userId : Int ) : DBIO [ Seq [ Int ] ] = < nl > relations . filter ( r ⇒ r . userId = = = userId & & r . status = = = RelationStatus . Blocked ) . map ( _ . relatedTo ) . result
NEAREST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala < nl > index 5ef7457 . . 828ca5c 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala < nl > @ @ - 25 , 6 + 25 , 9 @ @ object Parameter { < nl > def find ( userId : Int ) = < nl > parameters . filter ( _ . userId = = = userId ) . result < nl > < nl > + private def byUserIdAndKey ( userId : Rep [ Int ] , key : Rep [ String ] ) = parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) < nl > + private val byUserIdAndKeyC = Compiled ( byUserIdAndKey _ ) < nl > + < nl > def findValue ( userId : Int , key : String ) ( implicit ec : ExecutionContext ) = < nl > - parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) . result . headOption map ( _ . flatten ) < nl > + byUserIdAndKeyC ( userId → key ) . result . headOption map ( _ . flatten ) < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala 
 index 460f2a0 . . 1d25b93 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / social / RelationRepo . scala 
 @ @ - 45 , 7 + 45 , 7 @ @ object RelationRepo { 
 related ( userId , relatedTo ) . map ( _ . status ) . update ( RelationStatus . Approved ) 
 
 def isBlocked ( userId : Int , relatedTo : Int ) : DBIO [ Boolean ] = 
 - related ( userId , relatedTo ) . map ( _ . status = = = RelationStatus . Approved ) . exists . result 
 + related ( userId , relatedTo ) . filter ( _ . status = = = RelationStatus . Blocked ) . exists . result 
 
 def fetchBlockedIds ( userId : Int ) : DBIO [ Seq [ Int ] ] = 
 relations . filter ( r ⇒ r . userId = = = userId & & r . status = = = RelationStatus . Blocked ) . map ( _ . relatedTo ) . result

NEAREST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala 
 index 5ef7457 . . 828ca5c 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala 
 @ @ - 25 , 6 + 25 , 9 @ @ object Parameter { 
 def find ( userId : Int ) = 
 parameters . filter ( _ . userId = = = userId ) . result 
 
 + private def byUserIdAndKey ( userId : Rep [ Int ] , key : Rep [ String ] ) = parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) 
 + private val byUserIdAndKeyC = Compiled ( byUserIdAndKey _ ) 
 + 
 def findValue ( userId : Int , key : String ) ( implicit ec : ExecutionContext ) = 
 - parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) . result . headOption map ( _ . flatten ) 
 + byUserIdAndKeyC ( userId → key ) . result . headOption map ( _ . flatten ) 
 } 
 \ No newline at end of file
