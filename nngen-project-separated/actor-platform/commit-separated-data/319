BLEU SCORE: 0.5873949094699213

TEST MSG: fix ( core ) : Fixing grouped dialogs loading
GENERATED MSG: fix ( core ) : Fixing RouterActor UpdateMessageRead processing

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index 94d9861 . . 685c2e6 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 116 , 6 + 116 , 7 @ @ public class RouterActor extends ModuleActor { < nl > if ( ! activeDialogStorage . isLoaded ( ) ) { < nl > api ( new RequestLoadGroupedDialogs ( ApiSupportConfiguration . OPTIMIZATIONS ) ) < nl > . chain ( r - > updates ( ) . applyRelatedData ( r . getUsers ( ) , r . getGroups ( ) ) ) < nl > + . chain ( r - > updates ( ) . loadRequiredPeers ( r . getUserPeers ( ) , r . getGroupPeers ( ) ) ) < nl > . then ( r - > { < nl > boolean showArchived = false ; < nl > boolean showInvite = false ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index 81f76a7 . . 887e33d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 740 , 7 + 740 , 7 @ @ public class RouterActor extends ModuleActor { < nl > UpdateMessageRead read = ( UpdateMessageRead ) update ; < nl > Peer peer = convert ( read . getPeer ( ) ) ; < nl > if ( isValidPeer ( peer ) ) { < nl > - onMessageRead ( peer , read . getReadDate ( ) ) ; < nl > + onMessageRead ( peer , read . getStartDate ( ) ) ; < nl > } < nl > return Promise . success ( null ) ; < nl > } else if ( update instanceof UpdateMessageReadByMe ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index 94d9861 . . 685c2e6 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 116 , 6 + 116 , 7 @ @ public class RouterActor extends ModuleActor { 
 if ( ! activeDialogStorage . isLoaded ( ) ) { 
 api ( new RequestLoadGroupedDialogs ( ApiSupportConfiguration . OPTIMIZATIONS ) ) 
 . chain ( r - > updates ( ) . applyRelatedData ( r . getUsers ( ) , r . getGroups ( ) ) ) 
 + . chain ( r - > updates ( ) . loadRequiredPeers ( r . getUserPeers ( ) , r . getGroupPeers ( ) ) ) 
 . then ( r - > { 
 boolean showArchived = false ; 
 boolean showInvite = false ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index 81f76a7 . . 887e33d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 740 , 7 + 740 , 7 @ @ public class RouterActor extends ModuleActor { 
 UpdateMessageRead read = ( UpdateMessageRead ) update ; 
 Peer peer = convert ( read . getPeer ( ) ) ; 
 if ( isValidPeer ( peer ) ) { 
 - onMessageRead ( peer , read . getReadDate ( ) ) ; 
 + onMessageRead ( peer , read . getStartDate ( ) ) ; 
 } 
 return Promise . success ( null ) ; 
 } else if ( update instanceof UpdateMessageReadByMe ) {
