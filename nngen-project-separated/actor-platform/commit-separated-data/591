BLEU SCORE: 0.392814650900513

TEST MSG: feat ( android ) : Small avatar on profile page
GENERATED MSG: feat ( android ) : add fast share menu

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > deleted file mode 100644 < nl > index d2e9acc . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > + + + / dev / null < nl > @ @ - 1 , 75 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . calls ; < nl > - < nl > - import android . content . Context ; < nl > - import android . media . AudioManager ; < nl > - import android . media . MediaPlayer ; < nl > - import android . net . Uri ; < nl > - < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . core . audio . AndroidPlayerActor ; < nl > - import im . actor . sdk . core . audio . AudioPlayerActor ; < nl > - < nl > - public class AudioActorEx extends AndroidPlayerActor { < nl > - < nl > - Context context ; < nl > - < nl > - public AudioActorEx ( Context context , AudioPlayerActor . AudioPlayerCallback callback ) { < nl > - super ( context , callback ) ; < nl > - this . context = context ; < nl > - } < nl > - < nl > - private static final int STATE _ NONE = 0 ; < nl > - private static final int STATE _ STARTED = 1 ; < nl > - private static final int STATE _ PAUSED = 2 ; < nl > - < nl > - @ Override < nl > - protected void onPlayMessage ( String fileName ) { < nl > - currentFileName = fileName ; < nl > - < nl > - destroyPlayer ( ) ; < nl > - state = STATE _ NONE ; < nl > - < nl > - try { < nl > - if ( mplayer = = null ) { < nl > - mplayer = new MediaPlayer ( ) ; < nl > - } < nl > - mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; < nl > - mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; < nl > - mplayer . prepare ( ) ; < nl > - mplayer . start ( ) ; < nl > - mplayer . setOnCompletionListener ( new MediaPlayer . OnCompletionListener ( ) { < nl > - @ Override < nl > - public void onCompletion ( MediaPlayer mp ) { < nl > - self ( ) . send ( new Play ( " " ) ) ; < nl > - } < nl > - } ) ; < nl > - mplayer . setOnErrorListener ( new MediaPlayer . OnErrorListener ( ) { < nl > - @ Override < nl > - public boolean onError ( MediaPlayer mp , int what , int extra ) { < nl > - self ( ) . send ( new Error ( ) ) ; < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > - destroyPlayer ( ) ; < nl > - callback . onError ( currentFileName ) ; < nl > - return ; < nl > - } < nl > - < nl > - callback . onStart ( currentFileName ) ; < nl > - schedule ( new Notify ( ) , 500 ) ; < nl > - state = STATE _ STARTED ; < nl > - } < nl > - < nl > - private void destroyPlayer ( ) { < nl > - if ( mplayer ! = null ) { < nl > - mplayer . stop ( ) ; < nl > - mplayer . reset ( ) ; < nl > - mplayer . release ( ) ; < nl > - mplayer = null ; < nl > - } < nl > - } < nl > - < nl > - < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioStreamVolumeValueActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioStreamVolumeValueActor . java < nl > deleted file mode 100644 < nl > index 952f7cb . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioStreamVolumeValueActor . java < nl > + + + / dev / null < nl > @ @ - 1 , 139 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . calls ; < nl > - < nl > - import android . media . AudioFormat ; < nl > - import android . media . AudioManager ; < nl > - import android . media . AudioRecord ; < nl > - import android . media . MediaRecorder ; < nl > - < nl > - import java . util . ArrayList ; < nl > - import java . util . Arrays ; < nl > - < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - import im . actor . runtime . actors . messages . PoisonPill ; < nl > - import im . actor . sdk . core . audio . OpusEncoderActor ; < nl > - import im . actor . sdk . core . audio . VoiceBuffers ; < nl > - < nl > - public class AudioStreamVolumeValueActor extends Actor { < nl > - private static final int BUFFER _ SIZE = 16 * 1024 ; < nl > - private int delay ; < nl > - private AudioRecord audioRecord ; < nl > - boolean inited = false ; < nl > - < nl > - public AudioStreamVolumeValueActor ( ) { < nl > - } < nl > - < nl > - ArrayList < VolumeValueListener > callbacks = new ArrayList < VolumeValueListener > ( ) ; < nl > - < nl > - @ Override < nl > - public void preStart ( ) { < nl > - delay = 10 ; < nl > - } < nl > - < nl > - private void subscribeForVolume ( VolumeValueListener callback ) { < nl > - if ( audioRecord = = null ) { < nl > - int minBufferSize = AudioRecord . getMinBufferSize ( 16000 , AudioFormat . CHANNEL _ IN _ MONO , AudioFormat . ENCODING _ PCM _ 16BIT ) ; < nl > - int bufferSize = 16 * minBufferSize ; < nl > - audioRecord = new AudioRecord ( MediaRecorder . AudioSource . DEFAULT , 16000 , AudioFormat . CHANNEL _ IN _ MONO , < nl > - AudioFormat . ENCODING _ PCM _ 16BIT , bufferSize ) ; < nl > - audioRecord . startRecording ( ) ; < nl > - } < nl > - callbacks . add ( callback ) ; < nl > - if ( ! inited ) { < nl > - inited = true ; < nl > - schedule ( new Check ( ) , delay ) ; < nl > - } < nl > - } < nl > - < nl > - private void unsubscribeFromVolume ( VolumeValueListener callback ) { < nl > - callbacks . remove ( callback ) ; < nl > - audioRecord . stop ( ) ; < nl > - audioRecord . release ( ) ; < nl > - audioRecord = null ; < nl > - self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > - } < nl > - < nl > - private void check ( ) { < nl > - < nl > - if ( audioRecord ! = null ) { < nl > - byte [ ] buffer = VoiceBuffers . getInstance ( ) . obtainBuffer ( BUFFER _ SIZE ) ; < nl > - int len = audioRecord . read ( buffer , 0 , buffer . length ) ; < nl > - if ( len > 0 ) { < nl > - int i = getMax ( buffer ) - getMin ( buffer ) ; < nl > - for ( VolumeValueListener c : callbacks ) { < nl > - c . onVolumeValue ( i ) ; < nl > - } < nl > - } else { < nl > - VoiceBuffers . getInstance ( ) . releaseBuffer ( buffer ) ; < nl > - } < nl > - < nl > - } < nl > - < nl > - < nl > - self ( ) . send ( new Check ( ) ) ; < nl > - } < nl > - < nl > - byte getMax ( byte [ ] array ) { < nl > - byte max = array [ 0 ] ; < nl > - for ( int i = 1 ; i < array . length ; i + + ) { < nl > - if ( array [ i ] > max ) { < nl > - max = array [ i ] ; < nl > - } < nl > - } < nl > - < nl > - return max ; < nl > - } < nl > - < nl > - byte getMin ( byte [ ] array ) { < nl > - byte min = array [ 0 ] ; < nl > - for ( int i = 1 ; i < array . length ; i + + ) { < nl > - if ( array [ i ] < min ) { < nl > - min = array [ i ] ; < nl > - } < nl > - } < nl > - < nl > - return min ; < nl > - } < nl > - < nl > - < nl > - @ Override < nl > - public void onReceive ( Object message ) { < nl > - if ( message instanceof Check ) { < nl > - check ( ) ; < nl > - } else if ( message instanceof Subscribe ) { < nl > - subscribeForVolume ( ( ( Subscribe ) message ) . getCallback ( ) ) ; < nl > - } else if ( message instanceof Unsubscribe ) { < nl > - unsubscribeFromVolume ( ( ( Unsubscribe ) message ) . getCallback ( ) ) ; < nl > - } < nl > - } < nl > - < nl > - interface VolumeValueListener { < nl > - void onVolumeValue ( int val ) ; < nl > - } < nl > - < nl > - public static class Subscribe { < nl > - VolumeValueListener callback ; < nl > - < nl > - public Subscribe ( VolumeValueListener callback ) { < nl > - this . callback = callback ; < nl > - } < nl > - < nl > - public VolumeValueListener getCallback ( ) { < nl > - return callback ; < nl > - } < nl > - } < nl > - < nl > - public static class Unsubscribe { < nl > - VolumeValueListener callback ; < nl > - < nl > - public Unsubscribe ( VolumeValueListener callback ) { < nl > - this . callback = callback ; < nl > - } < nl > - < nl > - public VolumeValueListener getCallback ( ) { < nl > - return callback ; < nl > - } < nl > - } < nl > - < nl > - private static class Check { } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallAvatarLayerAnimator . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallAvatarLayerAnimator . java < nl > deleted file mode 100644 < nl > index 25b33b1 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallAvatarLayerAnimator . java < nl > + + + / dev / null < nl > @ @ - 1 , 118 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . calls ; < nl > - < nl > - import android . view . View ; < nl > - < nl > - import com . facebook . rebound . SimpleSpringListener ; < nl > - import com . facebook . rebound . Spring ; < nl > - import com . facebook . rebound . SpringConfig ; < nl > - import com . facebook . rebound . SpringSystem ; < nl > - import com . facebook . rebound . SpringUtil ; < nl > - < nl > - public class CallAvatarLayerAnimator { < nl > - < nl > - private final SpringSystem springSystem ; < nl > - private final Spring popAnimationSpring ; < nl > - private final Spring popAnimationSpring1 ; < nl > - private final Spring popAnimationSpring2 ; < nl > - private final Spring popAnimationSpring3 ; < nl > - private final Spring popAnimationSpring4 ; < nl > - private final View layer ; < nl > - private final View layer1 ; < nl > - private final View layer2 ; < nl > - private final View layer3 ; < nl > - private final View layer4 ; < nl > - < nl > - < nl > - public CallAvatarLayerAnimator ( View layer , View layer1 , View layer2 , View layer3 , View layer4 ) { < nl > - this . layer = layer ; < nl > - this . layer1 = layer1 ; < nl > - this . layer2 = layer2 ; < nl > - this . layer3 = layer3 ; < nl > - this . layer4 = layer4 ; < nl > - < nl > - springSystem = SpringSystem . create ( ) ; < nl > - < nl > - popAnimationSpring = springSystem . createSpring ( ) < nl > - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > - . addListener ( new SimpleSpringListener ( ) { < nl > - @ Override < nl > - public void onSpringUpdate ( Spring spring ) { < nl > - setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - popAnimationSpring1 = springSystem . createSpring ( ) < nl > - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > - . addListener ( new SimpleSpringListener ( ) { < nl > - @ Override < nl > - public void onSpringUpdate ( Spring spring ) { < nl > - setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - popAnimationSpring2 = springSystem . createSpring ( ) < nl > - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > - . addListener ( new SimpleSpringListener ( ) { < nl > - @ Override < nl > - public void onSpringUpdate ( Spring spring ) { < nl > - setPopAnimationProgress2 ( ( float ) spring . getCurrentValue ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - popAnimationSpring3 = springSystem . createSpring ( ) < nl > - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > - . addListener ( new SimpleSpringListener ( ) { < nl > - @ Override < nl > - public void onSpringUpdate ( Spring spring ) { < nl > - setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - popAnimationSpring4 = springSystem . createSpring ( ) < nl > - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 9 , 20 ) ) < nl > - . addListener ( new SimpleSpringListener ( ) { < nl > - @ Override < nl > - public void onSpringUpdate ( Spring spring ) { < nl > - setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - / / popAnimation transition < nl > - < nl > - public void popAnimation ( boolean on ) { < nl > - popAnimationSpring . setEndValue ( on ? 1 : 0 ) ; < nl > - popAnimationSpring1 . setEndValue ( on ? 1 : 0 ) ; < nl > - popAnimationSpring2 . setEndValue ( on ? 1 : 0 ) ; < nl > - popAnimationSpring3 . setEndValue ( on ? 1 : 0 ) ; < nl > - popAnimationSpring4 . setEndValue ( on ? 1 : 0 ) ; < nl > - } < nl > - < nl > - private void setPopAnimationProgress ( float progress ) { < nl > - float transition2 = transition ( progress , 0 . 8f , 0 . 85f ) ; < nl > - layer . setScaleX ( transition2 ) ; < nl > - layer . setScaleY ( transition2 ) ; < nl > - } < nl > - < nl > - < nl > - private void setPopAnimationProgress1 ( float progress ) { < nl > - float transition2 = transition ( progress , 0 . 85f , 0 . 9f ) ; < nl > - layer1 . setScaleX ( transition2 ) ; < nl > - layer1 . setScaleY ( transition2 ) ; < nl > - } < nl > - < nl > - < nl > - private void setPopAnimationProgress2 ( float progress ) { < nl > - float transition2 = transition ( progress , 0 . 7f , 0 . 75f ) ; < nl > - layer2 . setScaleX ( transition2 ) ; < nl > - layer2 . setScaleY ( transition2 ) ; < nl > - } < nl > - < nl > - < nl > - < nl > - / / Utilities < nl > - private float transition ( float progress , float startValue , float endValue ) { < nl > - return ( float ) SpringUtil . mapValueFromRangeToRange ( progress , 0 , 1 , startValue , endValue ) ; < nl > - } < nl > - < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index 4d8aa67 . . e97dcb5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 54 , 6 + 54 , 8 @ @ import im . actor . runtime . mvvm . ValueChangedListener ; < nl > import im . actor . runtime . mvvm . ValueModel ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . calls . view . CallAvatarLayerAnimator ; < nl > + import im . actor . sdk . controllers . calls . view . TimerActor ; < nl > import im . actor . sdk . controllers . fragment . BaseFragment ; < nl > import im . actor . sdk . util . Screen ; < nl > import im . actor . sdk . view . TintImageView ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / TimerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / TimerActor . java < nl > deleted file mode 100644 < nl > index 1be46a5 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / TimerActor . java < nl > + + + / dev / null < nl > @ @ - 1 , 82 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . calls ; < nl > - < nl > - import java . util . Date ; < nl > - import java . util . HashMap ; < nl > - import java . util . HashSet ; < nl > - < nl > - import im . actor . runtime . actors . Actor ; < nl > - < nl > - public class TimerActor extends Actor { < nl > - private final int inteval ; < nl > - private HashMap < Integer , TimerCallback > callbacks = new HashMap < Integer , TimerCallback > ( ) ; < nl > - private HashMap < Integer , Long > callbacksRegisterTime = new HashMap < Integer , Long > ( ) ; < nl > - public TimerActor ( int inteval ) { < nl > - this . inteval = inteval ; < nl > - } < nl > - < nl > - @ Override < nl > - public void preStart ( ) { < nl > - super . preStart ( ) ; < nl > - schedule ( new Tick ( ) , inteval ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onReceive ( Object message ) { < nl > - if ( message instanceof Register ) { < nl > - callbacks . put ( ( ( Register ) message ) . getId ( ) , ( ( Register ) message ) . getCallback ( ) ) ; < nl > - if ( ! callbacksRegisterTime . keySet ( ) . contains ( ( ( Register ) message ) . getId ( ) ) ) { < nl > - callbacksRegisterTime . put ( ( ( Register ) message ) . getId ( ) , System . currentTimeMillis ( ) ) ; < nl > - } < nl > - } else if ( message instanceof UnRegister ) { < nl > - callbacks . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; < nl > - callbacksRegisterTime . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; < nl > - } else if ( message instanceof Tick ) { < nl > - onTick ( ) ; < nl > - } < nl > - } < nl > - < nl > - private void onTick ( ) { < nl > - for ( int callbackId : callbacks . keySet ( ) ) { < nl > - long currentTime = System . currentTimeMillis ( ) ; < nl > - callbacks . get ( callbackId ) . onTick ( currentTime , System . currentTimeMillis ( ) - callbacksRegisterTime . get ( callbackId ) ) ; < nl > - } < nl > - schedule ( new Tick ( ) , inteval ) ; < nl > - } < nl > - < nl > - public static class Register { < nl > - TimerCallback callback ; < nl > - int id ; < nl > - public Register ( TimerCallback callback , int timerId ) { < nl > - this . callback = callback ; < nl > - this . id = timerId ; < nl > - } < nl > - < nl > - public int getId ( ) { < nl > - return id ; < nl > - } < nl > - < nl > - public TimerCallback getCallback ( ) { < nl > - return callback ; < nl > - } < nl > - } < nl > - < nl > - public static class UnRegister { < nl > - int id ; < nl > - < nl > - public UnRegister ( int id ) { < nl > - this . id = id ; < nl > - } < nl > - < nl > - public int getId ( ) { < nl > - return id ; < nl > - } < nl > - } < nl > - < nl > - private static class Tick { < nl > - < nl > - } < nl > - < nl > - public interface TimerCallback { < nl > - void onTick ( long currentTime , long timeFromRegister ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioActorEx . java < nl > new file mode 100644 < nl > index 0000000 . . 2395681 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioActorEx . java < nl > @ @ - 0 , 0 + 1 , 75 @ @ < nl > + package im . actor . sdk . controllers . calls . view ; < nl > + < nl > + import android . content . Context ; < nl > + import android . media . AudioManager ; < nl > + import android . media . MediaPlayer ; < nl > + import android . net . Uri ; < nl > + < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . core . audio . AndroidPlayerActor ; < nl > + import im . actor . sdk . core . audio . AudioPlayerActor ; < nl > + < nl > + public class AudioActorEx extends AndroidPlayerActor { < nl > + < nl > + Context context ; < nl > + < nl > + public AudioActorEx ( Context context , AudioPlayerActor . AudioPlayerCallback callback ) { < nl > + super ( context , callback ) ; < nl > + this . context = context ; < nl > + } < nl > + < nl > + private static final int STATE _ NONE = 0 ; < nl > + private static final int STATE _ STARTED = 1 ; < nl > + private static final int STATE _ PAUSED = 2 ; < nl > + < nl > + @ Override < nl > + protected void onPlayMessage ( String fileName ) { < nl > + currentFileName = fileName ; < nl > + < nl > + destroyPlayer ( ) ; < nl > + state = STATE _ NONE ; < nl > + < nl > + try { < nl > + if ( mplayer = = null ) { < nl > + mplayer = new MediaPlayer ( ) ; < nl > + } < nl > + mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; < nl > + mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; < nl > + mplayer . prepare ( ) ; < nl > + mplayer . start ( ) ; < nl > + mplayer . setOnCompletionListener ( new MediaPlayer . OnCompletionListener ( ) { < nl > + @ Override < nl > + public void onCompletion ( MediaPlayer mp ) { < nl > + self ( ) . send ( new Play ( " " ) ) ; < nl > + } < nl > + } ) ; < nl > + mplayer . setOnErrorListener ( new MediaPlayer . OnErrorListener ( ) { < nl > + @ Override < nl > + public boolean onError ( MediaPlayer mp , int what , int extra ) { < nl > + self ( ) . send ( new Error ( ) ) ; < nl > + return false ; < nl > + } < nl > + } ) ; < nl > + } catch ( Exception e ) { < nl > + e . printStackTrace ( ) ; < nl > + destroyPlayer ( ) ; < nl > + callback . onError ( currentFileName ) ; < nl > + return ; < nl > + } < nl > + < nl > + callback . onStart ( currentFileName ) ; < nl > + schedule ( new Notify ( ) , 500 ) ; < nl > + state = STATE _ STARTED ; < nl > + } < nl > + < nl > + private void destroyPlayer ( ) { < nl > + if ( mplayer ! = null ) { < nl > + mplayer . stop ( ) ; < nl > + mplayer . reset ( ) ; < nl > + mplayer . release ( ) ; < nl > + mplayer = null ; < nl > + } < nl > + } < nl > + < nl > + < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioStreamVolumeValueActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioStreamVolumeValueActor . java < nl > new file mode 100644 < nl > index 0000000 . . 833dbe6 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioStreamVolumeValueActor . java < nl > @ @ - 0 , 0 + 1 , 139 @ @ < nl > + package im . actor . sdk . controllers . calls . view ; < nl > + < nl > + import android . media . AudioFormat ; < nl > + import android . media . AudioManager ; < nl > + import android . media . AudioRecord ; < nl > + import android . media . MediaRecorder ; < nl > + < nl > + import java . util . ArrayList ; < nl > + import java . util . Arrays ; < nl > + < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . runtime . actors . messages . PoisonPill ; < nl > + import im . actor . sdk . core . audio . OpusEncoderActor ; < nl > + import im . actor . sdk . core . audio . VoiceBuffers ; < nl > + < nl > + public class AudioStreamVolumeValueActor extends Actor { < nl > + private static final int BUFFER _ SIZE = 16 * 1024 ; < nl > + private int delay ; < nl > + private AudioRecord audioRecord ; < nl > + boolean inited = false ; < nl > + < nl > + public AudioStreamVolumeValueActor ( ) { < nl > + } < nl > + < nl > + ArrayList < VolumeValueListener > callbacks = new ArrayList < VolumeValueListener > ( ) ; < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + delay = 10 ; < nl > + } < nl > + < nl > + private void subscribeForVolume ( VolumeValueListener callback ) { < nl > + if ( audioRecord = = null ) { < nl > + int minBufferSize = AudioRecord . getMinBufferSize ( 16000 , AudioFormat . CHANNEL _ IN _ MONO , AudioFormat . ENCODING _ PCM _ 16BIT ) ; < nl > + int bufferSize = 16 * minBufferSize ; < nl > + audioRecord = new AudioRecord ( MediaRecorder . AudioSource . DEFAULT , 16000 , AudioFormat . CHANNEL _ IN _ MONO , < nl > + AudioFormat . ENCODING _ PCM _ 16BIT , bufferSize ) ; < nl > + audioRecord . startRecording ( ) ; < nl > + } < nl > + callbacks . add ( callback ) ; < nl > + if ( ! inited ) { < nl > + inited = true ; < nl > + schedule ( new Check ( ) , delay ) ; < nl > + } < nl > + } < nl > + < nl > + private void unsubscribeFromVolume ( VolumeValueListener callback ) { < nl > + callbacks . remove ( callback ) ; < nl > + audioRecord . stop ( ) ; < nl > + audioRecord . release ( ) ; < nl > + audioRecord = null ; < nl > + self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > + } < nl > + < nl > + private void check ( ) { < nl > + < nl > + if ( audioRecord ! = null ) { < nl > + byte [ ] buffer = VoiceBuffers . getInstance ( ) . obtainBuffer ( BUFFER _ SIZE ) ; < nl > + int len = audioRecord . read ( buffer , 0 , buffer . length ) ; < nl > + if ( len > 0 ) { < nl > + int i = getMax ( buffer ) - getMin ( buffer ) ; < nl > + for ( VolumeValueListener c : callbacks ) { < nl > + c . onVolumeValue ( i ) ; < nl > + } < nl > + } else { < nl > + VoiceBuffers . getInstance ( ) . releaseBuffer ( buffer ) ; < nl > + } < nl > + < nl > + } < nl > + < nl > + < nl > + self ( ) . send ( new Check ( ) ) ; < nl > + } < nl > + < nl > + byte getMax ( byte [ ] array ) { < nl > + byte max = array [ 0 ] ; < nl > + for ( int i = 1 ; i < array . length ; i + + ) { < nl > + if ( array [ i ] > max ) { < nl > + max = array [ i ] ; < nl > + } < nl > + } < nl > + < nl > + return max ; < nl > + } < nl > + < nl > + byte getMin ( byte [ ] array ) { < nl > + byte min = array [ 0 ] ; < nl > + for ( int i = 1 ; i < array . length ; i + + ) { < nl > + if ( array [ i ] < min ) { < nl > + min = array [ i ] ; < nl > + } < nl > + } < nl > + < nl > + return min ; < nl > + } < nl > + < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof Check ) { < nl > + check ( ) ; < nl > + } else if ( message instanceof Subscribe ) { < nl > + subscribeForVolume ( ( ( Subscribe ) message ) . getCallback ( ) ) ; < nl > + } else if ( message instanceof Unsubscribe ) { < nl > + unsubscribeFromVolume ( ( ( Unsubscribe ) message ) . getCallback ( ) ) ; < nl > + } < nl > + } < nl > + < nl > + interface VolumeValueListener { < nl > + void onVolumeValue ( int val ) ; < nl > + } < nl > + < nl > + public static class Subscribe { < nl > + VolumeValueListener callback ; < nl > + < nl > + public Subscribe ( VolumeValueListener callback ) { < nl > + this . callback = callback ; < nl > + } < nl > + < nl > + public VolumeValueListener getCallback ( ) { < nl > + return callback ; < nl > + } < nl > + } < nl > + < nl > + public static class Unsubscribe { < nl > + VolumeValueListener callback ; < nl > + < nl > + public Unsubscribe ( VolumeValueListener callback ) { < nl > + this . callback = callback ; < nl > + } < nl > + < nl > + public VolumeValueListener getCallback ( ) { < nl > + return callback ; < nl > + } < nl > + } < nl > + < nl > + private static class Check { } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / CallAvatarLayerAnimator . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / CallAvatarLayerAnimator . java < nl > new file mode 100644 < nl > index 0000000 . . 67cf585 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / CallAvatarLayerAnimator . java < nl > @ @ - 0 , 0 + 1 , 118 @ @ < nl > + package im . actor . sdk . controllers . calls . view ; < nl > + < nl > + import android . view . View ; < nl > + < nl > + import com . facebook . rebound . SimpleSpringListener ; < nl > + import com . facebook . rebound . Spring ; < nl > + import com . facebook . rebound . SpringConfig ; < nl > + import com . facebook . rebound . SpringSystem ; < nl > + import com . facebook . rebound . SpringUtil ; < nl > + < nl > + public class CallAvatarLayerAnimator { < nl > + < nl > + private final SpringSystem springSystem ; < nl > + private final Spring popAnimationSpring ; < nl > + private final Spring popAnimationSpring1 ; < nl > + private final Spring popAnimationSpring2 ; < nl > + private final Spring popAnimationSpring3 ; < nl > + private final Spring popAnimationSpring4 ; < nl > + private final View layer ; < nl > + private final View layer1 ; < nl > + private final View layer2 ; < nl > + private final View layer3 ; < nl > + private final View layer4 ; < nl > + < nl > + < nl > + public CallAvatarLayerAnimator ( View layer , View layer1 , View layer2 , View layer3 , View layer4 ) { < nl > + this . layer = layer ; < nl > + this . layer1 = layer1 ; < nl > + this . layer2 = layer2 ; < nl > + this . layer3 = layer3 ; < nl > + this . layer4 = layer4 ; < nl > + < nl > + springSystem = SpringSystem . create ( ) ; < nl > + < nl > + popAnimationSpring = springSystem . createSpring ( ) < nl > + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > + . addListener ( new SimpleSpringListener ( ) { < nl > + @ Override < nl > + public void onSpringUpdate ( Spring spring ) { < nl > + setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + popAnimationSpring1 = springSystem . createSpring ( ) < nl > + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > + . addListener ( new SimpleSpringListener ( ) { < nl > + @ Override < nl > + public void onSpringUpdate ( Spring spring ) { < nl > + setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + popAnimationSpring2 = springSystem . createSpring ( ) < nl > + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > + . addListener ( new SimpleSpringListener ( ) { < nl > + @ Override < nl > + public void onSpringUpdate ( Spring spring ) { < nl > + setPopAnimationProgress2 ( ( float ) spring . getCurrentValue ( ) ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + popAnimationSpring3 = springSystem . createSpring ( ) < nl > + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) < nl > + . addListener ( new SimpleSpringListener ( ) { < nl > + @ Override < nl > + public void onSpringUpdate ( Spring spring ) { < nl > + setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + popAnimationSpring4 = springSystem . createSpring ( ) < nl > + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 9 , 20 ) ) < nl > + . addListener ( new SimpleSpringListener ( ) { < nl > + @ Override < nl > + public void onSpringUpdate ( Spring spring ) { < nl > + setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + / / popAnimation transition < nl > + < nl > + public void popAnimation ( boolean on ) { < nl > + popAnimationSpring . setEndValue ( on ? 1 : 0 ) ; < nl > + popAnimationSpring1 . setEndValue ( on ? 1 : 0 ) ; < nl > + popAnimationSpring2 . setEndValue ( on ? 1 : 0 ) ; < nl > + popAnimationSpring3 . setEndValue ( on ? 1 : 0 ) ; < nl > + popAnimationSpring4 . setEndValue ( on ? 1 : 0 ) ; < nl > + } < nl > + < nl > + private void setPopAnimationProgress ( float progress ) { < nl > + float transition2 = transition ( progress , 0 . 8f , 0 . 85f ) ; < nl > + layer . setScaleX ( transition2 ) ; < nl > + layer . setScaleY ( transition2 ) ; < nl > + } < nl > + < nl > + < nl > + private void setPopAnimationProgress1 ( float progress ) { < nl > + float transition2 = transition ( progress , 0 . 85f , 0 . 9f ) ; < nl > + layer1 . setScaleX ( transition2 ) ; < nl > + layer1 . setScaleY ( transition2 ) ; < nl > + } < nl > + < nl > + < nl > + private void setPopAnimationProgress2 ( float progress ) { < nl > + float transition2 = transition ( progress , 0 . 7f , 0 . 75f ) ; < nl > + layer2 . setScaleX ( transition2 ) ; < nl > + layer2 . setScaleY ( transition2 ) ; < nl > + } < nl > + < nl > + < nl > + < nl > + / / Utilities < nl > + private float transition ( float progress , float startValue , float endValue ) { < nl > + return ( float ) SpringUtil . mapValueFromRangeToRange ( progress , 0 , 1 , startValue , endValue ) ; < nl > + } < nl > + < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / TimerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / TimerActor . java < nl > new file mode 100644 < nl > index 0000000 . . 30e6dcb < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / TimerActor . java < nl > @ @ - 0 , 0 + 1 , 82 @ @ < nl > + package im . actor . sdk . controllers . calls . view ; < nl > + < nl > + import java . util . Date ; < nl > + import java . util . HashMap ; < nl > + import java . util . HashSet ; < nl > + < nl > + import im . actor . runtime . actors . Actor ; < nl > + < nl > + public class TimerActor extends Actor { < nl > + private final int inteval ; < nl > + private HashMap < Integer , TimerCallback > callbacks = new HashMap < Integer , TimerCallback > ( ) ; < nl > + private HashMap < Integer , Long > callbacksRegisterTime = new HashMap < Integer , Long > ( ) ; < nl > + public TimerActor ( int inteval ) { < nl > + this . inteval = inteval ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + super . preStart ( ) ; < nl > + schedule ( new Tick ( ) , inteval ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof Register ) { < nl > + callbacks . put ( ( ( Register ) message ) . getId ( ) , ( ( Register ) message ) . getCallback ( ) ) ; < nl > + if ( ! callbacksRegisterTime . keySet ( ) . contains ( ( ( Register ) message ) . getId ( ) ) ) { < nl > + callbacksRegisterTime . put ( ( ( Register ) message ) . getId ( ) , System . currentTimeMillis ( ) ) ; < nl > + } < nl > + } else if ( message instanceof UnRegister ) { < nl > + callbacks . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; < nl > + callbacksRegisterTime . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; < nl > + } else if ( message instanceof Tick ) { < nl > + onTick ( ) ; < nl > + } < nl > + } < nl > + < nl > + private void onTick ( ) { < nl > + for ( int callbackId : callbacks . keySet ( ) ) { < nl > + long currentTime = System . currentTimeMillis ( ) ; < nl > + callbacks . get ( callbackId ) . onTick ( currentTime , System . currentTimeMillis ( ) - callbacksRegisterTime . get ( callbackId ) ) ; < nl > + } < nl > + schedule ( new Tick ( ) , inteval ) ; < nl > + } < nl > + < nl > + public static class Register { < nl > + TimerCallback callback ; < nl > + int id ; < nl > + public Register ( TimerCallback callback , int timerId ) { < nl > + this . callback = callback ; < nl > + this . id = timerId ; < nl > + } < nl > + < nl > + public int getId ( ) { < nl > + return id ; < nl > + } < nl > + < nl > + public TimerCallback getCallback ( ) { < nl > + return callback ; < nl > + } < nl > + } < nl > + < nl > + public static class UnRegister { < nl > + int id ; < nl > + < nl > + public UnRegister ( int id ) { < nl > + this . id = id ; < nl > + } < nl > + < nl > + public int getId ( ) { < nl > + return id ; < nl > + } < nl > + } < nl > + < nl > + private static class Tick { < nl > + < nl > + } < nl > + < nl > + public interface TimerCallback { < nl > + void onTick ( long currentTime , long timeFromRegister ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java < nl > index a3c102f . . f9ebc2b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java < nl > @ @ - 3 , 6 + 3 , 8 @ @ package im . actor . sdk . controllers . profile ; < nl > import android . graphics . Color ; < nl > import android . graphics . drawable . ColorDrawable ; < nl > import android . os . Bundle ; < nl > + import android . support . v7 . app . ActionBar ; < nl > + import android . support . v7 . app . AppCompatActivity ; < nl > import android . view . Menu ; < nl > import android . view . MenuItem ; < nl > import android . widget . Toast ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java < nl > index 7a859c3 . . 48d32b5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java < nl > @ @ - 41 , 6 + 41 , 7 @ @ import im . actor . sdk . controllers . Intents ; < nl > import im . actor . sdk . controllers . fragment . preview . ViewAvatarActivity ; < nl > import im . actor . sdk . controllers . fragment . BaseFragment ; < nl > import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . view . avatar . AvatarView ; < nl > import im . actor . sdk . view . avatar . CoverAvatarView ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . viewmodel . UserPhone ; < nl > @ @ - 61 , 7 + 62 , 7 @ @ public class ProfileFragment extends BaseFragment { < nl > return res ; < nl > } < nl > < nl > - private CoverAvatarView avatarView ; < nl > + private AvatarView avatarView ; < nl > < nl > @ Override < nl > public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > @ @ - 80 , 14 + 81 , 16 @ @ public class ProfileFragment extends BaseFragment { < nl > / / < nl > < nl > res . findViewById ( R . id . container ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; < nl > + res . findViewById ( R . id . avatarContainer ) . setBackgroundColor ( style . getToolBarColor ( ) ) ; < nl > < nl > < nl > / / < nl > / / User Avatar < nl > / / < nl > < nl > - avatarView = ( CoverAvatarView ) res . findViewById ( R . id . avatar ) ; < nl > - bind ( avatarView , user . getAvatar ( ) ) ; < nl > + avatarView = ( AvatarView ) res . findViewById ( R . id . avatar ) ; < nl > + avatarView . init ( Screen . dp ( 96 ) , 48 ) ; < nl > + avatarView . bind ( user . getAvatar ( ) . get ( ) , user . getName ( ) . get ( ) , user . getId ( ) ) ; < nl > avatarView . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > @ @ - 436 , 7 + 439 , 6 @ @ public class ProfileFragment extends BaseFragment { < nl > } < nl > < nl > private void updateBar ( int offset ) { < nl > - avatarView . setOffset ( offset ) ; < nl > < nl > ActionBar bar = ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) ; < nl > if ( bar ! = null ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > index 661e59e . . 9ab6b01 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > @ @ - 4 , 13 + 4 , 12 @ @ import android . content . Context ; < nl > import android . content . Intent ; < nl > < nl > import im . actor . core . providers . CallsProvider ; < nl > - import im . actor . core . viewmodel . CallState ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . controllers . calls . AudioActorEx ; < nl > + import im . actor . sdk . controllers . calls . view . AudioActorEx ; < nl > import im . actor . sdk . controllers . calls . CallActivity ; < nl > import im . actor . sdk . core . audio . AndroidPlayerActor ; < nl > import im . actor . sdk . core . audio . AudioPlayerActor ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml < nl > index 4350989 . . c9397b6 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml < nl > @ @ - 15 , 46 + 15 , 45 @ @ < nl > android : layout _ height = " wrap _ content " < nl > android : orientation = " vertical " > < nl > < nl > - < FrameLayout < nl > - android : layout _ width = " fill _ parent " < nl > + < LinearLayout < nl > + android : id = " @ + id / avatarContainer " < nl > + android : layout _ width = " match _ parent " < nl > android : layout _ height = " 248dp " < nl > - android : orientation = " horizontal " > < nl > - < nl > - < im . actor . sdk . view . avatar . CoverAvatarView < nl > + android : layout _ gravity = " bottom " < nl > + android : gravity = " center _ vertical " < nl > + android : orientation = " vertical " < nl > + android : paddingLeft = " 24dp " < nl > + android : paddingRight = " 24dp " < nl > + android : paddingTop = " 44dp " > < nl > + < nl > + < im . actor . sdk . view . avatar . AvatarView < nl > android : id = " @ + id / avatar " < nl > - android : layout _ width = " match _ parent " < nl > - android : layout _ height = " match _ parent " / > < nl > + android : layout _ width = " 96dp " < nl > + android : layout _ height = " 96dp " < nl > + android : layout _ gravity = " center _ horizontal " < nl > + android : layout _ marginBottom = " 16dp " / > < nl > < nl > - < LinearLayout < nl > + < TextView < nl > + android : id = " @ + id / name " < nl > android : layout _ width = " match _ parent " < nl > - android : layout _ height = " 72dp " < nl > - android : layout _ gravity = " bottom " < nl > - android : gravity = " center _ vertical | left " < nl > - android : orientation = " vertical " < nl > - android : paddingLeft = " 72dp " < nl > - android : paddingRight = " 24dp " > < nl > - < nl > - < TextView < nl > - android : id = " @ + id / name " < nl > - android : layout _ width = " wrap _ content " < nl > - android : layout _ height = " wrap _ content " < nl > - android : layout _ marginTop = " - 2dp " < nl > - android : ellipsize = " end " < nl > - android : includeFontPadding = " false " < nl > - android : lines = " 1 " < nl > - android : singleLine = " true " < nl > - android : textSize = " 28sp " / > < nl > - < nl > - < TextView < nl > - android : id = " @ + id / lastSeen " < nl > - android : layout _ width = " wrap _ content " < nl > - android : layout _ height = " wrap _ content " < nl > - android : layout _ marginTop = " - 2dp " < nl > - android : textSize = " 14sp " / > < nl > + android : layout _ height = " wrap _ content " < nl > + android : layout _ marginTop = " - 2dp " < nl > + android : ellipsize = " end " < nl > + android : gravity = " center " < nl > + android : includeFontPadding = " false " < nl > + android : lines = " 1 " < nl > + android : singleLine = " true " < nl > + android : textSize = " 28sp " / > < nl > < nl > - < / LinearLayout > < nl > + < TextView < nl > + android : id = " @ + id / lastSeen " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " wrap _ content " < nl > + android : layout _ marginTop = " - 2dp " < nl > + android : gravity = " center " < nl > + android : textSize = " 14sp " / > < nl > < nl > - < / FrameLayout > < nl > + < / LinearLayout > < nl > < nl > < LinearLayout < nl > android : layout _ width = " match _ parent " < nl > @ @ - 146 , 7 + 145 , 7 @ @ < nl > < im . actor . sdk . view . DividerView < nl > android : layout _ width = " match _ parent " < nl > android : layout _ height = " wrap _ content " < nl > - android : layout _ marginBottom = " 8dp " / > < nl > + android : layout _ marginBottom = " 32dp " / > < nl > < nl > < LinearLayout < nl > android : id = " @ + id / contactsContainer "
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index bf6a2fa . . e54c5ad 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import android . os . Bundle ; < nl > import android . view . ViewGroup ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . imagepipeline . core . ImagePipelineConfig ; < nl > < nl > import org . jetbrains . annotations . NotNull ; < nl > < nl > @ @ - 193 , 7 + 194 , 10 @ @ public class ActorSDK { < nl > / / SDK Tools < nl > / / < nl > < nl > - Fresco . initialize ( application ) ; < nl > + ImagePipelineConfig config = ImagePipelineConfig . newBuilder ( application ) < nl > + . setDownsampleEnabled ( true ) < nl > + . build ( ) ; < nl > + Fresco . initialize ( application , config ) ; < nl > AndroidContext . setContext ( application ) ; < nl > / / TODO : Replace < nl > new SmileProcessor ( application ) . loadEmoji ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 885ab7a . . 19ce772 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 22 , 6 + 22 , 8 @ @ import android . support . v4 . app . Fragment ; < nl > import android . support . v4 . content . ContextCompat ; < nl > import android . support . v7 . app . ActionBar ; < nl > import android . support . v7 . view . ActionMode ; < nl > + import android . support . v7 . widget . LinearLayoutManager ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > import android . text . Editable ; < nl > import android . text . Spannable ; < nl > import android . text . TextWatcher ; < nl > @ @ - 32 , 6 + 34 , 7 @ @ import android . view . MenuItem ; < nl > import android . view . MotionEvent ; < nl > import android . view . View ; < nl > import android . view . animation . AlphaAnimation ; < nl > + import android . view . animation . Animation ; < nl > import android . view . animation . TranslateAnimation ; < nl > import android . widget . AdapterView ; < nl > import android . widget . FrameLayout ; < nl > @ @ - 53 , 6 + 56 , 7 @ @ import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > @ @ - 62 , 15 + 66 , 16 @ @ import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . ActorStyle ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . calls . CallActivity ; < nl > import im . actor . sdk . controllers . conversation . mentions . MentionsAdapter ; < nl > import im . actor . sdk . controllers . conversation . messages . AudioHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . MessagesFragment ; < nl > + import im . actor . sdk . controllers . conversation . view . FastShareAdapter ; < nl > import im . actor . sdk . controllers . fragment . settings . BaseActorChatActivity ; < nl > import im . actor . sdk . core . audio . VoiceCaptureActor ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > import im . actor . sdk . util . Randoms ; < nl > import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . util . images . GalleryScannerActor ; < nl > import im . actor . sdk . view . avatar . AvatarView ; < nl > import im . actor . sdk . controllers . conversation . view . TypingDrawable ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > @ @ - 78 , 7 + 83 , 6 @ @ import im . actor . sdk . view . markdown . AndroidMarkdown ; < nl > import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > < nl > - import static im . actor . sdk . util . ViewUtils . expand ; < nl > import static im . actor . sdk . util . ViewUtils . expandMentions ; < nl > import static im . actor . sdk . util . ViewUtils . goneView ; < nl > import static im . actor . sdk . util . ViewUtils . hideView ; < nl > @ @ - 152 , 6 + 156 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private int slideStart ; < nl > private TextView audioTimer ; < nl > private boolean isAudioVisible ; < nl > + private boolean isShareVisible ; < nl > private int SLIDE _ LIMIT ; < nl > ActorRef voiceRecordActor ; < nl > private String audioFile ; < nl > @ @ - 204 , 6 + 209 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private Intent intent ; < nl > private boolean textEditing = false ; < nl > private long currentEditRid ; < nl > + private Animation . AnimationListener animationListener ; < nl > < nl > public static Intent build ( Peer peer , boolean compose , Context context ) { < nl > final Intent intent = new Intent ( context , ChatActivity . class ) ; < nl > @ @ - 283 , 7 + 289 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > goneView ( quoteContainer ) ; < nl > quoteText . setText ( " " ) ; < nl > currentQuote = " " ; < nl > - if ( textEditing ) { < nl > + if ( textEditing ) { < nl > messageEditText . setText ( " " ) ; < nl > } < nl > textEditing = false ; < nl > @ @ - 301 , 10 + 307 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } ) ; < nl > shareContainer = findViewById ( R . id . closeMenuLayout ) ; < nl > - shareContainer . setOnClickListener ( new View . OnClickListener ( ) { < nl > + shareContainer . setOnTouchListener ( new View . OnTouchListener ( ) { < nl > @ Override < nl > - public void onClick ( View v ) { < nl > - hideShareMenu ( ) ; < nl > + public boolean onTouch ( View v , MotionEvent event ) { < nl > + hideShare ( ) ; < nl > + return false ; < nl > } < nl > } ) ; < nl > < nl > @ @ - 382 , 7 + 389 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > < nl > / / hide it < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > } < nl > } ; < nl > < nl > @ @ - 395 , 6 + 402 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; < nl > handleIntent ( ) ; < nl > < nl > + RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; < nl > + FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; < nl > + LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; < nl > + fastShare . setAdapter ( fastShareAdapter ) ; < nl > + fastShare . setLayoutManager ( layoutManager ) ; < nl > < nl > } < nl > < nl > @ @ - 434 , 13 + 446 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > handleIntent ( ) ; < nl > } < nl > < nl > - private void hideShareMenu ( ) { < nl > - if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { < nl > - / / hideView ( shareMenu ) ; < nl > - expand ( shareMenu , 0 ) ; < nl > - shareContainer . setVisibility ( View . GONE ) ; < nl > - } < nl > - } < nl > + < nl > < nl > @ Override < nl > protected Fragment onCreateFragment ( ) { < nl > @ @ - 831 , 13 + 837 , 13 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / } ) ; < nl > / / popup . show ( ) ; < nl > if ( shareMenuMaxHeight = = 0 ) { < nl > - shareMenuMaxHeight = Screen . dp ( 180 ) ; < nl > + shareMenuMaxHeight = Screen . dp ( 245 ) ; < nl > } < nl > if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > } else { < nl > shareContainer . setVisibility ( View . VISIBLE ) ; < nl > - expand ( shareMenu , shareMenuMaxHeight ) ; < nl > + showShare ( ) ; < nl > if ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ LANDSCAPE ) { < nl > keyboardUtils . setImeVisibility ( messageEditText , false ) ; < nl > } < nl > @ @ - 982 , 7 + 988 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } < nl > } ) ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > expandMentions ( mentionsList , 0 , mentionsList . getCount ( ) ) ; < nl > } < nl > < nl > @ @ - 1028 , 7 + 1034 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > quoteText . setText ( rawQuote ) ; < nl > } < nl > currentQuote = rawQuote ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; < nl > showView ( quoteContainer ) ; < nl > } < nl > @ @ - 1195 , 7 + 1201 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; < nl > quoteText . setText ( R . string . edit _ message ) ; < nl > messageEditText . setText ( text ) ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > showView ( quoteContainer ) ; < nl > < nl > } < nl > @ @ - 1343 , 6 + 1349 , 60 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > < nl > } < nl > < nl > + private boolean animationInProgress = false ; < nl > + < nl > + private void showShare ( ) { < nl > + if ( animationInProgress ) { < nl > + return ; < nl > + } < nl > + if ( animationListener = = null ) { < nl > + animationListener = new Animation . AnimationListener ( ) { < nl > + @ Override < nl > + public void onAnimationStart ( Animation animation ) { < nl > + animationInProgress = true ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationEnd ( Animation animation ) { < nl > + animationInProgress = false ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationRepeat ( Animation animation ) { < nl > + < nl > + } < nl > + } ; < nl > + } < nl > + < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , Screen . getHeight ( ) , 0 ) ; < nl > + animation . setDuration ( 160 ) ; < nl > + animation . setAnimationListener ( animationListener ) ; < nl > + shareMenu . clearAnimation ( ) ; < nl > + shareMenu . setAnimation ( animation ) ; < nl > + shareMenu . animate ( ) ; < nl > + shareMenu . setVisibility ( View . VISIBLE ) ; < nl > + isShareVisible = true ; < nl > + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( true ) ) ; < nl > + } < nl > + < nl > + private void hideShare ( ) { < nl > + if ( ! isShareVisible | | animationInProgress ) { < nl > + return ; < nl > + } < nl > + isShareVisible = false ; < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , Screen . getHeight ( ) ) ; < nl > + animation . setDuration ( 160 ) ; < nl > + < nl > + animation . setAnimationListener ( animationListener ) ; < nl > + shareMenu . clearAnimation ( ) ; < nl > + shareMenu . setAnimation ( animation ) ; < nl > + shareMenu . animate ( ) ; < nl > + shareMenu . setVisibility ( View . GONE ) ; < nl > + shareContainer . setVisibility ( View . GONE ) ; < nl > + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( false ) ) ; < nl > + < nl > + } < nl > + < nl > private void slideAudio ( int value ) { < nl > ObjectAnimator oa = ObjectAnimator . ofFloat ( audioSlide , " translationX " , audioSlide . getX ( ) , - value ) ; < nl > oa . setDuration ( 0 ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > new file mode 100644 < nl > index 0000000 . . a7cc631 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > @ @ - 0 , 0 + 1 , 109 @ @ < nl > + package im . actor . sdk . controllers . conversation . view ; < nl > + < nl > + import android . content . Context ; < nl > + import android . net . Uri ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > + import android . view . LayoutInflater ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . widget . CheckBox ; < nl > + import android . widget . CompoundButton ; < nl > + import android . widget . FrameLayout ; < nl > + < nl > + import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; < nl > + import com . facebook . drawee . view . SimpleDraweeView ; < nl > + import com . facebook . imagepipeline . common . ResizeOptions ; < nl > + import com . facebook . imagepipeline . request . ImageRequest ; < nl > + import com . facebook . imagepipeline . request . ImageRequestBuilder ; < nl > + < nl > + import java . io . File ; < nl > + import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > + import java . util . Set ; < nl > + < nl > + import im . actor . runtime . mvvm . Value ; < nl > + import im . actor . runtime . mvvm . ValueChangedListener ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . util . Screen ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { < nl > + < nl > + ArrayList < String > imagesPath = new ArrayList < > ( ) ; < nl > + Set < String > selected = new HashSet < > ( ) ; < nl > + Context context ; < nl > + < nl > + public FastShareAdapter ( Context context ) { < nl > + this . context = context ; < nl > + messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { < nl > + @ Override < nl > + public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { < nl > + imagesPath . clear ( ) ; < nl > + imagesPath . addAll ( val ) ; < nl > + notifyDataSetChanged ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + protected View inflate ( int id , ViewGroup viewGroup ) { < nl > + return LayoutInflater < nl > + . from ( context ) < nl > + . inflate ( id , viewGroup , false ) ; < nl > + } < nl > + < nl > + < nl > + @ Override < nl > + public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { < nl > + return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onBindViewHolder ( FastShareVH holder , int position ) { < nl > + holder . bind ( imagesPath . get ( position ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public int getItemCount ( ) { < nl > + return imagesPath . size ( ) ; < nl > + } < nl > + < nl > + public class FastShareVH extends RecyclerView . ViewHolder { < nl > + SimpleDraweeView v ; < nl > + CheckBox chb ; < nl > + String data ; < nl > + < nl > + public FastShareVH ( View itemView ) { < nl > + super ( itemView ) ; < nl > + v = ( SimpleDraweeView ) itemView . findViewById ( R . id . image ) ; < nl > + chb = ( CheckBox ) itemView . findViewById ( R . id . check ) ; < nl > + int size = context . getResources ( ) . getDimensionPixelSize ( R . dimen . share _ btn _ size ) ; < nl > + v . setLayoutParams ( new FrameLayout . LayoutParams ( size , size ) ) ; < nl > + chb . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { < nl > + @ Override < nl > + public void onCheckedChanged ( CompoundButton buttonView , boolean isChecked ) { < nl > + if ( isChecked & & data ! = null ) { < nl > + selected . add ( data ) ; < nl > + } else { < nl > + selected . remove ( data ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + public void bind ( String path ) { < nl > + data = path ; < nl > + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( path ) ) ) < nl > + . setResizeOptions ( new ResizeOptions ( v . getLayoutParams ( ) . width , < nl > + v . getLayoutParams ( ) . height ) ) < nl > + . build ( ) ; < nl > + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) < nl > + . setOldController ( v . getController ( ) ) < nl > + . setImageRequest ( request ) < nl > + . build ( ) ; < nl > + v . setController ( controller ) ; < nl > + chb . setChecked ( selected . contains ( data ) ) ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java < nl > new file mode 100644 < nl > index 0000000 . . e2dcc9b < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java < nl > @ @ - 0 , 0 + 1 , 171 @ @ < nl > + package im . actor . sdk . util . images ; < nl > + < nl > + import android . content . BroadcastReceiver ; < nl > + import android . content . Context ; < nl > + import android . content . Intent ; < nl > + import android . content . IntentFilter ; < nl > + import android . database . Cursor ; < nl > + import android . graphics . Bitmap ; < nl > + import android . graphics . BitmapFactory ; < nl > + import android . net . Uri ; < nl > + import android . provider . MediaStore ; < nl > + < nl > + import java . io . File ; < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . utils . ImageHelper ; < nl > + import im . actor . core . viewmodel . GalleryVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class GalleryScannerActor extends Actor { < nl > + < nl > + Context context ; < nl > + Uri uri ; < nl > + Cursor cursor ; < nl > + int offset = 0 ; < nl > + int column _ index _ data , column _ index _ folder _ name , column _ index _ date ; < nl > + < nl > + ArrayList < String > listOfAllImages = new ArrayList < String > ( ) ; < nl > + ArrayList < String > newMedia = new ArrayList < > ( ) ; < nl > + < nl > + String absolutePathOfImage = null ; < nl > + GalleryVM galleryVM ; < nl > + Uri lastScan ; < nl > + < nl > + private static final int SCAN _ COUNT = 10 ; < nl > + < nl > + ArrayList < String > loaded = new ArrayList < > ( ) ; < nl > + private boolean visible = false ; < nl > + private boolean scanned = false ; < nl > + private String [ ] projection ; < nl > + < nl > + public GalleryScannerActor ( Context context ) { < nl > + this . context = context ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + galleryVM = messenger ( ) . getGalleryVM ( ) ; < nl > + uri = android . provider . MediaStore . Images . Media . EXTERNAL _ CONTENT _ URI ; < nl > + < nl > + self ( ) . send ( new InitScan ( ) ) ; < nl > + } < nl > + < nl > + public void initScan ( ) { < nl > + projection = new String [ ] { MediaStore . MediaColumns . DATA , < nl > + MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME , < nl > + MediaStore . Images . Media . DATE _ MODIFIED } ; < nl > + < nl > + cursor = getQuery ( ) ; < nl > + < nl > + if ( cursor ! = null & & cursor . getCount ( ) > 0 ) { < nl > + column _ index _ data = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATA ) ; < nl > + column _ index _ date = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATE _ MODIFIED ) ; < nl > + column _ index _ folder _ name = cursor < nl > + . getColumnIndexOrThrow ( MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME ) ; < nl > + < nl > + < nl > + self ( ) . send ( new Scan ( ) ) ; < nl > + } else { < nl > + schedule ( new InitScan ( ) , 1000 ) ; < nl > + } < nl > + < nl > + } < nl > + < nl > + public Cursor getQuery ( ) { < nl > + return context . getContentResolver ( ) . query ( uri , projection , null , < nl > + null , MediaStore . MediaColumns . DATE _ MODIFIED + " DESC " ) ; < nl > + } < nl > + < nl > + private void scan ( ) { < nl > + < nl > + < nl > + int i = 0 ; < nl > + while ( offset + i + + < offset + SCAN _ COUNT & & cursor . moveToNext ( ) ) { < nl > + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; < nl > + < nl > + listOfAllImages . add ( absolutePathOfImage ) ; < nl > + } < nl > + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; < nl > + offset + = i ; < nl > + if ( offset < cursor . getCount ( ) ) { < nl > + self ( ) . send ( new Scan ( ) ) ; < nl > + } else { < nl > + lastScan = MediaStore . getMediaScannerUri ( ) ; < nl > + scanned = true ; < nl > + schedule ( new CheckNew ( ) , 1000 ) ; < nl > + } < nl > + } < nl > + < nl > + private void checkNew ( ) { < nl > + cursor = getQuery ( ) ; < nl > + newMedia . clear ( ) ; < nl > + while ( cursor ! = null & & cursor . moveToNext ( ) ) { < nl > + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; < nl > + if ( ! listOfAllImages . contains ( absolutePathOfImage ) ) { < nl > + Bitmap bitmap = ImageHelper . loadOptimizedHQ ( absolutePathOfImage ) ; < nl > + if ( bitmap ! = null ) { < nl > + bitmap . recycle ( ) ; < nl > + newMedia . add ( absolutePathOfImage ) ; < nl > + } else { < nl > + break ; < nl > + } < nl > + } else { < nl > + break ; < nl > + } < nl > + } < nl > + if ( newMedia . size ( ) > 0 ) { < nl > + listOfAllImages . addAll ( 0 , newMedia ) ; < nl > + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; < nl > + } < nl > + if ( visible ) { < nl > + schedule ( new CheckNew ( ) , 1000 ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof Scan ) { < nl > + scan ( ) ; < nl > + } else if ( message instanceof InitScan ) { < nl > + initScan ( ) ; < nl > + } else if ( message instanceof CheckNew ) { < nl > + checkNew ( ) ; < nl > + } else if ( message instanceof Visible ) { < nl > + if ( ( ( Visible ) message ) . isVisible ( ) ) { < nl > + visible = true ; < nl > + if ( scanned ) { < nl > + self ( ) . send ( new CheckNew ( ) ) ; < nl > + } < nl > + } else { < nl > + visible = false ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + private static class Scan { < nl > + < nl > + } < nl > + < nl > + private static class InitScan { < nl > + < nl > + } < nl > + < nl > + private static class CheckNew { < nl > + < nl > + } < nl > + < nl > + public static class Visible { < nl > + boolean visible ; < nl > + < nl > + public Visible ( boolean visible ) { < nl > + this . visible = visible ; < nl > + } < nl > + < nl > + public boolean isVisible ( ) { < nl > + return visible ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > index 68cf866 . . 029cf8f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > @ @ - 81 , 11 + 81 , 12 @ @ < nl > < nl > < LinearLayout < nl > android : layout _ width = " match _ parent " < nl > - android : layout _ height = " 0dp " < nl > + android : layout _ height = " 245dp " < nl > android : layout _ above = " @ + id / fl _ send _ panel " < nl > android : id = " @ + id / share _ container " < nl > android : visibility = " invisible " < nl > android : orientation = " vertical " < nl > + android : gravity = " bottom " < nl > android : background = " @ android : color / transparent " > < nl > < nl > < ImageView < nl > @ @ - 96 , 7 + 97 , 7 @ @ < nl > < nl > < TableLayout < nl > android : id = " @ + id / share _ menu " < nl > - android : paddingTop = " 20dp " < nl > + android : paddingTop = " 5dp " < nl > android : layout _ gravity = " bottom " < nl > android : layout _ width = " wrap _ content " < nl > android : layout _ height = " wrap _ content " < nl > @ @ - 105 , 6 + 106 , 15 @ @ < nl > < nl > < TableRow > < nl > < nl > + < android . support . v7 . widget . RecyclerView < nl > + android : id = " @ + id / fast _ share " < nl > + android : layout _ width = " 0dp " < nl > + android : layout _ weight = " 1 " < nl > + android : layout _ height = " @ dimen / fast _ share _ size " / > < nl > + < / TableRow > < nl > + < nl > + < TableRow > < nl > + < nl > < LinearLayout < nl > android : gravity = " center _ horizontal " < nl > android : layout _ width = " wrap _ content " < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml < nl > new file mode 100644 < nl > index 0000000 . . 4814076 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < nl > + < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " < nl > + android : padding = " 5dp " > < nl > + < nl > + < com . facebook . drawee . view . SimpleDraweeView < nl > + android : id = " @ + id / image " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " / > < nl > + < nl > + < CheckBox < nl > + android : layout _ gravity = " top | right " < nl > + < nl > + android : id = " @ + id / check " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " / > < nl > + < nl > + < / FrameLayout > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > index 6f29efa . . e2e84c6 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > @ @ - 24 , 6 + 24 , 7 @ @ < nl > < dimen name = " tour _ card _ message " > 14sp < / dimen > < nl > < dimen name = " keyboard _ height " > 250dp < / dimen > < nl > < dimen name = " share _ btn _ size " > 60dp < / dimen > < nl > + < dimen name = " fast _ share _ size " > 70dp < / dimen > < nl > < nl > < dimen name = " call _ btn _ size " > 40dp < / dimen > < nl > < dimen name = " end _ call _ btn _ size " > 70dp < / dimen > < nl > diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > index 8fd7d10 . . 27391fb 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > @ @ - 40 , 8 + 40 , 11 @ @ import im . actor . core . utils . IOUtils ; < nl > import im . actor . core . utils . ImageHelper ; < nl > import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . core . viewmodel . GalleryVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . Props ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > import im . actor . runtime . bser . BserCreator ; < nl > @ @ - 51 , 6 + 54 , 7 @ @ import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > import im . actor . runtime . storage . ListEngineItem ; < nl > + import im . actor . sdk . util . images . GalleryScannerActor ; < nl > import me . leolin . shortcutbadger . ShortcutBadger ; < nl > < nl > import static im . actor . runtime . actors . ActorSystem . system ; < nl > @ @ - 68 , 6 + 72 , 8 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > private HashMap < Peer , BindedDisplayList < Message > > messagesLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; < nl > private HashMap < Peer , BindedDisplayList < Message > > docsLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; < nl > private HashMap < String , BindedDisplayList > customLists = new HashMap < String , BindedDisplayList > ( ) ; < nl > + private GalleryVM galleryVM ; < nl > + private ActorRef galleryScannerActor ; < nl > < nl > public AndroidMessenger ( Context context , im . actor . core . Configuration configuration ) { < nl > super ( configuration ) ; < nl > @ @ - 482 , 6 + 488 , 23 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > return customLists . get ( key ) ; < nl > } < nl > < nl > + public GalleryVM getGalleryVM ( ) { < nl > + if ( galleryVM = = null ) { < nl > + galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public Actor create ( ) { < nl > + return new GalleryScannerActor ( AndroidContext . getContext ( ) ) ; < nl > + } < nl > + } ) , " actor / gallery _ scanner " ) ; < nl > + galleryVM = new GalleryVM ( ) ; < nl > + } < nl > + return galleryVM ; < nl > + } < nl > + < nl > + public ActorRef getGalleryScannerActor ( ) { < nl > + return galleryScannerActor ; < nl > + } < nl > + < nl > public EventBus getEvents ( ) { < nl > return modules . getEvents ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java < nl > new file mode 100644 < nl > index 0000000 . . 9a3eb07 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + package im . actor . core . viewmodel ; < nl > + < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . entity . StickerPack ; < nl > + import im . actor . runtime . mvvm . ValueModel ; < nl > + < nl > + public class GalleryVM { < nl > + < nl > + private ValueModel < ArrayList < String > > galleryMediaPath ; < nl > + < nl > + public GalleryVM ( ) { < nl > + galleryMediaPath = new ValueModel < > ( " gallery . photo " , new ArrayList < String > ( ) ) ; < nl > + } < nl > + < nl > + public ValueModel < ArrayList < String > > getGalleryMediaPath ( ) { < nl > + return galleryMediaPath ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 deleted file mode 100644 
 index d2e9acc . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 + + + / dev / null 
 @ @ - 1 , 75 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . calls ; 
 - 
 - import android . content . Context ; 
 - import android . media . AudioManager ; 
 - import android . media . MediaPlayer ; 
 - import android . net . Uri ; 
 - 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . core . audio . AndroidPlayerActor ; 
 - import im . actor . sdk . core . audio . AudioPlayerActor ; 
 - 
 - public class AudioActorEx extends AndroidPlayerActor { 
 - 
 - Context context ; 
 - 
 - public AudioActorEx ( Context context , AudioPlayerActor . AudioPlayerCallback callback ) { 
 - super ( context , callback ) ; 
 - this . context = context ; 
 - } 
 - 
 - private static final int STATE _ NONE = 0 ; 
 - private static final int STATE _ STARTED = 1 ; 
 - private static final int STATE _ PAUSED = 2 ; 
 - 
 - @ Override 
 - protected void onPlayMessage ( String fileName ) { 
 - currentFileName = fileName ; 
 - 
 - destroyPlayer ( ) ; 
 - state = STATE _ NONE ; 
 - 
 - try { 
 - if ( mplayer = = null ) { 
 - mplayer = new MediaPlayer ( ) ; 
 - } 
 - mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; 
 - mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; 
 - mplayer . prepare ( ) ; 
 - mplayer . start ( ) ; 
 - mplayer . setOnCompletionListener ( new MediaPlayer . OnCompletionListener ( ) { 
 - @ Override 
 - public void onCompletion ( MediaPlayer mp ) { 
 - self ( ) . send ( new Play ( " " ) ) ; 
 - } 
 - } ) ; 
 - mplayer . setOnErrorListener ( new MediaPlayer . OnErrorListener ( ) { 
 - @ Override 
 - public boolean onError ( MediaPlayer mp , int what , int extra ) { 
 - self ( ) . send ( new Error ( ) ) ; 
 - return false ; 
 - } 
 - } ) ; 
 - } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 - destroyPlayer ( ) ; 
 - callback . onError ( currentFileName ) ; 
 - return ; 
 - } 
 - 
 - callback . onStart ( currentFileName ) ; 
 - schedule ( new Notify ( ) , 500 ) ; 
 - state = STATE _ STARTED ; 
 - } 
 - 
 - private void destroyPlayer ( ) { 
 - if ( mplayer ! = null ) { 
 - mplayer . stop ( ) ; 
 - mplayer . reset ( ) ; 
 - mplayer . release ( ) ; 
 - mplayer = null ; 
 - } 
 - } 
 - 
 - 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioStreamVolumeValueActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioStreamVolumeValueActor . java 
 deleted file mode 100644 
 index 952f7cb . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioStreamVolumeValueActor . java 
 + + + / dev / null 
 @ @ - 1 , 139 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . calls ; 
 - 
 - import android . media . AudioFormat ; 
 - import android . media . AudioManager ; 
 - import android . media . AudioRecord ; 
 - import android . media . MediaRecorder ; 
 - 
 - import java . util . ArrayList ; 
 - import java . util . Arrays ; 
 - 
 - import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - import im . actor . runtime . actors . messages . PoisonPill ; 
 - import im . actor . sdk . core . audio . OpusEncoderActor ; 
 - import im . actor . sdk . core . audio . VoiceBuffers ; 
 - 
 - public class AudioStreamVolumeValueActor extends Actor { 
 - private static final int BUFFER _ SIZE = 16 * 1024 ; 
 - private int delay ; 
 - private AudioRecord audioRecord ; 
 - boolean inited = false ; 
 - 
 - public AudioStreamVolumeValueActor ( ) { 
 - } 
 - 
 - ArrayList < VolumeValueListener > callbacks = new ArrayList < VolumeValueListener > ( ) ; 
 - 
 - @ Override 
 - public void preStart ( ) { 
 - delay = 10 ; 
 - } 
 - 
 - private void subscribeForVolume ( VolumeValueListener callback ) { 
 - if ( audioRecord = = null ) { 
 - int minBufferSize = AudioRecord . getMinBufferSize ( 16000 , AudioFormat . CHANNEL _ IN _ MONO , AudioFormat . ENCODING _ PCM _ 16BIT ) ; 
 - int bufferSize = 16 * minBufferSize ; 
 - audioRecord = new AudioRecord ( MediaRecorder . AudioSource . DEFAULT , 16000 , AudioFormat . CHANNEL _ IN _ MONO , 
 - AudioFormat . ENCODING _ PCM _ 16BIT , bufferSize ) ; 
 - audioRecord . startRecording ( ) ; 
 - } 
 - callbacks . add ( callback ) ; 
 - if ( ! inited ) { 
 - inited = true ; 
 - schedule ( new Check ( ) , delay ) ; 
 - } 
 - } 
 - 
 - private void unsubscribeFromVolume ( VolumeValueListener callback ) { 
 - callbacks . remove ( callback ) ; 
 - audioRecord . stop ( ) ; 
 - audioRecord . release ( ) ; 
 - audioRecord = null ; 
 - self ( ) . send ( PoisonPill . INSTANCE ) ; 
 - } 
 - 
 - private void check ( ) { 
 - 
 - if ( audioRecord ! = null ) { 
 - byte [ ] buffer = VoiceBuffers . getInstance ( ) . obtainBuffer ( BUFFER _ SIZE ) ; 
 - int len = audioRecord . read ( buffer , 0 , buffer . length ) ; 
 - if ( len > 0 ) { 
 - int i = getMax ( buffer ) - getMin ( buffer ) ; 
 - for ( VolumeValueListener c : callbacks ) { 
 - c . onVolumeValue ( i ) ; 
 - } 
 - } else { 
 - VoiceBuffers . getInstance ( ) . releaseBuffer ( buffer ) ; 
 - } 
 - 
 - } 
 - 
 - 
 - self ( ) . send ( new Check ( ) ) ; 
 - } 
 - 
 - byte getMax ( byte [ ] array ) { 
 - byte max = array [ 0 ] ; 
 - for ( int i = 1 ; i < array . length ; i + + ) { 
 - if ( array [ i ] > max ) { 
 - max = array [ i ] ; 
 - } 
 - } 
 - 
 - return max ; 
 - } 
 - 
 - byte getMin ( byte [ ] array ) { 
 - byte min = array [ 0 ] ; 
 - for ( int i = 1 ; i < array . length ; i + + ) { 
 - if ( array [ i ] < min ) { 
 - min = array [ i ] ; 
 - } 
 - } 
 - 
 - return min ; 
 - } 
 - 
 - 
 - @ Override 
 - public void onReceive ( Object message ) { 
 - if ( message instanceof Check ) { 
 - check ( ) ; 
 - } else if ( message instanceof Subscribe ) { 
 - subscribeForVolume ( ( ( Subscribe ) message ) . getCallback ( ) ) ; 
 - } else if ( message instanceof Unsubscribe ) { 
 - unsubscribeFromVolume ( ( ( Unsubscribe ) message ) . getCallback ( ) ) ; 
 - } 
 - } 
 - 
 - interface VolumeValueListener { 
 - void onVolumeValue ( int val ) ; 
 - } 
 - 
 - public static class Subscribe { 
 - VolumeValueListener callback ; 
 - 
 - public Subscribe ( VolumeValueListener callback ) { 
 - this . callback = callback ; 
 - } 
 - 
 - public VolumeValueListener getCallback ( ) { 
 - return callback ; 
 - } 
 - } 
 - 
 - public static class Unsubscribe { 
 - VolumeValueListener callback ; 
 - 
 - public Unsubscribe ( VolumeValueListener callback ) { 
 - this . callback = callback ; 
 - } 
 - 
 - public VolumeValueListener getCallback ( ) { 
 - return callback ; 
 - } 
 - } 
 - 
 - private static class Check { } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallAvatarLayerAnimator . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallAvatarLayerAnimator . java 
 deleted file mode 100644 
 index 25b33b1 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallAvatarLayerAnimator . java 
 + + + / dev / null 
 @ @ - 1 , 118 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . calls ; 
 - 
 - import android . view . View ; 
 - 
 - import com . facebook . rebound . SimpleSpringListener ; 
 - import com . facebook . rebound . Spring ; 
 - import com . facebook . rebound . SpringConfig ; 
 - import com . facebook . rebound . SpringSystem ; 
 - import com . facebook . rebound . SpringUtil ; 
 - 
 - public class CallAvatarLayerAnimator { 
 - 
 - private final SpringSystem springSystem ; 
 - private final Spring popAnimationSpring ; 
 - private final Spring popAnimationSpring1 ; 
 - private final Spring popAnimationSpring2 ; 
 - private final Spring popAnimationSpring3 ; 
 - private final Spring popAnimationSpring4 ; 
 - private final View layer ; 
 - private final View layer1 ; 
 - private final View layer2 ; 
 - private final View layer3 ; 
 - private final View layer4 ; 
 - 
 - 
 - public CallAvatarLayerAnimator ( View layer , View layer1 , View layer2 , View layer3 , View layer4 ) { 
 - this . layer = layer ; 
 - this . layer1 = layer1 ; 
 - this . layer2 = layer2 ; 
 - this . layer3 = layer3 ; 
 - this . layer4 = layer4 ; 
 - 
 - springSystem = SpringSystem . create ( ) ; 
 - 
 - popAnimationSpring = springSystem . createSpring ( ) 
 - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 - . addListener ( new SimpleSpringListener ( ) { 
 - @ Override 
 - public void onSpringUpdate ( Spring spring ) { 
 - setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - popAnimationSpring1 = springSystem . createSpring ( ) 
 - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 - . addListener ( new SimpleSpringListener ( ) { 
 - @ Override 
 - public void onSpringUpdate ( Spring spring ) { 
 - setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - popAnimationSpring2 = springSystem . createSpring ( ) 
 - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 - . addListener ( new SimpleSpringListener ( ) { 
 - @ Override 
 - public void onSpringUpdate ( Spring spring ) { 
 - setPopAnimationProgress2 ( ( float ) spring . getCurrentValue ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - popAnimationSpring3 = springSystem . createSpring ( ) 
 - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 - . addListener ( new SimpleSpringListener ( ) { 
 - @ Override 
 - public void onSpringUpdate ( Spring spring ) { 
 - setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - popAnimationSpring4 = springSystem . createSpring ( ) 
 - . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 9 , 20 ) ) 
 - . addListener ( new SimpleSpringListener ( ) { 
 - @ Override 
 - public void onSpringUpdate ( Spring spring ) { 
 - setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - / / popAnimation transition 
 - 
 - public void popAnimation ( boolean on ) { 
 - popAnimationSpring . setEndValue ( on ? 1 : 0 ) ; 
 - popAnimationSpring1 . setEndValue ( on ? 1 : 0 ) ; 
 - popAnimationSpring2 . setEndValue ( on ? 1 : 0 ) ; 
 - popAnimationSpring3 . setEndValue ( on ? 1 : 0 ) ; 
 - popAnimationSpring4 . setEndValue ( on ? 1 : 0 ) ; 
 - } 
 - 
 - private void setPopAnimationProgress ( float progress ) { 
 - float transition2 = transition ( progress , 0 . 8f , 0 . 85f ) ; 
 - layer . setScaleX ( transition2 ) ; 
 - layer . setScaleY ( transition2 ) ; 
 - } 
 - 
 - 
 - private void setPopAnimationProgress1 ( float progress ) { 
 - float transition2 = transition ( progress , 0 . 85f , 0 . 9f ) ; 
 - layer1 . setScaleX ( transition2 ) ; 
 - layer1 . setScaleY ( transition2 ) ; 
 - } 
 - 
 - 
 - private void setPopAnimationProgress2 ( float progress ) { 
 - float transition2 = transition ( progress , 0 . 7f , 0 . 75f ) ; 
 - layer2 . setScaleX ( transition2 ) ; 
 - layer2 . setScaleY ( transition2 ) ; 
 - } 
 - 
 - 
 - 
 - / / Utilities 
 - private float transition ( float progress , float startValue , float endValue ) { 
 - return ( float ) SpringUtil . mapValueFromRangeToRange ( progress , 0 , 1 , startValue , endValue ) ; 
 - } 
 - 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index 4d8aa67 . . e97dcb5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 54 , 6 + 54 , 8 @ @ import im . actor . runtime . mvvm . ValueChangedListener ; 
 import im . actor . runtime . mvvm . ValueModel ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . calls . view . CallAvatarLayerAnimator ; 
 + import im . actor . sdk . controllers . calls . view . TimerActor ; 
 import im . actor . sdk . controllers . fragment . BaseFragment ; 
 import im . actor . sdk . util . Screen ; 
 import im . actor . sdk . view . TintImageView ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / TimerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / TimerActor . java 
 deleted file mode 100644 
 index 1be46a5 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / TimerActor . java 
 + + + / dev / null 
 @ @ - 1 , 82 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . calls ; 
 - 
 - import java . util . Date ; 
 - import java . util . HashMap ; 
 - import java . util . HashSet ; 
 - 
 - import im . actor . runtime . actors . Actor ; 
 - 
 - public class TimerActor extends Actor { 
 - private final int inteval ; 
 - private HashMap < Integer , TimerCallback > callbacks = new HashMap < Integer , TimerCallback > ( ) ; 
 - private HashMap < Integer , Long > callbacksRegisterTime = new HashMap < Integer , Long > ( ) ; 
 - public TimerActor ( int inteval ) { 
 - this . inteval = inteval ; 
 - } 
 - 
 - @ Override 
 - public void preStart ( ) { 
 - super . preStart ( ) ; 
 - schedule ( new Tick ( ) , inteval ) ; 
 - } 
 - 
 - @ Override 
 - public void onReceive ( Object message ) { 
 - if ( message instanceof Register ) { 
 - callbacks . put ( ( ( Register ) message ) . getId ( ) , ( ( Register ) message ) . getCallback ( ) ) ; 
 - if ( ! callbacksRegisterTime . keySet ( ) . contains ( ( ( Register ) message ) . getId ( ) ) ) { 
 - callbacksRegisterTime . put ( ( ( Register ) message ) . getId ( ) , System . currentTimeMillis ( ) ) ; 
 - } 
 - } else if ( message instanceof UnRegister ) { 
 - callbacks . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; 
 - callbacksRegisterTime . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; 
 - } else if ( message instanceof Tick ) { 
 - onTick ( ) ; 
 - } 
 - } 
 - 
 - private void onTick ( ) { 
 - for ( int callbackId : callbacks . keySet ( ) ) { 
 - long currentTime = System . currentTimeMillis ( ) ; 
 - callbacks . get ( callbackId ) . onTick ( currentTime , System . currentTimeMillis ( ) - callbacksRegisterTime . get ( callbackId ) ) ; 
 - } 
 - schedule ( new Tick ( ) , inteval ) ; 
 - } 
 - 
 - public static class Register { 
 - TimerCallback callback ; 
 - int id ; 
 - public Register ( TimerCallback callback , int timerId ) { 
 - this . callback = callback ; 
 - this . id = timerId ; 
 - } 
 - 
 - public int getId ( ) { 
 - return id ; 
 - } 
 - 
 - public TimerCallback getCallback ( ) { 
 - return callback ; 
 - } 
 - } 
 - 
 - public static class UnRegister { 
 - int id ; 
 - 
 - public UnRegister ( int id ) { 
 - this . id = id ; 
 - } 
 - 
 - public int getId ( ) { 
 - return id ; 
 - } 
 - } 
 - 
 - private static class Tick { 
 - 
 - } 
 - 
 - public interface TimerCallback { 
 - void onTick ( long currentTime , long timeFromRegister ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioActorEx . java 
 new file mode 100644 
 index 0000000 . . 2395681 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioActorEx . java 
 @ @ - 0 , 0 + 1 , 75 @ @ 
 + package im . actor . sdk . controllers . calls . view ; 
 + 
 + import android . content . Context ; 
 + import android . media . AudioManager ; 
 + import android . media . MediaPlayer ; 
 + import android . net . Uri ; 
 + 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . core . audio . AndroidPlayerActor ; 
 + import im . actor . sdk . core . audio . AudioPlayerActor ; 
 + 
 + public class AudioActorEx extends AndroidPlayerActor { 
 + 
 + Context context ; 
 + 
 + public AudioActorEx ( Context context , AudioPlayerActor . AudioPlayerCallback callback ) { 
 + super ( context , callback ) ; 
 + this . context = context ; 
 + } 
 + 
 + private static final int STATE _ NONE = 0 ; 
 + private static final int STATE _ STARTED = 1 ; 
 + private static final int STATE _ PAUSED = 2 ; 
 + 
 + @ Override 
 + protected void onPlayMessage ( String fileName ) { 
 + currentFileName = fileName ; 
 + 
 + destroyPlayer ( ) ; 
 + state = STATE _ NONE ; 
 + 
 + try { 
 + if ( mplayer = = null ) { 
 + mplayer = new MediaPlayer ( ) ; 
 + } 
 + mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; 
 + mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; 
 + mplayer . prepare ( ) ; 
 + mplayer . start ( ) ; 
 + mplayer . setOnCompletionListener ( new MediaPlayer . OnCompletionListener ( ) { 
 + @ Override 
 + public void onCompletion ( MediaPlayer mp ) { 
 + self ( ) . send ( new Play ( " " ) ) ; 
 + } 
 + } ) ; 
 + mplayer . setOnErrorListener ( new MediaPlayer . OnErrorListener ( ) { 
 + @ Override 
 + public boolean onError ( MediaPlayer mp , int what , int extra ) { 
 + self ( ) . send ( new Error ( ) ) ; 
 + return false ; 
 + } 
 + } ) ; 
 + } catch ( Exception e ) { 
 + e . printStackTrace ( ) ; 
 + destroyPlayer ( ) ; 
 + callback . onError ( currentFileName ) ; 
 + return ; 
 + } 
 + 
 + callback . onStart ( currentFileName ) ; 
 + schedule ( new Notify ( ) , 500 ) ; 
 + state = STATE _ STARTED ; 
 + } 
 + 
 + private void destroyPlayer ( ) { 
 + if ( mplayer ! = null ) { 
 + mplayer . stop ( ) ; 
 + mplayer . reset ( ) ; 
 + mplayer . release ( ) ; 
 + mplayer = null ; 
 + } 
 + } 
 + 
 + 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioStreamVolumeValueActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioStreamVolumeValueActor . java 
 new file mode 100644 
 index 0000000 . . 833dbe6 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / AudioStreamVolumeValueActor . java 
 @ @ - 0 , 0 + 1 , 139 @ @ 
 + package im . actor . sdk . controllers . calls . view ; 
 + 
 + import android . media . AudioFormat ; 
 + import android . media . AudioManager ; 
 + import android . media . AudioRecord ; 
 + import android . media . MediaRecorder ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 + 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . runtime . actors . messages . PoisonPill ; 
 + import im . actor . sdk . core . audio . OpusEncoderActor ; 
 + import im . actor . sdk . core . audio . VoiceBuffers ; 
 + 
 + public class AudioStreamVolumeValueActor extends Actor { 
 + private static final int BUFFER _ SIZE = 16 * 1024 ; 
 + private int delay ; 
 + private AudioRecord audioRecord ; 
 + boolean inited = false ; 
 + 
 + public AudioStreamVolumeValueActor ( ) { 
 + } 
 + 
 + ArrayList < VolumeValueListener > callbacks = new ArrayList < VolumeValueListener > ( ) ; 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + delay = 10 ; 
 + } 
 + 
 + private void subscribeForVolume ( VolumeValueListener callback ) { 
 + if ( audioRecord = = null ) { 
 + int minBufferSize = AudioRecord . getMinBufferSize ( 16000 , AudioFormat . CHANNEL _ IN _ MONO , AudioFormat . ENCODING _ PCM _ 16BIT ) ; 
 + int bufferSize = 16 * minBufferSize ; 
 + audioRecord = new AudioRecord ( MediaRecorder . AudioSource . DEFAULT , 16000 , AudioFormat . CHANNEL _ IN _ MONO , 
 + AudioFormat . ENCODING _ PCM _ 16BIT , bufferSize ) ; 
 + audioRecord . startRecording ( ) ; 
 + } 
 + callbacks . add ( callback ) ; 
 + if ( ! inited ) { 
 + inited = true ; 
 + schedule ( new Check ( ) , delay ) ; 
 + } 
 + } 
 + 
 + private void unsubscribeFromVolume ( VolumeValueListener callback ) { 
 + callbacks . remove ( callback ) ; 
 + audioRecord . stop ( ) ; 
 + audioRecord . release ( ) ; 
 + audioRecord = null ; 
 + self ( ) . send ( PoisonPill . INSTANCE ) ; 
 + } 
 + 
 + private void check ( ) { 
 + 
 + if ( audioRecord ! = null ) { 
 + byte [ ] buffer = VoiceBuffers . getInstance ( ) . obtainBuffer ( BUFFER _ SIZE ) ; 
 + int len = audioRecord . read ( buffer , 0 , buffer . length ) ; 
 + if ( len > 0 ) { 
 + int i = getMax ( buffer ) - getMin ( buffer ) ; 
 + for ( VolumeValueListener c : callbacks ) { 
 + c . onVolumeValue ( i ) ; 
 + } 
 + } else { 
 + VoiceBuffers . getInstance ( ) . releaseBuffer ( buffer ) ; 
 + } 
 + 
 + } 
 + 
 + 
 + self ( ) . send ( new Check ( ) ) ; 
 + } 
 + 
 + byte getMax ( byte [ ] array ) { 
 + byte max = array [ 0 ] ; 
 + for ( int i = 1 ; i < array . length ; i + + ) { 
 + if ( array [ i ] > max ) { 
 + max = array [ i ] ; 
 + } 
 + } 
 + 
 + return max ; 
 + } 
 + 
 + byte getMin ( byte [ ] array ) { 
 + byte min = array [ 0 ] ; 
 + for ( int i = 1 ; i < array . length ; i + + ) { 
 + if ( array [ i ] < min ) { 
 + min = array [ i ] ; 
 + } 
 + } 
 + 
 + return min ; 
 + } 
 + 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof Check ) { 
 + check ( ) ; 
 + } else if ( message instanceof Subscribe ) { 
 + subscribeForVolume ( ( ( Subscribe ) message ) . getCallback ( ) ) ; 
 + } else if ( message instanceof Unsubscribe ) { 
 + unsubscribeFromVolume ( ( ( Unsubscribe ) message ) . getCallback ( ) ) ; 
 + } 
 + } 
 + 
 + interface VolumeValueListener { 
 + void onVolumeValue ( int val ) ; 
 + } 
 + 
 + public static class Subscribe { 
 + VolumeValueListener callback ; 
 + 
 + public Subscribe ( VolumeValueListener callback ) { 
 + this . callback = callback ; 
 + } 
 + 
 + public VolumeValueListener getCallback ( ) { 
 + return callback ; 
 + } 
 + } 
 + 
 + public static class Unsubscribe { 
 + VolumeValueListener callback ; 
 + 
 + public Unsubscribe ( VolumeValueListener callback ) { 
 + this . callback = callback ; 
 + } 
 + 
 + public VolumeValueListener getCallback ( ) { 
 + return callback ; 
 + } 
 + } 
 + 
 + private static class Check { } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / CallAvatarLayerAnimator . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / CallAvatarLayerAnimator . java 
 new file mode 100644 
 index 0000000 . . 67cf585 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / CallAvatarLayerAnimator . java 
 @ @ - 0 , 0 + 1 , 118 @ @ 
 + package im . actor . sdk . controllers . calls . view ; 
 + 
 + import android . view . View ; 
 + 
 + import com . facebook . rebound . SimpleSpringListener ; 
 + import com . facebook . rebound . Spring ; 
 + import com . facebook . rebound . SpringConfig ; 
 + import com . facebook . rebound . SpringSystem ; 
 + import com . facebook . rebound . SpringUtil ; 
 + 
 + public class CallAvatarLayerAnimator { 
 + 
 + private final SpringSystem springSystem ; 
 + private final Spring popAnimationSpring ; 
 + private final Spring popAnimationSpring1 ; 
 + private final Spring popAnimationSpring2 ; 
 + private final Spring popAnimationSpring3 ; 
 + private final Spring popAnimationSpring4 ; 
 + private final View layer ; 
 + private final View layer1 ; 
 + private final View layer2 ; 
 + private final View layer3 ; 
 + private final View layer4 ; 
 + 
 + 
 + public CallAvatarLayerAnimator ( View layer , View layer1 , View layer2 , View layer3 , View layer4 ) { 
 + this . layer = layer ; 
 + this . layer1 = layer1 ; 
 + this . layer2 = layer2 ; 
 + this . layer3 = layer3 ; 
 + this . layer4 = layer4 ; 
 + 
 + springSystem = SpringSystem . create ( ) ; 
 + 
 + popAnimationSpring = springSystem . createSpring ( ) 
 + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 + . addListener ( new SimpleSpringListener ( ) { 
 + @ Override 
 + public void onSpringUpdate ( Spring spring ) { 
 + setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; 
 + } 
 + } ) ; 
 + 
 + popAnimationSpring1 = springSystem . createSpring ( ) 
 + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 + . addListener ( new SimpleSpringListener ( ) { 
 + @ Override 
 + public void onSpringUpdate ( Spring spring ) { 
 + setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; 
 + } 
 + } ) ; 
 + 
 + popAnimationSpring2 = springSystem . createSpring ( ) 
 + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 + . addListener ( new SimpleSpringListener ( ) { 
 + @ Override 
 + public void onSpringUpdate ( Spring spring ) { 
 + setPopAnimationProgress2 ( ( float ) spring . getCurrentValue ( ) ) ; 
 + } 
 + } ) ; 
 + 
 + popAnimationSpring3 = springSystem . createSpring ( ) 
 + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 0 , 1 ) ) 
 + . addListener ( new SimpleSpringListener ( ) { 
 + @ Override 
 + public void onSpringUpdate ( Spring spring ) { 
 + setPopAnimationProgress ( ( float ) spring . getCurrentValue ( ) ) ; 
 + } 
 + } ) ; 
 + 
 + popAnimationSpring4 = springSystem . createSpring ( ) 
 + . setSpringConfig ( SpringConfig . fromBouncinessAndSpeed ( 9 , 20 ) ) 
 + . addListener ( new SimpleSpringListener ( ) { 
 + @ Override 
 + public void onSpringUpdate ( Spring spring ) { 
 + setPopAnimationProgress1 ( ( float ) spring . getCurrentValue ( ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + / / popAnimation transition 
 + 
 + public void popAnimation ( boolean on ) { 
 + popAnimationSpring . setEndValue ( on ? 1 : 0 ) ; 
 + popAnimationSpring1 . setEndValue ( on ? 1 : 0 ) ; 
 + popAnimationSpring2 . setEndValue ( on ? 1 : 0 ) ; 
 + popAnimationSpring3 . setEndValue ( on ? 1 : 0 ) ; 
 + popAnimationSpring4 . setEndValue ( on ? 1 : 0 ) ; 
 + } 
 + 
 + private void setPopAnimationProgress ( float progress ) { 
 + float transition2 = transition ( progress , 0 . 8f , 0 . 85f ) ; 
 + layer . setScaleX ( transition2 ) ; 
 + layer . setScaleY ( transition2 ) ; 
 + } 
 + 
 + 
 + private void setPopAnimationProgress1 ( float progress ) { 
 + float transition2 = transition ( progress , 0 . 85f , 0 . 9f ) ; 
 + layer1 . setScaleX ( transition2 ) ; 
 + layer1 . setScaleY ( transition2 ) ; 
 + } 
 + 
 + 
 + private void setPopAnimationProgress2 ( float progress ) { 
 + float transition2 = transition ( progress , 0 . 7f , 0 . 75f ) ; 
 + layer2 . setScaleX ( transition2 ) ; 
 + layer2 . setScaleY ( transition2 ) ; 
 + } 
 + 
 + 
 + 
 + / / Utilities 
 + private float transition ( float progress , float startValue , float endValue ) { 
 + return ( float ) SpringUtil . mapValueFromRangeToRange ( progress , 0 , 1 , startValue , endValue ) ; 
 + } 
 + 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / TimerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / TimerActor . java 
 new file mode 100644 
 index 0000000 . . 30e6dcb 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / view / TimerActor . java 
 @ @ - 0 , 0 + 1 , 82 @ @ 
 + package im . actor . sdk . controllers . calls . view ; 
 + 
 + import java . util . Date ; 
 + import java . util . HashMap ; 
 + import java . util . HashSet ; 
 + 
 + import im . actor . runtime . actors . Actor ; 
 + 
 + public class TimerActor extends Actor { 
 + private final int inteval ; 
 + private HashMap < Integer , TimerCallback > callbacks = new HashMap < Integer , TimerCallback > ( ) ; 
 + private HashMap < Integer , Long > callbacksRegisterTime = new HashMap < Integer , Long > ( ) ; 
 + public TimerActor ( int inteval ) { 
 + this . inteval = inteval ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + super . preStart ( ) ; 
 + schedule ( new Tick ( ) , inteval ) ; 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof Register ) { 
 + callbacks . put ( ( ( Register ) message ) . getId ( ) , ( ( Register ) message ) . getCallback ( ) ) ; 
 + if ( ! callbacksRegisterTime . keySet ( ) . contains ( ( ( Register ) message ) . getId ( ) ) ) { 
 + callbacksRegisterTime . put ( ( ( Register ) message ) . getId ( ) , System . currentTimeMillis ( ) ) ; 
 + } 
 + } else if ( message instanceof UnRegister ) { 
 + callbacks . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; 
 + callbacksRegisterTime . remove ( ( ( UnRegister ) message ) . getId ( ) ) ; 
 + } else if ( message instanceof Tick ) { 
 + onTick ( ) ; 
 + } 
 + } 
 + 
 + private void onTick ( ) { 
 + for ( int callbackId : callbacks . keySet ( ) ) { 
 + long currentTime = System . currentTimeMillis ( ) ; 
 + callbacks . get ( callbackId ) . onTick ( currentTime , System . currentTimeMillis ( ) - callbacksRegisterTime . get ( callbackId ) ) ; 
 + } 
 + schedule ( new Tick ( ) , inteval ) ; 
 + } 
 + 
 + public static class Register { 
 + TimerCallback callback ; 
 + int id ; 
 + public Register ( TimerCallback callback , int timerId ) { 
 + this . callback = callback ; 
 + this . id = timerId ; 
 + } 
 + 
 + public int getId ( ) { 
 + return id ; 
 + } 
 + 
 + public TimerCallback getCallback ( ) { 
 + return callback ; 
 + } 
 + } 
 + 
 + public static class UnRegister { 
 + int id ; 
 + 
 + public UnRegister ( int id ) { 
 + this . id = id ; 
 + } 
 + 
 + public int getId ( ) { 
 + return id ; 
 + } 
 + } 
 + 
 + private static class Tick { 
 + 
 + } 
 + 
 + public interface TimerCallback { 
 + void onTick ( long currentTime , long timeFromRegister ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java 
 index a3c102f . . f9ebc2b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileActivity . java 
 @ @ - 3 , 6 + 3 , 8 @ @ package im . actor . sdk . controllers . profile ; 
 import android . graphics . Color ; 
 import android . graphics . drawable . ColorDrawable ; 
 import android . os . Bundle ; 
 + import android . support . v7 . app . ActionBar ; 
 + import android . support . v7 . app . AppCompatActivity ; 
 import android . view . Menu ; 
 import android . view . MenuItem ; 
 import android . widget . Toast ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java 
 index 7a859c3 . . 48d32b5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java 
 @ @ - 41 , 6 + 41 , 7 @ @ import im . actor . sdk . controllers . Intents ; 
 import im . actor . sdk . controllers . fragment . preview . ViewAvatarActivity ; 
 import im . actor . sdk . controllers . fragment . BaseFragment ; 
 import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . view . avatar . AvatarView ; 
 import im . actor . sdk . view . avatar . CoverAvatarView ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . viewmodel . UserPhone ; 
 @ @ - 61 , 7 + 62 , 7 @ @ public class ProfileFragment extends BaseFragment { 
 return res ; 
 } 
 
 - private CoverAvatarView avatarView ; 
 + private AvatarView avatarView ; 
 
 @ Override 
 public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 @ @ - 80 , 14 + 81 , 16 @ @ public class ProfileFragment extends BaseFragment { 
 / / 
 
 res . findViewById ( R . id . container ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; 
 + res . findViewById ( R . id . avatarContainer ) . setBackgroundColor ( style . getToolBarColor ( ) ) ; 
 
 
 / / 
 / / User Avatar 
 / / 
 
 - avatarView = ( CoverAvatarView ) res . findViewById ( R . id . avatar ) ; 
 - bind ( avatarView , user . getAvatar ( ) ) ; 
 + avatarView = ( AvatarView ) res . findViewById ( R . id . avatar ) ; 
 + avatarView . init ( Screen . dp ( 96 ) , 48 ) ; 
 + avatarView . bind ( user . getAvatar ( ) . get ( ) , user . getName ( ) . get ( ) , user . getId ( ) ) ; 
 avatarView . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 @ @ - 436 , 7 + 439 , 6 @ @ public class ProfileFragment extends BaseFragment { 
 } 
 
 private void updateBar ( int offset ) { 
 - avatarView . setOffset ( offset ) ; 
 
 ActionBar bar = ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) ; 
 if ( bar ! = null ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 index 661e59e . . 9ab6b01 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 @ @ - 4 , 13 + 4 , 12 @ @ import android . content . Context ; 
 import android . content . Intent ; 
 
 import im . actor . core . providers . CallsProvider ; 
 - import im . actor . core . viewmodel . CallState ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . controllers . calls . AudioActorEx ; 
 + import im . actor . sdk . controllers . calls . view . AudioActorEx ; 
 import im . actor . sdk . controllers . calls . CallActivity ; 
 import im . actor . sdk . core . audio . AndroidPlayerActor ; 
 import im . actor . sdk . core . audio . AudioPlayerActor ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml 
 index 4350989 . . c9397b6 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml 
 @ @ - 15 , 46 + 15 , 45 @ @ 
 android : layout _ height = " wrap _ content " 
 android : orientation = " vertical " > 
 
 - < FrameLayout 
 - android : layout _ width = " fill _ parent " 
 + < LinearLayout 
 + android : id = " @ + id / avatarContainer " 
 + android : layout _ width = " match _ parent " 
 android : layout _ height = " 248dp " 
 - android : orientation = " horizontal " > 
 - 
 - < im . actor . sdk . view . avatar . CoverAvatarView 
 + android : layout _ gravity = " bottom " 
 + android : gravity = " center _ vertical " 
 + android : orientation = " vertical " 
 + android : paddingLeft = " 24dp " 
 + android : paddingRight = " 24dp " 
 + android : paddingTop = " 44dp " > 
 + 
 + < im . actor . sdk . view . avatar . AvatarView 
 android : id = " @ + id / avatar " 
 - android : layout _ width = " match _ parent " 
 - android : layout _ height = " match _ parent " / > 
 + android : layout _ width = " 96dp " 
 + android : layout _ height = " 96dp " 
 + android : layout _ gravity = " center _ horizontal " 
 + android : layout _ marginBottom = " 16dp " / > 
 
 - < LinearLayout 
 + < TextView 
 + android : id = " @ + id / name " 
 android : layout _ width = " match _ parent " 
 - android : layout _ height = " 72dp " 
 - android : layout _ gravity = " bottom " 
 - android : gravity = " center _ vertical | left " 
 - android : orientation = " vertical " 
 - android : paddingLeft = " 72dp " 
 - android : paddingRight = " 24dp " > 
 - 
 - < TextView 
 - android : id = " @ + id / name " 
 - android : layout _ width = " wrap _ content " 
 - android : layout _ height = " wrap _ content " 
 - android : layout _ marginTop = " - 2dp " 
 - android : ellipsize = " end " 
 - android : includeFontPadding = " false " 
 - android : lines = " 1 " 
 - android : singleLine = " true " 
 - android : textSize = " 28sp " / > 
 - 
 - < TextView 
 - android : id = " @ + id / lastSeen " 
 - android : layout _ width = " wrap _ content " 
 - android : layout _ height = " wrap _ content " 
 - android : layout _ marginTop = " - 2dp " 
 - android : textSize = " 14sp " / > 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ marginTop = " - 2dp " 
 + android : ellipsize = " end " 
 + android : gravity = " center " 
 + android : includeFontPadding = " false " 
 + android : lines = " 1 " 
 + android : singleLine = " true " 
 + android : textSize = " 28sp " / > 
 
 - < / LinearLayout > 
 + < TextView 
 + android : id = " @ + id / lastSeen " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ marginTop = " - 2dp " 
 + android : gravity = " center " 
 + android : textSize = " 14sp " / > 
 
 - < / FrameLayout > 
 + < / LinearLayout > 
 
 < LinearLayout 
 android : layout _ width = " match _ parent " 
 @ @ - 146 , 7 + 145 , 7 @ @ 
 < im . actor . sdk . view . DividerView 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " wrap _ content " 
 - android : layout _ marginBottom = " 8dp " / > 
 + android : layout _ marginBottom = " 32dp " / > 
 
 < LinearLayout 
 android : id = " @ + id / contactsContainer "

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index bf6a2fa . . e54c5ad 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import android . os . Bundle ; 
 import android . view . ViewGroup ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . imagepipeline . core . ImagePipelineConfig ; 
 
 import org . jetbrains . annotations . NotNull ; 
 
 @ @ - 193 , 7 + 194 , 10 @ @ public class ActorSDK { 
 / / SDK Tools 
 / / 
 
 - Fresco . initialize ( application ) ; 
 + ImagePipelineConfig config = ImagePipelineConfig . newBuilder ( application ) 
 + . setDownsampleEnabled ( true ) 
 + . build ( ) ; 
 + Fresco . initialize ( application , config ) ; 
 AndroidContext . setContext ( application ) ; 
 / / TODO : Replace 
 new SmileProcessor ( application ) . loadEmoji ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 885ab7a . . 19ce772 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 22 , 6 + 22 , 8 @ @ import android . support . v4 . app . Fragment ; 
 import android . support . v4 . content . ContextCompat ; 
 import android . support . v7 . app . ActionBar ; 
 import android . support . v7 . view . ActionMode ; 
 + import android . support . v7 . widget . LinearLayoutManager ; 
 + import android . support . v7 . widget . RecyclerView ; 
 import android . text . Editable ; 
 import android . text . Spannable ; 
 import android . text . TextWatcher ; 
 @ @ - 32 , 6 + 34 , 7 @ @ import android . view . MenuItem ; 
 import android . view . MotionEvent ; 
 import android . view . View ; 
 import android . view . animation . AlphaAnimation ; 
 + import android . view . animation . Animation ; 
 import android . view . animation . TranslateAnimation ; 
 import android . widget . AdapterView ; 
 import android . widget . FrameLayout ; 
 @ @ - 53 , 6 + 56 , 7 @ @ import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . ActorSystem ; 
 @ @ - 62 , 15 + 66 , 16 @ @ import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . ActorStyle ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . calls . CallActivity ; 
 import im . actor . sdk . controllers . conversation . mentions . MentionsAdapter ; 
 import im . actor . sdk . controllers . conversation . messages . AudioHolder ; 
 import im . actor . sdk . controllers . conversation . messages . MessagesFragment ; 
 + import im . actor . sdk . controllers . conversation . view . FastShareAdapter ; 
 import im . actor . sdk . controllers . fragment . settings . BaseActorChatActivity ; 
 import im . actor . sdk . core . audio . VoiceCaptureActor ; 
 import im . actor . sdk . intents . ActorIntent ; 
 import im . actor . sdk . util . Randoms ; 
 import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . util . images . GalleryScannerActor ; 
 import im . actor . sdk . view . avatar . AvatarView ; 
 import im . actor . sdk . controllers . conversation . view . TypingDrawable ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 @ @ - 78 , 7 + 83 , 6 @ @ import im . actor . sdk . view . markdown . AndroidMarkdown ; 
 import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 
 - import static im . actor . sdk . util . ViewUtils . expand ; 
 import static im . actor . sdk . util . ViewUtils . expandMentions ; 
 import static im . actor . sdk . util . ViewUtils . goneView ; 
 import static im . actor . sdk . util . ViewUtils . hideView ; 
 @ @ - 152 , 6 + 156 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private int slideStart ; 
 private TextView audioTimer ; 
 private boolean isAudioVisible ; 
 + private boolean isShareVisible ; 
 private int SLIDE _ LIMIT ; 
 ActorRef voiceRecordActor ; 
 private String audioFile ; 
 @ @ - 204 , 6 + 209 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private Intent intent ; 
 private boolean textEditing = false ; 
 private long currentEditRid ; 
 + private Animation . AnimationListener animationListener ; 
 
 public static Intent build ( Peer peer , boolean compose , Context context ) { 
 final Intent intent = new Intent ( context , ChatActivity . class ) ; 
 @ @ - 283 , 7 + 289 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 goneView ( quoteContainer ) ; 
 quoteText . setText ( " " ) ; 
 currentQuote = " " ; 
 - if ( textEditing ) { 
 + if ( textEditing ) { 
 messageEditText . setText ( " " ) ; 
 } 
 textEditing = false ; 
 @ @ - 301 , 10 + 307 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } ) ; 
 shareContainer = findViewById ( R . id . closeMenuLayout ) ; 
 - shareContainer . setOnClickListener ( new View . OnClickListener ( ) { 
 + shareContainer . setOnTouchListener ( new View . OnTouchListener ( ) { 
 @ Override 
 - public void onClick ( View v ) { 
 - hideShareMenu ( ) ; 
 + public boolean onTouch ( View v , MotionEvent event ) { 
 + hideShare ( ) ; 
 + return false ; 
 } 
 } ) ; 
 
 @ @ - 382 , 7 + 389 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 
 / / hide it 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 } 
 } ; 
 
 @ @ - 395 , 6 + 402 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; 
 handleIntent ( ) ; 
 
 + RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; 
 + FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; 
 + LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; 
 + fastShare . setAdapter ( fastShareAdapter ) ; 
 + fastShare . setLayoutManager ( layoutManager ) ; 
 
 } 
 
 @ @ - 434 , 13 + 446 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 handleIntent ( ) ; 
 } 
 
 - private void hideShareMenu ( ) { 
 - if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { 
 - / / hideView ( shareMenu ) ; 
 - expand ( shareMenu , 0 ) ; 
 - shareContainer . setVisibility ( View . GONE ) ; 
 - } 
 - } 
 + 
 
 @ Override 
 protected Fragment onCreateFragment ( ) { 
 @ @ - 831 , 13 + 837 , 13 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / } ) ; 
 / / popup . show ( ) ; 
 if ( shareMenuMaxHeight = = 0 ) { 
 - shareMenuMaxHeight = Screen . dp ( 180 ) ; 
 + shareMenuMaxHeight = Screen . dp ( 245 ) ; 
 } 
 if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 } else { 
 shareContainer . setVisibility ( View . VISIBLE ) ; 
 - expand ( shareMenu , shareMenuMaxHeight ) ; 
 + showShare ( ) ; 
 if ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ LANDSCAPE ) { 
 keyboardUtils . setImeVisibility ( messageEditText , false ) ; 
 } 
 @ @ - 982 , 7 + 988 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } 
 } ) ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 expandMentions ( mentionsList , 0 , mentionsList . getCount ( ) ) ; 
 } 
 
 @ @ - 1028 , 7 + 1034 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 quoteText . setText ( rawQuote ) ; 
 } 
 currentQuote = rawQuote ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; 
 showView ( quoteContainer ) ; 
 } 
 @ @ - 1195 , 7 + 1201 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; 
 quoteText . setText ( R . string . edit _ message ) ; 
 messageEditText . setText ( text ) ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 showView ( quoteContainer ) ; 
 
 } 
 @ @ - 1343 , 6 + 1349 , 60 @ @ public class ChatActivity extends ActorEditTextActivity { 
 
 } 
 
 + private boolean animationInProgress = false ; 
 + 
 + private void showShare ( ) { 
 + if ( animationInProgress ) { 
 + return ; 
 + } 
 + if ( animationListener = = null ) { 
 + animationListener = new Animation . AnimationListener ( ) { 
 + @ Override 
 + public void onAnimationStart ( Animation animation ) { 
 + animationInProgress = true ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationEnd ( Animation animation ) { 
 + animationInProgress = false ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationRepeat ( Animation animation ) { 
 + 
 + } 
 + } ; 
 + } 
 + 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , Screen . getHeight ( ) , 0 ) ; 
 + animation . setDuration ( 160 ) ; 
 + animation . setAnimationListener ( animationListener ) ; 
 + shareMenu . clearAnimation ( ) ; 
 + shareMenu . setAnimation ( animation ) ; 
 + shareMenu . animate ( ) ; 
 + shareMenu . setVisibility ( View . VISIBLE ) ; 
 + isShareVisible = true ; 
 + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( true ) ) ; 
 + } 
 + 
 + private void hideShare ( ) { 
 + if ( ! isShareVisible | | animationInProgress ) { 
 + return ; 
 + } 
 + isShareVisible = false ; 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , Screen . getHeight ( ) ) ; 
 + animation . setDuration ( 160 ) ; 
 + 
 + animation . setAnimationListener ( animationListener ) ; 
 + shareMenu . clearAnimation ( ) ; 
 + shareMenu . setAnimation ( animation ) ; 
 + shareMenu . animate ( ) ; 
 + shareMenu . setVisibility ( View . GONE ) ; 
 + shareContainer . setVisibility ( View . GONE ) ; 
 + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( false ) ) ; 
 + 
 + } 
 + 
 private void slideAudio ( int value ) { 
 ObjectAnimator oa = ObjectAnimator . ofFloat ( audioSlide , " translationX " , audioSlide . getX ( ) , - value ) ; 
 oa . setDuration ( 0 ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 new file mode 100644 
 index 0000000 . . a7cc631 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package im . actor . sdk . controllers . conversation . view ; 
 + 
 + import android . content . Context ; 
 + import android . net . Uri ; 
 + import android . support . v7 . widget . RecyclerView ; 
 + import android . view . LayoutInflater ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . widget . CheckBox ; 
 + import android . widget . CompoundButton ; 
 + import android . widget . FrameLayout ; 
 + 
 + import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; 
 + import com . facebook . drawee . view . SimpleDraweeView ; 
 + import com . facebook . imagepipeline . common . ResizeOptions ; 
 + import com . facebook . imagepipeline . request . ImageRequest ; 
 + import com . facebook . imagepipeline . request . ImageRequestBuilder ; 
 + 
 + import java . io . File ; 
 + import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 + import java . util . Set ; 
 + 
 + import im . actor . runtime . mvvm . Value ; 
 + import im . actor . runtime . mvvm . ValueChangedListener ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . util . Screen ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { 
 + 
 + ArrayList < String > imagesPath = new ArrayList < > ( ) ; 
 + Set < String > selected = new HashSet < > ( ) ; 
 + Context context ; 
 + 
 + public FastShareAdapter ( Context context ) { 
 + this . context = context ; 
 + messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { 
 + @ Override 
 + public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { 
 + imagesPath . clear ( ) ; 
 + imagesPath . addAll ( val ) ; 
 + notifyDataSetChanged ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + protected View inflate ( int id , ViewGroup viewGroup ) { 
 + return LayoutInflater 
 + . from ( context ) 
 + . inflate ( id , viewGroup , false ) ; 
 + } 
 + 
 + 
 + @ Override 
 + public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { 
 + return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onBindViewHolder ( FastShareVH holder , int position ) { 
 + holder . bind ( imagesPath . get ( position ) ) ; 
 + } 
 + 
 + @ Override 
 + public int getItemCount ( ) { 
 + return imagesPath . size ( ) ; 
 + } 
 + 
 + public class FastShareVH extends RecyclerView . ViewHolder { 
 + SimpleDraweeView v ; 
 + CheckBox chb ; 
 + String data ; 
 + 
 + public FastShareVH ( View itemView ) { 
 + super ( itemView ) ; 
 + v = ( SimpleDraweeView ) itemView . findViewById ( R . id . image ) ; 
 + chb = ( CheckBox ) itemView . findViewById ( R . id . check ) ; 
 + int size = context . getResources ( ) . getDimensionPixelSize ( R . dimen . share _ btn _ size ) ; 
 + v . setLayoutParams ( new FrameLayout . LayoutParams ( size , size ) ) ; 
 + chb . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { 
 + @ Override 
 + public void onCheckedChanged ( CompoundButton buttonView , boolean isChecked ) { 
 + if ( isChecked & & data ! = null ) { 
 + selected . add ( data ) ; 
 + } else { 
 + selected . remove ( data ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 + public void bind ( String path ) { 
 + data = path ; 
 + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( path ) ) ) 
 + . setResizeOptions ( new ResizeOptions ( v . getLayoutParams ( ) . width , 
 + v . getLayoutParams ( ) . height ) ) 
 + . build ( ) ; 
 + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) 
 + . setOldController ( v . getController ( ) ) 
 + . setImageRequest ( request ) 
 + . build ( ) ; 
 + v . setController ( controller ) ; 
 + chb . setChecked ( selected . contains ( data ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java 
 new file mode 100644 
 index 0000000 . . e2dcc9b 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java 
 @ @ - 0 , 0 + 1 , 171 @ @ 
 + package im . actor . sdk . util . images ; 
 + 
 + import android . content . BroadcastReceiver ; 
 + import android . content . Context ; 
 + import android . content . Intent ; 
 + import android . content . IntentFilter ; 
 + import android . database . Cursor ; 
 + import android . graphics . Bitmap ; 
 + import android . graphics . BitmapFactory ; 
 + import android . net . Uri ; 
 + import android . provider . MediaStore ; 
 + 
 + import java . io . File ; 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . utils . ImageHelper ; 
 + import im . actor . core . viewmodel . GalleryVM ; 
 + import im . actor . runtime . actors . Actor ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class GalleryScannerActor extends Actor { 
 + 
 + Context context ; 
 + Uri uri ; 
 + Cursor cursor ; 
 + int offset = 0 ; 
 + int column _ index _ data , column _ index _ folder _ name , column _ index _ date ; 
 + 
 + ArrayList < String > listOfAllImages = new ArrayList < String > ( ) ; 
 + ArrayList < String > newMedia = new ArrayList < > ( ) ; 
 + 
 + String absolutePathOfImage = null ; 
 + GalleryVM galleryVM ; 
 + Uri lastScan ; 
 + 
 + private static final int SCAN _ COUNT = 10 ; 
 + 
 + ArrayList < String > loaded = new ArrayList < > ( ) ; 
 + private boolean visible = false ; 
 + private boolean scanned = false ; 
 + private String [ ] projection ; 
 + 
 + public GalleryScannerActor ( Context context ) { 
 + this . context = context ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + galleryVM = messenger ( ) . getGalleryVM ( ) ; 
 + uri = android . provider . MediaStore . Images . Media . EXTERNAL _ CONTENT _ URI ; 
 + 
 + self ( ) . send ( new InitScan ( ) ) ; 
 + } 
 + 
 + public void initScan ( ) { 
 + projection = new String [ ] { MediaStore . MediaColumns . DATA , 
 + MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME , 
 + MediaStore . Images . Media . DATE _ MODIFIED } ; 
 + 
 + cursor = getQuery ( ) ; 
 + 
 + if ( cursor ! = null & & cursor . getCount ( ) > 0 ) { 
 + column _ index _ data = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATA ) ; 
 + column _ index _ date = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATE _ MODIFIED ) ; 
 + column _ index _ folder _ name = cursor 
 + . getColumnIndexOrThrow ( MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME ) ; 
 + 
 + 
 + self ( ) . send ( new Scan ( ) ) ; 
 + } else { 
 + schedule ( new InitScan ( ) , 1000 ) ; 
 + } 
 + 
 + } 
 + 
 + public Cursor getQuery ( ) { 
 + return context . getContentResolver ( ) . query ( uri , projection , null , 
 + null , MediaStore . MediaColumns . DATE _ MODIFIED + " DESC " ) ; 
 + } 
 + 
 + private void scan ( ) { 
 + 
 + 
 + int i = 0 ; 
 + while ( offset + i + + < offset + SCAN _ COUNT & & cursor . moveToNext ( ) ) { 
 + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; 
 + 
 + listOfAllImages . add ( absolutePathOfImage ) ; 
 + } 
 + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; 
 + offset + = i ; 
 + if ( offset < cursor . getCount ( ) ) { 
 + self ( ) . send ( new Scan ( ) ) ; 
 + } else { 
 + lastScan = MediaStore . getMediaScannerUri ( ) ; 
 + scanned = true ; 
 + schedule ( new CheckNew ( ) , 1000 ) ; 
 + } 
 + } 
 + 
 + private void checkNew ( ) { 
 + cursor = getQuery ( ) ; 
 + newMedia . clear ( ) ; 
 + while ( cursor ! = null & & cursor . moveToNext ( ) ) { 
 + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; 
 + if ( ! listOfAllImages . contains ( absolutePathOfImage ) ) { 
 + Bitmap bitmap = ImageHelper . loadOptimizedHQ ( absolutePathOfImage ) ; 
 + if ( bitmap ! = null ) { 
 + bitmap . recycle ( ) ; 
 + newMedia . add ( absolutePathOfImage ) ; 
 + } else { 
 + break ; 
 + } 
 + } else { 
 + break ; 
 + } 
 + } 
 + if ( newMedia . size ( ) > 0 ) { 
 + listOfAllImages . addAll ( 0 , newMedia ) ; 
 + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; 
 + } 
 + if ( visible ) { 
 + schedule ( new CheckNew ( ) , 1000 ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof Scan ) { 
 + scan ( ) ; 
 + } else if ( message instanceof InitScan ) { 
 + initScan ( ) ; 
 + } else if ( message instanceof CheckNew ) { 
 + checkNew ( ) ; 
 + } else if ( message instanceof Visible ) { 
 + if ( ( ( Visible ) message ) . isVisible ( ) ) { 
 + visible = true ; 
 + if ( scanned ) { 
 + self ( ) . send ( new CheckNew ( ) ) ; 
 + } 
 + } else { 
 + visible = false ; 
 + } 
 + } 
 + } 
 + 
 + private static class Scan { 
 + 
 + } 
 + 
 + private static class InitScan { 
 + 
 + } 
 + 
 + private static class CheckNew { 
 + 
 + } 
 + 
 + public static class Visible { 
 + boolean visible ; 
 + 
 + public Visible ( boolean visible ) { 
 + this . visible = visible ; 
 + } 
 + 
 + public boolean isVisible ( ) { 
 + return visible ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 index 68cf866 . . 029cf8f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 @ @ - 81 , 11 + 81 , 12 @ @ 
 
 < LinearLayout 
 android : layout _ width = " match _ parent " 
 - android : layout _ height = " 0dp " 
 + android : layout _ height = " 245dp " 
 android : layout _ above = " @ + id / fl _ send _ panel " 
 android : id = " @ + id / share _ container " 
 android : visibility = " invisible " 
 android : orientation = " vertical " 
 + android : gravity = " bottom " 
 android : background = " @ android : color / transparent " > 
 
 < ImageView 
 @ @ - 96 , 7 + 97 , 7 @ @ 
 
 < TableLayout 
 android : id = " @ + id / share _ menu " 
 - android : paddingTop = " 20dp " 
 + android : paddingTop = " 5dp " 
 android : layout _ gravity = " bottom " 
 android : layout _ width = " wrap _ content " 
 android : layout _ height = " wrap _ content " 
 @ @ - 105 , 6 + 106 , 15 @ @ 
 
 < TableRow > 
 
 + < android . support . v7 . widget . RecyclerView 
 + android : id = " @ + id / fast _ share " 
 + android : layout _ width = " 0dp " 
 + android : layout _ weight = " 1 " 
 + android : layout _ height = " @ dimen / fast _ share _ size " / > 
 + < / TableRow > 
 + 
 + < TableRow > 
 + 
 < LinearLayout 
 android : gravity = " center _ horizontal " 
 android : layout _ width = " wrap _ content " 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml 
 new file mode 100644 
 index 0000000 . . 4814076 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + android : padding = " 5dp " > 
 + 
 + < com . facebook . drawee . view . SimpleDraweeView 
 + android : id = " @ + id / image " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " / > 
 + 
 + < CheckBox 
 + android : layout _ gravity = " top | right " 
 + 
 + android : id = " @ + id / check " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " / > 
 + 
 + < / FrameLayout > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 index 6f29efa . . e2e84c6 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 @ @ - 24 , 6 + 24 , 7 @ @ 
 < dimen name = " tour _ card _ message " > 14sp < / dimen > 
 < dimen name = " keyboard _ height " > 250dp < / dimen > 
 < dimen name = " share _ btn _ size " > 60dp < / dimen > 
 + < dimen name = " fast _ share _ size " > 70dp < / dimen > 
 
 < dimen name = " call _ btn _ size " > 40dp < / dimen > 
 < dimen name = " end _ call _ btn _ size " > 70dp < / dimen > 
 diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 index 8fd7d10 . . 27391fb 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 @ @ - 40 , 8 + 40 , 11 @ @ import im . actor . core . utils . IOUtils ; 
 import im . actor . core . utils . ImageHelper ; 
 import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . core . viewmodel . GalleryVM ; 
 + import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . Props ; 
 import im . actor . runtime . android . AndroidContext ; 
 import im . actor . runtime . bser . BserCreator ; 
 @ @ - 51 , 6 + 54 , 7 @ @ import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 import im . actor . runtime . storage . ListEngineItem ; 
 + import im . actor . sdk . util . images . GalleryScannerActor ; 
 import me . leolin . shortcutbadger . ShortcutBadger ; 
 
 import static im . actor . runtime . actors . ActorSystem . system ; 
 @ @ - 68 , 6 + 72 , 8 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 private HashMap < Peer , BindedDisplayList < Message > > messagesLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; 
 private HashMap < Peer , BindedDisplayList < Message > > docsLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; 
 private HashMap < String , BindedDisplayList > customLists = new HashMap < String , BindedDisplayList > ( ) ; 
 + private GalleryVM galleryVM ; 
 + private ActorRef galleryScannerActor ; 
 
 public AndroidMessenger ( Context context , im . actor . core . Configuration configuration ) { 
 super ( configuration ) ; 
 @ @ - 482 , 6 + 488 , 23 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 return customLists . get ( key ) ; 
 } 
 
 + public GalleryVM getGalleryVM ( ) { 
 + if ( galleryVM = = null ) { 
 + galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public Actor create ( ) { 
 + return new GalleryScannerActor ( AndroidContext . getContext ( ) ) ; 
 + } 
 + } ) , " actor / gallery _ scanner " ) ; 
 + galleryVM = new GalleryVM ( ) ; 
 + } 
 + return galleryVM ; 
 + } 
 + 
 + public ActorRef getGalleryScannerActor ( ) { 
 + return galleryScannerActor ; 
 + } 
 + 
 public EventBus getEvents ( ) { 
 return modules . getEvents ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java 
 new file mode 100644 
 index 0000000 . . 9a3eb07 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + package im . actor . core . viewmodel ; 
 + 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . entity . StickerPack ; 
 + import im . actor . runtime . mvvm . ValueModel ; 
 + 
 + public class GalleryVM { 
 + 
 + private ValueModel < ArrayList < String > > galleryMediaPath ; 
 + 
 + public GalleryVM ( ) { 
 + galleryMediaPath = new ValueModel < > ( " gallery . photo " , new ArrayList < String > ( ) ) ; 
 + } 
 + 
 + public ValueModel < ArrayList < String > > getGalleryMediaPath ( ) { 
 + return galleryMediaPath ; 
 + } 
 + }
