BLEU SCORE: 0.07495553473355841

TEST MSG: perf ( server : frontend ) : fixed performance problem of kuznechik
GENERATED MSG: feat ( runtime ) : Kuznechik encryption optimization

TEST DIFF (one line): diff - - git a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java < nl > index a1a07bb . . b91c899 100644 < nl > - - - a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java < nl > + + + b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java < nl > @ @ - 5 , 8 + 5 , 10 @ @ package im . actor . crypto . primitives . kuznechik ; < nl > * < p / > < nl > * Ported by Steven Kite ( steve @ actor . im ) from < nl > * https : / / github . com / mjosaarinen / kuznechik / blob / master / kuznechik _ 8bit . c < nl > + * Multiplication optimization from < nl > + * http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html < nl > * / < nl > - class KuznechikMath { < nl > + public class KuznechikMath { < nl > < nl > / / poly multiplication mod p ( x ) = x ^ 8 + x ^ 7 + x ^ 6 + x + 1 < nl > / / totally not constant time < nl > @ @ - 33 , 6 + 35 , 15 @ @ class KuznechikMath { < nl > return z ; < nl > } < nl > < nl > + / / Fast implementation of multiplication in GF ( 2 ^ 8 ) on x ^ 8 + x ^ 7 + x ^ 6 + x + 1 < nl > + / / Implemented with < nl > + public static byte kuz _ mul _ gf256 _ fast ( byte a , byte b ) { < nl > + if ( a = = 0 | | b = = 0 ) return 0 ; < nl > + int t = ( KuznechikTables . gf256 _ L [ ( a & 0xff ) ] & 0xff ) + ( KuznechikTables . gf256 _ L [ ( b & 0xff ) ] & 0xff ) ; < nl > + if ( t > 255 ) t = t - 255 ; < nl > + return KuznechikTables . gf256 _ E [ ( t & 0xff ) ] ; < nl > + } < nl > + < nl > / / linear operation l < nl > / / static void kuz _ l ( w128 _ t * w ) < nl > public static void kuz _ l ( Kuz128 w ) { < nl > @ @ - 46 , 7 + 57 , 7 @ @ class KuznechikMath { < nl > / / w - > b [ i + 1 ] = w - > b [ i ] ; < nl > w . getB ( ) [ i + 1 ] = w . getB ( ) [ i ] ; < nl > / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; < nl > - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > } < nl > w . getB ( ) [ 0 ] = x ; < nl > } < nl > @ @ - 67 , 7 + 78 , 7 @ @ class KuznechikMath { < nl > w . getB ( ) [ i ] = w . getB ( ) [ i + 1 ] ; < nl > < nl > / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; < nl > - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > } < nl > < nl > / / w - > b [ 15 ] = x ; < nl > diff - - git a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java < nl > index f42a4a8 . . d9ab717 100644 < nl > - - - a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java < nl > + + + b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java < nl > @ @ - 84 , 4 + 84 , 44 @ @ class KuznechikTables { < nl > ( byte ) 0x94 , ( byte ) 0x20 , ( byte ) 0x85 , ( byte ) 0x10 , ( byte ) 0xC2 , ( byte ) 0xC0 , ( byte ) 0x01 , ( byte ) 0xFB , < nl > ( byte ) 0x01 , ( byte ) 0xC0 , ( byte ) 0xC2 , ( byte ) 0x10 , ( byte ) 0x85 , ( byte ) 0x20 , ( byte ) 0x94 , ( byte ) 0x01 < nl > } ; < nl > + < nl > + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html < nl > + public static final byte [ ] gf256 _ E = new byte [ ] { < nl > + ( byte ) 0x01 , ( byte ) 0x03 , ( byte ) 0x05 , ( byte ) 0x0f , ( byte ) 0x11 , ( byte ) 0x33 , ( byte ) 0x55 , ( byte ) 0xff , ( byte ) 0xc2 , ( byte ) 0x85 , ( byte ) 0x4c , ( byte ) 0xd4 , ( byte ) 0xbf , ( byte ) 0x02 , ( byte ) 0x06 , ( byte ) 0x0a , < nl > + ( byte ) 0x1e , ( byte ) 0x22 , ( byte ) 0x66 , ( byte ) 0xaa , ( byte ) 0x3d , ( byte ) 0x47 , ( byte ) 0xc9 , ( byte ) 0x98 , ( byte ) 0x6b , ( byte ) 0xbd , ( byte ) 0x04 , ( byte ) 0x0c , ( byte ) 0x14 , ( byte ) 0x3c , ( byte ) 0x44 , ( byte ) 0xcc , < nl > + ( byte ) 0x97 , ( byte ) 0x7a , ( byte ) 0x8e , ( byte ) 0x51 , ( byte ) 0xf3 , ( byte ) 0xd6 , ( byte ) 0xb9 , ( byte ) 0x08 , ( byte ) 0x18 , ( byte ) 0x28 , ( byte ) 0x78 , ( byte ) 0x88 , ( byte ) 0x5b , ( byte ) 0xed , ( byte ) 0xf4 , ( byte ) 0xdf , < nl > + ( byte ) 0xa2 , ( byte ) 0x25 , ( byte ) 0x6f , ( byte ) 0xb1 , ( byte ) 0x10 , ( byte ) 0x30 , ( byte ) 0x50 , ( byte ) 0xf0 , ( byte ) 0xd3 , ( byte ) 0xb6 , ( byte ) 0x19 , ( byte ) 0x2b , ( byte ) 0x7d , ( byte ) 0x87 , ( byte ) 0x4a , ( byte ) 0xde , < nl > + ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x60 , ( byte ) 0xa0 , ( byte ) 0x23 , ( byte ) 0x65 , ( byte ) 0xaf , ( byte ) 0x32 , ( byte ) 0x56 , ( byte ) 0xfa , ( byte ) 0xcd , ( byte ) 0x94 , ( byte ) 0x7f , ( byte ) 0x81 , ( byte ) 0x40 , ( byte ) 0xc0 , < nl > + ( byte ) 0x83 , ( byte ) 0x46 , ( byte ) 0xca , ( byte ) 0x9d , ( byte ) 0x64 , ( byte ) 0xac , ( byte ) 0x37 , ( byte ) 0x59 , ( byte ) 0xeb , ( byte ) 0xfe , ( byte ) 0xc1 , ( byte ) 0x80 , ( byte ) 0x43 , ( byte ) 0xc5 , ( byte ) 0x8c , ( byte ) 0x57 , < nl > + ( byte ) 0xf9 , ( byte ) 0xc8 , ( byte ) 0x9b , ( byte ) 0x6e , ( byte ) 0xb2 , ( byte ) 0x15 , ( byte ) 0x3f , ( byte ) 0x41 , ( byte ) 0xc3 , ( byte ) 0x86 , ( byte ) 0x49 , ( byte ) 0xdb , ( byte ) 0xae , ( byte ) 0x31 , ( byte ) 0x53 , ( byte ) 0xf5 , < nl > + ( byte ) 0xdc , ( byte ) 0xa7 , ( byte ) 0x2a , ( byte ) 0x7e , ( byte ) 0x82 , ( byte ) 0x45 , ( byte ) 0xcf , ( byte ) 0x92 , ( byte ) 0x75 , ( byte ) 0x9f , ( byte ) 0x62 , ( byte ) 0xa6 , ( byte ) 0x29 , ( byte ) 0x7b , ( byte ) 0x8d , ( byte ) 0x54 , < nl > + ( byte ) 0xfc , ( byte ) 0xc7 , ( byte ) 0x8a , ( byte ) 0x5d , ( byte ) 0xe7 , ( byte ) 0xea , ( byte ) 0xfd , ( byte ) 0xc4 , ( byte ) 0x8f , ( byte ) 0x52 , ( byte ) 0xf6 , ( byte ) 0xd9 , ( byte ) 0xa8 , ( byte ) 0x3b , ( byte ) 0x4d , ( byte ) 0xd7 , < nl > + ( byte ) 0xba , ( byte ) 0x0d , ( byte ) 0x17 , ( byte ) 0x39 , ( byte ) 0x4b , ( byte ) 0xdd , ( byte ) 0xa4 , ( byte ) 0x2f , ( byte ) 0x71 , ( byte ) 0x93 , ( byte ) 0x76 , ( byte ) 0x9a , ( byte ) 0x6d , ( byte ) 0xb7 , ( byte ) 0x1a , ( byte ) 0x2e , < nl > + ( byte ) 0x72 , ( byte ) 0x96 , ( byte ) 0x79 , ( byte ) 0x8b , ( byte ) 0x5e , ( byte ) 0xe2 , ( byte ) 0xe5 , ( byte ) 0xec , ( byte ) 0xf7 , ( byte ) 0xda , ( byte ) 0xad , ( byte ) 0x34 , ( byte ) 0x5c , ( byte ) 0xe4 , ( byte ) 0xef , ( byte ) 0xf2 , < nl > + ( byte ) 0xd5 , ( byte ) 0xbc , ( byte ) 0x07 , ( byte ) 0x09 , ( byte ) 0x1b , ( byte ) 0x2d , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x68 , ( byte ) 0xb8 , ( byte ) 0x0b , ( byte ) 0x1d , ( byte ) 0x27 , ( byte ) 0x69 , ( byte ) 0xbb , ( byte ) 0x0e , < nl > + ( byte ) 0x12 , ( byte ) 0x36 , ( byte ) 0x5a , ( byte ) 0xee , ( byte ) 0xf1 , ( byte ) 0xd0 , ( byte ) 0xb3 , ( byte ) 0x16 , ( byte ) 0x3a , ( byte ) 0x4e , ( byte ) 0xd2 , ( byte ) 0xb5 , ( byte ) 0x1c , ( byte ) 0x24 , ( byte ) 0x6c , ( byte ) 0xb4 , < nl > + ( byte ) 0x1f , ( byte ) 0x21 , ( byte ) 0x63 , ( byte ) 0xa5 , ( byte ) 0x2c , ( byte ) 0x74 , ( byte ) 0x9c , ( byte ) 0x67 , ( byte ) 0xa9 , ( byte ) 0x38 , ( byte ) 0x48 , ( byte ) 0xd8 , ( byte ) 0xab , ( byte ) 0x3e , ( byte ) 0x42 , ( byte ) 0xc6 , < nl > + ( byte ) 0x89 , ( byte ) 0x58 , ( byte ) 0xe8 , ( byte ) 0xfb , ( byte ) 0xce , ( byte ) 0x91 , ( byte ) 0x70 , ( byte ) 0x90 , ( byte ) 0x73 , ( byte ) 0x95 , ( byte ) 0x7c , ( byte ) 0x84 , ( byte ) 0x4f , ( byte ) 0xd1 , ( byte ) 0xb0 , ( byte ) 0x13 , < nl > + ( byte ) 0x35 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0xe0 , ( byte ) 0xe3 , ( byte ) 0xe6 , ( byte ) 0xe9 , ( byte ) 0xf8 , ( byte ) 0xcb , ( byte ) 0x9e , ( byte ) 0x61 , ( byte ) 0xa3 , ( byte ) 0x26 , ( byte ) 0x6a , ( byte ) 0xbe , ( byte ) 0x01 , < nl > + } ; < nl > + < nl > + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html < nl > + public static final byte [ ] gf256 _ L = new byte [ ] { < nl > + ( byte ) 0x00 , ( byte ) 0x00 , ( byte ) 0x0d , ( byte ) 0x01 , ( byte ) 0x1a , ( byte ) 0x02 , ( byte ) 0x0e , ( byte ) 0xb2 , ( byte ) 0x27 , ( byte ) 0xb3 , ( byte ) 0x0f , ( byte ) 0xba , ( byte ) 0x1b , ( byte ) 0x91 , ( byte ) 0xbf , ( byte ) 0x03 , < nl > + ( byte ) 0x34 , ( byte ) 0x04 , ( byte ) 0xc0 , ( byte ) 0xef , ( byte ) 0x1c , ( byte ) 0x65 , ( byte ) 0xc7 , ( byte ) 0x92 , ( byte ) 0x28 , ( byte ) 0x3a , ( byte ) 0x9e , ( byte ) 0xb4 , ( byte ) 0xcc , ( byte ) 0xbb , ( byte ) 0x10 , ( byte ) 0xd0 , < nl > + ( byte ) 0x41 , ( byte ) 0xd1 , ( byte ) 0x11 , ( byte ) 0x44 , ( byte ) 0xcd , ( byte ) 0x31 , ( byte ) 0xfc , ( byte ) 0xbc , ( byte ) 0x29 , ( byte ) 0x7c , ( byte ) 0x72 , ( byte ) 0x3b , ( byte ) 0xd4 , ( byte ) 0xb5 , ( byte ) 0x9f , ( byte ) 0x97 , < nl > + ( byte ) 0x35 , ( byte ) 0x6d , ( byte ) 0x47 , ( byte ) 0x05 , ( byte ) 0xab , ( byte ) 0xf0 , ( byte ) 0xc1 , ( byte ) 0x56 , ( byte ) 0xd9 , ( byte ) 0x93 , ( byte ) 0xc8 , ( byte ) 0x8d , ( byte ) 0x1d , ( byte ) 0x14 , ( byte ) 0xdd , ( byte ) 0x66 , < nl > + ( byte ) 0x4e , ( byte ) 0x67 , ( byte ) 0xde , ( byte ) 0x5c , ( byte ) 0x1e , ( byte ) 0x75 , ( byte ) 0x51 , ( byte ) 0x15 , ( byte ) 0xda , ( byte ) 0x6a , ( byte ) 0x3e , ( byte ) 0x94 , ( byte ) 0x0a , ( byte ) 0x8e , ( byte ) 0xc9 , ( byte ) 0xec , < nl > + ( byte ) 0x36 , ( byte ) 0x23 , ( byte ) 0x89 , ( byte ) 0x6e , ( byte ) 0x7f , ( byte ) 0x06 , ( byte ) 0x48 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0x57 , ( byte ) 0xc2 , ( byte ) 0x2c , ( byte ) 0xac , ( byte ) 0x83 , ( byte ) 0xa4 , ( byte ) 0xf1 , < nl > + ( byte ) 0x42 , ( byte ) 0xfa , ( byte ) 0x7a , ( byte ) 0xd2 , ( byte ) 0x54 , ( byte ) 0x45 , ( byte ) 0x12 , ( byte ) 0xd7 , ( byte ) 0xb8 , ( byte ) 0xbd , ( byte ) 0xfd , ( byte ) 0x18 , ( byte ) 0xce , ( byte ) 0x9c , ( byte ) 0x63 , ( byte ) 0x32 , < nl > + ( byte ) 0xe6 , ( byte ) 0x98 , ( byte ) 0xa0 , ( byte ) 0xe8 , ( byte ) 0xd5 , ( byte ) 0x78 , ( byte ) 0x9a , ( byte ) 0xb6 , ( byte ) 0x2a , ( byte ) 0xa2 , ( byte ) 0x21 , ( byte ) 0x7d , ( byte ) 0xea , ( byte ) 0x3c , ( byte ) 0x73 , ( byte ) 0x4c , < nl > + ( byte ) 0x5b , ( byte ) 0x4d , ( byte ) 0x74 , ( byte ) 0x50 , ( byte ) 0xeb , ( byte ) 0x09 , ( byte ) 0x69 , ( byte ) 0x3d , ( byte ) 0x2b , ( byte ) 0xe0 , ( byte ) 0x82 , ( byte ) 0xa3 , ( byte ) 0x5e , ( byte ) 0x7e , ( byte ) 0x22 , ( byte ) 0x88 , < nl > + ( byte ) 0xe7 , ( byte ) 0xe5 , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x4b , ( byte ) 0xe9 , ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x17 , ( byte ) 0xb7 , ( byte ) 0x9b , ( byte ) 0x62 , ( byte ) 0xd6 , ( byte ) 0x53 , ( byte ) 0xf9 , ( byte ) 0x79 , < nl > + ( byte ) 0x43 , ( byte ) 0x40 , ( byte ) 0x30 , ( byte ) 0xfb , ( byte ) 0x96 , ( byte ) 0xd3 , ( byte ) 0x7b , ( byte ) 0x71 , ( byte ) 0x8c , ( byte ) 0xd8 , ( byte ) 0x13 , ( byte ) 0xdc , ( byte ) 0x55 , ( byte ) 0xaa , ( byte ) 0x6c , ( byte ) 0x46 , < nl > + ( byte ) 0xee , ( byte ) 0x33 , ( byte ) 0x64 , ( byte ) 0xc6 , ( byte ) 0xcf , ( byte ) 0xcb , ( byte ) 0x39 , ( byte ) 0x9d , ( byte ) 0xb9 , ( byte ) 0x26 , ( byte ) 0x90 , ( byte ) 0xbe , ( byte ) 0xb1 , ( byte ) 0x19 , ( byte ) 0xfe , ( byte ) 0x0c , < nl > + ( byte ) 0x4f , ( byte ) 0x5a , ( byte ) 0x08 , ( byte ) 0x68 , ( byte ) 0x87 , ( byte ) 0x5d , ( byte ) 0xdf , ( byte ) 0x81 , ( byte ) 0x61 , ( byte ) 0x16 , ( byte ) 0x52 , ( byte ) 0xf8 , ( byte ) 0x1f , ( byte ) 0x4a , ( byte ) 0xe4 , ( byte ) 0x76 , < nl > + ( byte ) 0xc5 , ( byte ) 0xed , ( byte ) 0xca , ( byte ) 0x38 , ( byte ) 0x0b , ( byte ) 0xb0 , ( byte ) 0x25 , ( byte ) 0x8f , ( byte ) 0xdb , ( byte ) 0x8b , ( byte ) 0xa9 , ( byte ) 0x6b , ( byte ) 0x70 , ( byte ) 0x95 , ( byte ) 0x3f , ( byte ) 0x2f , < nl > + ( byte ) 0xf3 , ( byte ) 0xf2 , ( byte ) 0xa5 , ( byte ) 0xf4 , ( byte ) 0xad , ( byte ) 0xa6 , ( byte ) 0xf5 , ( byte ) 0x84 , ( byte ) 0xe2 , ( byte ) 0xf6 , ( byte ) 0x85 , ( byte ) 0x58 , ( byte ) 0xa7 , ( byte ) 0x2d , ( byte ) 0xc3 , ( byte ) 0xae , < nl > + ( byte ) 0x37 , ( byte ) 0xc4 , ( byte ) 0xaf , ( byte ) 0x24 , ( byte ) 0x2e , ( byte ) 0x6f , ( byte ) 0x8a , ( byte ) 0xa8 , ( byte ) 0xf7 , ( byte ) 0x60 , ( byte ) 0x49 , ( byte ) 0xe3 , ( byte ) 0x80 , ( byte ) 0x86 , ( byte ) 0x59 , ( byte ) 0x07 , < nl > + } ; < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java < nl > index d8db3d9 . . d3534d8 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java < nl > @ @ - 5 , 6 + 5 , 8 @ @ package im . actor . runtime . crypto . primitives . kuznechik ; < nl > * < p / > < nl > * Ported by Steven Kite ( steve @ actor . im ) from < nl > * https : / / github . com / mjosaarinen / kuznechik / blob / master / kuznechik _ 8bit . c < nl > + * Multiplication optimization from < nl > + * http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html < nl > * / < nl > class KuznechikMath { < nl > < nl > @ @ - 33 , 6 + 35 , 15 @ @ class KuznechikMath { < nl > return z ; < nl > } < nl > < nl > + / / Fast implementation of multiplication in GF ( 2 ^ 8 ) on x ^ 8 + x ^ 7 + x ^ 6 + x + 1 < nl > + / / Implemented with < nl > + public static byte kuz _ mul _ gf256 _ fast ( byte a , byte b ) { < nl > + if ( a = = 0 | | b = = 0 ) return 0 ; < nl > + int t = ( KuznechikTables . gf256 _ L [ ( a & 0xff ) ] & 0xff ) + ( KuznechikTables . gf256 _ L [ ( b & 0xff ) ] & 0xff ) ; < nl > + if ( t > 255 ) t = t - 255 ; < nl > + return KuznechikTables . gf256 _ E [ ( t & 0xff ) ] ; < nl > + } < nl > + < nl > / / linear operation l < nl > / / static void kuz _ l ( w128 _ t * w ) < nl > public static void kuz _ l ( Kuz128 w ) { < nl > @ @ - 46 , 7 + 57 , 7 @ @ class KuznechikMath { < nl > / / w - > b [ i + 1 ] = w - > b [ i ] ; < nl > w . getB ( ) [ i + 1 ] = w . getB ( ) [ i ] ; < nl > / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; < nl > - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > } < nl > w . getB ( ) [ 0 ] = x ; < nl > } < nl > @ @ - 67 , 7 + 78 , 7 @ @ class KuznechikMath { < nl > w . getB ( ) [ i ] = w . getB ( ) [ i + 1 ] ; < nl > < nl > / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; < nl > - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; < nl > } < nl > < nl > / / w - > b [ 15 ] = x ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java < nl > index e81d354 . . ad7a425 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java < nl > @ @ - 2 , 7 + 2 , 7 @ @ package im . actor . runtime . crypto . primitives . kuznechik ; < nl > < nl > / * * < nl > * Lookup tables for Kuznechik encryption < nl > - * < p / > < nl > + * < p > < nl > * Ported by Steven Kite ( steve @ actor . im ) from < nl > * https : / / github . com / mjosaarinen / kuznechik / blob / master / kuznechik _ 8bit . c < nl > * / < nl > @ @ - 84 , 4 + 84 , 44 @ @ class KuznechikTables { < nl > ( byte ) 0x94 , ( byte ) 0x20 , ( byte ) 0x85 , ( byte ) 0x10 , ( byte ) 0xC2 , ( byte ) 0xC0 , ( byte ) 0x01 , ( byte ) 0xFB , < nl > ( byte ) 0x01 , ( byte ) 0xC0 , ( byte ) 0xC2 , ( byte ) 0x10 , ( byte ) 0x85 , ( byte ) 0x20 , ( byte ) 0x94 , ( byte ) 0x01 < nl > } ; < nl > + < nl > + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html < nl > + public static final byte [ ] gf256 _ E = new byte [ ] { < nl > + ( byte ) 0x01 , ( byte ) 0x03 , ( byte ) 0x05 , ( byte ) 0x0f , ( byte ) 0x11 , ( byte ) 0x33 , ( byte ) 0x55 , ( byte ) 0xff , ( byte ) 0xc2 , ( byte ) 0x85 , ( byte ) 0x4c , ( byte ) 0xd4 , ( byte ) 0xbf , ( byte ) 0x02 , ( byte ) 0x06 , ( byte ) 0x0a , < nl > + ( byte ) 0x1e , ( byte ) 0x22 , ( byte ) 0x66 , ( byte ) 0xaa , ( byte ) 0x3d , ( byte ) 0x47 , ( byte ) 0xc9 , ( byte ) 0x98 , ( byte ) 0x6b , ( byte ) 0xbd , ( byte ) 0x04 , ( byte ) 0x0c , ( byte ) 0x14 , ( byte ) 0x3c , ( byte ) 0x44 , ( byte ) 0xcc , < nl > + ( byte ) 0x97 , ( byte ) 0x7a , ( byte ) 0x8e , ( byte ) 0x51 , ( byte ) 0xf3 , ( byte ) 0xd6 , ( byte ) 0xb9 , ( byte ) 0x08 , ( byte ) 0x18 , ( byte ) 0x28 , ( byte ) 0x78 , ( byte ) 0x88 , ( byte ) 0x5b , ( byte ) 0xed , ( byte ) 0xf4 , ( byte ) 0xdf , < nl > + ( byte ) 0xa2 , ( byte ) 0x25 , ( byte ) 0x6f , ( byte ) 0xb1 , ( byte ) 0x10 , ( byte ) 0x30 , ( byte ) 0x50 , ( byte ) 0xf0 , ( byte ) 0xd3 , ( byte ) 0xb6 , ( byte ) 0x19 , ( byte ) 0x2b , ( byte ) 0x7d , ( byte ) 0x87 , ( byte ) 0x4a , ( byte ) 0xde , < nl > + ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x60 , ( byte ) 0xa0 , ( byte ) 0x23 , ( byte ) 0x65 , ( byte ) 0xaf , ( byte ) 0x32 , ( byte ) 0x56 , ( byte ) 0xfa , ( byte ) 0xcd , ( byte ) 0x94 , ( byte ) 0x7f , ( byte ) 0x81 , ( byte ) 0x40 , ( byte ) 0xc0 , < nl > + ( byte ) 0x83 , ( byte ) 0x46 , ( byte ) 0xca , ( byte ) 0x9d , ( byte ) 0x64 , ( byte ) 0xac , ( byte ) 0x37 , ( byte ) 0x59 , ( byte ) 0xeb , ( byte ) 0xfe , ( byte ) 0xc1 , ( byte ) 0x80 , ( byte ) 0x43 , ( byte ) 0xc5 , ( byte ) 0x8c , ( byte ) 0x57 , < nl > + ( byte ) 0xf9 , ( byte ) 0xc8 , ( byte ) 0x9b , ( byte ) 0x6e , ( byte ) 0xb2 , ( byte ) 0x15 , ( byte ) 0x3f , ( byte ) 0x41 , ( byte ) 0xc3 , ( byte ) 0x86 , ( byte ) 0x49 , ( byte ) 0xdb , ( byte ) 0xae , ( byte ) 0x31 , ( byte ) 0x53 , ( byte ) 0xf5 , < nl > + ( byte ) 0xdc , ( byte ) 0xa7 , ( byte ) 0x2a , ( byte ) 0x7e , ( byte ) 0x82 , ( byte ) 0x45 , ( byte ) 0xcf , ( byte ) 0x92 , ( byte ) 0x75 , ( byte ) 0x9f , ( byte ) 0x62 , ( byte ) 0xa6 , ( byte ) 0x29 , ( byte ) 0x7b , ( byte ) 0x8d , ( byte ) 0x54 , < nl > + ( byte ) 0xfc , ( byte ) 0xc7 , ( byte ) 0x8a , ( byte ) 0x5d , ( byte ) 0xe7 , ( byte ) 0xea , ( byte ) 0xfd , ( byte ) 0xc4 , ( byte ) 0x8f , ( byte ) 0x52 , ( byte ) 0xf6 , ( byte ) 0xd9 , ( byte ) 0xa8 , ( byte ) 0x3b , ( byte ) 0x4d , ( byte ) 0xd7 , < nl > + ( byte ) 0xba , ( byte ) 0x0d , ( byte ) 0x17 , ( byte ) 0x39 , ( byte ) 0x4b , ( byte ) 0xdd , ( byte ) 0xa4 , ( byte ) 0x2f , ( byte ) 0x71 , ( byte ) 0x93 , ( byte ) 0x76 , ( byte ) 0x9a , ( byte ) 0x6d , ( byte ) 0xb7 , ( byte ) 0x1a , ( byte ) 0x2e , < nl > + ( byte ) 0x72 , ( byte ) 0x96 , ( byte ) 0x79 , ( byte ) 0x8b , ( byte ) 0x5e , ( byte ) 0xe2 , ( byte ) 0xe5 , ( byte ) 0xec , ( byte ) 0xf7 , ( byte ) 0xda , ( byte ) 0xad , ( byte ) 0x34 , ( byte ) 0x5c , ( byte ) 0xe4 , ( byte ) 0xef , ( byte ) 0xf2 , < nl > + ( byte ) 0xd5 , ( byte ) 0xbc , ( byte ) 0x07 , ( byte ) 0x09 , ( byte ) 0x1b , ( byte ) 0x2d , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x68 , ( byte ) 0xb8 , ( byte ) 0x0b , ( byte ) 0x1d , ( byte ) 0x27 , ( byte ) 0x69 , ( byte ) 0xbb , ( byte ) 0x0e , < nl > + ( byte ) 0x12 , ( byte ) 0x36 , ( byte ) 0x5a , ( byte ) 0xee , ( byte ) 0xf1 , ( byte ) 0xd0 , ( byte ) 0xb3 , ( byte ) 0x16 , ( byte ) 0x3a , ( byte ) 0x4e , ( byte ) 0xd2 , ( byte ) 0xb5 , ( byte ) 0x1c , ( byte ) 0x24 , ( byte ) 0x6c , ( byte ) 0xb4 , < nl > + ( byte ) 0x1f , ( byte ) 0x21 , ( byte ) 0x63 , ( byte ) 0xa5 , ( byte ) 0x2c , ( byte ) 0x74 , ( byte ) 0x9c , ( byte ) 0x67 , ( byte ) 0xa9 , ( byte ) 0x38 , ( byte ) 0x48 , ( byte ) 0xd8 , ( byte ) 0xab , ( byte ) 0x3e , ( byte ) 0x42 , ( byte ) 0xc6 , < nl > + ( byte ) 0x89 , ( byte ) 0x58 , ( byte ) 0xe8 , ( byte ) 0xfb , ( byte ) 0xce , ( byte ) 0x91 , ( byte ) 0x70 , ( byte ) 0x90 , ( byte ) 0x73 , ( byte ) 0x95 , ( byte ) 0x7c , ( byte ) 0x84 , ( byte ) 0x4f , ( byte ) 0xd1 , ( byte ) 0xb0 , ( byte ) 0x13 , < nl > + ( byte ) 0x35 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0xe0 , ( byte ) 0xe3 , ( byte ) 0xe6 , ( byte ) 0xe9 , ( byte ) 0xf8 , ( byte ) 0xcb , ( byte ) 0x9e , ( byte ) 0x61 , ( byte ) 0xa3 , ( byte ) 0x26 , ( byte ) 0x6a , ( byte ) 0xbe , ( byte ) 0x01 , < nl > + } ; < nl > + < nl > + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html < nl > + public static final byte [ ] gf256 _ L = new byte [ ] { < nl > + ( byte ) 0x00 , ( byte ) 0x00 , ( byte ) 0x0d , ( byte ) 0x01 , ( byte ) 0x1a , ( byte ) 0x02 , ( byte ) 0x0e , ( byte ) 0xb2 , ( byte ) 0x27 , ( byte ) 0xb3 , ( byte ) 0x0f , ( byte ) 0xba , ( byte ) 0x1b , ( byte ) 0x91 , ( byte ) 0xbf , ( byte ) 0x03 , < nl > + ( byte ) 0x34 , ( byte ) 0x04 , ( byte ) 0xc0 , ( byte ) 0xef , ( byte ) 0x1c , ( byte ) 0x65 , ( byte ) 0xc7 , ( byte ) 0x92 , ( byte ) 0x28 , ( byte ) 0x3a , ( byte ) 0x9e , ( byte ) 0xb4 , ( byte ) 0xcc , ( byte ) 0xbb , ( byte ) 0x10 , ( byte ) 0xd0 , < nl > + ( byte ) 0x41 , ( byte ) 0xd1 , ( byte ) 0x11 , ( byte ) 0x44 , ( byte ) 0xcd , ( byte ) 0x31 , ( byte ) 0xfc , ( byte ) 0xbc , ( byte ) 0x29 , ( byte ) 0x7c , ( byte ) 0x72 , ( byte ) 0x3b , ( byte ) 0xd4 , ( byte ) 0xb5 , ( byte ) 0x9f , ( byte ) 0x97 , < nl > + ( byte ) 0x35 , ( byte ) 0x6d , ( byte ) 0x47 , ( byte ) 0x05 , ( byte ) 0xab , ( byte ) 0xf0 , ( byte ) 0xc1 , ( byte ) 0x56 , ( byte ) 0xd9 , ( byte ) 0x93 , ( byte ) 0xc8 , ( byte ) 0x8d , ( byte ) 0x1d , ( byte ) 0x14 , ( byte ) 0xdd , ( byte ) 0x66 , < nl > + ( byte ) 0x4e , ( byte ) 0x67 , ( byte ) 0xde , ( byte ) 0x5c , ( byte ) 0x1e , ( byte ) 0x75 , ( byte ) 0x51 , ( byte ) 0x15 , ( byte ) 0xda , ( byte ) 0x6a , ( byte ) 0x3e , ( byte ) 0x94 , ( byte ) 0x0a , ( byte ) 0x8e , ( byte ) 0xc9 , ( byte ) 0xec , < nl > + ( byte ) 0x36 , ( byte ) 0x23 , ( byte ) 0x89 , ( byte ) 0x6e , ( byte ) 0x7f , ( byte ) 0x06 , ( byte ) 0x48 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0x57 , ( byte ) 0xc2 , ( byte ) 0x2c , ( byte ) 0xac , ( byte ) 0x83 , ( byte ) 0xa4 , ( byte ) 0xf1 , < nl > + ( byte ) 0x42 , ( byte ) 0xfa , ( byte ) 0x7a , ( byte ) 0xd2 , ( byte ) 0x54 , ( byte ) 0x45 , ( byte ) 0x12 , ( byte ) 0xd7 , ( byte ) 0xb8 , ( byte ) 0xbd , ( byte ) 0xfd , ( byte ) 0x18 , ( byte ) 0xce , ( byte ) 0x9c , ( byte ) 0x63 , ( byte ) 0x32 , < nl > + ( byte ) 0xe6 , ( byte ) 0x98 , ( byte ) 0xa0 , ( byte ) 0xe8 , ( byte ) 0xd5 , ( byte ) 0x78 , ( byte ) 0x9a , ( byte ) 0xb6 , ( byte ) 0x2a , ( byte ) 0xa2 , ( byte ) 0x21 , ( byte ) 0x7d , ( byte ) 0xea , ( byte ) 0x3c , ( byte ) 0x73 , ( byte ) 0x4c , < nl > + ( byte ) 0x5b , ( byte ) 0x4d , ( byte ) 0x74 , ( byte ) 0x50 , ( byte ) 0xeb , ( byte ) 0x09 , ( byte ) 0x69 , ( byte ) 0x3d , ( byte ) 0x2b , ( byte ) 0xe0 , ( byte ) 0x82 , ( byte ) 0xa3 , ( byte ) 0x5e , ( byte ) 0x7e , ( byte ) 0x22 , ( byte ) 0x88 , < nl > + ( byte ) 0xe7 , ( byte ) 0xe5 , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x4b , ( byte ) 0xe9 , ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x17 , ( byte ) 0xb7 , ( byte ) 0x9b , ( byte ) 0x62 , ( byte ) 0xd6 , ( byte ) 0x53 , ( byte ) 0xf9 , ( byte ) 0x79 , < nl > + ( byte ) 0x43 , ( byte ) 0x40 , ( byte ) 0x30 , ( byte ) 0xfb , ( byte ) 0x96 , ( byte ) 0xd3 , ( byte ) 0x7b , ( byte ) 0x71 , ( byte ) 0x8c , ( byte ) 0xd8 , ( byte ) 0x13 , ( byte ) 0xdc , ( byte ) 0x55 , ( byte ) 0xaa , ( byte ) 0x6c , ( byte ) 0x46 , < nl > + ( byte ) 0xee , ( byte ) 0x33 , ( byte ) 0x64 , ( byte ) 0xc6 , ( byte ) 0xcf , ( byte ) 0xcb , ( byte ) 0x39 , ( byte ) 0x9d , ( byte ) 0xb9 , ( byte ) 0x26 , ( byte ) 0x90 , ( byte ) 0xbe , ( byte ) 0xb1 , ( byte ) 0x19 , ( byte ) 0xfe , ( byte ) 0x0c , < nl > + ( byte ) 0x4f , ( byte ) 0x5a , ( byte ) 0x08 , ( byte ) 0x68 , ( byte ) 0x87 , ( byte ) 0x5d , ( byte ) 0xdf , ( byte ) 0x81 , ( byte ) 0x61 , ( byte ) 0x16 , ( byte ) 0x52 , ( byte ) 0xf8 , ( byte ) 0x1f , ( byte ) 0x4a , ( byte ) 0xe4 , ( byte ) 0x76 , < nl > + ( byte ) 0xc5 , ( byte ) 0xed , ( byte ) 0xca , ( byte ) 0x38 , ( byte ) 0x0b , ( byte ) 0xb0 , ( byte ) 0x25 , ( byte ) 0x8f , ( byte ) 0xdb , ( byte ) 0x8b , ( byte ) 0xa9 , ( byte ) 0x6b , ( byte ) 0x70 , ( byte ) 0x95 , ( byte ) 0x3f , ( byte ) 0x2f , < nl > + ( byte ) 0xf3 , ( byte ) 0xf2 , ( byte ) 0xa5 , ( byte ) 0xf4 , ( byte ) 0xad , ( byte ) 0xa6 , ( byte ) 0xf5 , ( byte ) 0x84 , ( byte ) 0xe2 , ( byte ) 0xf6 , ( byte ) 0x85 , ( byte ) 0x58 , ( byte ) 0xa7 , ( byte ) 0x2d , ( byte ) 0xc3 , ( byte ) 0xae , < nl > + ( byte ) 0x37 , ( byte ) 0xc4 , ( byte ) 0xaf , ( byte ) 0x24 , ( byte ) 0x2e , ( byte ) 0x6f , ( byte ) 0x8a , ( byte ) 0xa8 , ( byte ) 0xf7 , ( byte ) 0x60 , ( byte ) 0x49 , ( byte ) 0xe3 , ( byte ) 0x80 , ( byte ) 0x86 , ( byte ) 0x59 , ( byte ) 0x07 , < nl > + } ; < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java 
 index a1a07bb . . b91c899 100644 
 - - - a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java 
 + + + b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikMath . java 
 @ @ - 5 , 8 + 5 , 10 @ @ package im . actor . crypto . primitives . kuznechik ; 
 * < p / > 
 * Ported by Steven Kite ( steve @ actor . im ) from 
 * https : / / github . com / mjosaarinen / kuznechik / blob / master / kuznechik _ 8bit . c 
 + * Multiplication optimization from 
 + * http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html 
 * / 
 - class KuznechikMath { 
 + public class KuznechikMath { 
 
 / / poly multiplication mod p ( x ) = x ^ 8 + x ^ 7 + x ^ 6 + x + 1 
 / / totally not constant time 
 @ @ - 33 , 6 + 35 , 15 @ @ class KuznechikMath { 
 return z ; 
 } 
 
 + / / Fast implementation of multiplication in GF ( 2 ^ 8 ) on x ^ 8 + x ^ 7 + x ^ 6 + x + 1 
 + / / Implemented with 
 + public static byte kuz _ mul _ gf256 _ fast ( byte a , byte b ) { 
 + if ( a = = 0 | | b = = 0 ) return 0 ; 
 + int t = ( KuznechikTables . gf256 _ L [ ( a & 0xff ) ] & 0xff ) + ( KuznechikTables . gf256 _ L [ ( b & 0xff ) ] & 0xff ) ; 
 + if ( t > 255 ) t = t - 255 ; 
 + return KuznechikTables . gf256 _ E [ ( t & 0xff ) ] ; 
 + } 
 + 
 / / linear operation l 
 / / static void kuz _ l ( w128 _ t * w ) 
 public static void kuz _ l ( Kuz128 w ) { 
 @ @ - 46 , 7 + 57 , 7 @ @ class KuznechikMath { 
 / / w - > b [ i + 1 ] = w - > b [ i ] ; 
 w . getB ( ) [ i + 1 ] = w . getB ( ) [ i ] ; 
 / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; 
 - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 } 
 w . getB ( ) [ 0 ] = x ; 
 } 
 @ @ - 67 , 7 + 78 , 7 @ @ class KuznechikMath { 
 w . getB ( ) [ i ] = w . getB ( ) [ i + 1 ] ; 
 
 / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; 
 - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 } 
 
 / / w - > b [ 15 ] = x ; 
 diff - - git a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java 
 index f42a4a8 . . d9ab717 100644 
 - - - a / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java 
 + + + b / actor - server / actor - frontend / src / main / java / im / actor / crypto / primitives / kuznechik / KuznechikTables . java 
 @ @ - 84 , 4 + 84 , 44 @ @ class KuznechikTables { 
 ( byte ) 0x94 , ( byte ) 0x20 , ( byte ) 0x85 , ( byte ) 0x10 , ( byte ) 0xC2 , ( byte ) 0xC0 , ( byte ) 0x01 , ( byte ) 0xFB , 
 ( byte ) 0x01 , ( byte ) 0xC0 , ( byte ) 0xC2 , ( byte ) 0x10 , ( byte ) 0x85 , ( byte ) 0x20 , ( byte ) 0x94 , ( byte ) 0x01 
 } ; 
 + 
 + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html 
 + public static final byte [ ] gf256 _ E = new byte [ ] { 
 + ( byte ) 0x01 , ( byte ) 0x03 , ( byte ) 0x05 , ( byte ) 0x0f , ( byte ) 0x11 , ( byte ) 0x33 , ( byte ) 0x55 , ( byte ) 0xff , ( byte ) 0xc2 , ( byte ) 0x85 , ( byte ) 0x4c , ( byte ) 0xd4 , ( byte ) 0xbf , ( byte ) 0x02 , ( byte ) 0x06 , ( byte ) 0x0a , 
 + ( byte ) 0x1e , ( byte ) 0x22 , ( byte ) 0x66 , ( byte ) 0xaa , ( byte ) 0x3d , ( byte ) 0x47 , ( byte ) 0xc9 , ( byte ) 0x98 , ( byte ) 0x6b , ( byte ) 0xbd , ( byte ) 0x04 , ( byte ) 0x0c , ( byte ) 0x14 , ( byte ) 0x3c , ( byte ) 0x44 , ( byte ) 0xcc , 
 + ( byte ) 0x97 , ( byte ) 0x7a , ( byte ) 0x8e , ( byte ) 0x51 , ( byte ) 0xf3 , ( byte ) 0xd6 , ( byte ) 0xb9 , ( byte ) 0x08 , ( byte ) 0x18 , ( byte ) 0x28 , ( byte ) 0x78 , ( byte ) 0x88 , ( byte ) 0x5b , ( byte ) 0xed , ( byte ) 0xf4 , ( byte ) 0xdf , 
 + ( byte ) 0xa2 , ( byte ) 0x25 , ( byte ) 0x6f , ( byte ) 0xb1 , ( byte ) 0x10 , ( byte ) 0x30 , ( byte ) 0x50 , ( byte ) 0xf0 , ( byte ) 0xd3 , ( byte ) 0xb6 , ( byte ) 0x19 , ( byte ) 0x2b , ( byte ) 0x7d , ( byte ) 0x87 , ( byte ) 0x4a , ( byte ) 0xde , 
 + ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x60 , ( byte ) 0xa0 , ( byte ) 0x23 , ( byte ) 0x65 , ( byte ) 0xaf , ( byte ) 0x32 , ( byte ) 0x56 , ( byte ) 0xfa , ( byte ) 0xcd , ( byte ) 0x94 , ( byte ) 0x7f , ( byte ) 0x81 , ( byte ) 0x40 , ( byte ) 0xc0 , 
 + ( byte ) 0x83 , ( byte ) 0x46 , ( byte ) 0xca , ( byte ) 0x9d , ( byte ) 0x64 , ( byte ) 0xac , ( byte ) 0x37 , ( byte ) 0x59 , ( byte ) 0xeb , ( byte ) 0xfe , ( byte ) 0xc1 , ( byte ) 0x80 , ( byte ) 0x43 , ( byte ) 0xc5 , ( byte ) 0x8c , ( byte ) 0x57 , 
 + ( byte ) 0xf9 , ( byte ) 0xc8 , ( byte ) 0x9b , ( byte ) 0x6e , ( byte ) 0xb2 , ( byte ) 0x15 , ( byte ) 0x3f , ( byte ) 0x41 , ( byte ) 0xc3 , ( byte ) 0x86 , ( byte ) 0x49 , ( byte ) 0xdb , ( byte ) 0xae , ( byte ) 0x31 , ( byte ) 0x53 , ( byte ) 0xf5 , 
 + ( byte ) 0xdc , ( byte ) 0xa7 , ( byte ) 0x2a , ( byte ) 0x7e , ( byte ) 0x82 , ( byte ) 0x45 , ( byte ) 0xcf , ( byte ) 0x92 , ( byte ) 0x75 , ( byte ) 0x9f , ( byte ) 0x62 , ( byte ) 0xa6 , ( byte ) 0x29 , ( byte ) 0x7b , ( byte ) 0x8d , ( byte ) 0x54 , 
 + ( byte ) 0xfc , ( byte ) 0xc7 , ( byte ) 0x8a , ( byte ) 0x5d , ( byte ) 0xe7 , ( byte ) 0xea , ( byte ) 0xfd , ( byte ) 0xc4 , ( byte ) 0x8f , ( byte ) 0x52 , ( byte ) 0xf6 , ( byte ) 0xd9 , ( byte ) 0xa8 , ( byte ) 0x3b , ( byte ) 0x4d , ( byte ) 0xd7 , 
 + ( byte ) 0xba , ( byte ) 0x0d , ( byte ) 0x17 , ( byte ) 0x39 , ( byte ) 0x4b , ( byte ) 0xdd , ( byte ) 0xa4 , ( byte ) 0x2f , ( byte ) 0x71 , ( byte ) 0x93 , ( byte ) 0x76 , ( byte ) 0x9a , ( byte ) 0x6d , ( byte ) 0xb7 , ( byte ) 0x1a , ( byte ) 0x2e , 
 + ( byte ) 0x72 , ( byte ) 0x96 , ( byte ) 0x79 , ( byte ) 0x8b , ( byte ) 0x5e , ( byte ) 0xe2 , ( byte ) 0xe5 , ( byte ) 0xec , ( byte ) 0xf7 , ( byte ) 0xda , ( byte ) 0xad , ( byte ) 0x34 , ( byte ) 0x5c , ( byte ) 0xe4 , ( byte ) 0xef , ( byte ) 0xf2 , 
 + ( byte ) 0xd5 , ( byte ) 0xbc , ( byte ) 0x07 , ( byte ) 0x09 , ( byte ) 0x1b , ( byte ) 0x2d , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x68 , ( byte ) 0xb8 , ( byte ) 0x0b , ( byte ) 0x1d , ( byte ) 0x27 , ( byte ) 0x69 , ( byte ) 0xbb , ( byte ) 0x0e , 
 + ( byte ) 0x12 , ( byte ) 0x36 , ( byte ) 0x5a , ( byte ) 0xee , ( byte ) 0xf1 , ( byte ) 0xd0 , ( byte ) 0xb3 , ( byte ) 0x16 , ( byte ) 0x3a , ( byte ) 0x4e , ( byte ) 0xd2 , ( byte ) 0xb5 , ( byte ) 0x1c , ( byte ) 0x24 , ( byte ) 0x6c , ( byte ) 0xb4 , 
 + ( byte ) 0x1f , ( byte ) 0x21 , ( byte ) 0x63 , ( byte ) 0xa5 , ( byte ) 0x2c , ( byte ) 0x74 , ( byte ) 0x9c , ( byte ) 0x67 , ( byte ) 0xa9 , ( byte ) 0x38 , ( byte ) 0x48 , ( byte ) 0xd8 , ( byte ) 0xab , ( byte ) 0x3e , ( byte ) 0x42 , ( byte ) 0xc6 , 
 + ( byte ) 0x89 , ( byte ) 0x58 , ( byte ) 0xe8 , ( byte ) 0xfb , ( byte ) 0xce , ( byte ) 0x91 , ( byte ) 0x70 , ( byte ) 0x90 , ( byte ) 0x73 , ( byte ) 0x95 , ( byte ) 0x7c , ( byte ) 0x84 , ( byte ) 0x4f , ( byte ) 0xd1 , ( byte ) 0xb0 , ( byte ) 0x13 , 
 + ( byte ) 0x35 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0xe0 , ( byte ) 0xe3 , ( byte ) 0xe6 , ( byte ) 0xe9 , ( byte ) 0xf8 , ( byte ) 0xcb , ( byte ) 0x9e , ( byte ) 0x61 , ( byte ) 0xa3 , ( byte ) 0x26 , ( byte ) 0x6a , ( byte ) 0xbe , ( byte ) 0x01 , 
 + } ; 
 + 
 + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html 
 + public static final byte [ ] gf256 _ L = new byte [ ] { 
 + ( byte ) 0x00 , ( byte ) 0x00 , ( byte ) 0x0d , ( byte ) 0x01 , ( byte ) 0x1a , ( byte ) 0x02 , ( byte ) 0x0e , ( byte ) 0xb2 , ( byte ) 0x27 , ( byte ) 0xb3 , ( byte ) 0x0f , ( byte ) 0xba , ( byte ) 0x1b , ( byte ) 0x91 , ( byte ) 0xbf , ( byte ) 0x03 , 
 + ( byte ) 0x34 , ( byte ) 0x04 , ( byte ) 0xc0 , ( byte ) 0xef , ( byte ) 0x1c , ( byte ) 0x65 , ( byte ) 0xc7 , ( byte ) 0x92 , ( byte ) 0x28 , ( byte ) 0x3a , ( byte ) 0x9e , ( byte ) 0xb4 , ( byte ) 0xcc , ( byte ) 0xbb , ( byte ) 0x10 , ( byte ) 0xd0 , 
 + ( byte ) 0x41 , ( byte ) 0xd1 , ( byte ) 0x11 , ( byte ) 0x44 , ( byte ) 0xcd , ( byte ) 0x31 , ( byte ) 0xfc , ( byte ) 0xbc , ( byte ) 0x29 , ( byte ) 0x7c , ( byte ) 0x72 , ( byte ) 0x3b , ( byte ) 0xd4 , ( byte ) 0xb5 , ( byte ) 0x9f , ( byte ) 0x97 , 
 + ( byte ) 0x35 , ( byte ) 0x6d , ( byte ) 0x47 , ( byte ) 0x05 , ( byte ) 0xab , ( byte ) 0xf0 , ( byte ) 0xc1 , ( byte ) 0x56 , ( byte ) 0xd9 , ( byte ) 0x93 , ( byte ) 0xc8 , ( byte ) 0x8d , ( byte ) 0x1d , ( byte ) 0x14 , ( byte ) 0xdd , ( byte ) 0x66 , 
 + ( byte ) 0x4e , ( byte ) 0x67 , ( byte ) 0xde , ( byte ) 0x5c , ( byte ) 0x1e , ( byte ) 0x75 , ( byte ) 0x51 , ( byte ) 0x15 , ( byte ) 0xda , ( byte ) 0x6a , ( byte ) 0x3e , ( byte ) 0x94 , ( byte ) 0x0a , ( byte ) 0x8e , ( byte ) 0xc9 , ( byte ) 0xec , 
 + ( byte ) 0x36 , ( byte ) 0x23 , ( byte ) 0x89 , ( byte ) 0x6e , ( byte ) 0x7f , ( byte ) 0x06 , ( byte ) 0x48 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0x57 , ( byte ) 0xc2 , ( byte ) 0x2c , ( byte ) 0xac , ( byte ) 0x83 , ( byte ) 0xa4 , ( byte ) 0xf1 , 
 + ( byte ) 0x42 , ( byte ) 0xfa , ( byte ) 0x7a , ( byte ) 0xd2 , ( byte ) 0x54 , ( byte ) 0x45 , ( byte ) 0x12 , ( byte ) 0xd7 , ( byte ) 0xb8 , ( byte ) 0xbd , ( byte ) 0xfd , ( byte ) 0x18 , ( byte ) 0xce , ( byte ) 0x9c , ( byte ) 0x63 , ( byte ) 0x32 , 
 + ( byte ) 0xe6 , ( byte ) 0x98 , ( byte ) 0xa0 , ( byte ) 0xe8 , ( byte ) 0xd5 , ( byte ) 0x78 , ( byte ) 0x9a , ( byte ) 0xb6 , ( byte ) 0x2a , ( byte ) 0xa2 , ( byte ) 0x21 , ( byte ) 0x7d , ( byte ) 0xea , ( byte ) 0x3c , ( byte ) 0x73 , ( byte ) 0x4c , 
 + ( byte ) 0x5b , ( byte ) 0x4d , ( byte ) 0x74 , ( byte ) 0x50 , ( byte ) 0xeb , ( byte ) 0x09 , ( byte ) 0x69 , ( byte ) 0x3d , ( byte ) 0x2b , ( byte ) 0xe0 , ( byte ) 0x82 , ( byte ) 0xa3 , ( byte ) 0x5e , ( byte ) 0x7e , ( byte ) 0x22 , ( byte ) 0x88 , 
 + ( byte ) 0xe7 , ( byte ) 0xe5 , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x4b , ( byte ) 0xe9 , ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x17 , ( byte ) 0xb7 , ( byte ) 0x9b , ( byte ) 0x62 , ( byte ) 0xd6 , ( byte ) 0x53 , ( byte ) 0xf9 , ( byte ) 0x79 , 
 + ( byte ) 0x43 , ( byte ) 0x40 , ( byte ) 0x30 , ( byte ) 0xfb , ( byte ) 0x96 , ( byte ) 0xd3 , ( byte ) 0x7b , ( byte ) 0x71 , ( byte ) 0x8c , ( byte ) 0xd8 , ( byte ) 0x13 , ( byte ) 0xdc , ( byte ) 0x55 , ( byte ) 0xaa , ( byte ) 0x6c , ( byte ) 0x46 , 
 + ( byte ) 0xee , ( byte ) 0x33 , ( byte ) 0x64 , ( byte ) 0xc6 , ( byte ) 0xcf , ( byte ) 0xcb , ( byte ) 0x39 , ( byte ) 0x9d , ( byte ) 0xb9 , ( byte ) 0x26 , ( byte ) 0x90 , ( byte ) 0xbe , ( byte ) 0xb1 , ( byte ) 0x19 , ( byte ) 0xfe , ( byte ) 0x0c , 
 + ( byte ) 0x4f , ( byte ) 0x5a , ( byte ) 0x08 , ( byte ) 0x68 , ( byte ) 0x87 , ( byte ) 0x5d , ( byte ) 0xdf , ( byte ) 0x81 , ( byte ) 0x61 , ( byte ) 0x16 , ( byte ) 0x52 , ( byte ) 0xf8 , ( byte ) 0x1f , ( byte ) 0x4a , ( byte ) 0xe4 , ( byte ) 0x76 , 
 + ( byte ) 0xc5 , ( byte ) 0xed , ( byte ) 0xca , ( byte ) 0x38 , ( byte ) 0x0b , ( byte ) 0xb0 , ( byte ) 0x25 , ( byte ) 0x8f , ( byte ) 0xdb , ( byte ) 0x8b , ( byte ) 0xa9 , ( byte ) 0x6b , ( byte ) 0x70 , ( byte ) 0x95 , ( byte ) 0x3f , ( byte ) 0x2f , 
 + ( byte ) 0xf3 , ( byte ) 0xf2 , ( byte ) 0xa5 , ( byte ) 0xf4 , ( byte ) 0xad , ( byte ) 0xa6 , ( byte ) 0xf5 , ( byte ) 0x84 , ( byte ) 0xe2 , ( byte ) 0xf6 , ( byte ) 0x85 , ( byte ) 0x58 , ( byte ) 0xa7 , ( byte ) 0x2d , ( byte ) 0xc3 , ( byte ) 0xae , 
 + ( byte ) 0x37 , ( byte ) 0xc4 , ( byte ) 0xaf , ( byte ) 0x24 , ( byte ) 0x2e , ( byte ) 0x6f , ( byte ) 0x8a , ( byte ) 0xa8 , ( byte ) 0xf7 , ( byte ) 0x60 , ( byte ) 0x49 , ( byte ) 0xe3 , ( byte ) 0x80 , ( byte ) 0x86 , ( byte ) 0x59 , ( byte ) 0x07 , 
 + } ; 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java 
 index d8db3d9 . . d3534d8 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikMath . java 
 @ @ - 5 , 6 + 5 , 8 @ @ package im . actor . runtime . crypto . primitives . kuznechik ; 
 * < p / > 
 * Ported by Steven Kite ( steve @ actor . im ) from 
 * https : / / github . com / mjosaarinen / kuznechik / blob / master / kuznechik _ 8bit . c 
 + * Multiplication optimization from 
 + * http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html 
 * / 
 class KuznechikMath { 
 
 @ @ - 33 , 6 + 35 , 15 @ @ class KuznechikMath { 
 return z ; 
 } 
 
 + / / Fast implementation of multiplication in GF ( 2 ^ 8 ) on x ^ 8 + x ^ 7 + x ^ 6 + x + 1 
 + / / Implemented with 
 + public static byte kuz _ mul _ gf256 _ fast ( byte a , byte b ) { 
 + if ( a = = 0 | | b = = 0 ) return 0 ; 
 + int t = ( KuznechikTables . gf256 _ L [ ( a & 0xff ) ] & 0xff ) + ( KuznechikTables . gf256 _ L [ ( b & 0xff ) ] & 0xff ) ; 
 + if ( t > 255 ) t = t - 255 ; 
 + return KuznechikTables . gf256 _ E [ ( t & 0xff ) ] ; 
 + } 
 + 
 / / linear operation l 
 / / static void kuz _ l ( w128 _ t * w ) 
 public static void kuz _ l ( Kuz128 w ) { 
 @ @ - 46 , 7 + 57 , 7 @ @ class KuznechikMath { 
 / / w - > b [ i + 1 ] = w - > b [ i ] ; 
 w . getB ( ) [ i + 1 ] = w . getB ( ) [ i ] ; 
 / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; 
 - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 } 
 w . getB ( ) [ 0 ] = x ; 
 } 
 @ @ - 67 , 7 + 78 , 7 @ @ class KuznechikMath { 
 w . getB ( ) [ i ] = w . getB ( ) [ i + 1 ] ; 
 
 / / x ^ = kuz _ mul _ gf256 ( w - > b [ i ] , kuz _ lvec [ i ] ) ; 
 - x ^ = kuz _ mul _ gf256 ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 + x ^ = kuz _ mul _ gf256 _ fast ( w . getB ( ) [ i ] , KuznechikTables . kuz _ lvec [ i ] ) ; 
 } 
 
 / / w - > b [ 15 ] = x ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java 
 index e81d354 . . ad7a425 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikTables . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package im . actor . runtime . crypto . primitives . kuznechik ; 
 
 / * * 
 * Lookup tables for Kuznechik encryption 
 - * < p / > 
 + * < p > 
 * Ported by Steven Kite ( steve @ actor . im ) from 
 * https : / / github . com / mjosaarinen / kuznechik / blob / master / kuznechik _ 8bit . c 
 * / 
 @ @ - 84 , 4 + 84 , 44 @ @ class KuznechikTables { 
 ( byte ) 0x94 , ( byte ) 0x20 , ( byte ) 0x85 , ( byte ) 0x10 , ( byte ) 0xC2 , ( byte ) 0xC0 , ( byte ) 0x01 , ( byte ) 0xFB , 
 ( byte ) 0x01 , ( byte ) 0xC0 , ( byte ) 0xC2 , ( byte ) 0x10 , ( byte ) 0x85 , ( byte ) 0x20 , ( byte ) 0x94 , ( byte ) 0x01 
 } ; 
 + 
 + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html 
 + public static final byte [ ] gf256 _ E = new byte [ ] { 
 + ( byte ) 0x01 , ( byte ) 0x03 , ( byte ) 0x05 , ( byte ) 0x0f , ( byte ) 0x11 , ( byte ) 0x33 , ( byte ) 0x55 , ( byte ) 0xff , ( byte ) 0xc2 , ( byte ) 0x85 , ( byte ) 0x4c , ( byte ) 0xd4 , ( byte ) 0xbf , ( byte ) 0x02 , ( byte ) 0x06 , ( byte ) 0x0a , 
 + ( byte ) 0x1e , ( byte ) 0x22 , ( byte ) 0x66 , ( byte ) 0xaa , ( byte ) 0x3d , ( byte ) 0x47 , ( byte ) 0xc9 , ( byte ) 0x98 , ( byte ) 0x6b , ( byte ) 0xbd , ( byte ) 0x04 , ( byte ) 0x0c , ( byte ) 0x14 , ( byte ) 0x3c , ( byte ) 0x44 , ( byte ) 0xcc , 
 + ( byte ) 0x97 , ( byte ) 0x7a , ( byte ) 0x8e , ( byte ) 0x51 , ( byte ) 0xf3 , ( byte ) 0xd6 , ( byte ) 0xb9 , ( byte ) 0x08 , ( byte ) 0x18 , ( byte ) 0x28 , ( byte ) 0x78 , ( byte ) 0x88 , ( byte ) 0x5b , ( byte ) 0xed , ( byte ) 0xf4 , ( byte ) 0xdf , 
 + ( byte ) 0xa2 , ( byte ) 0x25 , ( byte ) 0x6f , ( byte ) 0xb1 , ( byte ) 0x10 , ( byte ) 0x30 , ( byte ) 0x50 , ( byte ) 0xf0 , ( byte ) 0xd3 , ( byte ) 0xb6 , ( byte ) 0x19 , ( byte ) 0x2b , ( byte ) 0x7d , ( byte ) 0x87 , ( byte ) 0x4a , ( byte ) 0xde , 
 + ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x60 , ( byte ) 0xa0 , ( byte ) 0x23 , ( byte ) 0x65 , ( byte ) 0xaf , ( byte ) 0x32 , ( byte ) 0x56 , ( byte ) 0xfa , ( byte ) 0xcd , ( byte ) 0x94 , ( byte ) 0x7f , ( byte ) 0x81 , ( byte ) 0x40 , ( byte ) 0xc0 , 
 + ( byte ) 0x83 , ( byte ) 0x46 , ( byte ) 0xca , ( byte ) 0x9d , ( byte ) 0x64 , ( byte ) 0xac , ( byte ) 0x37 , ( byte ) 0x59 , ( byte ) 0xeb , ( byte ) 0xfe , ( byte ) 0xc1 , ( byte ) 0x80 , ( byte ) 0x43 , ( byte ) 0xc5 , ( byte ) 0x8c , ( byte ) 0x57 , 
 + ( byte ) 0xf9 , ( byte ) 0xc8 , ( byte ) 0x9b , ( byte ) 0x6e , ( byte ) 0xb2 , ( byte ) 0x15 , ( byte ) 0x3f , ( byte ) 0x41 , ( byte ) 0xc3 , ( byte ) 0x86 , ( byte ) 0x49 , ( byte ) 0xdb , ( byte ) 0xae , ( byte ) 0x31 , ( byte ) 0x53 , ( byte ) 0xf5 , 
 + ( byte ) 0xdc , ( byte ) 0xa7 , ( byte ) 0x2a , ( byte ) 0x7e , ( byte ) 0x82 , ( byte ) 0x45 , ( byte ) 0xcf , ( byte ) 0x92 , ( byte ) 0x75 , ( byte ) 0x9f , ( byte ) 0x62 , ( byte ) 0xa6 , ( byte ) 0x29 , ( byte ) 0x7b , ( byte ) 0x8d , ( byte ) 0x54 , 
 + ( byte ) 0xfc , ( byte ) 0xc7 , ( byte ) 0x8a , ( byte ) 0x5d , ( byte ) 0xe7 , ( byte ) 0xea , ( byte ) 0xfd , ( byte ) 0xc4 , ( byte ) 0x8f , ( byte ) 0x52 , ( byte ) 0xf6 , ( byte ) 0xd9 , ( byte ) 0xa8 , ( byte ) 0x3b , ( byte ) 0x4d , ( byte ) 0xd7 , 
 + ( byte ) 0xba , ( byte ) 0x0d , ( byte ) 0x17 , ( byte ) 0x39 , ( byte ) 0x4b , ( byte ) 0xdd , ( byte ) 0xa4 , ( byte ) 0x2f , ( byte ) 0x71 , ( byte ) 0x93 , ( byte ) 0x76 , ( byte ) 0x9a , ( byte ) 0x6d , ( byte ) 0xb7 , ( byte ) 0x1a , ( byte ) 0x2e , 
 + ( byte ) 0x72 , ( byte ) 0x96 , ( byte ) 0x79 , ( byte ) 0x8b , ( byte ) 0x5e , ( byte ) 0xe2 , ( byte ) 0xe5 , ( byte ) 0xec , ( byte ) 0xf7 , ( byte ) 0xda , ( byte ) 0xad , ( byte ) 0x34 , ( byte ) 0x5c , ( byte ) 0xe4 , ( byte ) 0xef , ( byte ) 0xf2 , 
 + ( byte ) 0xd5 , ( byte ) 0xbc , ( byte ) 0x07 , ( byte ) 0x09 , ( byte ) 0x1b , ( byte ) 0x2d , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x68 , ( byte ) 0xb8 , ( byte ) 0x0b , ( byte ) 0x1d , ( byte ) 0x27 , ( byte ) 0x69 , ( byte ) 0xbb , ( byte ) 0x0e , 
 + ( byte ) 0x12 , ( byte ) 0x36 , ( byte ) 0x5a , ( byte ) 0xee , ( byte ) 0xf1 , ( byte ) 0xd0 , ( byte ) 0xb3 , ( byte ) 0x16 , ( byte ) 0x3a , ( byte ) 0x4e , ( byte ) 0xd2 , ( byte ) 0xb5 , ( byte ) 0x1c , ( byte ) 0x24 , ( byte ) 0x6c , ( byte ) 0xb4 , 
 + ( byte ) 0x1f , ( byte ) 0x21 , ( byte ) 0x63 , ( byte ) 0xa5 , ( byte ) 0x2c , ( byte ) 0x74 , ( byte ) 0x9c , ( byte ) 0x67 , ( byte ) 0xa9 , ( byte ) 0x38 , ( byte ) 0x48 , ( byte ) 0xd8 , ( byte ) 0xab , ( byte ) 0x3e , ( byte ) 0x42 , ( byte ) 0xc6 , 
 + ( byte ) 0x89 , ( byte ) 0x58 , ( byte ) 0xe8 , ( byte ) 0xfb , ( byte ) 0xce , ( byte ) 0x91 , ( byte ) 0x70 , ( byte ) 0x90 , ( byte ) 0x73 , ( byte ) 0x95 , ( byte ) 0x7c , ( byte ) 0x84 , ( byte ) 0x4f , ( byte ) 0xd1 , ( byte ) 0xb0 , ( byte ) 0x13 , 
 + ( byte ) 0x35 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0xe0 , ( byte ) 0xe3 , ( byte ) 0xe6 , ( byte ) 0xe9 , ( byte ) 0xf8 , ( byte ) 0xcb , ( byte ) 0x9e , ( byte ) 0x61 , ( byte ) 0xa3 , ( byte ) 0x26 , ( byte ) 0x6a , ( byte ) 0xbe , ( byte ) 0x01 , 
 + } ; 
 + 
 + / / Generated with http : / / www . cs . utsa . edu / ~ wagner / laws / FFM . html 
 + public static final byte [ ] gf256 _ L = new byte [ ] { 
 + ( byte ) 0x00 , ( byte ) 0x00 , ( byte ) 0x0d , ( byte ) 0x01 , ( byte ) 0x1a , ( byte ) 0x02 , ( byte ) 0x0e , ( byte ) 0xb2 , ( byte ) 0x27 , ( byte ) 0xb3 , ( byte ) 0x0f , ( byte ) 0xba , ( byte ) 0x1b , ( byte ) 0x91 , ( byte ) 0xbf , ( byte ) 0x03 , 
 + ( byte ) 0x34 , ( byte ) 0x04 , ( byte ) 0xc0 , ( byte ) 0xef , ( byte ) 0x1c , ( byte ) 0x65 , ( byte ) 0xc7 , ( byte ) 0x92 , ( byte ) 0x28 , ( byte ) 0x3a , ( byte ) 0x9e , ( byte ) 0xb4 , ( byte ) 0xcc , ( byte ) 0xbb , ( byte ) 0x10 , ( byte ) 0xd0 , 
 + ( byte ) 0x41 , ( byte ) 0xd1 , ( byte ) 0x11 , ( byte ) 0x44 , ( byte ) 0xcd , ( byte ) 0x31 , ( byte ) 0xfc , ( byte ) 0xbc , ( byte ) 0x29 , ( byte ) 0x7c , ( byte ) 0x72 , ( byte ) 0x3b , ( byte ) 0xd4 , ( byte ) 0xb5 , ( byte ) 0x9f , ( byte ) 0x97 , 
 + ( byte ) 0x35 , ( byte ) 0x6d , ( byte ) 0x47 , ( byte ) 0x05 , ( byte ) 0xab , ( byte ) 0xf0 , ( byte ) 0xc1 , ( byte ) 0x56 , ( byte ) 0xd9 , ( byte ) 0x93 , ( byte ) 0xc8 , ( byte ) 0x8d , ( byte ) 0x1d , ( byte ) 0x14 , ( byte ) 0xdd , ( byte ) 0x66 , 
 + ( byte ) 0x4e , ( byte ) 0x67 , ( byte ) 0xde , ( byte ) 0x5c , ( byte ) 0x1e , ( byte ) 0x75 , ( byte ) 0x51 , ( byte ) 0x15 , ( byte ) 0xda , ( byte ) 0x6a , ( byte ) 0x3e , ( byte ) 0x94 , ( byte ) 0x0a , ( byte ) 0x8e , ( byte ) 0xc9 , ( byte ) 0xec , 
 + ( byte ) 0x36 , ( byte ) 0x23 , ( byte ) 0x89 , ( byte ) 0x6e , ( byte ) 0x7f , ( byte ) 0x06 , ( byte ) 0x48 , ( byte ) 0x5f , ( byte ) 0xe1 , ( byte ) 0x57 , ( byte ) 0xc2 , ( byte ) 0x2c , ( byte ) 0xac , ( byte ) 0x83 , ( byte ) 0xa4 , ( byte ) 0xf1 , 
 + ( byte ) 0x42 , ( byte ) 0xfa , ( byte ) 0x7a , ( byte ) 0xd2 , ( byte ) 0x54 , ( byte ) 0x45 , ( byte ) 0x12 , ( byte ) 0xd7 , ( byte ) 0xb8 , ( byte ) 0xbd , ( byte ) 0xfd , ( byte ) 0x18 , ( byte ) 0xce , ( byte ) 0x9c , ( byte ) 0x63 , ( byte ) 0x32 , 
 + ( byte ) 0xe6 , ( byte ) 0x98 , ( byte ) 0xa0 , ( byte ) 0xe8 , ( byte ) 0xd5 , ( byte ) 0x78 , ( byte ) 0x9a , ( byte ) 0xb6 , ( byte ) 0x2a , ( byte ) 0xa2 , ( byte ) 0x21 , ( byte ) 0x7d , ( byte ) 0xea , ( byte ) 0x3c , ( byte ) 0x73 , ( byte ) 0x4c , 
 + ( byte ) 0x5b , ( byte ) 0x4d , ( byte ) 0x74 , ( byte ) 0x50 , ( byte ) 0xeb , ( byte ) 0x09 , ( byte ) 0x69 , ( byte ) 0x3d , ( byte ) 0x2b , ( byte ) 0xe0 , ( byte ) 0x82 , ( byte ) 0xa3 , ( byte ) 0x5e , ( byte ) 0x7e , ( byte ) 0x22 , ( byte ) 0x88 , 
 + ( byte ) 0xe7 , ( byte ) 0xe5 , ( byte ) 0x77 , ( byte ) 0x99 , ( byte ) 0x4b , ( byte ) 0xe9 , ( byte ) 0xa1 , ( byte ) 0x20 , ( byte ) 0x17 , ( byte ) 0xb7 , ( byte ) 0x9b , ( byte ) 0x62 , ( byte ) 0xd6 , ( byte ) 0x53 , ( byte ) 0xf9 , ( byte ) 0x79 , 
 + ( byte ) 0x43 , ( byte ) 0x40 , ( byte ) 0x30 , ( byte ) 0xfb , ( byte ) 0x96 , ( byte ) 0xd3 , ( byte ) 0x7b , ( byte ) 0x71 , ( byte ) 0x8c , ( byte ) 0xd8 , ( byte ) 0x13 , ( byte ) 0xdc , ( byte ) 0x55 , ( byte ) 0xaa , ( byte ) 0x6c , ( byte ) 0x46 , 
 + ( byte ) 0xee , ( byte ) 0x33 , ( byte ) 0x64 , ( byte ) 0xc6 , ( byte ) 0xcf , ( byte ) 0xcb , ( byte ) 0x39 , ( byte ) 0x9d , ( byte ) 0xb9 , ( byte ) 0x26 , ( byte ) 0x90 , ( byte ) 0xbe , ( byte ) 0xb1 , ( byte ) 0x19 , ( byte ) 0xfe , ( byte ) 0x0c , 
 + ( byte ) 0x4f , ( byte ) 0x5a , ( byte ) 0x08 , ( byte ) 0x68 , ( byte ) 0x87 , ( byte ) 0x5d , ( byte ) 0xdf , ( byte ) 0x81 , ( byte ) 0x61 , ( byte ) 0x16 , ( byte ) 0x52 , ( byte ) 0xf8 , ( byte ) 0x1f , ( byte ) 0x4a , ( byte ) 0xe4 , ( byte ) 0x76 , 
 + ( byte ) 0xc5 , ( byte ) 0xed , ( byte ) 0xca , ( byte ) 0x38 , ( byte ) 0x0b , ( byte ) 0xb0 , ( byte ) 0x25 , ( byte ) 0x8f , ( byte ) 0xdb , ( byte ) 0x8b , ( byte ) 0xa9 , ( byte ) 0x6b , ( byte ) 0x70 , ( byte ) 0x95 , ( byte ) 0x3f , ( byte ) 0x2f , 
 + ( byte ) 0xf3 , ( byte ) 0xf2 , ( byte ) 0xa5 , ( byte ) 0xf4 , ( byte ) 0xad , ( byte ) 0xa6 , ( byte ) 0xf5 , ( byte ) 0x84 , ( byte ) 0xe2 , ( byte ) 0xf6 , ( byte ) 0x85 , ( byte ) 0x58 , ( byte ) 0xa7 , ( byte ) 0x2d , ( byte ) 0xc3 , ( byte ) 0xae , 
 + ( byte ) 0x37 , ( byte ) 0xc4 , ( byte ) 0xaf , ( byte ) 0x24 , ( byte ) 0x2e , ( byte ) 0x6f , ( byte ) 0x8a , ( byte ) 0xa8 , ( byte ) 0xf7 , ( byte ) 0x60 , ( byte ) 0x49 , ( byte ) 0xe3 , ( byte ) 0x80 , ( byte ) 0x86 , ( byte ) 0x59 , ( byte ) 0x07 , 
 + } ; 
 } 
 \ No newline at end of file
