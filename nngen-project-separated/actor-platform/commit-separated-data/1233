BLEU SCORE: 0.2984745896009823

TEST MSG: fix ( iOS ) : fix get stickers pack
GENERATED MSG: feat ( iOS ) : Implemented contact sharing

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift < nl > index f87ad8c . . a2ba9b1 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift < nl > @ @ - 215 , 16 + 215 , 23 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > < nl > Actor . loadStickers ( ) < nl > < nl > - let packsArray = Actor . getOwnStickerPacksIdsVM ( ) ! . get ( ) as ! JavaUtilArrayList < nl > - let sickersPack = packsArray . getWithInt ( 0 ) as ! ACStickerPackVM < nl > - let sickers = sickersPack . stickers . get ( ) as ! JavaUtilArrayList < nl > - < nl > - for i in 0 . . < sickers . size ( ) { < nl > - let stickerModel = sickers . getWithInt ( i ) as ! ACSticker < nl > - self . stickersArray . append ( stickerModel ) < nl > + if let packsArray = Actor . getOwnStickerPacksIdsVM ( ) ! . get ( ) { < nl > + < nl > + let packesArrarChecked = packsArray as ! JavaUtilArrayList < nl > + if packesArrarChecked . size ( ) > 0 { < nl > + let sickersPack = packesArrarChecked . getWithInt ( 0 ) as ! ACStickerPackVM < nl > + let sickers = sickersPack . stickers . get ( ) as ! JavaUtilArrayList < nl > + < nl > + for i in 0 . . < sickers . size ( ) { < nl > + let stickerModel = sickers . getWithInt ( i ) as ! ACSticker < nl > + self . stickersArray . append ( stickerModel ) < nl > + } < nl > + < nl > + print ( " packs class = = = \ ( sickers ) " ) < nl > + } < nl > + < nl > } < nl > < nl > - print ( " packs class = = = \ ( sickers ) " ) < nl > < nl > self . collectionView . reloadData ( ) < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift < nl > index 9e05117 . . e4d5523 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift < nl > @ @ - 193 , 21 + 193 , 21 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { < nl > } < nl > < nl > public func bgLoadThumb ( selfGeneration : Int ) { < nl > - if ( thumbLoaded ) { < nl > - return < nl > - } < nl > - thumbLoaded = true < nl > - < nl > - if ( bindedLayout . fastThumb ! = nil ) { < nl > - let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? < nl > - . roundCorners ( bindedLayout . screenSize . width , < nl > - h : bindedLayout . screenSize . height , < nl > - roundSize : 14 ) < nl > - < nl > - runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > - self . setPreviewImage ( loadedThumb ! , fast : true ) < nl > - } ) ; < nl > - } < nl > + / / if ( thumbLoaded ) { < nl > + / / return < nl > + / / } < nl > + / / thumbLoaded = true < nl > + / / < nl > + / / if ( bindedLayout . fastThumb ! = nil ) { < nl > + / / let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? < nl > + / / . roundCorners ( bindedLayout . screenSize . width , < nl > + / / h : bindedLayout . screenSize . height , < nl > + / / roundSize : 14 ) < nl > + / / < nl > + / / runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > + / / self . setPreviewImage ( loadedThumb ! , fast : true ) < nl > + / / } ) ; < nl > + / / } < nl > } < nl > < nl > public func bgLoadReference ( reference : String , selfGeneration : Int ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index adb1ae5 . . 2059691 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 396 , 6 + 396 , 8 @ @ < nl > < nl > " ShareLocation " = " Location " ; < nl > < nl > + " ShareContact " = " Share Contact " ; < nl > + < nl > " NavigationEdit " = " Edit " ; < nl > < nl > " NavigationDone " = " Done " ; < nl > @ @ - 455 , 3 + 457 , 5 @ @ < nl > " ErrorAlreadyJoined " = " You are already member of group " ; < nl > < nl > " ErrorUnableToJoin " = " Unable to join to group " ; < nl > + < nl > + " ErrorUnableToCall " = " Unable to call this number " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > index 576fd1d . . aee6b33 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > @ @ - 449 , 3 + 449 , 7 @ @ < nl > " ErrorPhoneIncorrect " = " N ú mero de telefone inv á lido . Por favor tente de novo . " ; < nl > < nl > " ErrorCodeExpired " = " C ó digo expirou . Por favor reinicie a autentica ç ã o . " ; < nl > + < nl > + " ErrorUnableToJoin " = " Unable to join to group " ; < nl > + < nl > + " ErrorUnableToCall " = " Unable to call this number " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > index 4e1554a . . 3fc1106 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > @ @ - 398 , 6 + 398 , 8 @ @ < nl > < nl > " SendDocument " = " Д о к у м е н т " ; < nl > < nl > + " ShareContact " = " К о н т а к т " ; < nl > + < nl > " NavigationEdit " = " И з м е н и т ь " ; < nl > < nl > " NavigationDone " = " Г о т о в о " ; < nl > @ @ - 457 , 3 + 459 , 5 @ @ < nl > " ErrorAlreadyJoined " = " В ы у ж е у ч а с т н и к г р у п п ы " ; < nl > < nl > " ErrorUnableToJoin " = " Н е в о з м о ж н о в с т у п и т ь в г р у п п у " ; < nl > + < nl > + " ErrorUnableToCall " = " Н е в о з м о ж н о п о з в о н и т ь н а э т о т н о м е р " ; < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > index 6e4eb3c . . 8fc5e28 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > @ @ - 396 , 6 + 396 , 8 @ @ < nl > < nl > " ShareLocation " = " Location " ; < nl > < nl > + " ShareContact " = " Contact " ; < nl > + < nl > " NavigationEdit " = " 编 辑 " ; < nl > < nl > " NavigationDone " = " 完 成 " ; < nl > @ @ - 454 , 4 + 456 , 6 @ @ < nl > < nl > " ErrorAlreadyJoined " = " You are already member of group " ; < nl > < nl > - " ErrorUnableToJoin " = " Unable to join to group " ; < nl > \ No newline at end of file < nl > + " ErrorUnableToJoin " = " Unable to join to group " ; < nl > + < nl > + " ErrorUnableToCall " = " Unable to call this number " ; < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > index 4a76f56 . . bd4c0fd 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > @ @ - 3 , 30 + 3 , 113 @ @ < nl > / / < nl > < nl > import Foundation < nl > + import AddressBookUI < nl > + import MessageUI < nl > < nl > - public class AABubbleContactCell : AABubbleCell { < nl > + public class AABubbleContactCell : AABubbleCell , ABNewPersonViewControllerDelegate , MFMailComposeViewControllerDelegate , UINavigationControllerDelegate { < nl > < nl > private let avatar = AAAvatarView ( frameSize : 44 ) < nl > private let name = UILabel ( ) < nl > private let contact = UILabel ( ) < nl > private var bindedRecords = [ String ] ( ) < nl > + private let tapView = UIView ( ) < nl > < nl > public init ( frame : CGRect ) { < nl > super . init ( frame : frame , isFullSize : false ) < nl > < nl > name . font = UIFont . mediumSystemFontOfSize ( 17 ) < nl > contact . font = UIFont . systemFontOfSize ( 15 ) < nl > + tapView . backgroundColor = UIColor . clearColor ( ) < nl > < nl > contentView . addSubview ( avatar ) < nl > contentView . addSubview ( name ) < nl > contentView . addSubview ( contact ) < nl > + contentView . addSubview ( tapView ) < nl > < nl > contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + < nl > + tapView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " contactDidTap " ) ) < nl > + tapView . userInteractionEnabled = true < nl > } < nl > < nl > public required init ( coder aDecoder : NSCoder ) { < nl > fatalError ( " init ( coder : ) has not been implemented " ) < nl > } < nl > + < nl > + func contactDidTap ( ) { < nl > + if let m = bindedMessage { < nl > + if let c = m . content as ? ACContactContent { < nl > + let menuBuilder = AAMenuBuilder ( ) < nl > + let phones = c . getPhones ( ) < nl > + for i in 0 . . < phones . size ( ) { < nl > + let p = phones . getWithInt ( i ) as ! String < nl > + menuBuilder . add ( p , closure : { ( ) - > ( ) in < nl > + if let url = NSURL ( string : " tel : \ ( p ) " ) { < nl > + if ! UIApplication . sharedApplication ( ) . openURL ( url ) { < nl > + self . controller . alertUser ( " ErrorUnableToCall " ) < nl > + } < nl > + } else { < nl > + self . controller . alertUser ( " ErrorUnableToCall " ) < nl > + } < nl > + } ) < nl > + } < nl > + let emails = c . getEmails ( ) < nl > + for i in 0 . . < emails . size ( ) { < nl > + let e = emails . getWithInt ( i ) as ! String < nl > + menuBuilder . add ( e , closure : { ( ) - > ( ) in < nl > + let emailController = MFMailComposeViewController ( ) < nl > + emailController . delegate = self < nl > + emailController . setToRecipients ( [ e ] ) < nl > + self . controller . presentViewController ( emailController , animated : true , completion : nil ) < nl > + } ) < nl > + } < nl > + menuBuilder . add ( " Add to Contacts " , closure : { ( ) - > ( ) in < nl > + let add = ABNewPersonViewController ( ) < nl > + add . newPersonViewDelegate = self < nl > + < nl > + let person : ABRecordRef = ABPersonCreate ( ) . takeRetainedValue ( ) < nl > + let name = c . getName ( ) . trim ( ) < nl > + let nameParts = name . componentsSeparatedByString ( " " ) < nl > + ABRecordSetValue ( person , kABPersonFirstNameProperty , nameParts [ 0 ] , nil ) < nl > + if ( nameParts . count > = 2 ) { < nl > + let lastName = name . substringFromIndex ( nameParts [ 0 ] . endIndex ) . trim ( ) < nl > + ABRecordSetValue ( person , kABPersonLastNameProperty , lastName , nil ) < nl > + } < nl > + < nl > + if ( phones . size ( ) > 0 ) { < nl > + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) < nl > + for i in 0 . . < phones . size ( ) { < nl > + let p = phones . getWithInt ( i ) as ! String < nl > + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) < nl > + } < nl > + ABRecordSetValue ( person , kABPersonPhoneProperty , phonesValues , nil ) < nl > + } < nl > + < nl > + if ( emails . size ( ) > 0 ) { < nl > + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) < nl > + for i in 0 . . < emails . size ( ) { < nl > + let p = emails . getWithInt ( i ) as ! String < nl > + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) < nl > + } < nl > + ABRecordSetValue ( person , kABPersonEmailProperty , phonesValues , nil ) < nl > + } < nl > + < nl > + add . displayedPerson = person < nl > + self . controller . presentViewController ( AANavigationController ( rootViewController : add ) , animated : true , completion : nil ) < nl > + } ) < nl > + < nl > + controller . showActionSheet ( menuBuilder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : tapView , sourceRect : tapView . bounds , tapClosure : menuBuilder . tapClosure ) < nl > + } < nl > + } < nl > + } < nl > + < nl > + public func newPersonViewController ( newPersonView : ABNewPersonViewController , didCompleteWithNewPerson person : ABRecord ? ) { < nl > + newPersonView . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > + < nl > + public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > < nl > public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > < nl > @ @ - 90 , 8 + 173 , 10 @ @ public class AABubbleContactCell : AABubbleCell { < nl > < nl > if ( isOut ) { < nl > avatar . frame = CGRectMake ( contentWidth - insets . right - 200 , insets . top , 44 , 44 ) < nl > + tapView . frame = CGRectMake ( contentWidth - insets . left - 200 , insets . top , 200 , CGFloat ( height ) ) < nl > } else { < nl > avatar . frame = CGRectMake ( insets . left , insets . top , 44 , 44 ) < nl > + tapView . frame = CGRectMake ( insets . left , insets . top , 200 , CGFloat ( height ) ) < nl > } < nl > name . frame = CGRectMake ( avatar . right + 6 , insets . top , 200 - 58 , 22 ) < nl > contact . frame = CGRectMake ( avatar . right + 6 , insets . top + 22 , 200 - 58 , 200 ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 0622c28 . . 1bb3c65 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 539 , 6 + 539 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > < nl > / / Sending < nl > < nl > - Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : JavaUtilHashSet ( ) , withPhoto : jAvatarImage ) < nl > + Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : jEmails , withPhoto : jAvatarImage ) < nl > } < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift 
 index f87ad8c . . a2ba9b1 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAStickersView . swift 
 @ @ - 215 , 16 + 215 , 23 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 
 Actor . loadStickers ( ) 
 
 - let packsArray = Actor . getOwnStickerPacksIdsVM ( ) ! . get ( ) as ! JavaUtilArrayList 
 - let sickersPack = packsArray . getWithInt ( 0 ) as ! ACStickerPackVM 
 - let sickers = sickersPack . stickers . get ( ) as ! JavaUtilArrayList 
 - 
 - for i in 0 . . < sickers . size ( ) { 
 - let stickerModel = sickers . getWithInt ( i ) as ! ACSticker 
 - self . stickersArray . append ( stickerModel ) 
 + if let packsArray = Actor . getOwnStickerPacksIdsVM ( ) ! . get ( ) { 
 + 
 + let packesArrarChecked = packsArray as ! JavaUtilArrayList 
 + if packesArrarChecked . size ( ) > 0 { 
 + let sickersPack = packesArrarChecked . getWithInt ( 0 ) as ! ACStickerPackVM 
 + let sickers = sickersPack . stickers . get ( ) as ! JavaUtilArrayList 
 + 
 + for i in 0 . . < sickers . size ( ) { 
 + let stickerModel = sickers . getWithInt ( i ) as ! ACSticker 
 + self . stickersArray . append ( stickerModel ) 
 + } 
 + 
 + print ( " packs class = = = \ ( sickers ) " ) 
 + } 
 + 
 } 
 
 - print ( " packs class = = = \ ( sickers ) " ) 
 
 self . collectionView . reloadData ( ) 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift 
 index 9e05117 . . e4d5523 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift 
 @ @ - 193 , 21 + 193 , 21 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { 
 } 
 
 public func bgLoadThumb ( selfGeneration : Int ) { 
 - if ( thumbLoaded ) { 
 - return 
 - } 
 - thumbLoaded = true 
 - 
 - if ( bindedLayout . fastThumb ! = nil ) { 
 - let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? 
 - . roundCorners ( bindedLayout . screenSize . width , 
 - h : bindedLayout . screenSize . height , 
 - roundSize : 14 ) 
 - 
 - runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 - self . setPreviewImage ( loadedThumb ! , fast : true ) 
 - } ) ; 
 - } 
 + / / if ( thumbLoaded ) { 
 + / / return 
 + / / } 
 + / / thumbLoaded = true 
 + / / 
 + / / if ( bindedLayout . fastThumb ! = nil ) { 
 + / / let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? 
 + / / . roundCorners ( bindedLayout . screenSize . width , 
 + / / h : bindedLayout . screenSize . height , 
 + / / roundSize : 14 ) 
 + / / 
 + / / runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 + / / self . setPreviewImage ( loadedThumb ! , fast : true ) 
 + / / } ) ; 
 + / / } 
 } 
 
 public func bgLoadReference ( reference : String , selfGeneration : Int ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index adb1ae5 . . 2059691 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 396 , 6 + 396 , 8 @ @ 
 
 " ShareLocation " = " Location " ; 
 
 + " ShareContact " = " Share Contact " ; 
 + 
 " NavigationEdit " = " Edit " ; 
 
 " NavigationDone " = " Done " ; 
 @ @ - 455 , 3 + 457 , 5 @ @ 
 " ErrorAlreadyJoined " = " You are already member of group " ; 
 
 " ErrorUnableToJoin " = " Unable to join to group " ; 
 + 
 + " ErrorUnableToCall " = " Unable to call this number " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 index 576fd1d . . aee6b33 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 @ @ - 449 , 3 + 449 , 7 @ @ 
 " ErrorPhoneIncorrect " = " N ú mero de telefone inv á lido . Por favor tente de novo . " ; 
 
 " ErrorCodeExpired " = " C ó digo expirou . Por favor reinicie a autentica ç ã o . " ; 
 + 
 + " ErrorUnableToJoin " = " Unable to join to group " ; 
 + 
 + " ErrorUnableToCall " = " Unable to call this number " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 index 4e1554a . . 3fc1106 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 @ @ - 398 , 6 + 398 , 8 @ @ 
 
 " SendDocument " = " Д о к у м е н т " ; 
 
 + " ShareContact " = " К о н т а к т " ; 
 + 
 " NavigationEdit " = " И з м е н и т ь " ; 
 
 " NavigationDone " = " Г о т о в о " ; 
 @ @ - 457 , 3 + 459 , 5 @ @ 
 " ErrorAlreadyJoined " = " В ы у ж е у ч а с т н и к г р у п п ы " ; 
 
 " ErrorUnableToJoin " = " Н е в о з м о ж н о в с т у п и т ь в г р у п п у " ; 
 + 
 + " ErrorUnableToCall " = " Н е в о з м о ж н о п о з в о н и т ь н а э т о т н о м е р " ; 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 index 6e4eb3c . . 8fc5e28 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 @ @ - 396 , 6 + 396 , 8 @ @ 
 
 " ShareLocation " = " Location " ; 
 
 + " ShareContact " = " Contact " ; 
 + 
 " NavigationEdit " = " 编 辑 " ; 
 
 " NavigationDone " = " 完 成 " ; 
 @ @ - 454 , 4 + 456 , 6 @ @ 
 
 " ErrorAlreadyJoined " = " You are already member of group " ; 
 
 - " ErrorUnableToJoin " = " Unable to join to group " ; 
 \ No newline at end of file 
 + " ErrorUnableToJoin " = " Unable to join to group " ; 
 + 
 + " ErrorUnableToCall " = " Unable to call this number " ; 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 index 4a76f56 . . bd4c0fd 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 @ @ - 3 , 30 + 3 , 113 @ @ 
 / / 
 
 import Foundation 
 + import AddressBookUI 
 + import MessageUI 
 
 - public class AABubbleContactCell : AABubbleCell { 
 + public class AABubbleContactCell : AABubbleCell , ABNewPersonViewControllerDelegate , MFMailComposeViewControllerDelegate , UINavigationControllerDelegate { 
 
 private let avatar = AAAvatarView ( frameSize : 44 ) 
 private let name = UILabel ( ) 
 private let contact = UILabel ( ) 
 private var bindedRecords = [ String ] ( ) 
 + private let tapView = UIView ( ) 
 
 public init ( frame : CGRect ) { 
 super . init ( frame : frame , isFullSize : false ) 
 
 name . font = UIFont . mediumSystemFontOfSize ( 17 ) 
 contact . font = UIFont . systemFontOfSize ( 15 ) 
 + tapView . backgroundColor = UIColor . clearColor ( ) 
 
 contentView . addSubview ( avatar ) 
 contentView . addSubview ( name ) 
 contentView . addSubview ( contact ) 
 + contentView . addSubview ( tapView ) 
 
 contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + 
 + tapView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " contactDidTap " ) ) 
 + tapView . userInteractionEnabled = true 
 } 
 
 public required init ( coder aDecoder : NSCoder ) { 
 fatalError ( " init ( coder : ) has not been implemented " ) 
 } 
 + 
 + func contactDidTap ( ) { 
 + if let m = bindedMessage { 
 + if let c = m . content as ? ACContactContent { 
 + let menuBuilder = AAMenuBuilder ( ) 
 + let phones = c . getPhones ( ) 
 + for i in 0 . . < phones . size ( ) { 
 + let p = phones . getWithInt ( i ) as ! String 
 + menuBuilder . add ( p , closure : { ( ) - > ( ) in 
 + if let url = NSURL ( string : " tel : \ ( p ) " ) { 
 + if ! UIApplication . sharedApplication ( ) . openURL ( url ) { 
 + self . controller . alertUser ( " ErrorUnableToCall " ) 
 + } 
 + } else { 
 + self . controller . alertUser ( " ErrorUnableToCall " ) 
 + } 
 + } ) 
 + } 
 + let emails = c . getEmails ( ) 
 + for i in 0 . . < emails . size ( ) { 
 + let e = emails . getWithInt ( i ) as ! String 
 + menuBuilder . add ( e , closure : { ( ) - > ( ) in 
 + let emailController = MFMailComposeViewController ( ) 
 + emailController . delegate = self 
 + emailController . setToRecipients ( [ e ] ) 
 + self . controller . presentViewController ( emailController , animated : true , completion : nil ) 
 + } ) 
 + } 
 + menuBuilder . add ( " Add to Contacts " , closure : { ( ) - > ( ) in 
 + let add = ABNewPersonViewController ( ) 
 + add . newPersonViewDelegate = self 
 + 
 + let person : ABRecordRef = ABPersonCreate ( ) . takeRetainedValue ( ) 
 + let name = c . getName ( ) . trim ( ) 
 + let nameParts = name . componentsSeparatedByString ( " " ) 
 + ABRecordSetValue ( person , kABPersonFirstNameProperty , nameParts [ 0 ] , nil ) 
 + if ( nameParts . count > = 2 ) { 
 + let lastName = name . substringFromIndex ( nameParts [ 0 ] . endIndex ) . trim ( ) 
 + ABRecordSetValue ( person , kABPersonLastNameProperty , lastName , nil ) 
 + } 
 + 
 + if ( phones . size ( ) > 0 ) { 
 + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) 
 + for i in 0 . . < phones . size ( ) { 
 + let p = phones . getWithInt ( i ) as ! String 
 + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) 
 + } 
 + ABRecordSetValue ( person , kABPersonPhoneProperty , phonesValues , nil ) 
 + } 
 + 
 + if ( emails . size ( ) > 0 ) { 
 + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) 
 + for i in 0 . . < emails . size ( ) { 
 + let p = emails . getWithInt ( i ) as ! String 
 + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) 
 + } 
 + ABRecordSetValue ( person , kABPersonEmailProperty , phonesValues , nil ) 
 + } 
 + 
 + add . displayedPerson = person 
 + self . controller . presentViewController ( AANavigationController ( rootViewController : add ) , animated : true , completion : nil ) 
 + } ) 
 + 
 + controller . showActionSheet ( menuBuilder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : tapView , sourceRect : tapView . bounds , tapClosure : menuBuilder . tapClosure ) 
 + } 
 + } 
 + } 
 + 
 + public func newPersonViewController ( newPersonView : ABNewPersonViewController , didCompleteWithNewPerson person : ABRecord ? ) { 
 + newPersonView . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 + 
 + public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 
 public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 
 @ @ - 90 , 8 + 173 , 10 @ @ public class AABubbleContactCell : AABubbleCell { 
 
 if ( isOut ) { 
 avatar . frame = CGRectMake ( contentWidth - insets . right - 200 , insets . top , 44 , 44 ) 
 + tapView . frame = CGRectMake ( contentWidth - insets . left - 200 , insets . top , 200 , CGFloat ( height ) ) 
 } else { 
 avatar . frame = CGRectMake ( insets . left , insets . top , 44 , 44 ) 
 + tapView . frame = CGRectMake ( insets . left , insets . top , 200 , CGFloat ( height ) ) 
 } 
 name . frame = CGRectMake ( avatar . right + 6 , insets . top , 200 - 58 , 22 ) 
 contact . frame = CGRectMake ( avatar . right + 6 , insets . top + 22 , 200 - 58 , 200 ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 0622c28 . . 1bb3c65 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 539 , 6 + 539 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 
 / / Sending 
 
 - Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : JavaUtilHashSet ( ) , withPhoto : jAvatarImage ) 
 + Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : jEmails , withPhoto : jAvatarImage ) 
 } 
 } 
 \ No newline at end of file
