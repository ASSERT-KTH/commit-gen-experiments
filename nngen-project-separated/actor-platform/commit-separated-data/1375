BLEU SCORE: 0.029381581998927445

TEST MSG: deps ( server ) : upgraded to slick - 3 . 1
GENERATED MSG: Merge branch ' develop ' of github . com : actorapp / actor - platform into develop

TEST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala < nl > index a815387 . . 20a7fa3 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala < nl > @ @ - 14 , 6 + 14 , 7 @ @ trait ByteStringImplicits { < nl > } < nl > < nl > trait ActorPostgresDriver extends ExPostgresDriver < nl > + with PgDateSupport < nl > with PgDate2Support < nl > with PgArraySupport < nl > with PgLTreeSupport { < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > index 803ea03 . . 467463e 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > @ @ - 7 , 7 + 7 , 8 @ @ import com . typesafe . config . { Config , ConfigFactory } < nl > import im . actor . server . JNDI < nl > import org . flywaydb . core . Flyway < nl > import slick . driver . PostgresDriver . api . Database < nl > - import slick . jdbc . { HikariCPJdbcDataSource , JdbcDataSource } < nl > + import slick . jdbc . hikaricp . HikariCPJdbcDataSource < nl > + import slick . jdbc . JdbcDataSource < nl > < nl > import scala . util . { Failure , Success , Try } < nl > < nl > @ @ - 62 , 7 + 63 , 7 @ @ object DbExtension extends ExtensionId [ DbExtensionImpl ] with ExtensionIdProvider < nl > s " " " < nl > | url : " jdbc : postgresql : / / " $ { host } " : " $ { port } " / " $ { db } < nl > " " " . stripMargin < nl > - ) ) . resolve ( ) , null , " main " ) < nl > + ) ) . resolve ( ) , null , " main " , getClass . getClassLoader ) < nl > } < nl > < nl > private def initDb ( ds : HikariCPJdbcDataSource ) : Database = { < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala < nl > index ab1d6ce . . 0153142 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala < nl > @ @ - 3 , 7 + 3 , 7 @ @ package im . actor . server . persist < nl > import im . actor . server . model < nl > import scala . concurrent . ExecutionContext < nl > import scala . language . postfixOps < nl > - import slick . driver . PostgresDriver . api . _ , Database . dynamicSession < nl > + import slick . driver . PostgresDriver . api . _ < nl > import shapeless . _ , syntax . std . tuple . _ < nl > < nl > final class AvatarDataTable ( tag : Tag ) extends Table [ model . AvatarData ] ( tag , " avatar _ datas " ) { < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 30142dd . . ed170c9 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 11 , 7 + 11 , 8 @ @ object Dependencies { < nl > val cats = " 0 . 2 . 0 " < nl > val kamon = " 0 . 5 . 2 " < nl > val scalaz = " 7 . 1 . 1 " < nl > - val slick = " 3 . 0 . 3 " < nl > + val slick = " 3 . 1 . 1 " < nl > + val slickPg = " 0 . 10 . 2 " < nl > val scalatest = " 2 . 2 . 4 " < nl > val shardakka = " 0 . 1 . 20 " < nl > val scalapbSer = " 0 . 1 . 6 " < nl > @ @ - 57 , 8 + 58 , 10 @ @ object Dependencies { < nl > < nl > val postgresJdbc = " org . postgresql " % " postgresql " % " 9 . 4 - 1201 - jdbc41 " exclude ( " org . slf4j " , " slf4j - simple " ) < nl > val slick = " com . typesafe . slick " % % " slick " % V . slick < nl > + val slickHikaricp = " com . typesafe . slick " % % " slick - hikaricp " % V . slick < nl > val slickJoda = " com . github . tototoshi " % % " slick - joda - mapper " % " 2 . 0 . 0 " < nl > - val slickPg = " com . github . tminglei " % % " slick - pg " % " 0 . 9 . 0 " < nl > + val slickPg = " com . github . tminglei " % % " slick - pg " % V . slickPg < nl > + val slickPgDate2 = " com . github . tminglei " % % " slick - pg _ date2 " % V . slickPg < nl > val slickTestkit = " com . typesafe . slick " % % " slick - testkit " % V . slick < nl > val flywayCore = " org . flywaydb " % " flyway - core " % " 3 . 1 " < nl > val hikariCP = " com . zaxxer " % " HikariCP " % " 2 . 3 . 5 " < nl > @ @ - 159 , 7 + 162 , 6 @ @ object Dependencies { < nl > jodaTime , < nl > postgresJdbc , < nl > shardakka , < nl > - slick , < nl > scrImageCore ) < nl > < nl > val enrich = shared + + Seq ( akkaActor , akkaHttp ) < nl > @ @ - 180 , 7 + 182 , 7 @ @ object Dependencies { < nl > < nl > val sessionMessages = Seq ( akkaActor ) < nl > < nl > - val persist = shared + + Seq ( akkaActor , akkaStream , apacheCommonsCodec , postgresJdbc , slick , slickJoda , slickPg , slickTestkit , flywayCore , hikariCP , jodaTime , jodaConvert ) < nl > + val persist = shared + + Seq ( akkaActor , akkaStream , apacheCommonsCodec , postgresJdbc , slick , slickHikaricp , slickJoda , slickPg , slickPgDate2 , slickTestkit , flywayCore , hikariCP , jodaTime , jodaConvert ) < nl > < nl > val presences = shared : + akkaClusterSharding
NEAREST DIFF (one line): diff - - git a / actor - apps / app - web / src / app / stores / GroupStore . js b / actor - apps / app - web / src / app / stores / GroupStore . js < nl > index 9ac8104 . . 7c2ad9e 100644 < nl > - - - a / actor - apps / app - web / src / app / stores / GroupStore . js < nl > + + + b / actor - apps / app - web / src / app / stores / GroupStore . js < nl > @ @ - 3 , 6 + 3 , 10 @ @ import ActorClient from ' . . / utils / ActorClient ' ; < nl > const GroupStore = { < nl > getGroup ( gid ) { < nl > return ActorClient . getGroup ( gid ) ; < nl > + } , < nl > + < nl > + getIntegrationToken ( gid ) { < nl > + return ActorClient . getIntegrationToken ( gid ) ; < nl > } < nl > } ; < nl > < nl > diff - - git a / actor - apps / app - web / src / app / utils / ActorClient . js b / actor - apps / app - web / src / app / utils / ActorClient . js < nl > index 0d1582d . . 1fe97d5 100644 < nl > - - - a / actor - apps / app - web / src / app / utils / ActorClient . js < nl > + + + b / actor - apps / app - web / src / app / utils / ActorClient . js < nl > @ @ - 139 , 6 + 139 , 8 @ @ export default { < nl > window . messenger . removeContact ( uid ) ; < nl > } , < nl > < nl > + / / Groups < nl > + < nl > joinGroup ( url ) { < nl > console . log ( ' Joining group by url : ' + url ) ; < nl > const p = window . messenger . joinGroupViaLink ( url ) ; < nl > @ @ - 163 , 6 + 165 , 10 @ @ export default { < nl > return window . messenger . inviteMember ( groupId , userId ) ; < nl > } , < nl > < nl > + getIntegrationToken ( gid ) { < nl > + return window . messenger . getIntegrationToken ( gid ) ; < nl > + } , < nl > + < nl > loadDraft ( peer ) { < nl > return window . messenger . loadDraft ( peer ) ; < nl > } ,

TEST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala 
 index a815387 . . 20a7fa3 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala 
 @ @ - 14 , 6 + 14 , 7 @ @ trait ByteStringImplicits { 
 } 
 
 trait ActorPostgresDriver extends ExPostgresDriver 
 + with PgDateSupport 
 with PgDate2Support 
 with PgArraySupport 
 with PgLTreeSupport { 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 index 803ea03 . . 467463e 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 @ @ - 7 , 7 + 7 , 8 @ @ import com . typesafe . config . { Config , ConfigFactory } 
 import im . actor . server . JNDI 
 import org . flywaydb . core . Flyway 
 import slick . driver . PostgresDriver . api . Database 
 - import slick . jdbc . { HikariCPJdbcDataSource , JdbcDataSource } 
 + import slick . jdbc . hikaricp . HikariCPJdbcDataSource 
 + import slick . jdbc . JdbcDataSource 
 
 import scala . util . { Failure , Success , Try } 
 
 @ @ - 62 , 7 + 63 , 7 @ @ object DbExtension extends ExtensionId [ DbExtensionImpl ] with ExtensionIdProvider 
 s " " " 
 | url : " jdbc : postgresql : / / " $ { host } " : " $ { port } " / " $ { db } 
 " " " . stripMargin 
 - ) ) . resolve ( ) , null , " main " ) 
 + ) ) . resolve ( ) , null , " main " , getClass . getClassLoader ) 
 } 
 
 private def initDb ( ds : HikariCPJdbcDataSource ) : Database = { 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala 
 index ab1d6ce . . 0153142 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / AvatarDataRepo . scala 
 @ @ - 3 , 7 + 3 , 7 @ @ package im . actor . server . persist 
 import im . actor . server . model 
 import scala . concurrent . ExecutionContext 
 import scala . language . postfixOps 
 - import slick . driver . PostgresDriver . api . _ , Database . dynamicSession 
 + import slick . driver . PostgresDriver . api . _ 
 import shapeless . _ , syntax . std . tuple . _ 
 
 final class AvatarDataTable ( tag : Tag ) extends Table [ model . AvatarData ] ( tag , " avatar _ datas " ) { 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 30142dd . . ed170c9 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 11 , 7 + 11 , 8 @ @ object Dependencies { 
 val cats = " 0 . 2 . 0 " 
 val kamon = " 0 . 5 . 2 " 
 val scalaz = " 7 . 1 . 1 " 
 - val slick = " 3 . 0 . 3 " 
 + val slick = " 3 . 1 . 1 " 
 + val slickPg = " 0 . 10 . 2 " 
 val scalatest = " 2 . 2 . 4 " 
 val shardakka = " 0 . 1 . 20 " 
 val scalapbSer = " 0 . 1 . 6 " 
 @ @ - 57 , 8 + 58 , 10 @ @ object Dependencies { 
 
 val postgresJdbc = " org . postgresql " % " postgresql " % " 9 . 4 - 1201 - jdbc41 " exclude ( " org . slf4j " , " slf4j - simple " ) 
 val slick = " com . typesafe . slick " % % " slick " % V . slick 
 + val slickHikaricp = " com . typesafe . slick " % % " slick - hikaricp " % V . slick 
 val slickJoda = " com . github . tototoshi " % % " slick - joda - mapper " % " 2 . 0 . 0 " 
 - val slickPg = " com . github . tminglei " % % " slick - pg " % " 0 . 9 . 0 " 
 + val slickPg = " com . github . tminglei " % % " slick - pg " % V . slickPg 
 + val slickPgDate2 = " com . github . tminglei " % % " slick - pg _ date2 " % V . slickPg 
 val slickTestkit = " com . typesafe . slick " % % " slick - testkit " % V . slick 
 val flywayCore = " org . flywaydb " % " flyway - core " % " 3 . 1 " 
 val hikariCP = " com . zaxxer " % " HikariCP " % " 2 . 3 . 5 " 
 @ @ - 159 , 7 + 162 , 6 @ @ object Dependencies { 
 jodaTime , 
 postgresJdbc , 
 shardakka , 
 - slick , 
 scrImageCore ) 
 
 val enrich = shared + + Seq ( akkaActor , akkaHttp ) 
 @ @ - 180 , 7 + 182 , 7 @ @ object Dependencies { 
 
 val sessionMessages = Seq ( akkaActor ) 
 
 - val persist = shared + + Seq ( akkaActor , akkaStream , apacheCommonsCodec , postgresJdbc , slick , slickJoda , slickPg , slickTestkit , flywayCore , hikariCP , jodaTime , jodaConvert ) 
 + val persist = shared + + Seq ( akkaActor , akkaStream , apacheCommonsCodec , postgresJdbc , slick , slickHikaricp , slickJoda , slickPg , slickPgDate2 , slickTestkit , flywayCore , hikariCP , jodaTime , jodaConvert ) 
 
 val presences = shared : + akkaClusterSharding

NEAREST DIFF:
diff - - git a / actor - apps / app - web / src / app / stores / GroupStore . js b / actor - apps / app - web / src / app / stores / GroupStore . js 
 index 9ac8104 . . 7c2ad9e 100644 
 - - - a / actor - apps / app - web / src / app / stores / GroupStore . js 
 + + + b / actor - apps / app - web / src / app / stores / GroupStore . js 
 @ @ - 3 , 6 + 3 , 10 @ @ import ActorClient from ' . . / utils / ActorClient ' ; 
 const GroupStore = { 
 getGroup ( gid ) { 
 return ActorClient . getGroup ( gid ) ; 
 + } , 
 + 
 + getIntegrationToken ( gid ) { 
 + return ActorClient . getIntegrationToken ( gid ) ; 
 } 
 } ; 
 
 diff - - git a / actor - apps / app - web / src / app / utils / ActorClient . js b / actor - apps / app - web / src / app / utils / ActorClient . js 
 index 0d1582d . . 1fe97d5 100644 
 - - - a / actor - apps / app - web / src / app / utils / ActorClient . js 
 + + + b / actor - apps / app - web / src / app / utils / ActorClient . js 
 @ @ - 139 , 6 + 139 , 8 @ @ export default { 
 window . messenger . removeContact ( uid ) ; 
 } , 
 
 + / / Groups 
 + 
 joinGroup ( url ) { 
 console . log ( ' Joining group by url : ' + url ) ; 
 const p = window . messenger . joinGroupViaLink ( url ) ; 
 @ @ - 163 , 6 + 165 , 10 @ @ export default { 
 return window . messenger . inviteMember ( groupId , userId ) ; 
 } , 
 
 + getIntegrationToken ( gid ) { 
 + return window . messenger . getIntegrationToken ( gid ) ; 
 + } , 
 + 
 loadDraft ( peer ) { 
 return window . messenger . loadDraft ( peer ) ; 
 } ,
