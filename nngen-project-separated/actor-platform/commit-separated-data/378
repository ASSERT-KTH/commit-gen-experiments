BLEU SCORE: 0.0859076483566362

TEST MSG: fix ( core + android ) : fix apply bot commands in User , fix Holder adapter bindings
GENERATED MSG: wip ( android ) : Commenting code

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 36e8f9a . . 0a40206 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 484 , 7 + 484 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > try { < nl > forwardContent = AbsContent . parse ( intent . getByteArrayExtra ( " forward _ content " ) ) ; < nl > } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > + < nl > } < nl > } < nl > < nl > @ @ - 1086 , 6 + 1086 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } , initEmpty ) ; < nl > } < nl > < nl > + / / if ( autocompleteAdapter . getCount ( ) = = 0 ) { < nl > + / / isAutocompleteVisible = false ; < nl > + / / return ; < nl > + / / } < nl > + < nl > autocompleteList . setAdapter ( autocompleteAdapter ) ; < nl > autocompleteList . setOnItemClickListener ( new AdapterView . OnItemClickListener ( ) { < nl > @ Override < nl > @ @ - 1108 , 10 + 1113 , 14 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > messageEditText . setSelection ( cursorPosition , cursorPosition ) ; < nl > } < nl > hideMentions ( ) ; < nl > + } else if ( item ! = null & & item instanceof CommandsAdapter . CommandHolder ) { < nl > + messenger ( ) . sendMessage ( peer , ( ( CommandsAdapter . CommandHolder ) item ) . getCommand ( ) . getSlashCommand ( ) ) ; < nl > + hideMentions ( ) ; < nl > } < nl > } < nl > } ) ; < nl > hideShare ( ) ; < nl > + < nl > expandMentions ( autocompleteList , 0 , autocompleteList . getCount ( ) ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java < nl > index 410dfa6 . . 0c0b3d4 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java < nl > @ @ - 14 , 7 + 14 , 6 @ @ import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . util . Screen ; < nl > - import im . actor . sdk . view . SearchHighlight ; < nl > import im . actor . sdk . view . adapters . HolderAdapter ; < nl > import im . actor . sdk . view . adapters . ViewHolder ; < nl > import im . actor . sdk . view . avatar . AvatarView ; < nl > @ @ - 29 , 9 + 28 , 12 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { < nl > private List < BotCommand > commandsToShow = new ArrayList < BotCommand > ( ) ; < nl > private CommandsUpdatedCallback updatedCallback ; < nl > private int highlightColor ; < nl > + private UserVM botUser ; < nl > + private String query = " " ; < nl > < nl > public CommandsAdapter ( int uid , Context context , CommandsUpdatedCallback updatedCallback ) { < nl > super ( context ) ; < nl > + botUser = users ( ) . get ( uid ) ; < nl > highlightColor = context . getResources ( ) . getColor ( R . color . primary ) ; < nl > commands = users ( ) . get ( uid ) . getBotCommands ( ) . get ( ) ; < nl > commandsToShow = users ( ) . get ( uid ) . getBotCommands ( ) . get ( ) ; < nl > @ @ - 41 , 9 + 43 , 13 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { < nl > } < nl > < nl > public void setQuery ( String q ) { < nl > + if ( q = = null | | q . equals ( query ) ) { < nl > + return ; < nl > + } < nl > + query = q ; < nl > ArrayList < BotCommand > filterd = new ArrayList < BotCommand > ( ) ; < nl > for ( BotCommand command : commands ) { < nl > - if ( command . getSlashCommand ( ) . toLowerCase ( ) . startsWith ( " q " ) ) { < nl > + if ( command . getSlashCommand ( ) . toLowerCase ( ) . startsWith ( q ) ) { < nl > filterd . add ( command ) ; < nl > } < nl > } < nl > @ @ - 79 , 7 + 85 , 7 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { < nl > void onMentionsUpdated ( int oldRowsCount , int newRowsCount ) ; < nl > } < nl > < nl > - private class CommandHolder extends ViewHolder < BotCommand > { < nl > + public class CommandHolder extends ViewHolder < BotCommand > { < nl > < nl > BotCommand data ; < nl > private TextView userName ; < nl > @ @ - 104 , 9 + 110 , 8 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { < nl > < nl > @ Override < nl > public void bind ( BotCommand data , int position , Context context ) { < nl > - UserVM user = users ( ) . get ( uid ) ; < nl > this . data = data ; < nl > - avatarView . bind ( user ) ; < nl > + avatarView . bind ( botUser ) ; < nl > CharSequence name = data . getSlashCommand ( ) ; < nl > userName . setText ( name ) ; < nl > < nl > @ @ - 114 , 6 + 119 , 9 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { < nl > mentionHint . setText ( hint ) ; < nl > } < nl > < nl > + public BotCommand getCommand ( ) { < nl > + return data ; < nl > + } < nl > < nl > @ Override < nl > public void unbind ( ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java < nl > index 825437b . . 40de074 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java < nl > @ @ - 41 , 6 + 41 , 9 @ @ public class MentionsAdapter extends HolderAdapter < MentionFilterResult > { < nl > } < nl > < nl > public void setQuery ( String q ) { < nl > + if ( q = = null | | q . equals ( query ) ) { < nl > + return ; < nl > + } < nl > query = q ; < nl > membersToShow = messenger ( ) . findMentions ( gid , q ) ; < nl > int newRowsCount = membersToShow . size ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java < nl > index 5bf7599 . . c1784dc 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java < nl > @ @ - 42 , 9 + 42 , 9 @ @ public abstract class HolderAdapter < V > extends BaseAdapter { < nl > } < nl > < nl > public void onMovedToScrapHeap ( View view ) { < nl > - if ( view . getTag ( ) instanceof ViewHolder ) { < nl > - ( ( ViewHolder ) view . getTag ( ) ) . unbind ( ) ; < nl > - } < nl > + / / if ( view . getTag ( ) instanceof ViewHolder ) { < nl > + / / ( ( ViewHolder ) view . getTag ( ) ) . unbind ( ) ; < nl > + / / } < nl > } < nl > < nl > public void dispose ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java < nl > index 207a962 . . 5623dca 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java < nl > @ @ - 465 , 13 + 465 , 14 @ @ public class User extends WrapperExtEntity < ApiFullUser , ApiUser > implements KeyV < nl > this . records . add ( new ContactRecord ( ContactRecordType . SOCIAL , record . getTypeSpec ( ) , record . getStringValue ( ) , < nl > record . getTitle ( ) , record . getSubtitle ( ) ) ) ; < nl > } < nl > + } < nl > < nl > - / / Bot commands < nl > - for ( ApiBotCommand command : ext . getBotCommands ( ) ) { < nl > - commands . add ( new BotCommand ( command . getSlashCommand ( ) , command . getDescription ( ) , command . getLocKey ( ) ) ) ; < nl > - } < nl > - < nl > + / / Bot commands < nl > + for ( ApiBotCommand command : ext . getBotCommands ( ) ) { < nl > + commands . add ( new BotCommand ( command . getSlashCommand ( ) , command . getDescription ( ) , command . getLocKey ( ) ) ) ; < nl > } < nl > + < nl > + < nl > this . about = ext . getAbout ( ) ; < nl > } else { < nl > this . isBlocked = false ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 8674ea8 . . dcd2ef1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > import java . util . Locale ; < nl > @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { < nl > / * * < nl > * Delegate < nl > * / < nl > + @ NotNull < nl > private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; < nl > / * * < nl > * ActivityManager < nl > @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { < nl > if ( pushId ! = 0 ) { < nl > pushManager . registerPush ( application ) ; < nl > } < nl > - } catch ( ClassNotFoundException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( InstantiationException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > + } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > - < nl > - < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { < nl > this . pushId = pushId ; < nl > } < nl > < nl > + / * * < nl > + * Getting Application Delegate . < nl > + * < nl > + * @ return Application Delegate < nl > + * / < nl > + @ NotNull < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > < nl > - public void setDelegate ( ActorSDKDelegate delegate ) { < nl > + / * * < nl > + * Setting Application Delegate . Useful for hacking various parts of SDK < nl > + * < nl > + * @ param delegate Application Delegate < nl > + * / < nl > + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { < nl > this . delegate = delegate ; < nl > } < nl > < nl > + @ Deprecated < nl > public ActivityManager getActivityManager ( ) { < nl > return activityManager ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 0ddb728 . . f404f54 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; < nl > < nl > import android . app . Application ; < nl > < nl > + / * * < nl > + * Implementation of Application object that handles everything required for creating and < nl > + * managing Actor SDK < nl > + * / < nl > public class ActorSDKApplication extends Application { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index 9c2321e . . 2488fa2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; < nl > < nl > import android . graphics . Color ; < nl > < nl > + / * * < nl > + * Actor Styling class < nl > + * / < nl > public class ActorStyle { < nl > private int toolBarColor = 0 ; < nl > private int fabColor = 0 ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index de2e346 . . 68ec210 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > < nl > + / * * < nl > + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead < nl > + * of implementing ActorSDKDelegate < nl > + * / < nl > public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > - < nl > + < nl > + / / < nl > + / / Authentication Activity < nl > + / / < nl > + < nl > + @ Deprecated < nl > @ Override < nl > - public ActorIntent getAuthStartIntent ( ) { < nl > - return null ; < nl > + public AuthState getAuthStartState ( ) { < nl > + return AuthState . AUTH _ START ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartAfterLoginIntent ( ) { < nl > - return null ; < nl > + public BaseAuthFragment getSignFragment ( ) { < nl > + return new SignPhoneFragment ( ) ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartIntent ( ) { < nl > + public ActorIntent getAuthStartIntent ( ) { < nl > return null ; < nl > } < nl > < nl > + / / < nl > + / / Starting Activity < nl > + / / < nl > + < nl > + / * * < nl > + * Return non - null to open specific Activity after user ' s successful log in . < nl > + * If null is specified , result of getStartIntent is used . < nl > + * < nl > + * @ return ActorIntent for activity after login < nl > + * / < nl > @ Override < nl > - public AuthState getAuthStartState ( ) { < nl > - return AuthState . AUTH _ START ; < nl > + public ActorIntent getStartAfterLoginIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / * * < nl > + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch < nl > + * standard Messaging activity with contacts and recent list < nl > + * < nl > + * @ return ActorIntent for start activity < nl > + * / < nl > @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignPhoneFragment ( ) ; < nl > + public ActorIntent getStartIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / / < nl > + / / Hacking settings activity < nl > + / / < nl > + < nl > @ Override < nl > public View getBeforeNickSettingsView ( Context context ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > index dd19ba4 . . 64c5706 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . fragment . auth . AuthActivity ; < nl > < nl > - / * * < nl > - * Created by root on 10 / 20 / 15 . < nl > - * / < nl > + @ Deprecated < nl > public class ActivityManager { < nl > < nl > - < nl > public void startAuthActivity ( Context context ) { < nl > startAuthActivity ( context , null ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 36e8f9a . . 0a40206 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 484 , 7 + 484 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 try { 
 forwardContent = AbsContent . parse ( intent . getByteArrayExtra ( " forward _ content " ) ) ; 
 } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 + 
 } 
 } 
 
 @ @ - 1086 , 6 + 1086 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } , initEmpty ) ; 
 } 
 
 + / / if ( autocompleteAdapter . getCount ( ) = = 0 ) { 
 + / / isAutocompleteVisible = false ; 
 + / / return ; 
 + / / } 
 + 
 autocompleteList . setAdapter ( autocompleteAdapter ) ; 
 autocompleteList . setOnItemClickListener ( new AdapterView . OnItemClickListener ( ) { 
 @ Override 
 @ @ - 1108 , 10 + 1113 , 14 @ @ public class ChatActivity extends ActorEditTextActivity { 
 messageEditText . setSelection ( cursorPosition , cursorPosition ) ; 
 } 
 hideMentions ( ) ; 
 + } else if ( item ! = null & & item instanceof CommandsAdapter . CommandHolder ) { 
 + messenger ( ) . sendMessage ( peer , ( ( CommandsAdapter . CommandHolder ) item ) . getCommand ( ) . getSlashCommand ( ) ) ; 
 + hideMentions ( ) ; 
 } 
 } 
 } ) ; 
 hideShare ( ) ; 
 + 
 expandMentions ( autocompleteList , 0 , autocompleteList . getCount ( ) ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java 
 index 410dfa6 . . 0c0b3d4 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / botcommands / CommandsAdapter . java 
 @ @ - 14 , 7 + 14 , 6 @ @ import im . actor . core . viewmodel . UserVM ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . util . Screen ; 
 - import im . actor . sdk . view . SearchHighlight ; 
 import im . actor . sdk . view . adapters . HolderAdapter ; 
 import im . actor . sdk . view . adapters . ViewHolder ; 
 import im . actor . sdk . view . avatar . AvatarView ; 
 @ @ - 29 , 9 + 28 , 12 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { 
 private List < BotCommand > commandsToShow = new ArrayList < BotCommand > ( ) ; 
 private CommandsUpdatedCallback updatedCallback ; 
 private int highlightColor ; 
 + private UserVM botUser ; 
 + private String query = " " ; 
 
 public CommandsAdapter ( int uid , Context context , CommandsUpdatedCallback updatedCallback ) { 
 super ( context ) ; 
 + botUser = users ( ) . get ( uid ) ; 
 highlightColor = context . getResources ( ) . getColor ( R . color . primary ) ; 
 commands = users ( ) . get ( uid ) . getBotCommands ( ) . get ( ) ; 
 commandsToShow = users ( ) . get ( uid ) . getBotCommands ( ) . get ( ) ; 
 @ @ - 41 , 9 + 43 , 13 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { 
 } 
 
 public void setQuery ( String q ) { 
 + if ( q = = null | | q . equals ( query ) ) { 
 + return ; 
 + } 
 + query = q ; 
 ArrayList < BotCommand > filterd = new ArrayList < BotCommand > ( ) ; 
 for ( BotCommand command : commands ) { 
 - if ( command . getSlashCommand ( ) . toLowerCase ( ) . startsWith ( " q " ) ) { 
 + if ( command . getSlashCommand ( ) . toLowerCase ( ) . startsWith ( q ) ) { 
 filterd . add ( command ) ; 
 } 
 } 
 @ @ - 79 , 7 + 85 , 7 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { 
 void onMentionsUpdated ( int oldRowsCount , int newRowsCount ) ; 
 } 
 
 - private class CommandHolder extends ViewHolder < BotCommand > { 
 + public class CommandHolder extends ViewHolder < BotCommand > { 
 
 BotCommand data ; 
 private TextView userName ; 
 @ @ - 104 , 9 + 110 , 8 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { 
 
 @ Override 
 public void bind ( BotCommand data , int position , Context context ) { 
 - UserVM user = users ( ) . get ( uid ) ; 
 this . data = data ; 
 - avatarView . bind ( user ) ; 
 + avatarView . bind ( botUser ) ; 
 CharSequence name = data . getSlashCommand ( ) ; 
 userName . setText ( name ) ; 
 
 @ @ - 114 , 6 + 119 , 9 @ @ public class CommandsAdapter extends HolderAdapter < BotCommand > { 
 mentionHint . setText ( hint ) ; 
 } 
 
 + public BotCommand getCommand ( ) { 
 + return data ; 
 + } 
 
 @ Override 
 public void unbind ( ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java 
 index 825437b . . 40de074 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / MentionsAdapter . java 
 @ @ - 41 , 6 + 41 , 9 @ @ public class MentionsAdapter extends HolderAdapter < MentionFilterResult > { 
 } 
 
 public void setQuery ( String q ) { 
 + if ( q = = null | | q . equals ( query ) ) { 
 + return ; 
 + } 
 query = q ; 
 membersToShow = messenger ( ) . findMentions ( gid , q ) ; 
 int newRowsCount = membersToShow . size ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java 
 index 5bf7599 . . c1784dc 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / adapters / HolderAdapter . java 
 @ @ - 42 , 9 + 42 , 9 @ @ public abstract class HolderAdapter < V > extends BaseAdapter { 
 } 
 
 public void onMovedToScrapHeap ( View view ) { 
 - if ( view . getTag ( ) instanceof ViewHolder ) { 
 - ( ( ViewHolder ) view . getTag ( ) ) . unbind ( ) ; 
 - } 
 + / / if ( view . getTag ( ) instanceof ViewHolder ) { 
 + / / ( ( ViewHolder ) view . getTag ( ) ) . unbind ( ) ; 
 + / / } 
 } 
 
 public void dispose ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java 
 index 207a962 . . 5623dca 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / User . java 
 @ @ - 465 , 13 + 465 , 14 @ @ public class User extends WrapperExtEntity < ApiFullUser , ApiUser > implements KeyV 
 this . records . add ( new ContactRecord ( ContactRecordType . SOCIAL , record . getTypeSpec ( ) , record . getStringValue ( ) , 
 record . getTitle ( ) , record . getSubtitle ( ) ) ) ; 
 } 
 + } 
 
 - / / Bot commands 
 - for ( ApiBotCommand command : ext . getBotCommands ( ) ) { 
 - commands . add ( new BotCommand ( command . getSlashCommand ( ) , command . getDescription ( ) , command . getLocKey ( ) ) ) ; 
 - } 
 - 
 + / / Bot commands 
 + for ( ApiBotCommand command : ext . getBotCommands ( ) ) { 
 + commands . add ( new BotCommand ( command . getSlashCommand ( ) , command . getDescription ( ) , command . getLocKey ( ) ) ) ; 
 } 
 + 
 + 
 this . about = ext . getAbout ( ) ; 
 } else { 
 this . isBlocked = false ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 8674ea8 . . dcd2ef1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 
 + import org . jetbrains . annotations . NotNull ; 
 + import org . jetbrains . annotations . Nullable ; 
 + 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { 
 / * * 
 * Delegate 
 * / 
 + @ NotNull 
 private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; 
 / * * 
 * ActivityManager 
 @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { 
 if ( pushId ! = 0 ) { 
 pushManager . registerPush ( application ) ; 
 } 
 - } catch ( ClassNotFoundException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( InstantiationException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( IllegalAccessException e ) { 
 + } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 - 
 - 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { 
 this . pushId = pushId ; 
 } 
 
 + / * * 
 + * Getting Application Delegate . 
 + * 
 + * @ return Application Delegate 
 + * / 
 + @ NotNull 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 
 - public void setDelegate ( ActorSDKDelegate delegate ) { 
 + / * * 
 + * Setting Application Delegate . Useful for hacking various parts of SDK 
 + * 
 + * @ param delegate Application Delegate 
 + * / 
 + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { 
 this . delegate = delegate ; 
 } 
 
 + @ Deprecated 
 public ActivityManager getActivityManager ( ) { 
 return activityManager ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 0ddb728 . . f404f54 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; 
 
 import android . app . Application ; 
 
 + / * * 
 + * Implementation of Application object that handles everything required for creating and 
 + * managing Actor SDK 
 + * / 
 public class ActorSDKApplication extends Application { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index 9c2321e . . 2488fa2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; 
 
 import android . graphics . Color ; 
 
 + / * * 
 + * Actor Styling class 
 + * / 
 public class ActorStyle { 
 private int toolBarColor = 0 ; 
 private int fabColor = 0 ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index de2e346 . . 68ec210 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; 
 import im . actor . sdk . intents . ActorIntent ; 
 
 + / * * 
 + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead 
 + * of implementing ActorSDKDelegate 
 + * / 
 public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 - 
 + 
 + / / 
 + / / Authentication Activity 
 + / / 
 + 
 + @ Deprecated 
 @ Override 
 - public ActorIntent getAuthStartIntent ( ) { 
 - return null ; 
 + public AuthState getAuthStartState ( ) { 
 + return AuthState . AUTH _ START ; 
 } 
 
 @ Override 
 - public ActorIntent getStartAfterLoginIntent ( ) { 
 - return null ; 
 + public BaseAuthFragment getSignFragment ( ) { 
 + return new SignPhoneFragment ( ) ; 
 } 
 
 @ Override 
 - public ActorIntent getStartIntent ( ) { 
 + public ActorIntent getAuthStartIntent ( ) { 
 return null ; 
 } 
 
 + / / 
 + / / Starting Activity 
 + / / 
 + 
 + / * * 
 + * Return non - null to open specific Activity after user ' s successful log in . 
 + * If null is specified , result of getStartIntent is used . 
 + * 
 + * @ return ActorIntent for activity after login 
 + * / 
 @ Override 
 - public AuthState getAuthStartState ( ) { 
 - return AuthState . AUTH _ START ; 
 + public ActorIntent getStartAfterLoginIntent ( ) { 
 + return null ; 
 } 
 
 + / * * 
 + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch 
 + * standard Messaging activity with contacts and recent list 
 + * 
 + * @ return ActorIntent for start activity 
 + * / 
 @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignPhoneFragment ( ) ; 
 + public ActorIntent getStartIntent ( ) { 
 + return null ; 
 } 
 
 + / / 
 + / / Hacking settings activity 
 + / / 
 + 
 @ Override 
 public View getBeforeNickSettingsView ( Context context ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 index dd19ba4 . . 64c5706 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . fragment . auth . AuthActivity ; 
 
 - / * * 
 - * Created by root on 10 / 20 / 15 . 
 - * / 
 + @ Deprecated 
 public class ActivityManager { 
 
 - 
 public void startAuthActivity ( Context context ) { 
 startAuthActivity ( context , null ) ; 
 }
