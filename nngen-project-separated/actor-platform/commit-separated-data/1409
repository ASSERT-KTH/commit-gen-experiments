BLEU SCORE: 0.45033035241661884

TEST MSG: fix ( server : cli ) : start kamon as workaraound for exception
GENERATED MSG: fix ( server : cli ) : don ' t log config on start

TEST DIFF (one line): diff - - git a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala < nl > index 0ab73c9 . . 0c4a211 100644 < nl > - - - a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala < nl > + + + b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala < nl > @ @ - 7 , 6 + 7 , 7 @ @ import akka . cluster . client . { ClusterClient , ClusterClientSettings } < nl > import akka . pattern . ask < nl > import akka . util . Timeout < nl > import com . typesafe . config . ConfigFactory < nl > + import kamon . Kamon < nl > < nl > import scala . concurrent . { Await , ExecutionContext , Future } < nl > import scala . concurrent . duration . _ < nl > @ @ - 120 , 7 + 121 , 10 @ @ final class CliHandlers extends BotHandlers with UsersHandlers { < nl > < nl > protected val config = ConfigFactory . parseResources ( " cli . conf " ) . resolve ( ) < nl > < nl > - protected lazy val system = ActorSystem ( " actor - cli " , config ) < nl > + protected lazy val system = { < nl > + Kamon . start ( ) < nl > + ActorSystem ( " actor - cli " , config ) < nl > + } < nl > < nl > protected lazy val remoteHost = InetAddress . getLocalHost . getHostAddress
NEAREST DIFF (one line): diff - - git a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala < nl > index 1d2c086 . . a743588 100644 < nl > - - - a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala < nl > + + + b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala < nl > @ @ - 79 , 7 + 79 , 7 @ @ object ActorCli extends App { < nl > final class CliHandlers extends BotHandlers { < nl > protected val BotService = " bots " < nl > < nl > - protected val config = ConfigFactory . parseString ( " akka . log - config - on - start = yes " ) . withFallback ( ConfigFactory . parseResources ( " cli . conf " ) ) . resolve ( ) < nl > + protected val config = ConfigFactory . parseResources ( " cli . conf " ) . resolve ( ) < nl > < nl > protected lazy val system = ActorSystem ( " actor - cli " , config )

TEST DIFF:
diff - - git a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala 
 index 0ab73c9 . . 0c4a211 100644 
 - - - a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala 
 + + + b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala 
 @ @ - 7 , 6 + 7 , 7 @ @ import akka . cluster . client . { ClusterClient , ClusterClientSettings } 
 import akka . pattern . ask 
 import akka . util . Timeout 
 import com . typesafe . config . ConfigFactory 
 + import kamon . Kamon 
 
 import scala . concurrent . { Await , ExecutionContext , Future } 
 import scala . concurrent . duration . _ 
 @ @ - 120 , 7 + 121 , 10 @ @ final class CliHandlers extends BotHandlers with UsersHandlers { 
 
 protected val config = ConfigFactory . parseResources ( " cli . conf " ) . resolve ( ) 
 
 - protected lazy val system = ActorSystem ( " actor - cli " , config ) 
 + protected lazy val system = { 
 + Kamon . start ( ) 
 + ActorSystem ( " actor - cli " , config ) 
 + } 
 
 protected lazy val remoteHost = InetAddress . getLocalHost . getHostAddress

NEAREST DIFF:
diff - - git a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala 
 index 1d2c086 . . a743588 100644 
 - - - a / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala 
 + + + b / actor - server / actor - cli / src / main / scala / im / actor / server / cli / ActorCli . scala 
 @ @ - 79 , 7 + 79 , 7 @ @ object ActorCli extends App { 
 final class CliHandlers extends BotHandlers { 
 protected val BotService = " bots " 
 
 - protected val config = ConfigFactory . parseString ( " akka . log - config - on - start = yes " ) . withFallback ( ConfigFactory . parseResources ( " cli . conf " ) ) . resolve ( ) 
 + protected val config = ConfigFactory . parseResources ( " cli . conf " ) . resolve ( ) 
 
 protected lazy val system = ActorSystem ( " actor - cli " , config )
