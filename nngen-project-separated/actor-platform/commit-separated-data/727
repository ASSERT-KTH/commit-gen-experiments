BLEU SCORE: 3.817663819004394E-5

TEST MSG: stash
GENERATED MSG: fix ( server : tests ) : GroupsServiceSpec receive userJoined once

TEST DIFF (one line): diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala < nl > index 8de1697 . . f94b0b7 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala < nl > @ @ - 62 , 9 + 62 , 9 @ @ final class SequenceServiceSpec extends BaseAppSuite ( { < nl > ( maxUpdateSize * ( 1 + 5 . toDouble / example . getSerializedSize ) ) . toInt < nl > } < nl > < nl > - / / serialized update size is : 40 bytes for body + 4 bytes for header , 44 bytes total < nl > - / / with max update size of 20 KiB 1281 updates should split into three parts < nl > - Await . result ( Future . sequence ( ( 0L to 1280L ) map { i ⇒ < nl > + / / serialized update size is : 40 bytes for body + 4 bytes for header , 44 bytes total < nl > + / / with max update size of 60 KiB 3840 updates should split into three parts < nl > + Await . result ( Future . sequence ( ( 0L to 3840 ) map { i ⇒ < nl > val update = UpdateMessageContentChanged ( user2Peer , i , message ) < nl > seqUpdExt . deliverSingleUpdate ( user . id , update ) < nl > } ) , 10 . seconds )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala < nl > index f170206 . . 2fa96e5 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala < nl > @ @ - 561 , 9 + 561 , 10 @ @ class GroupsServiceSpec extends BaseAppSuite with GroupsServiceHelpers with Mess < nl > * * UpdateGroupInvite < nl > * * ServiceExGroupCreated < nl > * * UpdateMessage < nl > + * * UpdateMessageRead < nl > * / < nl > - updates should have length 3 < nl > - val update = UpdateMessage . parseFrom ( CodedInputStream . newInstance ( updates . last . update ) ) . right . toOption . get < nl > + updates should have length 4 < nl > + val update = UpdateMessage . parseFrom ( CodedInputStream . newInstance ( updates ( 2 ) . update ) ) . right . toOption . get < nl > update . message shouldEqual GroupServiceMessages . userJoined < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala 
 index 8de1697 . . f94b0b7 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala 
 @ @ - 62 , 9 + 62 , 9 @ @ final class SequenceServiceSpec extends BaseAppSuite ( { 
 ( maxUpdateSize * ( 1 + 5 . toDouble / example . getSerializedSize ) ) . toInt 
 } 
 
 - / / serialized update size is : 40 bytes for body + 4 bytes for header , 44 bytes total 
 - / / with max update size of 20 KiB 1281 updates should split into three parts 
 - Await . result ( Future . sequence ( ( 0L to 1280L ) map { i ⇒ 
 + / / serialized update size is : 40 bytes for body + 4 bytes for header , 44 bytes total 
 + / / with max update size of 60 KiB 3840 updates should split into three parts 
 + Await . result ( Future . sequence ( ( 0L to 3840 ) map { i ⇒ 
 val update = UpdateMessageContentChanged ( user2Peer , i , message ) 
 seqUpdExt . deliverSingleUpdate ( user . id , update ) 
 } ) , 10 . seconds )

NEAREST DIFF:
diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala 
 index f170206 . . 2fa96e5 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / GroupsServiceSpec . scala 
 @ @ - 561 , 9 + 561 , 10 @ @ class GroupsServiceSpec extends BaseAppSuite with GroupsServiceHelpers with Mess 
 * * UpdateGroupInvite 
 * * ServiceExGroupCreated 
 * * UpdateMessage 
 + * * UpdateMessageRead 
 * / 
 - updates should have length 3 
 - val update = UpdateMessage . parseFrom ( CodedInputStream . newInstance ( updates . last . update ) ) . right . toOption . get 
 + updates should have length 4 
 + val update = UpdateMessage . parseFrom ( CodedInputStream . newInstance ( updates ( 2 ) . update ) ) . right . toOption . get 
 update . message shouldEqual GroupServiceMessages . userJoined 
 }
