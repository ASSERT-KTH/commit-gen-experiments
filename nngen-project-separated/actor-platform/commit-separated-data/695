BLEU SCORE: 0.21200626759025185

TEST MSG: fix ( iOS ) : Fixing avatar text and early RTC init
GENERATED MSG: feat ( iOS ) : Avatar Binding performance

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift < nl > index e1bf32d . . 2a1b015 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift < nl > @ @ - 6 , 13 + 6 , 17 @ @ import Foundation < nl > < nl > class CocoaWebRTCRuntime : NSObject , ARWebRTCRuntime { < nl > < nl > - private let peerConnectionFactory = RTCPeerConnectionFactory ( ) < nl > + private var isInited : Bool = false < nl > + private var peerConnectionFactory : RTCPeerConnectionFactory ! < nl > < nl > override init ( ) { < nl > - RTCPeerConnectionFactory . initializeSSL ( ) < nl > + < nl > } < nl > < nl > func createPeerConnectionWithServers ( webRTCIceServers : IOSObjectArray ! , withSettings settings : ARWebRTCSettings ! ) - > ARPromise { < nl > + < nl > + initRTC ( ) < nl > + < nl > let servers : [ ARWebRTCIceServer ] = webRTCIceServers . toSwiftArray ( ) < nl > return ARPromise { ( resolver ) - > ( ) in < nl > dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ HIGH , 0 ) ) { ( ) - > Void in < nl > @ @ - 22 , 12 + 26 , 25 @ @ class CocoaWebRTCRuntime : NSObject , ARWebRTCRuntime { < nl > } < nl > < nl > func getUserAudio ( ) - > ARPromise { < nl > + < nl > + initRTC ( ) < nl > + < nl > let audio = peerConnectionFactory . audioTrackWithID ( " audio0 " ) < nl > let mediaStream = peerConnectionFactory . mediaStreamWithLabel ( " ARDAMSa0 " ) < nl > mediaStream . addAudioTrack ( audio ) < nl > return ARPromises . success ( MediaStream ( stream : mediaStream ) ) < nl > } < nl > < nl > + func initRTC ( ) { < nl > + if ! isInited { < nl > + isInited = true < nl > + < nl > + RTCPeerConnectionFactory . initializeSSL ( ) < nl > + < nl > + peerConnectionFactory = RTCPeerConnectionFactory ( ) < nl > + } < nl > + } < nl > + < nl > func supportsPreConnections ( ) - > jboolean { < nl > return false < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift < nl > index fe2a4ed . . c3d5419 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift < nl > @ @ - 9 , 7 + 9 , 7 @ @ class PhoneBookProvider : NSObject , ACPhoneBookProvider { < nl > < nl > func loadPhoneBookWithCallback ( callback : ACPhoneBookProvider _ Callback ! ) { < nl > < nl > - dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , Int64 ( 2 . 0 * Double ( NSEC _ PER _ SEC ) ) ) , dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ DEFAULT , 0 ) ) { < nl > + dispatchBackground { < nl > < nl > let rawBook = ABAddressBookCreateWithOptions ( nil , nil ) ; < nl > if ( rawBook = = nil ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 6bdbff9 . . 67b8ab1 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 294 , 7 + 294 , 7 @ @ public class AAAvatarView : UIView , YYAsyncLayerDelegate { < nl > < nl > let font = UIFont . systemFontOfSize ( r ) < nl > var rect = CGRectMake ( 0 , 0 , r * 2 , r * 2 ) < nl > - rect . origin . y = round ( CGFloat ( r * 2 * 40 / 100 ) - font . pointSize / 2 ) ; < nl > + rect . origin . y = round ( CGFloat ( r * 2 * 47 / 100 ) - font . pointSize / 2 ) ; < nl > < nl > let style : NSMutableParagraphStyle = NSParagraphStyle . defaultParagraphStyle ( ) . mutableCopy ( ) as ! NSMutableParagraphStyle < nl > style . alignment = NSTextAlignment . Center
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > index b7af9d5 . . 24a10a6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > @ @ - 163 , 7 + 163 , 8 @ @ class CocoaInputFile : NSObject , ARInputFile { < nl > } < nl > < nl > func readWithOffset ( fileOffset : jint , withData data : IOSByteArray ! , withDataOffset offset : jint , withLength len : jint , withCallback callback : ARFileReadCallback ! ) { < nl > - dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ LOW , 0 ) ) { < nl > + < nl > + dispatchBackground { < nl > self . fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; < nl > let readed : NSData = self . fileHandle . readDataOfLength ( Int ( len ) ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 3a1cd2a . . 41750e3 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 220 , 8 + 220 , 12 @ @ public class AAAvatarView : UIImageView { < nl > self . image = image ; < nl > } < nl > } < nl > - } ) ; < nl > - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) < nl > + } ) < nl > + let fl = fileLocation < nl > + let c = callback < nl > + dispatchBackground { < nl > + Actor . bindRawFileWithReference ( fl , autoStart : true , withCallback : c ) < nl > + } < nl > } < nl > < nl > public func unbind ( ) { < nl > @ @ - 236 , 7 + 240 , 11 @ @ public class AAAvatarView : UIImageView { < nl > self . bindedTitle = nil < nl > < nl > if ( bindedFileId ! = nil ) { < nl > - Actor . unbindRawFileWithFileId ( bindedFileId ! , autoCancel : false , withCallback : callback ) < nl > + let bfid = bindedFileId < nl > + let c = callback < nl > + dispatchBackground { < nl > + Actor . unbindRawFileWithFileId ( bfid ! , autoCancel : false , withCallback : c ) < nl > + } < nl > bindedFileId = nil < nl > callback = nil < nl > requestId + + ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift 
 index e1bf32d . . 2a1b015 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift 
 @ @ - 6 , 13 + 6 , 17 @ @ import Foundation 
 
 class CocoaWebRTCRuntime : NSObject , ARWebRTCRuntime { 
 
 - private let peerConnectionFactory = RTCPeerConnectionFactory ( ) 
 + private var isInited : Bool = false 
 + private var peerConnectionFactory : RTCPeerConnectionFactory ! 
 
 override init ( ) { 
 - RTCPeerConnectionFactory . initializeSSL ( ) 
 + 
 } 
 
 func createPeerConnectionWithServers ( webRTCIceServers : IOSObjectArray ! , withSettings settings : ARWebRTCSettings ! ) - > ARPromise { 
 + 
 + initRTC ( ) 
 + 
 let servers : [ ARWebRTCIceServer ] = webRTCIceServers . toSwiftArray ( ) 
 return ARPromise { ( resolver ) - > ( ) in 
 dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ HIGH , 0 ) ) { ( ) - > Void in 
 @ @ - 22 , 12 + 26 , 25 @ @ class CocoaWebRTCRuntime : NSObject , ARWebRTCRuntime { 
 } 
 
 func getUserAudio ( ) - > ARPromise { 
 + 
 + initRTC ( ) 
 + 
 let audio = peerConnectionFactory . audioTrackWithID ( " audio0 " ) 
 let mediaStream = peerConnectionFactory . mediaStreamWithLabel ( " ARDAMSa0 " ) 
 mediaStream . addAudioTrack ( audio ) 
 return ARPromises . success ( MediaStream ( stream : mediaStream ) ) 
 } 
 
 + func initRTC ( ) { 
 + if ! isInited { 
 + isInited = true 
 + 
 + RTCPeerConnectionFactory . initializeSSL ( ) 
 + 
 + peerConnectionFactory = RTCPeerConnectionFactory ( ) 
 + } 
 + } 
 + 
 func supportsPreConnections ( ) - > jboolean { 
 return false 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift 
 index fe2a4ed . . c3d5419 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift 
 @ @ - 9 , 7 + 9 , 7 @ @ class PhoneBookProvider : NSObject , ACPhoneBookProvider { 
 
 func loadPhoneBookWithCallback ( callback : ACPhoneBookProvider _ Callback ! ) { 
 
 - dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , Int64 ( 2 . 0 * Double ( NSEC _ PER _ SEC ) ) ) , dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ DEFAULT , 0 ) ) { 
 + dispatchBackground { 
 
 let rawBook = ABAddressBookCreateWithOptions ( nil , nil ) ; 
 if ( rawBook = = nil ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 6bdbff9 . . 67b8ab1 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 294 , 7 + 294 , 7 @ @ public class AAAvatarView : UIView , YYAsyncLayerDelegate { 
 
 let font = UIFont . systemFontOfSize ( r ) 
 var rect = CGRectMake ( 0 , 0 , r * 2 , r * 2 ) 
 - rect . origin . y = round ( CGFloat ( r * 2 * 40 / 100 ) - font . pointSize / 2 ) ; 
 + rect . origin . y = round ( CGFloat ( r * 2 * 47 / 100 ) - font . pointSize / 2 ) ; 
 
 let style : NSMutableParagraphStyle = NSParagraphStyle . defaultParagraphStyle ( ) . mutableCopy ( ) as ! NSMutableParagraphStyle 
 style . alignment = NSTextAlignment . Center

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 index b7af9d5 . . 24a10a6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 @ @ - 163 , 7 + 163 , 8 @ @ class CocoaInputFile : NSObject , ARInputFile { 
 } 
 
 func readWithOffset ( fileOffset : jint , withData data : IOSByteArray ! , withDataOffset offset : jint , withLength len : jint , withCallback callback : ARFileReadCallback ! ) { 
 - dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ LOW , 0 ) ) { 
 + 
 + dispatchBackground { 
 self . fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; 
 let readed : NSData = self . fileHandle . readDataOfLength ( Int ( len ) ) ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 3a1cd2a . . 41750e3 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 220 , 8 + 220 , 12 @ @ public class AAAvatarView : UIImageView { 
 self . image = image ; 
 } 
 } 
 - } ) ; 
 - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) 
 + } ) 
 + let fl = fileLocation 
 + let c = callback 
 + dispatchBackground { 
 + Actor . bindRawFileWithReference ( fl , autoStart : true , withCallback : c ) 
 + } 
 } 
 
 public func unbind ( ) { 
 @ @ - 236 , 7 + 240 , 11 @ @ public class AAAvatarView : UIImageView { 
 self . bindedTitle = nil 
 
 if ( bindedFileId ! = nil ) { 
 - Actor . unbindRawFileWithFileId ( bindedFileId ! , autoCancel : false , withCallback : callback ) 
 + let bfid = bindedFileId 
 + let c = callback 
 + dispatchBackground { 
 + Actor . unbindRawFileWithFileId ( bfid ! , autoCancel : false , withCallback : c ) 
 + } 
 bindedFileId = nil 
 callback = nil 
 requestId + + ;
