BLEU SCORE: 0.09287528999566796

TEST MSG: feature ( IOS ) : add unblock action in conversation
GENERATED MSG: wip ( iOS ) : Location picker

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 40f3e87 . . d9d7648 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 336 , 6 + 336 , 7 @ @ < nl > 	 	 15F89F081C211FED00776ACD / * opus _ multistream . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F041C211FED00776ACD / * opus _ multistream . h * / ; } ; < nl > 	 	 15F89F091C211FED00776ACD / * opus _ types . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F051C211FED00776ACD / * opus _ types . h * / ; } ; < nl > 	 	 15F89F0A1C211FED00776ACD / * opus . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F061C211FED00776ACD / * opus . h * / ; } ; < nl > + 	 	 9A680E1B1CC3A34800E3CF59 / * AAUnblockActionSheet . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / ; } ; < nl > 	 	 BDF21708B376E212CEAEC43D / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / ; } ; < nl > 	 	 BE237C9D1C422FFA00060648 / * AAStickersKeyboard . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / ; } ; < nl > 	 	 BE2621571C4656D700A817AB / * AAConvActionSheet . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / ; } ; < nl > @ @ - 715 , 6 + 716 , 7 @ @ < nl > 	 	 15F89F061C211FED00776ACD / * opus . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = opus . h ; sourceTree = " < group > " ; } ; < nl > 	 	 15F89F0F1C21317400776ACD / * es * / = { isa = PBXFileReference ; lastKnownFileType = text . plist . strings ; name = es ; path = es . lproj / Localizable . strings ; sourceTree = " < group > " ; } ; < nl > 	 	 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > + 	 	 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAUnblockActionSheet . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAStickersKeyboard . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAConvActionSheet . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BE2621581C4656EE00A817AB / * AAThumbnailView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAThumbnailView . swift ; sourceTree = " < group > " ; } ; < nl > @ @ - 1662 , 6 + 1664 , 7 @ @ < nl > 	 	 	 	 BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / , < nl > 	 	 	 	 BE2621581C4656EE00A817AB / * AAThumbnailView . swift * / , < nl > 	 	 	 	 BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / , < nl > + 	 	 	 	 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 name = AttachmentView ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 2190 , 6 + 2193 , 7 @ @ < nl > 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , < nl > 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , < nl > 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , < nl > + 	 	 	 	 9A680E1B1CC3A34800E3CF59 / * AAUnblockActionSheet . swift in Sources * / , < nl > 	 	 	 	 06129AAB1C83B80B0099286B / * AAAudioRouter . swift in Sources * / , < nl > 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , < nl > 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index cdd7481 . . ce8f5b3 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 546 , 6 + 546 , 8 @ @ < nl > * Alerts < nl > * / < nl > < nl > + " AlertUnblock " = " Unblock " ; < nl > + < nl > " AlertCancel " = " Cancel " ; < nl > < nl > " AlertNext " = " Next " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift < nl > index 60ab68e . . 5a94430 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift < nl > @ @ - 20 , 7 + 20 , 7 @ @ public class AACountryViewController : AATableViewController { < nl > < nl > self . title = AALocalized ( " AuthCountryTitle " ) < nl > < nl > - let cancelButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : UIBarButtonItemStyle . Plain , target : self , action : " dismiss " ) < nl > + let cancelButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : UIBarButtonItemStyle . Plain , target : self , action : Selector ( " dismiss " ) ) < nl > self . navigationItem . setLeftBarButtonItem ( cancelButtonItem , animated : false ) < nl > < nl > self . content = ACAllEvents _ Auth . AUTH _ PICK _ COUNTRY ( ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift < nl > index e40df6c . . 888ced2 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift < nl > @ @ - 28 , 7 + 28 , 7 @ @ public class GroupMembersController : AAContactsListContentController , AAContacts < nl > self . navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : UIBarButtonItemStyle . Plain , target : self , action : Selector ( " dismiss " ) ) < nl > } < nl > < nl > - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : UIBarButtonItemStyle . Done , target : self , action : " doNext " ) < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : UIBarButtonItemStyle . Done , target : self , action : # selector ( GroupMembersController . doNext ) ) < nl > } < nl > < nl > public required init ( coder aDecoder : NSCoder ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > index 13880e1 . . 9e2b777 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > @ @ - 12 , 6 + 12 , 7 @ @ public protocol AAConvActionSheetDelegate { < nl > func actionSheetPickDocument ( ) < nl > func actionSheetPickLocation ( ) < nl > func actionSheetPickContact ( ) < nl > + func actionSheetUnblockContact ( ) < nl > } < nl > < nl > public class AAConvActionSheet : UIView , AAThumbnailViewDelegate { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAUnblockActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAUnblockActionSheet . swift < nl > new file mode 100644 < nl > index 0000000 . . 8b13cbf < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAUnblockActionSheet . swift < nl > @ @ - 0 , 0 + 1 , 129 @ @ < nl > + / / < nl > + / / AAUnblockActionSheet . swift < nl > + / / ActorSDK < nl > + / / < nl > + / / Created by Alexey Galaev on 4 / 17 / 16 . < nl > + / / Copyright Â© 2016 Steve Kite . All rights reserved . < nl > + / / < nl > + < nl > + import UIKit < nl > + < nl > + class AAUnblockActionSheet : AAConvActionSheet { < nl > + < nl > + private let sheetView = UIView ( ) < nl > + private let backgroundView = UIView ( ) < nl > + < nl > + private var unBlockButton = UIButton ( type : UIButtonType . System ) < nl > + < nl > + private weak var presentedInController : UIViewController ! = nil < nl > + < nl > + override init ( ) { < nl > + super . init ( ) < nl > + } < nl > + < nl > + required init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + override func presentInController ( controller : UIViewController ) { < nl > + < nl > + if controller . navigationController ! = nil { < nl > + self . presentedInController = controller . navigationController < nl > + } else { < nl > + self . presentedInController = controller < nl > + } < nl > + < nl > + if let navigation = presentedInController as ? UINavigationController { < nl > + navigation . interactivePopGestureRecognizer ? . enabled = false < nl > + } else if let navigation = presentedInController . navigationController { < nl > + navigation . interactivePopGestureRecognizer ? . enabled = false < nl > + } < nl > + < nl > + frame = presentedInController . view . bounds < nl > + presentedInController . view . addSubview ( self ) < nl > + < nl > + setupAllViews ( ) < nl > + < nl > + self . sheetView . frame = CGRectMake ( 0 , self . frame . height , self . frame . width , 50 ) < nl > + self . backgroundView . alpha = 0 < nl > + dispatchOnUi { ( ) - > Void in < nl > + UIView . animateWithDuration ( 0 . 4 , delay : 0 . 0 , usingSpringWithDamping : 0 . 7 , < nl > + initialSpringVelocity : 0 . 6 , options : . CurveEaseInOut , animations : { < nl > + self . sheetView . frame = CGRectMake ( 0 , self . frame . height - 50 , self . frame . width , 50 ) < nl > + self . backgroundView . alpha = 1 < nl > + } , completion : nil ) < nl > + } < nl > + } < nl > + < nl > + override func dismiss ( ) { < nl > + var nextFrame = self . sheetView . frame < nl > + nextFrame . origin . y = self . presentedInController . view . height < nl > + < nl > + if let navigation = presentedInController as ? UINavigationController { < nl > + navigation . interactivePopGestureRecognizer ? . enabled = true < nl > + } else if let navigation = presentedInController . navigationController { < nl > + navigation . interactivePopGestureRecognizer ? . enabled = true < nl > + } < nl > + < nl > + UIView . animateWithDuration ( 0 . 25 , animations : { ( ) - > Void in < nl > + self . sheetView . frame = nextFrame < nl > + self . backgroundView . alpha = 0 } ) { ( bool ) - > Void in < nl > + self . delegate = nil < nl > + self . removeFromSuperview ( ) < nl > + } < nl > + } < nl > + < nl > + func setupAllViews ( ) { < nl > + < nl > + / / sheet view < nl > + < nl > + let superWidth = presentedInController . view . width < nl > + let superHeight = presentedInController . view . height < nl > + < nl > + self . sheetView . frame = CGRectMake ( 0 , superHeight - 50 , superWidth , 50 ) < nl > + self . sheetView . backgroundColor = UIColor . whiteColor ( ) < nl > + self . addSubview ( self . sheetView ) < nl > + < nl > + self . unBlockButton = UIButton ( type : UIButtonType . System ) < nl > + < nl > + / / color < nl > + < nl > + self . unBlockButton . tintColor = UIColor ( red : 5 . 0 / 255 . 0 , green : 124 . 0 / 255 . 0 , blue : 226 . 0 / 255 . 0 , alpha : 1 ) < nl > + < nl > + / / font size < nl > + < nl > + self . unBlockButton . titleLabel ? . font = UIFont . systemFontOfSize ( 17 ) < nl > + < nl > + / / add buttons as subivews < nl > + < nl > + self . sheetView . addSubview ( self . unBlockButton ) < nl > + < nl > + self . unBlockButton . frame = CGRectMake ( 0 , 0 , superWidth , 50 ) < nl > + < nl > + / / separators < nl > + < nl > + let spearator1 = UIView ( frame : CGRectMake ( 0 , 0 , superWidth , 1 ) ) < nl > + spearator1 . backgroundColor = UIColor ( red : 223 . 9 / 255 . 0 , green : 223 . 9 / 255 . 0 , blue : 223 . 9 / 255 . 0 , alpha : 0 . 6 ) < nl > + / / add separatos as subview < nl > + < nl > + self . sheetView . addSubview ( spearator1 ) < nl > + < nl > + / / set title for buttons < nl > + < nl > + self . unBlockButton . setTitle ( AALocalized ( " AlertUnblock " ) , forState : UIControlState . Normal ) < nl > + < nl > + / / add actins < nl > + < nl > + self . unBlockButton . addTarget ( self , action : # selector ( AAUnblockActionSheet . btnUnblockAction ) , forControlEvents : UIControlEvents . TouchUpInside ) < nl > + } < nl > + < nl > + / / < nl > + / / Actions < nl > + / / < nl > + < nl > + func btnUnblockAction ( ) { < nl > + self . delegate ? . actionSheetUnblockContact ( ) < nl > + dismiss ( ) < nl > + } < nl > + < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 7804d76 . . c36bbf6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 261 , 7 + 261 , 6 @ @ public class ConversationViewController : < nl > self . stickersButton . frame = CGRectMake ( self . view . frame . size . width - 67 , 12 , 20 , 20 ) < nl > } < nl > < nl > - < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / MARK : - Lifecycle < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > @ @ - 271 , 12 + 270 , 14 @ @ public class ConversationViewController : < nl > < nl > / / Installing bindings < nl > if ( peer . peerType . ordinal ( ) = = ACPeerType . PRIVATE ( ) . ordinal ( ) ) { < nl > + < nl > let user = Actor . getUserWithUid ( peer . peerId ) < nl > - let nameModel = user . getNameModel ( ) ; < nl > + let nameModel = user . getNameModel ( ) < nl > + let blockStatus = user . isBlockedModel ( ) . get ( ) . booleanValue ( ) < nl > < nl > binder . bind ( nameModel , closure : { ( value : NSString ? ) - > ( ) in < nl > - self . titleView . text = String ( value ! ) ; < nl > - self . navigationView . sizeToFit ( ) ; < nl > + self . titleView . text = String ( value ! ) < nl > + self . navigationView . sizeToFit ( ) < nl > } ) < nl > binder . bind ( user . getAvatarModel ( ) , closure : { ( value : ACAvatar ? ) - > ( ) in < nl > self . avatarView . bind ( user . getNameModel ( ) . get ( ) , id : Int ( user . getId ( ) ) , avatar : value ) < nl > @ @ - 303 , 6 + 304 , 17 @ @ public class ConversationViewController : < nl > } < nl > } < nl > } ) < nl > + / / < nl > + / / Unblock User < nl > + / / < nl > + if ( blockStatus ) { < nl > + < nl > + let unblockActionSheet = AAUnblockActionSheet ( ) < nl > + unblockActionSheet . delegate = self < nl > + unblockActionSheet . presentInController ( self ) < nl > + < nl > + } < nl > + < nl > } else if ( peer . peerType . ordinal ( ) = = ACPeerType . GROUP ( ) . ordinal ( ) ) { < nl > let group = Actor . getGroupWithGid ( peer . peerId ) < nl > let nameModel = group . getNameModel ( ) < nl > @ @ - 640 , 6 + 652 , 10 @ @ public class ConversationViewController : < nl > self . presentViewController ( documentPicker , animated : true , completion : nil ) < nl > } < nl > < nl > + public func actionSheetUnblockContact ( ) { < nl > + self . executePromise ( Actor . unblockUser ( Actor . getUserWithUid ( peer . peerId ) . getId ( ) ) ) < nl > + } < nl > + < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / MARK : - Document picking < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index f26bdd0 . . 5fc91d4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 172 , 9 + 172 , 10 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > - 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; < nl > + 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / ; } ; < nl > 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > + 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 350 , 9 + 351 , 10 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > - 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AALocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 537 , 6 + 539 , 7 @ @ < nl > 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , < nl > 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , < nl > 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , < nl > + 	 	 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / , < nl > 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , < nl > 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , < nl > 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , < nl > @ @ - 890 , 7 + 893 , 7 @ @ < nl > 	 	 06E7B2451C0F8D410090660C / * Location * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > - 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , < nl > + 	 	 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Location ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1124 , 7 + 1127 , 7 @ @ < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > - 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , < nl > + 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , < nl > 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , < nl > 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , < nl > 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , < nl > @ @ - 1171 , 6 + 1174 , 7 @ @ < nl > 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , < nl > 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , < nl > 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , < nl > + 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , < nl > 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , < nl > 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , < nl > 	 	 	 	 066A526D1BC50E8B000E606E / * AAAuthCountryCell . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > index 3f92572 . . e9b740d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > @ @ - 2 , 8 + 2 , 16 @ @ < nl > " images " : [ < nl > { < nl > " idiom " : " universal " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > " filename " : " LocationPin @ 2x . png " , < nl > " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " scale " : " 3x " < nl > } < nl > ] , < nl > " info " : { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 41ae8d7 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPinPoint @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 7584de8 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 0bd0b69 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPinShadow @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 3bc04a4 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > index 1c539ce . . 79edd4d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 119 , 11 + 119 , 12 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > < nl > public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > let insets = fullContentInsets < nl > + let contentWidth = self . contentView . frame . width < nl > < nl > layoutBubble ( mapWidth , contentHeight : mapHeight ) < nl > < nl > if isOut { < nl > - map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > + map . frame = CGRectMake ( contentWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > } else { < nl > map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 8d0cdcc . . 52a8665 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 6 , 7 + 6 , 7 @ @ import Foundation < nl > import UIKit < nl > import MobileCoreServices < nl > < nl > - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate { < nl > + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { < nl > < nl > / / Data binder < nl > private let binder = AABinder ( ) < nl > @ @ - 462 , 6 + 462 , 17 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > / / Location picking < nl > < nl > func pickLocation ( ) { < nl > - self . presentViewController ( AANavigationController ( rootViewController : AALocationPickerController ( ) ) , animated : true , completion : nil ) < nl > + let pickerController = AALocationPickerController ( ) < nl > + pickerController . delegate = self < nl > + self . presentViewController ( AANavigationController ( rootViewController : pickerController ) , animated : true , completion : nil ) < nl > + } < nl > + < nl > + func locationPickerDidCancelled ( controller : AALocationPickerController ) { < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > + < nl > + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) { < nl > + Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift < nl > new file mode 100644 < nl > index 0000000 . . 4366550 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift < nl > @ @ - 0 , 0 + 1 , 93 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + public class AALocationPickerController : AAViewController , CLLocationManagerDelegate , MKMapViewDelegate { < nl > + < nl > + public var delegate : AALocationPickerControllerDelegate ? = nil < nl > + < nl > + private let locationManager = CLLocationManager ( ) < nl > + private let map = MKMapView ( ) < nl > + private let pinPoint = AAMapPinPointView ( ) < nl > + < nl > + override public func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + navigationItem . title = " Location " < nl > + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) < nl > + < nl > + updateAuthStatus ( CLLocationManager . authorizationStatus ( ) ) < nl > + < nl > + locationManager . delegate = self < nl > + < nl > + locationManager . requestWhenInUseAuthorization ( ) < nl > + locationManager . startUpdatingLocation ( ) < nl > + < nl > + map . showsUserLocation = true < nl > + map . delegate = self < nl > + < nl > + self . view . addSubview ( map ) < nl > + self . view . addSubview ( pinPoint ) < nl > + } < nl > + < nl > + public func mapView ( mapView : MKMapView , regionWillChangeAnimated animated : Bool ) { < nl > + pinPoint . risePin ( true , animated : animated ) < nl > + } < nl > + < nl > + public func mapView ( mapView : MKMapView , regionDidChangeAnimated animated : Bool ) { < nl > + pinPoint . risePin ( false , animated : animated ) < nl > + } < nl > + < nl > + func cancellDidTap ( ) { < nl > + delegate ? . locationPickerDidCancelled ( self ) < nl > + } < nl > + < nl > + func doneDidTap ( ) { < nl > + delegate ? . locationPickerDidPicked ( self , latitude : map . centerCoordinate . latitude , longitude : map . centerCoordinate . longitude ) < nl > + } < nl > + < nl > + func updateAuthStatus ( status : CLAuthorizationStatus ) { < nl > + if ( status = = CLAuthorizationStatus . Denied ) { < nl > + / / User explictly denied access to maps < nl > + showPlaceholderWithImage ( UIImage . bundled ( " " ) , title : " Enable location " , subtitle : " Enable location services in settings . " ) < nl > + map . hidden = true < nl > + navigationItem . rightBarButtonItem = nil < nl > + } else if ( status = = CLAuthorizationStatus . Restricted | | status = = CLAuthorizationStatus . NotDetermined ) { < nl > + / / App doesn ' t complete auth request < nl > + map . hidden = false < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > + hidePlaceholder ( ) < nl > + } else { < nl > + / / Authorised < nl > + map . hidden = false < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > + hidePlaceholder ( ) < nl > + } < nl > + } < nl > + < nl > + override public func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + map . frame = self . view . bounds < nl > + / / pinPoint . bounds = CGRectMake ( 0 , 0 , 100 , 100 ) < nl > + pinPoint . centerIn ( self . view . bounds ) < nl > + } < nl > + < nl > + public func locationManager ( manager : CLLocationManager , didChangeAuthorizationStatus status : CLAuthorizationStatus ) { < nl > + updateAuthStatus ( status ) < nl > + } < nl > + < nl > + public func locationManager ( manager : CLLocationManager , didUpdateLocations locations : [ CLLocation ] ) { < nl > + let location = locations . first ! < nl > + map . setRegion ( MKCoordinateRegion ( center : location . coordinate , span : MKCoordinateSpanMake ( 0 . 05 , 0 . 05 ) ) , animated : true ) < nl > + locationManager . stopUpdatingLocation ( ) < nl > + } < nl > + } < nl > + < nl > + public protocol AALocationPickerControllerDelegate { < nl > + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) < nl > + func locationPickerDidCancelled ( controller : AALocationPickerController ) < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > deleted file mode 100644 < nl > index f0771bb . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > + + + / dev / null < nl > @ @ - 1 , 41 + 0 , 0 @ @ < nl > - / / < nl > - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > - / / < nl > - < nl > - import Foundation < nl > - import MapKit < nl > - < nl > - class AALocationPickerController : AAViewController { < nl > - < nl > - let locationManager = CLLocationManager ( ) < nl > - let map = MKMapView ( ) < nl > - < nl > - override func viewDidLoad ( ) { < nl > - super . viewDidLoad ( ) < nl > - < nl > - navigationItem . title = " Location " < nl > - navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) < nl > - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > - < nl > - locationManager . requestWhenInUseAuthorization ( ) < nl > - < nl > - map . showsUserLocation = true < nl > - map . userTrackingMode = MKUserTrackingMode . Follow < nl > - < nl > - self . view . addSubview ( map ) < nl > - } < nl > - < nl > - func cancellDidTap ( ) { < nl > - dismiss ( ) < nl > - } < nl > - < nl > - func doneDidTap ( ) { < nl > - dismiss ( ) < nl > - } < nl > - < nl > - override func viewDidLayoutSubviews ( ) { < nl > - super . viewDidLayoutSubviews ( ) < nl > - < nl > - map . frame = self . view . bounds < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > index 3705da0 . . f2c6164 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > @ @ - 65 , 6 + 65 , 11 @ @ public extension UIView { < nl > public var right : CGFloat { get { return frame . maxX } } < nl > public var top : CGFloat { get { return frame . minY } } < nl > public var bottom : CGFloat { get { return frame . maxY } } < nl > + < nl > + public func centerIn ( rect : CGRect ) { < nl > + self . frame = CGRectMake ( ( rect . width - self . bounds . width ) / 2 , ( rect . height - self . bounds . height ) / 2 , < nl > + self . bounds . width , self . bounds . height ) < nl > + } < nl > } < nl > < nl > / / Text measuring < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift < nl > new file mode 100644 < nl > index 0000000 . . ff92ae3 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift < nl > @ @ - 0 , 0 + 1 , 41 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public class AAMapPinPointView : UIView { < nl > + < nl > + let pinView = UIImageView ( ) < nl > + let pinPointView = UIImageView ( ) < nl > + let pinShadowView = UIImageView ( ) < nl > + < nl > + public init ( ) { < nl > + super . init ( frame : CGRectMake ( 0 , 0 , 100 , 100 ) ) < nl > + < nl > + pinShadowView . frame = CGRectMake ( 43 , 47 , 32 , 39 ) < nl > + pinShadowView . alpha = 0 . 9 < nl > + pinShadowView . image = UIImage . bundled ( " LocationPinShadow . png " ) < nl > + addSubview ( pinShadowView ) < nl > + < nl > + pinPointView . frame = CGRectMake ( 100 / 2 - 2 , 100 - 18 . 5 , 3 . 5 , 1 . 5 ) < nl > + pinPointView . image = UIImage . bundled ( " LocationPinPoint . png " ) < nl > + addSubview ( pinPointView ) < nl > + < nl > + pinView . frame = CGRectMake ( 100 / 2 - 7 , 47 , 13 . 5 , 36 ) < nl > + pinView . image = UIImage . bundled ( " LocationPin . png " ) < nl > + addSubview ( pinView ) < nl > + } < nl > + < nl > + required public init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func risePin ( rised : Bool , animated : Bool ) { < nl > + if ( rised ) { < nl > + pinView . hidden = true < nl > + } else { < nl > + pinView . hidden = false < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 40f3e87 . . d9d7648 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 336 , 6 + 336 , 7 @ @ 
 	 	 15F89F081C211FED00776ACD / * opus _ multistream . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F041C211FED00776ACD / * opus _ multistream . h * / ; } ; 
 	 	 15F89F091C211FED00776ACD / * opus _ types . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F051C211FED00776ACD / * opus _ types . h * / ; } ; 
 	 	 15F89F0A1C211FED00776ACD / * opus . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F061C211FED00776ACD / * opus . h * / ; } ; 
 + 	 	 9A680E1B1CC3A34800E3CF59 / * AAUnblockActionSheet . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / ; } ; 
 	 	 BDF21708B376E212CEAEC43D / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / ; } ; 
 	 	 BE237C9D1C422FFA00060648 / * AAStickersKeyboard . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / ; } ; 
 	 	 BE2621571C4656D700A817AB / * AAConvActionSheet . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / ; } ; 
 @ @ - 715 , 6 + 716 , 7 @ @ 
 	 	 15F89F061C211FED00776ACD / * opus . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = opus . h ; sourceTree = " < group > " ; } ; 
 	 	 15F89F0F1C21317400776ACD / * es * / = { isa = PBXFileReference ; lastKnownFileType = text . plist . strings ; name = es ; path = es . lproj / Localizable . strings ; sourceTree = " < group > " ; } ; 
 	 	 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 + 	 	 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAUnblockActionSheet . swift ; sourceTree = " < group > " ; } ; 
 	 	 BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAStickersKeyboard . swift ; sourceTree = " < group > " ; } ; 
 	 	 BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAConvActionSheet . swift ; sourceTree = " < group > " ; } ; 
 	 	 BE2621581C4656EE00A817AB / * AAThumbnailView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAThumbnailView . swift ; sourceTree = " < group > " ; } ; 
 @ @ - 1662 , 6 + 1664 , 7 @ @ 
 	 	 	 	 BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / , 
 	 	 	 	 BE2621581C4656EE00A817AB / * AAThumbnailView . swift * / , 
 	 	 	 	 BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / , 
 + 	 	 	 	 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / , 
 	 	 	 ) ; 
 	 	 	 name = AttachmentView ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 2190 , 6 + 2193 , 7 @ @ 
 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , 
 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , 
 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , 
 + 	 	 	 	 9A680E1B1CC3A34800E3CF59 / * AAUnblockActionSheet . swift in Sources * / , 
 	 	 	 	 06129AAB1C83B80B0099286B / * AAAudioRouter . swift in Sources * / , 
 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , 
 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index cdd7481 . . ce8f5b3 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 546 , 6 + 546 , 8 @ @ 
 * Alerts 
 * / 
 
 + " AlertUnblock " = " Unblock " ; 
 + 
 " AlertCancel " = " Cancel " ; 
 
 " AlertNext " = " Next " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift 
 index 60ab68e . . 5a94430 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AACountryViewController . swift 
 @ @ - 20 , 7 + 20 , 7 @ @ public class AACountryViewController : AATableViewController { 
 
 self . title = AALocalized ( " AuthCountryTitle " ) 
 
 - let cancelButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : UIBarButtonItemStyle . Plain , target : self , action : " dismiss " ) 
 + let cancelButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : UIBarButtonItemStyle . Plain , target : self , action : Selector ( " dismiss " ) ) 
 self . navigationItem . setLeftBarButtonItem ( cancelButtonItem , animated : false ) 
 
 self . content = ACAllEvents _ Auth . AUTH _ PICK _ COUNTRY ( ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift 
 index e40df6c . . 888ced2 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Compose / AAGroupMembersController . swift 
 @ @ - 28 , 7 + 28 , 7 @ @ public class GroupMembersController : AAContactsListContentController , AAContacts 
 self . navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : UIBarButtonItemStyle . Plain , target : self , action : Selector ( " dismiss " ) ) 
 } 
 
 - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : UIBarButtonItemStyle . Done , target : self , action : " doNext " ) 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : UIBarButtonItemStyle . Done , target : self , action : # selector ( GroupMembersController . doNext ) ) 
 } 
 
 public required init ( coder aDecoder : NSCoder ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 index 13880e1 . . 9e2b777 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 @ @ - 12 , 6 + 12 , 7 @ @ public protocol AAConvActionSheetDelegate { 
 func actionSheetPickDocument ( ) 
 func actionSheetPickLocation ( ) 
 func actionSheetPickContact ( ) 
 + func actionSheetUnblockContact ( ) 
 } 
 
 public class AAConvActionSheet : UIView , AAThumbnailViewDelegate { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAUnblockActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAUnblockActionSheet . swift 
 new file mode 100644 
 index 0000000 . . 8b13cbf 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAUnblockActionSheet . swift 
 @ @ - 0 , 0 + 1 , 129 @ @ 
 + / / 
 + / / AAUnblockActionSheet . swift 
 + / / ActorSDK 
 + / / 
 + / / Created by Alexey Galaev on 4 / 17 / 16 . 
 + / / Copyright Â© 2016 Steve Kite . All rights reserved . 
 + / / 
 + 
 + import UIKit 
 + 
 + class AAUnblockActionSheet : AAConvActionSheet { 
 + 
 + private let sheetView = UIView ( ) 
 + private let backgroundView = UIView ( ) 
 + 
 + private var unBlockButton = UIButton ( type : UIButtonType . System ) 
 + 
 + private weak var presentedInController : UIViewController ! = nil 
 + 
 + override init ( ) { 
 + super . init ( ) 
 + } 
 + 
 + required init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + override func presentInController ( controller : UIViewController ) { 
 + 
 + if controller . navigationController ! = nil { 
 + self . presentedInController = controller . navigationController 
 + } else { 
 + self . presentedInController = controller 
 + } 
 + 
 + if let navigation = presentedInController as ? UINavigationController { 
 + navigation . interactivePopGestureRecognizer ? . enabled = false 
 + } else if let navigation = presentedInController . navigationController { 
 + navigation . interactivePopGestureRecognizer ? . enabled = false 
 + } 
 + 
 + frame = presentedInController . view . bounds 
 + presentedInController . view . addSubview ( self ) 
 + 
 + setupAllViews ( ) 
 + 
 + self . sheetView . frame = CGRectMake ( 0 , self . frame . height , self . frame . width , 50 ) 
 + self . backgroundView . alpha = 0 
 + dispatchOnUi { ( ) - > Void in 
 + UIView . animateWithDuration ( 0 . 4 , delay : 0 . 0 , usingSpringWithDamping : 0 . 7 , 
 + initialSpringVelocity : 0 . 6 , options : . CurveEaseInOut , animations : { 
 + self . sheetView . frame = CGRectMake ( 0 , self . frame . height - 50 , self . frame . width , 50 ) 
 + self . backgroundView . alpha = 1 
 + } , completion : nil ) 
 + } 
 + } 
 + 
 + override func dismiss ( ) { 
 + var nextFrame = self . sheetView . frame 
 + nextFrame . origin . y = self . presentedInController . view . height 
 + 
 + if let navigation = presentedInController as ? UINavigationController { 
 + navigation . interactivePopGestureRecognizer ? . enabled = true 
 + } else if let navigation = presentedInController . navigationController { 
 + navigation . interactivePopGestureRecognizer ? . enabled = true 
 + } 
 + 
 + UIView . animateWithDuration ( 0 . 25 , animations : { ( ) - > Void in 
 + self . sheetView . frame = nextFrame 
 + self . backgroundView . alpha = 0 } ) { ( bool ) - > Void in 
 + self . delegate = nil 
 + self . removeFromSuperview ( ) 
 + } 
 + } 
 + 
 + func setupAllViews ( ) { 
 + 
 + / / sheet view 
 + 
 + let superWidth = presentedInController . view . width 
 + let superHeight = presentedInController . view . height 
 + 
 + self . sheetView . frame = CGRectMake ( 0 , superHeight - 50 , superWidth , 50 ) 
 + self . sheetView . backgroundColor = UIColor . whiteColor ( ) 
 + self . addSubview ( self . sheetView ) 
 + 
 + self . unBlockButton = UIButton ( type : UIButtonType . System ) 
 + 
 + / / color 
 + 
 + self . unBlockButton . tintColor = UIColor ( red : 5 . 0 / 255 . 0 , green : 124 . 0 / 255 . 0 , blue : 226 . 0 / 255 . 0 , alpha : 1 ) 
 + 
 + / / font size 
 + 
 + self . unBlockButton . titleLabel ? . font = UIFont . systemFontOfSize ( 17 ) 
 + 
 + / / add buttons as subivews 
 + 
 + self . sheetView . addSubview ( self . unBlockButton ) 
 + 
 + self . unBlockButton . frame = CGRectMake ( 0 , 0 , superWidth , 50 ) 
 + 
 + / / separators 
 + 
 + let spearator1 = UIView ( frame : CGRectMake ( 0 , 0 , superWidth , 1 ) ) 
 + spearator1 . backgroundColor = UIColor ( red : 223 . 9 / 255 . 0 , green : 223 . 9 / 255 . 0 , blue : 223 . 9 / 255 . 0 , alpha : 0 . 6 ) 
 + / / add separatos as subview 
 + 
 + self . sheetView . addSubview ( spearator1 ) 
 + 
 + / / set title for buttons 
 + 
 + self . unBlockButton . setTitle ( AALocalized ( " AlertUnblock " ) , forState : UIControlState . Normal ) 
 + 
 + / / add actins 
 + 
 + self . unBlockButton . addTarget ( self , action : # selector ( AAUnblockActionSheet . btnUnblockAction ) , forControlEvents : UIControlEvents . TouchUpInside ) 
 + } 
 + 
 + / / 
 + / / Actions 
 + / / 
 + 
 + func btnUnblockAction ( ) { 
 + self . delegate ? . actionSheetUnblockContact ( ) 
 + dismiss ( ) 
 + } 
 + 
 + } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 7804d76 . . c36bbf6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 261 , 7 + 261 , 6 @ @ public class ConversationViewController : 
 self . stickersButton . frame = CGRectMake ( self . view . frame . size . width - 67 , 12 , 20 , 20 ) 
 } 
 
 - 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / MARK : - Lifecycle 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 @ @ - 271 , 12 + 270 , 14 @ @ public class ConversationViewController : 
 
 / / Installing bindings 
 if ( peer . peerType . ordinal ( ) = = ACPeerType . PRIVATE ( ) . ordinal ( ) ) { 
 + 
 let user = Actor . getUserWithUid ( peer . peerId ) 
 - let nameModel = user . getNameModel ( ) ; 
 + let nameModel = user . getNameModel ( ) 
 + let blockStatus = user . isBlockedModel ( ) . get ( ) . booleanValue ( ) 
 
 binder . bind ( nameModel , closure : { ( value : NSString ? ) - > ( ) in 
 - self . titleView . text = String ( value ! ) ; 
 - self . navigationView . sizeToFit ( ) ; 
 + self . titleView . text = String ( value ! ) 
 + self . navigationView . sizeToFit ( ) 
 } ) 
 binder . bind ( user . getAvatarModel ( ) , closure : { ( value : ACAvatar ? ) - > ( ) in 
 self . avatarView . bind ( user . getNameModel ( ) . get ( ) , id : Int ( user . getId ( ) ) , avatar : value ) 
 @ @ - 303 , 6 + 304 , 17 @ @ public class ConversationViewController : 
 } 
 } 
 } ) 
 + / / 
 + / / Unblock User 
 + / / 
 + if ( blockStatus ) { 
 + 
 + let unblockActionSheet = AAUnblockActionSheet ( ) 
 + unblockActionSheet . delegate = self 
 + unblockActionSheet . presentInController ( self ) 
 + 
 + } 
 + 
 } else if ( peer . peerType . ordinal ( ) = = ACPeerType . GROUP ( ) . ordinal ( ) ) { 
 let group = Actor . getGroupWithGid ( peer . peerId ) 
 let nameModel = group . getNameModel ( ) 
 @ @ - 640 , 6 + 652 , 10 @ @ public class ConversationViewController : 
 self . presentViewController ( documentPicker , animated : true , completion : nil ) 
 } 
 
 + public func actionSheetUnblockContact ( ) { 
 + self . executePromise ( Actor . unblockUser ( Actor . getUserWithUid ( peer . peerId ) . getId ( ) ) ) 
 + } 
 + 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / MARK : - Document picking 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index f26bdd0 . . 5fc91d4 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 172 , 9 + 172 , 10 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 - 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; 
 + 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / ; } ; 
 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 + 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 350 , 9 + 351 , 10 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 - 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AALocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 537 , 6 + 539 , 7 @ @ 
 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , 
 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , 
 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , 
 + 	 	 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / , 
 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , 
 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , 
 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , 
 @ @ - 890 , 7 + 893 , 7 @ @ 
 	 	 06E7B2451C0F8D410090660C / * Location * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 - 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , 
 + 	 	 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Location ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1124 , 7 + 1127 , 7 @ @ 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 - 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , 
 + 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , 
 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , 
 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , 
 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , 
 @ @ - 1171 , 6 + 1174 , 7 @ @ 
 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , 
 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , 
 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , 
 + 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , 
 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , 
 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , 
 	 	 	 	 066A526D1BC50E8B000E606E / * AAAuthCountryCell . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 index 3f92572 . . e9b740d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 @ @ - 2 , 8 + 2 , 16 @ @ 
 " images " : [ 
 { 
 " idiom " : " universal " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 " filename " : " LocationPin @ 2x . png " , 
 " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " scale " : " 3x " 
 } 
 ] , 
 " info " : { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 41ae8d7 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPinPoint @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png 
 new file mode 100644 
 index 0000000 . . 7584de8 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 0bd0b69 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPinShadow @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png 
 new file mode 100644 
 index 0000000 . . 3bc04a4 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 index 1c539ce . . 79edd4d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 119 , 11 + 119 , 12 @ @ public class AABubbleLocationCell : AABubbleCell { 
 
 public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 let insets = fullContentInsets 
 + let contentWidth = self . contentView . frame . width 
 
 layoutBubble ( mapWidth , contentHeight : mapHeight ) 
 
 if isOut { 
 - map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 + map . frame = CGRectMake ( contentWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 } else { 
 map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 8d0cdcc . . 52a8665 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 6 , 7 + 6 , 7 @ @ import Foundation 
 import UIKit 
 import MobileCoreServices 
 
 - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate { 
 + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { 
 
 / / Data binder 
 private let binder = AABinder ( ) 
 @ @ - 462 , 6 + 462 , 17 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 / / Location picking 
 
 func pickLocation ( ) { 
 - self . presentViewController ( AANavigationController ( rootViewController : AALocationPickerController ( ) ) , animated : true , completion : nil ) 
 + let pickerController = AALocationPickerController ( ) 
 + pickerController . delegate = self 
 + self . presentViewController ( AANavigationController ( rootViewController : pickerController ) , animated : true , completion : nil ) 
 + } 
 + 
 + func locationPickerDidCancelled ( controller : AALocationPickerController ) { 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 + 
 + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) { 
 + Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift 
 new file mode 100644 
 index 0000000 . . 4366550 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift 
 @ @ - 0 , 0 + 1 , 93 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + public class AALocationPickerController : AAViewController , CLLocationManagerDelegate , MKMapViewDelegate { 
 + 
 + public var delegate : AALocationPickerControllerDelegate ? = nil 
 + 
 + private let locationManager = CLLocationManager ( ) 
 + private let map = MKMapView ( ) 
 + private let pinPoint = AAMapPinPointView ( ) 
 + 
 + override public func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + navigationItem . title = " Location " 
 + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) 
 + 
 + updateAuthStatus ( CLLocationManager . authorizationStatus ( ) ) 
 + 
 + locationManager . delegate = self 
 + 
 + locationManager . requestWhenInUseAuthorization ( ) 
 + locationManager . startUpdatingLocation ( ) 
 + 
 + map . showsUserLocation = true 
 + map . delegate = self 
 + 
 + self . view . addSubview ( map ) 
 + self . view . addSubview ( pinPoint ) 
 + } 
 + 
 + public func mapView ( mapView : MKMapView , regionWillChangeAnimated animated : Bool ) { 
 + pinPoint . risePin ( true , animated : animated ) 
 + } 
 + 
 + public func mapView ( mapView : MKMapView , regionDidChangeAnimated animated : Bool ) { 
 + pinPoint . risePin ( false , animated : animated ) 
 + } 
 + 
 + func cancellDidTap ( ) { 
 + delegate ? . locationPickerDidCancelled ( self ) 
 + } 
 + 
 + func doneDidTap ( ) { 
 + delegate ? . locationPickerDidPicked ( self , latitude : map . centerCoordinate . latitude , longitude : map . centerCoordinate . longitude ) 
 + } 
 + 
 + func updateAuthStatus ( status : CLAuthorizationStatus ) { 
 + if ( status = = CLAuthorizationStatus . Denied ) { 
 + / / User explictly denied access to maps 
 + showPlaceholderWithImage ( UIImage . bundled ( " " ) , title : " Enable location " , subtitle : " Enable location services in settings . " ) 
 + map . hidden = true 
 + navigationItem . rightBarButtonItem = nil 
 + } else if ( status = = CLAuthorizationStatus . Restricted | | status = = CLAuthorizationStatus . NotDetermined ) { 
 + / / App doesn ' t complete auth request 
 + map . hidden = false 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 + hidePlaceholder ( ) 
 + } else { 
 + / / Authorised 
 + map . hidden = false 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 + hidePlaceholder ( ) 
 + } 
 + } 
 + 
 + override public func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + map . frame = self . view . bounds 
 + / / pinPoint . bounds = CGRectMake ( 0 , 0 , 100 , 100 ) 
 + pinPoint . centerIn ( self . view . bounds ) 
 + } 
 + 
 + public func locationManager ( manager : CLLocationManager , didChangeAuthorizationStatus status : CLAuthorizationStatus ) { 
 + updateAuthStatus ( status ) 
 + } 
 + 
 + public func locationManager ( manager : CLLocationManager , didUpdateLocations locations : [ CLLocation ] ) { 
 + let location = locations . first ! 
 + map . setRegion ( MKCoordinateRegion ( center : location . coordinate , span : MKCoordinateSpanMake ( 0 . 05 , 0 . 05 ) ) , animated : true ) 
 + locationManager . stopUpdatingLocation ( ) 
 + } 
 + } 
 + 
 + public protocol AALocationPickerControllerDelegate { 
 + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) 
 + func locationPickerDidCancelled ( controller : AALocationPickerController ) 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 deleted file mode 100644 
 index f0771bb . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 + + + / dev / null 
 @ @ - 1 , 41 + 0 , 0 @ @ 
 - / / 
 - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 - / / 
 - 
 - import Foundation 
 - import MapKit 
 - 
 - class AALocationPickerController : AAViewController { 
 - 
 - let locationManager = CLLocationManager ( ) 
 - let map = MKMapView ( ) 
 - 
 - override func viewDidLoad ( ) { 
 - super . viewDidLoad ( ) 
 - 
 - navigationItem . title = " Location " 
 - navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) 
 - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 - 
 - locationManager . requestWhenInUseAuthorization ( ) 
 - 
 - map . showsUserLocation = true 
 - map . userTrackingMode = MKUserTrackingMode . Follow 
 - 
 - self . view . addSubview ( map ) 
 - } 
 - 
 - func cancellDidTap ( ) { 
 - dismiss ( ) 
 - } 
 - 
 - func doneDidTap ( ) { 
 - dismiss ( ) 
 - } 
 - 
 - override func viewDidLayoutSubviews ( ) { 
 - super . viewDidLayoutSubviews ( ) 
 - 
 - map . frame = self . view . bounds 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 index 3705da0 . . f2c6164 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 @ @ - 65 , 6 + 65 , 11 @ @ public extension UIView { 
 public var right : CGFloat { get { return frame . maxX } } 
 public var top : CGFloat { get { return frame . minY } } 
 public var bottom : CGFloat { get { return frame . maxY } } 
 + 
 + public func centerIn ( rect : CGRect ) { 
 + self . frame = CGRectMake ( ( rect . width - self . bounds . width ) / 2 , ( rect . height - self . bounds . height ) / 2 , 
 + self . bounds . width , self . bounds . height ) 
 + } 
 } 
 
 / / Text measuring 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift 
 new file mode 100644 
 index 0000000 . . ff92ae3 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift 
 @ @ - 0 , 0 + 1 , 41 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public class AAMapPinPointView : UIView { 
 + 
 + let pinView = UIImageView ( ) 
 + let pinPointView = UIImageView ( ) 
 + let pinShadowView = UIImageView ( ) 
 + 
 + public init ( ) { 
 + super . init ( frame : CGRectMake ( 0 , 0 , 100 , 100 ) ) 
 + 
 + pinShadowView . frame = CGRectMake ( 43 , 47 , 32 , 39 ) 
 + pinShadowView . alpha = 0 . 9 
 + pinShadowView . image = UIImage . bundled ( " LocationPinShadow . png " ) 
 + addSubview ( pinShadowView ) 
 + 
 + pinPointView . frame = CGRectMake ( 100 / 2 - 2 , 100 - 18 . 5 , 3 . 5 , 1 . 5 ) 
 + pinPointView . image = UIImage . bundled ( " LocationPinPoint . png " ) 
 + addSubview ( pinPointView ) 
 + 
 + pinView . frame = CGRectMake ( 100 / 2 - 7 , 47 , 13 . 5 , 36 ) 
 + pinView . image = UIImage . bundled ( " LocationPin . png " ) 
 + addSubview ( pinView ) 
 + } 
 + 
 + required public init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func risePin ( rised : Bool , animated : Bool ) { 
 + if ( rised ) { 
 + pinView . hidden = true 
 + } else { 
 + pinView . hidden = false 
 + } 
 + } 
 + } 
 \ No newline at end of file
