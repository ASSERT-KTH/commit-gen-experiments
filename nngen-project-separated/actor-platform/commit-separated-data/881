BLEU SCORE: 0.33932513407933634

TEST MSG: feat ( server : bots ) : add update content changed
GENERATED MSG: feat ( server : botkit ) : add isAdmin request

TEST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index 0fe3e11 . . 179e419 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 292 , 6 + 292 , 18 @ @ object BotMessages { < nl > override def readResponse ( obj : Js . Obj ) = readJs [ MessageSent ] ( obj ) < nl > } < nl > < nl > + @ key ( " SendMessage " ) < nl > + final case class UpdateMessageContent ( < nl > + @ beanGetter peer : OutPeer , < nl > + @ beanGetter randomId : Long , < nl > + @ beanGetter updatedMessage : MessageBody < nl > + ) extends RequestBody { < nl > + override type Response = MessageContentUpdated < nl > + override val service = Services . Messaging < nl > + < nl > + override def readResponse ( obj : Js . Obj ) = readJs [ MessageContentUpdated ] ( obj ) < nl > + } < nl > + < nl > @ key ( " SetValue " ) < nl > final case class SetValue ( < nl > @ beanGetter keyspace : String , < nl > @ @ - 444 , 6 + 456 , 12 @ @ object BotMessages { < nl > < nl > final case class MessageSent ( @ beanGetter date : Long ) extends ResponseBody < nl > < nl > + @ key ( " MessageContentUpdated " ) < nl > + sealed trait MessageContentUpdated extends ResponseBody < nl > + < nl > + @ key ( " MessageContentUpdated " ) < nl > + case object MessageContentUpdated extends MessageContentUpdated < nl > + < nl > @ key ( " CreateGroup " ) < nl > final case class CreateGroup ( < nl > title : String
NEAREST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index a18cdc3 . . 9f1d263 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 416 , 6 + 416 , 17 @ @ object BotMessages { < nl > def getAbout = about . asJava < nl > } < nl > < nl > + @ key ( " IsAdmin " ) < nl > + final case class IsAdmin ( @ beanGetter userId : Int ) extends RequestBody { < nl > + override type Response = ResponseIdAdmin < nl > + override val service = Services . Users < nl > + override def readResponse ( obj : Js . Obj ) = readJs [ Response ] ( obj ) < nl > + } < nl > + < nl > + final case class ResponseIdAdmin ( isAdmin : Boolean , in : Int ) extends ResponseBody { < nl > + def getIsAdmin : java . lang . Boolean = isAdmin . booleanValue ( ) < nl > + } < nl > + < nl > @ key ( " FindUser " ) < nl > final case class FindUser ( < nl > @ beanGetter query : String

TEST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index 0fe3e11 . . 179e419 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 292 , 6 + 292 , 18 @ @ object BotMessages { 
 override def readResponse ( obj : Js . Obj ) = readJs [ MessageSent ] ( obj ) 
 } 
 
 + @ key ( " SendMessage " ) 
 + final case class UpdateMessageContent ( 
 + @ beanGetter peer : OutPeer , 
 + @ beanGetter randomId : Long , 
 + @ beanGetter updatedMessage : MessageBody 
 + ) extends RequestBody { 
 + override type Response = MessageContentUpdated 
 + override val service = Services . Messaging 
 + 
 + override def readResponse ( obj : Js . Obj ) = readJs [ MessageContentUpdated ] ( obj ) 
 + } 
 + 
 @ key ( " SetValue " ) 
 final case class SetValue ( 
 @ beanGetter keyspace : String , 
 @ @ - 444 , 6 + 456 , 12 @ @ object BotMessages { 
 
 final case class MessageSent ( @ beanGetter date : Long ) extends ResponseBody 
 
 + @ key ( " MessageContentUpdated " ) 
 + sealed trait MessageContentUpdated extends ResponseBody 
 + 
 + @ key ( " MessageContentUpdated " ) 
 + case object MessageContentUpdated extends MessageContentUpdated 
 + 
 @ key ( " CreateGroup " ) 
 final case class CreateGroup ( 
 title : String

NEAREST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index a18cdc3 . . 9f1d263 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 416 , 6 + 416 , 17 @ @ object BotMessages { 
 def getAbout = about . asJava 
 } 
 
 + @ key ( " IsAdmin " ) 
 + final case class IsAdmin ( @ beanGetter userId : Int ) extends RequestBody { 
 + override type Response = ResponseIdAdmin 
 + override val service = Services . Users 
 + override def readResponse ( obj : Js . Obj ) = readJs [ Response ] ( obj ) 
 + } 
 + 
 + final case class ResponseIdAdmin ( isAdmin : Boolean , in : Int ) extends ResponseBody { 
 + def getIsAdmin : java . lang . Boolean = isAdmin . booleanValue ( ) 
 + } 
 + 
 @ key ( " FindUser " ) 
 final case class FindUser ( 
 @ beanGetter query : String
