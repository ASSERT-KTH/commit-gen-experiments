BLEU SCORE: 0.07955629933118923

TEST MSG: fix ( server : contacts ) : distinct user ids
GENERATED MSG: perf ( server ) : prevent query compilation in persist . SeqUpdate . findafter

TEST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala < nl > index df43cf9 . . bb03cbc 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala < nl > @ @ - 76 , 7 + 76 , 7 @ @ object UserContactRepo { < nl > contacts . filter ( c ⇒ c . ownerUserId = = = ownerUserId ) . map ( _ . contactUserId ) . result < nl > < nl > def findContactIdsActive ( ownerUserId : Int ) = < nl > - byOwnerUserIdNotDeleted ( ownerUserId ) . map ( _ . contactUserId ) . result < nl > + byOwnerUserIdNotDeleted ( ownerUserId ) . map ( _ . contactUserId ) . distinct . result < nl > < nl > def updateName ( ownerUserId : Int , contactUserId : Int , name : Option [ String ] ) : FixedSqlAction [ Int , NoStream , Write ] = { < nl > contacts . filter ( c ⇒ c . ownerUserId = = = ownerUserId & & c . contactUserId = = = contactUserId ) . map ( _ . name ) . update ( name )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala < nl > index 7f7053d . . cd4f3ad 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala < nl > @ @ - 68 , 5 + 68 , 5 @ @ object SeqUpdate { < nl > byAuthIdC ( authId ) . result < nl > < nl > def findAfter ( authId : Long , timestamp : Long ) = < nl > - afterTimestampC . applied ( ( authId , timestamp , DiffStep ) ) . result < nl > + afterTimestampC ( ( authId , timestamp , DiffStep ) ) . result < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala 
 index df43cf9 . . bb03cbc 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / contact / UserContactRepo . scala 
 @ @ - 76 , 7 + 76 , 7 @ @ object UserContactRepo { 
 contacts . filter ( c ⇒ c . ownerUserId = = = ownerUserId ) . map ( _ . contactUserId ) . result 
 
 def findContactIdsActive ( ownerUserId : Int ) = 
 - byOwnerUserIdNotDeleted ( ownerUserId ) . map ( _ . contactUserId ) . result 
 + byOwnerUserIdNotDeleted ( ownerUserId ) . map ( _ . contactUserId ) . distinct . result 
 
 def updateName ( ownerUserId : Int , contactUserId : Int , name : Option [ String ] ) : FixedSqlAction [ Int , NoStream , Write ] = { 
 contacts . filter ( c ⇒ c . ownerUserId = = = ownerUserId & & c . contactUserId = = = contactUserId ) . map ( _ . name ) . update ( name )

NEAREST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala 
 index 7f7053d . . cd4f3ad 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / sequence / SeqUpdate . scala 
 @ @ - 68 , 5 + 68 , 5 @ @ object SeqUpdate { 
 byAuthIdC ( authId ) . result 
 
 def findAfter ( authId : Long , timestamp : Long ) = 
 - afterTimestampC . applied ( ( authId , timestamp , DiffStep ) ) . result 
 + afterTimestampC ( ( authId , timestamp , DiffStep ) ) . result 
 }
