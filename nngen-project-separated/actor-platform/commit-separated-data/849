BLEU SCORE: 0.26708679784499234

TEST MSG: feat ( core ) : Implemented Fast Connection everywhere
GENERATED MSG: fix ( core ) : Fixing not starting entities download

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 6dd097f . . f4f06e7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 47 , 7 + 47 , 7 @ @ public class CallActor extends EventBusActor { < nl > callModels = context ( ) . getCallsModule ( ) . getCallModels ( ) ; < nl > boolean isMobile = config ( ) . getDeviceCategory ( ) = = DeviceCategory . MOBILE | | < nl > config ( ) . getDeviceCategory ( ) = = DeviceCategory . TABLET ; < nl > - boolean isSupportsFastConnect = isMobile ; < nl > + boolean isSupportsFastConnect = true ; < nl > peerSettings = new ApiPeerSettings ( true , isMobile , false , isSupportsFastConnect ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java < nl > index 12b1268 . . 3c7f119 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java < nl > @ @ - 186 , 7 + 186 , 7 @ @ public class SequenceHandlerActor extends ModuleActor { < nl > unstashAll ( ) ; < nl > isUpdating = false ; < nl > } < nl > - } ) ; < nl > + } ) . done ( self ( ) ) ; < nl > } < nl > } ) ; < nl > } else {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 6dd097f . . f4f06e7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class CallActor extends EventBusActor { 
 callModels = context ( ) . getCallsModule ( ) . getCallModels ( ) ; 
 boolean isMobile = config ( ) . getDeviceCategory ( ) = = DeviceCategory . MOBILE | | 
 config ( ) . getDeviceCategory ( ) = = DeviceCategory . TABLET ; 
 - boolean isSupportsFastConnect = isMobile ; 
 + boolean isSupportsFastConnect = true ; 
 peerSettings = new ApiPeerSettings ( true , isMobile , false , isSupportsFastConnect ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java 
 index 12b1268 . . 3c7f119 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceHandlerActor . java 
 @ @ - 186 , 7 + 186 , 7 @ @ public class SequenceHandlerActor extends ModuleActor { 
 unstashAll ( ) ; 
 isUpdating = false ; 
 } 
 - } ) ; 
 + } ) . done ( self ( ) ) ; 
 } 
 } ) ; 
 } else {
