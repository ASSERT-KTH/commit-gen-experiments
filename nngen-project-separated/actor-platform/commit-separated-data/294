BLEU SCORE: 0.19640732545025652

TEST MSG: feat ( core ) : notifications sound settings for peer
GENERATED MSG: feat ( core + js ) : Enabling Preloading support

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 312b1c5 . . b641406 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 2060 , 6 + 2060 , 28 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Notifications sound enabled for peer < nl > + * < nl > + * @ param peer destination peer < nl > + * @ return notification sound custom uri or null for default sound < nl > + * / < nl > + @ ObjectiveCName ( " getNotificationsSoundWithPeer : " ) < nl > + public String getNotificationsSound ( Peer peer ) { < nl > + return modules . getSettingsModule ( ) . getNotificationPeerSound ( peer ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Change notifications sound for peer < nl > + * < nl > + * @ param peer destination peer < nl > + * @ param val notification sound custom uri or null for default sound < nl > + * / < nl > + @ ObjectiveCName ( " changeNotificationsSoundPeer : withValue : " ) < nl > + public void changeNotificationsSound ( Peer peer , String val ) { < nl > + modules . getSettingsModule ( ) . changeNotificationPeerSound ( peer , val ) ; < nl > + } < nl > + < nl > + / * * < nl > * Is in - app notifications enabled < nl > * < nl > * @ return is notifications enabled < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java < nl > index 9d1a989 . . 5261ca9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java < nl > @ @ - 8 , 11 + 8 , 8 @ @ import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > - import im . actor . core . modules . settings . SettingsSyncActor ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > - import im . actor . runtime . actors . Props ; < nl > < nl > public class SettingsModule extends AbsModule { < nl > < nl > @ @ - 44 , 6 + 41 , 8 @ @ public class SettingsModule extends AbsModule { < nl > < nl > private final String KEY _ ANIMATION _ AUTO _ PLAY ; < nl > < nl > + private final String KEY _ NOTIFICATION _ PEER _ SOUND ; < nl > + < nl > private ActorRef settingsSync ; < nl > < nl > public SettingsModule ( ModuleContext context ) { < nl > @ @ - 88 , 6 + 87 , 8 @ @ public class SettingsModule extends AbsModule { < nl > KEY _ MARKDOWN _ ENABLED = " app . " + platformType + " " + deviceType + " . use _ markdown " ; < nl > KEY _ CHAT _ TEXT _ SIZE = " app . " + platformType + " . " + deviceType + " . text _ size " ; < nl > < nl > + KEY _ NOTIFICATION _ PEER _ SOUND = " category . " + deviceType + " . " + platformType + " . ringtone . chat . " ; < nl > + < nl > / / Device - type notification settings < nl > KEY _ NOTIFICATION _ ENABLED = " category . " + deviceType + " . notification . enabled " ; < nl > KEY _ NOTIFICATION _ SOUND _ ENABLED = " category . " + deviceType + " . notification . sound . enabled " ; < nl > @ @ - 155 , 6 + 156 , 14 @ @ public class SettingsModule extends AbsModule { < nl > setStringValue ( KEY _ NOTIFICATION _ SOUND , sound ) ; < nl > } < nl > < nl > + public String getNotificationPeerSound ( Peer peer ) { < nl > + return readValue ( KEY _ NOTIFICATION _ PEER _ SOUND + getChatKey ( peer ) ) ; < nl > + } < nl > + < nl > + public void changeNotificationPeerSound ( Peer peer , String sound ) { < nl > + setStringValue ( KEY _ NOTIFICATION _ PEER _ SOUND + getChatKey ( peer ) , sound ) ; < nl > + } < nl > + < nl > public boolean isVibrationEnabled ( ) { < nl > return getBooleanValue ( KEY _ NOTIFICATION _ VIBRATION , true ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 22de262 . . c09bbe9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 398 , 6 + 398 , 10 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Chats < nl > < nl > + public void preInitChat ( JsPeer peer ) { < nl > + messenger . onConversationPreLoad ( peer . convert ( ) ) ; < nl > + } < nl > + < nl > public void bindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index a003626 . . 46f89ef 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 35 , 6 + 35 , 7 @ @ import im . actor . core . entity . WebActionDescriptor ; < nl > import im . actor . core . entity . content . FastThumb ; < nl > import im . actor . core . entity . content . JsonContent ; < nl > import im . actor . core . entity . content . internal . Sticker ; < nl > + import im . actor . core . events . PeerChatPreload ; < nl > import im . actor . core . i18n . I18nEngine ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . Modules ; < nl > @ @ - 573 , 6 + 574 , 16 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Can be called for forcing conversation loading in background < nl > + * < nl > + * @ param peer conversation ' s peer < nl > + * / < nl > + @ ObjectiveCName ( " onConversationPreLoadWithPeer : " ) < nl > + public void onConversationPreLoad ( @ NotNull Peer peer ) { < nl > + modules . getEvents ( ) . post ( new PeerChatPreload ( peer ) ) ; < nl > + } < nl > + < nl > + / * * < nl > * MUST be called on conversation closed < nl > * < nl > * @ param peer conversation ' s peer < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / PeerChatPreload . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / PeerChatPreload . java < nl > new file mode 100644 < nl > index 0000000 . . ada6b39 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / PeerChatPreload . java < nl > @ @ - 0 , 0 + 1 , 29 @ @ < nl > + package im . actor . core . events ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . runtime . eventbus . Event ; < nl > + < nl > + public class PeerChatPreload extends Event { < nl > + < nl > + public static final String EVENT = " peer _ chat _ preload " ; < nl > + < nl > + private Peer peer ; < nl > + < nl > + public PeerChatPreload ( Peer peer ) { < nl > + this . peer = peer ; < nl > + } < nl > + < nl > + public Peer getPeer ( ) { < nl > + return peer ; < nl > + } < nl > + < nl > + @ Override < nl > + public String getType ( ) { < nl > + return EVENT ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + return EVENT + " { " + peer . toIdString ( ) + " } " ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > index d9d843c . . 0588e55 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > @ @ - 49 , 6 + 49 , 7 @ @ import im . actor . core . entity . content . FastThumb ; < nl > import im . actor . core . entity . content . JsonContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . internal . Sticker ; < nl > + import im . actor . core . events . PeerChatPreload ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . events . AppVisibleChanged ; < nl > @ @ - 275 , 12 + 276 , 12 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > } < nl > } < nl > < nl > - public ListEngine getCustomConversationEngine ( Peer peer , String dataType , BserCreator creator ) { < nl > - String key = peer . getUnuqueId ( ) + dataType ; < nl > + public ListEngine getCustomConversationEngine ( Peer peer , String dataType , BserCreator creator ) { < nl > + String key = peer . getUnuqueId ( ) + dataType ; < nl > synchronized ( customConversationEngines ) { < nl > if ( ! customConversationEngines . containsKey ( key ) ) { < nl > customConversationEngines . put ( key , < nl > - Storage . createList ( STORAGE _ CHAT _ CUSTOM _ PREFIX + " _ " + dataType + " _ " + peer . getUnuqueId ( ) , creator ) ) ; < nl > + Storage . createList ( STORAGE _ CHAT _ CUSTOM _ PREFIX + " _ " + dataType + " _ " + peer . getUnuqueId ( ) , creator ) ) ; < nl > } < nl > return customConversationEngines . get ( key ) ; < nl > } < nl > @ @ - 1052 , 6 + 1053 , 9 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > Peer peer = ( ( PeerChatClosed ) event ) . getPeer ( ) ; < nl > assumeConvActor ( peer ) ; < nl > conversationActors . get ( peer ) . send ( new ConversationActor . ConversationHidden ( ) ) ; < nl > + } else if ( event instanceof PeerChatPreload ) { < nl > + Peer peer = ( ( PeerChatPreload ) event ) . getPeer ( ) ; < nl > + assumeConvActor ( peer ) ; < nl > } < nl > } < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 312b1c5 . . b641406 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 2060 , 6 + 2060 , 28 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Notifications sound enabled for peer 
 + * 
 + * @ param peer destination peer 
 + * @ return notification sound custom uri or null for default sound 
 + * / 
 + @ ObjectiveCName ( " getNotificationsSoundWithPeer : " ) 
 + public String getNotificationsSound ( Peer peer ) { 
 + return modules . getSettingsModule ( ) . getNotificationPeerSound ( peer ) ; 
 + } 
 + 
 + / * * 
 + * Change notifications sound for peer 
 + * 
 + * @ param peer destination peer 
 + * @ param val notification sound custom uri or null for default sound 
 + * / 
 + @ ObjectiveCName ( " changeNotificationsSoundPeer : withValue : " ) 
 + public void changeNotificationsSound ( Peer peer , String val ) { 
 + modules . getSettingsModule ( ) . changeNotificationPeerSound ( peer , val ) ; 
 + } 
 + 
 + / * * 
 * Is in - app notifications enabled 
 * 
 * @ return is notifications enabled 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java 
 index 9d1a989 . . 5261ca9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java 
 @ @ - 8 , 11 + 8 , 8 @ @ import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 - import im . actor . core . modules . settings . SettingsSyncActor ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . ActorSystem ; 
 - import im . actor . runtime . actors . Props ; 
 
 public class SettingsModule extends AbsModule { 
 
 @ @ - 44 , 6 + 41 , 8 @ @ public class SettingsModule extends AbsModule { 
 
 private final String KEY _ ANIMATION _ AUTO _ PLAY ; 
 
 + private final String KEY _ NOTIFICATION _ PEER _ SOUND ; 
 + 
 private ActorRef settingsSync ; 
 
 public SettingsModule ( ModuleContext context ) { 
 @ @ - 88 , 6 + 87 , 8 @ @ public class SettingsModule extends AbsModule { 
 KEY _ MARKDOWN _ ENABLED = " app . " + platformType + " " + deviceType + " . use _ markdown " ; 
 KEY _ CHAT _ TEXT _ SIZE = " app . " + platformType + " . " + deviceType + " . text _ size " ; 
 
 + KEY _ NOTIFICATION _ PEER _ SOUND = " category . " + deviceType + " . " + platformType + " . ringtone . chat . " ; 
 + 
 / / Device - type notification settings 
 KEY _ NOTIFICATION _ ENABLED = " category . " + deviceType + " . notification . enabled " ; 
 KEY _ NOTIFICATION _ SOUND _ ENABLED = " category . " + deviceType + " . notification . sound . enabled " ; 
 @ @ - 155 , 6 + 156 , 14 @ @ public class SettingsModule extends AbsModule { 
 setStringValue ( KEY _ NOTIFICATION _ SOUND , sound ) ; 
 } 
 
 + public String getNotificationPeerSound ( Peer peer ) { 
 + return readValue ( KEY _ NOTIFICATION _ PEER _ SOUND + getChatKey ( peer ) ) ; 
 + } 
 + 
 + public void changeNotificationPeerSound ( Peer peer , String sound ) { 
 + setStringValue ( KEY _ NOTIFICATION _ PEER _ SOUND + getChatKey ( peer ) , sound ) ; 
 + } 
 + 
 public boolean isVibrationEnabled ( ) { 
 return getBooleanValue ( KEY _ NOTIFICATION _ VIBRATION , true ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 22de262 . . c09bbe9 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 398 , 6 + 398 , 10 @ @ public class JsFacade implements Exportable { 
 
 / / Chats 
 
 + public void preInitChat ( JsPeer peer ) { 
 + messenger . onConversationPreLoad ( peer . convert ( ) ) ; 
 + } 
 + 
 public void bindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { 
 if ( callback = = null ) { 
 return ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index a003626 . . 46f89ef 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import im . actor . core . entity . WebActionDescriptor ; 
 import im . actor . core . entity . content . FastThumb ; 
 import im . actor . core . entity . content . JsonContent ; 
 import im . actor . core . entity . content . internal . Sticker ; 
 + import im . actor . core . events . PeerChatPreload ; 
 import im . actor . core . i18n . I18nEngine ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . Modules ; 
 @ @ - 573 , 6 + 574 , 16 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Can be called for forcing conversation loading in background 
 + * 
 + * @ param peer conversation ' s peer 
 + * / 
 + @ ObjectiveCName ( " onConversationPreLoadWithPeer : " ) 
 + public void onConversationPreLoad ( @ NotNull Peer peer ) { 
 + modules . getEvents ( ) . post ( new PeerChatPreload ( peer ) ) ; 
 + } 
 + 
 + / * * 
 * MUST be called on conversation closed 
 * 
 * @ param peer conversation ' s peer 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / PeerChatPreload . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / PeerChatPreload . java 
 new file mode 100644 
 index 0000000 . . ada6b39 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / PeerChatPreload . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package im . actor . core . events ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . runtime . eventbus . Event ; 
 + 
 + public class PeerChatPreload extends Event { 
 + 
 + public static final String EVENT = " peer _ chat _ preload " ; 
 + 
 + private Peer peer ; 
 + 
 + public PeerChatPreload ( Peer peer ) { 
 + this . peer = peer ; 
 + } 
 + 
 + public Peer getPeer ( ) { 
 + return peer ; 
 + } 
 + 
 + @ Override 
 + public String getType ( ) { 
 + return EVENT ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return EVENT + " { " + peer . toIdString ( ) + " } " ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 index d9d843c . . 0588e55 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 @ @ - 49 , 6 + 49 , 7 @ @ import im . actor . core . entity . content . FastThumb ; 
 import im . actor . core . entity . content . JsonContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . internal . Sticker ; 
 + import im . actor . core . events . PeerChatPreload ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . events . AppVisibleChanged ; 
 @ @ - 275 , 12 + 276 , 12 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 } 
 } 
 
 - public ListEngine getCustomConversationEngine ( Peer peer , String dataType , BserCreator creator ) { 
 - String key = peer . getUnuqueId ( ) + dataType ; 
 + public ListEngine getCustomConversationEngine ( Peer peer , String dataType , BserCreator creator ) { 
 + String key = peer . getUnuqueId ( ) + dataType ; 
 synchronized ( customConversationEngines ) { 
 if ( ! customConversationEngines . containsKey ( key ) ) { 
 customConversationEngines . put ( key , 
 - Storage . createList ( STORAGE _ CHAT _ CUSTOM _ PREFIX + " _ " + dataType + " _ " + peer . getUnuqueId ( ) , creator ) ) ; 
 + Storage . createList ( STORAGE _ CHAT _ CUSTOM _ PREFIX + " _ " + dataType + " _ " + peer . getUnuqueId ( ) , creator ) ) ; 
 } 
 return customConversationEngines . get ( key ) ; 
 } 
 @ @ - 1052 , 6 + 1053 , 9 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 Peer peer = ( ( PeerChatClosed ) event ) . getPeer ( ) ; 
 assumeConvActor ( peer ) ; 
 conversationActors . get ( peer ) . send ( new ConversationActor . ConversationHidden ( ) ) ; 
 + } else if ( event instanceof PeerChatPreload ) { 
 + Peer peer = ( ( PeerChatPreload ) event ) . getPeer ( ) ; 
 + assumeConvActor ( peer ) ; 
 } 
 } 
 } 
 \ No newline at end of file
