BLEU SCORE: 0.11868405219520975

TEST MSG: fix ( js ) : Fixing unsued and nullable warrings
GENERATED MSG: fix ( web ) : fix build

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index f4cf06d . . b4e7711 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 21 , 6 + 21 , 7 @ @ import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerSearchEntity ; < nl > import im . actor . core . entity . PeerSearchType ; < nl > import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . js . annotations . UsedByApp ; < nl > import im . actor . core . js . entity . * ; < nl > import im . actor . core . js . modules . JsBindedValueCallback ; < nl > import im . actor . core . js . providers . JsNotificationsProvider ; < nl > @ @ - 29 , 7 + 30 , 7 @ @ import im . actor . core . js . providers . JsCallsProvider ; < nl > import im . actor . core . js . providers . electron . JsElectronApp ; < nl > import im . actor . core . js . utils . HtmlMarkdownUtils ; < nl > import im . actor . core . js . utils . IdentityUtils ; < nl > - import im . actor . core . modules . internal . messages . entity . EntityConverter ; < nl > + import im . actor . core . modules . messaging . actors . entity . EntityConverter ; < nl > import im . actor . core . network . RpcCallback ; < nl > import im . actor . core . network . RpcException ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > @ @ - 54 , 6 + 55 , 7 @ @ import java . util . List ; < nl > < nl > @ ExportPackage ( " actor " ) < nl > @ Export ( " ActorApp " ) < nl > + @ UsedByApp < nl > public class JsFacade implements Exportable { < nl > < nl > private static final String TAG = " JsMessenger " ; < nl > @ @ - 67 , 10 + 69 , 12 @ @ public class JsFacade implements Exportable { < nl > private Peer lastVisiblePeer ; < nl > < nl > @ Export < nl > + @ UsedByApp < nl > public JsFacade ( ) { < nl > < nl > } < nl > < nl > + @ UsedByApp < nl > public void init ( JsConfig config ) { < nl > < nl > provider = ( JsFileSystemProvider ) Storage . getFileSystemRuntime ( ) ; < nl > @ @ - 129 , 28 + 133 , 34 @ @ public class JsFacade implements Exportable { < nl > Log . d ( TAG , " JsMessenger created " ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isLoggedIn ( ) { < nl > return messenger . isLoggedIn ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public int getUid ( ) { < nl > return messenger . myUid ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isElectron ( ) { < nl > return messenger . isElectron ( ) ; < nl > } < nl > < nl > / / Auth < nl > < nl > + @ UsedByApp < nl > public String getAuthState ( ) { < nl > return Enums . convert ( messenger . getAuthState ( ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public String getAuthPhone ( ) { < nl > return " " + messenger . getAuthPhone ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void requestSms ( String phone , final JsAuthSuccessClosure success , < nl > final JsAuthErrorClosure error ) { < nl > try { < nl > @ @ - 186 , 6 + 196 , 7 @ @ public class JsFacade implements Exportable { < nl > } < nl > } < nl > < nl > + @ UsedByApp < nl > public void requestCodeEmail ( String email , final JsAuthSuccessClosure success , < nl > final JsAuthErrorClosure error ) { < nl > messenger . requestStartEmailAuth ( email ) . start ( new CommandCallback < AuthState > ( ) { < nl > @ @ - 209 , 6 + 220 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void sendCode ( String code , final JsAuthSuccessClosure success , < nl > final JsAuthErrorClosure error ) { < nl > try { < nl > @ @ - 243 , 6 + 255 , 7 @ @ public class JsFacade implements Exportable { < nl > } < nl > } < nl > < nl > + @ UsedByApp < nl > public void signUp ( String name , final JsAuthSuccessClosure success , < nl > final JsAuthErrorClosure error ) { < nl > messenger . signUp ( name , null , null ) . start ( new CommandCallback < AuthState > ( ) { < nl > @ @ - 266 , 6 + 279 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise loadSessions ( ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 292 , 6 + 306 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise terminateSession ( final int id ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 312 , 6 + 327 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise terminateAllSessions ( ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 334 , 6 + 350 , 7 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Dialogs < nl > < nl > + @ UsedByApp < nl > public void bindDialogs ( JsDisplayListCallback < JsDialog > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 341 , 6 + 358 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedDialogList ( ) . subscribe ( callback , false ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindDialogs ( JsDisplayListCallback < JsDialog > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 348 , 6 + 366 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedDialogList ( ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindGroupDialogs ( JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 356 , 6 + 375 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getDialogsGroupedList ( ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindGroupDialogs ( JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 366 , 6 + 386 , 7 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Contacts < nl > < nl > + @ UsedByApp < nl > public void bindContacts ( JsDisplayListCallback < JsContact > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 373 , 6 + 394 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedContactList ( ) . subscribe ( callback , true ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindContacts ( JsDisplayListCallback < JsContact > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 382 , 6 + 404 , 7 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Search < nl > < nl > + @ UsedByApp < nl > public void bindSearch ( JsDisplayListCallback < JsSearchEntity > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 389 , 6 + 412 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedSearchList ( ) . subscribe ( callback , false ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindSearch ( JsDisplayListCallback < JsSearchEntity > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 398 , 10 + 422 , 12 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Chats < nl > < nl > + @ UsedByApp < nl > public void preInitChat ( JsPeer peer ) { < nl > messenger . onConversationPreLoad ( peer . convert ( ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 409 , 6 + 435 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedChatList ( peer . convert ( ) ) . subscribe ( callback , true ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 416 , 6 + 443 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedChatList ( peer . convert ( ) ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsMessagesBind bindMessages ( JsPeer peer , JsMessagesBindClosure callback ) { < nl > if ( callback = = null ) { < nl > return null ; < nl > @ @ - 425 , 10 + 453 , 12 @ @ public class JsFacade implements Exportable { < nl > return new JsMessagesBind ( callback , messenger . getSharedChatList ( peerC ) , messenger . getConversationVM ( peerC ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void deleteMessage ( JsPeer peer , String id ) { < nl > messenger . deleteMessages ( peer . convert ( ) , new long [ ] { Long . parseLong ( id ) } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise deleteChat ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 450 , 6 + 480 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise clearChat ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 471 , 6 + 502 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise archiveChat ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 492 , 6 + 524 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise favoriteChat ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 513 , 6 + 546 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise unfavoriteChat ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 536 , 34 + 570 , 41 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Peers < nl > < nl > + @ UsedByApp < nl > public JsPeer getUserPeer ( int uid ) { < nl > return JsPeer . create ( Peer . user ( uid ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPeer getGroupPeer ( int gid ) { < nl > return JsPeer . create ( Peer . group ( gid ) ) ; < nl > } < nl > < nl > / / Stickers < nl > < nl > + @ UsedByApp < nl > public JsArray < JsSticker > getStickers ( ) { < nl > return messenger . getStickers ( ) . get ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindStickers ( JsBindedValueCallback callback ) { < nl > messenger . getStickers ( ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindStickers ( JsBindedValueCallback callback ) { < nl > messenger . getStickers ( ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > / / Users < nl > < nl > + @ UsedByApp < nl > public JsUser getUser ( int uid ) { < nl > return messenger . getJsUser ( uid ) . get ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindUser ( int uid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 571 , 6 + 612 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsUser ( uid ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindUser ( int uid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 578 , 6 + 620 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsUser ( uid ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindUserOnline ( int uid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 585 , 6 + 628 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsUserOnline ( uid ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindUserOnline ( int uid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 594 , 10 + 638 , 12 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Groups < nl > < nl > + @ UsedByApp < nl > public JsGroup getGroup ( int gid ) { < nl > return messenger . getJsGroup ( gid ) . get ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindGroup ( int gid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 605 , 6 + 651 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsGroup ( gid ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindGroup ( int gid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 612 , 6 + 659 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsGroup ( gid ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindGroupOnline ( int gid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 619 , 6 + 667 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsGroupOnline ( gid ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindGroupOnline ( int gid , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 628 , 6 + 677 , 7 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Calls < nl > < nl > + @ UsedByApp < nl > public JsPromise doCall ( final int uid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 649 , 6 + 699 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise doGroupCall ( final int gid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 670 , 18 + 721 , 22 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void answerCall ( String callId ) { < nl > messenger . answerCall ( Long . parseLong ( callId ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void endCall ( String callId ) { < nl > messenger . endCall ( Long . parseLong ( callId ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void toggleCallMute ( String callId ) { < nl > messenger . toggleCallMute ( Long . parseLong ( callId ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindCall ( String id , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 689 , 6 + 744 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsCall ( id ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindCall ( String id , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 698 , 6 + 754 , 7 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Event Bus < nl > < nl > + @ UsedByApp < nl > public void bindEventBus ( JsEventBusCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 706 , 6 + 763 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . subscribeEventBus ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindEventBus ( JsEventBusCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > @ @ - 716 , 43 + 774 , 52 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Actions < nl > < nl > + @ UsedByApp < nl > public void sendMessage ( JsPeer peer , String text ) { < nl > messenger . sendMessageWithMentionsDetect ( peer . convert ( ) , text ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void sendFile ( JsPeer peer , JsFile file ) { < nl > String descriptor = provider . registerUploadFile ( file ) ; < nl > messenger . sendDocument ( peer . convert ( ) , < nl > file . getName ( ) , file . getMimeType ( ) , descriptor ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void sendPhoto ( final JsPeer peer , final JsFile file ) { < nl > messenger . sendPhoto ( peer . convert ( ) , file ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void sendClipboardPhoto ( final JsPeer peer , final JsBlob blob ) { < nl > messenger . sendClipboardPhoto ( peer . convert ( ) , blob ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void sendVoiceMessage ( final JsPeer peer , int duration , final JsBlob blob ) { < nl > String descriptor = provider . registerUploadFile ( blob ) ; < nl > messenger . sendAudio ( peer . convert ( ) , " voice . opus " , duration , descriptor ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void sendSticker ( JsPeer peer , JsSticker sticker ) { < nl > messenger . sendSticker ( peer . convert ( ) , sticker . getSticker ( ) ) ; < nl > } < nl > < nl > / / Drafts < nl > < nl > + @ UsedByApp < nl > public void saveDraft ( JsPeer peer , String text ) { < nl > messenger . saveDraft ( peer . convert ( ) , text ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public String loadDraft ( JsPeer peer ) { < nl > return messenger . loadDraft ( peer . convert ( ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsArray < JsMentionFilterResult > findMentions ( int gid , String query ) { < nl > List < MentionFilterResult > res = messenger . findMentions ( gid , query ) ; < nl > JsArray < JsMentionFilterResult > mentions = JsArray . createArray ( ) . cast ( ) ; < nl > @ @ - 764 , 50 + 831 , 61 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Typing < nl > < nl > + @ UsedByApp < nl > public void onTyping ( JsPeer peer ) { < nl > messenger . onTyping ( peer . convert ( ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsTyping getTyping ( JsPeer peer ) { < nl > return messenger . getTyping ( peer . convert ( ) ) . get ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindTyping ( JsPeer peer , JsBindedValueCallback callback ) { < nl > messenger . getTyping ( peer . convert ( ) ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindTyping ( JsPeer peer , JsBindedValueCallback callback ) { < nl > messenger . getTyping ( peer . convert ( ) ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > / / Updating state < nl > < nl > + @ UsedByApp < nl > public void bindConnectState ( JsBindedValueCallback callback ) { < nl > messenger . getOnlineStatus ( ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindConnectState ( JsBindedValueCallback callback ) { < nl > messenger . getOnlineStatus ( ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindGlobalCounter ( JsBindedValueCallback callback ) { < nl > messenger . getGlobalCounter ( ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindGlobalCounter ( JsBindedValueCallback callback ) { < nl > messenger . getGlobalCounter ( ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void bindTempGlobalCounter ( JsBindedValueCallback callback ) { < nl > messenger . getTempGlobalCounter ( ) . subscribe ( callback ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void unbindTempGlobalCounter ( JsBindedValueCallback callback ) { < nl > messenger . getTempGlobalCounter ( ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > / / Events < nl > < nl > + @ UsedByApp < nl > public void onAppVisible ( ) { < nl > / / Ignore for electron runtime < nl > if ( isElectron ( ) ) { < nl > @ @ - 817 , 6 + 895 , 7 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsIdleModule ( ) . onVisible ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onAppHidden ( ) { < nl > / / Ignore for electron runtime < nl > if ( isElectron ( ) ) { < nl > @ @ - 826 , 12 + 905 , 14 @ @ public class JsFacade implements Exportable { < nl > messenger . getJsIdleModule ( ) . onHidden ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onConversationOpen ( JsPeer peer ) { < nl > Log . d ( TAG , " onConversationOpen | " + peer ) ; < nl > lastVisiblePeer = peer . convert ( ) ; < nl > messenger . onConversationOpen ( lastVisiblePeer ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onConversationClosed ( JsPeer peer ) { < nl > Log . d ( TAG , " onConversationClosed | " + peer ) ; < nl > if ( lastVisiblePeer ! = null & & lastVisiblePeer . equals ( peer . convert ( ) ) ) { < nl > @ @ - 841 , 34 + 922 , 42 @ @ public class JsFacade implements Exportable { < nl > messenger . onConversationClosed ( peer . convert ( ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onDialogsOpen ( ) { < nl > messenger . onDialogsOpen ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onDialogsClosed ( ) { < nl > messenger . onDialogsClosed ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onProfileOpen ( int uid ) { < nl > messenger . onProfileOpen ( uid ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onProfileClosed ( int uid ) { < nl > messenger . onProfileClosed ( uid ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void onDialogsEnd ( ) { < nl > messenger . loadMoreDialogs ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise loadArchivedDialogs ( ) { < nl > return loadArchivedDialogs ( true ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise loadMoreArchivedDialogs ( ) { < nl > return loadArchivedDialogs ( false ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > private JsPromise loadArchivedDialogs ( final boolean init ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 892 , 15 + 981 , 16 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > } ) ; < nl > - < nl > } < nl > < nl > + @ UsedByApp < nl > public void onChatEnd ( JsPeer peer ) { < nl > messenger . loadMoreHistory ( peer . convert ( ) ) ; < nl > } < nl > < nl > / / Profile < nl > < nl > + @ UsedByApp < nl > public JsPromise editMyName ( final String newName ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 923 , 6 + 1013 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise editMyNick ( final String newNick ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 945 , 6 + 1036 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise editMyAbout ( final String newAbout ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 967 , 6 + 1059 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise findAllText ( final JsPeer peer , final String query ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 987 , 6 + 1080 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise findAllPhotos ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1007 , 6 + 1101 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise findAllDocs ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1027 , 6 + 1122 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise findAllLinks ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1059 , 6 + 1155 , 7 @ @ public class JsFacade implements Exportable { < nl > return jsRes ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise findGroups ( ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1092 , 15 + 1189 , 18 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeMyAvatar ( final JsFile file ) { < nl > String descriptor = provider . registerUploadFile ( file ) ; < nl > messenger . changeMyAvatar ( descriptor ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void removeMyAvatar ( ) { < nl > messenger . removeMyAvatar ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise editName ( final int uid , final String newName ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1123 , 6 + 1223 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise joinGroupViaLink ( final String url ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1145 , 6 + 1246 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise editGroupTitle ( final int gid , final String newTitle ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1167 , 6 + 1269 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise editGroupAbout ( final int gid , final String newAbout ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1187 , 15 + 1290 , 18 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeGroupAvatar ( final int gid , final JsFile file ) { < nl > String descriptor = provider . registerUploadFile ( file ) ; < nl > messenger . changeGroupAvatar ( gid , descriptor ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void removeGroupAvatar ( final int gid ) { < nl > messenger . removeGroupAvatar ( gid ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise createGroup ( final String title , final JsFile file , final int [ ] uids ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1219 , 6 + 1325 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise inviteMember ( final int gid , final int uid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1241 , 6 + 1348 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise kickMember ( final int gid , final int uid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1263 , 6 + 1371 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise leaveGroup ( final int gid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1285 , 6 + 1394 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise getIntegrationToken ( final int gid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1307 , 6 + 1417 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise revokeIntegrationToken ( final int gid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1329 , 6 + 1440 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise getInviteLink ( final int gid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1351 , 6 + 1463 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise revokeInviteLink ( final int gid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1373 , 6 + 1486 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise addContact ( final int uid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1395 , 6 + 1509 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise addLike ( final JsPeer peer , final String rid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1416 , 6 + 1531 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise removeLike ( final JsPeer peer , final String rid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1437 , 6 + 1553 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise findUsers ( final String query ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1464 , 6 + 1581 , 7 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public JsPromise removeContact ( final int uid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > @ @ - 1488 , 54 + 1606 , 67 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Settings < nl > < nl > + @ UsedByApp < nl > public void changeNotificationsEnabled ( JsPeer peer , boolean isEnabled ) { < nl > messenger . changeNotificationsEnabled ( peer . convert ( ) , isEnabled ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isNotificationsEnabled ( JsPeer peer ) { < nl > return messenger . isNotificationsEnabled ( peer . convert ( ) ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isSendByEnterEnabled ( ) { < nl > return messenger . isSendByEnterEnabled ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeSendByEnter ( boolean sendByEnter ) { < nl > messenger . changeSendByEnter ( sendByEnter ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isGroupsNotificationsEnabled ( ) { < nl > return messenger . isGroupNotificationsEnabled ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeGroupNotificationsEnabled ( boolean enabled ) { < nl > messenger . changeGroupNotificationsEnabled ( enabled ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isOnlyMentionNotifications ( ) { < nl > return messenger . isGroupNotificationsOnlyMentionsEnabled ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeIsOnlyMentionNotifications ( boolean enabled ) { < nl > messenger . changeGroupNotificationsOnlyMentionsEnabled ( enabled ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isSoundEffectsEnabled ( ) { < nl > return messenger . isConversationTonesEnabled ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public boolean isShowNotificationsTextEnabled ( ) { < nl > return messenger . isShowNotificationsText ( ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeIsShowNotificationTextEnabled ( boolean value ) { < nl > messenger . changeShowNotificationTextEnabled ( value ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public void changeSoundEffectsEnabled ( boolean enabled ) { < nl > messenger . changeConversationTonesEnabled ( enabled ) ; < nl > } < nl > < nl > + @ UsedByApp < nl > public String renderMarkdown ( final String markdownText ) { < nl > try { < nl > return HtmlMarkdownUtils . processText ( markdownText , MarkdownParser . MODE _ FULL ) ; < nl > @ @ - 1545 , 6 + 1676 , 7 @ @ public class JsFacade implements Exportable { < nl > } < nl > } < nl > < nl > + @ UsedByApp < nl > public void handleLinkClick ( Event event ) { < nl > Element target = Element . as ( event . getEventTarget ( ) ) ; < nl > String href = target . getAttribute ( " href " ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / annotations / UsedByApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / annotations / UsedByApp . java < nl > new file mode 100644 < nl > index 0000000 . . 7e16631 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / annotations / UsedByApp . java < nl > @ @ - 0 , 0 + 1 , 4 @ @ < nl > + package im . actor . core . js . annotations ; < nl > + < nl > + public @ interface UsedByApp { < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 64584c7 . . d10436a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 1303 , 7 + 1303 , 7 @ @ public class Messenger { < nl > * @ param theme new group theme < nl > * @ return Command for execution < nl > * / < nl > - @ Nullable < nl > + @ NotNull < nl > @ ObjectiveCName ( " editGroupThemeCommandWithGid : withTheme : " ) < nl > public Command < Boolean > editGroupTheme ( final int gid , final String theme ) { < nl > return modules . getGroupsModule ( ) . editTheme ( gid , theme ) ; < nl > @ @ - 1316 , 7 + 1316 , 7 @ @ public class Messenger { < nl > * @ param about new group about < nl > * @ return Command for execution < nl > * / < nl > - @ Nullable < nl > + @ NotNull < nl > @ ObjectiveCName ( " editGroupAboutCommandWithGid : withAbout : " ) < nl > public Command < Boolean > editGroupAbout ( final int gid , final String about ) { < nl > return modules . getGroupsModule ( ) . editAbout ( gid , about ) ; < nl > @ @ - 2053 , 7 + 2053 , 7 @ @ public class Messenger { < nl > * < nl > * @ return Command for execution < nl > * / < nl > - @ Nullable < nl > + @ NotNull < nl > @ ObjectiveCName ( " loadSessionsCommand " ) < nl > public Command < List < ApiAuthSession > > loadSessions ( ) { < nl > return modules . getSecurityModule ( ) . loadSessions ( ) ; < nl > @ @ - 2064 , 7 + 2064 , 7 @ @ public class Messenger { < nl > * < nl > * @ return Command for execution < nl > * / < nl > - @ Nullable < nl > + @ NotNull < nl > @ ObjectiveCName ( " terminateAllSessionsCommand " ) < nl > public Command < Boolean > terminateAllSessions ( ) { < nl > return modules . getSecurityModule ( ) . terminateAllSessions ( ) ; < nl > @ @ - 2076 , 7 + 2076 , 7 @ @ public class Messenger { < nl > * @ param id session id < nl > * @ return Command for execution < nl > * / < nl > - @ Nullable < nl > + @ NotNull < nl > @ ObjectiveCName ( " terminateSessionCommandWithId : " ) < nl > public Command < Boolean > terminateSession ( int id ) { < nl > return modules . getSecurityModule ( ) . terminateSession ( id ) ;
NEAREST DIFF (one line): diff - - git a / actor - apps / core - js / src / main / java / im / actor / model / js / JsFacade . java b / actor - apps / core - js / src / main / java / im / actor / model / js / JsFacade . java < nl > deleted file mode 100644 < nl > index f615cdc . . 0000000 < nl > - - - a / actor - apps / core - js / src / main / java / im / actor / model / js / JsFacade . java < nl > + + + / dev / null < nl > @ @ - 1 , 765 + 0 , 0 @ @ < nl > - / * < nl > - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - * / < nl > - < nl > - package im . actor . model . js ; < nl > - < nl > - import com . google . gwt . core . client . JsArray ; < nl > - < nl > - import org . timepedia . exporter . client . Export ; < nl > - import org . timepedia . exporter . client . ExportPackage ; < nl > - import org . timepedia . exporter . client . Exportable ; < nl > - < nl > - import im . actor . model . ApiConfiguration ; < nl > - import im . actor . model . AuthState ; < nl > - import im . actor . model . concurrency . CommandCallback ; < nl > - import im . actor . model . entity . Peer ; < nl > - import im . actor . model . js . angular . AngularListCallback ; < nl > - import im . actor . model . js . angular . AngularValueCallback ; < nl > - import im . actor . model . js . entity . Enums ; < nl > - import im . actor . model . js . entity . JsAuthErrorClosure ; < nl > - import im . actor . model . js . entity . JsAuthSuccessClosure ; < nl > - import im . actor . model . js . entity . JsClosure ; < nl > - import im . actor . model . js . entity . JsContact ; < nl > - import im . actor . model . js . entity . JsDialog ; < nl > - import im . actor . model . js . entity . JsGroup ; < nl > - import im . actor . model . js . entity . JsMessage ; < nl > - import im . actor . model . js . entity . JsPeer ; < nl > - import im . actor . model . js . entity . JsPromise ; < nl > - import im . actor . model . js . entity . JsPromiseExecutor ; < nl > - import im . actor . model . js . entity . JsTyping ; < nl > - import im . actor . model . js . entity . JsUser ; < nl > - import im . actor . model . js . providers . JsFileSystemProvider ; < nl > - import im . actor . model . js . providers . fs . JsBlob ; < nl > - import im . actor . model . js . providers . fs . JsFile ; < nl > - import im . actor . model . js . utils . IdentityUtils ; < nl > - import im . actor . model . log . Log ; < nl > - import im . actor . model . mvvm . MVVMEngine ; < nl > - import im . actor . model . network . RpcException ; < nl > - import im . actor . model . viewmodel . UserVM ; < nl > - < nl > - @ ExportPackage ( " actor " ) < nl > - @ Export ( " ActorApp " ) < nl > - public class JsFacade implements Exportable { < nl > - < nl > - private static final String TAG = " JsMessenger " ; < nl > - < nl > - private static final String APP _ NAME = " Actor Web App " ; < nl > - private static final int APP _ ID = 3 ; < nl > - private static final String APP _ KEY = " 278f13e07eee8398b189bced0db2cf66703d1746e2b541d85f5b42b1641aae0e " ; < nl > - < nl > - private static final String [ ] EndpointsProduction = { < nl > - " wss : / / front1 - ws - mtproto - api - rev2 . actor . im / " , < nl > - " wss : / / front2 - ws - mtproto - api - rev2 . actor . im / " < nl > - } ; < nl > - < nl > - private static final String [ ] EndpointsDev1 = { < nl > - " wss : / / front1 - ws - mtproto - api - rev2 - dev1 . actor . im / " < nl > - } ; < nl > - < nl > - private JsMessenger messenger ; < nl > - private JsFileSystemProvider provider ; < nl > - < nl > - @ Export < nl > - public static JsFacade production ( ) { < nl > - return new JsFacade ( EndpointsProduction ) ; < nl > - } < nl > - < nl > - @ Export < nl > - public static JsFacade dev1 ( ) { < nl > - return new JsFacade ( EndpointsDev1 ) ; < nl > - } < nl > - < nl > - @ Export < nl > - public JsFacade ( ) { < nl > - this ( EndpointsProduction ) ; < nl > - } < nl > - < nl > - @ Export < nl > - public JsFacade ( String [ ] endpoints ) { < nl > - String clientName = IdentityUtils . getClientName ( ) ; < nl > - String uniqueId = IdentityUtils . getUniqueId ( ) ; < nl > - provider = new JsFileSystemProvider ( ) ; < nl > - < nl > - JsConfigurationBuilder configuration = new JsConfigurationBuilder ( ) ; < nl > - configuration . setApiConfiguration ( new ApiConfiguration ( APP _ NAME , APP _ ID , APP _ KEY , clientName , uniqueId ) ) ; < nl > - configuration . setFileSystemProvider ( provider ) ; < nl > - / / configuration . setEnableNetworkLogging ( true ) ; < nl > - < nl > - for ( String endpoint : endpoints ) { < nl > - configuration . addEndpoint ( endpoint ) ; < nl > - } < nl > - < nl > - messenger = new JsMessenger ( configuration . build ( ) ) ; < nl > - < nl > - Log . d ( TAG , " JsMessenger created " ) ; < nl > - } < nl > - < nl > - public boolean isLoggedIn ( ) { < nl > - return messenger . isLoggedIn ( ) ; < nl > - } < nl > - < nl > - public int getUid ( ) { < nl > - return messenger . myUid ( ) ; < nl > - } < nl > - < nl > - / / Auth < nl > - < nl > - public String getAuthState ( ) { < nl > - return Enums . convert ( messenger . getAuthState ( ) ) ; < nl > - } < nl > - < nl > - public String getAuthPhone ( ) { < nl > - return " " + messenger . getAuthPhone ( ) ; < nl > - } < nl > - < nl > - public void requestSms ( String phone , final JsAuthSuccessClosure success , < nl > - final JsAuthErrorClosure error ) { < nl > - try { < nl > - long res = Long . parseLong ( phone ) ; < nl > - messenger . requestSmsObsolete ( res ) . start ( new CommandCallback < AuthState > ( ) { < nl > - @ Override < nl > - public void onResult ( AuthState res ) { < nl > - success . onResult ( Enums . convert ( res ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - String tag = " INTERNAL _ ERROR " ; < nl > - String message = " Internal error " ; < nl > - boolean canTryAgain = false ; < nl > - if ( e instanceof RpcException ) { < nl > - tag = ( ( RpcException ) e ) . getTag ( ) ; < nl > - message = e . getMessage ( ) ; < nl > - canTryAgain = ( ( RpcException ) e ) . isCanTryAgain ( ) ; < nl > - } < nl > - error . onError ( tag , message , canTryAgain , getAuthState ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } catch ( Exception e ) { < nl > - Log . e ( TAG , e ) ; < nl > - MVVMEngine . runOnUiThread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - error . onError ( " PHONE _ NUMBER _ INVALID " , " Invalid phone number " , false , < nl > - getAuthState ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } < nl > - < nl > - public void sendCode ( String code , final JsAuthSuccessClosure success , < nl > - final JsAuthErrorClosure error ) { < nl > - try { < nl > - int res = Integer . parseInt ( code ) ; < nl > - messenger . sendCodeObsolete ( res ) . start ( new CommandCallback < AuthState > ( ) { < nl > - @ Override < nl > - public void onResult ( AuthState res ) { < nl > - success . onResult ( Enums . convert ( res ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - String tag = " INTERNAL _ ERROR " ; < nl > - String message = " Internal error " ; < nl > - boolean canTryAgain = false ; < nl > - if ( e instanceof RpcException ) { < nl > - tag = ( ( RpcException ) e ) . getTag ( ) ; < nl > - message = e . getMessage ( ) ; < nl > - canTryAgain = ( ( RpcException ) e ) . isCanTryAgain ( ) ; < nl > - } < nl > - error . onError ( tag , message , canTryAgain , getAuthState ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > - MVVMEngine . runOnUiThread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - error . onError ( " PHONE _ CODE _ INVALID " , " Invalid code number " , false , < nl > - getAuthState ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } < nl > - < nl > - public void signUp ( String name , final JsAuthSuccessClosure success , < nl > - final JsAuthErrorClosure error ) { < nl > - messenger . signUpObsolete ( name , null , false ) . start ( new CommandCallback < AuthState > ( ) { < nl > - @ Override < nl > - public void onResult ( AuthState res ) { < nl > - success . onResult ( Enums . convert ( res ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - String tag = " INTERNAL _ ERROR " ; < nl > - String message = " Internal error " ; < nl > - boolean canTryAgain = false ; < nl > - if ( e instanceof RpcException ) { < nl > - tag = ( ( RpcException ) e ) . getTag ( ) ; < nl > - message = e . getMessage ( ) ; < nl > - canTryAgain = ( ( RpcException ) e ) . isCanTryAgain ( ) ; < nl > - } < nl > - error . onError ( tag , message , canTryAgain , getAuthState ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - / / Dialogs < nl > - < nl > - public void bindDialogs ( AngularListCallback < JsDialog > callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getDialogsList ( ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindDialogs ( AngularListCallback < JsDialog > callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getDialogsList ( ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - / / Contacts < nl > - < nl > - public void bindContacts ( AngularListCallback < JsContact > callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getContactsList ( ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindContacts ( AngularListCallback < JsContact > callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getContactsList ( ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - / / Chats < nl > - < nl > - public void bindChat ( JsPeer peer , AngularListCallback < JsMessage > callback ) { < nl > - Log . d ( TAG , " bindChat : " + peer ) ; < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getConversationList ( peer . convert ( ) ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindChat ( JsPeer peer , AngularListCallback < JsMessage > callback ) { < nl > - Log . d ( TAG , " unbindChat : " + peer ) ; < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getConversationList ( peer . convert ( ) ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - public void onMessageShown ( JsPeer peer , JsMessage message ) { < nl > - if ( message . isOnServer ( ) ) { < nl > - messenger . onMessageShown ( peer . convert ( ) , Long . parseLong ( message . getSortKey ( ) ) ) ; < nl > - } < nl > - } < nl > - < nl > - public void deleteMessages ( JsPeer peer , final long [ ] rids ) { < nl > - messenger . deleteMessages ( peer . convert ( ) , rids ) ; < nl > - } < nl > - < nl > - public void deleteChat ( JsPeer peer , final JsClosure success , final JsClosure error ) { < nl > - messenger . deleteChat ( peer . convert ( ) ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - success . callback ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - error . callback ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public void clearChat ( JsPeer peer , final JsClosure success , final JsClosure error ) { < nl > - messenger . clearChat ( peer . convert ( ) ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - success . callback ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - error . callback ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - / / Peers < nl > - < nl > - public JsPeer getUserPeer ( int uid ) { < nl > - return JsPeer . create ( Peer . user ( uid ) ) ; < nl > - } < nl > - < nl > - public JsPeer getGroupPeer ( int gid ) { < nl > - return JsPeer . create ( Peer . group ( gid ) ) ; < nl > - } < nl > - < nl > - / / Users < nl > - < nl > - public JsUser getUser ( int uid ) { < nl > - return messenger . getJsUser ( uid ) . get ( ) ; < nl > - } < nl > - < nl > - public void bindUser ( int uid , AngularValueCallback callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getJsUser ( uid ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindUser ( int uid , AngularValueCallback callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getJsUser ( uid ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - / / Groups < nl > - < nl > - public JsGroup getGroup ( int gid ) { < nl > - return messenger . getJsGroup ( gid ) . get ( ) ; < nl > - } < nl > - < nl > - public void bindGroup ( int gid , AngularValueCallback callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getJsGroup ( gid ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindGroup ( int gid , AngularValueCallback callback ) { < nl > - if ( callback = = null ) { < nl > - return ; < nl > - } < nl > - messenger . getJsGroup ( gid ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - / / Actions < nl > - < nl > - public void sendMessage ( JsPeer peer , String text ) { < nl > - messenger . sendMessageWithMentionsDetect ( peer . convert ( ) , text ) ; < nl > - } < nl > - < nl > - public void sendFile ( JsPeer peer , JsFile file ) { < nl > - String descriptor = provider . registerUploadFile ( file ) ; < nl > - messenger . sendDocument ( peer . convert ( ) , < nl > - file . getName ( ) , file . getMimeType ( ) , descriptor ) ; < nl > - } < nl > - < nl > - public void sendPhoto ( final JsPeer peer , final JsFile file ) { < nl > - messenger . sendPhoto ( peer . convert ( ) , file ) ; < nl > - } < nl > - < nl > - public void sendClipboardPhoto ( final JsPeer peer , final JsBlob blob ) { < nl > - messenger . sendClipboardPhoto ( peer . convert ( ) , blob ) ; < nl > - } < nl > - < nl > - / / Drafts < nl > - < nl > - public void saveDraft ( JsPeer peer , String text ) { < nl > - messenger . saveDraft ( peer . convert ( ) , text ) ; < nl > - } < nl > - < nl > - public String loadDraft ( JsPeer peer ) { < nl > - return messenger . loadDraft ( peer . convert ( ) ) ; < nl > - } < nl > - < nl > - / / Typing < nl > - < nl > - public void onTyping ( JsPeer peer ) { < nl > - messenger . onTyping ( peer . convert ( ) ) ; < nl > - } < nl > - < nl > - public JsTyping getTyping ( JsPeer peer ) { < nl > - return messenger . getTyping ( peer . convert ( ) ) . get ( ) ; < nl > - } < nl > - < nl > - public void bindTyping ( JsPeer peer , AngularValueCallback callback ) { < nl > - messenger . getTyping ( peer . convert ( ) ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindTyping ( JsPeer peer , AngularValueCallback callback ) { < nl > - messenger . getTyping ( peer . convert ( ) ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - / / Updating state < nl > - < nl > - public void bindConnectState ( AngularValueCallback callback ) { < nl > - messenger . getOnlineStatus ( ) . subscribe ( callback ) ; < nl > - } < nl > - < nl > - public void unbindConnectState ( AngularValueCallback callback ) { < nl > - messenger . getOnlineStatus ( ) . unsubscribe ( callback ) ; < nl > - } < nl > - < nl > - / / Events < nl > - < nl > - public void onAppVisible ( ) { < nl > - messenger . onAppVisible ( ) ; < nl > - } < nl > - < nl > - public void onAppHidden ( ) { < nl > - messenger . onAppHidden ( ) ; < nl > - } < nl > - < nl > - public void onConversationOpen ( JsPeer peer ) { < nl > - Log . d ( TAG , " onConversationOpen : " + peer ) ; < nl > - messenger . onConversationOpen ( peer . convert ( ) ) ; < nl > - } < nl > - < nl > - public void onConversationClosed ( JsPeer peer ) { < nl > - Log . d ( TAG , " onConversationClosed : " + peer ) ; < nl > - messenger . onConversationClosed ( peer . convert ( ) ) ; < nl > - } < nl > - < nl > - public void onDialogsOpen ( ) { < nl > - messenger . onDialogsOpen ( ) ; < nl > - } < nl > - < nl > - public void onDialogsClosed ( ) { < nl > - messenger . onDialogsClosed ( ) ; < nl > - } < nl > - < nl > - public void onProfileOpen ( int uid ) { < nl > - messenger . onProfileOpen ( uid ) ; < nl > - } < nl > - < nl > - public void onProfileClosed ( int uid ) { < nl > - messenger . onProfileClosed ( uid ) ; < nl > - } < nl > - < nl > - public void onDialogsEnd ( ) { < nl > - messenger . loadMoreDialogs ( ) ; < nl > - } < nl > - < nl > - public void onChatEnd ( JsPeer peer ) { < nl > - messenger . loadMoreHistory ( peer . convert ( ) ) ; < nl > - } < nl > - < nl > - / / Profile < nl > - < nl > - public JsPromise editMyName ( final String newName ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . editMyName ( newName ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - Log . d ( TAG , " editMyName : result " ) ; < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - Log . d ( TAG , " editMyName : error " ) ; < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise editName ( final int uid , final String newName ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . editName ( uid , newName ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise joinGroupViaLink ( final String url ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . joinGroupViaLink ( url ) . start ( new CommandCallback < Integer > ( ) { < nl > - @ Override < nl > - public void onResult ( Integer res ) { < nl > - resolve ( JsPeer . create ( Peer . group ( res ) ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise editGroupTitle ( final int gid , final String newTitle ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . editGroupTitle ( gid , newTitle ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise createGroup ( final String title , final JsFile file , final int [ ] uids ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - String avatarDescriptor = provider . registerUploadFile ( file ) ; < nl > - messenger . createGroup ( title , avatarDescriptor , uids ) . start ( new CommandCallback < Integer > ( ) { < nl > - @ Override < nl > - public void onResult ( Integer res ) { < nl > - resolve ( JsPeer . create ( Peer . group ( res ) ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise inviteMember ( final int gid , final int uid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . inviteMember ( gid , uid ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise kickMember ( final int gid , final int uid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . kickMember ( gid , uid ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise leaveGroup ( final int gid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . leaveGroup ( gid ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise getIntegrationToken ( final int gid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . requestIntegrationToken ( gid ) . start ( new CommandCallback < String > ( ) { < nl > - @ Override < nl > - public void onResult ( String res ) { < nl > - resolve ( res ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise revokeIntegrationToken ( final int gid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . revokeIntegrationToken ( gid ) . start ( new CommandCallback < String > ( ) { < nl > - @ Override < nl > - public void onResult ( String res ) { < nl > - resolve ( res ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise getInviteLink ( final int gid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . requestInviteLink ( gid ) . start ( new CommandCallback < String > ( ) { < nl > - @ Override < nl > - public void onResult ( String res ) { < nl > - resolve ( res ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise revokeInviteLink ( final int gid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . revokeInviteLink ( gid ) . start ( new CommandCallback < String > ( ) { < nl > - @ Override < nl > - public void onResult ( String res ) { < nl > - resolve ( res ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise addContact ( final int uid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . addContact ( uid ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise findUsers ( final String query ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - messenger . findUsers ( query ) . start ( new CommandCallback < UserVM [ ] > ( ) { < nl > - @ Override < nl > - public void onResult ( UserVM [ ] users ) { < nl > - JsArray < JsUser > jsUsers = JsArray . createArray ( ) . cast ( ) ; < nl > - < nl > - for ( UserVM user : users ) { < nl > - jsUsers . push ( messenger . getJsUser ( user . getId ( ) ) . get ( ) ) ; < nl > - } < nl > - < nl > - resolve ( jsUsers ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( e . getMessage ( ) ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public JsPromise removeContact ( final int uid ) { < nl > - return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > - @ Override < nl > - public void execute ( ) { < nl > - / / noinspection ConstantConditions < nl > - messenger . removeContact ( uid ) . start ( new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res ) { < nl > - resolve ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - reject ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - public void changeNotificationsEnabled ( JsPeer peer , boolean isEnabled ) { < nl > - messenger . changeNotificationsEnabled ( peer . convert ( ) , isEnabled ) ; < nl > - } < nl > - < nl > - public boolean isNotificationsEnabled ( JsPeer peer ) { < nl > - return messenger . isNotificationsEnabled ( peer . convert ( ) ) ; < nl > - } < nl > - } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index f4cf06d . . b4e7711 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 21 , 6 + 21 , 7 @ @ import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerSearchEntity ; 
 import im . actor . core . entity . PeerSearchType ; 
 import im . actor . core . entity . PeerType ; 
 + import im . actor . core . js . annotations . UsedByApp ; 
 import im . actor . core . js . entity . * ; 
 import im . actor . core . js . modules . JsBindedValueCallback ; 
 import im . actor . core . js . providers . JsNotificationsProvider ; 
 @ @ - 29 , 7 + 30 , 7 @ @ import im . actor . core . js . providers . JsCallsProvider ; 
 import im . actor . core . js . providers . electron . JsElectronApp ; 
 import im . actor . core . js . utils . HtmlMarkdownUtils ; 
 import im . actor . core . js . utils . IdentityUtils ; 
 - import im . actor . core . modules . internal . messages . entity . EntityConverter ; 
 + import im . actor . core . modules . messaging . actors . entity . EntityConverter ; 
 import im . actor . core . network . RpcCallback ; 
 import im . actor . core . network . RpcException ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 @ @ - 54 , 6 + 55 , 7 @ @ import java . util . List ; 
 
 @ ExportPackage ( " actor " ) 
 @ Export ( " ActorApp " ) 
 + @ UsedByApp 
 public class JsFacade implements Exportable { 
 
 private static final String TAG = " JsMessenger " ; 
 @ @ - 67 , 10 + 69 , 12 @ @ public class JsFacade implements Exportable { 
 private Peer lastVisiblePeer ; 
 
 @ Export 
 + @ UsedByApp 
 public JsFacade ( ) { 
 
 } 
 
 + @ UsedByApp 
 public void init ( JsConfig config ) { 
 
 provider = ( JsFileSystemProvider ) Storage . getFileSystemRuntime ( ) ; 
 @ @ - 129 , 28 + 133 , 34 @ @ public class JsFacade implements Exportable { 
 Log . d ( TAG , " JsMessenger created " ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isLoggedIn ( ) { 
 return messenger . isLoggedIn ( ) ; 
 } 
 
 + @ UsedByApp 
 public int getUid ( ) { 
 return messenger . myUid ( ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isElectron ( ) { 
 return messenger . isElectron ( ) ; 
 } 
 
 / / Auth 
 
 + @ UsedByApp 
 public String getAuthState ( ) { 
 return Enums . convert ( messenger . getAuthState ( ) ) ; 
 } 
 
 + @ UsedByApp 
 public String getAuthPhone ( ) { 
 return " " + messenger . getAuthPhone ( ) ; 
 } 
 
 + @ UsedByApp 
 public void requestSms ( String phone , final JsAuthSuccessClosure success , 
 final JsAuthErrorClosure error ) { 
 try { 
 @ @ - 186 , 6 + 196 , 7 @ @ public class JsFacade implements Exportable { 
 } 
 } 
 
 + @ UsedByApp 
 public void requestCodeEmail ( String email , final JsAuthSuccessClosure success , 
 final JsAuthErrorClosure error ) { 
 messenger . requestStartEmailAuth ( email ) . start ( new CommandCallback < AuthState > ( ) { 
 @ @ - 209 , 6 + 220 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public void sendCode ( String code , final JsAuthSuccessClosure success , 
 final JsAuthErrorClosure error ) { 
 try { 
 @ @ - 243 , 6 + 255 , 7 @ @ public class JsFacade implements Exportable { 
 } 
 } 
 
 + @ UsedByApp 
 public void signUp ( String name , final JsAuthSuccessClosure success , 
 final JsAuthErrorClosure error ) { 
 messenger . signUp ( name , null , null ) . start ( new CommandCallback < AuthState > ( ) { 
 @ @ - 266 , 6 + 279 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise loadSessions ( ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 292 , 6 + 306 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise terminateSession ( final int id ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 312 , 6 + 327 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise terminateAllSessions ( ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 334 , 6 + 350 , 7 @ @ public class JsFacade implements Exportable { 
 
 / / Dialogs 
 
 + @ UsedByApp 
 public void bindDialogs ( JsDisplayListCallback < JsDialog > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 341 , 6 + 358 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedDialogList ( ) . subscribe ( callback , false ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindDialogs ( JsDisplayListCallback < JsDialog > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 348 , 6 + 366 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedDialogList ( ) . unsubscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void bindGroupDialogs ( JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 356 , 6 + 375 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getDialogsGroupedList ( ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindGroupDialogs ( JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 366 , 6 + 386 , 7 @ @ public class JsFacade implements Exportable { 
 
 / / Contacts 
 
 + @ UsedByApp 
 public void bindContacts ( JsDisplayListCallback < JsContact > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 373 , 6 + 394 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedContactList ( ) . subscribe ( callback , true ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindContacts ( JsDisplayListCallback < JsContact > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 382 , 6 + 404 , 7 @ @ public class JsFacade implements Exportable { 
 
 / / Search 
 
 + @ UsedByApp 
 public void bindSearch ( JsDisplayListCallback < JsSearchEntity > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 389 , 6 + 412 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedSearchList ( ) . subscribe ( callback , false ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindSearch ( JsDisplayListCallback < JsSearchEntity > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 398 , 10 + 422 , 12 @ @ public class JsFacade implements Exportable { 
 
 / / Chats 
 
 + @ UsedByApp 
 public void preInitChat ( JsPeer peer ) { 
 messenger . onConversationPreLoad ( peer . convert ( ) ) ; 
 } 
 
 + @ UsedByApp 
 public void bindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 409 , 6 + 435 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedChatList ( peer . convert ( ) ) . subscribe ( callback , true ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 416 , 6 + 443 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedChatList ( peer . convert ( ) ) . unsubscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public JsMessagesBind bindMessages ( JsPeer peer , JsMessagesBindClosure callback ) { 
 if ( callback = = null ) { 
 return null ; 
 @ @ - 425 , 10 + 453 , 12 @ @ public class JsFacade implements Exportable { 
 return new JsMessagesBind ( callback , messenger . getSharedChatList ( peerC ) , messenger . getConversationVM ( peerC ) ) ; 
 } 
 
 + @ UsedByApp 
 public void deleteMessage ( JsPeer peer , String id ) { 
 messenger . deleteMessages ( peer . convert ( ) , new long [ ] { Long . parseLong ( id ) } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise deleteChat ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 450 , 6 + 480 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise clearChat ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 471 , 6 + 502 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise archiveChat ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 492 , 6 + 524 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise favoriteChat ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 513 , 6 + 546 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise unfavoriteChat ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 536 , 34 + 570 , 41 @ @ public class JsFacade implements Exportable { 
 
 / / Peers 
 
 + @ UsedByApp 
 public JsPeer getUserPeer ( int uid ) { 
 return JsPeer . create ( Peer . user ( uid ) ) ; 
 } 
 
 + @ UsedByApp 
 public JsPeer getGroupPeer ( int gid ) { 
 return JsPeer . create ( Peer . group ( gid ) ) ; 
 } 
 
 / / Stickers 
 
 + @ UsedByApp 
 public JsArray < JsSticker > getStickers ( ) { 
 return messenger . getStickers ( ) . get ( ) ; 
 } 
 
 + @ UsedByApp 
 public void bindStickers ( JsBindedValueCallback callback ) { 
 messenger . getStickers ( ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindStickers ( JsBindedValueCallback callback ) { 
 messenger . getStickers ( ) . unsubscribe ( callback ) ; 
 } 
 
 / / Users 
 
 + @ UsedByApp 
 public JsUser getUser ( int uid ) { 
 return messenger . getJsUser ( uid ) . get ( ) ; 
 } 
 
 + @ UsedByApp 
 public void bindUser ( int uid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 571 , 6 + 612 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsUser ( uid ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindUser ( int uid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 578 , 6 + 620 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsUser ( uid ) . unsubscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void bindUserOnline ( int uid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 585 , 6 + 628 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsUserOnline ( uid ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindUserOnline ( int uid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 594 , 10 + 638 , 12 @ @ public class JsFacade implements Exportable { 
 
 / / Groups 
 
 + @ UsedByApp 
 public JsGroup getGroup ( int gid ) { 
 return messenger . getJsGroup ( gid ) . get ( ) ; 
 } 
 
 + @ UsedByApp 
 public void bindGroup ( int gid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 605 , 6 + 651 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsGroup ( gid ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindGroup ( int gid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 612 , 6 + 659 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsGroup ( gid ) . unsubscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void bindGroupOnline ( int gid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 619 , 6 + 667 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsGroupOnline ( gid ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindGroupOnline ( int gid , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 628 , 6 + 677 , 7 @ @ public class JsFacade implements Exportable { 
 
 / / Calls 
 
 + @ UsedByApp 
 public JsPromise doCall ( final int uid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 649 , 6 + 699 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise doGroupCall ( final int gid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 670 , 18 + 721 , 22 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public void answerCall ( String callId ) { 
 messenger . answerCall ( Long . parseLong ( callId ) ) ; 
 } 
 
 + @ UsedByApp 
 public void endCall ( String callId ) { 
 messenger . endCall ( Long . parseLong ( callId ) ) ; 
 } 
 
 + @ UsedByApp 
 public void toggleCallMute ( String callId ) { 
 messenger . toggleCallMute ( Long . parseLong ( callId ) ) ; 
 } 
 
 + @ UsedByApp 
 public void bindCall ( String id , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 689 , 6 + 744 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsCall ( id ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindCall ( String id , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 698 , 6 + 754 , 7 @ @ public class JsFacade implements Exportable { 
 
 / / Event Bus 
 
 + @ UsedByApp 
 public void bindEventBus ( JsEventBusCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 706 , 6 + 763 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . subscribeEventBus ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindEventBus ( JsEventBusCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 @ @ - 716 , 43 + 774 , 52 @ @ public class JsFacade implements Exportable { 
 
 / / Actions 
 
 + @ UsedByApp 
 public void sendMessage ( JsPeer peer , String text ) { 
 messenger . sendMessageWithMentionsDetect ( peer . convert ( ) , text ) ; 
 } 
 
 + @ UsedByApp 
 public void sendFile ( JsPeer peer , JsFile file ) { 
 String descriptor = provider . registerUploadFile ( file ) ; 
 messenger . sendDocument ( peer . convert ( ) , 
 file . getName ( ) , file . getMimeType ( ) , descriptor ) ; 
 } 
 
 + @ UsedByApp 
 public void sendPhoto ( final JsPeer peer , final JsFile file ) { 
 messenger . sendPhoto ( peer . convert ( ) , file ) ; 
 } 
 
 + @ UsedByApp 
 public void sendClipboardPhoto ( final JsPeer peer , final JsBlob blob ) { 
 messenger . sendClipboardPhoto ( peer . convert ( ) , blob ) ; 
 } 
 
 + @ UsedByApp 
 public void sendVoiceMessage ( final JsPeer peer , int duration , final JsBlob blob ) { 
 String descriptor = provider . registerUploadFile ( blob ) ; 
 messenger . sendAudio ( peer . convert ( ) , " voice . opus " , duration , descriptor ) ; 
 } 
 
 + @ UsedByApp 
 public void sendSticker ( JsPeer peer , JsSticker sticker ) { 
 messenger . sendSticker ( peer . convert ( ) , sticker . getSticker ( ) ) ; 
 } 
 
 / / Drafts 
 
 + @ UsedByApp 
 public void saveDraft ( JsPeer peer , String text ) { 
 messenger . saveDraft ( peer . convert ( ) , text ) ; 
 } 
 
 + @ UsedByApp 
 public String loadDraft ( JsPeer peer ) { 
 return messenger . loadDraft ( peer . convert ( ) ) ; 
 } 
 
 + @ UsedByApp 
 public JsArray < JsMentionFilterResult > findMentions ( int gid , String query ) { 
 List < MentionFilterResult > res = messenger . findMentions ( gid , query ) ; 
 JsArray < JsMentionFilterResult > mentions = JsArray . createArray ( ) . cast ( ) ; 
 @ @ - 764 , 50 + 831 , 61 @ @ public class JsFacade implements Exportable { 
 
 / / Typing 
 
 + @ UsedByApp 
 public void onTyping ( JsPeer peer ) { 
 messenger . onTyping ( peer . convert ( ) ) ; 
 } 
 
 + @ UsedByApp 
 public JsTyping getTyping ( JsPeer peer ) { 
 return messenger . getTyping ( peer . convert ( ) ) . get ( ) ; 
 } 
 
 + @ UsedByApp 
 public void bindTyping ( JsPeer peer , JsBindedValueCallback callback ) { 
 messenger . getTyping ( peer . convert ( ) ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindTyping ( JsPeer peer , JsBindedValueCallback callback ) { 
 messenger . getTyping ( peer . convert ( ) ) . unsubscribe ( callback ) ; 
 } 
 
 / / Updating state 
 
 + @ UsedByApp 
 public void bindConnectState ( JsBindedValueCallback callback ) { 
 messenger . getOnlineStatus ( ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindConnectState ( JsBindedValueCallback callback ) { 
 messenger . getOnlineStatus ( ) . unsubscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void bindGlobalCounter ( JsBindedValueCallback callback ) { 
 messenger . getGlobalCounter ( ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindGlobalCounter ( JsBindedValueCallback callback ) { 
 messenger . getGlobalCounter ( ) . unsubscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void bindTempGlobalCounter ( JsBindedValueCallback callback ) { 
 messenger . getTempGlobalCounter ( ) . subscribe ( callback ) ; 
 } 
 
 + @ UsedByApp 
 public void unbindTempGlobalCounter ( JsBindedValueCallback callback ) { 
 messenger . getTempGlobalCounter ( ) . unsubscribe ( callback ) ; 
 } 
 
 / / Events 
 
 + @ UsedByApp 
 public void onAppVisible ( ) { 
 / / Ignore for electron runtime 
 if ( isElectron ( ) ) { 
 @ @ - 817 , 6 + 895 , 7 @ @ public class JsFacade implements Exportable { 
 messenger . getJsIdleModule ( ) . onVisible ( ) ; 
 } 
 
 + @ UsedByApp 
 public void onAppHidden ( ) { 
 / / Ignore for electron runtime 
 if ( isElectron ( ) ) { 
 @ @ - 826 , 12 + 905 , 14 @ @ public class JsFacade implements Exportable { 
 messenger . getJsIdleModule ( ) . onHidden ( ) ; 
 } 
 
 + @ UsedByApp 
 public void onConversationOpen ( JsPeer peer ) { 
 Log . d ( TAG , " onConversationOpen | " + peer ) ; 
 lastVisiblePeer = peer . convert ( ) ; 
 messenger . onConversationOpen ( lastVisiblePeer ) ; 
 } 
 
 + @ UsedByApp 
 public void onConversationClosed ( JsPeer peer ) { 
 Log . d ( TAG , " onConversationClosed | " + peer ) ; 
 if ( lastVisiblePeer ! = null & & lastVisiblePeer . equals ( peer . convert ( ) ) ) { 
 @ @ - 841 , 34 + 922 , 42 @ @ public class JsFacade implements Exportable { 
 messenger . onConversationClosed ( peer . convert ( ) ) ; 
 } 
 
 + @ UsedByApp 
 public void onDialogsOpen ( ) { 
 messenger . onDialogsOpen ( ) ; 
 } 
 
 + @ UsedByApp 
 public void onDialogsClosed ( ) { 
 messenger . onDialogsClosed ( ) ; 
 } 
 
 + @ UsedByApp 
 public void onProfileOpen ( int uid ) { 
 messenger . onProfileOpen ( uid ) ; 
 } 
 
 + @ UsedByApp 
 public void onProfileClosed ( int uid ) { 
 messenger . onProfileClosed ( uid ) ; 
 } 
 
 + @ UsedByApp 
 public void onDialogsEnd ( ) { 
 messenger . loadMoreDialogs ( ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise loadArchivedDialogs ( ) { 
 return loadArchivedDialogs ( true ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise loadMoreArchivedDialogs ( ) { 
 return loadArchivedDialogs ( false ) ; 
 } 
 
 + @ UsedByApp 
 private JsPromise loadArchivedDialogs ( final boolean init ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 892 , 15 + 981 , 16 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 } ) ; 
 - 
 } 
 
 + @ UsedByApp 
 public void onChatEnd ( JsPeer peer ) { 
 messenger . loadMoreHistory ( peer . convert ( ) ) ; 
 } 
 
 / / Profile 
 
 + @ UsedByApp 
 public JsPromise editMyName ( final String newName ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 923 , 6 + 1013 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise editMyNick ( final String newNick ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 945 , 6 + 1036 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise editMyAbout ( final String newAbout ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 967 , 6 + 1059 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise findAllText ( final JsPeer peer , final String query ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 987 , 6 + 1080 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise findAllPhotos ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1007 , 6 + 1101 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise findAllDocs ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1027 , 6 + 1122 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise findAllLinks ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1059 , 6 + 1155 , 7 @ @ public class JsFacade implements Exportable { 
 return jsRes ; 
 } 
 
 + @ UsedByApp 
 public JsPromise findGroups ( ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1092 , 15 + 1189 , 18 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public void changeMyAvatar ( final JsFile file ) { 
 String descriptor = provider . registerUploadFile ( file ) ; 
 messenger . changeMyAvatar ( descriptor ) ; 
 } 
 
 + @ UsedByApp 
 public void removeMyAvatar ( ) { 
 messenger . removeMyAvatar ( ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise editName ( final int uid , final String newName ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1123 , 6 + 1223 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise joinGroupViaLink ( final String url ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1145 , 6 + 1246 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise editGroupTitle ( final int gid , final String newTitle ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1167 , 6 + 1269 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise editGroupAbout ( final int gid , final String newAbout ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1187 , 15 + 1290 , 18 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public void changeGroupAvatar ( final int gid , final JsFile file ) { 
 String descriptor = provider . registerUploadFile ( file ) ; 
 messenger . changeGroupAvatar ( gid , descriptor ) ; 
 } 
 
 + @ UsedByApp 
 public void removeGroupAvatar ( final int gid ) { 
 messenger . removeGroupAvatar ( gid ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise createGroup ( final String title , final JsFile file , final int [ ] uids ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1219 , 6 + 1325 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise inviteMember ( final int gid , final int uid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1241 , 6 + 1348 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise kickMember ( final int gid , final int uid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1263 , 6 + 1371 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise leaveGroup ( final int gid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1285 , 6 + 1394 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise getIntegrationToken ( final int gid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1307 , 6 + 1417 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise revokeIntegrationToken ( final int gid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1329 , 6 + 1440 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise getInviteLink ( final int gid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1351 , 6 + 1463 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise revokeInviteLink ( final int gid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1373 , 6 + 1486 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise addContact ( final int uid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1395 , 6 + 1509 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise addLike ( final JsPeer peer , final String rid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1416 , 6 + 1531 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise removeLike ( final JsPeer peer , final String rid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1437 , 6 + 1553 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise findUsers ( final String query ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1464 , 6 + 1581 , 7 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + @ UsedByApp 
 public JsPromise removeContact ( final int uid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 @ @ - 1488 , 54 + 1606 , 67 @ @ public class JsFacade implements Exportable { 
 
 / / Settings 
 
 + @ UsedByApp 
 public void changeNotificationsEnabled ( JsPeer peer , boolean isEnabled ) { 
 messenger . changeNotificationsEnabled ( peer . convert ( ) , isEnabled ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isNotificationsEnabled ( JsPeer peer ) { 
 return messenger . isNotificationsEnabled ( peer . convert ( ) ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isSendByEnterEnabled ( ) { 
 return messenger . isSendByEnterEnabled ( ) ; 
 } 
 
 + @ UsedByApp 
 public void changeSendByEnter ( boolean sendByEnter ) { 
 messenger . changeSendByEnter ( sendByEnter ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isGroupsNotificationsEnabled ( ) { 
 return messenger . isGroupNotificationsEnabled ( ) ; 
 } 
 
 + @ UsedByApp 
 public void changeGroupNotificationsEnabled ( boolean enabled ) { 
 messenger . changeGroupNotificationsEnabled ( enabled ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isOnlyMentionNotifications ( ) { 
 return messenger . isGroupNotificationsOnlyMentionsEnabled ( ) ; 
 } 
 
 + @ UsedByApp 
 public void changeIsOnlyMentionNotifications ( boolean enabled ) { 
 messenger . changeGroupNotificationsOnlyMentionsEnabled ( enabled ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isSoundEffectsEnabled ( ) { 
 return messenger . isConversationTonesEnabled ( ) ; 
 } 
 
 + @ UsedByApp 
 public boolean isShowNotificationsTextEnabled ( ) { 
 return messenger . isShowNotificationsText ( ) ; 
 } 
 
 + @ UsedByApp 
 public void changeIsShowNotificationTextEnabled ( boolean value ) { 
 messenger . changeShowNotificationTextEnabled ( value ) ; 
 } 
 
 + @ UsedByApp 
 public void changeSoundEffectsEnabled ( boolean enabled ) { 
 messenger . changeConversationTonesEnabled ( enabled ) ; 
 } 
 
 + @ UsedByApp 
 public String renderMarkdown ( final String markdownText ) { 
 try { 
 return HtmlMarkdownUtils . processText ( markdownText , MarkdownParser . MODE _ FULL ) ; 
 @ @ - 1545 , 6 + 1676 , 7 @ @ public class JsFacade implements Exportable { 
 } 
 } 
 
 + @ UsedByApp 
 public void handleLinkClick ( Event event ) { 
 Element target = Element . as ( event . getEventTarget ( ) ) ; 
 String href = target . getAttribute ( " href " ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / annotations / UsedByApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / annotations / UsedByApp . java 
 new file mode 100644 
 index 0000000 . . 7e16631 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / annotations / UsedByApp . java 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + package im . actor . core . js . annotations ; 
 + 
 + public @ interface UsedByApp { 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 64584c7 . . d10436a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 1303 , 7 + 1303 , 7 @ @ public class Messenger { 
 * @ param theme new group theme 
 * @ return Command for execution 
 * / 
 - @ Nullable 
 + @ NotNull 
 @ ObjectiveCName ( " editGroupThemeCommandWithGid : withTheme : " ) 
 public Command < Boolean > editGroupTheme ( final int gid , final String theme ) { 
 return modules . getGroupsModule ( ) . editTheme ( gid , theme ) ; 
 @ @ - 1316 , 7 + 1316 , 7 @ @ public class Messenger { 
 * @ param about new group about 
 * @ return Command for execution 
 * / 
 - @ Nullable 
 + @ NotNull 
 @ ObjectiveCName ( " editGroupAboutCommandWithGid : withAbout : " ) 
 public Command < Boolean > editGroupAbout ( final int gid , final String about ) { 
 return modules . getGroupsModule ( ) . editAbout ( gid , about ) ; 
 @ @ - 2053 , 7 + 2053 , 7 @ @ public class Messenger { 
 * 
 * @ return Command for execution 
 * / 
 - @ Nullable 
 + @ NotNull 
 @ ObjectiveCName ( " loadSessionsCommand " ) 
 public Command < List < ApiAuthSession > > loadSessions ( ) { 
 return modules . getSecurityModule ( ) . loadSessions ( ) ; 
 @ @ - 2064 , 7 + 2064 , 7 @ @ public class Messenger { 
 * 
 * @ return Command for execution 
 * / 
 - @ Nullable 
 + @ NotNull 
 @ ObjectiveCName ( " terminateAllSessionsCommand " ) 
 public Command < Boolean > terminateAllSessions ( ) { 
 return modules . getSecurityModule ( ) . terminateAllSessions ( ) ; 
 @ @ - 2076 , 7 + 2076 , 7 @ @ public class Messenger { 
 * @ param id session id 
 * @ return Command for execution 
 * / 
 - @ Nullable 
 + @ NotNull 
 @ ObjectiveCName ( " terminateSessionCommandWithId : " ) 
 public Command < Boolean > terminateSession ( int id ) { 
 return modules . getSecurityModule ( ) . terminateSession ( id ) ;

NEAREST DIFF:
diff - - git a / actor - apps / core - js / src / main / java / im / actor / model / js / JsFacade . java b / actor - apps / core - js / src / main / java / im / actor / model / js / JsFacade . java 
 deleted file mode 100644 
 index f615cdc . . 0000000 
 - - - a / actor - apps / core - js / src / main / java / im / actor / model / js / JsFacade . java 
 + + + / dev / null 
 @ @ - 1 , 765 + 0 , 0 @ @ 
 - / * 
 - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - * / 
 - 
 - package im . actor . model . js ; 
 - 
 - import com . google . gwt . core . client . JsArray ; 
 - 
 - import org . timepedia . exporter . client . Export ; 
 - import org . timepedia . exporter . client . ExportPackage ; 
 - import org . timepedia . exporter . client . Exportable ; 
 - 
 - import im . actor . model . ApiConfiguration ; 
 - import im . actor . model . AuthState ; 
 - import im . actor . model . concurrency . CommandCallback ; 
 - import im . actor . model . entity . Peer ; 
 - import im . actor . model . js . angular . AngularListCallback ; 
 - import im . actor . model . js . angular . AngularValueCallback ; 
 - import im . actor . model . js . entity . Enums ; 
 - import im . actor . model . js . entity . JsAuthErrorClosure ; 
 - import im . actor . model . js . entity . JsAuthSuccessClosure ; 
 - import im . actor . model . js . entity . JsClosure ; 
 - import im . actor . model . js . entity . JsContact ; 
 - import im . actor . model . js . entity . JsDialog ; 
 - import im . actor . model . js . entity . JsGroup ; 
 - import im . actor . model . js . entity . JsMessage ; 
 - import im . actor . model . js . entity . JsPeer ; 
 - import im . actor . model . js . entity . JsPromise ; 
 - import im . actor . model . js . entity . JsPromiseExecutor ; 
 - import im . actor . model . js . entity . JsTyping ; 
 - import im . actor . model . js . entity . JsUser ; 
 - import im . actor . model . js . providers . JsFileSystemProvider ; 
 - import im . actor . model . js . providers . fs . JsBlob ; 
 - import im . actor . model . js . providers . fs . JsFile ; 
 - import im . actor . model . js . utils . IdentityUtils ; 
 - import im . actor . model . log . Log ; 
 - import im . actor . model . mvvm . MVVMEngine ; 
 - import im . actor . model . network . RpcException ; 
 - import im . actor . model . viewmodel . UserVM ; 
 - 
 - @ ExportPackage ( " actor " ) 
 - @ Export ( " ActorApp " ) 
 - public class JsFacade implements Exportable { 
 - 
 - private static final String TAG = " JsMessenger " ; 
 - 
 - private static final String APP _ NAME = " Actor Web App " ; 
 - private static final int APP _ ID = 3 ; 
 - private static final String APP _ KEY = " 278f13e07eee8398b189bced0db2cf66703d1746e2b541d85f5b42b1641aae0e " ; 
 - 
 - private static final String [ ] EndpointsProduction = { 
 - " wss : / / front1 - ws - mtproto - api - rev2 . actor . im / " , 
 - " wss : / / front2 - ws - mtproto - api - rev2 . actor . im / " 
 - } ; 
 - 
 - private static final String [ ] EndpointsDev1 = { 
 - " wss : / / front1 - ws - mtproto - api - rev2 - dev1 . actor . im / " 
 - } ; 
 - 
 - private JsMessenger messenger ; 
 - private JsFileSystemProvider provider ; 
 - 
 - @ Export 
 - public static JsFacade production ( ) { 
 - return new JsFacade ( EndpointsProduction ) ; 
 - } 
 - 
 - @ Export 
 - public static JsFacade dev1 ( ) { 
 - return new JsFacade ( EndpointsDev1 ) ; 
 - } 
 - 
 - @ Export 
 - public JsFacade ( ) { 
 - this ( EndpointsProduction ) ; 
 - } 
 - 
 - @ Export 
 - public JsFacade ( String [ ] endpoints ) { 
 - String clientName = IdentityUtils . getClientName ( ) ; 
 - String uniqueId = IdentityUtils . getUniqueId ( ) ; 
 - provider = new JsFileSystemProvider ( ) ; 
 - 
 - JsConfigurationBuilder configuration = new JsConfigurationBuilder ( ) ; 
 - configuration . setApiConfiguration ( new ApiConfiguration ( APP _ NAME , APP _ ID , APP _ KEY , clientName , uniqueId ) ) ; 
 - configuration . setFileSystemProvider ( provider ) ; 
 - / / configuration . setEnableNetworkLogging ( true ) ; 
 - 
 - for ( String endpoint : endpoints ) { 
 - configuration . addEndpoint ( endpoint ) ; 
 - } 
 - 
 - messenger = new JsMessenger ( configuration . build ( ) ) ; 
 - 
 - Log . d ( TAG , " JsMessenger created " ) ; 
 - } 
 - 
 - public boolean isLoggedIn ( ) { 
 - return messenger . isLoggedIn ( ) ; 
 - } 
 - 
 - public int getUid ( ) { 
 - return messenger . myUid ( ) ; 
 - } 
 - 
 - / / Auth 
 - 
 - public String getAuthState ( ) { 
 - return Enums . convert ( messenger . getAuthState ( ) ) ; 
 - } 
 - 
 - public String getAuthPhone ( ) { 
 - return " " + messenger . getAuthPhone ( ) ; 
 - } 
 - 
 - public void requestSms ( String phone , final JsAuthSuccessClosure success , 
 - final JsAuthErrorClosure error ) { 
 - try { 
 - long res = Long . parseLong ( phone ) ; 
 - messenger . requestSmsObsolete ( res ) . start ( new CommandCallback < AuthState > ( ) { 
 - @ Override 
 - public void onResult ( AuthState res ) { 
 - success . onResult ( Enums . convert ( res ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - String tag = " INTERNAL _ ERROR " ; 
 - String message = " Internal error " ; 
 - boolean canTryAgain = false ; 
 - if ( e instanceof RpcException ) { 
 - tag = ( ( RpcException ) e ) . getTag ( ) ; 
 - message = e . getMessage ( ) ; 
 - canTryAgain = ( ( RpcException ) e ) . isCanTryAgain ( ) ; 
 - } 
 - error . onError ( tag , message , canTryAgain , getAuthState ( ) ) ; 
 - } 
 - } ) ; 
 - } catch ( Exception e ) { 
 - Log . e ( TAG , e ) ; 
 - MVVMEngine . runOnUiThread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - error . onError ( " PHONE _ NUMBER _ INVALID " , " Invalid phone number " , false , 
 - getAuthState ( ) ) ; 
 - } 
 - } ) ; 
 - } 
 - } 
 - 
 - public void sendCode ( String code , final JsAuthSuccessClosure success , 
 - final JsAuthErrorClosure error ) { 
 - try { 
 - int res = Integer . parseInt ( code ) ; 
 - messenger . sendCodeObsolete ( res ) . start ( new CommandCallback < AuthState > ( ) { 
 - @ Override 
 - public void onResult ( AuthState res ) { 
 - success . onResult ( Enums . convert ( res ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - String tag = " INTERNAL _ ERROR " ; 
 - String message = " Internal error " ; 
 - boolean canTryAgain = false ; 
 - if ( e instanceof RpcException ) { 
 - tag = ( ( RpcException ) e ) . getTag ( ) ; 
 - message = e . getMessage ( ) ; 
 - canTryAgain = ( ( RpcException ) e ) . isCanTryAgain ( ) ; 
 - } 
 - error . onError ( tag , message , canTryAgain , getAuthState ( ) ) ; 
 - } 
 - } ) ; 
 - } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 - MVVMEngine . runOnUiThread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - error . onError ( " PHONE _ CODE _ INVALID " , " Invalid code number " , false , 
 - getAuthState ( ) ) ; 
 - } 
 - } ) ; 
 - } 
 - } 
 - 
 - public void signUp ( String name , final JsAuthSuccessClosure success , 
 - final JsAuthErrorClosure error ) { 
 - messenger . signUpObsolete ( name , null , false ) . start ( new CommandCallback < AuthState > ( ) { 
 - @ Override 
 - public void onResult ( AuthState res ) { 
 - success . onResult ( Enums . convert ( res ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - String tag = " INTERNAL _ ERROR " ; 
 - String message = " Internal error " ; 
 - boolean canTryAgain = false ; 
 - if ( e instanceof RpcException ) { 
 - tag = ( ( RpcException ) e ) . getTag ( ) ; 
 - message = e . getMessage ( ) ; 
 - canTryAgain = ( ( RpcException ) e ) . isCanTryAgain ( ) ; 
 - } 
 - error . onError ( tag , message , canTryAgain , getAuthState ( ) ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - / / Dialogs 
 - 
 - public void bindDialogs ( AngularListCallback < JsDialog > callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getDialogsList ( ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindDialogs ( AngularListCallback < JsDialog > callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getDialogsList ( ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - / / Contacts 
 - 
 - public void bindContacts ( AngularListCallback < JsContact > callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getContactsList ( ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindContacts ( AngularListCallback < JsContact > callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getContactsList ( ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - / / Chats 
 - 
 - public void bindChat ( JsPeer peer , AngularListCallback < JsMessage > callback ) { 
 - Log . d ( TAG , " bindChat : " + peer ) ; 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getConversationList ( peer . convert ( ) ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindChat ( JsPeer peer , AngularListCallback < JsMessage > callback ) { 
 - Log . d ( TAG , " unbindChat : " + peer ) ; 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getConversationList ( peer . convert ( ) ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - public void onMessageShown ( JsPeer peer , JsMessage message ) { 
 - if ( message . isOnServer ( ) ) { 
 - messenger . onMessageShown ( peer . convert ( ) , Long . parseLong ( message . getSortKey ( ) ) ) ; 
 - } 
 - } 
 - 
 - public void deleteMessages ( JsPeer peer , final long [ ] rids ) { 
 - messenger . deleteMessages ( peer . convert ( ) , rids ) ; 
 - } 
 - 
 - public void deleteChat ( JsPeer peer , final JsClosure success , final JsClosure error ) { 
 - messenger . deleteChat ( peer . convert ( ) ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - success . callback ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - error . callback ( ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public void clearChat ( JsPeer peer , final JsClosure success , final JsClosure error ) { 
 - messenger . clearChat ( peer . convert ( ) ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - success . callback ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - error . callback ( ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - / / Peers 
 - 
 - public JsPeer getUserPeer ( int uid ) { 
 - return JsPeer . create ( Peer . user ( uid ) ) ; 
 - } 
 - 
 - public JsPeer getGroupPeer ( int gid ) { 
 - return JsPeer . create ( Peer . group ( gid ) ) ; 
 - } 
 - 
 - / / Users 
 - 
 - public JsUser getUser ( int uid ) { 
 - return messenger . getJsUser ( uid ) . get ( ) ; 
 - } 
 - 
 - public void bindUser ( int uid , AngularValueCallback callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getJsUser ( uid ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindUser ( int uid , AngularValueCallback callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getJsUser ( uid ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - / / Groups 
 - 
 - public JsGroup getGroup ( int gid ) { 
 - return messenger . getJsGroup ( gid ) . get ( ) ; 
 - } 
 - 
 - public void bindGroup ( int gid , AngularValueCallback callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getJsGroup ( gid ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindGroup ( int gid , AngularValueCallback callback ) { 
 - if ( callback = = null ) { 
 - return ; 
 - } 
 - messenger . getJsGroup ( gid ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - / / Actions 
 - 
 - public void sendMessage ( JsPeer peer , String text ) { 
 - messenger . sendMessageWithMentionsDetect ( peer . convert ( ) , text ) ; 
 - } 
 - 
 - public void sendFile ( JsPeer peer , JsFile file ) { 
 - String descriptor = provider . registerUploadFile ( file ) ; 
 - messenger . sendDocument ( peer . convert ( ) , 
 - file . getName ( ) , file . getMimeType ( ) , descriptor ) ; 
 - } 
 - 
 - public void sendPhoto ( final JsPeer peer , final JsFile file ) { 
 - messenger . sendPhoto ( peer . convert ( ) , file ) ; 
 - } 
 - 
 - public void sendClipboardPhoto ( final JsPeer peer , final JsBlob blob ) { 
 - messenger . sendClipboardPhoto ( peer . convert ( ) , blob ) ; 
 - } 
 - 
 - / / Drafts 
 - 
 - public void saveDraft ( JsPeer peer , String text ) { 
 - messenger . saveDraft ( peer . convert ( ) , text ) ; 
 - } 
 - 
 - public String loadDraft ( JsPeer peer ) { 
 - return messenger . loadDraft ( peer . convert ( ) ) ; 
 - } 
 - 
 - / / Typing 
 - 
 - public void onTyping ( JsPeer peer ) { 
 - messenger . onTyping ( peer . convert ( ) ) ; 
 - } 
 - 
 - public JsTyping getTyping ( JsPeer peer ) { 
 - return messenger . getTyping ( peer . convert ( ) ) . get ( ) ; 
 - } 
 - 
 - public void bindTyping ( JsPeer peer , AngularValueCallback callback ) { 
 - messenger . getTyping ( peer . convert ( ) ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindTyping ( JsPeer peer , AngularValueCallback callback ) { 
 - messenger . getTyping ( peer . convert ( ) ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - / / Updating state 
 - 
 - public void bindConnectState ( AngularValueCallback callback ) { 
 - messenger . getOnlineStatus ( ) . subscribe ( callback ) ; 
 - } 
 - 
 - public void unbindConnectState ( AngularValueCallback callback ) { 
 - messenger . getOnlineStatus ( ) . unsubscribe ( callback ) ; 
 - } 
 - 
 - / / Events 
 - 
 - public void onAppVisible ( ) { 
 - messenger . onAppVisible ( ) ; 
 - } 
 - 
 - public void onAppHidden ( ) { 
 - messenger . onAppHidden ( ) ; 
 - } 
 - 
 - public void onConversationOpen ( JsPeer peer ) { 
 - Log . d ( TAG , " onConversationOpen : " + peer ) ; 
 - messenger . onConversationOpen ( peer . convert ( ) ) ; 
 - } 
 - 
 - public void onConversationClosed ( JsPeer peer ) { 
 - Log . d ( TAG , " onConversationClosed : " + peer ) ; 
 - messenger . onConversationClosed ( peer . convert ( ) ) ; 
 - } 
 - 
 - public void onDialogsOpen ( ) { 
 - messenger . onDialogsOpen ( ) ; 
 - } 
 - 
 - public void onDialogsClosed ( ) { 
 - messenger . onDialogsClosed ( ) ; 
 - } 
 - 
 - public void onProfileOpen ( int uid ) { 
 - messenger . onProfileOpen ( uid ) ; 
 - } 
 - 
 - public void onProfileClosed ( int uid ) { 
 - messenger . onProfileClosed ( uid ) ; 
 - } 
 - 
 - public void onDialogsEnd ( ) { 
 - messenger . loadMoreDialogs ( ) ; 
 - } 
 - 
 - public void onChatEnd ( JsPeer peer ) { 
 - messenger . loadMoreHistory ( peer . convert ( ) ) ; 
 - } 
 - 
 - / / Profile 
 - 
 - public JsPromise editMyName ( final String newName ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . editMyName ( newName ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - Log . d ( TAG , " editMyName : result " ) ; 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - Log . d ( TAG , " editMyName : error " ) ; 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise editName ( final int uid , final String newName ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . editName ( uid , newName ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise joinGroupViaLink ( final String url ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . joinGroupViaLink ( url ) . start ( new CommandCallback < Integer > ( ) { 
 - @ Override 
 - public void onResult ( Integer res ) { 
 - resolve ( JsPeer . create ( Peer . group ( res ) ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise editGroupTitle ( final int gid , final String newTitle ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . editGroupTitle ( gid , newTitle ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise createGroup ( final String title , final JsFile file , final int [ ] uids ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - String avatarDescriptor = provider . registerUploadFile ( file ) ; 
 - messenger . createGroup ( title , avatarDescriptor , uids ) . start ( new CommandCallback < Integer > ( ) { 
 - @ Override 
 - public void onResult ( Integer res ) { 
 - resolve ( JsPeer . create ( Peer . group ( res ) ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise inviteMember ( final int gid , final int uid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . inviteMember ( gid , uid ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise kickMember ( final int gid , final int uid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . kickMember ( gid , uid ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise leaveGroup ( final int gid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . leaveGroup ( gid ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise getIntegrationToken ( final int gid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . requestIntegrationToken ( gid ) . start ( new CommandCallback < String > ( ) { 
 - @ Override 
 - public void onResult ( String res ) { 
 - resolve ( res ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise revokeIntegrationToken ( final int gid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . revokeIntegrationToken ( gid ) . start ( new CommandCallback < String > ( ) { 
 - @ Override 
 - public void onResult ( String res ) { 
 - resolve ( res ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise getInviteLink ( final int gid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . requestInviteLink ( gid ) . start ( new CommandCallback < String > ( ) { 
 - @ Override 
 - public void onResult ( String res ) { 
 - resolve ( res ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise revokeInviteLink ( final int gid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . revokeInviteLink ( gid ) . start ( new CommandCallback < String > ( ) { 
 - @ Override 
 - public void onResult ( String res ) { 
 - resolve ( res ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise addContact ( final int uid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . addContact ( uid ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise findUsers ( final String query ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - messenger . findUsers ( query ) . start ( new CommandCallback < UserVM [ ] > ( ) { 
 - @ Override 
 - public void onResult ( UserVM [ ] users ) { 
 - JsArray < JsUser > jsUsers = JsArray . createArray ( ) . cast ( ) ; 
 - 
 - for ( UserVM user : users ) { 
 - jsUsers . push ( messenger . getJsUser ( user . getId ( ) ) . get ( ) ) ; 
 - } 
 - 
 - resolve ( jsUsers ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( e . getMessage ( ) ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public JsPromise removeContact ( final int uid ) { 
 - return JsPromise . create ( new JsPromiseExecutor ( ) { 
 - @ Override 
 - public void execute ( ) { 
 - / / noinspection ConstantConditions 
 - messenger . removeContact ( uid ) . start ( new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res ) { 
 - resolve ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - reject ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - public void changeNotificationsEnabled ( JsPeer peer , boolean isEnabled ) { 
 - messenger . changeNotificationsEnabled ( peer . convert ( ) , isEnabled ) ; 
 - } 
 - 
 - public boolean isNotificationsEnabled ( JsPeer peer ) { 
 - return messenger . isNotificationsEnabled ( peer . convert ( ) ) ; 
 - } 
 - } 
 \ No newline at end of file
