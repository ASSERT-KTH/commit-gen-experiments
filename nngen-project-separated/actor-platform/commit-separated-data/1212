BLEU SCORE: 0.26269098944241576

TEST MSG: fix ( server : auth ) : fixed password auth
GENERATED MSG: fix ( server ) : fixed postgres datetime

TEST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala < nl > index 7a757ff . . b42a1a0 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala < nl > @ @ - 45 , 10 + 45 , 12 @ @ object AuthTransactionRepo { < nl > for { < nl > email ← AuthEmailTransactionRepo . find ( transactionHash ) < nl > phone ← AuthPhoneTransactionRepo . find ( transactionHash ) < nl > - } yield ( email , phone ) match { < nl > - case ( Some ( e ) , None ) ⇒ email < nl > - case ( None , Some ( p ) ) ⇒ phone < nl > - case _ ⇒ None < nl > + username ← AuthUsernameTransactionRepo . find ( transactionHash ) < nl > + } yield ( email , phone , username ) match { < nl > + case ( Some ( e ) , None , None ) ⇒ email < nl > + case ( None , Some ( p ) , None ) ⇒ phone < nl > + case ( None , None , Some ( p ) ) ⇒ username < nl > + case _ ⇒ None < nl > } < nl > < nl > def delete ( transactionHash : String ) = < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala < nl > index 9473cbc . . 9622d03 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala < nl > @ @ - 41 , 6 + 41 , 8 @ @ object AuthUsernameTransactionRepo { < nl > < nl > def find ( username : String , deviceHash : Array [ Byte ] ) = byUsernameAndDeviceHash ( ( username , deviceHash ) ) . result . headOption < nl > < nl > + def find ( hash : String ) = byHash ( hash ) . result . headOption < nl > + < nl > def setUserId ( hash : String , userId : Int ) = < nl > byHash ( hash ) . map ( _ . userId ) . update ( Some ( userId ) ) < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala < nl > index 627333f . . a815387 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala < nl > @ @ - 14 , 13 + 14 , 12 @ @ trait ByteStringImplicits { < nl > } < nl > < nl > trait ActorPostgresDriver extends ExPostgresDriver < nl > - with PgDateSupportJoda < nl > with PgDate2Support < nl > with PgArraySupport < nl > with PgLTreeSupport { < nl > < nl > override val api = < nl > - new API with ArrayImplicits with LTreeImplicits with DateTimeImplicits with ByteStringImplicits with JodaDateTimeImplicits < nl > + new API with ArrayImplicits with LTreeImplicits with DateTimeImplicits with ByteStringImplicits < nl > } < nl > < nl > object ActorPostgresDriver extends ActorPostgresDriver < nl > \ No newline at end of file < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala < nl > index c4f0d78 . . f483aa5 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala < nl > @ @ - 1 , 6 + 1 , 7 @ @ < nl > package im . actor . server . persist < nl > < nl > import com . github . tminglei . slickpg . LTree < nl > + import com . github . tototoshi . slick . PostgresJodaSupport . _ < nl > import org . joda . time . DateTime < nl > < nl > import im . actor . server . _ < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala < nl > index 18f5680 . . 0202efd 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala < nl > @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . server . persist < nl > < nl > import java . time . { LocalDateTime , ZonedDateTime } < nl > < nl > + import com . github . tototoshi . slick . PostgresJodaSupport . _ < nl > import org . joda . time . DateTime < nl > import slick . dbio . Effect . Write < nl > import slick . profile . FixedSqlAction < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala < nl > index 81c4b6e . . 090a4df 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . server . persist . messaging < nl > < nl > + import com . github . tototoshi . slick . PostgresJodaSupport . _ < nl > import im . actor . server . db . ActorPostgresDriver . api . _ < nl > import im . actor . server . model . { DialogId , ReactionEvent }

TEST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala 
 index 7a757ff . . b42a1a0 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthTransactionRepo . scala 
 @ @ - 45 , 10 + 45 , 12 @ @ object AuthTransactionRepo { 
 for { 
 email ← AuthEmailTransactionRepo . find ( transactionHash ) 
 phone ← AuthPhoneTransactionRepo . find ( transactionHash ) 
 - } yield ( email , phone ) match { 
 - case ( Some ( e ) , None ) ⇒ email 
 - case ( None , Some ( p ) ) ⇒ phone 
 - case _ ⇒ None 
 + username ← AuthUsernameTransactionRepo . find ( transactionHash ) 
 + } yield ( email , phone , username ) match { 
 + case ( Some ( e ) , None , None ) ⇒ email 
 + case ( None , Some ( p ) , None ) ⇒ phone 
 + case ( None , None , Some ( p ) ) ⇒ username 
 + case _ ⇒ None 
 } 
 
 def delete ( transactionHash : String ) = 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala 
 index 9473cbc . . 9622d03 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / auth / AuthUsernameTransactionRepo . scala 
 @ @ - 41 , 6 + 41 , 8 @ @ object AuthUsernameTransactionRepo { 
 
 def find ( username : String , deviceHash : Array [ Byte ] ) = byUsernameAndDeviceHash ( ( username , deviceHash ) ) . result . headOption 
 
 + def find ( hash : String ) = byHash ( hash ) . result . headOption 
 + 
 def setUserId ( hash : String , userId : Int ) = 
 byHash ( hash ) . map ( _ . userId ) . update ( Some ( userId ) ) 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala 
 index 627333f . . a815387 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / ActorPostgresDriver . scala 
 @ @ - 14 , 13 + 14 , 12 @ @ trait ByteStringImplicits { 
 } 
 
 trait ActorPostgresDriver extends ExPostgresDriver 
 - with PgDateSupportJoda 
 with PgDate2Support 
 with PgArraySupport 
 with PgLTreeSupport { 
 
 override val api = 
 - new API with ArrayImplicits with LTreeImplicits with DateTimeImplicits with ByteStringImplicits with JodaDateTimeImplicits 
 + new API with ArrayImplicits with LTreeImplicits with DateTimeImplicits with ByteStringImplicits 
 } 
 
 object ActorPostgresDriver extends ActorPostgresDriver 
 \ No newline at end of file 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala 
 index c4f0d78 . . f483aa5 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / DepartmentRepo . scala 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package im . actor . server . persist 
 
 import com . github . tminglei . slickpg . LTree 
 + import com . github . tototoshi . slick . PostgresJodaSupport . _ 
 import org . joda . time . DateTime 
 
 import im . actor . server . _ 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala 
 index 18f5680 . . 0202efd 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / GroupUserRepo . scala 
 @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . server . persist 
 
 import java . time . { LocalDateTime , ZonedDateTime } 
 
 + import com . github . tototoshi . slick . PostgresJodaSupport . _ 
 import org . joda . time . DateTime 
 import slick . dbio . Effect . Write 
 import slick . profile . FixedSqlAction 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala 
 index 81c4b6e . . 090a4df 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / messaging / ReactionEventRepo . scala 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . server . persist . messaging 
 
 + import com . github . tototoshi . slick . PostgresJodaSupport . _ 
 import im . actor . server . db . ActorPostgresDriver . api . _ 
 import im . actor . server . model . { DialogId , ReactionEvent }
