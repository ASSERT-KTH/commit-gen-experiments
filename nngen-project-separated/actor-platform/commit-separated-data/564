BLEU SCORE: 0.21200626759025185

TEST MSG: feat ( core ) : add ServiceContent for group about and topic
GENERATED MSG: chore ( core ) : new content localizations

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > index 0c8e14e . . 9452bee 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > @ @ - 18 , 6 + 18 , 8 @ @ import im . actor . core . entity . content . ServiceCallEnded ; < nl > import im . actor . core . entity . content . ServiceCallMissed ; < nl > import im . actor . core . entity . content . ServiceContent ; < nl > import im . actor . core . entity . content . ServiceGroupAvatarChanged ; < nl > + import im . actor . core . entity . content . ServiceGroupAboutChanged ; < nl > + import im . actor . core . entity . content . ServiceGroupTopicChanged ; < nl > import im . actor . core . entity . content . ServiceGroupCreated ; < nl > import im . actor . core . entity . content . ServiceGroupTitleChanged ; < nl > import im . actor . core . entity . content . ServiceGroupUserInvited ; < nl > @ @ - 74 , 6 + 76 , 12 @ @ public class ContentDescription extends BserObject { < nl > } else if ( msg instanceof ServiceGroupTitleChanged ) { < nl > return new ContentDescription ( ContentType . SERVICE _ TITLE , < nl > ( ( ServiceGroupTitleChanged ) msg ) . getNewTitle ( ) ) ; < nl > + } else if ( msg instanceof ServiceGroupTopicChanged ) { < nl > + return new ContentDescription ( ContentType . SERVICE _ TOPIC , < nl > + ( ( ServiceGroupTopicChanged ) msg ) . getNewTopic ( ) ) ; < nl > + } else if ( msg instanceof ServiceGroupAboutChanged ) { < nl > + return new ContentDescription ( ContentType . SERVICE _ ABOUT , < nl > + ( ( ServiceGroupAboutChanged ) msg ) . getNewAbout ( ) ) ; < nl > } else if ( msg instanceof ServiceGroupCreated ) { < nl > return new ContentDescription ( ContentType . SERVICE _ CREATED ) ; < nl > } else if ( msg instanceof ServiceGroupUserInvited ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java < nl > index 29da0aa . . 9320fe4 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java < nl > @ @ - 26 , 6 + 26 , 8 @ @ public enum ContentType { < nl > CUSTOM _ JSON _ MESSAGE ( 21 ) , < nl > SERVICE _ CALL _ ENDED ( 22 ) , < nl > SERVICE _ CALL _ MISSED ( 23 ) , < nl > + SERVICE _ TOPIC ( 24 ) , < nl > + SERVICE _ ABOUT ( 25 ) , < nl > UNKNOWN _ CONTENT ( 15 ) ; < nl > < nl > int value ; < nl > @ @ - 85 , 6 + 87 , 11 @ @ public enum ContentType { < nl > return SERVICE _ CALL _ ENDED ; < nl > case 23 : < nl > return SERVICE _ CALL _ MISSED ; < nl > + case 24 : < nl > + return SERVICE _ TOPIC ; < nl > + case 25 : < nl > + return SERVICE _ ABOUT ; < nl > + < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index a3e00f1 . . b6523c0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 6 , 26 + 6 , 7 @ @ package im . actor . core . entity . content ; < nl > < nl > import java . io . IOException ; < nl > < nl > - import im . actor . core . api . ApiDocumentExPhoto ; < nl > - import im . actor . core . api . ApiDocumentExVideo ; < nl > - import im . actor . core . api . ApiDocumentExVoice ; < nl > - import im . actor . core . api . ApiDocumentMessage ; < nl > - import im . actor . core . api . ApiJsonMessage ; < nl > - import im . actor . core . api . ApiMessage ; < nl > - import im . actor . core . api . ApiServiceEx ; < nl > - import im . actor . core . api . ApiServiceExChangedAvatar ; < nl > - import im . actor . core . api . ApiServiceExChangedTitle ; < nl > - import im . actor . core . api . ApiServiceExContactRegistered ; < nl > - import im . actor . core . api . ApiServiceExGroupCreated ; < nl > - import im . actor . core . api . ApiServiceExPhoneCall ; < nl > - import im . actor . core . api . ApiServiceExPhoneMissed ; < nl > - import im . actor . core . api . ApiServiceExUserInvited ; < nl > - import im . actor . core . api . ApiServiceExUserJoined ; < nl > - import im . actor . core . api . ApiServiceExUserKicked ; < nl > - import im . actor . core . api . ApiServiceExUserLeft ; < nl > - import im . actor . core . api . ApiServiceMessage ; < nl > - import im . actor . core . api . ApiStickerMessage ; < nl > - import im . actor . core . api . ApiTextMessage ; < nl > + import im . actor . core . api . * ; < nl > import im . actor . core . entity . content . internal . AbsContentContainer ; < nl > import im . actor . core . entity . content . internal . AbsLocalContent ; < nl > import im . actor . core . entity . content . internal . ContentLocalContainer ; < nl > @ @ - 117 , 6 + 98 , 10 @ @ public abstract class AbsContent { < nl > return new ServiceUserRegistered ( remoteContainer ) ; < nl > } else if ( ext instanceof ApiServiceExChangedTitle ) { < nl > return new ServiceGroupTitleChanged ( remoteContainer ) ; < nl > + } else if ( ext instanceof ApiServiceExChangedTopic ) { < nl > + return new ServiceGroupTopicChanged ( remoteContainer ) ; < nl > + } else if ( ext instanceof ApiServiceExChangedAbout ) { < nl > + return new ServiceGroupAboutChanged ( remoteContainer ) ; < nl > } else if ( ext instanceof ApiServiceExChangedAvatar ) { < nl > return new ServiceGroupAvatarChanged ( remoteContainer ) ; < nl > } else if ( ext instanceof ApiServiceExGroupCreated ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupAboutChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupAboutChanged . java < nl > new file mode 100644 < nl > index 0000000 . . 0e377fa < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupAboutChanged . java < nl > @ @ - 0 , 0 + 1 , 29 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . entity . content ; < nl > + < nl > + import im . actor . core . api . ApiServiceExChangedAbout ; < nl > + import im . actor . core . api . ApiServiceMessage ; < nl > + import im . actor . core . entity . content . internal . ContentRemoteContainer ; < nl > + < nl > + public class ServiceGroupAboutChanged extends ServiceContent { < nl > + < nl > + public static ServiceGroupAboutChanged create ( String title ) { < nl > + return new ServiceGroupAboutChanged ( new ContentRemoteContainer ( < nl > + new ApiServiceMessage ( " About changed " , new ApiServiceExChangedAbout ( title ) ) ) ) ; < nl > + } < nl > + < nl > + private String newAbout ; < nl > + < nl > + public ServiceGroupAboutChanged ( ContentRemoteContainer remoteContainer ) { < nl > + super ( remoteContainer ) ; < nl > + ApiServiceMessage serviceMessage = ( ApiServiceMessage ) remoteContainer . getMessage ( ) ; < nl > + newAbout = ( ( ApiServiceExChangedAbout ) serviceMessage . getExt ( ) ) . getAbout ( ) ; < nl > + } < nl > + < nl > + public String getNewAbout ( ) { < nl > + return newAbout ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupTopicChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupTopicChanged . java < nl > new file mode 100644 < nl > index 0000000 . . 4f1d3b0 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupTopicChanged . java < nl > @ @ - 0 , 0 + 1 , 29 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . entity . content ; < nl > + < nl > + import im . actor . core . api . ApiServiceExChangedTopic ; < nl > + import im . actor . core . api . ApiServiceMessage ; < nl > + import im . actor . core . entity . content . internal . ContentRemoteContainer ; < nl > + < nl > + public class ServiceGroupTopicChanged extends ServiceContent { < nl > + < nl > + public static ServiceGroupTopicChanged create ( String topic ) { < nl > + return new ServiceGroupTopicChanged ( new ContentRemoteContainer ( < nl > + new ApiServiceMessage ( " Topic changed " , new ApiServiceExChangedTopic ( topic ) ) ) ) ; < nl > + } < nl > + < nl > + private String newTopic ; < nl > + < nl > + public ServiceGroupTopicChanged ( ContentRemoteContainer remoteContainer ) { < nl > + super ( remoteContainer ) ; < nl > + ApiServiceMessage serviceMessage = ( ApiServiceMessage ) remoteContainer . getMessage ( ) ; < nl > + newTopic = ( ( ApiServiceExChangedTopic ) serviceMessage . getExt ( ) ) . getTopic ( ) ; < nl > + } < nl > + < nl > + public String getNewTopic ( ) { < nl > + return newTopic ; < nl > + } < nl > + }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > index 93b0cb5 . . b706265 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > @ @ - 9 , 7 + 9 , 9 @ @ import com . google . j2objc . annotations . Property ; < nl > import java . io . IOException ; < nl > < nl > import im . actor . core . entity . content . AbsContent ; < nl > + import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > + import im . actor . core . entity . content . LocationContent ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . ServiceContent ; < nl > import im . actor . core . entity . content . ServiceGroupAvatarChanged ; < nl > @ @ - 22 , 6 + 24 , 7 @ @ import im . actor . core . entity . content . ServiceGroupUserLeave ; < nl > import im . actor . core . entity . content . ServiceUserRegistered ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > + import im . actor . core . entity . content . VoiceContent ; < nl > import im . actor . runtime . bser . Bser ; < nl > import im . actor . runtime . bser . BserObject ; < nl > import im . actor . runtime . bser . BserValues ; < nl > @ @ - 42 , 8 + 45 , 14 @ @ public class ContentDescription extends BserObject { < nl > return new ContentDescription ( ContentType . DOCUMENT _ PHOTO ) ; < nl > } else if ( msg instanceof VideoContent ) { < nl > return new ContentDescription ( ContentType . DOCUMENT _ VIDEO ) ; < nl > + } else if ( msg instanceof VoiceContent ) { < nl > + return new ContentDescription ( ContentType . DOCUMENT _ AUDIO ) ; < nl > } else if ( msg instanceof DocumentContent ) { < nl > return new ContentDescription ( ContentType . DOCUMENT ) ; < nl > + } else if ( msg instanceof LocationContent ) { < nl > + return new ContentDescription ( ContentType . LOCATION ) ; < nl > + } else if ( msg instanceof ContactContent ) { < nl > + return new ContentDescription ( ContentType . CONTACT ) ; < nl > } else if ( msg instanceof ServiceUserRegistered ) { < nl > return new ContentDescription ( ContentType . SERVICE _ REGISTERED ) ; < nl > } else if ( msg instanceof ServiceGroupAvatarChanged ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java < nl > index 69713bd . . e0cff2f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java < nl > @ @ - 9 , 6 + 9 , 9 @ @ public enum ContentType { < nl > DOCUMENT ( 3 ) , < nl > DOCUMENT _ PHOTO ( 4 ) , < nl > DOCUMENT _ VIDEO ( 5 ) , < nl > + DOCUMENT _ AUDIO ( 17 ) , < nl > + CONTACT ( 18 ) , < nl > + LOCATION ( 19 ) , < nl > SERVICE ( 6 ) , < nl > SERVICE _ ADD ( 7 ) , < nl > SERVICE _ KICK ( 8 ) , < nl > @ @ - 64 , 6 + 67 , 12 @ @ public enum ContentType { < nl > return SERVICE _ AVATAR _ REMOVED ; < nl > case 16 : < nl > return SERVICE _ JOINED ; < nl > + case 17 : < nl > + return DOCUMENT _ AUDIO ; < nl > + case 18 : < nl > + return CONTACT ; < nl > + case 19 : < nl > + return LOCATION ; < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > index 31e5e25 . . 4c2e24a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > @ @ - 338 , 6 + 338 , 12 @ @ public class I18nEngine { < nl > return locale . get ( " ContentPhoto " ) ; < nl > case DOCUMENT _ VIDEO : < nl > return locale . get ( " ContentVideo " ) ; < nl > + case DOCUMENT _ AUDIO : < nl > + return locale . get ( " ContentAudio " ) ; < nl > + case CONTACT : < nl > + return locale . get ( " Contact " ) ; < nl > + case LOCATION : < nl > + return locale . get ( " Location " ) ; < nl > case SERVICE : < nl > return text ; / / Should be service message < nl > case SERVICE _ REGISTERED : < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties < nl > index d68b05a . . e65d887 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties < nl > @ @ - 31 , 6 + 31 , 9 @ @ ContentUnsupported = Unsupported content < nl > ContentDocument = Document < nl > ContentPhoto = Photo < nl > ContentVideo = Video < nl > + ContentAudio = Audio < nl > + Contact = Contact < nl > + Location = Location < nl > < nl > ServiceRegistered = Joined Actor < nl > ServiceRegisteredFull = { name } joined Actor Network < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties < nl > index 89be667 . . 0156ecc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties < nl > @ @ - 41 , 6 + 41 , 9 @ @ ContentUnsupported = Н е п о д д е р ж и в а е м о е с о о б щ е н и е < nl > ContentDocument = Д о к у м е н т < nl > ContentPhoto = Ф о т о < nl > ContentVideo = В и д е о < nl > + ContentAudio = А у д и о < nl > + Contact = К о н т а к т < nl > + Location = М е с т о < nl > < nl > ServiceRegistered = З а р е г и с т р и р о в а л с я ( - а ) в А к т о р е < nl > ServiceRegisteredMale = З а р е г и с т р и р о в а л с я в А к т о р е

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 index 0c8e14e . . 9452bee 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 @ @ - 18 , 6 + 18 , 8 @ @ import im . actor . core . entity . content . ServiceCallEnded ; 
 import im . actor . core . entity . content . ServiceCallMissed ; 
 import im . actor . core . entity . content . ServiceContent ; 
 import im . actor . core . entity . content . ServiceGroupAvatarChanged ; 
 + import im . actor . core . entity . content . ServiceGroupAboutChanged ; 
 + import im . actor . core . entity . content . ServiceGroupTopicChanged ; 
 import im . actor . core . entity . content . ServiceGroupCreated ; 
 import im . actor . core . entity . content . ServiceGroupTitleChanged ; 
 import im . actor . core . entity . content . ServiceGroupUserInvited ; 
 @ @ - 74 , 6 + 76 , 12 @ @ public class ContentDescription extends BserObject { 
 } else if ( msg instanceof ServiceGroupTitleChanged ) { 
 return new ContentDescription ( ContentType . SERVICE _ TITLE , 
 ( ( ServiceGroupTitleChanged ) msg ) . getNewTitle ( ) ) ; 
 + } else if ( msg instanceof ServiceGroupTopicChanged ) { 
 + return new ContentDescription ( ContentType . SERVICE _ TOPIC , 
 + ( ( ServiceGroupTopicChanged ) msg ) . getNewTopic ( ) ) ; 
 + } else if ( msg instanceof ServiceGroupAboutChanged ) { 
 + return new ContentDescription ( ContentType . SERVICE _ ABOUT , 
 + ( ( ServiceGroupAboutChanged ) msg ) . getNewAbout ( ) ) ; 
 } else if ( msg instanceof ServiceGroupCreated ) { 
 return new ContentDescription ( ContentType . SERVICE _ CREATED ) ; 
 } else if ( msg instanceof ServiceGroupUserInvited ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java 
 index 29da0aa . . 9320fe4 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java 
 @ @ - 26 , 6 + 26 , 8 @ @ public enum ContentType { 
 CUSTOM _ JSON _ MESSAGE ( 21 ) , 
 SERVICE _ CALL _ ENDED ( 22 ) , 
 SERVICE _ CALL _ MISSED ( 23 ) , 
 + SERVICE _ TOPIC ( 24 ) , 
 + SERVICE _ ABOUT ( 25 ) , 
 UNKNOWN _ CONTENT ( 15 ) ; 
 
 int value ; 
 @ @ - 85 , 6 + 87 , 11 @ @ public enum ContentType { 
 return SERVICE _ CALL _ ENDED ; 
 case 23 : 
 return SERVICE _ CALL _ MISSED ; 
 + case 24 : 
 + return SERVICE _ TOPIC ; 
 + case 25 : 
 + return SERVICE _ ABOUT ; 
 + 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index a3e00f1 . . b6523c0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 6 , 26 + 6 , 7 @ @ package im . actor . core . entity . content ; 
 
 import java . io . IOException ; 
 
 - import im . actor . core . api . ApiDocumentExPhoto ; 
 - import im . actor . core . api . ApiDocumentExVideo ; 
 - import im . actor . core . api . ApiDocumentExVoice ; 
 - import im . actor . core . api . ApiDocumentMessage ; 
 - import im . actor . core . api . ApiJsonMessage ; 
 - import im . actor . core . api . ApiMessage ; 
 - import im . actor . core . api . ApiServiceEx ; 
 - import im . actor . core . api . ApiServiceExChangedAvatar ; 
 - import im . actor . core . api . ApiServiceExChangedTitle ; 
 - import im . actor . core . api . ApiServiceExContactRegistered ; 
 - import im . actor . core . api . ApiServiceExGroupCreated ; 
 - import im . actor . core . api . ApiServiceExPhoneCall ; 
 - import im . actor . core . api . ApiServiceExPhoneMissed ; 
 - import im . actor . core . api . ApiServiceExUserInvited ; 
 - import im . actor . core . api . ApiServiceExUserJoined ; 
 - import im . actor . core . api . ApiServiceExUserKicked ; 
 - import im . actor . core . api . ApiServiceExUserLeft ; 
 - import im . actor . core . api . ApiServiceMessage ; 
 - import im . actor . core . api . ApiStickerMessage ; 
 - import im . actor . core . api . ApiTextMessage ; 
 + import im . actor . core . api . * ; 
 import im . actor . core . entity . content . internal . AbsContentContainer ; 
 import im . actor . core . entity . content . internal . AbsLocalContent ; 
 import im . actor . core . entity . content . internal . ContentLocalContainer ; 
 @ @ - 117 , 6 + 98 , 10 @ @ public abstract class AbsContent { 
 return new ServiceUserRegistered ( remoteContainer ) ; 
 } else if ( ext instanceof ApiServiceExChangedTitle ) { 
 return new ServiceGroupTitleChanged ( remoteContainer ) ; 
 + } else if ( ext instanceof ApiServiceExChangedTopic ) { 
 + return new ServiceGroupTopicChanged ( remoteContainer ) ; 
 + } else if ( ext instanceof ApiServiceExChangedAbout ) { 
 + return new ServiceGroupAboutChanged ( remoteContainer ) ; 
 } else if ( ext instanceof ApiServiceExChangedAvatar ) { 
 return new ServiceGroupAvatarChanged ( remoteContainer ) ; 
 } else if ( ext instanceof ApiServiceExGroupCreated ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupAboutChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupAboutChanged . java 
 new file mode 100644 
 index 0000000 . . 0e377fa 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupAboutChanged . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . entity . content ; 
 + 
 + import im . actor . core . api . ApiServiceExChangedAbout ; 
 + import im . actor . core . api . ApiServiceMessage ; 
 + import im . actor . core . entity . content . internal . ContentRemoteContainer ; 
 + 
 + public class ServiceGroupAboutChanged extends ServiceContent { 
 + 
 + public static ServiceGroupAboutChanged create ( String title ) { 
 + return new ServiceGroupAboutChanged ( new ContentRemoteContainer ( 
 + new ApiServiceMessage ( " About changed " , new ApiServiceExChangedAbout ( title ) ) ) ) ; 
 + } 
 + 
 + private String newAbout ; 
 + 
 + public ServiceGroupAboutChanged ( ContentRemoteContainer remoteContainer ) { 
 + super ( remoteContainer ) ; 
 + ApiServiceMessage serviceMessage = ( ApiServiceMessage ) remoteContainer . getMessage ( ) ; 
 + newAbout = ( ( ApiServiceExChangedAbout ) serviceMessage . getExt ( ) ) . getAbout ( ) ; 
 + } 
 + 
 + public String getNewAbout ( ) { 
 + return newAbout ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupTopicChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupTopicChanged . java 
 new file mode 100644 
 index 0000000 . . 4f1d3b0 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ServiceGroupTopicChanged . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . entity . content ; 
 + 
 + import im . actor . core . api . ApiServiceExChangedTopic ; 
 + import im . actor . core . api . ApiServiceMessage ; 
 + import im . actor . core . entity . content . internal . ContentRemoteContainer ; 
 + 
 + public class ServiceGroupTopicChanged extends ServiceContent { 
 + 
 + public static ServiceGroupTopicChanged create ( String topic ) { 
 + return new ServiceGroupTopicChanged ( new ContentRemoteContainer ( 
 + new ApiServiceMessage ( " Topic changed " , new ApiServiceExChangedTopic ( topic ) ) ) ) ; 
 + } 
 + 
 + private String newTopic ; 
 + 
 + public ServiceGroupTopicChanged ( ContentRemoteContainer remoteContainer ) { 
 + super ( remoteContainer ) ; 
 + ApiServiceMessage serviceMessage = ( ApiServiceMessage ) remoteContainer . getMessage ( ) ; 
 + newTopic = ( ( ApiServiceExChangedTopic ) serviceMessage . getExt ( ) ) . getTopic ( ) ; 
 + } 
 + 
 + public String getNewTopic ( ) { 
 + return newTopic ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 index 93b0cb5 . . b706265 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 @ @ - 9 , 7 + 9 , 9 @ @ import com . google . j2objc . annotations . Property ; 
 import java . io . IOException ; 
 
 import im . actor . core . entity . content . AbsContent ; 
 + import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 + import im . actor . core . entity . content . LocationContent ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . ServiceContent ; 
 import im . actor . core . entity . content . ServiceGroupAvatarChanged ; 
 @ @ - 22 , 6 + 24 , 7 @ @ import im . actor . core . entity . content . ServiceGroupUserLeave ; 
 import im . actor . core . entity . content . ServiceUserRegistered ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 + import im . actor . core . entity . content . VoiceContent ; 
 import im . actor . runtime . bser . Bser ; 
 import im . actor . runtime . bser . BserObject ; 
 import im . actor . runtime . bser . BserValues ; 
 @ @ - 42 , 8 + 45 , 14 @ @ public class ContentDescription extends BserObject { 
 return new ContentDescription ( ContentType . DOCUMENT _ PHOTO ) ; 
 } else if ( msg instanceof VideoContent ) { 
 return new ContentDescription ( ContentType . DOCUMENT _ VIDEO ) ; 
 + } else if ( msg instanceof VoiceContent ) { 
 + return new ContentDescription ( ContentType . DOCUMENT _ AUDIO ) ; 
 } else if ( msg instanceof DocumentContent ) { 
 return new ContentDescription ( ContentType . DOCUMENT ) ; 
 + } else if ( msg instanceof LocationContent ) { 
 + return new ContentDescription ( ContentType . LOCATION ) ; 
 + } else if ( msg instanceof ContactContent ) { 
 + return new ContentDescription ( ContentType . CONTACT ) ; 
 } else if ( msg instanceof ServiceUserRegistered ) { 
 return new ContentDescription ( ContentType . SERVICE _ REGISTERED ) ; 
 } else if ( msg instanceof ServiceGroupAvatarChanged ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java 
 index 69713bd . . e0cff2f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentType . java 
 @ @ - 9 , 6 + 9 , 9 @ @ public enum ContentType { 
 DOCUMENT ( 3 ) , 
 DOCUMENT _ PHOTO ( 4 ) , 
 DOCUMENT _ VIDEO ( 5 ) , 
 + DOCUMENT _ AUDIO ( 17 ) , 
 + CONTACT ( 18 ) , 
 + LOCATION ( 19 ) , 
 SERVICE ( 6 ) , 
 SERVICE _ ADD ( 7 ) , 
 SERVICE _ KICK ( 8 ) , 
 @ @ - 64 , 6 + 67 , 12 @ @ public enum ContentType { 
 return SERVICE _ AVATAR _ REMOVED ; 
 case 16 : 
 return SERVICE _ JOINED ; 
 + case 17 : 
 + return DOCUMENT _ AUDIO ; 
 + case 18 : 
 + return CONTACT ; 
 + case 19 : 
 + return LOCATION ; 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 index 31e5e25 . . 4c2e24a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 @ @ - 338 , 6 + 338 , 12 @ @ public class I18nEngine { 
 return locale . get ( " ContentPhoto " ) ; 
 case DOCUMENT _ VIDEO : 
 return locale . get ( " ContentVideo " ) ; 
 + case DOCUMENT _ AUDIO : 
 + return locale . get ( " ContentAudio " ) ; 
 + case CONTACT : 
 + return locale . get ( " Contact " ) ; 
 + case LOCATION : 
 + return locale . get ( " Location " ) ; 
 case SERVICE : 
 return text ; / / Should be service message 
 case SERVICE _ REGISTERED : 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties 
 index d68b05a . . e65d887 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText . properties 
 @ @ - 31 , 6 + 31 , 9 @ @ ContentUnsupported = Unsupported content 
 ContentDocument = Document 
 ContentPhoto = Photo 
 ContentVideo = Video 
 + ContentAudio = Audio 
 + Contact = Contact 
 + Location = Location 
 
 ServiceRegistered = Joined Actor 
 ServiceRegisteredFull = { name } joined Actor Network 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties 
 index 89be667 . . 0156ecc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / resources / AppText _ Ru . properties 
 @ @ - 41 , 6 + 41 , 9 @ @ ContentUnsupported = Н е п о д д е р ж и в а е м о е с о о б щ е н и е 
 ContentDocument = Д о к у м е н т 
 ContentPhoto = Ф о т о 
 ContentVideo = В и д е о 
 + ContentAudio = А у д и о 
 + Contact = К о н т а к т 
 + Location = М е с т о 
 
 ServiceRegistered = З а р е г и с т р и р о в а л с я ( - а ) в А к т о р е 
 ServiceRegisteredMale = З а р е г и с т р и р о в а л с я в А к т о р е
