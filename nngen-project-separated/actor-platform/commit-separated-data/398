BLEU SCORE: 0.07432998184513635

TEST MSG: fix ( server : user ) : don ' t catch never - thrown exception
GENERATED MSG: perf ( server ) : increased timeouts

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala < nl > index a8e6fb7 . . 3d838ec 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala < nl > @ @ - 310 , 11 + 310 , 7 @ @ private [ user ] final class UserProcessor < nl > } < nl > < nl > private def dialogRef ( state : UserState , peer : Peer ) : ActorRef = < nl > - try { < nl > - context . child ( dialogName ( peer ) ) getOrElse context . actorOf ( DialogProcessor . props ( userId , peer , state . internalExtensions ) , dialogName ( peer ) ) < nl > - } catch { < nl > - case _ : InvalidActorNameException ⇒ dialogRef ( state , peer ) < nl > - } < nl > + context . child ( dialogName ( peer ) ) getOrElse context . actorOf ( DialogProcessor . props ( userId , peer , state . internalExtensions ) , dialogName ( peer ) ) < nl > < nl > private def dialogRoot ( extensions : Seq [ ApiExtension ] ) : ActorRef = { < nl > val name = " DialogRoot "
NEAREST DIFF (one line): diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala < nl > index c83135b . . b3d8f2a 100644 < nl > - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala < nl > + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala < nl > @ @ - 142 , 7 + 142 , 7 @ @ private [ group ] final class GroupProcessor ( < nl > < nl > override def persistenceId = GroupOffice . persistenceIdFor ( groupId ) < nl > < nl > - context . setReceiveTimeout ( 15 . minutes ) < nl > + context . setReceiveTimeout ( 1 . hour ) < nl > < nl > private val MaxCacheSize = 100L < nl > < nl > diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala < nl > index b3fcc02 . . 0280d61 100644 < nl > - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala < nl > + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala < nl > @ @ - 152 , 7 + 152 , 7 @ @ private [ user ] final class UserProcessor ( < nl > protected implicit val sendResponseCache : Cache [ AuthIdRandomId , Future [ SeqStateDate ] ] = < nl > createCache [ AuthIdRandomId , Future [ SeqStateDate ] ] ( MaxCacheSize ) < nl > < nl > - context . setReceiveTimeout ( 15 . minutes ) < nl > + context . setReceiveTimeout ( 1 . hour ) < nl > < nl > override def updatedState ( evt : TSEvent , state : User ) : User = { < nl > evt match { < nl > diff - - git a / actor - server / actor - push / src / main / resources / reference . conf b / actor - server / actor - push / src / main / resources / reference . conf < nl > index c998675 . . ba270b0 100644 < nl > - - - a / actor - server / actor - push / src / main / resources / reference . conf < nl > + + + b / actor - server / actor - push / src / main / resources / reference . conf < nl > @ @ - 31 , 7 + 31 , 7 @ @ push . apple { < nl > < nl > push { < nl > seq - updates - manager { < nl > - receive - timeout = 120 seconds < nl > + receive - timeout = 1 hour < nl > } < nl > } < nl > < nl > diff - - git a / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala b / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala < nl > index 6202310 . . 128c22a 100644 < nl > - - - a / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala < nl > + + + b / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala < nl > @ @ - 68 , 7 + 68 , 7 @ @ object SeqUpdatesManager { < nl > type Sequence = Int < nl > < nl > / / TODO : configurable < nl > - private val OperationTimeout = Timeout ( 5 . seconds ) < nl > + private val OperationTimeout = Timeout ( 30 . seconds ) < nl > < nl > def getSeqState ( authId : Long ) ( implicit region : SeqUpdatesManagerRegion , ec : ExecutionContext ) : DBIO [ SeqState ] = { < nl > for {

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala 
 index a8e6fb7 . . 3d838ec 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserProcessor . scala 
 @ @ - 310 , 11 + 310 , 7 @ @ private [ user ] final class UserProcessor 
 } 
 
 private def dialogRef ( state : UserState , peer : Peer ) : ActorRef = 
 - try { 
 - context . child ( dialogName ( peer ) ) getOrElse context . actorOf ( DialogProcessor . props ( userId , peer , state . internalExtensions ) , dialogName ( peer ) ) 
 - } catch { 
 - case _ : InvalidActorNameException ⇒ dialogRef ( state , peer ) 
 - } 
 + context . child ( dialogName ( peer ) ) getOrElse context . actorOf ( DialogProcessor . props ( userId , peer , state . internalExtensions ) , dialogName ( peer ) ) 
 
 private def dialogRoot ( extensions : Seq [ ApiExtension ] ) : ActorRef = { 
 val name = " DialogRoot "

NEAREST DIFF:
diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala 
 index c83135b . . b3d8f2a 100644 
 - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala 
 + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / group / GroupProcessor . scala 
 @ @ - 142 , 7 + 142 , 7 @ @ private [ group ] final class GroupProcessor ( 
 
 override def persistenceId = GroupOffice . persistenceIdFor ( groupId ) 
 
 - context . setReceiveTimeout ( 15 . minutes ) 
 + context . setReceiveTimeout ( 1 . hour ) 
 
 private val MaxCacheSize = 100L 
 
 diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala 
 index b3fcc02 . . 0280d61 100644 
 - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala 
 + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserProcessor . scala 
 @ @ - 152 , 7 + 152 , 7 @ @ private [ user ] final class UserProcessor ( 
 protected implicit val sendResponseCache : Cache [ AuthIdRandomId , Future [ SeqStateDate ] ] = 
 createCache [ AuthIdRandomId , Future [ SeqStateDate ] ] ( MaxCacheSize ) 
 
 - context . setReceiveTimeout ( 15 . minutes ) 
 + context . setReceiveTimeout ( 1 . hour ) 
 
 override def updatedState ( evt : TSEvent , state : User ) : User = { 
 evt match { 
 diff - - git a / actor - server / actor - push / src / main / resources / reference . conf b / actor - server / actor - push / src / main / resources / reference . conf 
 index c998675 . . ba270b0 100644 
 - - - a / actor - server / actor - push / src / main / resources / reference . conf 
 + + + b / actor - server / actor - push / src / main / resources / reference . conf 
 @ @ - 31 , 7 + 31 , 7 @ @ push . apple { 
 
 push { 
 seq - updates - manager { 
 - receive - timeout = 120 seconds 
 + receive - timeout = 1 hour 
 } 
 } 
 
 diff - - git a / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala b / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala 
 index 6202310 . . 128c22a 100644 
 - - - a / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala 
 + + + b / actor - server / actor - push / src / main / scala / im / actor / server / push / SeqUpdatesManager . scala 
 @ @ - 68 , 7 + 68 , 7 @ @ object SeqUpdatesManager { 
 type Sequence = Int 
 
 / / TODO : configurable 
 - private val OperationTimeout = Timeout ( 5 . seconds ) 
 + private val OperationTimeout = Timeout ( 30 . seconds ) 
 
 def getSeqState ( authId : Long ) ( implicit region : SeqUpdatesManagerRegion , ec : ExecutionContext ) : DBIO [ SeqState ] = { 
 for {
