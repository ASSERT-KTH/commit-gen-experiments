BLEU SCORE: 0.10600313379512592

TEST MSG: feat ( android - sdk ) : messagesAdapter bind custom holders
GENERATED MSG: feat ( core ) : Added extensions support

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > index 90bb72d . . 0602ada 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > @ @ - 19 , 6 + 19 , 7 @ @ import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > import im . actor . core . entity . content . VoiceContent ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > + import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . runtime . android . view . BindedListAdapter ; < nl > import im . actor . sdk . controllers . fragment . ActorBinder ; < nl > @ @ - 110 , 26 + 111 , 66 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { < nl > } < nl > < nl > @ Override < nl > - public MessageHolder onCreateViewHolder ( ViewGroup viewGroup , int viewType ) { < nl > + public MessageHolder onCreateViewHolder ( final ViewGroup viewGroup , int viewType ) { < nl > switch ( viewType ) { < nl > case 0 : < nl > - return new TextHolder ( this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( TextHolder . class , new ActorSDK . OnDelegateViewHolder < TextHolder > ( ) { < nl > + @ Override < nl > + public TextHolder onNotDelegated ( ) { < nl > + return new TextHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > case 1 : < nl > - return new ServiceHolder ( this , inflate ( R . layout . adapter _ dialog _ service , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( ServiceHolder . class , new ActorSDK . OnDelegateViewHolder < ServiceHolder > ( ) { < nl > + @ Override < nl > + public ServiceHolder onNotDelegated ( ) { < nl > + return new ServiceHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ service , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ service , viewGroup ) ) ; < nl > case 2 : < nl > - return new PhotoHolder ( this , inflate ( R . layout . adapter _ dialog _ photo , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( PhotoHolder . class , new ActorSDK . OnDelegateViewHolder < PhotoHolder > ( ) { < nl > + @ Override < nl > + public PhotoHolder onNotDelegated ( ) { < nl > + return new PhotoHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ photo , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ photo , viewGroup ) ) ; < nl > case 3 : < nl > - return new DocHolder ( this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( DocHolder . class , new ActorSDK . OnDelegateViewHolder < DocHolder > ( ) { < nl > + @ Override < nl > + public DocHolder onNotDelegated ( ) { < nl > + return new DocHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; < nl > case 4 : < nl > - return new AudioHolder ( this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( AudioHolder . class , new ActorSDK . OnDelegateViewHolder < AudioHolder > ( ) { < nl > + @ Override < nl > + public AudioHolder onNotDelegated ( ) { < nl > + return new AudioHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; < nl > case 5 : < nl > - return new ContactHolder ( this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( ContactHolder . class , new ActorSDK . OnDelegateViewHolder < ContactHolder > ( ) { < nl > + @ Override < nl > + public ContactHolder onNotDelegated ( ) { < nl > + return new ContactHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; < nl > case 6 : < nl > - return new LocationHolder ( this , inflate ( R . layout . adapter _ dialog _ locaton , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( LocationHolder . class , new ActorSDK . OnDelegateViewHolder < LocationHolder > ( ) { < nl > + @ Override < nl > + public LocationHolder onNotDelegated ( ) { < nl > + return new LocationHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ locaton , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ locaton , viewGroup ) ) ; < nl > case 7 : < nl > - return new StickerHolder ( this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; < nl > + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( StickerHolder . class , new ActorSDK . OnDelegateViewHolder < StickerHolder > ( ) { < nl > + @ Override < nl > + public StickerHolder onNotDelegated ( ) { < nl > + return new StickerHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; < nl > + } < nl > + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; < nl > default : < nl > - return new UnsupportedHolder ( this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > + return new UnsupportedHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 34b7178 . . 301edca 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 1549 , 6 + 1549 , 24 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Change text size < nl > + * < nl > + * @ param val new chat text size < nl > + * / < nl > + @ ObjectiveCName ( " changeTextSizeWithValue : " ) < nl > + public void changeTextSize ( int val ) { < nl > + modules . getSettingsModule ( ) . changeTextSize ( val ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Get text size < nl > + * / < nl > + @ ObjectiveCName ( " getTextSize " ) < nl > + public int getTextSize ( ) { < nl > + return modules . getSettingsModule ( ) . getTextSize ( ) ; < nl > + } < nl > + < nl > + / * * < nl > * Get privacy state < nl > * < nl > * @ return privacy state
NEAREST DIFF (one line): diff - - git a / . gitignore b / . gitignore < nl > index a882b44 . . 59a9cde 100644 < nl > - - - a / . gitignore < nl > + + + b / . gitignore < nl > @ @ - 114 , 3 + 114 , 4 @ @ actor - sdk / sdk - ios / ActorSDK . xcworkspace / xcuserdata < nl > actor - sdk / sdk - ios / Pods < nl > actor - sdk / sdk - ios / ActorSDK . xcodeproj / xcuserdata < nl > actor - sdk / sdk - ios / ActorSDK . xcworkspace < nl > + actor - sdk / sdk - extension / ext / build < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java < nl > index 7aadc31 . . 29d746f 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java < nl > @ @ - 11 , 6 + 11 , 8 @ @ import im . actor . runtime . mtproto . ConnectionEndpoint ; < nl > * / < nl > public class Configuration { < nl > < nl > + private final ConfigurationExtension [ ] extensions ; < nl > + < nl > private final ConnectionEndpoint [ ] endpoints ; < nl > < nl > private PhoneBookProvider phoneBookProvider ; < nl > @ @ - 44 , 7 + 46 , 8 @ @ public class Configuration { < nl > PlatformType platformType , < nl > int minDelay , < nl > int maxDelay , < nl > - int maxFailureCount ) { < nl > + int maxFailureCount , < nl > + ConfigurationExtension [ ] extensions ) { < nl > this . endpoints = endpoints ; < nl > this . phoneBookProvider = phoneBookProvider ; < nl > this . enableContactsLogging = enableContactsLogging ; < nl > @ @ - 57 , 6 + 60 , 16 @ @ public class Configuration { < nl > this . minDelay = minDelay ; < nl > this . maxDelay = maxDelay ; < nl > this . maxFailureCount = maxFailureCount ; < nl > + this . extensions = extensions ; < nl > + } < nl > + < nl > + / * * < nl > + * Get configured extensions < nl > + * < nl > + * @ return extensions < nl > + * / < nl > + public ConfigurationExtension [ ] getExtensions ( ) { < nl > + return extensions ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > index b3fba86 . . dff56cb 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > @ @ - 17 , 6 + 17 , 7 @ @ import im . actor . runtime . mtproto . ConnectionEndpoint ; < nl > * / < nl > public class ConfigurationBuilder { < nl > < nl > + private ArrayList < ConfigurationExtension > extensions = new ArrayList < ConfigurationExtension > ( ) ; < nl > private ArrayList < ConnectionEndpoint > endpoints = new ArrayList < ConnectionEndpoint > ( ) ; < nl > < nl > private PhoneBookProvider phoneBookProvider ; < nl > @ @ - 178 , 6 + 179 , 18 @ @ public class ConfigurationBuilder { < nl > } < nl > < nl > / * * < nl > + * Adding app extension < nl > + * < nl > + * @ param key extension key < nl > + * @ param extension extension < nl > + * @ return this < nl > + * / < nl > + public ConfigurationBuilder addExtension ( String key , Extension extension ) { < nl > + this . extensions . add ( new ConfigurationExtension ( key , extension ) ) ; < nl > + return this ; < nl > + } < nl > + < nl > + / * * < nl > * Adding Endpoint for API < nl > * Valid URLs are : < nl > * tcp : / / [ host ] : [ port ] < nl > @ @ - 258 , 6 + 271 , 7 @ @ public class ConfigurationBuilder { < nl > phoneBookProvider , notificationProvider , < nl > apiConfiguration , enableContactsLogging , enableNetworkLogging , < nl > enableFilesLogging , deviceCategory , platformType , < nl > - minDelay , maxDelay , maxFailureCount ) ; < nl > + minDelay , maxDelay , maxFailureCount , < nl > + extensions . toArray ( new ConfigurationExtension [ extensions . size ( ) ] ) ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationExtension . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationExtension . java < nl > new file mode 100644 < nl > index 0000000 . . e964a7d < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationExtension . java < nl > @ @ - 0 , 0 + 1 , 20 @ @ < nl > + package im . actor . core ; < nl > + < nl > + public class ConfigurationExtension { < nl > + < nl > + private String key ; < nl > + private Extension extension ; < nl > + < nl > + public ConfigurationExtension ( String key , Extension extension ) { < nl > + this . key = key ; < nl > + this . extension = extension ; < nl > + } < nl > + < nl > + public String getKey ( ) { < nl > + return key ; < nl > + } < nl > + < nl > + public Extension getExtension ( ) { < nl > + return extension ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java < nl > index f251256 . . ea6736b 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java < nl > @ @ - 8 , 13 + 8 , 6 @ @ import im . actor . core . modules . ModuleContext ; < nl > public interface Extension { < nl > < nl > / * * < nl > - * Get unique extension key < nl > - * < nl > - * @ return extension key < nl > - * / < nl > - String getExtensionKey ( ) ; < nl > - < nl > - / * * < nl > * Performing registration of extension before Messenger run < nl > * < nl > * @ param context Module context < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java < nl > index 9088883 . . f97ea13 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java < nl > @ @ - 8 , 6 + 8 , 7 @ @ import im . actor . core . modules . utils . PreferenceApiStorage ; < nl > import im . actor . core . network . ActorApi ; < nl > import im . actor . core . network . ActorApiCallback ; < nl > import im . actor . core . network . Endpoints ; < nl > + import im . actor . core . network . parser . ApiParserConfig ; < nl > import im . actor . core . network . parser . Request ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > @ @ - 21 , 6 + 22 , 7 @ @ public class ApiModule extends AbsModule implements BusSubscriber { < nl > < nl > private final ActorApi actorApi ; < nl > private final ActorRef persistentRequests ; < nl > + private final ApiParserConfig parserConfig = new ApiParserConfig ( ) ; < nl > < nl > public ApiModule ( Modules context ) { < nl > super ( context ) ; < nl > @ @ - 31 , 7 + 33 , 7 @ @ public class ApiModule extends AbsModule implements BusSubscriber { < nl > context ( ) . getConfiguration ( ) . isEnableNetworkLogging ( ) , < nl > context ( ) . getConfiguration ( ) . getMinDelay ( ) , < nl > context ( ) . getConfiguration ( ) . getMaxDelay ( ) , < nl > - context ( ) . getConfiguration ( ) . getMaxFailureCount ( ) ) ; < nl > + context ( ) . getConfiguration ( ) . getMaxFailureCount ( ) , parserConfig ) ; < nl > < nl > context . getEvents ( ) . subscribe ( this , AppVisibleChanged . EVENT ) ; < nl > < nl > @ @ - 43 , 12 + 45 , 25 @ @ public class ApiModule extends AbsModule implements BusSubscriber { < nl > } ) , " api / persistence " ) ; < nl > } < nl > < nl > - < nl > + / * * < nl > + * Get Actor API instance < nl > + * < nl > + * @ return Actor API instance < nl > + * / < nl > public ActorApi getActorApi ( ) { < nl > return actorApi ; < nl > } < nl > < nl > / * * < nl > + * Get API Parser configuration < nl > + * < nl > + * @ return Actor API parser config < nl > + * / < nl > + public ApiParserConfig getParserConfig ( ) { < nl > + return parserConfig ; < nl > + } < nl > + < nl > + / * * < nl > * Performing persist request . Keep repeating request even after application restart < nl > * < nl > * @ param request request < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Extensions . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Extensions . java < nl > new file mode 100644 < nl > index 0000000 . . 6877c1d < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Extensions . java < nl > @ @ - 0 , 0 + 1 , 57 @ @ < nl > + package im . actor . core . modules ; < nl > + < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . Extension ; < nl > + < nl > + public class Extensions extends AbsModule { < nl > + < nl > + private ArrayList < ExtensionRef > extensionRefs = new ArrayList < ExtensionRef > ( ) ; < nl > + < nl > + public Extensions ( ModuleContext context ) { < nl > + super ( context ) ; < nl > + } < nl > + < nl > + public void registerExtension ( String key , Extension extension ) { < nl > + extensionRefs . add ( new ExtensionRef ( key , extension ) ) ; < nl > + } < nl > + < nl > + public Extension findExtension ( String key ) { < nl > + for ( ExtensionRef r : extensionRefs ) { < nl > + if ( r . getKey ( ) . equals ( key ) ) { < nl > + return r . getExtension ( ) ; < nl > + } < nl > + } < nl > + return null ; < nl > + } < nl > + < nl > + public void registerExtensions ( ) { < nl > + for ( ExtensionRef r : extensionRefs ) { < nl > + r . getExtension ( ) . registerExtension ( context ( ) ) ; < nl > + } < nl > + } < nl > + < nl > + public void runExtensions ( ) { < nl > + for ( ExtensionRef r : extensionRefs ) { < nl > + r . getExtension ( ) . runExtension ( ) ; < nl > + } < nl > + } < nl > + < nl > + private class ExtensionRef { < nl > + private String key ; < nl > + private Extension extension ; < nl > + < nl > + public ExtensionRef ( String key , Extension extension ) { < nl > + this . key = key ; < nl > + this . extension = extension ; < nl > + } < nl > + < nl > + public String getKey ( ) { < nl > + return key ; < nl > + } < nl > + < nl > + public Extension getExtension ( ) { < nl > + return extension ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java < nl > index 36a6d73 . . f5c5862 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java < nl > @ @ - 83 , 4 + 83 , 6 @ @ public interface ModuleContext { < nl > Messenger getMessenger ( ) ; < nl > < nl > MentionsModule getMentions ( ) ; < nl > + < nl > + Extensions getExtensions ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java < nl > index a82d6b9 . . 9f80b34 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java < nl > @ @ - 5 , 7 + 5 , 7 @ @ < nl > package im . actor . core . modules ; < nl > < nl > import im . actor . core . Configuration ; < nl > - import im . actor . core . Extension ; < nl > + import im . actor . core . ConfigurationExtension ; < nl > import im . actor . core . Messenger ; < nl > import im . actor . core . i18n . I18nEngine ; < nl > import im . actor . core . modules . internal . AppStateModule ; < nl > @ @ - 49 , 6 + 49 , 7 @ @ public class Modules implements ModuleContext { < nl > private final AppStateModule appStateModule ; < nl > private final ExternalModule external ; < nl > private final Authentication authentication ; < nl > + private final Extensions extensions ; < nl > < nl > / / Modules for authenticated users < nl > private volatile Updates updates ; < nl > @ @ - 86 , 6 + 87 , 9 @ @ public class Modules implements ModuleContext { < nl > timing . section ( " API " ) ; < nl > this . api = new ApiModule ( this ) ; < nl > < nl > + timing . section ( " Extensions " ) ; < nl > + this . extensions = new Extensions ( this ) ; < nl > + < nl > timing . section ( " App State " ) ; < nl > this . appStateModule = new AppStateModule ( this ) ; < nl > < nl > @ @ - 95 , 6 + 99 , 12 @ @ public class Modules implements ModuleContext { < nl > timing . section ( " Pushes " ) ; < nl > this . pushes = new PushesModule ( this ) ; < nl > < nl > + timing . section ( " Extensions " ) ; < nl > + for ( ConfigurationExtension e : configuration . getExtensions ( ) ) { < nl > + this . extensions . registerExtension ( e . getKey ( ) , e . getExtension ( ) ) ; < nl > + } < nl > + this . extensions . registerExtensions ( ) ; < nl > + < nl > timing . section ( " Auth " ) ; < nl > this . authentication = new Authentication ( this ) ; < nl > this . authentication . run ( ) ; < nl > @ @ - 153 , 6 + 163 , 8 @ @ public class Modules implements ModuleContext { < nl > messages . run ( ) ; < nl > timing . section ( " Updates " ) ; < nl > updates . run ( ) ; < nl > + timing . section ( " Extensions " ) ; < nl > + extensions . runExtensions ( ) ; < nl > timing . end ( ) ; < nl > < nl > messenger . onLoggedIn ( ) ; < nl > @ @ - 271 , 6 + 283 , 11 @ @ public class Modules implements ModuleContext { < nl > return mentions ; < nl > } < nl > < nl > + @ Override < nl > + public Extensions getExtensions ( ) { < nl > + return extensions ; < nl > + } < nl > + < nl > public EventBus getEvents ( ) { < nl > return events ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java < nl > index e0f2058 . . a019d60 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java < nl > @ @ - 5 , 6 + 5 , 7 @ @ < nl > package im . actor . core . network ; < nl > < nl > import im . actor . core . api . ApiVersion ; < nl > + import im . actor . core . network . parser . ApiParserConfig ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . core . network . api . ApiBroker ; < nl > import im . actor . core . network . parser . Request ; < nl > @ @ - 42 , 7 + 43 , 8 @ @ public class ActorApi { < nl > public ActorApi ( Endpoints endpoints , AuthKeyStorage keyStorage , ActorApiCallback callback , < nl > boolean isEnableLog , int minDelay , < nl > int maxDelay , < nl > - int maxFailureCount ) { < nl > + int maxFailureCount , < nl > + ApiParserConfig parserConfig ) { < nl > this . endpoints = endpoints ; < nl > this . keyStorage = keyStorage ; < nl > this . callback = callback ; < nl > @ @ - 51 , 7 + 53 , 7 @ @ public class ActorApi { < nl > this . maxDelay = maxDelay ; < nl > this . maxFailureCount = maxFailureCount ; < nl > this . apiBroker = ApiBroker . get ( endpoints , keyStorage , callback , isEnableLog , < nl > - NEXT _ ID . get ( ) , minDelay , maxDelay , maxFailureCount ) ; < nl > + NEXT _ ID . get ( ) , minDelay , maxDelay , maxFailureCount , parserConfig ) ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java < nl > index 9786886 . . 207ffca 100644 < nl > - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java < nl > @ @ - 8 , 6 + 8 , 7 @ @ import java . io . IOException ; < nl > import java . util . HashMap ; < nl > < nl > import im . actor . core . api . parser . RpcParser ; < nl > + import im . actor . core . network . parser . ApiParserConfig ; < nl > import im . actor . runtime . * ; < nl > import im . actor . runtime . Runtime ; < nl > import im . actor . runtime . actors . Actor ; < nl > @ @ - 46 , 13 + 47 , 14 @ @ public class ApiBroker extends Actor { < nl > public static ActorRef get ( final Endpoints endpoints , final AuthKeyStorage keyStorage , final ActorApiCallback callback , < nl > final boolean isEnableLog , int id , final int minDelay , < nl > final int maxDelay , < nl > - final int maxFailureCount ) { < nl > + final int maxFailureCount , < nl > + final ApiParserConfig parserConfig ) { < nl > return ActorSystem . system ( ) . actorOf ( Props . create ( ApiBroker . class , new ActorCreator < ApiBroker > ( ) { < nl > @ Override < nl > public ApiBroker create ( ) { < nl > return new ApiBroker ( endpoints , keyStorage , callback , isEnableLog , minDelay , < nl > maxDelay , < nl > - maxFailureCount ) ; < nl > + maxFailureCount , parserConfig ) ; < nl > } < nl > } ) . changeDispatcher ( " network " ) , " api / broker # " + id ) ; < nl > } < nl > @ @ - 77 , 9 + 79 , 12 @ @ public class ApiBroker extends Actor { < nl > < nl > private ExponentialBackoff authIdBackOff ; < nl > < nl > + private ApiParserConfig parserConfig ; < nl > + < nl > public ApiBroker ( Endpoints endpoints , AuthKeyStorage keyStorage , < nl > ActorApiCallback callback , < nl > - boolean isEnableLog , int minDelay , int maxDelay , int maxFailureCount ) { < nl > + boolean isEnableLog , int minDelay , int maxDelay , int maxFailureCount , < nl > + ApiParserConfig parserConfig ) { < nl > this . isEnableLog = isEnableLog ; < nl > this . endpoints = endpoints ; < nl > this . keyStorage = keyStorage ; < nl > @ @ - 87 , 7 + 92 , 8 @ @ public class ApiBroker extends Actor { < nl > this . minDelay = minDelay ; < nl > this . maxDelay = maxDelay ; < nl > this . maxFailureCount = maxFailureCount ; < nl > - authIdBackOff = new ExponentialBackoff ( minDelay , maxDelay , maxFailureCount ) ; < nl > + this . authIdBackOff = new ExponentialBackoff ( minDelay , maxDelay , maxFailureCount ) ; < nl > + this . parserConfig = parserConfig ; < nl > } < nl > < nl > @ Override < nl > @ @ - 249 , 7 + 255 , 7 @ @ public class ApiBroker extends Actor { < nl > < nl > Response response ; < nl > try { < nl > - response = ( Response ) new RpcParser ( ) . read ( ok . responseType , ok . payload ) ; < nl > + response = ( Response ) parserConfig . parseRpc ( ok . responseType , ok . payload ) ; < nl > } catch ( IOException e ) { < nl > e . printStackTrace ( ) ; < nl > return ; < nl > @ @ - 337 , 7 + 343 , 7 @ @ public class ApiBroker extends Actor { < nl > < nl > RpcScope updateBox ; < nl > try { < nl > - updateBox = new RpcParser ( ) . read ( type , body ) ; < nl > + updateBox = parserConfig . parseRpc ( type , body ) ; < nl > } catch ( IOException e ) { < nl > e . printStackTrace ( ) ; < nl > Log . w ( TAG , " Broken update box " ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ApiParserConfig . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ApiParserConfig . java < nl > new file mode 100644 < nl > index 0000000 . . d54fc83 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ApiParserConfig . java < nl > @ @ - 0 , 0 + 1 , 30 @ @ < nl > + package im . actor . core . network . parser ; < nl > + < nl > + import java . io . IOException ; < nl > + import java . util . concurrent . CopyOnWriteArrayList ; < nl > + < nl > + import im . actor . core . api . parser . RpcParser ; < nl > + import im . actor . core . api . parser . UpdatesParser ; < nl > + < nl > + public class ApiParserConfig { < nl > + < nl > + private RpcParser rpcRarser = new RpcParser ( ) ; < nl > + private UpdatesParser updatesParser = new UpdatesParser ( ) ; < nl > + private CopyOnWriteArrayList < ParsingExtension > extensions = new CopyOnWriteArrayList < ParsingExtension > ( ) ; < nl > + < nl > + public void addExtension ( ParsingExtension extension ) { < nl > + extensions . add ( extension ) ; < nl > + } < nl > + < nl > + public RpcScope parseRpc ( int header , byte [ ] content ) throws IOException { < nl > + for ( ParsingExtension ex : extensions ) { < nl > + try { < nl > + return ex . getRpcScopeParser ( ) . read ( header , content ) ; < nl > + } catch ( Exception e ) { < nl > + / / Ignore < nl > + } < nl > + } < nl > + < nl > + return rpcRarser . read ( header , content ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ParsingExtension . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ParsingExtension . java < nl > new file mode 100644 < nl > index 0000000 . . dbcbf08 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ParsingExtension . java < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + package im . actor . core . network . parser ; < nl > + < nl > + public class ParsingExtension { < nl > + < nl > + private BaseParser < RpcScope > rpcScopeParser ; < nl > + < nl > + private BaseParser < Update > updateScopeParser ; < nl > + < nl > + public ParsingExtension ( BaseParser < RpcScope > rpcScopeParser , BaseParser < Update > updateScopeParser ) { < nl > + this . rpcScopeParser = rpcScopeParser ; < nl > + this . updateScopeParser = updateScopeParser ; < nl > + } < nl > + < nl > + public BaseParser < RpcScope > getRpcScopeParser ( ) { < nl > + return rpcScopeParser ; < nl > + } < nl > + < nl > + public BaseParser < Update > getUpdateScopeParser ( ) { < nl > + return updateScopeParser ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 index 90bb72d . . 0602ada 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 @ @ - 19 , 6 + 19 , 7 @ @ import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 import im . actor . core . entity . content . VoiceContent ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 + import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . runtime . android . view . BindedListAdapter ; 
 import im . actor . sdk . controllers . fragment . ActorBinder ; 
 @ @ - 110 , 26 + 111 , 66 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { 
 } 
 
 @ Override 
 - public MessageHolder onCreateViewHolder ( ViewGroup viewGroup , int viewType ) { 
 + public MessageHolder onCreateViewHolder ( final ViewGroup viewGroup , int viewType ) { 
 switch ( viewType ) { 
 case 0 : 
 - return new TextHolder ( this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( TextHolder . class , new ActorSDK . OnDelegateViewHolder < TextHolder > ( ) { 
 + @ Override 
 + public TextHolder onNotDelegated ( ) { 
 + return new TextHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 case 1 : 
 - return new ServiceHolder ( this , inflate ( R . layout . adapter _ dialog _ service , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( ServiceHolder . class , new ActorSDK . OnDelegateViewHolder < ServiceHolder > ( ) { 
 + @ Override 
 + public ServiceHolder onNotDelegated ( ) { 
 + return new ServiceHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ service , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ service , viewGroup ) ) ; 
 case 2 : 
 - return new PhotoHolder ( this , inflate ( R . layout . adapter _ dialog _ photo , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( PhotoHolder . class , new ActorSDK . OnDelegateViewHolder < PhotoHolder > ( ) { 
 + @ Override 
 + public PhotoHolder onNotDelegated ( ) { 
 + return new PhotoHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ photo , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ photo , viewGroup ) ) ; 
 case 3 : 
 - return new DocHolder ( this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( DocHolder . class , new ActorSDK . OnDelegateViewHolder < DocHolder > ( ) { 
 + @ Override 
 + public DocHolder onNotDelegated ( ) { 
 + return new DocHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; 
 case 4 : 
 - return new AudioHolder ( this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( AudioHolder . class , new ActorSDK . OnDelegateViewHolder < AudioHolder > ( ) { 
 + @ Override 
 + public AudioHolder onNotDelegated ( ) { 
 + return new AudioHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; 
 case 5 : 
 - return new ContactHolder ( this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( ContactHolder . class , new ActorSDK . OnDelegateViewHolder < ContactHolder > ( ) { 
 + @ Override 
 + public ContactHolder onNotDelegated ( ) { 
 + return new ContactHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; 
 case 6 : 
 - return new LocationHolder ( this , inflate ( R . layout . adapter _ dialog _ locaton , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( LocationHolder . class , new ActorSDK . OnDelegateViewHolder < LocationHolder > ( ) { 
 + @ Override 
 + public LocationHolder onNotDelegated ( ) { 
 + return new LocationHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ locaton , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ locaton , viewGroup ) ) ; 
 case 7 : 
 - return new StickerHolder ( this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; 
 + return ActorSDK . sharedActor ( ) . getDelegatedViewHolder ( StickerHolder . class , new ActorSDK . OnDelegateViewHolder < StickerHolder > ( ) { 
 + @ Override 
 + public StickerHolder onNotDelegated ( ) { 
 + return new StickerHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; 
 + } 
 + } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; 
 default : 
 - return new UnsupportedHolder ( this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 + return new UnsupportedHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 34b7178 . . 301edca 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 1549 , 6 + 1549 , 24 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Change text size 
 + * 
 + * @ param val new chat text size 
 + * / 
 + @ ObjectiveCName ( " changeTextSizeWithValue : " ) 
 + public void changeTextSize ( int val ) { 
 + modules . getSettingsModule ( ) . changeTextSize ( val ) ; 
 + } 
 + 
 + / * * 
 + * Get text size 
 + * / 
 + @ ObjectiveCName ( " getTextSize " ) 
 + public int getTextSize ( ) { 
 + return modules . getSettingsModule ( ) . getTextSize ( ) ; 
 + } 
 + 
 + / * * 
 * Get privacy state 
 * 
 * @ return privacy state

NEAREST DIFF:
diff - - git a / . gitignore b / . gitignore 
 index a882b44 . . 59a9cde 100644 
 - - - a / . gitignore 
 + + + b / . gitignore 
 @ @ - 114 , 3 + 114 , 4 @ @ actor - sdk / sdk - ios / ActorSDK . xcworkspace / xcuserdata 
 actor - sdk / sdk - ios / Pods 
 actor - sdk / sdk - ios / ActorSDK . xcodeproj / xcuserdata 
 actor - sdk / sdk - ios / ActorSDK . xcworkspace 
 + actor - sdk / sdk - extension / ext / build 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java 
 index 7aadc31 . . 29d746f 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Configuration . java 
 @ @ - 11 , 6 + 11 , 8 @ @ import im . actor . runtime . mtproto . ConnectionEndpoint ; 
 * / 
 public class Configuration { 
 
 + private final ConfigurationExtension [ ] extensions ; 
 + 
 private final ConnectionEndpoint [ ] endpoints ; 
 
 private PhoneBookProvider phoneBookProvider ; 
 @ @ - 44 , 7 + 46 , 8 @ @ public class Configuration { 
 PlatformType platformType , 
 int minDelay , 
 int maxDelay , 
 - int maxFailureCount ) { 
 + int maxFailureCount , 
 + ConfigurationExtension [ ] extensions ) { 
 this . endpoints = endpoints ; 
 this . phoneBookProvider = phoneBookProvider ; 
 this . enableContactsLogging = enableContactsLogging ; 
 @ @ - 57 , 6 + 60 , 16 @ @ public class Configuration { 
 this . minDelay = minDelay ; 
 this . maxDelay = maxDelay ; 
 this . maxFailureCount = maxFailureCount ; 
 + this . extensions = extensions ; 
 + } 
 + 
 + / * * 
 + * Get configured extensions 
 + * 
 + * @ return extensions 
 + * / 
 + public ConfigurationExtension [ ] getExtensions ( ) { 
 + return extensions ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 index b3fba86 . . dff56cb 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 @ @ - 17 , 6 + 17 , 7 @ @ import im . actor . runtime . mtproto . ConnectionEndpoint ; 
 * / 
 public class ConfigurationBuilder { 
 
 + private ArrayList < ConfigurationExtension > extensions = new ArrayList < ConfigurationExtension > ( ) ; 
 private ArrayList < ConnectionEndpoint > endpoints = new ArrayList < ConnectionEndpoint > ( ) ; 
 
 private PhoneBookProvider phoneBookProvider ; 
 @ @ - 178 , 6 + 179 , 18 @ @ public class ConfigurationBuilder { 
 } 
 
 / * * 
 + * Adding app extension 
 + * 
 + * @ param key extension key 
 + * @ param extension extension 
 + * @ return this 
 + * / 
 + public ConfigurationBuilder addExtension ( String key , Extension extension ) { 
 + this . extensions . add ( new ConfigurationExtension ( key , extension ) ) ; 
 + return this ; 
 + } 
 + 
 + / * * 
 * Adding Endpoint for API 
 * Valid URLs are : 
 * tcp : / / [ host ] : [ port ] 
 @ @ - 258 , 6 + 271 , 7 @ @ public class ConfigurationBuilder { 
 phoneBookProvider , notificationProvider , 
 apiConfiguration , enableContactsLogging , enableNetworkLogging , 
 enableFilesLogging , deviceCategory , platformType , 
 - minDelay , maxDelay , maxFailureCount ) ; 
 + minDelay , maxDelay , maxFailureCount , 
 + extensions . toArray ( new ConfigurationExtension [ extensions . size ( ) ] ) ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationExtension . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationExtension . java 
 new file mode 100644 
 index 0000000 . . e964a7d 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / ConfigurationExtension . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package im . actor . core ; 
 + 
 + public class ConfigurationExtension { 
 + 
 + private String key ; 
 + private Extension extension ; 
 + 
 + public ConfigurationExtension ( String key , Extension extension ) { 
 + this . key = key ; 
 + this . extension = extension ; 
 + } 
 + 
 + public String getKey ( ) { 
 + return key ; 
 + } 
 + 
 + public Extension getExtension ( ) { 
 + return extension ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java 
 index f251256 . . ea6736b 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / Extension . java 
 @ @ - 8 , 13 + 8 , 6 @ @ import im . actor . core . modules . ModuleContext ; 
 public interface Extension { 
 
 / * * 
 - * Get unique extension key 
 - * 
 - * @ return extension key 
 - * / 
 - String getExtensionKey ( ) ; 
 - 
 - / * * 
 * Performing registration of extension before Messenger run 
 * 
 * @ param context Module context 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java 
 index 9088883 . . f97ea13 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ApiModule . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import im . actor . core . modules . utils . PreferenceApiStorage ; 
 import im . actor . core . network . ActorApi ; 
 import im . actor . core . network . ActorApiCallback ; 
 import im . actor . core . network . Endpoints ; 
 + import im . actor . core . network . parser . ApiParserConfig ; 
 import im . actor . core . network . parser . Request ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 @ @ - 21 , 6 + 22 , 7 @ @ public class ApiModule extends AbsModule implements BusSubscriber { 
 
 private final ActorApi actorApi ; 
 private final ActorRef persistentRequests ; 
 + private final ApiParserConfig parserConfig = new ApiParserConfig ( ) ; 
 
 public ApiModule ( Modules context ) { 
 super ( context ) ; 
 @ @ - 31 , 7 + 33 , 7 @ @ public class ApiModule extends AbsModule implements BusSubscriber { 
 context ( ) . getConfiguration ( ) . isEnableNetworkLogging ( ) , 
 context ( ) . getConfiguration ( ) . getMinDelay ( ) , 
 context ( ) . getConfiguration ( ) . getMaxDelay ( ) , 
 - context ( ) . getConfiguration ( ) . getMaxFailureCount ( ) ) ; 
 + context ( ) . getConfiguration ( ) . getMaxFailureCount ( ) , parserConfig ) ; 
 
 context . getEvents ( ) . subscribe ( this , AppVisibleChanged . EVENT ) ; 
 
 @ @ - 43 , 12 + 45 , 25 @ @ public class ApiModule extends AbsModule implements BusSubscriber { 
 } ) , " api / persistence " ) ; 
 } 
 
 - 
 + / * * 
 + * Get Actor API instance 
 + * 
 + * @ return Actor API instance 
 + * / 
 public ActorApi getActorApi ( ) { 
 return actorApi ; 
 } 
 
 / * * 
 + * Get API Parser configuration 
 + * 
 + * @ return Actor API parser config 
 + * / 
 + public ApiParserConfig getParserConfig ( ) { 
 + return parserConfig ; 
 + } 
 + 
 + / * * 
 * Performing persist request . Keep repeating request even after application restart 
 * 
 * @ param request request 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Extensions . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Extensions . java 
 new file mode 100644 
 index 0000000 . . 6877c1d 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Extensions . java 
 @ @ - 0 , 0 + 1 , 57 @ @ 
 + package im . actor . core . modules ; 
 + 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . Extension ; 
 + 
 + public class Extensions extends AbsModule { 
 + 
 + private ArrayList < ExtensionRef > extensionRefs = new ArrayList < ExtensionRef > ( ) ; 
 + 
 + public Extensions ( ModuleContext context ) { 
 + super ( context ) ; 
 + } 
 + 
 + public void registerExtension ( String key , Extension extension ) { 
 + extensionRefs . add ( new ExtensionRef ( key , extension ) ) ; 
 + } 
 + 
 + public Extension findExtension ( String key ) { 
 + for ( ExtensionRef r : extensionRefs ) { 
 + if ( r . getKey ( ) . equals ( key ) ) { 
 + return r . getExtension ( ) ; 
 + } 
 + } 
 + return null ; 
 + } 
 + 
 + public void registerExtensions ( ) { 
 + for ( ExtensionRef r : extensionRefs ) { 
 + r . getExtension ( ) . registerExtension ( context ( ) ) ; 
 + } 
 + } 
 + 
 + public void runExtensions ( ) { 
 + for ( ExtensionRef r : extensionRefs ) { 
 + r . getExtension ( ) . runExtension ( ) ; 
 + } 
 + } 
 + 
 + private class ExtensionRef { 
 + private String key ; 
 + private Extension extension ; 
 + 
 + public ExtensionRef ( String key , Extension extension ) { 
 + this . key = key ; 
 + this . extension = extension ; 
 + } 
 + 
 + public String getKey ( ) { 
 + return key ; 
 + } 
 + 
 + public Extension getExtension ( ) { 
 + return extension ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java 
 index 36a6d73 . . f5c5862 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / ModuleContext . java 
 @ @ - 83 , 4 + 83 , 6 @ @ public interface ModuleContext { 
 Messenger getMessenger ( ) ; 
 
 MentionsModule getMentions ( ) ; 
 + 
 + Extensions getExtensions ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java 
 index a82d6b9 . . 9f80b34 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / modules / Modules . java 
 @ @ - 5 , 7 + 5 , 7 @ @ 
 package im . actor . core . modules ; 
 
 import im . actor . core . Configuration ; 
 - import im . actor . core . Extension ; 
 + import im . actor . core . ConfigurationExtension ; 
 import im . actor . core . Messenger ; 
 import im . actor . core . i18n . I18nEngine ; 
 import im . actor . core . modules . internal . AppStateModule ; 
 @ @ - 49 , 6 + 49 , 7 @ @ public class Modules implements ModuleContext { 
 private final AppStateModule appStateModule ; 
 private final ExternalModule external ; 
 private final Authentication authentication ; 
 + private final Extensions extensions ; 
 
 / / Modules for authenticated users 
 private volatile Updates updates ; 
 @ @ - 86 , 6 + 87 , 9 @ @ public class Modules implements ModuleContext { 
 timing . section ( " API " ) ; 
 this . api = new ApiModule ( this ) ; 
 
 + timing . section ( " Extensions " ) ; 
 + this . extensions = new Extensions ( this ) ; 
 + 
 timing . section ( " App State " ) ; 
 this . appStateModule = new AppStateModule ( this ) ; 
 
 @ @ - 95 , 6 + 99 , 12 @ @ public class Modules implements ModuleContext { 
 timing . section ( " Pushes " ) ; 
 this . pushes = new PushesModule ( this ) ; 
 
 + timing . section ( " Extensions " ) ; 
 + for ( ConfigurationExtension e : configuration . getExtensions ( ) ) { 
 + this . extensions . registerExtension ( e . getKey ( ) , e . getExtension ( ) ) ; 
 + } 
 + this . extensions . registerExtensions ( ) ; 
 + 
 timing . section ( " Auth " ) ; 
 this . authentication = new Authentication ( this ) ; 
 this . authentication . run ( ) ; 
 @ @ - 153 , 6 + 163 , 8 @ @ public class Modules implements ModuleContext { 
 messages . run ( ) ; 
 timing . section ( " Updates " ) ; 
 updates . run ( ) ; 
 + timing . section ( " Extensions " ) ; 
 + extensions . runExtensions ( ) ; 
 timing . end ( ) ; 
 
 messenger . onLoggedIn ( ) ; 
 @ @ - 271 , 6 + 283 , 11 @ @ public class Modules implements ModuleContext { 
 return mentions ; 
 } 
 
 + @ Override 
 + public Extensions getExtensions ( ) { 
 + return extensions ; 
 + } 
 + 
 public EventBus getEvents ( ) { 
 return events ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java 
 index e0f2058 . . a019d60 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / ActorApi . java 
 @ @ - 5 , 6 + 5 , 7 @ @ 
 package im . actor . core . network ; 
 
 import im . actor . core . api . ApiVersion ; 
 + import im . actor . core . network . parser . ApiParserConfig ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . core . network . api . ApiBroker ; 
 import im . actor . core . network . parser . Request ; 
 @ @ - 42 , 7 + 43 , 8 @ @ public class ActorApi { 
 public ActorApi ( Endpoints endpoints , AuthKeyStorage keyStorage , ActorApiCallback callback , 
 boolean isEnableLog , int minDelay , 
 int maxDelay , 
 - int maxFailureCount ) { 
 + int maxFailureCount , 
 + ApiParserConfig parserConfig ) { 
 this . endpoints = endpoints ; 
 this . keyStorage = keyStorage ; 
 this . callback = callback ; 
 @ @ - 51 , 7 + 53 , 7 @ @ public class ActorApi { 
 this . maxDelay = maxDelay ; 
 this . maxFailureCount = maxFailureCount ; 
 this . apiBroker = ApiBroker . get ( endpoints , keyStorage , callback , isEnableLog , 
 - NEXT _ ID . get ( ) , minDelay , maxDelay , maxFailureCount ) ; 
 + NEXT _ ID . get ( ) , minDelay , maxDelay , maxFailureCount , parserConfig ) ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java 
 index 9786886 . . 207ffca 100644 
 - - - a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / api / ApiBroker . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import java . io . IOException ; 
 import java . util . HashMap ; 
 
 import im . actor . core . api . parser . RpcParser ; 
 + import im . actor . core . network . parser . ApiParserConfig ; 
 import im . actor . runtime . * ; 
 import im . actor . runtime . Runtime ; 
 import im . actor . runtime . actors . Actor ; 
 @ @ - 46 , 13 + 47 , 14 @ @ public class ApiBroker extends Actor { 
 public static ActorRef get ( final Endpoints endpoints , final AuthKeyStorage keyStorage , final ActorApiCallback callback , 
 final boolean isEnableLog , int id , final int minDelay , 
 final int maxDelay , 
 - final int maxFailureCount ) { 
 + final int maxFailureCount , 
 + final ApiParserConfig parserConfig ) { 
 return ActorSystem . system ( ) . actorOf ( Props . create ( ApiBroker . class , new ActorCreator < ApiBroker > ( ) { 
 @ Override 
 public ApiBroker create ( ) { 
 return new ApiBroker ( endpoints , keyStorage , callback , isEnableLog , minDelay , 
 maxDelay , 
 - maxFailureCount ) ; 
 + maxFailureCount , parserConfig ) ; 
 } 
 } ) . changeDispatcher ( " network " ) , " api / broker # " + id ) ; 
 } 
 @ @ - 77 , 9 + 79 , 12 @ @ public class ApiBroker extends Actor { 
 
 private ExponentialBackoff authIdBackOff ; 
 
 + private ApiParserConfig parserConfig ; 
 + 
 public ApiBroker ( Endpoints endpoints , AuthKeyStorage keyStorage , 
 ActorApiCallback callback , 
 - boolean isEnableLog , int minDelay , int maxDelay , int maxFailureCount ) { 
 + boolean isEnableLog , int minDelay , int maxDelay , int maxFailureCount , 
 + ApiParserConfig parserConfig ) { 
 this . isEnableLog = isEnableLog ; 
 this . endpoints = endpoints ; 
 this . keyStorage = keyStorage ; 
 @ @ - 87 , 7 + 92 , 8 @ @ public class ApiBroker extends Actor { 
 this . minDelay = minDelay ; 
 this . maxDelay = maxDelay ; 
 this . maxFailureCount = maxFailureCount ; 
 - authIdBackOff = new ExponentialBackoff ( minDelay , maxDelay , maxFailureCount ) ; 
 + this . authIdBackOff = new ExponentialBackoff ( minDelay , maxDelay , maxFailureCount ) ; 
 + this . parserConfig = parserConfig ; 
 } 
 
 @ Override 
 @ @ - 249 , 7 + 255 , 7 @ @ public class ApiBroker extends Actor { 
 
 Response response ; 
 try { 
 - response = ( Response ) new RpcParser ( ) . read ( ok . responseType , ok . payload ) ; 
 + response = ( Response ) parserConfig . parseRpc ( ok . responseType , ok . payload ) ; 
 } catch ( IOException e ) { 
 e . printStackTrace ( ) ; 
 return ; 
 @ @ - 337 , 7 + 343 , 7 @ @ public class ApiBroker extends Actor { 
 
 RpcScope updateBox ; 
 try { 
 - updateBox = new RpcParser ( ) . read ( type , body ) ; 
 + updateBox = parserConfig . parseRpc ( type , body ) ; 
 } catch ( IOException e ) { 
 e . printStackTrace ( ) ; 
 Log . w ( TAG , " Broken update box " ) ; 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ApiParserConfig . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ApiParserConfig . java 
 new file mode 100644 
 index 0000000 . . d54fc83 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ApiParserConfig . java 
 @ @ - 0 , 0 + 1 , 30 @ @ 
 + package im . actor . core . network . parser ; 
 + 
 + import java . io . IOException ; 
 + import java . util . concurrent . CopyOnWriteArrayList ; 
 + 
 + import im . actor . core . api . parser . RpcParser ; 
 + import im . actor . core . api . parser . UpdatesParser ; 
 + 
 + public class ApiParserConfig { 
 + 
 + private RpcParser rpcRarser = new RpcParser ( ) ; 
 + private UpdatesParser updatesParser = new UpdatesParser ( ) ; 
 + private CopyOnWriteArrayList < ParsingExtension > extensions = new CopyOnWriteArrayList < ParsingExtension > ( ) ; 
 + 
 + public void addExtension ( ParsingExtension extension ) { 
 + extensions . add ( extension ) ; 
 + } 
 + 
 + public RpcScope parseRpc ( int header , byte [ ] content ) throws IOException { 
 + for ( ParsingExtension ex : extensions ) { 
 + try { 
 + return ex . getRpcScopeParser ( ) . read ( header , content ) ; 
 + } catch ( Exception e ) { 
 + / / Ignore 
 + } 
 + } 
 + 
 + return rpcRarser . read ( header , content ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ParsingExtension . java b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ParsingExtension . java 
 new file mode 100644 
 index 0000000 . . dbcbf08 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / shared / src / main / java / im / actor / core / network / parser / ParsingExtension . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package im . actor . core . network . parser ; 
 + 
 + public class ParsingExtension { 
 + 
 + private BaseParser < RpcScope > rpcScopeParser ; 
 + 
 + private BaseParser < Update > updateScopeParser ; 
 + 
 + public ParsingExtension ( BaseParser < RpcScope > rpcScopeParser , BaseParser < Update > updateScopeParser ) { 
 + this . rpcScopeParser = rpcScopeParser ; 
 + this . updateScopeParser = updateScopeParser ; 
 + } 
 + 
 + public BaseParser < RpcScope > getRpcScopeParser ( ) { 
 + return rpcScopeParser ; 
 + } 
 + 
 + public BaseParser < Update > getUpdateScopeParser ( ) { 
 + return updateScopeParser ; 
 + } 
 + }
