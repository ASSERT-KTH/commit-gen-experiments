BLEU SCORE: 0.345720784641941

TEST MSG: fix ( js ) : Fixing event receiving
GENERATED MSG: feat ( js ) : Added message deletion

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > index 9a560ed . . 7528375 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > @ @ - 24 , 7 + 24 , 7 @ @ public class JsElectronApp { < nl > < nl > public static native void subscribe ( String topic , JsElectronListener listener ) / * - { < nl > var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; < nl > - ipc . on ( topic , function ( message ) { < nl > + ipc . on ( topic , function ( event , message ) { < nl > listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; < nl > } ) ; < nl > } - * / ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 3d9eddd . . 11f85fc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 416 , 6 + 416 , 10 @ @ public class JsFacade implements Exportable { < nl > } < nl > } < nl > < nl > + public void deleteMessage ( JsPeer peer , String id ) { < nl > + messenger . deleteMessages ( peer . convert ( ) , new long [ ] { Long . parseLong ( id ) } ) ; < nl > + } < nl > + < nl > public JsPromise deleteChat ( final JsPeer peer ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 index 9a560ed . . 7528375 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 @ @ - 24 , 7 + 24 , 7 @ @ public class JsElectronApp { 
 
 public static native void subscribe ( String topic , JsElectronListener listener ) / * - { 
 var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; 
 - ipc . on ( topic , function ( message ) { 
 + ipc . on ( topic , function ( event , message ) { 
 listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; 
 } ) ; 
 } - * / ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 3d9eddd . . 11f85fc 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 416 , 6 + 416 , 10 @ @ public class JsFacade implements Exportable { 
 } 
 } 
 
 + public void deleteMessage ( JsPeer peer , String id ) { 
 + messenger . deleteMessages ( peer . convert ( ) , new long [ ] { Long . parseLong ( id ) } ) ; 
 + } 
 + 
 public JsPromise deleteChat ( final JsPeer peer ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override
