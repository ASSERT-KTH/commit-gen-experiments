BLEU SCORE: 0.02407485903547034

TEST MSG: Merge branch ' master ' of https : / / github . com / actorapp / actor - platform
GENERATED MSG: feat ( android ) : add / remove reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 314344b . . 8b8ceac 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 267 , 4 + 267 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > } < nl > return res ; < nl > } < nl > + < nl > + public void setFragment ( MessagesFragment fragment ) { < nl > + this . fragment = fragment ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index 21da715 . . 09683ac 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 125 , 8 + 125 , 9 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > BindedDisplayList < Message > res = messenger ( ) . getMessageDisplayList ( peer ) ; < nl > if ( res . getListProcessor ( ) = = null ) { < nl > res . setListProcessor ( new ChatListProcessor ( this ) ) ; < nl > + } else { < nl > + ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; < nl > } < nl > - < nl > return res ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java < nl > index 7f734d9 . . d555dbb 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java < nl > @ @ - 39 , 6 + 39 , 8 @ @ public class DocumentsFragment extends MessagesFragment { < nl > BindedDisplayList < Message > res = messenger ( ) . getDocsDisplayList ( peer ) ; < nl > if ( res . getListProcessor ( ) = = null ) { < nl > res . setListProcessor ( new ChatListProcessor ( this ) ) ; < nl > + } else { < nl > + ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; < nl > } < nl > return res ; < nl > } < nl > diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > index dc0ec61 . . 92583af 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > @ @ - 131 , 6 + 131 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > log . debug ( " New client , sending all scheduled for resend " ) < nl > < nl > this . mbQueue . clear ( ) < nl > + this . resendBufferSize = 0 < nl > + this . resendPushBufferSize = 0 < nl > < nl > this . newSessionBuffer foreach { < nl > case ( messageId , ni , scheduled ) ⇒ < nl > @ @ - 275 , 9 + 277 , 7 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > } < nl > < nl > private def increaseBufferSize ( item : ResendableItem ) : Unit = { < nl > - if ( item . size < = MaxResendSize ) { < nl > - this . resendBufferSize + = item . size < nl > - } < nl > + this . resendBufferSize + = item . size < nl > < nl > item match { < nl > case p : PushItem ⇒ < nl > @ @ - 290 , 7 + 290 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > } < nl > < nl > private def decreaseBufferSize ( item : ResendableItem ) : Unit = { < nl > - if ( item . size < = MaxResendSize ) this . resendBufferSize - = item . size < nl > + this . resendBufferSize - = item . size < nl > + < nl > item match { < nl > case _ : PushItem ⇒ this . resendPushBufferSize - = item . size < nl > case _ ⇒ < nl > @ @ - 451 , 7 + 452 , 7 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > private def bufferOverflow ( ) : Unit = { < nl > val msg = " Completing stream due to maximum buffer size reached " < nl > log . warning ( msg ) < nl > - onError ( new RuntimeException ( msg ) with NoStackTrace ) < nl > + onErrorThenStop ( new RuntimeException ( msg ) with NoStackTrace ) < nl > } < nl > < nl > private def pushBufferSize = responseBuffer . size + pushBuffer . size + newSessionBuffer . map ( _ ⇒ 1 ) . getOrElse ( 0 )
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > index 692b43e . . 40e59cf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { < nl > < nl > private static final String TAG = " LinearLayoutManager " ; < nl > < nl > - private static final boolean DEBUG = true ; < nl > + private static final boolean DEBUG = false ; < nl > < nl > public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 7c42967 . . f8ee6ef 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > new file mode 100644 < nl > index 0000000 . . abfa92c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . graphics . Color ; < nl > + import android . graphics . Typeface ; < nl > + import android . text . TextPaint ; < nl > + import android . view . View ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > + < nl > + public class ReactionSpan extends BaseUrlSpan { < nl > + < nl > + boolean hasMyReaction ; < nl > + Peer peer ; < nl > + long rid ; < nl > + String code ; < nl > + < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + super ( code , false ) ; < nl > + this . code = code ; < nl > + this . hasMyReaction = hasMyReaction ; < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + } < nl > + < nl > + @ Override < nl > + public void updateDrawState ( TextPaint ds ) { < nl > + super . updateDrawState ( ds ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setUnderlineText ( false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( View widget ) { < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1a7465a . . 1c0ce2f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { < nl > timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > } < nl > time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > - < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 314344b . . 8b8ceac 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 267 , 4 + 267 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 } 
 return res ; 
 } 
 + 
 + public void setFragment ( MessagesFragment fragment ) { 
 + this . fragment = fragment ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index 21da715 . . 09683ac 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 125 , 8 + 125 , 9 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 BindedDisplayList < Message > res = messenger ( ) . getMessageDisplayList ( peer ) ; 
 if ( res . getListProcessor ( ) = = null ) { 
 res . setListProcessor ( new ChatListProcessor ( this ) ) ; 
 + } else { 
 + ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; 
 } 
 - 
 return res ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java 
 index 7f734d9 . . d555dbb 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java 
 @ @ - 39 , 6 + 39 , 8 @ @ public class DocumentsFragment extends MessagesFragment { 
 BindedDisplayList < Message > res = messenger ( ) . getDocsDisplayList ( peer ) ; 
 if ( res . getListProcessor ( ) = = null ) { 
 res . setListProcessor ( new ChatListProcessor ( this ) ) ; 
 + } else { 
 + ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; 
 } 
 return res ; 
 } 
 diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 index dc0ec61 . . 92583af 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 @ @ - 131 , 6 + 131 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 log . debug ( " New client , sending all scheduled for resend " ) 
 
 this . mbQueue . clear ( ) 
 + this . resendBufferSize = 0 
 + this . resendPushBufferSize = 0 
 
 this . newSessionBuffer foreach { 
 case ( messageId , ni , scheduled ) ⇒ 
 @ @ - 275 , 9 + 277 , 7 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 } 
 
 private def increaseBufferSize ( item : ResendableItem ) : Unit = { 
 - if ( item . size < = MaxResendSize ) { 
 - this . resendBufferSize + = item . size 
 - } 
 + this . resendBufferSize + = item . size 
 
 item match { 
 case p : PushItem ⇒ 
 @ @ - 290 , 7 + 290 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 } 
 
 private def decreaseBufferSize ( item : ResendableItem ) : Unit = { 
 - if ( item . size < = MaxResendSize ) this . resendBufferSize - = item . size 
 + this . resendBufferSize - = item . size 
 + 
 item match { 
 case _ : PushItem ⇒ this . resendPushBufferSize - = item . size 
 case _ ⇒ 
 @ @ - 451 , 7 + 452 , 7 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 private def bufferOverflow ( ) : Unit = { 
 val msg = " Completing stream due to maximum buffer size reached " 
 log . warning ( msg ) 
 - onError ( new RuntimeException ( msg ) with NoStackTrace ) 
 + onErrorThenStop ( new RuntimeException ( msg ) with NoStackTrace ) 
 } 
 
 private def pushBufferSize = responseBuffer . size + pushBuffer . size + newSessionBuffer . map ( _ ⇒ 1 ) . getOrElse ( 0 )

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 index 692b43e . . 40e59cf 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { 
 
 private static final String TAG = " LinearLayoutManager " ; 
 
 - private static final boolean DEBUG = true ; 
 + private static final boolean DEBUG = false ; 
 
 public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 7c42967 . . f8ee6ef 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 new file mode 100644 
 index 0000000 . . abfa92c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . graphics . Color ; 
 + import android . graphics . Typeface ; 
 + import android . text . TextPaint ; 
 + import android . view . View ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 + 
 + public class ReactionSpan extends BaseUrlSpan { 
 + 
 + boolean hasMyReaction ; 
 + Peer peer ; 
 + long rid ; 
 + String code ; 
 + 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + super ( code , false ) ; 
 + this . code = code ; 
 + this . hasMyReaction = hasMyReaction ; 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + } 
 + 
 + @ Override 
 + public void updateDrawState ( TextPaint ds ) { 
 + super . updateDrawState ( ds ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setUnderlineText ( false ) ; 
 + } 
 + 
 + @ Override 
 + public void onClick ( View widget ) { 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1a7465a . . 1c0ce2f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { 
 timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 } 
 time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 - 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod {
