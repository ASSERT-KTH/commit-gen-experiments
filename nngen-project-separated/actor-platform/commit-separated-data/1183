BLEU SCORE: 0.11884631831419348

TEST MSG: fix ( core ) : calls - doCall by uid
GENERATED MSG: fix ( android ) : incoming call event - add uid

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 502315f . . edfe8df 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 969 , 8 + 969 , 8 @ @ public class Messenger { < nl > / / Calls < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > - public Command < ResponseDoCall > doCall ( User user , CallsModule . CallCallback callCallback ) { < nl > - return modules . getCallsModule ( ) . makeCall ( user , callCallback ) ; < nl > + public Command < ResponseDoCall > doCall ( int uid , CallsModule . CallCallback callCallback ) { < nl > + return modules . getCallsModule ( ) . makeCall ( uid , callCallback ) ; < nl > } < nl > < nl > public void endCall ( long callId ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > index 6af1423 . . cd7371f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > @ @ - 41 , 10 + 41 , 11 @ @ public class CallsModule extends AbsModule { < nl > } < nl > } < nl > < nl > - public Command < ResponseDoCall > makeCall ( final User u , final CallCallback callCallback ) { < nl > + public Command < ResponseDoCall > makeCall ( final int uid , final CallCallback callCallback ) { < nl > return new Command < ResponseDoCall > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < ResponseDoCall > callback ) { < nl > + User u = users ( ) . getValue ( uid ) ; < nl > request ( new RequestDoCall ( new ApiOutPeer ( ApiPeerType . PRIVATE , u . getUid ( ) , u . getAccessHash ( ) ) , CALL _ TIMEOUT ) , new RpcCallback < ResponseDoCall > ( ) { < nl > @ Override < nl > public void onResult ( final ResponseDoCall response ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java < nl > index 41d4fcb . . f63a5c0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java < nl > @ @ - 7 , 15 + 7 , 21 @ @ public class IncomingCall extends Event { < nl > public static final String EVENT = " incoming _ call " ; < nl > < nl > private long callId ; < nl > + private int uid ; < nl > < nl > - public IncomingCall ( long callId ) { < nl > + public IncomingCall ( long callId , int uid ) { < nl > this . callId = callId ; < nl > + this . uid = uid ; < nl > } < nl > < nl > public long getCall ( ) { < nl > return callId ; < nl > } < nl > < nl > + public int getUid ( ) { < nl > + return uid ; < nl > + } < nl > + < nl > @ Override < nl > public String getType ( ) { < nl > return EVENT ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > index 4788cbb . . 6af1423 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > @ @ - 95 , 7 + 95 , 7 @ @ public class CallsModule extends AbsModule { < nl > < nl > public void onIncomingCall ( long callId , int uid ) { < nl > if ( ! calls . keySet ( ) . contains ( callId ) ) { < nl > - context ( ) . getEvents ( ) . post ( new IncomingCall ( callId ) ) ; < nl > + context ( ) . getEvents ( ) . post ( new IncomingCall ( callId , uid ) ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 502315f . . edfe8df 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 969 , 8 + 969 , 8 @ @ public class Messenger { 
 / / Calls 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 - public Command < ResponseDoCall > doCall ( User user , CallsModule . CallCallback callCallback ) { 
 - return modules . getCallsModule ( ) . makeCall ( user , callCallback ) ; 
 + public Command < ResponseDoCall > doCall ( int uid , CallsModule . CallCallback callCallback ) { 
 + return modules . getCallsModule ( ) . makeCall ( uid , callCallback ) ; 
 } 
 
 public void endCall ( long callId ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 index 6af1423 . . cd7371f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 @ @ - 41 , 10 + 41 , 11 @ @ public class CallsModule extends AbsModule { 
 } 
 } 
 
 - public Command < ResponseDoCall > makeCall ( final User u , final CallCallback callCallback ) { 
 + public Command < ResponseDoCall > makeCall ( final int uid , final CallCallback callCallback ) { 
 return new Command < ResponseDoCall > ( ) { 
 @ Override 
 public void start ( final CommandCallback < ResponseDoCall > callback ) { 
 + User u = users ( ) . getValue ( uid ) ; 
 request ( new RequestDoCall ( new ApiOutPeer ( ApiPeerType . PRIVATE , u . getUid ( ) , u . getAccessHash ( ) ) , CALL _ TIMEOUT ) , new RpcCallback < ResponseDoCall > ( ) { 
 @ Override 
 public void onResult ( final ResponseDoCall response ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java 
 index 41d4fcb . . f63a5c0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java 
 @ @ - 7 , 15 + 7 , 21 @ @ public class IncomingCall extends Event { 
 public static final String EVENT = " incoming _ call " ; 
 
 private long callId ; 
 + private int uid ; 
 
 - public IncomingCall ( long callId ) { 
 + public IncomingCall ( long callId , int uid ) { 
 this . callId = callId ; 
 + this . uid = uid ; 
 } 
 
 public long getCall ( ) { 
 return callId ; 
 } 
 
 + public int getUid ( ) { 
 + return uid ; 
 + } 
 + 
 @ Override 
 public String getType ( ) { 
 return EVENT ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 index 4788cbb . . 6af1423 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 @ @ - 95 , 7 + 95 , 7 @ @ public class CallsModule extends AbsModule { 
 
 public void onIncomingCall ( long callId , int uid ) { 
 if ( ! calls . keySet ( ) . contains ( callId ) ) { 
 - context ( ) . getEvents ( ) . post ( new IncomingCall ( callId ) ) ; 
 + context ( ) . getEvents ( ) . post ( new IncomingCall ( callId , uid ) ) ; 
 } 
 }
