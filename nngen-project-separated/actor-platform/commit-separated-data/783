BLEU SCORE: 0.2626909894424158

TEST MSG: feat ( core ) : Passing connection timeout to DoCall
GENERATED MSG: wip ( core ) : Working on VM

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java < nl > index afc990d . . dfa49f1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java < nl > @ @ - 23 , 9 + 23 , 11 @ @ public class RequestDoCall extends Request < ResponseDoCall > { < nl > } < nl > < nl > private ApiOutPeer peer ; < nl > + private Long timeout ; < nl > < nl > - public RequestDoCall ( @ NotNull ApiOutPeer peer ) { < nl > + public RequestDoCall ( @ NotNull ApiOutPeer peer , @ Nullable Long timeout ) { < nl > this . peer = peer ; < nl > + this . timeout = timeout ; < nl > } < nl > < nl > public RequestDoCall ( ) { < nl > @ @ - 37 , 9 + 39 , 15 @ @ public class RequestDoCall extends Request < ResponseDoCall > { < nl > return this . peer ; < nl > } < nl > < nl > + @ Nullable < nl > + public Long getTimeout ( ) { < nl > + return this . timeout ; < nl > + } < nl > + < nl > @ Override < nl > public void parse ( BserValues values ) throws IOException { < nl > this . peer = values . getObj ( 1 , new ApiOutPeer ( ) ) ; < nl > + this . timeout = values . optLong ( 2 ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 48 , 6 + 56 , 9 @ @ public class RequestDoCall extends Request < ResponseDoCall > { < nl > throw new IOException ( ) ; < nl > } < nl > writer . writeObject ( 1 , this . peer ) ; < nl > + if ( this . timeout ! = null ) { < nl > + writer . writeLong ( 2 , this . timeout ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index a91fe01 . . 04f6fcb 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 9 , 6 + 9 , 7 @ @ import im . actor . core . api . rpc . ResponseGetCallInfo ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . calls . peers . AbsCallActor ; < nl > + import im . actor . core . modules . calls . peers . CallBusActor ; < nl > import im . actor . core . viewmodel . CallState ; < nl > import im . actor . core . viewmodel . CallVM ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > @ @ - 54 , 7 + 55 , 7 @ @ public class CallActor extends AbsCallActor { < nl > public void preStart ( ) { < nl > super . preStart ( ) ; < nl > if ( isMaster ) { < nl > - api ( new RequestDoCall ( buidOutPeer ( peer ) ) ) . then ( new Consumer < ResponseDoCall > ( ) { < nl > + api ( new RequestDoCall ( buidOutPeer ( peer ) , CallBusActor . TIMEOUT ) ) . then ( new Consumer < ResponseDoCall > ( ) { < nl > @ Override < nl > public void apply ( ResponseDoCall responseDoCall ) { < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index 206cf57 . . d0106cc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 27 , 6 + 27 , 8 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > < nl > private static final int STASH = 1 ; < nl > < nl > + public static final long TIMEOUT = 6000 ; < nl > + < nl > private final PeerSettings selfSettings ; < nl > private final PeerCallCallback peerCallback ; < nl > private final CallBusCallback callBusCallback ; < nl > @ @ - 225 , 10 + 227 , 10 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > @ Override < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof JoinBus ) { < nl > - joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; < nl > + joinBus ( ( ( JoinBus ) message ) . getBusId ( ) , TIMEOUT ) ; < nl > } else if ( message instanceof JoinMasterBus ) { < nl > JoinMasterBus joinMasterBus = ( JoinMasterBus ) message ; < nl > - connectBus ( joinMasterBus . getBusId ( ) , joinMasterBus . getDeviceId ( ) , true ) ; < nl > + connectBus ( joinMasterBus . getBusId ( ) , joinMasterBus . getDeviceId ( ) , TIMEOUT , true ) ; < nl > } else if ( message instanceof Mute ) { < nl > onChangeMute ( ( ( Mute ) message ) . isMuted ( ) ) ; < nl > } else if ( message instanceof OnAnswered ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java < nl > index a5564d6 . . 24b17b9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java < nl > @ @ - 29 , 6 + 29 , 8 @ @ public class PeerCallMasterActor extends AbsCallActor { < nl > private CommandCallback < Long > callback ; < nl > private HashSet < Integer > members ; < nl > private HashMap < Long , Node > nodes ; < nl > + private boolean isStarted ; < nl > + private boolean isAnswered ; < nl > private long callId ; < nl > private CallVM callVM ; < nl > < nl > @ @ - 182 , 6 + 184 , 25 @ @ public class PeerCallMasterActor extends AbsCallActor { < nl > } < nl > } < nl > } < nl > + < nl > + if ( ! isAnswered ) { < nl > + isAnswered = true ; < nl > + if ( isStarted ) { < nl > + callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; < nl > + } else { < nl > + callVM . getState ( ) . change ( CallState . CONNECTING ) ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onFirstPeerStarted ( ) { < nl > + super . onFirstPeerStarted ( ) ; < nl > + < nl > + isStarted = true ; < nl > + if ( isAnswered ) { < nl > + callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > @ @ - 194 , 6 + 215 , 11 @ @ public class PeerCallMasterActor extends AbsCallActor { < nl > public void onPeerStarted ( int uid , long deviceId ) { < nl > super . onPeerStarted ( uid , deviceId ) ; < nl > Log . d ( TAG , " onPeerStarted : " + deviceId ) ; < nl > + < nl > + if ( callVM . getState ( ) . get ( ) = = CallState . RINGING | | < nl > + callVM . getState ( ) . get ( ) = = CallState . CONNECTING ) { < nl > + < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java < nl > index 78a062c . . 92f40c7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java < nl > @ @ - 64 , 9 + 64 , 6 @ @ public class CallNode { < nl > if ( peerSettings = = null ) { < nl > return false ; < nl > } < nl > - if ( peerSettings . canConnect ( ) ! = null ) { < nl > - return peerSettings . canConnect ( ) ; < nl > - } < nl > return false ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > index 4b47c58 . . 835e0c3 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > @ @ - 97 , 7 + 97 , 7 @ @ public class PeerCallActor extends EventBusActor { < nl > if ( webRTCMediaStream ! = null ) { < nl > peerNodeInt . setOwnStream ( webRTCMediaStream ) ; < nl > } < nl > - if ( isAnswered ) { < nl > + if ( isAnswered | | ! isSlaveMode ) { < nl > peerNodeInt . onAnswered ( ) ; < nl > } < nl > refs . put ( deviceId , peerNodeInt ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index 83dcca2 . . 809c3d0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 246 , 8 + 246 , 6 @ @ public class PeerConnectionActor extends ModuleActor { < nl > peerConnection = null ; < nl > } < nl > self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > - < nl > - / / TODO : Notify Root < nl > } < nl > < nl > private void onHandShakeCompleted ( ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java 
 index afc990d . . dfa49f1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestDoCall . java 
 @ @ - 23 , 9 + 23 , 11 @ @ public class RequestDoCall extends Request < ResponseDoCall > { 
 } 
 
 private ApiOutPeer peer ; 
 + private Long timeout ; 
 
 - public RequestDoCall ( @ NotNull ApiOutPeer peer ) { 
 + public RequestDoCall ( @ NotNull ApiOutPeer peer , @ Nullable Long timeout ) { 
 this . peer = peer ; 
 + this . timeout = timeout ; 
 } 
 
 public RequestDoCall ( ) { 
 @ @ - 37 , 9 + 39 , 15 @ @ public class RequestDoCall extends Request < ResponseDoCall > { 
 return this . peer ; 
 } 
 
 + @ Nullable 
 + public Long getTimeout ( ) { 
 + return this . timeout ; 
 + } 
 + 
 @ Override 
 public void parse ( BserValues values ) throws IOException { 
 this . peer = values . getObj ( 1 , new ApiOutPeer ( ) ) ; 
 + this . timeout = values . optLong ( 2 ) ; 
 } 
 
 @ Override 
 @ @ - 48 , 6 + 56 , 9 @ @ public class RequestDoCall extends Request < ResponseDoCall > { 
 throw new IOException ( ) ; 
 } 
 writer . writeObject ( 1 , this . peer ) ; 
 + if ( this . timeout ! = null ) { 
 + writer . writeLong ( 2 , this . timeout ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index a91fe01 . . 04f6fcb 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import im . actor . core . api . rpc . ResponseGetCallInfo ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . calls . peers . AbsCallActor ; 
 + import im . actor . core . modules . calls . peers . CallBusActor ; 
 import im . actor . core . viewmodel . CallState ; 
 import im . actor . core . viewmodel . CallVM ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 @ @ - 54 , 7 + 55 , 7 @ @ public class CallActor extends AbsCallActor { 
 public void preStart ( ) { 
 super . preStart ( ) ; 
 if ( isMaster ) { 
 - api ( new RequestDoCall ( buidOutPeer ( peer ) ) ) . then ( new Consumer < ResponseDoCall > ( ) { 
 + api ( new RequestDoCall ( buidOutPeer ( peer ) , CallBusActor . TIMEOUT ) ) . then ( new Consumer < ResponseDoCall > ( ) { 
 @ Override 
 public void apply ( ResponseDoCall responseDoCall ) { 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index 206cf57 . . d0106cc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 27 , 6 + 27 , 8 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 
 private static final int STASH = 1 ; 
 
 + public static final long TIMEOUT = 6000 ; 
 + 
 private final PeerSettings selfSettings ; 
 private final PeerCallCallback peerCallback ; 
 private final CallBusCallback callBusCallback ; 
 @ @ - 225 , 10 + 227 , 10 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 @ Override 
 public void onReceive ( Object message ) { 
 if ( message instanceof JoinBus ) { 
 - joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; 
 + joinBus ( ( ( JoinBus ) message ) . getBusId ( ) , TIMEOUT ) ; 
 } else if ( message instanceof JoinMasterBus ) { 
 JoinMasterBus joinMasterBus = ( JoinMasterBus ) message ; 
 - connectBus ( joinMasterBus . getBusId ( ) , joinMasterBus . getDeviceId ( ) , true ) ; 
 + connectBus ( joinMasterBus . getBusId ( ) , joinMasterBus . getDeviceId ( ) , TIMEOUT , true ) ; 
 } else if ( message instanceof Mute ) { 
 onChangeMute ( ( ( Mute ) message ) . isMuted ( ) ) ; 
 } else if ( message instanceof OnAnswered ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java 
 index a5564d6 . . 24b17b9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerCallMasterActor . java 
 @ @ - 29 , 6 + 29 , 8 @ @ public class PeerCallMasterActor extends AbsCallActor { 
 private CommandCallback < Long > callback ; 
 private HashSet < Integer > members ; 
 private HashMap < Long , Node > nodes ; 
 + private boolean isStarted ; 
 + private boolean isAnswered ; 
 private long callId ; 
 private CallVM callVM ; 
 
 @ @ - 182 , 6 + 184 , 25 @ @ public class PeerCallMasterActor extends AbsCallActor { 
 } 
 } 
 } 
 + 
 + if ( ! isAnswered ) { 
 + isAnswered = true ; 
 + if ( isStarted ) { 
 + callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; 
 + } else { 
 + callVM . getState ( ) . change ( CallState . CONNECTING ) ; 
 + } 
 + } 
 + } 
 + 
 + @ Override 
 + public void onFirstPeerStarted ( ) { 
 + super . onFirstPeerStarted ( ) ; 
 + 
 + isStarted = true ; 
 + if ( isAnswered ) { 
 + callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; 
 + } 
 } 
 
 @ Override 
 @ @ - 194 , 6 + 215 , 11 @ @ public class PeerCallMasterActor extends AbsCallActor { 
 public void onPeerStarted ( int uid , long deviceId ) { 
 super . onPeerStarted ( uid , deviceId ) ; 
 Log . d ( TAG , " onPeerStarted : " + deviceId ) ; 
 + 
 + if ( callVM . getState ( ) . get ( ) = = CallState . RINGING | | 
 + callVM . getState ( ) . get ( ) = = CallState . CONNECTING ) { 
 + 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java 
 index 78a062c . . 92f40c7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / entity / CallNode . java 
 @ @ - 64 , 9 + 64 , 6 @ @ public class CallNode { 
 if ( peerSettings = = null ) { 
 return false ; 
 } 
 - if ( peerSettings . canConnect ( ) ! = null ) { 
 - return peerSettings . canConnect ( ) ; 
 - } 
 return false ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 index 4b47c58 . . 835e0c3 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 @ @ - 97 , 7 + 97 , 7 @ @ public class PeerCallActor extends EventBusActor { 
 if ( webRTCMediaStream ! = null ) { 
 peerNodeInt . setOwnStream ( webRTCMediaStream ) ; 
 } 
 - if ( isAnswered ) { 
 + if ( isAnswered | | ! isSlaveMode ) { 
 peerNodeInt . onAnswered ( ) ; 
 } 
 refs . put ( deviceId , peerNodeInt ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index 83dcca2 . . 809c3d0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 246 , 8 + 246 , 6 @ @ public class PeerConnectionActor extends ModuleActor { 
 peerConnection = null ; 
 } 
 self ( ) . send ( PoisonPill . INSTANCE ) ; 
 - 
 - / / TODO : Notify Root 
 } 
 
 private void onHandShakeCompleted ( ) {
