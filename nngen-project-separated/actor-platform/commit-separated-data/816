BLEU SCORE: 0.23769263662838702

TEST MSG: feat ( scheme ) : Adding message content edit method
GENERATED MSG: fix ( scheme ) : Removed obsolete encrypted read / received

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json < nl > index ccd99d9 . . c48615b 100644 < nl > - - - a / actor - sdk / sdk - api / actor . json < nl > + + + b / actor - sdk / sdk - api / actor . json < nl > @ @ - 4569 , 6 + 4569 , 64 @ @ < nl > { < nl > " type " : " rpc " , < nl > " content " : { < nl > + " name " : " UpdateMessage " , < nl > + " header " : 2658 , < nl > + " response " : { < nl > + " type " : " reference " , < nl > + " name " : " SeqDate " < nl > + } , < nl > + " doc " : [ < nl > + " Changing Message content " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " peer " , < nl > + " category " : " full " , < nl > + " description " : " Destination Peer " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " rid " , < nl > + " category " : " full " , < nl > + " description " : " Message random id " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " updatedMessage " , < nl > + " category " : " full " , < nl > + " description " : " Updated Message content " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : { < nl > + " type " : " struct " , < nl > + " childType " : " OutPeer " < nl > + } , < nl > + " id " : 1 , < nl > + " name " : " peer " < nl > + } , < nl > + { < nl > + " type " : { < nl > + " type " : " alias " , < nl > + " childType " : " randomId " < nl > + } , < nl > + " id " : 2 , < nl > + " name " : " rid " < nl > + } , < nl > + { < nl > + " type " : { < nl > + " type " : " trait " , < nl > + " childType " : " Message " < nl > + } , < nl > + " id " : 3 , < nl > + " name " : " updatedMessage " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " rpc " , < nl > + " content " : { < nl > " name " : " MessageReceived " , < nl > " header " : 55 , < nl > " response " : { < nl > diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > index d15ba72 . . 9ed7499 100644 < nl > - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > @ @ - 4211 , 6 + 4211 , 54 @ @ < nl > < ref role = " NX6Kv " node = " GBscvBBqBq " resolve = " message " / > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m6fVq " id = " 5Wm9DsmkMGN " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " UpdateMessage " / > < nl > + < node concept = " 2m7Kf5 " id = " 5Wm9DsmkMSx " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " peer " / > < nl > + < node concept = " 2m5mGg " id = " 5Wm9DsmkMS _ " role = " 2m7DVh " > < nl > + < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 5Wm9DsmkMSC " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 2 " / > < nl > + < property role = " TrG5h " value = " rid " / > < nl > + < node concept = " wb0Ql " id = " 5Wm9DsmkMSI " role = " 2m7DVh " > < nl > + < ref role = " wb18D " node = " 2vxDjotnUB8 " resolve = " randomId " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 5Wm9DsmkMSL " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 3 " / > < nl > + < property role = " TrG5h " value = " updatedMessage " / > < nl > + < node concept = " 3BlaRf " id = " 5Wm9DsmkMST " role = " 2m7DVh " > < nl > + < ref role = " 3BrLez " node = " 55bmeIQey3W " resolve = " Message " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 5Wm9DsmkMGO " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " A62 " / > < nl > + < / node > < nl > + < node concept = " 2m1Rp1 " id = " 5Wm9DsmkMSW " role = " 2m6efq " > < nl > + < ref role = " 2m1o9l " node = " 2vxDjotnSoJ " resolve = " SeqDate " / > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 5Wm9DsmkMSZ " role = " 1GBnQ6 " > < nl > + < property role = " NXePf " value = " Changing Message content " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 5Wm9DsmkMT4 " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " Destination Peer " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 5Wm9DsmkMSx " resolve = " peer " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 5Wm9DsmkMTc " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " Message random id " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 5Wm9DsmkMSC " resolve = " rid " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 5Wm9DsmkMTm " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " Updated Message content " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 5Wm9DsmkMSL " resolve = " updatedMessage " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m6fVq " id = " GBscvBBr4E " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " MessageReceived " / > < nl > < node concept = " 2m7Kf5 " id = " GBscvBBr8q " role = " 2m0hLx " > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / ApiActiveCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / ApiActiveCall . java < nl > new file mode 100644 < nl > index 0000000 . . cfc9e88 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / ApiActiveCall . java < nl > @ @ - 0 , 0 + 1 , 78 @ @ < nl > + package im . actor . core . api ; < nl > + / * < nl > + * Generated by the Actor API Scheme generator . DO NOT EDIT ! < nl > + * / < nl > + < nl > + import im . actor . runtime . bser . * ; < nl > + import im . actor . runtime . collections . * ; < nl > + import static im . actor . runtime . bser . Utils . * ; < nl > + import im . actor . core . network . parser . * ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import com . google . j2objc . annotations . ObjectiveCName ; < nl > + import java . io . IOException ; < nl > + import java . util . List ; < nl > + import java . util . ArrayList ; < nl > + < nl > + public class ApiActiveCall extends BserObject { < nl > + < nl > + private long callId ; < nl > + private ApiPeer peer ; < nl > + private List < ApiCallMember > callMembers ; < nl > + < nl > + public ApiActiveCall ( long callId , @ NotNull ApiPeer peer , @ NotNull List < ApiCallMember > callMembers ) { < nl > + this . callId = callId ; < nl > + this . peer = peer ; < nl > + this . callMembers = callMembers ; < nl > + } < nl > + < nl > + public ApiActiveCall ( ) { < nl > + < nl > + } < nl > + < nl > + public long getCallId ( ) { < nl > + return this . callId ; < nl > + } < nl > + < nl > + @ NotNull < nl > + public ApiPeer getPeer ( ) { < nl > + return this . peer ; < nl > + } < nl > + < nl > + @ NotNull < nl > + public List < ApiCallMember > getCallMembers ( ) { < nl > + return this . callMembers ; < nl > + } < nl > + < nl > + @ Override < nl > + public void parse ( BserValues values ) throws IOException { < nl > + this . callId = values . getLong ( 1 ) ; < nl > + this . peer = values . getObj ( 2 , new ApiPeer ( ) ) ; < nl > + List < ApiCallMember > _ callMembers = new ArrayList < ApiCallMember > ( ) ; < nl > + for ( int i = 0 ; i < values . getRepeatedCount ( 3 ) ; i + + ) { < nl > + _ callMembers . add ( new ApiCallMember ( ) ) ; < nl > + } < nl > + this . callMembers = values . getRepeatedObj ( 3 , _ callMembers ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void serialize ( BserWriter writer ) throws IOException { < nl > + writer . writeLong ( 1 , this . callId ) ; < nl > + if ( this . peer = = null ) { < nl > + throw new IOException ( ) ; < nl > + } < nl > + writer . writeObject ( 2 , this . peer ) ; < nl > + writer . writeRepeatedObj ( 3 , this . callMembers ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + String res = " struct ActiveCall { " ; < nl > + res + = " callId = " + this . callId ; < nl > + res + = " , peer = " + this . peer ; < nl > + res + = " , callMembers = " + this . callMembers ; < nl > + res + = " } " ; < nl > + return res ; < nl > + } < nl > + < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java < nl > index f18844c . . 19ecb96 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java < nl > @ @ - 54 , 6 + 54 , 7 @ @ public class RpcParser extends BaseParser < RpcScope > { < nl > case 114 : return RequestAddContact . fromBytes ( payload ) ; < nl > case 112 : return RequestSearchContacts . fromBytes ( payload ) ; < nl > case 92 : return RequestSendMessage . fromBytes ( payload ) ; < nl > + case 2658 : return RequestUpdateMessage . fromBytes ( payload ) ; < nl > case 55 : return RequestMessageReceived . fromBytes ( payload ) ; < nl > case 57 : return RequestMessageRead . fromBytes ( payload ) ; < nl > case 98 : return RequestDeleteMessage . fromBytes ( payload ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestUpdateMessage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestUpdateMessage . java < nl > new file mode 100644 < nl > index 0000000 . . a4cd4d3 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestUpdateMessage . java < nl > @ @ - 0 , 0 + 1 , 88 @ @ < nl > + package im . actor . core . api . rpc ; < nl > + / * < nl > + * Generated by the Actor API Scheme generator . DO NOT EDIT ! < nl > + * / < nl > + < nl > + import im . actor . runtime . bser . * ; < nl > + import im . actor . runtime . collections . * ; < nl > + import static im . actor . runtime . bser . Utils . * ; < nl > + import im . actor . core . network . parser . * ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import com . google . j2objc . annotations . ObjectiveCName ; < nl > + import java . io . IOException ; < nl > + import java . util . List ; < nl > + import java . util . ArrayList ; < nl > + import im . actor . core . api . * ; < nl > + < nl > + public class RequestUpdateMessage extends Request < ResponseSeqDate > { < nl > + < nl > + public static final int HEADER = 0xa62 ; < nl > + public static RequestUpdateMessage fromBytes ( byte [ ] data ) throws IOException { < nl > + return Bser . parse ( new RequestUpdateMessage ( ) , data ) ; < nl > + } < nl > + < nl > + private ApiOutPeer peer ; < nl > + private long rid ; < nl > + private ApiMessage updatedMessage ; < nl > + < nl > + public RequestUpdateMessage ( @ NotNull ApiOutPeer peer , long rid , @ NotNull ApiMessage updatedMessage ) { < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + this . updatedMessage = updatedMessage ; < nl > + } < nl > + < nl > + public RequestUpdateMessage ( ) { < nl > + < nl > + } < nl > + < nl > + @ NotNull < nl > + public ApiOutPeer getPeer ( ) { < nl > + return this . peer ; < nl > + } < nl > + < nl > + public long getRid ( ) { < nl > + return this . rid ; < nl > + } < nl > + < nl > + @ NotNull < nl > + public ApiMessage getUpdatedMessage ( ) { < nl > + return this . updatedMessage ; < nl > + } < nl > + < nl > + @ Override < nl > + public void parse ( BserValues values ) throws IOException { < nl > + this . peer = values . getObj ( 1 , new ApiOutPeer ( ) ) ; < nl > + this . rid = values . getLong ( 2 ) ; < nl > + this . updatedMessage = ApiMessage . fromBytes ( values . getBytes ( 3 ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void serialize ( BserWriter writer ) throws IOException { < nl > + if ( this . peer = = null ) { < nl > + throw new IOException ( ) ; < nl > + } < nl > + writer . writeObject ( 1 , this . peer ) ; < nl > + writer . writeLong ( 2 , this . rid ) ; < nl > + if ( this . updatedMessage = = null ) { < nl > + throw new IOException ( ) ; < nl > + } < nl > + < nl > + writer . writeBytes ( 3 , this . updatedMessage . buildContainer ( ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + String res = " rpc UpdateMessage { " ; < nl > + res + = " peer = " + this . peer ; < nl > + res + = " , rid = " + this . rid ; < nl > + res + = " , updatedMessage = " + this . updatedMessage ; < nl > + res + = " } " ; < nl > + return res ; < nl > + } < nl > + < nl > + @ Override < nl > + public int getHeaderKey ( ) { < nl > + return HEADER ; < nl > + } < nl > + }
NEAREST DIFF (one line): diff - - git a / actor . json b / actor . json < nl > index 751596d . . 2997de5 100644 < nl > - - - a / actor . json < nl > + + + b / actor . json < nl > @ @ - 3045 , 94 + 3045 , 6 @ @ < nl > { < nl > " type " : " rpc " , < nl > " content " : { < nl > - " name " : " EncryptedReceived " , < nl > - " header " : 116 , < nl > - " response " : { < nl > - " type " : " reference " , < nl > - " name " : " Void " < nl > - } , < nl > - " doc " : [ < nl > - " Confirmation of encrypted message receive by device " , < nl > - { < nl > - " type " : " reference " , < nl > - " argument " : " peer " , < nl > - " category " : " full " , < nl > - " description " : " Destination peer " < nl > - } , < nl > - { < nl > - " type " : " reference " , < nl > - " argument " : " rid " , < nl > - " category " : " full " , < nl > - " description " : " Message random id " < nl > - } < nl > - ] , < nl > - " attributes " : [ < nl > - { < nl > - " type " : { < nl > - " type " : " struct " , < nl > - " childType " : " OutPeer " < nl > - } , < nl > - " id " : 1 , < nl > - " name " : " peer " < nl > - } , < nl > - { < nl > - " type " : { < nl > - " type " : " alias " , < nl > - " childType " : " randomId " < nl > - } , < nl > - " id " : 3 , < nl > - " name " : " rid " < nl > - } < nl > - ] < nl > - } < nl > - } , < nl > - { < nl > - " type " : " rpc " , < nl > - " content " : { < nl > - " name " : " EncryptedRead " , < nl > - " header " : 117 , < nl > - " response " : { < nl > - " type " : " reference " , < nl > - " name " : " Void " < nl > - } , < nl > - " doc " : [ < nl > - " Marking encrypted message as read " , < nl > - { < nl > - " type " : " reference " , < nl > - " argument " : " peer " , < nl > - " category " : " full " , < nl > - " description " : " Destination peer " < nl > - } , < nl > - { < nl > - " type " : " reference " , < nl > - " argument " : " rid " , < nl > - " category " : " full " , < nl > - " description " : " Message random id " < nl > - } < nl > - ] , < nl > - " attributes " : [ < nl > - { < nl > - " type " : { < nl > - " type " : " struct " , < nl > - " childType " : " OutPeer " < nl > - } , < nl > - " id " : 1 , < nl > - " name " : " peer " < nl > - } , < nl > - { < nl > - " type " : { < nl > - " type " : " alias " , < nl > - " childType " : " randomId " < nl > - } , < nl > - " id " : 3 , < nl > - " name " : " rid " < nl > - } < nl > - ] < nl > - } < nl > - } , < nl > - { < nl > - " type " : " rpc " , < nl > - " content " : { < nl > " name " : " MessageReceived " , < nl > " header " : 55 , < nl > " response " : { < nl > diff - - git a / actor . proto b / actor . proto < nl > index 77adf54 . . a8a8e3e 100644 < nl > - - - a / actor . proto < nl > + + + b / actor . proto < nl > @ @ - 747 , 26 + 747 , 6 @ @ message RequestSendMessage { < nl > required bytes message = 4 ; < nl > } < nl > < nl > - / / API # 0x74 < nl > - / / ResponseVoid < nl > - / / Confirmation of encrypted message receive by device < nl > - / / peer Destination peer < nl > - / / rid Message random id < nl > - message RequestEncryptedReceived { < nl > - required OutPeer peer = 1 ; < nl > - required int64 rid = 3 ; < nl > - } < nl > - < nl > - / / API # 0x75 < nl > - / / ResponseVoid < nl > - / / Marking encrypted message as read < nl > - / / peer Destination peer < nl > - / / rid Message random id < nl > - message RequestEncryptedRead { < nl > - required OutPeer peer = 1 ; < nl > - required int64 rid = 3 ; < nl > - } < nl > - < nl > / / API # 0x37 < nl > / / ResponseVoid < nl > / / Confirmation of plain message receive by device < nl > diff - - git a / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps b / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps < nl > index 683c0be . . 4ce1976 100644 < nl > - - - a / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps < nl > + + + b / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps < nl > @ @ - 2894 , 78 + 2894 , 6 @ @ < nl > < ref role = " NX6Kv " node = " GBscvBBqBq " resolve = " message " / > < nl > < / node > < nl > < / node > < nl > - < node concept = " 2m6fVq " id = " GBscvBBqPG " role = " 2m5mJr " > < nl > - < property role = " TrG5h " value = " EncryptedReceived " / > < nl > - < node concept = " 2m7Kf5 " id = " GBscvBBqTe " role = " 2m0hLx " > < nl > - < property role = " 2m7DUN " value = " 1 " / > < nl > - < property role = " TrG5h " value = " peer " / > < nl > - < node concept = " 2m5mGg " id = " GBscvBBqTi " role = " 2m7DVh " > < nl > - < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > < nl > - < / node > < nl > - < / node > < nl > - < node concept = " 2m7Kf5 " id = " GBscvBBqTl " role = " 2m0hLx " > < nl > - < property role = " 2m7DUN " value = " 3 " / > < nl > - < property role = " TrG5h " value = " rid " / > < nl > - < node concept = " wb0Ql " id = " 2vxDjotnVtm " role = " 2m7DVh " > < nl > - < ref role = " wb18D " node = " 2vxDjotnUB8 " resolve = " randomId " / > < nl > - < / node > < nl > - < / node > < nl > - < node concept = " Nu42z " id = " GBscvBBqPH " role = " NuuwV " > < nl > - < property role = " Nu42W " value = " 74 " / > < nl > - < / node > < nl > - < node concept = " 2m1Rp1 " id = " GBscvBBqTu " role = " 2m6efq " > < nl > - < ref role = " 2m1o9l " node = " GBscvBB6 _ K " resolve = " Void " / > < nl > - < / node > < nl > - < node concept = " NXeRC " id = " 2EAJ7H6fo _ W " role = " 1GBnQ6 " > < nl > - < property role = " NXePf " value = " Confirmation of encrypted message receive by device " / > < nl > - < / node > < nl > - < node concept = " NX1gA " id = " 2EAJ7H6fo _ X " role = " 1GBnQ6 " > < nl > - < property role = " NX6R2 " value = " Destination peer " / > < nl > - < property role = " 1GSvIU " value = " full " / > < nl > - < ref role = " NX6Kv " node = " GBscvBBqTe " resolve = " peer " / > < nl > - < / node > < nl > - < node concept = " NX1gA " id = " 2EAJ7H6fo _ Y " role = " 1GBnQ6 " > < nl > - < property role = " NX6R2 " value = " Message random id " / > < nl > - < property role = " 1GSvIU " value = " full " / > < nl > - < ref role = " NX6Kv " node = " GBscvBBqTl " resolve = " rid " / > < nl > - < / node > < nl > - < / node > < nl > - < node concept = " 2m6fVq " id = " GBscvBBqX4 " role = " 2m5mJr " > < nl > - < property role = " TrG5h " value = " EncryptedRead " / > < nl > - < node concept = " 2m7Kf5 " id = " GBscvBBr0H " role = " 2m0hLx " > < nl > - < property role = " 2m7DUN " value = " 1 " / > < nl > - < property role = " TrG5h " value = " peer " / > < nl > - < node concept = " 2m5mGg " id = " GBscvBBr0L " role = " 2m7DVh " > < nl > - < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > < nl > - < / node > < nl > - < / node > < nl > - < node concept = " 2m7Kf5 " id = " GBscvBBr0O " role = " 2m0hLx " > < nl > - < property role = " 2m7DUN " value = " 3 " / > < nl > - < property role = " TrG5h " value = " rid " / > < nl > - < node concept = " wb0Ql " id = " 2vxDjotnVts " role = " 2m7DVh " > < nl > - < ref role = " wb18D " node = " 2vxDjotnUB8 " resolve = " randomId " / > < nl > - < / node > < nl > - < / node > < nl > - < node concept = " Nu42z " id = " GBscvBBqX5 " role = " NuuwV " > < nl > - < property role = " Nu42W " value = " 75 " / > < nl > - < / node > < nl > - < node concept = " 2m1Rp1 " id = " GBscvBBr0X " role = " 2m6efq " > < nl > - < ref role = " 2m1o9l " node = " GBscvBB6 _ K " resolve = " Void " / > < nl > - < / node > < nl > - < node concept = " NXeRC " id = " 2EAJ7H6foA3 " role = " 1GBnQ6 " > < nl > - < property role = " NXePf " value = " Marking encrypted message as read " / > < nl > - < / node > < nl > - < node concept = " NX1gA " id = " 2EAJ7H6foA4 " role = " 1GBnQ6 " > < nl > - < property role = " NX6R2 " value = " Destination peer " / > < nl > - < property role = " 1GSvIU " value = " full " / > < nl > - < ref role = " NX6Kv " node = " GBscvBBr0H " resolve = " peer " / > < nl > - < / node > < nl > - < node concept = " NX1gA " id = " 2EAJ7H6foA5 " role = " 1GBnQ6 " > < nl > - < property role = " NX6R2 " value = " Message random id " / > < nl > - < property role = " 1GSvIU " value = " full " / > < nl > - < ref role = " NX6Kv " node = " GBscvBBr0O " resolve = " rid " / > < nl > - < / node > < nl > - < / node > < nl > < node concept = " 2m6fVq " id = " GBscvBBr4E " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " MessageReceived " / > < nl > < node concept = " 2m7Kf5 " id = " GBscvBBr8q " role = " 2m0hLx " > < nl > diff - - git a / java / im / actor / model / api / parser / RpcParser . java b / java / im / actor / model / api / parser / RpcParser . java < nl > index 708c630 . . 1a1bbd3c 100644 < nl > - - - a / java / im / actor / model / api / parser / RpcParser . java < nl > + + + b / java / im / actor / model / api / parser / RpcParser . java < nl > @ @ - 45 , 8 + 45 , 6 @ @ public class RpcParser extends BaseParser < RpcScope > { < nl > case 112 : return RequestSearchContacts . fromBytes ( payload ) ; < nl > case 14 : return RequestSendEncryptedMessage . fromBytes ( payload ) ; < nl > case 92 : return RequestSendMessage . fromBytes ( payload ) ; < nl > - case 116 : return RequestEncryptedReceived . fromBytes ( payload ) ; < nl > - case 117 : return RequestEncryptedRead . fromBytes ( payload ) ; < nl > case 55 : return RequestMessageReceived . fromBytes ( payload ) ; < nl > case 57 : return RequestMessageRead . fromBytes ( payload ) ; < nl > case 98 : return RequestDeleteMessage . fromBytes ( payload ) ; < nl > diff - - git a / java / im / actor / model / api / rpc / RequestEncryptedRead . java b / java / im / actor / model / api / rpc / RequestEncryptedRead . java < nl > deleted file mode 100644 < nl > index a42f99c . . 0000000 < nl > - - - a / java / im / actor / model / api / rpc / RequestEncryptedRead . java < nl > + + + / dev / null < nl > @ @ - 1 , 75 + 0 , 0 @ @ < nl > - package im . actor . model . api . rpc ; < nl > - / * < nl > - * Generated by the Actor API Scheme generator . DO NOT EDIT ! < nl > - * / < nl > - < nl > - import im . actor . model . droidkit . bser . Bser ; < nl > - import im . actor . model . droidkit . bser . BserParser ; < nl > - import im . actor . model . droidkit . bser . BserObject ; < nl > - import im . actor . model . droidkit . bser . BserValues ; < nl > - import im . actor . model . droidkit . bser . BserWriter ; < nl > - import im . actor . model . droidkit . bser . DataInput ; < nl > - import im . actor . model . droidkit . bser . DataOutput ; < nl > - import static im . actor . model . droidkit . bser . Utils . * ; < nl > - import java . io . IOException ; < nl > - import im . actor . model . network . parser . * ; < nl > - import java . util . List ; < nl > - import java . util . ArrayList ; < nl > - import im . actor . model . api . * ; < nl > - < nl > - public class RequestEncryptedRead extends Request < ResponseVoid > { < nl > - < nl > - public static final int HEADER = 0x75 ; < nl > - public static RequestEncryptedRead fromBytes ( byte [ ] data ) throws IOException { < nl > - return Bser . parse ( new RequestEncryptedRead ( ) , data ) ; < nl > - } < nl > - < nl > - private OutPeer peer ; < nl > - private long rid ; < nl > - < nl > - public RequestEncryptedRead ( OutPeer peer , long rid ) { < nl > - this . peer = peer ; < nl > - this . rid = rid ; < nl > - } < nl > - < nl > - public RequestEncryptedRead ( ) { < nl > - < nl > - } < nl > - < nl > - public OutPeer getPeer ( ) { < nl > - return this . peer ; < nl > - } < nl > - < nl > - public long getRid ( ) { < nl > - return this . rid ; < nl > - } < nl > - < nl > - @ Override < nl > - public void parse ( BserValues values ) throws IOException { < nl > - this . peer = values . getObj ( 1 , new OutPeer ( ) ) ; < nl > - this . rid = values . getLong ( 3 ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void serialize ( BserWriter writer ) throws IOException { < nl > - if ( this . peer = = null ) { < nl > - throw new IOException ( ) ; < nl > - } < nl > - writer . writeObject ( 1 , this . peer ) ; < nl > - writer . writeLong ( 3 , this . rid ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public String toString ( ) { < nl > - String res = " rpc EncryptedRead { " ; < nl > - res + = " peer = " + this . peer ; < nl > - res + = " , rid = " + this . rid ; < nl > - res + = " } " ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public int getHeaderKey ( ) { < nl > - return HEADER ; < nl > - } < nl > - } < nl > diff - - git a / java / im / actor / model / api / rpc / RequestEncryptedReceived . java b / java / im / actor / model / api / rpc / RequestEncryptedReceived . java < nl > deleted file mode 100644 < nl > index 54f8e47 . . 0000000 < nl > - - - a / java / im / actor / model / api / rpc / RequestEncryptedReceived . java < nl > + + + / dev / null < nl > @ @ - 1 , 75 + 0 , 0 @ @ < nl > - package im . actor . model . api . rpc ; < nl > - / * < nl > - * Generated by the Actor API Scheme generator . DO NOT EDIT ! < nl > - * / < nl > - < nl > - import im . actor . model . droidkit . bser . Bser ; < nl > - import im . actor . model . droidkit . bser . BserParser ; < nl > - import im . actor . model . droidkit . bser . BserObject ; < nl > - import im . actor . model . droidkit . bser . BserValues ; < nl > - import im . actor . model . droidkit . bser . BserWriter ; < nl > - import im . actor . model . droidkit . bser . DataInput ; < nl > - import im . actor . model . droidkit . bser . DataOutput ; < nl > - import static im . actor . model . droidkit . bser . Utils . * ; < nl > - import java . io . IOException ; < nl > - import im . actor . model . network . parser . * ; < nl > - import java . util . List ; < nl > - import java . util . ArrayList ; < nl > - import im . actor . model . api . * ; < nl > - < nl > - public class RequestEncryptedReceived extends Request < ResponseVoid > { < nl > - < nl > - public static final int HEADER = 0x74 ; < nl > - public static RequestEncryptedReceived fromBytes ( byte [ ] data ) throws IOException { < nl > - return Bser . parse ( new RequestEncryptedReceived ( ) , data ) ; < nl > - } < nl > - < nl > - private OutPeer peer ; < nl > - private long rid ; < nl > - < nl > - public RequestEncryptedReceived ( OutPeer peer , long rid ) { < nl > - this . peer = peer ; < nl > - this . rid = rid ; < nl > - } < nl > - < nl > - public RequestEncryptedReceived ( ) { < nl > - < nl > - } < nl > - < nl > - public OutPeer getPeer ( ) { < nl > - return this . peer ; < nl > - } < nl > - < nl > - public long getRid ( ) { < nl > - return this . rid ; < nl > - } < nl > - < nl > - @ Override < nl > - public void parse ( BserValues values ) throws IOException { < nl > - this . peer = values . getObj ( 1 , new OutPeer ( ) ) ; < nl > - this . rid = values . getLong ( 3 ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void serialize ( BserWriter writer ) throws IOException { < nl > - if ( this . peer = = null ) { < nl > - throw new IOException ( ) ; < nl > - } < nl > - writer . writeObject ( 1 , this . peer ) ; < nl > - writer . writeLong ( 3 , this . rid ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public String toString ( ) { < nl > - String res = " rpc EncryptedReceived { " ; < nl > - res + = " peer = " + this . peer ; < nl > - res + = " , rid = " + this . rid ; < nl > - res + = " } " ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public int getHeaderKey ( ) { < nl > - return HEADER ; < nl > - } < nl > - }

TEST DIFF:
diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json 
 index ccd99d9 . . c48615b 100644 
 - - - a / actor - sdk / sdk - api / actor . json 
 + + + b / actor - sdk / sdk - api / actor . json 
 @ @ - 4569 , 6 + 4569 , 64 @ @ 
 { 
 " type " : " rpc " , 
 " content " : { 
 + " name " : " UpdateMessage " , 
 + " header " : 2658 , 
 + " response " : { 
 + " type " : " reference " , 
 + " name " : " SeqDate " 
 + } , 
 + " doc " : [ 
 + " Changing Message content " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " peer " , 
 + " category " : " full " , 
 + " description " : " Destination Peer " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " rid " , 
 + " category " : " full " , 
 + " description " : " Message random id " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " updatedMessage " , 
 + " category " : " full " , 
 + " description " : " Updated Message content " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : { 
 + " type " : " struct " , 
 + " childType " : " OutPeer " 
 + } , 
 + " id " : 1 , 
 + " name " : " peer " 
 + } , 
 + { 
 + " type " : { 
 + " type " : " alias " , 
 + " childType " : " randomId " 
 + } , 
 + " id " : 2 , 
 + " name " : " rid " 
 + } , 
 + { 
 + " type " : { 
 + " type " : " trait " , 
 + " childType " : " Message " 
 + } , 
 + " id " : 3 , 
 + " name " : " updatedMessage " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " rpc " , 
 + " content " : { 
 " name " : " MessageReceived " , 
 " header " : 55 , 
 " response " : { 
 diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 index d15ba72 . . 9ed7499 100644 
 - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 @ @ - 4211 , 6 + 4211 , 54 @ @ 
 < ref role = " NX6Kv " node = " GBscvBBqBq " resolve = " message " / > 
 < / node > 
 < / node > 
 + < node concept = " 2m6fVq " id = " 5Wm9DsmkMGN " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " UpdateMessage " / > 
 + < node concept = " 2m7Kf5 " id = " 5Wm9DsmkMSx " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " peer " / > 
 + < node concept = " 2m5mGg " id = " 5Wm9DsmkMS _ " role = " 2m7DVh " > 
 + < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > 
 + < / node > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 5Wm9DsmkMSC " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 2 " / > 
 + < property role = " TrG5h " value = " rid " / > 
 + < node concept = " wb0Ql " id = " 5Wm9DsmkMSI " role = " 2m7DVh " > 
 + < ref role = " wb18D " node = " 2vxDjotnUB8 " resolve = " randomId " / > 
 + < / node > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 5Wm9DsmkMSL " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 3 " / > 
 + < property role = " TrG5h " value = " updatedMessage " / > 
 + < node concept = " 3BlaRf " id = " 5Wm9DsmkMST " role = " 2m7DVh " > 
 + < ref role = " 3BrLez " node = " 55bmeIQey3W " resolve = " Message " / > 
 + < / node > 
 + < / node > 
 + < node concept = " Nu42z " id = " 5Wm9DsmkMGO " role = " NuuwV " > 
 + < property role = " Nu42W " value = " A62 " / > 
 + < / node > 
 + < node concept = " 2m1Rp1 " id = " 5Wm9DsmkMSW " role = " 2m6efq " > 
 + < ref role = " 2m1o9l " node = " 2vxDjotnSoJ " resolve = " SeqDate " / > 
 + < / node > 
 + < node concept = " NXeRC " id = " 5Wm9DsmkMSZ " role = " 1GBnQ6 " > 
 + < property role = " NXePf " value = " Changing Message content " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 5Wm9DsmkMT4 " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " Destination Peer " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 5Wm9DsmkMSx " resolve = " peer " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 5Wm9DsmkMTc " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " Message random id " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 5Wm9DsmkMSC " resolve = " rid " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 5Wm9DsmkMTm " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " Updated Message content " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 5Wm9DsmkMSL " resolve = " updatedMessage " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m6fVq " id = " GBscvBBr4E " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " MessageReceived " / > 
 < node concept = " 2m7Kf5 " id = " GBscvBBr8q " role = " 2m0hLx " > 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / ApiActiveCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / ApiActiveCall . java 
 new file mode 100644 
 index 0000000 . . cfc9e88 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / ApiActiveCall . java 
 @ @ - 0 , 0 + 1 , 78 @ @ 
 + package im . actor . core . api ; 
 + / * 
 + * Generated by the Actor API Scheme generator . DO NOT EDIT ! 
 + * / 
 + 
 + import im . actor . runtime . bser . * ; 
 + import im . actor . runtime . collections . * ; 
 + import static im . actor . runtime . bser . Utils . * ; 
 + import im . actor . core . network . parser . * ; 
 + import org . jetbrains . annotations . Nullable ; 
 + import org . jetbrains . annotations . NotNull ; 
 + import com . google . j2objc . annotations . ObjectiveCName ; 
 + import java . io . IOException ; 
 + import java . util . List ; 
 + import java . util . ArrayList ; 
 + 
 + public class ApiActiveCall extends BserObject { 
 + 
 + private long callId ; 
 + private ApiPeer peer ; 
 + private List < ApiCallMember > callMembers ; 
 + 
 + public ApiActiveCall ( long callId , @ NotNull ApiPeer peer , @ NotNull List < ApiCallMember > callMembers ) { 
 + this . callId = callId ; 
 + this . peer = peer ; 
 + this . callMembers = callMembers ; 
 + } 
 + 
 + public ApiActiveCall ( ) { 
 + 
 + } 
 + 
 + public long getCallId ( ) { 
 + return this . callId ; 
 + } 
 + 
 + @ NotNull 
 + public ApiPeer getPeer ( ) { 
 + return this . peer ; 
 + } 
 + 
 + @ NotNull 
 + public List < ApiCallMember > getCallMembers ( ) { 
 + return this . callMembers ; 
 + } 
 + 
 + @ Override 
 + public void parse ( BserValues values ) throws IOException { 
 + this . callId = values . getLong ( 1 ) ; 
 + this . peer = values . getObj ( 2 , new ApiPeer ( ) ) ; 
 + List < ApiCallMember > _ callMembers = new ArrayList < ApiCallMember > ( ) ; 
 + for ( int i = 0 ; i < values . getRepeatedCount ( 3 ) ; i + + ) { 
 + _ callMembers . add ( new ApiCallMember ( ) ) ; 
 + } 
 + this . callMembers = values . getRepeatedObj ( 3 , _ callMembers ) ; 
 + } 
 + 
 + @ Override 
 + public void serialize ( BserWriter writer ) throws IOException { 
 + writer . writeLong ( 1 , this . callId ) ; 
 + if ( this . peer = = null ) { 
 + throw new IOException ( ) ; 
 + } 
 + writer . writeObject ( 2 , this . peer ) ; 
 + writer . writeRepeatedObj ( 3 , this . callMembers ) ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + String res = " struct ActiveCall { " ; 
 + res + = " callId = " + this . callId ; 
 + res + = " , peer = " + this . peer ; 
 + res + = " , callMembers = " + this . callMembers ; 
 + res + = " } " ; 
 + return res ; 
 + } 
 + 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java 
 index f18844c . . 19ecb96 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / parser / RpcParser . java 
 @ @ - 54 , 6 + 54 , 7 @ @ public class RpcParser extends BaseParser < RpcScope > { 
 case 114 : return RequestAddContact . fromBytes ( payload ) ; 
 case 112 : return RequestSearchContacts . fromBytes ( payload ) ; 
 case 92 : return RequestSendMessage . fromBytes ( payload ) ; 
 + case 2658 : return RequestUpdateMessage . fromBytes ( payload ) ; 
 case 55 : return RequestMessageReceived . fromBytes ( payload ) ; 
 case 57 : return RequestMessageRead . fromBytes ( payload ) ; 
 case 98 : return RequestDeleteMessage . fromBytes ( payload ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestUpdateMessage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestUpdateMessage . java 
 new file mode 100644 
 index 0000000 . . a4cd4d3 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / RequestUpdateMessage . java 
 @ @ - 0 , 0 + 1 , 88 @ @ 
 + package im . actor . core . api . rpc ; 
 + / * 
 + * Generated by the Actor API Scheme generator . DO NOT EDIT ! 
 + * / 
 + 
 + import im . actor . runtime . bser . * ; 
 + import im . actor . runtime . collections . * ; 
 + import static im . actor . runtime . bser . Utils . * ; 
 + import im . actor . core . network . parser . * ; 
 + import org . jetbrains . annotations . Nullable ; 
 + import org . jetbrains . annotations . NotNull ; 
 + import com . google . j2objc . annotations . ObjectiveCName ; 
 + import java . io . IOException ; 
 + import java . util . List ; 
 + import java . util . ArrayList ; 
 + import im . actor . core . api . * ; 
 + 
 + public class RequestUpdateMessage extends Request < ResponseSeqDate > { 
 + 
 + public static final int HEADER = 0xa62 ; 
 + public static RequestUpdateMessage fromBytes ( byte [ ] data ) throws IOException { 
 + return Bser . parse ( new RequestUpdateMessage ( ) , data ) ; 
 + } 
 + 
 + private ApiOutPeer peer ; 
 + private long rid ; 
 + private ApiMessage updatedMessage ; 
 + 
 + public RequestUpdateMessage ( @ NotNull ApiOutPeer peer , long rid , @ NotNull ApiMessage updatedMessage ) { 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + this . updatedMessage = updatedMessage ; 
 + } 
 + 
 + public RequestUpdateMessage ( ) { 
 + 
 + } 
 + 
 + @ NotNull 
 + public ApiOutPeer getPeer ( ) { 
 + return this . peer ; 
 + } 
 + 
 + public long getRid ( ) { 
 + return this . rid ; 
 + } 
 + 
 + @ NotNull 
 + public ApiMessage getUpdatedMessage ( ) { 
 + return this . updatedMessage ; 
 + } 
 + 
 + @ Override 
 + public void parse ( BserValues values ) throws IOException { 
 + this . peer = values . getObj ( 1 , new ApiOutPeer ( ) ) ; 
 + this . rid = values . getLong ( 2 ) ; 
 + this . updatedMessage = ApiMessage . fromBytes ( values . getBytes ( 3 ) ) ; 
 + } 
 + 
 + @ Override 
 + public void serialize ( BserWriter writer ) throws IOException { 
 + if ( this . peer = = null ) { 
 + throw new IOException ( ) ; 
 + } 
 + writer . writeObject ( 1 , this . peer ) ; 
 + writer . writeLong ( 2 , this . rid ) ; 
 + if ( this . updatedMessage = = null ) { 
 + throw new IOException ( ) ; 
 + } 
 + 
 + writer . writeBytes ( 3 , this . updatedMessage . buildContainer ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + String res = " rpc UpdateMessage { " ; 
 + res + = " peer = " + this . peer ; 
 + res + = " , rid = " + this . rid ; 
 + res + = " , updatedMessage = " + this . updatedMessage ; 
 + res + = " } " ; 
 + return res ; 
 + } 
 + 
 + @ Override 
 + public int getHeaderKey ( ) { 
 + return HEADER ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / actor . json b / actor . json 
 index 751596d . . 2997de5 100644 
 - - - a / actor . json 
 + + + b / actor . json 
 @ @ - 3045 , 94 + 3045 , 6 @ @ 
 { 
 " type " : " rpc " , 
 " content " : { 
 - " name " : " EncryptedReceived " , 
 - " header " : 116 , 
 - " response " : { 
 - " type " : " reference " , 
 - " name " : " Void " 
 - } , 
 - " doc " : [ 
 - " Confirmation of encrypted message receive by device " , 
 - { 
 - " type " : " reference " , 
 - " argument " : " peer " , 
 - " category " : " full " , 
 - " description " : " Destination peer " 
 - } , 
 - { 
 - " type " : " reference " , 
 - " argument " : " rid " , 
 - " category " : " full " , 
 - " description " : " Message random id " 
 - } 
 - ] , 
 - " attributes " : [ 
 - { 
 - " type " : { 
 - " type " : " struct " , 
 - " childType " : " OutPeer " 
 - } , 
 - " id " : 1 , 
 - " name " : " peer " 
 - } , 
 - { 
 - " type " : { 
 - " type " : " alias " , 
 - " childType " : " randomId " 
 - } , 
 - " id " : 3 , 
 - " name " : " rid " 
 - } 
 - ] 
 - } 
 - } , 
 - { 
 - " type " : " rpc " , 
 - " content " : { 
 - " name " : " EncryptedRead " , 
 - " header " : 117 , 
 - " response " : { 
 - " type " : " reference " , 
 - " name " : " Void " 
 - } , 
 - " doc " : [ 
 - " Marking encrypted message as read " , 
 - { 
 - " type " : " reference " , 
 - " argument " : " peer " , 
 - " category " : " full " , 
 - " description " : " Destination peer " 
 - } , 
 - { 
 - " type " : " reference " , 
 - " argument " : " rid " , 
 - " category " : " full " , 
 - " description " : " Message random id " 
 - } 
 - ] , 
 - " attributes " : [ 
 - { 
 - " type " : { 
 - " type " : " struct " , 
 - " childType " : " OutPeer " 
 - } , 
 - " id " : 1 , 
 - " name " : " peer " 
 - } , 
 - { 
 - " type " : { 
 - " type " : " alias " , 
 - " childType " : " randomId " 
 - } , 
 - " id " : 3 , 
 - " name " : " rid " 
 - } 
 - ] 
 - } 
 - } , 
 - { 
 - " type " : " rpc " , 
 - " content " : { 
 " name " : " MessageReceived " , 
 " header " : 55 , 
 " response " : { 
 diff - - git a / actor . proto b / actor . proto 
 index 77adf54 . . a8a8e3e 100644 
 - - - a / actor . proto 
 + + + b / actor . proto 
 @ @ - 747 , 26 + 747 , 6 @ @ message RequestSendMessage { 
 required bytes message = 4 ; 
 } 
 
 - / / API # 0x74 
 - / / ResponseVoid 
 - / / Confirmation of encrypted message receive by device 
 - / / peer Destination peer 
 - / / rid Message random id 
 - message RequestEncryptedReceived { 
 - required OutPeer peer = 1 ; 
 - required int64 rid = 3 ; 
 - } 
 - 
 - / / API # 0x75 
 - / / ResponseVoid 
 - / / Marking encrypted message as read 
 - / / peer Destination peer 
 - / / rid Message random id 
 - message RequestEncryptedRead { 
 - required OutPeer peer = 1 ; 
 - required int64 rid = 3 ; 
 - } 
 - 
 / / API # 0x37 
 / / ResponseVoid 
 / / Confirmation of plain message receive by device 
 diff - - git a / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps b / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps 
 index 683c0be . . 4ce1976 100644 
 - - - a / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps 
 + + + b / api - scheme / languages / im . actor . apiLanguage / sandbox / models / im / actor / apiLanguage / sandbox . mps 
 @ @ - 2894 , 78 + 2894 , 6 @ @ 
 < ref role = " NX6Kv " node = " GBscvBBqBq " resolve = " message " / > 
 < / node > 
 < / node > 
 - < node concept = " 2m6fVq " id = " GBscvBBqPG " role = " 2m5mJr " > 
 - < property role = " TrG5h " value = " EncryptedReceived " / > 
 - < node concept = " 2m7Kf5 " id = " GBscvBBqTe " role = " 2m0hLx " > 
 - < property role = " 2m7DUN " value = " 1 " / > 
 - < property role = " TrG5h " value = " peer " / > 
 - < node concept = " 2m5mGg " id = " GBscvBBqTi " role = " 2m7DVh " > 
 - < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > 
 - < / node > 
 - < / node > 
 - < node concept = " 2m7Kf5 " id = " GBscvBBqTl " role = " 2m0hLx " > 
 - < property role = " 2m7DUN " value = " 3 " / > 
 - < property role = " TrG5h " value = " rid " / > 
 - < node concept = " wb0Ql " id = " 2vxDjotnVtm " role = " 2m7DVh " > 
 - < ref role = " wb18D " node = " 2vxDjotnUB8 " resolve = " randomId " / > 
 - < / node > 
 - < / node > 
 - < node concept = " Nu42z " id = " GBscvBBqPH " role = " NuuwV " > 
 - < property role = " Nu42W " value = " 74 " / > 
 - < / node > 
 - < node concept = " 2m1Rp1 " id = " GBscvBBqTu " role = " 2m6efq " > 
 - < ref role = " 2m1o9l " node = " GBscvBB6 _ K " resolve = " Void " / > 
 - < / node > 
 - < node concept = " NXeRC " id = " 2EAJ7H6fo _ W " role = " 1GBnQ6 " > 
 - < property role = " NXePf " value = " Confirmation of encrypted message receive by device " / > 
 - < / node > 
 - < node concept = " NX1gA " id = " 2EAJ7H6fo _ X " role = " 1GBnQ6 " > 
 - < property role = " NX6R2 " value = " Destination peer " / > 
 - < property role = " 1GSvIU " value = " full " / > 
 - < ref role = " NX6Kv " node = " GBscvBBqTe " resolve = " peer " / > 
 - < / node > 
 - < node concept = " NX1gA " id = " 2EAJ7H6fo _ Y " role = " 1GBnQ6 " > 
 - < property role = " NX6R2 " value = " Message random id " / > 
 - < property role = " 1GSvIU " value = " full " / > 
 - < ref role = " NX6Kv " node = " GBscvBBqTl " resolve = " rid " / > 
 - < / node > 
 - < / node > 
 - < node concept = " 2m6fVq " id = " GBscvBBqX4 " role = " 2m5mJr " > 
 - < property role = " TrG5h " value = " EncryptedRead " / > 
 - < node concept = " 2m7Kf5 " id = " GBscvBBr0H " role = " 2m0hLx " > 
 - < property role = " 2m7DUN " value = " 1 " / > 
 - < property role = " TrG5h " value = " peer " / > 
 - < node concept = " 2m5mGg " id = " GBscvBBr0L " role = " 2m7DVh " > 
 - < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > 
 - < / node > 
 - < / node > 
 - < node concept = " 2m7Kf5 " id = " GBscvBBr0O " role = " 2m0hLx " > 
 - < property role = " 2m7DUN " value = " 3 " / > 
 - < property role = " TrG5h " value = " rid " / > 
 - < node concept = " wb0Ql " id = " 2vxDjotnVts " role = " 2m7DVh " > 
 - < ref role = " wb18D " node = " 2vxDjotnUB8 " resolve = " randomId " / > 
 - < / node > 
 - < / node > 
 - < node concept = " Nu42z " id = " GBscvBBqX5 " role = " NuuwV " > 
 - < property role = " Nu42W " value = " 75 " / > 
 - < / node > 
 - < node concept = " 2m1Rp1 " id = " GBscvBBr0X " role = " 2m6efq " > 
 - < ref role = " 2m1o9l " node = " GBscvBB6 _ K " resolve = " Void " / > 
 - < / node > 
 - < node concept = " NXeRC " id = " 2EAJ7H6foA3 " role = " 1GBnQ6 " > 
 - < property role = " NXePf " value = " Marking encrypted message as read " / > 
 - < / node > 
 - < node concept = " NX1gA " id = " 2EAJ7H6foA4 " role = " 1GBnQ6 " > 
 - < property role = " NX6R2 " value = " Destination peer " / > 
 - < property role = " 1GSvIU " value = " full " / > 
 - < ref role = " NX6Kv " node = " GBscvBBr0H " resolve = " peer " / > 
 - < / node > 
 - < node concept = " NX1gA " id = " 2EAJ7H6foA5 " role = " 1GBnQ6 " > 
 - < property role = " NX6R2 " value = " Message random id " / > 
 - < property role = " 1GSvIU " value = " full " / > 
 - < ref role = " NX6Kv " node = " GBscvBBr0O " resolve = " rid " / > 
 - < / node > 
 - < / node > 
 < node concept = " 2m6fVq " id = " GBscvBBr4E " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " MessageReceived " / > 
 < node concept = " 2m7Kf5 " id = " GBscvBBr8q " role = " 2m0hLx " > 
 diff - - git a / java / im / actor / model / api / parser / RpcParser . java b / java / im / actor / model / api / parser / RpcParser . java 
 index 708c630 . . 1a1bbd3c 100644 
 - - - a / java / im / actor / model / api / parser / RpcParser . java 
 + + + b / java / im / actor / model / api / parser / RpcParser . java 
 @ @ - 45 , 8 + 45 , 6 @ @ public class RpcParser extends BaseParser < RpcScope > { 
 case 112 : return RequestSearchContacts . fromBytes ( payload ) ; 
 case 14 : return RequestSendEncryptedMessage . fromBytes ( payload ) ; 
 case 92 : return RequestSendMessage . fromBytes ( payload ) ; 
 - case 116 : return RequestEncryptedReceived . fromBytes ( payload ) ; 
 - case 117 : return RequestEncryptedRead . fromBytes ( payload ) ; 
 case 55 : return RequestMessageReceived . fromBytes ( payload ) ; 
 case 57 : return RequestMessageRead . fromBytes ( payload ) ; 
 case 98 : return RequestDeleteMessage . fromBytes ( payload ) ; 
 diff - - git a / java / im / actor / model / api / rpc / RequestEncryptedRead . java b / java / im / actor / model / api / rpc / RequestEncryptedRead . java 
 deleted file mode 100644 
 index a42f99c . . 0000000 
 - - - a / java / im / actor / model / api / rpc / RequestEncryptedRead . java 
 + + + / dev / null 
 @ @ - 1 , 75 + 0 , 0 @ @ 
 - package im . actor . model . api . rpc ; 
 - / * 
 - * Generated by the Actor API Scheme generator . DO NOT EDIT ! 
 - * / 
 - 
 - import im . actor . model . droidkit . bser . Bser ; 
 - import im . actor . model . droidkit . bser . BserParser ; 
 - import im . actor . model . droidkit . bser . BserObject ; 
 - import im . actor . model . droidkit . bser . BserValues ; 
 - import im . actor . model . droidkit . bser . BserWriter ; 
 - import im . actor . model . droidkit . bser . DataInput ; 
 - import im . actor . model . droidkit . bser . DataOutput ; 
 - import static im . actor . model . droidkit . bser . Utils . * ; 
 - import java . io . IOException ; 
 - import im . actor . model . network . parser . * ; 
 - import java . util . List ; 
 - import java . util . ArrayList ; 
 - import im . actor . model . api . * ; 
 - 
 - public class RequestEncryptedRead extends Request < ResponseVoid > { 
 - 
 - public static final int HEADER = 0x75 ; 
 - public static RequestEncryptedRead fromBytes ( byte [ ] data ) throws IOException { 
 - return Bser . parse ( new RequestEncryptedRead ( ) , data ) ; 
 - } 
 - 
 - private OutPeer peer ; 
 - private long rid ; 
 - 
 - public RequestEncryptedRead ( OutPeer peer , long rid ) { 
 - this . peer = peer ; 
 - this . rid = rid ; 
 - } 
 - 
 - public RequestEncryptedRead ( ) { 
 - 
 - } 
 - 
 - public OutPeer getPeer ( ) { 
 - return this . peer ; 
 - } 
 - 
 - public long getRid ( ) { 
 - return this . rid ; 
 - } 
 - 
 - @ Override 
 - public void parse ( BserValues values ) throws IOException { 
 - this . peer = values . getObj ( 1 , new OutPeer ( ) ) ; 
 - this . rid = values . getLong ( 3 ) ; 
 - } 
 - 
 - @ Override 
 - public void serialize ( BserWriter writer ) throws IOException { 
 - if ( this . peer = = null ) { 
 - throw new IOException ( ) ; 
 - } 
 - writer . writeObject ( 1 , this . peer ) ; 
 - writer . writeLong ( 3 , this . rid ) ; 
 - } 
 - 
 - @ Override 
 - public String toString ( ) { 
 - String res = " rpc EncryptedRead { " ; 
 - res + = " peer = " + this . peer ; 
 - res + = " , rid = " + this . rid ; 
 - res + = " } " ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public int getHeaderKey ( ) { 
 - return HEADER ; 
 - } 
 - } 
 diff - - git a / java / im / actor / model / api / rpc / RequestEncryptedReceived . java b / java / im / actor / model / api / rpc / RequestEncryptedReceived . java 
 deleted file mode 100644 
 index 54f8e47 . . 0000000 
 - - - a / java / im / actor / model / api / rpc / RequestEncryptedReceived . java 
 + + + / dev / null 
 @ @ - 1 , 75 + 0 , 0 @ @ 
 - package im . actor . model . api . rpc ; 
 - / * 
 - * Generated by the Actor API Scheme generator . DO NOT EDIT ! 
 - * / 
 - 
 - import im . actor . model . droidkit . bser . Bser ; 
 - import im . actor . model . droidkit . bser . BserParser ; 
 - import im . actor . model . droidkit . bser . BserObject ; 
 - import im . actor . model . droidkit . bser . BserValues ; 
 - import im . actor . model . droidkit . bser . BserWriter ; 
 - import im . actor . model . droidkit . bser . DataInput ; 
 - import im . actor . model . droidkit . bser . DataOutput ; 
 - import static im . actor . model . droidkit . bser . Utils . * ; 
 - import java . io . IOException ; 
 - import im . actor . model . network . parser . * ; 
 - import java . util . List ; 
 - import java . util . ArrayList ; 
 - import im . actor . model . api . * ; 
 - 
 - public class RequestEncryptedReceived extends Request < ResponseVoid > { 
 - 
 - public static final int HEADER = 0x74 ; 
 - public static RequestEncryptedReceived fromBytes ( byte [ ] data ) throws IOException { 
 - return Bser . parse ( new RequestEncryptedReceived ( ) , data ) ; 
 - } 
 - 
 - private OutPeer peer ; 
 - private long rid ; 
 - 
 - public RequestEncryptedReceived ( OutPeer peer , long rid ) { 
 - this . peer = peer ; 
 - this . rid = rid ; 
 - } 
 - 
 - public RequestEncryptedReceived ( ) { 
 - 
 - } 
 - 
 - public OutPeer getPeer ( ) { 
 - return this . peer ; 
 - } 
 - 
 - public long getRid ( ) { 
 - return this . rid ; 
 - } 
 - 
 - @ Override 
 - public void parse ( BserValues values ) throws IOException { 
 - this . peer = values . getObj ( 1 , new OutPeer ( ) ) ; 
 - this . rid = values . getLong ( 3 ) ; 
 - } 
 - 
 - @ Override 
 - public void serialize ( BserWriter writer ) throws IOException { 
 - if ( this . peer = = null ) { 
 - throw new IOException ( ) ; 
 - } 
 - writer . writeObject ( 1 , this . peer ) ; 
 - writer . writeLong ( 3 , this . rid ) ; 
 - } 
 - 
 - @ Override 
 - public String toString ( ) { 
 - String res = " rpc EncryptedReceived { " ; 
 - res + = " peer = " + this . peer ; 
 - res + = " , rid = " + this . rid ; 
 - res + = " } " ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public int getHeaderKey ( ) { 
 - return HEADER ; 
 - } 
 - }
