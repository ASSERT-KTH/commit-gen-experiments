BLEU SCORE: 0.03772691894380681

TEST MSG: Update SequenceServiceSpec . scala
GENERATED MSG: test ( server ) : increased timeout

TEST DIFF (one line): diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala < nl > index 66118b6 . . f97f715 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala < nl > @ @ - 28 , 7 + 28 , 6 @ @ final class SequenceServiceSpec extends BaseAppSuite ( { < nl > < nl > it should " get state " in getState < nl > it should " get difference " in getDifference < nl > - it should " get difference with STRIP _ ENTITIES " in getDifferenceStripEntities < nl > it should " not produce empty difference if there is one update bigger than difference size limit " in bigUpdate < nl > < nl > private val config = SequenceServiceConfig . load ( ) . get
NEAREST DIFF (one line): diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala < nl > index 746b090 . . 773182d 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala < nl > @ @ - 117 , 7 + 117 , 7 @ @ class AuthServiceObsoleteSpec extends BaseAppSuite { < nl > } < nl > } < nl > < nl > - Thread . sleep ( 1000 ) < nl > + Thread . sleep ( 5000 ) < nl > < nl > whenReady ( db . run ( persist . sequence . SeqUpdateRepo . find ( authId ) . head ) ) { update ⇒ < nl > update . header should = = = ( UpdateContactRegistered . header )

TEST DIFF:
diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala 
 index 66118b6 . . f97f715 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / SequenceServiceSpec . scala 
 @ @ - 28 , 7 + 28 , 6 @ @ final class SequenceServiceSpec extends BaseAppSuite ( { 
 
 it should " get state " in getState 
 it should " get difference " in getDifference 
 - it should " get difference with STRIP _ ENTITIES " in getDifferenceStripEntities 
 it should " not produce empty difference if there is one update bigger than difference size limit " in bigUpdate 
 
 private val config = SequenceServiceConfig . load ( ) . get

NEAREST DIFF:
diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala 
 index 746b090 . . 773182d 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / AuthServiceObsoleteSpec . scala 
 @ @ - 117 , 7 + 117 , 7 @ @ class AuthServiceObsoleteSpec extends BaseAppSuite { 
 } 
 } 
 
 - Thread . sleep ( 1000 ) 
 + Thread . sleep ( 5000 ) 
 
 whenReady ( db . run ( persist . sequence . SeqUpdateRepo . find ( authId ) . head ) ) { update ⇒ 
 update . header should = = = ( UpdateContactRegistered . header )
