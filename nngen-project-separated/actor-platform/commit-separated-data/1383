BLEU SCORE: 0.26584835766658776

TEST MSG: fix ( server ) : don ' t start up server if migration fails
GENERATED MSG: fix ( server ) : jndi error

TEST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > index 87732aa . . 803ea03 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > @ @ - 9 , 7 + 9 , 7 @ @ import org . flywaydb . core . Flyway < nl > import slick . driver . PostgresDriver . api . Database < nl > import slick . jdbc . { HikariCPJdbcDataSource , JdbcDataSource } < nl > < nl > - import scala . util . Try < nl > + import scala . util . { Failure , Success , Try } < nl > < nl > trait DbExtension extends Extension { < nl > val ds : JdbcDataSource < nl > @ @ - 42 , 8 + 42 , 9 @ @ object DbExtension extends ExtensionId [ DbExtensionImpl ] with ExtensionIdProvider < nl > < nl > val ext = new DbExtensionImpl ( ds , db ) < nl > < nl > - Try ( ext . migrate ( ) ) recover { < nl > - case e ⇒ < nl > + Try ( ext . migrate ( ) ) match { < nl > + case Success ( _ ) ⇒ < nl > + case Failure ( e ) ⇒ < nl > log . error ( e , " Migration failed " ) < nl > throw e < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala < nl > index d1e36b5 . . 4e08db6 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala < nl > @ @ - 1 , 8 + 1 , 9 @ @ < nl > package im . actor . server < nl > < nl > - import javax . naming . _ < nl > import javax . naming . Context . _ < nl > < nl > + import tyrex . naming . MemoryContextFactory < nl > + < nl > / * * < nl > * JNDI Helpers . < nl > * / < nl > @ @ - 18 , 12 + 19 , 13 @ @ object JNDI { < nl > < nl > val env = new java . util . Hashtable [ String , String ] < nl > < nl > + System . setProperty ( INITIAL _ CONTEXT _ FACTORY , IN _ MEMORY _ JNDI ) < nl > env . put ( INITIAL _ CONTEXT _ FACTORY , IN _ MEMORY _ JNDI ) < nl > < nl > + System . setProperty ( PROVIDER _ URL , IN _ MEMORY _ URL ) < nl > env . put ( PROVIDER _ URL , IN _ MEMORY _ URL ) < nl > < nl > - new InitialContext ( env ) < nl > - < nl > + new MemoryContextFactory ( ) . getInitialContext ( env ) < nl > } < nl > < nl > } < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > index 098da6a . . 3737288 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala < nl > @ @ - 1 , 20 + 1 , 14 @ @ < nl > package im . actor . server . db < nl > < nl > - import java . util < nl > - import javax . naming . { NamingException , Context , InitialContext } < nl > - import javax . naming . spi . { InitialContextFactory , InitialContextFactoryBuilder , NamingManager } < nl > - import javax . sql . DataSource < nl > - < nl > - import scala . util . Try < nl > - < nl > import akka . actor . _ < nl > - import com . typesafe . config . { ConfigFactory , Config } < nl > import com . github . kxbmap . configs . _ < nl > + import com . typesafe . config . { Config , ConfigFactory } < nl > + import im . actor . server . JNDI < nl > import org . flywaydb . core . Flyway < nl > import slick . driver . PostgresDriver . api . Database < nl > - import slick . jdbc . { JdbcDataSource , HikariCPJdbcDataSource } < nl > + import slick . jdbc . { HikariCPJdbcDataSource , JdbcDataSource } < nl > < nl > - import im . actor . server . JNDI < nl > + import scala . util . Try < nl > < nl > trait DbExtension extends Extension { < nl > val ds : JdbcDataSource

TEST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 index 87732aa . . 803ea03 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 @ @ - 9 , 7 + 9 , 7 @ @ import org . flywaydb . core . Flyway 
 import slick . driver . PostgresDriver . api . Database 
 import slick . jdbc . { HikariCPJdbcDataSource , JdbcDataSource } 
 
 - import scala . util . Try 
 + import scala . util . { Failure , Success , Try } 
 
 trait DbExtension extends Extension { 
 val ds : JdbcDataSource 
 @ @ - 42 , 8 + 42 , 9 @ @ object DbExtension extends ExtensionId [ DbExtensionImpl ] with ExtensionIdProvider 
 
 val ext = new DbExtensionImpl ( ds , db ) 
 
 - Try ( ext . migrate ( ) ) recover { 
 - case e ⇒ 
 + Try ( ext . migrate ( ) ) match { 
 + case Success ( _ ) ⇒ 
 + case Failure ( e ) ⇒ 
 log . error ( e , " Migration failed " ) 
 throw e 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala 
 index d1e36b5 . . 4e08db6 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / JNDI . scala 
 @ @ - 1 , 8 + 1 , 9 @ @ 
 package im . actor . server 
 
 - import javax . naming . _ 
 import javax . naming . Context . _ 
 
 + import tyrex . naming . MemoryContextFactory 
 + 
 / * * 
 * JNDI Helpers . 
 * / 
 @ @ - 18 , 12 + 19 , 13 @ @ object JNDI { 
 
 val env = new java . util . Hashtable [ String , String ] 
 
 + System . setProperty ( INITIAL _ CONTEXT _ FACTORY , IN _ MEMORY _ JNDI ) 
 env . put ( INITIAL _ CONTEXT _ FACTORY , IN _ MEMORY _ JNDI ) 
 
 + System . setProperty ( PROVIDER _ URL , IN _ MEMORY _ URL ) 
 env . put ( PROVIDER _ URL , IN _ MEMORY _ URL ) 
 
 - new InitialContext ( env ) 
 - 
 + new MemoryContextFactory ( ) . getInitialContext ( env ) 
 } 
 
 } 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 index 098da6a . . 3737288 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / db / DbExtension . scala 
 @ @ - 1 , 20 + 1 , 14 @ @ 
 package im . actor . server . db 
 
 - import java . util 
 - import javax . naming . { NamingException , Context , InitialContext } 
 - import javax . naming . spi . { InitialContextFactory , InitialContextFactoryBuilder , NamingManager } 
 - import javax . sql . DataSource 
 - 
 - import scala . util . Try 
 - 
 import akka . actor . _ 
 - import com . typesafe . config . { ConfigFactory , Config } 
 import com . github . kxbmap . configs . _ 
 + import com . typesafe . config . { Config , ConfigFactory } 
 + import im . actor . server . JNDI 
 import org . flywaydb . core . Flyway 
 import slick . driver . PostgresDriver . api . Database 
 - import slick . jdbc . { JdbcDataSource , HikariCPJdbcDataSource } 
 + import slick . jdbc . { HikariCPJdbcDataSource , JdbcDataSource } 
 
 - import im . actor . server . JNDI 
 + import scala . util . Try 
 
 trait DbExtension extends Extension { 
 val ds : JdbcDataSource
