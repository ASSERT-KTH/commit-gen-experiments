BLEU SCORE: 0.3237722713145643

TEST MSG: fix ( core ) : Fixing non - notifying active dialogs on read by me
GENERATED MSG: fix ( core ) : Fixing isLoaded flag in chat

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index 2327bbb . . 9377357 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 124 , 7 + 124 , 7 @ @ public class RouterActor extends ModuleActor { < nl > } < nl > } < nl > < nl > - < nl > + < nl > / / < nl > / / Active Dialogs < nl > / / < nl > @ @ - 471 , 6 + 471 , 8 @ @ public class RouterActor extends ModuleActor { < nl > conversationStates . addOrUpdateItem ( state ) ; < nl > < nl > dialogsActor ( new DialogsActor . CounterChanged ( peer , counter ) ) ; < nl > + < nl > + notifyActiveDialogsVM ( ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index cb2a5f0 . . a145ef3 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 239 , 6 + 239 , 10 @ @ public class RouterActor extends ModuleActor { < nl > state = state . changeOutReceiveDate ( maxReceiveDate ) ; < nl > isChanged = true ; < nl > } < nl > + if ( state . isLoaded ( ) ! = isEnded ) { < nl > + state = state . changeIsLoaded ( isEnded ) ; < nl > + isChanged = true ; < nl > + } < nl > if ( isChanged ) { < nl > conversationStates . addOrUpdateItem ( state ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index 2327bbb . . 9377357 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 124 , 7 + 124 , 7 @ @ public class RouterActor extends ModuleActor { 
 } 
 } 
 
 - 
 + 
 / / 
 / / Active Dialogs 
 / / 
 @ @ - 471 , 6 + 471 , 8 @ @ public class RouterActor extends ModuleActor { 
 conversationStates . addOrUpdateItem ( state ) ; 
 
 dialogsActor ( new DialogsActor . CounterChanged ( peer , counter ) ) ; 
 + 
 + notifyActiveDialogsVM ( ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index cb2a5f0 . . a145ef3 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 239 , 6 + 239 , 10 @ @ public class RouterActor extends ModuleActor { 
 state = state . changeOutReceiveDate ( maxReceiveDate ) ; 
 isChanged = true ; 
 } 
 + if ( state . isLoaded ( ) ! = isEnded ) { 
 + state = state . changeIsLoaded ( isEnded ) ; 
 + isChanged = true ; 
 + } 
 if ( isChanged ) { 
 conversationStates . addOrUpdateItem ( state ) ; 
 }
