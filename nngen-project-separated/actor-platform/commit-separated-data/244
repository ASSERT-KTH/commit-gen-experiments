BLEU SCORE: 0.3816330911371337

TEST MSG: fix ( core ) : safe update inMaxDate on in messages
GENERATED MSG: fix ( core ) : update read state in new auth

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index afc32b1 . . aaf5417 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 240 , 8 + 240 , 10 @ @ public class RouterActor extends ModuleActor { < nl > if ( maxInDate > 0 ) { < nl > state = state < nl > . changeInReadDate ( maxInDate ) < nl > - . changeInMaxDate ( maxInDate ) < nl > . changeCounter ( 0 ) ; < nl > + if ( state . getInMaxMessageDate ( ) < maxInDate ) { < nl > + state . changeInMaxDate ( maxInDate ) ; < nl > + } < nl > context ( ) . getMessagesModule ( ) . getPlainReadActor ( ) < nl > . send ( new CursorReaderActor . MarkRead ( peer , maxInDate ) ) ; < nl > context ( ) . getNotificationsModule ( ) . onOwnRead ( peer , maxInDate ) ; < nl > @ @ - 251 , 7 + 253 , 7 @ @ public class RouterActor extends ModuleActor { < nl > } else { < nl > / / Updating counter < nl > state = state . changeCounter ( state . getUnreadCount ( ) + unreadCount ) ; < nl > - if ( maxInDate > 0 ) { < nl > + if ( maxInDate > state . getInMaxMessageDate ( ) ) { < nl > state = state < nl > . changeInMaxDate ( maxInDate ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java < nl > index 8e83214 . . 3dfb65b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java < nl > @ @ - 492 , 13 + 492 , 14 @ @ public class ConversationActor extends ModuleActor { < nl > < nl > private void checkReadState ( boolean updateDialogs ) { < nl > if ( state . getInMaxMessageDate ( ) > state . getInReadDate ( ) ) { < nl > + boolean inReadStateWasNull = state . getInReadDate ( ) = = 0 ; < nl > state = state . changeInReadDate ( state . getInMaxMessageDate ( ) ) ; < nl > conversationState . addOrUpdateItem ( state ) ; < nl > < nl > boolean wasNotNull = inPendingIndex . getCount ( ) ! = 0 ; < nl > inPendingIndex . clear ( ) ; < nl > readerActor . send ( new OwnReadActor . MessageRead ( peer , state . getInReadDate ( ) ) ) ; < nl > - if ( wasNotNull & & updateDialogs ) { < nl > + if ( ( wasNotNull | | inReadStateWasNull ) & & updateDialogs ) { < nl > if ( ! isHiddenPeer ) { < nl > dialogsActor . send ( new DialogsActor . CounterChanged ( peer , 0 ) ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index afc32b1 . . aaf5417 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 240 , 8 + 240 , 10 @ @ public class RouterActor extends ModuleActor { 
 if ( maxInDate > 0 ) { 
 state = state 
 . changeInReadDate ( maxInDate ) 
 - . changeInMaxDate ( maxInDate ) 
 . changeCounter ( 0 ) ; 
 + if ( state . getInMaxMessageDate ( ) < maxInDate ) { 
 + state . changeInMaxDate ( maxInDate ) ; 
 + } 
 context ( ) . getMessagesModule ( ) . getPlainReadActor ( ) 
 . send ( new CursorReaderActor . MarkRead ( peer , maxInDate ) ) ; 
 context ( ) . getNotificationsModule ( ) . onOwnRead ( peer , maxInDate ) ; 
 @ @ - 251 , 7 + 253 , 7 @ @ public class RouterActor extends ModuleActor { 
 } else { 
 / / Updating counter 
 state = state . changeCounter ( state . getUnreadCount ( ) + unreadCount ) ; 
 - if ( maxInDate > 0 ) { 
 + if ( maxInDate > state . getInMaxMessageDate ( ) ) { 
 state = state 
 . changeInMaxDate ( maxInDate ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java 
 index 8e83214 . . 3dfb65b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / ConversationActor . java 
 @ @ - 492 , 13 + 492 , 14 @ @ public class ConversationActor extends ModuleActor { 
 
 private void checkReadState ( boolean updateDialogs ) { 
 if ( state . getInMaxMessageDate ( ) > state . getInReadDate ( ) ) { 
 + boolean inReadStateWasNull = state . getInReadDate ( ) = = 0 ; 
 state = state . changeInReadDate ( state . getInMaxMessageDate ( ) ) ; 
 conversationState . addOrUpdateItem ( state ) ; 
 
 boolean wasNotNull = inPendingIndex . getCount ( ) ! = 0 ; 
 inPendingIndex . clear ( ) ; 
 readerActor . send ( new OwnReadActor . MessageRead ( peer , state . getInReadDate ( ) ) ) ; 
 - if ( wasNotNull & & updateDialogs ) { 
 + if ( ( wasNotNull | | inReadStateWasNull ) & & updateDialogs ) { 
 if ( ! isHiddenPeer ) { 
 dialogsActor . send ( new DialogsActor . CounterChanged ( peer , 0 ) ) ; 
 }
