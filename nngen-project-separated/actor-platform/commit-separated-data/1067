BLEU SCORE: 0.15464260451973766

TEST MSG: fix ( iOS ) : some fix ' es for voice memos wrap delegates binding ( beta )
GENERATED MSG: fix + chore ( iOS ) : voice memo cell binded progress , chore some unused code

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > index fd610b6 . . 6ce5e8c 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > @ @ - 25 , 6 + 25 , 7 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > < nl > / / Audio notes < nl > public var voicePlayer : AAModernConversationAudioPlayer ! < nl > + public var voiceContext : AAModernViewInlineMediaContext ! < nl > < nl > public var currentAudioFileId : jlong = 0 < nl > public var voicesCache : Dictionary < jlong , Float > = Dictionary < jlong , Float > ( ) < nl > @ @ - 368 , 22 + 369 , 24 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > < nl > func playVoiceFromPath ( path : String , fileId : jlong , position : Float ) { < nl > < nl > - if ( self . voicePlayer = = nil ) { < nl > - self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) < nl > - } < nl > - < nl > if ( self . currentAudioFileId ! = fileId ) { < nl > - self . voicePlayer ? . pause ( ) < nl > - < nl > self . currentAudioFileId = fileId < nl > - self . voicePlayer ? . play ( position ) < nl > + < nl > + self . voicePlayer ? . stop ( ) < nl > + self . voicePlayer ? . audioPlayerStopAndFinish ( ) < nl > + < nl > + self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) < nl > + self . voiceContext = self . voicePlayer . inlineMediaContext ( ) < nl > + < nl > + < nl > + self . voicePlayer ? . play ( ) < nl > < nl > } else { < nl > < nl > if self . voicePlayer ? . isPaused ( ) = = false { < nl > self . voicePlayer ? . pause ( ) < nl > } else { < nl > - self . voicePlayer ? . play ( position ) < nl > + self . voicePlayer ? . play ( ) < nl > } < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift < nl > index ff57f52 . . 7677fd4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift < nl > @ @ - 145 , 30 + 145 , 35 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > } < nl > < nl > dispatchOnUi { ( ) - > Void in < nl > - self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = nil < nl > - self . controller . voicePlayer ? . delegate = nil < nl > - < nl > < nl > / / let content = bindedMessage ! . content as ! ACDocumentContent < nl > < nl > - < nl > - if self . controller . currentAudioFileId ! = self . bindedMessage ? . rid { < nl > - self . soundProgressSlider . value = 0 . 0 < nl > - } else { < nl > - self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = self < nl > - self . controller . voicePlayer ? . delegate = self < nl > - if self . controller . voicePlayer ? . isPaused ( ) = = false { < nl > - self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > - } else { < nl > + let content = self . bindedMessage ! . content as ! ACDocumentContent < nl > + if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { < nl > + let fileID = fileSource . getFileReference ( ) . getFileId ( ) < nl > + < nl > + if self . controller . currentAudioFileId ! = fileID { < nl > + self . soundProgressSlider . value = 0 . 0 < nl > self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > + self . controller . voiceContext ? . removeDelegate ( self ) < nl > + } else { < nl > + self . controller . voiceContext ? . delegate = self < nl > + self . controller . voicePlayer ? . delegate = self < nl > + < nl > + if self . controller . voicePlayer ? . isPaused ( ) = = false { < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > + } else { < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > + } < nl > + < nl > } < nl > < nl > - } < nl > - < nl > - if let progressVoice = self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] { < nl > - if progressVoice > 0 . 0 { < nl > - self . soundProgressSlider . value = progressVoice < nl > + if let progressVoice = self . controller . voicesCache [ fileID ] { < nl > + if progressVoice > 0 . 0 { < nl > + self . soundProgressSlider . value = progressVoice < nl > + } < nl > } < nl > + < nl > } < nl > < nl > } < nl > @ @ - 284 , 13 + 289 , 23 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > dispatchOnUi ( { ( ) - > Void in < nl > < nl > let path = CocoaFiles . pathFromDescriptor ( reference ) < nl > - < nl > < nl > - self . controller . playVoiceFromPath ( path , fileId : fileSource . getFileReference ( ) . getFileId ( ) , position : self . soundProgressSlider . value ) < nl > + let fileID = fileSource . getFileReference ( ) . getFileId ( ) < nl > + < nl > + if let progressVoice = self . controller . voicesCache [ fileID ] { < nl > + if progressVoice > 0 . 0 { < nl > + self . controller . playVoiceFromPath ( path , fileId : fileID , position : progressVoice ) < nl > + } else { < nl > + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) < nl > + } < nl > + } else { < nl > + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) < nl > + } < nl > + < nl > self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > < nl > self . controller . voicePlayer . delegate = self < nl > - self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self < nl > + self . controller . voiceContext . delegate = self < nl > < nl > } ) < nl > < nl > @ @ - 309 , 12 + 324 , 26 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > < nl > let path = CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) < nl > < nl > - self . controller . playVoiceFromPath ( path , fileId : rid , position : self . soundProgressSlider . value ) < nl > - < nl > - self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > - < nl > - self . controller . voicePlayer . delegate = self < nl > - self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self < nl > + let content = self . bindedMessage ! . content as ! ACDocumentContent < nl > + if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { < nl > + let fileID = fileSource . getFileReference ( ) . getFileId ( ) < nl > + < nl > + if let progressVoice = self . controller . voicesCache [ fileID ] { < nl > + if progressVoice > 0 . 0 { < nl > + self . controller . playVoiceFromPath ( path , fileId : fileID , position : progressVoice ) < nl > + } else { < nl > + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) < nl > + } < nl > + } else { < nl > + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) < nl > + } < nl > + < nl > + < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > + < nl > + self . controller . voicePlayer . delegate = self < nl > + self . controller . voiceContext . delegate = self < nl > + } < nl > < nl > < nl > } ) < nl > @ @ - 335 , 7 + 364 , 7 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > self . soundProgressSlider . value = 0 . 0 < nl > self . controller . currentAudioFileId = 0 < nl > - self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = 0 < nl > + self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = 0 . 0 < nl > } < nl > < nl > } < nl > @ @ - 350 , 7 + 379 , 8 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > } < nl > < nl > - self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = playbackPosition < nl > + self . controller . voicesCache [ self . controller . currentAudioFileId ] = playbackPosition < nl > + < nl > < nl > } ) < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h < nl > index bd92f10 . . 40e6d7b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h < nl > @ @ - 27 , 6 + 27 , 8 @ @ < nl > - ( void ) pause ; < nl > - ( void ) stop ; < nl > < nl > + - ( void ) audioPlayerStopAndFinish ; < nl > + < nl > - ( float ) playbackPosition ; < nl > - ( float ) playbackPositionSync : ( bool ) sync ; < nl > - ( NSTimeInterval ) duration ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m < nl > index 1755534 . . 0de8a3e 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m < nl > @ @ - 183 , 4 + 183 , 35 @ @ < nl > } ) ; < nl > } < nl > < nl > + - ( void ) audioPlayerStopAndFinish < nl > + { < nl > + dispatch _ async ( dispatch _ get _ main _ queue ( ) , ^ < nl > + { < nl > + < nl > + _ isPaused = true ; < nl > + < nl > + if ( _ timer ! = nil ) < nl > + { < nl > + [ _ timer invalidate ] ; < nl > + _ timer = nil ; < nl > + } < nl > + < nl > + [ _ inlineMediaContext postUpdatePlaybackPosition : false ] ; < nl > + < nl > + [ self cleanup ] ; < nl > + < nl > + [ _ delegate audioPlayerDidFinish ] ; < nl > + < nl > + / / [ _ audioPlayer _ notifyFinished ] ; < nl > + < nl > + / / [ _ inlineMediaContext postUpdatePlaybackPosition : false ] ; < nl > + < nl > + / / [ self cleanup ] ; < nl > + < nl > + / / id < AAModernConversationAudioPlayerDelegate > delegate = _ delegate ; < nl > + / / if ( [ delegate respondsToSelector : @ selector ( audioPlayerDidFinish ) ] ) < nl > + / / [ delegate audioPlayerDidFinish ] ; < nl > + } ) ; < nl > + } < nl > + < nl > @ end
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > index d9642be . . fd610b6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > @ @ - 23 , 10 + 23 , 12 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > private var prevCount : Int = 0 < nl > private var unreadMessageId : jlong = 0 < nl > < nl > - / / / < nl > - < nl > + / / Audio notes < nl > public var voicePlayer : AAModernConversationAudioPlayer ! < nl > < nl > + public var currentAudioFileId : jlong = 0 < nl > + public var voicesCache : Dictionary < jlong , Float > = Dictionary < jlong , Float > ( ) < nl > + < nl > public init ( peer : ACPeer ) { < nl > self . peer = peer < nl > < nl > @ @ - 359 , 20 + 361 , 33 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > } ) < nl > } < nl > < nl > + / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / MARK : - audio play < nl > + / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > - / / audio play < nl > < nl > - func playVoiceFromPath ( path : String ) { < nl > + func playVoiceFromPath ( path : String , fileId : jlong , position : Float ) { < nl > < nl > - if ( self . voicePlayer ! = nil ) { < nl > + if ( self . voicePlayer = = nil ) { < nl > + self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) < nl > + } < nl > + < nl > + if ( self . currentAudioFileId ! = fileId ) { < nl > + self . voicePlayer ? . pause ( ) < nl > < nl > - self . voicePlayer . pause ( ) < nl > + self . currentAudioFileId = fileId < nl > + self . voicePlayer ? . play ( position ) < nl > + < nl > + } else { < nl > + < nl > + if self . voicePlayer ? . isPaused ( ) = = false { < nl > + self . voicePlayer ? . pause ( ) < nl > + } else { < nl > + self . voicePlayer ? . play ( position ) < nl > + } < nl > < nl > } < nl > < nl > - self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) < nl > - self . voicePlayer . play ( 0 ) < nl > - < nl > } < nl > < nl > func playVideoFromPath ( path : String ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift < nl > index 01f35e5 . . bf5e4f9 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift < nl > @ @ - 154 , 7 + 154 , 7 @ @ public class AABubbleDocumentCell : AABubbleBaseFileCell , UIDocumentInteractionCo < nl > if ( content . getName ( ) . hasSuffix ( " . ogg " ) ) { < nl > < nl > print ( " paaaaath = = = = \ ( CocoaFiles . pathFromDescriptor ( reference ) ) " ) < nl > - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) < nl > + / / self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) < nl > < nl > return < nl > } < nl > @ @ - 180 , 7 + 180 , 7 @ @ public class AABubbleDocumentCell : AABubbleBaseFileCell , UIDocumentInteractionCo < nl > if ( content . getName ( ) . hasSuffix ( " . ogg " ) ) { < nl > < nl > print ( " paaaaath2 = = = = \ ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) " ) < nl > - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) < nl > + / / self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) < nl > < nl > return < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift < nl > index 4a85b41 . . ff57f52 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift < nl > @ @ - 45 , 6 + 45 , 10 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > < nl > soundProgressSlider . tintColor = appStyle . chatStatusSending < nl > < nl > + soundProgressSlider . userInteractionEnabled = false < nl > + < nl > + / / soundProgressSlider . addTarget ( self , action : " seekToNewAudioValue " , forControlEvents : UIControlEvents . ValueChanged ) < nl > + < nl > let insets = UIEdgeInsets ( top : 0 , left : 0 , bottom : 0 , right : 0 ) < nl > < nl > let trackLeftImage = UIImage . tinted ( " aa _ voiceplaybackground " , color : UIColor ( red : 0 . 0 , green : 0 . 761 , blue : 0 . 9964 , alpha : 1 . 0 ) ) < nl > @ @ - 140 , 8 + 144 , 34 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > < nl > } < nl > < nl > - self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = nil < nl > - self . controller . voicePlayer ? . delegate = nil < nl > + dispatchOnUi { ( ) - > Void in < nl > + self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = nil < nl > + self . controller . voicePlayer ? . delegate = nil < nl > + < nl > + < nl > + / / let content = bindedMessage ! . content as ! ACDocumentContent < nl > + < nl > + < nl > + if self . controller . currentAudioFileId ! = self . bindedMessage ? . rid { < nl > + self . soundProgressSlider . value = 0 . 0 < nl > + } else { < nl > + self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = self < nl > + self . controller . voicePlayer ? . delegate = self < nl > + if self . controller . voicePlayer ? . isPaused ( ) = = false { < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > + } else { < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > + } < nl > + < nl > + } < nl > + < nl > + if let progressVoice = self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] { < nl > + if progressVoice > 0 . 0 { < nl > + self . soundProgressSlider . value = progressVoice < nl > + } < nl > + } < nl > + < nl > + } < nl > < nl > < nl > / / Update time < nl > @ @ - 252 , 11 + 282 , 16 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > } , onDownloaded : { ( reference ) - > ( ) in < nl > < nl > dispatchOnUi ( { ( ) - > Void in < nl > - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) < nl > + < nl > + let path = CocoaFiles . pathFromDescriptor ( reference ) < nl > + < nl > + < nl > + self . controller . playVoiceFromPath ( path , fileId : fileSource . getFileReference ( ) . getFileId ( ) , position : self . soundProgressSlider . value ) < nl > self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > < nl > self . controller . voicePlayer . delegate = self < nl > self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self < nl > + < nl > } ) < nl > < nl > } ) ) < nl > @ @ - 271 , 11 + 306 , 17 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > } , onUploadedClosure : { ( ) - > ( ) in < nl > < nl > dispatchOnUi ( { ( ) - > Void in < nl > - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) < nl > + < nl > + let path = CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) < nl > + < nl > + self . controller . playVoiceFromPath ( path , fileId : rid , position : self . soundProgressSlider . value ) < nl > + < nl > self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) < nl > < nl > self . controller . voicePlayer . delegate = self < nl > self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self < nl > + < nl > + < nl > } ) < nl > < nl > < nl > @ @ - 284 , 20 + 325 , 34 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl < nl > } < nl > } < nl > < nl > + public func seekToNewAudioValue ( ) { < nl > + < nl > + } < nl > + < nl > public func audioPlayerDidFinish ( ) { < nl > < nl > - playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > - soundProgressSlider . value = 0 . 0 < nl > + dispatchOnUi { ( ) - > Void in < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > + self . soundProgressSlider . value = 0 . 0 < nl > + self . controller . currentAudioFileId = 0 < nl > + self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = 0 < nl > + } < nl > < nl > } < nl > < nl > public func inlineMediaPlaybackStateUpdated ( isPaused : Bool , playbackPosition : Float , timestamp : NSTimeInterval , preciseDuration : NSTimeInterval ) { < nl > < nl > - soundProgressSlider . value = playbackPosition < nl > + dispatchOnUi ( { ( ) - > Void in < nl > < nl > - if ( isPaused = = true ) { < nl > - playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > - } < nl > + self . soundProgressSlider . value = playbackPosition < nl > + < nl > + if ( isPaused = = true ) { < nl > + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) < nl > + } < nl > + < nl > + self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = playbackPosition < nl > + < nl > + } ) < nl > < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 9831dae . . 7b12b41 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 46 , 7 + 46 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > < nl > private var textMode : Bool ! < nl > < nl > - / / < nl > < nl > < nl > var audioRecorder : AAAudioRecorder !

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 index fd610b6 . . 6ce5e8c 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 @ @ - 25 , 6 + 25 , 7 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 
 / / Audio notes 
 public var voicePlayer : AAModernConversationAudioPlayer ! 
 + public var voiceContext : AAModernViewInlineMediaContext ! 
 
 public var currentAudioFileId : jlong = 0 
 public var voicesCache : Dictionary < jlong , Float > = Dictionary < jlong , Float > ( ) 
 @ @ - 368 , 22 + 369 , 24 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 
 func playVoiceFromPath ( path : String , fileId : jlong , position : Float ) { 
 
 - if ( self . voicePlayer = = nil ) { 
 - self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) 
 - } 
 - 
 if ( self . currentAudioFileId ! = fileId ) { 
 - self . voicePlayer ? . pause ( ) 
 - 
 self . currentAudioFileId = fileId 
 - self . voicePlayer ? . play ( position ) 
 + 
 + self . voicePlayer ? . stop ( ) 
 + self . voicePlayer ? . audioPlayerStopAndFinish ( ) 
 + 
 + self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) 
 + self . voiceContext = self . voicePlayer . inlineMediaContext ( ) 
 + 
 + 
 + self . voicePlayer ? . play ( ) 
 
 } else { 
 
 if self . voicePlayer ? . isPaused ( ) = = false { 
 self . voicePlayer ? . pause ( ) 
 } else { 
 - self . voicePlayer ? . play ( position ) 
 + self . voicePlayer ? . play ( ) 
 } 
 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift 
 index ff57f52 . . 7677fd4 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift 
 @ @ - 145 , 30 + 145 , 35 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 } 
 
 dispatchOnUi { ( ) - > Void in 
 - self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = nil 
 - self . controller . voicePlayer ? . delegate = nil 
 - 
 
 / / let content = bindedMessage ! . content as ! ACDocumentContent 
 
 - 
 - if self . controller . currentAudioFileId ! = self . bindedMessage ? . rid { 
 - self . soundProgressSlider . value = 0 . 0 
 - } else { 
 - self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = self 
 - self . controller . voicePlayer ? . delegate = self 
 - if self . controller . voicePlayer ? . isPaused ( ) = = false { 
 - self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 - } else { 
 + let content = self . bindedMessage ! . content as ! ACDocumentContent 
 + if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { 
 + let fileID = fileSource . getFileReference ( ) . getFileId ( ) 
 + 
 + if self . controller . currentAudioFileId ! = fileID { 
 + self . soundProgressSlider . value = 0 . 0 
 self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 + self . controller . voiceContext ? . removeDelegate ( self ) 
 + } else { 
 + self . controller . voiceContext ? . delegate = self 
 + self . controller . voicePlayer ? . delegate = self 
 + 
 + if self . controller . voicePlayer ? . isPaused ( ) = = false { 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 + } else { 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 + } 
 + 
 } 
 
 - } 
 - 
 - if let progressVoice = self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] { 
 - if progressVoice > 0 . 0 { 
 - self . soundProgressSlider . value = progressVoice 
 + if let progressVoice = self . controller . voicesCache [ fileID ] { 
 + if progressVoice > 0 . 0 { 
 + self . soundProgressSlider . value = progressVoice 
 + } 
 } 
 + 
 } 
 
 } 
 @ @ - 284 , 13 + 289 , 23 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 dispatchOnUi ( { ( ) - > Void in 
 
 let path = CocoaFiles . pathFromDescriptor ( reference ) 
 - 
 
 - self . controller . playVoiceFromPath ( path , fileId : fileSource . getFileReference ( ) . getFileId ( ) , position : self . soundProgressSlider . value ) 
 + let fileID = fileSource . getFileReference ( ) . getFileId ( ) 
 + 
 + if let progressVoice = self . controller . voicesCache [ fileID ] { 
 + if progressVoice > 0 . 0 { 
 + self . controller . playVoiceFromPath ( path , fileId : fileID , position : progressVoice ) 
 + } else { 
 + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) 
 + } 
 + } else { 
 + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) 
 + } 
 + 
 self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 
 self . controller . voicePlayer . delegate = self 
 - self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self 
 + self . controller . voiceContext . delegate = self 
 
 } ) 
 
 @ @ - 309 , 12 + 324 , 26 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 
 let path = CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) 
 
 - self . controller . playVoiceFromPath ( path , fileId : rid , position : self . soundProgressSlider . value ) 
 - 
 - self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 - 
 - self . controller . voicePlayer . delegate = self 
 - self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self 
 + let content = self . bindedMessage ! . content as ! ACDocumentContent 
 + if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { 
 + let fileID = fileSource . getFileReference ( ) . getFileId ( ) 
 + 
 + if let progressVoice = self . controller . voicesCache [ fileID ] { 
 + if progressVoice > 0 . 0 { 
 + self . controller . playVoiceFromPath ( path , fileId : fileID , position : progressVoice ) 
 + } else { 
 + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) 
 + } 
 + } else { 
 + self . controller . playVoiceFromPath ( path , fileId : fileID , position : 0 . 0 ) 
 + } 
 + 
 + 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 + 
 + self . controller . voicePlayer . delegate = self 
 + self . controller . voiceContext . delegate = self 
 + } 
 
 
 } ) 
 @ @ - 335 , 7 + 364 , 7 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 self . soundProgressSlider . value = 0 . 0 
 self . controller . currentAudioFileId = 0 
 - self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = 0 
 + self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = 0 . 0 
 } 
 
 } 
 @ @ - 350 , 7 + 379 , 8 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 } 
 
 - self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = playbackPosition 
 + self . controller . voicesCache [ self . controller . currentAudioFileId ] = playbackPosition 
 + 
 
 } ) 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h 
 index bd92f10 . . 40e6d7b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . h 
 @ @ - 27 , 6 + 27 , 8 @ @ 
 - ( void ) pause ; 
 - ( void ) stop ; 
 
 + - ( void ) audioPlayerStopAndFinish ; 
 + 
 - ( float ) playbackPosition ; 
 - ( float ) playbackPositionSync : ( bool ) sync ; 
 - ( NSTimeInterval ) duration ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m 
 index 1755534 . . 0de8a3e 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AudioRecorder / AAModernConversationAudioPlayer . m 
 @ @ - 183 , 4 + 183 , 35 @ @ 
 } ) ; 
 } 
 
 + - ( void ) audioPlayerStopAndFinish 
 + { 
 + dispatch _ async ( dispatch _ get _ main _ queue ( ) , ^ 
 + { 
 + 
 + _ isPaused = true ; 
 + 
 + if ( _ timer ! = nil ) 
 + { 
 + [ _ timer invalidate ] ; 
 + _ timer = nil ; 
 + } 
 + 
 + [ _ inlineMediaContext postUpdatePlaybackPosition : false ] ; 
 + 
 + [ self cleanup ] ; 
 + 
 + [ _ delegate audioPlayerDidFinish ] ; 
 + 
 + / / [ _ audioPlayer _ notifyFinished ] ; 
 + 
 + / / [ _ inlineMediaContext postUpdatePlaybackPosition : false ] ; 
 + 
 + / / [ self cleanup ] ; 
 + 
 + / / id < AAModernConversationAudioPlayerDelegate > delegate = _ delegate ; 
 + / / if ( [ delegate respondsToSelector : @ selector ( audioPlayerDidFinish ) ] ) 
 + / / [ delegate audioPlayerDidFinish ] ; 
 + } ) ; 
 + } 
 + 
 @ end

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 index d9642be . . fd610b6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 @ @ - 23 , 10 + 23 , 12 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 private var prevCount : Int = 0 
 private var unreadMessageId : jlong = 0 
 
 - / / / 
 - 
 + / / Audio notes 
 public var voicePlayer : AAModernConversationAudioPlayer ! 
 
 + public var currentAudioFileId : jlong = 0 
 + public var voicesCache : Dictionary < jlong , Float > = Dictionary < jlong , Float > ( ) 
 + 
 public init ( peer : ACPeer ) { 
 self . peer = peer 
 
 @ @ - 359 , 20 + 361 , 33 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 } ) 
 } 
 
 + / / / / / / / / / / / / / / / / / / / / / / / 
 + / / MARK : - audio play 
 + / / / / / / / / / / / / / / / / / / / / / / / 
 
 - / / audio play 
 
 - func playVoiceFromPath ( path : String ) { 
 + func playVoiceFromPath ( path : String , fileId : jlong , position : Float ) { 
 
 - if ( self . voicePlayer ! = nil ) { 
 + if ( self . voicePlayer = = nil ) { 
 + self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) 
 + } 
 + 
 + if ( self . currentAudioFileId ! = fileId ) { 
 + self . voicePlayer ? . pause ( ) 
 
 - self . voicePlayer . pause ( ) 
 + self . currentAudioFileId = fileId 
 + self . voicePlayer ? . play ( position ) 
 + 
 + } else { 
 + 
 + if self . voicePlayer ? . isPaused ( ) = = false { 
 + self . voicePlayer ? . pause ( ) 
 + } else { 
 + self . voicePlayer ? . play ( position ) 
 + } 
 
 } 
 
 - self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) 
 - self . voicePlayer . play ( 0 ) 
 - 
 } 
 
 func playVideoFromPath ( path : String ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift 
 index 01f35e5 . . bf5e4f9 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift 
 @ @ - 154 , 7 + 154 , 7 @ @ public class AABubbleDocumentCell : AABubbleBaseFileCell , UIDocumentInteractionCo 
 if ( content . getName ( ) . hasSuffix ( " . ogg " ) ) { 
 
 print ( " paaaaath = = = = \ ( CocoaFiles . pathFromDescriptor ( reference ) ) " ) 
 - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) 
 + / / self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) 
 
 return 
 } 
 @ @ - 180 , 7 + 180 , 7 @ @ public class AABubbleDocumentCell : AABubbleBaseFileCell , UIDocumentInteractionCo 
 if ( content . getName ( ) . hasSuffix ( " . ogg " ) ) { 
 
 print ( " paaaaath2 = = = = \ ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) " ) 
 - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) 
 + / / self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) 
 
 return 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift 
 index 4a85b41 . . ff57f52 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVoiceCell . swift 
 @ @ - 45 , 6 + 45 , 10 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 
 soundProgressSlider . tintColor = appStyle . chatStatusSending 
 
 + soundProgressSlider . userInteractionEnabled = false 
 + 
 + / / soundProgressSlider . addTarget ( self , action : " seekToNewAudioValue " , forControlEvents : UIControlEvents . ValueChanged ) 
 + 
 let insets = UIEdgeInsets ( top : 0 , left : 0 , bottom : 0 , right : 0 ) 
 
 let trackLeftImage = UIImage . tinted ( " aa _ voiceplaybackground " , color : UIColor ( red : 0 . 0 , green : 0 . 761 , blue : 0 . 9964 , alpha : 1 . 0 ) ) 
 @ @ - 140 , 8 + 144 , 34 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 
 } 
 
 - self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = nil 
 - self . controller . voicePlayer ? . delegate = nil 
 + dispatchOnUi { ( ) - > Void in 
 + self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = nil 
 + self . controller . voicePlayer ? . delegate = nil 
 + 
 + 
 + / / let content = bindedMessage ! . content as ! ACDocumentContent 
 + 
 + 
 + if self . controller . currentAudioFileId ! = self . bindedMessage ? . rid { 
 + self . soundProgressSlider . value = 0 . 0 
 + } else { 
 + self . controller . voicePlayer ? . inlineMediaContext ( ) . delegate = self 
 + self . controller . voicePlayer ? . delegate = self 
 + if self . controller . voicePlayer ? . isPaused ( ) = = false { 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 + } else { 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 + } 
 + 
 + } 
 + 
 + if let progressVoice = self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] { 
 + if progressVoice > 0 . 0 { 
 + self . soundProgressSlider . value = progressVoice 
 + } 
 + } 
 + 
 + } 
 
 
 / / Update time 
 @ @ - 252 , 11 + 282 , 16 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 } , onDownloaded : { ( reference ) - > ( ) in 
 
 dispatchOnUi ( { ( ) - > Void in 
 - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) 
 + 
 + let path = CocoaFiles . pathFromDescriptor ( reference ) 
 + 
 + 
 + self . controller . playVoiceFromPath ( path , fileId : fileSource . getFileReference ( ) . getFileId ( ) , position : self . soundProgressSlider . value ) 
 self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 
 self . controller . voicePlayer . delegate = self 
 self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self 
 + 
 } ) 
 
 } ) ) 
 @ @ - 271 , 11 + 306 , 17 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 } , onUploadedClosure : { ( ) - > ( ) in 
 
 dispatchOnUi ( { ( ) - > Void in 
 - self . controller . playVoiceFromPath ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) 
 + 
 + let path = CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) 
 + 
 + self . controller . playVoiceFromPath ( path , fileId : rid , position : self . soundProgressSlider . value ) 
 + 
 self . playPauseButton . setImage ( UIImage . bundled ( " aa _ pauserecordbutton " ) , forState : UIControlState . Normal ) 
 
 self . controller . voicePlayer . delegate = self 
 self . controller . voicePlayer . inlineMediaContext ( ) . delegate = self 
 + 
 + 
 } ) 
 
 
 @ @ - 284 , 20 + 325 , 34 @ @ public class AABubbleVoiceCell : AABubbleBaseFileCell , AAModernConversationAudioPl 
 } 
 } 
 
 + public func seekToNewAudioValue ( ) { 
 + 
 + } 
 + 
 public func audioPlayerDidFinish ( ) { 
 
 - playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 - soundProgressSlider . value = 0 . 0 
 + dispatchOnUi { ( ) - > Void in 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 + self . soundProgressSlider . value = 0 . 0 
 + self . controller . currentAudioFileId = 0 
 + self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = 0 
 + } 
 
 } 
 
 public func inlineMediaPlaybackStateUpdated ( isPaused : Bool , playbackPosition : Float , timestamp : NSTimeInterval , preciseDuration : NSTimeInterval ) { 
 
 - soundProgressSlider . value = playbackPosition 
 + dispatchOnUi ( { ( ) - > Void in 
 
 - if ( isPaused = = true ) { 
 - playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 - } 
 + self . soundProgressSlider . value = playbackPosition 
 + 
 + if ( isPaused = = true ) { 
 + self . playPauseButton . setImage ( UIImage . bundled ( " aa _ playrecordbutton " ) , forState : UIControlState . Normal ) 
 + } 
 + 
 + self . controller . voicesCache [ ( self . bindedMessage ? . rid ) ! ] = playbackPosition 
 + 
 + } ) 
 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 9831dae . . 7b12b41 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 46 , 7 + 46 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 
 private var textMode : Bool ! 
 
 - / / 
 
 
 var audioRecorder : AAAudioRecorder !
