BLEU SCORE: 0.3050975216056289

TEST MSG: fix ( core ) : Fixing compilation error
GENERATED MSG: feat ( core ) : Implemented peer search methods

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / ResponseMessageSearch . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / ResponseMessageSearch . java < nl > deleted file mode 100644 < nl > index 4551351 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / ResponseMessageSearch . java < nl > + + + / dev / null < nl > @ @ - 1 , 98 + 0 , 0 @ @ < nl > - package im . actor . core . api . rpc ; < nl > - / * < nl > - * Generated by the Actor API Scheme generator . DO NOT EDIT ! < nl > - * / < nl > - < nl > - import im . actor . runtime . bser . * ; < nl > - import im . actor . runtime . collections . * ; < nl > - < nl > - import static im . actor . runtime . bser . Utils . * ; < nl > - < nl > - import im . actor . core . network . parser . * ; < nl > - < nl > - import org . jetbrains . annotations . Nullable ; < nl > - import org . jetbrains . annotations . NotNull ; < nl > - < nl > - import com . google . j2objc . annotations . ObjectiveCName ; < nl > - < nl > - import java . io . IOException ; < nl > - import java . util . List ; < nl > - import java . util . ArrayList ; < nl > - < nl > - import im . actor . core . api . * ; < nl > - < nl > - public class ResponseMessageSearch extends Response { < nl > - < nl > - public static final int HEADER = 0xda ; < nl > - < nl > - public static ResponseMessageSearch fromBytes ( byte [ ] data ) throws IOException { < nl > - return Bser . parse ( new ResponseMessageSearch ( ) , data ) ; < nl > - } < nl > - < nl > - private List < ApiMessageSearchItem > searchResults ; < nl > - private List < ApiUser > users ; < nl > - private List < ApiGroup > groups ; < nl > - < nl > - public ResponseMessageSearch ( @ NotNull List < ApiMessageSearchItem > searchResults , @ NotNull List < ApiUser > users , @ NotNull List < ApiGroup > groups ) { < nl > - this . searchResults = searchResults ; < nl > - this . users = users ; < nl > - this . groups = groups ; < nl > - } < nl > - < nl > - public ResponseMessageSearch ( ) { < nl > - < nl > - } < nl > - < nl > - @ NotNull < nl > - public List < ApiMessageSearchItem > getSearchResults ( ) { < nl > - return this . searchResults ; < nl > - } < nl > - < nl > - @ NotNull < nl > - public List < ApiUser > getUsers ( ) { < nl > - return this . users ; < nl > - } < nl > - < nl > - @ NotNull < nl > - public List < ApiGroup > getGroups ( ) { < nl > - return this . groups ; < nl > - } < nl > - < nl > - @ Override < nl > - public void parse ( BserValues values ) throws IOException { < nl > - List < ApiMessageSearchItem > _ searchResults = new ArrayList < ApiMessageSearchItem > ( ) ; < nl > - for ( int i = 0 ; i < values . getRepeatedCount ( 1 ) ; i + + ) { < nl > - _ searchResults . add ( new ApiMessageSearchItem ( ) ) ; < nl > - } < nl > - this . searchResults = values . getRepeatedObj ( 1 , _ searchResults ) ; < nl > - List < ApiUser > _ users = new ArrayList < ApiUser > ( ) ; < nl > - for ( int i = 0 ; i < values . getRepeatedCount ( 2 ) ; i + + ) { < nl > - _ users . add ( new ApiUser ( ) ) ; < nl > - } < nl > - this . users = values . getRepeatedObj ( 2 , _ users ) ; < nl > - List < ApiGroup > _ groups = new ArrayList < ApiGroup > ( ) ; < nl > - for ( int i = 0 ; i < values . getRepeatedCount ( 3 ) ; i + + ) { < nl > - _ groups . add ( new ApiGroup ( ) ) ; < nl > - } < nl > - this . groups = values . getRepeatedObj ( 3 , _ groups ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void serialize ( BserWriter writer ) throws IOException { < nl > - writer . writeRepeatedObj ( 1 , this . searchResults ) ; < nl > - writer . writeRepeatedObj ( 2 , this . users ) ; < nl > - writer . writeRepeatedObj ( 3 , this . groups ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public String toString ( ) { < nl > - String res = " tuple MessageSearch { " ; < nl > - res + = " } " ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - public int getHeaderKey ( ) { < nl > - return HEADER ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > index d714eee . . 0fb692f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > @ @ - 23 , 6 + 23 , 7 @ @ import im . actor . core . api . ApiSearchPieceText ; < nl > import im . actor . core . api . rpc . RequestMessageSearch ; < nl > import im . actor . core . api . rpc . RequestPeerSearch ; < nl > import im . actor . core . api . rpc . ResponseMessageSearch ; < nl > + import im . actor . core . api . rpc . ResponseMessageSearchResponse ; < nl > import im . actor . core . api . rpc . ResponsePeerSearch ; < nl > import im . actor . core . entity . Dialog ; < nl > import im . actor . core . entity . MessageSearchEntity ; < nl > @ @ - 114 , 9 + 115 , 9 @ @ public class SearchModule extends AbsModule { < nl > return new Command < List < MessageSearchEntity > > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < List < MessageSearchEntity > > callback ) { < nl > - request ( new RequestMessageSearch ( condition ) , new RpcCallback < ResponseMessageSearch > ( ) { < nl > + request ( new RequestMessageSearch ( condition ) , new RpcCallback < ResponseMessageSearchResponse > ( ) { < nl > @ Override < nl > - public void onResult ( final ResponseMessageSearch response ) { < nl > + public void onResult ( final ResponseMessageSearchResponse response ) { < nl > updates ( ) . executeRelatedResponse ( response . getUsers ( ) , response . getGroups ( ) , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 4583c31 . . 174a996 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 14 , 6 + 14 , 9 @ @ import im . actor . core . * ; < nl > import im . actor . core . api . ApiAuthSession ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > import im . actor . core . entity . Peer ; < nl > + import im . actor . core . entity . PeerSearchEntity ; < nl > + import im . actor . core . entity . PeerSearchType ; < nl > + import im . actor . core . entity . PeerType ; < nl > import im . actor . core . js . entity . * ; < nl > import im . actor . core . js . modules . JsBindedValueCallback ; < nl > import im . actor . core . js . providers . JsNotificationsProvider ; < nl > @ @ - 710 , 6 + 713 , 38 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > + public JsPromise findGroups ( ) { < nl > + return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > + @ Override < nl > + public void execute ( ) { < nl > + messenger . findPeers ( PeerSearchType . GROUPS ) . start ( new CommandCallback < List < PeerSearchEntity > > ( ) { < nl > + @ Override < nl > + public void onResult ( List < PeerSearchEntity > res ) { < nl > + Log . d ( TAG , " findGroups : result " ) ; < nl > + JsArray < JsPeerSearchResult > jsRes = JsArray . createArray ( ) . cast ( ) ; < nl > + for ( PeerSearchEntity s : res ) { < nl > + if ( s . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { < nl > + jsRes . push ( JsPeerSearchResult . create ( messenger . buildPeerInfo ( s . getPeer ( ) ) , < nl > + s . getDescription ( ) , s . getMembersCount ( ) , ( int ) ( s . getDate ( ) / 1000L ) , < nl > + messenger . buildPeerInfo ( Peer . user ( s . getCreatorUid ( ) ) ) , s . isPublic ( ) , < nl > + s . isJoined ( ) ) ) ; < nl > + } else if ( s . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > + jsRes . push ( JsPeerSearchResult . create ( messenger . buildPeerInfo ( s . getPeer ( ) ) ) ) ; < nl > + } < nl > + / / jsRes . push ( ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + Log . d ( TAG , " findGroups : error " ) ; < nl > + reject ( e . getMessage ( ) ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > public void changeMyAvatar ( final JsFile file ) { < nl > String descriptor = provider . registerUploadFile ( file ) ; < nl > messenger . changeMyAvatar ( descriptor ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerSearchResult . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerSearchResult . java < nl > new file mode 100644 < nl > index 0000000 . . d88fe40 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerSearchResult . java < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + package im . actor . core . js . entity ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + < nl > + public class JsPeerSearchResult extends JavaScriptObject { < nl > + < nl > + public native static JsPeerSearchResult create ( JsPeerInfo peerInfo , String description , < nl > + int membersCount , int created , JsPeerInfo creator , < nl > + boolean isPublic , boolean isJoined ) / * - { < nl > + return { peerInfo : peerInfo , description : description , membersCount : membersCount , created : created , < nl > + isPublic : isPublic , isJoined : isJoined } ; < nl > + } - * / ; < nl > + < nl > + public native static JsPeerSearchResult create ( JsPeerInfo peerInfo ) / * - { < nl > + return { peerInfo : peerInfo } ; < nl > + } - * / ; < nl > + < nl > + protected JsPeerSearchResult ( ) { < nl > + < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 63dbbc4 . . b59506e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 18 , 6 + 18 , 8 @ @ import im . actor . core . entity . FileReference ; < nl > import im . actor . core . entity . Group ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > import im . actor . core . entity . Peer ; < nl > + import im . actor . core . entity . PeerSearchEntity ; < nl > + import im . actor . core . entity . PeerSearchType ; < nl > import im . actor . core . entity . PublicGroup ; < nl > import im . actor . core . entity . Sex ; < nl > import im . actor . core . entity . User ; < nl > @ @ - 746 , 6 + 748 , 17 @ @ public class Messenger { < nl > return modules . getMentions ( ) . findMentions ( gid , query ) ; < nl > } < nl > < nl > + / * * < nl > + * Finding peers by type < nl > + * < nl > + * @ param type type of peer < nl > + * @ return found peers < nl > + * / < nl > + @ ObjectiveCName ( " findPeersWithType : " ) < nl > + public Command < List < PeerSearchEntity > > findPeers ( PeerSearchType type ) { < nl > + return modules . getSearchModule ( ) . findPeers ( type ) ; < nl > + } < nl > + < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / Peer operations < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchEntity . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchEntity . java < nl > new file mode 100644 < nl > index 0000000 . . 53e6fed < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchEntity . java < nl > @ @ - 0 , 0 + 1 , 57 @ @ < nl > + package im . actor . core . entity ; < nl > + < nl > + public class PeerSearchEntity { < nl > + < nl > + private Peer peer ; < nl > + private String title ; < nl > + private String description ; < nl > + private Integer membersCount ; < nl > + private Long date ; < nl > + private Integer creatorUid ; < nl > + private Boolean isPublic ; < nl > + private Boolean isJoined ; < nl > + < nl > + public PeerSearchEntity ( Peer peer , String title , String description , Integer membersCount , < nl > + Long date , Integer creatorUid , Boolean isPublic , Boolean isJoined ) { < nl > + this . peer = peer ; < nl > + this . title = title ; < nl > + this . description = description ; < nl > + this . membersCount = membersCount ; < nl > + this . date = date ; < nl > + this . creatorUid = creatorUid ; < nl > + this . isPublic = isPublic ; < nl > + this . isJoined = isJoined ; < nl > + } < nl > + < nl > + public Peer getPeer ( ) { < nl > + return peer ; < nl > + } < nl > + < nl > + public String getTitle ( ) { < nl > + return title ; < nl > + } < nl > + < nl > + public String getDescription ( ) { < nl > + return description ; < nl > + } < nl > + < nl > + public Integer getMembersCount ( ) { < nl > + return membersCount ; < nl > + } < nl > + < nl > + public Long getDate ( ) { < nl > + return date ; < nl > + } < nl > + < nl > + public Integer getCreatorUid ( ) { < nl > + return creatorUid ; < nl > + } < nl > + < nl > + public Boolean isPublic ( ) { < nl > + return isPublic ; < nl > + } < nl > + < nl > + public Boolean isJoined ( ) { < nl > + return isJoined ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchType . java < nl > new file mode 100644 < nl > index 0000000 . . 14b4f2b < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchType . java < nl > @ @ - 0 , 0 + 1 , 5 @ @ < nl > + package im . actor . core . entity ; < nl > + < nl > + public enum PeerSearchType { < nl > + CONTACTS , GROUPS , PUBLIC < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > index 42c9383 . . 6b74816 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > @ @ - 4 , 19 + 4 , 33 @ @ < nl > < nl > package im . actor . core . modules . internal ; < nl > < nl > + import java . util . ArrayList ; < nl > import java . util . List ; < nl > < nl > + import im . actor . core . api . ApiPeerSearchResult ; < nl > + import im . actor . core . api . ApiSearchCondition ; < nl > + import im . actor . core . api . ApiSearchPeerType ; < nl > + import im . actor . core . api . ApiSearchPeerTypeCondition ; < nl > + import im . actor . core . api . rpc . RequestPeerSearch ; < nl > + import im . actor . core . api . rpc . ResponsePeerSearch ; < nl > import im . actor . core . entity . Dialog ; < nl > + import im . actor . core . entity . PeerSearchEntity ; < nl > + import im . actor . core . entity . PeerSearchType ; < nl > import im . actor . core . entity . SearchEntity ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . Modules ; < nl > import im . actor . core . modules . internal . search . SearchActor ; < nl > + import im . actor . core . network . RpcCallback ; < nl > + import im . actor . core . network . RpcException ; < nl > + import im . actor . core . viewmodel . Command ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . runtime . Storage ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . Props ; < nl > import im . actor . runtime . storage . ListEngine ; < nl > < nl > + import static im . actor . core . modules . internal . messages . entity . EntityConverter . convert ; < nl > import static im . actor . runtime . actors . ActorSystem . system ; < nl > < nl > public class SearchModule extends AbsModule { < nl > @ @ - 55 , 6 + 69 , 57 @ @ public class SearchModule extends AbsModule { < nl > actorRef . send ( new SearchActor . OnContactsUpdated ( res ) ) ; < nl > } < nl > < nl > + public Command < List < PeerSearchEntity > > findPeers ( final PeerSearchType type ) { < nl > + final ApiSearchPeerType apiType ; < nl > + if ( type = = PeerSearchType . GROUPS ) { < nl > + apiType = ApiSearchPeerType . GROUPS ; < nl > + } else if ( type = = PeerSearchType . PUBLIC ) { < nl > + apiType = ApiSearchPeerType . PUBLIC ; < nl > + } else { < nl > + apiType = ApiSearchPeerType . CONTACTS ; < nl > + } < nl > + return new Command < List < PeerSearchEntity > > ( ) { < nl > + @ Override < nl > + public void start ( final CommandCallback < List < PeerSearchEntity > > callback ) { < nl > + ArrayList < ApiSearchCondition > conditions = new ArrayList < ApiSearchCondition > ( ) ; < nl > + conditions . add ( new ApiSearchPeerTypeCondition ( apiType ) ) ; < nl > + request ( new RequestPeerSearch ( conditions ) , new RpcCallback < ResponsePeerSearch > ( ) { < nl > + @ Override < nl > + public void onResult ( final ResponsePeerSearch response ) { < nl > + updates ( ) . executeRelatedResponse ( response . getUsers ( ) , < nl > + response . getGroups ( ) , new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + final ArrayList < PeerSearchEntity > res = new ArrayList < PeerSearchEntity > ( ) ; < nl > + for ( ApiPeerSearchResult r : response . getSearchResults ( ) ) { < nl > + res . add ( new PeerSearchEntity ( convert ( r . getPeer ( ) ) , r . getTitle ( ) , < nl > + r . getDescription ( ) , r . getMembersCount ( ) , r . getDateCreated ( ) , < nl > + r . getCreator ( ) , r . isPublic ( ) , r . isJoined ( ) ) ) ; < nl > + } < nl > + runOnUiThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onResult ( res ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( final RpcException e ) { < nl > + runOnUiThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onError ( e ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ; < nl > + } < nl > + < nl > public void resetModule ( ) { < nl > actorRef . send ( new SearchActor . Clear ( ) ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / ResponseMessageSearch . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / ResponseMessageSearch . java 
 deleted file mode 100644 
 index 4551351 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / api / rpc / ResponseMessageSearch . java 
 + + + / dev / null 
 @ @ - 1 , 98 + 0 , 0 @ @ 
 - package im . actor . core . api . rpc ; 
 - / * 
 - * Generated by the Actor API Scheme generator . DO NOT EDIT ! 
 - * / 
 - 
 - import im . actor . runtime . bser . * ; 
 - import im . actor . runtime . collections . * ; 
 - 
 - import static im . actor . runtime . bser . Utils . * ; 
 - 
 - import im . actor . core . network . parser . * ; 
 - 
 - import org . jetbrains . annotations . Nullable ; 
 - import org . jetbrains . annotations . NotNull ; 
 - 
 - import com . google . j2objc . annotations . ObjectiveCName ; 
 - 
 - import java . io . IOException ; 
 - import java . util . List ; 
 - import java . util . ArrayList ; 
 - 
 - import im . actor . core . api . * ; 
 - 
 - public class ResponseMessageSearch extends Response { 
 - 
 - public static final int HEADER = 0xda ; 
 - 
 - public static ResponseMessageSearch fromBytes ( byte [ ] data ) throws IOException { 
 - return Bser . parse ( new ResponseMessageSearch ( ) , data ) ; 
 - } 
 - 
 - private List < ApiMessageSearchItem > searchResults ; 
 - private List < ApiUser > users ; 
 - private List < ApiGroup > groups ; 
 - 
 - public ResponseMessageSearch ( @ NotNull List < ApiMessageSearchItem > searchResults , @ NotNull List < ApiUser > users , @ NotNull List < ApiGroup > groups ) { 
 - this . searchResults = searchResults ; 
 - this . users = users ; 
 - this . groups = groups ; 
 - } 
 - 
 - public ResponseMessageSearch ( ) { 
 - 
 - } 
 - 
 - @ NotNull 
 - public List < ApiMessageSearchItem > getSearchResults ( ) { 
 - return this . searchResults ; 
 - } 
 - 
 - @ NotNull 
 - public List < ApiUser > getUsers ( ) { 
 - return this . users ; 
 - } 
 - 
 - @ NotNull 
 - public List < ApiGroup > getGroups ( ) { 
 - return this . groups ; 
 - } 
 - 
 - @ Override 
 - public void parse ( BserValues values ) throws IOException { 
 - List < ApiMessageSearchItem > _ searchResults = new ArrayList < ApiMessageSearchItem > ( ) ; 
 - for ( int i = 0 ; i < values . getRepeatedCount ( 1 ) ; i + + ) { 
 - _ searchResults . add ( new ApiMessageSearchItem ( ) ) ; 
 - } 
 - this . searchResults = values . getRepeatedObj ( 1 , _ searchResults ) ; 
 - List < ApiUser > _ users = new ArrayList < ApiUser > ( ) ; 
 - for ( int i = 0 ; i < values . getRepeatedCount ( 2 ) ; i + + ) { 
 - _ users . add ( new ApiUser ( ) ) ; 
 - } 
 - this . users = values . getRepeatedObj ( 2 , _ users ) ; 
 - List < ApiGroup > _ groups = new ArrayList < ApiGroup > ( ) ; 
 - for ( int i = 0 ; i < values . getRepeatedCount ( 3 ) ; i + + ) { 
 - _ groups . add ( new ApiGroup ( ) ) ; 
 - } 
 - this . groups = values . getRepeatedObj ( 3 , _ groups ) ; 
 - } 
 - 
 - @ Override 
 - public void serialize ( BserWriter writer ) throws IOException { 
 - writer . writeRepeatedObj ( 1 , this . searchResults ) ; 
 - writer . writeRepeatedObj ( 2 , this . users ) ; 
 - writer . writeRepeatedObj ( 3 , this . groups ) ; 
 - } 
 - 
 - @ Override 
 - public String toString ( ) { 
 - String res = " tuple MessageSearch { " ; 
 - res + = " } " ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - public int getHeaderKey ( ) { 
 - return HEADER ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 index d714eee . . 0fb692f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import im . actor . core . api . ApiSearchPieceText ; 
 import im . actor . core . api . rpc . RequestMessageSearch ; 
 import im . actor . core . api . rpc . RequestPeerSearch ; 
 import im . actor . core . api . rpc . ResponseMessageSearch ; 
 + import im . actor . core . api . rpc . ResponseMessageSearchResponse ; 
 import im . actor . core . api . rpc . ResponsePeerSearch ; 
 import im . actor . core . entity . Dialog ; 
 import im . actor . core . entity . MessageSearchEntity ; 
 @ @ - 114 , 9 + 115 , 9 @ @ public class SearchModule extends AbsModule { 
 return new Command < List < MessageSearchEntity > > ( ) { 
 @ Override 
 public void start ( final CommandCallback < List < MessageSearchEntity > > callback ) { 
 - request ( new RequestMessageSearch ( condition ) , new RpcCallback < ResponseMessageSearch > ( ) { 
 + request ( new RequestMessageSearch ( condition ) , new RpcCallback < ResponseMessageSearchResponse > ( ) { 
 @ Override 
 - public void onResult ( final ResponseMessageSearch response ) { 
 + public void onResult ( final ResponseMessageSearchResponse response ) { 
 updates ( ) . executeRelatedResponse ( response . getUsers ( ) , response . getGroups ( ) , new Runnable ( ) { 
 @ Override 
 public void run ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 4583c31 . . 174a996 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 14 , 6 + 14 , 9 @ @ import im . actor . core . * ; 
 import im . actor . core . api . ApiAuthSession ; 
 import im . actor . core . entity . MentionFilterResult ; 
 import im . actor . core . entity . Peer ; 
 + import im . actor . core . entity . PeerSearchEntity ; 
 + import im . actor . core . entity . PeerSearchType ; 
 + import im . actor . core . entity . PeerType ; 
 import im . actor . core . js . entity . * ; 
 import im . actor . core . js . modules . JsBindedValueCallback ; 
 import im . actor . core . js . providers . JsNotificationsProvider ; 
 @ @ - 710 , 6 + 713 , 38 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 + public JsPromise findGroups ( ) { 
 + return JsPromise . create ( new JsPromiseExecutor ( ) { 
 + @ Override 
 + public void execute ( ) { 
 + messenger . findPeers ( PeerSearchType . GROUPS ) . start ( new CommandCallback < List < PeerSearchEntity > > ( ) { 
 + @ Override 
 + public void onResult ( List < PeerSearchEntity > res ) { 
 + Log . d ( TAG , " findGroups : result " ) ; 
 + JsArray < JsPeerSearchResult > jsRes = JsArray . createArray ( ) . cast ( ) ; 
 + for ( PeerSearchEntity s : res ) { 
 + if ( s . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { 
 + jsRes . push ( JsPeerSearchResult . create ( messenger . buildPeerInfo ( s . getPeer ( ) ) , 
 + s . getDescription ( ) , s . getMembersCount ( ) , ( int ) ( s . getDate ( ) / 1000L ) , 
 + messenger . buildPeerInfo ( Peer . user ( s . getCreatorUid ( ) ) ) , s . isPublic ( ) , 
 + s . isJoined ( ) ) ) ; 
 + } else if ( s . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { 
 + jsRes . push ( JsPeerSearchResult . create ( messenger . buildPeerInfo ( s . getPeer ( ) ) ) ) ; 
 + } 
 + / / jsRes . push ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + Log . d ( TAG , " findGroups : error " ) ; 
 + reject ( e . getMessage ( ) ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 public void changeMyAvatar ( final JsFile file ) { 
 String descriptor = provider . registerUploadFile ( file ) ; 
 messenger . changeMyAvatar ( descriptor ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerSearchResult . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerSearchResult . java 
 new file mode 100644 
 index 0000000 . . d88fe40 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerSearchResult . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package im . actor . core . js . entity ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + 
 + public class JsPeerSearchResult extends JavaScriptObject { 
 + 
 + public native static JsPeerSearchResult create ( JsPeerInfo peerInfo , String description , 
 + int membersCount , int created , JsPeerInfo creator , 
 + boolean isPublic , boolean isJoined ) / * - { 
 + return { peerInfo : peerInfo , description : description , membersCount : membersCount , created : created , 
 + isPublic : isPublic , isJoined : isJoined } ; 
 + } - * / ; 
 + 
 + public native static JsPeerSearchResult create ( JsPeerInfo peerInfo ) / * - { 
 + return { peerInfo : peerInfo } ; 
 + } - * / ; 
 + 
 + protected JsPeerSearchResult ( ) { 
 + 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 63dbbc4 . . b59506e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 18 , 6 + 18 , 8 @ @ import im . actor . core . entity . FileReference ; 
 import im . actor . core . entity . Group ; 
 import im . actor . core . entity . MentionFilterResult ; 
 import im . actor . core . entity . Peer ; 
 + import im . actor . core . entity . PeerSearchEntity ; 
 + import im . actor . core . entity . PeerSearchType ; 
 import im . actor . core . entity . PublicGroup ; 
 import im . actor . core . entity . Sex ; 
 import im . actor . core . entity . User ; 
 @ @ - 746 , 6 + 748 , 17 @ @ public class Messenger { 
 return modules . getMentions ( ) . findMentions ( gid , query ) ; 
 } 
 
 + / * * 
 + * Finding peers by type 
 + * 
 + * @ param type type of peer 
 + * @ return found peers 
 + * / 
 + @ ObjectiveCName ( " findPeersWithType : " ) 
 + public Command < List < PeerSearchEntity > > findPeers ( PeerSearchType type ) { 
 + return modules . getSearchModule ( ) . findPeers ( type ) ; 
 + } 
 + 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / Peer operations 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchEntity . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchEntity . java 
 new file mode 100644 
 index 0000000 . . 53e6fed 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchEntity . java 
 @ @ - 0 , 0 + 1 , 57 @ @ 
 + package im . actor . core . entity ; 
 + 
 + public class PeerSearchEntity { 
 + 
 + private Peer peer ; 
 + private String title ; 
 + private String description ; 
 + private Integer membersCount ; 
 + private Long date ; 
 + private Integer creatorUid ; 
 + private Boolean isPublic ; 
 + private Boolean isJoined ; 
 + 
 + public PeerSearchEntity ( Peer peer , String title , String description , Integer membersCount , 
 + Long date , Integer creatorUid , Boolean isPublic , Boolean isJoined ) { 
 + this . peer = peer ; 
 + this . title = title ; 
 + this . description = description ; 
 + this . membersCount = membersCount ; 
 + this . date = date ; 
 + this . creatorUid = creatorUid ; 
 + this . isPublic = isPublic ; 
 + this . isJoined = isJoined ; 
 + } 
 + 
 + public Peer getPeer ( ) { 
 + return peer ; 
 + } 
 + 
 + public String getTitle ( ) { 
 + return title ; 
 + } 
 + 
 + public String getDescription ( ) { 
 + return description ; 
 + } 
 + 
 + public Integer getMembersCount ( ) { 
 + return membersCount ; 
 + } 
 + 
 + public Long getDate ( ) { 
 + return date ; 
 + } 
 + 
 + public Integer getCreatorUid ( ) { 
 + return creatorUid ; 
 + } 
 + 
 + public Boolean isPublic ( ) { 
 + return isPublic ; 
 + } 
 + 
 + public Boolean isJoined ( ) { 
 + return isJoined ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchType . java 
 new file mode 100644 
 index 0000000 . . 14b4f2b 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerSearchType . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package im . actor . core . entity ; 
 + 
 + public enum PeerSearchType { 
 + CONTACTS , GROUPS , PUBLIC 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 index 42c9383 . . 6b74816 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 @ @ - 4 , 19 + 4 , 33 @ @ 
 
 package im . actor . core . modules . internal ; 
 
 + import java . util . ArrayList ; 
 import java . util . List ; 
 
 + import im . actor . core . api . ApiPeerSearchResult ; 
 + import im . actor . core . api . ApiSearchCondition ; 
 + import im . actor . core . api . ApiSearchPeerType ; 
 + import im . actor . core . api . ApiSearchPeerTypeCondition ; 
 + import im . actor . core . api . rpc . RequestPeerSearch ; 
 + import im . actor . core . api . rpc . ResponsePeerSearch ; 
 import im . actor . core . entity . Dialog ; 
 + import im . actor . core . entity . PeerSearchEntity ; 
 + import im . actor . core . entity . PeerSearchType ; 
 import im . actor . core . entity . SearchEntity ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . Modules ; 
 import im . actor . core . modules . internal . search . SearchActor ; 
 + import im . actor . core . network . RpcCallback ; 
 + import im . actor . core . network . RpcException ; 
 + import im . actor . core . viewmodel . Command ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . runtime . Storage ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . Props ; 
 import im . actor . runtime . storage . ListEngine ; 
 
 + import static im . actor . core . modules . internal . messages . entity . EntityConverter . convert ; 
 import static im . actor . runtime . actors . ActorSystem . system ; 
 
 public class SearchModule extends AbsModule { 
 @ @ - 55 , 6 + 69 , 57 @ @ public class SearchModule extends AbsModule { 
 actorRef . send ( new SearchActor . OnContactsUpdated ( res ) ) ; 
 } 
 
 + public Command < List < PeerSearchEntity > > findPeers ( final PeerSearchType type ) { 
 + final ApiSearchPeerType apiType ; 
 + if ( type = = PeerSearchType . GROUPS ) { 
 + apiType = ApiSearchPeerType . GROUPS ; 
 + } else if ( type = = PeerSearchType . PUBLIC ) { 
 + apiType = ApiSearchPeerType . PUBLIC ; 
 + } else { 
 + apiType = ApiSearchPeerType . CONTACTS ; 
 + } 
 + return new Command < List < PeerSearchEntity > > ( ) { 
 + @ Override 
 + public void start ( final CommandCallback < List < PeerSearchEntity > > callback ) { 
 + ArrayList < ApiSearchCondition > conditions = new ArrayList < ApiSearchCondition > ( ) ; 
 + conditions . add ( new ApiSearchPeerTypeCondition ( apiType ) ) ; 
 + request ( new RequestPeerSearch ( conditions ) , new RpcCallback < ResponsePeerSearch > ( ) { 
 + @ Override 
 + public void onResult ( final ResponsePeerSearch response ) { 
 + updates ( ) . executeRelatedResponse ( response . getUsers ( ) , 
 + response . getGroups ( ) , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + final ArrayList < PeerSearchEntity > res = new ArrayList < PeerSearchEntity > ( ) ; 
 + for ( ApiPeerSearchResult r : response . getSearchResults ( ) ) { 
 + res . add ( new PeerSearchEntity ( convert ( r . getPeer ( ) ) , r . getTitle ( ) , 
 + r . getDescription ( ) , r . getMembersCount ( ) , r . getDateCreated ( ) , 
 + r . getCreator ( ) , r . isPublic ( ) , r . isJoined ( ) ) ) ; 
 + } 
 + runOnUiThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onResult ( res ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( final RpcException e ) { 
 + runOnUiThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onError ( e ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + } ; 
 + } 
 + 
 public void resetModule ( ) { 
 actorRef . send ( new SearchActor . Clear ( ) ) ; 
 }
