BLEU SCORE: 0.14458924666162856

TEST MSG: fix ( server : kamon ) : connection . time - > connection
GENERATED MSG: perf ( server : frontend ) : flatten instead of map

TEST DIFF (one line): diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala < nl > index e0e4908 . . 70002e1 100644 < nl > - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala < nl > + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala < nl > @ @ - 99 , 7 + 99 , 7 @ @ abstract class Frontend ( connIdPrefix : String ) { < nl > private val metricTags = Map ( " type " → connIdPrefix ) < nl > < nl > private val connectionTime = Kamon . metrics . histogram ( " connection . time " , metricTags , kamon . metric . instrument . Time . Milliseconds ) < nl > - private val connectionCount = Kamon . metrics . minMaxCounter ( " connection . count " , metricTags ) < nl > + private val connectionCount = Kamon . metrics . minMaxCounter ( " connections " , metricTags ) < nl > < nl > private val connCounter = new AtomicLong ( 0L )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala < nl > index c67074c . . ab323a1 100644 < nl > - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala < nl > + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala < nl > @ @ - 62 , 10 + 62 , 8 @ @ object WsFrontend extends Frontend { < nl > . collect { < nl > case msg : BinaryMessage ⇒ msg < nl > } < nl > - . mapAsync ( 1 ) { msg : BinaryMessage ⇒ < nl > - / / FIXME : control buffer size < nl > - msg . dataStream . runWith ( Sink . fold ( ByteString . empty ) ( _ + + _ ) ) < nl > - } < nl > + . map ( _ . dataStream ) < nl > + . flatten ( FlattenStrategy . concat ) < nl > . via ( mtProtoFlow ) < nl > . map { < nl > case bs ⇒

TEST DIFF:
diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala 
 index e0e4908 . . 70002e1 100644 
 - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala 
 + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / frontend / Frontend . scala 
 @ @ - 99 , 7 + 99 , 7 @ @ abstract class Frontend ( connIdPrefix : String ) { 
 private val metricTags = Map ( " type " → connIdPrefix ) 
 
 private val connectionTime = Kamon . metrics . histogram ( " connection . time " , metricTags , kamon . metric . instrument . Time . Milliseconds ) 
 - private val connectionCount = Kamon . metrics . minMaxCounter ( " connection . count " , metricTags ) 
 + private val connectionCount = Kamon . metrics . minMaxCounter ( " connections " , metricTags ) 
 
 private val connCounter = new AtomicLong ( 0L )

NEAREST DIFF:
diff - - git a / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala b / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala 
 index c67074c . . ab323a1 100644 
 - - - a / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala 
 + + + b / actor - server / actor - frontend / src / main / scala / im / actor / server / api / frontend / WsFrontend . scala 
 @ @ - 62 , 10 + 62 , 8 @ @ object WsFrontend extends Frontend { 
 . collect { 
 case msg : BinaryMessage ⇒ msg 
 } 
 - . mapAsync ( 1 ) { msg : BinaryMessage ⇒ 
 - / / FIXME : control buffer size 
 - msg . dataStream . runWith ( Sink . fold ( ByteString . empty ) ( _ + + _ ) ) 
 - } 
 + . map ( _ . dataStream ) 
 + . flatten ( FlattenStrategy . concat ) 
 . via ( mtProtoFlow ) 
 . map { 
 case bs ⇒
