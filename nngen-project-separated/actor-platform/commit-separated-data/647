BLEU SCORE: 0.4111336169005197

TEST MSG: fix ( android ) : sanitize downloaded file names correctly
GENERATED MSG: fix ( android ) : commit file upload

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > index d959fba . . c84b3c4 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > @ @ - 59 , 10 + 59 , 12 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > < nl > String baseFileName = fileName ; < nl > if ( fileName . contains ( " . " ) ) { < nl > - String prefix = baseFileName . substring ( 0 , baseFileName . lastIndexOf ( ' . ' ) ) . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; < nl > + String prefix = baseFileName . substring ( 0 , baseFileName . lastIndexOf ( ' . ' ) ) ; < nl > < nl > String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; < nl > < nl > + prefix = prefix . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; < nl > + < nl > File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; < nl > int index = 0 ; < nl > while ( res . exists ( ) ) { < nl > @ @ - 71 , 6 + 73 , 7 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > } < nl > return res . getAbsolutePath ( ) ; < nl > } else { < nl > + baseFileName = baseFileName . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; < nl > File res = new File ( dest , baseFileName + " _ " + fileId ) ; < nl > int index = 0 ; < nl > while ( res . exists ( ) ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > index 275f682 . . e272269 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > @ @ - 57 , 14 + 57 , 14 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > dest . mkdirs ( ) ; < nl > < nl > String baseFileName = fileName ; < nl > - if ( fileName . contains ( " " ) ) { < nl > + if ( fileName . contains ( " . " ) ) { < nl > String prefix = baseFileName . substring ( baseFileName . lastIndexOf ( ' . ' ) ) ; < nl > String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; < nl > < nl > - File res = new File ( dest , prefix + " _ " + fileId + " " + ext ) ; < nl > + File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; < nl > int index = 0 ; < nl > while ( res . exists ( ) ) { < nl > - res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " " + ext ) ; < nl > + res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " . " + ext ) ; < nl > index + + ; < nl > } < nl > return res . getAbsolutePath ( ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 index d959fba . . c84b3c4 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 @ @ - 59 , 10 + 59 , 12 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 
 String baseFileName = fileName ; 
 if ( fileName . contains ( " . " ) ) { 
 - String prefix = baseFileName . substring ( 0 , baseFileName . lastIndexOf ( ' . ' ) ) . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; 
 + String prefix = baseFileName . substring ( 0 , baseFileName . lastIndexOf ( ' . ' ) ) ; 
 
 String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; 
 
 + prefix = prefix . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; 
 + 
 File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; 
 int index = 0 ; 
 while ( res . exists ( ) ) { 
 @ @ - 71 , 6 + 73 , 7 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 } 
 return res . getAbsolutePath ( ) ; 
 } else { 
 + baseFileName = baseFileName . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; 
 File res = new File ( dest , baseFileName + " _ " + fileId ) ; 
 int index = 0 ; 
 while ( res . exists ( ) ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 index 275f682 . . e272269 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 @ @ - 57 , 14 + 57 , 14 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 dest . mkdirs ( ) ; 
 
 String baseFileName = fileName ; 
 - if ( fileName . contains ( " " ) ) { 
 + if ( fileName . contains ( " . " ) ) { 
 String prefix = baseFileName . substring ( baseFileName . lastIndexOf ( ' . ' ) ) ; 
 String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; 
 
 - File res = new File ( dest , prefix + " _ " + fileId + " " + ext ) ; 
 + File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; 
 int index = 0 ; 
 while ( res . exists ( ) ) { 
 - res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " " + ext ) ; 
 + res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " . " + ext ) ; 
 index + + ; 
 } 
 return res . getAbsolutePath ( ) ;
