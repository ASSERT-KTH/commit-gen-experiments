BLEU SCORE: 0.1777835117834348

TEST MSG: fix ( android ) : delete group after leave , fix group members binding
GENERATED MSG: wip ( android ) : Commenting code

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 1ed3dc8 . . 28b11db 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 193 , 6 + 193 , 7 @ @ public class ActorSDK { < nl > * / < nl > private boolean callsEnabled = false ; < nl > private boolean videoCallsEnabled = false ; < nl > + private String inviteDataUrl = " https : / / api . actor . im / v1 / groups / invites / " ; < nl > < nl > private ActorSDK ( ) { < nl > endpoints = new String [ ] { < nl > @ @ - 1052 , 6 + 1053 , 14 @ @ public class ActorSDK { < nl > this . videoCallsEnabled = videoCallsEnabled ; < nl > } < nl > < nl > + public String getInviteDataUrl ( ) { < nl > + return inviteDataUrl ; < nl > + } < nl > + < nl > + public void setInviteDataUrl ( String inviteDataUrl ) { < nl > + this . inviteDataUrl = inviteDataUrl ; < nl > + } < nl > + < nl > / * * < nl > * Used for handling delegated ViewHolders < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java < nl > index d65b31f . . 3f594ad 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java < nl > @ @ - 250 , 27 + 250 , 31 @ @ public class ActorBinder { < nl > return b ; < nl > } < nl > < nl > - public < T > void bind ( Value < T > value , boolean notify , ValueChangedListener < T > listener ) { < nl > + public < T > Binding bind ( Value < T > value , boolean notify , ValueChangedListener < T > listener ) { < nl > value . subscribe ( listener , notify ) ; < nl > - bindings . add ( new Binding ( value , listener ) ) ; < nl > + Binding binding = new Binding ( value , listener ) ; < nl > + bindings . add ( binding ) ; < nl > + return binding ; < nl > } < nl > < nl > - public < T , V > void bind ( final Value < T > value1 , final Value < V > value2 , < nl > + public < T , V > Binding [ ] bind ( final Value < T > value1 , final Value < V > value2 , < nl > final ValueDoubleChangedListener < T , V > listener ) { < nl > < nl > - bind ( value1 , false , new ValueChangedListener < T > ( ) { < nl > + Binding [ ] bindings = new Binding [ 2 ] ; < nl > + bindings [ 0 ] = bind ( value1 , false , new ValueChangedListener < T > ( ) { < nl > @ Override < nl > public void onChanged ( T val , Value < T > Value ) { < nl > listener . onChanged ( val , Value , value2 . get ( ) , value2 ) ; < nl > } < nl > } ) ; < nl > - bind ( value2 , false , new ValueChangedListener < V > ( ) { < nl > + bindings [ 1 ] = bind ( value2 , false , new ValueChangedListener < V > ( ) { < nl > @ Override < nl > public void onChanged ( V val , Value < V > Value ) { < nl > listener . onChanged ( value1 . get ( ) , value1 , val , Value ) ; < nl > } < nl > } ) ; < nl > listener . onChanged ( value1 . get ( ) , value1 , value2 . get ( ) , value2 ) ; < nl > + return bindings ; < nl > } < nl > < nl > public < T , V , S > void bind ( final Value < T > value1 , final Value < V > value2 , final Value < S > value3 , < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java < nl > index f8a2f47 . . 6ec35f1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java < nl > @ @ - 49 , 8 + 49 , 8 @ @ public class BinderCompatFragment extends android . support . v4 . app . Fragment { < nl > BINDER . bind ( value , listener , notify ) ; < nl > } < nl > < nl > - public < T1 , T2 > void bind ( ValueModel < T1 > value1 , ValueModel < T2 > value2 , ValueDoubleChangedListener < T1 , T2 > listener ) { < nl > - BINDER . bind ( value1 , value2 , listener ) ; < nl > + public < T1 , T2 > ActorBinder . Binding [ ] bind ( ValueModel < T1 > value1 , ValueModel < T2 > value2 , ValueDoubleChangedListener < T1 , T2 > listener ) { < nl > + return BINDER . bind ( value1 , value2 , listener ) ; < nl > } < nl > < nl > public void bind ( final CoverAvatarView avatarView , final ValueModel < Avatar > avatar ) { < nl > @ @ - 106 , 6 + 106 , 10 @ @ public class BinderCompatFragment extends android . support . v4 . app . Fragment { < nl > } < nl > } < nl > < nl > + protected ActorBinder getBINDER ( ) { < nl > + return BINDER ; < nl > + } < nl > + < nl > public void unbind ( ActorBinder . Binding b ) { < nl > BINDER . unbind ( b ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java < nl > index 4a1b336 . . e46e26b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java < nl > @ @ - 35 , 6 + 35 , 7 @ @ import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . ActorSDKLauncher ; < nl > import im . actor . sdk . ActorStyle ; < nl > import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . ActorBinder ; < nl > import im . actor . sdk . controllers . Intents ; < nl > import im . actor . sdk . controllers . activity . BaseActivity ; < nl > import im . actor . sdk . controllers . BaseFragment ; < nl > @ @ - 53 , 6 + 54 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > public class GroupInfoFragment extends BaseFragment { < nl > < nl > private static final String EXTRA _ CHAT _ ID = " chat _ id " ; < nl > + private ActorBinder . Binding [ ] memberBindings ; < nl > < nl > public static GroupInfoFragment create ( int chatId ) { < nl > Bundle args = new Bundle ( ) ; < nl > @ @ - 256 , 7 + 258 , 7 @ @ public class GroupInfoFragment extends BaseFragment { < nl > . setMessage ( getString ( R . string . alert _ leave _ group _ message ) . replace ( " % 1 $ s " , < nl > groupVM . getName ( ) . get ( ) ) ) < nl > . setPositiveButton ( R . string . alert _ leave _ group _ yes , ( dialog2 , which ) - > { < nl > - execute ( messenger ( ) . leaveGroup ( chatId ) ) ; < nl > + execute ( messenger ( ) . leaveAndDeleteGroup ( chatId ) ) ; < nl > } ) < nl > . setNegativeButton ( R . string . dialog _ cancel , null ) < nl > . show ( ) < nl > @ @ - 275 , 13 + 277 , 7 @ @ public class GroupInfoFragment extends BaseFragment { < nl > / / < nl > < nl > groupUserAdapter = new MembersAdapter ( getActivity ( ) , getArguments ( ) . getInt ( " groupId " ) ) ; < nl > - bind ( groupVM . getIsAsyncMembers ( ) , groupVM . getMembers ( ) , ( isAsyncMembers , valueModel , memberList , valueModel2 ) - > { < nl > - if ( isAsyncMembers ) { < nl > - groupUserAdapter . setMembers ( new ArrayList < > ( ) ) ; < nl > - } else { < nl > - groupUserAdapter . setMembers ( memberList ) ; < nl > - } < nl > - } ) ; < nl > + < nl > listView . setAdapter ( groupUserAdapter ) ; < nl > listView . setOnItemClickListener ( ( parent , view , position , id ) - > { < nl > Object item = parent . getItemAtPosition ( position ) ; < nl > @ @ - 427 , 6 + 423 , 28 @ @ public class GroupInfoFragment extends BaseFragment { < nl > } < nl > < nl > @ Override < nl > + public void onResume ( ) { < nl > + super . onResume ( ) ; < nl > + memberBindings = bind ( groupVM . getIsAsyncMembers ( ) , groupVM . getMembers ( ) , ( isAsyncMembers , valueModel , memberList , valueModel2 ) - > { < nl > + if ( isAsyncMembers ) { < nl > + groupUserAdapter . setMembers ( new ArrayList < > ( ) ) ; < nl > + } else { < nl > + groupUserAdapter . setMembers ( memberList ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onPause ( ) { < nl > + super . onPause ( ) ; < nl > + if ( memberBindings ! = null ) { < nl > + for ( ActorBinder . Binding b : memberBindings ) { < nl > + getBINDER ( ) . unbind ( b ) ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > public void onCreateOptionsMenu ( Menu menu , MenuInflater menuInflater ) { < nl > super . onCreateOptionsMenu ( menu , menuInflater ) ; < nl > if ( groupVM . getIsCanEditInfo ( ) . get ( ) ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java < nl > index e2f9109 . . e5e75b7 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java < nl > @ @ - 40 , 10 + 40 , 13 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { < nl > } < nl > < nl > public void setMembers ( Collection < GroupMember > members ) { < nl > - setMembers ( members , true ) ; < nl > + setMembers ( members , true , true ) ; < nl > } < nl > < nl > - public void setMembers ( Collection < GroupMember > members , boolean sort ) { < nl > + public void setMembers ( Collection < GroupMember > members , boolean clear , boolean sort ) { < nl > + if ( clear ) { < nl > + this . members . clear ( ) ; < nl > + } < nl > if ( sort ) { < nl > GroupMember [ ] membersArray = members . toArray ( new GroupMember [ members . size ( ) ] ) ; < nl > Arrays . sort ( membersArray , ( a , b ) - > { < nl > @ @ - 102 , 7 + 105 , 7 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { < nl > nextMembers = groupMembersSlice . getNext ( ) ; < nl > loaddedToEnd = nextMembers = = null ; < nl > loadInProgress = false ; < nl > - setMembers ( groupMembersSlice . getMembers ( ) , false ) ; < nl > + setMembers ( groupMembersSlice . getMembers ( ) , false , false ) ; < nl > } ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java < nl > index 66ba582 . . 11b9eb5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java < nl > @ @ - 81 , 7 + 81 , 7 @ @ public class RootActivity extends BaseFragmentActivity { < nl > joinGroupUrl = urlSplit [ urlSplit . length - 1 ] ; < nl > < nl > final String token = joinGroupUrl ; < nl > - HTTP . getMethod ( " https : / / api . actor . im / v1 / groups / invites / " + joinGroupUrl , 0 , 0 , 0 ) . then ( new Consumer < HTTPResponse > ( ) { < nl > + HTTP . getMethod ( ActorSDK . sharedActor ( ) . getInviteDataUrl ( ) + joinGroupUrl , 0 , 0 , 0 ) . then ( new Consumer < HTTPResponse > ( ) { < nl > @ Override < nl > public void apply ( HTTPResponse httpResponse ) { < nl > try {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 8674ea8 . . dcd2ef1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > import java . util . Locale ; < nl > @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { < nl > / * * < nl > * Delegate < nl > * / < nl > + @ NotNull < nl > private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; < nl > / * * < nl > * ActivityManager < nl > @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { < nl > if ( pushId ! = 0 ) { < nl > pushManager . registerPush ( application ) ; < nl > } < nl > - } catch ( ClassNotFoundException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( InstantiationException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > + } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > - < nl > - < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { < nl > this . pushId = pushId ; < nl > } < nl > < nl > + / * * < nl > + * Getting Application Delegate . < nl > + * < nl > + * @ return Application Delegate < nl > + * / < nl > + @ NotNull < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > < nl > - public void setDelegate ( ActorSDKDelegate delegate ) { < nl > + / * * < nl > + * Setting Application Delegate . Useful for hacking various parts of SDK < nl > + * < nl > + * @ param delegate Application Delegate < nl > + * / < nl > + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { < nl > this . delegate = delegate ; < nl > } < nl > < nl > + @ Deprecated < nl > public ActivityManager getActivityManager ( ) { < nl > return activityManager ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 0ddb728 . . f404f54 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; < nl > < nl > import android . app . Application ; < nl > < nl > + / * * < nl > + * Implementation of Application object that handles everything required for creating and < nl > + * managing Actor SDK < nl > + * / < nl > public class ActorSDKApplication extends Application { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index 9c2321e . . 2488fa2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; < nl > < nl > import android . graphics . Color ; < nl > < nl > + / * * < nl > + * Actor Styling class < nl > + * / < nl > public class ActorStyle { < nl > private int toolBarColor = 0 ; < nl > private int fabColor = 0 ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index de2e346 . . 68ec210 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > < nl > + / * * < nl > + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead < nl > + * of implementing ActorSDKDelegate < nl > + * / < nl > public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > - < nl > + < nl > + / / < nl > + / / Authentication Activity < nl > + / / < nl > + < nl > + @ Deprecated < nl > @ Override < nl > - public ActorIntent getAuthStartIntent ( ) { < nl > - return null ; < nl > + public AuthState getAuthStartState ( ) { < nl > + return AuthState . AUTH _ START ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartAfterLoginIntent ( ) { < nl > - return null ; < nl > + public BaseAuthFragment getSignFragment ( ) { < nl > + return new SignPhoneFragment ( ) ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartIntent ( ) { < nl > + public ActorIntent getAuthStartIntent ( ) { < nl > return null ; < nl > } < nl > < nl > + / / < nl > + / / Starting Activity < nl > + / / < nl > + < nl > + / * * < nl > + * Return non - null to open specific Activity after user ' s successful log in . < nl > + * If null is specified , result of getStartIntent is used . < nl > + * < nl > + * @ return ActorIntent for activity after login < nl > + * / < nl > @ Override < nl > - public AuthState getAuthStartState ( ) { < nl > - return AuthState . AUTH _ START ; < nl > + public ActorIntent getStartAfterLoginIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / * * < nl > + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch < nl > + * standard Messaging activity with contacts and recent list < nl > + * < nl > + * @ return ActorIntent for start activity < nl > + * / < nl > @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignPhoneFragment ( ) ; < nl > + public ActorIntent getStartIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / / < nl > + / / Hacking settings activity < nl > + / / < nl > + < nl > @ Override < nl > public View getBeforeNickSettingsView ( Context context ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > index dd19ba4 . . 64c5706 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . fragment . auth . AuthActivity ; < nl > < nl > - / * * < nl > - * Created by root on 10 / 20 / 15 . < nl > - * / < nl > + @ Deprecated < nl > public class ActivityManager { < nl > < nl > - < nl > public void startAuthActivity ( Context context ) { < nl > startAuthActivity ( context , null ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 1ed3dc8 . . 28b11db 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 193 , 6 + 193 , 7 @ @ public class ActorSDK { 
 * / 
 private boolean callsEnabled = false ; 
 private boolean videoCallsEnabled = false ; 
 + private String inviteDataUrl = " https : / / api . actor . im / v1 / groups / invites / " ; 
 
 private ActorSDK ( ) { 
 endpoints = new String [ ] { 
 @ @ - 1052 , 6 + 1053 , 14 @ @ public class ActorSDK { 
 this . videoCallsEnabled = videoCallsEnabled ; 
 } 
 
 + public String getInviteDataUrl ( ) { 
 + return inviteDataUrl ; 
 + } 
 + 
 + public void setInviteDataUrl ( String inviteDataUrl ) { 
 + this . inviteDataUrl = inviteDataUrl ; 
 + } 
 + 
 / * * 
 * Used for handling delegated ViewHolders 
 * / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java 
 index d65b31f . . 3f594ad 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / ActorBinder . java 
 @ @ - 250 , 27 + 250 , 31 @ @ public class ActorBinder { 
 return b ; 
 } 
 
 - public < T > void bind ( Value < T > value , boolean notify , ValueChangedListener < T > listener ) { 
 + public < T > Binding bind ( Value < T > value , boolean notify , ValueChangedListener < T > listener ) { 
 value . subscribe ( listener , notify ) ; 
 - bindings . add ( new Binding ( value , listener ) ) ; 
 + Binding binding = new Binding ( value , listener ) ; 
 + bindings . add ( binding ) ; 
 + return binding ; 
 } 
 
 - public < T , V > void bind ( final Value < T > value1 , final Value < V > value2 , 
 + public < T , V > Binding [ ] bind ( final Value < T > value1 , final Value < V > value2 , 
 final ValueDoubleChangedListener < T , V > listener ) { 
 
 - bind ( value1 , false , new ValueChangedListener < T > ( ) { 
 + Binding [ ] bindings = new Binding [ 2 ] ; 
 + bindings [ 0 ] = bind ( value1 , false , new ValueChangedListener < T > ( ) { 
 @ Override 
 public void onChanged ( T val , Value < T > Value ) { 
 listener . onChanged ( val , Value , value2 . get ( ) , value2 ) ; 
 } 
 } ) ; 
 - bind ( value2 , false , new ValueChangedListener < V > ( ) { 
 + bindings [ 1 ] = bind ( value2 , false , new ValueChangedListener < V > ( ) { 
 @ Override 
 public void onChanged ( V val , Value < V > Value ) { 
 listener . onChanged ( value1 . get ( ) , value1 , val , Value ) ; 
 } 
 } ) ; 
 listener . onChanged ( value1 . get ( ) , value1 , value2 . get ( ) , value2 ) ; 
 + return bindings ; 
 } 
 
 public < T , V , S > void bind ( final Value < T > value1 , final Value < V > value2 , final Value < S > value3 , 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java 
 index f8a2f47 . . 6ec35f1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / BinderCompatFragment . java 
 @ @ - 49 , 8 + 49 , 8 @ @ public class BinderCompatFragment extends android . support . v4 . app . Fragment { 
 BINDER . bind ( value , listener , notify ) ; 
 } 
 
 - public < T1 , T2 > void bind ( ValueModel < T1 > value1 , ValueModel < T2 > value2 , ValueDoubleChangedListener < T1 , T2 > listener ) { 
 - BINDER . bind ( value1 , value2 , listener ) ; 
 + public < T1 , T2 > ActorBinder . Binding [ ] bind ( ValueModel < T1 > value1 , ValueModel < T2 > value2 , ValueDoubleChangedListener < T1 , T2 > listener ) { 
 + return BINDER . bind ( value1 , value2 , listener ) ; 
 } 
 
 public void bind ( final CoverAvatarView avatarView , final ValueModel < Avatar > avatar ) { 
 @ @ - 106 , 6 + 106 , 10 @ @ public class BinderCompatFragment extends android . support . v4 . app . Fragment { 
 } 
 } 
 
 + protected ActorBinder getBINDER ( ) { 
 + return BINDER ; 
 + } 
 + 
 public void unbind ( ActorBinder . Binding b ) { 
 BINDER . unbind ( b ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java 
 index 4a1b336 . . e46e26b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / GroupInfoFragment . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . ActorSDKLauncher ; 
 import im . actor . sdk . ActorStyle ; 
 import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . ActorBinder ; 
 import im . actor . sdk . controllers . Intents ; 
 import im . actor . sdk . controllers . activity . BaseActivity ; 
 import im . actor . sdk . controllers . BaseFragment ; 
 @ @ - 53 , 6 + 54 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 public class GroupInfoFragment extends BaseFragment { 
 
 private static final String EXTRA _ CHAT _ ID = " chat _ id " ; 
 + private ActorBinder . Binding [ ] memberBindings ; 
 
 public static GroupInfoFragment create ( int chatId ) { 
 Bundle args = new Bundle ( ) ; 
 @ @ - 256 , 7 + 258 , 7 @ @ public class GroupInfoFragment extends BaseFragment { 
 . setMessage ( getString ( R . string . alert _ leave _ group _ message ) . replace ( " % 1 $ s " , 
 groupVM . getName ( ) . get ( ) ) ) 
 . setPositiveButton ( R . string . alert _ leave _ group _ yes , ( dialog2 , which ) - > { 
 - execute ( messenger ( ) . leaveGroup ( chatId ) ) ; 
 + execute ( messenger ( ) . leaveAndDeleteGroup ( chatId ) ) ; 
 } ) 
 . setNegativeButton ( R . string . dialog _ cancel , null ) 
 . show ( ) 
 @ @ - 275 , 13 + 277 , 7 @ @ public class GroupInfoFragment extends BaseFragment { 
 / / 
 
 groupUserAdapter = new MembersAdapter ( getActivity ( ) , getArguments ( ) . getInt ( " groupId " ) ) ; 
 - bind ( groupVM . getIsAsyncMembers ( ) , groupVM . getMembers ( ) , ( isAsyncMembers , valueModel , memberList , valueModel2 ) - > { 
 - if ( isAsyncMembers ) { 
 - groupUserAdapter . setMembers ( new ArrayList < > ( ) ) ; 
 - } else { 
 - groupUserAdapter . setMembers ( memberList ) ; 
 - } 
 - } ) ; 
 + 
 listView . setAdapter ( groupUserAdapter ) ; 
 listView . setOnItemClickListener ( ( parent , view , position , id ) - > { 
 Object item = parent . getItemAtPosition ( position ) ; 
 @ @ - 427 , 6 + 423 , 28 @ @ public class GroupInfoFragment extends BaseFragment { 
 } 
 
 @ Override 
 + public void onResume ( ) { 
 + super . onResume ( ) ; 
 + memberBindings = bind ( groupVM . getIsAsyncMembers ( ) , groupVM . getMembers ( ) , ( isAsyncMembers , valueModel , memberList , valueModel2 ) - > { 
 + if ( isAsyncMembers ) { 
 + groupUserAdapter . setMembers ( new ArrayList < > ( ) ) ; 
 + } else { 
 + groupUserAdapter . setMembers ( memberList ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 + public void onPause ( ) { 
 + super . onPause ( ) ; 
 + if ( memberBindings ! = null ) { 
 + for ( ActorBinder . Binding b : memberBindings ) { 
 + getBINDER ( ) . unbind ( b ) ; 
 + } 
 + } 
 + } 
 + 
 + @ Override 
 public void onCreateOptionsMenu ( Menu menu , MenuInflater menuInflater ) { 
 super . onCreateOptionsMenu ( menu , menuInflater ) ; 
 if ( groupVM . getIsCanEditInfo ( ) . get ( ) ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java 
 index e2f9109 . . e5e75b7 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java 
 @ @ - 40 , 10 + 40 , 13 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { 
 } 
 
 public void setMembers ( Collection < GroupMember > members ) { 
 - setMembers ( members , true ) ; 
 + setMembers ( members , true , true ) ; 
 } 
 
 - public void setMembers ( Collection < GroupMember > members , boolean sort ) { 
 + public void setMembers ( Collection < GroupMember > members , boolean clear , boolean sort ) { 
 + if ( clear ) { 
 + this . members . clear ( ) ; 
 + } 
 if ( sort ) { 
 GroupMember [ ] membersArray = members . toArray ( new GroupMember [ members . size ( ) ] ) ; 
 Arrays . sort ( membersArray , ( a , b ) - > { 
 @ @ - 102 , 7 + 105 , 7 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { 
 nextMembers = groupMembersSlice . getNext ( ) ; 
 loaddedToEnd = nextMembers = = null ; 
 loadInProgress = false ; 
 - setMembers ( groupMembersSlice . getMembers ( ) , false ) ; 
 + setMembers ( groupMembersSlice . getMembers ( ) , false , false ) ; 
 } ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java 
 index 66ba582 . . 11b9eb5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java 
 @ @ - 81 , 7 + 81 , 7 @ @ public class RootActivity extends BaseFragmentActivity { 
 joinGroupUrl = urlSplit [ urlSplit . length - 1 ] ; 
 
 final String token = joinGroupUrl ; 
 - HTTP . getMethod ( " https : / / api . actor . im / v1 / groups / invites / " + joinGroupUrl , 0 , 0 , 0 ) . then ( new Consumer < HTTPResponse > ( ) { 
 + HTTP . getMethod ( ActorSDK . sharedActor ( ) . getInviteDataUrl ( ) + joinGroupUrl , 0 , 0 , 0 ) . then ( new Consumer < HTTPResponse > ( ) { 
 @ Override 
 public void apply ( HTTPResponse httpResponse ) { 
 try {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 8674ea8 . . dcd2ef1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 
 + import org . jetbrains . annotations . NotNull ; 
 + import org . jetbrains . annotations . Nullable ; 
 + 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { 
 / * * 
 * Delegate 
 * / 
 + @ NotNull 
 private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; 
 / * * 
 * ActivityManager 
 @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { 
 if ( pushId ! = 0 ) { 
 pushManager . registerPush ( application ) ; 
 } 
 - } catch ( ClassNotFoundException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( InstantiationException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( IllegalAccessException e ) { 
 + } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 - 
 - 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { 
 this . pushId = pushId ; 
 } 
 
 + / * * 
 + * Getting Application Delegate . 
 + * 
 + * @ return Application Delegate 
 + * / 
 + @ NotNull 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 
 - public void setDelegate ( ActorSDKDelegate delegate ) { 
 + / * * 
 + * Setting Application Delegate . Useful for hacking various parts of SDK 
 + * 
 + * @ param delegate Application Delegate 
 + * / 
 + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { 
 this . delegate = delegate ; 
 } 
 
 + @ Deprecated 
 public ActivityManager getActivityManager ( ) { 
 return activityManager ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 0ddb728 . . f404f54 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; 
 
 import android . app . Application ; 
 
 + / * * 
 + * Implementation of Application object that handles everything required for creating and 
 + * managing Actor SDK 
 + * / 
 public class ActorSDKApplication extends Application { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index 9c2321e . . 2488fa2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; 
 
 import android . graphics . Color ; 
 
 + / * * 
 + * Actor Styling class 
 + * / 
 public class ActorStyle { 
 private int toolBarColor = 0 ; 
 private int fabColor = 0 ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index de2e346 . . 68ec210 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; 
 import im . actor . sdk . intents . ActorIntent ; 
 
 + / * * 
 + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead 
 + * of implementing ActorSDKDelegate 
 + * / 
 public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 - 
 + 
 + / / 
 + / / Authentication Activity 
 + / / 
 + 
 + @ Deprecated 
 @ Override 
 - public ActorIntent getAuthStartIntent ( ) { 
 - return null ; 
 + public AuthState getAuthStartState ( ) { 
 + return AuthState . AUTH _ START ; 
 } 
 
 @ Override 
 - public ActorIntent getStartAfterLoginIntent ( ) { 
 - return null ; 
 + public BaseAuthFragment getSignFragment ( ) { 
 + return new SignPhoneFragment ( ) ; 
 } 
 
 @ Override 
 - public ActorIntent getStartIntent ( ) { 
 + public ActorIntent getAuthStartIntent ( ) { 
 return null ; 
 } 
 
 + / / 
 + / / Starting Activity 
 + / / 
 + 
 + / * * 
 + * Return non - null to open specific Activity after user ' s successful log in . 
 + * If null is specified , result of getStartIntent is used . 
 + * 
 + * @ return ActorIntent for activity after login 
 + * / 
 @ Override 
 - public AuthState getAuthStartState ( ) { 
 - return AuthState . AUTH _ START ; 
 + public ActorIntent getStartAfterLoginIntent ( ) { 
 + return null ; 
 } 
 
 + / * * 
 + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch 
 + * standard Messaging activity with contacts and recent list 
 + * 
 + * @ return ActorIntent for start activity 
 + * / 
 @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignPhoneFragment ( ) ; 
 + public ActorIntent getStartIntent ( ) { 
 + return null ; 
 } 
 
 + / / 
 + / / Hacking settings activity 
 + / / 
 + 
 @ Override 
 public View getBeforeNickSettingsView ( Context context ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 index dd19ba4 . . 64c5706 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . fragment . auth . AuthActivity ; 
 
 - / * * 
 - * Created by root on 10 / 20 / 15 . 
 - * / 
 + @ Deprecated 
 public class ActivityManager { 
 
 - 
 public void startAuthActivity ( Context context ) { 
 startAuthActivity ( context , null ) ; 
 }
