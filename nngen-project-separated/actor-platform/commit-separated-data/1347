BLEU SCORE: 0.18505100105615155

TEST MSG: feat ( core ) : Enabling draft syncing
GENERATED MSG: fix ( core ) : Disable message read if app is not visible

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > index b0f207c . . 8c8140c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > @ @ - 382 , 11 + 382 , 11 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > } < nl > < nl > public void saveDraft ( Peer peer , String draft ) { < nl > - preferences ( ) . putString ( " draft _ " + peer . getUnuqueId ( ) , draft ) ; < nl > + context ( ) . getSettingsModule ( ) . setStringValue ( " drafts _ " + peer . getUnuqueId ( ) , draft ) ; < nl > } < nl > < nl > public String loadDraft ( Peer peer ) { < nl > - String res = preferences ( ) . getString ( " draft _ " + peer . getUnuqueId ( ) ) ; < nl > + String res = context ( ) . getSettingsModule ( ) . getStringValue ( " drafts _ " + peer . getUnuqueId ( ) , null ) ; < nl > if ( res = = null ) { < nl > return " " ; < nl > } else {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > index 88416ee . . 11630f1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > @ @ - 315 , 6 + 315 , 9 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > } < nl > < nl > public void onMessageShown ( final Peer peer , final int sender , final long sortDate ) { < nl > + if ( ! context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . getIsAppVisible ( ) . get ( ) ) { < nl > + return ; < nl > + } < nl > im . actor . runtime . Runtime . dispatch ( new Runnable ( ) { < nl > @ Override < nl > public void run ( ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 index b0f207c . . 8c8140c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 @ @ - 382 , 11 + 382 , 11 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 } 
 
 public void saveDraft ( Peer peer , String draft ) { 
 - preferences ( ) . putString ( " draft _ " + peer . getUnuqueId ( ) , draft ) ; 
 + context ( ) . getSettingsModule ( ) . setStringValue ( " drafts _ " + peer . getUnuqueId ( ) , draft ) ; 
 } 
 
 public String loadDraft ( Peer peer ) { 
 - String res = preferences ( ) . getString ( " draft _ " + peer . getUnuqueId ( ) ) ; 
 + String res = context ( ) . getSettingsModule ( ) . getStringValue ( " drafts _ " + peer . getUnuqueId ( ) , null ) ; 
 if ( res = = null ) { 
 return " " ; 
 } else {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 index 88416ee . . 11630f1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 @ @ - 315 , 6 + 315 , 9 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 } 
 
 public void onMessageShown ( final Peer peer , final int sender , final long sortDate ) { 
 + if ( ! context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . getIsAppVisible ( ) . get ( ) ) { 
 + return ; 
 + } 
 im . actor . runtime . Runtime . dispatch ( new Runnable ( ) { 
 @ Override 
 public void run ( ) {
