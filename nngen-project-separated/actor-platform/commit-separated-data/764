BLEU SCORE: 0.5169731539571706

TEST MSG: feat ( android ) : edit last message
GENERATED MSG: feat ( android ) : send contact

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > index 3ea1287 . . de08211 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > @ @ - 204 , 6 + 204 , 10 @ @ public class BaseActivity extends AppCompatActivity { < nl > execute ( cmd , R . string . progress _ common ) ; < nl > } < nl > < nl > + public < T > void execute ( Command < T > cmd , final CommandCallback < T > callback ) { < nl > + cmd . start ( callback ) ; < nl > + } < nl > + < nl > public < T > void execute ( Command < T > cmd , int title ) { < nl > final ProgressDialog progressDialog = new ProgressDialog ( this ) ; < nl > progressDialog . setMessage ( getString ( title ) ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 8ce5079 . . 615b196 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 43 , 10 + 43 , 13 @ @ import android . widget . Toast ; < nl > import java . io . File ; < nl > import java . util . ArrayList ; < nl > < nl > + import im . actor . core . api . rpc . ResponseSeqDate ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . network . RpcException ; < nl > import im . actor . core . viewmodel . Command ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > @ @ - 199 , 6 + 202 , 8 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / Is Activity opened from Compose < nl > private boolean isCompose = false ; < nl > private Intent intent ; < nl > + private boolean textEditing = false ; < nl > + private long currentEditRid ; < nl > < nl > public static Intent build ( Peer peer , boolean compose , Context context ) { < nl > final Intent intent = new Intent ( context , ChatActivity . class ) ; < nl > @ @ - 278 , 6 + 283 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > goneView ( quoteContainer ) ; < nl > quoteText . setText ( " " ) ; < nl > currentQuote = " " ; < nl > + if ( textEditing ) { < nl > + messageEditText . setText ( " " ) ; < nl > + } < nl > + textEditing = false ; < nl > + < nl > } < nl > } ) ; < nl > < nl > @ @ - 716 , 7 + 726 , 35 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > keyboardUtils . setImeVisibility ( messageEditText , false ) ; < nl > } < nl > < nl > - messenger ( ) . sendMessage ( peer , rawText ) ; < nl > + if ( textEditing ) { < nl > + execute ( messenger ( ) . updateMessage ( peer , rawText , currentEditRid ) , new CommandCallback < ResponseSeqDate > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseSeqDate res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( final Exception e ) { < nl > + runOnUiThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + RpcException re = ( RpcException ) e ; < nl > + String error = " " ; < nl > + if ( re . getTag ( ) . equals ( " NOT _ IN _ TIME _ WINDOW " ) ) { < nl > + error = getString ( R . string . edit _ message _ error _ slowpoke ) ; < nl > + } else if ( re . getTag ( ) . equals ( " NOT _ LAST _ MESSAGE " ) ) { < nl > + error = getString ( R . string . edit _ message _ error _ not _ last ) ; < nl > + } < nl > + Toast . makeText ( ChatActivity . this , error , Toast . LENGTH _ LONG ) . show ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + goneView ( quoteContainer ) ; < nl > + textEditing = false ; < nl > + } else { < nl > + messenger ( ) . sendMessage ( peer , rawText ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > @ @ - 983 , 6 + 1021 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / Quotes < nl > < nl > public void addQuote ( String quote , String rawQuote ) { < nl > + textEditing = false ; < nl > if ( quote ! = null & & ! quote . isEmpty ( ) ) { < nl > quoteText . setText ( quote ) ; < nl > } else { < nl > @ @ - 990 , 6 + 1029 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > currentQuote = rawQuote ; < nl > hideShareMenu ( ) ; < nl > + quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; < nl > showView ( quoteContainer ) ; < nl > } < nl > < nl > @ @ - 1146 , 6 + 1186 , 20 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } < nl > < nl > + public void onEditTextMessage ( long rid , String text ) { < nl > + currentQuote = null ; < nl > + forwardText = null ; < nl > + forwardTextRaw = null ; < nl > + textEditing = true ; < nl > + currentEditRid = rid ; < nl > + quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; < nl > + quoteText . setText ( R . string . edit _ message ) ; < nl > + messageEditText . setText ( text ) ; < nl > + hideShareMenu ( ) ; < nl > + showView ( quoteContainer ) ; < nl > + < nl > + } < nl > + < nl > private class TextWatcherImp implements TextWatcher { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index e1f52c0 . . 314344b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 14 , 6 + 14 , 7 @ @ import org . jetbrains . annotations . Nullable ; < nl > < nl > import java . util . ArrayList ; < nl > import java . util . HashMap ; < nl > + import java . util . HashSet ; < nl > import java . util . List ; < nl > import java . util . regex . Matcher ; < nl > import java . util . regex . Pattern ; < nl > @ @ - 32 , 7 + 33 , 6 @ @ import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . conversation . view . MentionSpan ; < nl > - import im . actor . sdk . util . Strings ; < nl > import im . actor . sdk . view . BaseUrlSpan ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > import im . actor . sdk . view . markdown . AndroidMarkdown ; < nl > @ @ - 47 , 6 + 47 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > public class ChatListProcessor implements ListProcessor < Message > { < nl > < nl > private HashMap < Long , PreprocessedTextData > preprocessedTexts = new HashMap < Long , PreprocessedTextData > ( ) ; < nl > + private HashSet < Integer > updatedTexts = new HashSet < Integer > ( ) ; < nl > < nl > private MessagesFragment fragment ; < nl > private boolean isGroup ; < nl > @ @ - 128 , 7 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > < nl > / / Process Content < nl > if ( msg . getContent ( ) instanceof TextContent ) { < nl > - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) ) { < nl > + int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; < nl > + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { < nl > TextContent text = ( TextContent ) msg . getContent ( ) ; < nl > Spannable spannableString = new SpannableString ( text . getText ( ) ) ; < nl > boolean hasSpannable = false ; < nl > @ @ - 189 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; < nl > hasSpannable = true ; < nl > } < nl > - < nl > + updatedTexts . add ( updatedHash ) ; < nl > preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , < nl > hasSpannable ? spannableString : null ) ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index 21db57a . . 5d658c5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 271 , 6 + 271 , 11 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > actionMode . invalidate ( ) ; < nl > } < nl > return true ; < nl > + } else { < nl > + if ( message . getContent ( ) instanceof TextContent ) { < nl > + ( ( ChatActivity ) getActivity ( ) ) . onEditTextMessage ( message . getRid ( ) , ( ( TextContent ) message . getContent ( ) ) . getText ( ) ) ; < nl > + return true ; < nl > + } < nl > } < nl > return false ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - hdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - hdpi / ic _ mode _ edit _ white _ 24dp . png < nl > new file mode 100644 < nl > index 0000000 . . 595ff10 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - hdpi / ic _ mode _ edit _ white _ 24dp . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - mdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - mdpi / ic _ mode _ edit _ white _ 24dp . png < nl > new file mode 100644 < nl > index 0000000 . . 12b09f1 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - mdpi / ic _ mode _ edit _ white _ 24dp . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xhdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xhdpi / ic _ mode _ edit _ white _ 24dp . png < nl > new file mode 100644 < nl > index 0000000 . . 5a06bff < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xhdpi / ic _ mode _ edit _ white _ 24dp . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xxhdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xxhdpi / ic _ mode _ edit _ white _ 24dp . png < nl > new file mode 100644 < nl > index 0000000 . . 02e19d0 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xxhdpi / ic _ mode _ edit _ white _ 24dp . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - hdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - hdpi / ic _ content _ create . png < nl > new file mode 100644 < nl > index 0000000 . . 70eb856 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - hdpi / ic _ content _ create . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - mdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - mdpi / ic _ content _ create . png < nl > new file mode 100644 < nl > index 0000000 . . 4019bd2 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - mdpi / ic _ content _ create . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xhdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xhdpi / ic _ content _ create . png < nl > new file mode 100644 < nl > index 0000000 . . 2dc8581 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xhdpi / ic _ content _ create . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / ic _ content _ create . png < nl > new file mode 100644 < nl > index 0000000 . . dc6dc94 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / ic _ content _ create . png differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml < nl > index d0babfe . . 933c1c5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml < nl > @ @ - 228 , 6 + 228 , 10 @ @ < nl > < string name = " chat _ not _ member " > В ы н е у ч а с т н и к э т о й г р у п п ы < / string > < nl > < string name = " chat _ unsupported " > С о о б щ е н и е н е п о д д е р ж и в а е т с я в э т о й в е р с и и . П о ж а л у й с т а , п о д о ж д и т е о б н о в л е н и е п р и л о ж е н и я ч т о б ы у в и д е т ь е г о . < / string > < nl > < nl > + < string name = " edit _ message " > Р е д а к т и р о в а н и е п о с л е д н е г о с о о б щ е н и я < / string > < nl > + < string name = " edit _ message _ error _ not _ last " > В ы м о ж е т е р е д а к т и р о в а т ь т о л ь к о п о с л е д н е е с о о б щ е н и е < / string > < nl > + < string name = " edit _ message _ error _ slowpoke " > В ы м о ж е т е р е д а к т и р о в а т ь т о л ь к о н е д а в н о о т п р а в л е н н ы е с о о б щ е н и я < / string > < nl > + < nl > < ! - - Share menu - - > < nl > < string name = " share _ menu _ gallery " > Г а л е р е я < / string > < nl > < string name = " share _ menu _ video " > В и д е о < / string > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > index 6b782e0 . . 26c97a6 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > @ @ - 233 , 6 + 233 , 15 @ @ < nl > < string name = " chat _ unsupported " > Message is unsupported in this version . Please , wait for application update to see message . < / string > < nl > < string name = " online " > \ u25CF online < / string > < nl > < nl > + < string name = " messages _ action _ forward " > Forward < / string > < nl > + < string name = " messages _ action _ quote " > Quote < / string > < nl > + < string name = " messages _ action _ delete " > Delete < / string > < nl > + < string name = " messages _ action _ copy " > Copy < / string > < nl > + < string name = " messages _ action _ like " > Like < / string > < nl > + < string name = " edit _ message " > Edit last message < / string > < nl > + < string name = " edit _ message _ error _ not _ last " > You can edit only last message < / string > < nl > + < string name = " edit _ message _ error _ slowpoke " > Message is too old < / string > < nl > + < nl > < ! - - Share menu - - > < nl > < string name = " share _ menu _ gallery " > Gallery < / string > < nl > < string name = " share _ menu _ video " > Video < / string > < nl > @ @ - 414 , 7 + 423 , 9 @ @ < nl > < string name = " not _ group _ mentions _ subtitle " > Enable group notifications only for mentions < / string > < nl > < string name = " not _ show _ text " > Show names and messages < / string > < nl > < string name = " not _ show _ text _ subtitle " > Show message text and sender name in notification panel < / string > < nl > - < nl > + < string name = " notification _ multiple _ canversations _ after _ msg _ count " > " messages in " < / string > < nl > + < string name = " notifications _ multiple _ canversations _ after _ coversations _ count " > " chats " < / string > < nl > + < string name = " notifications _ single _ conversation _ а fter _ messages _ count " > " messages " < / string > < nl > < ! - - Pick user - - > < nl > < string name = " pick _ user _ title " > Pick person < / string > < nl > < nl > @ @ - 481 , 6 + 492 , 8 @ @ < nl > < string name = " alert _ revoke _ integration _ token _ message " > Revoke token ? < / string > < nl > < string name = " alert _ revoke _ integration _ token _ yes " > Revoke < / string > < nl > < nl > + < string name = " confirm _ share " > Share with < / string > < nl > + < nl > < ! - - Errors - - > < nl > < string name = " error _ connection " > Unable to connect . Please check that you are connected to the Internet and try < nl > again . \ n \ nPlease reboot your phone if your connection problem persists . < nl > @ @ - 490 , 14 + 503 , 4 @ @ < nl > < / string > < nl > < string name = " error _ view _ url " > Unknown URL type < / string > < nl > < nl > - < nl > - < string name = " messages _ action _ forward " > Forward < / string > < nl > - < string name = " messages _ action _ quote " > Quote < / string > < nl > - < string name = " messages _ action _ delete " > Delete < / string > < nl > - < string name = " messages _ action _ copy " > Copy < / string > < nl > - < string name = " messages _ action _ like " > Like < / string > < nl > - < string name = " notification _ multiple _ canversations _ after _ msg _ count " > " messages in " < / string > < nl > - < string name = " notifications _ multiple _ canversations _ after _ coversations _ count " > " chats " < / string > < nl > - < string name = " notifications _ single _ conversation _ а fter _ messages _ count " > " messages " < / string > < nl > - < string name = " confirm _ share " > Share with < / string > < nl > < / resources > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 176cefd . . c541e8b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 16 , 6 + 16 , 7 @ @ import im . actor . core . api . ApiRawValue ; < nl > import im . actor . core . api . ApiSex ; < nl > import im . actor . core . api . ApiAuthSession ; < nl > import im . actor . core . api . rpc . ResponseRawRequest ; < nl > + import im . actor . core . api . rpc . ResponseSeqDate ; < nl > import im . actor . core . entity . FileReference ; < nl > import im . actor . core . entity . Group ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > @ @ - 596 , 6 + 597 , 21 @ @ public class Messenger { < nl > / * * < nl > * Send Markdown Message with mentions < nl > * < nl > + * @ param peer destination peer < nl > + * @ param text message text < nl > + * @ param rid message rundom id < nl > + * < nl > + * / < nl > + @ ObjectiveCName ( " sendMessageWithPeer : withText : withRid : " ) < nl > + public Command < ResponseSeqDate > updateMessage ( @ NotNull Peer peer , @ NotNull String text , long rid ) { < nl > + return modules . getMessagesModule ( ) . updateMessage ( peer , text , rid ) ; < nl > + } < nl > + < nl > + < nl > + < nl > + / * * < nl > + * Send Markdown Message with mentions < nl > + * < nl > * @ param peer destination peer < nl > * @ param name contact name < nl > * @ param phones contact phones < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index 6dc33ad . . 1cee057 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 50 , 6 + 50 , 8 @ @ public abstract class AbsContent { < nl > < nl > private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; < nl > < nl > + private int updatedHash ; < nl > + < nl > public static void registerConverter ( ContentConverter contentConverter ) { < nl > ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; < nl > for ( int i = 0 ; i < converters . length ; i + + ) { < nl > @ @ - 209 , 4 + 211 , 12 @ @ public abstract class AbsContent { < nl > public static ContentConverter [ ] getConverters ( ) { < nl > return converters ; < nl > } < nl > + < nl > + public int getUpdatedHash ( ) { < nl > + return updatedHash ; < nl > + } < nl > + < nl > + public void setUpdatedHash ( int updatedHash ) { < nl > + this . updatedHash = updatedHash ; < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > index 3ecab07 . . f0f173c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > @ @ - 11 , 9 + 11 , 11 @ @ import java . util . ArrayList ; < nl > import java . util . HashMap ; < nl > < nl > import im . actor . core . api . ApiJsonMessage ; < nl > + import im . actor . core . api . ApiMessage ; < nl > import im . actor . core . api . ApiOutPeer ; < nl > import im . actor . core . api . ApiPeer ; < nl > import im . actor . core . api . ApiPeerType ; < nl > + import im . actor . core . api . ApiTextMessage ; < nl > import im . actor . core . api . base . SeqUpdate ; < nl > import im . actor . core . api . rpc . RequestArchiveChat ; < nl > import im . actor . core . api . rpc . RequestClearChat ; < nl > @ @ - 23 , 10 + 25 , 12 @ @ import im . actor . core . api . rpc . RequestHideDialog ; < nl > import im . actor . core . api . rpc . RequestMessageRemoveReaction ; < nl > import im . actor . core . api . rpc . RequestMessageSetReaction ; < nl > import im . actor . core . api . rpc . RequestUnfavouriteDialog ; < nl > + import im . actor . core . api . rpc . RequestUpdateMessage ; < nl > import im . actor . core . api . rpc . ResponseDialogsOrder ; < nl > import im . actor . core . api . rpc . ResponseLoadArchived ; < nl > import im . actor . core . api . rpc . ResponseReactionsResponse ; < nl > import im . actor . core . api . rpc . ResponseSeq ; < nl > + import im . actor . core . api . rpc . ResponseSeqDate ; < nl > import im . actor . core . api . updates . UpdateChatArchive ; < nl > import im . actor . core . api . updates . UpdateChatClear ; < nl > import im . actor . core . api . updates . UpdateChatDelete ; < nl > @ @ - 36 , 12 + 40 , 14 @ @ import im . actor . core . api . updates . UpdateReactionsUpdate ; < nl > import im . actor . core . entity . Dialog ; < nl > import im . actor . core . entity . DialogSpec ; < nl > import im . actor . core . entity . Group ; < nl > + import im . actor . core . entity . GroupMember ; < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . User ; < nl > import im . actor . core . entity . content . FastThumb ; < nl > import im . actor . core . entity . content . JsonContent ; < nl > + import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . internal . Sticker ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > @ @ - 323 , 6 + 329 , 71 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > } ) ; < nl > } < nl > < nl > + < nl > + public Command < ResponseSeqDate > updateMessage ( final Peer peer , final String message , final long rid ) { < nl > + context ( ) . getTypingModule ( ) . onMessageSent ( peer ) ; < nl > + return new Command < ResponseSeqDate > ( ) { < nl > + < nl > + @ Override < nl > + public void start ( final CommandCallback < ResponseSeqDate > callback ) { < nl > + ArrayList < Integer > mentions = new ArrayList < Integer > ( ) ; < nl > + TextContent content = TextContent . create ( message , null , mentions ) ; < nl > + < nl > + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > + Group group = groups ( ) . getValue ( peer . getPeerId ( ) ) ; < nl > + String lowText = message . toLowerCase ( ) ; < nl > + for ( GroupMember member : group . getMembers ( ) ) { < nl > + User user = users ( ) . getValue ( member . getUid ( ) ) ; < nl > + if ( user . getNick ( ) ! = null ) { < nl > + String nick = " @ " + user . getNick ( ) . toLowerCase ( ) ; < nl > + / / TODO : Better filtering < nl > + if ( lowText . contains ( nick + " : " ) < nl > + | | lowText . contains ( nick + " " ) < nl > + | | lowText . contains ( " " + nick ) < nl > + | | lowText . endsWith ( nick ) < nl > + | | lowText . equals ( nick ) ) { < nl > + mentions . add ( user . getUid ( ) ) ; < nl > + } < nl > + } < nl > + } < nl > + } < nl > + < nl > + ApiMessage editMessage = new ApiTextMessage ( message , ( ( TextContent ) content ) . getMentions ( ) , ( ( TextContent ) content ) . getTextMessageEx ( ) ) ; < nl > + request ( new RequestUpdateMessage ( buidOutPeer ( peer ) , rid , editMessage ) , new RpcCallback < ResponseSeqDate > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseSeqDate response ) { < nl > + callback . onResult ( response ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( RpcException e ) { < nl > + callback . onError ( e ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ; < nl > + < nl > + } < nl > + < nl > + public ApiOutPeer buidOutPeer ( Peer peer ) { < nl > + if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > + User user = users ( ) . getValue ( peer . getPeerId ( ) ) ; < nl > + if ( user = = null ) { < nl > + return null ; < nl > + } < nl > + return new ApiOutPeer ( ApiPeerType . PRIVATE , user . getUid ( ) , user . getAccessHash ( ) ) ; < nl > + } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > + Group group = groups ( ) . getValue ( peer . getPeerId ( ) ) ; < nl > + if ( group = = null ) { < nl > + return null ; < nl > + } < nl > + return new ApiOutPeer ( ApiPeerType . GROUP , group . getGroupId ( ) , group . getAccessHash ( ) ) ; < nl > + } else { < nl > + throw new RuntimeException ( " Unknown peer : " + peer ) ; < nl > + } < nl > + } < nl > + < nl > + < nl > public void sendMessage ( @ NotNull Peer peer , @ NotNull String message , @ Nullable String markDownText , < nl > @ Nullable ArrayList < Integer > mentions , boolean autoDetect ) { < nl > / / Notify typing about message sent < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > index bf65a71 . . 73b183c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > + import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . events . AppVisibleChanged ; < nl > import im . actor . core . util . ModuleActor ; < nl > @ @ - 279 , 6 + 280 , 9 @ @ public class ConversationActor extends ModuleActor { < nl > } < nl > < nl > / / Updating message < nl > + if ( content instanceof TextContent ) { < nl > + content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; < nl > + } < nl > Message updatedMsg = message . changeContent ( content ) ; < nl > messages . addOrUpdateItem ( updatedMsg ) ; < nl > if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 1a6196a . . 5777235 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 5 , 8 + 5 , 10 @ @ import android . app . AlertDialog ; < nl > import android . content . Context ; < nl > import android . content . DialogInterface ; < nl > import android . content . Intent ; < nl > + import android . database . Cursor ; < nl > import android . net . Uri ; < nl > import android . os . Bundle ; < nl > + import android . provider . ContactsContract ; < nl > import android . provider . MediaStore ; < nl > import android . support . v4 . app . Fragment ; < nl > import android . support . v7 . app . ActionBar ; < nl > @ @ - 14 , 6 + 16 , 7 @ @ import android . support . v7 . view . ActionMode ; < nl > import android . text . Editable ; < nl > import android . text . Spannable ; < nl > import android . text . TextWatcher ; < nl > + import android . util . Base64 ; < nl > import android . view . ContextThemeWrapper ; < nl > import android . view . LayoutInflater ; < nl > import android . view . Menu ; < nl > @ @ - 34 , 6 + 37 , 7 @ @ import java . io . File ; < nl > import java . lang . reflect . Field ; < nl > import java . lang . reflect . Method ; < nl > import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > < nl > import im . actor . core . entity . MentionFilterResult ; < nl > import im . actor . core . entity . Peer ; < nl > @ @ - 83 , 6 + 87 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private static final int REQUEST _ VIDEO = 2 ; < nl > private static final int REQUEST _ DOC = 3 ; < nl > private static final int REQUEST _ LOCATION = 4 ; < nl > + private static final int REQUEST _ CONTACT = 5 ; < nl > / / Peer of current chat < nl > private Peer peer ; < nl > < nl > @ @ - 574 , 6 + 579 , 9 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > return true ; < nl > } else if ( item . getItemId ( ) = = R . id . file ) { < nl > startActivityForResult ( Intents . pickFile ( ChatActivity . this ) , REQUEST _ DOC ) ; < nl > + } else if ( item . getItemId ( ) = = R . id . contact ) { < nl > + Intent intent = new Intent ( Intent . ACTION _ PICK , ContactsContract . Contacts . CONTENT _ URI ) ; < nl > + startActivityForResult ( intent , REQUEST _ CONTACT ) ; < nl > } < nl > return false ; < nl > } < nl > @ @ - 603 , 6 + 611 , 70 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } < nl > } < nl > + } else if ( requestCode = = REQUEST _ CONTACT ) { < nl > + HashSet < String > phones = new HashSet < String > ( ) ; < nl > + HashSet < String > emails = new HashSet < String > ( ) ; < nl > + String name = " " ; < nl > + byte [ ] photo = null ; < nl > + < nl > + Uri contactData = data . getData ( ) ; < nl > + Cursor c = managedQuery ( contactData , null , null , null , null ) ; < nl > + if ( c . moveToFirst ( ) ) { < nl > + < nl > + < nl > + String id = c . getString ( c . getColumnIndexOrThrow ( ContactsContract . Contacts . _ ID ) ) ; < nl > + < nl > + String hasPhone = c . getString ( c . getColumnIndex ( ContactsContract . Contacts . HAS _ PHONE _ NUMBER ) ) ; < nl > + < nl > + if ( hasPhone . equalsIgnoreCase ( " 1 " ) ) { < nl > + Cursor phonesCursor = getContentResolver ( ) . query ( < nl > + ContactsContract . CommonDataKinds . Phone . CONTENT _ URI , null , < nl > + ContactsContract . CommonDataKinds . Phone . CONTACT _ ID + " = " + id , < nl > + null , null ) ; < nl > + if ( phonesCursor . moveToFirst ( ) ) { < nl > + int phoneColumnIndex = phonesCursor . getColumnIndex ( ContactsContract . CommonDataKinds . Phone . DATA ) ; < nl > + do { < nl > + phones . add ( phonesCursor . getString ( phoneColumnIndex ) ) ; < nl > + } while ( phonesCursor . moveToNext ( ) ) ; < nl > + phonesCursor . close ( ) ; < nl > + } < nl > + < nl > + } < nl > + name = c . getString ( c . getColumnIndex ( ContactsContract . Contacts . DISPLAY _ NAME ) ) ; < nl > + < nl > + < nl > + Cursor emailCursor = getContentResolver ( ) . query ( < nl > + ContactsContract . CommonDataKinds . Email . CONTENT _ URI , null , < nl > + ContactsContract . CommonDataKinds . Email . CONTACT _ ID + " = " + id , < nl > + null , null ) ; < nl > + if ( emailCursor ! = null & & emailCursor . moveToFirst ( ) ) { < nl > + int emailColumnIndex = emailCursor . getColumnIndex ( ContactsContract . CommonDataKinds . Email . DATA ) ; < nl > + do { < nl > + emails . add ( emailCursor . getString ( emailColumnIndex ) ) ; < nl > + } while ( emailCursor . moveToNext ( ) ) ; < nl > + emailCursor . close ( ) ; < nl > + } < nl > + < nl > + Uri photoUri = Uri . withAppendedPath ( contactData , ContactsContract . Contacts . Photo . CONTENT _ DIRECTORY ) ; < nl > + Cursor photoCursor = getContentResolver ( ) . query ( photoUri , < nl > + new String [ ] { ContactsContract . Contacts . Photo . PHOTO } , null , null , null ) ; < nl > + if ( photoCursor = = null ) { < nl > + < nl > + } else { < nl > + try { < nl > + if ( photoCursor . moveToFirst ( ) ) { < nl > + photo = photoCursor . getBlob ( 0 ) ; < nl > + < nl > + } < nl > + } finally { < nl > + photoCursor . close ( ) ; < nl > + } < nl > + } < nl > + < nl > + } < nl > + < nl > + messenger ( ) . sendContact ( peer , name , phones , emails , photo ! = null ? ( Base64 . encodeToString ( photo , Base64 . URL _ SAFE | Base64 . NO _ WRAP ) ) : null ) ; < nl > + < nl > } < nl > } < nl > super . onActivityResult ( requestCode , resultCode , data ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 76f8572 . . e6d9218 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 20 , 6 + 20 , 7 @ @ import java . util . regex . Pattern ; < nl > import im . actor . core . entity . GroupMember ; < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > @ @ - 161 , 6 + 162 , 29 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > hasSpannable ? spannableString : null ) ) ; < nl > } < nl > preprocessedDatas . add ( preprocessedTexts . get ( msg . getRid ( ) ) ) ; < nl > + } else if ( msg . getContent ( ) instanceof ContactContent ) { < nl > + ContactContent contact = ( ContactContent ) msg . getContent ( ) ; < nl > + String text = " " ; < nl > + for ( String phone : contact . getPhones ( ) ) { < nl > + text + = " \ n " . concat ( phone ) ; < nl > + } < nl > + for ( String email : contact . getEmails ( ) ) { < nl > + text + = " \ n " . concat ( email ) ; < nl > + } < nl > + Spannable spannableString = new SpannableString ( text ) ; < nl > + < nl > + SpannableStringBuilder builder = new SpannableStringBuilder ( ) ; < nl > + String name ; < nl > + name = contact . getName ( ) ; < nl > + builder . append ( name ) ; < nl > + builder . setSpan ( new ForegroundColorSpan ( colors [ Math . abs ( msg . getSenderId ( ) ) % colors . length ] ) , 0 , name . length ( ) , Spanned . SPAN _ INCLUSIVE _ EXCLUSIVE ) ; < nl > + / / builder . append ( " \ n " ) ; < nl > + spannableString = builder . append ( spannableString ) ; < nl > + < nl > + < nl > + preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( text , spannableString ) ) ; < nl > + < nl > + preprocessedDatas . add ( preprocessedTexts . get ( msg . getRid ( ) ) ) ; < nl > } else { < nl > / / Nothing to do yet < nl > preprocessedDatas . add ( null ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java < nl > new file mode 100644 < nl > index 0000000 . . 31ab2e8 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java < nl > @ @ - 0 , 0 + 1 , 109 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . content . Context ; < nl > + import android . content . DialogInterface ; < nl > + import android . content . Intent ; < nl > + import android . graphics . Bitmap ; < nl > + import android . graphics . BitmapFactory ; < nl > + import android . graphics . PorterDuff ; < nl > + import android . graphics . drawable . Drawable ; < nl > + import android . net . Uri ; < nl > + import android . support . v4 . graphics . drawable . RoundedBitmapDrawable ; < nl > + import android . support . v4 . graphics . drawable . RoundedBitmapDrawableFactory ; < nl > + import android . support . v7 . app . AlertDialog ; < nl > + import android . util . Base64 ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . widget . FrameLayout ; < nl > + import android . widget . ImageView ; < nl > + import android . widget . TextView ; < nl > + < nl > + import im . actor . core . entity . Message ; < nl > + import im . actor . core . entity . content . ContactContent ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . view . avatar . AvatarPlaceholderDrawable ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . myUid ; < nl > + < nl > + public class ContactHolder extends MessageHolder { < nl > + < nl > + private ViewGroup mainContainer ; < nl > + private FrameLayout messageBubble ; < nl > + private TextView text ; < nl > + < nl > + private ImageView contactAvatar ; < nl > + < nl > + < nl > + public ContactHolder ( MessagesAdapter fragment , final View itemView ) { < nl > + super ( fragment , itemView , false ) ; < nl > + < nl > + mainContainer = ( ViewGroup ) itemView . findViewById ( R . id . mainContainer ) ; < nl > + messageBubble = ( FrameLayout ) itemView . findViewById ( R . id . fl _ bubble ) ; < nl > + text = ( TextView ) itemView . findViewById ( R . id . tv _ text ) ; < nl > + text . setTextColor ( ActorSDK . sharedActor ( ) . style . getConvTextColor ( ) ) ; < nl > + contactAvatar = ( ImageView ) itemView . findViewById ( R . id . contact _ avatar ) ; < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + protected void bindData ( final Message message , boolean isUpdated , PreprocessedData preprocessedData ) { < nl > + < nl > + ContactContent contact = ( ContactContent ) message . getContent ( ) ; < nl > + if ( message . getSenderId ( ) = = myUid ( ) ) { < nl > + messageBubble . setBackgroundResource ( R . drawable . conv _ bubble _ media _ out ) ; < nl > + } else { < nl > + messageBubble . setBackgroundResource ( R . drawable . conv _ bubble _ media _ in ) ; < nl > + } < nl > + Drawable avatar ; < nl > + if ( contact . getPhoto64 ( ) ! = null ) { < nl > + byte [ ] decodedByte = Base64 . decode ( contact . getPhoto64 ( ) , Base64 . URL _ SAFE | Base64 . NO _ WRAP ) ; < nl > + Bitmap b = BitmapFactory . decodeByteArray ( decodedByte , 0 , decodedByte . length ) ; < nl > + avatar = getRoundedBitmapDrawable ( itemView . getContext ( ) , b ) ; < nl > + } else { < nl > + avatar = new AvatarPlaceholderDrawable ( contact . getName ( ) , message . getSenderId ( ) , 18 , itemView . getContext ( ) ) ; < nl > + } < nl > + contactAvatar . setBackgroundDrawable ( avatar ) ; < nl > + < nl > + text . setText ( ( ( PreprocessedTextData ) preprocessedData ) . getSpannableString ( ) ) ; < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( Message currentMessage ) { < nl > + < nl > + final ContactContent contact = ( ContactContent ) currentMessage . getContent ( ) ; < nl > + CharSequence [ ] items = new CharSequence [ contact . getEmails ( ) . size ( ) + contact . getPhones ( ) . size ( ) ] ; < nl > + int i = 0 ; < nl > + for ( String phone : contact . getPhones ( ) ) { < nl > + items [ i + + ] = phone ; < nl > + } < nl > + for ( String email : contact . getEmails ( ) ) { < nl > + items [ i + + ] = email ; < nl > + } < nl > + < nl > + new AlertDialog . Builder ( itemView . getContext ( ) ) < nl > + . setItems ( items , new DialogInterface . OnClickListener ( ) { < nl > + @ Override < nl > + public void onClick ( DialogInterface d , int which ) { < nl > + if ( which + 1 < = contact . getPhones ( ) . size ( ) ) { < nl > + < nl > + Intent intent = new Intent ( Intent . ACTION _ DIAL , Uri . fromParts ( " tel " , contact . getPhones ( ) . get ( which ) , null ) ) ; < nl > + itemView . getContext ( ) . startActivity ( intent ) ; < nl > + } else { < nl > + Intent intent = new Intent ( Intent . ACTION _ SENDTO , Uri . fromParts ( " mailto " , contact . getEmails ( ) . get ( which - contact . getPhones ( ) . size ( ) ) , null ) ) ; < nl > + < nl > + itemView . getContext ( ) . startActivity ( intent ) ; < nl > + } < nl > + } < nl > + } ) . show ( ) ; < nl > + } < nl > + < nl > + private RoundedBitmapDrawable getRoundedBitmapDrawable ( Context context , Bitmap b ) { < nl > + RoundedBitmapDrawable d = RoundedBitmapDrawableFactory . create ( context . getResources ( ) , Bitmap . createScaledBitmap ( b , Screen . dp ( 48 ) , Screen . dp ( 48 ) , false ) ) ; < nl > + d . setCornerRadius ( d . getIntrinsicHeight ( ) / 2 ) ; < nl > + d . setAntiAlias ( true ) ; < nl > + return d ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > index b845549 . . 18b7c0f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > @ @ - 9 , 6 + 9 , 7 @ @ import java . util . HashMap ; < nl > < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > + import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . ServiceContent ; < nl > @ @ - 89 , 8 + 90 , 10 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { < nl > return 4 ; < nl > } else if ( content instanceof DocumentContent ) { < nl > return 3 ; < nl > - } else { < nl > + } else if ( content instanceof ContactContent ) { < nl > return 5 ; < nl > + } else { < nl > + return 6 ; < nl > } < nl > } < nl > < nl > @ @ - 113 , 6 + 116 , 8 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { < nl > return new DocHolder ( this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; < nl > case 4 : < nl > return new AudioHolder ( this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; < nl > + case 5 : < nl > + return new ContactHolder ( this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; < nl > default : < nl > return new UnsupportedHolder ( this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml < nl > new file mode 100644 < nl > index 0000000 . . db3e5e3 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml < nl > @ @ - 0 , 0 + 1 , 40 @ @ < nl > + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < ! - - < nl > + ~ Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + - - > < nl > + < nl > + < im . actor . sdk . controllers . conversation . view . BubbleContainer xmlns : android = " http : / / schemas . android . com / apk / res / android " < nl > + android : id = " @ + id / mainContainer " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " wrap _ content " < nl > + android : clickable = " true " > < nl > + < nl > + < FrameLayout < nl > + android : id = " @ + id / fl _ bubble " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : duplicateParentState = " true " > < nl > + < nl > + < LinearLayout < nl > + android : padding = " 5dp " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : orientation = " horizontal " > < nl > + < nl > + < ImageView < nl > + android : id = " @ + id / contact _ avatar " < nl > + android : padding = " 10dp " < nl > + android : layout _ width = " 48dp " < nl > + android : layout _ height = " 48dp " / > < nl > + < nl > + < TextView < nl > + android : id = " @ + id / tv _ text " < nl > + android : paddingLeft = " 10dp " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : layout _ gravity = " top | left " < nl > + android : includeFontPadding = " false " < nl > + android : textSize = " 15sp " / > < nl > + < / LinearLayout > < nl > + < nl > + < / FrameLayout > < nl > + < / im . actor . sdk . controllers . conversation . view . BubbleContainer > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml < nl > index 981c13d . . c0e1f54 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml < nl > @ @ - 12 , 6 + 12 , 12 @ @ < nl > android : visible = " false " / > < nl > < nl > < item < nl > + android : id = " @ + id / contact " < nl > + android : icon = " @ drawable / conv _ attach _ file " < nl > + android : title = " @ string / chat _ attach _ contact " < nl > + android : visible = " false " / > < nl > + < nl > + < item < nl > android : id = " @ + id / file " < nl > android : icon = " @ drawable / conv _ attach _ file " < nl > android : title = " @ string / chat _ attach _ file " / > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml < nl > index 9ad8001 . . 907a618 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml < nl > @ @ - 203 , 6 + 203 , 7 @ @ < nl > < string name = " chat _ menu _ leave _ group " > П о к и н у т ь г р у п п у < / string > < nl > < nl > < string name = " chat _ attach _ place " > М о е м е с т о < / string > < nl > + < string name = " chat _ attach _ contact " > К о н т а к т < / string > < nl > < string name = " chat _ attach _ file " > Ф а й л < / string > < nl > < string name = " chat _ attach _ take _ video " > С н я т ь в и д е о < / string > < nl > < string name = " chat _ attach _ take _ photo " > С н я т ь ф о т о < / string > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > index 3a7761d . . 62394fb 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > @ @ - 206 , 6 + 206 , 7 @ @ < nl > < string name = " chat _ menu _ leave _ group " > Leave group < / string > < nl > < nl > < string name = " chat _ attach _ place " > Place < / string > < nl > + < string name = " chat _ attach _ contact " > Contact < / string > < nl > < string name = " chat _ attach _ file " > File < / string > < nl > < string name = " chat _ attach _ take _ video " > Take video < / string > < nl > < string name = " chat _ attach _ take _ photo " > Take photo < / string > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index ec6d9d5 . . b0f6f93 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import org . jetbrains . annotations . NotNull ; < nl > import org . jetbrains . annotations . Nullable ; < nl > < nl > import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > import java . util . List ; < nl > < nl > import im . actor . core . api . ApiSex ; < nl > @ @ - 539 , 6 + 540 , 19 @ @ public class Messenger { < nl > / * * < nl > * Send Markdown Message with mentions < nl > * < nl > + * @ param peer destination peer < nl > + * @ param name contact name < nl > + * @ param phones contact phones < nl > + * @ param emails contact emails < nl > + * @ param base64photo contact photo < nl > + * / < nl > + public void sendContact ( Peer peer , String name , HashSet < String > phones , HashSet < String > emails , String base64photo ) { < nl > + modules . getMessagesModule ( ) . sendContact ( peer , name , phones , emails , base64photo ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Send Markdown Message with mentions < nl > + * < nl > * @ param peer destination peer < nl > * @ param text message text < nl > * @ param markDownText message markdown text < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index 202d4cc . . 501db21 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 150 , 6 + 150 , 8 @ @ public abstract class AbsContent { < nl > JSONObject object = new JSONObject ( json . getRawJson ( ) ) ; < nl > if ( object . getString ( " dataType " ) . equals ( " banner " ) ) { < nl > return new BannerContent ( remoteContainer ) ; < nl > + } else if ( object . getString ( " dataType " ) . equals ( " contact " ) ) { < nl > + return new ContactContent ( remoteContainer ) ; < nl > } < nl > } < nl > } catch ( Exception e ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContactContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContactContent . java < nl > new file mode 100644 < nl > index 0000000 . . 696a838 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContactContent . java < nl > @ @ - 0 , 0 + 1 , 113 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . entity . content ; < nl > + < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + < nl > + import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > + < nl > + import im . actor . core . api . ApiJsonMessage ; < nl > + import im . actor . core . entity . content . internal . ContentRemoteContainer ; < nl > + import im . actor . runtime . json . JSONArray ; < nl > + import im . actor . runtime . json . JSONException ; < nl > + import im . actor . runtime . json . JSONObject ; < nl > + < nl > + < nl > + public class ContactContent extends AbsContent { < nl > + < nl > + private String name ; < nl > + private String photo64 ; < nl > + private String rawJson ; < nl > + private ArrayList < String > phones ; < nl > + private ArrayList < String > emails ; < nl > + < nl > + @ NotNull < nl > + public static ContactContent create ( @ NotNull String name , @ NotNull HashSet < String > phones , @ NotNull HashSet < String > emails , @ Nullable String base64photo ) { < nl > + String emailsJsonString = " " ; < nl > + for ( String email : emails ) { < nl > + emailsJsonString = emailsJsonString . concat ( " \ " " ) . concat ( email ) . concat ( " \ " , " ) ; < nl > + } < nl > + if ( ! emailsJsonString . isEmpty ( ) ) { < nl > + emailsJsonString = emailsJsonString . substring ( 0 , emailsJsonString . length ( ) - 1 ) ; < nl > + } < nl > + < nl > + String phonesJsonString = " " ; < nl > + for ( String phone : phones ) { < nl > + phonesJsonString = phonesJsonString . concat ( " \ " " ) . concat ( phone ) . concat ( " \ " , " ) ; < nl > + } < nl > + if ( ! phonesJsonString . isEmpty ( ) ) { < nl > + phonesJsonString = phonesJsonString . substring ( 0 , phonesJsonString . length ( ) - 1 ) ; < nl > + } < nl > + < nl > + String jsonString = < nl > + " { \ " dataType \ " : \ " contact \ " , " + < nl > + " \ " data \ " : { " + < nl > + " \ " contact \ " : { " + < nl > + " \ " name \ " : \ " " + name + " \ " , " + < nl > + " \ " phones \ " : [ " + phonesJsonString + " ] , " + < nl > + " \ " emails \ " : [ " + emailsJsonString + " ] " + < nl > + ( base64photo ! = null ? ( " , \ " photo \ " : \ " " + base64photo + " \ " " ) : ( " " ) ) + < nl > + " } " + < nl > + " } " + < nl > + " } " ; < nl > + ContactContent lc = null ; < nl > + try { < nl > + lc = new ContactContent ( new ContentRemoteContainer ( < nl > + new ApiJsonMessage ( jsonString ) ) ) ; < nl > + } catch ( JSONException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + if ( lc ! = null ) lc . rawJson = jsonString ; < nl > + return lc ; < nl > + } < nl > + < nl > + < nl > + public ContactContent ( ContentRemoteContainer contentContainer ) throws JSONException { < nl > + super ( contentContainer ) ; < nl > + < nl > + rawJson = ( ( ApiJsonMessage ) contentContainer . getMessage ( ) ) . getRawJson ( ) ; < nl > + JSONObject data = new JSONObject ( rawJson ) . getJSONObject ( " data " ) ; < nl > + JSONObject contact = data . getJSONObject ( " contact " ) ; < nl > + name = contact . getString ( " name " ) ; < nl > + try { < nl > + photo64 = contact . getString ( " photo " ) ; < nl > + } catch ( Exception e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + phones = new ArrayList < String > ( ) ; < nl > + JSONArray phonesJson = contact . getJSONArray ( " phones " ) ; < nl > + for ( int i = 0 ; i < phonesJson . length ( ) ; i + + ) { < nl > + phones . add ( phonesJson . getString ( i ) ) ; < nl > + } < nl > + emails = new ArrayList < String > ( ) ; < nl > + JSONArray emailsJson = contact . getJSONArray ( " emails " ) ; < nl > + for ( int i = 0 ; i < emailsJson . length ( ) ; i + + ) { < nl > + emails . add ( emailsJson . getString ( i ) ) ; < nl > + } < nl > + < nl > + } < nl > + < nl > + public ArrayList < String > getPhones ( ) { < nl > + return phones ; < nl > + } < nl > + < nl > + public String getPhoto64 ( ) { < nl > + return photo64 ; < nl > + } < nl > + < nl > + public ArrayList < String > getEmails ( ) { < nl > + return emails ; < nl > + } < nl > + < nl > + public String getName ( ) { < nl > + return name ; < nl > + } < nl > + < nl > + public String getRawJson ( ) { < nl > + return rawJson ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > index 59b802b . . 4f35d31 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java < nl > @ @ - 9 , 6 + 9 , 7 @ @ import org . jetbrains . annotations . Nullable ; < nl > < nl > import java . util . ArrayList ; < nl > import java . util . HashMap ; < nl > + import java . util . HashSet ; < nl > < nl > import im . actor . core . api . ApiOutPeer ; < nl > import im . actor . core . api . ApiPeer ; < nl > @ @ - 301 , 6 + 302 , 10 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > autoDetect ) ) ; < nl > } < nl > < nl > + public void sendContact ( Peer peer , String name , HashSet < String > phones , HashSet < String > emails , String base64photo ) { < nl > + sendMessageActor . send ( new SenderActor . SendContact ( peer , phones , emails , name , base64photo ) ) ; < nl > + } < nl > + < nl > public void sendPhoto ( @ NotNull Peer peer , @ NotNull String fileName , int w , int h , @ Nullable FastThumb fastThumb , < nl > @ NotNull String descriptor ) { < nl > FileSystemReference reference = Storage . fileFromDescriptor ( descriptor ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java < nl > index d6ba4fa . . 0449f3a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java < nl > @ @ - 9 , 10 + 9 , 12 @ @ import org . jetbrains . annotations . Nullable ; < nl > < nl > import java . io . IOException ; < nl > import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > import java . util . List ; < nl > < nl > import im . actor . core . api . ApiDocumentExVoice ; < nl > import im . actor . core . api . ApiFastThumb ; < nl > + import im . actor . core . api . ApiJsonMessage ; < nl > import im . actor . core . api . ApiMessage ; < nl > import im . actor . core . api . ApiPeer ; < nl > import im . actor . core . api . ApiDocumentEx ; < nl > @ @ - 35 , 6 + 37 , 7 @ @ import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . User ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > + import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . entity . content . FastThumb ; < nl > import im . actor . core . entity . content . FileLocalSource ; < nl > @ @ - 200 , 6 + 203 , 28 @ @ public class SenderActor extends ModuleActor { < nl > performUploadFile ( rid , descriptor , fileName ) ; < nl > } < nl > < nl > + public void doSendContact ( @ NotNull Peer peer , < nl > + @ NotNull HashSet < String > emails , @ NotNull HashSet < String > phones , < nl > + @ Nullable String name , < nl > + @ Nullable String base64photo ) { < nl > + < nl > + < nl > + long rid = RandomUtils . nextRid ( ) ; < nl > + long date = createPendingDate ( ) ; < nl > + long sortDate = date + 365 * 24 * 60 * 60 * 1000L ; < nl > + < nl > + < nl > + ContactContent content = ContactContent . create ( name , phones , emails , base64photo ) ; < nl > + < nl > + Message message = new Message ( rid , sortDate , date , myUid ( ) , MessageState . PENDING , content , new ArrayList < Reaction > ( ) ) ; < nl > + context ( ) . getMessagesModule ( ) . getConversationActor ( peer ) . send ( message ) ; < nl > + < nl > + pendingMessages . getPendingMessages ( ) . add ( new PendingMessage ( peer , rid , content ) ) ; < nl > + savePending ( ) ; < nl > + < nl > + performSendContent ( peer , rid , content ) ; < nl > + } < nl > + < nl > public void doSendAudio ( Peer peer , String descriptor , String fileName , < nl > int fileSize , int duration ) { < nl > long rid = RandomUtils . nextRid ( ) ; < nl > @ @ - 326 , 6 + 351 , 8 @ @ public class SenderActor extends ModuleActor { < nl > source . getFileReference ( ) . getFileName ( ) , < nl > documentContent . getMimeType ( ) , < nl > fastThumb , documentEx ) ; < nl > + } else if ( content instanceof ContactContent ) { < nl > + message = new ApiJsonMessage ( ( ( ContactContent ) content ) . getRawJson ( ) ) ; < nl > } else { < nl > return ; < nl > } < nl > @ @ - 420 , 6 + 447 , 9 @ @ public class SenderActor extends ModuleActor { < nl > SendAudio sendAudio = ( SendAudio ) message ; < nl > doSendAudio ( sendAudio . getPeer ( ) , sendAudio . getDescriptor ( ) , sendAudio . getFileName ( ) , < nl > sendAudio . getFileSize ( ) , sendAudio . getDuration ( ) ) ; < nl > + } else if ( message instanceof SendContact ) { < nl > + SendContact sendContact = ( SendContact ) message ; < nl > + doSendContact ( sendContact . getPeer ( ) , sendContact . getEmails ( ) , sendContact . getPhones ( ) , sendContact . getName ( ) , sendContact . getBase64photo ( ) ) ; < nl > } else { < nl > drop ( message ) ; < nl > } < nl > @ @ - 647 , 6 + 677 , 42 @ @ public class SenderActor extends ModuleActor { < nl > } < nl > } < nl > < nl > + public static class SendContact { < nl > + private Peer peer ; < nl > + private HashSet < String > phones ; < nl > + private HashSet < String > emails ; < nl > + private String name ; < nl > + private String base64photo ; < nl > + < nl > + public SendContact ( Peer peer , HashSet < String > phones , HashSet < String > emails , String name , String base64photo ) { < nl > + this . peer = peer ; < nl > + this . phones = phones ; < nl > + this . emails = emails ; < nl > + this . name = name ; < nl > + this . base64photo = base64photo ; < nl > + } < nl > + < nl > + public Peer getPeer ( ) { < nl > + return peer ; < nl > + } < nl > + < nl > + public HashSet < String > getPhones ( ) { < nl > + return phones ; < nl > + } < nl > + < nl > + public HashSet < String > getEmails ( ) { < nl > + return emails ; < nl > + } < nl > + < nl > + public String getName ( ) { < nl > + return name ; < nl > + } < nl > + < nl > + public String getBase64photo ( ) { < nl > + return base64photo ; < nl > + } < nl > + } < nl > + < nl > public static class MessageSent { < nl > private Peer peer ; < nl > private long rid ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 index 3ea1287 . . de08211 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 @ @ - 204 , 6 + 204 , 10 @ @ public class BaseActivity extends AppCompatActivity { 
 execute ( cmd , R . string . progress _ common ) ; 
 } 
 
 + public < T > void execute ( Command < T > cmd , final CommandCallback < T > callback ) { 
 + cmd . start ( callback ) ; 
 + } 
 + 
 public < T > void execute ( Command < T > cmd , int title ) { 
 final ProgressDialog progressDialog = new ProgressDialog ( this ) ; 
 progressDialog . setMessage ( getString ( title ) ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 8ce5079 . . 615b196 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 43 , 10 + 43 , 13 @ @ import android . widget . Toast ; 
 import java . io . File ; 
 import java . util . ArrayList ; 
 
 + import im . actor . core . api . rpc . ResponseSeqDate ; 
 import im . actor . core . entity . MentionFilterResult ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 + import im . actor . core . network . RpcException ; 
 import im . actor . core . viewmodel . Command ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 @ @ - 199 , 6 + 202 , 8 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / Is Activity opened from Compose 
 private boolean isCompose = false ; 
 private Intent intent ; 
 + private boolean textEditing = false ; 
 + private long currentEditRid ; 
 
 public static Intent build ( Peer peer , boolean compose , Context context ) { 
 final Intent intent = new Intent ( context , ChatActivity . class ) ; 
 @ @ - 278 , 6 + 283 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 goneView ( quoteContainer ) ; 
 quoteText . setText ( " " ) ; 
 currentQuote = " " ; 
 + if ( textEditing ) { 
 + messageEditText . setText ( " " ) ; 
 + } 
 + textEditing = false ; 
 + 
 } 
 } ) ; 
 
 @ @ - 716 , 7 + 726 , 35 @ @ public class ChatActivity extends ActorEditTextActivity { 
 keyboardUtils . setImeVisibility ( messageEditText , false ) ; 
 } 
 
 - messenger ( ) . sendMessage ( peer , rawText ) ; 
 + if ( textEditing ) { 
 + execute ( messenger ( ) . updateMessage ( peer , rawText , currentEditRid ) , new CommandCallback < ResponseSeqDate > ( ) { 
 + @ Override 
 + public void onResult ( ResponseSeqDate res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( final Exception e ) { 
 + runOnUiThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + RpcException re = ( RpcException ) e ; 
 + String error = " " ; 
 + if ( re . getTag ( ) . equals ( " NOT _ IN _ TIME _ WINDOW " ) ) { 
 + error = getString ( R . string . edit _ message _ error _ slowpoke ) ; 
 + } else if ( re . getTag ( ) . equals ( " NOT _ LAST _ MESSAGE " ) ) { 
 + error = getString ( R . string . edit _ message _ error _ not _ last ) ; 
 + } 
 + Toast . makeText ( ChatActivity . this , error , Toast . LENGTH _ LONG ) . show ( ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + goneView ( quoteContainer ) ; 
 + textEditing = false ; 
 + } else { 
 + messenger ( ) . sendMessage ( peer , rawText ) ; 
 + } 
 } 
 
 @ Override 
 @ @ - 983 , 6 + 1021 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / Quotes 
 
 public void addQuote ( String quote , String rawQuote ) { 
 + textEditing = false ; 
 if ( quote ! = null & & ! quote . isEmpty ( ) ) { 
 quoteText . setText ( quote ) ; 
 } else { 
 @ @ - 990 , 6 + 1029 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 currentQuote = rawQuote ; 
 hideShareMenu ( ) ; 
 + quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; 
 showView ( quoteContainer ) ; 
 } 
 
 @ @ - 1146 , 6 + 1186 , 20 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } 
 
 + public void onEditTextMessage ( long rid , String text ) { 
 + currentQuote = null ; 
 + forwardText = null ; 
 + forwardTextRaw = null ; 
 + textEditing = true ; 
 + currentEditRid = rid ; 
 + quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; 
 + quoteText . setText ( R . string . edit _ message ) ; 
 + messageEditText . setText ( text ) ; 
 + hideShareMenu ( ) ; 
 + showView ( quoteContainer ) ; 
 + 
 + } 
 + 
 private class TextWatcherImp implements TextWatcher { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index e1f52c0 . . 314344b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import org . jetbrains . annotations . Nullable ; 
 
 import java . util . ArrayList ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . regex . Matcher ; 
 import java . util . regex . Pattern ; 
 @ @ - 32 , 7 + 33 , 6 @ @ import im . actor . core . viewmodel . UserVM ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . conversation . view . MentionSpan ; 
 - import im . actor . sdk . util . Strings ; 
 import im . actor . sdk . view . BaseUrlSpan ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 import im . actor . sdk . view . markdown . AndroidMarkdown ; 
 @ @ - 47 , 6 + 47 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 public class ChatListProcessor implements ListProcessor < Message > { 
 
 private HashMap < Long , PreprocessedTextData > preprocessedTexts = new HashMap < Long , PreprocessedTextData > ( ) ; 
 + private HashSet < Integer > updatedTexts = new HashSet < Integer > ( ) ; 
 
 private MessagesFragment fragment ; 
 private boolean isGroup ; 
 @ @ - 128 , 7 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 
 / / Process Content 
 if ( msg . getContent ( ) instanceof TextContent ) { 
 - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) ) { 
 + int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; 
 + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { 
 TextContent text = ( TextContent ) msg . getContent ( ) ; 
 Spannable spannableString = new SpannableString ( text . getText ( ) ) ; 
 boolean hasSpannable = false ; 
 @ @ - 189 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; 
 hasSpannable = true ; 
 } 
 - 
 + updatedTexts . add ( updatedHash ) ; 
 preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , 
 hasSpannable ? spannableString : null ) ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index 21db57a . . 5d658c5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 271 , 6 + 271 , 11 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 actionMode . invalidate ( ) ; 
 } 
 return true ; 
 + } else { 
 + if ( message . getContent ( ) instanceof TextContent ) { 
 + ( ( ChatActivity ) getActivity ( ) ) . onEditTextMessage ( message . getRid ( ) , ( ( TextContent ) message . getContent ( ) ) . getText ( ) ) ; 
 + return true ; 
 + } 
 } 
 return false ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - hdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - hdpi / ic _ mode _ edit _ white _ 24dp . png 
 new file mode 100644 
 index 0000000 . . 595ff10 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - hdpi / ic _ mode _ edit _ white _ 24dp . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - mdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - mdpi / ic _ mode _ edit _ white _ 24dp . png 
 new file mode 100644 
 index 0000000 . . 12b09f1 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - mdpi / ic _ mode _ edit _ white _ 24dp . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xhdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xhdpi / ic _ mode _ edit _ white _ 24dp . png 
 new file mode 100644 
 index 0000000 . . 5a06bff 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xhdpi / ic _ mode _ edit _ white _ 24dp . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xxhdpi / ic _ mode _ edit _ white _ 24dp . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xxhdpi / ic _ mode _ edit _ white _ 24dp . png 
 new file mode 100644 
 index 0000000 . . 02e19d0 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / drawable - xxhdpi / ic _ mode _ edit _ white _ 24dp . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - hdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - hdpi / ic _ content _ create . png 
 new file mode 100644 
 index 0000000 . . 70eb856 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - hdpi / ic _ content _ create . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - mdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - mdpi / ic _ content _ create . png 
 new file mode 100644 
 index 0000000 . . 4019bd2 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - mdpi / ic _ content _ create . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xhdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xhdpi / ic _ content _ create . png 
 new file mode 100644 
 index 0000000 . . 2dc8581 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xhdpi / ic _ content _ create . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / ic _ content _ create . png b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / ic _ content _ create . png 
 new file mode 100644 
 index 0000000 . . dc6dc94 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / ic _ content _ create . png differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml 
 index d0babfe . . 933c1c5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml 
 @ @ - 228 , 6 + 228 , 10 @ @ 
 < string name = " chat _ not _ member " > В ы н е у ч а с т н и к э т о й г р у п п ы < / string > 
 < string name = " chat _ unsupported " > С о о б щ е н и е н е п о д д е р ж и в а е т с я в э т о й в е р с и и . П о ж а л у й с т а , п о д о ж д и т е о б н о в л е н и е п р и л о ж е н и я ч т о б ы у в и д е т ь е г о . < / string > 
 
 + < string name = " edit _ message " > Р е д а к т и р о в а н и е п о с л е д н е г о с о о б щ е н и я < / string > 
 + < string name = " edit _ message _ error _ not _ last " > В ы м о ж е т е р е д а к т и р о в а т ь т о л ь к о п о с л е д н е е с о о б щ е н и е < / string > 
 + < string name = " edit _ message _ error _ slowpoke " > В ы м о ж е т е р е д а к т и р о в а т ь т о л ь к о н е д а в н о о т п р а в л е н н ы е с о о б щ е н и я < / string > 
 + 
 < ! - - Share menu - - > 
 < string name = " share _ menu _ gallery " > Г а л е р е я < / string > 
 < string name = " share _ menu _ video " > В и д е о < / string > 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 index 6b782e0 . . 26c97a6 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 @ @ - 233 , 6 + 233 , 15 @ @ 
 < string name = " chat _ unsupported " > Message is unsupported in this version . Please , wait for application update to see message . < / string > 
 < string name = " online " > \ u25CF online < / string > 
 
 + < string name = " messages _ action _ forward " > Forward < / string > 
 + < string name = " messages _ action _ quote " > Quote < / string > 
 + < string name = " messages _ action _ delete " > Delete < / string > 
 + < string name = " messages _ action _ copy " > Copy < / string > 
 + < string name = " messages _ action _ like " > Like < / string > 
 + < string name = " edit _ message " > Edit last message < / string > 
 + < string name = " edit _ message _ error _ not _ last " > You can edit only last message < / string > 
 + < string name = " edit _ message _ error _ slowpoke " > Message is too old < / string > 
 + 
 < ! - - Share menu - - > 
 < string name = " share _ menu _ gallery " > Gallery < / string > 
 < string name = " share _ menu _ video " > Video < / string > 
 @ @ - 414 , 7 + 423 , 9 @ @ 
 < string name = " not _ group _ mentions _ subtitle " > Enable group notifications only for mentions < / string > 
 < string name = " not _ show _ text " > Show names and messages < / string > 
 < string name = " not _ show _ text _ subtitle " > Show message text and sender name in notification panel < / string > 
 - 
 + < string name = " notification _ multiple _ canversations _ after _ msg _ count " > " messages in " < / string > 
 + < string name = " notifications _ multiple _ canversations _ after _ coversations _ count " > " chats " < / string > 
 + < string name = " notifications _ single _ conversation _ а fter _ messages _ count " > " messages " < / string > 
 < ! - - Pick user - - > 
 < string name = " pick _ user _ title " > Pick person < / string > 
 
 @ @ - 481 , 6 + 492 , 8 @ @ 
 < string name = " alert _ revoke _ integration _ token _ message " > Revoke token ? < / string > 
 < string name = " alert _ revoke _ integration _ token _ yes " > Revoke < / string > 
 
 + < string name = " confirm _ share " > Share with < / string > 
 + 
 < ! - - Errors - - > 
 < string name = " error _ connection " > Unable to connect . Please check that you are connected to the Internet and try 
 again . \ n \ nPlease reboot your phone if your connection problem persists . 
 @ @ - 490 , 14 + 503 , 4 @ @ 
 < / string > 
 < string name = " error _ view _ url " > Unknown URL type < / string > 
 
 - 
 - < string name = " messages _ action _ forward " > Forward < / string > 
 - < string name = " messages _ action _ quote " > Quote < / string > 
 - < string name = " messages _ action _ delete " > Delete < / string > 
 - < string name = " messages _ action _ copy " > Copy < / string > 
 - < string name = " messages _ action _ like " > Like < / string > 
 - < string name = " notification _ multiple _ canversations _ after _ msg _ count " > " messages in " < / string > 
 - < string name = " notifications _ multiple _ canversations _ after _ coversations _ count " > " chats " < / string > 
 - < string name = " notifications _ single _ conversation _ а fter _ messages _ count " > " messages " < / string > 
 - < string name = " confirm _ share " > Share with < / string > 
 < / resources > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 176cefd . . c541e8b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 16 , 6 + 16 , 7 @ @ import im . actor . core . api . ApiRawValue ; 
 import im . actor . core . api . ApiSex ; 
 import im . actor . core . api . ApiAuthSession ; 
 import im . actor . core . api . rpc . ResponseRawRequest ; 
 + import im . actor . core . api . rpc . ResponseSeqDate ; 
 import im . actor . core . entity . FileReference ; 
 import im . actor . core . entity . Group ; 
 import im . actor . core . entity . MentionFilterResult ; 
 @ @ - 596 , 6 + 597 , 21 @ @ public class Messenger { 
 / * * 
 * Send Markdown Message with mentions 
 * 
 + * @ param peer destination peer 
 + * @ param text message text 
 + * @ param rid message rundom id 
 + * 
 + * / 
 + @ ObjectiveCName ( " sendMessageWithPeer : withText : withRid : " ) 
 + public Command < ResponseSeqDate > updateMessage ( @ NotNull Peer peer , @ NotNull String text , long rid ) { 
 + return modules . getMessagesModule ( ) . updateMessage ( peer , text , rid ) ; 
 + } 
 + 
 + 
 + 
 + / * * 
 + * Send Markdown Message with mentions 
 + * 
 * @ param peer destination peer 
 * @ param name contact name 
 * @ param phones contact phones 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index 6dc33ad . . 1cee057 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 50 , 6 + 50 , 8 @ @ public abstract class AbsContent { 
 
 private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; 
 
 + private int updatedHash ; 
 + 
 public static void registerConverter ( ContentConverter contentConverter ) { 
 ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; 
 for ( int i = 0 ; i < converters . length ; i + + ) { 
 @ @ - 209 , 4 + 211 , 12 @ @ public abstract class AbsContent { 
 public static ContentConverter [ ] getConverters ( ) { 
 return converters ; 
 } 
 + 
 + public int getUpdatedHash ( ) { 
 + return updatedHash ; 
 + } 
 + 
 + public void setUpdatedHash ( int updatedHash ) { 
 + this . updatedHash = updatedHash ; 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 index 3ecab07 . . f0f173c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 @ @ - 11 , 9 + 11 , 11 @ @ import java . util . ArrayList ; 
 import java . util . HashMap ; 
 
 import im . actor . core . api . ApiJsonMessage ; 
 + import im . actor . core . api . ApiMessage ; 
 import im . actor . core . api . ApiOutPeer ; 
 import im . actor . core . api . ApiPeer ; 
 import im . actor . core . api . ApiPeerType ; 
 + import im . actor . core . api . ApiTextMessage ; 
 import im . actor . core . api . base . SeqUpdate ; 
 import im . actor . core . api . rpc . RequestArchiveChat ; 
 import im . actor . core . api . rpc . RequestClearChat ; 
 @ @ - 23 , 10 + 25 , 12 @ @ import im . actor . core . api . rpc . RequestHideDialog ; 
 import im . actor . core . api . rpc . RequestMessageRemoveReaction ; 
 import im . actor . core . api . rpc . RequestMessageSetReaction ; 
 import im . actor . core . api . rpc . RequestUnfavouriteDialog ; 
 + import im . actor . core . api . rpc . RequestUpdateMessage ; 
 import im . actor . core . api . rpc . ResponseDialogsOrder ; 
 import im . actor . core . api . rpc . ResponseLoadArchived ; 
 import im . actor . core . api . rpc . ResponseReactionsResponse ; 
 import im . actor . core . api . rpc . ResponseSeq ; 
 + import im . actor . core . api . rpc . ResponseSeqDate ; 
 import im . actor . core . api . updates . UpdateChatArchive ; 
 import im . actor . core . api . updates . UpdateChatClear ; 
 import im . actor . core . api . updates . UpdateChatDelete ; 
 @ @ - 36 , 12 + 40 , 14 @ @ import im . actor . core . api . updates . UpdateReactionsUpdate ; 
 import im . actor . core . entity . Dialog ; 
 import im . actor . core . entity . DialogSpec ; 
 import im . actor . core . entity . Group ; 
 + import im . actor . core . entity . GroupMember ; 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . User ; 
 import im . actor . core . entity . content . FastThumb ; 
 import im . actor . core . entity . content . JsonContent ; 
 + import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . internal . Sticker ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 @ @ - 323 , 6 + 329 , 71 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 } ) ; 
 } 
 
 + 
 + public Command < ResponseSeqDate > updateMessage ( final Peer peer , final String message , final long rid ) { 
 + context ( ) . getTypingModule ( ) . onMessageSent ( peer ) ; 
 + return new Command < ResponseSeqDate > ( ) { 
 + 
 + @ Override 
 + public void start ( final CommandCallback < ResponseSeqDate > callback ) { 
 + ArrayList < Integer > mentions = new ArrayList < Integer > ( ) ; 
 + TextContent content = TextContent . create ( message , null , mentions ) ; 
 + 
 + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 + Group group = groups ( ) . getValue ( peer . getPeerId ( ) ) ; 
 + String lowText = message . toLowerCase ( ) ; 
 + for ( GroupMember member : group . getMembers ( ) ) { 
 + User user = users ( ) . getValue ( member . getUid ( ) ) ; 
 + if ( user . getNick ( ) ! = null ) { 
 + String nick = " @ " + user . getNick ( ) . toLowerCase ( ) ; 
 + / / TODO : Better filtering 
 + if ( lowText . contains ( nick + " : " ) 
 + | | lowText . contains ( nick + " " ) 
 + | | lowText . contains ( " " + nick ) 
 + | | lowText . endsWith ( nick ) 
 + | | lowText . equals ( nick ) ) { 
 + mentions . add ( user . getUid ( ) ) ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + ApiMessage editMessage = new ApiTextMessage ( message , ( ( TextContent ) content ) . getMentions ( ) , ( ( TextContent ) content ) . getTextMessageEx ( ) ) ; 
 + request ( new RequestUpdateMessage ( buidOutPeer ( peer ) , rid , editMessage ) , new RpcCallback < ResponseSeqDate > ( ) { 
 + @ Override 
 + public void onResult ( ResponseSeqDate response ) { 
 + callback . onResult ( response ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( RpcException e ) { 
 + callback . onError ( e ) ; 
 + } 
 + } ) ; 
 + } 
 + } ; 
 + 
 + } 
 + 
 + public ApiOutPeer buidOutPeer ( Peer peer ) { 
 + if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 + User user = users ( ) . getValue ( peer . getPeerId ( ) ) ; 
 + if ( user = = null ) { 
 + return null ; 
 + } 
 + return new ApiOutPeer ( ApiPeerType . PRIVATE , user . getUid ( ) , user . getAccessHash ( ) ) ; 
 + } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 + Group group = groups ( ) . getValue ( peer . getPeerId ( ) ) ; 
 + if ( group = = null ) { 
 + return null ; 
 + } 
 + return new ApiOutPeer ( ApiPeerType . GROUP , group . getGroupId ( ) , group . getAccessHash ( ) ) ; 
 + } else { 
 + throw new RuntimeException ( " Unknown peer : " + peer ) ; 
 + } 
 + } 
 + 
 + 
 public void sendMessage ( @ NotNull Peer peer , @ NotNull String message , @ Nullable String markDownText , 
 @ Nullable ArrayList < Integer > mentions , boolean autoDetect ) { 
 / / Notify typing about message sent 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 index bf65a71 . . 73b183c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 + import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . events . AppVisibleChanged ; 
 import im . actor . core . util . ModuleActor ; 
 @ @ - 279 , 6 + 280 , 9 @ @ public class ConversationActor extends ModuleActor { 
 } 
 
 / / Updating message 
 + if ( content instanceof TextContent ) { 
 + content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; 
 + } 
 Message updatedMsg = message . changeContent ( content ) ; 
 messages . addOrUpdateItem ( updatedMsg ) ; 
 if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 1a6196a . . 5777235 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 5 , 8 + 5 , 10 @ @ import android . app . AlertDialog ; 
 import android . content . Context ; 
 import android . content . DialogInterface ; 
 import android . content . Intent ; 
 + import android . database . Cursor ; 
 import android . net . Uri ; 
 import android . os . Bundle ; 
 + import android . provider . ContactsContract ; 
 import android . provider . MediaStore ; 
 import android . support . v4 . app . Fragment ; 
 import android . support . v7 . app . ActionBar ; 
 @ @ - 14 , 6 + 16 , 7 @ @ import android . support . v7 . view . ActionMode ; 
 import android . text . Editable ; 
 import android . text . Spannable ; 
 import android . text . TextWatcher ; 
 + import android . util . Base64 ; 
 import android . view . ContextThemeWrapper ; 
 import android . view . LayoutInflater ; 
 import android . view . Menu ; 
 @ @ - 34 , 6 + 37 , 7 @ @ import java . io . File ; 
 import java . lang . reflect . Field ; 
 import java . lang . reflect . Method ; 
 import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 
 import im . actor . core . entity . MentionFilterResult ; 
 import im . actor . core . entity . Peer ; 
 @ @ - 83 , 6 + 87 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private static final int REQUEST _ VIDEO = 2 ; 
 private static final int REQUEST _ DOC = 3 ; 
 private static final int REQUEST _ LOCATION = 4 ; 
 + private static final int REQUEST _ CONTACT = 5 ; 
 / / Peer of current chat 
 private Peer peer ; 
 
 @ @ - 574 , 6 + 579 , 9 @ @ public class ChatActivity extends ActorEditTextActivity { 
 return true ; 
 } else if ( item . getItemId ( ) = = R . id . file ) { 
 startActivityForResult ( Intents . pickFile ( ChatActivity . this ) , REQUEST _ DOC ) ; 
 + } else if ( item . getItemId ( ) = = R . id . contact ) { 
 + Intent intent = new Intent ( Intent . ACTION _ PICK , ContactsContract . Contacts . CONTENT _ URI ) ; 
 + startActivityForResult ( intent , REQUEST _ CONTACT ) ; 
 } 
 return false ; 
 } 
 @ @ - 603 , 6 + 611 , 70 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } 
 } 
 + } else if ( requestCode = = REQUEST _ CONTACT ) { 
 + HashSet < String > phones = new HashSet < String > ( ) ; 
 + HashSet < String > emails = new HashSet < String > ( ) ; 
 + String name = " " ; 
 + byte [ ] photo = null ; 
 + 
 + Uri contactData = data . getData ( ) ; 
 + Cursor c = managedQuery ( contactData , null , null , null , null ) ; 
 + if ( c . moveToFirst ( ) ) { 
 + 
 + 
 + String id = c . getString ( c . getColumnIndexOrThrow ( ContactsContract . Contacts . _ ID ) ) ; 
 + 
 + String hasPhone = c . getString ( c . getColumnIndex ( ContactsContract . Contacts . HAS _ PHONE _ NUMBER ) ) ; 
 + 
 + if ( hasPhone . equalsIgnoreCase ( " 1 " ) ) { 
 + Cursor phonesCursor = getContentResolver ( ) . query ( 
 + ContactsContract . CommonDataKinds . Phone . CONTENT _ URI , null , 
 + ContactsContract . CommonDataKinds . Phone . CONTACT _ ID + " = " + id , 
 + null , null ) ; 
 + if ( phonesCursor . moveToFirst ( ) ) { 
 + int phoneColumnIndex = phonesCursor . getColumnIndex ( ContactsContract . CommonDataKinds . Phone . DATA ) ; 
 + do { 
 + phones . add ( phonesCursor . getString ( phoneColumnIndex ) ) ; 
 + } while ( phonesCursor . moveToNext ( ) ) ; 
 + phonesCursor . close ( ) ; 
 + } 
 + 
 + } 
 + name = c . getString ( c . getColumnIndex ( ContactsContract . Contacts . DISPLAY _ NAME ) ) ; 
 + 
 + 
 + Cursor emailCursor = getContentResolver ( ) . query ( 
 + ContactsContract . CommonDataKinds . Email . CONTENT _ URI , null , 
 + ContactsContract . CommonDataKinds . Email . CONTACT _ ID + " = " + id , 
 + null , null ) ; 
 + if ( emailCursor ! = null & & emailCursor . moveToFirst ( ) ) { 
 + int emailColumnIndex = emailCursor . getColumnIndex ( ContactsContract . CommonDataKinds . Email . DATA ) ; 
 + do { 
 + emails . add ( emailCursor . getString ( emailColumnIndex ) ) ; 
 + } while ( emailCursor . moveToNext ( ) ) ; 
 + emailCursor . close ( ) ; 
 + } 
 + 
 + Uri photoUri = Uri . withAppendedPath ( contactData , ContactsContract . Contacts . Photo . CONTENT _ DIRECTORY ) ; 
 + Cursor photoCursor = getContentResolver ( ) . query ( photoUri , 
 + new String [ ] { ContactsContract . Contacts . Photo . PHOTO } , null , null , null ) ; 
 + if ( photoCursor = = null ) { 
 + 
 + } else { 
 + try { 
 + if ( photoCursor . moveToFirst ( ) ) { 
 + photo = photoCursor . getBlob ( 0 ) ; 
 + 
 + } 
 + } finally { 
 + photoCursor . close ( ) ; 
 + } 
 + } 
 + 
 + } 
 + 
 + messenger ( ) . sendContact ( peer , name , phones , emails , photo ! = null ? ( Base64 . encodeToString ( photo , Base64 . URL _ SAFE | Base64 . NO _ WRAP ) ) : null ) ; 
 + 
 } 
 } 
 super . onActivityResult ( requestCode , resultCode , data ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 76f8572 . . e6d9218 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 20 , 6 + 20 , 7 @ @ import java . util . regex . Pattern ; 
 import im . actor . core . entity . GroupMember ; 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . PeerType ; 
 + import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 @ @ - 161 , 6 + 162 , 29 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 hasSpannable ? spannableString : null ) ) ; 
 } 
 preprocessedDatas . add ( preprocessedTexts . get ( msg . getRid ( ) ) ) ; 
 + } else if ( msg . getContent ( ) instanceof ContactContent ) { 
 + ContactContent contact = ( ContactContent ) msg . getContent ( ) ; 
 + String text = " " ; 
 + for ( String phone : contact . getPhones ( ) ) { 
 + text + = " \ n " . concat ( phone ) ; 
 + } 
 + for ( String email : contact . getEmails ( ) ) { 
 + text + = " \ n " . concat ( email ) ; 
 + } 
 + Spannable spannableString = new SpannableString ( text ) ; 
 + 
 + SpannableStringBuilder builder = new SpannableStringBuilder ( ) ; 
 + String name ; 
 + name = contact . getName ( ) ; 
 + builder . append ( name ) ; 
 + builder . setSpan ( new ForegroundColorSpan ( colors [ Math . abs ( msg . getSenderId ( ) ) % colors . length ] ) , 0 , name . length ( ) , Spanned . SPAN _ INCLUSIVE _ EXCLUSIVE ) ; 
 + / / builder . append ( " \ n " ) ; 
 + spannableString = builder . append ( spannableString ) ; 
 + 
 + 
 + preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( text , spannableString ) ) ; 
 + 
 + preprocessedDatas . add ( preprocessedTexts . get ( msg . getRid ( ) ) ) ; 
 } else { 
 / / Nothing to do yet 
 preprocessedDatas . add ( null ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java 
 new file mode 100644 
 index 0000000 . . 31ab2e8 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . content . Context ; 
 + import android . content . DialogInterface ; 
 + import android . content . Intent ; 
 + import android . graphics . Bitmap ; 
 + import android . graphics . BitmapFactory ; 
 + import android . graphics . PorterDuff ; 
 + import android . graphics . drawable . Drawable ; 
 + import android . net . Uri ; 
 + import android . support . v4 . graphics . drawable . RoundedBitmapDrawable ; 
 + import android . support . v4 . graphics . drawable . RoundedBitmapDrawableFactory ; 
 + import android . support . v7 . app . AlertDialog ; 
 + import android . util . Base64 ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . widget . FrameLayout ; 
 + import android . widget . ImageView ; 
 + import android . widget . TextView ; 
 + 
 + import im . actor . core . entity . Message ; 
 + import im . actor . core . entity . content . ContactContent ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . view . avatar . AvatarPlaceholderDrawable ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . myUid ; 
 + 
 + public class ContactHolder extends MessageHolder { 
 + 
 + private ViewGroup mainContainer ; 
 + private FrameLayout messageBubble ; 
 + private TextView text ; 
 + 
 + private ImageView contactAvatar ; 
 + 
 + 
 + public ContactHolder ( MessagesAdapter fragment , final View itemView ) { 
 + super ( fragment , itemView , false ) ; 
 + 
 + mainContainer = ( ViewGroup ) itemView . findViewById ( R . id . mainContainer ) ; 
 + messageBubble = ( FrameLayout ) itemView . findViewById ( R . id . fl _ bubble ) ; 
 + text = ( TextView ) itemView . findViewById ( R . id . tv _ text ) ; 
 + text . setTextColor ( ActorSDK . sharedActor ( ) . style . getConvTextColor ( ) ) ; 
 + contactAvatar = ( ImageView ) itemView . findViewById ( R . id . contact _ avatar ) ; 
 + 
 + } 
 + 
 + @ Override 
 + protected void bindData ( final Message message , boolean isUpdated , PreprocessedData preprocessedData ) { 
 + 
 + ContactContent contact = ( ContactContent ) message . getContent ( ) ; 
 + if ( message . getSenderId ( ) = = myUid ( ) ) { 
 + messageBubble . setBackgroundResource ( R . drawable . conv _ bubble _ media _ out ) ; 
 + } else { 
 + messageBubble . setBackgroundResource ( R . drawable . conv _ bubble _ media _ in ) ; 
 + } 
 + Drawable avatar ; 
 + if ( contact . getPhoto64 ( ) ! = null ) { 
 + byte [ ] decodedByte = Base64 . decode ( contact . getPhoto64 ( ) , Base64 . URL _ SAFE | Base64 . NO _ WRAP ) ; 
 + Bitmap b = BitmapFactory . decodeByteArray ( decodedByte , 0 , decodedByte . length ) ; 
 + avatar = getRoundedBitmapDrawable ( itemView . getContext ( ) , b ) ; 
 + } else { 
 + avatar = new AvatarPlaceholderDrawable ( contact . getName ( ) , message . getSenderId ( ) , 18 , itemView . getContext ( ) ) ; 
 + } 
 + contactAvatar . setBackgroundDrawable ( avatar ) ; 
 + 
 + text . setText ( ( ( PreprocessedTextData ) preprocessedData ) . getSpannableString ( ) ) ; 
 + 
 + } 
 + 
 + @ Override 
 + public void onClick ( Message currentMessage ) { 
 + 
 + final ContactContent contact = ( ContactContent ) currentMessage . getContent ( ) ; 
 + CharSequence [ ] items = new CharSequence [ contact . getEmails ( ) . size ( ) + contact . getPhones ( ) . size ( ) ] ; 
 + int i = 0 ; 
 + for ( String phone : contact . getPhones ( ) ) { 
 + items [ i + + ] = phone ; 
 + } 
 + for ( String email : contact . getEmails ( ) ) { 
 + items [ i + + ] = email ; 
 + } 
 + 
 + new AlertDialog . Builder ( itemView . getContext ( ) ) 
 + . setItems ( items , new DialogInterface . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( DialogInterface d , int which ) { 
 + if ( which + 1 < = contact . getPhones ( ) . size ( ) ) { 
 + 
 + Intent intent = new Intent ( Intent . ACTION _ DIAL , Uri . fromParts ( " tel " , contact . getPhones ( ) . get ( which ) , null ) ) ; 
 + itemView . getContext ( ) . startActivity ( intent ) ; 
 + } else { 
 + Intent intent = new Intent ( Intent . ACTION _ SENDTO , Uri . fromParts ( " mailto " , contact . getEmails ( ) . get ( which - contact . getPhones ( ) . size ( ) ) , null ) ) ; 
 + 
 + itemView . getContext ( ) . startActivity ( intent ) ; 
 + } 
 + } 
 + } ) . show ( ) ; 
 + } 
 + 
 + private RoundedBitmapDrawable getRoundedBitmapDrawable ( Context context , Bitmap b ) { 
 + RoundedBitmapDrawable d = RoundedBitmapDrawableFactory . create ( context . getResources ( ) , Bitmap . createScaledBitmap ( b , Screen . dp ( 48 ) , Screen . dp ( 48 ) , false ) ) ; 
 + d . setCornerRadius ( d . getIntrinsicHeight ( ) / 2 ) ; 
 + d . setAntiAlias ( true ) ; 
 + return d ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 index b845549 . . 18b7c0f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import java . util . HashMap ; 
 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . content . AbsContent ; 
 + import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . ServiceContent ; 
 @ @ - 89 , 8 + 90 , 10 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { 
 return 4 ; 
 } else if ( content instanceof DocumentContent ) { 
 return 3 ; 
 - } else { 
 + } else if ( content instanceof ContactContent ) { 
 return 5 ; 
 + } else { 
 + return 6 ; 
 } 
 } 
 
 @ @ - 113 , 6 + 116 , 8 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { 
 return new DocHolder ( this , inflate ( R . layout . adapter _ dialog _ doc , viewGroup ) ) ; 
 case 4 : 
 return new AudioHolder ( this , inflate ( R . layout . adapter _ dialog _ audio , viewGroup ) ) ; 
 + case 5 : 
 + return new ContactHolder ( this , inflate ( R . layout . adapter _ dialog _ contact , viewGroup ) ) ; 
 default : 
 return new UnsupportedHolder ( this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml 
 new file mode 100644 
 index 0000000 . . db3e5e3 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml 
 @ @ - 0 , 0 + 1 , 40 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < ! - - 
 + ~ Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + - - > 
 + 
 + < im . actor . sdk . controllers . conversation . view . BubbleContainer xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + android : id = " @ + id / mainContainer " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : clickable = " true " > 
 + 
 + < FrameLayout 
 + android : id = " @ + id / fl _ bubble " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : duplicateParentState = " true " > 
 + 
 + < LinearLayout 
 + android : padding = " 5dp " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : orientation = " horizontal " > 
 + 
 + < ImageView 
 + android : id = " @ + id / contact _ avatar " 
 + android : padding = " 10dp " 
 + android : layout _ width = " 48dp " 
 + android : layout _ height = " 48dp " / > 
 + 
 + < TextView 
 + android : id = " @ + id / tv _ text " 
 + android : paddingLeft = " 10dp " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ gravity = " top | left " 
 + android : includeFontPadding = " false " 
 + android : textSize = " 15sp " / > 
 + < / LinearLayout > 
 + 
 + < / FrameLayout > 
 + < / im . actor . sdk . controllers . conversation . view . BubbleContainer > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml 
 index 981c13d . . c0e1f54 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / attach _ popup . xml 
 @ @ - 12 , 6 + 12 , 12 @ @ 
 android : visible = " false " / > 
 
 < item 
 + android : id = " @ + id / contact " 
 + android : icon = " @ drawable / conv _ attach _ file " 
 + android : title = " @ string / chat _ attach _ contact " 
 + android : visible = " false " / > 
 + 
 + < item 
 android : id = " @ + id / file " 
 android : icon = " @ drawable / conv _ attach _ file " 
 android : title = " @ string / chat _ attach _ file " / > 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml 
 index 9ad8001 . . 907a618 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values - ru / ui _ text . xml 
 @ @ - 203 , 6 + 203 , 7 @ @ 
 < string name = " chat _ menu _ leave _ group " > П о к и н у т ь г р у п п у < / string > 
 
 < string name = " chat _ attach _ place " > М о е м е с т о < / string > 
 + < string name = " chat _ attach _ contact " > К о н т а к т < / string > 
 < string name = " chat _ attach _ file " > Ф а й л < / string > 
 < string name = " chat _ attach _ take _ video " > С н я т ь в и д е о < / string > 
 < string name = " chat _ attach _ take _ photo " > С н я т ь ф о т о < / string > 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 index 3a7761d . . 62394fb 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 @ @ - 206 , 6 + 206 , 7 @ @ 
 < string name = " chat _ menu _ leave _ group " > Leave group < / string > 
 
 < string name = " chat _ attach _ place " > Place < / string > 
 + < string name = " chat _ attach _ contact " > Contact < / string > 
 < string name = " chat _ attach _ file " > File < / string > 
 < string name = " chat _ attach _ take _ video " > Take video < / string > 
 < string name = " chat _ attach _ take _ photo " > Take photo < / string > 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index ec6d9d5 . . b0f6f93 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import org . jetbrains . annotations . NotNull ; 
 import org . jetbrains . annotations . Nullable ; 
 
 import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 import java . util . List ; 
 
 import im . actor . core . api . ApiSex ; 
 @ @ - 539 , 6 + 540 , 19 @ @ public class Messenger { 
 / * * 
 * Send Markdown Message with mentions 
 * 
 + * @ param peer destination peer 
 + * @ param name contact name 
 + * @ param phones contact phones 
 + * @ param emails contact emails 
 + * @ param base64photo contact photo 
 + * / 
 + public void sendContact ( Peer peer , String name , HashSet < String > phones , HashSet < String > emails , String base64photo ) { 
 + modules . getMessagesModule ( ) . sendContact ( peer , name , phones , emails , base64photo ) ; 
 + } 
 + 
 + / * * 
 + * Send Markdown Message with mentions 
 + * 
 * @ param peer destination peer 
 * @ param text message text 
 * @ param markDownText message markdown text 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index 202d4cc . . 501db21 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 150 , 6 + 150 , 8 @ @ public abstract class AbsContent { 
 JSONObject object = new JSONObject ( json . getRawJson ( ) ) ; 
 if ( object . getString ( " dataType " ) . equals ( " banner " ) ) { 
 return new BannerContent ( remoteContainer ) ; 
 + } else if ( object . getString ( " dataType " ) . equals ( " contact " ) ) { 
 + return new ContactContent ( remoteContainer ) ; 
 } 
 } 
 } catch ( Exception e ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContactContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContactContent . java 
 new file mode 100644 
 index 0000000 . . 696a838 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContactContent . java 
 @ @ - 0 , 0 + 1 , 113 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . entity . content ; 
 + 
 + import org . jetbrains . annotations . NotNull ; 
 + import org . jetbrains . annotations . Nullable ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 + 
 + import im . actor . core . api . ApiJsonMessage ; 
 + import im . actor . core . entity . content . internal . ContentRemoteContainer ; 
 + import im . actor . runtime . json . JSONArray ; 
 + import im . actor . runtime . json . JSONException ; 
 + import im . actor . runtime . json . JSONObject ; 
 + 
 + 
 + public class ContactContent extends AbsContent { 
 + 
 + private String name ; 
 + private String photo64 ; 
 + private String rawJson ; 
 + private ArrayList < String > phones ; 
 + private ArrayList < String > emails ; 
 + 
 + @ NotNull 
 + public static ContactContent create ( @ NotNull String name , @ NotNull HashSet < String > phones , @ NotNull HashSet < String > emails , @ Nullable String base64photo ) { 
 + String emailsJsonString = " " ; 
 + for ( String email : emails ) { 
 + emailsJsonString = emailsJsonString . concat ( " \ " " ) . concat ( email ) . concat ( " \ " , " ) ; 
 + } 
 + if ( ! emailsJsonString . isEmpty ( ) ) { 
 + emailsJsonString = emailsJsonString . substring ( 0 , emailsJsonString . length ( ) - 1 ) ; 
 + } 
 + 
 + String phonesJsonString = " " ; 
 + for ( String phone : phones ) { 
 + phonesJsonString = phonesJsonString . concat ( " \ " " ) . concat ( phone ) . concat ( " \ " , " ) ; 
 + } 
 + if ( ! phonesJsonString . isEmpty ( ) ) { 
 + phonesJsonString = phonesJsonString . substring ( 0 , phonesJsonString . length ( ) - 1 ) ; 
 + } 
 + 
 + String jsonString = 
 + " { \ " dataType \ " : \ " contact \ " , " + 
 + " \ " data \ " : { " + 
 + " \ " contact \ " : { " + 
 + " \ " name \ " : \ " " + name + " \ " , " + 
 + " \ " phones \ " : [ " + phonesJsonString + " ] , " + 
 + " \ " emails \ " : [ " + emailsJsonString + " ] " + 
 + ( base64photo ! = null ? ( " , \ " photo \ " : \ " " + base64photo + " \ " " ) : ( " " ) ) + 
 + " } " + 
 + " } " + 
 + " } " ; 
 + ContactContent lc = null ; 
 + try { 
 + lc = new ContactContent ( new ContentRemoteContainer ( 
 + new ApiJsonMessage ( jsonString ) ) ) ; 
 + } catch ( JSONException e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + if ( lc ! = null ) lc . rawJson = jsonString ; 
 + return lc ; 
 + } 
 + 
 + 
 + public ContactContent ( ContentRemoteContainer contentContainer ) throws JSONException { 
 + super ( contentContainer ) ; 
 + 
 + rawJson = ( ( ApiJsonMessage ) contentContainer . getMessage ( ) ) . getRawJson ( ) ; 
 + JSONObject data = new JSONObject ( rawJson ) . getJSONObject ( " data " ) ; 
 + JSONObject contact = data . getJSONObject ( " contact " ) ; 
 + name = contact . getString ( " name " ) ; 
 + try { 
 + photo64 = contact . getString ( " photo " ) ; 
 + } catch ( Exception e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + phones = new ArrayList < String > ( ) ; 
 + JSONArray phonesJson = contact . getJSONArray ( " phones " ) ; 
 + for ( int i = 0 ; i < phonesJson . length ( ) ; i + + ) { 
 + phones . add ( phonesJson . getString ( i ) ) ; 
 + } 
 + emails = new ArrayList < String > ( ) ; 
 + JSONArray emailsJson = contact . getJSONArray ( " emails " ) ; 
 + for ( int i = 0 ; i < emailsJson . length ( ) ; i + + ) { 
 + emails . add ( emailsJson . getString ( i ) ) ; 
 + } 
 + 
 + } 
 + 
 + public ArrayList < String > getPhones ( ) { 
 + return phones ; 
 + } 
 + 
 + public String getPhoto64 ( ) { 
 + return photo64 ; 
 + } 
 + 
 + public ArrayList < String > getEmails ( ) { 
 + return emails ; 
 + } 
 + 
 + public String getName ( ) { 
 + return name ; 
 + } 
 + 
 + public String getRawJson ( ) { 
 + return rawJson ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 index 59b802b . . 4f35d31 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / MessagesModule . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import org . jetbrains . annotations . Nullable ; 
 
 import java . util . ArrayList ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 
 import im . actor . core . api . ApiOutPeer ; 
 import im . actor . core . api . ApiPeer ; 
 @ @ - 301 , 6 + 302 , 10 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 autoDetect ) ) ; 
 } 
 
 + public void sendContact ( Peer peer , String name , HashSet < String > phones , HashSet < String > emails , String base64photo ) { 
 + sendMessageActor . send ( new SenderActor . SendContact ( peer , phones , emails , name , base64photo ) ) ; 
 + } 
 + 
 public void sendPhoto ( @ NotNull Peer peer , @ NotNull String fileName , int w , int h , @ Nullable FastThumb fastThumb , 
 @ NotNull String descriptor ) { 
 FileSystemReference reference = Storage . fileFromDescriptor ( descriptor ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java 
 index d6ba4fa . . 0449f3a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / SenderActor . java 
 @ @ - 9 , 10 + 9 , 12 @ @ import org . jetbrains . annotations . Nullable ; 
 
 import java . io . IOException ; 
 import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 import java . util . List ; 
 
 import im . actor . core . api . ApiDocumentExVoice ; 
 import im . actor . core . api . ApiFastThumb ; 
 + import im . actor . core . api . ApiJsonMessage ; 
 import im . actor . core . api . ApiMessage ; 
 import im . actor . core . api . ApiPeer ; 
 import im . actor . core . api . ApiDocumentEx ; 
 @ @ - 35 , 6 + 37 , 7 @ @ import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . User ; 
 import im . actor . core . entity . content . AbsContent ; 
 + import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . entity . content . FastThumb ; 
 import im . actor . core . entity . content . FileLocalSource ; 
 @ @ - 200 , 6 + 203 , 28 @ @ public class SenderActor extends ModuleActor { 
 performUploadFile ( rid , descriptor , fileName ) ; 
 } 
 
 + public void doSendContact ( @ NotNull Peer peer , 
 + @ NotNull HashSet < String > emails , @ NotNull HashSet < String > phones , 
 + @ Nullable String name , 
 + @ Nullable String base64photo ) { 
 + 
 + 
 + long rid = RandomUtils . nextRid ( ) ; 
 + long date = createPendingDate ( ) ; 
 + long sortDate = date + 365 * 24 * 60 * 60 * 1000L ; 
 + 
 + 
 + ContactContent content = ContactContent . create ( name , phones , emails , base64photo ) ; 
 + 
 + Message message = new Message ( rid , sortDate , date , myUid ( ) , MessageState . PENDING , content , new ArrayList < Reaction > ( ) ) ; 
 + context ( ) . getMessagesModule ( ) . getConversationActor ( peer ) . send ( message ) ; 
 + 
 + pendingMessages . getPendingMessages ( ) . add ( new PendingMessage ( peer , rid , content ) ) ; 
 + savePending ( ) ; 
 + 
 + performSendContent ( peer , rid , content ) ; 
 + } 
 + 
 public void doSendAudio ( Peer peer , String descriptor , String fileName , 
 int fileSize , int duration ) { 
 long rid = RandomUtils . nextRid ( ) ; 
 @ @ - 326 , 6 + 351 , 8 @ @ public class SenderActor extends ModuleActor { 
 source . getFileReference ( ) . getFileName ( ) , 
 documentContent . getMimeType ( ) , 
 fastThumb , documentEx ) ; 
 + } else if ( content instanceof ContactContent ) { 
 + message = new ApiJsonMessage ( ( ( ContactContent ) content ) . getRawJson ( ) ) ; 
 } else { 
 return ; 
 } 
 @ @ - 420 , 6 + 447 , 9 @ @ public class SenderActor extends ModuleActor { 
 SendAudio sendAudio = ( SendAudio ) message ; 
 doSendAudio ( sendAudio . getPeer ( ) , sendAudio . getDescriptor ( ) , sendAudio . getFileName ( ) , 
 sendAudio . getFileSize ( ) , sendAudio . getDuration ( ) ) ; 
 + } else if ( message instanceof SendContact ) { 
 + SendContact sendContact = ( SendContact ) message ; 
 + doSendContact ( sendContact . getPeer ( ) , sendContact . getEmails ( ) , sendContact . getPhones ( ) , sendContact . getName ( ) , sendContact . getBase64photo ( ) ) ; 
 } else { 
 drop ( message ) ; 
 } 
 @ @ - 647 , 6 + 677 , 42 @ @ public class SenderActor extends ModuleActor { 
 } 
 } 
 
 + public static class SendContact { 
 + private Peer peer ; 
 + private HashSet < String > phones ; 
 + private HashSet < String > emails ; 
 + private String name ; 
 + private String base64photo ; 
 + 
 + public SendContact ( Peer peer , HashSet < String > phones , HashSet < String > emails , String name , String base64photo ) { 
 + this . peer = peer ; 
 + this . phones = phones ; 
 + this . emails = emails ; 
 + this . name = name ; 
 + this . base64photo = base64photo ; 
 + } 
 + 
 + public Peer getPeer ( ) { 
 + return peer ; 
 + } 
 + 
 + public HashSet < String > getPhones ( ) { 
 + return phones ; 
 + } 
 + 
 + public HashSet < String > getEmails ( ) { 
 + return emails ; 
 + } 
 + 
 + public String getName ( ) { 
 + return name ; 
 + } 
 + 
 + public String getBase64photo ( ) { 
 + return base64photo ; 
 + } 
 + } 
 + 
 public static class MessageSent { 
 private Peer peer ; 
 private long rid ;
