BLEU SCORE: 0.5169731539571706

TEST MSG: fix ( core ) : Fixing DialogsLoaded state
GENERATED MSG: fix ( core ) : Missed changes

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java < nl > index 1226b01 . . 555a81c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java < nl > @ @ - 44 , 6 + 44 , 8 @ @ public class DialogsHistoryActor extends ModuleActor { < nl > historyLoaded = preferences ( ) . getBool ( KEY _ LOADED , false ) ; < nl > if ( ! preferences ( ) . getBool ( KEY _ LOADED _ INIT , false ) ) { < nl > self ( ) . send ( new LoadMore ( ) ) ; < nl > + } else { < nl > + context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; < nl > } < nl > } < nl > < nl > @ @ - 88 , 7 + 90 , 6 @ @ public class DialogsHistoryActor extends ModuleActor { < nl > } < nl > } ) ; < nl > } else { < nl > - context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; < nl > markAsLoaded ( ) ; < nl > } < nl > } < nl > @ @ - 98 , 6 + 99 , 7 @ @ public class DialogsHistoryActor extends ModuleActor { < nl > historyLoaded = true ; < nl > preferences ( ) . putBool ( KEY _ LOADED , true ) ; < nl > preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; < nl > + context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; < nl > } < nl > < nl > private void markAsSliceLoaded ( long date ) { < nl > @ @ - 107 , 6 + 109 , 7 @ @ public class DialogsHistoryActor extends ModuleActor { < nl > preferences ( ) . putBool ( KEY _ LOADED , false ) ; < nl > preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; < nl > preferences ( ) . putLong ( KEY _ LOADED _ DATE , date ) ; < nl > + context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; < nl > } < nl > < nl > / /
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java < nl > index 691d5b6 . . 9bd5309 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java < nl > @ @ - 21 , 11 + 21 , 7 @ @ import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . modules . api . ApiSupportConfiguration ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . ModuleActor ; < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . messages . Void ; < nl > import im . actor . runtime . function . Consumer ; < nl > - import im . actor . runtime . function . Function ; < nl > - import im . actor . runtime . promise . Promise ; < nl > < nl > public class ConversationHistoryActor extends ModuleActor { < nl > < nl > @ @ - 105 , 29 + 101 , 20 @ @ public class ConversationHistoryActor extends ModuleActor { < nl > boolean isEnded = history . size ( ) < LIMIT ; < nl > < nl > / / Sending updates to conversation actor < nl > + final long finalMaxLoadedDate = maxLoadedDate ; < nl > context ( ) . getMessagesModule ( ) . getRouter ( ) < nl > - . onChatHistoryLoaded ( peer , messages , maxReceiveDate , maxReadDate , isEnded ) ; < nl > - < nl > - / / Saving Internal State < nl > - if ( isEnded ) { < nl > - historyLoaded = true ; < nl > - } else { < nl > - historyLoaded = false ; < nl > - historyMaxDate = maxLoadedDate ; < nl > - } < nl > - preferences ( ) . putLong ( KEY _ LOADED _ DATE , maxLoadedDate ) ; < nl > - preferences ( ) . putBool ( KEY _ LOADED , historyLoaded ) ; < nl > - preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; < nl > - } < nl > - < nl > - private Function < ResponseLoadHistory , Promise < ResponseLoadHistory > > applyRelated ( ) { < nl > - return responseLoadHistory - > updates ( ) < nl > - . applyRelatedData ( responseLoadHistory . getUsers ( ) , new ArrayList < > ( ) ) < nl > - . map ( new Function < Void , ResponseLoadHistory > ( ) { < nl > - @ Override < nl > - public ResponseLoadHistory apply ( Void aVoid ) { < nl > - return responseLoadHistory ; < nl > + . onChatHistoryLoaded ( peer , messages , maxReceiveDate , maxReadDate , isEnded ) < nl > + . then ( r - > { < nl > + / / Saving Internal State < nl > + if ( isEnded ) { < nl > + historyLoaded = true ; < nl > + } else { < nl > + historyLoaded = false ; < nl > + historyMaxDate = finalMaxLoadedDate ; < nl > } < nl > + preferences ( ) . putLong ( KEY _ LOADED _ DATE , finalMaxLoadedDate ) ; < nl > + preferences ( ) . putBool ( KEY _ LOADED , historyLoaded ) ; < nl > + preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; < nl > } ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java 
 index 1226b01 . . 555a81c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / DialogsHistoryActor . java 
 @ @ - 44 , 6 + 44 , 8 @ @ public class DialogsHistoryActor extends ModuleActor { 
 historyLoaded = preferences ( ) . getBool ( KEY _ LOADED , false ) ; 
 if ( ! preferences ( ) . getBool ( KEY _ LOADED _ INIT , false ) ) { 
 self ( ) . send ( new LoadMore ( ) ) ; 
 + } else { 
 + context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; 
 } 
 } 
 
 @ @ - 88 , 7 + 90 , 6 @ @ public class DialogsHistoryActor extends ModuleActor { 
 } 
 } ) ; 
 } else { 
 - context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; 
 markAsLoaded ( ) ; 
 } 
 } 
 @ @ - 98 , 6 + 99 , 7 @ @ public class DialogsHistoryActor extends ModuleActor { 
 historyLoaded = true ; 
 preferences ( ) . putBool ( KEY _ LOADED , true ) ; 
 preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; 
 + context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; 
 } 
 
 private void markAsSliceLoaded ( long date ) { 
 @ @ - 107 , 6 + 109 , 7 @ @ public class DialogsHistoryActor extends ModuleActor { 
 preferences ( ) . putBool ( KEY _ LOADED , false ) ; 
 preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; 
 preferences ( ) . putLong ( KEY _ LOADED _ DATE , date ) ; 
 + context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; 
 } 
 
 / /

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java 
 index 691d5b6 . . 9bd5309 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java 
 @ @ - 21 , 11 + 21 , 7 @ @ import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . modules . api . ApiSupportConfiguration ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . ModuleActor ; 
 - import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . messages . Void ; 
 import im . actor . runtime . function . Consumer ; 
 - import im . actor . runtime . function . Function ; 
 - import im . actor . runtime . promise . Promise ; 
 
 public class ConversationHistoryActor extends ModuleActor { 
 
 @ @ - 105 , 29 + 101 , 20 @ @ public class ConversationHistoryActor extends ModuleActor { 
 boolean isEnded = history . size ( ) < LIMIT ; 
 
 / / Sending updates to conversation actor 
 + final long finalMaxLoadedDate = maxLoadedDate ; 
 context ( ) . getMessagesModule ( ) . getRouter ( ) 
 - . onChatHistoryLoaded ( peer , messages , maxReceiveDate , maxReadDate , isEnded ) ; 
 - 
 - / / Saving Internal State 
 - if ( isEnded ) { 
 - historyLoaded = true ; 
 - } else { 
 - historyLoaded = false ; 
 - historyMaxDate = maxLoadedDate ; 
 - } 
 - preferences ( ) . putLong ( KEY _ LOADED _ DATE , maxLoadedDate ) ; 
 - preferences ( ) . putBool ( KEY _ LOADED , historyLoaded ) ; 
 - preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; 
 - } 
 - 
 - private Function < ResponseLoadHistory , Promise < ResponseLoadHistory > > applyRelated ( ) { 
 - return responseLoadHistory - > updates ( ) 
 - . applyRelatedData ( responseLoadHistory . getUsers ( ) , new ArrayList < > ( ) ) 
 - . map ( new Function < Void , ResponseLoadHistory > ( ) { 
 - @ Override 
 - public ResponseLoadHistory apply ( Void aVoid ) { 
 - return responseLoadHistory ; 
 + . onChatHistoryLoaded ( peer , messages , maxReceiveDate , maxReadDate , isEnded ) 
 + . then ( r - > { 
 + / / Saving Internal State 
 + if ( isEnded ) { 
 + historyLoaded = true ; 
 + } else { 
 + historyLoaded = false ; 
 + historyMaxDate = finalMaxLoadedDate ; 
 } 
 + preferences ( ) . putLong ( KEY _ LOADED _ DATE , finalMaxLoadedDate ) ; 
 + preferences ( ) . putBool ( KEY _ LOADED , historyLoaded ) ; 
 + preferences ( ) . putBool ( KEY _ LOADED _ INIT , true ) ; 
 } ) ; 
 }
