BLEU SCORE: 0.1630971037128253

TEST MSG: chore ( android ) : remove anonymous fragments from example app
GENERATED MSG: fix ( android ) : replace update hash with incremental value , fix picture update

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 11d4d05 . . 34d71d0 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 5 , 7 + 5 , 6 @ @ import android . graphics . PorterDuff ; < nl > import android . os . Bundle ; < nl > import android . support . multidex . MultiDex ; < nl > import android . support . v4 . app . Fragment ; < nl > - import android . support . v7 . app . ActionBar ; < nl > import android . view . LayoutInflater ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > @ @ - 15 , 22 + 14 , 21 @ @ import android . widget . Toast ; < nl > import org . jetbrains . annotations . Nullable ; < nl > < nl > import java . util . ArrayList ; < nl > - import java . util . List ; < nl > < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . content . JsonContent ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . develop . R ; < nl > + import im . actor . fragments . AttachFragmentEx ; < nl > + import im . actor . fragments . RootFragmentEx ; < nl > import im . actor . runtime . json . JSONException ; < nl > import im . actor . runtime . json . JSONObject ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . ActorSDKApplication ; < nl > import im . actor . sdk . ActorStyle ; < nl > import im . actor . sdk . BaseActorSDKDelegate ; < nl > - import im . actor . sdk . controllers . conversation . attach . ShareMenuField ; < nl > import im . actor . sdk . controllers . conversation . attach . AbsAttachFragment ; < nl > - import im . actor . sdk . controllers . conversation . attach . AttachFragment ; < nl > import im . actor . sdk . controllers . conversation . messages . BubbleLayouter ; < nl > import im . actor . sdk . controllers . conversation . messages . DefaultLayouter ; < nl > import im . actor . sdk . controllers . conversation . messages . JsonXmlBubbleLayouter ; < nl > @ @ - 38 , 7 + 36 , 6 @ @ import im . actor . sdk . controllers . conversation . messages . XmlBubbleLayouter ; < nl > import im . actor . sdk . controllers . conversation . messages . content . PhotoHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . content . TextHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . content . preprocessor . PreprocessedData ; < nl > - import im . actor . sdk . controllers . root . RootFragment ; < nl > import im . actor . sdk . controllers . settings . ActorSettingsCategories ; < nl > import im . actor . sdk . controllers . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . controllers . settings . ActorSettingsField ; < nl > @ @ - 105 , 7 + 102 , 7 @ @ public class Application extends ActorSDKApplication { < nl > @ Override < nl > public void configureChatViewHolders ( ArrayList < BubbleLayouter > layouters ) { < nl > / / layouters . add ( 0 , new BubbleTextHolderLayouter ( ) ) ; < nl > - layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ CONTENT , CensoredTextHolderEx : : new ) ) ; < nl > + layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , CensoredTextHolderEx : : new ) ) ; < nl > layouters . add ( 0 , new XmlBubbleLayouter ( content - > content instanceof PhotoContent , R . layout . adapter _ dialog _ photo , ( adapter1 , root1 , peer1 ) - > new PhotoHolder ( adapter1 , root1 , peer1 ) { < nl > @ Override < nl > protected void onConfigureViewHolder ( ) { < nl > @ @ - 133 , 36 + 130 , 13 @ @ public class Application extends ActorSDKApplication { < nl > @ Nullable < nl > @ Override < nl > public Fragment fragmentForRoot ( ) { < nl > - return new RootFragment ( ) { < nl > - @ Override < nl > - public void onConfigureActionBar ( ActionBar actionBar ) { < nl > - super . onConfigureActionBar ( actionBar ) ; < nl > - actionBar . setDisplayShowHomeEnabled ( true ) ; < nl > - actionBar . setIcon ( R . drawable . ic _ app _ notify ) ; < nl > - } < nl > - } ; < nl > + return new RootFragmentEx ( ) ; < nl > } < nl > < nl > @ Nullable < nl > @ Override < nl > public AbsAttachFragment fragmentForAttachMenu ( Peer peer ) { < nl > - return new AttachFragment ( peer ) { < nl > - < nl > - @ Override < nl > - protected List < ShareMenuField > onCreateFields ( ) { < nl > - List < ShareMenuField > res = super . onCreateFields ( ) ; < nl > - res . add ( new ShareMenuField ( R . id . share _ test , R . drawable . ic _ edit _ white _ 24dp , ActorSDK . sharedActor ( ) . style . getAccentColor ( ) , " lol " ) ) ; < nl > - return res ; < nl > - } < nl > - < nl > - @ Override < nl > - protected void onItemClicked ( int id ) { < nl > - super . onItemClicked ( id ) ; < nl > - if ( id = = R . id . share _ test ) { < nl > - Toast . makeText ( getContext ( ) , " Hey " , Toast . LENGTH _ LONG ) . show ( ) ; < nl > - } < nl > - } < nl > - } ; < nl > + return new AttachFragmentEx ( ) ; < nl > } < nl > < nl > / / @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / AttachFragmentEx . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / AttachFragmentEx . java < nl > new file mode 100644 < nl > index 0000000 . . e385a29 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / AttachFragmentEx . java < nl > @ @ - 0 , 0 + 1 , 27 @ @ < nl > + package im . actor . fragments ; < nl > + < nl > + import android . widget . Toast ; < nl > + < nl > + import java . util . List ; < nl > + < nl > + import im . actor . develop . R ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . controllers . conversation . attach . AttachFragment ; < nl > + import im . actor . sdk . controllers . conversation . attach . ShareMenuField ; < nl > + < nl > + public class AttachFragmentEx extends AttachFragment { < nl > + @ Override < nl > + protected List < ShareMenuField > onCreateFields ( ) { < nl > + List < ShareMenuField > res = super . onCreateFields ( ) ; < nl > + res . add ( new ShareMenuField ( R . id . share _ test , R . drawable . ic _ edit _ white _ 24dp , ActorSDK . sharedActor ( ) . style . getAccentColor ( ) , " lol " ) ) ; < nl > + return res ; < nl > + } < nl > + < nl > + @ Override < nl > + protected void onItemClicked ( int id ) { < nl > + super . onItemClicked ( id ) ; < nl > + if ( id = = R . id . share _ test ) { < nl > + Toast . makeText ( getContext ( ) , " Hey " , Toast . LENGTH _ LONG ) . show ( ) ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / RootFragmentEx . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / RootFragmentEx . java < nl > new file mode 100644 < nl > index 0000000 . . 4af9246 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / RootFragmentEx . java < nl > @ @ - 0 , 0 + 1 , 15 @ @ < nl > + package im . actor . fragments ; < nl > + < nl > + import android . support . v7 . app . ActionBar ; < nl > + < nl > + import im . actor . develop . R ; < nl > + import im . actor . sdk . controllers . root . RootFragment ; < nl > + < nl > + public class RootFragmentEx extends RootFragment { < nl > + @ Override < nl > + public void onConfigureActionBar ( ActionBar actionBar ) { < nl > + super . onConfigureActionBar ( actionBar ) ; < nl > + actionBar . setDisplayShowHomeEnabled ( true ) ; < nl > + actionBar . setIcon ( R . drawable . ic _ app _ notify ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java < nl > index a186143 . . b07d37e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java < nl > @ @ - 1 , 6 + 1 , 5 @ @ < nl > package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > - import android . support . annotation . LayoutRes ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > < nl > @ @ - 27 , 21 + 26 , 21 @ @ import im . actor . sdk . util . ViewUtils ; < nl > < nl > public class DefaultLayouter extends LambdaBubbleLayouter { < nl > < nl > - public static final int TEXT _ CONTENT = 0 ; < nl > - public static final int SERVICE _ CONTENT = 1 ; < nl > - public static final int PHOTO _ CONTENT = 2 ; < nl > - public static final int VOICE _ CONTENT = 4 ; < nl > - public static final int DOCUMENT _ CONTENT = 3 ; < nl > - public static final int CONTACT _ CONTENT = 5 ; < nl > - public static final int LOCATION _ CONTENT = 6 ; < nl > - public static final int STICKER _ CONTENT = 7 ; < nl > + public static final int TEXT _ HOLDER = 0 ; < nl > + public static final int SERVICE _ HOLDER = 1 ; < nl > + public static final int PHOTO _ HOLDER = 2 ; < nl > + public static final int VOICE _ HOLDER = 4 ; < nl > + public static final int DOCUMENT _ HOLDER = 3 ; < nl > + public static final int CONTACT _ HOLDER = 5 ; < nl > + public static final int LOCATION _ HOLDER = 6 ; < nl > + public static final int STICKER _ HOLDER = 7 ; < nl > < nl > int id ; < nl > int layoutId ; < nl > < nl > - public DefaultLayouter ( int id , @ NotNull ViewHolderCreator creator ) { < nl > + public DefaultLayouter ( int holderId , @ NotNull ViewHolderCreator creator ) { < nl > super ( content - > false , creator ) ; < nl > - this . id = id ; < nl > + this . id = holderId ; < nl > } < nl > < nl > < nl > @ @ - 71 , 16 + 70 , 16 @ @ public class DefaultLayouter extends LambdaBubbleLayouter { < nl > < nl > static { < nl > holderMap = new ArrayList < > ( ) ; < nl > - holderMap . add ( new HolderMapEntry ( TextContent . class , TEXT _ CONTENT , R . layout . adapter _ dialog _ text ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( ServiceContent . class , SERVICE _ CONTENT , R . layout . adapter _ dialog _ service ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( PhotoContent . class , PHOTO _ CONTENT , R . layout . adapter _ dialog _ photo ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( VideoContent . class , PHOTO _ CONTENT , R . layout . adapter _ dialog _ photo ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( AnimationContent . class , PHOTO _ CONTENT , R . layout . adapter _ dialog _ photo ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( VoiceContent . class , VOICE _ CONTENT , R . layout . adapter _ dialog _ audio ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( DocumentContent . class , DOCUMENT _ CONTENT , R . layout . adapter _ dialog _ doc ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( ContactContent . class , CONTACT _ CONTENT , R . layout . adapter _ dialog _ contact ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( LocationContent . class , LOCATION _ CONTENT , R . layout . adapter _ dialog _ locaton ) ) ; < nl > - holderMap . add ( new HolderMapEntry ( StickerContent . class , STICKER _ CONTENT , R . layout . adapter _ dialog _ sticker ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( TextContent . class , TEXT _ HOLDER , R . layout . adapter _ dialog _ text ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( ServiceContent . class , SERVICE _ HOLDER , R . layout . adapter _ dialog _ service ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( PhotoContent . class , PHOTO _ HOLDER , R . layout . adapter _ dialog _ photo ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( VideoContent . class , PHOTO _ HOLDER , R . layout . adapter _ dialog _ photo ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( AnimationContent . class , PHOTO _ HOLDER , R . layout . adapter _ dialog _ photo ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( VoiceContent . class , VOICE _ HOLDER , R . layout . adapter _ dialog _ audio ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( DocumentContent . class , DOCUMENT _ HOLDER , R . layout . adapter _ dialog _ doc ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( ContactContent . class , CONTACT _ HOLDER , R . layout . adapter _ dialog _ contact ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( LocationContent . class , LOCATION _ HOLDER , R . layout . adapter _ dialog _ locaton ) ) ; < nl > + holderMap . add ( new HolderMapEntry ( StickerContent . class , STICKER _ HOLDER , R . layout . adapter _ dialog _ sticker ) ) ; < nl > } < nl > < nl > private static class HolderMapEntry { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > index 4b32336 . . 018380a 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > @ @ - 1 , 7 + 1 , 6 @ @ < nl > package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . content . Context ; < nl > - import android . view . View ; < nl > import android . view . ViewGroup ; < nl > < nl > import java . util . HashMap ; < nl > @ @ - 35 , 7 + 34 , 7 @ @ public class MessagesAdapter extends BindedListAdapter < Message , AbsMessageViewHo < nl > private ActorBinder BINDER = new ActorBinder ( ) ; < nl > < nl > private Context context ; < nl > - private long firstUnread = - DefaultLayouter . SERVICE _ CONTENT ; < nl > + private long firstUnread = - DefaultLayouter . SERVICE _ HOLDER ; < nl > private long readDate ; < nl > private long receiveDate ; < nl > private Peer peer ; < nl > @ @ - 51 , 14 + 50 , 14 @ @ public class MessagesAdapter extends BindedListAdapter < Message , AbsMessageViewHo < nl > < nl > matcher = new ViewHolderMatcher ( ) ; < nl > < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . TEXT _ CONTENT , TextHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . SERVICE _ CONTENT , ServiceHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . PHOTO _ CONTENT , PhotoHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . VOICE _ CONTENT , AudioHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . DOCUMENT _ CONTENT , DocHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . CONTACT _ CONTENT , ContactHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . LOCATION _ CONTENT , LocationHolder : : new ) ) ; < nl > - matcher . add ( new DefaultLayouter ( DefaultLayouter . STICKER _ CONTENT , StickerHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , TextHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . SERVICE _ HOLDER , ServiceHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . PHOTO _ HOLDER , PhotoHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . VOICE _ HOLDER , AudioHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . DOCUMENT _ HOLDER , DocHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . CONTACT _ HOLDER , ContactHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . LOCATION _ HOLDER , LocationHolder : : new ) ) ; < nl > + matcher . add ( new DefaultLayouter ( DefaultLayouter . STICKER _ HOLDER , StickerHolder : : new ) ) ; < nl > < nl > ActorSDK . sharedActor ( ) . getDelegate ( ) . configureChatViewHolders ( matcher . getLayouters ( ) ) ; < nl > < nl > @ @ - 171 , 11 + 170 , 11 @ @ public class MessagesAdapter extends BindedListAdapter < Message , AbsMessageViewHo < nl > public void onBindViewHolder ( AbsMessageViewHolder dialogHolder , int index , Message item ) { < nl > Message prev = null ; < nl > Message next = null ; < nl > - if ( index > DefaultLayouter . SERVICE _ CONTENT ) { < nl > - next = getItem ( index - DefaultLayouter . SERVICE _ CONTENT ) ; < nl > + if ( index > 1 ) { < nl > + next = getItem ( index - 1 ) ; < nl > } < nl > - if ( index < getItemCount ( ) - DefaultLayouter . SERVICE _ CONTENT ) { < nl > - prev = getItem ( index + DefaultLayouter . SERVICE _ CONTENT ) ; < nl > + if ( index < getItemCount ( ) - 1 ) { < nl > + prev = getItem ( index + 1 ) ; < nl > } < nl > PreprocessedList list = ( ( PreprocessedList ) getPreprocessedList ( ) ) ; < nl > dialogHolder . bindData ( item , prev , next , readDate , receiveDate , list . getPreprocessedData ( ) [ index ] ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 084acb3 . . f52746b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 28 , 17 + 28 , 17 @ @ public class Application extends ActorSDKApplication { < nl > < nl > @ Override < nl > public void onConfigureActorSDK ( ) { < nl > - ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > + / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > - ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > - ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > - ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > - ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > + / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > < nl > / / ActorSDK . sharedActor ( ) . setEndpoints ( new String [ ] { " tcp : / / 192 . 168 . 1 . 184 : 9070 " } ) ; < nl > < nl > - ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > - style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > + / / ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > + / / style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; < nl > / / AbsContent . registerConverter ( new ContentConverter ( ) { < nl > / / @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 8b8ceac . . a2d86ff 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 129 , 8 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > < nl > / / Process Content < nl > if ( msg . getContent ( ) instanceof TextContent ) { < nl > - int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; < nl > - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { < nl > + int updatedCounter = msg . getContent ( ) . getUpdatedCounter ( ) ; < nl > + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedCounter ) ) { < nl > TextContent text = ( TextContent ) msg . getContent ( ) ; < nl > Spannable spannableString = new SpannableString ( text . getText ( ) ) ; < nl > boolean hasSpannable = false ; < nl > @ @ - 191 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; < nl > hasSpannable = true ; < nl > } < nl > - updatedTexts . add ( updatedHash ) ; < nl > + updatedTexts . add ( updatedCounter ) ; < nl > preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , < nl > hasSpannable ? spannableString : null ) ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > index 8422981 . . 0e5ad94 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > @ @ - 2 , 7 + 2 , 9 @ @ package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . app . Activity ; < nl > import android . content . Context ; < nl > + import android . graphics . Bitmap ; < nl > import android . graphics . Color ; < nl > + import android . graphics . drawable . BitmapDrawable ; < nl > import android . net . Uri ; < nl > import android . view . View ; < nl > import android . widget . FrameLayout ; < nl > @ @ - 29 , 6 + 31 , 7 @ @ import im . actor . core . entity . content . FileLocalSource ; < nl > import im . actor . core . entity . content . FileRemoteSource ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > + import im . actor . core . utils . ImageHelper ; < nl > import im . actor . core . viewmodel . FileCallback ; < nl > import im . actor . core . viewmodel . FileVM ; < nl > import im . actor . core . viewmodel . FileVMCallback ; < nl > @ @ - 38 , 9 + 41 , 11 @ @ import im . actor . core . viewmodel . UploadFileVMCallback ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . conversation . view . FastBitmapDrawable ; < nl > import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; < nl > import im . actor . sdk . util . Screen ; < nl > import im . actor . sdk . util . Strings ; < nl > + import im . actor . sdk . util . images . BitmapUtil ; < nl > import im . actor . sdk . view . TintImageView ; < nl > import im . actor . runtime . files . FileSystemReference ; < nl > < nl > @ @ - 82 , 6 + 87 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > protected UploadFileVM uploadFileVM ; < nl > protected boolean isPhoto ; < nl > < nl > + int lastUpdatedIndex = 0 ; < nl > + private boolean updated = false ; < nl > + < nl > public PhotoHolder ( MessagesAdapter fragment , View itemView ) { < nl > super ( fragment , itemView , false ) ; < nl > this . context = fragment . getMessagesFragment ( ) . getActivity ( ) ; < nl > @ @ - 218 , 6 + 226 , 14 @ @ public class PhotoHolder extends MessageHolder { < nl > needRebind = true ; < nl > } < nl > < nl > + updated = false ; < nl > + int updatedCounter = fileMessage . getUpdatedCounter ( ) ; < nl > + if ( lastUpdatedIndex ! = updatedCounter ) { < nl > + updated = true ; < nl > + needRebind = true ; < nl > + lastUpdatedIndex = updatedCounter ; < nl > + } < nl > + < nl > if ( needRebind ) { < nl > / / Resetting progress state < nl > progressContainer . setVisibility ( View . GONE ) ; < nl > @ @ - 227 , 7 + 243 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > < nl > if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { < nl > boolean autoDownload = fileMessage instanceof PhotoContent ; < nl > - previewView . setImageURI ( null ) ; < nl > + if ( ! updated ) { < nl > + previewView . setImageURI ( null ) ; < nl > + } < nl > downloadFileVM = messenger ( ) . bindFile ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) , < nl > autoDownload , new DownloadVMCallback ( fileMessage ) ) ; < nl > } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { < nl > @ @ - 236 , 7 + 254 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > previewView . setImageURI ( Uri . fromFile ( < nl > new File ( ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ) ) ) ; < nl > } else { < nl > - previewView . setImageURI ( null ) ; < nl > + if ( ! updated ) { < nl > + previewView . setImageURI ( null ) ; < nl > + } < nl > / / TODO : better approach ? < nl > if ( fileMessage . getFastThumb ( ) ! = null ) { < nl > fastThumbLoader . request ( fileMessage . getFastThumb ( ) . getImage ( ) ) ; < nl > @ @ - 318 , 6 + 338 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > / / Releasing images < nl > fastThumbLoader . cancel ( ) ; < nl > previewView . setImageURI ( null ) ; < nl > + previewView . destroyDrawingCache ( ) ; < nl > } < nl > < nl > private class UploadVMCallback implements UploadFileVMCallback { < nl > @ @ - 389 , 22 + 410 , 33 @ @ public class PhotoHolder extends MessageHolder { < nl > < nl > @ Override < nl > public void onDownloading ( float progress ) { < nl > - checkFastThumb ( ) ; < nl > + if ( ! updated ) { < nl > + checkFastThumb ( ) ; < nl > < nl > - showView ( progressContainer ) ; < nl > + showView ( progressContainer ) ; < nl > < nl > - goneView ( progressIcon ) ; < nl > + goneView ( progressIcon ) ; < nl > < nl > - int val = ( int ) ( 100 * progress ) ; < nl > - progressValue . setText ( val + " " ) ; < nl > - progressView . setValue ( val ) ; < nl > - showView ( progressView ) ; < nl > - showView ( progressValue ) ; < nl > + int val = ( int ) ( 100 * progress ) ; < nl > + progressValue . setText ( val + " " ) ; < nl > + progressView . setValue ( val ) ; < nl > + showView ( progressView ) ; < nl > + showView ( progressValue ) ; < nl > + < nl > + } < nl > } < nl > < nl > @ Override < nl > public void onDownloaded ( FileSystemReference reference ) { < nl > if ( isPhoto ) { < nl > + if ( updated ) { < nl > + previewView . destroyDrawingCache ( ) ; < nl > + previewView . buildDrawingCache ( ) ; < nl > + Bitmap drawingCache = previewView . getDrawingCache ( ) ; < nl > + if ( drawingCache ! = null & & ! drawingCache . isRecycled ( ) ) { < nl > + previewView . getHierarchy ( ) . setPlaceholderImage ( new FastBitmapDrawable ( drawingCache ) ) ; < nl > + } < nl > + } < nl > ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) < nl > . setResizeOptions ( new ResizeOptions ( previewView . getLayoutParams ( ) . width , < nl > previewView . getLayoutParams ( ) . height ) ) < nl > @ @ - 414 , 6 + 446 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > . setImageRequest ( request ) < nl > . build ( ) ; < nl > previewView . setController ( controller ) ; < nl > + < nl > / / previewView . setImageURI ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) ; < nl > } else { < nl > checkFastThumb ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > index a41eab2 . . fb9b958 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > @ @ - 25 , 7 + 25 , 9 @ @ public class FastBitmapDrawable extends Drawable { < nl > < nl > @ Override < nl > public void draw ( Canvas canvas ) { < nl > - canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; < nl > + if ( ! bitmap . isRecycled ( ) ) { < nl > + canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index 8a00e7f . . 7dfeba1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 56 , 7 + 56 , 7 @ @ public abstract class AbsContent { < nl > < nl > private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; < nl > < nl > - private int updatedHash ; < nl > + private int updatedCounter = 0 ; < nl > < nl > public static void registerConverter ( ContentConverter contentConverter ) { < nl > ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; < nl > @ @ - 216 , 11 + 216 , 11 @ @ public abstract class AbsContent { < nl > return converters ; < nl > } < nl > < nl > - public int getUpdatedHash ( ) { < nl > - return updatedHash ; < nl > + public int getUpdatedCounter ( ) { < nl > + return updatedCounter ; < nl > } < nl > < nl > - public void setUpdatedHash ( int updatedHash ) { < nl > - this . updatedHash = updatedHash ; < nl > + public void incrementUpdatedCounter ( int oldCounter ) { < nl > + updatedCounter = + + oldCounter ; < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > index 7a5ffce . . 6c1102d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > + import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . events . AppVisibleChanged ; < nl > @ @ - 280 , 9 + 281 , 8 @ @ public class ConversationActor extends ModuleActor { < nl > } < nl > < nl > / / Updating message < nl > - if ( content instanceof TextContent ) { < nl > - content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; < nl > - } < nl > + content . incrementUpdatedCounter ( message . getContent ( ) . getUpdatedCounter ( ) ) ; < nl > + < nl > Message updatedMsg = message . changeContent ( content ) ; < nl > messages . addOrUpdateItem ( updatedMsg ) ; < nl > if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 11d4d05 . . 34d71d0 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 5 , 7 + 5 , 6 @ @ import android . graphics . PorterDuff ; 
 import android . os . Bundle ; 
 import android . support . multidex . MultiDex ; 
 import android . support . v4 . app . Fragment ; 
 - import android . support . v7 . app . ActionBar ; 
 import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 @ @ - 15 , 22 + 14 , 21 @ @ import android . widget . Toast ; 
 import org . jetbrains . annotations . Nullable ; 
 
 import java . util . ArrayList ; 
 - import java . util . List ; 
 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . content . JsonContent ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . develop . R ; 
 + import im . actor . fragments . AttachFragmentEx ; 
 + import im . actor . fragments . RootFragmentEx ; 
 import im . actor . runtime . json . JSONException ; 
 import im . actor . runtime . json . JSONObject ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . ActorSDKApplication ; 
 import im . actor . sdk . ActorStyle ; 
 import im . actor . sdk . BaseActorSDKDelegate ; 
 - import im . actor . sdk . controllers . conversation . attach . ShareMenuField ; 
 import im . actor . sdk . controllers . conversation . attach . AbsAttachFragment ; 
 - import im . actor . sdk . controllers . conversation . attach . AttachFragment ; 
 import im . actor . sdk . controllers . conversation . messages . BubbleLayouter ; 
 import im . actor . sdk . controllers . conversation . messages . DefaultLayouter ; 
 import im . actor . sdk . controllers . conversation . messages . JsonXmlBubbleLayouter ; 
 @ @ - 38 , 7 + 36 , 6 @ @ import im . actor . sdk . controllers . conversation . messages . XmlBubbleLayouter ; 
 import im . actor . sdk . controllers . conversation . messages . content . PhotoHolder ; 
 import im . actor . sdk . controllers . conversation . messages . content . TextHolder ; 
 import im . actor . sdk . controllers . conversation . messages . content . preprocessor . PreprocessedData ; 
 - import im . actor . sdk . controllers . root . RootFragment ; 
 import im . actor . sdk . controllers . settings . ActorSettingsCategories ; 
 import im . actor . sdk . controllers . settings . ActorSettingsCategory ; 
 import im . actor . sdk . controllers . settings . ActorSettingsField ; 
 @ @ - 105 , 7 + 102 , 7 @ @ public class Application extends ActorSDKApplication { 
 @ Override 
 public void configureChatViewHolders ( ArrayList < BubbleLayouter > layouters ) { 
 / / layouters . add ( 0 , new BubbleTextHolderLayouter ( ) ) ; 
 - layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ CONTENT , CensoredTextHolderEx : : new ) ) ; 
 + layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , CensoredTextHolderEx : : new ) ) ; 
 layouters . add ( 0 , new XmlBubbleLayouter ( content - > content instanceof PhotoContent , R . layout . adapter _ dialog _ photo , ( adapter1 , root1 , peer1 ) - > new PhotoHolder ( adapter1 , root1 , peer1 ) { 
 @ Override 
 protected void onConfigureViewHolder ( ) { 
 @ @ - 133 , 36 + 130 , 13 @ @ public class Application extends ActorSDKApplication { 
 @ Nullable 
 @ Override 
 public Fragment fragmentForRoot ( ) { 
 - return new RootFragment ( ) { 
 - @ Override 
 - public void onConfigureActionBar ( ActionBar actionBar ) { 
 - super . onConfigureActionBar ( actionBar ) ; 
 - actionBar . setDisplayShowHomeEnabled ( true ) ; 
 - actionBar . setIcon ( R . drawable . ic _ app _ notify ) ; 
 - } 
 - } ; 
 + return new RootFragmentEx ( ) ; 
 } 
 
 @ Nullable 
 @ Override 
 public AbsAttachFragment fragmentForAttachMenu ( Peer peer ) { 
 - return new AttachFragment ( peer ) { 
 - 
 - @ Override 
 - protected List < ShareMenuField > onCreateFields ( ) { 
 - List < ShareMenuField > res = super . onCreateFields ( ) ; 
 - res . add ( new ShareMenuField ( R . id . share _ test , R . drawable . ic _ edit _ white _ 24dp , ActorSDK . sharedActor ( ) . style . getAccentColor ( ) , " lol " ) ) ; 
 - return res ; 
 - } 
 - 
 - @ Override 
 - protected void onItemClicked ( int id ) { 
 - super . onItemClicked ( id ) ; 
 - if ( id = = R . id . share _ test ) { 
 - Toast . makeText ( getContext ( ) , " Hey " , Toast . LENGTH _ LONG ) . show ( ) ; 
 - } 
 - } 
 - } ; 
 + return new AttachFragmentEx ( ) ; 
 } 
 
 / / @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / AttachFragmentEx . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / AttachFragmentEx . java 
 new file mode 100644 
 index 0000000 . . e385a29 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / AttachFragmentEx . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + package im . actor . fragments ; 
 + 
 + import android . widget . Toast ; 
 + 
 + import java . util . List ; 
 + 
 + import im . actor . develop . R ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . controllers . conversation . attach . AttachFragment ; 
 + import im . actor . sdk . controllers . conversation . attach . ShareMenuField ; 
 + 
 + public class AttachFragmentEx extends AttachFragment { 
 + @ Override 
 + protected List < ShareMenuField > onCreateFields ( ) { 
 + List < ShareMenuField > res = super . onCreateFields ( ) ; 
 + res . add ( new ShareMenuField ( R . id . share _ test , R . drawable . ic _ edit _ white _ 24dp , ActorSDK . sharedActor ( ) . style . getAccentColor ( ) , " lol " ) ) ; 
 + return res ; 
 + } 
 + 
 + @ Override 
 + protected void onItemClicked ( int id ) { 
 + super . onItemClicked ( id ) ; 
 + if ( id = = R . id . share _ test ) { 
 + Toast . makeText ( getContext ( ) , " Hey " , Toast . LENGTH _ LONG ) . show ( ) ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / RootFragmentEx . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / RootFragmentEx . java 
 new file mode 100644 
 index 0000000 . . 4af9246 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / fragments / RootFragmentEx . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package im . actor . fragments ; 
 + 
 + import android . support . v7 . app . ActionBar ; 
 + 
 + import im . actor . develop . R ; 
 + import im . actor . sdk . controllers . root . RootFragment ; 
 + 
 + public class RootFragmentEx extends RootFragment { 
 + @ Override 
 + public void onConfigureActionBar ( ActionBar actionBar ) { 
 + super . onConfigureActionBar ( actionBar ) ; 
 + actionBar . setDisplayShowHomeEnabled ( true ) ; 
 + actionBar . setIcon ( R . drawable . ic _ app _ notify ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java 
 index a186143 . . b07d37e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DefaultLayouter . java 
 @ @ - 1 , 6 + 1 , 5 @ @ 
 package im . actor . sdk . controllers . conversation . messages ; 
 
 - import android . support . annotation . LayoutRes ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 
 @ @ - 27 , 21 + 26 , 21 @ @ import im . actor . sdk . util . ViewUtils ; 
 
 public class DefaultLayouter extends LambdaBubbleLayouter { 
 
 - public static final int TEXT _ CONTENT = 0 ; 
 - public static final int SERVICE _ CONTENT = 1 ; 
 - public static final int PHOTO _ CONTENT = 2 ; 
 - public static final int VOICE _ CONTENT = 4 ; 
 - public static final int DOCUMENT _ CONTENT = 3 ; 
 - public static final int CONTACT _ CONTENT = 5 ; 
 - public static final int LOCATION _ CONTENT = 6 ; 
 - public static final int STICKER _ CONTENT = 7 ; 
 + public static final int TEXT _ HOLDER = 0 ; 
 + public static final int SERVICE _ HOLDER = 1 ; 
 + public static final int PHOTO _ HOLDER = 2 ; 
 + public static final int VOICE _ HOLDER = 4 ; 
 + public static final int DOCUMENT _ HOLDER = 3 ; 
 + public static final int CONTACT _ HOLDER = 5 ; 
 + public static final int LOCATION _ HOLDER = 6 ; 
 + public static final int STICKER _ HOLDER = 7 ; 
 
 int id ; 
 int layoutId ; 
 
 - public DefaultLayouter ( int id , @ NotNull ViewHolderCreator creator ) { 
 + public DefaultLayouter ( int holderId , @ NotNull ViewHolderCreator creator ) { 
 super ( content - > false , creator ) ; 
 - this . id = id ; 
 + this . id = holderId ; 
 } 
 
 
 @ @ - 71 , 16 + 70 , 16 @ @ public class DefaultLayouter extends LambdaBubbleLayouter { 
 
 static { 
 holderMap = new ArrayList < > ( ) ; 
 - holderMap . add ( new HolderMapEntry ( TextContent . class , TEXT _ CONTENT , R . layout . adapter _ dialog _ text ) ) ; 
 - holderMap . add ( new HolderMapEntry ( ServiceContent . class , SERVICE _ CONTENT , R . layout . adapter _ dialog _ service ) ) ; 
 - holderMap . add ( new HolderMapEntry ( PhotoContent . class , PHOTO _ CONTENT , R . layout . adapter _ dialog _ photo ) ) ; 
 - holderMap . add ( new HolderMapEntry ( VideoContent . class , PHOTO _ CONTENT , R . layout . adapter _ dialog _ photo ) ) ; 
 - holderMap . add ( new HolderMapEntry ( AnimationContent . class , PHOTO _ CONTENT , R . layout . adapter _ dialog _ photo ) ) ; 
 - holderMap . add ( new HolderMapEntry ( VoiceContent . class , VOICE _ CONTENT , R . layout . adapter _ dialog _ audio ) ) ; 
 - holderMap . add ( new HolderMapEntry ( DocumentContent . class , DOCUMENT _ CONTENT , R . layout . adapter _ dialog _ doc ) ) ; 
 - holderMap . add ( new HolderMapEntry ( ContactContent . class , CONTACT _ CONTENT , R . layout . adapter _ dialog _ contact ) ) ; 
 - holderMap . add ( new HolderMapEntry ( LocationContent . class , LOCATION _ CONTENT , R . layout . adapter _ dialog _ locaton ) ) ; 
 - holderMap . add ( new HolderMapEntry ( StickerContent . class , STICKER _ CONTENT , R . layout . adapter _ dialog _ sticker ) ) ; 
 + holderMap . add ( new HolderMapEntry ( TextContent . class , TEXT _ HOLDER , R . layout . adapter _ dialog _ text ) ) ; 
 + holderMap . add ( new HolderMapEntry ( ServiceContent . class , SERVICE _ HOLDER , R . layout . adapter _ dialog _ service ) ) ; 
 + holderMap . add ( new HolderMapEntry ( PhotoContent . class , PHOTO _ HOLDER , R . layout . adapter _ dialog _ photo ) ) ; 
 + holderMap . add ( new HolderMapEntry ( VideoContent . class , PHOTO _ HOLDER , R . layout . adapter _ dialog _ photo ) ) ; 
 + holderMap . add ( new HolderMapEntry ( AnimationContent . class , PHOTO _ HOLDER , R . layout . adapter _ dialog _ photo ) ) ; 
 + holderMap . add ( new HolderMapEntry ( VoiceContent . class , VOICE _ HOLDER , R . layout . adapter _ dialog _ audio ) ) ; 
 + holderMap . add ( new HolderMapEntry ( DocumentContent . class , DOCUMENT _ HOLDER , R . layout . adapter _ dialog _ doc ) ) ; 
 + holderMap . add ( new HolderMapEntry ( ContactContent . class , CONTACT _ HOLDER , R . layout . adapter _ dialog _ contact ) ) ; 
 + holderMap . add ( new HolderMapEntry ( LocationContent . class , LOCATION _ HOLDER , R . layout . adapter _ dialog _ locaton ) ) ; 
 + holderMap . add ( new HolderMapEntry ( StickerContent . class , STICKER _ HOLDER , R . layout . adapter _ dialog _ sticker ) ) ; 
 } 
 
 private static class HolderMapEntry { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 index 4b32336 . . 018380a 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . content . Context ; 
 - import android . view . View ; 
 import android . view . ViewGroup ; 
 
 import java . util . HashMap ; 
 @ @ - 35 , 7 + 34 , 7 @ @ public class MessagesAdapter extends BindedListAdapter < Message , AbsMessageViewHo 
 private ActorBinder BINDER = new ActorBinder ( ) ; 
 
 private Context context ; 
 - private long firstUnread = - DefaultLayouter . SERVICE _ CONTENT ; 
 + private long firstUnread = - DefaultLayouter . SERVICE _ HOLDER ; 
 private long readDate ; 
 private long receiveDate ; 
 private Peer peer ; 
 @ @ - 51 , 14 + 50 , 14 @ @ public class MessagesAdapter extends BindedListAdapter < Message , AbsMessageViewHo 
 
 matcher = new ViewHolderMatcher ( ) ; 
 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . TEXT _ CONTENT , TextHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . SERVICE _ CONTENT , ServiceHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . PHOTO _ CONTENT , PhotoHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . VOICE _ CONTENT , AudioHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . DOCUMENT _ CONTENT , DocHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . CONTACT _ CONTENT , ContactHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . LOCATION _ CONTENT , LocationHolder : : new ) ) ; 
 - matcher . add ( new DefaultLayouter ( DefaultLayouter . STICKER _ CONTENT , StickerHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , TextHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . SERVICE _ HOLDER , ServiceHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . PHOTO _ HOLDER , PhotoHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . VOICE _ HOLDER , AudioHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . DOCUMENT _ HOLDER , DocHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . CONTACT _ HOLDER , ContactHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . LOCATION _ HOLDER , LocationHolder : : new ) ) ; 
 + matcher . add ( new DefaultLayouter ( DefaultLayouter . STICKER _ HOLDER , StickerHolder : : new ) ) ; 
 
 ActorSDK . sharedActor ( ) . getDelegate ( ) . configureChatViewHolders ( matcher . getLayouters ( ) ) ; 
 
 @ @ - 171 , 11 + 170 , 11 @ @ public class MessagesAdapter extends BindedListAdapter < Message , AbsMessageViewHo 
 public void onBindViewHolder ( AbsMessageViewHolder dialogHolder , int index , Message item ) { 
 Message prev = null ; 
 Message next = null ; 
 - if ( index > DefaultLayouter . SERVICE _ CONTENT ) { 
 - next = getItem ( index - DefaultLayouter . SERVICE _ CONTENT ) ; 
 + if ( index > 1 ) { 
 + next = getItem ( index - 1 ) ; 
 } 
 - if ( index < getItemCount ( ) - DefaultLayouter . SERVICE _ CONTENT ) { 
 - prev = getItem ( index + DefaultLayouter . SERVICE _ CONTENT ) ; 
 + if ( index < getItemCount ( ) - 1 ) { 
 + prev = getItem ( index + 1 ) ; 
 } 
 PreprocessedList list = ( ( PreprocessedList ) getPreprocessedList ( ) ) ; 
 dialogHolder . bindData ( item , prev , next , readDate , receiveDate , list . getPreprocessedData ( ) [ index ] ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 084acb3 . . f52746b 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 28 , 17 + 28 , 17 @ @ public class Application extends ActorSDKApplication { 
 
 @ Override 
 public void onConfigureActorSDK ( ) { 
 - ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 + / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 - ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 - ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 - ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 - ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 + / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 + / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 + / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 + / / ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 
 / / ActorSDK . sharedActor ( ) . setEndpoints ( new String [ ] { " tcp : / / 192 . 168 . 1 . 184 : 9070 " } ) ; 
 
 - ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 - style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 + / / ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 + / / style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; 
 / / AbsContent . registerConverter ( new ContentConverter ( ) { 
 / / @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 8b8ceac . . a2d86ff 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 129 , 8 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 
 / / Process Content 
 if ( msg . getContent ( ) instanceof TextContent ) { 
 - int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; 
 - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { 
 + int updatedCounter = msg . getContent ( ) . getUpdatedCounter ( ) ; 
 + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedCounter ) ) { 
 TextContent text = ( TextContent ) msg . getContent ( ) ; 
 Spannable spannableString = new SpannableString ( text . getText ( ) ) ; 
 boolean hasSpannable = false ; 
 @ @ - 191 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; 
 hasSpannable = true ; 
 } 
 - updatedTexts . add ( updatedHash ) ; 
 + updatedTexts . add ( updatedCounter ) ; 
 preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , 
 hasSpannable ? spannableString : null ) ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 index 8422981 . . 0e5ad94 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 @ @ - 2 , 7 + 2 , 9 @ @ package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . app . Activity ; 
 import android . content . Context ; 
 + import android . graphics . Bitmap ; 
 import android . graphics . Color ; 
 + import android . graphics . drawable . BitmapDrawable ; 
 import android . net . Uri ; 
 import android . view . View ; 
 import android . widget . FrameLayout ; 
 @ @ - 29 , 6 + 31 , 7 @ @ import im . actor . core . entity . content . FileLocalSource ; 
 import im . actor . core . entity . content . FileRemoteSource ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 + import im . actor . core . utils . ImageHelper ; 
 import im . actor . core . viewmodel . FileCallback ; 
 import im . actor . core . viewmodel . FileVM ; 
 import im . actor . core . viewmodel . FileVMCallback ; 
 @ @ - 38 , 9 + 41 , 11 @ @ import im . actor . core . viewmodel . UploadFileVMCallback ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . conversation . view . FastBitmapDrawable ; 
 import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; 
 import im . actor . sdk . util . Screen ; 
 import im . actor . sdk . util . Strings ; 
 + import im . actor . sdk . util . images . BitmapUtil ; 
 import im . actor . sdk . view . TintImageView ; 
 import im . actor . runtime . files . FileSystemReference ; 
 
 @ @ - 82 , 6 + 87 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 protected UploadFileVM uploadFileVM ; 
 protected boolean isPhoto ; 
 
 + int lastUpdatedIndex = 0 ; 
 + private boolean updated = false ; 
 + 
 public PhotoHolder ( MessagesAdapter fragment , View itemView ) { 
 super ( fragment , itemView , false ) ; 
 this . context = fragment . getMessagesFragment ( ) . getActivity ( ) ; 
 @ @ - 218 , 6 + 226 , 14 @ @ public class PhotoHolder extends MessageHolder { 
 needRebind = true ; 
 } 
 
 + updated = false ; 
 + int updatedCounter = fileMessage . getUpdatedCounter ( ) ; 
 + if ( lastUpdatedIndex ! = updatedCounter ) { 
 + updated = true ; 
 + needRebind = true ; 
 + lastUpdatedIndex = updatedCounter ; 
 + } 
 + 
 if ( needRebind ) { 
 / / Resetting progress state 
 progressContainer . setVisibility ( View . GONE ) ; 
 @ @ - 227 , 7 + 243 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 
 if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { 
 boolean autoDownload = fileMessage instanceof PhotoContent ; 
 - previewView . setImageURI ( null ) ; 
 + if ( ! updated ) { 
 + previewView . setImageURI ( null ) ; 
 + } 
 downloadFileVM = messenger ( ) . bindFile ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) , 
 autoDownload , new DownloadVMCallback ( fileMessage ) ) ; 
 } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { 
 @ @ - 236 , 7 + 254 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 previewView . setImageURI ( Uri . fromFile ( 
 new File ( ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ) ) ) ; 
 } else { 
 - previewView . setImageURI ( null ) ; 
 + if ( ! updated ) { 
 + previewView . setImageURI ( null ) ; 
 + } 
 / / TODO : better approach ? 
 if ( fileMessage . getFastThumb ( ) ! = null ) { 
 fastThumbLoader . request ( fileMessage . getFastThumb ( ) . getImage ( ) ) ; 
 @ @ - 318 , 6 + 338 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 / / Releasing images 
 fastThumbLoader . cancel ( ) ; 
 previewView . setImageURI ( null ) ; 
 + previewView . destroyDrawingCache ( ) ; 
 } 
 
 private class UploadVMCallback implements UploadFileVMCallback { 
 @ @ - 389 , 22 + 410 , 33 @ @ public class PhotoHolder extends MessageHolder { 
 
 @ Override 
 public void onDownloading ( float progress ) { 
 - checkFastThumb ( ) ; 
 + if ( ! updated ) { 
 + checkFastThumb ( ) ; 
 
 - showView ( progressContainer ) ; 
 + showView ( progressContainer ) ; 
 
 - goneView ( progressIcon ) ; 
 + goneView ( progressIcon ) ; 
 
 - int val = ( int ) ( 100 * progress ) ; 
 - progressValue . setText ( val + " " ) ; 
 - progressView . setValue ( val ) ; 
 - showView ( progressView ) ; 
 - showView ( progressValue ) ; 
 + int val = ( int ) ( 100 * progress ) ; 
 + progressValue . setText ( val + " " ) ; 
 + progressView . setValue ( val ) ; 
 + showView ( progressView ) ; 
 + showView ( progressValue ) ; 
 + 
 + } 
 } 
 
 @ Override 
 public void onDownloaded ( FileSystemReference reference ) { 
 if ( isPhoto ) { 
 + if ( updated ) { 
 + previewView . destroyDrawingCache ( ) ; 
 + previewView . buildDrawingCache ( ) ; 
 + Bitmap drawingCache = previewView . getDrawingCache ( ) ; 
 + if ( drawingCache ! = null & & ! drawingCache . isRecycled ( ) ) { 
 + previewView . getHierarchy ( ) . setPlaceholderImage ( new FastBitmapDrawable ( drawingCache ) ) ; 
 + } 
 + } 
 ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) 
 . setResizeOptions ( new ResizeOptions ( previewView . getLayoutParams ( ) . width , 
 previewView . getLayoutParams ( ) . height ) ) 
 @ @ - 414 , 6 + 446 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 . setImageRequest ( request ) 
 . build ( ) ; 
 previewView . setController ( controller ) ; 
 + 
 / / previewView . setImageURI ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) ; 
 } else { 
 checkFastThumb ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 index a41eab2 . . fb9b958 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 @ @ - 25 , 7 + 25 , 9 @ @ public class FastBitmapDrawable extends Drawable { 
 
 @ Override 
 public void draw ( Canvas canvas ) { 
 - canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; 
 + if ( ! bitmap . isRecycled ( ) ) { 
 + canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index 8a00e7f . . 7dfeba1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public abstract class AbsContent { 
 
 private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; 
 
 - private int updatedHash ; 
 + private int updatedCounter = 0 ; 
 
 public static void registerConverter ( ContentConverter contentConverter ) { 
 ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; 
 @ @ - 216 , 11 + 216 , 11 @ @ public abstract class AbsContent { 
 return converters ; 
 } 
 
 - public int getUpdatedHash ( ) { 
 - return updatedHash ; 
 + public int getUpdatedCounter ( ) { 
 + return updatedCounter ; 
 } 
 
 - public void setUpdatedHash ( int updatedHash ) { 
 - this . updatedHash = updatedHash ; 
 + public void incrementUpdatedCounter ( int oldCounter ) { 
 + updatedCounter = + + oldCounter ; 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 index 7a5ffce . . 6c1102d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 + import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . events . AppVisibleChanged ; 
 @ @ - 280 , 9 + 281 , 8 @ @ public class ConversationActor extends ModuleActor { 
 } 
 
 / / Updating message 
 - if ( content instanceof TextContent ) { 
 - content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; 
 - } 
 + content . incrementUpdatedCounter ( message . getContent ( ) . getUpdatedCounter ( ) ) ; 
 + 
 Message updatedMsg = message . changeContent ( content ) ; 
 messages . addOrUpdateItem ( updatedMsg ) ; 
 if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {
