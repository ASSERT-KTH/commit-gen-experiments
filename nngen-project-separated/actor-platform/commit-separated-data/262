BLEU SCORE: 0.2626909894424158

TEST MSG: fix ( core ) : remove Messenger reference from DisplayLists
GENERATED MSG: feat ( core ) : sendCallSignal

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 28de52f . . 996804a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 1102 , 7 + 1102 , 7 @ @ public class Messenger { < nl > @ ObjectiveCName ( " loadLastMessageDate : " ) < nl > @ Deprecated < nl > public long loadLastMessageDate ( Peer peer ) { < nl > - return Math . max ( getConversationVM ( peer ) . getOwnReadDate ( ) . get ( ) , getConversationVM ( peer ) . getOwnSendDate ( ) . get ( ) ) ; < nl > + return getConversationVM ( peer ) . getLastMessageDate ( ) ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java < nl > index a614607 . . 7bbed42 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java < nl > @ @ - 16 , 8 + 16 , 6 @ @ import im . actor . core . modules . ModuleContext ; < nl > import im . actor . runtime . Storage ; < nl > import im . actor . runtime . mvvm . PlatformDisplayList ; < nl > < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - < nl > public class DisplayLists extends AbsModule { < nl > < nl > private PlatformDisplayList < Dialog > dialogGlobalList ; < nl > @ @ - 97 , 7 + 95 , 7 @ @ public class DisplayLists extends AbsModule { < nl > PlatformDisplayList < Message > res = Storage . createDisplayList ( context ( ) . getMessagesModule ( ) . getConversationEngine ( peer ) , < nl > isShared , Message . ENTITY _ NAME ) ; < nl > < nl > - long lastRead = messenger ( ) . loadLastMessageDate ( peer ) ; < nl > + long lastRead = context ( ) . getMessagesModule ( ) . getConversationVM ( peer ) . getLastMessageDate ( ) ; < nl > < nl > if ( lastRead ! = 0 ) { < nl > res . initCenter ( lastRead ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java < nl > index 0a31c86 . . 83812a9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java < nl > @ @ - 52 , 6 + 52 , 10 @ @ public class ConversationVM extends BaseValueModel < ConversationState > { < nl > return receiveDate ; < nl > } < nl > < nl > + public long getLastMessageDate ( ) { < nl > + return Math . max ( ownReadDate . get ( ) , ownSendDate . get ( ) ) ; < nl > + } < nl > + < nl > @ Override < nl > protected void updateValues ( ConversationState rawObj ) { < nl > isLoaded . change ( rawObj . isLoaded ( ) ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index edfe8df . . 1ff74d7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 981 , 6 + 981 , 10 @ @ public class Messenger { < nl > modules . getCallsModule ( ) . answerCall ( callId , callback ) ; < nl > } < nl > < nl > + public void sendCallSignal ( long callId , byte [ ] data ) { < nl > + modules . getCallsModule ( ) . sendSignal ( callId , data ) ; < nl > + } < nl > + < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / Peer operations < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > index cd7371f . . 75c963a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > @ @ - 7 , 6 + 7 , 7 @ @ import im . actor . core . api . ApiPeerType ; < nl > import im . actor . core . api . rpc . RequestCallInProgress ; < nl > import im . actor . core . api . rpc . RequestDoCall ; < nl > import im . actor . core . api . rpc . RequestEndCall ; < nl > + import im . actor . core . api . rpc . RequestSendCallSignal ; < nl > import im . actor . core . api . rpc . RequestSubscribeToCalls ; < nl > import im . actor . core . api . rpc . ResponseDoCall ; < nl > import im . actor . core . api . updates . UpdateIncomingCall ; < nl > @ @ - 120 , 6 + 121 , 10 @ @ public class CallsModule extends AbsModule { < nl > } < nl > } < nl > < nl > + public void sendSignal ( long callId , byte [ ] data ) { < nl > + request ( new RequestSendCallSignal ( callId , data ) ) ; < nl > + } < nl > + < nl > public void onSignal ( long callId , byte [ ] data ) { < nl > ActorRef call = calls . get ( callId ) ; < nl > if ( call ! = null ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 28de52f . . 996804a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 1102 , 7 + 1102 , 7 @ @ public class Messenger { 
 @ ObjectiveCName ( " loadLastMessageDate : " ) 
 @ Deprecated 
 public long loadLastMessageDate ( Peer peer ) { 
 - return Math . max ( getConversationVM ( peer ) . getOwnReadDate ( ) . get ( ) , getConversationVM ( peer ) . getOwnSendDate ( ) . get ( ) ) ; 
 + return getConversationVM ( peer ) . getLastMessageDate ( ) ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java 
 index a614607 . . 7bbed42 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / DisplayLists . java 
 @ @ - 16 , 8 + 16 , 6 @ @ import im . actor . core . modules . ModuleContext ; 
 import im . actor . runtime . Storage ; 
 import im . actor . runtime . mvvm . PlatformDisplayList ; 
 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - 
 public class DisplayLists extends AbsModule { 
 
 private PlatformDisplayList < Dialog > dialogGlobalList ; 
 @ @ - 97 , 7 + 95 , 7 @ @ public class DisplayLists extends AbsModule { 
 PlatformDisplayList < Message > res = Storage . createDisplayList ( context ( ) . getMessagesModule ( ) . getConversationEngine ( peer ) , 
 isShared , Message . ENTITY _ NAME ) ; 
 
 - long lastRead = messenger ( ) . loadLastMessageDate ( peer ) ; 
 + long lastRead = context ( ) . getMessagesModule ( ) . getConversationVM ( peer ) . getLastMessageDate ( ) ; 
 
 if ( lastRead ! = 0 ) { 
 res . initCenter ( lastRead ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java 
 index 0a31c86 . . 83812a9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / ConversationVM . java 
 @ @ - 52 , 6 + 52 , 10 @ @ public class ConversationVM extends BaseValueModel < ConversationState > { 
 return receiveDate ; 
 } 
 
 + public long getLastMessageDate ( ) { 
 + return Math . max ( ownReadDate . get ( ) , ownSendDate . get ( ) ) ; 
 + } 
 + 
 @ Override 
 protected void updateValues ( ConversationState rawObj ) { 
 isLoaded . change ( rawObj . isLoaded ( ) ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index edfe8df . . 1ff74d7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 981 , 6 + 981 , 10 @ @ public class Messenger { 
 modules . getCallsModule ( ) . answerCall ( callId , callback ) ; 
 } 
 
 + public void sendCallSignal ( long callId , byte [ ] data ) { 
 + modules . getCallsModule ( ) . sendSignal ( callId , data ) ; 
 + } 
 + 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / Peer operations 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 index cd7371f . . 75c963a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import im . actor . core . api . ApiPeerType ; 
 import im . actor . core . api . rpc . RequestCallInProgress ; 
 import im . actor . core . api . rpc . RequestDoCall ; 
 import im . actor . core . api . rpc . RequestEndCall ; 
 + import im . actor . core . api . rpc . RequestSendCallSignal ; 
 import im . actor . core . api . rpc . RequestSubscribeToCalls ; 
 import im . actor . core . api . rpc . ResponseDoCall ; 
 import im . actor . core . api . updates . UpdateIncomingCall ; 
 @ @ - 120 , 6 + 121 , 10 @ @ public class CallsModule extends AbsModule { 
 } 
 } 
 
 + public void sendSignal ( long callId , byte [ ] data ) { 
 + request ( new RequestSendCallSignal ( callId , data ) ) ; 
 + } 
 + 
 public void onSignal ( long callId , byte [ ] data ) { 
 ActorRef call = calls . get ( callId ) ; 
 if ( call ! = null ) {
