BLEU SCORE: 0.16451929399933107

TEST MSG: fix ( android ) : send to sign up from sign in if not registered
GENERATED MSG: chore ( android ) : remove magic numbers , replace string keys with integers

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > index 6bc99ce . . 2c6952b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > @ @ - 55 , 6 + 55 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > private String currentName ; < nl > private Sex currentSex ; < nl > private ActorRef authActor ; < nl > + private boolean codeValidated = false ; < nl > < nl > @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > @ @ - 73 , 6 + 74 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > currentEmail = preferences . getString ( " currentEmail " ) ; < nl > transactionHash = preferences . getString ( " transactionHash " ) ; < nl > isRegistered = preferences . getBool ( " isRegistered " , false ) ; < nl > + codeValidated = preferences . getBool ( " codeValidated " , false ) ; < nl > currentName = preferences . getString ( " currentName " ) ; < nl > signType = preferences . getInt ( " signType " , signType ) ; < nl > String savedState = preferences . getString ( " auth _ state " ) ; < nl > @ @ - 102 , 6 + 104 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > preferences . putString ( " currentEmail " , currentEmail ) ; < nl > preferences . putString ( " transactionHash " , transactionHash ) ; < nl > preferences . putBool ( " isRegistered " , isRegistered ) ; < nl > + preferences . putBool ( " codeValidated " , codeValidated ) ; < nl > preferences . putString ( " currentName " , currentName ) ; < nl > preferences . putInt ( " signType " , signType ) ; < nl > preferences . putString ( " auth _ state " , state . toString ( ) ) ; < nl > @ @ - 164 , 15 + 167 , 21 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > currentSex = Sex . UNKNOWN ; < nl > availableAuthType = ActorSDK . sharedActor ( ) . getAuthType ( ) ; < nl > AuthState authState ; < nl > - if ( ( availableAuthType & AUTH _ TYPE _ PHONE ) = = AUTH _ TYPE _ PHONE ) { < nl > - authState = AuthState . AUTH _ PHONE ; < nl > - } else if ( ( availableAuthType & AUTH _ TYPE _ EMAIL ) = = AUTH _ TYPE _ EMAIL ) { < nl > - authState = AuthState . AUTH _ EMAIL ; < nl > + if ( ! codeValidated ) { < nl > + if ( ( availableAuthType & AUTH _ TYPE _ PHONE ) = = AUTH _ TYPE _ PHONE ) { < nl > + authState = AuthState . AUTH _ PHONE ; < nl > + } else if ( ( availableAuthType & AUTH _ TYPE _ EMAIL ) = = AUTH _ TYPE _ EMAIL ) { < nl > + authState = AuthState . AUTH _ EMAIL ; < nl > + } else { < nl > + / / none of valid auth types selected - force crash ? < nl > + return ; < nl > + } < nl > + < nl > + updateState ( authState ) ; < nl > + < nl > } else { < nl > - / / none of valid auth types selected - force crash ? < nl > - return ; < nl > + signUp ( messenger ( ) . doSignup ( currentName , currentSex ! = null ? currentSex : Sex . UNKNOWN , transactionHash ) , currentName , currentSex ) ; < nl > } < nl > - updateState ( authState ) ; < nl > } < nl > < nl > public void startPhoneAuth ( Promise < AuthStartRes > promise , long phone ) { < nl > @ @ - 229 , 6 + 238 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > @ Override < nl > public void apply ( AuthCodeRes authCodeRes ) { < nl > if ( dismissProgress ( ) ) { < nl > + codeValidated = true ; < nl > transactionHash = authCodeRes . getTransactionHash ( ) ; < nl > if ( ! authCodeRes . isNeedToSignup ( ) ) { < nl > messenger ( ) . doCompleteAuth ( authCodeRes . getResult ( ) ) . then ( new Consumer < Boolean > ( ) { < nl > @ @ - 243 , 7 + 253 , 11 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > } < nl > } ) ; < nl > } else { < nl > - signUp ( messenger ( ) . doSignup ( currentName , currentSex ! = null ? currentSex : Sex . UNKNOWN , transactionHash ) , currentName , currentSex ) ; < nl > + if ( currentName = = null | | currentName . isEmpty ( ) ) { < nl > + updateState ( AuthState . SIGN _ UP , true ) ; < nl > + } else { < nl > + signUp ( messenger ( ) . doSignup ( currentName , currentSex ! = null ? currentSex : Sex . UNKNOWN , transactionHash ) , currentName , currentSex ) ; < nl > + } < nl > } < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java b / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java < nl > index 19fdd6a . . 6157f77 100644 < nl > - - - a / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java < nl > + + + b / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java < nl > @ @ - 51 , 6 + 51 , 7 @ @ public class Core { < nl > < nl > private static final int API _ ID = 1 ; < nl > private static final String API _ KEY = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; < nl > + public static final int MAX _ DELAY = 15000 * 60 ; < nl > < nl > private static volatile Core core ; < nl > < nl > @ @ - 156 , 7 + 157 , 7 @ @ public class Core { < nl > getDeviceName ( ) , < nl > AppContext . getContext ( ) . getPackageName ( ) + " : " + Build . SERIAL ) ) ; < nl > < nl > - builder . setMaxDelay ( 15000 * 60 ) ; < nl > + builder . setMaxDelay ( MAX _ DELAY ) ; < nl > < nl > this . messenger = new AndroidMessenger ( AppContext . getContext ( ) , builder . build ( ) ) ; < nl > < nl > diff - - git a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java < nl > index 27f6fb7 . . 36af1d5 100644 < nl > - - - a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java < nl > + + + b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java < nl > @ @ - 27 , 12 + 27 , 16 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > private ProgressDialog progressDialog ; < nl > private AlertDialog alertDialog ; < nl > private AuthState state ; < nl > - private String authType ; < nl > + public static final String AUTH _ TYPE _ KEY = " auth _ type " ; < nl > + public static final int AUTH _ TYPE _ PHONE = 1 ; < nl > + public static final int AUTH _ TYPE _ EMAIL = 2 ; < nl > + private int authType ; < nl > + < nl > < nl > @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > super . onCreate ( savedInstanceState ) ; < nl > - authType = getIntent ( ) . getStringExtra ( " auth _ type " ) ; < nl > + authType = getIntent ( ) . getIntExtra ( AUTH _ TYPE _ KEY , AUTH _ TYPE _ PHONE ) ; < nl > if ( savedInstanceState = = null ) { < nl > updateState ( ) ; < nl > } < nl > @ @ - 72 , 21 + 76 , 21 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > < nl > switch ( state ) { < nl > case AUTH _ START : < nl > - if ( authType ! = null & & authType . equals ( " auth _ type _ email " ) ) { < nl > + if ( authType = = AUTH _ TYPE _ EMAIL ) { < nl > showFragment ( new SignEmailFragment ( ) , false , false ) ; < nl > - } else if ( authType ! = null & & authType . equals ( " auth _ type _ phone " ) ) { < nl > + } else if ( authType = = AUTH _ TYPE _ PHONE ) { < nl > showFragment ( new SignPhoneFragment ( ) , false , false ) ; < nl > } < nl > break ; < nl > case CODE _ VALIDATION _ PHONE : < nl > case CODE _ VALIDATION _ EMAIL : < nl > - if ( ( state = = AuthState . CODE _ VALIDATION _ EMAIL & & authType . equals ( " auth _ type _ phone " ) ) | | ( state = = AuthState . CODE _ VALIDATION _ PHONE & & authType . equals ( " auth _ type _ email " ) ) ) { < nl > + if ( ( state = = AuthState . CODE _ VALIDATION _ EMAIL & & authType = = AUTH _ TYPE _ PHONE ) | | ( state = = AuthState . CODE _ VALIDATION _ PHONE & & authType = = AUTH _ TYPE _ EMAIL ) ) { < nl > updateState ( AuthState . AUTH _ START ) ; < nl > break ; < nl > } < nl > Fragment signInFragment = new SignInFragment ( ) ; < nl > Bundle args = new Bundle ( ) ; < nl > - args . putString ( " authType " , state = = AuthState . CODE _ VALIDATION _ EMAIL ? SignInFragment . AUTH _ TYPE _ EMAIL : SignInFragment . AUTH _ TYPE _ PHONE ) ; < nl > + args . putString ( " authType " , state = = AuthState . CODE _ VALIDATION _ EMAIL ? SignInFragment . AUTH _ TYPE _ EMAIL : SignInFragment . AUTH _ TYPE _ PHONE ) ; < nl > signInFragment . setArguments ( args ) ; < nl > showFragment ( signInFragment , false , false ) ; < nl > break ; < nl > @ @ - 94 , 7 + 98 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > executeAuth ( messenger ( ) . requestGetOAuthParams ( ) , " get _ oauth _ params " ) ; < nl > break ; < nl > case COMPLETE _ OAUTH : < nl > - if ( authType . equals ( " auth _ type _ phone " ) ) { < nl > + if ( authType = = AUTH _ TYPE _ PHONE ) { < nl > updateState ( AuthState . AUTH _ START ) ; < nl > break ; < nl > } < nl > @ @ - 154 , 7 + 158 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > } else if ( " FAILED _ GET _ OAUTH2 _ TOKEN " . equals ( re . getTag ( ) ) ) { < nl > message = getString ( R . string . auth _ error _ failed _ get _ oauth2 _ token ) ; < nl > canTryAgain = false ; < nl > - } else { < nl > + } else { < nl > message = re . getMessage ( ) ; < nl > canTryAgain = re . isCanTryAgain ( ) ; < nl > } < nl > @ @ - 206 , 9 + 210 , 9 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > @ Override < nl > protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { < nl > super . onActivityResult ( requestCode , resultCode , data ) ; < nl > - switch ( requestCode ) { < nl > + switch ( requestCode ) { < nl > case OAUTH _ DIALOG : < nl > - if ( resultCode = = RESULT _ OK & & data ! = null ) { < nl > + if ( resultCode = = RESULT _ OK & & data ! = null ) { < nl > executeAuth ( messenger ( ) . requestCompleteOAuth ( data . getStringExtra ( " code " ) ) , " Sign in " ) ; < nl > } < nl > break ; < nl > diff - - git a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java < nl > index b004d09 . . 10829cf 100644 < nl > - - - a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java < nl > + + + b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java < nl > @ @ - 61 , 12 + 61 , 12 @ @ public class TourActivity extends ActionBarActivity { < nl > Intent authIntent = new Intent ( TourActivity . this , AuthActivity . class ) ; < nl > switch ( i ) { < nl > case 0 : < nl > - authIntent . putExtra ( " auth _ type " , " auth _ type _ phone " ) ; < nl > + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ PHONE ) ; < nl > startActivity ( authIntent ) ; < nl > break ; < nl > < nl > case 1 : < nl > - authIntent . putExtra ( " auth _ type " , " auth _ type _ email " ) ; < nl > + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ EMAIL ) ; < nl > startActivity ( authIntent ) ; < nl > break ; < nl > < nl > @ @ - 92 , 12 + 92 , 12 @ @ public class TourActivity extends ActionBarActivity { < nl > Intent authIntent = new Intent ( TourActivity . this , AuthActivity . class ) ; < nl > switch ( i ) { < nl > case 0 : < nl > - authIntent . putExtra ( " auth _ type " , " auth _ type _ phone " ) ; < nl > + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ PHONE ) ; < nl > startActivity ( authIntent ) ; < nl > break ; < nl > < nl > case 1 : < nl > - authIntent . putExtra ( " auth _ type " , " auth _ type _ email " ) ; < nl > + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ EMAIL ) ; < nl > startActivity ( authIntent ) ; < nl > break ; < nl > < nl > @ @ - 265 , 15 + 265 , 15 @ @ public class TourActivity extends ActionBarActivity { < nl > backToTopArrow . setLayoutParams ( params ) ; < nl > < nl > params = ( RelativeLayout . LayoutParams ) welcomeImage . getLayoutParams ( ) ; < nl > - params . topMargin = contentTopPadding + params . topMargin ; < nl > + params . topMargin = contentTopPadding + params . topMargin ; < nl > welcomeImage . setLayoutParams ( params ) ; < nl > < nl > params = ( RelativeLayout . LayoutParams ) welcomeText . getLayoutParams ( ) ; < nl > - params . topMargin = contentTopPadding + params . topMargin ; < nl > + params . topMargin = contentTopPadding + params . topMargin ; < nl > welcomeText . setLayoutParams ( params ) ; < nl > < nl > params = ( RelativeLayout . LayoutParams ) backToTopText . getLayoutParams ( ) ; < nl > - params . topMargin = contentTopPadding + params . topMargin ; < nl > + params . topMargin = contentTopPadding + params . topMargin ; < nl > backToTopText . setLayoutParams ( params ) ; < nl > } < nl > < nl > diff - - git a / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java b / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java < nl > index 55b4fde . . f43c522 100644 < nl > - - - a / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java < nl > + + + b / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java < nl > @ @ - 20 , 7 + 20 , 7 @ @ public class ExponentialBackoff { < nl > < nl > public ExponentialBackoff ( int minDelay , < nl > int maxDelay , < nl > - int maxFailureCount ) { < nl > + int maxFailureCount ) { < nl > this . minDelay = minDelay ; < nl > this . maxDelay = maxDelay ; < nl > this . maxFailureCount = maxFailureCount ; < nl > @ @ - 47 , 7 + 47 , 7 @ @ public class ExponentialBackoff { < nl > * / < nl > public void onFailure ( ) { < nl > final int val = currentFailureCount . incrementAndGet ( ) ; < nl > - if ( val > 50 ) { < nl > + if ( val > maxFailureCount ) { < nl > currentFailureCount . compareAndSet ( val , maxFailureCount ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 index 6bc99ce . . 2c6952b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 @ @ - 55 , 6 + 55 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 private String currentName ; 
 private Sex currentSex ; 
 private ActorRef authActor ; 
 + private boolean codeValidated = false ; 
 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 @ @ - 73 , 6 + 74 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 currentEmail = preferences . getString ( " currentEmail " ) ; 
 transactionHash = preferences . getString ( " transactionHash " ) ; 
 isRegistered = preferences . getBool ( " isRegistered " , false ) ; 
 + codeValidated = preferences . getBool ( " codeValidated " , false ) ; 
 currentName = preferences . getString ( " currentName " ) ; 
 signType = preferences . getInt ( " signType " , signType ) ; 
 String savedState = preferences . getString ( " auth _ state " ) ; 
 @ @ - 102 , 6 + 104 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 preferences . putString ( " currentEmail " , currentEmail ) ; 
 preferences . putString ( " transactionHash " , transactionHash ) ; 
 preferences . putBool ( " isRegistered " , isRegistered ) ; 
 + preferences . putBool ( " codeValidated " , codeValidated ) ; 
 preferences . putString ( " currentName " , currentName ) ; 
 preferences . putInt ( " signType " , signType ) ; 
 preferences . putString ( " auth _ state " , state . toString ( ) ) ; 
 @ @ - 164 , 15 + 167 , 21 @ @ public class AuthActivity extends BaseFragmentActivity { 
 currentSex = Sex . UNKNOWN ; 
 availableAuthType = ActorSDK . sharedActor ( ) . getAuthType ( ) ; 
 AuthState authState ; 
 - if ( ( availableAuthType & AUTH _ TYPE _ PHONE ) = = AUTH _ TYPE _ PHONE ) { 
 - authState = AuthState . AUTH _ PHONE ; 
 - } else if ( ( availableAuthType & AUTH _ TYPE _ EMAIL ) = = AUTH _ TYPE _ EMAIL ) { 
 - authState = AuthState . AUTH _ EMAIL ; 
 + if ( ! codeValidated ) { 
 + if ( ( availableAuthType & AUTH _ TYPE _ PHONE ) = = AUTH _ TYPE _ PHONE ) { 
 + authState = AuthState . AUTH _ PHONE ; 
 + } else if ( ( availableAuthType & AUTH _ TYPE _ EMAIL ) = = AUTH _ TYPE _ EMAIL ) { 
 + authState = AuthState . AUTH _ EMAIL ; 
 + } else { 
 + / / none of valid auth types selected - force crash ? 
 + return ; 
 + } 
 + 
 + updateState ( authState ) ; 
 + 
 } else { 
 - / / none of valid auth types selected - force crash ? 
 - return ; 
 + signUp ( messenger ( ) . doSignup ( currentName , currentSex ! = null ? currentSex : Sex . UNKNOWN , transactionHash ) , currentName , currentSex ) ; 
 } 
 - updateState ( authState ) ; 
 } 
 
 public void startPhoneAuth ( Promise < AuthStartRes > promise , long phone ) { 
 @ @ - 229 , 6 + 238 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 @ Override 
 public void apply ( AuthCodeRes authCodeRes ) { 
 if ( dismissProgress ( ) ) { 
 + codeValidated = true ; 
 transactionHash = authCodeRes . getTransactionHash ( ) ; 
 if ( ! authCodeRes . isNeedToSignup ( ) ) { 
 messenger ( ) . doCompleteAuth ( authCodeRes . getResult ( ) ) . then ( new Consumer < Boolean > ( ) { 
 @ @ - 243 , 7 + 253 , 11 @ @ public class AuthActivity extends BaseFragmentActivity { 
 } 
 } ) ; 
 } else { 
 - signUp ( messenger ( ) . doSignup ( currentName , currentSex ! = null ? currentSex : Sex . UNKNOWN , transactionHash ) , currentName , currentSex ) ; 
 + if ( currentName = = null | | currentName . isEmpty ( ) ) { 
 + updateState ( AuthState . SIGN _ UP , true ) ; 
 + } else { 
 + signUp ( messenger ( ) . doSignup ( currentName , currentSex ! = null ? currentSex : Sex . UNKNOWN , transactionHash ) , currentName , currentSex ) ; 
 + } 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java b / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java 
 index 19fdd6a . . 6157f77 100644 
 - - - a / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java 
 + + + b / actor - apps / app - android / src / main / java / im / actor / messenger / app / Core . java 
 @ @ - 51 , 6 + 51 , 7 @ @ public class Core { 
 
 private static final int API _ ID = 1 ; 
 private static final String API _ KEY = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; 
 + public static final int MAX _ DELAY = 15000 * 60 ; 
 
 private static volatile Core core ; 
 
 @ @ - 156 , 7 + 157 , 7 @ @ public class Core { 
 getDeviceName ( ) , 
 AppContext . getContext ( ) . getPackageName ( ) + " : " + Build . SERIAL ) ) ; 
 
 - builder . setMaxDelay ( 15000 * 60 ) ; 
 + builder . setMaxDelay ( MAX _ DELAY ) ; 
 
 this . messenger = new AndroidMessenger ( AppContext . getContext ( ) , builder . build ( ) ) ; 
 
 diff - - git a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java 
 index 27f6fb7 . . 36af1d5 100644 
 - - - a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java 
 + + + b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / auth / AuthActivity . java 
 @ @ - 27 , 12 + 27 , 16 @ @ public class AuthActivity extends BaseFragmentActivity { 
 private ProgressDialog progressDialog ; 
 private AlertDialog alertDialog ; 
 private AuthState state ; 
 - private String authType ; 
 + public static final String AUTH _ TYPE _ KEY = " auth _ type " ; 
 + public static final int AUTH _ TYPE _ PHONE = 1 ; 
 + public static final int AUTH _ TYPE _ EMAIL = 2 ; 
 + private int authType ; 
 + 
 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 super . onCreate ( savedInstanceState ) ; 
 - authType = getIntent ( ) . getStringExtra ( " auth _ type " ) ; 
 + authType = getIntent ( ) . getIntExtra ( AUTH _ TYPE _ KEY , AUTH _ TYPE _ PHONE ) ; 
 if ( savedInstanceState = = null ) { 
 updateState ( ) ; 
 } 
 @ @ - 72 , 21 + 76 , 21 @ @ public class AuthActivity extends BaseFragmentActivity { 
 
 switch ( state ) { 
 case AUTH _ START : 
 - if ( authType ! = null & & authType . equals ( " auth _ type _ email " ) ) { 
 + if ( authType = = AUTH _ TYPE _ EMAIL ) { 
 showFragment ( new SignEmailFragment ( ) , false , false ) ; 
 - } else if ( authType ! = null & & authType . equals ( " auth _ type _ phone " ) ) { 
 + } else if ( authType = = AUTH _ TYPE _ PHONE ) { 
 showFragment ( new SignPhoneFragment ( ) , false , false ) ; 
 } 
 break ; 
 case CODE _ VALIDATION _ PHONE : 
 case CODE _ VALIDATION _ EMAIL : 
 - if ( ( state = = AuthState . CODE _ VALIDATION _ EMAIL & & authType . equals ( " auth _ type _ phone " ) ) | | ( state = = AuthState . CODE _ VALIDATION _ PHONE & & authType . equals ( " auth _ type _ email " ) ) ) { 
 + if ( ( state = = AuthState . CODE _ VALIDATION _ EMAIL & & authType = = AUTH _ TYPE _ PHONE ) | | ( state = = AuthState . CODE _ VALIDATION _ PHONE & & authType = = AUTH _ TYPE _ EMAIL ) ) { 
 updateState ( AuthState . AUTH _ START ) ; 
 break ; 
 } 
 Fragment signInFragment = new SignInFragment ( ) ; 
 Bundle args = new Bundle ( ) ; 
 - args . putString ( " authType " , state = = AuthState . CODE _ VALIDATION _ EMAIL ? SignInFragment . AUTH _ TYPE _ EMAIL : SignInFragment . AUTH _ TYPE _ PHONE ) ; 
 + args . putString ( " authType " , state = = AuthState . CODE _ VALIDATION _ EMAIL ? SignInFragment . AUTH _ TYPE _ EMAIL : SignInFragment . AUTH _ TYPE _ PHONE ) ; 
 signInFragment . setArguments ( args ) ; 
 showFragment ( signInFragment , false , false ) ; 
 break ; 
 @ @ - 94 , 7 + 98 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 executeAuth ( messenger ( ) . requestGetOAuthParams ( ) , " get _ oauth _ params " ) ; 
 break ; 
 case COMPLETE _ OAUTH : 
 - if ( authType . equals ( " auth _ type _ phone " ) ) { 
 + if ( authType = = AUTH _ TYPE _ PHONE ) { 
 updateState ( AuthState . AUTH _ START ) ; 
 break ; 
 } 
 @ @ - 154 , 7 + 158 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 } else if ( " FAILED _ GET _ OAUTH2 _ TOKEN " . equals ( re . getTag ( ) ) ) { 
 message = getString ( R . string . auth _ error _ failed _ get _ oauth2 _ token ) ; 
 canTryAgain = false ; 
 - } else { 
 + } else { 
 message = re . getMessage ( ) ; 
 canTryAgain = re . isCanTryAgain ( ) ; 
 } 
 @ @ - 206 , 9 + 210 , 9 @ @ public class AuthActivity extends BaseFragmentActivity { 
 @ Override 
 protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { 
 super . onActivityResult ( requestCode , resultCode , data ) ; 
 - switch ( requestCode ) { 
 + switch ( requestCode ) { 
 case OAUTH _ DIALOG : 
 - if ( resultCode = = RESULT _ OK & & data ! = null ) { 
 + if ( resultCode = = RESULT _ OK & & data ! = null ) { 
 executeAuth ( messenger ( ) . requestCompleteOAuth ( data . getStringExtra ( " code " ) ) , " Sign in " ) ; 
 } 
 break ; 
 diff - - git a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java 
 index b004d09 . . 10829cf 100644 
 - - - a / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java 
 + + + b / actor - apps / app - android / src / main / java / im / actor / messenger / app / fragment / tour / TourActivity . java 
 @ @ - 61 , 12 + 61 , 12 @ @ public class TourActivity extends ActionBarActivity { 
 Intent authIntent = new Intent ( TourActivity . this , AuthActivity . class ) ; 
 switch ( i ) { 
 case 0 : 
 - authIntent . putExtra ( " auth _ type " , " auth _ type _ phone " ) ; 
 + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ PHONE ) ; 
 startActivity ( authIntent ) ; 
 break ; 
 
 case 1 : 
 - authIntent . putExtra ( " auth _ type " , " auth _ type _ email " ) ; 
 + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ EMAIL ) ; 
 startActivity ( authIntent ) ; 
 break ; 
 
 @ @ - 92 , 12 + 92 , 12 @ @ public class TourActivity extends ActionBarActivity { 
 Intent authIntent = new Intent ( TourActivity . this , AuthActivity . class ) ; 
 switch ( i ) { 
 case 0 : 
 - authIntent . putExtra ( " auth _ type " , " auth _ type _ phone " ) ; 
 + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ PHONE ) ; 
 startActivity ( authIntent ) ; 
 break ; 
 
 case 1 : 
 - authIntent . putExtra ( " auth _ type " , " auth _ type _ email " ) ; 
 + authIntent . putExtra ( AuthActivity . AUTH _ TYPE _ KEY , AuthActivity . AUTH _ TYPE _ EMAIL ) ; 
 startActivity ( authIntent ) ; 
 break ; 
 
 @ @ - 265 , 15 + 265 , 15 @ @ public class TourActivity extends ActionBarActivity { 
 backToTopArrow . setLayoutParams ( params ) ; 
 
 params = ( RelativeLayout . LayoutParams ) welcomeImage . getLayoutParams ( ) ; 
 - params . topMargin = contentTopPadding + params . topMargin ; 
 + params . topMargin = contentTopPadding + params . topMargin ; 
 welcomeImage . setLayoutParams ( params ) ; 
 
 params = ( RelativeLayout . LayoutParams ) welcomeText . getLayoutParams ( ) ; 
 - params . topMargin = contentTopPadding + params . topMargin ; 
 + params . topMargin = contentTopPadding + params . topMargin ; 
 welcomeText . setLayoutParams ( params ) ; 
 
 params = ( RelativeLayout . LayoutParams ) backToTopText . getLayoutParams ( ) ; 
 - params . topMargin = contentTopPadding + params . topMargin ; 
 + params . topMargin = contentTopPadding + params . topMargin ; 
 backToTopText . setLayoutParams ( params ) ; 
 } 
 
 diff - - git a / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java b / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java 
 index 55b4fde . . f43c522 100644 
 - - - a / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java 
 + + + b / actor - apps / core / src / main / java / im / actor / model / util / ExponentialBackoff . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public class ExponentialBackoff { 
 
 public ExponentialBackoff ( int minDelay , 
 int maxDelay , 
 - int maxFailureCount ) { 
 + int maxFailureCount ) { 
 this . minDelay = minDelay ; 
 this . maxDelay = maxDelay ; 
 this . maxFailureCount = maxFailureCount ; 
 @ @ - 47 , 7 + 47 , 7 @ @ public class ExponentialBackoff { 
 * / 
 public void onFailure ( ) { 
 final int val = currentFailureCount . incrementAndGet ( ) ; 
 - if ( val > 50 ) { 
 + if ( val > maxFailureCount ) { 
 currentFailureCount . compareAndSet ( val , maxFailureCount ) ; 
 } 
 }
