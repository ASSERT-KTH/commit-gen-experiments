BLEU SCORE: 0.005918093729486186

TEST MSG: Merge commit ' 6a393996a6acd27ee7204bfc63b11071b067df84 '
GENERATED MSG: fix + feat ( iOS ) : add video send / play support + some fixes

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec b / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec < nl > index ed234eb . . 6335ca1 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec < nl > @ @ - 26 , 6 + 26 , 8 @ @ Pod : : Spec . new do | s | < nl > s . dependency ' SVProgressHUD ' < nl > s . dependency ' PSTAlertController ' < nl > s . dependency ' SZTextView ' < nl > + s . dependency ' SlackTextViewController ' < nl > + s . dependency ' NYTPhotoViewer ' < nl > s . dependency ' RSKImageCropper ' < nl > s . dependency ' JDStatusBarNotification ' < nl > s . dependency ' SDWebImage / WebP ' < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index d2e98dc . . 3b94877 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 284 , 7 + 284 , 6 @ @ < nl > 	 	 BED5A2111C48413C0045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2041C4839790045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 BED5A2121C48413C0045FDB0 / * NYTPhotoContainer . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2051C4839790045FDB0 / * NYTPhotoContainer . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 BED5A2131C48413C0045FDB0 / * NYTPhotosViewControllerDataSource . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > - 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / ; } ; < nl > 	 	 BEF11DB61C466D800076400A / * begin _ record . caf in Resources * / = { isa = PBXBuildFile ; fileRef = 153F6B3C1C2A9B1900C0B960 / * begin _ record . caf * / ; } ; < nl > 	 	 BEFE68D51C4657360001F2D6 / * AAThumbnailCollectionCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / ; } ; < nl > / * End PBXBuildFile section * / < nl > @ @ - 587 , 7 + 586 , 6 @ @ < nl > 	 	 BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = NYTPhotosViewControllerDataSource . h ; sourceTree = " < group > " ; } ; < nl > 	 	 BED5A20C1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = " NSBundle + NYTPhotoViewer . h " ; sourceTree = " < group > " ; } ; < nl > 	 	 BED5A20D1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " NSBundle + NYTPhotoViewer . m " ; sourceTree = " < group > " ; } ; < nl > - 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVideoCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAThumbnailCollectionCell . swift ; sourceTree = " < group > " ; } ; < nl > / * End PBXFileReference section * / < nl > < nl > @ @ - 1086 , 7 + 1084 , 6 @ @ < nl > 	 	 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / , < nl > 	 	 	 	 066A53261BC53406000E606E / * AABubbleTextCell . swift * / , < nl > 	 	 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / , < nl > - 	 	 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Cell ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1803 , 7 + 1800 , 6 @ @ < nl > 	 	 	 	 066A52E71BC52A20000E606E / * AAInviteLinkViewController . swift in Sources * / , < nl > 	 	 	 	 152AA8AD1C2989270030DEEE / * SLKTextView + SLKAdditions . m in Sources * / , < nl > 	 	 	 	 152AA8B71C2989270030DEEE / * UIScrollView + SLKAdditions . m in Sources * / , < nl > - 	 	 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / , < nl > 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , < nl > 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , < nl > 	 	 	 	 15D35F761C201B6B00E3717A / * AACustomPresentationAnimationController . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index 9bbb039 . . 6967ff1 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 430 , 7 + 430 , 7 @ @ < nl > < nl > " PhotoRemoveGroupMessage " = " Are you sure want to remove group photo ? Some members will be disappointed . " ; < nl > < nl > - " PhotoCamera " = " Take Photo or Video " ; < nl > + " PhotoCamera " = " Take Photo " ; < nl > < nl > " PhotoLibrary " = " Media Library " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json < nl > deleted file mode 100644 < nl > index da4a164 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json < nl > + + + / dev / null < nl > @ @ - 1 , 6 + 0 , 0 @ @ < nl > - { < nl > - " info " : { < nl > - " version " : 1 , < nl > - " author " : " xcode " < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json < nl > deleted file mode 100644 < nl > index 673c861 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json < nl > + + + / dev / null < nl > @ @ - 1 , 21 + 0 , 0 @ @ < nl > - { < nl > - " images " : [ < nl > - { < nl > - " idiom " : " universal " , < nl > - " scale " : " 1x " < nl > - } , < nl > - { < nl > - " idiom " : " universal " , < nl > - " filename " : " play102 ( 1 ) . png " , < nl > - " scale " : " 2x " < nl > - } , < nl > - { < nl > - " idiom " : " universal " , < nl > - " scale " : " 3x " < nl > - } < nl > - ] , < nl > - " info " : { < nl > - " version " : 1 , < nl > - " author " : " xcode " < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png < nl > deleted file mode 100644 < nl > index 905cd66 . . 0000000 < nl > Binary files a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png and / dev / null differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > index 74c48d6 . . 8eb1762 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > @ @ - 390 , 7 + 390 , 7 @ @ < nl > < nl > " PhotoRemoveGroupMessage " = " Voc ê tem certeza que quer to remover a foto do grupo ? Alguns membros poder ã o n ã o gostar . " ; < nl > < nl > - " PhotoCamera " = " Tirar Foto ou V í deo " ; < nl > + " PhotoCamera " = " Tirar Foto " ; < nl > < nl > " PhotoLibrary " = " Biblioteca de Midias " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > index f297325 . . ed98fec 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > @ @ - 400 , 9 + 400 , 9 @ @ < nl > < nl > " PhotoRemoveGroupMessage " = " В ы у в е р е н ы , ч т о х о т и т е у д а л и т ь ф о т о г р у п п ы ? " ; < nl > < nl > - " PhotoCamera " = " С н я т ь ф о т о / в и д е о " ; < nl > + " PhotoCamera " = " С н я т ь ф о т о " ; < nl > < nl > - " PhotoLibrary " = " В ы б р а т ь ф о т о / в и д е о " ; < nl > + " PhotoLibrary " = " Ф о т о а р х и в " ; < nl > < nl > " ShareLocation " = " М е с т о п о л о ж е н и е " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift < nl > index 0efb730 . . 006ea4f 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift < nl > @ @ - 51 , 20 + 51 , 12 @ @ public extension ACCocoaMessenger { < nl > var thumbnailTime = movieAsset . duration < nl > thumbnailTime . value = 25 < nl > < nl > - let orientation = movieAsset . videoOrientation ( ) < nl > - < nl > do { < nl > let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) < nl > let thumbnail = UIImage ( CGImage : imageRef ) < nl > - var thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; < nl > - let resized = thumbnail . resizeOptimize ( 1200 * 1200 ) ; < nl > - < nl > - if ( orientation . orientation . isPortrait ) = = true { < nl > - thumb = thumb . imageRotatedByDegrees ( 90 , flip : false ) < nl > - } < nl > - < nl > + let thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; < nl > let thumbData = UIImageJPEGRepresentation ( thumb , 0 . 55 ) ; / / thumbnail binary data < nl > - let fastThumb = ACFastThumb ( int : jint ( resized . size . width ) , withInt : jint ( resized . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) < nl > + let fastThumb = ACFastThumb ( int : jint ( thumb . size . width ) , withInt : jint ( thumb . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) < nl > < nl > print ( " video upload imageRef = \ ( imageRef ) " ) < nl > print ( " video upload thumbnail = \ ( thumbnail ) " ) < nl > @ @ - 74 , 12 + 66 , 7 @ @ public extension ACCocoaMessenger { < nl > print ( " video upload width = \ ( thumbnail . size . width ) " ) < nl > print ( " video upload height = \ ( thumbnail . size . height ) " ) < nl > < nl > - if ( orientation . orientation . isPortrait = = true ) { < nl > - sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . height / 2 ) , withH : jint ( thumbnail . size . width / 2 ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) < nl > - } else { < nl > - sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) < nl > - } < nl > - < nl > + sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) < nl > < nl > } catch { < nl > print ( " can ' t get thumbnail image " ) < nl > @ @ - 126 , 7 + 113 , 6 @ @ extension JavaUtilAbstractCollection : SequenceType { < nl > } < nl > } < nl > < nl > - < nl > public extension JavaUtilList { < nl > public func toSwiftArray < T > ( ) - > [ T ] { < nl > var res = [ T ] ( ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > index f412351 . . 240abba 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > @ @ - 14 , 11 + 14 , 9 @ @ class AABubbles { < nl > static let contactLayouter = AABubbleContactCellLayouter ( ) < nl > static let voiceLayouter = AABubbleVoiceCellLayouter ( ) < nl > static let stickerLayouter = AABubbleStickerCellLayouter ( ) < nl > - static let videoLayouter = AABubbleVideoCellLayouter ( ) < nl > < nl > static let builtInLayouters : [ AABubbleLayouter ] = [ < nl > serviceLayouter , < nl > - videoLayouter , < nl > mediaLayouter , < nl > voiceLayouter , < nl > stickerLayouter , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > index 88204aa . . 2fcd406 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > @ @ - 4 , 9 + 4 , 6 @ @ < nl > < nl > import Foundation < nl > import UIKit < nl > - import MediaPlayer < nl > - import AVKit < nl > - import AVFoundation < nl > < nl > public class AAConversationContentController : SLKTextViewController , ARDisplayList _ AppleChangeListener { < nl > < nl > @ @ - 372 , 15 + 369 , 4 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > < nl > } < nl > < nl > - func playVideoFromPath ( path : String ) { < nl > - < nl > - let player = AVPlayer ( URL : NSURL ( fileURLWithPath : path ) ) < nl > - let playerController = AVPlayerViewController ( ) < nl > - playerController . player = player < nl > - self . presentViewController ( playerController , animated : true ) { < nl > - player . play ( ) < nl > - } < nl > - < nl > - } < nl > - < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > index 6ad1144 . . c0a9ef2 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 23 , 7 + 23 , 7 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > public init ( frame : CGRect ) { < nl > super . init ( frame : frame , isFullSize : false ) < nl > < nl > - timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage < nl > + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) < nl > < nl > timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > timeLabel . textColor = appStyle . chatMediaDateColor < nl > @ @ - 144 , 8 + 144 , 7 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height / 2 - pin . image ! . size . height ) , < nl > pin . image ! . size . width , pin . image ! . size . height ) < nl > < nl > - timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) < nl > - < nl > + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > index bec6db4 . . 4c8d83a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > @ @ - 355 , 6 + 355 , 8 @ @ public class MediaCellLayout : AACellLayout { < nl > public convenience init ( message : ACMessage ) { < nl > if let content = message . content as ? ACPhotoContent { < nl > self . init ( id : Int64 ( message . rid ) , photoContent : content , date : Int64 ( message . date ) ) < nl > + } else if let content = message . content as ? ACVideoContent { < nl > + self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) < nl > } else { < nl > fatalError ( " Unsupported content for media cell " ) < nl > } < nl > @ @ - 369 , 8 + 371 , 9 @ @ public class AABubbleMediaCellLayouter : AABubbleLayouter { < nl > public func isSuitable ( message : ACMessage ) - > Bool { < nl > if message . content is ACPhotoContent { < nl > return true < nl > + } else if message . content is ACVideoContent { < nl > + return true < nl > } < nl > - < nl > return false < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > deleted file mode 100644 < nl > index cd9e1a8 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > + + + / dev / null < nl > @ @ - 1 , 399 + 0 , 0 @ @ < nl > - / / < nl > - / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > < nl > - / / < nl > - < nl > - import UIKit < nl > - import VBFPopFlatButton < nl > - import AVFoundation < nl > - < nl > - public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > - < nl > - / / Views < nl > - < nl > - let preview = UIImageView ( ) < nl > - let progress = AAProgressView ( size : CGSizeMake ( 64 , 64 ) ) < nl > - let timeBg = UIImageView ( ) < nl > - let timeLabel = UILabel ( ) < nl > - let statusView = UIImageView ( ) < nl > - let playView = UIImageView ( image : UIImage . bundled ( " aa _ playbutton " ) ) < nl > - < nl > - / / Binded data < nl > - < nl > - var bindedLayout : VideoCellLayout ! < nl > - var thumbLoaded = false < nl > - var contentLoaded = false < nl > - < nl > - / / Constructors < nl > - < nl > - public init ( frame : CGRect ) { < nl > - super . init ( frame : frame , isFullSize : false ) < nl > - < nl > - timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage < nl > - < nl > - timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > - timeLabel . textColor = appStyle . chatMediaDateColor < nl > - < nl > - statusView . contentMode = UIViewContentMode . Center < nl > - < nl > - contentView . addSubview ( preview ) < nl > - contentView . addSubview ( progress ) < nl > - < nl > - contentView . addSubview ( timeBg ) < nl > - contentView . addSubview ( timeLabel ) < nl > - contentView . addSubview ( statusView ) < nl > - contentView . addSubview ( playView ) < nl > - < nl > - preview . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) < nl > - preview . userInteractionEnabled = true < nl > - < nl > - playView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) < nl > - playView . userInteractionEnabled = true < nl > - < nl > - contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > - } < nl > - < nl > - public required init ( coder aDecoder : NSCoder ) { < nl > - fatalError ( " init ( coder : ) has not been implemented " ) < nl > - } < nl > - < nl > - / / Binding < nl > - < nl > - public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > - self . bindedLayout = cellLayout as ! VideoCellLayout < nl > - < nl > - bubbleInsets = UIEdgeInsets ( < nl > - top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , < nl > - left : 10 + ( AADevice . isiPad ? 16 : 0 ) , < nl > - bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , < nl > - right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > - < nl > - if ( ! reuse ) { < nl > - < nl > - / / Bind bubble < nl > - if ( self . isOut ) { < nl > - bindBubbleType ( BubbleType . MediaOut , isCompact : false ) < nl > - } else { < nl > - bindBubbleType ( BubbleType . MediaIn , isCompact : false ) < nl > - } < nl > - < nl > - / / Reset content state < nl > - self . preview . image = nil < nl > - contentLoaded = false < nl > - thumbLoaded = false < nl > - < nl > - / / Reset progress < nl > - self . progress . hideButton ( ) < nl > - UIView . animateWithDuration ( 0 , animations : { ( ) - > Void in < nl > - self . progress . alpha = 0 < nl > - self . preview . alpha = 0 < nl > - } ) < nl > - < nl > - / / Bind file < nl > - fileBind ( message , autoDownload : bindedLayout . autoDownload ) < nl > - } < nl > - < nl > - / / Update time < nl > - timeLabel . text = cellLayout . date < nl > - < nl > - / / Update status < nl > - if ( isOut ) { < nl > - statusView . hidden = false < nl > - switch ( UInt ( message . messageState . ordinal ( ) ) ) { < nl > - case ACMessageState . PENDING . rawValue : < nl > - self . statusView . image = appStyle . chatIconClock ; < nl > - self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > - break ; < nl > - case ACMessageState . SENT . rawValue : < nl > - self . statusView . image = appStyle . chatIconCheck1 ; < nl > - self . statusView . tintColor = appStyle . chatStatusMediaSent < nl > - break ; < nl > - case ACMessageState . RECEIVED . rawValue : < nl > - self . statusView . image = appStyle . chatIconCheck2 ; < nl > - self . statusView . tintColor = appStyle . chatStatusMediaReceived < nl > - break ; < nl > - case ACMessageState . READ . rawValue : < nl > - self . statusView . image = appStyle . chatIconCheck2 ; < nl > - self . statusView . tintColor = appStyle . chatStatusMediaRead < nl > - break ; < nl > - case ACMessageState . ERROR . rawValue : < nl > - self . statusView . image = appStyle . chatIconError ; < nl > - self . statusView . tintColor = appStyle . chatStatusMediaError < nl > - break < nl > - default : < nl > - self . statusView . image = appStyle . chatIconClock ; < nl > - self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > - break ; < nl > - } < nl > - } else { < nl > - statusView . hidden = true < nl > - } < nl > - } < nl > - < nl > - func applyBlurEffect ( image : UIImage ) - > UIImage { < nl > - let imageToBlur = CIImage ( image : image ) < nl > - let blurfilter = CIFilter ( name : " CIGaussianBlur " ) < nl > - blurfilter ! . setValue ( 5 , forKey : kCIInputRadiusKey ) < nl > - blurfilter ! . setValue ( imageToBlur , forKey : " inputImage " ) < nl > - let resultImage = blurfilter ! . valueForKey ( " outputImage " ) as ! CIImage < nl > - return UIImage ( CIImage : resultImage ) < nl > - } < nl > - < nl > - / / File state binding < nl > - < nl > - public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - self . progress . showView ( ) < nl > - self . playView . hideView ( ) < nl > - self . progress . setButtonType ( FlatButtonType . buttonUpBasicType , animated : true ) < nl > - self . progress . hideProgress ( ) < nl > - } < nl > - } < nl > - < nl > - public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - self . progress . showView ( ) < nl > - self . playView . hideView ( ) < nl > - self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) < nl > - self . progress . setProgress ( progress ) < nl > - } < nl > - } < nl > - < nl > - public override func fileDownloadPaused ( selfGeneration : Int ) { < nl > - bgLoadThumb ( selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - self . progress . showView ( ) < nl > - self . playView . hideView ( ) < nl > - self . progress . setButtonType ( FlatButtonType . buttonDownloadType , animated : true ) < nl > - self . progress . hideProgress ( ) < nl > - } < nl > - } < nl > - < nl > - public override func fileDownloading ( progress : Double , selfGeneration : Int ) { < nl > - bgLoadThumb ( selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - self . progress . showView ( ) < nl > - self . playView . hideView ( ) < nl > - self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) < nl > - self . progress . setProgress ( progress ) < nl > - } < nl > - } < nl > - < nl > - public override func fileReady ( reference : String , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - self . progress . setProgress ( 1 ) < nl > - self . progress . hideView ( ) < nl > - self . playView . showView ( ) < nl > - } < nl > - } < nl > - < nl > - public func bgLoadThumb ( selfGeneration : Int ) { < nl > - if ( thumbLoaded ) { < nl > - return < nl > - } < nl > - thumbLoaded = true < nl > - < nl > - if ( bindedLayout . fastThumb ! = nil ) { < nl > - let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? < nl > - . roundCorners ( bindedLayout . screenSize . width , < nl > - h : bindedLayout . screenSize . height , < nl > - roundSize : 14 ) < nl > - < nl > - runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > - self . setPreviewImage ( loadedThumb ! , fast : true ) < nl > - } ) ; < nl > - } < nl > - } < nl > - < nl > - public func bgLoadReference ( reference : String , selfGeneration : Int ) { < nl > - if ( contentLoaded ) { < nl > - return < nl > - } < nl > - contentLoaded = true < nl > - < nl > - < nl > - let movieAsset = AVAsset ( URL : NSURL ( fileURLWithPath : CocoaFiles . pathFromDescriptor ( reference ) ) ) / / video asset < nl > - let imageGenerator = AVAssetImageGenerator ( asset : movieAsset ) < nl > - var thumbnailTime = movieAsset . duration < nl > - thumbnailTime . value = 25 < nl > - < nl > - do { < nl > - < nl > - let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) < nl > - var thumbnail = UIImage ( CGImage : imageRef ) < nl > - < nl > - let orientation = movieAsset . videoOrientation ( ) < nl > - < nl > - if ( orientation . orientation . isPortrait ) = = true { < nl > - thumbnail = thumbnail . imageRotatedByDegrees ( 90 , flip : false ) < nl > - } < nl > - < nl > - let loadedContent = thumbnail . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) < nl > - < nl > - runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > - self . setPreviewImage ( loadedContent , fast : false ) < nl > - } ) < nl > - < nl > - } catch { < nl > - < nl > - } < nl > - < nl > - < nl > - } < nl > - < nl > - public func setPreviewImage ( img : UIImage , fast : Bool ) { < nl > - if ( ( fast & & self . preview . image = = nil ) | | ! fast ) { < nl > - self . preview . image = img < nl > - self . preview . showView ( ) < nl > - } < nl > - } < nl > - < nl > - / / Media Action < nl > - < nl > - public func mediaDidTap ( ) { < nl > - let content = bindedMessage ! . content as ! ACDocumentContent < nl > - if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { < nl > - Actor . requestStateWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) , withCallback : AAFileCallback ( < nl > - notDownloaded : { ( ) - > ( ) in < nl > - Actor . startDownloadingWithReference ( fileSource . getFileReference ( ) ) < nl > - } , onDownloading : { ( progress ) - > ( ) in < nl > - Actor . cancelDownloadingWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) ) < nl > - } , onDownloaded : { ( reference ) - > ( ) in < nl > - < nl > - self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) < nl > - < nl > - } ) ) < nl > - } else if let fileSource = content . getSource ( ) as ? ACFileLocalSource { < nl > - let rid = bindedMessage ! . rid < nl > - Actor . requestUploadStateWithRid ( rid , withCallback : AAUploadFileCallback ( < nl > - notUploaded : { ( ) - > ( ) in < nl > - Actor . resumeUploadWithRid ( rid ) < nl > - } , onUploading : { ( progress ) - > ( ) in < nl > - Actor . pauseUploadWithRid ( rid ) < nl > - } , onUploadedClosure : { ( ) - > ( ) in < nl > - < nl > - < nl > - self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) ) < nl > - < nl > - } ) ) < nl > - } < nl > - } < nl > - < nl > - / / Layouting < nl > - < nl > - public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > - let insets = fullContentInsets < nl > - let contentWidth = self . contentView . frame . width < nl > - _ = self . contentView . frame . height < nl > - let bubbleWidth = self . bindedLayout . screenSize . width < nl > - let bubbleHeight = self . bindedLayout . screenSize . height < nl > - < nl > - layoutBubble ( bubbleWidth , contentHeight : bubbleHeight ) < nl > - < nl > - if ( isOut ) { < nl > - preview . frame = CGRectMake ( contentWidth - insets . left - bubbleWidth , insets . top , bubbleWidth , bubbleHeight ) < nl > - } else { < nl > - preview . frame = CGRectMake ( insets . left , insets . top , bubbleWidth , bubbleHeight ) < nl > - } < nl > - < nl > - progress . frame = CGRectMake ( preview . frame . origin . x + preview . frame . width / 2 - 32 , preview . frame . origin . y + preview . frame . height / 2 - 32 , 64 , 64 ) < nl > - < nl > - playView . frame = progress . frame < nl > - < nl > - timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) < nl > - timeLabel . sizeToFit ( ) < nl > - < nl > - let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width < nl > - let timeHeight : CGFloat = 20 < nl > - < nl > - timeLabel . frame = CGRectMake ( preview . frame . maxX - timeWidth - 18 , preview . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) < nl > - < nl > - if ( isOut ) { < nl > - statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) < nl > - } < nl > - < nl > - timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) < nl > - } < nl > - < nl > - < nl > - } < nl > - < nl > - public class VideoCellLayout : AACellLayout { < nl > - < nl > - public let fastThumb : NSData ? < nl > - public let contentSize : CGSize < nl > - public let screenSize : CGSize < nl > - public let autoDownload : Bool < nl > - < nl > - / * * < nl > - Creting layout for media bubble < nl > - * / < nl > - public init ( id : Int64 , width : CGFloat , height : CGFloat , date : Int64 , fastThumb : ACFastThumb ? , autoDownload : Bool ) { < nl > - < nl > - / / Saving content size < nl > - self . contentSize = CGSizeMake ( width , height ) < nl > - < nl > - / / Saving autodownload flag < nl > - self . autoDownload = autoDownload < nl > - < nl > - / / Calculating bubble screen size < nl > - let scaleW = 240 / width < nl > - let scaleH = 240 / height < nl > - let scale = min ( scaleW , scaleH ) < nl > - self . screenSize = CGSize ( width : scale * width , height : scale * height ) < nl > - < nl > - / / Prepare fast thumb < nl > - print ( " video thumb = = = \ ( fastThumb ? . getImage ( ) . toNSData ( ) ) " ) < nl > - < nl > - self . fastThumb = fastThumb ? . getImage ( ) . toNSData ( ) < nl > - < nl > - / / Creating layout < nl > - super . init ( height : self . screenSize . height + 2 , date : date , key : " media " ) < nl > - } < nl > - < nl > - < nl > - / * * < nl > - Creating layout for video content < nl > - * / < nl > - public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 ) { < nl > - self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : true ) < nl > - } < nl > - < nl > - / * * < nl > - Creating layout for message < nl > - * / < nl > - public convenience init ( message : ACMessage ) { < nl > - if let content = message . content as ? ACVideoContent { < nl > - self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) < nl > - } else { < nl > - fatalError ( " Unsupported content for media cell " ) < nl > - } < nl > - } < nl > - } < nl > - < nl > - < nl > - < nl > - public class AABubbleVideoCellLayouter : AABubbleLayouter { < nl > - < nl > - public func isSuitable ( message : ACMessage ) - > Bool { < nl > - if message . content is ACVideoContent { < nl > - return true < nl > - } < nl > - return false < nl > - } < nl > - < nl > - public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { < nl > - return VideoCellLayout ( message : message ) < nl > - } < nl > - < nl > - public func cellClass ( ) - > AnyClass { < nl > - return AABubbleVideoCell . self < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > index 018c044 . . 5a9d5ba 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > @ @ - 9 , 10 + 9 , 16 @ @ < nl > import UIKit < nl > import Photos < nl > < nl > + protocol AAActionSheetDelegate { < nl > + func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) < nl > + } < nl > + < nl > let screenWidth = UIScreen . mainScreen ( ) . bounds . size . width < nl > let screenHeigth = UIScreen . mainScreen ( ) . bounds . size . height < nl > < nl > class AAConvActionSheet : UIView { < nl > + < nl > + var delegate : AAActionSheetDelegate ? < nl > < nl > var sheetView : UIView ! < nl > < nl > @ @ - 98 , 6 + 104 , 7 @ @ class AAConvActionSheet : UIView { < nl > < nl > self . thumbnailView . selectedAssets = [ PHAsset ] ( ) < nl > self . thumbnailView . reloadView ( ) < nl > + self . thumbnailView . collectionView . scrollToItemAtIndexPath ( NSIndexPath ( forRow : 0 , inSection : 0 ) , atScrollPosition : UICollectionViewScrollPosition . None , animated : false ) < nl > self . updateSelectedPhotos ( ) < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 8b6732b . . a53d43c 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 10 , 7 + 10 , 7 @ @ import AddressBookUI < nl > import SVProgressHUD < nl > < nl > class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate , < nl > - ABPeoplePickerNavigationControllerDelegate { < nl > + ABPeoplePickerNavigationControllerDelegate , AAActionSheetDelegate { < nl > < nl > / / Data binder < nl > private let binder = AABinder ( ) < nl > @ @ - 296 , 6 + 296 , 8 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > / / action sheet < nl > < nl > self . actionSheet = AAConvActionSheet ( maxSelected : 9 , weakSuperIn : self ) < nl > + self . actionSheet . delegate = self < nl > + / / self . navigationController ! . view . addSubview ( self . actionSheet ) < nl > < nl > self . navigationController ? . view . addSubview ( self . actionSheet ) < nl > } < nl > @ @ - 461 , 6 + 463 , 36 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > < nl > self . textInputbar . textView . resignFirstResponder ( ) < nl > < nl > + / / let hasCamera = UIImagePickerController . isSourceTypeAvailable ( UIImagePickerControllerSourceType . Camera ) < nl > + / / < nl > + / / let builder = AAMenuBuilder ( ) < nl > + / / < nl > + / / if hasCamera { < nl > + / / builder . add ( " PhotoCamera " ) { < nl > + / / self . pickImage ( . Camera ) < nl > + / / } < nl > + / / } < nl > + / / < nl > + / / builder . add ( " PhotoLibrary " ) { < nl > + / / self . pickImage ( . PhotoLibrary ) < nl > + / / } < nl > + / / < nl > + / / if ( NSFileManager . defaultManager ( ) . ubiquityIdentityToken ! = nil ) { < nl > + / / builder . add ( " SendDocument " ) { < nl > + / / self . pickDocument ( ) < nl > + / / } < nl > + / / } < nl > + / / < nl > + / / builder . add ( " ShareLocation " ) { < nl > + / / self . pickLocation ( ) < nl > + / / } < nl > + / / < nl > + / / builder . add ( " ShareContact " ) { < nl > + / / self . pickContact ( ) < nl > + / / } < nl > + / / < nl > + / / showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) < nl > + < nl > self . actionSheet . showAnimation ( ) < nl > < nl > self . rightButton . layoutIfNeeded ( ) < nl > @ @ - 580 , 7 + 612 , 7 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > func pickImage ( source : UIImagePickerControllerSourceType ) { < nl > let pickerController = AAImagePickerController ( ) < nl > pickerController . sourceType = source < nl > - pickerController . mediaTypes = [ kUTTypeImage as String , kUTTypeMovie as String ] < nl > + pickerController . mediaTypes = [ kUTTypeImage as String ] < nl > < nl > / / [ kUTTypeImage as String , kUTTypeMovie as String ] < nl > < nl > @ @ - 798 , 6 + 830 , 11 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > Actor . sendStickerWithPeer ( self . peer , withSticker : sticker ) < nl > < nl > } < nl > - < nl > + < nl > + / / / < nl > + < nl > + func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) { < nl > + < nl > + } < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift < nl > index f6e12de . . 95d8f0d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift < nl > @ @ - 357 , 48 + 357 , 4 @ @ public extension UIImage { < nl > } < nl > } < nl > < nl > - extension UIImage { < nl > - public func imageRotatedByDegrees ( degrees : CGFloat , flip : Bool ) - > UIImage { < nl > - let radiansToDegrees : ( CGFloat ) - > CGFloat = { < nl > - return $ 0 * ( 180 . 0 / CGFloat ( M _ PI ) ) < nl > - } < nl > - let degreesToRadians : ( CGFloat ) - > CGFloat = { < nl > - return $ 0 / 180 . 0 * CGFloat ( M _ PI ) < nl > - } < nl > - < nl > - / / calculate the size of the rotated view ' s containing box for our drawing space < nl > - let rotatedViewBox = UIView ( frame : CGRect ( origin : CGPointZero , size : size ) ) < nl > - let t = CGAffineTransformMakeRotation ( degreesToRadians ( degrees ) ) ; < nl > - rotatedViewBox . transform = t < nl > - let rotatedSize = rotatedViewBox . frame . size < nl > - < nl > - / / Create the bitmap context < nl > - UIGraphicsBeginImageContext ( rotatedSize ) < nl > - let bitmap = UIGraphicsGetCurrentContext ( ) < nl > - < nl > - / / Move the origin to the middle of the image so we will rotate and scale around the center . < nl > - CGContextTranslateCTM ( bitmap , rotatedSize . width / 2 . 0 , rotatedSize . height / 2 . 0 ) ; < nl > - < nl > - / / / / Rotate the image context < nl > - CGContextRotateCTM ( bitmap , degreesToRadians ( degrees ) ) ; < nl > - < nl > - / / Now , draw the rotated / scaled image into the context < nl > - var yFlip : CGFloat < nl > - < nl > - if ( flip ) { < nl > - yFlip = CGFloat ( - 1 . 0 ) < nl > - } else { < nl > - yFlip = CGFloat ( 1 . 0 ) < nl > - } < nl > - < nl > - CGContextScaleCTM ( bitmap , yFlip , - 1 . 0 ) < nl > - CGContextDrawImage ( bitmap , CGRectMake ( - size . width / 2 , - size . height / 2 , size . width , size . height ) , CGImage ) < nl > - < nl > - let newImage = UIGraphicsGetImageFromCurrentImageContext ( ) < nl > - UIGraphicsEndImageContext ( ) < nl > - < nl > - return newImage < nl > - } < nl > - } < nl > - < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > index 174abb5 . . f2c6164 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > @ @ - 3 , 7 + 3 , 6 @ @ < nl > / / < nl > < nl > import Foundation < nl > - import AVFoundation < nl > < nl > / / Closure based tap on views < nl > < nl > @ @ - 324 , 57 + 323 , 4 @ @ extension UINavigationBar { < nl > < nl > return nil < nl > } < nl > - } < nl > - < nl > - extension AVAsset { < nl > - < nl > - func videoOrientation ( ) - > ( orientation : UIInterfaceOrientation , device : AVCaptureDevicePosition ) { < nl > - var orientation : UIInterfaceOrientation = . Unknown < nl > - var device : AVCaptureDevicePosition = . Unspecified < nl > - < nl > - let tracks : [ AVAssetTrack ] = self . tracksWithMediaType ( AVMediaTypeVideo ) < nl > - if let videoTrack = tracks . first { < nl > - < nl > - let t = videoTrack . preferredTransform < nl > - < nl > - if ( t . a = = 0 & & t . b = = 1 . 0 & & t . d = = 0 ) { < nl > - orientation = . Portrait < nl > - < nl > - if t . c = = 1 . 0 { < nl > - device = . Front < nl > - } else if t . c = = - 1 . 0 { < nl > - device = . Back < nl > - } < nl > - } < nl > - else if ( t . a = = 0 & & t . b = = - 1 . 0 & & t . d = = 0 ) { < nl > - orientation = . PortraitUpsideDown < nl > - < nl > - if t . c = = - 1 . 0 { < nl > - device = . Front < nl > - } else if t . c = = 1 . 0 { < nl > - device = . Back < nl > - } < nl > - } < nl > - else if ( t . a = = 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { < nl > - orientation = . LandscapeRight < nl > - < nl > - if t . d = = - 1 . 0 { < nl > - device = . Front < nl > - } else if t . d = = 1 . 0 { < nl > - device = . Back < nl > - } < nl > - } < nl > - else if ( t . a = = - 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { < nl > - orientation = . LandscapeLeft < nl > - < nl > - if t . d = = 1 . 0 { < nl > - device = . Front < nl > - } else if t . d = = - 1 . 0 { < nl > - device = . Back < nl > - } < nl > - } < nl > - } < nl > - < nl > - return ( orientation , device ) < nl > - } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - server / version . sbt b / actor - server / version . sbt < nl > index 982ec62 . . 70bfee3 100644 < nl > - - - a / actor - server / version . sbt < nl > + + + b / actor - server / version . sbt < nl > @ @ - 1 + 1 @ @ < nl > - version in ThisBuild : = " 1 . 0 . 103 - SNAPSHOT " < nl > \ No newline at end of file < nl > + version in ThisBuild : = " 1 . 0 . 102 " < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 3b94877 . . d2e98dc 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 284 , 6 + 284 , 7 @ @ < nl > 	 	 BED5A2111C48413C0045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2041C4839790045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 BED5A2121C48413C0045FDB0 / * NYTPhotoContainer . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2051C4839790045FDB0 / * NYTPhotoContainer . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 BED5A2131C48413C0045FDB0 / * NYTPhotosViewControllerDataSource . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > + 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / ; } ; < nl > 	 	 BEF11DB61C466D800076400A / * begin _ record . caf in Resources * / = { isa = PBXBuildFile ; fileRef = 153F6B3C1C2A9B1900C0B960 / * begin _ record . caf * / ; } ; < nl > 	 	 BEFE68D51C4657360001F2D6 / * AAThumbnailCollectionCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / ; } ; < nl > / * End PBXBuildFile section * / < nl > @ @ - 586 , 6 + 587 , 7 @ @ < nl > 	 	 BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = NYTPhotosViewControllerDataSource . h ; sourceTree = " < group > " ; } ; < nl > 	 	 BED5A20C1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = " NSBundle + NYTPhotoViewer . h " ; sourceTree = " < group > " ; } ; < nl > 	 	 BED5A20D1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " NSBundle + NYTPhotoViewer . m " ; sourceTree = " < group > " ; } ; < nl > + 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVideoCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAThumbnailCollectionCell . swift ; sourceTree = " < group > " ; } ; < nl > / * End PBXFileReference section * / < nl > < nl > @ @ - 1084 , 6 + 1086 , 7 @ @ < nl > 	 	 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / , < nl > 	 	 	 	 066A53261BC53406000E606E / * AABubbleTextCell . swift * / , < nl > 	 	 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / , < nl > + 	 	 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Cell ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1800 , 6 + 1803 , 7 @ @ < nl > 	 	 	 	 066A52E71BC52A20000E606E / * AAInviteLinkViewController . swift in Sources * / , < nl > 	 	 	 	 152AA8AD1C2989270030DEEE / * SLKTextView + SLKAdditions . m in Sources * / , < nl > 	 	 	 	 152AA8B71C2989270030DEEE / * UIScrollView + SLKAdditions . m in Sources * / , < nl > + 	 	 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / , < nl > 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , < nl > 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , < nl > 	 	 	 	 15D35F761C201B6B00E3717A / * AACustomPresentationAnimationController . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index 6967ff1 . . 9bbb039 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 430 , 7 + 430 , 7 @ @ < nl > < nl > " PhotoRemoveGroupMessage " = " Are you sure want to remove group photo ? Some members will be disappointed . " ; < nl > < nl > - " PhotoCamera " = " Take Photo " ; < nl > + " PhotoCamera " = " Take Photo or Video " ; < nl > < nl > " PhotoLibrary " = " Media Library " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . da4a164 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json < nl > @ @ - 0 , 0 + 1 , 6 @ @ < nl > + { < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 673c861 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " play102 ( 1 ) . png " , < nl > + " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " scale " : " 3x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png < nl > new file mode 100644 < nl > index 0000000 . . 905cd66 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > index 8eb1762 . . 74c48d6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > @ @ - 390 , 7 + 390 , 7 @ @ < nl > < nl > " PhotoRemoveGroupMessage " = " Voc ê tem certeza que quer to remover a foto do grupo ? Alguns membros poder ã o n ã o gostar . " ; < nl > < nl > - " PhotoCamera " = " Tirar Foto " ; < nl > + " PhotoCamera " = " Tirar Foto ou V í deo " ; < nl > < nl > " PhotoLibrary " = " Biblioteca de Midias " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > index ed98fec . . f297325 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > @ @ - 400 , 9 + 400 , 9 @ @ < nl > < nl > " PhotoRemoveGroupMessage " = " В ы у в е р е н ы , ч т о х о т и т е у д а л и т ь ф о т о г р у п п ы ? " ; < nl > < nl > - " PhotoCamera " = " С н я т ь ф о т о " ; < nl > + " PhotoCamera " = " С н я т ь ф о т о / в и д е о " ; < nl > < nl > - " PhotoLibrary " = " Ф о т о а р х и в " ; < nl > + " PhotoLibrary " = " В ы б р а т ь ф о т о / в и д е о " ; < nl > < nl > " ShareLocation " = " М е с т о п о л о ж е н и е " ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift < nl > index 006ea4f . . 0efb730 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift < nl > @ @ - 51 , 12 + 51 , 20 @ @ public extension ACCocoaMessenger { < nl > var thumbnailTime = movieAsset . duration < nl > thumbnailTime . value = 25 < nl > < nl > + let orientation = movieAsset . videoOrientation ( ) < nl > + < nl > do { < nl > let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) < nl > let thumbnail = UIImage ( CGImage : imageRef ) < nl > - let thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; < nl > + var thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; < nl > + let resized = thumbnail . resizeOptimize ( 1200 * 1200 ) ; < nl > + < nl > + if ( orientation . orientation . isPortrait ) = = true { < nl > + thumb = thumb . imageRotatedByDegrees ( 90 , flip : false ) < nl > + } < nl > + < nl > let thumbData = UIImageJPEGRepresentation ( thumb , 0 . 55 ) ; / / thumbnail binary data < nl > - let fastThumb = ACFastThumb ( int : jint ( thumb . size . width ) , withInt : jint ( thumb . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) < nl > + let fastThumb = ACFastThumb ( int : jint ( resized . size . width ) , withInt : jint ( resized . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) < nl > < nl > print ( " video upload imageRef = \ ( imageRef ) " ) < nl > print ( " video upload thumbnail = \ ( thumbnail ) " ) < nl > @ @ - 66 , 7 + 74 , 12 @ @ public extension ACCocoaMessenger { < nl > print ( " video upload width = \ ( thumbnail . size . width ) " ) < nl > print ( " video upload height = \ ( thumbnail . size . height ) " ) < nl > < nl > - sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) < nl > + if ( orientation . orientation . isPortrait = = true ) { < nl > + sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . height / 2 ) , withH : jint ( thumbnail . size . width / 2 ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) < nl > + } else { < nl > + sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) < nl > + } < nl > + < nl > < nl > } catch { < nl > print ( " can ' t get thumbnail image " ) < nl > @ @ - 113 , 6 + 126 , 7 @ @ extension JavaUtilAbstractCollection : SequenceType { < nl > } < nl > } < nl > < nl > + < nl > public extension JavaUtilList { < nl > public func toSwiftArray < T > ( ) - > [ T ] { < nl > var res = [ T ] ( ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > index 240abba . . f412351 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > @ @ - 14 , 9 + 14 , 11 @ @ class AABubbles { < nl > static let contactLayouter = AABubbleContactCellLayouter ( ) < nl > static let voiceLayouter = AABubbleVoiceCellLayouter ( ) < nl > static let stickerLayouter = AABubbleStickerCellLayouter ( ) < nl > + static let videoLayouter = AABubbleVideoCellLayouter ( ) < nl > < nl > static let builtInLayouters : [ AABubbleLayouter ] = [ < nl > serviceLayouter , < nl > + videoLayouter , < nl > mediaLayouter , < nl > voiceLayouter , < nl > stickerLayouter , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > index 2fcd406 . . 88204aa 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > @ @ - 4 , 6 + 4 , 9 @ @ < nl > < nl > import Foundation < nl > import UIKit < nl > + import MediaPlayer < nl > + import AVKit < nl > + import AVFoundation < nl > < nl > public class AAConversationContentController : SLKTextViewController , ARDisplayList _ AppleChangeListener { < nl > < nl > @ @ - 369 , 4 + 372 , 15 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > < nl > } < nl > < nl > + func playVideoFromPath ( path : String ) { < nl > + < nl > + let player = AVPlayer ( URL : NSURL ( fileURLWithPath : path ) ) < nl > + let playerController = AVPlayerViewController ( ) < nl > + playerController . player = player < nl > + self . presentViewController ( playerController , animated : true ) { < nl > + player . play ( ) < nl > + } < nl > + < nl > + } < nl > + < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > index c0a9ef2 . . 6ad1144 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 23 , 7 + 23 , 7 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > public init ( frame : CGRect ) { < nl > super . init ( frame : frame , isFullSize : false ) < nl > < nl > - timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) < nl > + timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage < nl > < nl > timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > timeLabel . textColor = appStyle . chatMediaDateColor < nl > @ @ - 144 , 7 + 144 , 8 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height / 2 - pin . image ! . size . height ) , < nl > pin . image ! . size . width , pin . image ! . size . height ) < nl > < nl > - timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) < nl > + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) < nl > + < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > index 4c8d83a . . bec6db4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > @ @ - 355 , 8 + 355 , 6 @ @ public class MediaCellLayout : AACellLayout { < nl > public convenience init ( message : ACMessage ) { < nl > if let content = message . content as ? ACPhotoContent { < nl > self . init ( id : Int64 ( message . rid ) , photoContent : content , date : Int64 ( message . date ) ) < nl > - } else if let content = message . content as ? ACVideoContent { < nl > - self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) < nl > } else { < nl > fatalError ( " Unsupported content for media cell " ) < nl > } < nl > @ @ - 371 , 9 + 369 , 8 @ @ public class AABubbleMediaCellLayouter : AABubbleLayouter { < nl > public func isSuitable ( message : ACMessage ) - > Bool { < nl > if message . content is ACPhotoContent { < nl > return true < nl > - } else if message . content is ACVideoContent { < nl > - return true < nl > } < nl > + < nl > return false < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > new file mode 100644 < nl > index 0000000 . . cd9e1a8 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > @ @ - 0 , 0 + 1 , 399 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import UIKit < nl > + import VBFPopFlatButton < nl > + import AVFoundation < nl > + < nl > + public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > + < nl > + / / Views < nl > + < nl > + let preview = UIImageView ( ) < nl > + let progress = AAProgressView ( size : CGSizeMake ( 64 , 64 ) ) < nl > + let timeBg = UIImageView ( ) < nl > + let timeLabel = UILabel ( ) < nl > + let statusView = UIImageView ( ) < nl > + let playView = UIImageView ( image : UIImage . bundled ( " aa _ playbutton " ) ) < nl > + < nl > + / / Binded data < nl > + < nl > + var bindedLayout : VideoCellLayout ! < nl > + var thumbLoaded = false < nl > + var contentLoaded = false < nl > + < nl > + / / Constructors < nl > + < nl > + public init ( frame : CGRect ) { < nl > + super . init ( frame : frame , isFullSize : false ) < nl > + < nl > + timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage < nl > + < nl > + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > + timeLabel . textColor = appStyle . chatMediaDateColor < nl > + < nl > + statusView . contentMode = UIViewContentMode . Center < nl > + < nl > + contentView . addSubview ( preview ) < nl > + contentView . addSubview ( progress ) < nl > + < nl > + contentView . addSubview ( timeBg ) < nl > + contentView . addSubview ( timeLabel ) < nl > + contentView . addSubview ( statusView ) < nl > + contentView . addSubview ( playView ) < nl > + < nl > + preview . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) < nl > + preview . userInteractionEnabled = true < nl > + < nl > + playView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) < nl > + playView . userInteractionEnabled = true < nl > + < nl > + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + / / Binding < nl > + < nl > + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > + self . bindedLayout = cellLayout as ! VideoCellLayout < nl > + < nl > + bubbleInsets = UIEdgeInsets ( < nl > + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , < nl > + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , < nl > + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , < nl > + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > + < nl > + if ( ! reuse ) { < nl > + < nl > + / / Bind bubble < nl > + if ( self . isOut ) { < nl > + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) < nl > + } else { < nl > + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) < nl > + } < nl > + < nl > + / / Reset content state < nl > + self . preview . image = nil < nl > + contentLoaded = false < nl > + thumbLoaded = false < nl > + < nl > + / / Reset progress < nl > + self . progress . hideButton ( ) < nl > + UIView . animateWithDuration ( 0 , animations : { ( ) - > Void in < nl > + self . progress . alpha = 0 < nl > + self . preview . alpha = 0 < nl > + } ) < nl > + < nl > + / / Bind file < nl > + fileBind ( message , autoDownload : bindedLayout . autoDownload ) < nl > + } < nl > + < nl > + / / Update time < nl > + timeLabel . text = cellLayout . date < nl > + < nl > + / / Update status < nl > + if ( isOut ) { < nl > + statusView . hidden = false < nl > + switch ( UInt ( message . messageState . ordinal ( ) ) ) { < nl > + case ACMessageState . PENDING . rawValue : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + case ACMessageState . SENT . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck1 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSent < nl > + break ; < nl > + case ACMessageState . RECEIVED . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaReceived < nl > + break ; < nl > + case ACMessageState . READ . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaRead < nl > + break ; < nl > + case ACMessageState . ERROR . rawValue : < nl > + self . statusView . image = appStyle . chatIconError ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaError < nl > + break < nl > + default : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + } < nl > + } else { < nl > + statusView . hidden = true < nl > + } < nl > + } < nl > + < nl > + func applyBlurEffect ( image : UIImage ) - > UIImage { < nl > + let imageToBlur = CIImage ( image : image ) < nl > + let blurfilter = CIFilter ( name : " CIGaussianBlur " ) < nl > + blurfilter ! . setValue ( 5 , forKey : kCIInputRadiusKey ) < nl > + blurfilter ! . setValue ( imageToBlur , forKey : " inputImage " ) < nl > + let resultImage = blurfilter ! . valueForKey ( " outputImage " ) as ! CIImage < nl > + return UIImage ( CIImage : resultImage ) < nl > + } < nl > + < nl > + / / File state binding < nl > + < nl > + public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { < nl > + bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > + < nl > + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > + self . progress . showView ( ) < nl > + self . playView . hideView ( ) < nl > + self . progress . setButtonType ( FlatButtonType . buttonUpBasicType , animated : true ) < nl > + self . progress . hideProgress ( ) < nl > + } < nl > + } < nl > + < nl > + public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { < nl > + bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > + < nl > + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > + self . progress . showView ( ) < nl > + self . playView . hideView ( ) < nl > + self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) < nl > + self . progress . setProgress ( progress ) < nl > + } < nl > + } < nl > + < nl > + public override func fileDownloadPaused ( selfGeneration : Int ) { < nl > + bgLoadThumb ( selfGeneration ) < nl > + < nl > + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > + self . progress . showView ( ) < nl > + self . playView . hideView ( ) < nl > + self . progress . setButtonType ( FlatButtonType . buttonDownloadType , animated : true ) < nl > + self . progress . hideProgress ( ) < nl > + } < nl > + } < nl > + < nl > + public override func fileDownloading ( progress : Double , selfGeneration : Int ) { < nl > + bgLoadThumb ( selfGeneration ) < nl > + < nl > + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > + self . progress . showView ( ) < nl > + self . playView . hideView ( ) < nl > + self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) < nl > + self . progress . setProgress ( progress ) < nl > + } < nl > + } < nl > + < nl > + public override func fileReady ( reference : String , selfGeneration : Int ) { < nl > + bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > + < nl > + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > + self . progress . setProgress ( 1 ) < nl > + self . progress . hideView ( ) < nl > + self . playView . showView ( ) < nl > + } < nl > + } < nl > + < nl > + public func bgLoadThumb ( selfGeneration : Int ) { < nl > + if ( thumbLoaded ) { < nl > + return < nl > + } < nl > + thumbLoaded = true < nl > + < nl > + if ( bindedLayout . fastThumb ! = nil ) { < nl > + let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? < nl > + . roundCorners ( bindedLayout . screenSize . width , < nl > + h : bindedLayout . screenSize . height , < nl > + roundSize : 14 ) < nl > + < nl > + runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > + self . setPreviewImage ( loadedThumb ! , fast : true ) < nl > + } ) ; < nl > + } < nl > + } < nl > + < nl > + public func bgLoadReference ( reference : String , selfGeneration : Int ) { < nl > + if ( contentLoaded ) { < nl > + return < nl > + } < nl > + contentLoaded = true < nl > + < nl > + < nl > + let movieAsset = AVAsset ( URL : NSURL ( fileURLWithPath : CocoaFiles . pathFromDescriptor ( reference ) ) ) / / video asset < nl > + let imageGenerator = AVAssetImageGenerator ( asset : movieAsset ) < nl > + var thumbnailTime = movieAsset . duration < nl > + thumbnailTime . value = 25 < nl > + < nl > + do { < nl > + < nl > + let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) < nl > + var thumbnail = UIImage ( CGImage : imageRef ) < nl > + < nl > + let orientation = movieAsset . videoOrientation ( ) < nl > + < nl > + if ( orientation . orientation . isPortrait ) = = true { < nl > + thumbnail = thumbnail . imageRotatedByDegrees ( 90 , flip : false ) < nl > + } < nl > + < nl > + let loadedContent = thumbnail . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) < nl > + < nl > + runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > + self . setPreviewImage ( loadedContent , fast : false ) < nl > + } ) < nl > + < nl > + } catch { < nl > + < nl > + } < nl > + < nl > + < nl > + } < nl > + < nl > + public func setPreviewImage ( img : UIImage , fast : Bool ) { < nl > + if ( ( fast & & self . preview . image = = nil ) | | ! fast ) { < nl > + self . preview . image = img < nl > + self . preview . showView ( ) < nl > + } < nl > + } < nl > + < nl > + / / Media Action < nl > + < nl > + public func mediaDidTap ( ) { < nl > + let content = bindedMessage ! . content as ! ACDocumentContent < nl > + if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { < nl > + Actor . requestStateWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) , withCallback : AAFileCallback ( < nl > + notDownloaded : { ( ) - > ( ) in < nl > + Actor . startDownloadingWithReference ( fileSource . getFileReference ( ) ) < nl > + } , onDownloading : { ( progress ) - > ( ) in < nl > + Actor . cancelDownloadingWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) ) < nl > + } , onDownloaded : { ( reference ) - > ( ) in < nl > + < nl > + self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) < nl > + < nl > + } ) ) < nl > + } else if let fileSource = content . getSource ( ) as ? ACFileLocalSource { < nl > + let rid = bindedMessage ! . rid < nl > + Actor . requestUploadStateWithRid ( rid , withCallback : AAUploadFileCallback ( < nl > + notUploaded : { ( ) - > ( ) in < nl > + Actor . resumeUploadWithRid ( rid ) < nl > + } , onUploading : { ( progress ) - > ( ) in < nl > + Actor . pauseUploadWithRid ( rid ) < nl > + } , onUploadedClosure : { ( ) - > ( ) in < nl > + < nl > + < nl > + self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) ) < nl > + < nl > + } ) ) < nl > + } < nl > + } < nl > + < nl > + / / Layouting < nl > + < nl > + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > + let insets = fullContentInsets < nl > + let contentWidth = self . contentView . frame . width < nl > + _ = self . contentView . frame . height < nl > + let bubbleWidth = self . bindedLayout . screenSize . width < nl > + let bubbleHeight = self . bindedLayout . screenSize . height < nl > + < nl > + layoutBubble ( bubbleWidth , contentHeight : bubbleHeight ) < nl > + < nl > + if ( isOut ) { < nl > + preview . frame = CGRectMake ( contentWidth - insets . left - bubbleWidth , insets . top , bubbleWidth , bubbleHeight ) < nl > + } else { < nl > + preview . frame = CGRectMake ( insets . left , insets . top , bubbleWidth , bubbleHeight ) < nl > + } < nl > + < nl > + progress . frame = CGRectMake ( preview . frame . origin . x + preview . frame . width / 2 - 32 , preview . frame . origin . y + preview . frame . height / 2 - 32 , 64 , 64 ) < nl > + < nl > + playView . frame = progress . frame < nl > + < nl > + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) < nl > + timeLabel . sizeToFit ( ) < nl > + < nl > + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width < nl > + let timeHeight : CGFloat = 20 < nl > + < nl > + timeLabel . frame = CGRectMake ( preview . frame . maxX - timeWidth - 18 , preview . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) < nl > + < nl > + if ( isOut ) { < nl > + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) < nl > + } < nl > + < nl > + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) < nl > + } < nl > + < nl > + < nl > + } < nl > + < nl > + public class VideoCellLayout : AACellLayout { < nl > + < nl > + public let fastThumb : NSData ? < nl > + public let contentSize : CGSize < nl > + public let screenSize : CGSize < nl > + public let autoDownload : Bool < nl > + < nl > + / * * < nl > + Creting layout for media bubble < nl > + * / < nl > + public init ( id : Int64 , width : CGFloat , height : CGFloat , date : Int64 , fastThumb : ACFastThumb ? , autoDownload : Bool ) { < nl > + < nl > + / / Saving content size < nl > + self . contentSize = CGSizeMake ( width , height ) < nl > + < nl > + / / Saving autodownload flag < nl > + self . autoDownload = autoDownload < nl > + < nl > + / / Calculating bubble screen size < nl > + let scaleW = 240 / width < nl > + let scaleH = 240 / height < nl > + let scale = min ( scaleW , scaleH ) < nl > + self . screenSize = CGSize ( width : scale * width , height : scale * height ) < nl > + < nl > + / / Prepare fast thumb < nl > + print ( " video thumb = = = \ ( fastThumb ? . getImage ( ) . toNSData ( ) ) " ) < nl > + < nl > + self . fastThumb = fastThumb ? . getImage ( ) . toNSData ( ) < nl > + < nl > + / / Creating layout < nl > + super . init ( height : self . screenSize . height + 2 , date : date , key : " media " ) < nl > + } < nl > + < nl > + < nl > + / * * < nl > + Creating layout for video content < nl > + * / < nl > + public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 ) { < nl > + self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : true ) < nl > + } < nl > + < nl > + / * * < nl > + Creating layout for message < nl > + * / < nl > + public convenience init ( message : ACMessage ) { < nl > + if let content = message . content as ? ACVideoContent { < nl > + self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) < nl > + } else { < nl > + fatalError ( " Unsupported content for media cell " ) < nl > + } < nl > + } < nl > + } < nl > + < nl > + < nl > + < nl > + public class AABubbleVideoCellLayouter : AABubbleLayouter { < nl > + < nl > + public func isSuitable ( message : ACMessage ) - > Bool { < nl > + if message . content is ACVideoContent { < nl > + return true < nl > + } < nl > + return false < nl > + } < nl > + < nl > + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { < nl > + return VideoCellLayout ( message : message ) < nl > + } < nl > + < nl > + public func cellClass ( ) - > AnyClass { < nl > + return AABubbleVideoCell . self < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > index 5a9d5ba . . 018c044 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift < nl > @ @ - 9 , 16 + 9 , 10 @ @ < nl > import UIKit < nl > import Photos < nl > < nl > - protocol AAActionSheetDelegate { < nl > - func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) < nl > - } < nl > - < nl > let screenWidth = UIScreen . mainScreen ( ) . bounds . size . width < nl > let screenHeigth = UIScreen . mainScreen ( ) . bounds . size . height < nl > < nl > class AAConvActionSheet : UIView { < nl > - < nl > - var delegate : AAActionSheetDelegate ? < nl > < nl > var sheetView : UIView ! < nl > < nl > @ @ - 104 , 7 + 98 , 6 @ @ class AAConvActionSheet : UIView { < nl > < nl > self . thumbnailView . selectedAssets = [ PHAsset ] ( ) < nl > self . thumbnailView . reloadView ( ) < nl > - self . thumbnailView . collectionView . scrollToItemAtIndexPath ( NSIndexPath ( forRow : 0 , inSection : 0 ) , atScrollPosition : UICollectionViewScrollPosition . None , animated : false ) < nl > self . updateSelectedPhotos ( ) < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index a53d43c . . 8b6732b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 10 , 7 + 10 , 7 @ @ import AddressBookUI < nl > import SVProgressHUD < nl > < nl > class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate , < nl > - ABPeoplePickerNavigationControllerDelegate , AAActionSheetDelegate { < nl > + ABPeoplePickerNavigationControllerDelegate { < nl > < nl > / / Data binder < nl > private let binder = AABinder ( ) < nl > @ @ - 296 , 8 + 296 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > / / action sheet < nl > < nl > self . actionSheet = AAConvActionSheet ( maxSelected : 9 , weakSuperIn : self ) < nl > - self . actionSheet . delegate = self < nl > - / / self . navigationController ! . view . addSubview ( self . actionSheet ) < nl > < nl > self . navigationController ? . view . addSubview ( self . actionSheet ) < nl > } < nl > @ @ - 463 , 36 + 461 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > < nl > self . textInputbar . textView . resignFirstResponder ( ) < nl > < nl > - / / let hasCamera = UIImagePickerController . isSourceTypeAvailable ( UIImagePickerControllerSourceType . Camera ) < nl > - / / < nl > - / / let builder = AAMenuBuilder ( ) < nl > - / / < nl > - / / if hasCamera { < nl > - / / builder . add ( " PhotoCamera " ) { < nl > - / / self . pickImage ( . Camera ) < nl > - / / } < nl > - / / } < nl > - / / < nl > - / / builder . add ( " PhotoLibrary " ) { < nl > - / / self . pickImage ( . PhotoLibrary ) < nl > - / / } < nl > - / / < nl > - / / if ( NSFileManager . defaultManager ( ) . ubiquityIdentityToken ! = nil ) { < nl > - / / builder . add ( " SendDocument " ) { < nl > - / / self . pickDocument ( ) < nl > - / / } < nl > - / / } < nl > - / / < nl > - / / builder . add ( " ShareLocation " ) { < nl > - / / self . pickLocation ( ) < nl > - / / } < nl > - / / < nl > - / / builder . add ( " ShareContact " ) { < nl > - / / self . pickContact ( ) < nl > - / / } < nl > - / / < nl > - / / showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) < nl > - < nl > self . actionSheet . showAnimation ( ) < nl > < nl > self . rightButton . layoutIfNeeded ( ) < nl > @ @ - 612 , 7 + 580 , 7 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > func pickImage ( source : UIImagePickerControllerSourceType ) { < nl > let pickerController = AAImagePickerController ( ) < nl > pickerController . sourceType = source < nl > - pickerController . mediaTypes = [ kUTTypeImage as String ] < nl > + pickerController . mediaTypes = [ kUTTypeImage as String , kUTTypeMovie as String ] < nl > < nl > / / [ kUTTypeImage as String , kUTTypeMovie as String ] < nl > < nl > @ @ - 830 , 11 + 798 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > Actor . sendStickerWithPeer ( self . peer , withSticker : sticker ) < nl > < nl > } < nl > - < nl > - / / / < nl > - < nl > - func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) { < nl > - < nl > - } < nl > + < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift < nl > index 95d8f0d . . f6e12de 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift < nl > @ @ - 357 , 4 + 357 , 48 @ @ public extension UIImage { < nl > } < nl > } < nl > < nl > + extension UIImage { < nl > + public func imageRotatedByDegrees ( degrees : CGFloat , flip : Bool ) - > UIImage { < nl > + let radiansToDegrees : ( CGFloat ) - > CGFloat = { < nl > + return $ 0 * ( 180 . 0 / CGFloat ( M _ PI ) ) < nl > + } < nl > + let degreesToRadians : ( CGFloat ) - > CGFloat = { < nl > + return $ 0 / 180 . 0 * CGFloat ( M _ PI ) < nl > + } < nl > + < nl > + / / calculate the size of the rotated view ' s containing box for our drawing space < nl > + let rotatedViewBox = UIView ( frame : CGRect ( origin : CGPointZero , size : size ) ) < nl > + let t = CGAffineTransformMakeRotation ( degreesToRadians ( degrees ) ) ; < nl > + rotatedViewBox . transform = t < nl > + let rotatedSize = rotatedViewBox . frame . size < nl > + < nl > + / / Create the bitmap context < nl > + UIGraphicsBeginImageContext ( rotatedSize ) < nl > + let bitmap = UIGraphicsGetCurrentContext ( ) < nl > + < nl > + / / Move the origin to the middle of the image so we will rotate and scale around the center . < nl > + CGContextTranslateCTM ( bitmap , rotatedSize . width / 2 . 0 , rotatedSize . height / 2 . 0 ) ; < nl > + < nl > + / / / / Rotate the image context < nl > + CGContextRotateCTM ( bitmap , degreesToRadians ( degrees ) ) ; < nl > + < nl > + / / Now , draw the rotated / scaled image into the context < nl > + var yFlip : CGFloat < nl > + < nl > + if ( flip ) { < nl > + yFlip = CGFloat ( - 1 . 0 ) < nl > + } else { < nl > + yFlip = CGFloat ( 1 . 0 ) < nl > + } < nl > + < nl > + CGContextScaleCTM ( bitmap , yFlip , - 1 . 0 ) < nl > + CGContextDrawImage ( bitmap , CGRectMake ( - size . width / 2 , - size . height / 2 , size . width , size . height ) , CGImage ) < nl > + < nl > + let newImage = UIGraphicsGetImageFromCurrentImageContext ( ) < nl > + UIGraphicsEndImageContext ( ) < nl > + < nl > + return newImage < nl > + } < nl > + } < nl > + < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > index f2c6164 . . 174abb5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > @ @ - 3 , 6 + 3 , 7 @ @ < nl > / / < nl > < nl > import Foundation < nl > + import AVFoundation < nl > < nl > / / Closure based tap on views < nl > < nl > @ @ - 323 , 4 + 324 , 57 @ @ extension UINavigationBar { < nl > < nl > return nil < nl > } < nl > + } < nl > + < nl > + extension AVAsset { < nl > + < nl > + func videoOrientation ( ) - > ( orientation : UIInterfaceOrientation , device : AVCaptureDevicePosition ) { < nl > + var orientation : UIInterfaceOrientation = . Unknown < nl > + var device : AVCaptureDevicePosition = . Unspecified < nl > + < nl > + let tracks : [ AVAssetTrack ] = self . tracksWithMediaType ( AVMediaTypeVideo ) < nl > + if let videoTrack = tracks . first { < nl > + < nl > + let t = videoTrack . preferredTransform < nl > + < nl > + if ( t . a = = 0 & & t . b = = 1 . 0 & & t . d = = 0 ) { < nl > + orientation = . Portrait < nl > + < nl > + if t . c = = 1 . 0 { < nl > + device = . Front < nl > + } else if t . c = = - 1 . 0 { < nl > + device = . Back < nl > + } < nl > + } < nl > + else if ( t . a = = 0 & & t . b = = - 1 . 0 & & t . d = = 0 ) { < nl > + orientation = . PortraitUpsideDown < nl > + < nl > + if t . c = = - 1 . 0 { < nl > + device = . Front < nl > + } else if t . c = = 1 . 0 { < nl > + device = . Back < nl > + } < nl > + } < nl > + else if ( t . a = = 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { < nl > + orientation = . LandscapeRight < nl > + < nl > + if t . d = = - 1 . 0 { < nl > + device = . Front < nl > + } else if t . d = = 1 . 0 { < nl > + device = . Back < nl > + } < nl > + } < nl > + else if ( t . a = = - 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { < nl > + orientation = . LandscapeLeft < nl > + < nl > + if t . d = = 1 . 0 { < nl > + device = . Front < nl > + } else if t . d = = - 1 . 0 { < nl > + device = . Back < nl > + } < nl > + } < nl > + } < nl > + < nl > + return ( orientation , device ) < nl > + } < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec b / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec 
 index ed234eb . . 6335ca1 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK - iOS . podspec 
 @ @ - 26 , 6 + 26 , 8 @ @ Pod : : Spec . new do | s | 
 s . dependency ' SVProgressHUD ' 
 s . dependency ' PSTAlertController ' 
 s . dependency ' SZTextView ' 
 + s . dependency ' SlackTextViewController ' 
 + s . dependency ' NYTPhotoViewer ' 
 s . dependency ' RSKImageCropper ' 
 s . dependency ' JDStatusBarNotification ' 
 s . dependency ' SDWebImage / WebP ' 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index d2e98dc . . 3b94877 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 284 , 7 + 284 , 6 @ @ 
 	 	 BED5A2111C48413C0045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2041C4839790045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 BED5A2121C48413C0045FDB0 / * NYTPhotoContainer . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2051C4839790045FDB0 / * NYTPhotoContainer . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 BED5A2131C48413C0045FDB0 / * NYTPhotosViewControllerDataSource . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 - 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / ; } ; 
 	 	 BEF11DB61C466D800076400A / * begin _ record . caf in Resources * / = { isa = PBXBuildFile ; fileRef = 153F6B3C1C2A9B1900C0B960 / * begin _ record . caf * / ; } ; 
 	 	 BEFE68D51C4657360001F2D6 / * AAThumbnailCollectionCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / ; } ; 
 / * End PBXBuildFile section * / 
 @ @ - 587 , 7 + 586 , 6 @ @ 
 	 	 BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = NYTPhotosViewControllerDataSource . h ; sourceTree = " < group > " ; } ; 
 	 	 BED5A20C1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = " NSBundle + NYTPhotoViewer . h " ; sourceTree = " < group > " ; } ; 
 	 	 BED5A20D1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " NSBundle + NYTPhotoViewer . m " ; sourceTree = " < group > " ; } ; 
 - 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVideoCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAThumbnailCollectionCell . swift ; sourceTree = " < group > " ; } ; 
 / * End PBXFileReference section * / 
 
 @ @ - 1086 , 7 + 1084 , 6 @ @ 
 	 	 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / , 
 	 	 	 	 066A53261BC53406000E606E / * AABubbleTextCell . swift * / , 
 	 	 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / , 
 - 	 	 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Cell ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1803 , 7 + 1800 , 6 @ @ 
 	 	 	 	 066A52E71BC52A20000E606E / * AAInviteLinkViewController . swift in Sources * / , 
 	 	 	 	 152AA8AD1C2989270030DEEE / * SLKTextView + SLKAdditions . m in Sources * / , 
 	 	 	 	 152AA8B71C2989270030DEEE / * UIScrollView + SLKAdditions . m in Sources * / , 
 - 	 	 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / , 
 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , 
 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , 
 	 	 	 	 15D35F761C201B6B00E3717A / * AACustomPresentationAnimationController . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index 9bbb039 . . 6967ff1 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 430 , 7 + 430 , 7 @ @ 
 
 " PhotoRemoveGroupMessage " = " Are you sure want to remove group photo ? Some members will be disappointed . " ; 
 
 - " PhotoCamera " = " Take Photo or Video " ; 
 + " PhotoCamera " = " Take Photo " ; 
 
 " PhotoLibrary " = " Media Library " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json 
 deleted file mode 100644 
 index da4a164 . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json 
 + + + / dev / null 
 @ @ - 1 , 6 + 0 , 0 @ @ 
 - { 
 - " info " : { 
 - " version " : 1 , 
 - " author " : " xcode " 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json 
 deleted file mode 100644 
 index 673c861 . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json 
 + + + / dev / null 
 @ @ - 1 , 21 + 0 , 0 @ @ 
 - { 
 - " images " : [ 
 - { 
 - " idiom " : " universal " , 
 - " scale " : " 1x " 
 - } , 
 - { 
 - " idiom " : " universal " , 
 - " filename " : " play102 ( 1 ) . png " , 
 - " scale " : " 2x " 
 - } , 
 - { 
 - " idiom " : " universal " , 
 - " scale " : " 3x " 
 - } 
 - ] , 
 - " info " : { 
 - " version " : 1 , 
 - " author " : " xcode " 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png 
 deleted file mode 100644 
 index 905cd66 . . 0000000 
 Binary files a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png and / dev / null differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 index 74c48d6 . . 8eb1762 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 @ @ - 390 , 7 + 390 , 7 @ @ 
 
 " PhotoRemoveGroupMessage " = " Voc ê tem certeza que quer to remover a foto do grupo ? Alguns membros poder ã o n ã o gostar . " ; 
 
 - " PhotoCamera " = " Tirar Foto ou V í deo " ; 
 + " PhotoCamera " = " Tirar Foto " ; 
 
 " PhotoLibrary " = " Biblioteca de Midias " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 index f297325 . . ed98fec 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 @ @ - 400 , 9 + 400 , 9 @ @ 
 
 " PhotoRemoveGroupMessage " = " В ы у в е р е н ы , ч т о х о т и т е у д а л и т ь ф о т о г р у п п ы ? " ; 
 
 - " PhotoCamera " = " С н я т ь ф о т о / в и д е о " ; 
 + " PhotoCamera " = " С н я т ь ф о т о " ; 
 
 - " PhotoLibrary " = " В ы б р а т ь ф о т о / в и д е о " ; 
 + " PhotoLibrary " = " Ф о т о а р х и в " ; 
 
 " ShareLocation " = " М е с т о п о л о ж е н и е " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift 
 index 0efb730 . . 006ea4f 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift 
 @ @ - 51 , 20 + 51 , 12 @ @ public extension ACCocoaMessenger { 
 var thumbnailTime = movieAsset . duration 
 thumbnailTime . value = 25 
 
 - let orientation = movieAsset . videoOrientation ( ) 
 - 
 do { 
 let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) 
 let thumbnail = UIImage ( CGImage : imageRef ) 
 - var thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; 
 - let resized = thumbnail . resizeOptimize ( 1200 * 1200 ) ; 
 - 
 - if ( orientation . orientation . isPortrait ) = = true { 
 - thumb = thumb . imageRotatedByDegrees ( 90 , flip : false ) 
 - } 
 - 
 + let thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; 
 let thumbData = UIImageJPEGRepresentation ( thumb , 0 . 55 ) ; / / thumbnail binary data 
 - let fastThumb = ACFastThumb ( int : jint ( resized . size . width ) , withInt : jint ( resized . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) 
 + let fastThumb = ACFastThumb ( int : jint ( thumb . size . width ) , withInt : jint ( thumb . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) 
 
 print ( " video upload imageRef = \ ( imageRef ) " ) 
 print ( " video upload thumbnail = \ ( thumbnail ) " ) 
 @ @ - 74 , 12 + 66 , 7 @ @ public extension ACCocoaMessenger { 
 print ( " video upload width = \ ( thumbnail . size . width ) " ) 
 print ( " video upload height = \ ( thumbnail . size . height ) " ) 
 
 - if ( orientation . orientation . isPortrait = = true ) { 
 - sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . height / 2 ) , withH : jint ( thumbnail . size . width / 2 ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) 
 - } else { 
 - sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) 
 - } 
 - 
 + sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) 
 
 } catch { 
 print ( " can ' t get thumbnail image " ) 
 @ @ - 126 , 7 + 113 , 6 @ @ extension JavaUtilAbstractCollection : SequenceType { 
 } 
 } 
 
 - 
 public extension JavaUtilList { 
 public func toSwiftArray < T > ( ) - > [ T ] { 
 var res = [ T ] ( ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 index f412351 . . 240abba 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 @ @ - 14 , 11 + 14 , 9 @ @ class AABubbles { 
 static let contactLayouter = AABubbleContactCellLayouter ( ) 
 static let voiceLayouter = AABubbleVoiceCellLayouter ( ) 
 static let stickerLayouter = AABubbleStickerCellLayouter ( ) 
 - static let videoLayouter = AABubbleVideoCellLayouter ( ) 
 
 static let builtInLayouters : [ AABubbleLayouter ] = [ 
 serviceLayouter , 
 - videoLayouter , 
 mediaLayouter , 
 voiceLayouter , 
 stickerLayouter , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 index 88204aa . . 2fcd406 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 @ @ - 4 , 9 + 4 , 6 @ @ 
 
 import Foundation 
 import UIKit 
 - import MediaPlayer 
 - import AVKit 
 - import AVFoundation 
 
 public class AAConversationContentController : SLKTextViewController , ARDisplayList _ AppleChangeListener { 
 
 @ @ - 372 , 15 + 369 , 4 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 
 } 
 
 - func playVideoFromPath ( path : String ) { 
 - 
 - let player = AVPlayer ( URL : NSURL ( fileURLWithPath : path ) ) 
 - let playerController = AVPlayerViewController ( ) 
 - playerController . player = player 
 - self . presentViewController ( playerController , animated : true ) { 
 - player . play ( ) 
 - } 
 - 
 - } 
 - 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 index 6ad1144 . . c0a9ef2 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 23 , 7 + 23 , 7 @ @ public class AABubbleLocationCell : AABubbleCell { 
 public init ( frame : CGRect ) { 
 super . init ( frame : frame , isFullSize : false ) 
 
 - timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage 
 + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) 
 
 timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 timeLabel . textColor = appStyle . chatMediaDateColor 
 @ @ - 144 , 8 + 144 , 7 @ @ public class AABubbleLocationCell : AABubbleCell { 
 pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height / 2 - pin . image ! . size . height ) , 
 pin . image ! . size . width , pin . image ! . size . height ) 
 
 - timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) 
 - 
 + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 index bec6db4 . . 4c8d83a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 @ @ - 355 , 6 + 355 , 8 @ @ public class MediaCellLayout : AACellLayout { 
 public convenience init ( message : ACMessage ) { 
 if let content = message . content as ? ACPhotoContent { 
 self . init ( id : Int64 ( message . rid ) , photoContent : content , date : Int64 ( message . date ) ) 
 + } else if let content = message . content as ? ACVideoContent { 
 + self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) 
 } else { 
 fatalError ( " Unsupported content for media cell " ) 
 } 
 @ @ - 369 , 8 + 371 , 9 @ @ public class AABubbleMediaCellLayouter : AABubbleLayouter { 
 public func isSuitable ( message : ACMessage ) - > Bool { 
 if message . content is ACPhotoContent { 
 return true 
 + } else if message . content is ACVideoContent { 
 + return true 
 } 
 - 
 return false 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 deleted file mode 100644 
 index cd9e1a8 . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 + + + / dev / null 
 @ @ - 1 , 399 + 0 , 0 @ @ 
 - / / 
 - / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > 
 - / / 
 - 
 - import UIKit 
 - import VBFPopFlatButton 
 - import AVFoundation 
 - 
 - public class AABubbleVideoCell : AABubbleBaseFileCell { 
 - 
 - / / Views 
 - 
 - let preview = UIImageView ( ) 
 - let progress = AAProgressView ( size : CGSizeMake ( 64 , 64 ) ) 
 - let timeBg = UIImageView ( ) 
 - let timeLabel = UILabel ( ) 
 - let statusView = UIImageView ( ) 
 - let playView = UIImageView ( image : UIImage . bundled ( " aa _ playbutton " ) ) 
 - 
 - / / Binded data 
 - 
 - var bindedLayout : VideoCellLayout ! 
 - var thumbLoaded = false 
 - var contentLoaded = false 
 - 
 - / / Constructors 
 - 
 - public init ( frame : CGRect ) { 
 - super . init ( frame : frame , isFullSize : false ) 
 - 
 - timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage 
 - 
 - timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 - timeLabel . textColor = appStyle . chatMediaDateColor 
 - 
 - statusView . contentMode = UIViewContentMode . Center 
 - 
 - contentView . addSubview ( preview ) 
 - contentView . addSubview ( progress ) 
 - 
 - contentView . addSubview ( timeBg ) 
 - contentView . addSubview ( timeLabel ) 
 - contentView . addSubview ( statusView ) 
 - contentView . addSubview ( playView ) 
 - 
 - preview . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) 
 - preview . userInteractionEnabled = true 
 - 
 - playView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) 
 - playView . userInteractionEnabled = true 
 - 
 - contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 - } 
 - 
 - public required init ( coder aDecoder : NSCoder ) { 
 - fatalError ( " init ( coder : ) has not been implemented " ) 
 - } 
 - 
 - / / Binding 
 - 
 - public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 - self . bindedLayout = cellLayout as ! VideoCellLayout 
 - 
 - bubbleInsets = UIEdgeInsets ( 
 - top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , 
 - left : 10 + ( AADevice . isiPad ? 16 : 0 ) , 
 - bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , 
 - right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) 
 - 
 - if ( ! reuse ) { 
 - 
 - / / Bind bubble 
 - if ( self . isOut ) { 
 - bindBubbleType ( BubbleType . MediaOut , isCompact : false ) 
 - } else { 
 - bindBubbleType ( BubbleType . MediaIn , isCompact : false ) 
 - } 
 - 
 - / / Reset content state 
 - self . preview . image = nil 
 - contentLoaded = false 
 - thumbLoaded = false 
 - 
 - / / Reset progress 
 - self . progress . hideButton ( ) 
 - UIView . animateWithDuration ( 0 , animations : { ( ) - > Void in 
 - self . progress . alpha = 0 
 - self . preview . alpha = 0 
 - } ) 
 - 
 - / / Bind file 
 - fileBind ( message , autoDownload : bindedLayout . autoDownload ) 
 - } 
 - 
 - / / Update time 
 - timeLabel . text = cellLayout . date 
 - 
 - / / Update status 
 - if ( isOut ) { 
 - statusView . hidden = false 
 - switch ( UInt ( message . messageState . ordinal ( ) ) ) { 
 - case ACMessageState . PENDING . rawValue : 
 - self . statusView . image = appStyle . chatIconClock ; 
 - self . statusView . tintColor = appStyle . chatStatusMediaSending 
 - break ; 
 - case ACMessageState . SENT . rawValue : 
 - self . statusView . image = appStyle . chatIconCheck1 ; 
 - self . statusView . tintColor = appStyle . chatStatusMediaSent 
 - break ; 
 - case ACMessageState . RECEIVED . rawValue : 
 - self . statusView . image = appStyle . chatIconCheck2 ; 
 - self . statusView . tintColor = appStyle . chatStatusMediaReceived 
 - break ; 
 - case ACMessageState . READ . rawValue : 
 - self . statusView . image = appStyle . chatIconCheck2 ; 
 - self . statusView . tintColor = appStyle . chatStatusMediaRead 
 - break ; 
 - case ACMessageState . ERROR . rawValue : 
 - self . statusView . image = appStyle . chatIconError ; 
 - self . statusView . tintColor = appStyle . chatStatusMediaError 
 - break 
 - default : 
 - self . statusView . image = appStyle . chatIconClock ; 
 - self . statusView . tintColor = appStyle . chatStatusMediaSending 
 - break ; 
 - } 
 - } else { 
 - statusView . hidden = true 
 - } 
 - } 
 - 
 - func applyBlurEffect ( image : UIImage ) - > UIImage { 
 - let imageToBlur = CIImage ( image : image ) 
 - let blurfilter = CIFilter ( name : " CIGaussianBlur " ) 
 - blurfilter ! . setValue ( 5 , forKey : kCIInputRadiusKey ) 
 - blurfilter ! . setValue ( imageToBlur , forKey : " inputImage " ) 
 - let resultImage = blurfilter ! . valueForKey ( " outputImage " ) as ! CIImage 
 - return UIImage ( CIImage : resultImage ) 
 - } 
 - 
 - / / File state binding 
 - 
 - public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - self . progress . showView ( ) 
 - self . playView . hideView ( ) 
 - self . progress . setButtonType ( FlatButtonType . buttonUpBasicType , animated : true ) 
 - self . progress . hideProgress ( ) 
 - } 
 - } 
 - 
 - public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - self . progress . showView ( ) 
 - self . playView . hideView ( ) 
 - self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) 
 - self . progress . setProgress ( progress ) 
 - } 
 - } 
 - 
 - public override func fileDownloadPaused ( selfGeneration : Int ) { 
 - bgLoadThumb ( selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - self . progress . showView ( ) 
 - self . playView . hideView ( ) 
 - self . progress . setButtonType ( FlatButtonType . buttonDownloadType , animated : true ) 
 - self . progress . hideProgress ( ) 
 - } 
 - } 
 - 
 - public override func fileDownloading ( progress : Double , selfGeneration : Int ) { 
 - bgLoadThumb ( selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - self . progress . showView ( ) 
 - self . playView . hideView ( ) 
 - self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) 
 - self . progress . setProgress ( progress ) 
 - } 
 - } 
 - 
 - public override func fileReady ( reference : String , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - self . progress . setProgress ( 1 ) 
 - self . progress . hideView ( ) 
 - self . playView . showView ( ) 
 - } 
 - } 
 - 
 - public func bgLoadThumb ( selfGeneration : Int ) { 
 - if ( thumbLoaded ) { 
 - return 
 - } 
 - thumbLoaded = true 
 - 
 - if ( bindedLayout . fastThumb ! = nil ) { 
 - let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? 
 - . roundCorners ( bindedLayout . screenSize . width , 
 - h : bindedLayout . screenSize . height , 
 - roundSize : 14 ) 
 - 
 - runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 - self . setPreviewImage ( loadedThumb ! , fast : true ) 
 - } ) ; 
 - } 
 - } 
 - 
 - public func bgLoadReference ( reference : String , selfGeneration : Int ) { 
 - if ( contentLoaded ) { 
 - return 
 - } 
 - contentLoaded = true 
 - 
 - 
 - let movieAsset = AVAsset ( URL : NSURL ( fileURLWithPath : CocoaFiles . pathFromDescriptor ( reference ) ) ) / / video asset 
 - let imageGenerator = AVAssetImageGenerator ( asset : movieAsset ) 
 - var thumbnailTime = movieAsset . duration 
 - thumbnailTime . value = 25 
 - 
 - do { 
 - 
 - let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) 
 - var thumbnail = UIImage ( CGImage : imageRef ) 
 - 
 - let orientation = movieAsset . videoOrientation ( ) 
 - 
 - if ( orientation . orientation . isPortrait ) = = true { 
 - thumbnail = thumbnail . imageRotatedByDegrees ( 90 , flip : false ) 
 - } 
 - 
 - let loadedContent = thumbnail . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) 
 - 
 - runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 - self . setPreviewImage ( loadedContent , fast : false ) 
 - } ) 
 - 
 - } catch { 
 - 
 - } 
 - 
 - 
 - } 
 - 
 - public func setPreviewImage ( img : UIImage , fast : Bool ) { 
 - if ( ( fast & & self . preview . image = = nil ) | | ! fast ) { 
 - self . preview . image = img 
 - self . preview . showView ( ) 
 - } 
 - } 
 - 
 - / / Media Action 
 - 
 - public func mediaDidTap ( ) { 
 - let content = bindedMessage ! . content as ! ACDocumentContent 
 - if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { 
 - Actor . requestStateWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) , withCallback : AAFileCallback ( 
 - notDownloaded : { ( ) - > ( ) in 
 - Actor . startDownloadingWithReference ( fileSource . getFileReference ( ) ) 
 - } , onDownloading : { ( progress ) - > ( ) in 
 - Actor . cancelDownloadingWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) ) 
 - } , onDownloaded : { ( reference ) - > ( ) in 
 - 
 - self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) 
 - 
 - } ) ) 
 - } else if let fileSource = content . getSource ( ) as ? ACFileLocalSource { 
 - let rid = bindedMessage ! . rid 
 - Actor . requestUploadStateWithRid ( rid , withCallback : AAUploadFileCallback ( 
 - notUploaded : { ( ) - > ( ) in 
 - Actor . resumeUploadWithRid ( rid ) 
 - } , onUploading : { ( progress ) - > ( ) in 
 - Actor . pauseUploadWithRid ( rid ) 
 - } , onUploadedClosure : { ( ) - > ( ) in 
 - 
 - 
 - self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) ) 
 - 
 - } ) ) 
 - } 
 - } 
 - 
 - / / Layouting 
 - 
 - public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 - let insets = fullContentInsets 
 - let contentWidth = self . contentView . frame . width 
 - _ = self . contentView . frame . height 
 - let bubbleWidth = self . bindedLayout . screenSize . width 
 - let bubbleHeight = self . bindedLayout . screenSize . height 
 - 
 - layoutBubble ( bubbleWidth , contentHeight : bubbleHeight ) 
 - 
 - if ( isOut ) { 
 - preview . frame = CGRectMake ( contentWidth - insets . left - bubbleWidth , insets . top , bubbleWidth , bubbleHeight ) 
 - } else { 
 - preview . frame = CGRectMake ( insets . left , insets . top , bubbleWidth , bubbleHeight ) 
 - } 
 - 
 - progress . frame = CGRectMake ( preview . frame . origin . x + preview . frame . width / 2 - 32 , preview . frame . origin . y + preview . frame . height / 2 - 32 , 64 , 64 ) 
 - 
 - playView . frame = progress . frame 
 - 
 - timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) 
 - timeLabel . sizeToFit ( ) 
 - 
 - let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width 
 - let timeHeight : CGFloat = 20 
 - 
 - timeLabel . frame = CGRectMake ( preview . frame . maxX - timeWidth - 18 , preview . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) 
 - 
 - if ( isOut ) { 
 - statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) 
 - } 
 - 
 - timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) 
 - } 
 - 
 - 
 - } 
 - 
 - public class VideoCellLayout : AACellLayout { 
 - 
 - public let fastThumb : NSData ? 
 - public let contentSize : CGSize 
 - public let screenSize : CGSize 
 - public let autoDownload : Bool 
 - 
 - / * * 
 - Creting layout for media bubble 
 - * / 
 - public init ( id : Int64 , width : CGFloat , height : CGFloat , date : Int64 , fastThumb : ACFastThumb ? , autoDownload : Bool ) { 
 - 
 - / / Saving content size 
 - self . contentSize = CGSizeMake ( width , height ) 
 - 
 - / / Saving autodownload flag 
 - self . autoDownload = autoDownload 
 - 
 - / / Calculating bubble screen size 
 - let scaleW = 240 / width 
 - let scaleH = 240 / height 
 - let scale = min ( scaleW , scaleH ) 
 - self . screenSize = CGSize ( width : scale * width , height : scale * height ) 
 - 
 - / / Prepare fast thumb 
 - print ( " video thumb = = = \ ( fastThumb ? . getImage ( ) . toNSData ( ) ) " ) 
 - 
 - self . fastThumb = fastThumb ? . getImage ( ) . toNSData ( ) 
 - 
 - / / Creating layout 
 - super . init ( height : self . screenSize . height + 2 , date : date , key : " media " ) 
 - } 
 - 
 - 
 - / * * 
 - Creating layout for video content 
 - * / 
 - public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 ) { 
 - self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : true ) 
 - } 
 - 
 - / * * 
 - Creating layout for message 
 - * / 
 - public convenience init ( message : ACMessage ) { 
 - if let content = message . content as ? ACVideoContent { 
 - self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) 
 - } else { 
 - fatalError ( " Unsupported content for media cell " ) 
 - } 
 - } 
 - } 
 - 
 - 
 - 
 - public class AABubbleVideoCellLayouter : AABubbleLayouter { 
 - 
 - public func isSuitable ( message : ACMessage ) - > Bool { 
 - if message . content is ACVideoContent { 
 - return true 
 - } 
 - return false 
 - } 
 - 
 - public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { 
 - return VideoCellLayout ( message : message ) 
 - } 
 - 
 - public func cellClass ( ) - > AnyClass { 
 - return AABubbleVideoCell . self 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 index 018c044 . . 5a9d5ba 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 @ @ - 9 , 10 + 9 , 16 @ @ 
 import UIKit 
 import Photos 
 
 + protocol AAActionSheetDelegate { 
 + func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) 
 + } 
 + 
 let screenWidth = UIScreen . mainScreen ( ) . bounds . size . width 
 let screenHeigth = UIScreen . mainScreen ( ) . bounds . size . height 
 
 class AAConvActionSheet : UIView { 
 + 
 + var delegate : AAActionSheetDelegate ? 
 
 var sheetView : UIView ! 
 
 @ @ - 98 , 6 + 104 , 7 @ @ class AAConvActionSheet : UIView { 
 
 self . thumbnailView . selectedAssets = [ PHAsset ] ( ) 
 self . thumbnailView . reloadView ( ) 
 + self . thumbnailView . collectionView . scrollToItemAtIndexPath ( NSIndexPath ( forRow : 0 , inSection : 0 ) , atScrollPosition : UICollectionViewScrollPosition . None , animated : false ) 
 self . updateSelectedPhotos ( ) 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 8b6732b . . a53d43c 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 10 , 7 + 10 , 7 @ @ import AddressBookUI 
 import SVProgressHUD 
 
 class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate , 
 - ABPeoplePickerNavigationControllerDelegate { 
 + ABPeoplePickerNavigationControllerDelegate , AAActionSheetDelegate { 
 
 / / Data binder 
 private let binder = AABinder ( ) 
 @ @ - 296 , 6 + 296 , 8 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 / / action sheet 
 
 self . actionSheet = AAConvActionSheet ( maxSelected : 9 , weakSuperIn : self ) 
 + self . actionSheet . delegate = self 
 + / / self . navigationController ! . view . addSubview ( self . actionSheet ) 
 
 self . navigationController ? . view . addSubview ( self . actionSheet ) 
 } 
 @ @ - 461 , 6 + 463 , 36 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 
 self . textInputbar . textView . resignFirstResponder ( ) 
 
 + / / let hasCamera = UIImagePickerController . isSourceTypeAvailable ( UIImagePickerControllerSourceType . Camera ) 
 + / / 
 + / / let builder = AAMenuBuilder ( ) 
 + / / 
 + / / if hasCamera { 
 + / / builder . add ( " PhotoCamera " ) { 
 + / / self . pickImage ( . Camera ) 
 + / / } 
 + / / } 
 + / / 
 + / / builder . add ( " PhotoLibrary " ) { 
 + / / self . pickImage ( . PhotoLibrary ) 
 + / / } 
 + / / 
 + / / if ( NSFileManager . defaultManager ( ) . ubiquityIdentityToken ! = nil ) { 
 + / / builder . add ( " SendDocument " ) { 
 + / / self . pickDocument ( ) 
 + / / } 
 + / / } 
 + / / 
 + / / builder . add ( " ShareLocation " ) { 
 + / / self . pickLocation ( ) 
 + / / } 
 + / / 
 + / / builder . add ( " ShareContact " ) { 
 + / / self . pickContact ( ) 
 + / / } 
 + / / 
 + / / showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) 
 + 
 self . actionSheet . showAnimation ( ) 
 
 self . rightButton . layoutIfNeeded ( ) 
 @ @ - 580 , 7 + 612 , 7 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 func pickImage ( source : UIImagePickerControllerSourceType ) { 
 let pickerController = AAImagePickerController ( ) 
 pickerController . sourceType = source 
 - pickerController . mediaTypes = [ kUTTypeImage as String , kUTTypeMovie as String ] 
 + pickerController . mediaTypes = [ kUTTypeImage as String ] 
 
 / / [ kUTTypeImage as String , kUTTypeMovie as String ] 
 
 @ @ - 798 , 6 + 830 , 11 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 Actor . sendStickerWithPeer ( self . peer , withSticker : sticker ) 
 
 } 
 - 
 + 
 + / / / 
 + 
 + func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) { 
 + 
 + } 
 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift 
 index f6e12de . . 95d8f0d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift 
 @ @ - 357 , 48 + 357 , 4 @ @ public extension UIImage { 
 } 
 } 
 
 - extension UIImage { 
 - public func imageRotatedByDegrees ( degrees : CGFloat , flip : Bool ) - > UIImage { 
 - let radiansToDegrees : ( CGFloat ) - > CGFloat = { 
 - return $ 0 * ( 180 . 0 / CGFloat ( M _ PI ) ) 
 - } 
 - let degreesToRadians : ( CGFloat ) - > CGFloat = { 
 - return $ 0 / 180 . 0 * CGFloat ( M _ PI ) 
 - } 
 - 
 - / / calculate the size of the rotated view ' s containing box for our drawing space 
 - let rotatedViewBox = UIView ( frame : CGRect ( origin : CGPointZero , size : size ) ) 
 - let t = CGAffineTransformMakeRotation ( degreesToRadians ( degrees ) ) ; 
 - rotatedViewBox . transform = t 
 - let rotatedSize = rotatedViewBox . frame . size 
 - 
 - / / Create the bitmap context 
 - UIGraphicsBeginImageContext ( rotatedSize ) 
 - let bitmap = UIGraphicsGetCurrentContext ( ) 
 - 
 - / / Move the origin to the middle of the image so we will rotate and scale around the center . 
 - CGContextTranslateCTM ( bitmap , rotatedSize . width / 2 . 0 , rotatedSize . height / 2 . 0 ) ; 
 - 
 - / / / / Rotate the image context 
 - CGContextRotateCTM ( bitmap , degreesToRadians ( degrees ) ) ; 
 - 
 - / / Now , draw the rotated / scaled image into the context 
 - var yFlip : CGFloat 
 - 
 - if ( flip ) { 
 - yFlip = CGFloat ( - 1 . 0 ) 
 - } else { 
 - yFlip = CGFloat ( 1 . 0 ) 
 - } 
 - 
 - CGContextScaleCTM ( bitmap , yFlip , - 1 . 0 ) 
 - CGContextDrawImage ( bitmap , CGRectMake ( - size . width / 2 , - size . height / 2 , size . width , size . height ) , CGImage ) 
 - 
 - let newImage = UIGraphicsGetImageFromCurrentImageContext ( ) 
 - UIGraphicsEndImageContext ( ) 
 - 
 - return newImage 
 - } 
 - } 
 - 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 index 174abb5 . . f2c6164 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 @ @ - 3 , 7 + 3 , 6 @ @ 
 / / 
 
 import Foundation 
 - import AVFoundation 
 
 / / Closure based tap on views 
 
 @ @ - 324 , 57 + 323 , 4 @ @ extension UINavigationBar { 
 
 return nil 
 } 
 - } 
 - 
 - extension AVAsset { 
 - 
 - func videoOrientation ( ) - > ( orientation : UIInterfaceOrientation , device : AVCaptureDevicePosition ) { 
 - var orientation : UIInterfaceOrientation = . Unknown 
 - var device : AVCaptureDevicePosition = . Unspecified 
 - 
 - let tracks : [ AVAssetTrack ] = self . tracksWithMediaType ( AVMediaTypeVideo ) 
 - if let videoTrack = tracks . first { 
 - 
 - let t = videoTrack . preferredTransform 
 - 
 - if ( t . a = = 0 & & t . b = = 1 . 0 & & t . d = = 0 ) { 
 - orientation = . Portrait 
 - 
 - if t . c = = 1 . 0 { 
 - device = . Front 
 - } else if t . c = = - 1 . 0 { 
 - device = . Back 
 - } 
 - } 
 - else if ( t . a = = 0 & & t . b = = - 1 . 0 & & t . d = = 0 ) { 
 - orientation = . PortraitUpsideDown 
 - 
 - if t . c = = - 1 . 0 { 
 - device = . Front 
 - } else if t . c = = 1 . 0 { 
 - device = . Back 
 - } 
 - } 
 - else if ( t . a = = 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { 
 - orientation = . LandscapeRight 
 - 
 - if t . d = = - 1 . 0 { 
 - device = . Front 
 - } else if t . d = = 1 . 0 { 
 - device = . Back 
 - } 
 - } 
 - else if ( t . a = = - 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { 
 - orientation = . LandscapeLeft 
 - 
 - if t . d = = 1 . 0 { 
 - device = . Front 
 - } else if t . d = = - 1 . 0 { 
 - device = . Back 
 - } 
 - } 
 - } 
 - 
 - return ( orientation , device ) 
 - } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - server / version . sbt b / actor - server / version . sbt 
 index 982ec62 . . 70bfee3 100644 
 - - - a / actor - server / version . sbt 
 + + + b / actor - server / version . sbt 
 @ @ - 1 + 1 @ @ 
 - version in ThisBuild : = " 1 . 0 . 103 - SNAPSHOT " 
 \ No newline at end of file 
 + version in ThisBuild : = " 1 . 0 . 102 " 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 3b94877 . . d2e98dc 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 284 , 6 + 284 , 7 @ @ 
 	 	 BED5A2111C48413C0045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2041C4839790045FDB0 / * NYTPhotoCaptionViewLayoutWidthHinting . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 BED5A2121C48413C0045FDB0 / * NYTPhotoContainer . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2051C4839790045FDB0 / * NYTPhotoContainer . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 BED5A2131C48413C0045FDB0 / * NYTPhotosViewControllerDataSource . h in Headers * / = { isa = PBXBuildFile ; fileRef = BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 + 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / ; } ; 
 	 	 BEF11DB61C466D800076400A / * begin _ record . caf in Resources * / = { isa = PBXBuildFile ; fileRef = 153F6B3C1C2A9B1900C0B960 / * begin _ record . caf * / ; } ; 
 	 	 BEFE68D51C4657360001F2D6 / * AAThumbnailCollectionCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / ; } ; 
 / * End PBXBuildFile section * / 
 @ @ - 586 , 6 + 587 , 7 @ @ 
 	 	 BED5A2061C4839790045FDB0 / * NYTPhotosViewControllerDataSource . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = NYTPhotosViewControllerDataSource . h ; sourceTree = " < group > " ; } ; 
 	 	 BED5A20C1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = " NSBundle + NYTPhotoViewer . h " ; sourceTree = " < group > " ; } ; 
 	 	 BED5A20D1C4839880045FDB0 / * NSBundle + NYTPhotoViewer . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " NSBundle + NYTPhotoViewer . m " ; sourceTree = " < group > " ; } ; 
 + 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleVideoCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 BEFE68D41C4657360001F2D6 / * AAThumbnailCollectionCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAThumbnailCollectionCell . swift ; sourceTree = " < group > " ; } ; 
 / * End PBXFileReference section * / 
 
 @ @ - 1084 , 6 + 1086 , 7 @ @ 
 	 	 	 	 153F6B5C1C2B3AC500C0B960 / * AABubbleStickerCell . swift * / , 
 	 	 	 	 066A53261BC53406000E606E / * AABubbleTextCell . swift * / , 
 	 	 	 	 153F6B5A1C2B109400C0B960 / * AABubbleVoiceCell . swift * / , 
 + 	 	 	 	 BED5A2141C49504B0045FDB0 / * AABubbleVideoCell . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Cell ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1800 , 6 + 1803 , 7 @ @ 
 	 	 	 	 066A52E71BC52A20000E606E / * AAInviteLinkViewController . swift in Sources * / , 
 	 	 	 	 152AA8AD1C2989270030DEEE / * SLKTextView + SLKAdditions . m in Sources * / , 
 	 	 	 	 152AA8B71C2989270030DEEE / * UIScrollView + SLKAdditions . m in Sources * / , 
 + 	 	 	 	 BED5A2151C49504B0045FDB0 / * AABubbleVideoCell . swift in Sources * / , 
 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , 
 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , 
 	 	 	 	 15D35F761C201B6B00E3717A / * AACustomPresentationAnimationController . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index 6967ff1 . . 9bbb039 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 430 , 7 + 430 , 7 @ @ 
 
 " PhotoRemoveGroupMessage " = " Are you sure want to remove group photo ? Some members will be disappointed . " ; 
 
 - " PhotoCamera " = " Take Photo " ; 
 + " PhotoCamera " = " Take Photo or Video " ; 
 
 " PhotoLibrary " = " Media Library " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json 
 new file mode 100644 
 index 0000000 . . da4a164 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / Contents . json 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + { 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 673c861 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " play102 ( 1 ) . png " , 
 + " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " scale " : " 3x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png 
 new file mode 100644 
 index 0000000 . . 905cd66 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / cells _ stuff / aa _ playbutton . imageset / play102 ( 1 ) . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 index 8eb1762 . . 74c48d6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 @ @ - 390 , 7 + 390 , 7 @ @ 
 
 " PhotoRemoveGroupMessage " = " Voc ê tem certeza que quer to remover a foto do grupo ? Alguns membros poder ã o n ã o gostar . " ; 
 
 - " PhotoCamera " = " Tirar Foto " ; 
 + " PhotoCamera " = " Tirar Foto ou V í deo " ; 
 
 " PhotoLibrary " = " Biblioteca de Midias " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 index ed98fec . . f297325 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 @ @ - 400 , 9 + 400 , 9 @ @ 
 
 " PhotoRemoveGroupMessage " = " В ы у в е р е н ы , ч т о х о т и т е у д а л и т ь ф о т о г р у п п ы ? " ; 
 
 - " PhotoCamera " = " С н я т ь ф о т о " ; 
 + " PhotoCamera " = " С н я т ь ф о т о / в и д е о " ; 
 
 - " PhotoLibrary " = " Ф о т о а р х и в " ; 
 + " PhotoLibrary " = " В ы б р а т ь ф о т о / в и д е о " ; 
 
 " ShareLocation " = " М е с т о п о л о ж е н и е " ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift 
 index 006ea4f . . 0efb730 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / ActorCoreExt . swift 
 @ @ - 51 , 12 + 51 , 20 @ @ public extension ACCocoaMessenger { 
 var thumbnailTime = movieAsset . duration 
 thumbnailTime . value = 25 
 
 + let orientation = movieAsset . videoOrientation ( ) 
 + 
 do { 
 let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) 
 let thumbnail = UIImage ( CGImage : imageRef ) 
 - let thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; 
 + var thumb = thumbnail . resizeSquare ( 90 , maxH : 90 ) ; 
 + let resized = thumbnail . resizeOptimize ( 1200 * 1200 ) ; 
 + 
 + if ( orientation . orientation . isPortrait ) = = true { 
 + thumb = thumb . imageRotatedByDegrees ( 90 , flip : false ) 
 + } 
 + 
 let thumbData = UIImageJPEGRepresentation ( thumb , 0 . 55 ) ; / / thumbnail binary data 
 - let fastThumb = ACFastThumb ( int : jint ( thumb . size . width ) , withInt : jint ( thumb . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) 
 + let fastThumb = ACFastThumb ( int : jint ( resized . size . width ) , withInt : jint ( resized . size . height ) , withByteArray : thumbData ! . toJavaBytes ( ) ) 
 
 print ( " video upload imageRef = \ ( imageRef ) " ) 
 print ( " video upload thumbnail = \ ( thumbnail ) " ) 
 @ @ - 66 , 7 + 74 , 12 @ @ public extension ACCocoaMessenger { 
 print ( " video upload width = \ ( thumbnail . size . width ) " ) 
 print ( " video upload height = \ ( thumbnail . size . height ) " ) 
 
 - sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) 
 + if ( orientation . orientation . isPortrait = = true ) { 
 + sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . height / 2 ) , withH : jint ( thumbnail . size . width / 2 ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) 
 + } else { 
 + sendVideoWithPeer ( peer , withName : " video . mp4 " , withW : jint ( thumbnail . size . width ) , withH : jint ( thumbnail . size . height ) , withDuration : jint ( videoDurationSeconds ) , withThumb : fastThumb , withDescriptor : descriptor ) 
 + } 
 + 
 
 } catch { 
 print ( " can ' t get thumbnail image " ) 
 @ @ - 113 , 6 + 126 , 7 @ @ extension JavaUtilAbstractCollection : SequenceType { 
 } 
 } 
 
 + 
 public extension JavaUtilList { 
 public func toSwiftArray < T > ( ) - > [ T ] { 
 var res = [ T ] ( ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 index 240abba . . f412351 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 @ @ - 14 , 9 + 14 , 11 @ @ class AABubbles { 
 static let contactLayouter = AABubbleContactCellLayouter ( ) 
 static let voiceLayouter = AABubbleVoiceCellLayouter ( ) 
 static let stickerLayouter = AABubbleStickerCellLayouter ( ) 
 + static let videoLayouter = AABubbleVideoCellLayouter ( ) 
 
 static let builtInLayouters : [ AABubbleLayouter ] = [ 
 serviceLayouter , 
 + videoLayouter , 
 mediaLayouter , 
 voiceLayouter , 
 stickerLayouter , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 index 2fcd406 . . 88204aa 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 @ @ - 4 , 6 + 4 , 9 @ @ 
 
 import Foundation 
 import UIKit 
 + import MediaPlayer 
 + import AVKit 
 + import AVFoundation 
 
 public class AAConversationContentController : SLKTextViewController , ARDisplayList _ AppleChangeListener { 
 
 @ @ - 369 , 4 + 372 , 15 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 
 } 
 
 + func playVideoFromPath ( path : String ) { 
 + 
 + let player = AVPlayer ( URL : NSURL ( fileURLWithPath : path ) ) 
 + let playerController = AVPlayerViewController ( ) 
 + playerController . player = player 
 + self . presentViewController ( playerController , animated : true ) { 
 + player . play ( ) 
 + } 
 + 
 + } 
 + 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 index c0a9ef2 . . 6ad1144 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 23 , 7 + 23 , 7 @ @ public class AABubbleLocationCell : AABubbleCell { 
 public init ( frame : CGRect ) { 
 super . init ( frame : frame , isFullSize : false ) 
 
 - timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) 
 + timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage 
 
 timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 timeLabel . textColor = appStyle . chatMediaDateColor 
 @ @ - 144 , 7 + 144 , 8 @ @ public class AABubbleLocationCell : AABubbleCell { 
 pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height / 2 - pin . image ! . size . height ) , 
 pin . image ! . size . width , pin . image ! . size . height ) 
 
 - timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) 
 + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) 
 + 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 index 4c8d83a . . bec6db4 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 @ @ - 355 , 8 + 355 , 6 @ @ public class MediaCellLayout : AACellLayout { 
 public convenience init ( message : ACMessage ) { 
 if let content = message . content as ? ACPhotoContent { 
 self . init ( id : Int64 ( message . rid ) , photoContent : content , date : Int64 ( message . date ) ) 
 - } else if let content = message . content as ? ACVideoContent { 
 - self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) 
 } else { 
 fatalError ( " Unsupported content for media cell " ) 
 } 
 @ @ - 371 , 9 + 369 , 8 @ @ public class AABubbleMediaCellLayouter : AABubbleLayouter { 
 public func isSuitable ( message : ACMessage ) - > Bool { 
 if message . content is ACPhotoContent { 
 return true 
 - } else if message . content is ACVideoContent { 
 - return true 
 } 
 + 
 return false 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 new file mode 100644 
 index 0000000 . . cd9e1a8 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 @ @ - 0 , 0 + 1 , 399 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import UIKit 
 + import VBFPopFlatButton 
 + import AVFoundation 
 + 
 + public class AABubbleVideoCell : AABubbleBaseFileCell { 
 + 
 + / / Views 
 + 
 + let preview = UIImageView ( ) 
 + let progress = AAProgressView ( size : CGSizeMake ( 64 , 64 ) ) 
 + let timeBg = UIImageView ( ) 
 + let timeLabel = UILabel ( ) 
 + let statusView = UIImageView ( ) 
 + let playView = UIImageView ( image : UIImage . bundled ( " aa _ playbutton " ) ) 
 + 
 + / / Binded data 
 + 
 + var bindedLayout : VideoCellLayout ! 
 + var thumbLoaded = false 
 + var contentLoaded = false 
 + 
 + / / Constructors 
 + 
 + public init ( frame : CGRect ) { 
 + super . init ( frame : frame , isFullSize : false ) 
 + 
 + timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage 
 + 
 + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 + timeLabel . textColor = appStyle . chatMediaDateColor 
 + 
 + statusView . contentMode = UIViewContentMode . Center 
 + 
 + contentView . addSubview ( preview ) 
 + contentView . addSubview ( progress ) 
 + 
 + contentView . addSubview ( timeBg ) 
 + contentView . addSubview ( timeLabel ) 
 + contentView . addSubview ( statusView ) 
 + contentView . addSubview ( playView ) 
 + 
 + preview . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) 
 + preview . userInteractionEnabled = true 
 + 
 + playView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mediaDidTap " ) ) 
 + playView . userInteractionEnabled = true 
 + 
 + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + / / Binding 
 + 
 + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 + self . bindedLayout = cellLayout as ! VideoCellLayout 
 + 
 + bubbleInsets = UIEdgeInsets ( 
 + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , 
 + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , 
 + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , 
 + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) 
 + 
 + if ( ! reuse ) { 
 + 
 + / / Bind bubble 
 + if ( self . isOut ) { 
 + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) 
 + } else { 
 + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) 
 + } 
 + 
 + / / Reset content state 
 + self . preview . image = nil 
 + contentLoaded = false 
 + thumbLoaded = false 
 + 
 + / / Reset progress 
 + self . progress . hideButton ( ) 
 + UIView . animateWithDuration ( 0 , animations : { ( ) - > Void in 
 + self . progress . alpha = 0 
 + self . preview . alpha = 0 
 + } ) 
 + 
 + / / Bind file 
 + fileBind ( message , autoDownload : bindedLayout . autoDownload ) 
 + } 
 + 
 + / / Update time 
 + timeLabel . text = cellLayout . date 
 + 
 + / / Update status 
 + if ( isOut ) { 
 + statusView . hidden = false 
 + switch ( UInt ( message . messageState . ordinal ( ) ) ) { 
 + case ACMessageState . PENDING . rawValue : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + case ACMessageState . SENT . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck1 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSent 
 + break ; 
 + case ACMessageState . RECEIVED . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaReceived 
 + break ; 
 + case ACMessageState . READ . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaRead 
 + break ; 
 + case ACMessageState . ERROR . rawValue : 
 + self . statusView . image = appStyle . chatIconError ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaError 
 + break 
 + default : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + } 
 + } else { 
 + statusView . hidden = true 
 + } 
 + } 
 + 
 + func applyBlurEffect ( image : UIImage ) - > UIImage { 
 + let imageToBlur = CIImage ( image : image ) 
 + let blurfilter = CIFilter ( name : " CIGaussianBlur " ) 
 + blurfilter ! . setValue ( 5 , forKey : kCIInputRadiusKey ) 
 + blurfilter ! . setValue ( imageToBlur , forKey : " inputImage " ) 
 + let resultImage = blurfilter ! . valueForKey ( " outputImage " ) as ! CIImage 
 + return UIImage ( CIImage : resultImage ) 
 + } 
 + 
 + / / File state binding 
 + 
 + public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { 
 + bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 + 
 + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 + self . progress . showView ( ) 
 + self . playView . hideView ( ) 
 + self . progress . setButtonType ( FlatButtonType . buttonUpBasicType , animated : true ) 
 + self . progress . hideProgress ( ) 
 + } 
 + } 
 + 
 + public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { 
 + bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 + 
 + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 + self . progress . showView ( ) 
 + self . playView . hideView ( ) 
 + self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) 
 + self . progress . setProgress ( progress ) 
 + } 
 + } 
 + 
 + public override func fileDownloadPaused ( selfGeneration : Int ) { 
 + bgLoadThumb ( selfGeneration ) 
 + 
 + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 + self . progress . showView ( ) 
 + self . playView . hideView ( ) 
 + self . progress . setButtonType ( FlatButtonType . buttonDownloadType , animated : true ) 
 + self . progress . hideProgress ( ) 
 + } 
 + } 
 + 
 + public override func fileDownloading ( progress : Double , selfGeneration : Int ) { 
 + bgLoadThumb ( selfGeneration ) 
 + 
 + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 + self . progress . showView ( ) 
 + self . playView . hideView ( ) 
 + self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) 
 + self . progress . setProgress ( progress ) 
 + } 
 + } 
 + 
 + public override func fileReady ( reference : String , selfGeneration : Int ) { 
 + bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 + 
 + runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 + self . progress . setProgress ( 1 ) 
 + self . progress . hideView ( ) 
 + self . playView . showView ( ) 
 + } 
 + } 
 + 
 + public func bgLoadThumb ( selfGeneration : Int ) { 
 + if ( thumbLoaded ) { 
 + return 
 + } 
 + thumbLoaded = true 
 + 
 + if ( bindedLayout . fastThumb ! = nil ) { 
 + let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? 
 + . roundCorners ( bindedLayout . screenSize . width , 
 + h : bindedLayout . screenSize . height , 
 + roundSize : 14 ) 
 + 
 + runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 + self . setPreviewImage ( loadedThumb ! , fast : true ) 
 + } ) ; 
 + } 
 + } 
 + 
 + public func bgLoadReference ( reference : String , selfGeneration : Int ) { 
 + if ( contentLoaded ) { 
 + return 
 + } 
 + contentLoaded = true 
 + 
 + 
 + let movieAsset = AVAsset ( URL : NSURL ( fileURLWithPath : CocoaFiles . pathFromDescriptor ( reference ) ) ) / / video asset 
 + let imageGenerator = AVAssetImageGenerator ( asset : movieAsset ) 
 + var thumbnailTime = movieAsset . duration 
 + thumbnailTime . value = 25 
 + 
 + do { 
 + 
 + let imageRef = try imageGenerator . copyCGImageAtTime ( thumbnailTime , actualTime : nil ) 
 + var thumbnail = UIImage ( CGImage : imageRef ) 
 + 
 + let orientation = movieAsset . videoOrientation ( ) 
 + 
 + if ( orientation . orientation . isPortrait ) = = true { 
 + thumbnail = thumbnail . imageRotatedByDegrees ( 90 , flip : false ) 
 + } 
 + 
 + let loadedContent = thumbnail . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) 
 + 
 + runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 + self . setPreviewImage ( loadedContent , fast : false ) 
 + } ) 
 + 
 + } catch { 
 + 
 + } 
 + 
 + 
 + } 
 + 
 + public func setPreviewImage ( img : UIImage , fast : Bool ) { 
 + if ( ( fast & & self . preview . image = = nil ) | | ! fast ) { 
 + self . preview . image = img 
 + self . preview . showView ( ) 
 + } 
 + } 
 + 
 + / / Media Action 
 + 
 + public func mediaDidTap ( ) { 
 + let content = bindedMessage ! . content as ! ACDocumentContent 
 + if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { 
 + Actor . requestStateWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) , withCallback : AAFileCallback ( 
 + notDownloaded : { ( ) - > ( ) in 
 + Actor . startDownloadingWithReference ( fileSource . getFileReference ( ) ) 
 + } , onDownloading : { ( progress ) - > ( ) in 
 + Actor . cancelDownloadingWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) ) 
 + } , onDownloaded : { ( reference ) - > ( ) in 
 + 
 + self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( reference ) ) 
 + 
 + } ) ) 
 + } else if let fileSource = content . getSource ( ) as ? ACFileLocalSource { 
 + let rid = bindedMessage ! . rid 
 + Actor . requestUploadStateWithRid ( rid , withCallback : AAUploadFileCallback ( 
 + notUploaded : { ( ) - > ( ) in 
 + Actor . resumeUploadWithRid ( rid ) 
 + } , onUploading : { ( progress ) - > ( ) in 
 + Actor . pauseUploadWithRid ( rid ) 
 + } , onUploadedClosure : { ( ) - > ( ) in 
 + 
 + 
 + self . controller . playVideoFromPath ( CocoaFiles . pathFromDescriptor ( CocoaFiles . pathFromDescriptor ( fileSource . getFileDescriptor ( ) ) ) ) 
 + 
 + } ) ) 
 + } 
 + } 
 + 
 + / / Layouting 
 + 
 + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 + let insets = fullContentInsets 
 + let contentWidth = self . contentView . frame . width 
 + _ = self . contentView . frame . height 
 + let bubbleWidth = self . bindedLayout . screenSize . width 
 + let bubbleHeight = self . bindedLayout . screenSize . height 
 + 
 + layoutBubble ( bubbleWidth , contentHeight : bubbleHeight ) 
 + 
 + if ( isOut ) { 
 + preview . frame = CGRectMake ( contentWidth - insets . left - bubbleWidth , insets . top , bubbleWidth , bubbleHeight ) 
 + } else { 
 + preview . frame = CGRectMake ( insets . left , insets . top , bubbleWidth , bubbleHeight ) 
 + } 
 + 
 + progress . frame = CGRectMake ( preview . frame . origin . x + preview . frame . width / 2 - 32 , preview . frame . origin . y + preview . frame . height / 2 - 32 , 64 , 64 ) 
 + 
 + playView . frame = progress . frame 
 + 
 + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) 
 + timeLabel . sizeToFit ( ) 
 + 
 + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width 
 + let timeHeight : CGFloat = 20 
 + 
 + timeLabel . frame = CGRectMake ( preview . frame . maxX - timeWidth - 18 , preview . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) 
 + 
 + if ( isOut ) { 
 + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) 
 + } 
 + 
 + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 4 , timeLabel . frame . minY - 1 , timeWidth + 8 , timeHeight + 2 ) 
 + } 
 + 
 + 
 + } 
 + 
 + public class VideoCellLayout : AACellLayout { 
 + 
 + public let fastThumb : NSData ? 
 + public let contentSize : CGSize 
 + public let screenSize : CGSize 
 + public let autoDownload : Bool 
 + 
 + / * * 
 + Creting layout for media bubble 
 + * / 
 + public init ( id : Int64 , width : CGFloat , height : CGFloat , date : Int64 , fastThumb : ACFastThumb ? , autoDownload : Bool ) { 
 + 
 + / / Saving content size 
 + self . contentSize = CGSizeMake ( width , height ) 
 + 
 + / / Saving autodownload flag 
 + self . autoDownload = autoDownload 
 + 
 + / / Calculating bubble screen size 
 + let scaleW = 240 / width 
 + let scaleH = 240 / height 
 + let scale = min ( scaleW , scaleH ) 
 + self . screenSize = CGSize ( width : scale * width , height : scale * height ) 
 + 
 + / / Prepare fast thumb 
 + print ( " video thumb = = = \ ( fastThumb ? . getImage ( ) . toNSData ( ) ) " ) 
 + 
 + self . fastThumb = fastThumb ? . getImage ( ) . toNSData ( ) 
 + 
 + / / Creating layout 
 + super . init ( height : self . screenSize . height + 2 , date : date , key : " media " ) 
 + } 
 + 
 + 
 + / * * 
 + Creating layout for video content 
 + * / 
 + public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 ) { 
 + self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : true ) 
 + } 
 + 
 + / * * 
 + Creating layout for message 
 + * / 
 + public convenience init ( message : ACMessage ) { 
 + if let content = message . content as ? ACVideoContent { 
 + self . init ( id : Int64 ( message . rid ) , videoContent : content , date : Int64 ( message . date ) ) 
 + } else { 
 + fatalError ( " Unsupported content for media cell " ) 
 + } 
 + } 
 + } 
 + 
 + 
 + 
 + public class AABubbleVideoCellLayouter : AABubbleLayouter { 
 + 
 + public func isSuitable ( message : ACMessage ) - > Bool { 
 + if message . content is ACVideoContent { 
 + return true 
 + } 
 + return false 
 + } 
 + 
 + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { 
 + return VideoCellLayout ( message : message ) 
 + } 
 + 
 + public func cellClass ( ) - > AnyClass { 
 + return AABubbleVideoCell . self 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 index 5a9d5ba . . 018c044 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAConvActionSheet . swift 
 @ @ - 9 , 16 + 9 , 10 @ @ 
 import UIKit 
 import Photos 
 
 - protocol AAActionSheetDelegate { 
 - func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) 
 - } 
 - 
 let screenWidth = UIScreen . mainScreen ( ) . bounds . size . width 
 let screenHeigth = UIScreen . mainScreen ( ) . bounds . size . height 
 
 class AAConvActionSheet : UIView { 
 - 
 - var delegate : AAActionSheetDelegate ? 
 
 var sheetView : UIView ! 
 
 @ @ - 104 , 7 + 98 , 6 @ @ class AAConvActionSheet : UIView { 
 
 self . thumbnailView . selectedAssets = [ PHAsset ] ( ) 
 self . thumbnailView . reloadView ( ) 
 - self . thumbnailView . collectionView . scrollToItemAtIndexPath ( NSIndexPath ( forRow : 0 , inSection : 0 ) , atScrollPosition : UICollectionViewScrollPosition . None , animated : false ) 
 self . updateSelectedPhotos ( ) 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index a53d43c . . 8b6732b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 10 , 7 + 10 , 7 @ @ import AddressBookUI 
 import SVProgressHUD 
 
 class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate , 
 - ABPeoplePickerNavigationControllerDelegate , AAActionSheetDelegate { 
 + ABPeoplePickerNavigationControllerDelegate { 
 
 / / Data binder 
 private let binder = AABinder ( ) 
 @ @ - 296 , 8 + 296 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 / / action sheet 
 
 self . actionSheet = AAConvActionSheet ( maxSelected : 9 , weakSuperIn : self ) 
 - self . actionSheet . delegate = self 
 - / / self . navigationController ! . view . addSubview ( self . actionSheet ) 
 
 self . navigationController ? . view . addSubview ( self . actionSheet ) 
 } 
 @ @ - 463 , 36 + 461 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 
 self . textInputbar . textView . resignFirstResponder ( ) 
 
 - / / let hasCamera = UIImagePickerController . isSourceTypeAvailable ( UIImagePickerControllerSourceType . Camera ) 
 - / / 
 - / / let builder = AAMenuBuilder ( ) 
 - / / 
 - / / if hasCamera { 
 - / / builder . add ( " PhotoCamera " ) { 
 - / / self . pickImage ( . Camera ) 
 - / / } 
 - / / } 
 - / / 
 - / / builder . add ( " PhotoLibrary " ) { 
 - / / self . pickImage ( . PhotoLibrary ) 
 - / / } 
 - / / 
 - / / if ( NSFileManager . defaultManager ( ) . ubiquityIdentityToken ! = nil ) { 
 - / / builder . add ( " SendDocument " ) { 
 - / / self . pickDocument ( ) 
 - / / } 
 - / / } 
 - / / 
 - / / builder . add ( " ShareLocation " ) { 
 - / / self . pickLocation ( ) 
 - / / } 
 - / / 
 - / / builder . add ( " ShareContact " ) { 
 - / / self . pickContact ( ) 
 - / / } 
 - / / 
 - / / showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) 
 - 
 self . actionSheet . showAnimation ( ) 
 
 self . rightButton . layoutIfNeeded ( ) 
 @ @ - 612 , 7 + 580 , 7 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 func pickImage ( source : UIImagePickerControllerSourceType ) { 
 let pickerController = AAImagePickerController ( ) 
 pickerController . sourceType = source 
 - pickerController . mediaTypes = [ kUTTypeImage as String ] 
 + pickerController . mediaTypes = [ kUTTypeImage as String , kUTTypeMovie as String ] 
 
 / / [ kUTTypeImage as String , kUTTypeMovie as String ] 
 
 @ @ - 830 , 11 + 798 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 Actor . sendStickerWithPeer ( self . peer , withSticker : sticker ) 
 
 } 
 - 
 - / / / 
 - 
 - func actionSheetDidFinished ( selectedObjs : Array < AnyObject > ) { 
 - 
 - } 
 + 
 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift 
 index 95d8f0d . . f6e12de 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Images . swift 
 @ @ - 357 , 4 + 357 , 48 @ @ public extension UIImage { 
 } 
 } 
 
 + extension UIImage { 
 + public func imageRotatedByDegrees ( degrees : CGFloat , flip : Bool ) - > UIImage { 
 + let radiansToDegrees : ( CGFloat ) - > CGFloat = { 
 + return $ 0 * ( 180 . 0 / CGFloat ( M _ PI ) ) 
 + } 
 + let degreesToRadians : ( CGFloat ) - > CGFloat = { 
 + return $ 0 / 180 . 0 * CGFloat ( M _ PI ) 
 + } 
 + 
 + / / calculate the size of the rotated view ' s containing box for our drawing space 
 + let rotatedViewBox = UIView ( frame : CGRect ( origin : CGPointZero , size : size ) ) 
 + let t = CGAffineTransformMakeRotation ( degreesToRadians ( degrees ) ) ; 
 + rotatedViewBox . transform = t 
 + let rotatedSize = rotatedViewBox . frame . size 
 + 
 + / / Create the bitmap context 
 + UIGraphicsBeginImageContext ( rotatedSize ) 
 + let bitmap = UIGraphicsGetCurrentContext ( ) 
 + 
 + / / Move the origin to the middle of the image so we will rotate and scale around the center . 
 + CGContextTranslateCTM ( bitmap , rotatedSize . width / 2 . 0 , rotatedSize . height / 2 . 0 ) ; 
 + 
 + / / / / Rotate the image context 
 + CGContextRotateCTM ( bitmap , degreesToRadians ( degrees ) ) ; 
 + 
 + / / Now , draw the rotated / scaled image into the context 
 + var yFlip : CGFloat 
 + 
 + if ( flip ) { 
 + yFlip = CGFloat ( - 1 . 0 ) 
 + } else { 
 + yFlip = CGFloat ( 1 . 0 ) 
 + } 
 + 
 + CGContextScaleCTM ( bitmap , yFlip , - 1 . 0 ) 
 + CGContextDrawImage ( bitmap , CGRectMake ( - size . width / 2 , - size . height / 2 , size . width , size . height ) , CGImage ) 
 + 
 + let newImage = UIGraphicsGetImageFromCurrentImageContext ( ) 
 + UIGraphicsEndImageContext ( ) 
 + 
 + return newImage 
 + } 
 + } 
 + 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 index f2c6164 . . 174abb5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 / / 
 
 import Foundation 
 + import AVFoundation 
 
 / / Closure based tap on views 
 
 @ @ - 323 , 4 + 324 , 57 @ @ extension UINavigationBar { 
 
 return nil 
 } 
 + } 
 + 
 + extension AVAsset { 
 + 
 + func videoOrientation ( ) - > ( orientation : UIInterfaceOrientation , device : AVCaptureDevicePosition ) { 
 + var orientation : UIInterfaceOrientation = . Unknown 
 + var device : AVCaptureDevicePosition = . Unspecified 
 + 
 + let tracks : [ AVAssetTrack ] = self . tracksWithMediaType ( AVMediaTypeVideo ) 
 + if let videoTrack = tracks . first { 
 + 
 + let t = videoTrack . preferredTransform 
 + 
 + if ( t . a = = 0 & & t . b = = 1 . 0 & & t . d = = 0 ) { 
 + orientation = . Portrait 
 + 
 + if t . c = = 1 . 0 { 
 + device = . Front 
 + } else if t . c = = - 1 . 0 { 
 + device = . Back 
 + } 
 + } 
 + else if ( t . a = = 0 & & t . b = = - 1 . 0 & & t . d = = 0 ) { 
 + orientation = . PortraitUpsideDown 
 + 
 + if t . c = = - 1 . 0 { 
 + device = . Front 
 + } else if t . c = = 1 . 0 { 
 + device = . Back 
 + } 
 + } 
 + else if ( t . a = = 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { 
 + orientation = . LandscapeRight 
 + 
 + if t . d = = - 1 . 0 { 
 + device = . Front 
 + } else if t . d = = 1 . 0 { 
 + device = . Back 
 + } 
 + } 
 + else if ( t . a = = - 1 . 0 & & t . b = = 0 & & t . c = = 0 ) { 
 + orientation = . LandscapeLeft 
 + 
 + if t . d = = 1 . 0 { 
 + device = . Front 
 + } else if t . d = = - 1 . 0 { 
 + device = . Back 
 + } 
 + } 
 + } 
 + 
 + return ( orientation , device ) 
 + } 
 } 
 \ No newline at end of file
