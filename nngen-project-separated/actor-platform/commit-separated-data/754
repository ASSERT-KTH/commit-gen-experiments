BLEU SCORE: 0.13784336590962215

TEST MSG: feat ( bots ) : add file uploads
GENERATED MSG: feat ( server : botkit ) : fix typo

TEST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index cfddd9f . . a63cc2c 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 529 , 6 + 529 , 13 @ @ object BotMessages { < nl > override val service : String = Services . Files < nl > } < nl > < nl > + @ key ( " UploadFile " ) < nl > + final case class UploadFile ( @ beanGetter bytes : Array [ Byte ] ) extends RequestBody { < nl > + override type Response = Void < nl > + override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > + override val service : String = Services . Files < nl > + } < nl > + < nl > final case class ResponseDownloadFile ( fileBytes : Array [ Byte ] ) extends ResponseBody < nl > < nl > @ key ( " AddSticker " )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index 1dbaec2 . . 482e6c9 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 418 , 12 + 418 , 12 @ @ object BotMessages { < nl > < nl > @ key ( " IsAdmin " ) < nl > final case class IsAdmin ( @ beanGetter userId : Int ) extends RequestBody { < nl > - override type Response = ResponseIdAdmin < nl > + override type Response = ResponseIsAdmin < nl > override val service = Services . Users < nl > override def readResponse ( obj : Js . Obj ) = readJs [ Response ] ( obj ) < nl > } < nl > < nl > - final case class ResponseIdAdmin ( isAdmin : Boolean ) extends ResponseBody { < nl > + final case class ResponseIsAdmin ( isAdmin : Boolean ) extends ResponseBody { < nl > def getIsAdmin : java . lang . Boolean = isAdmin . booleanValue ( ) < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index cfddd9f . . a63cc2c 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 529 , 6 + 529 , 13 @ @ object BotMessages { 
 override val service : String = Services . Files 
 } 
 
 + @ key ( " UploadFile " ) 
 + final case class UploadFile ( @ beanGetter bytes : Array [ Byte ] ) extends RequestBody { 
 + override type Response = Void 
 + override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 + override val service : String = Services . Files 
 + } 
 + 
 final case class ResponseDownloadFile ( fileBytes : Array [ Byte ] ) extends ResponseBody 
 
 @ key ( " AddSticker " )

NEAREST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index 1dbaec2 . . 482e6c9 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 418 , 12 + 418 , 12 @ @ object BotMessages { 
 
 @ key ( " IsAdmin " ) 
 final case class IsAdmin ( @ beanGetter userId : Int ) extends RequestBody { 
 - override type Response = ResponseIdAdmin 
 + override type Response = ResponseIsAdmin 
 override val service = Services . Users 
 override def readResponse ( obj : Js . Obj ) = readJs [ Response ] ( obj ) 
 } 
 
 - final case class ResponseIdAdmin ( isAdmin : Boolean ) extends ResponseBody { 
 + final case class ResponseIsAdmin ( isAdmin : Boolean ) extends ResponseBody { 
 def getIsAdmin : java . lang . Boolean = isAdmin . booleanValue ( ) 
 }
