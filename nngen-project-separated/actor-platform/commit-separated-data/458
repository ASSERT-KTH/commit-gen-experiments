BLEU SCORE: 1.0

TEST MSG: fix ( server ) : fixed compilation error
GENERATED MSG: fix ( server ) : fixed compilation error

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala < nl > index 8616ca4 . . 1d4efaf 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala < nl > @ @ - 53 , 7 + 53 , 7 @ @ trait DialogProcessorMigration extends Processor [ DialogState ] { < nl > < nl > case PersistEvents ( events ) ⇒ < nl > persistAll ( events ) { _ ⇒ < nl > - events foreach commit ( _ ) < nl > + events foreach ( e = > commit ( e ) ) < nl > unstashAll ( ) < nl > context become receiveCommand < nl > } < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala < nl > index 04d69b2 . . d53d6a6 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala < nl > @ @ - 66 , 8 + 66 , 9 @ @ trait DialogRootMigration extends Processor [ DialogRootState ] { < nl > Favourited ( ts , Some ( dialog . peer ) ) < nl > } < nl > < nl > - persistAll ( Initialized ( Instant . now ( ) ) + : ( created + + archived + + favourited ) . toList ) { events ⇒ < nl > - events foreach commit ( _ ) < nl > + val events : List [ Event ] = Initialized ( Instant . now ( ) ) + : ( created + + archived + + favourited ) . toList < nl > + persistAll ( events ) { _ ⇒ < nl > + events foreach ( e ⇒ commit ( e ) ) < nl > onComplete < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala < nl > index 6ee639d . . e114d7a 100644 < nl > - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala < nl > + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala < nl > @ @ - 1 , 7 + 1 , 6 @ @ < nl > package im . actor . server . user < nl > < nl > import akka . actor . { ActorRef , ActorSystem , Props } < nl > - import akka . contrib . pattern . { ClusterSharding , ShardRegion } < nl > < nl > object UserViewRegion { < nl > private def start ( props : Option [ Props ] ) ( implicit system : ActorSystem ) : UserViewRegion = < nl > @ @ - 19 , 7 + 18 , 7 @ @ object UserViewRegion { < nl > implicit < nl > system : ActorSystem < nl > ) : UserViewRegion = < nl > - start ( Some ( UserView . props ) ) < nl > + start ( None ) < nl > < nl > def startProxy ( ) ( implicit system : ActorSystem ) : UserViewRegion = < nl > start ( None )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala 
 index 8616ca4 . . 1d4efaf 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala 
 @ @ - 53 , 7 + 53 , 7 @ @ trait DialogProcessorMigration extends Processor [ DialogState ] { 
 
 case PersistEvents ( events ) ⇒ 
 persistAll ( events ) { _ ⇒ 
 - events foreach commit ( _ ) 
 + events foreach ( e = > commit ( e ) ) 
 unstashAll ( ) 
 context become receiveCommand 
 } 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala 
 index 04d69b2 . . d53d6a6 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala 
 @ @ - 66 , 8 + 66 , 9 @ @ trait DialogRootMigration extends Processor [ DialogRootState ] { 
 Favourited ( ts , Some ( dialog . peer ) ) 
 } 
 
 - persistAll ( Initialized ( Instant . now ( ) ) + : ( created + + archived + + favourited ) . toList ) { events ⇒ 
 - events foreach commit ( _ ) 
 + val events : List [ Event ] = Initialized ( Instant . now ( ) ) + : ( created + + archived + + favourited ) . toList 
 + persistAll ( events ) { _ ⇒ 
 + events foreach ( e ⇒ commit ( e ) ) 
 onComplete 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala 
 index 6ee639d . . e114d7a 100644 
 - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala 
 + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package im . actor . server . user 
 
 import akka . actor . { ActorRef , ActorSystem , Props } 
 - import akka . contrib . pattern . { ClusterSharding , ShardRegion } 
 
 object UserViewRegion { 
 private def start ( props : Option [ Props ] ) ( implicit system : ActorSystem ) : UserViewRegion = 
 @ @ - 19 , 7 + 18 , 7 @ @ object UserViewRegion { 
 implicit 
 system : ActorSystem 
 ) : UserViewRegion = 
 - start ( Some ( UserView . props ) ) 
 + start ( None ) 
 
 def startProxy ( ) ( implicit system : ActorSystem ) : UserViewRegion = 
 start ( None )
