BLEU SCORE: 0.0844991782262014

TEST MSG: ref ( core ) : Remove obsolete Incoming Call
GENERATED MSG: chore ( android ) : move push register logic to lob

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 72c365c . . 5c374a8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 24 , 12 + 24 , 9 @ @ import im . actor . core . ConfigurationBuilder ; < nl > import im . actor . core . DeviceCategory ; < nl > import im . actor . core . PlatformType ; < nl > import im . actor . core . entity . Peer ; < nl > - import im . actor . core . events . IncomingCall ; < nl > import im . actor . runtime . Log ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . android . view . BindedViewHolder ; < nl > - import im . actor . runtime . eventbus . BusSubscriber ; < nl > - import im . actor . runtime . eventbus . Event ; < nl > import im . actor . sdk . controllers . Intents ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . conversation . ChatActivity ; < nl > @ @ - 315 , 17 + 312 , 6 @ @ public class ActorSDK { < nl > } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > - < nl > - / / < nl > - / / Calls subscribing < nl > - / / < nl > - < nl > - messenger . getEvents ( ) . subscribe ( new BusSubscriber ( ) { < nl > - @ Override < nl > - public void onBusEvent ( Event event ) { < nl > - delegate . onIncominCall ( ( ( IncomingCall ) event ) . getCall ( ) , ( ( IncomingCall ) event ) . getUid ( ) ) ; < nl > - } < nl > - } , IncomingCall . EVENT ) ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / IncomingCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / IncomingCall . java < nl > deleted file mode 100644 < nl > index df5f774 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / IncomingCall . java < nl > + + + / dev / null < nl > @ @ - 1 , 29 + 0 , 0 @ @ < nl > - package im . actor . core . events ; < nl > - < nl > - import im . actor . runtime . eventbus . Event ; < nl > - < nl > - public class IncomingCall extends Event { < nl > - < nl > - public static final String EVENT = " incoming _ call " ; < nl > - < nl > - private long callId ; < nl > - private int uid ; < nl > - < nl > - public IncomingCall ( long callId , int uid ) { < nl > - this . callId = callId ; < nl > - this . uid = uid ; < nl > - } < nl > - < nl > - public long getCall ( ) { < nl > - return callId ; < nl > - } < nl > - < nl > - public int getUid ( ) { < nl > - return uid ; < nl > - } < nl > - < nl > - @ Override < nl > - public String getType ( ) { < nl > - return EVENT ; < nl > - } < nl > - }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java < nl > index 0aa7127 . . 35e9768 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java < nl > @ @ - 10 , 9 + 10 , 57 @ @ import im . actor . runtime . Log ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . core . ActorPushManager ; < nl > < nl > - public class PushManager extends ActorPushManager { < nl > + public class PushManager implements ActorPushManager { < nl > + private static final String TAG = " im . actor . push . PushManager " ; < nl > + private boolean isRegistered ; < nl > + < nl > @ Override < nl > - public String tryRegisterPush ( Context context ) { < nl > + public void registerPush ( final Context context ) { < nl > + isRegistered = ActorSDK . sharedActor ( ) . getMessenger ( ) . getPreferences ( ) . getBool ( " push _ registered " , false ) ; < nl > + < nl > + if ( ! isRegistered ) { < nl > + Log . d ( TAG , " Requesting push token . . . " ) ; < nl > + < nl > + / / TODO : Add backoff < nl > + new Thread ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + while ( true ) { < nl > + try { < nl > + String regId = tryRegisterPush ( context ) ; < nl > + if ( regId ! = null ) { < nl > + Log . d ( TAG , " Token loaded " ) ; < nl > + onPushRegistered ( regId ) ; < nl > + return ; < nl > + } else { < nl > + Log . d ( TAG , " Unable to load Token " ) ; < nl > + } < nl > + } catch ( Exception e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + Log . d ( TAG , " Waiting for next attempt " ) ; < nl > + try { < nl > + Thread . sleep ( 1000 ) ; < nl > + } catch ( InterruptedException e1 ) { < nl > + e1 . printStackTrace ( ) ; < nl > + return ; < nl > + } < nl > + } < nl > + } < nl > + } . start ( ) ; < nl > + } else { < nl > + Log . d ( TAG , " Already registered token " ) ; < nl > + } < nl > + } < nl > + < nl > + private void onPushRegistered ( String token ) { < nl > + isRegistered = true ; < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; < nl > + < nl > + } < nl > + < nl > + private String tryRegisterPush ( Context context ) { < nl > GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > Log . d ( " Actor GCM " , " Requesting push token iteration . . . " ) ; < nl > try { < nl > @ @ - 21 , 6 + 69 , 6 @ @ public class PushManager extends ActorPushManager { < nl > e . printStackTrace ( ) ; < nl > return null ; < nl > } < nl > - < nl > } < nl > + < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java < nl > index 0384bd8 . . 7a10488 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java < nl > + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java < nl > @ @ - 9 , 9 + 9 , 9 @ @ import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > < nl > import im . actor . runtime . Log ; < nl > - import im . actor . sdk . core . ActorPushReceiver ; < nl > + import im . actor . sdk . ActorSDK ; < nl > < nl > - public class PushReceiver extends ActorPushReceiver { < nl > + public class PushReceiver extends WakefulBroadcastReceiver { < nl > < nl > private static final String TAG = " ActorPushReceiver " ; < nl > < nl > @ @ - 24 , 7 + 24 , 8 @ @ public class PushReceiver extends ActorPushReceiver { < nl > if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > if ( extras . containsKey ( " seq " ) ) { < nl > int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > - onSeqReceived ( seq ) ; < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; < nl > + < nl > setResultCode ( Activity . RESULT _ OK ) ; < nl > Log . d ( TAG , " Push received " ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index a9a3aed . . 674fae4 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 18 , 11 + 18 , 8 @ @ import im . actor . core . ApiConfiguration ; < nl > import im . actor . core . ConfigurationBuilder ; < nl > import im . actor . core . DeviceCategory ; < nl > import im . actor . core . PlatformType ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > - import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . core . AndroidNotifications ; < nl > import im . actor . sdk . core . AndroidPhoneBook ; < nl > - import im . actor . sdk . core . AndroidPushActor ; < nl > import im . actor . sdk . core . ActorPushManager ; < nl > import im . actor . sdk . intents . ActivityManager ; < nl > import im . actor . sdk . services . KeepAliveService ; < nl > @ @ - 30 , 8 + 27 , 6 @ @ import im . actor . sdk . util . Devices ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > < nl > - import static im . actor . runtime . actors . ActorSystem . system ; < nl > - < nl > < nl > public class ActorSDK { < nl > < nl > @ @ - 153 , 15 + 148 , 9 @ @ public class ActorSDK { < nl > / / GCM < nl > / / < nl > try { < nl > - < nl > final ActorPushManager pushManager = ( ActorPushManager ) Class . forName ( " im . actor . push . PushManager " ) . newInstance ( ) ; < nl > if ( pushId ! = 0 ) { < nl > - system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { < nl > - @ Override < nl > - public AndroidPushActor create ( ) { < nl > - return new AndroidPushActor ( application , messenger , pushManager ) ; < nl > - } < nl > - } ) , " actor / android / push " ) ; < nl > + pushManager . registerPush ( application ) ; < nl > } < nl > } catch ( ClassNotFoundException e ) { < nl > e . printStackTrace ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java < nl > index 2b6a8fa . . 9d27450 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java < nl > @ @ - 2 , 18 + 2 , 8 @ @ package im . actor . sdk . core ; < nl > < nl > import android . content . Context ; < nl > < nl > - import im . actor . core . AndroidMessenger ; < nl > - import im . actor . sdk . ActorSDK ; < nl > - < nl > - public abstract class ActorPushManager { < nl > - public abstract String tryRegisterPush ( Context context ) ; < nl > - < nl > - public void registerOnActorServer ( AndroidMessenger messenger , String token ) { < nl > - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; < nl > - } < nl > - < nl > - < nl > + public interface ActorPushManager { < nl > + void registerPush ( Context context ) ; < nl > } < nl > < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java < nl > deleted file mode 100644 < nl > index e827d55 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java < nl > + + + / dev / null < nl > @ @ - 1 , 11 + 0 , 0 @ @ < nl > - package im . actor . sdk . core ; < nl > - < nl > - import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > - < nl > - import im . actor . sdk . ActorSDK ; < nl > - < nl > - public abstract class ActorPushReceiver extends WakefulBroadcastReceiver { < nl > - public void onSeqReceived ( int seq ) { < nl > - ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > deleted file mode 100644 < nl > index b99d740 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > + + + / dev / null < nl > @ @ - 1 , 95 + 0 , 0 @ @ < nl > - package im . actor . sdk . core ; < nl > - < nl > - import android . content . Context ; < nl > - import im . actor . core . AndroidMessenger ; < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - < nl > - / * * < nl > - * GCM push implementation for Actor push registration . < nl > - * This actor is used for load GCM token and register it on server . < nl > - * / < nl > - public class AndroidPushActor extends Actor { < nl > - < nl > - private static final String TAG = " im . actor . sdk . core . AndroidPushActor " ; < nl > - < nl > - private final AndroidMessenger messenger ; < nl > - private final Context context ; < nl > - private boolean isRegistered ; < nl > - private ActorPushManager pushManager ; < nl > - < nl > - public AndroidPushActor ( Context context , AndroidMessenger messenger , ActorPushManager pushManager ) { < nl > - this . messenger = messenger ; < nl > - this . context = context ; < nl > - this . pushManager = pushManager ; < nl > - } < nl > - < nl > - @ Override < nl > - public void preStart ( ) { < nl > - super . preStart ( ) ; < nl > - < nl > - isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; < nl > - < nl > - if ( ! isRegistered ) { < nl > - Log . d ( TAG , " Requesting push token . . . " ) ; < nl > - < nl > - / / TODO : Add backoff < nl > - new Thread ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - while ( true ) { < nl > - try { < nl > - String regId = pushManager . tryRegisterPush ( context ) ; < nl > - if ( regId ! = null ) { < nl > - Log . d ( TAG , " Token loaded " ) ; < nl > - self ( ) . send ( new PushRegistered ( regId ) ) ; < nl > - return ; < nl > - } else { < nl > - Log . d ( TAG , " Unable to load Token " ) ; < nl > - } < nl > - } catch ( Exception e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - Log . d ( TAG , " Waiting for next attempt " ) ; < nl > - try { < nl > - Thread . sleep ( 1000 ) ; < nl > - } catch ( InterruptedException e1 ) { < nl > - e1 . printStackTrace ( ) ; < nl > - return ; < nl > - } < nl > - } < nl > - } < nl > - } . start ( ) ; < nl > - } else { < nl > - Log . d ( TAG , " Already registered token " ) ; < nl > - } < nl > - } < nl > - < nl > - private void onPushRegistered ( String token ) { < nl > - isRegistered = true ; < nl > - pushManager . registerOnActorServer ( messenger , token ) ; < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onReceive ( Object message ) { < nl > - if ( message instanceof PushRegistered ) { < nl > - PushRegistered pushRegistered = ( PushRegistered ) message ; < nl > - onPushRegistered ( pushRegistered . getToken ( ) ) ; < nl > - } else { < nl > - drop ( message ) ; < nl > - } < nl > - } < nl > - < nl > - public static class PushRegistered { < nl > - private String token ; < nl > - < nl > - public PushRegistered ( String token ) { < nl > - this . token = token ; < nl > - } < nl > - < nl > - public String getToken ( ) { < nl > - return token ; < nl > - } < nl > - } < nl > - }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 72c365c . . 5c374a8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 24 , 12 + 24 , 9 @ @ import im . actor . core . ConfigurationBuilder ; 
 import im . actor . core . DeviceCategory ; 
 import im . actor . core . PlatformType ; 
 import im . actor . core . entity . Peer ; 
 - import im . actor . core . events . IncomingCall ; 
 import im . actor . runtime . Log ; 
 import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . android . view . BindedViewHolder ; 
 - import im . actor . runtime . eventbus . BusSubscriber ; 
 - import im . actor . runtime . eventbus . Event ; 
 import im . actor . sdk . controllers . Intents ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . conversation . ChatActivity ; 
 @ @ - 315 , 17 + 312 , 6 @ @ public class ActorSDK { 
 } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 - 
 - / / 
 - / / Calls subscribing 
 - / / 
 - 
 - messenger . getEvents ( ) . subscribe ( new BusSubscriber ( ) { 
 - @ Override 
 - public void onBusEvent ( Event event ) { 
 - delegate . onIncominCall ( ( ( IncomingCall ) event ) . getCall ( ) , ( ( IncomingCall ) event ) . getUid ( ) ) ; 
 - } 
 - } , IncomingCall . EVENT ) ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / IncomingCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / IncomingCall . java 
 deleted file mode 100644 
 index df5f774 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / IncomingCall . java 
 + + + / dev / null 
 @ @ - 1 , 29 + 0 , 0 @ @ 
 - package im . actor . core . events ; 
 - 
 - import im . actor . runtime . eventbus . Event ; 
 - 
 - public class IncomingCall extends Event { 
 - 
 - public static final String EVENT = " incoming _ call " ; 
 - 
 - private long callId ; 
 - private int uid ; 
 - 
 - public IncomingCall ( long callId , int uid ) { 
 - this . callId = callId ; 
 - this . uid = uid ; 
 - } 
 - 
 - public long getCall ( ) { 
 - return callId ; 
 - } 
 - 
 - public int getUid ( ) { 
 - return uid ; 
 - } 
 - 
 - @ Override 
 - public String getType ( ) { 
 - return EVENT ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java 
 index 0aa7127 . . 35e9768 100644 
 - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java 
 + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java 
 @ @ - 10 , 9 + 10 , 57 @ @ import im . actor . runtime . Log ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . core . ActorPushManager ; 
 
 - public class PushManager extends ActorPushManager { 
 + public class PushManager implements ActorPushManager { 
 + private static final String TAG = " im . actor . push . PushManager " ; 
 + private boolean isRegistered ; 
 + 
 @ Override 
 - public String tryRegisterPush ( Context context ) { 
 + public void registerPush ( final Context context ) { 
 + isRegistered = ActorSDK . sharedActor ( ) . getMessenger ( ) . getPreferences ( ) . getBool ( " push _ registered " , false ) ; 
 + 
 + if ( ! isRegistered ) { 
 + Log . d ( TAG , " Requesting push token . . . " ) ; 
 + 
 + / / TODO : Add backoff 
 + new Thread ( ) { 
 + @ Override 
 + public void run ( ) { 
 + while ( true ) { 
 + try { 
 + String regId = tryRegisterPush ( context ) ; 
 + if ( regId ! = null ) { 
 + Log . d ( TAG , " Token loaded " ) ; 
 + onPushRegistered ( regId ) ; 
 + return ; 
 + } else { 
 + Log . d ( TAG , " Unable to load Token " ) ; 
 + } 
 + } catch ( Exception e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + Log . d ( TAG , " Waiting for next attempt " ) ; 
 + try { 
 + Thread . sleep ( 1000 ) ; 
 + } catch ( InterruptedException e1 ) { 
 + e1 . printStackTrace ( ) ; 
 + return ; 
 + } 
 + } 
 + } 
 + } . start ( ) ; 
 + } else { 
 + Log . d ( TAG , " Already registered token " ) ; 
 + } 
 + } 
 + 
 + private void onPushRegistered ( String token ) { 
 + isRegistered = true ; 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; 
 + 
 + } 
 + 
 + private String tryRegisterPush ( Context context ) { 
 GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 Log . d ( " Actor GCM " , " Requesting push token iteration . . . " ) ; 
 try { 
 @ @ - 21 , 6 + 69 , 6 @ @ public class PushManager extends ActorPushManager { 
 e . printStackTrace ( ) ; 
 return null ; 
 } 
 - 
 } 
 + 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java 
 index 0384bd8 . . 7a10488 100644 
 - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java 
 + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java 
 @ @ - 9 , 9 + 9 , 9 @ @ import android . support . v4 . content . WakefulBroadcastReceiver ; 
 import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 
 import im . actor . runtime . Log ; 
 - import im . actor . sdk . core . ActorPushReceiver ; 
 + import im . actor . sdk . ActorSDK ; 
 
 - public class PushReceiver extends ActorPushReceiver { 
 + public class PushReceiver extends WakefulBroadcastReceiver { 
 
 private static final String TAG = " ActorPushReceiver " ; 
 
 @ @ - 24 , 7 + 24 , 8 @ @ public class PushReceiver extends ActorPushReceiver { 
 if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 if ( extras . containsKey ( " seq " ) ) { 
 int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 - onSeqReceived ( seq ) ; 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; 
 + 
 setResultCode ( Activity . RESULT _ OK ) ; 
 Log . d ( TAG , " Push received " ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index a9a3aed . . 674fae4 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 18 , 11 + 18 , 8 @ @ import im . actor . core . ApiConfiguration ; 
 import im . actor . core . ConfigurationBuilder ; 
 import im . actor . core . DeviceCategory ; 
 import im . actor . core . PlatformType ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 - import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . core . AndroidNotifications ; 
 import im . actor . sdk . core . AndroidPhoneBook ; 
 - import im . actor . sdk . core . AndroidPushActor ; 
 import im . actor . sdk . core . ActorPushManager ; 
 import im . actor . sdk . intents . ActivityManager ; 
 import im . actor . sdk . services . KeepAliveService ; 
 @ @ - 30 , 8 + 27 , 6 @ @ import im . actor . sdk . util . Devices ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 import im . actor . runtime . android . AndroidContext ; 
 
 - import static im . actor . runtime . actors . ActorSystem . system ; 
 - 
 
 public class ActorSDK { 
 
 @ @ - 153 , 15 + 148 , 9 @ @ public class ActorSDK { 
 / / GCM 
 / / 
 try { 
 - 
 final ActorPushManager pushManager = ( ActorPushManager ) Class . forName ( " im . actor . push . PushManager " ) . newInstance ( ) ; 
 if ( pushId ! = 0 ) { 
 - system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { 
 - @ Override 
 - public AndroidPushActor create ( ) { 
 - return new AndroidPushActor ( application , messenger , pushManager ) ; 
 - } 
 - } ) , " actor / android / push " ) ; 
 + pushManager . registerPush ( application ) ; 
 } 
 } catch ( ClassNotFoundException e ) { 
 e . printStackTrace ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java 
 index 2b6a8fa . . 9d27450 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java 
 @ @ - 2 , 18 + 2 , 8 @ @ package im . actor . sdk . core ; 
 
 import android . content . Context ; 
 
 - import im . actor . core . AndroidMessenger ; 
 - import im . actor . sdk . ActorSDK ; 
 - 
 - public abstract class ActorPushManager { 
 - public abstract String tryRegisterPush ( Context context ) ; 
 - 
 - public void registerOnActorServer ( AndroidMessenger messenger , String token ) { 
 - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; 
 - } 
 - 
 - 
 + public interface ActorPushManager { 
 + void registerPush ( Context context ) ; 
 } 
 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java 
 deleted file mode 100644 
 index e827d55 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java 
 + + + / dev / null 
 @ @ - 1 , 11 + 0 , 0 @ @ 
 - package im . actor . sdk . core ; 
 - 
 - import android . support . v4 . content . WakefulBroadcastReceiver ; 
 - 
 - import im . actor . sdk . ActorSDK ; 
 - 
 - public abstract class ActorPushReceiver extends WakefulBroadcastReceiver { 
 - public void onSeqReceived ( int seq ) { 
 - ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 deleted file mode 100644 
 index b99d740 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 + + + / dev / null 
 @ @ - 1 , 95 + 0 , 0 @ @ 
 - package im . actor . sdk . core ; 
 - 
 - import android . content . Context ; 
 - import im . actor . core . AndroidMessenger ; 
 - import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - 
 - / * * 
 - * GCM push implementation for Actor push registration . 
 - * This actor is used for load GCM token and register it on server . 
 - * / 
 - public class AndroidPushActor extends Actor { 
 - 
 - private static final String TAG = " im . actor . sdk . core . AndroidPushActor " ; 
 - 
 - private final AndroidMessenger messenger ; 
 - private final Context context ; 
 - private boolean isRegistered ; 
 - private ActorPushManager pushManager ; 
 - 
 - public AndroidPushActor ( Context context , AndroidMessenger messenger , ActorPushManager pushManager ) { 
 - this . messenger = messenger ; 
 - this . context = context ; 
 - this . pushManager = pushManager ; 
 - } 
 - 
 - @ Override 
 - public void preStart ( ) { 
 - super . preStart ( ) ; 
 - 
 - isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; 
 - 
 - if ( ! isRegistered ) { 
 - Log . d ( TAG , " Requesting push token . . . " ) ; 
 - 
 - / / TODO : Add backoff 
 - new Thread ( ) { 
 - @ Override 
 - public void run ( ) { 
 - while ( true ) { 
 - try { 
 - String regId = pushManager . tryRegisterPush ( context ) ; 
 - if ( regId ! = null ) { 
 - Log . d ( TAG , " Token loaded " ) ; 
 - self ( ) . send ( new PushRegistered ( regId ) ) ; 
 - return ; 
 - } else { 
 - Log . d ( TAG , " Unable to load Token " ) ; 
 - } 
 - } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - Log . d ( TAG , " Waiting for next attempt " ) ; 
 - try { 
 - Thread . sleep ( 1000 ) ; 
 - } catch ( InterruptedException e1 ) { 
 - e1 . printStackTrace ( ) ; 
 - return ; 
 - } 
 - } 
 - } 
 - } . start ( ) ; 
 - } else { 
 - Log . d ( TAG , " Already registered token " ) ; 
 - } 
 - } 
 - 
 - private void onPushRegistered ( String token ) { 
 - isRegistered = true ; 
 - pushManager . registerOnActorServer ( messenger , token ) ; 
 - 
 - } 
 - 
 - @ Override 
 - public void onReceive ( Object message ) { 
 - if ( message instanceof PushRegistered ) { 
 - PushRegistered pushRegistered = ( PushRegistered ) message ; 
 - onPushRegistered ( pushRegistered . getToken ( ) ) ; 
 - } else { 
 - drop ( message ) ; 
 - } 
 - } 
 - 
 - public static class PushRegistered { 
 - private String token ; 
 - 
 - public PushRegistered ( String token ) { 
 - this . token = token ; 
 - } 
 - 
 - public String getToken ( ) { 
 - return token ; 
 - } 
 - } 
 - }
