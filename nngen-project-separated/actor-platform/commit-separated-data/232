BLEU SCORE: 0.2626909894424158

TEST MSG: ref ( android ) : Remove old code from DialogHolder
GENERATED MSG: fix ( android ) : Minor fixes in design

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java < nl > index 40dd86d . . 4b8c342 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java < nl > @ @ - 18 , 22 + 18 , 6 @ @ public class DialogHolder extends BindedViewHolder { < nl > super ( dialogView ) ; < nl > < nl > this . dialogView = dialogView ; < nl > - / / < nl > - / / pendingColor = style . getDialogsStatePendingColor ( ) ; < nl > - / / sentColor = style . getDialogsStateSentColor ( ) ; < nl > - / / receivedColor = style . getDialogsStateDeliveredColor ( ) ; < nl > - / / readColor = style . getDialogsStateReadColor ( ) ; < nl > - / / errorColor = style . getDialogsStateErrorColor ( ) ; < nl > - < nl > - / / state = new TintImageView ( context ) ; < nl > - / / { < nl > - / / FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( Screen . dp ( 28 ) , Screen . dp ( 12 ) , Gravity . BOTTOM | Gravity . RIGHT ) ; < nl > - / / params . bottomMargin = Screen . dp ( 16 ) ; < nl > - / / params . rightMargin = Screen . dp ( 9 ) ; < nl > - / / state . setLayoutParams ( params ) ; < nl > - / / fl . addView ( state ) ; < nl > - / / } < nl > - < nl > < nl > dialogView . setOnClickListener ( v - > { < nl > if ( bindedItem ! = null ) { < nl > @ @ - 52 , 22 + 36 , 6 @ @ public class DialogHolder extends BindedViewHolder { < nl > this . bindedItem = data ; < nl > this . dialogView . bind ( data ) ; < nl > this . dialogView . setDividerVisible ( ! isLast ) ; < nl > - < nl > - / / if ( data . getSenderId ( ) ! = myUid ( ) | | data . getUnreadCount ( ) > 0 ) { < nl > - / / state . setVisibility ( View . GONE ) ; < nl > - / / } else { < nl > - / / if ( data . isRead ( ) ) { < nl > - / / state . setResource ( R . drawable . msg _ check _ 2 ) ; < nl > - / / state . setTint ( readColor ) ; < nl > - / / } else if ( data . isReceived ( ) ) { < nl > - / / state . setResource ( R . drawable . msg _ check _ 2 ) ; < nl > - / / state . setTint ( receivedColor ) ; < nl > - / / } else { < nl > - / / state . setResource ( R . drawable . msg _ check _ 1 ) ; < nl > - / / state . setTint ( sentColor ) ; < nl > - / / } < nl > - / / state . setVisibility ( View . VISIBLE ) ; < nl > - / / } < nl > } < nl > < nl > public void unbind ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index f52746b . . 5446f7a 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 30 , 6 + 30 , 9 @ @ public class Application extends ActorSDKApplication { < nl > public void onConfigureActorSDK ( ) { < nl > / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > + < nl > + ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > + style . setDialogsActiveTextColor ( 0xff5882ac ) ; < nl > / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index fe8c2dd . . 00ab41e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 41 , 8 + 41 , 8 @ @ public class ActorStyle { < nl > private int dialogsDividerColor = 0 ; < nl > private int dialogsTitleColor = 0 ; < nl > private int dialogsTextColor = 0 ; < nl > - < nl > private int dialogsTypingColor = 0 ; < nl > + private int dialogsActionColor = 0 ; < nl > < nl > private int primaryAltColor = Color . parseColor ( " # 4ca665 " ) ; < nl > private int primaryAltHoveredColor = Color . parseColor ( " # ff3d8652 " ) ; < nl > @ @ - 266 , 6 + 266 , 22 @ @ public class ActorStyle { < nl > this . contactFastTitleColor = contactFastTitleColor ; < nl > } < nl > < nl > + / * < nl > + * Dialogs < nl > + * / < nl > + < nl > + public int getDialogsActiveTextColor ( ) { < nl > + if ( dialogsActionColor ! = 0 ) { < nl > + return dialogsActionColor ; < nl > + } else { < nl > + return getDialogsTextColor ( ) ; < nl > + } < nl > + } < nl > + < nl > + public void setDialogsActiveTextColor ( int dialogsActionColor ) { < nl > + this . dialogsActionColor = dialogsActionColor ; < nl > + } < nl > + < nl > public int getDialogsCounterTextColor ( ) { < nl > if ( dialogsCounterTextColor ! = 0 ) { < nl > return dialogsCounterTextColor ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java < nl > index 5eef2ae . . 9cb7687 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import android . widget . FrameLayout ; < nl > import android . widget . LinearLayout ; < nl > import android . widget . TextView ; < nl > < nl > + import im . actor . core . entity . ContentType ; < nl > import im . actor . core . entity . Dialog ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . sdk . ActorSDK ; < nl > @ @ - 63 , 8 + 64 , 6 @ @ public class DialogHolder extends BindedViewHolder { < nl > final int paddingH = Screen . dp ( 11 ) ; < nl > final int paddingV = Screen . dp ( 9 ) ; < nl > < nl > - ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > - < nl > pendingColor = style . getDialogsStatePendingColor ( ) ; < nl > sentColor = style . getDialogsStateSentColor ( ) ; < nl > receivedColor = style . getDialogsStateDeliveredColor ( ) ; < nl > @ @ - 109 , 7 + 108 , 7 @ @ public class DialogHolder extends BindedViewHolder { < nl > title . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTitleColor ( ) ) ; < nl > title . setTypeface ( Fonts . medium ( ) ) ; < nl > title . setTextSize ( 17 ) ; < nl > - title . setPadding ( 0 , Screen . dp ( 1 ) , 0 , 0 ) ; < nl > + title . setPadding ( 0 , Screen . dp ( 2 ) , 0 , 0 ) ; < nl > title . setSingleLine ( ) ; < nl > title . setCompoundDrawablePadding ( Screen . dp ( 4 ) ) ; < nl > title . setEllipsize ( TextUtils . TruncateAt . END ) ; < nl > @ @ - 227 , 15 + 226 , 10 @ @ public class DialogHolder extends BindedViewHolder { < nl > time . setVisibility ( View . GONE ) ; < nl > } < nl > < nl > - / / Bypass bypass = new Bypass ( context ) ; < nl > - < nl > - / / bindedText = bypass . markdownToSpannable ( messenger ( ) . getFormatter ( ) . formatDialogText ( data ) , true ) ; < nl > bindedText = messenger ( ) . getFormatter ( ) . formatDialogText ( data ) ; < nl > - < nl > if ( SmileProcessor . containsEmoji ( bindedText ) ) { < nl > if ( emoji ( ) . isLoaded ( ) ) { < nl > bindedText = emoji ( ) . processEmojiCompatMutable ( bindedText , SmileProcessor . CONFIGURATION _ BUBBLES ) ; < nl > - ; < nl > } else { < nl > emoji ( ) . registerListener ( new SmilesListener ( ) { < nl > @ Override < nl > @ @ - 260 , 6 + 254 , 12 @ @ public class DialogHolder extends BindedViewHolder { < nl > groupTypingListener = null ; < nl > } < nl > < nl > + final int textColor ; < nl > + if ( data . getMessageType ( ) ! = ContentType . TEXT ) { < nl > + textColor = style . getDialogsActiveTextColor ( ) ; < nl > + } else { < nl > + textColor = style . getDialogsTextColor ( ) ; < nl > + } < nl > if ( data . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > bindedUid = data . getPeer ( ) . getPeerId ( ) ; < nl > privateTypingListener = new ValueChangedListener < Boolean > ( ) { < nl > @ @ - 270 , 7 + 270 , 7 @ @ public class DialogHolder extends BindedViewHolder { < nl > text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTypingColor ( ) ) ; < nl > } else { < nl > text . setText ( bindedText ) ; < nl > - text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTextColor ( ) ) ; < nl > + text . setTextColor ( textColor ) ; < nl > } < nl > } < nl > } ; < nl > @ @ - 289 , 14 + 289 , 14 @ @ public class DialogHolder extends BindedViewHolder { < nl > text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTypingColor ( ) ) ; < nl > } else { < nl > text . setText ( bindedText ) ; < nl > - text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTextColor ( ) ) ; < nl > + text . setTextColor ( textColor ) ; < nl > } < nl > } < nl > } ; < nl > messenger ( ) . getGroupTyping ( bindedGid ) . subscribe ( groupTypingListener ) ; < nl > } else { < nl > text . setText ( bindedText ) ; < nl > - text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTextColor ( ) ) ; < nl > + text . setTextColor ( textColor ) ; < nl > } < nl > < nl > if ( data . getSenderId ( ) ! = myUid ( ) ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > index 191bd10 . . 3115539 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > @ @ - 362 , 7 + 362 , 7 @ @ public class I18nEngine { < nl > case LOCATION : < nl > return locale . get ( " Location " ) ; < nl > case STICKER : < nl > - if ( text ! = null ) { < nl > + if ( text ! = null & & ! " " . equals ( text ) ) { < nl > return text + " " + locale . get ( " Sticker " ) ; < nl > } else { < nl > return locale . get ( " Sticker " ) ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java < nl > index c2b5168 . . 82950d7 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java < nl > @ @ - 9 , 8 + 9 , 13 @ @ import android . view . View ; < nl > import android . widget . FrameLayout ; < nl > import android . widget . LinearLayout ; < nl > < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . ActorStyle ; < nl > + < nl > public abstract class BindedViewHolder extends android . support . v7 . widget . RecyclerView . ViewHolder { < nl > < nl > + protected ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > + < nl > protected final View contentView ; < nl > protected final FrameLayout contentFrame ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java 
 index 40dd86d . . 4b8c342 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / view / DialogHolder . java 
 @ @ - 18 , 22 + 18 , 6 @ @ public class DialogHolder extends BindedViewHolder { 
 super ( dialogView ) ; 
 
 this . dialogView = dialogView ; 
 - / / 
 - / / pendingColor = style . getDialogsStatePendingColor ( ) ; 
 - / / sentColor = style . getDialogsStateSentColor ( ) ; 
 - / / receivedColor = style . getDialogsStateDeliveredColor ( ) ; 
 - / / readColor = style . getDialogsStateReadColor ( ) ; 
 - / / errorColor = style . getDialogsStateErrorColor ( ) ; 
 - 
 - / / state = new TintImageView ( context ) ; 
 - / / { 
 - / / FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( Screen . dp ( 28 ) , Screen . dp ( 12 ) , Gravity . BOTTOM | Gravity . RIGHT ) ; 
 - / / params . bottomMargin = Screen . dp ( 16 ) ; 
 - / / params . rightMargin = Screen . dp ( 9 ) ; 
 - / / state . setLayoutParams ( params ) ; 
 - / / fl . addView ( state ) ; 
 - / / } 
 - 
 
 dialogView . setOnClickListener ( v - > { 
 if ( bindedItem ! = null ) { 
 @ @ - 52 , 22 + 36 , 6 @ @ public class DialogHolder extends BindedViewHolder { 
 this . bindedItem = data ; 
 this . dialogView . bind ( data ) ; 
 this . dialogView . setDividerVisible ( ! isLast ) ; 
 - 
 - / / if ( data . getSenderId ( ) ! = myUid ( ) | | data . getUnreadCount ( ) > 0 ) { 
 - / / state . setVisibility ( View . GONE ) ; 
 - / / } else { 
 - / / if ( data . isRead ( ) ) { 
 - / / state . setResource ( R . drawable . msg _ check _ 2 ) ; 
 - / / state . setTint ( readColor ) ; 
 - / / } else if ( data . isReceived ( ) ) { 
 - / / state . setResource ( R . drawable . msg _ check _ 2 ) ; 
 - / / state . setTint ( receivedColor ) ; 
 - / / } else { 
 - / / state . setResource ( R . drawable . msg _ check _ 1 ) ; 
 - / / state . setTint ( sentColor ) ; 
 - / / } 
 - / / state . setVisibility ( View . VISIBLE ) ; 
 - / / } 
 } 
 
 public void unbind ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index f52746b . . 5446f7a 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 30 , 6 + 30 , 9 @ @ public class Application extends ActorSDKApplication { 
 public void onConfigureActorSDK ( ) { 
 / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 + 
 + ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 + style . setDialogsActiveTextColor ( 0xff5882ac ) ; 
 / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index fe8c2dd . . 00ab41e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 41 , 8 + 41 , 8 @ @ public class ActorStyle { 
 private int dialogsDividerColor = 0 ; 
 private int dialogsTitleColor = 0 ; 
 private int dialogsTextColor = 0 ; 
 - 
 private int dialogsTypingColor = 0 ; 
 + private int dialogsActionColor = 0 ; 
 
 private int primaryAltColor = Color . parseColor ( " # 4ca665 " ) ; 
 private int primaryAltHoveredColor = Color . parseColor ( " # ff3d8652 " ) ; 
 @ @ - 266 , 6 + 266 , 22 @ @ public class ActorStyle { 
 this . contactFastTitleColor = contactFastTitleColor ; 
 } 
 
 + / * 
 + * Dialogs 
 + * / 
 + 
 + public int getDialogsActiveTextColor ( ) { 
 + if ( dialogsActionColor ! = 0 ) { 
 + return dialogsActionColor ; 
 + } else { 
 + return getDialogsTextColor ( ) ; 
 + } 
 + } 
 + 
 + public void setDialogsActiveTextColor ( int dialogsActionColor ) { 
 + this . dialogsActionColor = dialogsActionColor ; 
 + } 
 + 
 public int getDialogsCounterTextColor ( ) { 
 if ( dialogsCounterTextColor ! = 0 ) { 
 return dialogsCounterTextColor ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java 
 index 5eef2ae . . 9cb7687 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / dialogs / DialogHolder . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import android . widget . FrameLayout ; 
 import android . widget . LinearLayout ; 
 import android . widget . TextView ; 
 
 + import im . actor . core . entity . ContentType ; 
 import im . actor . core . entity . Dialog ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . sdk . ActorSDK ; 
 @ @ - 63 , 8 + 64 , 6 @ @ public class DialogHolder extends BindedViewHolder { 
 final int paddingH = Screen . dp ( 11 ) ; 
 final int paddingV = Screen . dp ( 9 ) ; 
 
 - ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 - 
 pendingColor = style . getDialogsStatePendingColor ( ) ; 
 sentColor = style . getDialogsStateSentColor ( ) ; 
 receivedColor = style . getDialogsStateDeliveredColor ( ) ; 
 @ @ - 109 , 7 + 108 , 7 @ @ public class DialogHolder extends BindedViewHolder { 
 title . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTitleColor ( ) ) ; 
 title . setTypeface ( Fonts . medium ( ) ) ; 
 title . setTextSize ( 17 ) ; 
 - title . setPadding ( 0 , Screen . dp ( 1 ) , 0 , 0 ) ; 
 + title . setPadding ( 0 , Screen . dp ( 2 ) , 0 , 0 ) ; 
 title . setSingleLine ( ) ; 
 title . setCompoundDrawablePadding ( Screen . dp ( 4 ) ) ; 
 title . setEllipsize ( TextUtils . TruncateAt . END ) ; 
 @ @ - 227 , 15 + 226 , 10 @ @ public class DialogHolder extends BindedViewHolder { 
 time . setVisibility ( View . GONE ) ; 
 } 
 
 - / / Bypass bypass = new Bypass ( context ) ; 
 - 
 - / / bindedText = bypass . markdownToSpannable ( messenger ( ) . getFormatter ( ) . formatDialogText ( data ) , true ) ; 
 bindedText = messenger ( ) . getFormatter ( ) . formatDialogText ( data ) ; 
 - 
 if ( SmileProcessor . containsEmoji ( bindedText ) ) { 
 if ( emoji ( ) . isLoaded ( ) ) { 
 bindedText = emoji ( ) . processEmojiCompatMutable ( bindedText , SmileProcessor . CONFIGURATION _ BUBBLES ) ; 
 - ; 
 } else { 
 emoji ( ) . registerListener ( new SmilesListener ( ) { 
 @ Override 
 @ @ - 260 , 6 + 254 , 12 @ @ public class DialogHolder extends BindedViewHolder { 
 groupTypingListener = null ; 
 } 
 
 + final int textColor ; 
 + if ( data . getMessageType ( ) ! = ContentType . TEXT ) { 
 + textColor = style . getDialogsActiveTextColor ( ) ; 
 + } else { 
 + textColor = style . getDialogsTextColor ( ) ; 
 + } 
 if ( data . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { 
 bindedUid = data . getPeer ( ) . getPeerId ( ) ; 
 privateTypingListener = new ValueChangedListener < Boolean > ( ) { 
 @ @ - 270 , 7 + 270 , 7 @ @ public class DialogHolder extends BindedViewHolder { 
 text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTypingColor ( ) ) ; 
 } else { 
 text . setText ( bindedText ) ; 
 - text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTextColor ( ) ) ; 
 + text . setTextColor ( textColor ) ; 
 } 
 } 
 } ; 
 @ @ - 289 , 14 + 289 , 14 @ @ public class DialogHolder extends BindedViewHolder { 
 text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTypingColor ( ) ) ; 
 } else { 
 text . setText ( bindedText ) ; 
 - text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTextColor ( ) ) ; 
 + text . setTextColor ( textColor ) ; 
 } 
 } 
 } ; 
 messenger ( ) . getGroupTyping ( bindedGid ) . subscribe ( groupTypingListener ) ; 
 } else { 
 text . setText ( bindedText ) ; 
 - text . setTextColor ( ActorSDK . sharedActor ( ) . style . getDialogsTextColor ( ) ) ; 
 + text . setTextColor ( textColor ) ; 
 } 
 
 if ( data . getSenderId ( ) ! = myUid ( ) ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 index 191bd10 . . 3115539 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 @ @ - 362 , 7 + 362 , 7 @ @ public class I18nEngine { 
 case LOCATION : 
 return locale . get ( " Location " ) ; 
 case STICKER : 
 - if ( text ! = null ) { 
 + if ( text ! = null & & ! " " . equals ( text ) ) { 
 return text + " " + locale . get ( " Sticker " ) ; 
 } else { 
 return locale . get ( " Sticker " ) ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java 
 index c2b5168 . . 82950d7 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / view / BindedViewHolder . java 
 @ @ - 9 , 8 + 9 , 13 @ @ import android . view . View ; 
 import android . widget . FrameLayout ; 
 import android . widget . LinearLayout ; 
 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . ActorStyle ; 
 + 
 public abstract class BindedViewHolder extends android . support . v7 . widget . RecyclerView . ViewHolder { 
 
 + protected ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 + 
 protected final View contentView ; 
 protected final FrameLayout contentFrame ;
