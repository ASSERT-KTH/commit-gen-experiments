BLEU SCORE: 0.19338531381761725

TEST MSG: fix ( core ) : Fixing Update Chat Groups changed missing users handling
GENERATED MSG: feat ( core ) : raw api requests

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java < nl > index ea56ba3 . . 7cc4a69 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java < nl > @ @ - 8 , 6 + 8 , 9 @ @ import java . util . ArrayList ; < nl > import java . util . HashSet ; < nl > import java . util . List ; < nl > < nl > + import im . actor . core . api . ApiDialog ; < nl > + import im . actor . core . api . ApiDialogGroup ; < nl > + import im . actor . core . api . ApiDialogShort ; < nl > import im . actor . core . api . ApiGroup ; < nl > import im . actor . core . api . ApiPeerType ; < nl > import im . actor . core . api . ApiUser ; < nl > @ @ - 398 , 6 + 401 , 17 @ @ public class UpdateProcessor extends AbsModule { < nl > } else if ( update instanceof UpdateUserLocalNameChanged ) { < nl > UpdateUserLocalNameChanged localNameChanged = ( UpdateUserLocalNameChanged ) update ; < nl > users . add ( localNameChanged . getUid ( ) ) ; < nl > + } else if ( update instanceof UpdateChatGroupsChanged ) { < nl > + UpdateChatGroupsChanged changed = ( UpdateChatGroupsChanged ) update ; < nl > + for ( ApiDialogGroup group : changed . getDialogs ( ) ) { < nl > + for ( ApiDialogShort dialog : group . getDialogs ( ) ) { < nl > + if ( dialog . getPeer ( ) . getType ( ) = = ApiPeerType . PRIVATE ) { < nl > + users . add ( dialog . getPeer ( ) . getId ( ) ) ; < nl > + } else if ( dialog . getPeer ( ) . getType ( ) = = ApiPeerType . GROUP ) { < nl > + groups . add ( dialog . getPeer ( ) . getId ( ) ) ; < nl > + } < nl > + } < nl > + } < nl > } < nl > < nl > if ( ! usersProcessor . hasUsers ( users ) ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index f208401 . . ae0b10b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 12 , 9 + 12 , 11 @ @ import org . jetbrains . annotations . Nullable ; < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > < nl > + import im . actor . core . api . ApiRawValue ; < nl > import im . actor . core . api . ApiSex ; < nl > import im . actor . core . api . ApiAuthSession ; < nl > import im . actor . core . api . rpc . ResponseDoCall ; < nl > + import im . actor . core . api . rpc . ResponseRawRequest ; < nl > import im . actor . core . entity . FileReference ; < nl > import im . actor . core . entity . Group ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > @ @ - 1939 , 6 + 1941 , 24 @ @ public class Messenger { < nl > } < nl > < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / Raw api < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + < nl > + / * * < nl > + * Command for raw api request < nl > + * < nl > + * @ param service service name < nl > + * @ param method method name < nl > + * @ param params request params < nl > + * @ return Command for execution < nl > + * / < nl > + @ ObjectiveCName ( " rawRequestCommandWithService : withMethod : WithParams : " ) < nl > + public Command < ResponseRawRequest > rawRequestCommand ( String service , String method , ApiRawValue params ) { < nl > + return modules . getExternalModule ( ) . rawRequest ( service , method , params ) ; < nl > + } < nl > + < nl > + < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / Tools and Tech < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java < nl > index 39a5e57 . . 46d713f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java < nl > @ @ - 10 , 10 + 10 , 13 @ @ import java . util . ArrayList ; < nl > < nl > import im . actor . core . api . ApiMapValue ; < nl > import im . actor . core . api . ApiMapValueItem ; < nl > + import im . actor . core . api . ApiRawValue ; < nl > import im . actor . core . api . rpc . RequestCompleteWebaction ; < nl > import im . actor . core . api . rpc . RequestInitWebaction ; < nl > + import im . actor . core . api . rpc . RequestRawRequest ; < nl > import im . actor . core . api . rpc . ResponseCompleteWebaction ; < nl > import im . actor . core . api . rpc . ResponseInitWebaction ; < nl > + import im . actor . core . api . rpc . ResponseRawRequest ; < nl > import im . actor . core . entity . WebActionDescriptor ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > @ @ - 92 , 4 + 95 , 23 @ @ public class ExternalModule extends AbsModule { < nl > } < nl > } ; < nl > } < nl > + < nl > + public Command < ResponseRawRequest > rawRequest ( final String service , final String method , final ApiRawValue params ) { < nl > + return new Command < ResponseRawRequest > ( ) { < nl > + @ Override < nl > + public void start ( final CommandCallback < ResponseRawRequest > callback ) { < nl > + request ( new RequestRawRequest ( service , method , params ) , new RpcCallback < ResponseRawRequest > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseRawRequest response ) { < nl > + callback . onResult ( response ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( RpcException e ) { < nl > + callback . onError ( e ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ; < nl > + } < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java 
 index ea56ba3 . . 7cc4a69 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java 
 @ @ - 8 , 6 + 8 , 9 @ @ import java . util . ArrayList ; 
 import java . util . HashSet ; 
 import java . util . List ; 
 
 + import im . actor . core . api . ApiDialog ; 
 + import im . actor . core . api . ApiDialogGroup ; 
 + import im . actor . core . api . ApiDialogShort ; 
 import im . actor . core . api . ApiGroup ; 
 import im . actor . core . api . ApiPeerType ; 
 import im . actor . core . api . ApiUser ; 
 @ @ - 398 , 6 + 401 , 17 @ @ public class UpdateProcessor extends AbsModule { 
 } else if ( update instanceof UpdateUserLocalNameChanged ) { 
 UpdateUserLocalNameChanged localNameChanged = ( UpdateUserLocalNameChanged ) update ; 
 users . add ( localNameChanged . getUid ( ) ) ; 
 + } else if ( update instanceof UpdateChatGroupsChanged ) { 
 + UpdateChatGroupsChanged changed = ( UpdateChatGroupsChanged ) update ; 
 + for ( ApiDialogGroup group : changed . getDialogs ( ) ) { 
 + for ( ApiDialogShort dialog : group . getDialogs ( ) ) { 
 + if ( dialog . getPeer ( ) . getType ( ) = = ApiPeerType . PRIVATE ) { 
 + users . add ( dialog . getPeer ( ) . getId ( ) ) ; 
 + } else if ( dialog . getPeer ( ) . getType ( ) = = ApiPeerType . GROUP ) { 
 + groups . add ( dialog . getPeer ( ) . getId ( ) ) ; 
 + } 
 + } 
 + } 
 } 
 
 if ( ! usersProcessor . hasUsers ( users ) ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index f208401 . . ae0b10b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 12 , 9 + 12 , 11 @ @ import org . jetbrains . annotations . Nullable ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 
 + import im . actor . core . api . ApiRawValue ; 
 import im . actor . core . api . ApiSex ; 
 import im . actor . core . api . ApiAuthSession ; 
 import im . actor . core . api . rpc . ResponseDoCall ; 
 + import im . actor . core . api . rpc . ResponseRawRequest ; 
 import im . actor . core . entity . FileReference ; 
 import im . actor . core . entity . Group ; 
 import im . actor . core . entity . MentionFilterResult ; 
 @ @ - 1939 , 6 + 1941 , 24 @ @ public class Messenger { 
 } 
 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Raw api 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + / * * 
 + * Command for raw api request 
 + * 
 + * @ param service service name 
 + * @ param method method name 
 + * @ param params request params 
 + * @ return Command for execution 
 + * / 
 + @ ObjectiveCName ( " rawRequestCommandWithService : withMethod : WithParams : " ) 
 + public Command < ResponseRawRequest > rawRequestCommand ( String service , String method , ApiRawValue params ) { 
 + return modules . getExternalModule ( ) . rawRequest ( service , method , params ) ; 
 + } 
 + 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / Tools and Tech 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java 
 index 39a5e57 . . 46d713f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / ExternalModule . java 
 @ @ - 10 , 10 + 10 , 13 @ @ import java . util . ArrayList ; 
 
 import im . actor . core . api . ApiMapValue ; 
 import im . actor . core . api . ApiMapValueItem ; 
 + import im . actor . core . api . ApiRawValue ; 
 import im . actor . core . api . rpc . RequestCompleteWebaction ; 
 import im . actor . core . api . rpc . RequestInitWebaction ; 
 + import im . actor . core . api . rpc . RequestRawRequest ; 
 import im . actor . core . api . rpc . ResponseCompleteWebaction ; 
 import im . actor . core . api . rpc . ResponseInitWebaction ; 
 + import im . actor . core . api . rpc . ResponseRawRequest ; 
 import im . actor . core . entity . WebActionDescriptor ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 @ @ - 92 , 4 + 95 , 23 @ @ public class ExternalModule extends AbsModule { 
 } 
 } ; 
 } 
 + 
 + public Command < ResponseRawRequest > rawRequest ( final String service , final String method , final ApiRawValue params ) { 
 + return new Command < ResponseRawRequest > ( ) { 
 + @ Override 
 + public void start ( final CommandCallback < ResponseRawRequest > callback ) { 
 + request ( new RequestRawRequest ( service , method , params ) , new RpcCallback < ResponseRawRequest > ( ) { 
 + @ Override 
 + public void onResult ( ResponseRawRequest response ) { 
 + callback . onResult ( response ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( RpcException e ) { 
 + callback . onError ( e ) ; 
 + } 
 + } ) ; 
 + } 
 + } ; 
 + } 
 } 
 \ No newline at end of file
