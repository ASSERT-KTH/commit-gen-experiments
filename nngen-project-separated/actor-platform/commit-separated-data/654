BLEU SCORE: 0.17542198478193427

TEST MSG: fix ( server : http ) : add postfix to hooks
GENERATED MSG: fix ( server ) : start HttpApi explicitly

TEST DIFF (one line): diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > index e9c6437 . . 5ce2b77 100644 < nl > - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > @ @ - 32 , 7 + 32 , 7 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { < nl > var customRoutes : Seq [ Route ] = runRouteHooks ( ) < nl > < nl > def registerRoute ( name : String ) ( f : ActorSystem ⇒ Route ) : Unit = { < nl > - hooks . routesHook . register ( name , new HttpApiHook . RoutesHook ( system ) { < nl > + hooks . routesHook . register ( s " $ name - routes " , new HttpApiHook . RoutesHook ( system ) { < nl > override def run ( ) : Route = f ( system ) < nl > } ) < nl > < nl > @ @ - 42 , 7 + 42 , 7 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { < nl > } < nl > < nl > def registerRejection ( name : String ) ( f : ActorSystem ⇒ RejectionHandler ) : Unit = { < nl > - hooks . rejectionsHook . register ( name , new HttpApiHook . RejectionsHook ( system ) { < nl > + hooks . rejectionsHook . register ( s " $ name - rejection " , new HttpApiHook . RejectionsHook ( system ) { < nl > def run ( ) : RejectionHandler = f ( system ) < nl > } )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > index 8e54282 . . 7c94e1a 100644 < nl > - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala < nl > @ @ - 39 , 8 + 39 , 6 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { < nl > } < nl > } < nl > < nl > - HttpApiFrontend . start ( system . settings . config ) < nl > - < nl > val authenticator : AsyncAuthenticator [ Boolean ] = { < nl > case p @ Credentials . Provided ( _ ) ⇒ < nl > for { < nl > @ @ - 51 , 6 + 49 , 9 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { < nl > < nl > val adminAuthenticator : AsyncAuthenticator [ Unit ] = < nl > authenticator andThen ( _ map ( isAdminOpt ⇒ if ( isAdminOpt . isDefined ) Some ( ( ) ) else None ) ) < nl > + < nl > + def start ( ) : Unit = < nl > + HttpApiFrontend . start ( system . settings . config ) < nl > } < nl > < nl > object HttpApi extends ExtensionId [ HttpApi ] with ExtensionIdProvider { < nl > diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > index c138818 . . 473ba73 100644 < nl > - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > @ @ - 266 , 7 + 266 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( < nl > Frontend . start ( serverConfig ) < nl > < nl > system . log . debug ( " Starting Http Api " ) < nl > - HttpApi ( system ) < nl > + HttpApi ( system ) . start ( ) < nl > < nl > ActorServer ( system ) < nl > } catch {

TEST DIFF:
diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 index e9c6437 . . 5ce2b77 100644 
 - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 @ @ - 32 , 7 + 32 , 7 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { 
 var customRoutes : Seq [ Route ] = runRouteHooks ( ) 
 
 def registerRoute ( name : String ) ( f : ActorSystem ⇒ Route ) : Unit = { 
 - hooks . routesHook . register ( name , new HttpApiHook . RoutesHook ( system ) { 
 + hooks . routesHook . register ( s " $ name - routes " , new HttpApiHook . RoutesHook ( system ) { 
 override def run ( ) : Route = f ( system ) 
 } ) 
 
 @ @ - 42 , 7 + 42 , 7 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { 
 } 
 
 def registerRejection ( name : String ) ( f : ActorSystem ⇒ RejectionHandler ) : Unit = { 
 - hooks . rejectionsHook . register ( name , new HttpApiHook . RejectionsHook ( system ) { 
 + hooks . rejectionsHook . register ( s " $ name - rejection " , new HttpApiHook . RejectionsHook ( system ) { 
 def run ( ) : RejectionHandler = f ( system ) 
 } )

NEAREST DIFF:
diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 index 8e54282 . . 7c94e1a 100644 
 - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiFrontend . scala 
 @ @ - 39 , 8 + 39 , 6 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { 
 } 
 } 
 
 - HttpApiFrontend . start ( system . settings . config ) 
 - 
 val authenticator : AsyncAuthenticator [ Boolean ] = { 
 case p @ Credentials . Provided ( _ ) ⇒ 
 for { 
 @ @ - 51 , 6 + 49 , 9 @ @ final class HttpApi ( _ system : ActorSystem ) extends Extension { 
 
 val adminAuthenticator : AsyncAuthenticator [ Unit ] = 
 authenticator andThen ( _ map ( isAdminOpt ⇒ if ( isAdminOpt . isDefined ) Some ( ( ) ) else None ) ) 
 + 
 + def start ( ) : Unit = 
 + HttpApiFrontend . start ( system . settings . config ) 
 } 
 
 object HttpApi extends ExtensionId [ HttpApi ] with ExtensionIdProvider { 
 diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 index c138818 . . 473ba73 100644 
 - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 @ @ - 266 , 7 + 266 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( 
 Frontend . start ( serverConfig ) 
 
 system . log . debug ( " Starting Http Api " ) 
 - HttpApi ( system ) 
 + HttpApi ( system ) . start ( ) 
 
 ActorServer ( system ) 
 } catch {
