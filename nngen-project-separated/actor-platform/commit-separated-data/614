BLEU SCORE: 0.14991106946711685

TEST MSG: fix ( core + android ) : Fixing multiple memory leaks
GENERATED MSG: feat ( android ) : reactions in all content types

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / build . gradle b / actor - sdk / sdk - core - android / android - app / build . gradle < nl > index d2f1321 . . 156728c 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - app / build . gradle < nl > @ @ - 10 , 7 + 10 , 7 @ @ android { < nl > buildToolsVersion " 23 . 0 . 2 " < nl > < nl > defaultConfig { < nl > - applicationId " im . actor " < nl > + applicationId " im . actor . develop " < nl > minSdkVersion 15 < nl > targetSdkVersion 23 < nl > versionCode 1 < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index b5b44c0 . . fe8c2dd 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 7 , 7 + 7 , 7 @ @ import android . graphics . Color ; < nl > * / < nl > public class ActorStyle { < nl > < nl > - private int [ ] defaultBackgrouds = new int [ ] { R . drawable . img _ chat _ background _ default , R . drawable . bg _ 8 , R . drawable . bg _ 2 , R . drawable . bg _ 1 } ; < nl > + private int [ ] defaultBackgrouds = new int [ ] { R . drawable . img _ chat _ background _ default , R . drawable . bg _ 3 , R . drawable . bg _ 2 , R . drawable . bg _ 1 } ; < nl > < nl > private int toolBarColor = 0 ; < nl > private int fabColor = 0 ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index fdbfe89 . . 35549e5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 200 , 6 + 200 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private View shareContainer ; < nl > private View shareMenu ; < nl > private int shareMenuMaxHeight = 0 ; < nl > + private FastShareAdapter fastShareAdapter ; < nl > < nl > < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > @ @ - 352 , 11 + 353 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > File externalFile = Environment . getExternalStorageDirectory ( ) ; < nl > if ( externalFile = = null ) { < nl > Toast . makeText ( ChatActivity . this , R . string . toast _ no _ sdcard , Toast . LENGTH _ LONG ) . show ( ) ; < nl > - } else { < nl > + } else { < nl > String externalPath = externalFile . getAbsolutePath ( ) ; < nl > - new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; < nl > + new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; < nl > < nl > - pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . jpg " ; < nl > + pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . jpg " ; < nl > } < nl > if ( ContextCompat . checkSelfPermission ( ChatActivity . this , Manifest . permission . CAMERA ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > Log . d ( " Permissions " , " camera - no permission : c " ) ; < nl > @ @ - 372 , 11 + 373 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > File externalFile = Environment . getExternalStorageDirectory ( ) ; < nl > if ( externalFile = = null ) { < nl > Toast . makeText ( ChatActivity . this , R . string . toast _ no _ sdcard , Toast . LENGTH _ LONG ) . show ( ) ; < nl > - } else { < nl > + } else { < nl > String externalPath = externalFile . getAbsolutePath ( ) ; < nl > - new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; < nl > + new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; < nl > < nl > - pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . mp4 " ; < nl > + pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . mp4 " ; < nl > < nl > Intent i = new Intent ( MediaStore . ACTION _ VIDEO _ CAPTURE ) < nl > . putExtra ( MediaStore . EXTRA _ OUTPUT , Uri . fromFile ( new File ( pending _ fileName ) ) ) ; < nl > @ @ - 408 , 7 + 409 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > handleIntent ( ) ; < nl > < nl > RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; < nl > - final FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; < nl > + fastShareAdapter = new FastShareAdapter ( this ) ; < nl > LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; < nl > fastShare . setAdapter ( fastShareAdapter ) ; < nl > fastShare . setLayoutManager ( layoutManager ) ; < nl > @ @ - 479 , 7 + 480 , 6 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > < nl > < nl > - < nl > @ Override < nl > protected Fragment onCreateFragment ( ) { < nl > MessagesFragment fragment ; < nl > @ @ - 736 , 6 + 736 , 10 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > AudioHolder . stopPlaying ( ) ; < nl > / / Saving draft < nl > messenger ( ) . saveDraft ( peer , messageEditText . getText ( ) . toString ( ) ) ; < nl > + < nl > + if ( barAvatar ! = null ) { < nl > + barAvatar . unbind ( ) ; < nl > + } < nl > } < nl > < nl > / / Message send < nl > @ @ - 764 , 7 + 768 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > keyboardUtils . setImeVisibility ( messageEditText , false ) ; < nl > } < nl > < nl > - if ( textEditing ) { < nl > + if ( textEditing ) { < nl > execute ( messenger ( ) . updateMessage ( peer , rawText , currentEditRid ) , new CommandCallback < ResponseSeqDate > ( ) { < nl > @ Override < nl > public void onResult ( ResponseSeqDate res ) { < nl > @ @ - 778 , 9 + 782 , 9 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > public void run ( ) { < nl > RpcException re = ( RpcException ) e ; < nl > String error = " " ; < nl > - if ( re . getTag ( ) . equals ( " NOT _ IN _ TIME _ WINDOW " ) ) { < nl > + if ( re . getTag ( ) . equals ( " NOT _ IN _ TIME _ WINDOW " ) ) { < nl > error = getString ( R . string . edit _ message _ error _ slowpoke ) ; < nl > - } else if ( re . getTag ( ) . equals ( " NOT _ LAST _ MESSAGE " ) ) { < nl > + } else if ( re . getTag ( ) . equals ( " NOT _ LAST _ MESSAGE " ) ) { < nl > error = getString ( R . string . edit _ message _ error _ not _ last ) ; < nl > } < nl > Toast . makeText ( ChatActivity . this , error , Toast . LENGTH _ LONG ) . show ( ) ; < nl > @ @ - 790 , 7 + 794 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } ) ; < nl > goneView ( quoteContainer ) ; < nl > textEditing = false ; < nl > - } else { < nl > + } else { < nl > messenger ( ) . sendMessage ( peer , rawText ) ; < nl > } < nl > } < nl > @ @ - 1177 , 7 + 1181 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . RECORD _ AUDIO , Manifest . permission . VIBRATE , Manifest . permission . WAKE _ LOCK } , < nl > PERMISSIONS _ REQUEST _ FOR _ CALL ) ; < nl > < nl > - } else { < nl > + } else { < nl > startCall ( ) ; < nl > } < nl > } < nl > @ @ - 1195 , 10 + 1199 , 10 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > < nl > private void startCall ( ) { < nl > Command < Long > cmd ; < nl > - if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > + if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > cmd = messenger ( ) . doCall ( peer . getPeerId ( ) ) ; < nl > < nl > - } else { < nl > + } else { < nl > cmd = messenger ( ) . doGroupCall ( peer . getPeerId ( ) ) ; < nl > } < nl > execute ( cmd , R . string . progress _ common ) ; < nl > @ @ - 1359 , 6 + 1363 , 15 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > recordPoint . animate ( ) ; < nl > } < nl > < nl > + @ Override < nl > + protected void onDestroy ( ) { < nl > + super . onDestroy ( ) ; < nl > + if ( fastShareAdapter ! = null ) { < nl > + fastShareAdapter . release ( ) ; < nl > + fastShareAdapter = null ; < nl > + } < nl > + } < nl > + < nl > private void hideAudio ( boolean cancel ) { < nl > if ( ! isAudioVisible ) { < nl > return ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index a2d86ff . . b2caa89 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > + import android . content . Context ; < nl > import android . graphics . Color ; < nl > import android . text . Spannable ; < nl > import android . text . SpannableString ; < nl > @ @ - 21 , 6 + 22 , 7 @ @ import java . util . regex . Pattern ; < nl > < nl > import im . actor . core . entity . GroupMember ; < nl > import im . actor . core . entity . Message ; < nl > + import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . ContactContent ; < nl > @ @ - 49 , 7 + 51 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > private HashMap < Long , PreprocessedTextData > preprocessedTexts = new HashMap < Long , PreprocessedTextData > ( ) ; < nl > private HashSet < Integer > updatedTexts = new HashSet < Integer > ( ) ; < nl > < nl > - private MessagesFragment fragment ; < nl > + private Peer peer ; < nl > private boolean isGroup ; < nl > private int [ ] colors ; < nl > < nl > @ @ - 59 , 21 + 61 , 21 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > private Pattern mentionPattern ; < nl > private GroupVM group ; < nl > < nl > - public ChatListProcessor ( MessagesFragment fragment ) { < nl > - this . fragment = fragment ; < nl > + public ChatListProcessor ( Peer peer , Context context ) { < nl > + this . peer = peer ; < nl > < nl > - isGroup = fragment . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ; < nl > + isGroup = peer . getPeerType ( ) = = PeerType . GROUP ; < nl > if ( isGroup ) { < nl > - group = groups ( ) . get ( fragment . getPeer ( ) . getPeerId ( ) ) ; < nl > + group = groups ( ) . get ( peer . getPeerId ( ) ) ; < nl > } < nl > colors = new int [ ] { < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 0 ) , < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 1 ) , < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 2 ) , < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 3 ) , < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 4 ) , < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 5 ) , < nl > - fragment . getResources ( ) . getColor ( R . color . placeholder _ 6 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 0 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 1 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 2 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 3 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 4 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 5 ) , < nl > + context . getResources ( ) . getColor ( R . color . placeholder _ 6 ) , < nl > } ; < nl > } < nl > < nl > @ @ - 121 , 7 + 123 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) , isImage ? Color . WHITE : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , peer , msg . getRid ( ) , isImage ? Color . WHITE : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > @ @ - 169 , 9 + 171 , 9 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > UserVM userModel = users ( ) . get ( msg . getSenderId ( ) ) ; < nl > if ( userModel ! = null ) { < nl > String userName = userModel . getName ( ) . get ( ) ; < nl > - if ( userName . equals ( " Bot " ) ) { < nl > + if ( userName . equals ( " Bot " ) ) { < nl > name = group . getName ( ) . get ( ) ; < nl > - } else { < nl > + } else { < nl > name = userName ; < nl > } < nl > } else { < nl > @ @ - 267 , 8 + 269 , 4 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > } < nl > return res ; < nl > } < nl > - < nl > - public void setFragment ( MessagesFragment fragment ) { < nl > - this . fragment = fragment ; < nl > - } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java < nl > index c8bc4f7 . . b315598 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java < nl > @ @ - 30 , 7 + 30 , 6 @ @ public abstract class MessageHolder extends BindedViewHolder < nl > protected BubbleContainer container ; < nl > protected boolean isFullSize ; < nl > protected Message currentMessage ; < nl > - protected ActorBinder . Binding onlineBinding ; < nl > protected Spannable reactions ; < nl > protected boolean hasMyReaction ; < nl > < nl > @ @ - 99 , 20 + 98 , 6 @ @ public abstract class MessageHolder extends BindedViewHolder < nl > / / Updating selection state < nl > container . setBubbleSelected ( adapter . isSelected ( currentMessage ) ) ; < nl > < nl > - / / online < nl > - if ( onlineBinding ! = null ) { < nl > - getAdapter ( ) . getBinder ( ) . unbind ( onlineBinding ) ; < nl > - } < nl > - final UserVM user = users ( ) . get ( message . getSenderId ( ) ) ; < nl > - onlineBinding = getAdapter ( ) . getBinder ( ) . bind ( new ActorBinder . OnChangedListener < Boolean > ( ) { < nl > - @ Override < nl > - public void onChanged ( Boolean online ) { < nl > - setOnline ( online , user . isBot ( ) ) ; < nl > - } < nl > - < nl > - } , user . getPresence ( ) ) ; < nl > - setOnline ( user . getPresence ( ) . get ( ) . getState ( ) . equals ( UserPresence . State . ONLINE ) , user . isBot ( ) ) ; < nl > - < nl > hasMyReaction = false ; < nl > if ( preprocessedData ! = null ) { < nl > reactions = preprocessedData . getReactionsSpannable ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index 09683ac . . 4975fb1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 6 , 6 + 6 , 7 @ @ import android . app . AlertDialog ; < nl > import android . content . Context ; < nl > import android . content . DialogInterface ; < nl > import android . content . Intent ; < nl > + import android . content . SharedPreferences ; < nl > import android . graphics . Color ; < nl > import android . graphics . drawable . BitmapDrawable ; < nl > import android . graphics . drawable . Drawable ; < nl > @ @ - 27 , 6 + 28 , 7 @ @ import android . view . ViewGroup ; < nl > import android . view . inputmethod . InputMethodManager ; < nl > import android . widget . EditText ; < nl > import android . widget . FrameLayout ; < nl > + import android . widget . ImageView ; < nl > import android . widget . LinearLayout ; < nl > import android . widget . Toast ; < nl > < nl > @ @ - 52 , 11 + 54 , 13 @ @ import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . activity . ShortcutActivity ; < nl > import im . actor . sdk . controllers . fragment . DisplayListFragment ; < nl > import im . actor . sdk . controllers . conversation . ChatActivity ; < nl > + import im . actor . sdk . controllers . fragment . settings . BaseActorSettingsFragment ; < nl > import im . actor . sdk . util . Screen ; < nl > import im . actor . runtime . android . view . BindedListAdapter ; < nl > import im . actor . runtime . generic . mvvm . AndroidListUpdate ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . runtime . generic . mvvm . DisplayList ; < nl > + import im . actor . sdk . view . BackgroundPreviewView ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > import static im . actor . sdk . util . ActorSDKMessenger . myUid ; < nl > @ @ - 65 , 9 + 69 , 11 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > @ TargetApi ( Build . VERSION _ CODES . LOLLIPOP ) < nl > public class MessagesFragment extends DisplayListFragment < Message , MessageHolder > { < nl > < nl > + private static SharedPreferences wallpaperPrefs ; < nl > + < nl > private static final int REQUEST _ GALLERY = 198 ; < nl > private String shortcutText ; < nl > - private long firstUnread = - 1 ; < nl > + private long firstUnread = - 1 ; < nl > < nl > public static MessagesFragment create ( Peer peer ) { < nl > return new MessagesFragment ( peer ) ; < nl > @ @ - 80 , 6 + 86 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > / / private ConversationVM conversationVM ; < nl > private ActionMode actionMode ; < nl > private int onPauseSize = 0 ; < nl > + private ImageView chatBackgroundView ; < nl > < nl > public MessagesFragment ( Peer peer ) { < nl > this . peer = peer ; < nl > @ @ - 106 , 13 + 113 , 49 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > < nl > View res = inflate ( inflater , container , R . layout . fragment _ messages , onCreateDisplayList ( ) ) ; < nl > < nl > + / / < nl > + / / Loading background < nl > + / / < nl > + if ( wallpaperPrefs = = null ) { < nl > + wallpaperPrefs = getContext ( ) . getSharedPreferences ( " wallpaper " , Context . MODE _ PRIVATE ) ; < nl > + } < nl > + Drawable background ; < nl > + if ( messenger ( ) . getSelectedWallpaper ( ) = = null ) { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 1 " ) ) { < nl > + if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 1 ) { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > + } else { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + } < nl > + } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 2 " ) ) { < nl > + if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 2 ) { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > + } else { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + } < nl > + } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 3 " ) ) { < nl > + if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 3 ) { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > + } else { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + } < nl > + } else if ( messenger ( ) . getSelectedWallpaper ( ) . startsWith ( " local : " ) ) { < nl > + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + } else { < nl > + background = Drawable . createFromPath ( BaseActorSettingsFragment . getWallpaperFile ( ) ) ; < nl > + } < nl > + ( ( ImageView ) res . findViewById ( R . id . chatBackgroundView ) ) . setImageDrawable ( background ) ; < nl > + < nl > View footer = new View ( getActivity ( ) ) ; < nl > footer . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 8 ) ) ) ; < nl > + < nl > / / Add Footer as Header because of reverse layout < nl > addHeaderView ( footer ) ; < nl > < nl > View header = new View ( getActivity ( ) ) ; < nl > header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 64 ) ) ) ; < nl > + < nl > / / Add Header as Footer because of reverse layout < nl > addFooterView ( header ) ; < nl > < nl > @ @ - 124 , 9 + 167 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > protected BindedDisplayList < Message > onCreateDisplayList ( ) { < nl > BindedDisplayList < Message > res = messenger ( ) . getMessageDisplayList ( peer ) ; < nl > if ( res . getListProcessor ( ) = = null ) { < nl > - res . setListProcessor ( new ChatListProcessor ( this ) ) ; < nl > - } else { < nl > - ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; < nl > + res . setListProcessor ( new ChatListProcessor ( peer , this . getContext ( ) ) ) ; < nl > } < nl > return res ; < nl > } < nl > @ @ - 223 , 7 + 264 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > @ Override < nl > protected BindedListAdapter < Message , MessageHolder > onCreateAdapter ( BindedDisplayList < Message > displayList , Activity activity ) { < nl > messagesAdapter = new MessagesAdapter ( displayList , this , activity ) ; < nl > - if ( firstUnread ! = - 1 & & messagesAdapter . getFirstUnread ( ) = = - 1 ) { < nl > + if ( firstUnread ! = - 1 & & messagesAdapter . getFirstUnread ( ) = = - 1 ) { < nl > messagesAdapter . setFirstUnread ( firstUnread ) ; < nl > } < nl > return messagesAdapter ; < nl > @ @ - 273 , 9 + 314 , 9 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > actionMode . invalidate ( ) ; < nl > } < nl > return true ; < nl > - } else { < nl > - if ( message . getContent ( ) instanceof TextContent & & message . getSenderId ( ) = = myUid ( ) & & message . getSortDate ( ) > = messenger ( ) . loadFirstUnread ( peer ) ) { < nl > - ( ( ChatActivity ) getActivity ( ) ) . onEditTextMessage ( message . getRid ( ) , ( ( TextContent ) message . getContent ( ) ) . getText ( ) ) ; < nl > + } else { < nl > + if ( message . getContent ( ) instanceof TextContent & & message . getSenderId ( ) = = myUid ( ) & & message . getSortDate ( ) > = messenger ( ) . loadFirstUnread ( peer ) ) { < nl > + ( ( ChatActivity ) getActivity ( ) ) . onEditTextMessage ( message . getRid ( ) , ( ( TextContent ) message . getContent ( ) ) . getText ( ) ) ; < nl > return true ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java < nl > index 766062c . . c228431 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java < nl > @ @ - 330 , 6 + 330 , 6 @ @ public class BubbleContainer extends ViewGroup { < nl > } < nl > < nl > public void setOnline ( boolean online , boolean isBot ) { < nl > - avatarView . setOnline ( online , isBot ) ; < nl > + / / avatarView . setOnline ( online , isBot ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > index 84bc441 . . 0dc7569 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > @ @ - 26 , 20 + 26 , 24 @ @ import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > import im . actor . runtime . mvvm . ValueModel ; < nl > import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . fragment . ActorBinder ; < nl > import im . actor . sdk . util . Screen ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > < nl > public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { < nl > < nl > - ArrayList < String > imagesPath = new ArrayList < > ( ) ; < nl > - Set < String > selected = new HashSet < String > ( ) ; < nl > - Context context ; < nl > + private ArrayList < String > imagesPath = new ArrayList < > ( ) ; < nl > + private Set < String > selected = new HashSet < > ( ) ; < nl > + private Context context ; < nl > private ValueModel < Set < String > > selectedVM ; < nl > < nl > + private ActorBinder binder ; < nl > + < nl > public FastShareAdapter ( Context context ) { < nl > this . context = context ; < nl > - messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { < nl > + binder = new ActorBinder ( ) ; < nl > + binder . bind ( messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) , new ValueChangedListener < ArrayList < String > > ( ) { < nl > @ Override < nl > public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { < nl > imagesPath . clear ( ) ; < nl > @ @ - 56 , 6 + 60 , 9 @ @ public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . Fast < nl > . inflate ( id , viewGroup , false ) ; < nl > } < nl > < nl > + public void release ( ) { < nl > + binder . unbindAll ( ) ; < nl > + } < nl > < nl > @ Override < nl > public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java < nl > index d555dbb . . 8313b3e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java < nl > @ @ - 38 , 9 + 38 , 7 @ @ public class DocumentsFragment extends MessagesFragment { < nl > protected BindedDisplayList < Message > onCreateDisplayList ( ) { < nl > BindedDisplayList < Message > res = messenger ( ) . getDocsDisplayList ( peer ) ; < nl > if ( res . getListProcessor ( ) = = null ) { < nl > - res . setListProcessor ( new ChatListProcessor ( this ) ) ; < nl > - } else { < nl > - ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; < nl > + res . setListProcessor ( new ChatListProcessor ( peer , getContext ( ) ) ) ; < nl > } < nl > return res ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 1 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 1 . jpg < nl > new file mode 100644 < nl > index 0000000 . . 2ae02a0 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 1 . jpg differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 2 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 2 . jpg < nl > new file mode 100644 < nl > index 0000000 . . a34f79c < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 2 . jpg differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 3 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 3 . jpg < nl > new file mode 100644 < nl > index 0000000 . . f62554b < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 3 . jpg differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 1 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 1 . jpg < nl > deleted file mode 100644 < nl > index 2ae02a0 . . 0000000 < nl > Binary files a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 1 . jpg and / dev / null differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 2 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 2 . jpg < nl > deleted file mode 100644 < nl > index a34f79c . . 0000000 < nl > Binary files a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 2 . jpg and / dev / null differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 8 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 8 . jpg < nl > deleted file mode 100644 < nl > index f62554b . . 0000000 < nl > Binary files a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 8 . jpg and / dev / null differ < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml < nl > index ee5564e . . 90d21c2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml < nl > @ @ - 8 , 9 + 8 , 11 @ @ < nl > android : layout _ width = " match _ parent " < nl > android : layout _ height = " match _ parent " > < nl > < nl > - < im . actor . sdk . controllers . conversation . view . ChatBackgroundView < nl > + < ImageView < nl > + android : id = " @ + id / chatBackgroundView " < nl > android : layout _ width = " match _ parent " < nl > - android : layout _ height = " match _ parent " / > < nl > + android : layout _ height = " match _ parent " < nl > + android : scaleType = " centerCrop " / > < nl > < nl > < im . actor . sdk . controllers . conversation . view . ChatRecyclerView < nl > android : id = " @ + id / collection " < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java < nl > index ff03601 . . a3b3ecc 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java < nl > @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . runtime . android . threading ; < nl > < nl > import android . os . Handler ; < nl > import android . os . HandlerThread ; < nl > + import android . os . SystemClock ; < nl > < nl > import im . actor . runtime . threading . DispatchCancel ; < nl > import im . actor . runtime . threading . Dispatcher ; < nl > @ @ - 24 , 12 + 25 , 13 @ @ public class AndroidDispatcher implements Dispatcher { < nl > } < nl > < nl > @ Override < nl > - public DispatchCancel dispatch ( Runnable message , long delay ) { < nl > - handler . postDelayed ( message , delay ) ; < nl > + public DispatchCancel dispatch ( final Runnable message , long delay ) { < nl > + final Object o = new Object ( ) ; < nl > + handler . postAtTime ( message , o , SystemClock . uptimeMillis ( ) + delay ) ; < nl > return new DispatchCancel ( ) { < nl > @ Override < nl > public void cancel ( ) { < nl > - / / Do Nothing < nl > + handler . removeCallbacks ( message , o ) ; < nl > } < nl > } ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java < nl > index 6678f4e . . 536eb69 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java < nl > @ @ - 37 , 11 + 37 , 9 @ @ public class DisplayList < T > { < nl > private final OperationMode operationMode ; < nl > private volatile Object processedList ; < nl > < nl > - private CopyOnWriteArrayList < Listener > listeners = new CopyOnWriteArrayList < Listener > ( ) ; < nl > - private CopyOnWriteArrayList < AndroidChangeListener < T > > androidListeners = < nl > - new CopyOnWriteArrayList < AndroidChangeListener < T > > ( ) ; < nl > - private CopyOnWriteArrayList < AppleChangeListener < T > > appleListeners = < nl > - new CopyOnWriteArrayList < AppleChangeListener < T > > ( ) ; < nl > + private CopyOnWriteArrayList < Listener > listeners = new CopyOnWriteArrayList < > ( ) ; < nl > + private CopyOnWriteArrayList < AndroidChangeListener < T > > androidListeners = new CopyOnWriteArrayList < > ( ) ; < nl > + private CopyOnWriteArrayList < AppleChangeListener < T > > appleListeners = new CopyOnWriteArrayList < > ( ) ; < nl > < nl > private ListProcessor < T > listProcessor = null ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java < nl > index 13b929e . . 5e1c426 100755 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java < nl > @ @ - 114 , 18 + 114 , 24 @ @ public class Actor { < nl > context . setSender ( sender ) ; < nl > context . setMessage ( message ) ; < nl > < nl > - if ( receivers ! = null & & receivers . size ( ) > 0 ) { < nl > - receivers . get ( receivers . size ( ) - 1 ) . onReceive ( message ) ; < nl > - return ; < nl > - } < nl > + try { < nl > < nl > - if ( message instanceof Runnable ) { < nl > - ( ( Runnable ) message ) . run ( ) ; < nl > - return ; < nl > - } < nl > + if ( receivers ! = null & & receivers . size ( ) > 0 ) { < nl > + receivers . get ( receivers . size ( ) - 1 ) . onReceive ( message ) ; < nl > + return ; < nl > + } < nl > + < nl > + if ( message instanceof Runnable ) { < nl > + ( ( Runnable ) message ) . run ( ) ; < nl > + return ; < nl > + } < nl > < nl > + onReceive ( message ) ; < nl > < nl > - onReceive ( message ) ; < nl > + } finally { < nl > + context . setSender ( null ) ; < nl > + context . setMessage ( null ) ; < nl > + } < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java < nl > index 5c87c5d . . 404cc25 100755 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java < nl > @ @ - 96 , 5 + 96 , 7 @ @ public class ActorScope { < nl > < nl > public void onActorDie ( ) { < nl > this . actor = null ; < nl > + this . sender = null ; < nl > + this . message = null ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java < nl > index 3a2ba49 . . 35da6fa 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java < nl > @ @ - 551 , 6 + 551 , 7 @ @ public class Promise < T > { < nl > } < nl > } < nl > } < nl > + callbacks . clear ( ) ; < nl > } < nl > } ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java < nl > index 35e493a . . 140f954 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java < nl > @ @ - 259 , 7 + 259 , 7 @ @ public class AudioHolder extends MessageHolder { < nl > } < nl > < nl > / / Update time < nl > - time . setText ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > + setTimeAndReactions ( time ) ; < nl > currentDuration = ( ( VoiceContent ) message . getContent ( ) ) . getDuration ( ) ; < nl > duration . setText ( ActorSDK . sharedActor ( ) . getMessenger ( ) . getFormatter ( ) . formatDuration ( ( int ) ( currentDuration / 1000 ) ) ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 8a52e33 . . e1f52c0 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > + import android . graphics . Color ; < nl > import android . text . Spannable ; < nl > import android . text . SpannableString ; < nl > import android . text . SpannableStringBuilder ; < nl > @ @ - 22 , 7 + 23 , 10 @ @ import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . ContactContent ; < nl > + import im . actor . core . entity . content . LocationContent ; < nl > + import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > + import im . actor . core . entity . content . VideoContent ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . sdk . ActorSDK ; < nl > @ @ - 100 , 6 + 104 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > messenger ( ) . getUser ( msg . getSenderId ( ) ) ; < nl > < nl > / / Process reactions < nl > + boolean isImage = msg . getContent ( ) instanceof PhotoContent | | msg . getContent ( ) instanceof VideoContent | | msg . getContent ( ) instanceof LocationContent ; < nl > boolean hasReactions = msg . getReactions ( ) ! = null & & msg . getReactions ( ) . size ( ) > 0 ; < nl > Spannable reactions = null ; < nl > if ( hasReactions ) { < nl > @ @ - 115 , 7 + 120 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) , isImage ? Color . WHITE : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > @ @ - 218 , 7 + 223 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > preprocessedDatas . add ( preprocessedTexts . get ( msg . getRid ( ) ) ) ; < nl > } else { < nl > / / Nothing to do yet < nl > - preprocessedDatas . add ( null ) ; < nl > + preprocessedDatas . add ( new PreprocessedData ( reactions ) ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java < nl > index 881219f . . 66b24ca 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java < nl > @ @ - 23 , 12 + 23 , 21 @ @ import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . view . TintImageView ; < nl > import im . actor . sdk . view . avatar . AvatarPlaceholderDrawable ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . myUid ; < nl > < nl > public class ContactHolder extends MessageHolder { < nl > < nl > + private int waitColor ; < nl > + private int sentColor ; < nl > + private int deliveredColor ; < nl > + private int readColor ; < nl > + private int errorColor ; < nl > + private final TintImageView stateIcon ; < nl > + private final TextView time ; < nl > + < nl > private ViewGroup mainContainer ; < nl > private FrameLayout messageBubble ; < nl > private TextView text ; < nl > @ @ - 38 , 6 + 47 , 15 @ @ public class ContactHolder extends MessageHolder { < nl > < nl > public ContactHolder ( MessagesAdapter fragment , final View itemView ) { < nl > super ( fragment , itemView , false ) ; < nl > + waitColor = ActorSDK . sharedActor ( ) . style . getConvStatePendingColor ( ) ; < nl > + sentColor = ActorSDK . sharedActor ( ) . style . getConvStateSentColor ( ) ; < nl > + deliveredColor = ActorSDK . sharedActor ( ) . style . getConvStateDeliveredColor ( ) ; < nl > + readColor = ActorSDK . sharedActor ( ) . style . getConvStateReadColor ( ) ; < nl > + errorColor = ActorSDK . sharedActor ( ) . style . getConvStateErrorColor ( ) ; < nl > + < nl > + stateIcon = ( TintImageView ) itemView . findViewById ( R . id . stateIcon ) ; < nl > + time = ( TextView ) itemView . findViewById ( R . id . time ) ; < nl > + time . setTextColor ( ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > < nl > mainContainer = ( ViewGroup ) itemView . findViewById ( R . id . mainContainer ) ; < nl > messageBubble = ( FrameLayout ) itemView . findViewById ( R . id . fl _ bubble ) ; < nl > @ @ - 49 , 8 + 67 , 41 @ @ public class ContactHolder extends MessageHolder { < nl > < nl > @ Override < nl > protected void bindData ( final Message message , boolean isUpdated , PreprocessedData preprocessedData ) { < nl > - < nl > ContactContent contact = ( ContactContent ) message . getContent ( ) ; < nl > + < nl > + / / Update state < nl > + if ( message . getSenderId ( ) = = myUid ( ) ) { < nl > + stateIcon . setVisibility ( View . VISIBLE ) ; < nl > + switch ( message . getMessageState ( ) ) { < nl > + case ERROR : < nl > + stateIcon . setResource ( R . drawable . msg _ error ) ; < nl > + stateIcon . setTint ( errorColor ) ; < nl > + break ; < nl > + default : < nl > + case PENDING : < nl > + stateIcon . setResource ( R . drawable . msg _ clock ) ; < nl > + stateIcon . setTint ( waitColor ) ; < nl > + break ; < nl > + case READ : < nl > + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; < nl > + stateIcon . setTint ( readColor ) ; < nl > + break ; < nl > + case RECEIVED : < nl > + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; < nl > + stateIcon . setTint ( deliveredColor ) ; < nl > + break ; < nl > + case SENT : < nl > + stateIcon . setResource ( R . drawable . msg _ check _ 1 ) ; < nl > + stateIcon . setTint ( sentColor ) ; < nl > + break ; < nl > + } < nl > + } else { < nl > + stateIcon . setVisibility ( View . GONE ) ; < nl > + } < nl > + < nl > + / / Update time < nl > + setTimeAndReactions ( time ) ; < nl > + < nl > if ( message . getSenderId ( ) = = myUid ( ) ) { < nl > messageBubble . setBackgroundResource ( R . drawable . conv _ bubble _ media _ out ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java < nl > index f4301ba . . 822c736 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java < nl > @ @ - 31 , 12 + 31 , 21 @ @ import im . actor . sdk . util . images . ops . ImageLoading ; < nl > import im . actor . sdk . view . TintImageView ; < nl > import im . actor . runtime . files . FileSystemReference ; < nl > < nl > + import static im . actor . sdk . util . ActorSDKMessenger . myUid ; < nl > import static im . actor . sdk . util . ViewUtils . goneView ; < nl > import static im . actor . sdk . util . ViewUtils . showView ; < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > < nl > public class DocHolder extends MessageHolder { < nl > < nl > + private int waitColor ; < nl > + private int sentColor ; < nl > + private int deliveredColor ; < nl > + private int readColor ; < nl > + private int errorColor ; < nl > + private final TintImageView stateIcon ; < nl > + private final TextView time ; < nl > + < nl > / / Basic bubble < nl > private View menu ; < nl > < nl > @ @ - 62 , 6 + 71 , 15 @ @ public class DocHolder extends MessageHolder { < nl > < nl > public DocHolder ( final MessagesAdapter fragment , View itemView , boolean isFullSize ) { < nl > super ( fragment , itemView , isFullSize ) ; < nl > + waitColor = ActorSDK . sharedActor ( ) . style . getConvStatePendingColor ( ) ; < nl > + sentColor = ActorSDK . sharedActor ( ) . style . getConvStateSentColor ( ) ; < nl > + deliveredColor = ActorSDK . sharedActor ( ) . style . getConvStateDeliveredColor ( ) ; < nl > + readColor = ActorSDK . sharedActor ( ) . style . getConvStateReadColor ( ) ; < nl > + errorColor = ActorSDK . sharedActor ( ) . style . getConvStateErrorColor ( ) ; < nl > + < nl > + stateIcon = ( TintImageView ) itemView . findViewById ( R . id . stateIcon ) ; < nl > + time = ( TextView ) itemView . findViewById ( R . id . time ) ; < nl > + time . setTextColor ( ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > < nl > / / Basic bubble < nl > View bubbleView = itemView . findViewById ( R . id . bubbleContainer ) ; < nl > @ @ - 129 , 6 + 147 , 39 @ @ public class DocHolder extends MessageHolder { < nl > protected void bindData ( Message message , boolean isUpdated , PreprocessedData preprocessedData ) { < nl > document = ( DocumentContent ) message . getContent ( ) ; < nl > < nl > + / / Update state < nl > + if ( message . getSenderId ( ) = = myUid ( ) ) { < nl > + stateIcon . setVisibility ( View . VISIBLE ) ; < nl > + switch ( message . getMessageState ( ) ) { < nl > + case ERROR : < nl > + stateIcon . setResource ( R . drawable . msg _ error ) ; < nl > + stateIcon . setTint ( errorColor ) ; < nl > + break ; < nl > + default : < nl > + case PENDING : < nl > + stateIcon . setResource ( R . drawable . msg _ clock ) ; < nl > + stateIcon . setTint ( waitColor ) ; < nl > + break ; < nl > + case READ : < nl > + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; < nl > + stateIcon . setTint ( readColor ) ; < nl > + break ; < nl > + case RECEIVED : < nl > + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; < nl > + stateIcon . setTint ( deliveredColor ) ; < nl > + break ; < nl > + case SENT : < nl > + stateIcon . setResource ( R . drawable . msg _ check _ 1 ) ; < nl > + stateIcon . setTint ( sentColor ) ; < nl > + break ; < nl > + } < nl > + } else { < nl > + stateIcon . setVisibility ( View . GONE ) ; < nl > + } < nl > + < nl > + / / Update time < nl > + setTimeAndReactions ( time ) ; < nl > + < nl > / / Content data < nl > fileName . setText ( document . getName ( ) ) ; < nl > fileSize . setText ( messenger ( ) . getFormatter ( ) . formatFileSize ( document . getSource ( ) . getSize ( ) ) < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java < nl > index 9b624bf . . 030657c 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java < nl > @ @ - 140 , 8 + 140 , 7 @ @ public class LocationHolder extends MessageHolder { < nl > } < nl > < nl > / / Update time < nl > - time . setText ( ActorSDK . sharedActor ( ) . getMessenger ( ) . getFormatter ( ) . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > + setTimeAndReactions ( time ) ; < nl > < nl > previewView . setTag ( message . getRid ( ) ) ; < nl > new DownloadImageTask ( previewView , message . getRid ( ) ) < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java < nl > index 8ce84b5 . . e73474e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java < nl > @ @ - 1 , 7 + 1 , 14 @ @ < nl > package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > + import android . text . Spannable ; < nl > + import android . text . SpannableStringBuilder ; < nl > + import android . text . method . LinkMovementMethod ; < nl > + import android . view . GestureDetector ; < nl > + import android . view . MotionEvent ; < nl > import android . view . View ; < nl > + import android . widget . TextView ; < nl > < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . UserPresence ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . sdk . ActorSDK ; < nl > @ @ - 24 , 8 + 31 , 10 @ @ public abstract class MessageHolder extends BindedViewHolder < nl > private boolean isFullSize ; < nl > protected Message currentMessage ; < nl > protected ActorBinder . Binding onlineBinding ; < nl > + private Spannable reactions ; < nl > + private boolean hasMyReaction ; < nl > < nl > - public MessageHolder ( MessagesAdapter adapter , View itemView , boolean isFullSize ) { < nl > + public MessageHolder ( MessagesAdapter adapter , final View itemView , boolean isFullSize ) { < nl > super ( itemView ) ; < nl > this . adapter = adapter ; < nl > this . container = ( BubbleContainer ) itemView ; < nl > @ @ - 104 , 7 + 113 , 17 @ @ public abstract class MessageHolder extends BindedViewHolder < nl > } , user . getPresence ( ) ) ; < nl > setOnline ( user . getPresence ( ) . get ( ) . getState ( ) . equals ( UserPresence . State . ONLINE ) , user . isBot ( ) ) ; < nl > < nl > - < nl > + hasMyReaction = false ; < nl > + if ( preprocessedData ! = null ) { < nl > + reactions = preprocessedData . getReactionsSpannable ( ) ; < nl > + if ( reactions ! = null ) { < nl > + for ( ReactionSpan r : reactions . getSpans ( 0 , reactions . length ( ) , ReactionSpan . class ) ) { < nl > + if ( r . hasMyReaction ( ) ) { < nl > + hasMyReaction = true ; < nl > + } < nl > + } < nl > + } < nl > + } < nl > / / Bind content < nl > bindData ( message , isUpdated , preprocessedData ) ; < nl > ActorSDK . sharedActor ( ) . getMessenger ( ) . onUserVisible ( message . getSenderId ( ) ) ; < nl > @ @ - 138 , 12 + 157 , 23 @ @ public abstract class MessageHolder extends BindedViewHolder < nl > @ Override < nl > public boolean onLongClick ( View v ) { < nl > if ( currentMessage ! = null ) { < nl > - return adapter . getMessagesFragment ( ) . onLongClick ( currentMessage ) ; < nl > + return adapter . getMessagesFragment ( ) . onLongClick ( currentMessage , hasMyReaction ) ; < nl > } < nl > return false ; < nl > } < nl > < nl > + < nl > public void unbind ( ) { < nl > currentMessage = null ; < nl > } < nl > + < nl > + protected void setTimeAndReactions ( TextView time ) { < nl > + Spannable timeWithReactions = null ; < nl > + if ( reactions ! = null ) { < nl > + SpannableStringBuilder builder = new SpannableStringBuilder ( reactions ) ; < nl > + timeWithReactions = builder . append ( Strings . formatTime ( currentMessage . getDate ( ) ) ) ; < nl > + } < nl > + time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( currentMessage . getDate ( ) ) ) ; < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index c49973e . . 748b48a 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 31 , 7 + 31 , 9 @ @ import im . actor . core . entity . content . FileRemoteSource ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > + import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > @ @ - 243 , 7 + 245 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > return false ; < nl > } < nl > < nl > - public boolean onLongClick ( Message message ) { < nl > + public boolean onLongClick ( Message message , final boolean hasMyReaction ) { < nl > if ( actionMode = = null ) { < nl > messagesAdapter . clearSelection ( ) ; < nl > messagesAdapter . setSelected ( message , true ) ; < nl > @ @ - 273 , 6 + 275 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > menu . findItem ( R . id . copy ) . setVisible ( isAllText ) ; < nl > menu . findItem ( R . id . quote ) . setVisible ( isAllText ) ; < nl > menu . findItem ( R . id . forward ) . setVisible ( selected . length = = 1 | | isAllText ) ; < nl > + menu . findItem ( R . id . like ) . setVisible ( selected . length = = 1 ) ; < nl > return false ; < nl > } < nl > < nl > @ @ - 308 , 6 + 311 , 38 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > Toast . makeText ( getActivity ( ) , R . string . toast _ messages _ copied , Toast . LENGTH _ SHORT ) . show ( ) ; < nl > actionMode . finish ( ) ; < nl > return true ; < nl > + } else if ( menuItem . getItemId ( ) = = R . id . like ) { < nl > + Message currentMessage = messagesAdapter . getSelected ( ) [ 0 ] ; < nl > + < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( getPeer ( ) , currentMessage . getRid ( ) , " \ u2764 " ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( getPeer ( ) , currentMessage . getRid ( ) , " \ u2764 " ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + < nl > + } < nl > + actionMode . finish ( ) ; < nl > + return true ; < nl > + < nl > } else if ( menuItem . getItemId ( ) = = R . id . quote ) { < nl > String quote = " " ; < nl > String rawQuote = " " ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > index eb2bc0b . . 97c060d 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > @ @ - 165 , 8 + 165 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > } < nl > < nl > / / Update time < nl > - time . setText ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > + setTimeAndReactions ( time ) ; < nl > / / Update size < nl > if ( isNewMessage ) { < nl > int w , h ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java < nl > index 0e2f39e . . f597e47 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java < nl > @ @ - 2 , 7 + 2 , 7 @ @ package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . text . Spannable ; < nl > < nl > - public abstract class PreprocessedData { < nl > + public class PreprocessedData { < nl > private final Spannable reactionsSpannable ; < nl > < nl > protected PreprocessedData ( Spannable reactionsSpannable ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > index abfa92c . . d9236a2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 15 , 23 + 15 , 25 @ @ import im . actor . sdk . view . BaseUrlSpan ; < nl > < nl > public class ReactionSpan extends BaseUrlSpan { < nl > < nl > - boolean hasMyReaction ; < nl > + private boolean hasMyReaction ; < nl > Peer peer ; < nl > long rid ; < nl > String code ; < nl > + int baseColor ; < nl > < nl > - public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid , int baseColor ) { < nl > super ( code , false ) ; < nl > this . code = code ; < nl > this . hasMyReaction = hasMyReaction ; < nl > this . peer = peer ; < nl > this . rid = rid ; < nl > + this . baseColor = baseColor ; < nl > } < nl > < nl > @ Override < nl > public void updateDrawState ( TextPaint ds ) { < nl > super . updateDrawState ( ds ) ; < nl > - ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : baseColor ) ; < nl > ds . setUnderlineText ( false ) ; < nl > } < nl > < nl > @ @ - 63 , 4 + 65 , 8 @ @ public class ReactionSpan extends BaseUrlSpan { < nl > } ) ; < nl > } < nl > } < nl > + < nl > + public boolean hasMyReaction ( ) { < nl > + return hasMyReaction ; < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1c0ce2f . . f6e24ab 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 1 , 11 + 1 , 7 @ @ < nl > package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . text . Spannable ; < nl > - import android . text . SpannableString ; < nl > - import android . text . SpannableStringBuilder ; < nl > - import android . text . Spanned ; < nl > import android . text . method . LinkMovementMethod ; < nl > - import android . text . style . ForegroundColorSpan ; < nl > import android . view . MotionEvent ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > @ @ - 13 , 10 + 9 , 8 @ @ import android . widget . FrameLayout ; < nl > import android . widget . TextView ; < nl > < nl > import im . actor . core . entity . Message ; < nl > - import im . actor . core . entity . Reaction ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > - import im . actor . sdk . util . Strings ; < nl > import im . actor . sdk . util . Fonts ; < nl > import im . actor . sdk . view . TintImageView ; < nl > < nl > @ @ - 130 , 13 + 124 , 7 @ @ public class TextHolder extends MessageHolder { < nl > status . setVisibility ( View . GONE ) ; < nl > } < nl > < nl > - Spannable timeWithReactions = null ; < nl > - if ( reactions ! = null ) { < nl > - SpannableStringBuilder builder = new SpannableStringBuilder ( reactions ) ; < nl > - timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - } < nl > - time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > + setTimeAndReactions ( time ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml < nl > index 0da17a7 . . 977f19d 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml < nl > @ @ - 47 , 8 + 47 , 8 @ @ < nl > < FrameLayout < nl > android : layout _ marginLeft = " 48dp " < nl > android : layout _ marginRight = " 5dp " < nl > - android : layout _ marginTop = " 30dp " < nl > android : layout _ marginBottom = " 5dp " < nl > + android : layout _ marginTop = " 30dp " < nl > android : layout _ width = " 150dp " < nl > android : layout _ height = " wrap _ content " > < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml < nl > index db3e5e3 . . 95420b9 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml < nl > @ @ - 16 , 6 + 16 , 7 @ @ < nl > < nl > < LinearLayout < nl > android : padding = " 5dp " < nl > + android : layout _ marginBottom = " 15dp " < nl > android : layout _ width = " wrap _ content " < nl > android : layout _ height = " wrap _ content " < nl > android : orientation = " horizontal " > < nl > @ @ - 34 , 7 + 35 , 32 @ @ < nl > android : layout _ gravity = " top | left " < nl > android : includeFontPadding = " false " < nl > android : textSize = " 15sp " / > < nl > + < nl > + < nl > < / LinearLayout > < nl > < nl > + < LinearLayout < nl > + android : layout _ marginRight = " 5dp " < nl > + android : layout _ marginBottom = " 5dp " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : layout _ gravity = " bottom | right " < nl > + android : baselineAligned = " false " < nl > + android : gravity = " center _ vertical " > < nl > + < nl > + < TextView < nl > + android : id = " @ + id / time " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : gravity = " center _ vertical " < nl > + android : includeFontPadding = " false " < nl > + android : textSize = " 13sp " / > < nl > + < nl > + < im . actor . sdk . view . TintImageView < nl > + android : id = " @ + id / stateIcon " < nl > + android : layout _ width = " 16dp " < nl > + android : layout _ height = " 9dp " < nl > + android : layout _ marginLeft = " 2dp " / > < nl > + < / LinearLayout > < nl > < / FrameLayout > < nl > < / im . actor . sdk . controllers . conversation . view . BubbleContainer > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml < nl > index 7db41d1 . . 9fa9637 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml < nl > @ @ - 112 , 6 + 112 , 30 @ @ < nl > android : paddingTop = " 10dp " < nl > android : scaleType = " center " < nl > android : src = " @ drawable / conv _ media _ docs _ more " / > < nl > + < nl > + < LinearLayout < nl > + android : layout _ marginRight = " 5dp " < nl > + android : layout _ marginBottom = " 5dp " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : layout _ gravity = " bottom | right " < nl > + android : baselineAligned = " false " < nl > + android : gravity = " center _ vertical " > < nl > + < nl > + < TextView < nl > + android : id = " @ + id / time " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " < nl > + android : gravity = " center _ vertical " < nl > + android : includeFontPadding = " false " < nl > + android : textSize = " 13sp " / > < nl > + < nl > + < im . actor . sdk . view . TintImageView < nl > + android : id = " @ + id / stateIcon " < nl > + android : layout _ width = " 16dp " < nl > + android : layout _ height = " 9dp " < nl > + android : layout _ marginLeft = " 2dp " / > < nl > + < / LinearLayout > < nl > < / FrameLayout > < nl > < nl > < / LinearLayout > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml < nl > index a221126 . . db849a8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml < nl > @ @ - 9 , 7 + 9 , 7 @ @ < nl > < item < nl > android : id = " @ + id / forward " < nl > android : icon = " @ drawable / ic _ forward _ white _ 36dp " < nl > - android : title = " Quote " / > < nl > + android : title = " Forward " / > < nl > < nl > < item < nl > android : id = " @ + id / quote " < nl > @ @ - 26 , 6 + 26 , 11 @ @ < nl > android : icon = " @ drawable / ic _ content _ copy _ white _ 36dp " < nl > android : title = " Copy " / > < nl > < nl > + < item < nl > + android : icon = " @ drawable / ic _ favorite _ white _ 36dp " < nl > + android : id = " @ + id / like " < nl > + android : title = " Like " / > < nl > + < nl > < ! - - < item - - > < nl > < ! - - android : id = " @ + id / forward " - - > < nl > < ! - - android : icon = " @ drawable / ic _ forward _ white _ 36dp " - - >

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / build . gradle b / actor - sdk / sdk - core - android / android - app / build . gradle 
 index d2f1321 . . 156728c 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - app / build . gradle 
 @ @ - 10 , 7 + 10 , 7 @ @ android { 
 buildToolsVersion " 23 . 0 . 2 " 
 
 defaultConfig { 
 - applicationId " im . actor " 
 + applicationId " im . actor . develop " 
 minSdkVersion 15 
 targetSdkVersion 23 
 versionCode 1 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index b5b44c0 . . fe8c2dd 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 7 , 7 + 7 , 7 @ @ import android . graphics . Color ; 
 * / 
 public class ActorStyle { 
 
 - private int [ ] defaultBackgrouds = new int [ ] { R . drawable . img _ chat _ background _ default , R . drawable . bg _ 8 , R . drawable . bg _ 2 , R . drawable . bg _ 1 } ; 
 + private int [ ] defaultBackgrouds = new int [ ] { R . drawable . img _ chat _ background _ default , R . drawable . bg _ 3 , R . drawable . bg _ 2 , R . drawable . bg _ 1 } ; 
 
 private int toolBarColor = 0 ; 
 private int fabColor = 0 ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index fdbfe89 . . 35549e5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 200 , 6 + 200 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private View shareContainer ; 
 private View shareMenu ; 
 private int shareMenuMaxHeight = 0 ; 
 + private FastShareAdapter fastShareAdapter ; 
 
 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 @ @ - 352 , 11 + 353 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 File externalFile = Environment . getExternalStorageDirectory ( ) ; 
 if ( externalFile = = null ) { 
 Toast . makeText ( ChatActivity . this , R . string . toast _ no _ sdcard , Toast . LENGTH _ LONG ) . show ( ) ; 
 - } else { 
 + } else { 
 String externalPath = externalFile . getAbsolutePath ( ) ; 
 - new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; 
 + new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; 
 
 - pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . jpg " ; 
 + pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . jpg " ; 
 } 
 if ( ContextCompat . checkSelfPermission ( ChatActivity . this , Manifest . permission . CAMERA ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 Log . d ( " Permissions " , " camera - no permission : c " ) ; 
 @ @ - 372 , 11 + 373 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 File externalFile = Environment . getExternalStorageDirectory ( ) ; 
 if ( externalFile = = null ) { 
 Toast . makeText ( ChatActivity . this , R . string . toast _ no _ sdcard , Toast . LENGTH _ LONG ) . show ( ) ; 
 - } else { 
 + } else { 
 String externalPath = externalFile . getAbsolutePath ( ) ; 
 - new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; 
 + new File ( externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / " ) . mkdirs ( ) ; 
 
 - pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . mp4 " ; 
 + pending _ fileName = externalPath + " / " + ActorSDK . sharedActor ( ) . getAppName ( ) + " / capture / capture _ " + Randoms . randomId ( ) + " . mp4 " ; 
 
 Intent i = new Intent ( MediaStore . ACTION _ VIDEO _ CAPTURE ) 
 . putExtra ( MediaStore . EXTRA _ OUTPUT , Uri . fromFile ( new File ( pending _ fileName ) ) ) ; 
 @ @ - 408 , 7 + 409 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 handleIntent ( ) ; 
 
 RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; 
 - final FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; 
 + fastShareAdapter = new FastShareAdapter ( this ) ; 
 LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; 
 fastShare . setAdapter ( fastShareAdapter ) ; 
 fastShare . setLayoutManager ( layoutManager ) ; 
 @ @ - 479 , 7 + 480 , 6 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 
 
 - 
 @ Override 
 protected Fragment onCreateFragment ( ) { 
 MessagesFragment fragment ; 
 @ @ - 736 , 6 + 736 , 10 @ @ public class ChatActivity extends ActorEditTextActivity { 
 AudioHolder . stopPlaying ( ) ; 
 / / Saving draft 
 messenger ( ) . saveDraft ( peer , messageEditText . getText ( ) . toString ( ) ) ; 
 + 
 + if ( barAvatar ! = null ) { 
 + barAvatar . unbind ( ) ; 
 + } 
 } 
 
 / / Message send 
 @ @ - 764 , 7 + 768 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 keyboardUtils . setImeVisibility ( messageEditText , false ) ; 
 } 
 
 - if ( textEditing ) { 
 + if ( textEditing ) { 
 execute ( messenger ( ) . updateMessage ( peer , rawText , currentEditRid ) , new CommandCallback < ResponseSeqDate > ( ) { 
 @ Override 
 public void onResult ( ResponseSeqDate res ) { 
 @ @ - 778 , 9 + 782 , 9 @ @ public class ChatActivity extends ActorEditTextActivity { 
 public void run ( ) { 
 RpcException re = ( RpcException ) e ; 
 String error = " " ; 
 - if ( re . getTag ( ) . equals ( " NOT _ IN _ TIME _ WINDOW " ) ) { 
 + if ( re . getTag ( ) . equals ( " NOT _ IN _ TIME _ WINDOW " ) ) { 
 error = getString ( R . string . edit _ message _ error _ slowpoke ) ; 
 - } else if ( re . getTag ( ) . equals ( " NOT _ LAST _ MESSAGE " ) ) { 
 + } else if ( re . getTag ( ) . equals ( " NOT _ LAST _ MESSAGE " ) ) { 
 error = getString ( R . string . edit _ message _ error _ not _ last ) ; 
 } 
 Toast . makeText ( ChatActivity . this , error , Toast . LENGTH _ LONG ) . show ( ) ; 
 @ @ - 790 , 7 + 794 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } ) ; 
 goneView ( quoteContainer ) ; 
 textEditing = false ; 
 - } else { 
 + } else { 
 messenger ( ) . sendMessage ( peer , rawText ) ; 
 } 
 } 
 @ @ - 1177 , 7 + 1181 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . RECORD _ AUDIO , Manifest . permission . VIBRATE , Manifest . permission . WAKE _ LOCK } , 
 PERMISSIONS _ REQUEST _ FOR _ CALL ) ; 
 
 - } else { 
 + } else { 
 startCall ( ) ; 
 } 
 } 
 @ @ - 1195 , 10 + 1199 , 10 @ @ public class ChatActivity extends ActorEditTextActivity { 
 
 private void startCall ( ) { 
 Command < Long > cmd ; 
 - if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 + if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 cmd = messenger ( ) . doCall ( peer . getPeerId ( ) ) ; 
 
 - } else { 
 + } else { 
 cmd = messenger ( ) . doGroupCall ( peer . getPeerId ( ) ) ; 
 } 
 execute ( cmd , R . string . progress _ common ) ; 
 @ @ - 1359 , 6 + 1363 , 15 @ @ public class ChatActivity extends ActorEditTextActivity { 
 recordPoint . animate ( ) ; 
 } 
 
 + @ Override 
 + protected void onDestroy ( ) { 
 + super . onDestroy ( ) ; 
 + if ( fastShareAdapter ! = null ) { 
 + fastShareAdapter . release ( ) ; 
 + fastShareAdapter = null ; 
 + } 
 + } 
 + 
 private void hideAudio ( boolean cancel ) { 
 if ( ! isAudioVisible ) { 
 return ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index a2d86ff . . b2caa89 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . sdk . controllers . conversation . messages ; 
 
 + import android . content . Context ; 
 import android . graphics . Color ; 
 import android . text . Spannable ; 
 import android . text . SpannableString ; 
 @ @ - 21 , 6 + 22 , 7 @ @ import java . util . regex . Pattern ; 
 
 import im . actor . core . entity . GroupMember ; 
 import im . actor . core . entity . Message ; 
 + import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . ContactContent ; 
 @ @ - 49 , 7 + 51 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 private HashMap < Long , PreprocessedTextData > preprocessedTexts = new HashMap < Long , PreprocessedTextData > ( ) ; 
 private HashSet < Integer > updatedTexts = new HashSet < Integer > ( ) ; 
 
 - private MessagesFragment fragment ; 
 + private Peer peer ; 
 private boolean isGroup ; 
 private int [ ] colors ; 
 
 @ @ - 59 , 21 + 61 , 21 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 private Pattern mentionPattern ; 
 private GroupVM group ; 
 
 - public ChatListProcessor ( MessagesFragment fragment ) { 
 - this . fragment = fragment ; 
 + public ChatListProcessor ( Peer peer , Context context ) { 
 + this . peer = peer ; 
 
 - isGroup = fragment . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ; 
 + isGroup = peer . getPeerType ( ) = = PeerType . GROUP ; 
 if ( isGroup ) { 
 - group = groups ( ) . get ( fragment . getPeer ( ) . getPeerId ( ) ) ; 
 + group = groups ( ) . get ( peer . getPeerId ( ) ) ; 
 } 
 colors = new int [ ] { 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 0 ) , 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 1 ) , 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 2 ) , 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 3 ) , 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 4 ) , 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 5 ) , 
 - fragment . getResources ( ) . getColor ( R . color . placeholder _ 6 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 0 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 1 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 2 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 3 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 4 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 5 ) , 
 + context . getResources ( ) . getColor ( R . color . placeholder _ 6 ) , 
 } ; 
 } 
 
 @ @ - 121 , 7 + 123 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) , isImage ? Color . WHITE : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , peer , msg . getRid ( ) , isImage ? Color . WHITE : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 @ @ - 169 , 9 + 171 , 9 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 UserVM userModel = users ( ) . get ( msg . getSenderId ( ) ) ; 
 if ( userModel ! = null ) { 
 String userName = userModel . getName ( ) . get ( ) ; 
 - if ( userName . equals ( " Bot " ) ) { 
 + if ( userName . equals ( " Bot " ) ) { 
 name = group . getName ( ) . get ( ) ; 
 - } else { 
 + } else { 
 name = userName ; 
 } 
 } else { 
 @ @ - 267 , 8 + 269 , 4 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 } 
 return res ; 
 } 
 - 
 - public void setFragment ( MessagesFragment fragment ) { 
 - this . fragment = fragment ; 
 - } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java 
 index c8bc4f7 . . b315598 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java 
 @ @ - 30 , 7 + 30 , 6 @ @ public abstract class MessageHolder extends BindedViewHolder 
 protected BubbleContainer container ; 
 protected boolean isFullSize ; 
 protected Message currentMessage ; 
 - protected ActorBinder . Binding onlineBinding ; 
 protected Spannable reactions ; 
 protected boolean hasMyReaction ; 
 
 @ @ - 99 , 20 + 98 , 6 @ @ public abstract class MessageHolder extends BindedViewHolder 
 / / Updating selection state 
 container . setBubbleSelected ( adapter . isSelected ( currentMessage ) ) ; 
 
 - / / online 
 - if ( onlineBinding ! = null ) { 
 - getAdapter ( ) . getBinder ( ) . unbind ( onlineBinding ) ; 
 - } 
 - final UserVM user = users ( ) . get ( message . getSenderId ( ) ) ; 
 - onlineBinding = getAdapter ( ) . getBinder ( ) . bind ( new ActorBinder . OnChangedListener < Boolean > ( ) { 
 - @ Override 
 - public void onChanged ( Boolean online ) { 
 - setOnline ( online , user . isBot ( ) ) ; 
 - } 
 - 
 - } , user . getPresence ( ) ) ; 
 - setOnline ( user . getPresence ( ) . get ( ) . getState ( ) . equals ( UserPresence . State . ONLINE ) , user . isBot ( ) ) ; 
 - 
 hasMyReaction = false ; 
 if ( preprocessedData ! = null ) { 
 reactions = preprocessedData . getReactionsSpannable ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index 09683ac . . 4975fb1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 6 , 6 + 6 , 7 @ @ import android . app . AlertDialog ; 
 import android . content . Context ; 
 import android . content . DialogInterface ; 
 import android . content . Intent ; 
 + import android . content . SharedPreferences ; 
 import android . graphics . Color ; 
 import android . graphics . drawable . BitmapDrawable ; 
 import android . graphics . drawable . Drawable ; 
 @ @ - 27 , 6 + 28 , 7 @ @ import android . view . ViewGroup ; 
 import android . view . inputmethod . InputMethodManager ; 
 import android . widget . EditText ; 
 import android . widget . FrameLayout ; 
 + import android . widget . ImageView ; 
 import android . widget . LinearLayout ; 
 import android . widget . Toast ; 
 
 @ @ - 52 , 11 + 54 , 13 @ @ import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . activity . ShortcutActivity ; 
 import im . actor . sdk . controllers . fragment . DisplayListFragment ; 
 import im . actor . sdk . controllers . conversation . ChatActivity ; 
 + import im . actor . sdk . controllers . fragment . settings . BaseActorSettingsFragment ; 
 import im . actor . sdk . util . Screen ; 
 import im . actor . runtime . android . view . BindedListAdapter ; 
 import im . actor . runtime . generic . mvvm . AndroidListUpdate ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . runtime . generic . mvvm . DisplayList ; 
 + import im . actor . sdk . view . BackgroundPreviewView ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 import static im . actor . sdk . util . ActorSDKMessenger . myUid ; 
 @ @ - 65 , 9 + 69 , 11 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 @ TargetApi ( Build . VERSION _ CODES . LOLLIPOP ) 
 public class MessagesFragment extends DisplayListFragment < Message , MessageHolder > { 
 
 + private static SharedPreferences wallpaperPrefs ; 
 + 
 private static final int REQUEST _ GALLERY = 198 ; 
 private String shortcutText ; 
 - private long firstUnread = - 1 ; 
 + private long firstUnread = - 1 ; 
 
 public static MessagesFragment create ( Peer peer ) { 
 return new MessagesFragment ( peer ) ; 
 @ @ - 80 , 6 + 86 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 / / private ConversationVM conversationVM ; 
 private ActionMode actionMode ; 
 private int onPauseSize = 0 ; 
 + private ImageView chatBackgroundView ; 
 
 public MessagesFragment ( Peer peer ) { 
 this . peer = peer ; 
 @ @ - 106 , 13 + 113 , 49 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 
 View res = inflate ( inflater , container , R . layout . fragment _ messages , onCreateDisplayList ( ) ) ; 
 
 + / / 
 + / / Loading background 
 + / / 
 + if ( wallpaperPrefs = = null ) { 
 + wallpaperPrefs = getContext ( ) . getSharedPreferences ( " wallpaper " , Context . MODE _ PRIVATE ) ; 
 + } 
 + Drawable background ; 
 + if ( messenger ( ) . getSelectedWallpaper ( ) = = null ) { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 1 " ) ) { 
 + if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 1 ) { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 + } else { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + } 
 + } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 2 " ) ) { 
 + if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 2 ) { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 + } else { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + } 
 + } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 3 " ) ) { 
 + if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 3 ) { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 + } else { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + } 
 + } else if ( messenger ( ) . getSelectedWallpaper ( ) . startsWith ( " local : " ) ) { 
 + background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + } else { 
 + background = Drawable . createFromPath ( BaseActorSettingsFragment . getWallpaperFile ( ) ) ; 
 + } 
 + ( ( ImageView ) res . findViewById ( R . id . chatBackgroundView ) ) . setImageDrawable ( background ) ; 
 + 
 View footer = new View ( getActivity ( ) ) ; 
 footer . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 8 ) ) ) ; 
 + 
 / / Add Footer as Header because of reverse layout 
 addHeaderView ( footer ) ; 
 
 View header = new View ( getActivity ( ) ) ; 
 header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 64 ) ) ) ; 
 + 
 / / Add Header as Footer because of reverse layout 
 addFooterView ( header ) ; 
 
 @ @ - 124 , 9 + 167 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 protected BindedDisplayList < Message > onCreateDisplayList ( ) { 
 BindedDisplayList < Message > res = messenger ( ) . getMessageDisplayList ( peer ) ; 
 if ( res . getListProcessor ( ) = = null ) { 
 - res . setListProcessor ( new ChatListProcessor ( this ) ) ; 
 - } else { 
 - ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; 
 + res . setListProcessor ( new ChatListProcessor ( peer , this . getContext ( ) ) ) ; 
 } 
 return res ; 
 } 
 @ @ - 223 , 7 + 264 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 @ Override 
 protected BindedListAdapter < Message , MessageHolder > onCreateAdapter ( BindedDisplayList < Message > displayList , Activity activity ) { 
 messagesAdapter = new MessagesAdapter ( displayList , this , activity ) ; 
 - if ( firstUnread ! = - 1 & & messagesAdapter . getFirstUnread ( ) = = - 1 ) { 
 + if ( firstUnread ! = - 1 & & messagesAdapter . getFirstUnread ( ) = = - 1 ) { 
 messagesAdapter . setFirstUnread ( firstUnread ) ; 
 } 
 return messagesAdapter ; 
 @ @ - 273 , 9 + 314 , 9 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 actionMode . invalidate ( ) ; 
 } 
 return true ; 
 - } else { 
 - if ( message . getContent ( ) instanceof TextContent & & message . getSenderId ( ) = = myUid ( ) & & message . getSortDate ( ) > = messenger ( ) . loadFirstUnread ( peer ) ) { 
 - ( ( ChatActivity ) getActivity ( ) ) . onEditTextMessage ( message . getRid ( ) , ( ( TextContent ) message . getContent ( ) ) . getText ( ) ) ; 
 + } else { 
 + if ( message . getContent ( ) instanceof TextContent & & message . getSenderId ( ) = = myUid ( ) & & message . getSortDate ( ) > = messenger ( ) . loadFirstUnread ( peer ) ) { 
 + ( ( ChatActivity ) getActivity ( ) ) . onEditTextMessage ( message . getRid ( ) , ( ( TextContent ) message . getContent ( ) ) . getText ( ) ) ; 
 return true ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java 
 index 766062c . . c228431 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / BubbleContainer . java 
 @ @ - 330 , 6 + 330 , 6 @ @ public class BubbleContainer extends ViewGroup { 
 } 
 
 public void setOnline ( boolean online , boolean isBot ) { 
 - avatarView . setOnline ( online , isBot ) ; 
 + / / avatarView . setOnline ( online , isBot ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 index 84bc441 . . 0dc7569 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 @ @ - 26 , 20 + 26 , 24 @ @ import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 import im . actor . runtime . mvvm . ValueModel ; 
 import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . fragment . ActorBinder ; 
 import im . actor . sdk . util . Screen ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 
 public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { 
 
 - ArrayList < String > imagesPath = new ArrayList < > ( ) ; 
 - Set < String > selected = new HashSet < String > ( ) ; 
 - Context context ; 
 + private ArrayList < String > imagesPath = new ArrayList < > ( ) ; 
 + private Set < String > selected = new HashSet < > ( ) ; 
 + private Context context ; 
 private ValueModel < Set < String > > selectedVM ; 
 
 + private ActorBinder binder ; 
 + 
 public FastShareAdapter ( Context context ) { 
 this . context = context ; 
 - messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { 
 + binder = new ActorBinder ( ) ; 
 + binder . bind ( messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) , new ValueChangedListener < ArrayList < String > > ( ) { 
 @ Override 
 public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { 
 imagesPath . clear ( ) ; 
 @ @ - 56 , 6 + 60 , 9 @ @ public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . Fast 
 . inflate ( id , viewGroup , false ) ; 
 } 
 
 + public void release ( ) { 
 + binder . unbindAll ( ) ; 
 + } 
 
 @ Override 
 public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java 
 index d555dbb . . 8313b3e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / media / DocumentsFragment . java 
 @ @ - 38 , 9 + 38 , 7 @ @ public class DocumentsFragment extends MessagesFragment { 
 protected BindedDisplayList < Message > onCreateDisplayList ( ) { 
 BindedDisplayList < Message > res = messenger ( ) . getDocsDisplayList ( peer ) ; 
 if ( res . getListProcessor ( ) = = null ) { 
 - res . setListProcessor ( new ChatListProcessor ( this ) ) ; 
 - } else { 
 - ( ( ChatListProcessor ) res . getListProcessor ( ) ) . setFragment ( this ) ; 
 + res . setListProcessor ( new ChatListProcessor ( peer , getContext ( ) ) ) ; 
 } 
 return res ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 1 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 1 . jpg 
 new file mode 100644 
 index 0000000 . . 2ae02a0 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 1 . jpg differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 2 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 2 . jpg 
 new file mode 100644 
 index 0000000 . . a34f79c 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 2 . jpg differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 3 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 3 . jpg 
 new file mode 100644 
 index 0000000 . . f62554b 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable - xxhdpi / bg _ 3 . jpg differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 1 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 1 . jpg 
 deleted file mode 100644 
 index 2ae02a0 . . 0000000 
 Binary files a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 1 . jpg and / dev / null differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 2 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 2 . jpg 
 deleted file mode 100644 
 index a34f79c . . 0000000 
 Binary files a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 2 . jpg and / dev / null differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 8 . jpg b / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 8 . jpg 
 deleted file mode 100644 
 index f62554b . . 0000000 
 Binary files a / actor - sdk / sdk - core - android / android - sdk / src / main / res / drawable / bg _ 8 . jpg and / dev / null differ 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml 
 index ee5564e . . 90d21c2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ messages . xml 
 @ @ - 8 , 9 + 8 , 11 @ @ 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " match _ parent " > 
 
 - < im . actor . sdk . controllers . conversation . view . ChatBackgroundView 
 + < ImageView 
 + android : id = " @ + id / chatBackgroundView " 
 android : layout _ width = " match _ parent " 
 - android : layout _ height = " match _ parent " / > 
 + android : layout _ height = " match _ parent " 
 + android : scaleType = " centerCrop " / > 
 
 < im . actor . sdk . controllers . conversation . view . ChatRecyclerView 
 android : id = " @ + id / collection " 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java 
 index ff03601 . . a3b3ecc 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / threading / AndroidDispatcher . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . runtime . android . threading ; 
 
 import android . os . Handler ; 
 import android . os . HandlerThread ; 
 + import android . os . SystemClock ; 
 
 import im . actor . runtime . threading . DispatchCancel ; 
 import im . actor . runtime . threading . Dispatcher ; 
 @ @ - 24 , 12 + 25 , 13 @ @ public class AndroidDispatcher implements Dispatcher { 
 } 
 
 @ Override 
 - public DispatchCancel dispatch ( Runnable message , long delay ) { 
 - handler . postDelayed ( message , delay ) ; 
 + public DispatchCancel dispatch ( final Runnable message , long delay ) { 
 + final Object o = new Object ( ) ; 
 + handler . postAtTime ( message , o , SystemClock . uptimeMillis ( ) + delay ) ; 
 return new DispatchCancel ( ) { 
 @ Override 
 public void cancel ( ) { 
 - / / Do Nothing 
 + handler . removeCallbacks ( message , o ) ; 
 } 
 } ; 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java 
 index 6678f4e . . 536eb69 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - generic / src / main / java / im / actor / runtime / generic / mvvm / DisplayList . java 
 @ @ - 37 , 11 + 37 , 9 @ @ public class DisplayList < T > { 
 private final OperationMode operationMode ; 
 private volatile Object processedList ; 
 
 - private CopyOnWriteArrayList < Listener > listeners = new CopyOnWriteArrayList < Listener > ( ) ; 
 - private CopyOnWriteArrayList < AndroidChangeListener < T > > androidListeners = 
 - new CopyOnWriteArrayList < AndroidChangeListener < T > > ( ) ; 
 - private CopyOnWriteArrayList < AppleChangeListener < T > > appleListeners = 
 - new CopyOnWriteArrayList < AppleChangeListener < T > > ( ) ; 
 + private CopyOnWriteArrayList < Listener > listeners = new CopyOnWriteArrayList < > ( ) ; 
 + private CopyOnWriteArrayList < AndroidChangeListener < T > > androidListeners = new CopyOnWriteArrayList < > ( ) ; 
 + private CopyOnWriteArrayList < AppleChangeListener < T > > appleListeners = new CopyOnWriteArrayList < > ( ) ; 
 
 private ListProcessor < T > listProcessor = null ; 
 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java 
 index 13b929e . . 5e1c426 100755 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / Actor . java 
 @ @ - 114 , 18 + 114 , 24 @ @ public class Actor { 
 context . setSender ( sender ) ; 
 context . setMessage ( message ) ; 
 
 - if ( receivers ! = null & & receivers . size ( ) > 0 ) { 
 - receivers . get ( receivers . size ( ) - 1 ) . onReceive ( message ) ; 
 - return ; 
 - } 
 + try { 
 
 - if ( message instanceof Runnable ) { 
 - ( ( Runnable ) message ) . run ( ) ; 
 - return ; 
 - } 
 + if ( receivers ! = null & & receivers . size ( ) > 0 ) { 
 + receivers . get ( receivers . size ( ) - 1 ) . onReceive ( message ) ; 
 + return ; 
 + } 
 + 
 + if ( message instanceof Runnable ) { 
 + ( ( Runnable ) message ) . run ( ) ; 
 + return ; 
 + } 
 
 + onReceive ( message ) ; 
 
 - onReceive ( message ) ; 
 + } finally { 
 + context . setSender ( null ) ; 
 + context . setMessage ( null ) ; 
 + } 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java 
 index 5c87c5d . . 404cc25 100755 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorScope . java 
 @ @ - 96 , 5 + 96 , 7 @ @ public class ActorScope { 
 
 public void onActorDie ( ) { 
 this . actor = null ; 
 + this . sender = null ; 
 + this . message = null ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java 
 index 3a2ba49 . . 35da6fa 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java 
 @ @ - 551 , 6 + 551 , 7 @ @ public class Promise < T > { 
 } 
 } 
 } 
 + callbacks . clear ( ) ; 
 } 
 } ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java 
 index 35e493a . . 140f954 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / AudioHolder . java 
 @ @ - 259 , 7 + 259 , 7 @ @ public class AudioHolder extends MessageHolder { 
 } 
 
 / / Update time 
 - time . setText ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 + setTimeAndReactions ( time ) ; 
 currentDuration = ( ( VoiceContent ) message . getContent ( ) ) . getDuration ( ) ; 
 duration . setText ( ActorSDK . sharedActor ( ) . getMessenger ( ) . getFormatter ( ) . formatDuration ( ( int ) ( currentDuration / 1000 ) ) ) ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 8a52e33 . . e1f52c0 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . sdk . controllers . conversation . messages ; 
 
 + import android . graphics . Color ; 
 import android . text . Spannable ; 
 import android . text . SpannableString ; 
 import android . text . SpannableStringBuilder ; 
 @ @ - 22 , 7 + 23 , 10 @ @ import im . actor . core . entity . Message ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . ContactContent ; 
 + import im . actor . core . entity . content . LocationContent ; 
 + import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . TextContent ; 
 + import im . actor . core . entity . content . VideoContent ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . sdk . ActorSDK ; 
 @ @ - 100 , 6 + 104 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 messenger ( ) . getUser ( msg . getSenderId ( ) ) ; 
 
 / / Process reactions 
 + boolean isImage = msg . getContent ( ) instanceof PhotoContent | | msg . getContent ( ) instanceof VideoContent | | msg . getContent ( ) instanceof LocationContent ; 
 boolean hasReactions = msg . getReactions ( ) ! = null & & msg . getReactions ( ) . size ( ) > 0 ; 
 Spannable reactions = null ; 
 if ( hasReactions ) { 
 @ @ - 115 , 7 + 120 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) , isImage ? Color . WHITE : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 @ @ - 218 , 7 + 223 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 preprocessedDatas . add ( preprocessedTexts . get ( msg . getRid ( ) ) ) ; 
 } else { 
 / / Nothing to do yet 
 - preprocessedDatas . add ( null ) ; 
 + preprocessedDatas . add ( new PreprocessedData ( reactions ) ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java 
 index 881219f . . 66b24ca 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ContactHolder . java 
 @ @ - 23 , 12 + 23 , 21 @ @ import im . actor . core . entity . content . ContactContent ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . view . TintImageView ; 
 import im . actor . sdk . view . avatar . AvatarPlaceholderDrawable ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . myUid ; 
 
 public class ContactHolder extends MessageHolder { 
 
 + private int waitColor ; 
 + private int sentColor ; 
 + private int deliveredColor ; 
 + private int readColor ; 
 + private int errorColor ; 
 + private final TintImageView stateIcon ; 
 + private final TextView time ; 
 + 
 private ViewGroup mainContainer ; 
 private FrameLayout messageBubble ; 
 private TextView text ; 
 @ @ - 38 , 6 + 47 , 15 @ @ public class ContactHolder extends MessageHolder { 
 
 public ContactHolder ( MessagesAdapter fragment , final View itemView ) { 
 super ( fragment , itemView , false ) ; 
 + waitColor = ActorSDK . sharedActor ( ) . style . getConvStatePendingColor ( ) ; 
 + sentColor = ActorSDK . sharedActor ( ) . style . getConvStateSentColor ( ) ; 
 + deliveredColor = ActorSDK . sharedActor ( ) . style . getConvStateDeliveredColor ( ) ; 
 + readColor = ActorSDK . sharedActor ( ) . style . getConvStateReadColor ( ) ; 
 + errorColor = ActorSDK . sharedActor ( ) . style . getConvStateErrorColor ( ) ; 
 + 
 + stateIcon = ( TintImageView ) itemView . findViewById ( R . id . stateIcon ) ; 
 + time = ( TextView ) itemView . findViewById ( R . id . time ) ; 
 + time . setTextColor ( ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 
 mainContainer = ( ViewGroup ) itemView . findViewById ( R . id . mainContainer ) ; 
 messageBubble = ( FrameLayout ) itemView . findViewById ( R . id . fl _ bubble ) ; 
 @ @ - 49 , 8 + 67 , 41 @ @ public class ContactHolder extends MessageHolder { 
 
 @ Override 
 protected void bindData ( final Message message , boolean isUpdated , PreprocessedData preprocessedData ) { 
 - 
 ContactContent contact = ( ContactContent ) message . getContent ( ) ; 
 + 
 + / / Update state 
 + if ( message . getSenderId ( ) = = myUid ( ) ) { 
 + stateIcon . setVisibility ( View . VISIBLE ) ; 
 + switch ( message . getMessageState ( ) ) { 
 + case ERROR : 
 + stateIcon . setResource ( R . drawable . msg _ error ) ; 
 + stateIcon . setTint ( errorColor ) ; 
 + break ; 
 + default : 
 + case PENDING : 
 + stateIcon . setResource ( R . drawable . msg _ clock ) ; 
 + stateIcon . setTint ( waitColor ) ; 
 + break ; 
 + case READ : 
 + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; 
 + stateIcon . setTint ( readColor ) ; 
 + break ; 
 + case RECEIVED : 
 + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; 
 + stateIcon . setTint ( deliveredColor ) ; 
 + break ; 
 + case SENT : 
 + stateIcon . setResource ( R . drawable . msg _ check _ 1 ) ; 
 + stateIcon . setTint ( sentColor ) ; 
 + break ; 
 + } 
 + } else { 
 + stateIcon . setVisibility ( View . GONE ) ; 
 + } 
 + 
 + / / Update time 
 + setTimeAndReactions ( time ) ; 
 + 
 if ( message . getSenderId ( ) = = myUid ( ) ) { 
 messageBubble . setBackgroundResource ( R . drawable . conv _ bubble _ media _ out ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java 
 index f4301ba . . 822c736 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / DocHolder . java 
 @ @ - 31 , 12 + 31 , 21 @ @ import im . actor . sdk . util . images . ops . ImageLoading ; 
 import im . actor . sdk . view . TintImageView ; 
 import im . actor . runtime . files . FileSystemReference ; 
 
 + import static im . actor . sdk . util . ActorSDKMessenger . myUid ; 
 import static im . actor . sdk . util . ViewUtils . goneView ; 
 import static im . actor . sdk . util . ViewUtils . showView ; 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 
 public class DocHolder extends MessageHolder { 
 
 + private int waitColor ; 
 + private int sentColor ; 
 + private int deliveredColor ; 
 + private int readColor ; 
 + private int errorColor ; 
 + private final TintImageView stateIcon ; 
 + private final TextView time ; 
 + 
 / / Basic bubble 
 private View menu ; 
 
 @ @ - 62 , 6 + 71 , 15 @ @ public class DocHolder extends MessageHolder { 
 
 public DocHolder ( final MessagesAdapter fragment , View itemView , boolean isFullSize ) { 
 super ( fragment , itemView , isFullSize ) ; 
 + waitColor = ActorSDK . sharedActor ( ) . style . getConvStatePendingColor ( ) ; 
 + sentColor = ActorSDK . sharedActor ( ) . style . getConvStateSentColor ( ) ; 
 + deliveredColor = ActorSDK . sharedActor ( ) . style . getConvStateDeliveredColor ( ) ; 
 + readColor = ActorSDK . sharedActor ( ) . style . getConvStateReadColor ( ) ; 
 + errorColor = ActorSDK . sharedActor ( ) . style . getConvStateErrorColor ( ) ; 
 + 
 + stateIcon = ( TintImageView ) itemView . findViewById ( R . id . stateIcon ) ; 
 + time = ( TextView ) itemView . findViewById ( R . id . time ) ; 
 + time . setTextColor ( ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 
 / / Basic bubble 
 View bubbleView = itemView . findViewById ( R . id . bubbleContainer ) ; 
 @ @ - 129 , 6 + 147 , 39 @ @ public class DocHolder extends MessageHolder { 
 protected void bindData ( Message message , boolean isUpdated , PreprocessedData preprocessedData ) { 
 document = ( DocumentContent ) message . getContent ( ) ; 
 
 + / / Update state 
 + if ( message . getSenderId ( ) = = myUid ( ) ) { 
 + stateIcon . setVisibility ( View . VISIBLE ) ; 
 + switch ( message . getMessageState ( ) ) { 
 + case ERROR : 
 + stateIcon . setResource ( R . drawable . msg _ error ) ; 
 + stateIcon . setTint ( errorColor ) ; 
 + break ; 
 + default : 
 + case PENDING : 
 + stateIcon . setResource ( R . drawable . msg _ clock ) ; 
 + stateIcon . setTint ( waitColor ) ; 
 + break ; 
 + case READ : 
 + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; 
 + stateIcon . setTint ( readColor ) ; 
 + break ; 
 + case RECEIVED : 
 + stateIcon . setResource ( R . drawable . msg _ check _ 2 ) ; 
 + stateIcon . setTint ( deliveredColor ) ; 
 + break ; 
 + case SENT : 
 + stateIcon . setResource ( R . drawable . msg _ check _ 1 ) ; 
 + stateIcon . setTint ( sentColor ) ; 
 + break ; 
 + } 
 + } else { 
 + stateIcon . setVisibility ( View . GONE ) ; 
 + } 
 + 
 + / / Update time 
 + setTimeAndReactions ( time ) ; 
 + 
 / / Content data 
 fileName . setText ( document . getName ( ) ) ; 
 fileSize . setText ( messenger ( ) . getFormatter ( ) . formatFileSize ( document . getSource ( ) . getSize ( ) ) 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java 
 index 9b624bf . . 030657c 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / LocationHolder . java 
 @ @ - 140 , 8 + 140 , 7 @ @ public class LocationHolder extends MessageHolder { 
 } 
 
 / / Update time 
 - time . setText ( ActorSDK . sharedActor ( ) . getMessenger ( ) . getFormatter ( ) . formatTime ( message . getDate ( ) ) ) ; 
 - 
 + setTimeAndReactions ( time ) ; 
 
 previewView . setTag ( message . getRid ( ) ) ; 
 new DownloadImageTask ( previewView , message . getRid ( ) ) 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java 
 index 8ce84b5 . . e73474e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessageHolder . java 
 @ @ - 1 , 7 + 1 , 14 @ @ 
 package im . actor . sdk . controllers . conversation . messages ; 
 
 + import android . text . Spannable ; 
 + import android . text . SpannableStringBuilder ; 
 + import android . text . method . LinkMovementMethod ; 
 + import android . view . GestureDetector ; 
 + import android . view . MotionEvent ; 
 import android . view . View ; 
 + import android . widget . TextView ; 
 
 + import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . UserPresence ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . sdk . ActorSDK ; 
 @ @ - 24 , 8 + 31 , 10 @ @ public abstract class MessageHolder extends BindedViewHolder 
 private boolean isFullSize ; 
 protected Message currentMessage ; 
 protected ActorBinder . Binding onlineBinding ; 
 + private Spannable reactions ; 
 + private boolean hasMyReaction ; 
 
 - public MessageHolder ( MessagesAdapter adapter , View itemView , boolean isFullSize ) { 
 + public MessageHolder ( MessagesAdapter adapter , final View itemView , boolean isFullSize ) { 
 super ( itemView ) ; 
 this . adapter = adapter ; 
 this . container = ( BubbleContainer ) itemView ; 
 @ @ - 104 , 7 + 113 , 17 @ @ public abstract class MessageHolder extends BindedViewHolder 
 } , user . getPresence ( ) ) ; 
 setOnline ( user . getPresence ( ) . get ( ) . getState ( ) . equals ( UserPresence . State . ONLINE ) , user . isBot ( ) ) ; 
 
 - 
 + hasMyReaction = false ; 
 + if ( preprocessedData ! = null ) { 
 + reactions = preprocessedData . getReactionsSpannable ( ) ; 
 + if ( reactions ! = null ) { 
 + for ( ReactionSpan r : reactions . getSpans ( 0 , reactions . length ( ) , ReactionSpan . class ) ) { 
 + if ( r . hasMyReaction ( ) ) { 
 + hasMyReaction = true ; 
 + } 
 + } 
 + } 
 + } 
 / / Bind content 
 bindData ( message , isUpdated , preprocessedData ) ; 
 ActorSDK . sharedActor ( ) . getMessenger ( ) . onUserVisible ( message . getSenderId ( ) ) ; 
 @ @ - 138 , 12 + 157 , 23 @ @ public abstract class MessageHolder extends BindedViewHolder 
 @ Override 
 public boolean onLongClick ( View v ) { 
 if ( currentMessage ! = null ) { 
 - return adapter . getMessagesFragment ( ) . onLongClick ( currentMessage ) ; 
 + return adapter . getMessagesFragment ( ) . onLongClick ( currentMessage , hasMyReaction ) ; 
 } 
 return false ; 
 } 
 
 + 
 public void unbind ( ) { 
 currentMessage = null ; 
 } 
 + 
 + protected void setTimeAndReactions ( TextView time ) { 
 + Spannable timeWithReactions = null ; 
 + if ( reactions ! = null ) { 
 + SpannableStringBuilder builder = new SpannableStringBuilder ( reactions ) ; 
 + timeWithReactions = builder . append ( Strings . formatTime ( currentMessage . getDate ( ) ) ) ; 
 + } 
 + time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( currentMessage . getDate ( ) ) ) ; 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index c49973e . . 748b48a 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 31 , 7 + 31 , 9 @ @ import im . actor . core . entity . content . FileRemoteSource ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . UserVM ; 
 + import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 @ @ - 243 , 7 + 245 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 return false ; 
 } 
 
 - public boolean onLongClick ( Message message ) { 
 + public boolean onLongClick ( Message message , final boolean hasMyReaction ) { 
 if ( actionMode = = null ) { 
 messagesAdapter . clearSelection ( ) ; 
 messagesAdapter . setSelected ( message , true ) ; 
 @ @ - 273 , 6 + 275 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 menu . findItem ( R . id . copy ) . setVisible ( isAllText ) ; 
 menu . findItem ( R . id . quote ) . setVisible ( isAllText ) ; 
 menu . findItem ( R . id . forward ) . setVisible ( selected . length = = 1 | | isAllText ) ; 
 + menu . findItem ( R . id . like ) . setVisible ( selected . length = = 1 ) ; 
 return false ; 
 } 
 
 @ @ - 308 , 6 + 311 , 38 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 Toast . makeText ( getActivity ( ) , R . string . toast _ messages _ copied , Toast . LENGTH _ SHORT ) . show ( ) ; 
 actionMode . finish ( ) ; 
 return true ; 
 + } else if ( menuItem . getItemId ( ) = = R . id . like ) { 
 + Message currentMessage = messagesAdapter . getSelected ( ) [ 0 ] ; 
 + 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( getPeer ( ) , currentMessage . getRid ( ) , " \ u2764 " ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( getPeer ( ) , currentMessage . getRid ( ) , " \ u2764 " ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + 
 + } 
 + actionMode . finish ( ) ; 
 + return true ; 
 + 
 } else if ( menuItem . getItemId ( ) = = R . id . quote ) { 
 String quote = " " ; 
 String rawQuote = " " ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 index eb2bc0b . . 97c060d 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 @ @ - 165 , 8 + 165 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 } 
 
 / / Update time 
 - time . setText ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 + setTimeAndReactions ( time ) ; 
 / / Update size 
 if ( isNewMessage ) { 
 int w , h ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java 
 index 0e2f39e . . f597e47 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PreprocessedData . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . text . Spannable ; 
 
 - public abstract class PreprocessedData { 
 + public class PreprocessedData { 
 private final Spannable reactionsSpannable ; 
 
 protected PreprocessedData ( Spannable reactionsSpannable ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 index abfa92c . . d9236a2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 15 , 23 + 15 , 25 @ @ import im . actor . sdk . view . BaseUrlSpan ; 
 
 public class ReactionSpan extends BaseUrlSpan { 
 
 - boolean hasMyReaction ; 
 + private boolean hasMyReaction ; 
 Peer peer ; 
 long rid ; 
 String code ; 
 + int baseColor ; 
 
 - public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid , int baseColor ) { 
 super ( code , false ) ; 
 this . code = code ; 
 this . hasMyReaction = hasMyReaction ; 
 this . peer = peer ; 
 this . rid = rid ; 
 + this . baseColor = baseColor ; 
 } 
 
 @ Override 
 public void updateDrawState ( TextPaint ds ) { 
 super . updateDrawState ( ds ) ; 
 - ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : baseColor ) ; 
 ds . setUnderlineText ( false ) ; 
 } 
 
 @ @ - 63 , 4 + 65 , 8 @ @ public class ReactionSpan extends BaseUrlSpan { 
 } ) ; 
 } 
 } 
 + 
 + public boolean hasMyReaction ( ) { 
 + return hasMyReaction ; 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1c0ce2f . . f6e24ab 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 1 , 11 + 1 , 7 @ @ 
 package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . text . Spannable ; 
 - import android . text . SpannableString ; 
 - import android . text . SpannableStringBuilder ; 
 - import android . text . Spanned ; 
 import android . text . method . LinkMovementMethod ; 
 - import android . text . style . ForegroundColorSpan ; 
 import android . view . MotionEvent ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 @ @ - 13 , 10 + 9 , 8 @ @ import android . widget . FrameLayout ; 
 import android . widget . TextView ; 
 
 import im . actor . core . entity . Message ; 
 - import im . actor . core . entity . Reaction ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 - import im . actor . sdk . util . Strings ; 
 import im . actor . sdk . util . Fonts ; 
 import im . actor . sdk . view . TintImageView ; 
 
 @ @ - 130 , 13 + 124 , 7 @ @ public class TextHolder extends MessageHolder { 
 status . setVisibility ( View . GONE ) ; 
 } 
 
 - Spannable timeWithReactions = null ; 
 - if ( reactions ! = null ) { 
 - SpannableStringBuilder builder = new SpannableStringBuilder ( reactions ) ; 
 - timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 - } 
 - time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 + setTimeAndReactions ( time ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml 
 index 0da17a7 . . 977f19d 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ audio . xml 
 @ @ - 47 , 8 + 47 , 8 @ @ 
 < FrameLayout 
 android : layout _ marginLeft = " 48dp " 
 android : layout _ marginRight = " 5dp " 
 - android : layout _ marginTop = " 30dp " 
 android : layout _ marginBottom = " 5dp " 
 + android : layout _ marginTop = " 30dp " 
 android : layout _ width = " 150dp " 
 android : layout _ height = " wrap _ content " > 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml 
 index db3e5e3 . . 95420b9 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ contact . xml 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 
 < LinearLayout 
 android : padding = " 5dp " 
 + android : layout _ marginBottom = " 15dp " 
 android : layout _ width = " wrap _ content " 
 android : layout _ height = " wrap _ content " 
 android : orientation = " horizontal " > 
 @ @ - 34 , 7 + 35 , 32 @ @ 
 android : layout _ gravity = " top | left " 
 android : includeFontPadding = " false " 
 android : textSize = " 15sp " / > 
 + 
 + 
 < / LinearLayout > 
 
 + < LinearLayout 
 + android : layout _ marginRight = " 5dp " 
 + android : layout _ marginBottom = " 5dp " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ gravity = " bottom | right " 
 + android : baselineAligned = " false " 
 + android : gravity = " center _ vertical " > 
 + 
 + < TextView 
 + android : id = " @ + id / time " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : gravity = " center _ vertical " 
 + android : includeFontPadding = " false " 
 + android : textSize = " 13sp " / > 
 + 
 + < im . actor . sdk . view . TintImageView 
 + android : id = " @ + id / stateIcon " 
 + android : layout _ width = " 16dp " 
 + android : layout _ height = " 9dp " 
 + android : layout _ marginLeft = " 2dp " / > 
 + < / LinearLayout > 
 < / FrameLayout > 
 < / im . actor . sdk . controllers . conversation . view . BubbleContainer > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml 
 index 7db41d1 . . 9fa9637 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ doc . xml 
 @ @ - 112 , 6 + 112 , 30 @ @ 
 android : paddingTop = " 10dp " 
 android : scaleType = " center " 
 android : src = " @ drawable / conv _ media _ docs _ more " / > 
 + 
 + < LinearLayout 
 + android : layout _ marginRight = " 5dp " 
 + android : layout _ marginBottom = " 5dp " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ gravity = " bottom | right " 
 + android : baselineAligned = " false " 
 + android : gravity = " center _ vertical " > 
 + 
 + < TextView 
 + android : id = " @ + id / time " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : gravity = " center _ vertical " 
 + android : includeFontPadding = " false " 
 + android : textSize = " 13sp " / > 
 + 
 + < im . actor . sdk . view . TintImageView 
 + android : id = " @ + id / stateIcon " 
 + android : layout _ width = " 16dp " 
 + android : layout _ height = " 9dp " 
 + android : layout _ marginLeft = " 2dp " / > 
 + < / LinearLayout > 
 < / FrameLayout > 
 
 < / LinearLayout > 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml 
 index a221126 . . db849a8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / messages _ context . xml 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 < item 
 android : id = " @ + id / forward " 
 android : icon = " @ drawable / ic _ forward _ white _ 36dp " 
 - android : title = " Quote " / > 
 + android : title = " Forward " / > 
 
 < item 
 android : id = " @ + id / quote " 
 @ @ - 26 , 6 + 26 , 11 @ @ 
 android : icon = " @ drawable / ic _ content _ copy _ white _ 36dp " 
 android : title = " Copy " / > 
 
 + < item 
 + android : icon = " @ drawable / ic _ favorite _ white _ 36dp " 
 + android : id = " @ + id / like " 
 + android : title = " Like " / > 
 + 
 < ! - - < item - - > 
 < ! - - android : id = " @ + id / forward " - - > 
 < ! - - android : icon = " @ drawable / ic _ forward _ white _ 36dp " - - >
