BLEU SCORE: 0.06468490584192432

TEST MSG: fix ( core + ios ) : Fixing cancelling answer , fixing missing answer / decline buttons
GENERATED MSG: fix ( android ) : incoming call event - add uid

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > index 7455707 . . 3c8107e 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > @ @ - 79 , 7 + 79 , 8 @ @ public class AACallViewController : AAViewController { < nl > private func layoutButtons ( ) { < nl > if ! declineCallButton . hidden | | ! answerCallButton . hidden { < nl > if ! declineCallButton . hidden & & ! answerCallButton . hidden { < nl > - < nl > + declineCallButton . frame = CGRectMake ( ( self . view . width / 2 - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) < nl > + answerCallButton . frame = CGRectMake ( ( self . view . width / 2 ) + ( self . view . width / 2 - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) < nl > } else { < nl > if ! answerCallButton . hidden { < nl > answerCallButton . frame = CGRectMake ( ( self . view . width - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 702e352 . . 6429aa3 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 233 , 7 + 233 , 7 @ @ public class CallManagerActor extends ModuleActor { < nl > / / Notify Provider if this call was current < nl > / / < nl > if ( currentCall = = callId ) { < nl > - currentCall = callId ; < nl > + currentCall = null ; < nl > provider . onCallEnd ( callId ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java < nl > index 8ef9859 . . 4ff8de7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java < nl > @ @ - 61 , 8 + 61 , 6 @ @ public class CallSlaveActor extends CallActor { < nl > isAnswerPending = false ; < nl > sendSignalingMessage ( masterNode . getUid ( ) , masterNode . getDeviceId ( ) , new ApiAnswerCall ( ) ) ; < nl > } < nl > - < nl > - / / schedule ( new DoAnswer ( ) , 5000 ) ; < nl > } < nl > < nl > public void onNeedOffer ( int destUid , long destDeviceId ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java < nl > index 41d4fcb . . f63a5c0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java < nl > @ @ - 7 , 15 + 7 , 21 @ @ public class IncomingCall extends Event { < nl > public static final String EVENT = " incoming _ call " ; < nl > < nl > private long callId ; < nl > + private int uid ; < nl > < nl > - public IncomingCall ( long callId ) { < nl > + public IncomingCall ( long callId , int uid ) { < nl > this . callId = callId ; < nl > + this . uid = uid ; < nl > } < nl > < nl > public long getCall ( ) { < nl > return callId ; < nl > } < nl > < nl > + public int getUid ( ) { < nl > + return uid ; < nl > + } < nl > + < nl > @ Override < nl > public String getType ( ) { < nl > return EVENT ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > index 4788cbb . . 6af1423 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > @ @ - 95 , 7 + 95 , 7 @ @ public class CallsModule extends AbsModule { < nl > < nl > public void onIncomingCall ( long callId , int uid ) { < nl > if ( ! calls . keySet ( ) . contains ( callId ) ) { < nl > - context ( ) . getEvents ( ) . post ( new IncomingCall ( callId ) ) ; < nl > + context ( ) . getEvents ( ) . post ( new IncomingCall ( callId , uid ) ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 index 7455707 . . 3c8107e 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 @ @ - 79 , 7 + 79 , 8 @ @ public class AACallViewController : AAViewController { 
 private func layoutButtons ( ) { 
 if ! declineCallButton . hidden | | ! answerCallButton . hidden { 
 if ! declineCallButton . hidden & & ! answerCallButton . hidden { 
 - 
 + declineCallButton . frame = CGRectMake ( ( self . view . width / 2 - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) 
 + answerCallButton . frame = CGRectMake ( ( self . view . width / 2 ) + ( self . view . width / 2 - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) 
 } else { 
 if ! answerCallButton . hidden { 
 answerCallButton . frame = CGRectMake ( ( self . view . width - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 702e352 . . 6429aa3 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 233 , 7 + 233 , 7 @ @ public class CallManagerActor extends ModuleActor { 
 / / Notify Provider if this call was current 
 / / 
 if ( currentCall = = callId ) { 
 - currentCall = callId ; 
 + currentCall = null ; 
 provider . onCallEnd ( callId ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java 
 index 8ef9859 . . 4ff8de7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java 
 @ @ - 61 , 8 + 61 , 6 @ @ public class CallSlaveActor extends CallActor { 
 isAnswerPending = false ; 
 sendSignalingMessage ( masterNode . getUid ( ) , masterNode . getDeviceId ( ) , new ApiAnswerCall ( ) ) ; 
 } 
 - 
 - / / schedule ( new DoAnswer ( ) , 5000 ) ; 
 } 
 
 public void onNeedOffer ( int destUid , long destDeviceId ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java 
 index 41d4fcb . . f63a5c0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / IncomingCall . java 
 @ @ - 7 , 15 + 7 , 21 @ @ public class IncomingCall extends Event { 
 public static final String EVENT = " incoming _ call " ; 
 
 private long callId ; 
 + private int uid ; 
 
 - public IncomingCall ( long callId ) { 
 + public IncomingCall ( long callId , int uid ) { 
 this . callId = callId ; 
 + this . uid = uid ; 
 } 
 
 public long getCall ( ) { 
 return callId ; 
 } 
 
 + public int getUid ( ) { 
 + return uid ; 
 + } 
 + 
 @ Override 
 public String getType ( ) { 
 return EVENT ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 index 4788cbb . . 6af1423 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 @ @ - 95 , 7 + 95 , 7 @ @ public class CallsModule extends AbsModule { 
 
 public void onIncomingCall ( long callId , int uid ) { 
 if ( ! calls . keySet ( ) . contains ( callId ) ) { 
 - context ( ) . getEvents ( ) . post ( new IncomingCall ( callId ) ) ; 
 + context ( ) . getEvents ( ) . post ( new IncomingCall ( callId , uid ) ) ; 
 } 
 }
