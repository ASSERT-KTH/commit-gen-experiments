BLEU SCORE: 0.18951629567590744

TEST MSG: fix ( core ) : do not override maxInDate if it ' s not greater then date in ConversationState
GENERATED MSG: fix ( core ) : Fixing RouterActor UpdateMessageRead processing

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index c7546ed . . e3570c2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 218 , 8 + 218 , 8 @ @ public class RouterActor extends ModuleActor { < nl > if ( m . getSenderId ( ) ! = myUid ( ) ) { < nl > if ( m . getSortDate ( ) > state . getInReadDate ( ) ) { < nl > unreadCount + + ; < nl > + maxInDate = Math . max ( maxInDate , m . getSortDate ( ) ) ; < nl > } < nl > - maxInDate = Math . max ( maxInDate , m . getSortDate ( ) ) ; < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index 81f76a7 . . 887e33d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 740 , 7 + 740 , 7 @ @ public class RouterActor extends ModuleActor { < nl > UpdateMessageRead read = ( UpdateMessageRead ) update ; < nl > Peer peer = convert ( read . getPeer ( ) ) ; < nl > if ( isValidPeer ( peer ) ) { < nl > - onMessageRead ( peer , read . getReadDate ( ) ) ; < nl > + onMessageRead ( peer , read . getStartDate ( ) ) ; < nl > } < nl > return Promise . success ( null ) ; < nl > } else if ( update instanceof UpdateMessageReadByMe ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index c7546ed . . e3570c2 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 218 , 8 + 218 , 8 @ @ public class RouterActor extends ModuleActor { 
 if ( m . getSenderId ( ) ! = myUid ( ) ) { 
 if ( m . getSortDate ( ) > state . getInReadDate ( ) ) { 
 unreadCount + + ; 
 + maxInDate = Math . max ( maxInDate , m . getSortDate ( ) ) ; 
 } 
 - maxInDate = Math . max ( maxInDate , m . getSortDate ( ) ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index 81f76a7 . . 887e33d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 740 , 7 + 740 , 7 @ @ public class RouterActor extends ModuleActor { 
 UpdateMessageRead read = ( UpdateMessageRead ) update ; 
 Peer peer = convert ( read . getPeer ( ) ) ; 
 if ( isValidPeer ( peer ) ) { 
 - onMessageRead ( peer , read . getReadDate ( ) ) ; 
 + onMessageRead ( peer , read . getStartDate ( ) ) ; 
 } 
 return Promise . success ( null ) ; 
 } else if ( update instanceof UpdateMessageReadByMe ) {
