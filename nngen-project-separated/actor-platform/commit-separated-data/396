BLEU SCORE: 0.345720784641941

TEST MSG: feat ( js ) : New electron binding
GENERATED MSG: fix ( js ) : Fixing url handling

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > index cac21ca . . 9a560ed 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > @ @ - 7 , 30 + 7 , 30 @ @ public class JsElectronApp { < nl > } - * / ; < nl > < nl > public static native void bounce ( ) / * - { < nl > - var ipc = $ wnd . require ( ' ipc ' ) ; < nl > + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; < nl > ipc . send ( ' tray - bounce ' ) ; < nl > } - * / ; < nl > < nl > public static native void hideNewMessages ( ) / * - { < nl > - var ipc = $ wnd . require ( ' ipc ' ) ; < nl > + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; < nl > ipc . send ( ' new - messages - hide ' ) ; < nl > } - * / ; < nl > < nl > public static native void updateBadge ( int count ) / * - { < nl > - var ipc = $ wnd . require ( ' ipc ' ) ; < nl > + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; < nl > ipc . send ( ' tray - badge ' , { count : count } ) ; < nl > } - * / ; < nl > < nl > < nl > public static native void subscribe ( String topic , JsElectronListener listener ) / * - { < nl > - var ipc = $ wnd . require ( ' ipc ' ) ; < nl > + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; < nl > ipc . on ( topic , function ( message ) { < nl > listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; < nl > } ) ; < nl > } - * / ; < nl > < nl > public static native void openUrlExternal ( String url ) / * - { < nl > - var shell = $ wnd . require ( ' shell ' ) ; < nl > + var shell = $ wnd . require ( ' electron ' ) . shell ; < nl > shell . openExternal ( url ) ; < nl > } - * / ; < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index a0f187f . . 4583c31 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 5 , 6 + 5 , 7 @ @ < nl > package im . actor . core . js ; < nl > < nl > import com . google . gwt . core . client . JsArray ; < nl > + import com . google . gwt . dom . client . Element ; < nl > import com . google . gwt . i18n . client . LocaleInfo ; < nl > import com . google . gwt . i18n . client . TimeZone ; < nl > import com . google . gwt . user . client . Event ; < nl > @ @ - 1120 , 19 + 1121 , 12 @ @ public class JsFacade implements Exportable { < nl > } < nl > } < nl > < nl > - public native void handleLinkClick ( Event event ) / * - { < nl > - console . warn ( ' event type is ' , event . type ) ; < nl > - if ( event . type = = ' click ' ) { < nl > - if ( window . $ wnd . messenger . isElectron ( ) ) { < nl > - console . warn ( ' opening external ' ) ; < nl > - var url = event . target . getAttribute ( ' href ' ) ; < nl > - window . $ wnd . require ( ' shell ' ) . openExternal ( url ) ; < nl > - event . preventDefault ( ) < nl > - } else { < nl > - console . warn ( ' type of window . require is ' , typeof window . $ wnd . require ) ; < nl > - } < nl > - } else { < nl > - throw new Error ( " Event has type " + event . type + " , must to be click " ) ; < nl > + public void handleLinkClick ( Event event ) { < nl > + if ( JsElectronApp . isElectron ( ) ) { < nl > + Element target = Element . as ( event . getEventTarget ( ) ) ; < nl > + String href = target . getAttribute ( " href " ) ; < nl > + JsElectronApp . openUrlExternal ( href ) ; < nl > + event . preventDefault ( ) ; < nl > } < nl > - } - * / ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > index 50d9572 . . cac21ca 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > @ @ - 28 , 4 + 28 , 9 @ @ public class JsElectronApp { < nl > listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; < nl > } ) ; < nl > } - * / ; < nl > + < nl > + public static native void openUrlExternal ( String url ) / * - { < nl > + var shell = $ wnd . require ( ' shell ' ) ; < nl > + shell . openExternal ( url ) ; < nl > + } - * / ; < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 index cac21ca . . 9a560ed 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 @ @ - 7 , 30 + 7 , 30 @ @ public class JsElectronApp { 
 } - * / ; 
 
 public static native void bounce ( ) / * - { 
 - var ipc = $ wnd . require ( ' ipc ' ) ; 
 + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; 
 ipc . send ( ' tray - bounce ' ) ; 
 } - * / ; 
 
 public static native void hideNewMessages ( ) / * - { 
 - var ipc = $ wnd . require ( ' ipc ' ) ; 
 + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; 
 ipc . send ( ' new - messages - hide ' ) ; 
 } - * / ; 
 
 public static native void updateBadge ( int count ) / * - { 
 - var ipc = $ wnd . require ( ' ipc ' ) ; 
 + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; 
 ipc . send ( ' tray - badge ' , { count : count } ) ; 
 } - * / ; 
 
 
 public static native void subscribe ( String topic , JsElectronListener listener ) / * - { 
 - var ipc = $ wnd . require ( ' ipc ' ) ; 
 + var ipc = $ wnd . require ( " electron " ) . ipcRenderer ; 
 ipc . on ( topic , function ( message ) { 
 listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; 
 } ) ; 
 } - * / ; 
 
 public static native void openUrlExternal ( String url ) / * - { 
 - var shell = $ wnd . require ( ' shell ' ) ; 
 + var shell = $ wnd . require ( ' electron ' ) . shell ; 
 shell . openExternal ( url ) ; 
 } - * / ; 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index a0f187f . . 4583c31 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 5 , 6 + 5 , 7 @ @ 
 package im . actor . core . js ; 
 
 import com . google . gwt . core . client . JsArray ; 
 + import com . google . gwt . dom . client . Element ; 
 import com . google . gwt . i18n . client . LocaleInfo ; 
 import com . google . gwt . i18n . client . TimeZone ; 
 import com . google . gwt . user . client . Event ; 
 @ @ - 1120 , 19 + 1121 , 12 @ @ public class JsFacade implements Exportable { 
 } 
 } 
 
 - public native void handleLinkClick ( Event event ) / * - { 
 - console . warn ( ' event type is ' , event . type ) ; 
 - if ( event . type = = ' click ' ) { 
 - if ( window . $ wnd . messenger . isElectron ( ) ) { 
 - console . warn ( ' opening external ' ) ; 
 - var url = event . target . getAttribute ( ' href ' ) ; 
 - window . $ wnd . require ( ' shell ' ) . openExternal ( url ) ; 
 - event . preventDefault ( ) 
 - } else { 
 - console . warn ( ' type of window . require is ' , typeof window . $ wnd . require ) ; 
 - } 
 - } else { 
 - throw new Error ( " Event has type " + event . type + " , must to be click " ) ; 
 + public void handleLinkClick ( Event event ) { 
 + if ( JsElectronApp . isElectron ( ) ) { 
 + Element target = Element . as ( event . getEventTarget ( ) ) ; 
 + String href = target . getAttribute ( " href " ) ; 
 + JsElectronApp . openUrlExternal ( href ) ; 
 + event . preventDefault ( ) ; 
 } 
 - } - * / ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 index 50d9572 . . cac21ca 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 @ @ - 28 , 4 + 28 , 9 @ @ public class JsElectronApp { 
 listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; 
 } ) ; 
 } - * / ; 
 + 
 + public static native void openUrlExternal ( String url ) / * - { 
 + var shell = $ wnd . require ( ' shell ' ) ; 
 + shell . openExternal ( url ) ; 
 + } - * / ; 
 } 
 \ No newline at end of file
