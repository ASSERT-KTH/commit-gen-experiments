BLEU SCORE: 0.3050975216056289

TEST MSG: fix ( android ) : use sticker size
GENERATED MSG: feat ( android ) : add / remove reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java < nl > index bd8cccb . . 76c0382 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java < nl > @ @ - 2 , 6 + 2 , 8 @ @ package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . content . Context ; < nl > import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . widget . FrameLayout ; < nl > import android . widget . TextView ; < nl > < nl > import im . actor . core . entity . Message ; < nl > @ @ - 57 , 6 + 59 , 23 @ @ public class StickerHolder extends MessageHolder { < nl > StickerContent content = ( StickerContent ) message . getContent ( ) ; < nl > sticker . bind ( content . getSticker ( ) . getFileReference512 ( ) , Screen . dp ( 100 ) ) ; < nl > < nl > + int w = ( ( StickerContent ) message . getContent ( ) ) . getSticker ( ) . getWidth512 ( ) ; < nl > + int h = ( ( StickerContent ) message . getContent ( ) ) . getSticker ( ) . getHeight512 ( ) ; < nl > + < nl > + int maxHeight = context . getResources ( ) . getDisplayMetrics ( ) . heightPixels - Screen . dp ( 96 + 32 ) ; < nl > + maxHeight = Math . min ( Screen . dp ( 200 ) , maxHeight ) ; < nl > + int maxWidth = context . getResources ( ) . getDisplayMetrics ( ) . widthPixels - Screen . dp ( 32 + 48 ) ; < nl > + maxWidth = Math . min ( Screen . dp ( 200 ) , maxWidth ) ; < nl > + < nl > + float scale = Math . min ( maxWidth / ( float ) w , maxHeight / ( float ) h ) ; < nl > + < nl > + int bubbleW = ( int ) ( scale * w ) ; < nl > + int bubbleH = ( int ) ( scale * h ) ; < nl > + ViewGroup . LayoutParams params = sticker . getLayoutParams ( ) ; < nl > + params . height = bubbleH ; < nl > + params . width = bubbleW ; < nl > + < nl > + < nl > / / Update state < nl > if ( message . getSenderId ( ) = = myUid ( ) ) { < nl > stateIcon . setVisibility ( View . VISIBLE ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml < nl > index 1a182ce . . 0559da1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml < nl > @ @ - 1 , 4 + 1 , 6 @ @ < nl > - < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < ! - - < nl > + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < nl > + < nl > + < ! - - < nl > ~ Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - - >
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > index 692b43e . . 40e59cf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { < nl > < nl > private static final String TAG = " LinearLayoutManager " ; < nl > < nl > - private static final boolean DEBUG = true ; < nl > + private static final boolean DEBUG = false ; < nl > < nl > public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 7c42967 . . f8ee6ef 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > new file mode 100644 < nl > index 0000000 . . abfa92c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . graphics . Color ; < nl > + import android . graphics . Typeface ; < nl > + import android . text . TextPaint ; < nl > + import android . view . View ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > + < nl > + public class ReactionSpan extends BaseUrlSpan { < nl > + < nl > + boolean hasMyReaction ; < nl > + Peer peer ; < nl > + long rid ; < nl > + String code ; < nl > + < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + super ( code , false ) ; < nl > + this . code = code ; < nl > + this . hasMyReaction = hasMyReaction ; < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + } < nl > + < nl > + @ Override < nl > + public void updateDrawState ( TextPaint ds ) { < nl > + super . updateDrawState ( ds ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setUnderlineText ( false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( View widget ) { < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1a7465a . . 1c0ce2f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { < nl > timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > } < nl > time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > - < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java 
 index bd8cccb . . 76c0382 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / StickerHolder . java 
 @ @ - 2 , 6 + 2 , 8 @ @ package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . content . Context ; 
 import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . widget . FrameLayout ; 
 import android . widget . TextView ; 
 
 import im . actor . core . entity . Message ; 
 @ @ - 57 , 6 + 59 , 23 @ @ public class StickerHolder extends MessageHolder { 
 StickerContent content = ( StickerContent ) message . getContent ( ) ; 
 sticker . bind ( content . getSticker ( ) . getFileReference512 ( ) , Screen . dp ( 100 ) ) ; 
 
 + int w = ( ( StickerContent ) message . getContent ( ) ) . getSticker ( ) . getWidth512 ( ) ; 
 + int h = ( ( StickerContent ) message . getContent ( ) ) . getSticker ( ) . getHeight512 ( ) ; 
 + 
 + int maxHeight = context . getResources ( ) . getDisplayMetrics ( ) . heightPixels - Screen . dp ( 96 + 32 ) ; 
 + maxHeight = Math . min ( Screen . dp ( 200 ) , maxHeight ) ; 
 + int maxWidth = context . getResources ( ) . getDisplayMetrics ( ) . widthPixels - Screen . dp ( 32 + 48 ) ; 
 + maxWidth = Math . min ( Screen . dp ( 200 ) , maxWidth ) ; 
 + 
 + float scale = Math . min ( maxWidth / ( float ) w , maxHeight / ( float ) h ) ; 
 + 
 + int bubbleW = ( int ) ( scale * w ) ; 
 + int bubbleH = ( int ) ( scale * h ) ; 
 + ViewGroup . LayoutParams params = sticker . getLayoutParams ( ) ; 
 + params . height = bubbleH ; 
 + params . width = bubbleW ; 
 + 
 + 
 / / Update state 
 if ( message . getSenderId ( ) = = myUid ( ) ) { 
 stateIcon . setVisibility ( View . VISIBLE ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml 
 index 1a182ce . . 0559da1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / adapter _ dialog _ sticker . xml 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 - < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < ! - - 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + 
 + < ! - - 
 ~ Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - - >

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 index 692b43e . . 40e59cf 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { 
 
 private static final String TAG = " LinearLayoutManager " ; 
 
 - private static final boolean DEBUG = true ; 
 + private static final boolean DEBUG = false ; 
 
 public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 7c42967 . . f8ee6ef 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 new file mode 100644 
 index 0000000 . . abfa92c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . graphics . Color ; 
 + import android . graphics . Typeface ; 
 + import android . text . TextPaint ; 
 + import android . view . View ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 + 
 + public class ReactionSpan extends BaseUrlSpan { 
 + 
 + boolean hasMyReaction ; 
 + Peer peer ; 
 + long rid ; 
 + String code ; 
 + 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + super ( code , false ) ; 
 + this . code = code ; 
 + this . hasMyReaction = hasMyReaction ; 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + } 
 + 
 + @ Override 
 + public void updateDrawState ( TextPaint ds ) { 
 + super . updateDrawState ( ds ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setUnderlineText ( false ) ; 
 + } 
 + 
 + @ Override 
 + public void onClick ( View widget ) { 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1a7465a . . 1c0ce2f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { 
 timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 } 
 time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 - 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod {
