BLEU SCORE: 0.02383853510228548

TEST MSG: chore ( android ) : call fragment in delegate
GENERATED MSG: Merge commit ' 38f34b306a02a3f49f7f937eb5d33aacab3a4e26 ' into calls / v2

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > index f79148c . . 781e6fc 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > @ @ - 63 , 6 + 63 , 15 @ @ public interface ActorSDKDelegate { < nl > Fragment fragmentForProfile ( int uid ) ; < nl > < nl > / * * < nl > + * If not null returned , overrides call fragment < nl > + * < nl > + * @ param callId call id < nl > + * @ return Fragment < nl > + * / < nl > + @ Nullable < nl > + Fragment fragmentForCall ( long callId ) ; < nl > + < nl > + / * * < nl > * If not null returned , overrides group info fragment < nl > * < nl > * @ return Actor Intent < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index a098b7b . . eb6e839 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 54 , 6 + 54 , 12 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > return null ; < nl > } < nl > < nl > + @ Nullable < nl > + @ Override < nl > + public Fragment fragmentForCall ( long callId ) { < nl > + return null ; < nl > + } < nl > + < nl > @ Override < nl > public Fragment fragmentForGroupInfo ( int gid ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java < nl > index d2c1f0a . . 539d704 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java < nl > @ @ - 3 , 6 + 3 , 7 @ @ package im . actor . sdk . controllers . calls ; < nl > import android . graphics . Color ; < nl > import android . graphics . drawable . ColorDrawable ; < nl > import android . os . Bundle ; < nl > + import android . support . v4 . app . Fragment ; < nl > import android . view . Menu ; < nl > import android . view . WindowManager ; < nl > < nl > @ @ - 44 , 7 + 45 , 11 @ @ public class CallActivity extends BaseFragmentActivity { < nl > < nl > if ( savedInstanceState = = null ) { < nl > callId = getIntent ( ) . getLongExtra ( " callId " , - 1 ) ; < nl > - showFragment ( new CallFragment ( callId ) , false ) ; < nl > + Fragment callFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForCall ( callId ) ; < nl > + if ( callFragment = = null ) { < nl > + callFragment = CallFragment . create ( callId ) ; < nl > + } < nl > + showFragment ( callFragment , false ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index ad74e8d . . f0f2a9f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 76 , 82 + 76 , 87 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > < nl > public class CallFragment extends BaseFragment { < nl > < nl > - private static final int PERMISSIONS _ REQUEST _ FOR _ CALL = 147 ; < nl > - private static final int NOTIFICATION _ ID = 2 ; < nl > - private static final int TIMER _ ID = 1 ; < nl > - < nl > - private final ActorBinder ACTIVITY _ BINDER = new ActorBinder ( ) ; < nl > - < nl > - private long callId = - 1 ; < nl > - private Peer peer ; < nl > - < nl > - private Vibrator v ; < nl > - private View answerContainer ; < nl > - private Ringtone ringtone ; < nl > - private CallVM call ; < nl > - < nl > - private AvatarView avatarView ; < nl > - private TextView nameTV ; < nl > - private ActorRef timer ; < nl > - private TextView statusTV ; < nl > - private View [ ] avatarLayers ; < nl > - private View layer1 ; < nl > - private View layer2 ; < nl > - private View layer3 ; < nl > - < nl > - private NotificationManager manager ; < nl > - private CallState currentState ; < nl > - private ImageButton endCall ; < nl > - private View endCallContainer ; < nl > - private boolean speakerOn = false ; < nl > - private AudioManager audioManager ; < nl > - < nl > - private RecyclerListView membersList ; < nl > - < nl > - private float dX , dY ; < nl > - < nl > - private TintImageView muteCall ; < nl > - private TextView muteCallTv ; < nl > - private TintImageView speaker ; < nl > - private TextView speakerTV ; < nl > - private TintImageView videoIcon ; < nl > - private TextView videoTv ; < nl > + protected static final int PERMISSIONS _ REQUEST _ FOR _ CALL = 147 ; < nl > + protected static final int NOTIFICATION _ ID = 2 ; < nl > + protected static final int TIMER _ ID = 1 ; < nl > + < nl > + protected final ActorBinder ACTIVITY _ BINDER = new ActorBinder ( ) ; < nl > + < nl > + protected long callId = - 1 ; < nl > + protected Peer peer ; < nl > + < nl > + protected Vibrator v ; < nl > + protected View answerContainer ; < nl > + protected Ringtone ringtone ; < nl > + protected CallVM call ; < nl > + < nl > + protected AvatarView avatarView ; < nl > + protected TextView nameTV ; < nl > + protected ActorRef timer ; < nl > + protected TextView statusTV ; < nl > + protected View [ ] avatarLayers ; < nl > + protected View layer1 ; < nl > + protected View layer2 ; < nl > + protected View layer3 ; < nl > + < nl > + protected NotificationManager manager ; < nl > + protected CallState currentState ; < nl > + protected ImageButton endCall ; < nl > + protected View endCallContainer ; < nl > + protected boolean speakerOn = false ; < nl > + protected AudioManager audioManager ; < nl > + < nl > + protected RecyclerListView membersList ; < nl > + < nl > + protected float dX , dY ; < nl > + < nl > + protected TintImageView muteCall ; < nl > + protected TextView muteCallTv ; < nl > + protected TintImageView speaker ; < nl > + protected TextView speakerTV ; < nl > + protected TintImageView videoIcon ; < nl > + protected TextView videoTv ; < nl > < nl > / / < nl > / / Video References < nl > / / < nl > - private EglBase eglContext ; < nl > + protected EglBase eglContext ; < nl > < nl > - private SurfaceViewRenderer localVideoView ; < nl > - private VideoRenderer localRender ; < nl > - private boolean isLocalViewConfigured ; < nl > - private VideoTrack localTrack ; < nl > + protected SurfaceViewRenderer localVideoView ; < nl > + protected VideoRenderer localRender ; < nl > + protected boolean isLocalViewConfigured ; < nl > + protected VideoTrack localTrack ; < nl > < nl > - private SurfaceViewRenderer remoteVideoView ; < nl > - private VideoRenderer remoteRender ; < nl > - private boolean isRemoteViewConfigured ; < nl > - private VideoTrack remoteTrack ; < nl > + protected SurfaceViewRenderer remoteVideoView ; < nl > + protected VideoRenderer remoteRender ; < nl > + protected boolean isRemoteViewConfigured ; < nl > + protected VideoTrack remoteTrack ; < nl > < nl > < nl > / / < nl > / / Vibrate / tone / wakelock < nl > / / < nl > boolean vibrate = true ; < nl > - private PowerManager powerManager ; < nl > - private PowerManager . WakeLock wakeLock ; < nl > - private int field = 0x00000020 ; < nl > + protected PowerManager powerManager ; < nl > + protected PowerManager . WakeLock wakeLock ; < nl > + protected int field = 0x00000020 ; < nl > < nl > < nl > / / < nl > / / Constructor < nl > / / < nl > < nl > - public CallFragment ( ) { < nl > - manager = ( NotificationManager ) getActivity ( ) . getSystemService ( Context . NOTIFICATION _ SERVICE ) ; < nl > + static CallFragment create ( long callId ) { < nl > + CallFragment res = new CallFragment ( ) ; < nl > + Bundle args = new Bundle ( ) ; < nl > + args . putLong ( " call _ id " , callId ) ; < nl > + res . setArguments ( args ) ; < nl > + return res ; < nl > } < nl > < nl > - public CallFragment ( long callId ) { < nl > - this . callId = callId ; < nl > + public CallFragment ( ) { < nl > + manager = ( NotificationManager ) getActivity ( ) . getSystemService ( Context . NOTIFICATION _ SERVICE ) ; < nl > + this . callId = getArguments ( ) . getLong ( " call _ id " ) ; < nl > this . call = messenger ( ) . getCall ( callId ) ; < nl > if ( call = = null ) { < nl > this . peer = Peer . user ( myUid ( ) ) ; < nl > @ @ - 389 , 7 + 394 , 7 @ @ public class CallFragment extends BaseFragment { < nl > } < nl > } < nl > < nl > - private void startTimer ( ) { < nl > + protected void startTimer ( ) { < nl > < nl > final DateFormat formatter = new SimpleDateFormat ( " HH : mm : ss " ) ; < nl > formatter . setTimeZone ( TimeZone . getTimeZone ( " UTC " ) ) ; < nl > @ @ - 421 , 7 + 426 , 7 @ @ public class CallFragment extends BaseFragment { < nl > } < nl > } < nl > < nl > - private void initIncoming ( ) { < nl > + protected void initIncoming ( ) { < nl > < nl > getActivity ( ) . getWindow ( ) . addFlags ( WindowManager . LayoutParams . FLAG _ KEEP _ SCREEN _ ON | < nl > WindowManager . LayoutParams . FLAG _ DISMISS _ KEYGUARD | < nl > @ @ - 449 , 7 + 454 , 7 @ @ public class CallFragment extends BaseFragment { < nl > } ) . start ( ) ; < nl > } < nl > < nl > - private void onAnswer ( ) { < nl > + protected void onAnswer ( ) { < nl > < nl > endCallContainer . setVisibility ( View . VISIBLE ) ; < nl > answerContainer . setVisibility ( View . GONE ) ; < nl > @ @ - 460 , 7 + 465 , 7 @ @ public class CallFragment extends BaseFragment { < nl > messenger ( ) . answerCall ( callId ) ; < nl > } < nl > < nl > - private void doEndCall ( ) { < nl > + protected void doEndCall ( ) { < nl > messenger ( ) . endCall ( callId ) ; < nl > onCallEnd ( ) ; < nl > } < nl > @ @ - 778 , 7 + 783 , 7 @ @ public class CallFragment extends BaseFragment { < nl > class CallMembersAdapter extends HolderAdapter < CallMember > { < nl > < nl > < nl > - private ArrayList < CallMember > members ; < nl > + protected ArrayList < CallMember > members ; < nl > < nl > protected CallMembersAdapter ( Context context , final ValueModel < ArrayList < CallMember > > members ) { < nl > super ( context ) ; < nl > @ @ - 810 , 12 + 815 , 12 @ @ public class CallFragment extends BaseFragment { < nl > return new MemberHolder ( ) ; < nl > } < nl > < nl > - private class MemberHolder extends ViewHolder < CallMember > { < nl > + protected class MemberHolder extends ViewHolder < CallMember > { < nl > < nl > CallMember data ; < nl > - private TextView userName ; < nl > - private TextView status ; < nl > - private AvatarView avatarView ; < nl > + protected TextView userName ; < nl > + protected TextView status ; < nl > + protected AvatarView avatarView ; < nl > < nl > @ Override < nl > public View init ( final CallMember data , ViewGroup viewGroup , Context context ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > index 1a5bdbd . . ab63452 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java < nl > @ @ - 33 , 7 + 33 , 7 @ @ public class AudioActorEx extends AndroidPlayerActor { < nl > < nl > mplayer = new MediaPlayer ( ) ; < nl > mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; < nl > - / / mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; < nl > + mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; < nl > mplayer . prepare ( ) ; < nl > mplayer . setLooping ( true ) ; < nl > mplayer . start ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index dc07f04 . . fa9298f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 64 , 7 + 64 , 6 @ @ public class CallFragment extends BaseFragment { < nl > private Vibrator v ; < nl > private View answerContainer ; < nl > private Ringtone ringtone ; < nl > - private ActorRef toneActor ; < nl > private CallVM call ; < nl > private ActorRef timer ; < nl > private TextView timerTV ; < nl > @ @ - 160 , 7 + 159 , 7 @ @ public class CallFragment extends BaseFragment { < nl > initIncoming ( ) ; < nl > break ; < nl > case CALLING _ OUTGOING : < nl > - / / onConnecting ( ) ; < nl > + onConnecting ( ) ; < nl > break ; < nl > } < nl > } < nl > @ @ - 237 , 7 + 236 , 7 @ @ public class CallFragment extends BaseFragment { < nl > < nl > private void onAnswer ( ) { < nl > < nl > - / / onConnecting ( ) ; < nl > + onConnecting ( ) ; < nl > answerContainer . setVisibility ( View . INVISIBLE ) ; < nl > if ( ringtone ! = null ) { < nl > ringtone . stop ( ) ; < nl > @ @ - 261 , 64 + 260 , 6 @ @ public class CallFragment extends BaseFragment { < nl > < nl > < nl > public void onConnecting ( ) { < nl > - if ( toneActor = = null ) { < nl > - toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public AudioActorEx create ( ) { < nl > - return new AudioActorEx ( getActivity ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { < nl > - @ Override < nl > - public void onStart ( String fileName ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onStop ( String fileName ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onPause ( String fileName , float progress ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onProgress ( String fileName , float progress ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( String fileName ) { < nl > - < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) , " actor / android _ tone " ) ; < nl > - } < nl > - < nl > - toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; < nl > - < nl > - < nl > - vibrate = true ; < nl > - new Thread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - while ( vibrate ) { < nl > - try { < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 5 ) ; < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 200 ) ; < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 5 ) ; < nl > - v . vibrate ( 10 ) ; < nl > - Thread . sleep ( 600 ) ; < nl > - } catch ( InterruptedException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - } < nl > - } < nl > - } ) . start ( ) ; < nl > - < nl > powerManager = ( PowerManager ) getActivity ( ) . getSystemService ( Context . POWER _ SERVICE ) ; < nl > wakeLock = powerManager . newWakeLock ( field , getActivity ( ) . getLocalClassName ( ) ) ; < nl > < nl > @ @ - 329 , 9 + 270 , 6 @ @ public class CallFragment extends BaseFragment { < nl > < nl > < nl > public void onConnected ( ) { < nl > - if ( toneActor ! = null ) { < nl > - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; < nl > - } < nl > vibrate = false ; < nl > v . cancel ( ) ; < nl > v . vibrate ( 200 ) ; < nl > @ @ - 339 , 9 + 277 , 6 @ @ public class CallFragment extends BaseFragment { < nl > } < nl > < nl > public void onCallEnd ( ) { < nl > - if ( toneActor ! = null ) { < nl > - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; < nl > - } < nl > vibrate = false ; < nl > if ( ringtone ! = null ) { < nl > ringtone . stop ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > index 09a946c . . 661e59e 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java < nl > @ @ - 5 , 12 + 5 , 21 @ @ import android . content . Intent ; < nl > < nl > import im . actor . core . providers . CallsProvider ; < nl > import im . actor . core . viewmodel . CallState ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > + import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . controllers . calls . AudioActorEx ; < nl > import im . actor . sdk . controllers . calls . CallActivity ; < nl > + import im . actor . sdk . core . audio . AndroidPlayerActor ; < nl > + import im . actor . sdk . core . audio . AudioPlayerActor ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > < nl > public class AndroidCallProvider implements CallsProvider { < nl > + private ActorRef toneActor ; < nl > + < nl > < nl > @ Override < nl > public void onCallStart ( long callId ) { < nl > @ @ - 29 , 16 + 38 , 52 @ @ public class AndroidCallProvider implements CallsProvider { < nl > < nl > @ Override < nl > public void onCallEnd ( long callId ) { < nl > - messenger ( ) . getCall ( callId ) . getState ( ) . change ( CallState . ENDED ) ; < nl > + < nl > } < nl > < nl > @ Override < nl > public void startOutgoingBeep ( ) { < nl > - / / TODO : Implement < nl > + if ( toneActor = = null ) { < nl > + toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public AudioActorEx create ( ) { < nl > + return new AudioActorEx ( messenger ( ) . getContext ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { < nl > + @ Override < nl > + public void onStart ( String fileName ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onStop ( String fileName ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onPause ( String fileName , float progress ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onProgress ( String fileName , float progress ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( String fileName ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) , " actor / android _ tone " ) ; < nl > + } < nl > + < nl > + toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; < nl > } < nl > < nl > @ Override < nl > public void stopOutgoingBeep ( ) { < nl > - / / TODO : Implement < nl > + if ( toneActor ! = null ) { < nl > + toneActor . send ( new AudioActorEx . Stop ( ) ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav < nl > new file mode 100644 < nl > index 0000000 . . 65f98cb < nl > Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav differ

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 index f79148c . . 781e6fc 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 @ @ - 63 , 6 + 63 , 15 @ @ public interface ActorSDKDelegate { 
 Fragment fragmentForProfile ( int uid ) ; 
 
 / * * 
 + * If not null returned , overrides call fragment 
 + * 
 + * @ param callId call id 
 + * @ return Fragment 
 + * / 
 + @ Nullable 
 + Fragment fragmentForCall ( long callId ) ; 
 + 
 + / * * 
 * If not null returned , overrides group info fragment 
 * 
 * @ return Actor Intent 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index a098b7b . . eb6e839 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 54 , 6 + 54 , 12 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 return null ; 
 } 
 
 + @ Nullable 
 + @ Override 
 + public Fragment fragmentForCall ( long callId ) { 
 + return null ; 
 + } 
 + 
 @ Override 
 public Fragment fragmentForGroupInfo ( int gid ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java 
 index d2c1f0a . . 539d704 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallActivity . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package im . actor . sdk . controllers . calls ; 
 import android . graphics . Color ; 
 import android . graphics . drawable . ColorDrawable ; 
 import android . os . Bundle ; 
 + import android . support . v4 . app . Fragment ; 
 import android . view . Menu ; 
 import android . view . WindowManager ; 
 
 @ @ - 44 , 7 + 45 , 11 @ @ public class CallActivity extends BaseFragmentActivity { 
 
 if ( savedInstanceState = = null ) { 
 callId = getIntent ( ) . getLongExtra ( " callId " , - 1 ) ; 
 - showFragment ( new CallFragment ( callId ) , false ) ; 
 + Fragment callFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . fragmentForCall ( callId ) ; 
 + if ( callFragment = = null ) { 
 + callFragment = CallFragment . create ( callId ) ; 
 + } 
 + showFragment ( callFragment , false ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index ad74e8d . . f0f2a9f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 76 , 82 + 76 , 87 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 
 public class CallFragment extends BaseFragment { 
 
 - private static final int PERMISSIONS _ REQUEST _ FOR _ CALL = 147 ; 
 - private static final int NOTIFICATION _ ID = 2 ; 
 - private static final int TIMER _ ID = 1 ; 
 - 
 - private final ActorBinder ACTIVITY _ BINDER = new ActorBinder ( ) ; 
 - 
 - private long callId = - 1 ; 
 - private Peer peer ; 
 - 
 - private Vibrator v ; 
 - private View answerContainer ; 
 - private Ringtone ringtone ; 
 - private CallVM call ; 
 - 
 - private AvatarView avatarView ; 
 - private TextView nameTV ; 
 - private ActorRef timer ; 
 - private TextView statusTV ; 
 - private View [ ] avatarLayers ; 
 - private View layer1 ; 
 - private View layer2 ; 
 - private View layer3 ; 
 - 
 - private NotificationManager manager ; 
 - private CallState currentState ; 
 - private ImageButton endCall ; 
 - private View endCallContainer ; 
 - private boolean speakerOn = false ; 
 - private AudioManager audioManager ; 
 - 
 - private RecyclerListView membersList ; 
 - 
 - private float dX , dY ; 
 - 
 - private TintImageView muteCall ; 
 - private TextView muteCallTv ; 
 - private TintImageView speaker ; 
 - private TextView speakerTV ; 
 - private TintImageView videoIcon ; 
 - private TextView videoTv ; 
 + protected static final int PERMISSIONS _ REQUEST _ FOR _ CALL = 147 ; 
 + protected static final int NOTIFICATION _ ID = 2 ; 
 + protected static final int TIMER _ ID = 1 ; 
 + 
 + protected final ActorBinder ACTIVITY _ BINDER = new ActorBinder ( ) ; 
 + 
 + protected long callId = - 1 ; 
 + protected Peer peer ; 
 + 
 + protected Vibrator v ; 
 + protected View answerContainer ; 
 + protected Ringtone ringtone ; 
 + protected CallVM call ; 
 + 
 + protected AvatarView avatarView ; 
 + protected TextView nameTV ; 
 + protected ActorRef timer ; 
 + protected TextView statusTV ; 
 + protected View [ ] avatarLayers ; 
 + protected View layer1 ; 
 + protected View layer2 ; 
 + protected View layer3 ; 
 + 
 + protected NotificationManager manager ; 
 + protected CallState currentState ; 
 + protected ImageButton endCall ; 
 + protected View endCallContainer ; 
 + protected boolean speakerOn = false ; 
 + protected AudioManager audioManager ; 
 + 
 + protected RecyclerListView membersList ; 
 + 
 + protected float dX , dY ; 
 + 
 + protected TintImageView muteCall ; 
 + protected TextView muteCallTv ; 
 + protected TintImageView speaker ; 
 + protected TextView speakerTV ; 
 + protected TintImageView videoIcon ; 
 + protected TextView videoTv ; 
 
 / / 
 / / Video References 
 / / 
 - private EglBase eglContext ; 
 + protected EglBase eglContext ; 
 
 - private SurfaceViewRenderer localVideoView ; 
 - private VideoRenderer localRender ; 
 - private boolean isLocalViewConfigured ; 
 - private VideoTrack localTrack ; 
 + protected SurfaceViewRenderer localVideoView ; 
 + protected VideoRenderer localRender ; 
 + protected boolean isLocalViewConfigured ; 
 + protected VideoTrack localTrack ; 
 
 - private SurfaceViewRenderer remoteVideoView ; 
 - private VideoRenderer remoteRender ; 
 - private boolean isRemoteViewConfigured ; 
 - private VideoTrack remoteTrack ; 
 + protected SurfaceViewRenderer remoteVideoView ; 
 + protected VideoRenderer remoteRender ; 
 + protected boolean isRemoteViewConfigured ; 
 + protected VideoTrack remoteTrack ; 
 
 
 / / 
 / / Vibrate / tone / wakelock 
 / / 
 boolean vibrate = true ; 
 - private PowerManager powerManager ; 
 - private PowerManager . WakeLock wakeLock ; 
 - private int field = 0x00000020 ; 
 + protected PowerManager powerManager ; 
 + protected PowerManager . WakeLock wakeLock ; 
 + protected int field = 0x00000020 ; 
 
 
 / / 
 / / Constructor 
 / / 
 
 - public CallFragment ( ) { 
 - manager = ( NotificationManager ) getActivity ( ) . getSystemService ( Context . NOTIFICATION _ SERVICE ) ; 
 + static CallFragment create ( long callId ) { 
 + CallFragment res = new CallFragment ( ) ; 
 + Bundle args = new Bundle ( ) ; 
 + args . putLong ( " call _ id " , callId ) ; 
 + res . setArguments ( args ) ; 
 + return res ; 
 } 
 
 - public CallFragment ( long callId ) { 
 - this . callId = callId ; 
 + public CallFragment ( ) { 
 + manager = ( NotificationManager ) getActivity ( ) . getSystemService ( Context . NOTIFICATION _ SERVICE ) ; 
 + this . callId = getArguments ( ) . getLong ( " call _ id " ) ; 
 this . call = messenger ( ) . getCall ( callId ) ; 
 if ( call = = null ) { 
 this . peer = Peer . user ( myUid ( ) ) ; 
 @ @ - 389 , 7 + 394 , 7 @ @ public class CallFragment extends BaseFragment { 
 } 
 } 
 
 - private void startTimer ( ) { 
 + protected void startTimer ( ) { 
 
 final DateFormat formatter = new SimpleDateFormat ( " HH : mm : ss " ) ; 
 formatter . setTimeZone ( TimeZone . getTimeZone ( " UTC " ) ) ; 
 @ @ - 421 , 7 + 426 , 7 @ @ public class CallFragment extends BaseFragment { 
 } 
 } 
 
 - private void initIncoming ( ) { 
 + protected void initIncoming ( ) { 
 
 getActivity ( ) . getWindow ( ) . addFlags ( WindowManager . LayoutParams . FLAG _ KEEP _ SCREEN _ ON | 
 WindowManager . LayoutParams . FLAG _ DISMISS _ KEYGUARD | 
 @ @ - 449 , 7 + 454 , 7 @ @ public class CallFragment extends BaseFragment { 
 } ) . start ( ) ; 
 } 
 
 - private void onAnswer ( ) { 
 + protected void onAnswer ( ) { 
 
 endCallContainer . setVisibility ( View . VISIBLE ) ; 
 answerContainer . setVisibility ( View . GONE ) ; 
 @ @ - 460 , 7 + 465 , 7 @ @ public class CallFragment extends BaseFragment { 
 messenger ( ) . answerCall ( callId ) ; 
 } 
 
 - private void doEndCall ( ) { 
 + protected void doEndCall ( ) { 
 messenger ( ) . endCall ( callId ) ; 
 onCallEnd ( ) ; 
 } 
 @ @ - 778 , 7 + 783 , 7 @ @ public class CallFragment extends BaseFragment { 
 class CallMembersAdapter extends HolderAdapter < CallMember > { 
 
 
 - private ArrayList < CallMember > members ; 
 + protected ArrayList < CallMember > members ; 
 
 protected CallMembersAdapter ( Context context , final ValueModel < ArrayList < CallMember > > members ) { 
 super ( context ) ; 
 @ @ - 810 , 12 + 815 , 12 @ @ public class CallFragment extends BaseFragment { 
 return new MemberHolder ( ) ; 
 } 
 
 - private class MemberHolder extends ViewHolder < CallMember > { 
 + protected class MemberHolder extends ViewHolder < CallMember > { 
 
 CallMember data ; 
 - private TextView userName ; 
 - private TextView status ; 
 - private AvatarView avatarView ; 
 + protected TextView userName ; 
 + protected TextView status ; 
 + protected AvatarView avatarView ; 
 
 @ Override 
 public View init ( final CallMember data , ViewGroup viewGroup , Context context ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 index 1a5bdbd . . ab63452 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / AudioActorEx . java 
 @ @ - 33 , 7 + 33 , 7 @ @ public class AudioActorEx extends AndroidPlayerActor { 
 
 mplayer = new MediaPlayer ( ) ; 
 mplayer . setAudioStreamType ( AudioManager . STREAM _ VOICE _ CALL ) ; 
 - / / mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; 
 + mplayer . setDataSource ( context , Uri . parse ( " android . resource : / / " + context . getPackageName ( ) + " / " + R . raw . tone ) ) ; 
 mplayer . prepare ( ) ; 
 mplayer . setLooping ( true ) ; 
 mplayer . start ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index dc07f04 . . fa9298f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 64 , 7 + 64 , 6 @ @ public class CallFragment extends BaseFragment { 
 private Vibrator v ; 
 private View answerContainer ; 
 private Ringtone ringtone ; 
 - private ActorRef toneActor ; 
 private CallVM call ; 
 private ActorRef timer ; 
 private TextView timerTV ; 
 @ @ - 160 , 7 + 159 , 7 @ @ public class CallFragment extends BaseFragment { 
 initIncoming ( ) ; 
 break ; 
 case CALLING _ OUTGOING : 
 - / / onConnecting ( ) ; 
 + onConnecting ( ) ; 
 break ; 
 } 
 } 
 @ @ - 237 , 7 + 236 , 7 @ @ public class CallFragment extends BaseFragment { 
 
 private void onAnswer ( ) { 
 
 - / / onConnecting ( ) ; 
 + onConnecting ( ) ; 
 answerContainer . setVisibility ( View . INVISIBLE ) ; 
 if ( ringtone ! = null ) { 
 ringtone . stop ( ) ; 
 @ @ - 261 , 64 + 260 , 6 @ @ public class CallFragment extends BaseFragment { 
 
 
 public void onConnecting ( ) { 
 - if ( toneActor = = null ) { 
 - toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public AudioActorEx create ( ) { 
 - return new AudioActorEx ( getActivity ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { 
 - @ Override 
 - public void onStart ( String fileName ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onStop ( String fileName ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onPause ( String fileName , float progress ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onProgress ( String fileName , float progress ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onError ( String fileName ) { 
 - 
 - } 
 - } ) ; 
 - } 
 - } ) , " actor / android _ tone " ) ; 
 - } 
 - 
 - toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; 
 - 
 - 
 - vibrate = true ; 
 - new Thread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - while ( vibrate ) { 
 - try { 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 5 ) ; 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 200 ) ; 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 5 ) ; 
 - v . vibrate ( 10 ) ; 
 - Thread . sleep ( 600 ) ; 
 - } catch ( InterruptedException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - } 
 - } 
 - } ) . start ( ) ; 
 - 
 powerManager = ( PowerManager ) getActivity ( ) . getSystemService ( Context . POWER _ SERVICE ) ; 
 wakeLock = powerManager . newWakeLock ( field , getActivity ( ) . getLocalClassName ( ) ) ; 
 
 @ @ - 329 , 9 + 270 , 6 @ @ public class CallFragment extends BaseFragment { 
 
 
 public void onConnected ( ) { 
 - if ( toneActor ! = null ) { 
 - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; 
 - } 
 vibrate = false ; 
 v . cancel ( ) ; 
 v . vibrate ( 200 ) ; 
 @ @ - 339 , 9 + 277 , 6 @ @ public class CallFragment extends BaseFragment { 
 } 
 
 public void onCallEnd ( ) { 
 - if ( toneActor ! = null ) { 
 - toneActor . send ( new AndroidPlayerActor . Stop ( ) ) ; 
 - } 
 vibrate = false ; 
 if ( ringtone ! = null ) { 
 ringtone . stop ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 index 09a946c . . 661e59e 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidCallProvider . java 
 @ @ - 5 , 12 + 5 , 21 @ @ import android . content . Intent ; 
 
 import im . actor . core . providers . CallsProvider ; 
 import im . actor . core . viewmodel . CallState ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 + import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . controllers . calls . AudioActorEx ; 
 import im . actor . sdk . controllers . calls . CallActivity ; 
 + import im . actor . sdk . core . audio . AndroidPlayerActor ; 
 + import im . actor . sdk . core . audio . AudioPlayerActor ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 
 public class AndroidCallProvider implements CallsProvider { 
 + private ActorRef toneActor ; 
 + 
 
 @ Override 
 public void onCallStart ( long callId ) { 
 @ @ - 29 , 16 + 38 , 52 @ @ public class AndroidCallProvider implements CallsProvider { 
 
 @ Override 
 public void onCallEnd ( long callId ) { 
 - messenger ( ) . getCall ( callId ) . getState ( ) . change ( CallState . ENDED ) ; 
 + 
 } 
 
 @ Override 
 public void startOutgoingBeep ( ) { 
 - / / TODO : Implement 
 + if ( toneActor = = null ) { 
 + toneActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public AudioActorEx create ( ) { 
 + return new AudioActorEx ( messenger ( ) . getContext ( ) , new AudioPlayerActor . AudioPlayerCallback ( ) { 
 + @ Override 
 + public void onStart ( String fileName ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onStop ( String fileName ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onPause ( String fileName , float progress ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onProgress ( String fileName , float progress ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( String fileName ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } ) , " actor / android _ tone " ) ; 
 + } 
 + 
 + toneActor . send ( new AndroidPlayerActor . Play ( " " ) ) ; 
 } 
 
 @ Override 
 public void stopOutgoingBeep ( ) { 
 - / / TODO : Implement 
 + if ( toneActor ! = null ) { 
 + toneActor . send ( new AudioActorEx . Stop ( ) ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav 
 new file mode 100644 
 index 0000000 . . 65f98cb 
 Binary files / dev / null and b / actor - sdk / sdk - core - android / android - sdk / src / main / res / raw / tone . wav differ
