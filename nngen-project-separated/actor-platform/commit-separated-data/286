BLEU SCORE: 0.11868405219520975

TEST MSG: feat ( IOS ) : gifAnimation , fixringtones , mediaDownloadSettings
GENERATED MSG: feat ( iOS ) : Location preview cell

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index c631634 . . 09e48bd 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 336 , 6 + 336 , 7 @ @ < nl > 	 	 15F89F091C211FED00776ACD / * opus _ types . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F051C211FED00776ACD / * opus _ types . h * / ; } ; < nl > 	 	 15F89F0A1C211FED00776ACD / * opus . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F061C211FED00776ACD / * opus . h * / ; } ; < nl > 	 	 9A680E1B1CC3A34800E3CF59 / * AAUnblockActionSheet . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / ; } ; < nl > + 	 	 9AA6A41F1D08568A00957A7F / * AASettingsMediaViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9AA6A41E1D08568A00957A7F / * AASettingsMediaViewController . swift * / ; } ; < nl > 	 	 9AAE96481CF81F140092E366 / * AARingtonesViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9AAE96471CF81F140092E366 / * AARingtonesViewController . swift * / ; } ; < nl > 	 	 BDF21708B376E212CEAEC43D / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / ; } ; < nl > 	 	 BE237C9D1C422FFA00060648 / * AAStickersKeyboard . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / ; } ; < nl > @ @ - 716 , 6 + 717 , 7 @ @ < nl > 	 	 15F89F0F1C21317400776ACD / * es * / = { isa = PBXFileReference ; lastKnownFileType = text . plist . strings ; name = es ; path = es . lproj / Localizable . strings ; sourceTree = " < group > " ; } ; < nl > 	 	 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > 	 	 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAUnblockActionSheet . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 9AA6A41E1D08568A00957A7F / * AASettingsMediaViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AASettingsMediaViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 9AAE96471CF81F140092E366 / * AARingtonesViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AARingtonesViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAStickersKeyboard . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAConvActionSheet . swift ; sourceTree = " < group > " ; } ; < nl > @ @ - 1252 , 6 + 1254 , 7 @ @ < nl > 	 	 	 	 066A52F41BC52B09000E606E / * Cells * / , < nl > 	 	 	 	 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / , < nl > 	 	 	 	 066A52ED1BC52B02000E606E / * AASettingsNotificationsViewController . swift * / , < nl > + 	 	 	 	 9AA6A41E1D08568A00957A7F / * AASettingsMediaViewController . swift * / , < nl > 	 	 	 	 066A52EE1BC52B02000E606E / * AASettingsPrivacyViewController . swift * / , < nl > 	 	 	 	 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / , < nl > 	 	 	 	 066A52EC1BC52B02000E606E / * AASettingsViewController . swift * / , < nl > @ @ - 2030 , 6 + 2033 , 7 @ @ < nl > 	 	 	 	 BED5A1FB1C48396A0045FDB0 / * NYTPhotoTransitionAnimator . m in Sources * / , < nl > 	 	 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / , < nl > 	 	 	 	 061850E11C95CBF000C522D5 / * YYTextInput . m in Sources * / , < nl > + 	 	 	 	 9AA6A41F1D08568A00957A7F / * AASettingsMediaViewController . swift in Sources * / , < nl > 	 	 	 	 066A525E1BC503BB000E606E / * ActorApplicationDelegate . swift in Sources * / , < nl > 	 	 	 	 061850F31C95CBF000C522D5 / * YYTextRubyAnnotation . m in Sources * / , < nl > 	 	 	 	 BED5A1F91C48396A0045FDB0 / * NYTPhotosViewController . m in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index c22b65a . . 3abae1b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 71 , 6 + 71 , 7 @ @ < nl > < nl > " SettingsWallpapers " = " Wallpapers " ; < nl > < nl > + " SettingsMedia " = " Media " ; < nl > < nl > " SettingsNotifications " = " Notifications and Sounds " ; < nl > < nl > @ @ - 98 , 6 + 99 , 8 @ @ < nl > < nl > " SettingsMobilePhone " = " Mobile Phone " ; < nl > < nl > + " SettingsAutomaticDownloadAndSave " = " Automatic Download Media " ; < nl > + < nl > / * < nl > * Calls < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index e357baa . . b5e95ff 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 129 , 6 + 129 , 32 @ @ import DZNWebViewController < nl > / / / Enable experimental features < nl > public var enableExperimentalFeatures : Bool = false < nl > < nl > + / / / Enable Automatic Download and Save < nl > + public var enableAutomaticDownload : Bool = true < nl > + < nl > + / / / Disable this if you want dowloadMediaAutomaticaly < nl > + public var autoDownloadPhotoContent : Bool = true < nl > + public var autoDownloadVideoContent : Bool = false < nl > + < nl > + let storage = CocoaStorageRuntime ( ) < nl > + < nl > + public var isAutomaticDownloadEnabled : Bool { < nl > + set { < nl > + storage . preferences . putBoolWithKey ( " isAutomaticDownloadEnabled " , withValue : newValue ) < nl > + } < nl > + get { < nl > + return storage . preferences . getBoolWithKey ( " isAutomaticDownloadEnabled " , withDefault : true ) < nl > + } < nl > + } < nl > + < nl > + func setAutomaticDownloads ( isEnabled : Bool ) { < nl > + < nl > + self . isAutomaticDownloadEnabled = isEnabled < nl > + self . autoDownloadPhotoContent = isEnabled < nl > + self . autoDownloadVideoContent = isEnabled < nl > + < nl > + } < nl > + < nl > / / < nl > / / User Onlines < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > index 4a513e4 . . 6b46207 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > @ @ - 492 , 7 + 492 , 6 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi < nl > < nl > } else { < nl > < nl > - < nl > if ( position = = 0 . 0 | | position = = 0 ) { < nl > < nl > self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift < nl > index 8b327d8 . . 0eb697a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift < nl > @ @ - 96 , 7 + 96 , 8 @ @ public class AABubbleDocumentCell : AABubbleBaseFileCell , UIDocumentInteractionCo < nl > } ) < nl > < nl > / / Bind file < nl > - fileBind ( message , autoDownload : document . getSource ( ) . getSize ( ) < 1024 * 1025 * 1024 ) < nl > + fileBind ( message , autoDownload : ActorSDK . sharedActor ( ) . isAutomaticDownloadEnabled & & < nl > + document . getSource ( ) . getSize ( ) < 1024 * 1025 * 1024 ) < nl > } < nl > < nl > / / Always update date and state < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > index 4213b55 . . 0021a0a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift < nl > @ @ - 28 , 6 + 28 , 7 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > public init ( frame : CGRect ) { < nl > super . init ( frame : frame , isFullSize : false ) < nl > < nl > + preview . autoPlayAnimatedImage = Actor . isAnimationAutoPlayEnabled ( ) < nl > timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage < nl > < nl > timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > @ @ - 44 , 7 + 45 , 7 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > < nl > preview . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : # selector ( AABubbleMediaCell . mediaDidTap ) ) ) < nl > preview . userInteractionEnabled = true < nl > - < nl > + preview . autoPlayAnimatedImage = true < nl > contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > } < nl > < nl > @ @ - 85 , 7 + 86 , 7 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > / / } ) < nl > < nl > / / Bind file < nl > - fileBind ( message , autoDownload : bindedLayout . autoDownload ) < nl > + fileBind ( message , autoDownload : ActorSDK . sharedActor ( ) . isAutomaticDownloadEnabled ) < nl > } < nl > < nl > / / Update time < nl > @ @ - 180 , 10 + 181 , 16 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > thumbLoaded = true < nl > < nl > if ( bindedLayout . fastThumb ! = nil ) { < nl > + < nl > let preloadedThumb : YYImage = YYImage ( data : bindedLayout . fastThumb ! ) ! < nl > < nl > let loadedThumb : UIImage ! < nl > - if ( preloadedThumb . animatedImageType = = YYImageType . WebP ) { < nl > + if ( preloadedThumb . animatedImageType = = YYImageType . GIF ) { < nl > + loadedThumb = preloadedThumb . roundCorners ( bindedLayout . screenSize . width , < nl > + h : bindedLayout . screenSize . height , < nl > + roundSize : 14 ) < nl > + < nl > + } else if ( preloadedThumb . animatedImageType = = YYImageType . WebP ) { < nl > loadedThumb = preloadedThumb . roundCorners ( bindedLayout . screenSize . width , < nl > h : bindedLayout . screenSize . height , < nl > roundSize : 14 ) < nl > @ @ - 206 , 17 + 213 , 17 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > contentLoaded = true < nl > < nl > var loadedContent : UIImage ! < nl > - < nl > - if CocoaFiles . pathFromDescriptor ( reference ) . pathExtension ! = = " webp " { < nl > + if CocoaFiles . pathFromDescriptor ( reference ) . pathExtension ! = = " gif " { < nl > + loadedContent = YYImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) < nl > + < nl > + } else if CocoaFiles . pathFromDescriptor ( reference ) . pathExtension ! = = " webp " { < nl > loadedContent = YYImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) < nl > } else { < nl > loadedContent = YYImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) ? . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) < nl > } < nl > - < nl > if ( loadedContent = = nil ) { < nl > return < nl > } < nl > - < nl > runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > self . setPreviewImage ( loadedContent ! , fast : false ) < nl > } ) < nl > @ @ - 233 , 6 + 240 , 15 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > / / Media Action < nl > < nl > public func mediaDidTap ( ) { < nl > + < nl > + if bindedMessage ! . content is ACAnimationContent { < nl > + if ( ! self . preview . isAnimating ( ) ) { < nl > + self . preview . startAnimating ( ) < nl > + } else { < nl > + self . preview . stopAnimating ( ) < nl > + } < nl > + } < nl > + < nl > let content = bindedMessage ! . content as ! ACDocumentContent < nl > if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { < nl > Actor . requestStateWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) , withCallback : AAFileCallback ( < nl > @ @ - 245 , 7 + 261 , 10 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > let previewImage = PreviewImage ( image : img ) < nl > let previewController = AAPhotoPreviewController ( photo : previewImage , fromView : self . preview ) < nl > previewController . autoShowBadge = true < nl > + < nl > + if ( ! ( content is ACAnimationContent ) ) { < nl > self . controller . presentViewController ( previewController , animated : true , completion : nil ) < nl > + } < nl > } < nl > } ) ) < nl > } else if let fileSource = content . getSource ( ) as ? ACFileLocalSource { < nl > @ @ - 261 , 7 + 280 , 9 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe < nl > let previewImage = PreviewImage ( image : img ) < nl > let previewController = AAPhotoPreviewController ( photo : previewImage , fromView : self . preview ) < nl > previewController . autoShowBadge = true < nl > + if ( ! ( content is ACAnimationContent ) ) { < nl > self . controller . presentViewController ( previewController , animated : true , completion : nil ) < nl > + } < nl > } < nl > } ) ) < nl > } < nl > @ @ - 348 , 30 + 369 , 67 @ @ public class MediaCellLayout : AACellLayout { < nl > } < nl > < nl > / * * < nl > + Creating layout for animated bubble < nl > + * / < nl > + public init ( id : Int64 , width : CGFloat , height : CGFloat , date : Int64 , fastThumbAnimated : ACFastThumb ? , autoDownload : Bool , layouter : AABubbleLayouter ) { < nl > + < nl > + / / Saving content size < nl > + self . contentSize = CGSizeMake ( width , height ) < nl > + < nl > + / / Saving autodownload flag < nl > + self . autoDownload = autoDownload < nl > + < nl > + / / Calculating bubble screen size < nl > + let scaleW = 240 / width < nl > + let scaleH = 340 / height < nl > + let scale = min ( scaleW , scaleH ) < nl > + self . screenSize = CGSize ( width : scale * width , height : scale * height ) < nl > + < nl > + / / Prepare fast thumb < nl > + self . fastThumb = fastThumbAnimated ? . getImage ( ) . toNSData ( ) < nl > + < nl > + / / Creating layout < nl > + super . init ( height : self . screenSize . height + 2 , date : date , key : " media " , layouter : layouter ) < nl > + } < nl > + < nl > + < nl > + / * * < nl > Creating layout for photo content < nl > * / < nl > public convenience init ( id : Int64 , photoContent : ACPhotoContent , date : Int64 , layouter : AABubbleLayouter ) { < nl > - self . init ( id : id , width : CGFloat ( photoContent . getW ( ) ) , height : CGFloat ( photoContent . getH ( ) ) , date : date , fastThumb : photoContent . getFastThumb ( ) , autoDownload : true , layouter : layouter ) < nl > + self . init ( id : id , width : CGFloat ( photoContent . getW ( ) ) , height : CGFloat ( photoContent . getH ( ) ) , date : date , fastThumb : photoContent . getFastThumb ( ) , autoDownload : ActorSDK . sharedActor ( ) . autoDownloadPhotoContent , layouter : layouter ) < nl > } < nl > < nl > / * * < nl > Creating layout for video content < nl > * / < nl > + < nl > public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 , layouter : AABubbleLayouter ) { < nl > - self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : false , layouter : layouter ) < nl > + self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : ActorSDK . sharedActor ( ) . autoDownloadVideoContent , layouter : layouter ) < nl > } < nl > < nl > / * * < nl > + Creating layout for animated content < nl > + * / < nl > + public convenience init ( id : Int64 , animated : ACAnimationContent , date : Int64 , layouter : AABubbleLayouter ) { < nl > + self . init ( id : id , width : CGFloat ( animated . getW ( ) ) , height : CGFloat ( animated . getH ( ) ) , date : date , fastThumbAnimated : animated . getFastThumb ( ) , autoDownload : ActorSDK . sharedActor ( ) . autoDownloadPhotoContent , layouter : layouter ) < nl > + } < nl > + < nl > + / * * < nl > Creating layout for message < nl > * / < nl > public convenience init ( message : ACMessage , layouter : AABubbleLayouter ) { < nl > + < nl > if let content = message . content as ? ACPhotoContent { < nl > self . init ( id : Int64 ( message . rid ) , photoContent : content , date : Int64 ( message . date ) , layouter : layouter ) < nl > - } else { < nl > - fatalError ( " Unsupported content for media cell " ) < nl > + } else if < nl > + let animatedContent = message . content as ? ACAnimationContent { < nl > + self . init ( id : Int64 ( message . rid ) , animated : animatedContent , date : Int64 ( message . date ) , layouter : layouter ) < nl > + } else { < nl > + fatalError ( " Unsupported content for media cell " ) < nl > + } < nl > } < nl > } < nl > - } < nl > < nl > / * * < nl > Layouter for media bubbles < nl > @ @ - 382 , 6 + 440 , 9 @ @ public class AABubbleMediaCellLayouter : AABubbleLayouter { < nl > if message . content is ACPhotoContent { < nl > return true < nl > } < nl > + if message . content is ACAnimationContent { < nl > + return true < nl > + } < nl > < nl > return false < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift < nl > index c1c990b . . a3fa1c7 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift < nl > @ @ - 149 , 12 + 149 , 14 @ @ public class AAGroupViewController : AAContentTableController { < nl > r . switchAction = { ( on : Bool ) - > ( ) in < nl > Actor . changeNotificationsEnabledWithPeer ( groupPeer , withValue : on ) < nl > } < nl > + < nl > if ( ActorSDK . sharedActor ( ) . enableChatGroupSound ) { < nl > if ( Actor . isNotificationsEnabledWithPeer ( groupPeer ) ) { < nl > r . selectAction = { ( ) - > Bool in < nl > / / Sound : Choose sound < nl > let setRingtoneController = AARingtonesViewController ( ) < nl > - setRingtoneController . selectedRingtone = Actor . getNotificationsSoundWithPeer ( groupPeer ) < nl > + let soundForGroupe = Actor . getNotificationsSoundWithPeer ( groupPeer ) < nl > + setRingtoneController . selectedRingtone = ( soundForGroupe ! = nil ) ? soundForGroupe : " " < nl > setRingtoneController . completion = { ( selectedSound : String ) in < nl > Actor . changeNotificationsSoundPeer ( groupPeer , withValue : selectedSound ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift < nl > index 20a8d2a . . 795d261 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift < nl > @ @ - 174 , 6 + 174 , 11 @ @ public class AASettingsViewController : AAContentTableController { < nl > < nl > } ) < nl > < nl > + if ( ActorSDK . sharedActor ( ) . enableAutomaticDownload ) { < nl > + / / Settings : Media < nl > + s . navigate ( " SettingsMedia " , controller : AASettingsMediaViewController . self ) < nl > + } < nl > + < nl > ActorSDK . sharedActor ( ) . delegate . actorSettingsConfigurationDidCreated ( self , section : s ) < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift < nl > index 0c76b39 . . cf4f6fe 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift < nl > @ @ - 176 , 7 + 176 , 8 @ @ class AAUserViewController : AAContentTableController { < nl > r . selectAction = { ( ) - > Bool in < nl > / / Sound : Choose sound < nl > let setRingtoneController = AARingtonesViewController ( ) < nl > - setRingtoneController . selectedRingtone = Actor . getNotificationsSoundWithPeer ( peer ) < nl > + let sound = Actor . getNotificationsSoundWithPeer ( peer ) < nl > + setRingtoneController . selectedRingtone = ( sound ! = nil ) ? sound : " " < nl > setRingtoneController . completion = { ( selectedSound : String ) in < nl > Actor . changeNotificationsSoundPeer ( peer , withValue : selectedSound ) < nl > } < nl > @ @ - 194 , 7 + 195 , 7 @ @ class AAUserViewController : AAContentTableController { < nl > } < nl > } < nl > } < nl > - < nl > + < nl > / / Edit contact < nl > section { ( s ) - > ( ) in
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > index c38d4cd . . 56b461b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > @ @ - 22 , 6 + 22 , 9 @ @ import ActorSDK < nl > < nl > ActorSDK . sharedActor ( ) . style . searchStatusBarStyle = . Default < nl > < nl > + / / Enabling experimental features < nl > + ActorSDK . sharedActor ( ) . enableExperimentalFeatures = true < nl > + < nl > / / Creating Actor < nl > ActorSDK . sharedActor ( ) . createActor ( ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 9bf41a2 . . f26bdd0 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 172 , 6 + 172 , 9 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > + 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; < nl > + 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > + 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 347 , 6 + 350 , 9 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 530 , 6 + 536 , 7 @ @ < nl > 	 	 	 	 069CF4C31BCB908C00C66E12 / * CLTokenInputView * / , < nl > 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , < nl > 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , < nl > + 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , < nl > 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , < nl > 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , < nl > 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , < nl > @ @ - 589 , 6 + 596 , 7 @ @ < nl > 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , < nl > 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , < nl > 	 	 	 	 066A52C41BC521D5000E606E / * Content * / , < nl > + 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , < nl > 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , < nl > 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , < nl > 	 	 	 ) ; < nl > @ @ - 832 , 6 + 840 , 7 @ @ < nl > 	 	 	 	 066A53281BC53406000E606E / * AABubbleBaseFileCell . swift * / , < nl > 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , < nl > 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , < nl > + 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Cell ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 878 , 6 + 887 , 14 @ @ < nl > 	 	 	 name = CLTokenInputView ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > 	 	 } ; < nl > + 	 	 06E7B2451C0F8D410090660C / * Location * / = { < nl > + 	 	 	 isa = PBXGroup ; < nl > + 	 	 	 children = ( < nl > + 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , < nl > + 	 	 	 ) ; < nl > + 	 	 	 path = Location ; < nl > + 	 	 	 sourceTree = " < group > " ; < nl > + 	 	 } ; < nl > 	 	 2F428D134E194A828C3DF863 / * Frameworks * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > @ @ - 1107 , 6 + 1124 , 7 @ @ < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > + 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , < nl > 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , < nl > 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , < nl > 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , < nl > @ @ - 1171 , 6 + 1189 , 7 @ @ < nl > 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , < nl > 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , < nl > 	 	 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / , < nl > + 	 	 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / , < nl > 	 	 	 	 066A516D1BC4C366000E606E / * ActorCoreExt . swift in Sources * / , < nl > 	 	 	 	 066A517E1BC4C373000E606E / * FMDatabaseAdditions . m in Sources * / , < nl > 	 	 	 	 066A519A1BC4C390000E606E / * FMDBList . swift in Sources * / , < nl > @ @ - 1187 , 6 + 1206 , 7 @ @ < nl > 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , < nl > 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , < nl > 	 	 	 	 066A51901BC4C383000E606E / * CocoaNetworkRuntime . swift in Sources * / , < nl > + 	 	 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / , < nl > 	 	 	 	 066A52581BC4EF61000E606E / * Alerts . swift in Sources * / , < nl > 	 	 	 	 066A51691BC4C366000E606E / * AATools . swift in Sources * / , < nl > 	 	 	 	 066A53201BC533F5000E606E / * AABubbleBackgroundProcessor . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 3f92572 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPin @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 709d3b0 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 587321a . . 9edb0ad 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 82 , 6 + 82 , 9 @ @ public class ActorSDK { < nl > / / / Extensions < nl > private var extensions = [ ActorExtension ] ( ) < nl > < nl > + / / / Enable experimental features < nl > + public var enableExperimentalFeatures : Bool = false < nl > + < nl > / / < nl > / / User Onlines < nl > / / < nl > @ @ - 91 , 7 + 94 , 7 @ @ public class ActorSDK { < nl > < nl > / / / Disable this if you want manually handle online states < nl > public var automaticOnlineHandling = true < nl > - < nl > + < nl > / / < nl > / / Internal State < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > index ca23c70 . . a98f2ef 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > @ @ - 10 , 11 + 10 , 13 @ @ class AABubbles { < nl > static let mediaLayouter = AABubbleMediaCellLayouter ( ) < nl > static let documentLayouter = AABubbleDocumentCellLayout ( ) < nl > static let serviceLayouter = AABubbleServiceCellLayouter ( ) < nl > + static let locationLayouter = AABubbleLocationCellLayouter ( ) < nl > < nl > static let builtInLayouters : [ AABubbleLayouter ] = [ < nl > serviceLayouter , < nl > mediaLayouter , < nl > documentLayouter , < nl > + locationLayouter , < nl > textLayouter < nl > ] < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > new file mode 100644 < nl > index 0000000 . . 1c539ce < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 0 , 0 + 1 , 179 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + private let mapWidth : CGFloat = 200 < nl > + private let mapHeight : CGFloat = 160 < nl > + < nl > + public class AABubbleLocationCell : AABubbleCell { < nl > + < nl > + private let map = AAMapFastView ( mapWidth : mapWidth , mapHeight : mapHeight ) < nl > + < nl > + private let pin = UIImageView ( ) < nl > + private let timeBg = UIImageView ( ) < nl > + private let timeLabel = UILabel ( ) < nl > + private let statusView = UIImageView ( ) < nl > + < nl > + private var bindedLat : Double ? = nil < nl > + private var bindedLon : Double ? = nil < nl > + < nl > + public init ( frame : CGRect ) { < nl > + super . init ( frame : frame , isFullSize : false ) < nl > + < nl > + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) < nl > + < nl > + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > + timeLabel . textColor = appStyle . chatMediaDateColor < nl > + < nl > + statusView . contentMode = UIViewContentMode . Center < nl > + < nl > + pin . image = UIImage . bundled ( " LocationPin " ) < nl > + < nl > + contentView . addSubview ( map ) < nl > + map . addSubview ( pin ) < nl > + < nl > + contentView . addSubview ( timeBg ) < nl > + contentView . addSubview ( timeLabel ) < nl > + contentView . addSubview ( statusView ) < nl > + < nl > + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + < nl > + map . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mapDidTap " ) ) < nl > + map . userInteractionEnabled = true < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func mapDidTap ( ) { < nl > + let url = " http : / / maps . apple . com / ? q = \ ( bindedLat ! ) , \ ( bindedLon ! ) " < nl > + / / print ( " url : \ ( url ) " ) < nl > + UIApplication . sharedApplication ( ) . openURL ( NSURL ( string : url ) ! ) < nl > + } < nl > + < nl > + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > + < nl > + let layout = cellLayout as ! AALocationCellLayout < nl > + < nl > + bindedLat = layout . latitude < nl > + bindedLon = layout . longitude < nl > + < nl > + bubbleInsets = UIEdgeInsets ( < nl > + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , < nl > + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , < nl > + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , < nl > + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > + < nl > + if ( ! reuse ) { < nl > + < nl > + / / Bind bubble < nl > + if ( self . isOut ) { < nl > + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) < nl > + } else { < nl > + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) < nl > + } < nl > + } < nl > + < nl > + map . bind ( layout . latitude , longitude : layout . longitude ) < nl > + < nl > + / / Update time < nl > + timeLabel . text = cellLayout . date < nl > + < nl > + / / Update status < nl > + if ( isOut ) { < nl > + statusView . hidden = false < nl > + switch ( UInt ( message . messageState . ordinal ( ) ) ) { < nl > + case ACMessageState . PENDING . rawValue : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + case ACMessageState . SENT . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck1 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSent < nl > + break ; < nl > + case ACMessageState . RECEIVED . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaReceived < nl > + break ; < nl > + case ACMessageState . READ . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaRead < nl > + break ; < nl > + case ACMessageState . ERROR . rawValue : < nl > + self . statusView . image = appStyle . chatIconError ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaError < nl > + break < nl > + default : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + } < nl > + } else { < nl > + statusView . hidden = true < nl > + } < nl > + } < nl > + < nl > + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > + let insets = fullContentInsets < nl > + < nl > + layoutBubble ( mapWidth , contentHeight : mapHeight ) < nl > + < nl > + if isOut { < nl > + map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > + } else { < nl > + map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) < nl > + } < nl > + < nl > + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) < nl > + timeLabel . sizeToFit ( ) < nl > + < nl > + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width < nl > + let timeHeight : CGFloat = 20 < nl > + < nl > + timeLabel . frame = CGRectMake ( map . frame . maxX - timeWidth - 18 , map . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) < nl > + < nl > + if ( isOut ) { < nl > + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) < nl > + } < nl > + < nl > + pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height - pin . image ! . size . height ) / 2 , < nl > + pin . image ! . size . width , pin . image ! . size . height ) < nl > + < nl > + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) < nl > + } < nl > + } < nl > + < nl > + public class AALocationCellLayout : AACellLayout { < nl > + < nl > + let latitude : Double < nl > + let longitude : Double < nl > + < nl > + init ( latitude : Double , longitude : Double , date : Int64 ) { < nl > + self . latitude = latitude < nl > + self . longitude = longitude < nl > + super . init ( height : mapHeight , date : date , key : " location " ) < nl > + } < nl > + } < nl > + < nl > + public class AABubbleLocationCellLayouter : AABubbleLayouter { < nl > + < nl > + public func isSuitable ( message : ACMessage ) - > Bool { < nl > + if ( message . content is ACLocationContent ) { < nl > + return true < nl > + } < nl > + return false < nl > + } < nl > + < nl > + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { < nl > + let content = message . content as ! ACLocationContent < nl > + return AALocationCellLayout ( latitude : Double ( content . getLatitude ( ) ) , longitude : Double ( content . getLongitude ( ) ) , date : Int64 ( message . date ) ) < nl > + } < nl > + < nl > + public func cellClass ( ) - > AnyClass { < nl > + return AABubbleLocationCell . self < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 7704094 . . af819ab 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 308 , 6 + 308 , 12 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > self . pickDocument ( ) < nl > } < nl > < nl > + if ( ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { < nl > + builder . add ( " Location " ) { ( ) - > ( ) in < nl > + self . pickLocation ( ) < nl > + } < nl > + } < nl > + < nl > showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) < nl > } < nl > < nl > @ @ - 452 , 4 + 458 , 10 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > func imagePickerControllerDidCancel ( picker : UIImagePickerController ) { < nl > picker . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > + < nl > + / / Location picking < nl > + < nl > + func pickLocation ( ) { < nl > + < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > new file mode 100644 < nl > index 0000000 . . 123575a < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > @ @ - 0 , 0 + 1 , 24 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + class AALocationPickerController : AAViewController { < nl > + < nl > + let map = MKMapView ( ) < nl > + < nl > + override func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + self . view . addSubview ( map ) < nl > + } < nl > + < nl > + < nl > + override func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + map . frame = self . view . bounds < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 3d7e2c7 . . bf761a5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 17 , 8 + 17 , 8 @ @ public class AAAvatarView : UIImageView { < nl > < nl > var enableAnimation : Bool = false < nl > < nl > - private let cacheSize = 10 < nl > - private var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) < nl > + private static let cacheSize = 10 < nl > + private static var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) < nl > < nl > private var bindedFileId : jlong ! = nil < nl > private var bindedTitle : String ! = nil < nl > @ @ - 233 , 7 + 233 , 7 @ @ public class AAAvatarView : UIImageView { < nl > / / < nl > < nl > private func checkCache ( size : Int , id : Int64 ) - > UIImage ? { < nl > - if let cache = avatarCache [ size ] { < nl > + if let cache = AAAvatarView . avatarCache [ size ] { < nl > if let img = cache [ id ] { < nl > return img < nl > } < nl > @ @ - 242 , 12 + 242 , 12 @ @ public class AAAvatarView : UIImageView { < nl > } < nl > < nl > private func putToCache ( size : Int , id : Int64 , image : UIImage ) { < nl > - if let cache = avatarCache [ size ] { < nl > + if let cache = AAAvatarView . avatarCache [ size ] { < nl > cache [ id ] = image < nl > } else { < nl > - let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : cacheSize ) ; < nl > + let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : AAAvatarView . cacheSize ) ; < nl > cache [ id ] = image < nl > - avatarCache . updateValue ( cache , forKey : size ) < nl > + AAAvatarView . avatarCache . updateValue ( cache , forKey : size ) < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift < nl > new file mode 100644 < nl > index 0000000 . . 217c38e < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift < nl > @ @ - 0 , 0 + 1 , 58 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + public class AAMapFastView : UIImageView { < nl > + < nl > + static private var mapCache = AASwiftlyLRU < String , UIImage > ( capacity : 16 ) < nl > + < nl > + let mapWidth : CGFloat < nl > + let mapHeight : CGFloat < nl > + var mapKey : String ? = nil < nl > + < nl > + public init ( mapWidth : CGFloat , mapHeight : CGFloat ) { < nl > + self . mapWidth = mapWidth < nl > + self . mapHeight = mapHeight < nl > + super . init ( image : nil ) < nl > + } < nl > + < nl > + required public init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func bind ( latitude : Double , longitude : Double ) { < nl > + let key = " \ ( Int ( latitude * 1000000 ) ) _ \ ( Int ( longitude * 1000000 ) ) " < nl > + < nl > + / / Same Key < nl > + if ( self . mapKey = = key ) { < nl > + return < nl > + } < nl > + < nl > + self . mapKey = key < nl > + < nl > + let cached = AAMapFastView . mapCache [ key ] < nl > + if ( cached ! = nil ) { < nl > + self . image = cached < nl > + return < nl > + } < nl > + < nl > + let options = MKMapSnapshotOptions ( ) < nl > + options . region = MKCoordinateRegion ( center : CLLocationCoordinate2D ( latitude : latitude , longitude : longitude ) , span : MKCoordinateSpan ( latitudeDelta : 0 . 005 , longitudeDelta : 0 . 005 ) ) < nl > + options . size = CGSizeMake ( mapWidth , mapHeight ) < nl > + options . scale = UIScreen . mainScreen ( ) . scale < nl > + < nl > + let snapshotter = MKMapSnapshotter ( options : options ) < nl > + snapshotter . startWithCompletionHandler { snapshot , error in < nl > + if let img = snapshot ? . image { < nl > + let rounded = img . roundCorners ( img . size . width , h : img . size . height , roundSize : 14 ) < nl > + dispatchOnUi { < nl > + AAMapFastView . mapCache [ key ] = rounded < nl > + self . image = rounded < nl > + } < nl > + } < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index c631634 . . 09e48bd 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 336 , 6 + 336 , 7 @ @ 
 	 	 15F89F091C211FED00776ACD / * opus _ types . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F051C211FED00776ACD / * opus _ types . h * / ; } ; 
 	 	 15F89F0A1C211FED00776ACD / * opus . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15F89F061C211FED00776ACD / * opus . h * / ; } ; 
 	 	 9A680E1B1CC3A34800E3CF59 / * AAUnblockActionSheet . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / ; } ; 
 + 	 	 9AA6A41F1D08568A00957A7F / * AASettingsMediaViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9AA6A41E1D08568A00957A7F / * AASettingsMediaViewController . swift * / ; } ; 
 	 	 9AAE96481CF81F140092E366 / * AARingtonesViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 9AAE96471CF81F140092E366 / * AARingtonesViewController . swift * / ; } ; 
 	 	 BDF21708B376E212CEAEC43D / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / ; } ; 
 	 	 BE237C9D1C422FFA00060648 / * AAStickersKeyboard . swift in Sources * / = { isa = PBXBuildFile ; fileRef = BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / ; } ; 
 @ @ - 716 , 6 + 717 , 7 @ @ 
 	 	 15F89F0F1C21317400776ACD / * es * / = { isa = PBXFileReference ; lastKnownFileType = text . plist . strings ; name = es ; path = es . lproj / Localizable . strings ; sourceTree = " < group > " ; } ; 
 	 	 354C3EFA48FBFAEAD0DEEE17 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 	 	 9A680E1A1CC3A34800E3CF59 / * AAUnblockActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAUnblockActionSheet . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 9AA6A41E1D08568A00957A7F / * AASettingsMediaViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AASettingsMediaViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 9AAE96471CF81F140092E366 / * AARingtonesViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AARingtonesViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 BE237C9C1C422FFA00060648 / * AAStickersKeyboard . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAStickersKeyboard . swift ; sourceTree = " < group > " ; } ; 
 	 	 BE2621561C4656D700A817AB / * AAConvActionSheet . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAConvActionSheet . swift ; sourceTree = " < group > " ; } ; 
 @ @ - 1252 , 6 + 1254 , 7 @ @ 
 	 	 	 	 066A52F41BC52B09000E606E / * Cells * / , 
 	 	 	 	 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / , 
 	 	 	 	 066A52ED1BC52B02000E606E / * AASettingsNotificationsViewController . swift * / , 
 + 	 	 	 	 9AA6A41E1D08568A00957A7F / * AASettingsMediaViewController . swift * / , 
 	 	 	 	 066A52EE1BC52B02000E606E / * AASettingsPrivacyViewController . swift * / , 
 	 	 	 	 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / , 
 	 	 	 	 066A52EC1BC52B02000E606E / * AASettingsViewController . swift * / , 
 @ @ - 2030 , 6 + 2033 , 7 @ @ 
 	 	 	 	 BED5A1FB1C48396A0045FDB0 / * NYTPhotoTransitionAnimator . m in Sources * / , 
 	 	 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / , 
 	 	 	 	 061850E11C95CBF000C522D5 / * YYTextInput . m in Sources * / , 
 + 	 	 	 	 9AA6A41F1D08568A00957A7F / * AASettingsMediaViewController . swift in Sources * / , 
 	 	 	 	 066A525E1BC503BB000E606E / * ActorApplicationDelegate . swift in Sources * / , 
 	 	 	 	 061850F31C95CBF000C522D5 / * YYTextRubyAnnotation . m in Sources * / , 
 	 	 	 	 BED5A1F91C48396A0045FDB0 / * NYTPhotosViewController . m in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index c22b65a . . 3abae1b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 71 , 6 + 71 , 7 @ @ 
 
 " SettingsWallpapers " = " Wallpapers " ; 
 
 + " SettingsMedia " = " Media " ; 
 
 " SettingsNotifications " = " Notifications and Sounds " ; 
 
 @ @ - 98 , 6 + 99 , 8 @ @ 
 
 " SettingsMobilePhone " = " Mobile Phone " ; 
 
 + " SettingsAutomaticDownloadAndSave " = " Automatic Download Media " ; 
 + 
 / * 
 * Calls 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index e357baa . . b5e95ff 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 129 , 6 + 129 , 32 @ @ import DZNWebViewController 
 / / / Enable experimental features 
 public var enableExperimentalFeatures : Bool = false 
 
 + / / / Enable Automatic Download and Save 
 + public var enableAutomaticDownload : Bool = true 
 + 
 + / / / Disable this if you want dowloadMediaAutomaticaly 
 + public var autoDownloadPhotoContent : Bool = true 
 + public var autoDownloadVideoContent : Bool = false 
 + 
 + let storage = CocoaStorageRuntime ( ) 
 + 
 + public var isAutomaticDownloadEnabled : Bool { 
 + set { 
 + storage . preferences . putBoolWithKey ( " isAutomaticDownloadEnabled " , withValue : newValue ) 
 + } 
 + get { 
 + return storage . preferences . getBoolWithKey ( " isAutomaticDownloadEnabled " , withDefault : true ) 
 + } 
 + } 
 + 
 + func setAutomaticDownloads ( isEnabled : Bool ) { 
 + 
 + self . isAutomaticDownloadEnabled = isEnabled 
 + self . autoDownloadPhotoContent = isEnabled 
 + self . autoDownloadVideoContent = isEnabled 
 + 
 + } 
 + 
 / / 
 / / User Onlines 
 / / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 index 4a513e4 . . 6b46207 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 @ @ - 492 , 7 + 492 , 6 @ @ public class AAConversationContentController : SLKTextViewController , ARDisplayLi 
 
 } else { 
 
 - 
 if ( position = = 0 . 0 | | position = = 0 ) { 
 
 self . voicePlayer = AAModernConversationAudioPlayer ( filePath : path ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift 
 index 8b327d8 . . 0eb697a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleDocumentCell . swift 
 @ @ - 96 , 7 + 96 , 8 @ @ public class AABubbleDocumentCell : AABubbleBaseFileCell , UIDocumentInteractionCo 
 } ) 
 
 / / Bind file 
 - fileBind ( message , autoDownload : document . getSource ( ) . getSize ( ) < 1024 * 1025 * 1024 ) 
 + fileBind ( message , autoDownload : ActorSDK . sharedActor ( ) . isAutomaticDownloadEnabled & & 
 + document . getSource ( ) . getSize ( ) < 1024 * 1025 * 1024 ) 
 } 
 
 / / Always update date and state 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 index 4213b55 . . 0021a0a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleMediaCell . swift 
 @ @ - 28 , 6 + 28 , 7 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 public init ( frame : CGRect ) { 
 super . init ( frame : frame , isFullSize : false ) 
 
 + preview . autoPlayAnimatedImage = Actor . isAnimationAutoPlayEnabled ( ) 
 timeBg . image = ActorSDK . sharedActor ( ) . style . statusBackgroundImage 
 
 timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 @ @ - 44 , 7 + 45 , 7 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 
 preview . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : # selector ( AABubbleMediaCell . mediaDidTap ) ) ) 
 preview . userInteractionEnabled = true 
 - 
 + preview . autoPlayAnimatedImage = true 
 contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 } 
 
 @ @ - 85 , 7 + 86 , 7 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 / / } ) 
 
 / / Bind file 
 - fileBind ( message , autoDownload : bindedLayout . autoDownload ) 
 + fileBind ( message , autoDownload : ActorSDK . sharedActor ( ) . isAutomaticDownloadEnabled ) 
 } 
 
 / / Update time 
 @ @ - 180 , 10 + 181 , 16 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 thumbLoaded = true 
 
 if ( bindedLayout . fastThumb ! = nil ) { 
 + 
 let preloadedThumb : YYImage = YYImage ( data : bindedLayout . fastThumb ! ) ! 
 
 let loadedThumb : UIImage ! 
 - if ( preloadedThumb . animatedImageType = = YYImageType . WebP ) { 
 + if ( preloadedThumb . animatedImageType = = YYImageType . GIF ) { 
 + loadedThumb = preloadedThumb . roundCorners ( bindedLayout . screenSize . width , 
 + h : bindedLayout . screenSize . height , 
 + roundSize : 14 ) 
 + 
 + } else if ( preloadedThumb . animatedImageType = = YYImageType . WebP ) { 
 loadedThumb = preloadedThumb . roundCorners ( bindedLayout . screenSize . width , 
 h : bindedLayout . screenSize . height , 
 roundSize : 14 ) 
 @ @ - 206 , 17 + 213 , 17 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 contentLoaded = true 
 
 var loadedContent : UIImage ! 
 - 
 - if CocoaFiles . pathFromDescriptor ( reference ) . pathExtension ! = = " webp " { 
 + if CocoaFiles . pathFromDescriptor ( reference ) . pathExtension ! = = " gif " { 
 + loadedContent = YYImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) 
 + 
 + } else if CocoaFiles . pathFromDescriptor ( reference ) . pathExtension ! = = " webp " { 
 loadedContent = YYImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) 
 } else { 
 loadedContent = YYImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) ? . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) 
 } 
 - 
 if ( loadedContent = = nil ) { 
 return 
 } 
 - 
 runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 self . setPreviewImage ( loadedContent ! , fast : false ) 
 } ) 
 @ @ - 233 , 6 + 240 , 15 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 / / Media Action 
 
 public func mediaDidTap ( ) { 
 + 
 + if bindedMessage ! . content is ACAnimationContent { 
 + if ( ! self . preview . isAnimating ( ) ) { 
 + self . preview . startAnimating ( ) 
 + } else { 
 + self . preview . stopAnimating ( ) 
 + } 
 + } 
 + 
 let content = bindedMessage ! . content as ! ACDocumentContent 
 if let fileSource = content . getSource ( ) as ? ACFileRemoteSource { 
 Actor . requestStateWithFileId ( fileSource . getFileReference ( ) . getFileId ( ) , withCallback : AAFileCallback ( 
 @ @ - 245 , 7 + 261 , 10 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 let previewImage = PreviewImage ( image : img ) 
 let previewController = AAPhotoPreviewController ( photo : previewImage , fromView : self . preview ) 
 previewController . autoShowBadge = true 
 + 
 + if ( ! ( content is ACAnimationContent ) ) { 
 self . controller . presentViewController ( previewController , animated : true , completion : nil ) 
 + } 
 } 
 } ) ) 
 } else if let fileSource = content . getSource ( ) as ? ACFileLocalSource { 
 @ @ - 261 , 7 + 280 , 9 @ @ public class AABubbleMediaCell : AABubbleBaseFileCell , NYTPhotosViewControllerDe 
 let previewImage = PreviewImage ( image : img ) 
 let previewController = AAPhotoPreviewController ( photo : previewImage , fromView : self . preview ) 
 previewController . autoShowBadge = true 
 + if ( ! ( content is ACAnimationContent ) ) { 
 self . controller . presentViewController ( previewController , animated : true , completion : nil ) 
 + } 
 } 
 } ) ) 
 } 
 @ @ - 348 , 30 + 369 , 67 @ @ public class MediaCellLayout : AACellLayout { 
 } 
 
 / * * 
 + Creating layout for animated bubble 
 + * / 
 + public init ( id : Int64 , width : CGFloat , height : CGFloat , date : Int64 , fastThumbAnimated : ACFastThumb ? , autoDownload : Bool , layouter : AABubbleLayouter ) { 
 + 
 + / / Saving content size 
 + self . contentSize = CGSizeMake ( width , height ) 
 + 
 + / / Saving autodownload flag 
 + self . autoDownload = autoDownload 
 + 
 + / / Calculating bubble screen size 
 + let scaleW = 240 / width 
 + let scaleH = 340 / height 
 + let scale = min ( scaleW , scaleH ) 
 + self . screenSize = CGSize ( width : scale * width , height : scale * height ) 
 + 
 + / / Prepare fast thumb 
 + self . fastThumb = fastThumbAnimated ? . getImage ( ) . toNSData ( ) 
 + 
 + / / Creating layout 
 + super . init ( height : self . screenSize . height + 2 , date : date , key : " media " , layouter : layouter ) 
 + } 
 + 
 + 
 + / * * 
 Creating layout for photo content 
 * / 
 public convenience init ( id : Int64 , photoContent : ACPhotoContent , date : Int64 , layouter : AABubbleLayouter ) { 
 - self . init ( id : id , width : CGFloat ( photoContent . getW ( ) ) , height : CGFloat ( photoContent . getH ( ) ) , date : date , fastThumb : photoContent . getFastThumb ( ) , autoDownload : true , layouter : layouter ) 
 + self . init ( id : id , width : CGFloat ( photoContent . getW ( ) ) , height : CGFloat ( photoContent . getH ( ) ) , date : date , fastThumb : photoContent . getFastThumb ( ) , autoDownload : ActorSDK . sharedActor ( ) . autoDownloadPhotoContent , layouter : layouter ) 
 } 
 
 / * * 
 Creating layout for video content 
 * / 
 + 
 public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 , layouter : AABubbleLayouter ) { 
 - self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : false , layouter : layouter ) 
 + self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : ActorSDK . sharedActor ( ) . autoDownloadVideoContent , layouter : layouter ) 
 } 
 
 / * * 
 + Creating layout for animated content 
 + * / 
 + public convenience init ( id : Int64 , animated : ACAnimationContent , date : Int64 , layouter : AABubbleLayouter ) { 
 + self . init ( id : id , width : CGFloat ( animated . getW ( ) ) , height : CGFloat ( animated . getH ( ) ) , date : date , fastThumbAnimated : animated . getFastThumb ( ) , autoDownload : ActorSDK . sharedActor ( ) . autoDownloadPhotoContent , layouter : layouter ) 
 + } 
 + 
 + / * * 
 Creating layout for message 
 * / 
 public convenience init ( message : ACMessage , layouter : AABubbleLayouter ) { 
 + 
 if let content = message . content as ? ACPhotoContent { 
 self . init ( id : Int64 ( message . rid ) , photoContent : content , date : Int64 ( message . date ) , layouter : layouter ) 
 - } else { 
 - fatalError ( " Unsupported content for media cell " ) 
 + } else if 
 + let animatedContent = message . content as ? ACAnimationContent { 
 + self . init ( id : Int64 ( message . rid ) , animated : animatedContent , date : Int64 ( message . date ) , layouter : layouter ) 
 + } else { 
 + fatalError ( " Unsupported content for media cell " ) 
 + } 
 } 
 } 
 - } 
 
 / * * 
 Layouter for media bubbles 
 @ @ - 382 , 6 + 440 , 9 @ @ public class AABubbleMediaCellLayouter : AABubbleLayouter { 
 if message . content is ACPhotoContent { 
 return true 
 } 
 + if message . content is ACAnimationContent { 
 + return true 
 + } 
 
 return false 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift 
 index c1c990b . . a3fa1c7 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift 
 @ @ - 149 , 12 + 149 , 14 @ @ public class AAGroupViewController : AAContentTableController { 
 r . switchAction = { ( on : Bool ) - > ( ) in 
 Actor . changeNotificationsEnabledWithPeer ( groupPeer , withValue : on ) 
 } 
 + 
 if ( ActorSDK . sharedActor ( ) . enableChatGroupSound ) { 
 if ( Actor . isNotificationsEnabledWithPeer ( groupPeer ) ) { 
 r . selectAction = { ( ) - > Bool in 
 / / Sound : Choose sound 
 let setRingtoneController = AARingtonesViewController ( ) 
 - setRingtoneController . selectedRingtone = Actor . getNotificationsSoundWithPeer ( groupPeer ) 
 + let soundForGroupe = Actor . getNotificationsSoundWithPeer ( groupPeer ) 
 + setRingtoneController . selectedRingtone = ( soundForGroupe ! = nil ) ? soundForGroupe : " " 
 setRingtoneController . completion = { ( selectedSound : String ) in 
 Actor . changeNotificationsSoundPeer ( groupPeer , withValue : selectedSound ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift 
 index 20a8d2a . . 795d261 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsViewController . swift 
 @ @ - 174 , 6 + 174 , 11 @ @ public class AASettingsViewController : AAContentTableController { 
 
 } ) 
 
 + if ( ActorSDK . sharedActor ( ) . enableAutomaticDownload ) { 
 + / / Settings : Media 
 + s . navigate ( " SettingsMedia " , controller : AASettingsMediaViewController . self ) 
 + } 
 + 
 ActorSDK . sharedActor ( ) . delegate . actorSettingsConfigurationDidCreated ( self , section : s ) 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift 
 index 0c76b39 . . cf4f6fe 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift 
 @ @ - 176 , 7 + 176 , 8 @ @ class AAUserViewController : AAContentTableController { 
 r . selectAction = { ( ) - > Bool in 
 / / Sound : Choose sound 
 let setRingtoneController = AARingtonesViewController ( ) 
 - setRingtoneController . selectedRingtone = Actor . getNotificationsSoundWithPeer ( peer ) 
 + let sound = Actor . getNotificationsSoundWithPeer ( peer ) 
 + setRingtoneController . selectedRingtone = ( sound ! = nil ) ? sound : " " 
 setRingtoneController . completion = { ( selectedSound : String ) in 
 Actor . changeNotificationsSoundPeer ( peer , withValue : selectedSound ) 
 } 
 @ @ - 194 , 7 + 195 , 7 @ @ class AAUserViewController : AAContentTableController { 
 } 
 } 
 } 
 - 
 + 
 / / Edit contact 
 section { ( s ) - > ( ) in

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 index c38d4cd . . 56b461b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 @ @ - 22 , 6 + 22 , 9 @ @ import ActorSDK 
 
 ActorSDK . sharedActor ( ) . style . searchStatusBarStyle = . Default 
 
 + / / Enabling experimental features 
 + ActorSDK . sharedActor ( ) . enableExperimentalFeatures = true 
 + 
 / / Creating Actor 
 ActorSDK . sharedActor ( ) . createActor ( ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 9bf41a2 . . f26bdd0 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 172 , 6 + 172 , 9 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 + 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; 
 + 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 + 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 347 , 6 + 350 , 9 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 530 , 6 + 536 , 7 @ @ 
 	 	 	 	 069CF4C31BCB908C00C66E12 / * CLTokenInputView * / , 
 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , 
 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , 
 + 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , 
 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , 
 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , 
 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , 
 @ @ - 589 , 6 + 596 , 7 @ @ 
 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , 
 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , 
 	 	 	 	 066A52C41BC521D5000E606E / * Content * / , 
 + 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , 
 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , 
 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , 
 	 	 	 ) ; 
 @ @ - 832 , 6 + 840 , 7 @ @ 
 	 	 	 	 066A53281BC53406000E606E / * AABubbleBaseFileCell . swift * / , 
 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , 
 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , 
 + 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Cell ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 878 , 6 + 887 , 14 @ @ 
 	 	 	 name = CLTokenInputView ; 
 	 	 	 sourceTree = " < group > " ; 
 	 	 } ; 
 + 	 	 06E7B2451C0F8D410090660C / * Location * / = { 
 + 	 	 	 isa = PBXGroup ; 
 + 	 	 	 children = ( 
 + 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , 
 + 	 	 	 ) ; 
 + 	 	 	 path = Location ; 
 + 	 	 	 sourceTree = " < group > " ; 
 + 	 	 } ; 
 	 	 2F428D134E194A828C3DF863 / * Frameworks * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 @ @ - 1107 , 6 + 1124 , 7 @ @ 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 + 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , 
 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , 
 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , 
 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , 
 @ @ - 1171 , 6 + 1189 , 7 @ @ 
 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , 
 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , 
 	 	 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / , 
 + 	 	 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / , 
 	 	 	 	 066A516D1BC4C366000E606E / * ActorCoreExt . swift in Sources * / , 
 	 	 	 	 066A517E1BC4C373000E606E / * FMDatabaseAdditions . m in Sources * / , 
 	 	 	 	 066A519A1BC4C390000E606E / * FMDBList . swift in Sources * / , 
 @ @ - 1187 , 6 + 1206 , 7 @ @ 
 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , 
 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , 
 	 	 	 	 066A51901BC4C383000E606E / * CocoaNetworkRuntime . swift in Sources * / , 
 + 	 	 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / , 
 	 	 	 	 066A52581BC4EF61000E606E / * Alerts . swift in Sources * / , 
 	 	 	 	 066A51691BC4C366000E606E / * AATools . swift in Sources * / , 
 	 	 	 	 066A53201BC533F5000E606E / * AABubbleBackgroundProcessor . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 3f92572 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPin @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png 
 new file mode 100644 
 index 0000000 . . 709d3b0 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 587321a . . 9edb0ad 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 82 , 6 + 82 , 9 @ @ public class ActorSDK { 
 / / / Extensions 
 private var extensions = [ ActorExtension ] ( ) 
 
 + / / / Enable experimental features 
 + public var enableExperimentalFeatures : Bool = false 
 + 
 / / 
 / / User Onlines 
 / / 
 @ @ - 91 , 7 + 94 , 7 @ @ public class ActorSDK { 
 
 / / / Disable this if you want manually handle online states 
 public var automaticOnlineHandling = true 
 - 
 + 
 / / 
 / / Internal State 
 / / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 index ca23c70 . . a98f2ef 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 @ @ - 10 , 11 + 10 , 13 @ @ class AABubbles { 
 static let mediaLayouter = AABubbleMediaCellLayouter ( ) 
 static let documentLayouter = AABubbleDocumentCellLayout ( ) 
 static let serviceLayouter = AABubbleServiceCellLayouter ( ) 
 + static let locationLayouter = AABubbleLocationCellLayouter ( ) 
 
 static let builtInLayouters : [ AABubbleLayouter ] = [ 
 serviceLayouter , 
 mediaLayouter , 
 documentLayouter , 
 + locationLayouter , 
 textLayouter 
 ] 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 new file mode 100644 
 index 0000000 . . 1c539ce 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 0 , 0 + 1 , 179 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + private let mapWidth : CGFloat = 200 
 + private let mapHeight : CGFloat = 160 
 + 
 + public class AABubbleLocationCell : AABubbleCell { 
 + 
 + private let map = AAMapFastView ( mapWidth : mapWidth , mapHeight : mapHeight ) 
 + 
 + private let pin = UIImageView ( ) 
 + private let timeBg = UIImageView ( ) 
 + private let timeLabel = UILabel ( ) 
 + private let statusView = UIImageView ( ) 
 + 
 + private var bindedLat : Double ? = nil 
 + private var bindedLon : Double ? = nil 
 + 
 + public init ( frame : CGRect ) { 
 + super . init ( frame : frame , isFullSize : false ) 
 + 
 + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) 
 + 
 + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 + timeLabel . textColor = appStyle . chatMediaDateColor 
 + 
 + statusView . contentMode = UIViewContentMode . Center 
 + 
 + pin . image = UIImage . bundled ( " LocationPin " ) 
 + 
 + contentView . addSubview ( map ) 
 + map . addSubview ( pin ) 
 + 
 + contentView . addSubview ( timeBg ) 
 + contentView . addSubview ( timeLabel ) 
 + contentView . addSubview ( statusView ) 
 + 
 + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + 
 + map . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mapDidTap " ) ) 
 + map . userInteractionEnabled = true 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func mapDidTap ( ) { 
 + let url = " http : / / maps . apple . com / ? q = \ ( bindedLat ! ) , \ ( bindedLon ! ) " 
 + / / print ( " url : \ ( url ) " ) 
 + UIApplication . sharedApplication ( ) . openURL ( NSURL ( string : url ) ! ) 
 + } 
 + 
 + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 + 
 + let layout = cellLayout as ! AALocationCellLayout 
 + 
 + bindedLat = layout . latitude 
 + bindedLon = layout . longitude 
 + 
 + bubbleInsets = UIEdgeInsets ( 
 + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , 
 + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , 
 + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , 
 + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) 
 + 
 + if ( ! reuse ) { 
 + 
 + / / Bind bubble 
 + if ( self . isOut ) { 
 + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) 
 + } else { 
 + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) 
 + } 
 + } 
 + 
 + map . bind ( layout . latitude , longitude : layout . longitude ) 
 + 
 + / / Update time 
 + timeLabel . text = cellLayout . date 
 + 
 + / / Update status 
 + if ( isOut ) { 
 + statusView . hidden = false 
 + switch ( UInt ( message . messageState . ordinal ( ) ) ) { 
 + case ACMessageState . PENDING . rawValue : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + case ACMessageState . SENT . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck1 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSent 
 + break ; 
 + case ACMessageState . RECEIVED . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaReceived 
 + break ; 
 + case ACMessageState . READ . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaRead 
 + break ; 
 + case ACMessageState . ERROR . rawValue : 
 + self . statusView . image = appStyle . chatIconError ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaError 
 + break 
 + default : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + } 
 + } else { 
 + statusView . hidden = true 
 + } 
 + } 
 + 
 + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 + let insets = fullContentInsets 
 + 
 + layoutBubble ( mapWidth , contentHeight : mapHeight ) 
 + 
 + if isOut { 
 + map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 + } else { 
 + map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) 
 + } 
 + 
 + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) 
 + timeLabel . sizeToFit ( ) 
 + 
 + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width 
 + let timeHeight : CGFloat = 20 
 + 
 + timeLabel . frame = CGRectMake ( map . frame . maxX - timeWidth - 18 , map . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) 
 + 
 + if ( isOut ) { 
 + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) 
 + } 
 + 
 + pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height - pin . image ! . size . height ) / 2 , 
 + pin . image ! . size . width , pin . image ! . size . height ) 
 + 
 + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) 
 + } 
 + } 
 + 
 + public class AALocationCellLayout : AACellLayout { 
 + 
 + let latitude : Double 
 + let longitude : Double 
 + 
 + init ( latitude : Double , longitude : Double , date : Int64 ) { 
 + self . latitude = latitude 
 + self . longitude = longitude 
 + super . init ( height : mapHeight , date : date , key : " location " ) 
 + } 
 + } 
 + 
 + public class AABubbleLocationCellLayouter : AABubbleLayouter { 
 + 
 + public func isSuitable ( message : ACMessage ) - > Bool { 
 + if ( message . content is ACLocationContent ) { 
 + return true 
 + } 
 + return false 
 + } 
 + 
 + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { 
 + let content = message . content as ! ACLocationContent 
 + return AALocationCellLayout ( latitude : Double ( content . getLatitude ( ) ) , longitude : Double ( content . getLongitude ( ) ) , date : Int64 ( message . date ) ) 
 + } 
 + 
 + public func cellClass ( ) - > AnyClass { 
 + return AABubbleLocationCell . self 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 7704094 . . af819ab 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 308 , 6 + 308 , 12 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 self . pickDocument ( ) 
 } 
 
 + if ( ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { 
 + builder . add ( " Location " ) { ( ) - > ( ) in 
 + self . pickLocation ( ) 
 + } 
 + } 
 + 
 showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) 
 } 
 
 @ @ - 452 , 4 + 458 , 10 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 func imagePickerControllerDidCancel ( picker : UIImagePickerController ) { 
 picker . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 + 
 + / / Location picking 
 + 
 + func pickLocation ( ) { 
 + 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 new file mode 100644 
 index 0000000 . . 123575a 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + class AALocationPickerController : AAViewController { 
 + 
 + let map = MKMapView ( ) 
 + 
 + override func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + self . view . addSubview ( map ) 
 + } 
 + 
 + 
 + override func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + map . frame = self . view . bounds 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 3d7e2c7 . . bf761a5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 17 , 8 + 17 , 8 @ @ public class AAAvatarView : UIImageView { 
 
 var enableAnimation : Bool = false 
 
 - private let cacheSize = 10 
 - private var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) 
 + private static let cacheSize = 10 
 + private static var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) 
 
 private var bindedFileId : jlong ! = nil 
 private var bindedTitle : String ! = nil 
 @ @ - 233 , 7 + 233 , 7 @ @ public class AAAvatarView : UIImageView { 
 / / 
 
 private func checkCache ( size : Int , id : Int64 ) - > UIImage ? { 
 - if let cache = avatarCache [ size ] { 
 + if let cache = AAAvatarView . avatarCache [ size ] { 
 if let img = cache [ id ] { 
 return img 
 } 
 @ @ - 242 , 12 + 242 , 12 @ @ public class AAAvatarView : UIImageView { 
 } 
 
 private func putToCache ( size : Int , id : Int64 , image : UIImage ) { 
 - if let cache = avatarCache [ size ] { 
 + if let cache = AAAvatarView . avatarCache [ size ] { 
 cache [ id ] = image 
 } else { 
 - let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : cacheSize ) ; 
 + let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : AAAvatarView . cacheSize ) ; 
 cache [ id ] = image 
 - avatarCache . updateValue ( cache , forKey : size ) 
 + AAAvatarView . avatarCache . updateValue ( cache , forKey : size ) 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift 
 new file mode 100644 
 index 0000000 . . 217c38e 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift 
 @ @ - 0 , 0 + 1 , 58 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + public class AAMapFastView : UIImageView { 
 + 
 + static private var mapCache = AASwiftlyLRU < String , UIImage > ( capacity : 16 ) 
 + 
 + let mapWidth : CGFloat 
 + let mapHeight : CGFloat 
 + var mapKey : String ? = nil 
 + 
 + public init ( mapWidth : CGFloat , mapHeight : CGFloat ) { 
 + self . mapWidth = mapWidth 
 + self . mapHeight = mapHeight 
 + super . init ( image : nil ) 
 + } 
 + 
 + required public init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func bind ( latitude : Double , longitude : Double ) { 
 + let key = " \ ( Int ( latitude * 1000000 ) ) _ \ ( Int ( longitude * 1000000 ) ) " 
 + 
 + / / Same Key 
 + if ( self . mapKey = = key ) { 
 + return 
 + } 
 + 
 + self . mapKey = key 
 + 
 + let cached = AAMapFastView . mapCache [ key ] 
 + if ( cached ! = nil ) { 
 + self . image = cached 
 + return 
 + } 
 + 
 + let options = MKMapSnapshotOptions ( ) 
 + options . region = MKCoordinateRegion ( center : CLLocationCoordinate2D ( latitude : latitude , longitude : longitude ) , span : MKCoordinateSpan ( latitudeDelta : 0 . 005 , longitudeDelta : 0 . 005 ) ) 
 + options . size = CGSizeMake ( mapWidth , mapHeight ) 
 + options . scale = UIScreen . mainScreen ( ) . scale 
 + 
 + let snapshotter = MKMapSnapshotter ( options : options ) 
 + snapshotter . startWithCompletionHandler { snapshot , error in 
 + if let img = snapshot ? . image { 
 + let rounded = img . roundCorners ( img . size . width , h : img . size . height , roundSize : 14 ) 
 + dispatchOnUi { 
 + AAMapFastView . mapCache [ key ] = rounded 
 + self . image = rounded 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file
