BLEU SCORE: 0.10600313379512592

TEST MSG: refactor ( server ) : email extention rename emailSender - > sender
GENERATED MSG: fix ( server : activation ) : fix email content - type

TEST DIFF (one line): diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala < nl > index 79e07fa . . eb95967 100644 < nl > - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala < nl > + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala < nl > @ @ - 7 , 7 + 7 , 7 @ @ sealed trait EmailExtension extends Extension < nl > final class EmailExtensionImpl ( system : ActorSystem ) extends EmailExtension { < nl > import system . dispatcher < nl > private val config = EmailConfig . load . get < nl > - val emailSender = new SmtpEmailSender ( config ) < nl > + val sender : EmailSender = new SmtpEmailSender ( config ) < nl > } < nl > < nl > object EmailExtension extends ExtensionId [ EmailExtensionImpl ] with ExtensionIdProvider {
NEAREST DIFF (one line): diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala < nl > index 1e517a5 . . 3f6580c 100644 < nl > - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala < nl > + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala < nl > @ @ - 2 , 7 + 2 , 7 @ @ package im . actor . server . email < nl > < nl > import scala . concurrent . { ExecutionContext , Future } < nl > < nl > - import org . apache . commons . mail . { DefaultAuthenticator , SimpleEmail } < nl > + import org . apache . commons . mail . { EmailConstants , DefaultAuthenticator , SimpleEmail } < nl > < nl > case class Message ( to : String , subject : String , content : String ) < nl > < nl > @ @ - 16 , 7 + 16 , 7 @ @ class EmailSender ( config : EmailConfig ) { < nl > < nl > email . setFrom ( config . address ) < nl > email . setSubject ( message . subject ) < nl > - email . setMsg ( message . content ) < nl > + email . setContent ( message . content , EmailConstants . TEXT _ PLAIN ) < nl > email . addTo ( message . to ) < nl > email . send ( ) < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala 
 index 79e07fa . . eb95967 100644 
 - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala 
 + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailExtension . scala 
 @ @ - 7 , 7 + 7 , 7 @ @ sealed trait EmailExtension extends Extension 
 final class EmailExtensionImpl ( system : ActorSystem ) extends EmailExtension { 
 import system . dispatcher 
 private val config = EmailConfig . load . get 
 - val emailSender = new SmtpEmailSender ( config ) 
 + val sender : EmailSender = new SmtpEmailSender ( config ) 
 } 
 
 object EmailExtension extends ExtensionId [ EmailExtensionImpl ] with ExtensionIdProvider {

NEAREST DIFF:
diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala 
 index 1e517a5 . . 3f6580c 100644 
 - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala 
 + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala 
 @ @ - 2 , 7 + 2 , 7 @ @ package im . actor . server . email 
 
 import scala . concurrent . { ExecutionContext , Future } 
 
 - import org . apache . commons . mail . { DefaultAuthenticator , SimpleEmail } 
 + import org . apache . commons . mail . { EmailConstants , DefaultAuthenticator , SimpleEmail } 
 
 case class Message ( to : String , subject : String , content : String ) 
 
 @ @ - 16 , 7 + 16 , 7 @ @ class EmailSender ( config : EmailConfig ) { 
 
 email . setFrom ( config . address ) 
 email . setSubject ( message . subject ) 
 - email . setMsg ( message . content ) 
 + email . setContent ( message . content , EmailConstants . TEXT _ PLAIN ) 
 email . addTo ( message . to ) 
 email . send ( ) 
 }
