BLEU SCORE: 1.0

TEST MSG: fix ( core ) : Fixing call rejection
GENERATED MSG: fix ( core ) : Fixing call rejection

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index f867349 . . a91fe01 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 149 , 6 + 149 , 7 @ @ public class CallActor extends AbsCallActor { < nl > if ( ! isAnswered & & ! isRejected ) { < nl > isRejected = true ; < nl > request ( new RequestRejectCall ( callId ) ) ; < nl > + self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 0194b2a . . f50de67 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 104 , 6 + 104 , 11 @ @ public class CallManagerActor extends ModuleActor { < nl > runningCalls . put ( callId , ref ) ; < nl > < nl > / / < nl > + / / Marking outgoing call as answered to avoid call rejects on call ending < nl > + / / < nl > + answeredCalls . add ( callId ) ; < nl > + < nl > + / / < nl > / / Setting Current Call < nl > / / < nl > currentCall = callId ; < nl > @ @ - 285 , 7 + 290 , 11 @ @ public class CallManagerActor extends ModuleActor { < nl > / / < nl > ActorRef currentCallActor = runningCalls . remove ( callId ) ; < nl > if ( currentCallActor ! = null ) { < nl > - currentCallActor . send ( PoisonPill . INSTANCE ) ; < nl > + if ( answeredCalls . contains ( callId ) ) { < nl > + currentCallActor . send ( PoisonPill . INSTANCE ) ; < nl > + } else { < nl > + currentCallActor . send ( new CallActor . RejectCall ( ) ) ; < nl > + } < nl > } < nl > < nl > / /
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index f867349 . . a91fe01 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 149 , 6 + 149 , 7 @ @ public class CallActor extends AbsCallActor { < nl > if ( ! isAnswered & & ! isRejected ) { < nl > isRejected = true ; < nl > request ( new RequestRejectCall ( callId ) ) ; < nl > + self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 0194b2a . . f50de67 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 104 , 6 + 104 , 11 @ @ public class CallManagerActor extends ModuleActor { < nl > runningCalls . put ( callId , ref ) ; < nl > < nl > / / < nl > + / / Marking outgoing call as answered to avoid call rejects on call ending < nl > + / / < nl > + answeredCalls . add ( callId ) ; < nl > + < nl > + / / < nl > / / Setting Current Call < nl > / / < nl > currentCall = callId ; < nl > @ @ - 285 , 7 + 290 , 11 @ @ public class CallManagerActor extends ModuleActor { < nl > / / < nl > ActorRef currentCallActor = runningCalls . remove ( callId ) ; < nl > if ( currentCallActor ! = null ) { < nl > - currentCallActor . send ( PoisonPill . INSTANCE ) ; < nl > + if ( answeredCalls . contains ( callId ) ) { < nl > + currentCallActor . send ( PoisonPill . INSTANCE ) ; < nl > + } else { < nl > + currentCallActor . send ( new CallActor . RejectCall ( ) ) ; < nl > + } < nl > } < nl > < nl > / /

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index f867349 . . a91fe01 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 149 , 6 + 149 , 7 @ @ public class CallActor extends AbsCallActor { 
 if ( ! isAnswered & & ! isRejected ) { 
 isRejected = true ; 
 request ( new RequestRejectCall ( callId ) ) ; 
 + self ( ) . send ( PoisonPill . INSTANCE ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 0194b2a . . f50de67 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 104 , 6 + 104 , 11 @ @ public class CallManagerActor extends ModuleActor { 
 runningCalls . put ( callId , ref ) ; 
 
 / / 
 + / / Marking outgoing call as answered to avoid call rejects on call ending 
 + / / 
 + answeredCalls . add ( callId ) ; 
 + 
 + / / 
 / / Setting Current Call 
 / / 
 currentCall = callId ; 
 @ @ - 285 , 7 + 290 , 11 @ @ public class CallManagerActor extends ModuleActor { 
 / / 
 ActorRef currentCallActor = runningCalls . remove ( callId ) ; 
 if ( currentCallActor ! = null ) { 
 - currentCallActor . send ( PoisonPill . INSTANCE ) ; 
 + if ( answeredCalls . contains ( callId ) ) { 
 + currentCallActor . send ( PoisonPill . INSTANCE ) ; 
 + } else { 
 + currentCallActor . send ( new CallActor . RejectCall ( ) ) ; 
 + } 
 } 
 
 / /

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index f867349 . . a91fe01 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 149 , 6 + 149 , 7 @ @ public class CallActor extends AbsCallActor { 
 if ( ! isAnswered & & ! isRejected ) { 
 isRejected = true ; 
 request ( new RequestRejectCall ( callId ) ) ; 
 + self ( ) . send ( PoisonPill . INSTANCE ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 0194b2a . . f50de67 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 104 , 6 + 104 , 11 @ @ public class CallManagerActor extends ModuleActor { 
 runningCalls . put ( callId , ref ) ; 
 
 / / 
 + / / Marking outgoing call as answered to avoid call rejects on call ending 
 + / / 
 + answeredCalls . add ( callId ) ; 
 + 
 + / / 
 / / Setting Current Call 
 / / 
 currentCall = callId ; 
 @ @ - 285 , 7 + 290 , 11 @ @ public class CallManagerActor extends ModuleActor { 
 / / 
 ActorRef currentCallActor = runningCalls . remove ( callId ) ; 
 if ( currentCallActor ! = null ) { 
 - currentCallActor . send ( PoisonPill . INSTANCE ) ; 
 + if ( answeredCalls . contains ( callId ) ) { 
 + currentCallActor . send ( PoisonPill . INSTANCE ) ; 
 + } else { 
 + currentCallActor . send ( new CallActor . RejectCall ( ) ) ; 
 + } 
 } 
 
 / /
