BLEU SCORE: 0.19338531381761725

TEST MSG: perf ( android ) : Temporary disable fast picker , disabled custom layouting
GENERATED MSG: feat ( android ) : toolBar and fab styling over sdk

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index c5324eb . . 359d386 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 26 , 6 + 26 , 7 @ @ import im . actor . core . PlatformType ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . events . IncomingCall ; < nl > import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . android . view . BindedViewHolder ; < nl > import im . actor . runtime . eventbus . BusSubscriber ; < nl > import im . actor . runtime . eventbus . Event ; < nl > @ @ - 201 , 6 + 202 , 8 @ @ public class ActorSDK { < nl > / / TODO : Replace < nl > new SmileProcessor ( application ) . loadEmoji ( ) ; < nl > < nl > + ActorSystem . system ( ) . addDispatcher ( " voice _ capture _ dispatcher " , 1 ) ; < nl > + < nl > / / < nl > / / SDK Configuration < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 4c8e6fd . . 9e74bce 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 246 , 7 + 246 , 6 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > audioTimer = ( TextView ) findViewById ( R . id . audioTimer ) ; < nl > audioSlide = findViewById ( R . id . audioSlide ) ; < nl > recordPoint = findViewById ( R . id . record _ point ) ; < nl > - ActorSystem . system ( ) . addDispatcher ( " voice _ capture _ dispatcher " , 1 ) ; < nl > < nl > audioButton = ( ImageView ) findViewById ( R . id . record _ btn ) ; < nl > audioButton . setVisibility ( View . VISIBLE ) ; < nl > @ @ - 408 , 11 + 407 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; < nl > handleIntent ( ) ; < nl > < nl > - RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; < nl > - fastShareAdapter = new FastShareAdapter ( this ) ; < nl > - LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; < nl > - fastShare . setAdapter ( fastShareAdapter ) ; < nl > - fastShare . setLayoutManager ( layoutManager ) ; < nl > + / / RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; < nl > + / / fastShareAdapter = new FastShareAdapter ( this ) ; < nl > + / / LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; < nl > + / / fastShare . setAdapter ( fastShareAdapter ) ; < nl > + / / fastShare . setLayoutManager ( layoutManager ) ; < nl > < nl > final ImageButton shareMenuSend = ( ImageButton ) findViewById ( R . id . share _ send ) ; < nl > shareMenuSend . setColorFilter ( Color . WHITE , PorterDuff . Mode . SRC _ IN ) ; < nl > @ @ - 427 , 20 + 426 , 20 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > hideShare ( ) ; < nl > } < nl > } ) ; < nl > - fastShareAdapter . getSelectedVM ( ) . subscribe ( new ValueChangedListener < Set < String > > ( ) { < nl > - @ Override < nl > - public void onChanged ( Set < String > val , Value < Set < String > > valueModel ) { < nl > - if ( val . size ( ) > 0 ) { < nl > - shareLocation . setVisibility ( View . INVISIBLE ) ; < nl > - shareMenuSend . setVisibility ( View . VISIBLE ) ; < nl > - locationText . setText ( getString ( R . string . chat _ doc _ send ) + " ( " + val . size ( ) + " ) " ) ; < nl > - } else { < nl > - shareLocation . setVisibility ( View . VISIBLE ) ; < nl > - shareMenuSend . setVisibility ( View . INVISIBLE ) ; < nl > - locationText . setText ( getString ( R . string . share _ menu _ location ) ) ; < nl > - } < nl > - } < nl > - } ) ; < nl > + / / fastShareAdapter . getSelectedVM ( ) . subscribe ( new ValueChangedListener < Set < String > > ( ) { < nl > + / / @ Override < nl > + / / public void onChanged ( Set < String > val , Value < Set < String > > valueModel ) { < nl > + / / if ( val . size ( ) > 0 ) { < nl > + / / shareLocation . setVisibility ( View . INVISIBLE ) ; < nl > + / / shareMenuSend . setVisibility ( View . VISIBLE ) ; < nl > + / / locationText . setText ( getString ( R . string . chat _ doc _ send ) + " ( " + val . size ( ) + " ) " ) ; < nl > + / / } else { < nl > + / / shareLocation . setVisibility ( View . VISIBLE ) ; < nl > + / / shareMenuSend . setVisibility ( View . INVISIBLE ) ; < nl > + / / locationText . setText ( getString ( R . string . share _ menu _ location ) ) ; < nl > + / / } < nl > + / / } < nl > + / / } ) ; < nl > } < nl > < nl > private void startCamera ( ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index 4975fb1 . . e8062a7 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 18 , 6 + 18 , 7 @ @ import android . support . v4 . app . FragmentActivity ; < nl > import android . support . v7 . app . AppCompatActivity ; < nl > import android . support . v7 . view . ActionMode ; < nl > import android . support . v7 . widget . ChatLinearLayoutManager ; < nl > + import android . support . v7 . widget . LinearLayoutManager ; < nl > import android . support . v7 . widget . RecyclerView ; < nl > import android . text . InputType ; < nl > import android . view . LayoutInflater ; < nl > @ @ - 81 , 7 + 82 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > < nl > private Peer peer ; < nl > < nl > - private ChatLinearLayoutManager linearLayoutManager ; < nl > + / / private ChatLinearLayoutManager linearLayoutManager ; < nl > protected MessagesAdapter messagesAdapter ; < nl > / / private ConversationVM conversationVM ; < nl > private ActionMode actionMode ; < nl > @ @ - 116 , 36 + 117 , 36 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > / / < nl > / / Loading background < nl > / / < nl > - if ( wallpaperPrefs = = null ) { < nl > - wallpaperPrefs = getContext ( ) . getSharedPreferences ( " wallpaper " , Context . MODE _ PRIVATE ) ; < nl > - } < nl > - Drawable background ; < nl > - if ( messenger ( ) . getSelectedWallpaper ( ) = = null ) { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > - } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 1 " ) ) { < nl > - if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 1 ) { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > - } else { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > - } < nl > - } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 2 " ) ) { < nl > - if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 2 ) { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > - } else { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > - } < nl > - } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 3 " ) ) { < nl > - if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 3 ) { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > - } else { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > - } < nl > - } else if ( messenger ( ) . getSelectedWallpaper ( ) . startsWith ( " local : " ) ) { < nl > - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > - } else { < nl > - background = Drawable . createFromPath ( BaseActorSettingsFragment . getWallpaperFile ( ) ) ; < nl > - } < nl > - ( ( ImageView ) res . findViewById ( R . id . chatBackgroundView ) ) . setImageDrawable ( background ) ; < nl > + / / if ( wallpaperPrefs = = null ) { < nl > + / / wallpaperPrefs = getContext ( ) . getSharedPreferences ( " wallpaper " , Context . MODE _ PRIVATE ) ; < nl > + / / } < nl > + / / Drawable background ; < nl > + / / if ( messenger ( ) . getSelectedWallpaper ( ) = = null ) { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 1 " ) ) { < nl > + / / if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 1 ) { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > + / / } else { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + / / } < nl > + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 2 " ) ) { < nl > + / / if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 2 ) { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > + / / } else { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + / / } < nl > + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 3 " ) ) { < nl > + / / if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 3 ) { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; < nl > + / / } else { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + / / } < nl > + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . startsWith ( " local : " ) ) { < nl > + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; < nl > + / / } else { < nl > + / / background = Drawable . createFromPath ( BaseActorSettingsFragment . getWallpaperFile ( ) ) ; < nl > + / / } < nl > + / / ( ( ImageView ) res . findViewById ( R . id . chatBackgroundView ) ) . setImageDrawable ( background ) ; < nl > < nl > View footer = new View ( getActivity ( ) ) ; < nl > footer . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 8 ) ) ) ; < nl > @ @ - 247 , 13 + 248 , 14 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > } < nl > < nl > if ( index > 0 ) { < nl > - if ( linearLayoutManager ! = null ) { < nl > - linearLayoutManager . setStackFromEnd ( false ) ; < nl > - linearLayoutManager . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; < nl > - / / linearLayoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; < nl > - / / linearLayoutManager . scrollToPosition ( index + 1 ) ; < nl > - / / getCollection ( ) . scrollToPosition ( index + 1 ) ; < nl > - } < nl > + < nl > + / / if ( linearLayoutManager ! = null ) { < nl > + / / linearLayoutManager . setStackFromEnd ( false ) ; < nl > + / / linearLayoutManager . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; < nl > + / / / / linearLayoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; < nl > + / / / / linearLayoutManager . scrollToPosition ( index + 1 ) ; < nl > + / / / / getCollection ( ) . scrollToPosition ( index + 1 ) ; < nl > + / / } < nl > < nl > } else if ( getCollection ( ) ! = null ) { < nl > / / linearLayoutManager . scrollToPosition ( 0 ) ; < nl > @ @ - 273 , 13 + 275 , 13 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > @ Override < nl > protected void configureRecyclerView ( RecyclerView recyclerView ) { < nl > recyclerView . setHasFixedSize ( true ) ; < nl > - linearLayoutManager = new ChatLinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; < nl > - linearLayoutManager . setStackFromEnd ( false ) ; < nl > - recyclerView . setLayoutManager ( linearLayoutManager ) ; < nl > + final LinearLayoutManager manager = new LinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; < nl > + manager . setStackFromEnd ( false ) ; < nl > + recyclerView . setLayoutManager ( manager ) ; < nl > getDisplayList ( ) . setLinearLayoutCallback ( new BindedDisplayList . LinearLayoutCallback ( ) { < nl > @ Override < nl > public void setStackFromEnd ( boolean b ) { < nl > - if ( linearLayoutManager ! = null ) linearLayoutManager . setStackFromEnd ( b ) ; < nl > + if ( manager ! = null ) manager . setStackFromEnd ( b ) ; < nl > } < nl > } ) ; < nl > } < nl > @ @ - 625 , 7 + 627 , 6 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > / / conversationVM = null ; < nl > / / } < nl > messagesAdapter = null ; < nl > - linearLayoutManager = null ; < nl > - linearLayoutManager = null ; < nl > + < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index de6c01a . . 39c7816 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import android . widget . Toast ; < nl > < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . BaseActorSDKDelegate ; < nl > + import im . actor . sdk . Style ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsField ; < nl > < nl > @ @ - 23 , 6 + 24 , 13 @ @ public class Application extends android . app . Application { < nl > ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > ActorSDK . sharedActor ( ) . createActor ( this ) ; < nl > + < nl > + Style style = ActorSDK . sharedActor ( ) . style ; < nl > + style . toolBarColor = getResources ( ) . getColor ( R . color . accent ) ; < nl > + style . fabColor = getResources ( ) . getColor ( R . color . accent ) ; < nl > + style . fabColorPressed = getResources ( ) . getColor ( R . color . accent _ pressed ) ; < nl > + < nl > + < nl > } < nl > < nl > private class ActorSDKDelegate extends BaseActorSDKDelegate { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 674fae4 . . f7a3f92 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 32 , 29 + 32 , 33 @ @ public class ActorSDK { < nl > < nl > < nl > private static volatile ActorSDK sdk = new ActorSDK ( ) ; < nl > - / * * < nl > - * Application Context < nl > - * / < nl > - private Application application ; < nl > + / / < nl > + / / Style < nl > + / / < nl > + public Style style = new Style ( ) ; < nl > < nl > < nl > / / < nl > / / SDK Objects < nl > / / < nl > / * * < nl > - * Actor Messenger instance < nl > + * Application Context < nl > * / < nl > - private AndroidMessenger messenger ; < nl > + private Application application ; < nl > / * * < nl > - * Server Endpoints < nl > + * Actor Messenger instance < nl > * / < nl > - private List < String > endpoints = new ArrayList < String > ( ) ; < nl > + private AndroidMessenger messenger ; < nl > < nl > < nl > / / < nl > / / SDK Config < nl > / / < nl > / * * < nl > + * Server Endpoints < nl > + * / < nl > + private List < String > endpoints = new ArrayList < String > ( ) ; < nl > + / * * < nl > * API App Id < nl > * / < nl > private int apiAppId = 1 ; < nl > @ @ - 66 , 7 + 70 , 6 @ @ public class ActorSDK { < nl > * Push Registration Id < nl > * / < nl > private long pushId = 0 ; < nl > - < nl > / * * < nl > * Is Keeping app alive enabled < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / Style . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / Style . java < nl > new file mode 100644 < nl > index 0000000 . . 608678d < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / Style . java < nl > @ @ - 0 , 0 + 1 , 7 @ @ < nl > + package im . actor . sdk ; < nl > + < nl > + public class Style { < nl > + public int toolBarColor = 0 ; < nl > + public int fabColor = 0 ; < nl > + public int fabColorPressed = 0 ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > index 1a5ddd1 . . 4da1359 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java < nl > @ @ - 1 , 6 + 1 , 7 @ @ < nl > package im . actor . sdk . controllers . activity ; < nl > < nl > import android . app . ProgressDialog ; < nl > + import android . graphics . drawable . ColorDrawable ; < nl > import android . os . Bundle ; < nl > import android . support . v7 . app . ActionBar ; < nl > import android . support . v7 . app . AppCompatActivity ; < nl > @ @ - 12 , 6 + 13 , 7 @ @ import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > + import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . fragment . ActorBinder ; < nl > import im . actor . sdk . view . avatar . AvatarView ; < nl > @ @ - 31 , 6 + 33 , 10 @ @ public class BaseActivity extends AppCompatActivity { < nl > super . onCreate ( savedInstanceState ) ; < nl > onCreateToolbar ( ) ; < nl > notifyOnResume ( ) ; < nl > + < nl > + if ( getSupportActionBar ( ) ! = null & & ActorSDK . sharedActor ( ) . style . toolBarColor ! = 0 ) { < nl > + getSupportActionBar ( ) . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . toolBarColor ) ) ; < nl > + } < nl > } < nl > < nl > protected void onCreateToolbar ( ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java < nl > index 081a3ef . . b86af95 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java < nl > @ @ - 7 , 6 + 7 , 7 @ @ import android . support . v4 . app . Fragment ; < nl > import android . support . v4 . app . FragmentTransaction ; < nl > import android . view . MenuItem ; < nl > < nl > + import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > < nl > / * * < nl > @ @ - 21 , 6 + 22 , 11 @ @ public class BaseFragmentActivity extends BaseActivity { < nl > getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; < nl > getSupportActionBar ( ) . setDisplayShowTitleEnabled ( true ) ; < nl > getSupportActionBar ( ) . setDisplayShowCustomEnabled ( false ) ; < nl > + < nl > + if ( ActorSDK . sharedActor ( ) . style . toolBarColor ! = 0 ) { < nl > + getSupportActionBar ( ) . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . toolBarColor ) ) ; < nl > + } < nl > + < nl > setContentView ( R . layout . activity _ base _ fragment ) ; < nl > getWindow ( ) . setBackgroundDrawable ( new ColorDrawable ( Color . TRANSPARENT ) ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > index 14012c8 . . e61f85b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . sdk . controllers . activity . controllers ; < nl > < nl > import android . content . Context ; < nl > import android . content . Intent ; < nl > + import android . graphics . drawable . ColorDrawable ; < nl > import android . net . Uri ; < nl > import android . os . Bundle ; < nl > import android . support . v4 . app . Fragment ; < nl > @ @ - 20 , 10 + 21 , 14 @ @ import android . view . ViewGroup ; < nl > import android . widget . FrameLayout ; < nl > import android . widget . TextView ; < nl > < nl > + import com . getbase . floatingactionbutton . FloatingActionButton ; < nl > + < nl > import java . util . ArrayList ; < nl > < nl > import im . actor . core . entity . Dialog ; < nl > import im . actor . core . entity . SearchEntity ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . Style ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . runtime . generic . mvvm . DisplayList ; < nl > @ @ - 62 , 15 + 67 , 14 @ @ public class MainPhoneController extends MainBaseController { < nl > private View searchHintView ; < nl > < nl > private boolean isSearchVisible = false ; < nl > + private SearchAdapter searchAdapter ; < nl > + private BindedDisplayList < SearchEntity > searchDisplay ; < nl > private final DisplayList . Listener searchListener = new DisplayList . Listener ( ) { < nl > @ Override < nl > public void onCollectionChanged ( ) { < nl > onSearchChanged ( ) ; < nl > } < nl > } ; < nl > - private SearchAdapter searchAdapter ; < nl > - private BindedDisplayList < SearchEntity > searchDisplay ; < nl > - < nl > private SearchView searchView ; < nl > private MenuItem searchMenu ; < nl > < nl > @ @ - 80 , 7 + 84 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > private View emptyContactsView ; < nl > < nl > private View fabContent ; < nl > - private View fabRoot ; < nl > + private com . getbase . floatingactionbutton . FloatingActionButton fabRoot ; < nl > < nl > private boolean isFabVisible = false ; < nl > < nl > @ @ - 168 , 8 + 172 , 13 @ @ public class MainPhoneController extends MainBaseController { < nl > isFabVisible = false ; < nl > < nl > fabContent = findViewById ( R . id . fabContainer ) ; < nl > - fabRoot = findViewById ( R . id . rootFab ) ; < nl > - < nl > + fabRoot = ( FloatingActionButton ) findViewById ( R . id . rootFab ) ; < nl > + if ( ActorSDK . sharedActor ( ) . style . fabColor ! = 0 ) { < nl > + fabRoot . setColorNormal ( ActorSDK . sharedActor ( ) . style . fabColor ) ; < nl > + } < nl > + if ( ActorSDK . sharedActor ( ) . style . fabColorPressed ! = 0 ) { < nl > + fabRoot . setColorPressed ( ActorSDK . sharedActor ( ) . style . fabColorPressed ) ; < nl > + } < nl > fabRoot . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > @ @ - 229 , 7 + 238 , 16 @ @ public class MainPhoneController extends MainBaseController { < nl > } < nl > } ) ; < nl > < nl > - findViewById ( R . id . composeContainer ) . setOnClickListener ( new View . OnClickListener ( ) { < nl > + Style style = ActorSDK . sharedActor ( ) . style ; < nl > + < nl > + com . getbase . floatingactionbutton . FloatingActionButton fabCompose = ( FloatingActionButton ) findViewById ( R . id . composeContainer ) ; < nl > + if ( style . fabColor ! = 0 ) { < nl > + fabCompose . setColorNormal ( style . fabColor ) ; < nl > + } < nl > + if ( style . fabColorPressed ! = 0 ) { < nl > + fabCompose . setColorPressed ( style . fabColorPressed ) ; < nl > + } < nl > + fabCompose . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > goneFab ( ) ; < nl > @ @ - 237 , 7 + 255 , 14 @ @ public class MainPhoneController extends MainBaseController { < nl > } < nl > } ) ; < nl > < nl > - findViewById ( R . id . createGroupContainer ) . setOnClickListener ( new View . OnClickListener ( ) { < nl > + com . getbase . floatingactionbutton . FloatingActionButton fabCreateGroup = ( FloatingActionButton ) findViewById ( R . id . createGroupContainer ) ; < nl > + if ( style . fabColor ! = 0 ) { < nl > + fabCreateGroup . setColorNormal ( style . fabColor ) ; < nl > + } < nl > + if ( style . fabColorPressed ! = 0 ) { < nl > + fabCreateGroup . setColorPressed ( style . fabColorPressed ) ; < nl > + } < nl > + fabCreateGroup . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > goneFab ( ) ; < nl > @ @ - 245 , 7 + 270 , 14 @ @ public class MainPhoneController extends MainBaseController { < nl > } < nl > } ) ; < nl > < nl > - findViewById ( R . id . addContactContainer ) . setOnClickListener ( new View . OnClickListener ( ) { < nl > + com . getbase . floatingactionbutton . FloatingActionButton fabAddContact = ( FloatingActionButton ) findViewById ( R . id . addContactContainer ) ; < nl > + if ( style . fabColor ! = 0 ) { < nl > + fabAddContact . setColorNormal ( style . fabColor ) ; < nl > + } < nl > + if ( style . fabColorPressed ! = 0 ) { < nl > + fabAddContact . setColorPressed ( style . fabColorPressed ) ; < nl > + } < nl > + fabAddContact . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > goneFab ( ) ; < nl > @ @ - 253 , 6 + 285 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > } < nl > } ) ; < nl > < nl > + < nl > findViewById ( R . id . addContactButton ) . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > @ @ - 280 , 13 + 313 , 17 @ @ public class MainPhoneController extends MainBaseController { < nl > ab . setDisplayShowHomeEnabled ( false ) ; < nl > ab . setDisplayShowTitleEnabled ( false ) ; < nl > < nl > + if ( ActorSDK . sharedActor ( ) . style . toolBarColor ! = 0 ) { < nl > + ab . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . toolBarColor ) ) ; < nl > + } < nl > + < nl > FrameLayout tabsContainer = new FrameLayout ( getActivity ( ) ) ; < nl > barTabs = new PagerSlidingTabStrip ( getActivity ( ) ) ; < nl > barTabs . setTabBackground ( R . drawable . selector _ bar ) ; < nl > / / barTabs . setIndicatorColorResource ( R . color . main _ tab _ selected ) ; < nl > barTabs . setIndicatorHeight ( Screen . dp ( 2 ) ) ; < nl > < nl > - barTabs . setDividerColorResource ( R . color . primary ) ; < nl > + barTabs . setDividerColorResource ( android . R . color . transparent ) ; < nl > / / barTabs . setTextColorResource ( R . color . main _ tab _ text ) ; < nl > barTabs . setTextSize ( Screen . dp ( 14 ) ) ; < nl > barTabs . setUnderlineHeight ( 0 ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index c5324eb . . 359d386 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import im . actor . core . PlatformType ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . events . IncomingCall ; 
 import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . android . view . BindedViewHolder ; 
 import im . actor . runtime . eventbus . BusSubscriber ; 
 import im . actor . runtime . eventbus . Event ; 
 @ @ - 201 , 6 + 202 , 8 @ @ public class ActorSDK { 
 / / TODO : Replace 
 new SmileProcessor ( application ) . loadEmoji ( ) ; 
 
 + ActorSystem . system ( ) . addDispatcher ( " voice _ capture _ dispatcher " , 1 ) ; 
 + 
 / / 
 / / SDK Configuration 
 / / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 4c8e6fd . . 9e74bce 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 246 , 7 + 246 , 6 @ @ public class ChatActivity extends ActorEditTextActivity { 
 audioTimer = ( TextView ) findViewById ( R . id . audioTimer ) ; 
 audioSlide = findViewById ( R . id . audioSlide ) ; 
 recordPoint = findViewById ( R . id . record _ point ) ; 
 - ActorSystem . system ( ) . addDispatcher ( " voice _ capture _ dispatcher " , 1 ) ; 
 
 audioButton = ( ImageView ) findViewById ( R . id . record _ btn ) ; 
 audioButton . setVisibility ( View . VISIBLE ) ; 
 @ @ - 408 , 11 + 407 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; 
 handleIntent ( ) ; 
 
 - RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; 
 - fastShareAdapter = new FastShareAdapter ( this ) ; 
 - LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; 
 - fastShare . setAdapter ( fastShareAdapter ) ; 
 - fastShare . setLayoutManager ( layoutManager ) ; 
 + / / RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; 
 + / / fastShareAdapter = new FastShareAdapter ( this ) ; 
 + / / LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; 
 + / / fastShare . setAdapter ( fastShareAdapter ) ; 
 + / / fastShare . setLayoutManager ( layoutManager ) ; 
 
 final ImageButton shareMenuSend = ( ImageButton ) findViewById ( R . id . share _ send ) ; 
 shareMenuSend . setColorFilter ( Color . WHITE , PorterDuff . Mode . SRC _ IN ) ; 
 @ @ - 427 , 20 + 426 , 20 @ @ public class ChatActivity extends ActorEditTextActivity { 
 hideShare ( ) ; 
 } 
 } ) ; 
 - fastShareAdapter . getSelectedVM ( ) . subscribe ( new ValueChangedListener < Set < String > > ( ) { 
 - @ Override 
 - public void onChanged ( Set < String > val , Value < Set < String > > valueModel ) { 
 - if ( val . size ( ) > 0 ) { 
 - shareLocation . setVisibility ( View . INVISIBLE ) ; 
 - shareMenuSend . setVisibility ( View . VISIBLE ) ; 
 - locationText . setText ( getString ( R . string . chat _ doc _ send ) + " ( " + val . size ( ) + " ) " ) ; 
 - } else { 
 - shareLocation . setVisibility ( View . VISIBLE ) ; 
 - shareMenuSend . setVisibility ( View . INVISIBLE ) ; 
 - locationText . setText ( getString ( R . string . share _ menu _ location ) ) ; 
 - } 
 - } 
 - } ) ; 
 + / / fastShareAdapter . getSelectedVM ( ) . subscribe ( new ValueChangedListener < Set < String > > ( ) { 
 + / / @ Override 
 + / / public void onChanged ( Set < String > val , Value < Set < String > > valueModel ) { 
 + / / if ( val . size ( ) > 0 ) { 
 + / / shareLocation . setVisibility ( View . INVISIBLE ) ; 
 + / / shareMenuSend . setVisibility ( View . VISIBLE ) ; 
 + / / locationText . setText ( getString ( R . string . chat _ doc _ send ) + " ( " + val . size ( ) + " ) " ) ; 
 + / / } else { 
 + / / shareLocation . setVisibility ( View . VISIBLE ) ; 
 + / / shareMenuSend . setVisibility ( View . INVISIBLE ) ; 
 + / / locationText . setText ( getString ( R . string . share _ menu _ location ) ) ; 
 + / / } 
 + / / } 
 + / / } ) ; 
 } 
 
 private void startCamera ( ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index 4975fb1 . . e8062a7 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 18 , 6 + 18 , 7 @ @ import android . support . v4 . app . FragmentActivity ; 
 import android . support . v7 . app . AppCompatActivity ; 
 import android . support . v7 . view . ActionMode ; 
 import android . support . v7 . widget . ChatLinearLayoutManager ; 
 + import android . support . v7 . widget . LinearLayoutManager ; 
 import android . support . v7 . widget . RecyclerView ; 
 import android . text . InputType ; 
 import android . view . LayoutInflater ; 
 @ @ - 81 , 7 + 82 , 7 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 
 private Peer peer ; 
 
 - private ChatLinearLayoutManager linearLayoutManager ; 
 + / / private ChatLinearLayoutManager linearLayoutManager ; 
 protected MessagesAdapter messagesAdapter ; 
 / / private ConversationVM conversationVM ; 
 private ActionMode actionMode ; 
 @ @ - 116 , 36 + 117 , 36 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 / / 
 / / Loading background 
 / / 
 - if ( wallpaperPrefs = = null ) { 
 - wallpaperPrefs = getContext ( ) . getSharedPreferences ( " wallpaper " , Context . MODE _ PRIVATE ) ; 
 - } 
 - Drawable background ; 
 - if ( messenger ( ) . getSelectedWallpaper ( ) = = null ) { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 - } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 1 " ) ) { 
 - if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 1 ) { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 - } else { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 - } 
 - } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 2 " ) ) { 
 - if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 2 ) { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 - } else { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 - } 
 - } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 3 " ) ) { 
 - if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 3 ) { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 - } else { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 - } 
 - } else if ( messenger ( ) . getSelectedWallpaper ( ) . startsWith ( " local : " ) ) { 
 - background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 - } else { 
 - background = Drawable . createFromPath ( BaseActorSettingsFragment . getWallpaperFile ( ) ) ; 
 - } 
 - ( ( ImageView ) res . findViewById ( R . id . chatBackgroundView ) ) . setImageDrawable ( background ) ; 
 + / / if ( wallpaperPrefs = = null ) { 
 + / / wallpaperPrefs = getContext ( ) . getSharedPreferences ( " wallpaper " , Context . MODE _ PRIVATE ) ; 
 + / / } 
 + / / Drawable background ; 
 + / / if ( messenger ( ) . getSelectedWallpaper ( ) = = null ) { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 1 " ) ) { 
 + / / if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 1 ) { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 + / / } else { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + / / } 
 + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 2 " ) ) { 
 + / / if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 2 ) { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 + / / } else { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + / / } 
 + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . equals ( " local : bg _ 3 " ) ) { 
 + / / if ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) . length > 3 ) { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 1 ] ) ; 
 + / / } else { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + / / } 
 + / / } else if ( messenger ( ) . getSelectedWallpaper ( ) . startsWith ( " local : " ) ) { 
 + / / background = getResources ( ) . getDrawable ( ActorSDK . sharedActor ( ) . style . getDefaultBackgrouds ( ) [ 0 ] ) ; 
 + / / } else { 
 + / / background = Drawable . createFromPath ( BaseActorSettingsFragment . getWallpaperFile ( ) ) ; 
 + / / } 
 + / / ( ( ImageView ) res . findViewById ( R . id . chatBackgroundView ) ) . setImageDrawable ( background ) ; 
 
 View footer = new View ( getActivity ( ) ) ; 
 footer . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 8 ) ) ) ; 
 @ @ - 247 , 13 + 248 , 14 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 } 
 
 if ( index > 0 ) { 
 - if ( linearLayoutManager ! = null ) { 
 - linearLayoutManager . setStackFromEnd ( false ) ; 
 - linearLayoutManager . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; 
 - / / linearLayoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; 
 - / / linearLayoutManager . scrollToPosition ( index + 1 ) ; 
 - / / getCollection ( ) . scrollToPosition ( index + 1 ) ; 
 - } 
 + 
 + / / if ( linearLayoutManager ! = null ) { 
 + / / linearLayoutManager . setStackFromEnd ( false ) ; 
 + / / linearLayoutManager . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; 
 + / / / / linearLayoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; 
 + / / / / linearLayoutManager . scrollToPosition ( index + 1 ) ; 
 + / / / / getCollection ( ) . scrollToPosition ( index + 1 ) ; 
 + / / } 
 
 } else if ( getCollection ( ) ! = null ) { 
 / / linearLayoutManager . scrollToPosition ( 0 ) ; 
 @ @ - 273 , 13 + 275 , 13 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 @ Override 
 protected void configureRecyclerView ( RecyclerView recyclerView ) { 
 recyclerView . setHasFixedSize ( true ) ; 
 - linearLayoutManager = new ChatLinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; 
 - linearLayoutManager . setStackFromEnd ( false ) ; 
 - recyclerView . setLayoutManager ( linearLayoutManager ) ; 
 + final LinearLayoutManager manager = new LinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; 
 + manager . setStackFromEnd ( false ) ; 
 + recyclerView . setLayoutManager ( manager ) ; 
 getDisplayList ( ) . setLinearLayoutCallback ( new BindedDisplayList . LinearLayoutCallback ( ) { 
 @ Override 
 public void setStackFromEnd ( boolean b ) { 
 - if ( linearLayoutManager ! = null ) linearLayoutManager . setStackFromEnd ( b ) ; 
 + if ( manager ! = null ) manager . setStackFromEnd ( b ) ; 
 } 
 } ) ; 
 } 
 @ @ - 625 , 7 + 627 , 6 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 / / conversationVM = null ; 
 / / } 
 messagesAdapter = null ; 
 - linearLayoutManager = null ; 
 - linearLayoutManager = null ; 
 + 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index de6c01a . . 39c7816 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import android . widget . Toast ; 
 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . BaseActorSDKDelegate ; 
 + import im . actor . sdk . Style ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsField ; 
 
 @ @ - 23 , 6 + 24 , 13 @ @ public class Application extends android . app . Application { 
 ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 ActorSDK . sharedActor ( ) . createActor ( this ) ; 
 + 
 + Style style = ActorSDK . sharedActor ( ) . style ; 
 + style . toolBarColor = getResources ( ) . getColor ( R . color . accent ) ; 
 + style . fabColor = getResources ( ) . getColor ( R . color . accent ) ; 
 + style . fabColorPressed = getResources ( ) . getColor ( R . color . accent _ pressed ) ; 
 + 
 + 
 } 
 
 private class ActorSDKDelegate extends BaseActorSDKDelegate { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 674fae4 . . f7a3f92 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 32 , 29 + 32 , 33 @ @ public class ActorSDK { 
 
 
 private static volatile ActorSDK sdk = new ActorSDK ( ) ; 
 - / * * 
 - * Application Context 
 - * / 
 - private Application application ; 
 + / / 
 + / / Style 
 + / / 
 + public Style style = new Style ( ) ; 
 
 
 / / 
 / / SDK Objects 
 / / 
 / * * 
 - * Actor Messenger instance 
 + * Application Context 
 * / 
 - private AndroidMessenger messenger ; 
 + private Application application ; 
 / * * 
 - * Server Endpoints 
 + * Actor Messenger instance 
 * / 
 - private List < String > endpoints = new ArrayList < String > ( ) ; 
 + private AndroidMessenger messenger ; 
 
 
 / / 
 / / SDK Config 
 / / 
 / * * 
 + * Server Endpoints 
 + * / 
 + private List < String > endpoints = new ArrayList < String > ( ) ; 
 + / * * 
 * API App Id 
 * / 
 private int apiAppId = 1 ; 
 @ @ - 66 , 7 + 70 , 6 @ @ public class ActorSDK { 
 * Push Registration Id 
 * / 
 private long pushId = 0 ; 
 - 
 / * * 
 * Is Keeping app alive enabled 
 * / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / Style . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / Style . java 
 new file mode 100644 
 index 0000000 . . 608678d 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / Style . java 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + package im . actor . sdk ; 
 + 
 + public class Style { 
 + public int toolBarColor = 0 ; 
 + public int fabColor = 0 ; 
 + public int fabColorPressed = 0 ; 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 index 1a5ddd1 . . 4da1359 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseActivity . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package im . actor . sdk . controllers . activity ; 
 
 import android . app . ProgressDialog ; 
 + import android . graphics . drawable . ColorDrawable ; 
 import android . os . Bundle ; 
 import android . support . v7 . app . ActionBar ; 
 import android . support . v7 . app . AppCompatActivity ; 
 @ @ - 12 , 6 + 13 , 7 @ @ import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 + import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . fragment . ActorBinder ; 
 import im . actor . sdk . view . avatar . AvatarView ; 
 @ @ - 31 , 6 + 33 , 10 @ @ public class BaseActivity extends AppCompatActivity { 
 super . onCreate ( savedInstanceState ) ; 
 onCreateToolbar ( ) ; 
 notifyOnResume ( ) ; 
 + 
 + if ( getSupportActionBar ( ) ! = null & & ActorSDK . sharedActor ( ) . style . toolBarColor ! = 0 ) { 
 + getSupportActionBar ( ) . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . toolBarColor ) ) ; 
 + } 
 } 
 
 protected void onCreateToolbar ( ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java 
 index 081a3ef . . b86af95 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / BaseFragmentActivity . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import android . support . v4 . app . Fragment ; 
 import android . support . v4 . app . FragmentTransaction ; 
 import android . view . MenuItem ; 
 
 + import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 
 / * * 
 @ @ - 21 , 6 + 22 , 11 @ @ public class BaseFragmentActivity extends BaseActivity { 
 getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; 
 getSupportActionBar ( ) . setDisplayShowTitleEnabled ( true ) ; 
 getSupportActionBar ( ) . setDisplayShowCustomEnabled ( false ) ; 
 + 
 + if ( ActorSDK . sharedActor ( ) . style . toolBarColor ! = 0 ) { 
 + getSupportActionBar ( ) . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . toolBarColor ) ) ; 
 + } 
 + 
 setContentView ( R . layout . activity _ base _ fragment ) ; 
 getWindow ( ) . setBackgroundDrawable ( new ColorDrawable ( Color . TRANSPARENT ) ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 index 14012c8 . . e61f85b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . sdk . controllers . activity . controllers ; 
 
 import android . content . Context ; 
 import android . content . Intent ; 
 + import android . graphics . drawable . ColorDrawable ; 
 import android . net . Uri ; 
 import android . os . Bundle ; 
 import android . support . v4 . app . Fragment ; 
 @ @ - 20 , 10 + 21 , 14 @ @ import android . view . ViewGroup ; 
 import android . widget . FrameLayout ; 
 import android . widget . TextView ; 
 
 + import com . getbase . floatingactionbutton . FloatingActionButton ; 
 + 
 import java . util . ArrayList ; 
 
 import im . actor . core . entity . Dialog ; 
 import im . actor . core . entity . SearchEntity ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . Style ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . runtime . generic . mvvm . DisplayList ; 
 @ @ - 62 , 15 + 67 , 14 @ @ public class MainPhoneController extends MainBaseController { 
 private View searchHintView ; 
 
 private boolean isSearchVisible = false ; 
 + private SearchAdapter searchAdapter ; 
 + private BindedDisplayList < SearchEntity > searchDisplay ; 
 private final DisplayList . Listener searchListener = new DisplayList . Listener ( ) { 
 @ Override 
 public void onCollectionChanged ( ) { 
 onSearchChanged ( ) ; 
 } 
 } ; 
 - private SearchAdapter searchAdapter ; 
 - private BindedDisplayList < SearchEntity > searchDisplay ; 
 - 
 private SearchView searchView ; 
 private MenuItem searchMenu ; 
 
 @ @ - 80 , 7 + 84 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 private View emptyContactsView ; 
 
 private View fabContent ; 
 - private View fabRoot ; 
 + private com . getbase . floatingactionbutton . FloatingActionButton fabRoot ; 
 
 private boolean isFabVisible = false ; 
 
 @ @ - 168 , 8 + 172 , 13 @ @ public class MainPhoneController extends MainBaseController { 
 isFabVisible = false ; 
 
 fabContent = findViewById ( R . id . fabContainer ) ; 
 - fabRoot = findViewById ( R . id . rootFab ) ; 
 - 
 + fabRoot = ( FloatingActionButton ) findViewById ( R . id . rootFab ) ; 
 + if ( ActorSDK . sharedActor ( ) . style . fabColor ! = 0 ) { 
 + fabRoot . setColorNormal ( ActorSDK . sharedActor ( ) . style . fabColor ) ; 
 + } 
 + if ( ActorSDK . sharedActor ( ) . style . fabColorPressed ! = 0 ) { 
 + fabRoot . setColorPressed ( ActorSDK . sharedActor ( ) . style . fabColorPressed ) ; 
 + } 
 fabRoot . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 @ @ - 229 , 7 + 238 , 16 @ @ public class MainPhoneController extends MainBaseController { 
 } 
 } ) ; 
 
 - findViewById ( R . id . composeContainer ) . setOnClickListener ( new View . OnClickListener ( ) { 
 + Style style = ActorSDK . sharedActor ( ) . style ; 
 + 
 + com . getbase . floatingactionbutton . FloatingActionButton fabCompose = ( FloatingActionButton ) findViewById ( R . id . composeContainer ) ; 
 + if ( style . fabColor ! = 0 ) { 
 + fabCompose . setColorNormal ( style . fabColor ) ; 
 + } 
 + if ( style . fabColorPressed ! = 0 ) { 
 + fabCompose . setColorPressed ( style . fabColorPressed ) ; 
 + } 
 + fabCompose . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 goneFab ( ) ; 
 @ @ - 237 , 7 + 255 , 14 @ @ public class MainPhoneController extends MainBaseController { 
 } 
 } ) ; 
 
 - findViewById ( R . id . createGroupContainer ) . setOnClickListener ( new View . OnClickListener ( ) { 
 + com . getbase . floatingactionbutton . FloatingActionButton fabCreateGroup = ( FloatingActionButton ) findViewById ( R . id . createGroupContainer ) ; 
 + if ( style . fabColor ! = 0 ) { 
 + fabCreateGroup . setColorNormal ( style . fabColor ) ; 
 + } 
 + if ( style . fabColorPressed ! = 0 ) { 
 + fabCreateGroup . setColorPressed ( style . fabColorPressed ) ; 
 + } 
 + fabCreateGroup . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 goneFab ( ) ; 
 @ @ - 245 , 7 + 270 , 14 @ @ public class MainPhoneController extends MainBaseController { 
 } 
 } ) ; 
 
 - findViewById ( R . id . addContactContainer ) . setOnClickListener ( new View . OnClickListener ( ) { 
 + com . getbase . floatingactionbutton . FloatingActionButton fabAddContact = ( FloatingActionButton ) findViewById ( R . id . addContactContainer ) ; 
 + if ( style . fabColor ! = 0 ) { 
 + fabAddContact . setColorNormal ( style . fabColor ) ; 
 + } 
 + if ( style . fabColorPressed ! = 0 ) { 
 + fabAddContact . setColorPressed ( style . fabColorPressed ) ; 
 + } 
 + fabAddContact . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 goneFab ( ) ; 
 @ @ - 253 , 6 + 285 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 } 
 } ) ; 
 
 + 
 findViewById ( R . id . addContactButton ) . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 @ @ - 280 , 13 + 313 , 17 @ @ public class MainPhoneController extends MainBaseController { 
 ab . setDisplayShowHomeEnabled ( false ) ; 
 ab . setDisplayShowTitleEnabled ( false ) ; 
 
 + if ( ActorSDK . sharedActor ( ) . style . toolBarColor ! = 0 ) { 
 + ab . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . toolBarColor ) ) ; 
 + } 
 + 
 FrameLayout tabsContainer = new FrameLayout ( getActivity ( ) ) ; 
 barTabs = new PagerSlidingTabStrip ( getActivity ( ) ) ; 
 barTabs . setTabBackground ( R . drawable . selector _ bar ) ; 
 / / barTabs . setIndicatorColorResource ( R . color . main _ tab _ selected ) ; 
 barTabs . setIndicatorHeight ( Screen . dp ( 2 ) ) ; 
 
 - barTabs . setDividerColorResource ( R . color . primary ) ; 
 + barTabs . setDividerColorResource ( android . R . color . transparent ) ; 
 / / barTabs . setTextColorResource ( R . color . main _ tab _ text ) ; 
 barTabs . setTextSize ( Screen . dp ( 14 ) ) ; 
 barTabs . setUnderlineHeight ( 0 ) ;
