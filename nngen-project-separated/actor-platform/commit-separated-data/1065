BLEU SCORE: 0.027611988917697356

TEST MSG: wip ( js ) : New lists binding
GENERATED MSG: Chinese Translation

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java < nl > new file mode 100644 < nl > index 0000000 . . 9fd777b < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java < nl > @ @ - 0 , 0 + 1 , 348 @ @ < nl > + package im . actor . runtime . js . mvvm ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + < nl > + import java . util . ArrayList ; < nl > + import java . util . List ; < nl > + < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . bser . BserObject ; < nl > + import im . actor . runtime . js . storage . JsListEngine ; < nl > + import im . actor . runtime . js . storage . JsListEngineCallback ; < nl > + import im . actor . runtime . js . utils . JsModernArray ; < nl > + import im . actor . runtime . storage . ListEngineItem ; < nl > + < nl > + public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject & ListEngineItem > implements JsListEngineCallback < V > { < nl > + < nl > + / * * < nl > + * Underlying list engine < nl > + * / < nl > + private final JsListEngine < V > listEngine ; < nl > + / * * < nl > + * Underlying entity converted < nl > + * / < nl > + private final JsEntityConverter < V , T > entityConverter ; < nl > + / * * < nl > + * Convenience flag if overlays supported by entity converter < nl > + * / < nl > + private final boolean isOverlaysSupported ; < nl > + < nl > + < nl > + / * * < nl > + * Subscribers to bind < nl > + * / < nl > + private final JsDisplayListCallback < T > callback ; < nl > + < nl > + < nl > + / * * < nl > + * Current list values < nl > + * / < nl > + private ArrayList < V > values ; < nl > + / * * < nl > + * Current converted values < nl > + * / < nl > + private JsModernArray < T > jsValues ; < nl > + / * * < nl > + * Current overlay values ( if supported ) < nl > + * / < nl > + private JsModernArray < JavaScriptObject > jsOverlays ; < nl > + / * * < nl > + * Current dirty overlay items < nl > + * / < nl > + private ArrayList < Boolean > isOverlayDirty ; < nl > + < nl > + / * * < nl > + * If all messages loaded from top of the list < nl > + * / < nl > + private boolean isOpenTop ; < nl > + / * * < nl > + * If all messages loaded from bottom of the list < nl > + * / < nl > + private boolean isOpenBottom ; < nl > + < nl > + / * * < nl > + * If list is inited and ready to receive list updates < nl > + * / < nl > + private boolean isInited ; < nl > + < nl > + / * * < nl > + * If ForceReconvert required flag < nl > + * / < nl > + private boolean isForceReconverted = false ; < nl > + < nl > + public JsDisplayListBind ( JsDisplayListCallback < T > callback , JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { < nl > + < nl > + this . callback = callback ; < nl > + this . listEngine = listEngine ; < nl > + this . entityConverter = entityConverter ; < nl > + this . isOverlaysSupported = entityConverter . isSupportOverlays ( ) ; < nl > + < nl > + this . values = new ArrayList < > ( ) ; < nl > + this . jsValues = JsModernArray . createArray ( ) . cast ( ) ; < nl > + if ( isOverlaysSupported ) { < nl > + this . isOverlayDirty = new ArrayList < > ( ) ; < nl > + this . jsOverlays = JsModernArray . createArray ( ) . cast ( ) ; < nl > + } < nl > + < nl > + isInited = false ; < nl > + < nl > + listEngine . addListener ( this ) ; < nl > + } < nl > + < nl > + public ArrayList < V > getRawItems ( ) { < nl > + return values ; < nl > + } < nl > + < nl > + private void clearState ( ) { < nl > + values . clear ( ) ; < nl > + jsValues . clear ( ) ; < nl > + jsOverlays . clear ( ) ; < nl > + isOverlayDirty . clear ( ) ; < nl > + } < nl > + < nl > + public void initAll ( ) { < nl > + clearState ( ) ; < nl > + < nl > + long [ ] rids = listEngine . getOrderedIds ( ) ; < nl > + for ( long rid : rids ) { < nl > + V item = listEngine . getValue ( rid ) ; < nl > + if ( item = = null ) { < nl > + Log . w ( " JsDisplayList " , " Unable to find item # " + rid ) ; < nl > + continue ; < nl > + } < nl > + values . add ( item ) ; < nl > + jsValues . push ( entityConverter . convert ( item ) ) ; < nl > + < nl > + if ( isOverlaysSupported ) { < nl > + jsOverlays . push ( null ) ; < nl > + isOverlayDirty . add ( true ) ; < nl > + } < nl > + } < nl > + < nl > + processDirtyOverlays ( ) ; < nl > + < nl > + isInited = true ; < nl > + isOpenBottom = true ; < nl > + isOpenTop = true ; < nl > + } < nl > + < nl > + public void notifySubscriber ( ) { < nl > + if ( isOverlaysSupported ) { < nl > + callback . onCollectionChanged ( jsValues , jsOverlays ) ; < nl > + } else { < nl > + callback . onCollectionChanged ( jsValues , null ) ; < nl > + } < nl > + } < nl > + < nl > + private void addItemOrUpdateImpl ( V item ) { < nl > + long id = item . getEngineId ( ) ; < nl > + long sortKey = item . getEngineSort ( ) ; < nl > + for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > + if ( values . get ( i ) . getEngineId ( ) = = id ) { < nl > + values . remove ( i ) ; < nl > + jsValues . remove ( i ) ; < nl > + if ( isOverlaysSupported ) { < nl > + markAsDirty ( i ) ; < nl > + jsOverlays . remove ( i ) ; < nl > + isOverlayDirty . remove ( i ) ; < nl > + } < nl > + break ; < nl > + } < nl > + } < nl > + < nl > + for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > + if ( sortKey > values . get ( i ) . getEngineSort ( ) ) { < nl > + values . add ( i , item ) ; < nl > + jsValues . insert ( i , entityConverter . convert ( item ) ) ; < nl > + if ( isOverlaysSupported ) { < nl > + jsOverlays . insert ( i , null ) ; < nl > + isOverlayDirty . add ( i , true ) ; < nl > + markAsDirty ( i ) ; < nl > + } < nl > + return ; < nl > + } < nl > + } < nl > + < nl > + values . add ( item ) ; < nl > + jsValues . push ( entityConverter . convert ( item ) ) ; < nl > + if ( isOverlaysSupported ) { < nl > + jsOverlays . push ( null ) ; < nl > + isOverlayDirty . add ( true ) ; < nl > + markAsDirty ( values . size ( ) - 1 ) ; < nl > + } < nl > + } < nl > + < nl > + private void remoteItemImpl ( long id ) { < nl > + for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > + if ( values . get ( i ) . getEngineId ( ) = = id ) { < nl > + values . remove ( i ) ; < nl > + jsValues . remove ( i ) ; < nl > + if ( isOverlaysSupported ) { < nl > + markAsDirty ( i ) ; < nl > + jsOverlays . remove ( i ) ; < nl > + isOverlayDirty . add ( true ) ; < nl > + } < nl > + break ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + / * < nl > + * List Engine Updates < nl > + * / < nl > + < nl > + @ Override < nl > + public void onItemAddedOrUpdated ( V item ) { < nl > + if ( ! isInited ) { < nl > + return ; < nl > + } < nl > + < nl > + addItemOrUpdateImpl ( item ) ; < nl > + processDirtyOverlays ( ) ; < nl > + notifySubscriber ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onItemsAddedOrUpdated ( List < V > items ) { < nl > + if ( ! isInited ) { < nl > + return ; < nl > + } < nl > + < nl > + for ( V item : items ) { < nl > + addItemOrUpdateImpl ( item ) ; < nl > + } < nl > + processDirtyOverlays ( ) ; < nl > + notifySubscriber ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onItemRemoved ( long id ) { < nl > + if ( ! isInited ) { < nl > + return ; < nl > + } < nl > + remoteItemImpl ( id ) ; < nl > + processDirtyOverlays ( ) ; < nl > + notifySubscriber ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onItemsRemoved ( long [ ] ids ) { < nl > + if ( ! isInited ) { < nl > + return ; < nl > + } < nl > + for ( long id : ids ) { < nl > + remoteItemImpl ( id ) ; < nl > + } < nl > + processDirtyOverlays ( ) ; < nl > + notifySubscriber ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onItemsReplaced ( List < V > items ) { < nl > + if ( ! isInited ) { < nl > + return ; < nl > + } < nl > + < nl > + values . clear ( ) ; < nl > + jsValues . clear ( ) ; < nl > + if ( isOverlaysSupported ) { < nl > + jsOverlays . clear ( ) ; < nl > + isOverlayDirty . clear ( ) ; < nl > + } < nl > + onItemsAddedOrUpdated ( items ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClear ( ) { < nl > + if ( ! isInited ) { < nl > + return ; < nl > + } < nl > + < nl > + values . clear ( ) ; < nl > + jsValues . clear ( ) ; < nl > + if ( isOverlaysSupported ) { < nl > + jsOverlays . clear ( ) ; < nl > + isOverlayDirty . clear ( ) ; < nl > + } < nl > + < nl > + notifySubscriber ( ) ; < nl > + } < nl > + < nl > + / / < nl > + / / Reconverting < nl > + / / < nl > + < nl > + public void startReconverting ( ) { < nl > + isForceReconverted = false ; < nl > + } < nl > + < nl > + public void forceReconvert ( long id ) { < nl > + for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > + V value = values . get ( i ) ; < nl > + if ( value . getEngineId ( ) = = id ) { < nl > + jsValues . update ( i , entityConverter . convert ( value ) ) ; < nl > + / / Do not update overlays as this is method is a hack for binding < nl > + isForceReconverted = true ; < nl > + break ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + public void stopReconverting ( ) { < nl > + if ( isForceReconverted ) { < nl > + isForceReconverted = false ; < nl > + notifySubscriber ( ) ; < nl > + } < nl > + } < nl > + < nl > + / * < nl > + * Overlay support methods < nl > + * / < nl > + < nl > + private boolean isDirty ( int index ) { < nl > + return isOverlayDirty . get ( index ) ; < nl > + } < nl > + < nl > + private void markAsDirty ( int index ) { < nl > + isOverlayDirty . set ( index , true ) ; < nl > + if ( index - 1 > = 0 ) { < nl > + isOverlayDirty . set ( index - 1 , true ) ; < nl > + } < nl > + < nl > + if ( index + 1 < isOverlayDirty . size ( ) ) { < nl > + isOverlayDirty . set ( index + 1 , true ) ; < nl > + } < nl > + } < nl > + < nl > + private void markAsClean ( int index ) { < nl > + isOverlayDirty . set ( index , false ) ; < nl > + } < nl > + < nl > + private boolean processDirtyOverlays ( ) { < nl > + if ( ! isOverlaysSupported ) { < nl > + return false ; < nl > + } < nl > + boolean isChanged = false ; < nl > + for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > + if ( ! isDirty ( i ) ) { < nl > + continue ; < nl > + } < nl > + < nl > + V prev = null ; < nl > + V current = values . get ( i ) ; < nl > + V next = null ; < nl > + < nl > + if ( i - 1 > = 0 ) { < nl > + prev = values . get ( i - 1 ) ; < nl > + } < nl > + if ( i + 1 < values . size ( ) ) { < nl > + next = values . get ( i + 1 ) ; < nl > + } < nl > + < nl > + jsOverlays . update ( i , entityConverter . buildOverlay ( prev , current , next ) ) ; < nl > + markAsClean ( i ) ; < nl > + isChanged = true ; < nl > + } < nl > + return isChanged ; < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java < nl > index 06935e0 . . c83b17d 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java < nl > @ @ - 186 , 6 + 186 , 34 @ @ public class JsListStorage implements ListStorage { < nl > return res ; < nl > } < nl > < nl > + public long [ ] getPrevIdsInclusive ( long sortKey ) { < nl > + ArrayList < Long > res = new ArrayList < Long > ( ) ; < nl > + for ( Index i : index ) { < nl > + if ( i . getSortKey ( ) < = sortKey ) { < nl > + res . add ( i . getId ( ) ) ; < nl > + } < nl > + } < nl > + long [ ] res2 = new long [ res . size ( ) ] ; < nl > + for ( int i = 0 ; i < res2 . length ; i + + ) { < nl > + res2 [ i ] = res . get ( i ) ; < nl > + } < nl > + return res2 ; < nl > + } < nl > + < nl > + public long [ ] getPrevIdsExclusive ( long sortKey ) { < nl > + ArrayList < Long > res = new ArrayList < Long > ( ) ; < nl > + for ( Index i : index ) { < nl > + if ( i . getSortKey ( ) < sortKey ) { < nl > + res . add ( i . getId ( ) ) ; < nl > + } < nl > + } < nl > + long [ ] res2 = new long [ res . size ( ) ] ; < nl > + for ( int i = 0 ; i < res2 . length ; i + + ) { < nl > + res2 [ i ] = res . get ( i ) ; < nl > + } < nl > + return res2 ; < nl > + } < nl > + < nl > private String getId ( long id ) { < nl > return " list _ " + prefix + " _ " + id ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - apps / app - ios / Actor / Resources / Localization / zh - Hans . lproj / Localizable . strings b / actor - apps / app - ios / Actor / Resources / Localization / zh - Hans . lproj / Localizable . strings < nl > new file mode 100644 < nl > index 0000000 . . ba78065 < nl > - - - / dev / null < nl > + + + b / actor - apps / app - ios / Actor / Resources / Localization / zh - Hans . lproj / Localizable . strings < nl > @ @ - 0 , 0 + 1 , 344 @ @ < nl > + / * < nl > + Copyright ( c ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + / * < nl > + * Main Screen < nl > + * / < nl > + < nl > + " TabMessages " = " 消 息 " ; < nl > + < nl > + " TabPeople " = " 联 系 人 " ; < nl > + < nl > + " TabSettings " = " 设 置 " ; < nl > + < nl > + " TabDiscover " = " 发 现 " ; < nl > + < nl > + / * < nl > + * Contacts < nl > + * / < nl > + < nl > + " ContactsAddHeader " = " 添 加 联 系 人 " ; < nl > + < nl > + " ContactsAddHint " = " 请 输 入 电 话 号 码 " ; < nl > + < nl > + " ContactsActionInvite " = " 把 Actor 告 诉 朋 友 " ; < nl > + < nl > + " ContactsActionAdd " = " 添 加 朋 友 " ; < nl > + < nl > + / * < nl > + * Dialogs < nl > + * / < nl > + < nl > + " DialogsHint " = " 向 左 滑 动 查 看 更 多 选 项 " ; < nl > + < nl > + / * < nl > + * Discover < nl > + * / < nl > + < nl > + / * < nl > + * Settings < nl > + * / < nl > + < nl > + " SettingsEdit " = " 编 辑 " ; < nl > + < nl > + " SettingsSetPhoto " = " 设 置 头 像 " ; < nl > + < nl > + " SettingsChangeName " = " 修 改 名 字 " ; < nl > + < nl > + " SettingsSecurity " = " 隐 私 和 安 全 " ; < nl > + < nl > + " SettingsEditHeader " = " 修 改 名 字 " ; < nl > + < nl > + " SettingsNotifications " = " 通 知 和 声 音 " ; < nl > + < nl > + " SettingsAskQuestion " = " 提 问 " ; < nl > + < nl > + " SettingsAbout " = " 关 于 " ; < nl > + < nl > + / * < nl > + * Profile < nl > + * / < nl > + < nl > + " ProfileEditHeader " = " 修 改 名 字 " ; < nl > + < nl > + " ProfileSendMessage " = " 发 送 消 息 " ; < nl > + < nl > + " ProfileNotifications " = " 通 知 " ; < nl > + < nl > + " ProfileNotificationsWarring " = " 你 要 屏 蔽 针 对 这 个 人 的 推 送 提 醒 消 息 吗 ？ 这 样 可 能 会 引 起 你 和 他 （ 她 ） 的 关 系 哦 。 " ; < nl > + < nl > + " ProfileNotificationsWarringAction " = " 屏 蔽 " ; < nl > + < nl > + " ProfileAddToContacts " = " 添 加 到 通 讯 录 " ; < nl > + < nl > + " ProfileRemoveFromContacts " = " 从 通 讯 录 中 删 除 " ; < nl > + < nl > + " ProfileRename " = " 修 改 联 系 名 " ; < nl > + < nl > + " ProfileRenameMessage " = " 你 可 以 修 改 通 讯 录 中 的 联 系 人 名 称 ， 此 修 改 只 体 现 在 你 的 通 讯 录 中 。 " ; < nl > + < nl > + " ProfileRenameAction " = " 改 名 " ; < nl > + < nl > + " CallNumber " = " 拨 打 这 个 电 话 " ; < nl > + < nl > + " CopyNumber " = " 复 制 电 话 号 码 " ; < nl > + < nl > + " NumberCopied " = " 电 话 号 码 已 经 复 制 到 剪 贴 板 中 " ; < nl > + < nl > + / * < nl > + * Publics < nl > + * / < nl > + < nl > + " JoinAlertMessage " = " 你 要 加 入 这 个 群 吗 ？ " ; < nl > + < nl > + / * < nl > + * Group < nl > + * / < nl > + < nl > + " GroupEditHeader " = " 修 改 群 模 版 " ; < nl > + < nl > + " GroupSetPhoto " = " 设 置 群 头 像 " ; < nl > + < nl > + " GroupSetTitle " = " 设 置 群 标 题 " ; < nl > + < nl > + " GroupEditConfirm " = " 确 定 要 修 改 群 标 题 ？ " ; < nl > + < nl > + " GroupEditConfirmAction " = " 修 改 模 版 " ; < nl > + < nl > + " GroupNotifications " = " 通 知 " ; < nl > + < nl > + " GroupSettings " = " 设 置 " ; < nl > + < nl > + " GroupIntegrations " = " 集 成 " ; < nl > + < nl > + " GroupMembers " = " { 0 } 个 成 员 " ; < nl > + < nl > + " GroupMemberInfo " = " 成 员 信 息 " ; < nl > + < nl > + " GroupMemberKick " = " 移 出 群 " ; < nl > + < nl > + " GroupMemberKickMessage " = " 确 定 要 把 { name } 移 出 群 吗 ？ " ; < nl > + < nl > + " GroupMemberKickAction " = " 移 出 " ; < nl > + < nl > + " GroupMemberWrite " = " 编 辑 消 息 " ; < nl > + < nl > + " GroupMemberCall " = " 打 电 话 " ; < nl > + < nl > + " GroupMemberCallNoPhones " = " 此 用 户 没 有 电 话 号 码 。 " ; < nl > + < nl > + " GroupAddParticipant " = " 添 加 参 与 者 . . . " ; < nl > + < nl > + " GroupAddParticipantTitle " = " 通 讯 录 " ; < nl > + < nl > + " GroupAddParticipantUrl " = " 通 过 URL 链 接 邀 请 加 入 群 " ; < nl > + < nl > + " GroupLeave " = " 退 出 群 " ; < nl > + < nl > + " GroupLeaveConfirm " = " 你 确 定 要 退 出 群 吗 ？ " ; < nl > + < nl > + " GroupLeaveConfirmAction " = " 退 出 " ; < nl > + < nl > + " GroupInviteLinkPageTitle " = " 邀 请 链 接 " ; < nl > + < nl > + " GroupInviteLinkTitle " = " 链 接 " ; < nl > + < nl > + " GroupInviteLinkHint " = " 发 送 邀 请 链 接 即 可 邀 请 你 的 朋 友 加 入 此 群 。 " ; < nl > + < nl > + " GroupInviteLinkRevokeMessage " = " 确 定 要 废 除 这 个 链 接 ， 废 除 后 其 他 人 将 无 法 使 用 这 个 链 接 加 入 群 。 " ; < nl > + < nl > + " GroupInviteLinkRevokeAction " = " 废 除 " ; < nl > + < nl > + " GroupIntegrationPageTitle " = " 集 成 API " ; < nl > + < nl > + " GroupIntegrationLinkTitle " = " 链 接 " ; < nl > + < nl > + " GroupIntegrationLinkHint " = " 任 何 外 部 系 统 都 可 以 利 用 这 个 链 接 向 群 发 送 消 息 。 " ; < nl > + < nl > + " GroupIntegrationDoc " = " 打 开 文 档 " ; < nl > + < nl > + " GroupIntegrationLinkRevokeMessage " = " 确 定 要 废 除 这 个 链 接 ， 废 除 后 其 他 系 统 将 无 法 使 用 这 个 链 接 发 送 消 息 。 " ; < nl > + < nl > + " GroupIntegrationLinkRevokeAction " = " 废 除 " ; < nl > + < nl > + < nl > + / * < nl > + * Compose < nl > + * / < nl > + < nl > + " ComposeTitle " = " 新 消 息 " ; < nl > + < nl > + " CreateGroup " = " 创 建 群 " ; < nl > + < nl > + " CreateGroupTitle " = " 创 建 群 " ; < nl > + < nl > + " CreateGroupNamePlaceholder " = " 输 入 群 名 称 " ; < nl > + < nl > + / * < nl > + * Notifications < nl > + * / < nl > + < nl > + " NotificationsTitle " = " 通 知 和 声 音 " ; < nl > + < nl > + " NotificationsEffectsTitle " = " 效 果 " ; < nl > + < nl > + " NotificationsMobileTitle " = " 手 机 推 送 通 知 " ; < nl > + < nl > + " NotificationsInAppTitle " = " In - App 通 知 " ; < nl > + < nl > + " NotificationsNotificationHint " = " 在 好 友 或 群 的 信 息 页 面 ， 可 以 屏 蔽 指 定 好 友 或 群 的 推 送 通 知 。 " ; < nl > + < nl > + " NotificationsPrivacyTitle " = " 隐 私 " ; < nl > + < nl > + " NotificationsSoundEffects " = " 声 音 效 果 " ; < nl > + < nl > + " NotificationsEnable " = " 打 开 " ; < nl > + < nl > + " NotificationsSound " = " 声 音 " ; < nl > + < nl > + " NotificationsVibration " = " 震 动 " ; < nl > + < nl > + " NotificationsPreview " = " 消 息 预 览 " ; < nl > + < nl > + " NotificationsPreviewHint " = " 在 通 知 中 不 显 示 消 息 文 本 。 " ; < nl > + < nl > + " NotificationSecretMessage " = " 新 消 息 " ; < nl > + < nl > + / * < nl > + * Privacy < nl > + * / < nl > + < nl > + " PrivacyTitle " = " 隐 私 和 安 全 " ; < nl > + < nl > + " PrivacyTerminate " = " 终 止 所 有 回 话 " ; < nl > + < nl > + " PrivacyTerminateHint " = " 退 出 除 此 设 备 之 外 的 所 有 设 备 。 " ; < nl > + < nl > + / * < nl > + * Chat < nl > + * / < nl > + < nl > + " ChatPlaceholder " = " 输 入 消 息 . . . " ; < nl > + < nl > + " ChatSend " = " 发 送 " ; < nl > + < nl > + " ChatNoGroupAccess " = " 你 不 是 群 成 员 " ; < nl > + < nl > + / * < nl > + * Placeholders < nl > + * / < nl > + < nl > + " Placeholder _ Empty _ Title " = " 邀 请 你 的 朋 友 " ; < nl > + < nl > + " Placeholder _ Empty _ Message " = " 你 的 通 讯 录 中 没 有 人 使 用 Actor ， 请 点 击 下 面 按 钮 邀 请 他 们 。 " ; < nl > + < nl > + " Placeholder _ Empty _ Action " = " 告 诉 你 的 朋 友 " ; < nl > + < nl > + " Placeholder _ Empty _ Message2 " = " 或 者 手 动 添 加 好 友 " ; < nl > + < nl > + " Placeholder _ Empty _ Action2 " = " 添 加 好 友 " ; < nl > + < nl > + " Placeholder _ Loading _ Title " = " 正 在 同 步 中 " ; < nl > + < nl > + " Placeholder _ Loading _ Message " = " 请 等 待 几 分 钟 ， 以 便 我 们 让 你 的 app 好 用 。 " ; < nl > + < nl > + " Placeholder _ Contacts _ Title " = " 邀 请 好 友 " ; < nl > + < nl > + " Placeholder _ Contacts _ Message " = " 你 的 通 讯 录 中 没 有 人 使 用 Actor ， 请 点 击 下 面 按 钮 邀 请 他 们 。 " ; < nl > + < nl > + " Placeholder _ Contacts _ Action " = " 告 诉 好 友 " ; < nl > + < nl > + " Placeholder _ Contacts _ Message2 " = " 或 者 点 击 右 上 角 的 ＋ 按 钮 手 动 添 加 好 友 " ; < nl > + < nl > + " Placeholder _ Dialogs _ Title " = " 开 始 聊 天 " ; < nl > + < nl > + " Placeholder _ Dialogs _ Message " = " 从 你 的 通 讯 录 中 选 择 一 个 好 友 ， 或 者 点 击 右 上 角 的 编 辑 按 钮 立 刻 开 始 聊 天 " ; < nl > + < nl > + " Placeholder _ Group _ Title " = " 不 是 一 个 群 成 员 " ; < nl > + < nl > + " Placeholder _ Group _ Message " = " 非 常 不 幸 ， 您 不 是 群 成 员 。 " ; < nl > + < nl > + / * < nl > + * Auth < nl > + * / < nl > + < nl > + " AuthPhoneTitle " = " 你 的 电 话 " ; < nl > + < nl > + " AuthPhoneNumberHint " = " 你 的 电 话 号 码 " ; < nl > + < nl > + " AuthPhoneHint " = " 请 选 择 你 的 国 家 并 输 入 你 的 电 话 号 码 。 " ; < nl > + < nl > + " AuthPhoneTooShort " = " 电 话 号 码 太 短 " ; < nl > + < nl > + " AuthCodeFieldHint " = " 验 证 码 " ; < nl > + < nl > + " AuthCodeHint " = " 已 经 通 过 短 信 为 你 发 送 验 证 码 ， 请 稍 侯 。 " ; < nl > + < nl > + " AuthProfileTitle " = " 你 的 信 息 " ; < nl > + < nl > + " AuthProfileAddPhoto1 " = " 添 加 " ; < nl > + < nl > + " AuthProfileAddPhoto2 " = " 头 像 " ; < nl > + < nl > + " AuthProfileNameHint " = " 你 的 名 字 " ; < nl > + < nl > + " AuthProfileHint " = " 请 输 入 你 的 名 字 并 上 传 头 像 " ; < nl > + < nl > + / * < nl > + * Common Elements < nl > + * / < nl > + < nl > + " CurrentLocale " = " Cn " ; < nl > + < nl > + " InviteText " = " 您 好 ！ 让 我 们 一 起 使 用 Actor 安 全 开 聊 吧 ! https : / / actor . im / dl " ; < nl > + < nl > + " PhotoRemove " = " 删 除 头 像 " ; < nl > + < nl > + " PhotoRemoveGroupMessage " = " 确 定 要 删 除 群 头 像 吗 ？ 删 除 后 很 多 群 成 员 会 很 失 望 哦 。 " ; < nl > + < nl > + " PhotoCamera " = " 拍 照 " ; < nl > + < nl > + " PhotoLibrary " = " 相 册 " ; < nl > + < nl > + " SendDocument " = " 文 档 " ; < nl > + < nl > + " NavigationEdit " = " 编 辑 " ; < nl > + < nl > + " NavigationDone " = " 完 成 " ; < nl > + < nl > + " NavigationCancel " = " 取 消 " ; < nl > + < nl > + " NavigationBack " = " " ; < nl > + < nl > + " NavigationNext " = " 下 一 步 " ; < nl > + < nl > + " AlertCancel " = " 取 消 " ; < nl > + < nl > + " AlertNext " = " 下 一 步 " ; < nl > + < nl > + " AlertSave " = " 保 存 " ; < nl > + < nl > + " AlertOk " = " 确 定 " ; < nl > + < nl > + " AlertYes " = " 是 " ; < nl > + < nl > + " AlertNo " = " 否 " ; < nl > + < nl > + " UnsupportedContent " = " 这 个 版 本 不 支 持 此 消 息 。 请 等 待 应 用 升 级 ， 之 后 就 可 以 看 到 消 息 了 。 " ; < nl > + < nl > + " ActionCopyLink " = " 复 制 链 接 " ; < nl > + < nl > + " ActionRevokeLink " = " 废 除 链 接 " ; < nl > + < nl > + " ActionShareLink " = " 分 享 链 接 " ; < nl > + < nl > + " AlertLinkCopied " = " 链 接 已 经 被 复 制 到 剪 贴 板 。 " ; < nl > + < nl > + / * < nl > + * Errors < nl > + * / < nl > + < nl > + " ErrorPhoneIncorrect " = " 输 入 被 邀 请 人 的 电 话 号 码 ， 再 试 一 次 。 " ; < nl > + < nl > + " ErrorCodeExpired " = " 验 证 码 过 期 。 请 重 新 验 证 一 次 。 " ; < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java 
 new file mode 100644 
 index 0000000 . . 9fd777b 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java 
 @ @ - 0 , 0 + 1 , 348 @ @ 
 + package im . actor . runtime . js . mvvm ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . bser . BserObject ; 
 + import im . actor . runtime . js . storage . JsListEngine ; 
 + import im . actor . runtime . js . storage . JsListEngineCallback ; 
 + import im . actor . runtime . js . utils . JsModernArray ; 
 + import im . actor . runtime . storage . ListEngineItem ; 
 + 
 + public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject & ListEngineItem > implements JsListEngineCallback < V > { 
 + 
 + / * * 
 + * Underlying list engine 
 + * / 
 + private final JsListEngine < V > listEngine ; 
 + / * * 
 + * Underlying entity converted 
 + * / 
 + private final JsEntityConverter < V , T > entityConverter ; 
 + / * * 
 + * Convenience flag if overlays supported by entity converter 
 + * / 
 + private final boolean isOverlaysSupported ; 
 + 
 + 
 + / * * 
 + * Subscribers to bind 
 + * / 
 + private final JsDisplayListCallback < T > callback ; 
 + 
 + 
 + / * * 
 + * Current list values 
 + * / 
 + private ArrayList < V > values ; 
 + / * * 
 + * Current converted values 
 + * / 
 + private JsModernArray < T > jsValues ; 
 + / * * 
 + * Current overlay values ( if supported ) 
 + * / 
 + private JsModernArray < JavaScriptObject > jsOverlays ; 
 + / * * 
 + * Current dirty overlay items 
 + * / 
 + private ArrayList < Boolean > isOverlayDirty ; 
 + 
 + / * * 
 + * If all messages loaded from top of the list 
 + * / 
 + private boolean isOpenTop ; 
 + / * * 
 + * If all messages loaded from bottom of the list 
 + * / 
 + private boolean isOpenBottom ; 
 + 
 + / * * 
 + * If list is inited and ready to receive list updates 
 + * / 
 + private boolean isInited ; 
 + 
 + / * * 
 + * If ForceReconvert required flag 
 + * / 
 + private boolean isForceReconverted = false ; 
 + 
 + public JsDisplayListBind ( JsDisplayListCallback < T > callback , JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { 
 + 
 + this . callback = callback ; 
 + this . listEngine = listEngine ; 
 + this . entityConverter = entityConverter ; 
 + this . isOverlaysSupported = entityConverter . isSupportOverlays ( ) ; 
 + 
 + this . values = new ArrayList < > ( ) ; 
 + this . jsValues = JsModernArray . createArray ( ) . cast ( ) ; 
 + if ( isOverlaysSupported ) { 
 + this . isOverlayDirty = new ArrayList < > ( ) ; 
 + this . jsOverlays = JsModernArray . createArray ( ) . cast ( ) ; 
 + } 
 + 
 + isInited = false ; 
 + 
 + listEngine . addListener ( this ) ; 
 + } 
 + 
 + public ArrayList < V > getRawItems ( ) { 
 + return values ; 
 + } 
 + 
 + private void clearState ( ) { 
 + values . clear ( ) ; 
 + jsValues . clear ( ) ; 
 + jsOverlays . clear ( ) ; 
 + isOverlayDirty . clear ( ) ; 
 + } 
 + 
 + public void initAll ( ) { 
 + clearState ( ) ; 
 + 
 + long [ ] rids = listEngine . getOrderedIds ( ) ; 
 + for ( long rid : rids ) { 
 + V item = listEngine . getValue ( rid ) ; 
 + if ( item = = null ) { 
 + Log . w ( " JsDisplayList " , " Unable to find item # " + rid ) ; 
 + continue ; 
 + } 
 + values . add ( item ) ; 
 + jsValues . push ( entityConverter . convert ( item ) ) ; 
 + 
 + if ( isOverlaysSupported ) { 
 + jsOverlays . push ( null ) ; 
 + isOverlayDirty . add ( true ) ; 
 + } 
 + } 
 + 
 + processDirtyOverlays ( ) ; 
 + 
 + isInited = true ; 
 + isOpenBottom = true ; 
 + isOpenTop = true ; 
 + } 
 + 
 + public void notifySubscriber ( ) { 
 + if ( isOverlaysSupported ) { 
 + callback . onCollectionChanged ( jsValues , jsOverlays ) ; 
 + } else { 
 + callback . onCollectionChanged ( jsValues , null ) ; 
 + } 
 + } 
 + 
 + private void addItemOrUpdateImpl ( V item ) { 
 + long id = item . getEngineId ( ) ; 
 + long sortKey = item . getEngineSort ( ) ; 
 + for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 + if ( values . get ( i ) . getEngineId ( ) = = id ) { 
 + values . remove ( i ) ; 
 + jsValues . remove ( i ) ; 
 + if ( isOverlaysSupported ) { 
 + markAsDirty ( i ) ; 
 + jsOverlays . remove ( i ) ; 
 + isOverlayDirty . remove ( i ) ; 
 + } 
 + break ; 
 + } 
 + } 
 + 
 + for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 + if ( sortKey > values . get ( i ) . getEngineSort ( ) ) { 
 + values . add ( i , item ) ; 
 + jsValues . insert ( i , entityConverter . convert ( item ) ) ; 
 + if ( isOverlaysSupported ) { 
 + jsOverlays . insert ( i , null ) ; 
 + isOverlayDirty . add ( i , true ) ; 
 + markAsDirty ( i ) ; 
 + } 
 + return ; 
 + } 
 + } 
 + 
 + values . add ( item ) ; 
 + jsValues . push ( entityConverter . convert ( item ) ) ; 
 + if ( isOverlaysSupported ) { 
 + jsOverlays . push ( null ) ; 
 + isOverlayDirty . add ( true ) ; 
 + markAsDirty ( values . size ( ) - 1 ) ; 
 + } 
 + } 
 + 
 + private void remoteItemImpl ( long id ) { 
 + for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 + if ( values . get ( i ) . getEngineId ( ) = = id ) { 
 + values . remove ( i ) ; 
 + jsValues . remove ( i ) ; 
 + if ( isOverlaysSupported ) { 
 + markAsDirty ( i ) ; 
 + jsOverlays . remove ( i ) ; 
 + isOverlayDirty . add ( true ) ; 
 + } 
 + break ; 
 + } 
 + } 
 + } 
 + 
 + / * 
 + * List Engine Updates 
 + * / 
 + 
 + @ Override 
 + public void onItemAddedOrUpdated ( V item ) { 
 + if ( ! isInited ) { 
 + return ; 
 + } 
 + 
 + addItemOrUpdateImpl ( item ) ; 
 + processDirtyOverlays ( ) ; 
 + notifySubscriber ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onItemsAddedOrUpdated ( List < V > items ) { 
 + if ( ! isInited ) { 
 + return ; 
 + } 
 + 
 + for ( V item : items ) { 
 + addItemOrUpdateImpl ( item ) ; 
 + } 
 + processDirtyOverlays ( ) ; 
 + notifySubscriber ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onItemRemoved ( long id ) { 
 + if ( ! isInited ) { 
 + return ; 
 + } 
 + remoteItemImpl ( id ) ; 
 + processDirtyOverlays ( ) ; 
 + notifySubscriber ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onItemsRemoved ( long [ ] ids ) { 
 + if ( ! isInited ) { 
 + return ; 
 + } 
 + for ( long id : ids ) { 
 + remoteItemImpl ( id ) ; 
 + } 
 + processDirtyOverlays ( ) ; 
 + notifySubscriber ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onItemsReplaced ( List < V > items ) { 
 + if ( ! isInited ) { 
 + return ; 
 + } 
 + 
 + values . clear ( ) ; 
 + jsValues . clear ( ) ; 
 + if ( isOverlaysSupported ) { 
 + jsOverlays . clear ( ) ; 
 + isOverlayDirty . clear ( ) ; 
 + } 
 + onItemsAddedOrUpdated ( items ) ; 
 + } 
 + 
 + @ Override 
 + public void onClear ( ) { 
 + if ( ! isInited ) { 
 + return ; 
 + } 
 + 
 + values . clear ( ) ; 
 + jsValues . clear ( ) ; 
 + if ( isOverlaysSupported ) { 
 + jsOverlays . clear ( ) ; 
 + isOverlayDirty . clear ( ) ; 
 + } 
 + 
 + notifySubscriber ( ) ; 
 + } 
 + 
 + / / 
 + / / Reconverting 
 + / / 
 + 
 + public void startReconverting ( ) { 
 + isForceReconverted = false ; 
 + } 
 + 
 + public void forceReconvert ( long id ) { 
 + for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 + V value = values . get ( i ) ; 
 + if ( value . getEngineId ( ) = = id ) { 
 + jsValues . update ( i , entityConverter . convert ( value ) ) ; 
 + / / Do not update overlays as this is method is a hack for binding 
 + isForceReconverted = true ; 
 + break ; 
 + } 
 + } 
 + } 
 + 
 + public void stopReconverting ( ) { 
 + if ( isForceReconverted ) { 
 + isForceReconverted = false ; 
 + notifySubscriber ( ) ; 
 + } 
 + } 
 + 
 + / * 
 + * Overlay support methods 
 + * / 
 + 
 + private boolean isDirty ( int index ) { 
 + return isOverlayDirty . get ( index ) ; 
 + } 
 + 
 + private void markAsDirty ( int index ) { 
 + isOverlayDirty . set ( index , true ) ; 
 + if ( index - 1 > = 0 ) { 
 + isOverlayDirty . set ( index - 1 , true ) ; 
 + } 
 + 
 + if ( index + 1 < isOverlayDirty . size ( ) ) { 
 + isOverlayDirty . set ( index + 1 , true ) ; 
 + } 
 + } 
 + 
 + private void markAsClean ( int index ) { 
 + isOverlayDirty . set ( index , false ) ; 
 + } 
 + 
 + private boolean processDirtyOverlays ( ) { 
 + if ( ! isOverlaysSupported ) { 
 + return false ; 
 + } 
 + boolean isChanged = false ; 
 + for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 + if ( ! isDirty ( i ) ) { 
 + continue ; 
 + } 
 + 
 + V prev = null ; 
 + V current = values . get ( i ) ; 
 + V next = null ; 
 + 
 + if ( i - 1 > = 0 ) { 
 + prev = values . get ( i - 1 ) ; 
 + } 
 + if ( i + 1 < values . size ( ) ) { 
 + next = values . get ( i + 1 ) ; 
 + } 
 + 
 + jsOverlays . update ( i , entityConverter . buildOverlay ( prev , current , next ) ) ; 
 + markAsClean ( i ) ; 
 + isChanged = true ; 
 + } 
 + return isChanged ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java 
 index 06935e0 . . c83b17d 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / storage / JsListStorage . java 
 @ @ - 186 , 6 + 186 , 34 @ @ public class JsListStorage implements ListStorage { 
 return res ; 
 } 
 
 + public long [ ] getPrevIdsInclusive ( long sortKey ) { 
 + ArrayList < Long > res = new ArrayList < Long > ( ) ; 
 + for ( Index i : index ) { 
 + if ( i . getSortKey ( ) < = sortKey ) { 
 + res . add ( i . getId ( ) ) ; 
 + } 
 + } 
 + long [ ] res2 = new long [ res . size ( ) ] ; 
 + for ( int i = 0 ; i < res2 . length ; i + + ) { 
 + res2 [ i ] = res . get ( i ) ; 
 + } 
 + return res2 ; 
 + } 
 + 
 + public long [ ] getPrevIdsExclusive ( long sortKey ) { 
 + ArrayList < Long > res = new ArrayList < Long > ( ) ; 
 + for ( Index i : index ) { 
 + if ( i . getSortKey ( ) < sortKey ) { 
 + res . add ( i . getId ( ) ) ; 
 + } 
 + } 
 + long [ ] res2 = new long [ res . size ( ) ] ; 
 + for ( int i = 0 ; i < res2 . length ; i + + ) { 
 + res2 [ i ] = res . get ( i ) ; 
 + } 
 + return res2 ; 
 + } 
 + 
 private String getId ( long id ) { 
 return " list _ " + prefix + " _ " + id ; 
 }

NEAREST DIFF:
diff - - git a / actor - apps / app - ios / Actor / Resources / Localization / zh - Hans . lproj / Localizable . strings b / actor - apps / app - ios / Actor / Resources / Localization / zh - Hans . lproj / Localizable . strings 
 new file mode 100644 
 index 0000000 . . ba78065 
 - - - / dev / null 
 + + + b / actor - apps / app - ios / Actor / Resources / Localization / zh - Hans . lproj / Localizable . strings 
 @ @ - 0 , 0 + 1 , 344 @ @ 
 + / * 
 + Copyright ( c ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + / * 
 + * Main Screen 
 + * / 
 + 
 + " TabMessages " = " 消 息 " ; 
 + 
 + " TabPeople " = " 联 系 人 " ; 
 + 
 + " TabSettings " = " 设 置 " ; 
 + 
 + " TabDiscover " = " 发 现 " ; 
 + 
 + / * 
 + * Contacts 
 + * / 
 + 
 + " ContactsAddHeader " = " 添 加 联 系 人 " ; 
 + 
 + " ContactsAddHint " = " 请 输 入 电 话 号 码 " ; 
 + 
 + " ContactsActionInvite " = " 把 Actor 告 诉 朋 友 " ; 
 + 
 + " ContactsActionAdd " = " 添 加 朋 友 " ; 
 + 
 + / * 
 + * Dialogs 
 + * / 
 + 
 + " DialogsHint " = " 向 左 滑 动 查 看 更 多 选 项 " ; 
 + 
 + / * 
 + * Discover 
 + * / 
 + 
 + / * 
 + * Settings 
 + * / 
 + 
 + " SettingsEdit " = " 编 辑 " ; 
 + 
 + " SettingsSetPhoto " = " 设 置 头 像 " ; 
 + 
 + " SettingsChangeName " = " 修 改 名 字 " ; 
 + 
 + " SettingsSecurity " = " 隐 私 和 安 全 " ; 
 + 
 + " SettingsEditHeader " = " 修 改 名 字 " ; 
 + 
 + " SettingsNotifications " = " 通 知 和 声 音 " ; 
 + 
 + " SettingsAskQuestion " = " 提 问 " ; 
 + 
 + " SettingsAbout " = " 关 于 " ; 
 + 
 + / * 
 + * Profile 
 + * / 
 + 
 + " ProfileEditHeader " = " 修 改 名 字 " ; 
 + 
 + " ProfileSendMessage " = " 发 送 消 息 " ; 
 + 
 + " ProfileNotifications " = " 通 知 " ; 
 + 
 + " ProfileNotificationsWarring " = " 你 要 屏 蔽 针 对 这 个 人 的 推 送 提 醒 消 息 吗 ？ 这 样 可 能 会 引 起 你 和 他 （ 她 ） 的 关 系 哦 。 " ; 
 + 
 + " ProfileNotificationsWarringAction " = " 屏 蔽 " ; 
 + 
 + " ProfileAddToContacts " = " 添 加 到 通 讯 录 " ; 
 + 
 + " ProfileRemoveFromContacts " = " 从 通 讯 录 中 删 除 " ; 
 + 
 + " ProfileRename " = " 修 改 联 系 名 " ; 
 + 
 + " ProfileRenameMessage " = " 你 可 以 修 改 通 讯 录 中 的 联 系 人 名 称 ， 此 修 改 只 体 现 在 你 的 通 讯 录 中 。 " ; 
 + 
 + " ProfileRenameAction " = " 改 名 " ; 
 + 
 + " CallNumber " = " 拨 打 这 个 电 话 " ; 
 + 
 + " CopyNumber " = " 复 制 电 话 号 码 " ; 
 + 
 + " NumberCopied " = " 电 话 号 码 已 经 复 制 到 剪 贴 板 中 " ; 
 + 
 + / * 
 + * Publics 
 + * / 
 + 
 + " JoinAlertMessage " = " 你 要 加 入 这 个 群 吗 ？ " ; 
 + 
 + / * 
 + * Group 
 + * / 
 + 
 + " GroupEditHeader " = " 修 改 群 模 版 " ; 
 + 
 + " GroupSetPhoto " = " 设 置 群 头 像 " ; 
 + 
 + " GroupSetTitle " = " 设 置 群 标 题 " ; 
 + 
 + " GroupEditConfirm " = " 确 定 要 修 改 群 标 题 ？ " ; 
 + 
 + " GroupEditConfirmAction " = " 修 改 模 版 " ; 
 + 
 + " GroupNotifications " = " 通 知 " ; 
 + 
 + " GroupSettings " = " 设 置 " ; 
 + 
 + " GroupIntegrations " = " 集 成 " ; 
 + 
 + " GroupMembers " = " { 0 } 个 成 员 " ; 
 + 
 + " GroupMemberInfo " = " 成 员 信 息 " ; 
 + 
 + " GroupMemberKick " = " 移 出 群 " ; 
 + 
 + " GroupMemberKickMessage " = " 确 定 要 把 { name } 移 出 群 吗 ？ " ; 
 + 
 + " GroupMemberKickAction " = " 移 出 " ; 
 + 
 + " GroupMemberWrite " = " 编 辑 消 息 " ; 
 + 
 + " GroupMemberCall " = " 打 电 话 " ; 
 + 
 + " GroupMemberCallNoPhones " = " 此 用 户 没 有 电 话 号 码 。 " ; 
 + 
 + " GroupAddParticipant " = " 添 加 参 与 者 . . . " ; 
 + 
 + " GroupAddParticipantTitle " = " 通 讯 录 " ; 
 + 
 + " GroupAddParticipantUrl " = " 通 过 URL 链 接 邀 请 加 入 群 " ; 
 + 
 + " GroupLeave " = " 退 出 群 " ; 
 + 
 + " GroupLeaveConfirm " = " 你 确 定 要 退 出 群 吗 ？ " ; 
 + 
 + " GroupLeaveConfirmAction " = " 退 出 " ; 
 + 
 + " GroupInviteLinkPageTitle " = " 邀 请 链 接 " ; 
 + 
 + " GroupInviteLinkTitle " = " 链 接 " ; 
 + 
 + " GroupInviteLinkHint " = " 发 送 邀 请 链 接 即 可 邀 请 你 的 朋 友 加 入 此 群 。 " ; 
 + 
 + " GroupInviteLinkRevokeMessage " = " 确 定 要 废 除 这 个 链 接 ， 废 除 后 其 他 人 将 无 法 使 用 这 个 链 接 加 入 群 。 " ; 
 + 
 + " GroupInviteLinkRevokeAction " = " 废 除 " ; 
 + 
 + " GroupIntegrationPageTitle " = " 集 成 API " ; 
 + 
 + " GroupIntegrationLinkTitle " = " 链 接 " ; 
 + 
 + " GroupIntegrationLinkHint " = " 任 何 外 部 系 统 都 可 以 利 用 这 个 链 接 向 群 发 送 消 息 。 " ; 
 + 
 + " GroupIntegrationDoc " = " 打 开 文 档 " ; 
 + 
 + " GroupIntegrationLinkRevokeMessage " = " 确 定 要 废 除 这 个 链 接 ， 废 除 后 其 他 系 统 将 无 法 使 用 这 个 链 接 发 送 消 息 。 " ; 
 + 
 + " GroupIntegrationLinkRevokeAction " = " 废 除 " ; 
 + 
 + 
 + / * 
 + * Compose 
 + * / 
 + 
 + " ComposeTitle " = " 新 消 息 " ; 
 + 
 + " CreateGroup " = " 创 建 群 " ; 
 + 
 + " CreateGroupTitle " = " 创 建 群 " ; 
 + 
 + " CreateGroupNamePlaceholder " = " 输 入 群 名 称 " ; 
 + 
 + / * 
 + * Notifications 
 + * / 
 + 
 + " NotificationsTitle " = " 通 知 和 声 音 " ; 
 + 
 + " NotificationsEffectsTitle " = " 效 果 " ; 
 + 
 + " NotificationsMobileTitle " = " 手 机 推 送 通 知 " ; 
 + 
 + " NotificationsInAppTitle " = " In - App 通 知 " ; 
 + 
 + " NotificationsNotificationHint " = " 在 好 友 或 群 的 信 息 页 面 ， 可 以 屏 蔽 指 定 好 友 或 群 的 推 送 通 知 。 " ; 
 + 
 + " NotificationsPrivacyTitle " = " 隐 私 " ; 
 + 
 + " NotificationsSoundEffects " = " 声 音 效 果 " ; 
 + 
 + " NotificationsEnable " = " 打 开 " ; 
 + 
 + " NotificationsSound " = " 声 音 " ; 
 + 
 + " NotificationsVibration " = " 震 动 " ; 
 + 
 + " NotificationsPreview " = " 消 息 预 览 " ; 
 + 
 + " NotificationsPreviewHint " = " 在 通 知 中 不 显 示 消 息 文 本 。 " ; 
 + 
 + " NotificationSecretMessage " = " 新 消 息 " ; 
 + 
 + / * 
 + * Privacy 
 + * / 
 + 
 + " PrivacyTitle " = " 隐 私 和 安 全 " ; 
 + 
 + " PrivacyTerminate " = " 终 止 所 有 回 话 " ; 
 + 
 + " PrivacyTerminateHint " = " 退 出 除 此 设 备 之 外 的 所 有 设 备 。 " ; 
 + 
 + / * 
 + * Chat 
 + * / 
 + 
 + " ChatPlaceholder " = " 输 入 消 息 . . . " ; 
 + 
 + " ChatSend " = " 发 送 " ; 
 + 
 + " ChatNoGroupAccess " = " 你 不 是 群 成 员 " ; 
 + 
 + / * 
 + * Placeholders 
 + * / 
 + 
 + " Placeholder _ Empty _ Title " = " 邀 请 你 的 朋 友 " ; 
 + 
 + " Placeholder _ Empty _ Message " = " 你 的 通 讯 录 中 没 有 人 使 用 Actor ， 请 点 击 下 面 按 钮 邀 请 他 们 。 " ; 
 + 
 + " Placeholder _ Empty _ Action " = " 告 诉 你 的 朋 友 " ; 
 + 
 + " Placeholder _ Empty _ Message2 " = " 或 者 手 动 添 加 好 友 " ; 
 + 
 + " Placeholder _ Empty _ Action2 " = " 添 加 好 友 " ; 
 + 
 + " Placeholder _ Loading _ Title " = " 正 在 同 步 中 " ; 
 + 
 + " Placeholder _ Loading _ Message " = " 请 等 待 几 分 钟 ， 以 便 我 们 让 你 的 app 好 用 。 " ; 
 + 
 + " Placeholder _ Contacts _ Title " = " 邀 请 好 友 " ; 
 + 
 + " Placeholder _ Contacts _ Message " = " 你 的 通 讯 录 中 没 有 人 使 用 Actor ， 请 点 击 下 面 按 钮 邀 请 他 们 。 " ; 
 + 
 + " Placeholder _ Contacts _ Action " = " 告 诉 好 友 " ; 
 + 
 + " Placeholder _ Contacts _ Message2 " = " 或 者 点 击 右 上 角 的 ＋ 按 钮 手 动 添 加 好 友 " ; 
 + 
 + " Placeholder _ Dialogs _ Title " = " 开 始 聊 天 " ; 
 + 
 + " Placeholder _ Dialogs _ Message " = " 从 你 的 通 讯 录 中 选 择 一 个 好 友 ， 或 者 点 击 右 上 角 的 编 辑 按 钮 立 刻 开 始 聊 天 " ; 
 + 
 + " Placeholder _ Group _ Title " = " 不 是 一 个 群 成 员 " ; 
 + 
 + " Placeholder _ Group _ Message " = " 非 常 不 幸 ， 您 不 是 群 成 员 。 " ; 
 + 
 + / * 
 + * Auth 
 + * / 
 + 
 + " AuthPhoneTitle " = " 你 的 电 话 " ; 
 + 
 + " AuthPhoneNumberHint " = " 你 的 电 话 号 码 " ; 
 + 
 + " AuthPhoneHint " = " 请 选 择 你 的 国 家 并 输 入 你 的 电 话 号 码 。 " ; 
 + 
 + " AuthPhoneTooShort " = " 电 话 号 码 太 短 " ; 
 + 
 + " AuthCodeFieldHint " = " 验 证 码 " ; 
 + 
 + " AuthCodeHint " = " 已 经 通 过 短 信 为 你 发 送 验 证 码 ， 请 稍 侯 。 " ; 
 + 
 + " AuthProfileTitle " = " 你 的 信 息 " ; 
 + 
 + " AuthProfileAddPhoto1 " = " 添 加 " ; 
 + 
 + " AuthProfileAddPhoto2 " = " 头 像 " ; 
 + 
 + " AuthProfileNameHint " = " 你 的 名 字 " ; 
 + 
 + " AuthProfileHint " = " 请 输 入 你 的 名 字 并 上 传 头 像 " ; 
 + 
 + / * 
 + * Common Elements 
 + * / 
 + 
 + " CurrentLocale " = " Cn " ; 
 + 
 + " InviteText " = " 您 好 ！ 让 我 们 一 起 使 用 Actor 安 全 开 聊 吧 ! https : / / actor . im / dl " ; 
 + 
 + " PhotoRemove " = " 删 除 头 像 " ; 
 + 
 + " PhotoRemoveGroupMessage " = " 确 定 要 删 除 群 头 像 吗 ？ 删 除 后 很 多 群 成 员 会 很 失 望 哦 。 " ; 
 + 
 + " PhotoCamera " = " 拍 照 " ; 
 + 
 + " PhotoLibrary " = " 相 册 " ; 
 + 
 + " SendDocument " = " 文 档 " ; 
 + 
 + " NavigationEdit " = " 编 辑 " ; 
 + 
 + " NavigationDone " = " 完 成 " ; 
 + 
 + " NavigationCancel " = " 取 消 " ; 
 + 
 + " NavigationBack " = " " ; 
 + 
 + " NavigationNext " = " 下 一 步 " ; 
 + 
 + " AlertCancel " = " 取 消 " ; 
 + 
 + " AlertNext " = " 下 一 步 " ; 
 + 
 + " AlertSave " = " 保 存 " ; 
 + 
 + " AlertOk " = " 确 定 " ; 
 + 
 + " AlertYes " = " 是 " ; 
 + 
 + " AlertNo " = " 否 " ; 
 + 
 + " UnsupportedContent " = " 这 个 版 本 不 支 持 此 消 息 。 请 等 待 应 用 升 级 ， 之 后 就 可 以 看 到 消 息 了 。 " ; 
 + 
 + " ActionCopyLink " = " 复 制 链 接 " ; 
 + 
 + " ActionRevokeLink " = " 废 除 链 接 " ; 
 + 
 + " ActionShareLink " = " 分 享 链 接 " ; 
 + 
 + " AlertLinkCopied " = " 链 接 已 经 被 复 制 到 剪 贴 板 。 " ; 
 + 
 + / * 
 + * Errors 
 + * / 
 + 
 + " ErrorPhoneIncorrect " = " 输 入 被 邀 请 人 的 电 话 号 码 ， 再 试 一 次 。 " ; 
 + 
 + " ErrorCodeExpired " = " 验 证 码 过 期 。 请 重 新 验 证 一 次 。 " ; 
 \ No newline at end of file
