BLEU SCORE: 0.09287528999566796

TEST MSG: perf ( iOS + core ) : File download Performance
GENERATED MSG: feat ( webrtc ) : Gracefully close Peer Connection

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 194dd19 . . 067b415 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 1088 , 12 + 1088 , 12 @ @ < nl > 	 	 	 	 066A53351BC537BF000E606E / * Conversation * / , < nl > 	 	 	 	 066A52E11BC52A16000E606E / * Group * / , < nl > 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , < nl > - 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , < nl > 	 	 	 	 066A53051BC5317B000E606E / * Recent * / , < nl > 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , < nl > 	 	 	 	 066A52EB1BC52AF8000E606E / * Settings * / , < nl > 	 	 	 	 066A53091BC53197000E606E / * User * / , < nl > 	 	 	 	 06E323131C6A7AA300D66F53 / * Calls * / , < nl > + 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Controllers ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > index daaa1cf . . 717cf7d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > @ @ - 17 , 24 + 17 , 15 @ @ class CocoaFiles { < nl > < nl > @ objc class CocoaFileSystemRuntime : NSObject , ARFileSystemRuntime { < nl > < nl > - var appPath : String = " " < nl > - < nl > let manager = NSFileManager . defaultManager ( ) < nl > < nl > override init ( ) { < nl > super . init ( ) < nl > - < nl > - var documentsFolders = NSSearchPathForDirectoriesInDomains ( NSSearchPathDirectory . DocumentDirectory , NSSearchPathDomainMask . UserDomainMask , true ) < nl > - if ( documentsFolders . count > 0 ) { < nl > - appPath = documentsFolders [ 0 ] . asNS . stringByDeletingLastPathComponent < nl > - } else { < nl > - fatalError ( " Unable to load Application path " ) < nl > - } < nl > } < nl > < nl > func createTempFile ( ) - > ARFileSystemReference ! { < nl > let fileName = " / tmp / \ ( NSUUID ( ) . UUIDString ) " < nl > - NSFileManager . defaultManager ( ) . createFileAtPath ( appPath + fileName , contents : NSData ( ) , attributes : nil ) < nl > + NSFileManager . defaultManager ( ) . createFileAtPath ( documentsFolder + fileName , contents : nil , attributes : nil ) < nl > return CocoaFile ( path : fileName ) < nl > } < nl > < nl > @ @ - 42 , 14 + 33 , 14 @ @ class CocoaFiles { < nl > < nl > / / Finding file available name < nl > var index = 0 ; < nl > - while ( manager . fileExistsAtPath ( " \ ( appPath ) / Documents / \ ( index ) _ \ ( fileName ) " ) ) { < nl > - index = index + 1 ; < nl > + while ( manager . fileExistsAtPath ( " \ ( documentsFolder ) / Documents / \ ( fileId ) _ \ ( index ) _ \ ( fileName ) " ) ) { < nl > + index = index + 1 < nl > } < nl > - let resultPath = " / Documents / \ ( index ) _ \ ( fileName ) " ; < nl > + let resultPath = " / Documents / \ ( fileId ) _ \ ( index ) _ \ ( fileName ) " < nl > < nl > / / Moving file to new place < nl > do { < nl > - try manager . moveItemAtPath ( appPath + sourceFile . getDescriptor ( ) ! , toPath : appPath + resultPath ) < nl > + try manager . moveItemAtPath ( documentsFolder + sourceFile . getDescriptor ( ) ! , toPath : documentsFolder + resultPath ) < nl > return CocoaFile ( path : resultPath ) < nl > } catch _ { < nl > return nil < nl > @ @ - 137 , 18 + 128 , 18 @ @ class CocoaOutputFile : NSObject , AROutputFile { < nl > srcBuffer + + ; < nl > } < nl > < nl > - NSLog ( " Write to file \ ( fileOffset ) " ) < nl > + / / NSLog ( " Write to file \ ( fileOffset ) " ) < nl > fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; < nl > fileHandle . writeData ( toWrite ) < nl > - NSLog ( " Write to file \ ( fileOffset ) : end " ) < nl > + / / NSLog ( " Write to file \ ( fileOffset ) : end " ) < nl > return true ; < nl > } < nl > < nl > func close ( ) - > Bool { < nl > - NSLog ( " Close file " ) < nl > + / / NSLog ( " Close file " ) < nl > self . fileHandle . synchronizeFile ( ) < nl > self . fileHandle . closeFile ( ) < nl > - NSLog ( " Close file end " ) < nl > + / / NSLog ( " Close file end " ) < nl > return true ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index c852ff6 . . 9d016ee 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 201 , 7 + 201 , 7 @ @ import DZNWebViewController < nl > builder . setPhoneBookImportEnabled ( jboolean ( enablePhoneBookImport ) ) < nl > builder . setVoiceCallsEnabled ( jboolean ( enableCalls ) ) < nl > builder . setIsEnabledGroupedChatList ( false ) < nl > - builder . setEnableFilesLogging ( true ) < nl > + / / builder . setEnableFilesLogging ( true ) < nl > < nl > / / Creating messenger < nl > messenger = ACCocoaMessenger ( configuration : builder . build ( ) ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index d123257 . . a1397f7 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 243 , 7 + 243 , 7 @ @ public class AAAvatarView : UIView , YYAsyncLayerDelegate , ACFileEventCallback { < nl > } < nl > < nl > if image ! = nil { < nl > - image ! . drawInRect ( CGRectMake ( 0 , 0 , r * 2 , r * 2 ) ) < nl > + image ! . resize ( r * 2 , h : r * 2 ) . drawInRect ( CGRectMake ( 0 , 0 , r * 2 , r * 2 ) ) < nl > } else { < nl > / / Clean BG < nl > CGContextSetFillColorWithColor ( context , UIColor . whiteColor ( ) . CGColor ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift < nl > index 27972b3 . . ed9ae74 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift < nl > @ @ - 95 , 7 + 95 , 9 @ @ public class AATableViewCell : UITableViewCell { < nl > } < nl > < nl > public override func setHighlighted ( highlighted : Bool , animated : Bool ) { < nl > - super . setHighlighted ( highlighted , animated : animated ) < nl > + if self . highlighted ! = highlighted { < nl > + super . setHighlighted ( highlighted , animated : animated ) < nl > + } < nl > < nl > if ! highlighted { < nl > if topSeparator . backgroundColor ! = AATableViewCell . separatorColor { < nl > @ @ - 108 , 7 + 110 , 9 @ @ public class AATableViewCell : UITableViewCell { < nl > } < nl > < nl > public override func setSelected ( selected : Bool , animated : Bool ) { < nl > - super . setSelected ( selected , animated : animated ) < nl > + if self . selected ! = selected { < nl > + super . setSelected ( selected , animated : animated ) < nl > + } < nl > < nl > if ! selected { < nl > if topSeparator . backgroundColor ! = AATableViewCell . separatorColor { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java < nl > index c7b5d94 . . eb6553a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java < nl > @ @ - 16 , 7 + 16 , 7 @ @ import im . actor . core . util . BaseKeyValueEngine ; < nl > import im . actor . core . viewmodel . FileCallback ; < nl > import im . actor . core . viewmodel . FileEventCallback ; < nl > import im . actor . core . viewmodel . UploadFileCallback ; < nl > - import im . actor . runtime . Storage ; < nl > + import im . actor . runtime . * ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . Props ; < nl > @ @ - 121 , 8 + 121 , 13 @ @ public class FilesModule extends AbsModule { < nl > } ) ) ; < nl > } < nl > < nl > - public void startDownloading ( FileReference location ) { < nl > - downloadManager . send ( new DownloadManager . StartDownload ( location ) ) ; < nl > + public void startDownloading ( final FileReference location ) { < nl > + im . actor . runtime . Runtime . dispatch ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + downloadManager . send ( new DownloadManager . StartDownload ( location ) ) ; < nl > + } < nl > + } ) ; < nl > } < nl > < nl > public void cancelDownloading ( long fileId ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java < nl > index b8f9c3d . . 9337499 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java < nl > @ @ - 340 , 13 + 340 , 13 @ @ public class ManagerActor extends Actor { < nl > throw new IOException ( " Expected " + inSeq + " , got : " + seq ) ; < nl > } < nl > inSeq + + ; < nl > - long start = Runtime . getActorTime ( ) ; < nl > + / / long start = Runtime . getActorTime ( ) ; < nl > EncryptedCBCPackage usEncryptedPackage = new EncryptedCBCPackage ( new DataInput ( encryptedPackage . getEncryptedPackage ( ) ) ) ; < nl > byte [ ] ruPackage = serverUSDecryptor . decryptPackage ( ByteStrings . longToBytes ( seq ) , usEncryptedPackage . getIv ( ) , usEncryptedPackage . getEncryptedContent ( ) ) ; < nl > EncryptedCBCPackage ruEncryptedPackage = new EncryptedCBCPackage ( new DataInput ( ruPackage ) ) ; < nl > byte [ ] plainText = serverRUDecryptor . decryptPackage ( ByteStrings . longToBytes ( seq ) , ruEncryptedPackage . getIv ( ) , ruEncryptedPackage . getEncryptedContent ( ) ) ; < nl > < nl > - Log . d ( TAG , " Package decrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; < nl > + / / Log . d ( TAG , " Package decrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; < nl > < nl > DataInput ptInput = new DataInput ( plainText ) ; < nl > long messageId = ptInput . readLong ( ) ; < nl > @ @ - 394 , 7 + 394 , 7 @ @ public class ManagerActor extends Actor { < nl > if ( currentConnection ! = null ) { < nl > if ( authKey ! = null ) { < nl > int seq = outSeq + + ; < nl > - long start = Runtime . getActorTime ( ) ; < nl > + / / long start = Runtime . getActorTime ( ) ; < nl > byte [ ] ruIv = new byte [ 16 ] ; < nl > Crypto . nextBytes ( ruIv ) ; < nl > byte [ ] usIv = new byte [ 16 ] ; < nl > @ @ - 414 , 7 + 414 , 7 @ @ public class ManagerActor extends Actor { < nl > byte [ ] pkg = bos . toByteArray ( ) ; < nl > currentConnection . post ( pkg , 0 , pkg . length ) ; < nl > < nl > - Log . d ( TAG , " Package encrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; < nl > + / / Log . d ( TAG , " Package encrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; < nl > } else { < nl > DataOutput bos = new DataOutput ( ) ; < nl > bos . writeLong ( authId ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift < nl > index 0b5b611 . . 276d705 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift < nl > @ @ - 17 , 18 + 17 , 41 @ @ class CocoaWebRTCRuntime : NSObject , ARWebRTCRuntime { < nl > } < nl > < nl > func getUserAudio ( ) - > ARPromise { < nl > - return ARPromises . success ( peerConnectionFactory . audioTrackWithID ( " audio0 " ) ) < nl > + let audio = peerConnectionFactory . audioTrackWithID ( " audio0 " ) < nl > + let mediaStream = peerConnectionFactory . mediaStreamWithLabel ( " ARDAMSa0 " ) < nl > + mediaStream . addAudioTrack ( audio ) < nl > + return ARPromises . success ( MediaStream ( stream : mediaStream ) ) < nl > } < nl > } < nl > < nl > class MediaStream : NSObject , ARWebRTCMediaStream { < nl > < nl > + let stream : RTCMediaStream < nl > + < nl > + init ( stream : RTCMediaStream ) { < nl > + self . stream = stream < nl > + } < nl > + < nl > func isEnabled ( ) - > jboolean { < nl > return true < nl > } < nl > < nl > func setEnabledWithBoolean ( isEnabled : jboolean ) { < nl > - < nl > + for i in stream . audioTracks { < nl > + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( isEnabled ) < nl > + } < nl > + for i in stream . videoTracks { < nl > + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( isEnabled ) < nl > + } < nl > + } < nl > + < nl > + func close ( ) { < nl > + for i in stream . audioTracks { < nl > + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( false ) < nl > + } < nl > + for i in stream . videoTracks { < nl > + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( false ) < nl > + } < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 6df9661 . . afc0b49 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 636 , 13 + 636 , 13 @ @ public class JsFacade implements Exportable { < nl > < nl > / / Calls < nl > < nl > - public JsPromise doCall ( final int uid ) { < nl > + public JsPromise doCall ( final int uid ) { < nl > return JsPromise . create ( new JsPromiseExecutor ( ) { < nl > @ Override < nl > public void execute ( ) { < nl > - messenger . doCall ( uid ) . start ( new CommandCallback < ResponseDoCall > ( ) { < nl > + messenger . doCall ( uid ) . start ( new CommandCallback < Long > ( ) { < nl > @ Override < nl > - public void onResult ( ResponseDoCall res ) { < nl > + public void onResult ( Long res ) { < nl > Log . d ( TAG , " doCall : result " ) ; < nl > resolve ( ) ; < nl > } < nl > @ @ - 657 , 11 + 657 , 11 @ @ public class JsFacade implements Exportable { < nl > } ) ; < nl > } < nl > < nl > - public void answerCall ( String callId ) { < nl > + public void answerCall ( String callId ) { < nl > messenger . answerCall ( Long . parseLong ( callId ) ) ; < nl > } < nl > < nl > - public void endCall ( String callId ) { < nl > + public void endCall ( String callId ) { < nl > messenger . endCall ( Long . parseLong ( callId ) ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 46c61df . . a003cbf 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 43 , 7 + 43 , 6 @ @ public class CallActor extends EventBusActor { < nl > } < nl > < nl > public final void sendSignalingMessage ( int uid , long deviceId , ApiWebRTCSignaling signaling ) { < nl > - / / Log . d ( TAG , " sendSignaling " ) ; < nl > try { < nl > sendMessage ( uid , deviceId , signaling . buildContainer ( ) ) ; < nl > } catch ( IOException e ) { < nl > @ @ - 54 , 9 + 53 , 6 @ @ public class CallActor extends EventBusActor { < nl > < nl > @ Override < nl > public final void onMessageReceived ( @ Nullable Integer senderId , @ Nullable Long senderDeviceId , byte [ ] data ) { < nl > - / / Log . d ( TAG , " onMessageReceived : start " ) ; < nl > - < nl > - / / Ignoring messages without sender < nl > if ( senderId = = null | | senderDeviceId = = null ) { < nl > return ; < nl > } < nl > @ @ - 72 , 14 + 68 , 45 @ @ public class CallActor extends EventBusActor { < nl > < nl > Log . d ( TAG , " onMessageReceived : " + signaling ) ; < nl > onSignalingMessage ( senderId , senderDeviceId , signaling ) ; < nl > - / / Log . d ( TAG , " onMessageReceived : " + signaling + " : end " ) ; < nl > } < nl > < nl > @ Override < nl > + public void onBusStopped ( ) { < nl > + super . onBusStopped ( ) ; < nl > + for ( int uid : peerConnections . keySet ( ) ) { < nl > + HashMap < Long , ActorRef > peers = peerConnections . get ( uid ) ; < nl > + for ( ActorRef p : peers . values ( ) ) { < nl > + p . send ( new PeerConnectionActor . DoStop ( ) ) ; < nl > + } < nl > + } < nl > + peerConnections . clear ( ) ; < nl > + } < nl > + < nl > + public final void doEndCall ( ) { < nl > + shutdown ( ) ; < nl > + } < nl > + < nl > + protected ActorRef getPeer ( int uid , long deviceId ) { < nl > + if ( ! peerConnections . containsKey ( uid ) ) { < nl > + peerConnections . put ( uid , new HashMap < Long , ActorRef > ( ) ) ; < nl > + } < nl > + HashMap < Long , ActorRef > refs = peerConnections . get ( uid ) ; < nl > + if ( refs . containsKey ( deviceId ) ) { < nl > + return refs . get ( deviceId ) ; < nl > + } < nl > + ActorRef ref = system ( ) . actorOf ( getPath ( ) + " / uid : " + uid + " / " + deviceId , < nl > + PeerConnectionActor . CONSTRUCTOR ( self ( ) , uid , deviceId , context ( ) ) ) ; < nl > + refs . put ( deviceId , ref ) ; < nl > + return ref ; < nl > + } < nl > + < nl > + / / < nl > + / / Messages < nl > + / / < nl > + < nl > + @ Override < nl > public void onReceive ( Object message ) { < nl > - / / Log . d ( TAG , " onReceive " ) ; < nl > if ( message instanceof PeerConnectionActor . DoAnswer ) { < nl > - / / Log . d ( TAG , " onReceive : doAnswer " ) ; < nl > PeerConnectionActor . DoAnswer answer = ( PeerConnectionActor . DoAnswer ) message ; < nl > sendSignalingMessage ( answer . getUid ( ) , answer . getDeviceId ( ) , < nl > new ApiAnswer ( 0 , answer . getSdp ( ) ) ) ; < nl > @ @ - 91 , 23 + 118 , 14 @ @ public class CallActor extends EventBusActor { < nl > PeerConnectionActor . DoCandidate candidate = ( PeerConnectionActor . DoCandidate ) message ; < nl > sendSignalingMessage ( candidate . getUid ( ) , candidate . getDeviceId ( ) , < nl > new ApiCandidate ( 0 , candidate . getIndex ( ) , candidate . getId ( ) , candidate . getSdp ( ) ) ) ; < nl > + } else if ( message instanceof DoEndCall ) { < nl > + doEndCall ( ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > - / / Log . d ( TAG , " onReceive : End " ) ; < nl > } < nl > < nl > - protected ActorRef getPeer ( int uid , long deviceId ) { < nl > - if ( ! peerConnections . containsKey ( uid ) ) { < nl > - peerConnections . put ( uid , new HashMap < Long , ActorRef > ( ) ) ; < nl > - } < nl > - HashMap < Long , ActorRef > refs = peerConnections . get ( uid ) ; < nl > - if ( refs . containsKey ( deviceId ) ) { < nl > - return refs . get ( deviceId ) ; < nl > - } < nl > - ActorRef ref = system ( ) . actorOf ( getPath ( ) + " / uid : " + uid + " / " + deviceId , < nl > - PeerConnectionActor . CONSTRUCTOR ( self ( ) , uid , deviceId , context ( ) ) ) ; < nl > - refs . put ( deviceId , ref ) ; < nl > - return ref ; < nl > + public static class DoEndCall { < nl > + < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 75e8a4f . . f9c6ac5 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 118 , 7 + 118 , 10 @ @ public class CallManagerActor extends ModuleActor { < nl > } < nl > < nl > private void doEndCall ( long callId ) { < nl > - < nl > + ActorRef currentCall = currentCalls . remove ( callId ) ; < nl > + if ( currentCall ! = null ) { < nl > + currentCall . send ( new CallActor . DoEndCall ( ) ) ; < nl > + } < nl > } < nl > < nl > / / < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java < nl > index a8c220f . . c6215ac 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import im . actor . runtime . WebRTC ; < nl > import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . messages . PoisonPill ; < nl > import im . actor . runtime . function . Consumer ; < nl > import im . actor . runtime . function . Function ; < nl > import im . actor . runtime . function . FunctionTupled2 ; < nl > @ @ - 46 , 6 + 47 , 8 @ @ public class PeerConnectionActor extends ModuleActor { < nl > @ NotNull < nl > private WebRTCPeerConnection peerConnection ; < nl > @ NotNull < nl > + private WebRTCMediaStream stream ; < nl > + @ NotNull < nl > private State state = State . INITIALIZATION ; < nl > < nl > public PeerConnectionActor ( @ NotNull ActorRef root , int uid , long deviceId , @ NotNull ModuleContext context ) { < nl > @ @ - 73 , 6 + 76 , 7 @ @ public class PeerConnectionActor extends ModuleActor { < nl > Promises . tuple ( WebRTC . createPeerConnection ( ) , WebRTC . getUserAudio ( ) ) . map ( new FunctionTupled2 < WebRTCPeerConnection , WebRTCMediaStream , WebRTCPeerConnection > ( ) { < nl > @ Override < nl > public WebRTCPeerConnection apply ( WebRTCPeerConnection webRTCPeerConnection , WebRTCMediaStream stream ) { < nl > + PeerConnectionActor . this . stream = stream ; < nl > webRTCPeerConnection . addOwnStream ( stream ) ; < nl > return webRTCPeerConnection ; < nl > } < nl > @ @ - 240 , 6 + 244 , 14 @ @ public class PeerConnectionActor extends ModuleActor { < nl > peerConnection . addCandidate ( index , id , sdp ) ; < nl > } < nl > < nl > + public void onEnded ( ) { < nl > + peerConnection . close ( ) ; < nl > + stream . close ( ) ; < nl > + isReady = false ; < nl > + state = State . CLOSED ; < nl > + self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > + } < nl > + < nl > @ Override < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof OnOffer ) { < nl > @ @ - 267 , 6 + 279 , 12 @ @ public class PeerConnectionActor extends ModuleActor { < nl > return ; < nl > } < nl > onOfferNeeded ( ) ; < nl > + } else if ( message instanceof DoStop ) { < nl > + if ( ! isReady ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > + onEnded ( ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > @ @ - 445 , 7 + 463 , 11 @ @ public class PeerConnectionActor extends ModuleActor { < nl > } < nl > } < nl > < nl > + public static class DoStop { < nl > + < nl > + } < nl > + < nl > private enum State { < nl > - INITIALIZATION , WAITING _ HANDSHAKE , WAITING _ ANSWER , READY < nl > + INITIALIZATION , WAITING _ HANDSHAKE , WAITING _ ANSWER , READY , CLOSED < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java < nl > index 1c3d930 . . f35b6f2 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java < nl > @ @ - 35 , 7 + 35 , 11 @ @ public class MediaStream implements WebRTCMediaStream { < nl > } < nl > } < nl > < nl > - public void dispose ( ) { < nl > - audio . reset ( ) ; < nl > + @ Override < nl > + public void close ( ) { < nl > + if ( audio ! = null ) { < nl > + audio . reset ( ) ; < nl > + } < nl > + stream . stopAll ( ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java < nl > index 6b34737 . . 90be958 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java < nl > @ @ - 177 , 7 + 177 , 7 @ @ public class PeerConnection implements WebRTCPeerConnection { < nl > public void close ( ) { < nl > peerConnection . close ( ) ; < nl > for ( MediaStream s : streams . values ( ) ) { < nl > - s . dispose ( ) ; < nl > + s . close ( ) ; < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java < nl > index d0d8cea . . 10cc600 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java < nl > @ @ - 18 , 4 + 18 , 9 @ @ public interface WebRTCMediaStream { < nl > * @ param isEnabled is track enabled < nl > * / < nl > void setEnabled ( boolean isEnabled ) ; < nl > + < nl > + / * * < nl > + * Closing stream < nl > + * / < nl > + void close ( ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 194dd19 . . 067b415 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 1088 , 12 + 1088 , 12 @ @ 
 	 	 	 	 066A53351BC537BF000E606E / * Conversation * / , 
 	 	 	 	 066A52E11BC52A16000E606E / * Group * / , 
 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , 
 - 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , 
 	 	 	 	 066A53051BC5317B000E606E / * Recent * / , 
 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , 
 	 	 	 	 066A52EB1BC52AF8000E606E / * Settings * / , 
 	 	 	 	 066A53091BC53197000E606E / * User * / , 
 	 	 	 	 06E323131C6A7AA300D66F53 / * Calls * / , 
 + 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , 
 	 	 	 ) ; 
 	 	 	 path = Controllers ; 
 	 	 	 sourceTree = " < group > " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 index daaa1cf . . 717cf7d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 @ @ - 17 , 24 + 17 , 15 @ @ class CocoaFiles { 
 
 @ objc class CocoaFileSystemRuntime : NSObject , ARFileSystemRuntime { 
 
 - var appPath : String = " " 
 - 
 let manager = NSFileManager . defaultManager ( ) 
 
 override init ( ) { 
 super . init ( ) 
 - 
 - var documentsFolders = NSSearchPathForDirectoriesInDomains ( NSSearchPathDirectory . DocumentDirectory , NSSearchPathDomainMask . UserDomainMask , true ) 
 - if ( documentsFolders . count > 0 ) { 
 - appPath = documentsFolders [ 0 ] . asNS . stringByDeletingLastPathComponent 
 - } else { 
 - fatalError ( " Unable to load Application path " ) 
 - } 
 } 
 
 func createTempFile ( ) - > ARFileSystemReference ! { 
 let fileName = " / tmp / \ ( NSUUID ( ) . UUIDString ) " 
 - NSFileManager . defaultManager ( ) . createFileAtPath ( appPath + fileName , contents : NSData ( ) , attributes : nil ) 
 + NSFileManager . defaultManager ( ) . createFileAtPath ( documentsFolder + fileName , contents : nil , attributes : nil ) 
 return CocoaFile ( path : fileName ) 
 } 
 
 @ @ - 42 , 14 + 33 , 14 @ @ class CocoaFiles { 
 
 / / Finding file available name 
 var index = 0 ; 
 - while ( manager . fileExistsAtPath ( " \ ( appPath ) / Documents / \ ( index ) _ \ ( fileName ) " ) ) { 
 - index = index + 1 ; 
 + while ( manager . fileExistsAtPath ( " \ ( documentsFolder ) / Documents / \ ( fileId ) _ \ ( index ) _ \ ( fileName ) " ) ) { 
 + index = index + 1 
 } 
 - let resultPath = " / Documents / \ ( index ) _ \ ( fileName ) " ; 
 + let resultPath = " / Documents / \ ( fileId ) _ \ ( index ) _ \ ( fileName ) " 
 
 / / Moving file to new place 
 do { 
 - try manager . moveItemAtPath ( appPath + sourceFile . getDescriptor ( ) ! , toPath : appPath + resultPath ) 
 + try manager . moveItemAtPath ( documentsFolder + sourceFile . getDescriptor ( ) ! , toPath : documentsFolder + resultPath ) 
 return CocoaFile ( path : resultPath ) 
 } catch _ { 
 return nil 
 @ @ - 137 , 18 + 128 , 18 @ @ class CocoaOutputFile : NSObject , AROutputFile { 
 srcBuffer + + ; 
 } 
 
 - NSLog ( " Write to file \ ( fileOffset ) " ) 
 + / / NSLog ( " Write to file \ ( fileOffset ) " ) 
 fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; 
 fileHandle . writeData ( toWrite ) 
 - NSLog ( " Write to file \ ( fileOffset ) : end " ) 
 + / / NSLog ( " Write to file \ ( fileOffset ) : end " ) 
 return true ; 
 } 
 
 func close ( ) - > Bool { 
 - NSLog ( " Close file " ) 
 + / / NSLog ( " Close file " ) 
 self . fileHandle . synchronizeFile ( ) 
 self . fileHandle . closeFile ( ) 
 - NSLog ( " Close file end " ) 
 + / / NSLog ( " Close file end " ) 
 return true ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index c852ff6 . . 9d016ee 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 201 , 7 + 201 , 7 @ @ import DZNWebViewController 
 builder . setPhoneBookImportEnabled ( jboolean ( enablePhoneBookImport ) ) 
 builder . setVoiceCallsEnabled ( jboolean ( enableCalls ) ) 
 builder . setIsEnabledGroupedChatList ( false ) 
 - builder . setEnableFilesLogging ( true ) 
 + / / builder . setEnableFilesLogging ( true ) 
 
 / / Creating messenger 
 messenger = ACCocoaMessenger ( configuration : builder . build ( ) ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index d123257 . . a1397f7 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 243 , 7 + 243 , 7 @ @ public class AAAvatarView : UIView , YYAsyncLayerDelegate , ACFileEventCallback { 
 } 
 
 if image ! = nil { 
 - image ! . drawInRect ( CGRectMake ( 0 , 0 , r * 2 , r * 2 ) ) 
 + image ! . resize ( r * 2 , h : r * 2 ) . drawInRect ( CGRectMake ( 0 , 0 , r * 2 , r * 2 ) ) 
 } else { 
 / / Clean BG 
 CGContextSetFillColorWithColor ( context , UIColor . whiteColor ( ) . CGColor ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift 
 index 27972b3 . . ed9ae74 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / Cells / AATableViewCell . swift 
 @ @ - 95 , 7 + 95 , 9 @ @ public class AATableViewCell : UITableViewCell { 
 } 
 
 public override func setHighlighted ( highlighted : Bool , animated : Bool ) { 
 - super . setHighlighted ( highlighted , animated : animated ) 
 + if self . highlighted ! = highlighted { 
 + super . setHighlighted ( highlighted , animated : animated ) 
 + } 
 
 if ! highlighted { 
 if topSeparator . backgroundColor ! = AATableViewCell . separatorColor { 
 @ @ - 108 , 7 + 110 , 9 @ @ public class AATableViewCell : UITableViewCell { 
 } 
 
 public override func setSelected ( selected : Bool , animated : Bool ) { 
 - super . setSelected ( selected , animated : animated ) 
 + if self . selected ! = selected { 
 + super . setSelected ( selected , animated : animated ) 
 + } 
 
 if ! selected { 
 if topSeparator . backgroundColor ! = AATableViewCell . separatorColor { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java 
 index c7b5d94 . . eb6553a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / FilesModule . java 
 @ @ - 16 , 7 + 16 , 7 @ @ import im . actor . core . util . BaseKeyValueEngine ; 
 import im . actor . core . viewmodel . FileCallback ; 
 import im . actor . core . viewmodel . FileEventCallback ; 
 import im . actor . core . viewmodel . UploadFileCallback ; 
 - import im . actor . runtime . Storage ; 
 + import im . actor . runtime . * ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . Props ; 
 @ @ - 121 , 8 + 121 , 13 @ @ public class FilesModule extends AbsModule { 
 } ) ) ; 
 } 
 
 - public void startDownloading ( FileReference location ) { 
 - downloadManager . send ( new DownloadManager . StartDownload ( location ) ) ; 
 + public void startDownloading ( final FileReference location ) { 
 + im . actor . runtime . Runtime . dispatch ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + downloadManager . send ( new DownloadManager . StartDownload ( location ) ) ; 
 + } 
 + } ) ; 
 } 
 
 public void cancelDownloading ( long fileId ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java 
 index b8f9c3d . . 9337499 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java 
 @ @ - 340 , 13 + 340 , 13 @ @ public class ManagerActor extends Actor { 
 throw new IOException ( " Expected " + inSeq + " , got : " + seq ) ; 
 } 
 inSeq + + ; 
 - long start = Runtime . getActorTime ( ) ; 
 + / / long start = Runtime . getActorTime ( ) ; 
 EncryptedCBCPackage usEncryptedPackage = new EncryptedCBCPackage ( new DataInput ( encryptedPackage . getEncryptedPackage ( ) ) ) ; 
 byte [ ] ruPackage = serverUSDecryptor . decryptPackage ( ByteStrings . longToBytes ( seq ) , usEncryptedPackage . getIv ( ) , usEncryptedPackage . getEncryptedContent ( ) ) ; 
 EncryptedCBCPackage ruEncryptedPackage = new EncryptedCBCPackage ( new DataInput ( ruPackage ) ) ; 
 byte [ ] plainText = serverRUDecryptor . decryptPackage ( ByteStrings . longToBytes ( seq ) , ruEncryptedPackage . getIv ( ) , ruEncryptedPackage . getEncryptedContent ( ) ) ; 
 
 - Log . d ( TAG , " Package decrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; 
 + / / Log . d ( TAG , " Package decrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; 
 
 DataInput ptInput = new DataInput ( plainText ) ; 
 long messageId = ptInput . readLong ( ) ; 
 @ @ - 394 , 7 + 394 , 7 @ @ public class ManagerActor extends Actor { 
 if ( currentConnection ! = null ) { 
 if ( authKey ! = null ) { 
 int seq = outSeq + + ; 
 - long start = Runtime . getActorTime ( ) ; 
 + / / long start = Runtime . getActorTime ( ) ; 
 byte [ ] ruIv = new byte [ 16 ] ; 
 Crypto . nextBytes ( ruIv ) ; 
 byte [ ] usIv = new byte [ 16 ] ; 
 @ @ - 414 , 7 + 414 , 7 @ @ public class ManagerActor extends Actor { 
 byte [ ] pkg = bos . toByteArray ( ) ; 
 currentConnection . post ( pkg , 0 , pkg . length ) ; 
 
 - Log . d ( TAG , " Package encrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; 
 + / / Log . d ( TAG , " Package encrypted in " + ( Runtime . getActorTime ( ) - start ) + " ms , size : " + len ) ; 
 } else { 
 DataOutput bos = new DataOutput ( ) ; 
 bos . writeLong ( authId ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift 
 index 0b5b611 . . 276d705 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaWebRTCRuntime . swift 
 @ @ - 17 , 18 + 17 , 41 @ @ class CocoaWebRTCRuntime : NSObject , ARWebRTCRuntime { 
 } 
 
 func getUserAudio ( ) - > ARPromise { 
 - return ARPromises . success ( peerConnectionFactory . audioTrackWithID ( " audio0 " ) ) 
 + let audio = peerConnectionFactory . audioTrackWithID ( " audio0 " ) 
 + let mediaStream = peerConnectionFactory . mediaStreamWithLabel ( " ARDAMSa0 " ) 
 + mediaStream . addAudioTrack ( audio ) 
 + return ARPromises . success ( MediaStream ( stream : mediaStream ) ) 
 } 
 } 
 
 class MediaStream : NSObject , ARWebRTCMediaStream { 
 
 + let stream : RTCMediaStream 
 + 
 + init ( stream : RTCMediaStream ) { 
 + self . stream = stream 
 + } 
 + 
 func isEnabled ( ) - > jboolean { 
 return true 
 } 
 
 func setEnabledWithBoolean ( isEnabled : jboolean ) { 
 - 
 + for i in stream . audioTracks { 
 + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( isEnabled ) 
 + } 
 + for i in stream . videoTracks { 
 + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( isEnabled ) 
 + } 
 + } 
 + 
 + func close ( ) { 
 + for i in stream . audioTracks { 
 + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( false ) 
 + } 
 + for i in stream . videoTracks { 
 + ( i as ? RTCMediaStreamTrack ) ? . setEnabled ( false ) 
 + } 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 6df9661 . . afc0b49 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 636 , 13 + 636 , 13 @ @ public class JsFacade implements Exportable { 
 
 / / Calls 
 
 - public JsPromise doCall ( final int uid ) { 
 + public JsPromise doCall ( final int uid ) { 
 return JsPromise . create ( new JsPromiseExecutor ( ) { 
 @ Override 
 public void execute ( ) { 
 - messenger . doCall ( uid ) . start ( new CommandCallback < ResponseDoCall > ( ) { 
 + messenger . doCall ( uid ) . start ( new CommandCallback < Long > ( ) { 
 @ Override 
 - public void onResult ( ResponseDoCall res ) { 
 + public void onResult ( Long res ) { 
 Log . d ( TAG , " doCall : result " ) ; 
 resolve ( ) ; 
 } 
 @ @ - 657 , 11 + 657 , 11 @ @ public class JsFacade implements Exportable { 
 } ) ; 
 } 
 
 - public void answerCall ( String callId ) { 
 + public void answerCall ( String callId ) { 
 messenger . answerCall ( Long . parseLong ( callId ) ) ; 
 } 
 
 - public void endCall ( String callId ) { 
 + public void endCall ( String callId ) { 
 messenger . endCall ( Long . parseLong ( callId ) ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 46c61df . . a003cbf 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 43 , 7 + 43 , 6 @ @ public class CallActor extends EventBusActor { 
 } 
 
 public final void sendSignalingMessage ( int uid , long deviceId , ApiWebRTCSignaling signaling ) { 
 - / / Log . d ( TAG , " sendSignaling " ) ; 
 try { 
 sendMessage ( uid , deviceId , signaling . buildContainer ( ) ) ; 
 } catch ( IOException e ) { 
 @ @ - 54 , 9 + 53 , 6 @ @ public class CallActor extends EventBusActor { 
 
 @ Override 
 public final void onMessageReceived ( @ Nullable Integer senderId , @ Nullable Long senderDeviceId , byte [ ] data ) { 
 - / / Log . d ( TAG , " onMessageReceived : start " ) ; 
 - 
 - / / Ignoring messages without sender 
 if ( senderId = = null | | senderDeviceId = = null ) { 
 return ; 
 } 
 @ @ - 72 , 14 + 68 , 45 @ @ public class CallActor extends EventBusActor { 
 
 Log . d ( TAG , " onMessageReceived : " + signaling ) ; 
 onSignalingMessage ( senderId , senderDeviceId , signaling ) ; 
 - / / Log . d ( TAG , " onMessageReceived : " + signaling + " : end " ) ; 
 } 
 
 @ Override 
 + public void onBusStopped ( ) { 
 + super . onBusStopped ( ) ; 
 + for ( int uid : peerConnections . keySet ( ) ) { 
 + HashMap < Long , ActorRef > peers = peerConnections . get ( uid ) ; 
 + for ( ActorRef p : peers . values ( ) ) { 
 + p . send ( new PeerConnectionActor . DoStop ( ) ) ; 
 + } 
 + } 
 + peerConnections . clear ( ) ; 
 + } 
 + 
 + public final void doEndCall ( ) { 
 + shutdown ( ) ; 
 + } 
 + 
 + protected ActorRef getPeer ( int uid , long deviceId ) { 
 + if ( ! peerConnections . containsKey ( uid ) ) { 
 + peerConnections . put ( uid , new HashMap < Long , ActorRef > ( ) ) ; 
 + } 
 + HashMap < Long , ActorRef > refs = peerConnections . get ( uid ) ; 
 + if ( refs . containsKey ( deviceId ) ) { 
 + return refs . get ( deviceId ) ; 
 + } 
 + ActorRef ref = system ( ) . actorOf ( getPath ( ) + " / uid : " + uid + " / " + deviceId , 
 + PeerConnectionActor . CONSTRUCTOR ( self ( ) , uid , deviceId , context ( ) ) ) ; 
 + refs . put ( deviceId , ref ) ; 
 + return ref ; 
 + } 
 + 
 + / / 
 + / / Messages 
 + / / 
 + 
 + @ Override 
 public void onReceive ( Object message ) { 
 - / / Log . d ( TAG , " onReceive " ) ; 
 if ( message instanceof PeerConnectionActor . DoAnswer ) { 
 - / / Log . d ( TAG , " onReceive : doAnswer " ) ; 
 PeerConnectionActor . DoAnswer answer = ( PeerConnectionActor . DoAnswer ) message ; 
 sendSignalingMessage ( answer . getUid ( ) , answer . getDeviceId ( ) , 
 new ApiAnswer ( 0 , answer . getSdp ( ) ) ) ; 
 @ @ - 91 , 23 + 118 , 14 @ @ public class CallActor extends EventBusActor { 
 PeerConnectionActor . DoCandidate candidate = ( PeerConnectionActor . DoCandidate ) message ; 
 sendSignalingMessage ( candidate . getUid ( ) , candidate . getDeviceId ( ) , 
 new ApiCandidate ( 0 , candidate . getIndex ( ) , candidate . getId ( ) , candidate . getSdp ( ) ) ) ; 
 + } else if ( message instanceof DoEndCall ) { 
 + doEndCall ( ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 - / / Log . d ( TAG , " onReceive : End " ) ; 
 } 
 
 - protected ActorRef getPeer ( int uid , long deviceId ) { 
 - if ( ! peerConnections . containsKey ( uid ) ) { 
 - peerConnections . put ( uid , new HashMap < Long , ActorRef > ( ) ) ; 
 - } 
 - HashMap < Long , ActorRef > refs = peerConnections . get ( uid ) ; 
 - if ( refs . containsKey ( deviceId ) ) { 
 - return refs . get ( deviceId ) ; 
 - } 
 - ActorRef ref = system ( ) . actorOf ( getPath ( ) + " / uid : " + uid + " / " + deviceId , 
 - PeerConnectionActor . CONSTRUCTOR ( self ( ) , uid , deviceId , context ( ) ) ) ; 
 - refs . put ( deviceId , ref ) ; 
 - return ref ; 
 + public static class DoEndCall { 
 + 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 75e8a4f . . f9c6ac5 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 118 , 7 + 118 , 10 @ @ public class CallManagerActor extends ModuleActor { 
 } 
 
 private void doEndCall ( long callId ) { 
 - 
 + ActorRef currentCall = currentCalls . remove ( callId ) ; 
 + if ( currentCall ! = null ) { 
 + currentCall . send ( new CallActor . DoEndCall ( ) ) ; 
 + } 
 } 
 
 / / 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java 
 index a8c220f . . c6215ac 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / PeerConnectionActor . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import im . actor . runtime . WebRTC ; 
 import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . messages . PoisonPill ; 
 import im . actor . runtime . function . Consumer ; 
 import im . actor . runtime . function . Function ; 
 import im . actor . runtime . function . FunctionTupled2 ; 
 @ @ - 46 , 6 + 47 , 8 @ @ public class PeerConnectionActor extends ModuleActor { 
 @ NotNull 
 private WebRTCPeerConnection peerConnection ; 
 @ NotNull 
 + private WebRTCMediaStream stream ; 
 + @ NotNull 
 private State state = State . INITIALIZATION ; 
 
 public PeerConnectionActor ( @ NotNull ActorRef root , int uid , long deviceId , @ NotNull ModuleContext context ) { 
 @ @ - 73 , 6 + 76 , 7 @ @ public class PeerConnectionActor extends ModuleActor { 
 Promises . tuple ( WebRTC . createPeerConnection ( ) , WebRTC . getUserAudio ( ) ) . map ( new FunctionTupled2 < WebRTCPeerConnection , WebRTCMediaStream , WebRTCPeerConnection > ( ) { 
 @ Override 
 public WebRTCPeerConnection apply ( WebRTCPeerConnection webRTCPeerConnection , WebRTCMediaStream stream ) { 
 + PeerConnectionActor . this . stream = stream ; 
 webRTCPeerConnection . addOwnStream ( stream ) ; 
 return webRTCPeerConnection ; 
 } 
 @ @ - 240 , 6 + 244 , 14 @ @ public class PeerConnectionActor extends ModuleActor { 
 peerConnection . addCandidate ( index , id , sdp ) ; 
 } 
 
 + public void onEnded ( ) { 
 + peerConnection . close ( ) ; 
 + stream . close ( ) ; 
 + isReady = false ; 
 + state = State . CLOSED ; 
 + self ( ) . send ( PoisonPill . INSTANCE ) ; 
 + } 
 + 
 @ Override 
 public void onReceive ( Object message ) { 
 if ( message instanceof OnOffer ) { 
 @ @ - 267 , 6 + 279 , 12 @ @ public class PeerConnectionActor extends ModuleActor { 
 return ; 
 } 
 onOfferNeeded ( ) ; 
 + } else if ( message instanceof DoStop ) { 
 + if ( ! isReady ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 + onEnded ( ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 @ @ - 445 , 7 + 463 , 11 @ @ public class PeerConnectionActor extends ModuleActor { 
 } 
 } 
 
 + public static class DoStop { 
 + 
 + } 
 + 
 private enum State { 
 - INITIALIZATION , WAITING _ HANDSHAKE , WAITING _ ANSWER , READY 
 + INITIALIZATION , WAITING _ HANDSHAKE , WAITING _ ANSWER , READY , CLOSED 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java 
 index 1c3d930 . . f35b6f2 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / MediaStream . java 
 @ @ - 35 , 7 + 35 , 11 @ @ public class MediaStream implements WebRTCMediaStream { 
 } 
 } 
 
 - public void dispose ( ) { 
 - audio . reset ( ) ; 
 + @ Override 
 + public void close ( ) { 
 + if ( audio ! = null ) { 
 + audio . reset ( ) ; 
 + } 
 + stream . stopAll ( ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java 
 index 6b34737 . . 90be958 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / webrtc / PeerConnection . java 
 @ @ - 177 , 7 + 177 , 7 @ @ public class PeerConnection implements WebRTCPeerConnection { 
 public void close ( ) { 
 peerConnection . close ( ) ; 
 for ( MediaStream s : streams . values ( ) ) { 
 - s . dispose ( ) ; 
 + s . close ( ) ; 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java 
 index d0d8cea . . 10cc600 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / webrtc / WebRTCMediaStream . java 
 @ @ - 18 , 4 + 18 , 9 @ @ public interface WebRTCMediaStream { 
 * @ param isEnabled is track enabled 
 * / 
 void setEnabled ( boolean isEnabled ) ; 
 + 
 + / * * 
 + * Closing stream 
 + * / 
 + void close ( ) ; 
 }
