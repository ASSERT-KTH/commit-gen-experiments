BLEU SCORE: 0.27824623288353134

TEST MSG: wip ( android ) : VERY BIG ChatActivity refactoring ( minor code cleanup )
GENERATED MSG: wip ( android ) : Commenting code

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 62240a1 . . 2ff6af3 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 36 , 6 + 36 , 8 @ @ public class Application extends ActorSDKApplication { < nl > < nl > ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > style . setDialogsActiveTextColor ( 0xff5882ac ) ; < nl > + style . setShowAvatarPrivateInTitle ( false ) ; < nl > + < nl > ActorSDK . sharedActor ( ) . setFastShareEnabled ( true ) ; < nl > < nl > ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > @ @ - 45 , 6 + 47 , 7 @ @ public class Application extends ActorSDKApplication { < nl > < nl > ActorSDK . sharedActor ( ) . setVideoCallsEnabled ( true ) ; < nl > < nl > + < nl > / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > @ @ - 69 , 7 + 72 , 7 @ @ public class Application extends ActorSDKApplication { < nl > } < nl > < nl > private class ActorSDKDelegate extends BaseActorSDKDelegate { < nl > - < nl > + < nl > @ Nullable < nl > @ Override < nl > public AbsAttachFragment fragmentForAttachMenu ( Peer peer ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index f1b9685 . . 17f7265 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 62 , 11 + 62 , 6 @ @ public class ChatActivity extends BaseActivity { < nl > / / autocompleteList = ( RecyclerListView ) findViewById ( R . id . mentionsList ) ; < nl > / / autocompleteList . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > < nl > - < nl > - / / emptyBotSend = findViewById ( R . id . botEmptyTextBlock ) ; < nl > - / / emptyBotHint = ( TextView ) findViewById ( R . id . botEmptyHint ) ; < nl > - < nl > - / / checkEmptyBot ( ) ; < nl > } < nl > < nl > < nl > @ @ - 92 , 19 + 87 , 6 @ @ public class ChatActivity extends BaseActivity { < nl > return mode ; < nl > } < nl > < nl > - / / @ Override < nl > - / / protected void onPerformBind ( ) { < nl > - / / super . onPerformBind ( ) ; < nl > - / / / / Bind empty bot about < nl > - / / / / if ( isBot ) { < nl > - / / / / bind ( users ( ) . get ( peer . getPeerId ( ) ) . getAbout ( ) , ( about , valueModel ) - > { < nl > - / / / / emptyBotHint . setText ( ( about ! = null & & ! about . isEmpty ( ) ) ? about : getString ( R . string . chat _ empty _ bot _ about ) ) ; < nl > - / / / / } ) ; < nl > - / / / / } < nl > - / / } < nl > - < nl > - / / Mentions < nl > - / / Bot commands < nl > < nl > / / private void showAutoComplete ( boolean initEmpty , boolean isMentions ) { < nl > / / if ( isAutocompleteVisible ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml < nl > index 593ca9c . . b254189 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml < nl > @ @ - 43 , 6 + 43 , 7 @ @ < nl > < item name = " windowNoTitle " > true < / item > < nl > < item name = " android : windowActionBar " > false < / item > < nl > < item name = " android : windowNoTitle " > true < / item > < nl > + < item name = " windowActionModeOverlay " > true < / item > < nl > < / style > < nl > < nl > < style name = " CommonActivityTheme " parent = " AppToolbarTheme " >
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 8674ea8 . . dcd2ef1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > import java . util . Locale ; < nl > @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { < nl > / * * < nl > * Delegate < nl > * / < nl > + @ NotNull < nl > private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; < nl > / * * < nl > * ActivityManager < nl > @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { < nl > if ( pushId ! = 0 ) { < nl > pushManager . registerPush ( application ) ; < nl > } < nl > - } catch ( ClassNotFoundException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( InstantiationException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > + } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > - < nl > - < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { < nl > this . pushId = pushId ; < nl > } < nl > < nl > + / * * < nl > + * Getting Application Delegate . < nl > + * < nl > + * @ return Application Delegate < nl > + * / < nl > + @ NotNull < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > < nl > - public void setDelegate ( ActorSDKDelegate delegate ) { < nl > + / * * < nl > + * Setting Application Delegate . Useful for hacking various parts of SDK < nl > + * < nl > + * @ param delegate Application Delegate < nl > + * / < nl > + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { < nl > this . delegate = delegate ; < nl > } < nl > < nl > + @ Deprecated < nl > public ActivityManager getActivityManager ( ) { < nl > return activityManager ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 0ddb728 . . f404f54 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; < nl > < nl > import android . app . Application ; < nl > < nl > + / * * < nl > + * Implementation of Application object that handles everything required for creating and < nl > + * managing Actor SDK < nl > + * / < nl > public class ActorSDKApplication extends Application { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index 9c2321e . . 2488fa2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; < nl > < nl > import android . graphics . Color ; < nl > < nl > + / * * < nl > + * Actor Styling class < nl > + * / < nl > public class ActorStyle { < nl > private int toolBarColor = 0 ; < nl > private int fabColor = 0 ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index de2e346 . . 68ec210 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > < nl > + / * * < nl > + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead < nl > + * of implementing ActorSDKDelegate < nl > + * / < nl > public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > - < nl > + < nl > + / / < nl > + / / Authentication Activity < nl > + / / < nl > + < nl > + @ Deprecated < nl > @ Override < nl > - public ActorIntent getAuthStartIntent ( ) { < nl > - return null ; < nl > + public AuthState getAuthStartState ( ) { < nl > + return AuthState . AUTH _ START ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartAfterLoginIntent ( ) { < nl > - return null ; < nl > + public BaseAuthFragment getSignFragment ( ) { < nl > + return new SignPhoneFragment ( ) ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartIntent ( ) { < nl > + public ActorIntent getAuthStartIntent ( ) { < nl > return null ; < nl > } < nl > < nl > + / / < nl > + / / Starting Activity < nl > + / / < nl > + < nl > + / * * < nl > + * Return non - null to open specific Activity after user ' s successful log in . < nl > + * If null is specified , result of getStartIntent is used . < nl > + * < nl > + * @ return ActorIntent for activity after login < nl > + * / < nl > @ Override < nl > - public AuthState getAuthStartState ( ) { < nl > - return AuthState . AUTH _ START ; < nl > + public ActorIntent getStartAfterLoginIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / * * < nl > + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch < nl > + * standard Messaging activity with contacts and recent list < nl > + * < nl > + * @ return ActorIntent for start activity < nl > + * / < nl > @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignPhoneFragment ( ) ; < nl > + public ActorIntent getStartIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / / < nl > + / / Hacking settings activity < nl > + / / < nl > + < nl > @ Override < nl > public View getBeforeNickSettingsView ( Context context ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > index dd19ba4 . . 64c5706 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . fragment . auth . AuthActivity ; < nl > < nl > - / * * < nl > - * Created by root on 10 / 20 / 15 . < nl > - * / < nl > + @ Deprecated < nl > public class ActivityManager { < nl > < nl > - < nl > public void startAuthActivity ( Context context ) { < nl > startAuthActivity ( context , null ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 62240a1 . . 2ff6af3 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 36 , 6 + 36 , 8 @ @ public class Application extends ActorSDKApplication { 
 
 ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 style . setDialogsActiveTextColor ( 0xff5882ac ) ; 
 + style . setShowAvatarPrivateInTitle ( false ) ; 
 + 
 ActorSDK . sharedActor ( ) . setFastShareEnabled ( true ) ; 
 
 ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 @ @ - 45 , 6 + 47 , 7 @ @ public class Application extends ActorSDKApplication { 
 
 ActorSDK . sharedActor ( ) . setVideoCallsEnabled ( true ) ; 
 
 + 
 / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 @ @ - 69 , 7 + 72 , 7 @ @ public class Application extends ActorSDKApplication { 
 } 
 
 private class ActorSDKDelegate extends BaseActorSDKDelegate { 
 - 
 + 
 @ Nullable 
 @ Override 
 public AbsAttachFragment fragmentForAttachMenu ( Peer peer ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index f1b9685 . . 17f7265 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 62 , 11 + 62 , 6 @ @ public class ChatActivity extends BaseActivity { 
 / / autocompleteList = ( RecyclerListView ) findViewById ( R . id . mentionsList ) ; 
 / / autocompleteList . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 
 - 
 - / / emptyBotSend = findViewById ( R . id . botEmptyTextBlock ) ; 
 - / / emptyBotHint = ( TextView ) findViewById ( R . id . botEmptyHint ) ; 
 - 
 - / / checkEmptyBot ( ) ; 
 } 
 
 
 @ @ - 92 , 19 + 87 , 6 @ @ public class ChatActivity extends BaseActivity { 
 return mode ; 
 } 
 
 - / / @ Override 
 - / / protected void onPerformBind ( ) { 
 - / / super . onPerformBind ( ) ; 
 - / / / / Bind empty bot about 
 - / / / / if ( isBot ) { 
 - / / / / bind ( users ( ) . get ( peer . getPeerId ( ) ) . getAbout ( ) , ( about , valueModel ) - > { 
 - / / / / emptyBotHint . setText ( ( about ! = null & & ! about . isEmpty ( ) ) ? about : getString ( R . string . chat _ empty _ bot _ about ) ) ; 
 - / / / / } ) ; 
 - / / / / } 
 - / / } 
 - 
 - / / Mentions 
 - / / Bot commands 
 
 / / private void showAutoComplete ( boolean initEmpty , boolean isMentions ) { 
 / / if ( isAutocompleteVisible ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml 
 index 593ca9c . . b254189 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / styles . xml 
 @ @ - 43 , 6 + 43 , 7 @ @ 
 < item name = " windowNoTitle " > true < / item > 
 < item name = " android : windowActionBar " > false < / item > 
 < item name = " android : windowNoTitle " > true < / item > 
 + < item name = " windowActionModeOverlay " > true < / item > 
 < / style > 
 
 < style name = " CommonActivityTheme " parent = " AppToolbarTheme " >

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 8674ea8 . . dcd2ef1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 
 + import org . jetbrains . annotations . NotNull ; 
 + import org . jetbrains . annotations . Nullable ; 
 + 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { 
 / * * 
 * Delegate 
 * / 
 + @ NotNull 
 private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; 
 / * * 
 * ActivityManager 
 @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { 
 if ( pushId ! = 0 ) { 
 pushManager . registerPush ( application ) ; 
 } 
 - } catch ( ClassNotFoundException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( InstantiationException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( IllegalAccessException e ) { 
 + } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 - 
 - 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { 
 this . pushId = pushId ; 
 } 
 
 + / * * 
 + * Getting Application Delegate . 
 + * 
 + * @ return Application Delegate 
 + * / 
 + @ NotNull 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 
 - public void setDelegate ( ActorSDKDelegate delegate ) { 
 + / * * 
 + * Setting Application Delegate . Useful for hacking various parts of SDK 
 + * 
 + * @ param delegate Application Delegate 
 + * / 
 + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { 
 this . delegate = delegate ; 
 } 
 
 + @ Deprecated 
 public ActivityManager getActivityManager ( ) { 
 return activityManager ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 0ddb728 . . f404f54 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; 
 
 import android . app . Application ; 
 
 + / * * 
 + * Implementation of Application object that handles everything required for creating and 
 + * managing Actor SDK 
 + * / 
 public class ActorSDKApplication extends Application { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index 9c2321e . . 2488fa2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; 
 
 import android . graphics . Color ; 
 
 + / * * 
 + * Actor Styling class 
 + * / 
 public class ActorStyle { 
 private int toolBarColor = 0 ; 
 private int fabColor = 0 ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index de2e346 . . 68ec210 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; 
 import im . actor . sdk . intents . ActorIntent ; 
 
 + / * * 
 + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead 
 + * of implementing ActorSDKDelegate 
 + * / 
 public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 - 
 + 
 + / / 
 + / / Authentication Activity 
 + / / 
 + 
 + @ Deprecated 
 @ Override 
 - public ActorIntent getAuthStartIntent ( ) { 
 - return null ; 
 + public AuthState getAuthStartState ( ) { 
 + return AuthState . AUTH _ START ; 
 } 
 
 @ Override 
 - public ActorIntent getStartAfterLoginIntent ( ) { 
 - return null ; 
 + public BaseAuthFragment getSignFragment ( ) { 
 + return new SignPhoneFragment ( ) ; 
 } 
 
 @ Override 
 - public ActorIntent getStartIntent ( ) { 
 + public ActorIntent getAuthStartIntent ( ) { 
 return null ; 
 } 
 
 + / / 
 + / / Starting Activity 
 + / / 
 + 
 + / * * 
 + * Return non - null to open specific Activity after user ' s successful log in . 
 + * If null is specified , result of getStartIntent is used . 
 + * 
 + * @ return ActorIntent for activity after login 
 + * / 
 @ Override 
 - public AuthState getAuthStartState ( ) { 
 - return AuthState . AUTH _ START ; 
 + public ActorIntent getStartAfterLoginIntent ( ) { 
 + return null ; 
 } 
 
 + / * * 
 + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch 
 + * standard Messaging activity with contacts and recent list 
 + * 
 + * @ return ActorIntent for start activity 
 + * / 
 @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignPhoneFragment ( ) ; 
 + public ActorIntent getStartIntent ( ) { 
 + return null ; 
 } 
 
 + / / 
 + / / Hacking settings activity 
 + / / 
 + 
 @ Override 
 public View getBeforeNickSettingsView ( Context context ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 index dd19ba4 . . 64c5706 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . fragment . auth . AuthActivity ; 
 
 - / * * 
 - * Created by root on 10 / 20 / 15 . 
 - * / 
 + @ Deprecated 
 public class ActivityManager { 
 
 - 
 public void startAuthActivity ( Context context ) { 
 startAuthActivity ( context , null ) ; 
 }
