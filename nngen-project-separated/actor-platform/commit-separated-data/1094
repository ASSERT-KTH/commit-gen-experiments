BLEU SCORE: 0.525624059490303

TEST MSG: fix ( iOS ) : fix stickers collectionview warnings
GENERATED MSG: fix ( iOS ) : fix fetch photos from phassets

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift < nl > index 3610de4 . . c566747 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift < nl > @ @ - 162 , 6 + 162 , 9 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > < nl > self . collectionView . contentInset = UIEdgeInsetsMake ( 15 , 10 , 15 , 10 ) < nl > < nl > + self . collectionView . preservesSuperviewLayoutMargins = false < nl > + self . collectionView . layoutMargins = UIEdgeInsetsZero < nl > + < nl > < nl > / / add collection view as subview < nl > self . addSubview ( self . collectionView ) < nl > @ @ - 203 , 6 + 206 , 7 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > stickerCell . stickerImage . backgroundColor = UIColor . clearColor ( ) < nl > stickerCell . bind ( sickerPack . stickers [ indexPath . row ] , clearPrev : true ) < nl > < nl > + < nl > return stickerCell ; < nl > < nl > } < nl > @ @ - 216 , 6 + 220 , 13 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > < nl > } < nl > < nl > + func collectionView ( collectionView : UICollectionView , willDisplayCell cell : UICollectionViewCell , forItemAtIndexPath indexPath : NSIndexPath ) { < nl > + < nl > + < nl > + < nl > + < nl > + } < nl > + < nl > < nl > func loadStickers ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift < nl > index 9db3ba1 . . b53f1bf 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift < nl > @ @ - 72 , 6 + 72 , 8 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > } < nl > < nl > private func fetchAssets ( ) { < nl > + self . assets = [ PHAsset ] ( ) < nl > + < nl > let options = PHFetchOptions ( ) < nl > options . sortDescriptors = [ NSSortDescriptor ( key : " creationDate " , ascending : false ) ] < nl > < nl > @ @ - 86 , 7 + 88 , 7 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > < nl > options . predicate = NSPredicate ( format : " mediaType = % d " , PHAssetMediaType . Image . rawValue ) < nl > < nl > - let fetchLimit = 50 < nl > + let fetchLimit = 100 < nl > if # available ( iOS 9 , * ) { < nl > options . fetchLimit = fetchLimit < nl > } < nl > @ @ - 97 , 21 + 99 , 23 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > requestOptions . deliveryMode = . FastFormat < nl > < nl > result . enumerateObjectsUsingBlock { asset , _ , stop in < nl > - defer { < nl > + / / defer { < nl > if self . assets . count > fetchLimit { < nl > stop . initialize ( true ) < nl > } < nl > - } < nl > + / / } < nl > < nl > if let asset = asset as ? PHAsset { < nl > + self . assets . append ( asset ) < nl > self . imageManager . requestImageDataForAsset ( asset , options : requestOptions ) { data , _ , _ , info in < nl > if data ! = nil { < nl > - self . assets . append ( asset ) < nl > self . prefetchImagesForAsset ( asset ) < nl > } < nl > } < nl > } < nl > } < nl > + < nl > + < nl > } < nl > < nl > private func prefetchImagesForAsset ( asset : PHAsset ) { < nl > @ @ - 158 , 6 + 162 , 7 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > < nl > func collectionView ( collectionView : UICollectionView , numberOfItemsInSection section : Int ) - > Int { < nl > print ( " ASSSEEETS = = = \ ( self . assets . count ) " ) < nl > + < nl > return self . assets . count < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift 
 index 3610de4 . . c566747 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAStickersView . swift 
 @ @ - 162 , 6 + 162 , 9 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 
 self . collectionView . contentInset = UIEdgeInsetsMake ( 15 , 10 , 15 , 10 ) 
 
 + self . collectionView . preservesSuperviewLayoutMargins = false 
 + self . collectionView . layoutMargins = UIEdgeInsetsZero 
 + 
 
 / / add collection view as subview 
 self . addSubview ( self . collectionView ) 
 @ @ - 203 , 6 + 206 , 7 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 stickerCell . stickerImage . backgroundColor = UIColor . clearColor ( ) 
 stickerCell . bind ( sickerPack . stickers [ indexPath . row ] , clearPrev : true ) 
 
 + 
 return stickerCell ; 
 
 } 
 @ @ - 216 , 6 + 220 , 13 @ @ class AAStickersView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 
 } 
 
 + func collectionView ( collectionView : UICollectionView , willDisplayCell cell : UICollectionViewCell , forItemAtIndexPath indexPath : NSIndexPath ) { 
 + 
 + 
 + 
 + 
 + } 
 + 
 
 func loadStickers ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift 
 index 9db3ba1 . . b53f1bf 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift 
 @ @ - 72 , 6 + 72 , 8 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 } 
 
 private func fetchAssets ( ) { 
 + self . assets = [ PHAsset ] ( ) 
 + 
 let options = PHFetchOptions ( ) 
 options . sortDescriptors = [ NSSortDescriptor ( key : " creationDate " , ascending : false ) ] 
 
 @ @ - 86 , 7 + 88 , 7 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 
 options . predicate = NSPredicate ( format : " mediaType = % d " , PHAssetMediaType . Image . rawValue ) 
 
 - let fetchLimit = 50 
 + let fetchLimit = 100 
 if # available ( iOS 9 , * ) { 
 options . fetchLimit = fetchLimit 
 } 
 @ @ - 97 , 21 + 99 , 23 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 requestOptions . deliveryMode = . FastFormat 
 
 result . enumerateObjectsUsingBlock { asset , _ , stop in 
 - defer { 
 + / / defer { 
 if self . assets . count > fetchLimit { 
 stop . initialize ( true ) 
 } 
 - } 
 + / / } 
 
 if let asset = asset as ? PHAsset { 
 + self . assets . append ( asset ) 
 self . imageManager . requestImageDataForAsset ( asset , options : requestOptions ) { data , _ , _ , info in 
 if data ! = nil { 
 - self . assets . append ( asset ) 
 self . prefetchImagesForAsset ( asset ) 
 } 
 } 
 } 
 } 
 + 
 + 
 } 
 
 private func prefetchImagesForAsset ( asset : PHAsset ) { 
 @ @ - 158 , 6 + 162 , 7 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 
 func collectionView ( collectionView : UICollectionView , numberOfItemsInSection section : Int ) - > Int { 
 print ( " ASSSEEETS = = = \ ( self . assets . count ) " ) 
 + 
 return self . assets . count 
 }
