BLEU SCORE: 0.23196101068401995

TEST MSG: fix ( server : dialogs ) : return UpdateChatDelete on chat delete
GENERATED MSG: fix ( server : messaging ) : don ' t send unnessesary message

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > index 090a6d0 . . a177f55 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > @ @ - 219 , 8 + 219 , 8 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) < nl > commit ( e ) < nl > ( for { < nl > _ ← db . run ( HistoryMessageRepo . deleteAll ( userId , peer ) ) < nl > - _ ← seqUpdExt . deliverUserUpdate ( userId , UpdateChatDelete ( peer . asStruct ) ) < nl > - seqState ← sendChatGroupsChanged ( clientAuthId ) < nl > + seqState ← seqUpdExt . deliverClientUpdate ( userId , clientAuthId , update = UpdateChatDelete ( peer . asStruct ) ) < nl > + _ ← sendChatGroupsChanged ( 0L ) < nl > / / _ = thatDialog ! PoisonPill / / kill that dialog would be good < nl > } yield seqState ) pipeTo sender ( ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > index 6c0d99c . . 939a4da 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > @ @ - 141 , 13 + 141 , 10 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) < nl > persistAllAsync ( events ) ( e ⇒ commit ( e ) ) < nl > < nl > deferAsync ( ( ) ) { _ ⇒ < nl > - sender ( ) ! ( ( ) ) < nl > - < nl > if ( ! isCreated | | ! isShown ) < nl > sendChatGroupsChanged ( ) < nl > } < nl > case None ⇒ < nl > - sender ( ) ! ( ( ) ) < nl > } < nl > case Archive ( Some ( peer ) , clientAuthSid ) ⇒ archive ( peer , clientAuthSid map ( _ . value ) ) < nl > case Unarchive ( Some ( peer ) , clientAuthSid ) ⇒ unarchive ( peer , clientAuthSid map ( _ . value ) )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 index 090a6d0 . . a177f55 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 @ @ - 219 , 8 + 219 , 8 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) 
 commit ( e ) 
 ( for { 
 _ ← db . run ( HistoryMessageRepo . deleteAll ( userId , peer ) ) 
 - _ ← seqUpdExt . deliverUserUpdate ( userId , UpdateChatDelete ( peer . asStruct ) ) 
 - seqState ← sendChatGroupsChanged ( clientAuthId ) 
 + seqState ← seqUpdExt . deliverClientUpdate ( userId , clientAuthId , update = UpdateChatDelete ( peer . asStruct ) ) 
 + _ ← sendChatGroupsChanged ( 0L ) 
 / / _ = thatDialog ! PoisonPill / / kill that dialog would be good 
 } yield seqState ) pipeTo sender ( ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 index 6c0d99c . . 939a4da 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 @ @ - 141 , 13 + 141 , 10 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) 
 persistAllAsync ( events ) ( e ⇒ commit ( e ) ) 
 
 deferAsync ( ( ) ) { _ ⇒ 
 - sender ( ) ! ( ( ) ) 
 - 
 if ( ! isCreated | | ! isShown ) 
 sendChatGroupsChanged ( ) 
 } 
 case None ⇒ 
 - sender ( ) ! ( ( ) ) 
 } 
 case Archive ( Some ( peer ) , clientAuthSid ) ⇒ archive ( peer , clientAuthSid map ( _ . value ) ) 
 case Unarchive ( Some ( peer ) , clientAuthSid ) ⇒ unarchive ( peer , clientAuthSid map ( _ . value ) )
