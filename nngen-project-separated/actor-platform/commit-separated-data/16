BLEU SCORE: 0.24388705525768425

TEST MSG: fix ( android ) : recover read _ contacts permission request
GENERATED MSG: fix ( android ) : replace update hash with incremental value , fix picture update

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java < nl > index 1ef914f . . 1afc353 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java < nl > @ @ - 1 , 11 + 1 , 16 @ @ < nl > package im . actor . sdk . controllers . root ; < nl > < nl > + import android . Manifest ; < nl > import android . content . Intent ; < nl > + import android . content . pm . PackageManager ; < nl > import android . graphics . drawable . ColorDrawable ; < nl > import android . os . Bundle ; < nl > + import android . support . v13 . app . ActivityCompat ; < nl > import android . support . v4 . app . Fragment ; < nl > + import android . support . v4 . content . ContextCompat ; < nl > import android . support . v7 . widget . Toolbar ; < nl > < nl > + import im . actor . core . viewmodel . AppStateVM ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > @ @ - 16 , 11 + 21 , 19 @ @ import im . actor . sdk . controllers . tools . InviteHandler ; < nl > * / < nl > public class RootActivity extends BaseFragmentActivity { < nl > < nl > + private static final int PERMISSIONS _ REQUEST _ READ _ CONTACTS = 1 ; < nl > + < nl > @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > super . onCreate ( savedInstanceState ) ; < nl > setContentView ( R . layout . activity _ root ) ; < nl > < nl > + if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . READ _ CONTACTS ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > + ActivityCompat . requestPermissions ( this , < nl > + new String [ ] { Manifest . permission . READ _ CONTACTS } , < nl > + PERMISSIONS _ REQUEST _ READ _ CONTACTS ) ; < nl > + } < nl > + < nl > / / < nl > / / Configure Toolbar < nl > / / < nl > @ @ - 49 , 4 + 62 , 24 @ @ public class RootActivity extends BaseFragmentActivity { < nl > super . onNewIntent ( intent ) ; < nl > InviteHandler . handleIntent ( this , intent ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onRequestPermissionsResult ( int requestCode , < nl > + String permissions [ ] , int [ ] grantResults ) { < nl > + switch ( requestCode ) { < nl > + case PERMISSIONS _ REQUEST _ READ _ CONTACTS : { < nl > + / / If request is cancelled , the result arrays are empty . < nl > + if ( grantResults . length > 0 < nl > + & & grantResults [ 0 ] = = PackageManager . PERMISSION _ GRANTED ) { < nl > + < nl > + AppStateVM appStateVM = ActorSDK . sharedActor ( ) . getMessenger ( ) . getAppStateVM ( ) ; < nl > + if ( appStateVM . isDialogsLoaded ( ) & & appStateVM . isContactsLoaded ( ) & & appStateVM . isSettingsLoaded ( ) ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . startImport ( ) ; < nl > + } < nl > + < nl > + } < nl > + } < nl > + < nl > + } < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java < nl > index 741e983 . . b37df56 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java < nl > @ @ - 40 , 6 + 40 , 7 @ @ public class MediaPickerFragment extends BaseFragment { < nl > private static final int REQUEST _ LOCATION = 4 ; < nl > private static final int REQUEST _ CONTACT = 5 ; < nl > private static final int PERMISSIONS _ REQUEST _ CAMERA = 6 ; < nl > + private static final int PERMISSIONS _ REQUEST _ CONTACTS = 7 ; < nl > < nl > private String pendingFile ; < nl > private boolean pickCropped ; < nl > @ @ - 135 , 6 + 136 , 22 @ @ public class MediaPickerFragment extends BaseFragment { < nl > public void requestContact ( ) { < nl > this . pickCropped = false ; < nl > < nl > + / / < nl > + / / Checking permissions < nl > + / / < nl > + Activity activity = getActivity ( ) ; < nl > + if ( activity ! = null ) { < nl > + if ( Build . VERSION . SDK _ INT > = 23 ) { < nl > + if ( ContextCompat . checkSelfPermission ( activity , Manifest . permission . READ _ CONTACTS ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > + requestPermissions ( new String [ ] { Manifest . permission . READ _ CONTACTS } , < nl > + PERMISSIONS _ REQUEST _ CONTACTS ) ; < nl > + return ; < nl > + } < nl > + } < nl > + } else { < nl > + return ; < nl > + } < nl > + < nl > Intent intent = new Intent ( Intent . ACTION _ PICK , ContactsContract . Contacts . CONTENT _ URI ) ; < nl > startActivityForResult ( intent , REQUEST _ CONTACT ) ; < nl > } < nl > @ @ - 277 , 6 + 294 , 12 @ @ public class MediaPickerFragment extends BaseFragment { < nl > requestPhoto ( ) ; < nl > } < nl > } < nl > + < nl > + if ( requestCode = = PERMISSIONS _ REQUEST _ CONTACTS ) { < nl > + if ( grantResults . length > 0 & & grantResults [ 0 ] = = PackageManager . PERMISSION _ GRANTED ) { < nl > + requestContact ( ) ; < nl > + } < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > index 3619a97 . . 7505a2d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > @ @ - 37 , 6 + 37 , 7 @ @ import im . actor . core . network . NetworkState ; < nl > import im . actor . core . utils . AppStateActor ; < nl > import im . actor . core . utils . IOUtils ; < nl > import im . actor . core . utils . ImageHelper ; < nl > + import im . actor . core . viewmodel . AppStateVM ; < nl > import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . GalleryVM ; < nl > import im . actor . runtime . Runtime ; < nl > @ @ - 546 , 4 + 547 , 12 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > return modules . getEvents ( ) ; < nl > } < nl > < nl > + public AppStateVM getAppStateVM ( ) { < nl > + return modules . getConductor ( ) . getAppStateVM ( ) ; < nl > + } < nl > + < nl > + public void startImport ( ) { < nl > + modules . getContactsModule ( ) . startImport ( ) ; < nl > + } < nl > + < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 084acb3 . . f52746b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 28 , 17 + 28 , 17 @ @ public class Application extends ActorSDKApplication { < nl > < nl > @ Override < nl > public void onConfigureActorSDK ( ) { < nl > - ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > + / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > - ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > - ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > - ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > - ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > + / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > < nl > / / ActorSDK . sharedActor ( ) . setEndpoints ( new String [ ] { " tcp : / / 192 . 168 . 1 . 184 : 9070 " } ) ; < nl > < nl > - ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > - style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > + / / ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > + / / style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; < nl > / / AbsContent . registerConverter ( new ContentConverter ( ) { < nl > / / @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 8b8ceac . . a2d86ff 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 129 , 8 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > < nl > / / Process Content < nl > if ( msg . getContent ( ) instanceof TextContent ) { < nl > - int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; < nl > - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { < nl > + int updatedCounter = msg . getContent ( ) . getUpdatedCounter ( ) ; < nl > + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedCounter ) ) { < nl > TextContent text = ( TextContent ) msg . getContent ( ) ; < nl > Spannable spannableString = new SpannableString ( text . getText ( ) ) ; < nl > boolean hasSpannable = false ; < nl > @ @ - 191 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; < nl > hasSpannable = true ; < nl > } < nl > - updatedTexts . add ( updatedHash ) ; < nl > + updatedTexts . add ( updatedCounter ) ; < nl > preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , < nl > hasSpannable ? spannableString : null ) ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > index 8422981 . . 0e5ad94 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > @ @ - 2 , 7 + 2 , 9 @ @ package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . app . Activity ; < nl > import android . content . Context ; < nl > + import android . graphics . Bitmap ; < nl > import android . graphics . Color ; < nl > + import android . graphics . drawable . BitmapDrawable ; < nl > import android . net . Uri ; < nl > import android . view . View ; < nl > import android . widget . FrameLayout ; < nl > @ @ - 29 , 6 + 31 , 7 @ @ import im . actor . core . entity . content . FileLocalSource ; < nl > import im . actor . core . entity . content . FileRemoteSource ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > + import im . actor . core . utils . ImageHelper ; < nl > import im . actor . core . viewmodel . FileCallback ; < nl > import im . actor . core . viewmodel . FileVM ; < nl > import im . actor . core . viewmodel . FileVMCallback ; < nl > @ @ - 38 , 9 + 41 , 11 @ @ import im . actor . core . viewmodel . UploadFileVMCallback ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . conversation . view . FastBitmapDrawable ; < nl > import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; < nl > import im . actor . sdk . util . Screen ; < nl > import im . actor . sdk . util . Strings ; < nl > + import im . actor . sdk . util . images . BitmapUtil ; < nl > import im . actor . sdk . view . TintImageView ; < nl > import im . actor . runtime . files . FileSystemReference ; < nl > < nl > @ @ - 82 , 6 + 87 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > protected UploadFileVM uploadFileVM ; < nl > protected boolean isPhoto ; < nl > < nl > + int lastUpdatedIndex = 0 ; < nl > + private boolean updated = false ; < nl > + < nl > public PhotoHolder ( MessagesAdapter fragment , View itemView ) { < nl > super ( fragment , itemView , false ) ; < nl > this . context = fragment . getMessagesFragment ( ) . getActivity ( ) ; < nl > @ @ - 218 , 6 + 226 , 14 @ @ public class PhotoHolder extends MessageHolder { < nl > needRebind = true ; < nl > } < nl > < nl > + updated = false ; < nl > + int updatedCounter = fileMessage . getUpdatedCounter ( ) ; < nl > + if ( lastUpdatedIndex ! = updatedCounter ) { < nl > + updated = true ; < nl > + needRebind = true ; < nl > + lastUpdatedIndex = updatedCounter ; < nl > + } < nl > + < nl > if ( needRebind ) { < nl > / / Resetting progress state < nl > progressContainer . setVisibility ( View . GONE ) ; < nl > @ @ - 227 , 7 + 243 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > < nl > if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { < nl > boolean autoDownload = fileMessage instanceof PhotoContent ; < nl > - previewView . setImageURI ( null ) ; < nl > + if ( ! updated ) { < nl > + previewView . setImageURI ( null ) ; < nl > + } < nl > downloadFileVM = messenger ( ) . bindFile ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) , < nl > autoDownload , new DownloadVMCallback ( fileMessage ) ) ; < nl > } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { < nl > @ @ - 236 , 7 + 254 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > previewView . setImageURI ( Uri . fromFile ( < nl > new File ( ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ) ) ) ; < nl > } else { < nl > - previewView . setImageURI ( null ) ; < nl > + if ( ! updated ) { < nl > + previewView . setImageURI ( null ) ; < nl > + } < nl > / / TODO : better approach ? < nl > if ( fileMessage . getFastThumb ( ) ! = null ) { < nl > fastThumbLoader . request ( fileMessage . getFastThumb ( ) . getImage ( ) ) ; < nl > @ @ - 318 , 6 + 338 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > / / Releasing images < nl > fastThumbLoader . cancel ( ) ; < nl > previewView . setImageURI ( null ) ; < nl > + previewView . destroyDrawingCache ( ) ; < nl > } < nl > < nl > private class UploadVMCallback implements UploadFileVMCallback { < nl > @ @ - 389 , 22 + 410 , 33 @ @ public class PhotoHolder extends MessageHolder { < nl > < nl > @ Override < nl > public void onDownloading ( float progress ) { < nl > - checkFastThumb ( ) ; < nl > + if ( ! updated ) { < nl > + checkFastThumb ( ) ; < nl > < nl > - showView ( progressContainer ) ; < nl > + showView ( progressContainer ) ; < nl > < nl > - goneView ( progressIcon ) ; < nl > + goneView ( progressIcon ) ; < nl > < nl > - int val = ( int ) ( 100 * progress ) ; < nl > - progressValue . setText ( val + " " ) ; < nl > - progressView . setValue ( val ) ; < nl > - showView ( progressView ) ; < nl > - showView ( progressValue ) ; < nl > + int val = ( int ) ( 100 * progress ) ; < nl > + progressValue . setText ( val + " " ) ; < nl > + progressView . setValue ( val ) ; < nl > + showView ( progressView ) ; < nl > + showView ( progressValue ) ; < nl > + < nl > + } < nl > } < nl > < nl > @ Override < nl > public void onDownloaded ( FileSystemReference reference ) { < nl > if ( isPhoto ) { < nl > + if ( updated ) { < nl > + previewView . destroyDrawingCache ( ) ; < nl > + previewView . buildDrawingCache ( ) ; < nl > + Bitmap drawingCache = previewView . getDrawingCache ( ) ; < nl > + if ( drawingCache ! = null & & ! drawingCache . isRecycled ( ) ) { < nl > + previewView . getHierarchy ( ) . setPlaceholderImage ( new FastBitmapDrawable ( drawingCache ) ) ; < nl > + } < nl > + } < nl > ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) < nl > . setResizeOptions ( new ResizeOptions ( previewView . getLayoutParams ( ) . width , < nl > previewView . getLayoutParams ( ) . height ) ) < nl > @ @ - 414 , 6 + 446 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > . setImageRequest ( request ) < nl > . build ( ) ; < nl > previewView . setController ( controller ) ; < nl > + < nl > / / previewView . setImageURI ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) ; < nl > } else { < nl > checkFastThumb ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > index a41eab2 . . fb9b958 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > @ @ - 25 , 7 + 25 , 9 @ @ public class FastBitmapDrawable extends Drawable { < nl > < nl > @ Override < nl > public void draw ( Canvas canvas ) { < nl > - canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; < nl > + if ( ! bitmap . isRecycled ( ) ) { < nl > + canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index 8a00e7f . . 7dfeba1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 56 , 7 + 56 , 7 @ @ public abstract class AbsContent { < nl > < nl > private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; < nl > < nl > - private int updatedHash ; < nl > + private int updatedCounter = 0 ; < nl > < nl > public static void registerConverter ( ContentConverter contentConverter ) { < nl > ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; < nl > @ @ - 216 , 11 + 216 , 11 @ @ public abstract class AbsContent { < nl > return converters ; < nl > } < nl > < nl > - public int getUpdatedHash ( ) { < nl > - return updatedHash ; < nl > + public int getUpdatedCounter ( ) { < nl > + return updatedCounter ; < nl > } < nl > < nl > - public void setUpdatedHash ( int updatedHash ) { < nl > - this . updatedHash = updatedHash ; < nl > + public void incrementUpdatedCounter ( int oldCounter ) { < nl > + updatedCounter = + + oldCounter ; < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > index 7a5ffce . . 6c1102d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > + import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . events . AppVisibleChanged ; < nl > @ @ - 280 , 9 + 281 , 8 @ @ public class ConversationActor extends ModuleActor { < nl > } < nl > < nl > / / Updating message < nl > - if ( content instanceof TextContent ) { < nl > - content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; < nl > - } < nl > + content . incrementUpdatedCounter ( message . getContent ( ) . getUpdatedCounter ( ) ) ; < nl > + < nl > Message updatedMsg = message . changeContent ( content ) ; < nl > messages . addOrUpdateItem ( updatedMsg ) ; < nl > if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java 
 index 1ef914f . . 1afc353 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / RootActivity . java 
 @ @ - 1 , 11 + 1 , 16 @ @ 
 package im . actor . sdk . controllers . root ; 
 
 + import android . Manifest ; 
 import android . content . Intent ; 
 + import android . content . pm . PackageManager ; 
 import android . graphics . drawable . ColorDrawable ; 
 import android . os . Bundle ; 
 + import android . support . v13 . app . ActivityCompat ; 
 import android . support . v4 . app . Fragment ; 
 + import android . support . v4 . content . ContextCompat ; 
 import android . support . v7 . widget . Toolbar ; 
 
 + import im . actor . core . viewmodel . AppStateVM ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 @ @ - 16 , 11 + 21 , 19 @ @ import im . actor . sdk . controllers . tools . InviteHandler ; 
 * / 
 public class RootActivity extends BaseFragmentActivity { 
 
 + private static final int PERMISSIONS _ REQUEST _ READ _ CONTACTS = 1 ; 
 + 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 super . onCreate ( savedInstanceState ) ; 
 setContentView ( R . layout . activity _ root ) ; 
 
 + if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . READ _ CONTACTS ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 + ActivityCompat . requestPermissions ( this , 
 + new String [ ] { Manifest . permission . READ _ CONTACTS } , 
 + PERMISSIONS _ REQUEST _ READ _ CONTACTS ) ; 
 + } 
 + 
 / / 
 / / Configure Toolbar 
 / / 
 @ @ - 49 , 4 + 62 , 24 @ @ public class RootActivity extends BaseFragmentActivity { 
 super . onNewIntent ( intent ) ; 
 InviteHandler . handleIntent ( this , intent ) ; 
 } 
 + 
 + @ Override 
 + public void onRequestPermissionsResult ( int requestCode , 
 + String permissions [ ] , int [ ] grantResults ) { 
 + switch ( requestCode ) { 
 + case PERMISSIONS _ REQUEST _ READ _ CONTACTS : { 
 + / / If request is cancelled , the result arrays are empty . 
 + if ( grantResults . length > 0 
 + & & grantResults [ 0 ] = = PackageManager . PERMISSION _ GRANTED ) { 
 + 
 + AppStateVM appStateVM = ActorSDK . sharedActor ( ) . getMessenger ( ) . getAppStateVM ( ) ; 
 + if ( appStateVM . isDialogsLoaded ( ) & & appStateVM . isContactsLoaded ( ) & & appStateVM . isSettingsLoaded ( ) ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . startImport ( ) ; 
 + } 
 + 
 + } 
 + } 
 + 
 + } 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java 
 index 741e983 . . b37df56 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / tools / MediaPickerFragment . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public class MediaPickerFragment extends BaseFragment { 
 private static final int REQUEST _ LOCATION = 4 ; 
 private static final int REQUEST _ CONTACT = 5 ; 
 private static final int PERMISSIONS _ REQUEST _ CAMERA = 6 ; 
 + private static final int PERMISSIONS _ REQUEST _ CONTACTS = 7 ; 
 
 private String pendingFile ; 
 private boolean pickCropped ; 
 @ @ - 135 , 6 + 136 , 22 @ @ public class MediaPickerFragment extends BaseFragment { 
 public void requestContact ( ) { 
 this . pickCropped = false ; 
 
 + / / 
 + / / Checking permissions 
 + / / 
 + Activity activity = getActivity ( ) ; 
 + if ( activity ! = null ) { 
 + if ( Build . VERSION . SDK _ INT > = 23 ) { 
 + if ( ContextCompat . checkSelfPermission ( activity , Manifest . permission . READ _ CONTACTS ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 + requestPermissions ( new String [ ] { Manifest . permission . READ _ CONTACTS } , 
 + PERMISSIONS _ REQUEST _ CONTACTS ) ; 
 + return ; 
 + } 
 + } 
 + } else { 
 + return ; 
 + } 
 + 
 Intent intent = new Intent ( Intent . ACTION _ PICK , ContactsContract . Contacts . CONTENT _ URI ) ; 
 startActivityForResult ( intent , REQUEST _ CONTACT ) ; 
 } 
 @ @ - 277 , 6 + 294 , 12 @ @ public class MediaPickerFragment extends BaseFragment { 
 requestPhoto ( ) ; 
 } 
 } 
 + 
 + if ( requestCode = = PERMISSIONS _ REQUEST _ CONTACTS ) { 
 + if ( grantResults . length > 0 & & grantResults [ 0 ] = = PackageManager . PERMISSION _ GRANTED ) { 
 + requestContact ( ) ; 
 + } 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 index 3619a97 . . 7505a2d 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 @ @ - 37 , 6 + 37 , 7 @ @ import im . actor . core . network . NetworkState ; 
 import im . actor . core . utils . AppStateActor ; 
 import im . actor . core . utils . IOUtils ; 
 import im . actor . core . utils . ImageHelper ; 
 + import im . actor . core . viewmodel . AppStateVM ; 
 import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . GalleryVM ; 
 import im . actor . runtime . Runtime ; 
 @ @ - 546 , 4 + 547 , 12 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 return modules . getEvents ( ) ; 
 } 
 
 + public AppStateVM getAppStateVM ( ) { 
 + return modules . getConductor ( ) . getAppStateVM ( ) ; 
 + } 
 + 
 + public void startImport ( ) { 
 + modules . getContactsModule ( ) . startImport ( ) ; 
 + } 
 + 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 084acb3 . . f52746b 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 28 , 17 + 28 , 17 @ @ public class Application extends ActorSDKApplication { 
 
 @ Override 
 public void onConfigureActorSDK ( ) { 
 - ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 + / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 - ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 - ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 - ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 - ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 + / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 + / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 + / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 + / / ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 
 / / ActorSDK . sharedActor ( ) . setEndpoints ( new String [ ] { " tcp : / / 192 . 168 . 1 . 184 : 9070 " } ) ; 
 
 - ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 - style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 + / / ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 + / / style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; 
 / / AbsContent . registerConverter ( new ContentConverter ( ) { 
 / / @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 8b8ceac . . a2d86ff 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 129 , 8 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 
 / / Process Content 
 if ( msg . getContent ( ) instanceof TextContent ) { 
 - int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; 
 - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { 
 + int updatedCounter = msg . getContent ( ) . getUpdatedCounter ( ) ; 
 + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedCounter ) ) { 
 TextContent text = ( TextContent ) msg . getContent ( ) ; 
 Spannable spannableString = new SpannableString ( text . getText ( ) ) ; 
 boolean hasSpannable = false ; 
 @ @ - 191 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; 
 hasSpannable = true ; 
 } 
 - updatedTexts . add ( updatedHash ) ; 
 + updatedTexts . add ( updatedCounter ) ; 
 preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , 
 hasSpannable ? spannableString : null ) ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 index 8422981 . . 0e5ad94 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 @ @ - 2 , 7 + 2 , 9 @ @ package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . app . Activity ; 
 import android . content . Context ; 
 + import android . graphics . Bitmap ; 
 import android . graphics . Color ; 
 + import android . graphics . drawable . BitmapDrawable ; 
 import android . net . Uri ; 
 import android . view . View ; 
 import android . widget . FrameLayout ; 
 @ @ - 29 , 6 + 31 , 7 @ @ import im . actor . core . entity . content . FileLocalSource ; 
 import im . actor . core . entity . content . FileRemoteSource ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 + import im . actor . core . utils . ImageHelper ; 
 import im . actor . core . viewmodel . FileCallback ; 
 import im . actor . core . viewmodel . FileVM ; 
 import im . actor . core . viewmodel . FileVMCallback ; 
 @ @ - 38 , 9 + 41 , 11 @ @ import im . actor . core . viewmodel . UploadFileVMCallback ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . conversation . view . FastBitmapDrawable ; 
 import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; 
 import im . actor . sdk . util . Screen ; 
 import im . actor . sdk . util . Strings ; 
 + import im . actor . sdk . util . images . BitmapUtil ; 
 import im . actor . sdk . view . TintImageView ; 
 import im . actor . runtime . files . FileSystemReference ; 
 
 @ @ - 82 , 6 + 87 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 protected UploadFileVM uploadFileVM ; 
 protected boolean isPhoto ; 
 
 + int lastUpdatedIndex = 0 ; 
 + private boolean updated = false ; 
 + 
 public PhotoHolder ( MessagesAdapter fragment , View itemView ) { 
 super ( fragment , itemView , false ) ; 
 this . context = fragment . getMessagesFragment ( ) . getActivity ( ) ; 
 @ @ - 218 , 6 + 226 , 14 @ @ public class PhotoHolder extends MessageHolder { 
 needRebind = true ; 
 } 
 
 + updated = false ; 
 + int updatedCounter = fileMessage . getUpdatedCounter ( ) ; 
 + if ( lastUpdatedIndex ! = updatedCounter ) { 
 + updated = true ; 
 + needRebind = true ; 
 + lastUpdatedIndex = updatedCounter ; 
 + } 
 + 
 if ( needRebind ) { 
 / / Resetting progress state 
 progressContainer . setVisibility ( View . GONE ) ; 
 @ @ - 227 , 7 + 243 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 
 if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { 
 boolean autoDownload = fileMessage instanceof PhotoContent ; 
 - previewView . setImageURI ( null ) ; 
 + if ( ! updated ) { 
 + previewView . setImageURI ( null ) ; 
 + } 
 downloadFileVM = messenger ( ) . bindFile ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) , 
 autoDownload , new DownloadVMCallback ( fileMessage ) ) ; 
 } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { 
 @ @ - 236 , 7 + 254 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 previewView . setImageURI ( Uri . fromFile ( 
 new File ( ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ) ) ) ; 
 } else { 
 - previewView . setImageURI ( null ) ; 
 + if ( ! updated ) { 
 + previewView . setImageURI ( null ) ; 
 + } 
 / / TODO : better approach ? 
 if ( fileMessage . getFastThumb ( ) ! = null ) { 
 fastThumbLoader . request ( fileMessage . getFastThumb ( ) . getImage ( ) ) ; 
 @ @ - 318 , 6 + 338 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 / / Releasing images 
 fastThumbLoader . cancel ( ) ; 
 previewView . setImageURI ( null ) ; 
 + previewView . destroyDrawingCache ( ) ; 
 } 
 
 private class UploadVMCallback implements UploadFileVMCallback { 
 @ @ - 389 , 22 + 410 , 33 @ @ public class PhotoHolder extends MessageHolder { 
 
 @ Override 
 public void onDownloading ( float progress ) { 
 - checkFastThumb ( ) ; 
 + if ( ! updated ) { 
 + checkFastThumb ( ) ; 
 
 - showView ( progressContainer ) ; 
 + showView ( progressContainer ) ; 
 
 - goneView ( progressIcon ) ; 
 + goneView ( progressIcon ) ; 
 
 - int val = ( int ) ( 100 * progress ) ; 
 - progressValue . setText ( val + " " ) ; 
 - progressView . setValue ( val ) ; 
 - showView ( progressView ) ; 
 - showView ( progressValue ) ; 
 + int val = ( int ) ( 100 * progress ) ; 
 + progressValue . setText ( val + " " ) ; 
 + progressView . setValue ( val ) ; 
 + showView ( progressView ) ; 
 + showView ( progressValue ) ; 
 + 
 + } 
 } 
 
 @ Override 
 public void onDownloaded ( FileSystemReference reference ) { 
 if ( isPhoto ) { 
 + if ( updated ) { 
 + previewView . destroyDrawingCache ( ) ; 
 + previewView . buildDrawingCache ( ) ; 
 + Bitmap drawingCache = previewView . getDrawingCache ( ) ; 
 + if ( drawingCache ! = null & & ! drawingCache . isRecycled ( ) ) { 
 + previewView . getHierarchy ( ) . setPlaceholderImage ( new FastBitmapDrawable ( drawingCache ) ) ; 
 + } 
 + } 
 ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) 
 . setResizeOptions ( new ResizeOptions ( previewView . getLayoutParams ( ) . width , 
 previewView . getLayoutParams ( ) . height ) ) 
 @ @ - 414 , 6 + 446 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 . setImageRequest ( request ) 
 . build ( ) ; 
 previewView . setController ( controller ) ; 
 + 
 / / previewView . setImageURI ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) ; 
 } else { 
 checkFastThumb ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 index a41eab2 . . fb9b958 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 @ @ - 25 , 7 + 25 , 9 @ @ public class FastBitmapDrawable extends Drawable { 
 
 @ Override 
 public void draw ( Canvas canvas ) { 
 - canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; 
 + if ( ! bitmap . isRecycled ( ) ) { 
 + canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index 8a00e7f . . 7dfeba1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public abstract class AbsContent { 
 
 private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; 
 
 - private int updatedHash ; 
 + private int updatedCounter = 0 ; 
 
 public static void registerConverter ( ContentConverter contentConverter ) { 
 ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; 
 @ @ - 216 , 11 + 216 , 11 @ @ public abstract class AbsContent { 
 return converters ; 
 } 
 
 - public int getUpdatedHash ( ) { 
 - return updatedHash ; 
 + public int getUpdatedCounter ( ) { 
 + return updatedCounter ; 
 } 
 
 - public void setUpdatedHash ( int updatedHash ) { 
 - this . updatedHash = updatedHash ; 
 + public void incrementUpdatedCounter ( int oldCounter ) { 
 + updatedCounter = + + oldCounter ; 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 index 7a5ffce . . 6c1102d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 + import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . events . AppVisibleChanged ; 
 @ @ - 280 , 9 + 281 , 8 @ @ public class ConversationActor extends ModuleActor { 
 } 
 
 / / Updating message 
 - if ( content instanceof TextContent ) { 
 - content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; 
 - } 
 + content . incrementUpdatedCounter ( message . getContent ( ) . getUpdatedCounter ( ) ) ; 
 + 
 Message updatedMsg = message . changeContent ( content ) ; 
 messages . addOrUpdateItem ( updatedMsg ) ; 
 if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {
