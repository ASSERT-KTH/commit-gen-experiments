BLEU SCORE: 0.1593301391270729

TEST MSG: feat ( js ) : Adding usernames to peer info
GENERATED MSG: fix ( js ) : Fixing isBot flag in user and fixing find groups promice

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java < nl > index f5f7338 . . fc1292e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java < nl > @ @ - 202 , 6 + 202 , 7 @ @ public class JsMessenger extends Messenger { < nl > return JsPeerInfo . create ( < nl > JsPeer . create ( peer ) , < nl > userVM . getName ( ) . get ( ) , < nl > + userVM . getNick ( ) . get ( ) , < nl > getSmallAvatarUrl ( userVM . getAvatar ( ) . get ( ) ) , < nl > Placeholders . getPlaceholder ( peer . getPeerId ( ) ) ) ; < nl > } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > @ @ - 209 , 6 + 210 , 7 @ @ public class JsMessenger extends Messenger { < nl > return JsPeerInfo . create ( < nl > JsPeer . create ( peer ) , < nl > groupVM . getName ( ) . get ( ) , < nl > + null , < nl > getSmallAvatarUrl ( groupVM . getAvatar ( ) . get ( ) ) , < nl > Placeholders . getPlaceholder ( peer . getPeerId ( ) ) ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java < nl > index fc4bcec . . 3810259 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java < nl > @ @ - 8 , 8 + 8 , 8 @ @ import com . google . gwt . core . client . JavaScriptObject ; < nl > < nl > public class JsPeerInfo extends JavaScriptObject { < nl > < nl > - public native static JsPeerInfo create ( JsPeer peer , String title , String avatar , String placeholder ) / * - { < nl > - return { peer : peer , title : title , avatar : avatar , placeholder : placeholder } < nl > + public native static JsPeerInfo create ( JsPeer peer , String title , String userName , String avatar , String placeholder ) / * - { < nl > + return { peer : peer , title : title , userName : userName , avatar : avatar , placeholder : placeholder } < nl > } - * / ; < nl > < nl > protected JsPeerInfo ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 174a996 . . 3d9eddd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 733 , 6 + 733 , 7 @ @ public class JsFacade implements Exportable { < nl > } < nl > / / jsRes . push ( ) ; < nl > } < nl > + resolve ( jsRes ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java < nl > index bbe63e0 . . 591ad8a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java < nl > @ @ - 62 , 7 + 62 , 7 @ @ public class JsUser extends JavaScriptObject { < nl > boolean isContact , boolean isBot , String presence , boolean isOnline , JsArray < JsPhone > phones , < nl > JsArray < JsEmail > emails ) / * - { < nl > return { id : id , name : name , nick : nick , about : about , avatar : avatar , bigAvatar : bigAvatar , placeholder : placeholder , < nl > - isContact : isContact , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; < nl > + isContact : isContact , isBot : isBot , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; < nl > } - * / ; < nl > < nl > protected JsUser ( ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java 
 index f5f7338 . . fc1292e 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java 
 @ @ - 202 , 6 + 202 , 7 @ @ public class JsMessenger extends Messenger { 
 return JsPeerInfo . create ( 
 JsPeer . create ( peer ) , 
 userVM . getName ( ) . get ( ) , 
 + userVM . getNick ( ) . get ( ) , 
 getSmallAvatarUrl ( userVM . getAvatar ( ) . get ( ) ) , 
 Placeholders . getPlaceholder ( peer . getPeerId ( ) ) ) ; 
 } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 @ @ - 209 , 6 + 210 , 7 @ @ public class JsMessenger extends Messenger { 
 return JsPeerInfo . create ( 
 JsPeer . create ( peer ) , 
 groupVM . getName ( ) . get ( ) , 
 + null , 
 getSmallAvatarUrl ( groupVM . getAvatar ( ) . get ( ) ) , 
 Placeholders . getPlaceholder ( peer . getPeerId ( ) ) ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java 
 index fc4bcec . . 3810259 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java 
 @ @ - 8 , 8 + 8 , 8 @ @ import com . google . gwt . core . client . JavaScriptObject ; 
 
 public class JsPeerInfo extends JavaScriptObject { 
 
 - public native static JsPeerInfo create ( JsPeer peer , String title , String avatar , String placeholder ) / * - { 
 - return { peer : peer , title : title , avatar : avatar , placeholder : placeholder } 
 + public native static JsPeerInfo create ( JsPeer peer , String title , String userName , String avatar , String placeholder ) / * - { 
 + return { peer : peer , title : title , userName : userName , avatar : avatar , placeholder : placeholder } 
 } - * / ; 
 
 protected JsPeerInfo ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 174a996 . . 3d9eddd 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 733 , 6 + 733 , 7 @ @ public class JsFacade implements Exportable { 
 } 
 / / jsRes . push ( ) ; 
 } 
 + resolve ( jsRes ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java 
 index bbe63e0 . . 591ad8a 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java 
 @ @ - 62 , 7 + 62 , 7 @ @ public class JsUser extends JavaScriptObject { 
 boolean isContact , boolean isBot , String presence , boolean isOnline , JsArray < JsPhone > phones , 
 JsArray < JsEmail > emails ) / * - { 
 return { id : id , name : name , nick : nick , about : about , avatar : avatar , bigAvatar : bigAvatar , placeholder : placeholder , 
 - isContact : isContact , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; 
 + isContact : isContact , isBot : isBot , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; 
 } - * / ; 
 
 protected JsUser ( ) {
