BLEU SCORE: 0.44632361378533286

TEST MSG: test ( server ) : fixed spec compilation error
GENERATED MSG: test ( server ) : enricher

TEST DIFF (one line): diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala < nl > index 73dfefb . . ab9b33a 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala < nl > @ @ - 168 , 8 + 168 , 8 @ @ final class MessagingServiceHistorySpec extends BaseAppSuite with GroupsServiceH < nl > < nl > def public ( ) = { < nl > val groupId = Random . nextInt < nl > - val ( pubUser , _ , _ , _ ) = createUser ( ) < nl > - val accessHash = whenReady ( GroupExtension ( system ) . create ( groupId , pubUser . id , " Public group " , Random . nextLong , Set . empty ) ) ( _ . accessHash ) < nl > + val ( pubUser , _ , authSid , _ ) = createUser ( ) < nl > + val accessHash = whenReady ( GroupExtension ( system ) . create ( groupId , pubUser . id , authSid , " Public group " , Random . nextLong , Set . empty ) ) ( _ . accessHash ) < nl > whenReady ( GroupExtension ( system ) . makePublic ( groupId , " Public group description " ) ) ( identity ) < nl > < nl > val groupOutPeer = ApiGroupOutPeer ( groupId , accessHash )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala b / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala < nl > index 766da20 . . ea824f5 100644 < nl > - - - a / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala < nl > + + + b / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala < nl > @ @ - 150 , 7 + 150 , 7 @ @ trait ServiceSpecHelpers extends PersistenceHelpers with UserStructExtensions wi < nl > def buildRpcApiService ( services : Seq [ im . actor . api . rpc . Service ] ) ( implicit system : ActorSystem , db : Database ) = < nl > RpcApiExtension ( system ) . register ( services ) < nl > < nl > - def buildSessionRegion ( rpcApiService : ActorRef ) ( implicit system : ActorSystem , materializer : Materializer ) = { < nl > + def buildSessionRegion ( ) ( implicit system : ActorSystem , materializer : Materializer ) = { < nl > implicit val sessionConfig = SessionConfig . load ( system . settings . config . getConfig ( " session " ) ) < nl > Session . startRegion ( Session . props ) < nl > } < nl > diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala < nl > index 7149d1d . . 7a89fdd 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala < nl > @ @ - 39 , 8 + 39 , 6 @ @ final class ContactsServiceSpec < nl > object s { < nl > implicit val ec = system . dispatcher < nl > < nl > - implicit val sessionRegion = buildSessionRegionProxy ( ) < nl > - < nl > implicit val service = new contacts . ContactsServiceImpl < nl > < nl > private implicit val userExt = UserExtension ( system ) < nl > diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala < nl > index 92e748a . . 9671043 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala < nl > @ @ - 33 , 7 + 33 , 6 @ @ class IntegrationsServiceSpec < nl > object t { < nl > < nl > implicit val ec = system . dispatcher < nl > - implicit val sessionRegion = buildSessionRegionProxy ( ) < nl > < nl > val groupInviteConfig = GroupInviteConfig ( " https : / / actor . im " ) < nl > < nl > diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala < nl > index b1c46b4 . . 19ed28e 100644 < nl > - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala < nl > + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala < nl > @ @ - 37 , 7 + 37 , 6 @ @ class RichMessageWorkerSpec < nl > val ThumbMinSize = 90 < nl > implicit val ec = system . dispatcher < nl > < nl > - implicit val sessionRegion = buildSessionRegionProxy ( ) < nl > implicit val socialManagerRegion = SocialManager . startRegion ( ) < nl > < nl > val groupInviteConfig = GroupInviteConfig ( " http : / / actor . im " )

TEST DIFF:
diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala 
 index 73dfefb . . ab9b33a 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / MessagingServiceHistorySpec . scala 
 @ @ - 168 , 8 + 168 , 8 @ @ final class MessagingServiceHistorySpec extends BaseAppSuite with GroupsServiceH 
 
 def public ( ) = { 
 val groupId = Random . nextInt 
 - val ( pubUser , _ , _ , _ ) = createUser ( ) 
 - val accessHash = whenReady ( GroupExtension ( system ) . create ( groupId , pubUser . id , " Public group " , Random . nextLong , Set . empty ) ) ( _ . accessHash ) 
 + val ( pubUser , _ , authSid , _ ) = createUser ( ) 
 + val accessHash = whenReady ( GroupExtension ( system ) . create ( groupId , pubUser . id , authSid , " Public group " , Random . nextLong , Set . empty ) ) ( _ . accessHash ) 
 whenReady ( GroupExtension ( system ) . makePublic ( groupId , " Public group description " ) ) ( identity ) 
 
 val groupOutPeer = ApiGroupOutPeer ( groupId , accessHash )

NEAREST DIFF:
diff - - git a / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala b / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala 
 index 766da20 . . ea824f5 100644 
 - - - a / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala 
 + + + b / actor - server / actor - testkit / src / main / scala / im / actor / server / ServiceSpecHelpers . scala 
 @ @ - 150 , 7 + 150 , 7 @ @ trait ServiceSpecHelpers extends PersistenceHelpers with UserStructExtensions wi 
 def buildRpcApiService ( services : Seq [ im . actor . api . rpc . Service ] ) ( implicit system : ActorSystem , db : Database ) = 
 RpcApiExtension ( system ) . register ( services ) 
 
 - def buildSessionRegion ( rpcApiService : ActorRef ) ( implicit system : ActorSystem , materializer : Materializer ) = { 
 + def buildSessionRegion ( ) ( implicit system : ActorSystem , materializer : Materializer ) = { 
 implicit val sessionConfig = SessionConfig . load ( system . settings . config . getConfig ( " session " ) ) 
 Session . startRegion ( Session . props ) 
 } 
 diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala 
 index 7149d1d . . 7a89fdd 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / ContactsServiceSpec . scala 
 @ @ - 39 , 8 + 39 , 6 @ @ final class ContactsServiceSpec 
 object s { 
 implicit val ec = system . dispatcher 
 
 - implicit val sessionRegion = buildSessionRegionProxy ( ) 
 - 
 implicit val service = new contacts . ContactsServiceImpl 
 
 private implicit val userExt = UserExtension ( system ) 
 diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala 
 index 92e748a . . 9671043 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / api / rpc / service / IntegrationsServiceSpec . scala 
 @ @ - 33 , 7 + 33 , 6 @ @ class IntegrationsServiceSpec 
 object t { 
 
 implicit val ec = system . dispatcher 
 - implicit val sessionRegion = buildSessionRegionProxy ( ) 
 
 val groupInviteConfig = GroupInviteConfig ( " https : / / actor . im " ) 
 
 diff - - git a / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala b / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala 
 index b1c46b4 . . 19ed28e 100644 
 - - - a / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala 
 + + + b / actor - server / actor - tests / src / test / scala / im / actor / server / enrich / RichMessageWorkerSpec . scala 
 @ @ - 37 , 7 + 37 , 6 @ @ class RichMessageWorkerSpec 
 val ThumbMinSize = 90 
 implicit val ec = system . dispatcher 
 
 - implicit val sessionRegion = buildSessionRegionProxy ( ) 
 implicit val socialManagerRegion = SocialManager . startRegion ( ) 
 
 val groupInviteConfig = GroupInviteConfig ( " http : / / actor . im " )
