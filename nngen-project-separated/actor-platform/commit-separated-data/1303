BLEU SCORE: 0.09852859740626556

TEST MSG: feat ( js ) : More logging
GENERATED MSG: fix ( js ) : Fixing copying interval . js , changing path to interval . js

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > index 3618a31 . . f6c26ac 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > @ @ - 241 , 14 + 241 , 19 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li < nl > } < nl > < nl > if ( callbacksInverted . size ( ) > 0 ) { < nl > + Log . d ( TAG , " notifySubscribers : inverted " ) ; < nl > JsArray < T > rev = jsValues . reverse ( ) ; < nl > if ( isOverlaysSupported ) { < nl > + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported " ) ; < nl > JsArray < JavaScriptObject > revOverlays = jsOverlays . reverse ( ) ; < nl > for ( JsDisplayListCallback < T > callback : callbacksInverted ) { < nl > + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported : item " ) ; < nl > callback . onCollectionChanged ( rev , revOverlays ) ; < nl > } < nl > } else { < nl > + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported : false " ) ; < nl > for ( JsDisplayListCallback < T > callback : callbacksInverted ) { < nl > + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported : false : item " ) ; < nl > callback . onCollectionChanged ( rev , null ) ; < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / build . gradle b / actor - sdk / sdk - core / core / core - js / build . gradle < nl > index e986376 . . a168f67 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / build . gradle < nl > + + + b / actor - sdk / sdk - core / core / core - js / build . gradle < nl > @ @ - 67 , 7 + 67 , 7 @ @ task buildPackage ( dependsOn : [ ' war ' ] ) { < nl > < nl > copy { < nl > into " $ buildDir / package " < nl > - from " $ projectDir / . . / . . / runtime / js / src / main / javascript " < nl > + from " $ projectDir / . . / . . / runtime / runtime - js / src / main / javascript " < nl > } < nl > } < nl > } < nl > @ @ - 93 , 7 + 93 , 7 @ @ task buildPackageDev ( dependsOn : [ ' draftWar ' ] ) { < nl > < nl > copy { < nl > into " $ buildDir / package " < nl > - from " $ projectDir / . . / . . / runtime / js / src / main / javascript " < nl > + from " $ projectDir / . . / . . / runtime / runtime - js / src / main / javascript " < nl > } < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java < nl > index d319fb4 . . 7769a62 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java < nl > @ @ - 15 , 7 + 15 , 7 @ @ public class JsSecureInterval extends JavaScriptObject { < nl > console . warn ( " Create jsSecureInverval " ) < nl > try { < nl > if ( typeof ( Worker ) ! = = " undefined " ) { < nl > - var worker = new Worker ( " actor / interval . js " ) ; < nl > + var worker = new Worker ( " interval . js " ) ; < nl > var _ runnable = runnable ; < nl > worker . onmessage = function ( ) { < nl > _ runnable . @ java . lang . Runnable : : run ( ) ( ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 index 3618a31 . . f6c26ac 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 @ @ - 241 , 14 + 241 , 19 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li 
 } 
 
 if ( callbacksInverted . size ( ) > 0 ) { 
 + Log . d ( TAG , " notifySubscribers : inverted " ) ; 
 JsArray < T > rev = jsValues . reverse ( ) ; 
 if ( isOverlaysSupported ) { 
 + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported " ) ; 
 JsArray < JavaScriptObject > revOverlays = jsOverlays . reverse ( ) ; 
 for ( JsDisplayListCallback < T > callback : callbacksInverted ) { 
 + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported : item " ) ; 
 callback . onCollectionChanged ( rev , revOverlays ) ; 
 } 
 } else { 
 + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported : false " ) ; 
 for ( JsDisplayListCallback < T > callback : callbacksInverted ) { 
 + Log . d ( TAG , " notifySubscribers : inverted : isOverlaysSupported : false : item " ) ; 
 callback . onCollectionChanged ( rev , null ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / build . gradle b / actor - sdk / sdk - core / core / core - js / build . gradle 
 index e986376 . . a168f67 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / build . gradle 
 + + + b / actor - sdk / sdk - core / core / core - js / build . gradle 
 @ @ - 67 , 7 + 67 , 7 @ @ task buildPackage ( dependsOn : [ ' war ' ] ) { 
 
 copy { 
 into " $ buildDir / package " 
 - from " $ projectDir / . . / . . / runtime / js / src / main / javascript " 
 + from " $ projectDir / . . / . . / runtime / runtime - js / src / main / javascript " 
 } 
 } 
 } 
 @ @ - 93 , 7 + 93 , 7 @ @ task buildPackageDev ( dependsOn : [ ' draftWar ' ] ) { 
 
 copy { 
 into " $ buildDir / package " 
 - from " $ projectDir / . . / . . / runtime / js / src / main / javascript " 
 + from " $ projectDir / . . / . . / runtime / runtime - js / src / main / javascript " 
 } 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java 
 index d319fb4 . . 7769a62 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java 
 @ @ - 15 , 7 + 15 , 7 @ @ public class JsSecureInterval extends JavaScriptObject { 
 console . warn ( " Create jsSecureInverval " ) 
 try { 
 if ( typeof ( Worker ) ! = = " undefined " ) { 
 - var worker = new Worker ( " actor / interval . js " ) ; 
 + var worker = new Worker ( " interval . js " ) ; 
 var _ runnable = runnable ; 
 worker . onmessage = function ( ) { 
 _ runnable . @ java . lang . Runnable : : run ( ) ( ) ;
