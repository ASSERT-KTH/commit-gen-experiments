BLEU SCORE: 0.317023313852343

TEST MSG: feat ( core ) : calls - better check call is alive
GENERATED MSG: feat ( core ) : Cancel obsolete online requests

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java < nl > index 50606dc . . b0840d0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ public class CallActor extends ModuleActor { < nl > private int timeout = 0 ; < nl > private boolean alive = false ; < nl > private long callId ; < nl > + private static final long SAFE _ TIMEOUT = 100 ; < nl > private CallsModule . CallCallback callback ; < nl > < nl > public CallActor ( long callId , CallsModule . CallCallback callback , ModuleContext context ) { < nl > @ @ - 53 , 7 + 54 , 6 @ @ public class CallActor extends ModuleActor { < nl > public void checkAlive ( ) { < nl > if ( alive ) { < nl > alive = false ; < nl > - self ( ) . send ( new CheckAlive ( ) , timeout ) ; < nl > } else { < nl > context ( ) . getCallsModule ( ) . endCall ( callId ) ; < nl > self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > @ @ - 71 , 8 + 71 , 9 @ @ public class CallActor extends ModuleActor { < nl > this . timeout = timeout ; < nl > if ( ! inited ) { < nl > inited = true ; < nl > - self ( ) . send ( new CheckAlive ( ) , CallsModule . CALL _ TIMEOUT ) ; < nl > + alive = false ; < nl > } < nl > + self ( ) . send ( new CheckAlive ( ) , CallsModule . CALL _ TIMEOUT + SAFE _ TIMEOUT ) ; < nl > } < nl > < nl > public static class EndCall {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java < nl > index 3e642a7 . . 098f1c0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java < nl > @ @ - 24 , 6 + 24 , 7 @ @ public class OwnPresenceActor extends ModuleActor implements BusSubscriber { < nl > private static final int TIMEOUT = 90 * 1000 ; < nl > < nl > private boolean isVisible = false ; < nl > + private long prevRid = 0 ; < nl > < nl > public OwnPresenceActor ( Modules messenger ) { < nl > super ( messenger ) ; < nl > @ @ - 45 , 7 + 46 , 11 @ @ public class OwnPresenceActor extends ModuleActor implements BusSubscriber { < nl > } < nl > < nl > private void performOnline ( ) { < nl > - request ( new RequestSetOnline ( isVisible , TIMEOUT ) , < nl > + if ( prevRid ! = 0 ) { < nl > + cancelRequest ( prevRid ) ; < nl > + prevRid = 0 ; < nl > + } < nl > + prevRid = request ( new RequestSetOnline ( isVisible , TIMEOUT ) , < nl > new RpcCallback < ResponseVoid > ( ) { < nl > @ Override < nl > public void onResult ( ResponseVoid response ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java 
 index 50606dc . . b0840d0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / calls / CallActor . java 
 @ @ - 11 , 6 + 11 , 7 @ @ public class CallActor extends ModuleActor { 
 private int timeout = 0 ; 
 private boolean alive = false ; 
 private long callId ; 
 + private static final long SAFE _ TIMEOUT = 100 ; 
 private CallsModule . CallCallback callback ; 
 
 public CallActor ( long callId , CallsModule . CallCallback callback , ModuleContext context ) { 
 @ @ - 53 , 7 + 54 , 6 @ @ public class CallActor extends ModuleActor { 
 public void checkAlive ( ) { 
 if ( alive ) { 
 alive = false ; 
 - self ( ) . send ( new CheckAlive ( ) , timeout ) ; 
 } else { 
 context ( ) . getCallsModule ( ) . endCall ( callId ) ; 
 self ( ) . send ( PoisonPill . INSTANCE ) ; 
 @ @ - 71 , 8 + 71 , 9 @ @ public class CallActor extends ModuleActor { 
 this . timeout = timeout ; 
 if ( ! inited ) { 
 inited = true ; 
 - self ( ) . send ( new CheckAlive ( ) , CallsModule . CALL _ TIMEOUT ) ; 
 + alive = false ; 
 } 
 + self ( ) . send ( new CheckAlive ( ) , CallsModule . CALL _ TIMEOUT + SAFE _ TIMEOUT ) ; 
 } 
 
 public static class EndCall {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java 
 index 3e642a7 . . 098f1c0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / presence / OwnPresenceActor . java 
 @ @ - 24 , 6 + 24 , 7 @ @ public class OwnPresenceActor extends ModuleActor implements BusSubscriber { 
 private static final int TIMEOUT = 90 * 1000 ; 
 
 private boolean isVisible = false ; 
 + private long prevRid = 0 ; 
 
 public OwnPresenceActor ( Modules messenger ) { 
 super ( messenger ) ; 
 @ @ - 45 , 7 + 46 , 11 @ @ public class OwnPresenceActor extends ModuleActor implements BusSubscriber { 
 } 
 
 private void performOnline ( ) { 
 - request ( new RequestSetOnline ( isVisible , TIMEOUT ) , 
 + if ( prevRid ! = 0 ) { 
 + cancelRequest ( prevRid ) ; 
 + prevRid = 0 ; 
 + } 
 + prevRid = request ( new RequestSetOnline ( isVisible , TIMEOUT ) , 
 new RpcCallback < ResponseVoid > ( ) { 
 @ Override 
 public void onResult ( ResponseVoid response ) {
