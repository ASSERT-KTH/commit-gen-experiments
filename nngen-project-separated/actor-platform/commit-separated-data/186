BLEU SCORE: 0.11479267900149548

TEST MSG: feat ( core ) : Passing isChannel and isBot arguments to dialog list
GENERATED MSG: feat ( core + iOS ) : Fixing call state machine , better Call VM states

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java < nl > index 8e98424 . . e2ecc7a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java < nl > @ @ - 50 , 6 + 50 , 13 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > @ SuppressWarnings ( " NullableProblems " ) < nl > @ Property ( " readonly , nonatomic " ) < nl > private String dialogTitle ; < nl > + @ Nullable < nl > + @ Property ( " readonly , nonatomic " ) < nl > + private Avatar dialogAvatar ; < nl > + @ Property ( " readonly , nonatomic " ) < nl > + private boolean isBot ; < nl > + @ Property ( " readonly , nonatomic " ) < nl > + private boolean isChannel ; < nl > @ Property ( " readonly , nonatomic " ) < nl > private int unreadCount ; < nl > < nl > @ @ - 82 , 14 + 89 , 12 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > private int relatedUid ; < nl > < nl > < nl > - @ Nullable < nl > - @ Property ( " readonly , nonatomic " ) < nl > - private Avatar dialogAvatar ; < nl > - < nl > public Dialog ( @ NotNull Peer peer , < nl > long sortKey , < nl > @ NotNull String dialogTitle , < nl > @ Nullable Avatar dialogAvatar , < nl > + boolean isBot , < nl > + boolean isChannel , < nl > int unreadCount , < nl > long rid , < nl > @ NotNull ContentType messageType , < nl > @ @ - 104 , 6 + 109 , 8 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > this . peer = peer ; < nl > this . dialogTitle = StringUtil . ellipsize ( dialogTitle , MAX _ LENGTH ) ; < nl > this . dialogAvatar = dialogAvatar ; < nl > + this . isBot = isBot ; < nl > + this . isChannel = isChannel ; < nl > this . unreadCount = unreadCount ; < nl > this . rid = rid ; < nl > this . sortDate = sortKey ; < nl > @ @ - 130 , 6 + 137 , 19 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > return dialogTitle ; < nl > } < nl > < nl > + @ Nullable < nl > + public Avatar getDialogAvatar ( ) { < nl > + return dialogAvatar ; < nl > + } < nl > + < nl > + public boolean isBot ( ) { < nl > + return isBot ; < nl > + } < nl > + < nl > + public boolean isChannel ( ) { < nl > + return isChannel ; < nl > + } < nl > + < nl > public int getUnreadCount ( ) { < nl > return unreadCount ; < nl > } < nl > @ @ - 164 , 10 + 184 , 6 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > return relatedUid ; < nl > } < nl > < nl > - @ Nullable < nl > - public Avatar getDialogAvatar ( ) { < nl > - return dialogAvatar ; < nl > - } < nl > < nl > @ Nullable < nl > public Long getKnownReadDate ( ) { < nl > @ @ - 188 , 8 + 204 , 9 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > } < nl > < nl > public Dialog editPeerInfo ( String title , Avatar dialogAvatar ) { < nl > - return new Dialog ( peer , sortDate , StringUtil . ellipsize ( title , MAX _ LENGTH ) , dialogAvatar , unreadCount , rid , messageType , text , senderId , < nl > - date , relatedUid , knownReadDate , knownReceiveDate ) ; < nl > + return new Dialog ( peer , sortDate , StringUtil . ellipsize ( title , MAX _ LENGTH ) , dialogAvatar , < nl > + isBot , isChannel , unreadCount , rid , messageType , text , senderId , date , relatedUid , < nl > + knownReadDate , knownReceiveDate ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 201 , 6 + 218 , 8 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > if ( av ! = null ) { < nl > dialogAvatar = new Avatar ( av ) ; < nl > } < nl > + isBot = values . getBool ( 15 , false ) ; < nl > + isChannel = values . getBool ( 16 , false ) ; < nl > < nl > unreadCount = values . getInt ( 4 ) ; < nl > sortDate = values . getLong ( 5 ) ; < nl > @ @ - 224 , 6 + 243 , 8 @ @ public class Dialog extends BserObject implements ListEngineItem { < nl > if ( dialogAvatar ! = null ) { < nl > writer . writeObject ( 3 , dialogAvatar ) ; < nl > } < nl > + writer . writeBool ( 15 , isBot ) ; < nl > + writer . writeBool ( 16 , isChannel ) ; < nl > writer . writeInt ( 4 , unreadCount ) ; < nl > writer . writeLong ( 5 , sortDate ) ; < nl > writer . writeLong ( 6 , rid ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java < nl > index cfa9fce . . 8d1fe1f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java < nl > @ @ - 22 , 6 + 22 , 8 @ @ public class DialogBuilder { < nl > private int relatedUid = 0 ; < nl > private Long knownReadDate ; < nl > private Long knownReceiveDate ; < nl > + private boolean isBot ; < nl > + private boolean isChannel ; < nl > < nl > public DialogBuilder ( ) { < nl > < nl > @ @ - 41 , 6 + 43 , 8 @ @ public class DialogBuilder { < nl > relatedUid = dialog . getRelatedUid ( ) ; < nl > knownReadDate = dialog . getKnownReadDate ( ) ; < nl > knownReceiveDate = dialog . getKnownReceiveDate ( ) ; < nl > + isBot = dialog . isBot ( ) ; < nl > + isChannel = dialog . isChannel ( ) ; < nl > } < nl > < nl > public DialogBuilder setPeer ( Peer peer ) { < nl > @ @ - 98 , 6 + 102 , 16 @ @ public class DialogBuilder { < nl > return this ; < nl > } < nl > < nl > + public DialogBuilder setIsBot ( boolean isBot ) { < nl > + this . isBot = isBot ; < nl > + return this ; < nl > + } < nl > + < nl > + public DialogBuilder setIsChannel ( boolean isChannel ) { < nl > + this . isChannel = isChannel ; < nl > + return this ; < nl > + } < nl > + < nl > public DialogBuilder updateKnownReadDate ( Long knownReadDate ) { < nl > if ( knownReadDate ! = null & & ( this . knownReadDate = = null | | this . knownReadDate < knownReadDate ) ) { < nl > this . knownReadDate = knownReadDate ; < nl > @ @ - 113 , 7 + 127 , 7 @ @ public class DialogBuilder { < nl > } < nl > < nl > public Dialog createDialog ( ) { < nl > - return new Dialog ( peer , sortKey , dialogTitle , dialogAvatar , unreadCount , rid , messageType , < nl > - text , senderId , time , relatedUid , knownReadDate , knownReceiveDate ) ; < nl > + return new Dialog ( peer , sortKey , dialogTitle , dialogAvatar , isBot , isChannel , unreadCount , < nl > + rid , messageType , text , senderId , time , relatedUid , knownReadDate , knownReceiveDate ) ; < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java < nl > index bde055b . . 6f69430 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java < nl > @ @ - 13 , 6 + 13 , 7 @ @ import im . actor . core . entity . ContentType ; < nl > import im . actor . core . entity . Dialog ; < nl > import im . actor . core . entity . DialogBuilder ; < nl > import im . actor . core . entity . Group ; < nl > + import im . actor . core . entity . GroupType ; < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . User ; < nl > @ @ - 86 , 7 + 87 , 11 @ @ public class DialogsActor extends ModuleActor { < nl > . setMessageType ( contentDescription . getContentType ( ) ) < nl > . setText ( contentDescription . getText ( ) ) < nl > . setRelatedUid ( contentDescription . getRelatedUser ( ) ) < nl > - . setSenderId ( message . getSenderId ( ) ) ; < nl > + . setSenderId ( message . getSenderId ( ) ) < nl > + . setDialogTitle ( peerDesc . getTitle ( ) ) < nl > + . setDialogAvatar ( peerDesc . getAvatar ( ) ) < nl > + . setIsBot ( peerDesc . isBot ( ) ) < nl > + . setIsChannel ( peerDesc . isChannel ( ) ) ; < nl > < nl > if ( counter > = 0 ) { < nl > builder . setUnreadCount ( counter ) ; < nl > @ @ - 102 , 8 + 107 , 6 @ @ public class DialogsActor extends ModuleActor { < nl > } < nl > < nl > builder . setPeer ( dialog . getPeer ( ) ) < nl > - . setDialogTitle ( dialog . getDialogTitle ( ) ) < nl > - . setDialogAvatar ( dialog . getDialogAvatar ( ) ) < nl > . setSortKey ( dialog . getSortDate ( ) ) < nl > . updateKnownReceiveDate ( dialog . getKnownReceiveDate ( ) ) < nl > . updateKnownReadDate ( dialog . getKnownReadDate ( ) ) ; < nl > @ @ - 121 , 8 + 124 , 6 @ @ public class DialogsActor extends ModuleActor { < nl > } < nl > < nl > builder . setPeer ( peer ) < nl > - . setDialogTitle ( peerDesc . getTitle ( ) ) < nl > - . setDialogAvatar ( peerDesc . getAvatar ( ) ) < nl > . setSortKey ( message . getSortDate ( ) ) ; < nl > < nl > forceUpdate = true ; < nl > @ @ - 342 , 10 + 343 , 10 @ @ public class DialogsActor extends ModuleActor { < nl > switch ( peer . getPeerType ( ) ) { < nl > case PRIVATE : < nl > User u = getUser ( peer . getPeerId ( ) ) ; < nl > - return new PeerDesc ( u . getName ( ) , u . getAvatar ( ) ) ; < nl > + return new PeerDesc ( u . getName ( ) , u . getAvatar ( ) , u . isBot ( ) , false ) ; < nl > case GROUP : < nl > Group g = getGroup ( peer . getPeerId ( ) ) ; < nl > - return new PeerDesc ( g . getTitle ( ) , g . getAvatar ( ) ) ; < nl > + return new PeerDesc ( g . getTitle ( ) , g . getAvatar ( ) , false , g . getGroupType ( ) = = GroupType . CHANNEL ) ; < nl > default : < nl > return null ; < nl > } < nl > @ @ - 355 , 10 + 356 , 14 @ @ public class DialogsActor extends ModuleActor { < nl > < nl > private String title ; < nl > private Avatar avatar ; < nl > + private boolean isBot ; < nl > + private boolean isChannel ; < nl > < nl > - private PeerDesc ( String title , Avatar avatar ) { < nl > + private PeerDesc ( String title , Avatar avatar , boolean isBot , boolean isChannel ) { < nl > this . title = title ; < nl > this . avatar = avatar ; < nl > + this . isBot = isBot ; < nl > + this . isChannel = isChannel ; < nl > } < nl > < nl > public String getTitle ( ) { < nl > @ @ - 368 , 6 + 373 , 14 @ @ public class DialogsActor extends ModuleActor { < nl > public Avatar getAvatar ( ) { < nl > return avatar ; < nl > } < nl > + < nl > + public boolean isBot ( ) { < nl > + return isBot ; < nl > + } < nl > + < nl > + public boolean isChannel ( ) { < nl > + return isChannel ; < nl > + } < nl > } < nl > < nl > / / Messages
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > index 3bc6444 . . d6c14d7 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > @ @ - 24 , 6 + 24 , 7 @ @ public class AACallViewController : AAViewController { < nl > public let videoButton = AACircleButton ( size : 72 ) < nl > < nl > var isScheduledDispose = false < nl > + var timer : NSTimer ? < nl > < nl > public init ( callId : jlong ) { < nl > self . callId = callId < nl > @ @ - 172 , 10 + 173 , 10 @ @ public class AACallViewController : AAViewController { < nl > self . answerCallButtonText . hidden = true < nl > self . declineCallButton . hidden = false < nl > self . declineCallButtonText . hidden = true < nl > - self . callState . text = " 0 : 00 " < nl > + self . startTimer ( ) < nl > self . layoutButtons ( ) < nl > } else if ( ACCallState _ Enum . ENDED = = value . toNSEnum ( ) ) { < nl > - self . callState . text = " Call Ended " < nl > + self . stopTimer ( ) < nl > self . muteButton . hidden = true < nl > self . speakerButton . hidden = true < nl > self . videoButton . hidden = true < nl > @ @ - 230 , 6 + 231 , 33 @ @ public class AACallViewController : AAViewController { < nl > UIDevice . currentDevice ( ) . proximityMonitoringEnabled = true < nl > } < nl > < nl > + func startTimer ( ) { < nl > + timer ? . invalidate ( ) < nl > + timer = NSTimer . scheduledTimerWithTimeInterval ( 1 . 0 , target : self , selector : " updateTimer " , userInfo : nil , repeats : true ) < nl > + updateTimer ( ) < nl > + } < nl > + < nl > + func updateTimer ( ) { < nl > + if call . callStart > 0 { < nl > + let end = call . callEnd > 0 ? call . callEnd : jlong ( NSDate ( ) . timeIntervalSince1970 * 1000 ) < nl > + let secs = Int ( ( end - call . callStart ) / 1000 ) < nl > + < nl > + let seconds = secs % 60 < nl > + let minutes = secs / 60 < nl > + < nl > + self . callState . text = NSString ( format : " % 0 . 2d : % 0 . 2d " , minutes , seconds ) as String < nl > + } else { < nl > + self . callState . text = " 0 : 00 " < nl > + } < nl > + } < nl > + < nl > + func stopTimer ( ) { < nl > + timer ? . invalidate ( ) < nl > + timer = nil < nl > + updateTimer ( ) < nl > + / / self . callState . text = " Call Ended " < nl > + } < nl > + < nl > public override func viewWillDisappear ( animated : Bool ) { < nl > super . viewWillDisappear ( animated ) < nl > UIDevice . currentDevice ( ) . proximityMonitoringEnabled = false < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 5ff7abf . . b60d213 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 25 , 7 + 25 , 7 @ @ public class CallActor extends AbsCallActor { < nl > private CallVM callVM ; < nl > private CommandCallback < Long > callback ; < nl > < nl > - private boolean isConnected ; < nl > + private boolean isActive ; < nl > private boolean isAnswered ; < nl > private boolean isRejected ; < nl > < nl > @ @ - 34 , 7 + 34 , 7 @ @ public class CallActor extends AbsCallActor { < nl > this . isMaster = false ; < nl > this . callId = callId ; < nl > this . isAnswered = false ; < nl > - this . isConnected = false ; < nl > + this . isActive = false ; < nl > } < nl > < nl > public CallActor ( Peer peer , CommandCallback < Long > callback , ModuleContext context ) { < nl > @ @ - 43 , 7 + 43 , 7 @ @ public class CallActor extends AbsCallActor { < nl > this . callback = callback ; < nl > this . peer = peer ; < nl > this . isAnswered = true ; < nl > - this . isConnected = false ; < nl > + this . isActive = false ; < nl > } < nl > < nl > @ Override < nl > @ @ - 92 , 6 + 92 , 25 @ @ public class CallActor extends AbsCallActor { < nl > } < nl > } < nl > < nl > + @ Override < nl > + public void onCallConnected ( ) { < nl > + / / callVM . getState ( ) . change ( ) < nl > + } < nl > + < nl > + @ Override < nl > + public void onCallEnabled ( ) { < nl > + isActive = true ; < nl > + if ( isAnswered ) { < nl > + callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; < nl > + callVM . setCallStart ( im . actor . runtime . Runtime . getCurrentTime ( ) ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onBusStopped ( ) { < nl > + self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > + } < nl > + < nl > < nl > @ Override < nl > public void onMuteChanged ( boolean isMuted ) { < nl > @ @ - 103 , 8 + 122 , 10 @ @ public class CallActor extends AbsCallActor { < nl > if ( ! isAnswered & & ! isRejected ) { < nl > isAnswered = true ; < nl > request ( new RequestJoinCall ( callId ) ) ; < nl > - if ( isConnected ) { < nl > + < nl > + if ( isActive ) { < nl > callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; < nl > + callVM . setCallStart ( im . actor . runtime . Runtime . getCurrentTime ( ) ) ; < nl > } else { < nl > callVM . getState ( ) . change ( CallState . CONNECTING ) ; < nl > } < nl > @ @ - 123 , 8 + 144 , 12 @ @ public class CallActor extends AbsCallActor { < nl > super . postStop ( ) ; < nl > if ( callVM ! = null ) { < nl > callVM . getState ( ) . change ( CallState . ENDED ) ; < nl > + callVM . setCallEnd ( im . actor . runtime . Runtime . getCurrentTime ( ) ) ; < nl > } < nl > callBus . kill ( ) ; < nl > + if ( callId ! = 0 ) { < nl > + callManager . send ( new CallManagerActor . OnCallEnded ( callId ) , self ( ) ) ; < nl > + } < nl > } < nl > < nl > / / < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > index af1c090 . . ed9d3a8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > @ @ - 75 , 5 + 75 , 35 @ @ public abstract class AbsCallActor extends ModuleActor implements CallBusCallbac < nl > } < nl > } ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onCallConnected ( ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onCallConnected ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onCallEnabled ( ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onCallEnabled ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onBusStopped ( ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onBusStopped ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index a80879d . . 025cf33 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 33 , 6 + 33 , 8 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > private boolean isMasterReady ; < nl > private long masterDeviceId ; < nl > private PeerCallInt peerCall ; < nl > + private boolean isConnected = false ; < nl > + private boolean isEnabled = false ; < nl > < nl > public CallBusActor ( final CallBusCallback callBusCallback , PeerSettings selfSettings , ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 93 , 7 + 95 , 14 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > < nl > @ Override < nl > public void onPeerStateChanged ( long deviceId , PeerState state ) { < nl > - < nl > + if ( state = = PeerState . CONNECTED & & ! isConnected & & ! isEnabled ) { < nl > + isConnected = true ; < nl > + callBusCallback . onCallConnected ( ) ; < nl > + } < nl > + if ( state = = PeerState . ACTIVE & & ! isEnabled ) { < nl > + isEnabled = true ; < nl > + callBusCallback . onCallEnabled ( ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > @ @ - 199 , 6 + 208 , 16 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > } < nl > < nl > @ Override < nl > + public void postStop ( ) { < nl > + super . postStop ( ) ; < nl > + if ( peerCall ! = null ) { < nl > + peerCall . kill ( ) ; < nl > + peerCall = null ; < nl > + } < nl > + callBusCallback . onBusStopped ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof JoinBus ) { < nl > joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > index 13c8489 . . e26bff1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > @ @ - 1 , 6 + 1 , 12 @ @ < nl > package im . actor . core . modules . calls . peers ; < nl > < nl > public interface CallBusCallback { < nl > - < nl > + < nl > void onBusStarted ( String busId ) ; < nl > + < nl > + void onCallConnected ( ) ; < nl > + < nl > + void onCallEnabled ( ) ; < nl > + < nl > + void onBusStopped ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > index 3100d73 . . 090d9df 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > @ @ - 121 , 6 + 121 , 10 @ @ public class PeerCallActor extends ModuleActor { < nl > d . kill ( ) ; < nl > } < nl > refs . clear ( ) ; < nl > + if ( webRTCMediaStream ! = null ) { < nl > + webRTCMediaStream . setEnabled ( false ) ; < nl > + webRTCMediaStream . close ( ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index d2d7a44 . . 6b6cd76 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 47 , 7 + 47 , 6 @ @ public class PeerConnectionActor extends ModuleActor { < nl > < nl > @ NotNull < nl > private WebRTCPeerConnection peerConnection ; < nl > - private SDPOptimizer sdpOptimizer ; < nl > private boolean isReady = false ; < nl > private boolean isReadyForCandidates = false ; < nl > @ NotNull < nl > @ @ - 62 , 7 + 61 , 6 @ @ public class PeerConnectionActor extends ModuleActor { < nl > this . TAG = " PeerConnection " ; < nl > this . callback = callback ; < nl > this . stream = mediaStream ; < nl > - this . sdpOptimizer = new SDPOptimizer ( selfSettings , theirSettings ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 136 , 7 + 134 , 7 @ @ public class PeerConnectionActor extends ModuleActor { < nl > / / < nl > < nl > isReady = false ; < nl > - peerConnection . createOffer ( ) . map ( OPTIMIZE _ OWN _ SDP ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { < nl > + peerConnection . createOffer ( ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { < nl > @ Override < nl > public Promise < WebRTCSessionDescription > apply ( WebRTCSessionDescription description ) { < nl > return peerConnection . setLocalDescription ( description ) ; < nl > @ @ - 178 , 7 + 176 , 7 @ @ public class PeerConnectionActor extends ModuleActor { < nl > public Promise < WebRTCSessionDescription > apply ( WebRTCSessionDescription description ) { < nl > return peerConnection . createAnswer ( ) ; < nl > } < nl > - } ) . map ( OPTIMIZE _ OWN _ SDP ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { < nl > + } ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { < nl > @ Override < nl > public Promise < WebRTCSessionDescription > apply ( WebRTCSessionDescription description ) { < nl > return peerConnection . setLocalDescription ( description ) ; < nl > @ @ - 265 , 28 + 263 , 6 @ @ public class PeerConnectionActor extends ModuleActor { < nl > } < nl > < nl > / / < nl > - / / Configuration < nl > - / / < nl > - < nl > - private Function < WebRTCSessionDescription , WebRTCSessionDescription > OPTIMIZE _ OWN _ SDP < nl > - = new Function < WebRTCSessionDescription , WebRTCSessionDescription > ( ) { < nl > - @ Override < nl > - public WebRTCSessionDescription apply ( WebRTCSessionDescription description ) { < nl > - return new WebRTCSessionDescription ( description . getType ( ) , < nl > - sdpOptimizer . optimizeOwnSDP ( description . getSdp ( ) ) ) ; < nl > - } < nl > - } ; < nl > - < nl > - private Function < WebRTCSessionDescription , WebRTCSessionDescription > OPTIMIZE _ THEIR _ SDP < nl > - = new Function < WebRTCSessionDescription , WebRTCSessionDescription > ( ) { < nl > - @ Override < nl > - public WebRTCSessionDescription apply ( WebRTCSessionDescription description ) { < nl > - return new WebRTCSessionDescription ( description . getType ( ) , < nl > - sdpOptimizer . optimizeTheirSDP ( description . getSdp ( ) ) ) ; < nl > - } < nl > - } ; < nl > - < nl > - / / < nl > / / Messages < nl > / / < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / SDPOptimizer . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / SDPOptimizer . java < nl > deleted file mode 100644 < nl > index 38280f4 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / SDPOptimizer . java < nl > + + + / dev / null < nl > @ @ - 1 , 42 + 0 , 0 @ @ < nl > - package im . actor . core . modules . calls . peers ; < nl > - < nl > - public class SDPOptimizer { < nl > - < nl > - private final PeerSettings ownSettings ; < nl > - private final PeerSettings theirSettings ; < nl > - < nl > - public SDPOptimizer ( PeerSettings ownSettings , PeerSettings theirSettings ) { < nl > - this . ownSettings = ownSettings ; < nl > - this . theirSettings = theirSettings ; < nl > - } < nl > - < nl > - public String optimizeOwnSDP ( String sdp ) { < nl > - / / SDPScheme sdpScheme = SDP . parse ( description . getSdp ( ) ) ; < nl > - / / < nl > - / / for ( SDPMedia m : sdpScheme . getMediaLevel ( ) ) { < nl > - / / < nl > - / / / / Disabling media streams < nl > - / / / / m . setMode ( SDPMediaMode . INACTIVE ) ; < nl > - / / < nl > - / / / / Optimizing opus < nl > - / / if ( " audio " . equals ( m . getType ( ) ) ) { < nl > - / / for ( SDPCodec codec : m . getCodecs ( ) ) { < nl > - / / if ( " opus " . equals ( codec . getName ( ) ) ) { < nl > - / / codec . getFormat ( ) . put ( " maxcodedaudiobandwidth " , " 16000 " ) ; < nl > - / / codec . getFormat ( ) . put ( " maxaveragebitrate " , " 20000 " ) ; < nl > - / / codec . getFormat ( ) . put ( " stereo " , " 0 " ) ; < nl > - / / codec . getFormat ( ) . put ( " useinbandfec " , " 1 " ) ; < nl > - / / codec . getFormat ( ) . put ( " usedtx " , " 1 " ) ; < nl > - / / } < nl > - / / } < nl > - / / } < nl > - / / } < nl > - / / < nl > - / / return new WebRTCSessionDescription ( description . getType ( ) , sdpScheme . toSDP ( ) ) ; < nl > - return sdp ; < nl > - } < nl > - < nl > - public String optimizeTheirSDP ( String sdp ) { < nl > - return sdp ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java < nl > index 39d1bb1 . . 1d52dec 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java < nl > @ @ - 6 , 7 + 6 , 11 @ @ import java . util . ArrayList ; < nl > < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . viewmodel . generics . BooleanValueModel ; < nl > + import im . actor . core . viewmodel . generics . IntValueModel ; < nl > + import im . actor . runtime . * ; < nl > + import im . actor . runtime . actors . ActorTime ; < nl > import im . actor . runtime . mvvm . ValueModel ; < nl > + import im . actor . runtime . threading . CommonTimer ; < nl > < nl > public class CallVM { < nl > < nl > @ @ - 21 , 8 + 25 , 14 @ @ public class CallVM { < nl > @ Property ( " nonatomic , readonly " ) < nl > private final BooleanValueModel isMuted ; < nl > @ Property ( " nonatomic , readonly " ) < nl > + private long callStart ; < nl > + @ Property ( " nonatomic , readonly " ) < nl > + private long callEnd ; < nl > + @ Property ( " nonatomic , readonly " ) < nl > private final boolean isOutgoing ; < nl > < nl > + private CommonTimer presenceTimer ; < nl > + < nl > public CallVM ( long callId , Peer peer , boolean isOutgoing , ArrayList < CallMember > initialMembers , CallState state ) { < nl > this . callId = callId ; < nl > this . peer = peer ; < nl > @ @ - 30 , 6 + 40 , 7 @ @ public class CallVM { < nl > this . state = new ValueModel < > ( " calls . " + callId + " . state " , state ) ; < nl > this . members = new ValueModel < > ( " calls . " + callId + " . members " , new ArrayList < > ( initialMembers ) ) ; < nl > this . isMuted = new BooleanValueModel ( " calls . " + callId + " . state " , false ) ; < nl > + this . callStart = 0 ; < nl > } < nl > < nl > public boolean isOutgoing ( ) { < nl > @ @ - 55 , 4 + 66 , 20 @ @ public class CallVM { < nl > public ValueModel < ArrayList < CallMember > > getMembers ( ) { < nl > return members ; < nl > } < nl > + < nl > + public void setCallStart ( long callStart ) { < nl > + this . callStart = callStart ; < nl > + } < nl > + < nl > + public long getCallStart ( ) { < nl > + return callStart ; < nl > + } < nl > + < nl > + public long getCallEnd ( ) { < nl > + return callEnd ; < nl > + } < nl > + < nl > + public void setCallEnd ( long callEnd ) { < nl > + this . callEnd = callEnd ; < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java < nl > index d76d8fe . . ac273fe 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java < nl > @ @ - 16 , 16 + 16 , 21 @ @ public class CommonTimer { < nl > return new Actor ( ) ; < nl > } < nl > } ) ; < nl > - private static final Scheduler COMMON _ SCHEDULER = new Scheduler ( COMMON _ TIMER _ ACTOR ) ; < nl > + private static final Scheduler COMMON _ SCHEDULER = new Scheduler ( COMMON _ TIMER _ ACTOR ) ; < nl > < nl > private final Runnable runnable ; < nl > private Cancellable lastSchedule ; < nl > + private boolean isDisposed ; < nl > < nl > public CommonTimer ( Runnable runnable ) { < nl > this . runnable = runnable ; < nl > } < nl > < nl > public void schedule ( long time ) { < nl > + if ( isDisposed ) { < nl > + return ; < nl > + } < nl > + < nl > if ( lastSchedule ! = null ) { < nl > lastSchedule . cancel ( ) ; < nl > } < nl > @ @ - 38 , 4 + 43 , 9 @ @ public class CommonTimer { < nl > lastSchedule . cancel ( ) ; < nl > } < nl > } < nl > + < nl > + public void dispose ( ) { < nl > + isDisposed = true ; < nl > + cancel ( ) ; < nl > + } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java 
 index 8e98424 . . e2ecc7a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Dialog . java 
 @ @ - 50 , 6 + 50 , 13 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 @ SuppressWarnings ( " NullableProblems " ) 
 @ Property ( " readonly , nonatomic " ) 
 private String dialogTitle ; 
 + @ Nullable 
 + @ Property ( " readonly , nonatomic " ) 
 + private Avatar dialogAvatar ; 
 + @ Property ( " readonly , nonatomic " ) 
 + private boolean isBot ; 
 + @ Property ( " readonly , nonatomic " ) 
 + private boolean isChannel ; 
 @ Property ( " readonly , nonatomic " ) 
 private int unreadCount ; 
 
 @ @ - 82 , 14 + 89 , 12 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 private int relatedUid ; 
 
 
 - @ Nullable 
 - @ Property ( " readonly , nonatomic " ) 
 - private Avatar dialogAvatar ; 
 - 
 public Dialog ( @ NotNull Peer peer , 
 long sortKey , 
 @ NotNull String dialogTitle , 
 @ Nullable Avatar dialogAvatar , 
 + boolean isBot , 
 + boolean isChannel , 
 int unreadCount , 
 long rid , 
 @ NotNull ContentType messageType , 
 @ @ - 104 , 6 + 109 , 8 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 this . peer = peer ; 
 this . dialogTitle = StringUtil . ellipsize ( dialogTitle , MAX _ LENGTH ) ; 
 this . dialogAvatar = dialogAvatar ; 
 + this . isBot = isBot ; 
 + this . isChannel = isChannel ; 
 this . unreadCount = unreadCount ; 
 this . rid = rid ; 
 this . sortDate = sortKey ; 
 @ @ - 130 , 6 + 137 , 19 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 return dialogTitle ; 
 } 
 
 + @ Nullable 
 + public Avatar getDialogAvatar ( ) { 
 + return dialogAvatar ; 
 + } 
 + 
 + public boolean isBot ( ) { 
 + return isBot ; 
 + } 
 + 
 + public boolean isChannel ( ) { 
 + return isChannel ; 
 + } 
 + 
 public int getUnreadCount ( ) { 
 return unreadCount ; 
 } 
 @ @ - 164 , 10 + 184 , 6 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 return relatedUid ; 
 } 
 
 - @ Nullable 
 - public Avatar getDialogAvatar ( ) { 
 - return dialogAvatar ; 
 - } 
 
 @ Nullable 
 public Long getKnownReadDate ( ) { 
 @ @ - 188 , 8 + 204 , 9 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 } 
 
 public Dialog editPeerInfo ( String title , Avatar dialogAvatar ) { 
 - return new Dialog ( peer , sortDate , StringUtil . ellipsize ( title , MAX _ LENGTH ) , dialogAvatar , unreadCount , rid , messageType , text , senderId , 
 - date , relatedUid , knownReadDate , knownReceiveDate ) ; 
 + return new Dialog ( peer , sortDate , StringUtil . ellipsize ( title , MAX _ LENGTH ) , dialogAvatar , 
 + isBot , isChannel , unreadCount , rid , messageType , text , senderId , date , relatedUid , 
 + knownReadDate , knownReceiveDate ) ; 
 } 
 
 @ Override 
 @ @ - 201 , 6 + 218 , 8 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 if ( av ! = null ) { 
 dialogAvatar = new Avatar ( av ) ; 
 } 
 + isBot = values . getBool ( 15 , false ) ; 
 + isChannel = values . getBool ( 16 , false ) ; 
 
 unreadCount = values . getInt ( 4 ) ; 
 sortDate = values . getLong ( 5 ) ; 
 @ @ - 224 , 6 + 243 , 8 @ @ public class Dialog extends BserObject implements ListEngineItem { 
 if ( dialogAvatar ! = null ) { 
 writer . writeObject ( 3 , dialogAvatar ) ; 
 } 
 + writer . writeBool ( 15 , isBot ) ; 
 + writer . writeBool ( 16 , isChannel ) ; 
 writer . writeInt ( 4 , unreadCount ) ; 
 writer . writeLong ( 5 , sortDate ) ; 
 writer . writeLong ( 6 , rid ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java 
 index cfa9fce . . 8d1fe1f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / DialogBuilder . java 
 @ @ - 22 , 6 + 22 , 8 @ @ public class DialogBuilder { 
 private int relatedUid = 0 ; 
 private Long knownReadDate ; 
 private Long knownReceiveDate ; 
 + private boolean isBot ; 
 + private boolean isChannel ; 
 
 public DialogBuilder ( ) { 
 
 @ @ - 41 , 6 + 43 , 8 @ @ public class DialogBuilder { 
 relatedUid = dialog . getRelatedUid ( ) ; 
 knownReadDate = dialog . getKnownReadDate ( ) ; 
 knownReceiveDate = dialog . getKnownReceiveDate ( ) ; 
 + isBot = dialog . isBot ( ) ; 
 + isChannel = dialog . isChannel ( ) ; 
 } 
 
 public DialogBuilder setPeer ( Peer peer ) { 
 @ @ - 98 , 6 + 102 , 16 @ @ public class DialogBuilder { 
 return this ; 
 } 
 
 + public DialogBuilder setIsBot ( boolean isBot ) { 
 + this . isBot = isBot ; 
 + return this ; 
 + } 
 + 
 + public DialogBuilder setIsChannel ( boolean isChannel ) { 
 + this . isChannel = isChannel ; 
 + return this ; 
 + } 
 + 
 public DialogBuilder updateKnownReadDate ( Long knownReadDate ) { 
 if ( knownReadDate ! = null & & ( this . knownReadDate = = null | | this . knownReadDate < knownReadDate ) ) { 
 this . knownReadDate = knownReadDate ; 
 @ @ - 113 , 7 + 127 , 7 @ @ public class DialogBuilder { 
 } 
 
 public Dialog createDialog ( ) { 
 - return new Dialog ( peer , sortKey , dialogTitle , dialogAvatar , unreadCount , rid , messageType , 
 - text , senderId , time , relatedUid , knownReadDate , knownReceiveDate ) ; 
 + return new Dialog ( peer , sortKey , dialogTitle , dialogAvatar , isBot , isChannel , unreadCount , 
 + rid , messageType , text , senderId , time , relatedUid , knownReadDate , knownReceiveDate ) ; 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java 
 index bde055b . . 6f69430 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java 
 @ @ - 13 , 6 + 13 , 7 @ @ import im . actor . core . entity . ContentType ; 
 import im . actor . core . entity . Dialog ; 
 import im . actor . core . entity . DialogBuilder ; 
 import im . actor . core . entity . Group ; 
 + import im . actor . core . entity . GroupType ; 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . User ; 
 @ @ - 86 , 7 + 87 , 11 @ @ public class DialogsActor extends ModuleActor { 
 . setMessageType ( contentDescription . getContentType ( ) ) 
 . setText ( contentDescription . getText ( ) ) 
 . setRelatedUid ( contentDescription . getRelatedUser ( ) ) 
 - . setSenderId ( message . getSenderId ( ) ) ; 
 + . setSenderId ( message . getSenderId ( ) ) 
 + . setDialogTitle ( peerDesc . getTitle ( ) ) 
 + . setDialogAvatar ( peerDesc . getAvatar ( ) ) 
 + . setIsBot ( peerDesc . isBot ( ) ) 
 + . setIsChannel ( peerDesc . isChannel ( ) ) ; 
 
 if ( counter > = 0 ) { 
 builder . setUnreadCount ( counter ) ; 
 @ @ - 102 , 8 + 107 , 6 @ @ public class DialogsActor extends ModuleActor { 
 } 
 
 builder . setPeer ( dialog . getPeer ( ) ) 
 - . setDialogTitle ( dialog . getDialogTitle ( ) ) 
 - . setDialogAvatar ( dialog . getDialogAvatar ( ) ) 
 . setSortKey ( dialog . getSortDate ( ) ) 
 . updateKnownReceiveDate ( dialog . getKnownReceiveDate ( ) ) 
 . updateKnownReadDate ( dialog . getKnownReadDate ( ) ) ; 
 @ @ - 121 , 8 + 124 , 6 @ @ public class DialogsActor extends ModuleActor { 
 } 
 
 builder . setPeer ( peer ) 
 - . setDialogTitle ( peerDesc . getTitle ( ) ) 
 - . setDialogAvatar ( peerDesc . getAvatar ( ) ) 
 . setSortKey ( message . getSortDate ( ) ) ; 
 
 forceUpdate = true ; 
 @ @ - 342 , 10 + 343 , 10 @ @ public class DialogsActor extends ModuleActor { 
 switch ( peer . getPeerType ( ) ) { 
 case PRIVATE : 
 User u = getUser ( peer . getPeerId ( ) ) ; 
 - return new PeerDesc ( u . getName ( ) , u . getAvatar ( ) ) ; 
 + return new PeerDesc ( u . getName ( ) , u . getAvatar ( ) , u . isBot ( ) , false ) ; 
 case GROUP : 
 Group g = getGroup ( peer . getPeerId ( ) ) ; 
 - return new PeerDesc ( g . getTitle ( ) , g . getAvatar ( ) ) ; 
 + return new PeerDesc ( g . getTitle ( ) , g . getAvatar ( ) , false , g . getGroupType ( ) = = GroupType . CHANNEL ) ; 
 default : 
 return null ; 
 } 
 @ @ - 355 , 10 + 356 , 14 @ @ public class DialogsActor extends ModuleActor { 
 
 private String title ; 
 private Avatar avatar ; 
 + private boolean isBot ; 
 + private boolean isChannel ; 
 
 - private PeerDesc ( String title , Avatar avatar ) { 
 + private PeerDesc ( String title , Avatar avatar , boolean isBot , boolean isChannel ) { 
 this . title = title ; 
 this . avatar = avatar ; 
 + this . isBot = isBot ; 
 + this . isChannel = isChannel ; 
 } 
 
 public String getTitle ( ) { 
 @ @ - 368 , 6 + 373 , 14 @ @ public class DialogsActor extends ModuleActor { 
 public Avatar getAvatar ( ) { 
 return avatar ; 
 } 
 + 
 + public boolean isBot ( ) { 
 + return isBot ; 
 + } 
 + 
 + public boolean isChannel ( ) { 
 + return isChannel ; 
 + } 
 } 
 
 / / Messages

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 index 3bc6444 . . d6c14d7 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 @ @ - 24 , 6 + 24 , 7 @ @ public class AACallViewController : AAViewController { 
 public let videoButton = AACircleButton ( size : 72 ) 
 
 var isScheduledDispose = false 
 + var timer : NSTimer ? 
 
 public init ( callId : jlong ) { 
 self . callId = callId 
 @ @ - 172 , 10 + 173 , 10 @ @ public class AACallViewController : AAViewController { 
 self . answerCallButtonText . hidden = true 
 self . declineCallButton . hidden = false 
 self . declineCallButtonText . hidden = true 
 - self . callState . text = " 0 : 00 " 
 + self . startTimer ( ) 
 self . layoutButtons ( ) 
 } else if ( ACCallState _ Enum . ENDED = = value . toNSEnum ( ) ) { 
 - self . callState . text = " Call Ended " 
 + self . stopTimer ( ) 
 self . muteButton . hidden = true 
 self . speakerButton . hidden = true 
 self . videoButton . hidden = true 
 @ @ - 230 , 6 + 231 , 33 @ @ public class AACallViewController : AAViewController { 
 UIDevice . currentDevice ( ) . proximityMonitoringEnabled = true 
 } 
 
 + func startTimer ( ) { 
 + timer ? . invalidate ( ) 
 + timer = NSTimer . scheduledTimerWithTimeInterval ( 1 . 0 , target : self , selector : " updateTimer " , userInfo : nil , repeats : true ) 
 + updateTimer ( ) 
 + } 
 + 
 + func updateTimer ( ) { 
 + if call . callStart > 0 { 
 + let end = call . callEnd > 0 ? call . callEnd : jlong ( NSDate ( ) . timeIntervalSince1970 * 1000 ) 
 + let secs = Int ( ( end - call . callStart ) / 1000 ) 
 + 
 + let seconds = secs % 60 
 + let minutes = secs / 60 
 + 
 + self . callState . text = NSString ( format : " % 0 . 2d : % 0 . 2d " , minutes , seconds ) as String 
 + } else { 
 + self . callState . text = " 0 : 00 " 
 + } 
 + } 
 + 
 + func stopTimer ( ) { 
 + timer ? . invalidate ( ) 
 + timer = nil 
 + updateTimer ( ) 
 + / / self . callState . text = " Call Ended " 
 + } 
 + 
 public override func viewWillDisappear ( animated : Bool ) { 
 super . viewWillDisappear ( animated ) 
 UIDevice . currentDevice ( ) . proximityMonitoringEnabled = false 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 5ff7abf . . b60d213 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 25 , 7 + 25 , 7 @ @ public class CallActor extends AbsCallActor { 
 private CallVM callVM ; 
 private CommandCallback < Long > callback ; 
 
 - private boolean isConnected ; 
 + private boolean isActive ; 
 private boolean isAnswered ; 
 private boolean isRejected ; 
 
 @ @ - 34 , 7 + 34 , 7 @ @ public class CallActor extends AbsCallActor { 
 this . isMaster = false ; 
 this . callId = callId ; 
 this . isAnswered = false ; 
 - this . isConnected = false ; 
 + this . isActive = false ; 
 } 
 
 public CallActor ( Peer peer , CommandCallback < Long > callback , ModuleContext context ) { 
 @ @ - 43 , 7 + 43 , 7 @ @ public class CallActor extends AbsCallActor { 
 this . callback = callback ; 
 this . peer = peer ; 
 this . isAnswered = true ; 
 - this . isConnected = false ; 
 + this . isActive = false ; 
 } 
 
 @ Override 
 @ @ - 92 , 6 + 92 , 25 @ @ public class CallActor extends AbsCallActor { 
 } 
 } 
 
 + @ Override 
 + public void onCallConnected ( ) { 
 + / / callVM . getState ( ) . change ( ) 
 + } 
 + 
 + @ Override 
 + public void onCallEnabled ( ) { 
 + isActive = true ; 
 + if ( isAnswered ) { 
 + callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; 
 + callVM . setCallStart ( im . actor . runtime . Runtime . getCurrentTime ( ) ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onBusStopped ( ) { 
 + self ( ) . send ( PoisonPill . INSTANCE ) ; 
 + } 
 + 
 
 @ Override 
 public void onMuteChanged ( boolean isMuted ) { 
 @ @ - 103 , 8 + 122 , 10 @ @ public class CallActor extends AbsCallActor { 
 if ( ! isAnswered & & ! isRejected ) { 
 isAnswered = true ; 
 request ( new RequestJoinCall ( callId ) ) ; 
 - if ( isConnected ) { 
 + 
 + if ( isActive ) { 
 callVM . getState ( ) . change ( CallState . IN _ PROGRESS ) ; 
 + callVM . setCallStart ( im . actor . runtime . Runtime . getCurrentTime ( ) ) ; 
 } else { 
 callVM . getState ( ) . change ( CallState . CONNECTING ) ; 
 } 
 @ @ - 123 , 8 + 144 , 12 @ @ public class CallActor extends AbsCallActor { 
 super . postStop ( ) ; 
 if ( callVM ! = null ) { 
 callVM . getState ( ) . change ( CallState . ENDED ) ; 
 + callVM . setCallEnd ( im . actor . runtime . Runtime . getCurrentTime ( ) ) ; 
 } 
 callBus . kill ( ) ; 
 + if ( callId ! = 0 ) { 
 + callManager . send ( new CallManagerActor . OnCallEnded ( callId ) , self ( ) ) ; 
 + } 
 } 
 
 / / 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 index af1c090 . . ed9d3a8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 @ @ - 75 , 5 + 75 , 35 @ @ public abstract class AbsCallActor extends ModuleActor implements CallBusCallbac 
 } 
 } ) ; 
 } 
 + 
 + @ Override 
 + public void onCallConnected ( ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onCallConnected ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 + public void onCallEnabled ( ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onCallEnabled ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 + public void onBusStopped ( ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onBusStopped ( ) ; 
 + } 
 + } ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index a80879d . . 025cf33 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 33 , 6 + 33 , 8 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 private boolean isMasterReady ; 
 private long masterDeviceId ; 
 private PeerCallInt peerCall ; 
 + private boolean isConnected = false ; 
 + private boolean isEnabled = false ; 
 
 public CallBusActor ( final CallBusCallback callBusCallback , PeerSettings selfSettings , ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 93 , 7 + 95 , 14 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 
 @ Override 
 public void onPeerStateChanged ( long deviceId , PeerState state ) { 
 - 
 + if ( state = = PeerState . CONNECTED & & ! isConnected & & ! isEnabled ) { 
 + isConnected = true ; 
 + callBusCallback . onCallConnected ( ) ; 
 + } 
 + if ( state = = PeerState . ACTIVE & & ! isEnabled ) { 
 + isEnabled = true ; 
 + callBusCallback . onCallEnabled ( ) ; 
 + } 
 } 
 
 @ Override 
 @ @ - 199 , 6 + 208 , 16 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 } 
 
 @ Override 
 + public void postStop ( ) { 
 + super . postStop ( ) ; 
 + if ( peerCall ! = null ) { 
 + peerCall . kill ( ) ; 
 + peerCall = null ; 
 + } 
 + callBusCallback . onBusStopped ( ) ; 
 + } 
 + 
 + @ Override 
 public void onReceive ( Object message ) { 
 if ( message instanceof JoinBus ) { 
 joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 index 13c8489 . . e26bff1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 @ @ - 1 , 6 + 1 , 12 @ @ 
 package im . actor . core . modules . calls . peers ; 
 
 public interface CallBusCallback { 
 - 
 + 
 void onBusStarted ( String busId ) ; 
 + 
 + void onCallConnected ( ) ; 
 + 
 + void onCallEnabled ( ) ; 
 + 
 + void onBusStopped ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 index 3100d73 . . 090d9df 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 @ @ - 121 , 6 + 121 , 10 @ @ public class PeerCallActor extends ModuleActor { 
 d . kill ( ) ; 
 } 
 refs . clear ( ) ; 
 + if ( webRTCMediaStream ! = null ) { 
 + webRTCMediaStream . setEnabled ( false ) ; 
 + webRTCMediaStream . close ( ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index d2d7a44 . . 6b6cd76 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 47 , 7 + 47 , 6 @ @ public class PeerConnectionActor extends ModuleActor { 
 
 @ NotNull 
 private WebRTCPeerConnection peerConnection ; 
 - private SDPOptimizer sdpOptimizer ; 
 private boolean isReady = false ; 
 private boolean isReadyForCandidates = false ; 
 @ NotNull 
 @ @ - 62 , 7 + 61 , 6 @ @ public class PeerConnectionActor extends ModuleActor { 
 this . TAG = " PeerConnection " ; 
 this . callback = callback ; 
 this . stream = mediaStream ; 
 - this . sdpOptimizer = new SDPOptimizer ( selfSettings , theirSettings ) ; 
 } 
 
 @ Override 
 @ @ - 136 , 7 + 134 , 7 @ @ public class PeerConnectionActor extends ModuleActor { 
 / / 
 
 isReady = false ; 
 - peerConnection . createOffer ( ) . map ( OPTIMIZE _ OWN _ SDP ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { 
 + peerConnection . createOffer ( ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { 
 @ Override 
 public Promise < WebRTCSessionDescription > apply ( WebRTCSessionDescription description ) { 
 return peerConnection . setLocalDescription ( description ) ; 
 @ @ - 178 , 7 + 176 , 7 @ @ public class PeerConnectionActor extends ModuleActor { 
 public Promise < WebRTCSessionDescription > apply ( WebRTCSessionDescription description ) { 
 return peerConnection . createAnswer ( ) ; 
 } 
 - } ) . map ( OPTIMIZE _ OWN _ SDP ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { 
 + } ) . mapPromise ( new Function < WebRTCSessionDescription , Promise < WebRTCSessionDescription > > ( ) { 
 @ Override 
 public Promise < WebRTCSessionDescription > apply ( WebRTCSessionDescription description ) { 
 return peerConnection . setLocalDescription ( description ) ; 
 @ @ - 265 , 28 + 263 , 6 @ @ public class PeerConnectionActor extends ModuleActor { 
 } 
 
 / / 
 - / / Configuration 
 - / / 
 - 
 - private Function < WebRTCSessionDescription , WebRTCSessionDescription > OPTIMIZE _ OWN _ SDP 
 - = new Function < WebRTCSessionDescription , WebRTCSessionDescription > ( ) { 
 - @ Override 
 - public WebRTCSessionDescription apply ( WebRTCSessionDescription description ) { 
 - return new WebRTCSessionDescription ( description . getType ( ) , 
 - sdpOptimizer . optimizeOwnSDP ( description . getSdp ( ) ) ) ; 
 - } 
 - } ; 
 - 
 - private Function < WebRTCSessionDescription , WebRTCSessionDescription > OPTIMIZE _ THEIR _ SDP 
 - = new Function < WebRTCSessionDescription , WebRTCSessionDescription > ( ) { 
 - @ Override 
 - public WebRTCSessionDescription apply ( WebRTCSessionDescription description ) { 
 - return new WebRTCSessionDescription ( description . getType ( ) , 
 - sdpOptimizer . optimizeTheirSDP ( description . getSdp ( ) ) ) ; 
 - } 
 - } ; 
 - 
 - / / 
 / / Messages 
 / / 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / SDPOptimizer . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / SDPOptimizer . java 
 deleted file mode 100644 
 index 38280f4 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / SDPOptimizer . java 
 + + + / dev / null 
 @ @ - 1 , 42 + 0 , 0 @ @ 
 - package im . actor . core . modules . calls . peers ; 
 - 
 - public class SDPOptimizer { 
 - 
 - private final PeerSettings ownSettings ; 
 - private final PeerSettings theirSettings ; 
 - 
 - public SDPOptimizer ( PeerSettings ownSettings , PeerSettings theirSettings ) { 
 - this . ownSettings = ownSettings ; 
 - this . theirSettings = theirSettings ; 
 - } 
 - 
 - public String optimizeOwnSDP ( String sdp ) { 
 - / / SDPScheme sdpScheme = SDP . parse ( description . getSdp ( ) ) ; 
 - / / 
 - / / for ( SDPMedia m : sdpScheme . getMediaLevel ( ) ) { 
 - / / 
 - / / / / Disabling media streams 
 - / / / / m . setMode ( SDPMediaMode . INACTIVE ) ; 
 - / / 
 - / / / / Optimizing opus 
 - / / if ( " audio " . equals ( m . getType ( ) ) ) { 
 - / / for ( SDPCodec codec : m . getCodecs ( ) ) { 
 - / / if ( " opus " . equals ( codec . getName ( ) ) ) { 
 - / / codec . getFormat ( ) . put ( " maxcodedaudiobandwidth " , " 16000 " ) ; 
 - / / codec . getFormat ( ) . put ( " maxaveragebitrate " , " 20000 " ) ; 
 - / / codec . getFormat ( ) . put ( " stereo " , " 0 " ) ; 
 - / / codec . getFormat ( ) . put ( " useinbandfec " , " 1 " ) ; 
 - / / codec . getFormat ( ) . put ( " usedtx " , " 1 " ) ; 
 - / / } 
 - / / } 
 - / / } 
 - / / } 
 - / / 
 - / / return new WebRTCSessionDescription ( description . getType ( ) , sdpScheme . toSDP ( ) ) ; 
 - return sdp ; 
 - } 
 - 
 - public String optimizeTheirSDP ( String sdp ) { 
 - return sdp ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java 
 index 39d1bb1 . . 1d52dec 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java 
 @ @ - 6 , 7 + 6 , 11 @ @ import java . util . ArrayList ; 
 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . viewmodel . generics . BooleanValueModel ; 
 + import im . actor . core . viewmodel . generics . IntValueModel ; 
 + import im . actor . runtime . * ; 
 + import im . actor . runtime . actors . ActorTime ; 
 import im . actor . runtime . mvvm . ValueModel ; 
 + import im . actor . runtime . threading . CommonTimer ; 
 
 public class CallVM { 
 
 @ @ - 21 , 8 + 25 , 14 @ @ public class CallVM { 
 @ Property ( " nonatomic , readonly " ) 
 private final BooleanValueModel isMuted ; 
 @ Property ( " nonatomic , readonly " ) 
 + private long callStart ; 
 + @ Property ( " nonatomic , readonly " ) 
 + private long callEnd ; 
 + @ Property ( " nonatomic , readonly " ) 
 private final boolean isOutgoing ; 
 
 + private CommonTimer presenceTimer ; 
 + 
 public CallVM ( long callId , Peer peer , boolean isOutgoing , ArrayList < CallMember > initialMembers , CallState state ) { 
 this . callId = callId ; 
 this . peer = peer ; 
 @ @ - 30 , 6 + 40 , 7 @ @ public class CallVM { 
 this . state = new ValueModel < > ( " calls . " + callId + " . state " , state ) ; 
 this . members = new ValueModel < > ( " calls . " + callId + " . members " , new ArrayList < > ( initialMembers ) ) ; 
 this . isMuted = new BooleanValueModel ( " calls . " + callId + " . state " , false ) ; 
 + this . callStart = 0 ; 
 } 
 
 public boolean isOutgoing ( ) { 
 @ @ - 55 , 4 + 66 , 20 @ @ public class CallVM { 
 public ValueModel < ArrayList < CallMember > > getMembers ( ) { 
 return members ; 
 } 
 + 
 + public void setCallStart ( long callStart ) { 
 + this . callStart = callStart ; 
 + } 
 + 
 + public long getCallStart ( ) { 
 + return callStart ; 
 + } 
 + 
 + public long getCallEnd ( ) { 
 + return callEnd ; 
 + } 
 + 
 + public void setCallEnd ( long callEnd ) { 
 + this . callEnd = callEnd ; 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java 
 index d76d8fe . . ac273fe 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / threading / CommonTimer . java 
 @ @ - 16 , 16 + 16 , 21 @ @ public class CommonTimer { 
 return new Actor ( ) ; 
 } 
 } ) ; 
 - private static final Scheduler COMMON _ SCHEDULER = new Scheduler ( COMMON _ TIMER _ ACTOR ) ; 
 + private static final Scheduler COMMON _ SCHEDULER = new Scheduler ( COMMON _ TIMER _ ACTOR ) ; 
 
 private final Runnable runnable ; 
 private Cancellable lastSchedule ; 
 + private boolean isDisposed ; 
 
 public CommonTimer ( Runnable runnable ) { 
 this . runnable = runnable ; 
 } 
 
 public void schedule ( long time ) { 
 + if ( isDisposed ) { 
 + return ; 
 + } 
 + 
 if ( lastSchedule ! = null ) { 
 lastSchedule . cancel ( ) ; 
 } 
 @ @ - 38 , 4 + 43 , 9 @ @ public class CommonTimer { 
 lastSchedule . cancel ( ) ; 
 } 
 } 
 + 
 + public void dispose ( ) { 
 + isDisposed = true ; 
 + cancel ( ) ; 
 + } 
 }
