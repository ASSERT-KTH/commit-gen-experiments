BLEU SCORE: 0.317023313852343

TEST MSG: fix ( core ) : Remove obsolete banner content , revert JsonMessage
GENERATED MSG: fix ( core ) : custom json message - remove reflection

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index cdafef6 . . 3c97169 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 46 , 34 + 46 , 19 @ @ public class Application extends ActorSDKApplication { < nl > ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; < nl > - AbsContent . registerConverter ( new ContentConverter ( ) { < nl > - @ Override < nl > - public AbsContent convert ( AbsContentContainer container ) { < nl > - return JsonContent . convert ( container , new TCBotMesaage ( ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean validate ( AbsContent content ) { < nl > - return content instanceof TCBotMesaage ; < nl > - } < nl > - } ) ; < nl > + / / AbsContent . registerConverter ( new ContentConverter ( ) { < nl > + / / @ Override < nl > + / / public AbsContent convert ( AbsContentContainer container ) { < nl > + / / return JsonContent . convert ( container , new TCBotMesaage ( ) ) ; < nl > + / / } < nl > + / / < nl > + / / @ Override < nl > + / / public boolean validate ( AbsContent content ) { < nl > + / / return content instanceof TCBotMesaage ; < nl > + / / } < nl > + / / } ) ; < nl > } < nl > < nl > - public static class TCBotMesaage extends JsonContent { < nl > - < nl > - @ Override < nl > - public String getDataType ( ) { < nl > - return " tcmessage " ; < nl > - } < nl > - < nl > - @ Override < nl > - public String getContentDescriptionEn ( ) { < nl > - return " TeamCity message " ; < nl > - } < nl > - < nl > - } < nl > - < nl > - < nl > private class ActorSDKDelegate extends BaseActorSDKDelegate { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java < nl > index 6670fe4 . . 7b309bf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java < nl > @ @ - 64 , 9 + 64 , 8 @ @ public class TCActor extends Actor { < nl > public void onIdchecked ( int id , JSONObject json ) { < nl > try { < nl > for ( long rid : reidMap . get ( id ) ) { < nl > - messenger ( ) . updateJsonMessageContentLocal ( peerMap . get ( id ) , rid , JsonContent . create ( new Application . TCBotMesaage ( ) , json ) ) ; < nl > - Log . d ( " TC " , " update local " ) ; < nl > - < nl > + / / messenger ( ) . updateJsonMessageContentLocal ( peerMap . get ( id ) , rid , JsonContent . create ( new Application . TCBotMesaage ( ) , json ) ) ; < nl > + / / Log . d ( " TC " , " update local " ) ; < nl > } < nl > if ( json . getString ( " state " ) . equals ( " finished " ) ) { < nl > ids . remove ( new Integer ( id ) ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java < nl > index 921cc02 . . 9570d25 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java < nl > @ @ - 12 , 6 + 12 , 7 @ @ import im . actor . runtime . json . JSONObject ; < nl > import im . actor . sdk . R ; < nl > < nl > public abstract class BaseJsonHolder extends MessageHolder { < nl > + < nl > public BaseJsonHolder ( MessagesAdapter adapter , ViewGroup viewGroup , int resourceId , boolean isFullSize ) { < nl > super ( adapter , inflate ( resourceId , viewGroup ) , isFullSize ) ; < nl > < nl > @ @ - 20 , 15 + 21 , 15 @ @ public abstract class BaseJsonHolder extends MessageHolder { < nl > < nl > @ Override < nl > protected void bindData ( Message message , boolean isUpdated , PreprocessedData preprocessedData ) { < nl > - JSONObject json = ( ( JsonContent ) message . getContent ( ) ) . getJson ( ) ; < nl > - JSONObject data = null ; < nl > - try { < nl > - data = json . getJSONObject ( " data " ) ; < nl > - } catch ( JSONException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - < nl > - bindData ( message , data , isUpdated , preprocessedData ) ; < nl > + / / JSONObject json = ( ( JsonContent ) message . getContent ( ) ) . getJson ( ) ; < nl > + / / JSONObject data = null ; < nl > + / / try { < nl > + / / data = json . getJSONObject ( " data " ) ; < nl > + / / } catch ( JSONException e ) { < nl > + / / e . printStackTrace ( ) ; < nl > + / / } < nl > + / / < nl > + / / bindData ( message , data , isUpdated , preprocessedData ) ; < nl > } < nl > < nl > protected abstract void bindData ( Message message , JSONObject data , boolean isUpdated , PreprocessedData preprocessedData ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > index 2845526 . . 0c8e14e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java < nl > @ @ - 65 , 8 + 65 , 6 @ @ public class ContentDescription extends BserObject { < nl > return new ContentDescription ( ContentType . SERVICE _ CALL _ ENDED ) ; < nl > } else if ( msg instanceof ServiceCallMissed ) { < nl > return new ContentDescription ( ContentType . SERVICE _ CALL _ MISSED ) ; < nl > - } else if ( msg instanceof JsonContent ) { < nl > - return new ContentDescription ( ContentType . CUSTOM _ JSON _ MESSAGE , ( ( JsonContent ) msg ) . getContentDescription ( ) ) ; < nl > } else if ( msg instanceof ServiceGroupAvatarChanged ) { < nl > if ( ( ( ServiceGroupAvatarChanged ) msg ) . getNewAvatar ( ) = = null ) { < nl > return new ContentDescription ( ContentType . SERVICE _ AVATAR _ REMOVED ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index 09d28e6 . . 6dc33ad 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 160 , 12 + 160 , 12 @ @ public abstract class AbsContent { < nl > } else if ( content instanceof ApiJsonMessage ) { < nl > ApiJsonMessage json = ( ApiJsonMessage ) content ; < nl > JSONObject object = new JSONObject ( json . getRawJson ( ) ) ; < nl > - if ( object . getString ( " dataType " ) . equals ( " banner " ) ) { < nl > - return new BannerContent ( remoteContainer ) ; < nl > - } else if ( object . getString ( " dataType " ) . equals ( " contact " ) ) { < nl > + if ( object . getString ( " dataType " ) . equals ( " contact " ) ) { < nl > return new ContactContent ( remoteContainer ) ; < nl > } else if ( object . getString ( " dataType " ) . equals ( " location " ) ) { < nl > return new LocationContent ( remoteContainer ) ; < nl > + } else { < nl > + return new JsonContent ( remoteContainer ) ; < nl > } < nl > } else if ( content instanceof ApiStickerMessage ) { < nl > return new StickerContent ( remoteContainer ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / BannerContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / BannerContent . java < nl > deleted file mode 100644 < nl > index 07f18d5 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / BannerContent . java < nl > + + + / dev / null < nl > @ @ - 1 , 43 + 0 , 0 @ @ < nl > - / * < nl > - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - * / < nl > - < nl > - package im . actor . core . entity . content ; < nl > - < nl > - import im . actor . core . api . ApiFileLocation ; < nl > - import im . actor . core . api . ApiJsonMessage ; < nl > - import im . actor . core . entity . FileReference ; < nl > - import im . actor . core . entity . content . internal . ContentRemoteContainer ; < nl > - import im . actor . runtime . json . JSONException ; < nl > - import im . actor . runtime . json . JSONObject ; < nl > - < nl > - / * * < nl > - * Created by ex3ndr on 25 . 05 . 15 . < nl > - * / < nl > - public class BannerContent extends AbsContent { < nl > - < nl > - private String adUrl ; < nl > - private FileReference reference ; < nl > - < nl > - public BannerContent ( ContentRemoteContainer contentContainer ) throws JSONException { < nl > - super ( contentContainer ) ; < nl > - < nl > - String json = ( ( ApiJsonMessage ) contentContainer . getMessage ( ) ) . getRawJson ( ) ; < nl > - JSONObject data = new JSONObject ( json ) . getJSONObject ( " data " ) ; < nl > - JSONObject image = data . getJSONObject ( " image " ) ; < nl > - adUrl = data . getString ( " advertUrl " ) ; < nl > - < nl > - reference = new FileReference ( new ApiFileLocation ( < nl > - image . getInt ( " fileId " ) , < nl > - image . getLong ( " fileHash " ) ) , < nl > - " banner . jpg " , image . getInt ( " fileSize " ) ) ; < nl > - } < nl > - < nl > - public String getAdUrl ( ) { < nl > - return adUrl ; < nl > - } < nl > - < nl > - public FileReference getReference ( ) { < nl > - return reference ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java < nl > index afd6851 . . 0da5287 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java < nl > @ @ - 1 , 147 + 1 , 19 @ @ < nl > package im . actor . core . entity . content ; < nl > < nl > - < nl > - < nl > import im . actor . core . api . ApiJsonMessage ; < nl > - import im . actor . core . api . ApiMessage ; < nl > - import im . actor . core . entity . content . internal . AbsContentContainer ; < nl > import im . actor . core . entity . content . internal . ContentRemoteContainer ; < nl > - import im . actor . runtime . json . JSONException ; < nl > - import im . actor . runtime . json . JSONObject ; < nl > < nl > - public abstract class JsonContent extends AbsContent { < nl > + public class JsonContent extends AbsContent { < nl > < nl > - private JSONObject jsonObject ; < nl > private String rawJson ; < nl > < nl > - public JsonContent ( ) { < nl > - super ( ) ; < nl > + public JsonContent ( ContentRemoteContainer contentRemoteContainer ) { < nl > + super ( contentRemoteContainer ) ; < nl > + ApiJsonMessage json = ( ( ApiJsonMessage ) contentRemoteContainer . getMessage ( ) ) ; < nl > + rawJson = json . getRawJson ( ) ; < nl > } < nl > < nl > - public static JsonContent convert ( AbsContentContainer container , JsonContent content ) { < nl > - if ( container instanceof ContentRemoteContainer ) { < nl > - ApiMessage message = ( ( ContentRemoteContainer ) container ) . getMessage ( ) ; < nl > - if ( message instanceof ApiJsonMessage ) { < nl > - try { < nl > - JSONObject jsonObject = new JSONObject ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; < nl > - if ( jsonObject . getString ( " dataType " ) . equals ( content . getDataType ( ) ) ) { < nl > - content . setJsonObject ( jsonObject ) ; < nl > - content . setContentContainer ( new ContentRemoteContainer ( new ApiJsonMessage ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ) ) ; < nl > - content . setRawJson ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; < nl > - return content ; < nl > - } < nl > - } catch ( JSONException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - } < nl > - } < nl > - return null ; < nl > - } < nl > - < nl > - public static JsonContent create ( JsonContent content , String simpleStringData ) { < nl > - JSONObject data = new JSONObject ( ) ; < nl > - try { < nl > - data . put ( " data " , simpleStringData ) ; < nl > - return create ( content , data ) ; < nl > - } catch ( JSONException e ) { < nl > - throw new RuntimeException ( e ) ; < nl > - } < nl > - } < nl > - < nl > - public static JsonContent create ( JsonContent content , JSONObject data ) { < nl > - JSONObject json = new JSONObject ( ) ; < nl > - try { < nl > - json . put ( " dataType " , content . getDataType ( ) ) ; < nl > - json . put ( " data " , data ) ; < nl > - ContentRemoteContainer container = new ContentRemoteContainer ( new ApiJsonMessage ( json . toString ( ) ) ) ; < nl > - content . setJsonObject ( json ) ; < nl > - content . setRawJson ( json . toString ( ) ) ; < nl > - content . setContentContainer ( container ) ; < nl > - return content ; < nl > - } catch ( JSONException e ) { < nl > - throw new RuntimeException ( e ) ; < nl > - } < nl > - } < nl > - < nl > - < nl > public String getRawJson ( ) { < nl > return rawJson ; < nl > } < nl > - < nl > - public JSONObject getJson ( ) { < nl > - return jsonObject ; < nl > - } < nl > - < nl > - public abstract String getDataType ( ) ; < nl > - < nl > - public abstract String getContentDescriptionEn ( ) ; < nl > - < nl > - public String getContentDescriptionRu ( ) { < nl > - return null ; < nl > - } < nl > - < nl > - public String getContentDescriptionPt ( ) { < nl > - return null ; < nl > - } < nl > - < nl > - public String getContentDescriptionAr ( ) { < nl > - return null ; < nl > - } < nl > - < nl > - public String getContentDescriptionCn ( ) { < nl > - return null ; < nl > - } < nl > - < nl > - public String getContentDescriptionEs ( ) { < nl > - return null ; < nl > - } < nl > - < nl > - public final String getContentDescription ( ) { < nl > - String locale = im . actor . runtime . Runtime . getLocaleRuntime ( ) . getCurrentLocale ( ) ; < nl > - if ( locale . equals ( " Ru " ) ) { < nl > - return fallback ( getContentDescriptionRu ( ) ) ; < nl > - } else if ( locale . equals ( " Pt " ) ) { < nl > - return fallback ( getContentDescriptionPt ( ) ) ; < nl > - } else if ( locale . equals ( " Ar " ) ) { < nl > - return fallback ( getContentDescriptionAr ( ) ) ; < nl > - } else if ( locale . equals ( " Cn " ) ) { < nl > - return fallback ( getContentDescriptionCn ( ) ) ; < nl > - } else if ( locale . equals ( " Es " ) ) { < nl > - return fallback ( getContentDescriptionEs ( ) ) ; < nl > - } else { < nl > - return fallback ( getContentDescriptionEn ( ) ) ; < nl > - } < nl > - < nl > - < nl > - } < nl > - < nl > - private String fallback ( String s ) { < nl > - if ( s ! = null & & ! s . isEmpty ( ) ) { < nl > - return s ; < nl > - } else { < nl > - if ( getContentDescriptionEn ( ) ! = null & & ! getContentDescriptionEn ( ) . isEmpty ( ) ) { < nl > - return getContentDescriptionEn ( ) ; < nl > - < nl > - } else { < nl > - return getDataType ( ) ; < nl > - } < nl > - } < nl > - } < nl > - < nl > - protected void setJsonObject ( JSONObject jsonObject ) { < nl > - this . jsonObject = jsonObject ; < nl > - } < nl > - < nl > - protected void setRawJson ( String rawJson ) { < nl > - this . rawJson = rawJson ; < nl > - } < nl > - < nl > - public String getSimpleStringData ( ) { < nl > - try { < nl > - return getJson ( ) . getJSONObject ( " data " ) . getString ( " data " ) ; < nl > - } catch ( JSONException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - return " " ; < nl > - } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > index a7e5342 . . 14b8f37 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java < nl > @ @ - 363 , 8 + 363 , 6 @ @ public class I18nEngine { < nl > return locale . get ( " Location " ) ; < nl > case STICKER : < nl > return locale . get ( " Sticker " ) ; < nl > - case CUSTOM _ JSON _ MESSAGE : < nl > - return text ; < nl > case SERVICE : < nl > return text ; / / Should be service message < nl > case SERVICE _ REGISTERED : < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java < nl > index 7506d33 . . e67012f 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java < nl > @ @ - 45 , 12 + 45 , 12 @ @ public class ThreadingRuntimeProvider implements ThreadingRuntime { < nl > } < nl > < nl > @ Override < nl > - public Dispatcher createDispatcher ( ThreadPriority priority ) { < nl > + public Dispatcher createDispatcher ( String name ) { < nl > throw new RuntimeException ( " Dumb " ) ; < nl > } < nl > < nl > @ Override < nl > - public ImmediateDispatcher createImmediateDispatcher ( ThreadPriority priority ) { < nl > + public ImmediateDispatcher createImmediateDispatcher ( String name , ThreadPriority priority ) { < nl > throw new RuntimeException ( " Dumb " ) ; < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 1cfff00 . . 4c00297 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 49 , 23 + 49 , 23 @ @ public class Application extends ActorSDKApplication { < nl > AbsContent . registerConverter ( new ContentConverter ( ) { < nl > @ Override < nl > public AbsContent convert ( AbsContentContainer container ) { < nl > - return JsonContent . convert ( container , Custom . class ) ; < nl > + return JsonContent . convert ( container , new Custom ( ) ) ; < nl > } < nl > < nl > @ Override < nl > - public Class destinationType ( ) { < nl > - return Custom . class ; < nl > + public boolean validate ( AbsContent content ) { < nl > + return content instanceof Custom ; < nl > } < nl > } ) ; < nl > AbsContent . registerConverter ( new ContentConverter ( ) { < nl > @ Override < nl > public AbsContent convert ( AbsContentContainer container ) { < nl > - return JsonContent . convert ( container , CustomTwo . class ) ; < nl > + return JsonContent . convert ( container , new CustomTwo ( ) ) ; < nl > } < nl > < nl > @ Override < nl > - public Class destinationType ( ) { < nl > - return CustomTwo . class ; < nl > + public boolean validate ( AbsContent content ) { < nl > + return content instanceof CustomTwo ; < nl > } < nl > } ) ; < nl > } < nl > @ @ - 167 , 9 + 167 , 9 @ @ public class Application extends ActorSDKApplication { < nl > return new MessagesFragment ( peer ) { < nl > @ Override < nl > public View onCreateView ( LayoutInflater inflater , @ Nullable ViewGroup container , @ Nullable Bundle savedInstanceState ) { < nl > - / / messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( Custom . class , System . currentTimeMillis ( ) + " One " ) ) ; < nl > - / / messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( CustomTwo . class , System . currentTimeMillis ( ) + " Two " ) ) ; < nl > - / / messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( CustomTwo . class , System . currentTimeMillis ( ) + " Two " ) ) ; < nl > + messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( new Custom ( ) , System . currentTimeMillis ( ) + " One " ) ) ; < nl > + messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( new CustomTwo ( ) , System . currentTimeMillis ( ) + " Two " ) ) ; < nl > + messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( new CustomTwo ( ) , System . currentTimeMillis ( ) + " Two " ) ) ; < nl > return super . onCreateView ( inflater , container , savedInstanceState ) ; < nl > } < nl > } ; < nl > @ @ - 178 , 16 + 178 , 17 @ @ public class Application extends ActorSDKApplication { < nl > } < nl > < nl > @ Override < nl > - public BaseCustomHolder getCustomMessageViewHolder ( Class < AbsContent > content , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { < nl > - if ( content . equals ( Custom . class ) ) { < nl > - return new CustomHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; < nl > - } else if ( content . equals ( CustomTwo . class ) ) { < nl > - return new CustomTwoHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; < nl > - < nl > - } else { < nl > - return null ; < nl > - } < nl > + public BaseCustomHolder getCustomMessageViewHolder ( int id , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { < nl > + switch ( id ) { < nl > + case 0 : < nl > + return new CustomHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; < nl > + < nl > + case 1 : < nl > + return new CustomTwoHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; < nl > < nl > + default : < nl > + return null ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 3c7b187 . . 5bb3f5b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 453 , 8 + 453 , 8 @ @ public class ActorSDK { < nl > } < nl > } < nl > < nl > - public MessageHolder getDelegatedMessageViewHolder ( Class < AbsContent > base , OnDelegateViewHolder < MessageHolder > callback , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { < nl > - MessageHolder delegated = delegate . getCustomMessageViewHolder ( base , messagesAdapter , viewGroup ) ; < nl > + public MessageHolder getDelegatedMessageViewHolder ( int id , OnDelegateViewHolder < MessageHolder > callback , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { < nl > + MessageHolder delegated = delegate . getCustomMessageViewHolder ( id , messagesAdapter , viewGroup ) ; < nl > if ( delegated ! = null ) { < nl > return delegated ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > index 849fa08 . . 80cc9f1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > @ @ - 100 , 5 + 100 , 5 @ @ public interface ActorSDKDelegate { < nl > @ Deprecated < nl > ActorSettingsCategory [ ] getAfterSettingsCategories ( ) ; < nl > < nl > - MessageHolder getCustomMessageViewHolder ( Class < AbsContent > content , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) ; < nl > + MessageHolder getCustomMessageViewHolder ( int id , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index 75680fe . . 511d1b4 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 146 , 7 + 146 , 7 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > } < nl > < nl > @ Override < nl > - public MessageHolder getCustomMessageViewHolder ( Class < AbsContent > content , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { < nl > + public MessageHolder getCustomMessageViewHolder ( int id , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { < nl > return null ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > index 53ec48b . . affd7c8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java < nl > @ @ - 7 , 11 + 7 , 13 @ @ import android . view . ViewGroup ; < nl > < nl > import java . util . HashMap ; < nl > < nl > + import im . actor . core . api . ApiJsonMessage ; < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . ContentConverter ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > + import im . actor . core . entity . content . JsonContent ; < nl > import im . actor . core . entity . content . LocationContent ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . ServiceContent ; < nl > @ @ - 19 , 6 + 21 , 7 @ @ import im . actor . core . entity . content . StickerContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > import im . actor . core . entity . content . VoiceContent ; < nl > + import im . actor . core . entity . content . internal . ContentRemoteContainer ; < nl > import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . sdk . ActorSDK ; < nl > @ @ - 85 , 9 + 88 , 12 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { < nl > AbsContent content = getItem ( position ) . getContent ( ) ; < nl > for ( int i = 0 ; i < AbsContent . getConverters ( ) . length ; i + + ) { < nl > ContentConverter converter = AbsContent . getConverters ( ) [ i ] ; < nl > - if ( content . getClass ( ) . equals ( converter . destinationType ( ) ) ) { < nl > - return 8 + i ; < nl > + if ( content instanceof JsonContent ) { < nl > + if ( converter . validate ( content ) ) { < nl > + return 8 + i ; < nl > + } < nl > } < nl > + < nl > } < nl > if ( content instanceof TextContent ) { < nl > return 0 ; < nl > @ @ - 178 , 7 + 184 , 7 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { < nl > } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; < nl > default : < nl > if ( viewType - 8 > = 0 & & viewType - 8 < AbsContent . getConverters ( ) . length ) { < nl > - return ActorSDK . sharedActor ( ) . getDelegatedMessageViewHolder ( AbsContent . getConverters ( ) [ viewType - 8 ] . destinationType ( ) , new ActorSDK . OnDelegateViewHolder < MessageHolder > ( ) { < nl > + return ActorSDK . sharedActor ( ) . getDelegatedMessageViewHolder ( viewType - 8 , new ActorSDK . OnDelegateViewHolder < MessageHolder > ( ) { < nl > @ Override < nl > public MessageHolder onNotDelegated ( ) { < nl > return new UnsupportedHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java < nl > index 26614b4 . . 48a0e43 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java < nl > @ @ - 5 , 5 + 5 , 5 @ @ import im . actor . core . entity . content . internal . AbsContentContainer ; < nl > public interface ContentConverter { < nl > AbsContent convert ( AbsContentContainer container ) ; < nl > < nl > - Class destinationType ( ) ; < nl > + boolean validate ( AbsContent content ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java < nl > index a0a438c . . a534c85 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java < nl > @ @ - 18 , 33 + 18 , 46 @ @ public abstract class JsonContent extends AbsContent { < nl > super ( ) ; < nl > } < nl > < nl > + public static JsonContent convert ( AbsContentContainer container , JsonContent content ) { < nl > + if ( container instanceof ContentRemoteContainer ) { < nl > + ApiMessage message = ( ( ContentRemoteContainer ) container ) . getMessage ( ) ; < nl > + if ( message instanceof ApiJsonMessage ) { < nl > + try { < nl > + JSONObject jsonObject = new JSONObject ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; < nl > + if ( jsonObject . getString ( " dataType " ) . equals ( content . getDataType ( ) ) ) { < nl > + content . setJsonObject ( jsonObject ) ; < nl > + content . setContentContainer ( new ContentRemoteContainer ( new ApiJsonMessage ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ) ) ; < nl > + content . setRawJson ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; < nl > + return content ; < nl > + } < nl > + } catch ( JSONException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + } < nl > + } < nl > + return null ; < nl > + } < nl > < nl > - public static < T extends JsonContent > T create ( Class < T > c , String simpleStringData ) { < nl > - JSONObject jsondata = new JSONObject ( ) ; < nl > + public static JsonContent create ( JsonContent content , String simpleStringData ) { < nl > + JSONObject data = new JSONObject ( ) ; < nl > try { < nl > - jsondata . put ( " data " , simpleStringData ) ; < nl > + data . put ( " data " , simpleStringData ) ; < nl > + return create ( content , data ) ; < nl > } catch ( JSONException e ) { < nl > - e . printStackTrace ( ) ; < nl > + throw new RuntimeException ( e ) ; < nl > } < nl > - return create ( c , jsondata ) ; < nl > } < nl > < nl > - < nl > - public static < T extends JsonContent > T create ( Class < T > c , JSONObject data ) { < nl > + public static JsonContent create ( JsonContent content , JSONObject data ) { < nl > + JSONObject json = new JSONObject ( ) ; < nl > try { < nl > - T t = c . newInstance ( ) ; < nl > - JSONObject json = new JSONObject ( ) ; < nl > - json . put ( " dataType " , t . getDataType ( ) ) ; < nl > + json . put ( " dataType " , content . getDataType ( ) ) ; < nl > json . put ( " data " , data ) ; < nl > ContentRemoteContainer container = new ContentRemoteContainer ( new ApiJsonMessage ( json . toString ( ) ) ) ; < nl > - t . setJsonObject ( json ) ; < nl > - t . setRawJson ( json . toString ( ) ) ; < nl > - t . setContentContainer ( container ) ; < nl > - return t ; < nl > - } catch ( InstantiationException e ) { < nl > - throw new RuntimeException ( e ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > - throw new RuntimeException ( e ) ; < nl > + content . setJsonObject ( json ) ; < nl > + content . setRawJson ( json . toString ( ) ) ; < nl > + content . setContentContainer ( container ) ; < nl > + return content ; < nl > } catch ( JSONException e ) { < nl > throw new RuntimeException ( e ) ; < nl > } < nl > @ @ - 105 , 31 + 118 , 6 @ @ public abstract class JsonContent extends AbsContent { < nl > } < nl > } < nl > < nl > - public static < T extends JsonContent > AbsContent convert ( AbsContentContainer container , Class < T > classToConvert ) { < nl > - if ( container instanceof ContentRemoteContainer ) { < nl > - try { < nl > - T type = classToConvert . newInstance ( ) ; < nl > - < nl > - ApiMessage msg = ( ( ContentRemoteContainer ) container ) . getMessage ( ) ; < nl > - if ( msg instanceof ApiJsonMessage ) { < nl > - try { < nl > - JSONObject object = new JSONObject ( ( ( ApiJsonMessage ) msg ) . getRawJson ( ) ) ; < nl > - if ( object . get ( " dataType " ) . equals ( type . getDataType ( ) ) ) { < nl > - return type . create ( classToConvert , object . getJSONObject ( " data " ) ) ; < nl > - } < nl > - } catch ( JSONException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - } < nl > - } catch ( InstantiationException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - } < nl > - return null ; < nl > - } < nl > - < nl > protected void setJsonObject ( JSONObject jsonObject ) { < nl > this . jsonObject = jsonObject ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index cdafef6 . . 3c97169 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 46 , 34 + 46 , 19 @ @ public class Application extends ActorSDKApplication { 
 ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; 
 - AbsContent . registerConverter ( new ContentConverter ( ) { 
 - @ Override 
 - public AbsContent convert ( AbsContentContainer container ) { 
 - return JsonContent . convert ( container , new TCBotMesaage ( ) ) ; 
 - } 
 - 
 - @ Override 
 - public boolean validate ( AbsContent content ) { 
 - return content instanceof TCBotMesaage ; 
 - } 
 - } ) ; 
 + / / AbsContent . registerConverter ( new ContentConverter ( ) { 
 + / / @ Override 
 + / / public AbsContent convert ( AbsContentContainer container ) { 
 + / / return JsonContent . convert ( container , new TCBotMesaage ( ) ) ; 
 + / / } 
 + / / 
 + / / @ Override 
 + / / public boolean validate ( AbsContent content ) { 
 + / / return content instanceof TCBotMesaage ; 
 + / / } 
 + / / } ) ; 
 } 
 
 - public static class TCBotMesaage extends JsonContent { 
 - 
 - @ Override 
 - public String getDataType ( ) { 
 - return " tcmessage " ; 
 - } 
 - 
 - @ Override 
 - public String getContentDescriptionEn ( ) { 
 - return " TeamCity message " ; 
 - } 
 - 
 - } 
 - 
 - 
 private class ActorSDKDelegate extends BaseActorSDKDelegate { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java 
 index 6670fe4 . . 7b309bf 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tc / TCActor . java 
 @ @ - 64 , 9 + 64 , 8 @ @ public class TCActor extends Actor { 
 public void onIdchecked ( int id , JSONObject json ) { 
 try { 
 for ( long rid : reidMap . get ( id ) ) { 
 - messenger ( ) . updateJsonMessageContentLocal ( peerMap . get ( id ) , rid , JsonContent . create ( new Application . TCBotMesaage ( ) , json ) ) ; 
 - Log . d ( " TC " , " update local " ) ; 
 - 
 + / / messenger ( ) . updateJsonMessageContentLocal ( peerMap . get ( id ) , rid , JsonContent . create ( new Application . TCBotMesaage ( ) , json ) ) ; 
 + / / Log . d ( " TC " , " update local " ) ; 
 } 
 if ( json . getString ( " state " ) . equals ( " finished " ) ) { 
 ids . remove ( new Integer ( id ) ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java 
 index 921cc02 . . 9570d25 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / BaseJsonHolder . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import im . actor . runtime . json . JSONObject ; 
 import im . actor . sdk . R ; 
 
 public abstract class BaseJsonHolder extends MessageHolder { 
 + 
 public BaseJsonHolder ( MessagesAdapter adapter , ViewGroup viewGroup , int resourceId , boolean isFullSize ) { 
 super ( adapter , inflate ( resourceId , viewGroup ) , isFullSize ) ; 
 
 @ @ - 20 , 15 + 21 , 15 @ @ public abstract class BaseJsonHolder extends MessageHolder { 
 
 @ Override 
 protected void bindData ( Message message , boolean isUpdated , PreprocessedData preprocessedData ) { 
 - JSONObject json = ( ( JsonContent ) message . getContent ( ) ) . getJson ( ) ; 
 - JSONObject data = null ; 
 - try { 
 - data = json . getJSONObject ( " data " ) ; 
 - } catch ( JSONException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - 
 - bindData ( message , data , isUpdated , preprocessedData ) ; 
 + / / JSONObject json = ( ( JsonContent ) message . getContent ( ) ) . getJson ( ) ; 
 + / / JSONObject data = null ; 
 + / / try { 
 + / / data = json . getJSONObject ( " data " ) ; 
 + / / } catch ( JSONException e ) { 
 + / / e . printStackTrace ( ) ; 
 + / / } 
 + / / 
 + / / bindData ( message , data , isUpdated , preprocessedData ) ; 
 } 
 
 protected abstract void bindData ( Message message , JSONObject data , boolean isUpdated , PreprocessedData preprocessedData ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 index 2845526 . . 0c8e14e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ContentDescription . java 
 @ @ - 65 , 8 + 65 , 6 @ @ public class ContentDescription extends BserObject { 
 return new ContentDescription ( ContentType . SERVICE _ CALL _ ENDED ) ; 
 } else if ( msg instanceof ServiceCallMissed ) { 
 return new ContentDescription ( ContentType . SERVICE _ CALL _ MISSED ) ; 
 - } else if ( msg instanceof JsonContent ) { 
 - return new ContentDescription ( ContentType . CUSTOM _ JSON _ MESSAGE , ( ( JsonContent ) msg ) . getContentDescription ( ) ) ; 
 } else if ( msg instanceof ServiceGroupAvatarChanged ) { 
 if ( ( ( ServiceGroupAvatarChanged ) msg ) . getNewAvatar ( ) = = null ) { 
 return new ContentDescription ( ContentType . SERVICE _ AVATAR _ REMOVED ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index 09d28e6 . . 6dc33ad 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 160 , 12 + 160 , 12 @ @ public abstract class AbsContent { 
 } else if ( content instanceof ApiJsonMessage ) { 
 ApiJsonMessage json = ( ApiJsonMessage ) content ; 
 JSONObject object = new JSONObject ( json . getRawJson ( ) ) ; 
 - if ( object . getString ( " dataType " ) . equals ( " banner " ) ) { 
 - return new BannerContent ( remoteContainer ) ; 
 - } else if ( object . getString ( " dataType " ) . equals ( " contact " ) ) { 
 + if ( object . getString ( " dataType " ) . equals ( " contact " ) ) { 
 return new ContactContent ( remoteContainer ) ; 
 } else if ( object . getString ( " dataType " ) . equals ( " location " ) ) { 
 return new LocationContent ( remoteContainer ) ; 
 + } else { 
 + return new JsonContent ( remoteContainer ) ; 
 } 
 } else if ( content instanceof ApiStickerMessage ) { 
 return new StickerContent ( remoteContainer ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / BannerContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / BannerContent . java 
 deleted file mode 100644 
 index 07f18d5 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / BannerContent . java 
 + + + / dev / null 
 @ @ - 1 , 43 + 0 , 0 @ @ 
 - / * 
 - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - * / 
 - 
 - package im . actor . core . entity . content ; 
 - 
 - import im . actor . core . api . ApiFileLocation ; 
 - import im . actor . core . api . ApiJsonMessage ; 
 - import im . actor . core . entity . FileReference ; 
 - import im . actor . core . entity . content . internal . ContentRemoteContainer ; 
 - import im . actor . runtime . json . JSONException ; 
 - import im . actor . runtime . json . JSONObject ; 
 - 
 - / * * 
 - * Created by ex3ndr on 25 . 05 . 15 . 
 - * / 
 - public class BannerContent extends AbsContent { 
 - 
 - private String adUrl ; 
 - private FileReference reference ; 
 - 
 - public BannerContent ( ContentRemoteContainer contentContainer ) throws JSONException { 
 - super ( contentContainer ) ; 
 - 
 - String json = ( ( ApiJsonMessage ) contentContainer . getMessage ( ) ) . getRawJson ( ) ; 
 - JSONObject data = new JSONObject ( json ) . getJSONObject ( " data " ) ; 
 - JSONObject image = data . getJSONObject ( " image " ) ; 
 - adUrl = data . getString ( " advertUrl " ) ; 
 - 
 - reference = new FileReference ( new ApiFileLocation ( 
 - image . getInt ( " fileId " ) , 
 - image . getLong ( " fileHash " ) ) , 
 - " banner . jpg " , image . getInt ( " fileSize " ) ) ; 
 - } 
 - 
 - public String getAdUrl ( ) { 
 - return adUrl ; 
 - } 
 - 
 - public FileReference getReference ( ) { 
 - return reference ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java 
 index afd6851 . . 0da5287 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java 
 @ @ - 1 , 147 + 1 , 19 @ @ 
 package im . actor . core . entity . content ; 
 
 - 
 - 
 import im . actor . core . api . ApiJsonMessage ; 
 - import im . actor . core . api . ApiMessage ; 
 - import im . actor . core . entity . content . internal . AbsContentContainer ; 
 import im . actor . core . entity . content . internal . ContentRemoteContainer ; 
 - import im . actor . runtime . json . JSONException ; 
 - import im . actor . runtime . json . JSONObject ; 
 
 - public abstract class JsonContent extends AbsContent { 
 + public class JsonContent extends AbsContent { 
 
 - private JSONObject jsonObject ; 
 private String rawJson ; 
 
 - public JsonContent ( ) { 
 - super ( ) ; 
 + public JsonContent ( ContentRemoteContainer contentRemoteContainer ) { 
 + super ( contentRemoteContainer ) ; 
 + ApiJsonMessage json = ( ( ApiJsonMessage ) contentRemoteContainer . getMessage ( ) ) ; 
 + rawJson = json . getRawJson ( ) ; 
 } 
 
 - public static JsonContent convert ( AbsContentContainer container , JsonContent content ) { 
 - if ( container instanceof ContentRemoteContainer ) { 
 - ApiMessage message = ( ( ContentRemoteContainer ) container ) . getMessage ( ) ; 
 - if ( message instanceof ApiJsonMessage ) { 
 - try { 
 - JSONObject jsonObject = new JSONObject ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; 
 - if ( jsonObject . getString ( " dataType " ) . equals ( content . getDataType ( ) ) ) { 
 - content . setJsonObject ( jsonObject ) ; 
 - content . setContentContainer ( new ContentRemoteContainer ( new ApiJsonMessage ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ) ) ; 
 - content . setRawJson ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; 
 - return content ; 
 - } 
 - } catch ( JSONException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - } 
 - } 
 - return null ; 
 - } 
 - 
 - public static JsonContent create ( JsonContent content , String simpleStringData ) { 
 - JSONObject data = new JSONObject ( ) ; 
 - try { 
 - data . put ( " data " , simpleStringData ) ; 
 - return create ( content , data ) ; 
 - } catch ( JSONException e ) { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - } 
 - 
 - public static JsonContent create ( JsonContent content , JSONObject data ) { 
 - JSONObject json = new JSONObject ( ) ; 
 - try { 
 - json . put ( " dataType " , content . getDataType ( ) ) ; 
 - json . put ( " data " , data ) ; 
 - ContentRemoteContainer container = new ContentRemoteContainer ( new ApiJsonMessage ( json . toString ( ) ) ) ; 
 - content . setJsonObject ( json ) ; 
 - content . setRawJson ( json . toString ( ) ) ; 
 - content . setContentContainer ( container ) ; 
 - return content ; 
 - } catch ( JSONException e ) { 
 - throw new RuntimeException ( e ) ; 
 - } 
 - } 
 - 
 - 
 public String getRawJson ( ) { 
 return rawJson ; 
 } 
 - 
 - public JSONObject getJson ( ) { 
 - return jsonObject ; 
 - } 
 - 
 - public abstract String getDataType ( ) ; 
 - 
 - public abstract String getContentDescriptionEn ( ) ; 
 - 
 - public String getContentDescriptionRu ( ) { 
 - return null ; 
 - } 
 - 
 - public String getContentDescriptionPt ( ) { 
 - return null ; 
 - } 
 - 
 - public String getContentDescriptionAr ( ) { 
 - return null ; 
 - } 
 - 
 - public String getContentDescriptionCn ( ) { 
 - return null ; 
 - } 
 - 
 - public String getContentDescriptionEs ( ) { 
 - return null ; 
 - } 
 - 
 - public final String getContentDescription ( ) { 
 - String locale = im . actor . runtime . Runtime . getLocaleRuntime ( ) . getCurrentLocale ( ) ; 
 - if ( locale . equals ( " Ru " ) ) { 
 - return fallback ( getContentDescriptionRu ( ) ) ; 
 - } else if ( locale . equals ( " Pt " ) ) { 
 - return fallback ( getContentDescriptionPt ( ) ) ; 
 - } else if ( locale . equals ( " Ar " ) ) { 
 - return fallback ( getContentDescriptionAr ( ) ) ; 
 - } else if ( locale . equals ( " Cn " ) ) { 
 - return fallback ( getContentDescriptionCn ( ) ) ; 
 - } else if ( locale . equals ( " Es " ) ) { 
 - return fallback ( getContentDescriptionEs ( ) ) ; 
 - } else { 
 - return fallback ( getContentDescriptionEn ( ) ) ; 
 - } 
 - 
 - 
 - } 
 - 
 - private String fallback ( String s ) { 
 - if ( s ! = null & & ! s . isEmpty ( ) ) { 
 - return s ; 
 - } else { 
 - if ( getContentDescriptionEn ( ) ! = null & & ! getContentDescriptionEn ( ) . isEmpty ( ) ) { 
 - return getContentDescriptionEn ( ) ; 
 - 
 - } else { 
 - return getDataType ( ) ; 
 - } 
 - } 
 - } 
 - 
 - protected void setJsonObject ( JSONObject jsonObject ) { 
 - this . jsonObject = jsonObject ; 
 - } 
 - 
 - protected void setRawJson ( String rawJson ) { 
 - this . rawJson = rawJson ; 
 - } 
 - 
 - public String getSimpleStringData ( ) { 
 - try { 
 - return getJson ( ) . getJSONObject ( " data " ) . getString ( " data " ) ; 
 - } catch ( JSONException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - return " " ; 
 - } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 index a7e5342 . . 14b8f37 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / i18n / I18nEngine . java 
 @ @ - 363 , 8 + 363 , 6 @ @ public class I18nEngine { 
 return locale . get ( " Location " ) ; 
 case STICKER : 
 return locale . get ( " Sticker " ) ; 
 - case CUSTOM _ JSON _ MESSAGE : 
 - return text ; 
 case SERVICE : 
 return text ; / / Should be service message 
 case SERVICE _ REGISTERED : 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java 
 index 7506d33 . . e67012f 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / ThreadingRuntimeProvider . java 
 @ @ - 45 , 12 + 45 , 12 @ @ public class ThreadingRuntimeProvider implements ThreadingRuntime { 
 } 
 
 @ Override 
 - public Dispatcher createDispatcher ( ThreadPriority priority ) { 
 + public Dispatcher createDispatcher ( String name ) { 
 throw new RuntimeException ( " Dumb " ) ; 
 } 
 
 @ Override 
 - public ImmediateDispatcher createImmediateDispatcher ( ThreadPriority priority ) { 
 + public ImmediateDispatcher createImmediateDispatcher ( String name , ThreadPriority priority ) { 
 throw new RuntimeException ( " Dumb " ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 1cfff00 . . 4c00297 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 49 , 23 + 49 , 23 @ @ public class Application extends ActorSDKApplication { 
 AbsContent . registerConverter ( new ContentConverter ( ) { 
 @ Override 
 public AbsContent convert ( AbsContentContainer container ) { 
 - return JsonContent . convert ( container , Custom . class ) ; 
 + return JsonContent . convert ( container , new Custom ( ) ) ; 
 } 
 
 @ Override 
 - public Class destinationType ( ) { 
 - return Custom . class ; 
 + public boolean validate ( AbsContent content ) { 
 + return content instanceof Custom ; 
 } 
 } ) ; 
 AbsContent . registerConverter ( new ContentConverter ( ) { 
 @ Override 
 public AbsContent convert ( AbsContentContainer container ) { 
 - return JsonContent . convert ( container , CustomTwo . class ) ; 
 + return JsonContent . convert ( container , new CustomTwo ( ) ) ; 
 } 
 
 @ Override 
 - public Class destinationType ( ) { 
 - return CustomTwo . class ; 
 + public boolean validate ( AbsContent content ) { 
 + return content instanceof CustomTwo ; 
 } 
 } ) ; 
 } 
 @ @ - 167 , 9 + 167 , 9 @ @ public class Application extends ActorSDKApplication { 
 return new MessagesFragment ( peer ) { 
 @ Override 
 public View onCreateView ( LayoutInflater inflater , @ Nullable ViewGroup container , @ Nullable Bundle savedInstanceState ) { 
 - / / messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( Custom . class , System . currentTimeMillis ( ) + " One " ) ) ; 
 - / / messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( CustomTwo . class , System . currentTimeMillis ( ) + " Two " ) ) ; 
 - / / messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( CustomTwo . class , System . currentTimeMillis ( ) + " Two " ) ) ; 
 + messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( new Custom ( ) , System . currentTimeMillis ( ) + " One " ) ) ; 
 + messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( new CustomTwo ( ) , System . currentTimeMillis ( ) + " Two " ) ) ; 
 + messenger ( ) . sendCustomJsonMessage ( getPeer ( ) , JsonContent . create ( new CustomTwo ( ) , System . currentTimeMillis ( ) + " Two " ) ) ; 
 return super . onCreateView ( inflater , container , savedInstanceState ) ; 
 } 
 } ; 
 @ @ - 178 , 16 + 178 , 17 @ @ public class Application extends ActorSDKApplication { 
 } 
 
 @ Override 
 - public BaseCustomHolder getCustomMessageViewHolder ( Class < AbsContent > content , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { 
 - if ( content . equals ( Custom . class ) ) { 
 - return new CustomHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; 
 - } else if ( content . equals ( CustomTwo . class ) ) { 
 - return new CustomTwoHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; 
 - 
 - } else { 
 - return null ; 
 - } 
 + public BaseCustomHolder getCustomMessageViewHolder ( int id , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { 
 + switch ( id ) { 
 + case 0 : 
 + return new CustomHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; 
 + 
 + case 1 : 
 + return new CustomTwoHolder ( messagesAdapter , viewGroup , R . layout . custom _ holder , false ) ; 
 
 + default : 
 + return null ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 3c7b187 . . 5bb3f5b 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 453 , 8 + 453 , 8 @ @ public class ActorSDK { 
 } 
 } 
 
 - public MessageHolder getDelegatedMessageViewHolder ( Class < AbsContent > base , OnDelegateViewHolder < MessageHolder > callback , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { 
 - MessageHolder delegated = delegate . getCustomMessageViewHolder ( base , messagesAdapter , viewGroup ) ; 
 + public MessageHolder getDelegatedMessageViewHolder ( int id , OnDelegateViewHolder < MessageHolder > callback , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { 
 + MessageHolder delegated = delegate . getCustomMessageViewHolder ( id , messagesAdapter , viewGroup ) ; 
 if ( delegated ! = null ) { 
 return delegated ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 index 849fa08 . . 80cc9f1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 @ @ - 100 , 5 + 100 , 5 @ @ public interface ActorSDKDelegate { 
 @ Deprecated 
 ActorSettingsCategory [ ] getAfterSettingsCategories ( ) ; 
 
 - MessageHolder getCustomMessageViewHolder ( Class < AbsContent > content , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) ; 
 + MessageHolder getCustomMessageViewHolder ( int id , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index 75680fe . . 511d1b4 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 146 , 7 + 146 , 7 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 } 
 
 @ Override 
 - public MessageHolder getCustomMessageViewHolder ( Class < AbsContent > content , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { 
 + public MessageHolder getCustomMessageViewHolder ( int id , MessagesAdapter messagesAdapter , ViewGroup viewGroup ) { 
 return null ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 index 53ec48b . . affd7c8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesAdapter . java 
 @ @ - 7 , 11 + 7 , 13 @ @ import android . view . ViewGroup ; 
 
 import java . util . HashMap ; 
 
 + import im . actor . core . api . ApiJsonMessage ; 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . ContentConverter ; 
 import im . actor . core . entity . content . DocumentContent ; 
 + import im . actor . core . entity . content . JsonContent ; 
 import im . actor . core . entity . content . LocationContent ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . ServiceContent ; 
 @ @ - 19 , 6 + 21 , 7 @ @ import im . actor . core . entity . content . StickerContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 import im . actor . core . entity . content . VoiceContent ; 
 + import im . actor . core . entity . content . internal . ContentRemoteContainer ; 
 import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . sdk . ActorSDK ; 
 @ @ - 85 , 9 + 88 , 12 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { 
 AbsContent content = getItem ( position ) . getContent ( ) ; 
 for ( int i = 0 ; i < AbsContent . getConverters ( ) . length ; i + + ) { 
 ContentConverter converter = AbsContent . getConverters ( ) [ i ] ; 
 - if ( content . getClass ( ) . equals ( converter . destinationType ( ) ) ) { 
 - return 8 + i ; 
 + if ( content instanceof JsonContent ) { 
 + if ( converter . validate ( content ) ) { 
 + return 8 + i ; 
 + } 
 } 
 + 
 } 
 if ( content instanceof TextContent ) { 
 return 0 ; 
 @ @ - 178 , 7 + 184 , 7 @ @ public class MessagesAdapter extends BindedListAdapter < Message , MessageHolder > { 
 } , MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ sticker , viewGroup ) ) ; 
 default : 
 if ( viewType - 8 > = 0 & & viewType - 8 < AbsContent . getConverters ( ) . length ) { 
 - return ActorSDK . sharedActor ( ) . getDelegatedMessageViewHolder ( AbsContent . getConverters ( ) [ viewType - 8 ] . destinationType ( ) , new ActorSDK . OnDelegateViewHolder < MessageHolder > ( ) { 
 + return ActorSDK . sharedActor ( ) . getDelegatedMessageViewHolder ( viewType - 8 , new ActorSDK . OnDelegateViewHolder < MessageHolder > ( ) { 
 @ Override 
 public MessageHolder onNotDelegated ( ) { 
 return new UnsupportedHolder ( MessagesAdapter . this , inflate ( R . layout . adapter _ dialog _ text , viewGroup ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java 
 index 26614b4 . . 48a0e43 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / ContentConverter . java 
 @ @ - 5 , 5 + 5 , 5 @ @ import im . actor . core . entity . content . internal . AbsContentContainer ; 
 public interface ContentConverter { 
 AbsContent convert ( AbsContentContainer container ) ; 
 
 - Class destinationType ( ) ; 
 + boolean validate ( AbsContent content ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java 
 index a0a438c . . a534c85 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / JsonContent . java 
 @ @ - 18 , 33 + 18 , 46 @ @ public abstract class JsonContent extends AbsContent { 
 super ( ) ; 
 } 
 
 + public static JsonContent convert ( AbsContentContainer container , JsonContent content ) { 
 + if ( container instanceof ContentRemoteContainer ) { 
 + ApiMessage message = ( ( ContentRemoteContainer ) container ) . getMessage ( ) ; 
 + if ( message instanceof ApiJsonMessage ) { 
 + try { 
 + JSONObject jsonObject = new JSONObject ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; 
 + if ( jsonObject . getString ( " dataType " ) . equals ( content . getDataType ( ) ) ) { 
 + content . setJsonObject ( jsonObject ) ; 
 + content . setContentContainer ( new ContentRemoteContainer ( new ApiJsonMessage ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ) ) ; 
 + content . setRawJson ( ( ( ApiJsonMessage ) message ) . getRawJson ( ) ) ; 
 + return content ; 
 + } 
 + } catch ( JSONException e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + } 
 + } 
 + return null ; 
 + } 
 
 - public static < T extends JsonContent > T create ( Class < T > c , String simpleStringData ) { 
 - JSONObject jsondata = new JSONObject ( ) ; 
 + public static JsonContent create ( JsonContent content , String simpleStringData ) { 
 + JSONObject data = new JSONObject ( ) ; 
 try { 
 - jsondata . put ( " data " , simpleStringData ) ; 
 + data . put ( " data " , simpleStringData ) ; 
 + return create ( content , data ) ; 
 } catch ( JSONException e ) { 
 - e . printStackTrace ( ) ; 
 + throw new RuntimeException ( e ) ; 
 } 
 - return create ( c , jsondata ) ; 
 } 
 
 - 
 - public static < T extends JsonContent > T create ( Class < T > c , JSONObject data ) { 
 + public static JsonContent create ( JsonContent content , JSONObject data ) { 
 + JSONObject json = new JSONObject ( ) ; 
 try { 
 - T t = c . newInstance ( ) ; 
 - JSONObject json = new JSONObject ( ) ; 
 - json . put ( " dataType " , t . getDataType ( ) ) ; 
 + json . put ( " dataType " , content . getDataType ( ) ) ; 
 json . put ( " data " , data ) ; 
 ContentRemoteContainer container = new ContentRemoteContainer ( new ApiJsonMessage ( json . toString ( ) ) ) ; 
 - t . setJsonObject ( json ) ; 
 - t . setRawJson ( json . toString ( ) ) ; 
 - t . setContentContainer ( container ) ; 
 - return t ; 
 - } catch ( InstantiationException e ) { 
 - throw new RuntimeException ( e ) ; 
 - } catch ( IllegalAccessException e ) { 
 - throw new RuntimeException ( e ) ; 
 + content . setJsonObject ( json ) ; 
 + content . setRawJson ( json . toString ( ) ) ; 
 + content . setContentContainer ( container ) ; 
 + return content ; 
 } catch ( JSONException e ) { 
 throw new RuntimeException ( e ) ; 
 } 
 @ @ - 105 , 31 + 118 , 6 @ @ public abstract class JsonContent extends AbsContent { 
 } 
 } 
 
 - public static < T extends JsonContent > AbsContent convert ( AbsContentContainer container , Class < T > classToConvert ) { 
 - if ( container instanceof ContentRemoteContainer ) { 
 - try { 
 - T type = classToConvert . newInstance ( ) ; 
 - 
 - ApiMessage msg = ( ( ContentRemoteContainer ) container ) . getMessage ( ) ; 
 - if ( msg instanceof ApiJsonMessage ) { 
 - try { 
 - JSONObject object = new JSONObject ( ( ( ApiJsonMessage ) msg ) . getRawJson ( ) ) ; 
 - if ( object . get ( " dataType " ) . equals ( type . getDataType ( ) ) ) { 
 - return type . create ( classToConvert , object . getJSONObject ( " data " ) ) ; 
 - } 
 - } catch ( JSONException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - } 
 - } catch ( InstantiationException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( IllegalAccessException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - } 
 - return null ; 
 - } 
 - 
 protected void setJsonObject ( JSONObject jsonObject ) { 
 this . jsonObject = jsonObject ; 
 }
