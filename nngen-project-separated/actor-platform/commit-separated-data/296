BLEU SCORE: 0.09578464408619825

TEST MSG: feat ( core + web ) : add animation auto play flag
GENERATED MSG: feat ( js ) : Implement new bind messages

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 52a7cd9 . . 4fe965f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 1687 , 6 + 1687 , 16 @ @ public class JsFacade implements Exportable { < nl > } < nl > < nl > @ UsedByApp < nl > + public void changeAnimationAutoPlayEnabled ( boolean isEnabled ) { < nl > + messenger . changeAnimationAutoPlayEnabled ( isEnabled ) ; < nl > + } < nl > + < nl > + @ UsedByApp < nl > + public boolean isAnimationAutoPlayEnabled ( ) { < nl > + return messenger . isInAppNotificationsEnabled ( ) ; < nl > + } < nl > + < nl > + @ UsedByApp < nl > public boolean isSendByEnterEnabled ( ) { < nl > return messenger . isSendByEnterEnabled ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 6030e5f . . 312b1c5 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 16 , 7 + 16 , 6 @ @ import im . actor . core . api . ApiRawValue ; < nl > import im . actor . core . api . ApiSex ; < nl > import im . actor . core . api . ApiAuthSession ; < nl > import im . actor . core . api . rpc . ResponseRawRequest ; < nl > - import im . actor . core . api . rpc . ResponseSeqDate ; < nl > import im . actor . core . entity . AuthCodeRes ; < nl > import im . actor . core . entity . AuthRes ; < nl > import im . actor . core . entity . AuthStartRes ; < nl > @ @ - 27 , 8 + 26 , 6 @ @ import im . actor . core . entity . MessageSearchEntity ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerSearchEntity ; < nl > import im . actor . core . entity . PeerSearchType ; < nl > - import im . actor . core . entity . PhoneBookContact ; < nl > - import im . actor . core . entity . PublicGroup ; < nl > import im . actor . core . entity . Sex ; < nl > import im . actor . core . entity . User ; < nl > import im . actor . core . entity . WebActionDescriptor ; < nl > @ @ - 50 , 11 + 47 , 9 @ @ import im . actor . core . events . PeerInfoOpened ; < nl > import im . actor . core . events . UserVisible ; < nl > import im . actor . core . network . NetworkState ; < nl > import im . actor . core . util . ActorTrace ; < nl > - import im . actor . core . util . Timing ; < nl > import im . actor . core . viewmodel . AppStateVM ; < nl > import im . actor . core . viewmodel . CallVM ; < nl > import im . actor . core . viewmodel . Command ; < nl > - import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . ConversationVM ; < nl > import im . actor . core . viewmodel . DialogGroupsVM ; < nl > import im . actor . core . viewmodel . FileCallback ; < nl > @ @ - 70 , 16 + 65 , 12 @ @ import im . actor . core . viewmodel . UploadFileCallback ; < nl > import im . actor . core . viewmodel . UploadFileVM ; < nl > import im . actor . core . viewmodel . UploadFileVMCallback ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > - import im . actor . runtime . Runtime ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . messages . Void ; < nl > - import im . actor . runtime . function . Consumer ; < nl > import im . actor . runtime . mvvm . MVVMCollection ; < nl > import im . actor . runtime . mvvm . ValueModel ; < nl > import im . actor . runtime . promise . Promise ; < nl > import im . actor . runtime . storage . PreferencesStorage ; < nl > - import im . actor . runtime . threading . SimpleDispatcher ; < nl > - import im . actor . runtime . threading . ThreadDispatcher ; < nl > < nl > / * * < nl > * Entry point to Actor Messaging < nl > @ @ - 2199 , 6 + 2190 , 27 @ @ public class Messenger { < nl > return modules . getSettingsModule ( ) . isRenameHintShown ( ) ; < nl > } < nl > < nl > + / * * < nl > + * Is animation content auto play enabled < nl > + * < nl > + * @ return is auto play enabled < nl > + * / < nl > + @ ObjectiveCName ( " isAnimationAutoPlayEnabled " ) < nl > + public boolean isAnimationAutoPlayEnabled ( ) { < nl > + return modules . getSettingsModule ( ) . isAnimationAutoPlayEnabled ( ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Change animation auto play enabled < nl > + * < nl > + * @ param val is auto play enabled < nl > + * / < nl > + @ ObjectiveCName ( " changeAnimationAutoPlayEnabled : " ) < nl > + public void changeAnimationAutoPlayEnabled ( boolean val ) { < nl > + modules . getSettingsModule ( ) . setAnimationAutoPlayEnabled ( val ) ; < nl > + } < nl > + < nl > + < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / Security < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java < nl > index d50d785 . . 9d1a989 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java < nl > @ @ - 42 , 6 + 42 , 8 @ @ public class SettingsModule extends AbsModule { < nl > private final String KEY _ PRIVACY ; < nl > private final String KEY _ CHAT _ TEXT _ SIZE ; < nl > < nl > + private final String KEY _ ANIMATION _ AUTO _ PLAY ; < nl > + < nl > private ActorRef settingsSync ; < nl > < nl > public SettingsModule ( ModuleContext context ) { < nl > @ @ - 97 , 6 + 99 , 8 @ @ public class SettingsModule extends AbsModule { < nl > KEY _ NOTIFICATION _ IN _ APP _ SOUND = " category . " + deviceType + " . in _ app . sound . enabled " ; < nl > KEY _ NOTIFICATION _ IN _ APP _ VIBRATION = " category . " + deviceType + " . in _ app . vibration . enabled " ; < nl > < nl > + KEY _ ANIMATION _ AUTO _ PLAY = " category . " + deviceType + " . auto _ play . enabled " ; < nl > + < nl > / / Account - wide notification settings < nl > KEY _ NOTIFICATION _ SOUND = " account . notification . sound " ; < nl > KEY _ NOTIFICATION _ GROUP _ ENABLED = " account . notifications . group . enabled " ; < nl > @ @ - 107 , 6 + 111 , 7 @ @ public class SettingsModule extends AbsModule { < nl > < nl > KEY _ WALLPAPPER = " wallpaper . uri " ; < nl > KEY _ PRIVACY = " privacy . last _ seen " ; < nl > + < nl > } < nl > < nl > public void run ( ) { < nl > @ @ - 285 , 6 + 290 , 16 @ @ public class SettingsModule extends AbsModule { < nl > changeValue ( KEY _ PRIVACY , privacy ) ; < nl > } < nl > < nl > + / / Animation < nl > + < nl > + public boolean isAnimationAutoPlayEnabled ( ) { < nl > + return getBooleanValue ( KEY _ ANIMATION _ AUTO _ PLAY , true ) ; < nl > + } < nl > + < nl > + public void setAnimationAutoPlayEnabled ( boolean val ) { < nl > + setBooleanValue ( KEY _ ANIMATION _ AUTO _ PLAY , val ) ; < nl > + } < nl > + < nl > / / Common < nl > < nl > public boolean getBooleanValue ( String key , boolean defaultVal ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 8e4ad6f . . c294e30 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 418 , 6 + 418 , 15 @ @ public class JsFacade implements Exportable { < nl > messenger . getSharedChatList ( peer . convert ( ) ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > + public JsMessagesBind bindMessages ( JsPeer peer , JsMessagesBindClosure callback ) { < nl > + if ( callback = = null ) { < nl > + return null ; < nl > + } < nl > + Peer peerC = peer . convert ( ) ; < nl > + < nl > + return new JsMessagesBind ( callback , messenger . getSharedChatList ( peerC ) , messenger . getConversationVM ( peerC ) ) ; < nl > + } < nl > + < nl > public void onMessageShown ( JsPeer peer , JsMessage message ) { < nl > if ( message . isOnServer ( ) ) { < nl > messenger . onMessageShown ( peer . convert ( ) , Long . parseLong ( message . getSortKey ( ) ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java < nl > index 85bcd9d . . 62d71b2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java < nl > @ @ - 43 , 6 + 43 , 7 @ @ import im . actor . core . js . providers . electron . JsElectronListener ; < nl > import im . actor . core . js . providers . notification . JsChromePush ; < nl > import im . actor . core . js . providers . notification . JsSafariPush ; < nl > import im . actor . core . js . providers . notification . PushSubscribeResult ; < nl > + import im . actor . core . viewmodel . ConversationVM ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > @ @ - 236 , 6 + 237 , 8 @ @ public class JsMessenger extends Messenger { < nl > return jsBindingModule . getDialogsGroupedList ( ) ; < nl > } < nl > < nl > + < nl > + < nl > private String getSmallAvatarUrl ( Avatar avatar ) { < nl > if ( avatar ! = null & & avatar . getSmallImage ( ) ! = null ) { < nl > return getFileUrl ( avatar . getSmallImage ( ) . getFileReference ( ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBind . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBind . java < nl > new file mode 100644 < nl > index 0000000 . . 36329b2 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBind . java < nl > @ @ - 0 , 0 + 1 , 69 @ @ < nl > + package im . actor . core . js . entity ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + import com . google . gwt . core . client . JsArray ; < nl > + < nl > + import org . timepedia . exporter . client . Export ; < nl > + import org . timepedia . exporter . client . Exportable ; < nl > + < nl > + import im . actor . core . entity . Message ; < nl > + import im . actor . core . viewmodel . ConversationVM ; < nl > + import im . actor . runtime . js . mvvm . JsDisplayList ; < nl > + import im . actor . runtime . js . mvvm . JsDisplayListBind ; < nl > + import im . actor . runtime . js . mvvm . JsDisplayListCallback ; < nl > + import im . actor . runtime . mvvm . Value ; < nl > + import im . actor . runtime . mvvm . ValueChangedListener ; < nl > + < nl > + @ Export < nl > + public class JsMessagesBind implements Exportable , JsDisplayListCallback < JsMessage > , ValueChangedListener < Boolean > { < nl > + < nl > + private final JsDisplayList < JsMessage , Message > displayList ; < nl > + private final JsDisplayListBind < JsMessage , Message > bind ; < nl > + private final ConversationVM conversationVM ; < nl > + private final JsMessagesBindClosure closure ; < nl > + private boolean isLoaded ; < nl > + private JsArray < JsMessage > arrays ; < nl > + private JsArray < JavaScriptObject > overlays ; < nl > + private boolean isLocked = true ; < nl > + < nl > + @ Export < nl > + public JsMessagesBind ( JsMessagesBindClosure closure , < nl > + JsDisplayList < JsMessage , Message > displayList , < nl > + ConversationVM conversationVM ) { < nl > + this . displayList = displayList ; < nl > + this . closure = closure ; < nl > + this . conversationVM = conversationVM ; < nl > + this . conversationVM . getIsLoaded ( ) . subscribe ( this ) ; < nl > + this . bind = displayList . subscribe ( this , true ) ; < nl > + this . bind . initAll ( ) ; < nl > + < nl > + notifySubscriber ( ) ; < nl > + this . isLocked = false ; < nl > + } < nl > + < nl > + @ Export < nl > + public void unbind ( ) { < nl > + this . displayList . unsubscribe ( this ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onCollectionChanged ( JsArray < JsMessage > array , JsArray < JavaScriptObject > overlays ) { < nl > + this . arrays = array ; < nl > + this . overlays = overlays ; < nl > + if ( ! isLocked ) { < nl > + notifySubscriber ( ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onChanged ( Boolean val , Value < Boolean > valueModel ) { < nl > + this . isLoaded = val ; < nl > + if ( ! isLocked ) { < nl > + notifySubscriber ( ) ; < nl > + } < nl > + } < nl > + < nl > + private void notifySubscriber ( ) { < nl > + closure . onBind ( arrays , overlays , isLoaded ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBindClosure . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBindClosure . java < nl > new file mode 100644 < nl > index 0000000 . . 854eb1c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBindClosure . java < nl > @ @ - 0 , 0 + 1 , 14 @ @ < nl > + package im . actor . core . js . entity ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + import com . google . gwt . core . client . JsArray ; < nl > + < nl > + import org . timepedia . exporter . client . Export ; < nl > + import org . timepedia . exporter . client . ExportClosure ; < nl > + import org . timepedia . exporter . client . Exportable ; < nl > + < nl > + @ Export < nl > + @ ExportClosure < nl > + public interface JsMessagesBindClosure extends Exportable { < nl > + void onBind ( JsArray < JsMessage > array , JsArray < JavaScriptObject > overlays , boolean isLoaded ) ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index f9db21b . . d2174c8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 48 , 6 + 48 , 7 @ @ import im . actor . core . util . ActorTrace ; < nl > import im . actor . core . util . Timing ; < nl > import im . actor . core . viewmodel . AppStateVM ; < nl > import im . actor . core . viewmodel . Command ; < nl > + import im . actor . core . viewmodel . ConversationVM ; < nl > import im . actor . core . viewmodel . DialogGroupsVM ; < nl > import im . actor . core . viewmodel . FileCallback ; < nl > import im . actor . core . viewmodel . FileVM ; < nl > @ @ - 582 , 6 + 583 , 16 @ @ public class Messenger { < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > / * * < nl > + * Getting Conversation VM < nl > + * < nl > + * @ param peer peer < nl > + * @ return Conversation VM < nl > + * / < nl > + public ConversationVM getConversationVM ( Peer peer ) { < nl > + return modules . getMessagesModule ( ) . getConversationVM ( peer ) ; < nl > + } < nl > + < nl > + / * * < nl > * Send Markdown Message with mentions < nl > * < nl > * @ param peer destination peer < nl > @ @ - 747 , 7 + 758 , 7 @ @ public class Messenger { < nl > / * * < nl > * Send json message < nl > * < nl > - * @ param peer destination peer < nl > + * @ param peer destination peer < nl > * @ param content json content < nl > * / < nl > @ ObjectiveCName ( " sendJsonWithPeer : withJson : " )

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 52a7cd9 . . 4fe965f 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 1687 , 6 + 1687 , 16 @ @ public class JsFacade implements Exportable { 
 } 
 
 @ UsedByApp 
 + public void changeAnimationAutoPlayEnabled ( boolean isEnabled ) { 
 + messenger . changeAnimationAutoPlayEnabled ( isEnabled ) ; 
 + } 
 + 
 + @ UsedByApp 
 + public boolean isAnimationAutoPlayEnabled ( ) { 
 + return messenger . isInAppNotificationsEnabled ( ) ; 
 + } 
 + 
 + @ UsedByApp 
 public boolean isSendByEnterEnabled ( ) { 
 return messenger . isSendByEnterEnabled ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 6030e5f . . 312b1c5 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 16 , 7 + 16 , 6 @ @ import im . actor . core . api . ApiRawValue ; 
 import im . actor . core . api . ApiSex ; 
 import im . actor . core . api . ApiAuthSession ; 
 import im . actor . core . api . rpc . ResponseRawRequest ; 
 - import im . actor . core . api . rpc . ResponseSeqDate ; 
 import im . actor . core . entity . AuthCodeRes ; 
 import im . actor . core . entity . AuthRes ; 
 import im . actor . core . entity . AuthStartRes ; 
 @ @ - 27 , 8 + 26 , 6 @ @ import im . actor . core . entity . MessageSearchEntity ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerSearchEntity ; 
 import im . actor . core . entity . PeerSearchType ; 
 - import im . actor . core . entity . PhoneBookContact ; 
 - import im . actor . core . entity . PublicGroup ; 
 import im . actor . core . entity . Sex ; 
 import im . actor . core . entity . User ; 
 import im . actor . core . entity . WebActionDescriptor ; 
 @ @ - 50 , 11 + 47 , 9 @ @ import im . actor . core . events . PeerInfoOpened ; 
 import im . actor . core . events . UserVisible ; 
 import im . actor . core . network . NetworkState ; 
 import im . actor . core . util . ActorTrace ; 
 - import im . actor . core . util . Timing ; 
 import im . actor . core . viewmodel . AppStateVM ; 
 import im . actor . core . viewmodel . CallVM ; 
 import im . actor . core . viewmodel . Command ; 
 - import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . ConversationVM ; 
 import im . actor . core . viewmodel . DialogGroupsVM ; 
 import im . actor . core . viewmodel . FileCallback ; 
 @ @ - 70 , 16 + 65 , 12 @ @ import im . actor . core . viewmodel . UploadFileCallback ; 
 import im . actor . core . viewmodel . UploadFileVM ; 
 import im . actor . core . viewmodel . UploadFileVMCallback ; 
 import im . actor . core . viewmodel . UserVM ; 
 - import im . actor . runtime . Runtime ; 
 import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . messages . Void ; 
 - import im . actor . runtime . function . Consumer ; 
 import im . actor . runtime . mvvm . MVVMCollection ; 
 import im . actor . runtime . mvvm . ValueModel ; 
 import im . actor . runtime . promise . Promise ; 
 import im . actor . runtime . storage . PreferencesStorage ; 
 - import im . actor . runtime . threading . SimpleDispatcher ; 
 - import im . actor . runtime . threading . ThreadDispatcher ; 
 
 / * * 
 * Entry point to Actor Messaging 
 @ @ - 2199 , 6 + 2190 , 27 @ @ public class Messenger { 
 return modules . getSettingsModule ( ) . isRenameHintShown ( ) ; 
 } 
 
 + / * * 
 + * Is animation content auto play enabled 
 + * 
 + * @ return is auto play enabled 
 + * / 
 + @ ObjectiveCName ( " isAnimationAutoPlayEnabled " ) 
 + public boolean isAnimationAutoPlayEnabled ( ) { 
 + return modules . getSettingsModule ( ) . isAnimationAutoPlayEnabled ( ) ; 
 + } 
 + 
 + / * * 
 + * Change animation auto play enabled 
 + * 
 + * @ param val is auto play enabled 
 + * / 
 + @ ObjectiveCName ( " changeAnimationAutoPlayEnabled : " ) 
 + public void changeAnimationAutoPlayEnabled ( boolean val ) { 
 + modules . getSettingsModule ( ) . setAnimationAutoPlayEnabled ( val ) ; 
 + } 
 + 
 + 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / Security 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java 
 index d50d785 . . 9d1a989 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / settings / SettingsModule . java 
 @ @ - 42 , 6 + 42 , 8 @ @ public class SettingsModule extends AbsModule { 
 private final String KEY _ PRIVACY ; 
 private final String KEY _ CHAT _ TEXT _ SIZE ; 
 
 + private final String KEY _ ANIMATION _ AUTO _ PLAY ; 
 + 
 private ActorRef settingsSync ; 
 
 public SettingsModule ( ModuleContext context ) { 
 @ @ - 97 , 6 + 99 , 8 @ @ public class SettingsModule extends AbsModule { 
 KEY _ NOTIFICATION _ IN _ APP _ SOUND = " category . " + deviceType + " . in _ app . sound . enabled " ; 
 KEY _ NOTIFICATION _ IN _ APP _ VIBRATION = " category . " + deviceType + " . in _ app . vibration . enabled " ; 
 
 + KEY _ ANIMATION _ AUTO _ PLAY = " category . " + deviceType + " . auto _ play . enabled " ; 
 + 
 / / Account - wide notification settings 
 KEY _ NOTIFICATION _ SOUND = " account . notification . sound " ; 
 KEY _ NOTIFICATION _ GROUP _ ENABLED = " account . notifications . group . enabled " ; 
 @ @ - 107 , 6 + 111 , 7 @ @ public class SettingsModule extends AbsModule { 
 
 KEY _ WALLPAPPER = " wallpaper . uri " ; 
 KEY _ PRIVACY = " privacy . last _ seen " ; 
 + 
 } 
 
 public void run ( ) { 
 @ @ - 285 , 6 + 290 , 16 @ @ public class SettingsModule extends AbsModule { 
 changeValue ( KEY _ PRIVACY , privacy ) ; 
 } 
 
 + / / Animation 
 + 
 + public boolean isAnimationAutoPlayEnabled ( ) { 
 + return getBooleanValue ( KEY _ ANIMATION _ AUTO _ PLAY , true ) ; 
 + } 
 + 
 + public void setAnimationAutoPlayEnabled ( boolean val ) { 
 + setBooleanValue ( KEY _ ANIMATION _ AUTO _ PLAY , val ) ; 
 + } 
 + 
 / / Common 
 
 public boolean getBooleanValue ( String key , boolean defaultVal ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 8e4ad6f . . c294e30 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 418 , 6 + 418 , 15 @ @ public class JsFacade implements Exportable { 
 messenger . getSharedChatList ( peer . convert ( ) ) . unsubscribe ( callback ) ; 
 } 
 
 + public JsMessagesBind bindMessages ( JsPeer peer , JsMessagesBindClosure callback ) { 
 + if ( callback = = null ) { 
 + return null ; 
 + } 
 + Peer peerC = peer . convert ( ) ; 
 + 
 + return new JsMessagesBind ( callback , messenger . getSharedChatList ( peerC ) , messenger . getConversationVM ( peerC ) ) ; 
 + } 
 + 
 public void onMessageShown ( JsPeer peer , JsMessage message ) { 
 if ( message . isOnServer ( ) ) { 
 messenger . onMessageShown ( peer . convert ( ) , Long . parseLong ( message . getSortKey ( ) ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java 
 index 85bcd9d . . 62d71b2 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsMessenger . java 
 @ @ - 43 , 6 + 43 , 7 @ @ import im . actor . core . js . providers . electron . JsElectronListener ; 
 import im . actor . core . js . providers . notification . JsChromePush ; 
 import im . actor . core . js . providers . notification . JsSafariPush ; 
 import im . actor . core . js . providers . notification . PushSubscribeResult ; 
 + import im . actor . core . viewmodel . ConversationVM ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 @ @ - 236 , 6 + 237 , 8 @ @ public class JsMessenger extends Messenger { 
 return jsBindingModule . getDialogsGroupedList ( ) ; 
 } 
 
 + 
 + 
 private String getSmallAvatarUrl ( Avatar avatar ) { 
 if ( avatar ! = null & & avatar . getSmallImage ( ) ! = null ) { 
 return getFileUrl ( avatar . getSmallImage ( ) . getFileReference ( ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBind . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBind . java 
 new file mode 100644 
 index 0000000 . . 36329b2 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBind . java 
 @ @ - 0 , 0 + 1 , 69 @ @ 
 + package im . actor . core . js . entity ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + import com . google . gwt . core . client . JsArray ; 
 + 
 + import org . timepedia . exporter . client . Export ; 
 + import org . timepedia . exporter . client . Exportable ; 
 + 
 + import im . actor . core . entity . Message ; 
 + import im . actor . core . viewmodel . ConversationVM ; 
 + import im . actor . runtime . js . mvvm . JsDisplayList ; 
 + import im . actor . runtime . js . mvvm . JsDisplayListBind ; 
 + import im . actor . runtime . js . mvvm . JsDisplayListCallback ; 
 + import im . actor . runtime . mvvm . Value ; 
 + import im . actor . runtime . mvvm . ValueChangedListener ; 
 + 
 + @ Export 
 + public class JsMessagesBind implements Exportable , JsDisplayListCallback < JsMessage > , ValueChangedListener < Boolean > { 
 + 
 + private final JsDisplayList < JsMessage , Message > displayList ; 
 + private final JsDisplayListBind < JsMessage , Message > bind ; 
 + private final ConversationVM conversationVM ; 
 + private final JsMessagesBindClosure closure ; 
 + private boolean isLoaded ; 
 + private JsArray < JsMessage > arrays ; 
 + private JsArray < JavaScriptObject > overlays ; 
 + private boolean isLocked = true ; 
 + 
 + @ Export 
 + public JsMessagesBind ( JsMessagesBindClosure closure , 
 + JsDisplayList < JsMessage , Message > displayList , 
 + ConversationVM conversationVM ) { 
 + this . displayList = displayList ; 
 + this . closure = closure ; 
 + this . conversationVM = conversationVM ; 
 + this . conversationVM . getIsLoaded ( ) . subscribe ( this ) ; 
 + this . bind = displayList . subscribe ( this , true ) ; 
 + this . bind . initAll ( ) ; 
 + 
 + notifySubscriber ( ) ; 
 + this . isLocked = false ; 
 + } 
 + 
 + @ Export 
 + public void unbind ( ) { 
 + this . displayList . unsubscribe ( this ) ; 
 + } 
 + 
 + @ Override 
 + public void onCollectionChanged ( JsArray < JsMessage > array , JsArray < JavaScriptObject > overlays ) { 
 + this . arrays = array ; 
 + this . overlays = overlays ; 
 + if ( ! isLocked ) { 
 + notifySubscriber ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onChanged ( Boolean val , Value < Boolean > valueModel ) { 
 + this . isLoaded = val ; 
 + if ( ! isLocked ) { 
 + notifySubscriber ( ) ; 
 + } 
 + } 
 + 
 + private void notifySubscriber ( ) { 
 + closure . onBind ( arrays , overlays , isLoaded ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBindClosure . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBindClosure . java 
 new file mode 100644 
 index 0000000 . . 854eb1c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessagesBindClosure . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package im . actor . core . js . entity ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + import com . google . gwt . core . client . JsArray ; 
 + 
 + import org . timepedia . exporter . client . Export ; 
 + import org . timepedia . exporter . client . ExportClosure ; 
 + import org . timepedia . exporter . client . Exportable ; 
 + 
 + @ Export 
 + @ ExportClosure 
 + public interface JsMessagesBindClosure extends Exportable { 
 + void onBind ( JsArray < JsMessage > array , JsArray < JavaScriptObject > overlays , boolean isLoaded ) ; 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index f9db21b . . d2174c8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 48 , 6 + 48 , 7 @ @ import im . actor . core . util . ActorTrace ; 
 import im . actor . core . util . Timing ; 
 import im . actor . core . viewmodel . AppStateVM ; 
 import im . actor . core . viewmodel . Command ; 
 + import im . actor . core . viewmodel . ConversationVM ; 
 import im . actor . core . viewmodel . DialogGroupsVM ; 
 import im . actor . core . viewmodel . FileCallback ; 
 import im . actor . core . viewmodel . FileVM ; 
 @ @ - 582 , 6 + 583 , 16 @ @ public class Messenger { 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 / * * 
 + * Getting Conversation VM 
 + * 
 + * @ param peer peer 
 + * @ return Conversation VM 
 + * / 
 + public ConversationVM getConversationVM ( Peer peer ) { 
 + return modules . getMessagesModule ( ) . getConversationVM ( peer ) ; 
 + } 
 + 
 + / * * 
 * Send Markdown Message with mentions 
 * 
 * @ param peer destination peer 
 @ @ - 747 , 7 + 758 , 7 @ @ public class Messenger { 
 / * * 
 * Send json message 
 * 
 - * @ param peer destination peer 
 + * @ param peer destination peer 
 * @ param content json content 
 * / 
 @ ObjectiveCName ( " sendJsonWithPeer : withJson : " )
