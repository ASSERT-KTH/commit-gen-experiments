BLEU SCORE: 0.345720784641941

TEST MSG: fix ( iOS ) : Fixing compilation error
GENERATED MSG: feat ( iOS ) : Avatar Binding performance

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift < nl > index 40af9f6 . . 1edbfae 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift < nl > @ @ - 44 , 7 + 44 , 7 @ @ class CocoaTcpConnection : ARAsyncConnection , GCDAsyncSocketDelegate { < nl > < nl > gcdSocket = GCDAsyncSocket ( delegate : self , delegateQueue : CocoaTcpConnection . queue ) < nl > do { < nl > - try self . gcdSocket ! . connectToHost ( endpoint . getHost ( ) ! , onPort : UInt16 ( endpoint . getPort ( ) ) , withTimeout : Double ( ARManagedConnection _ CONNECTION _ TIMEOUT ) / 1000 . 0 ) < nl > + try self . gcdSocket ! . connectToHost ( endpoint . host ! , onPort : UInt16 ( endpoint . port ) , withTimeout : Double ( ARManagedConnection _ CONNECTION _ TIMEOUT ) / 1000 . 0 ) < nl > } catch _ { < nl > < nl > } < nl > @ @ - 52 , 7 + 52 , 7 @ @ class CocoaTcpConnection : ARAsyncConnection , GCDAsyncSocketDelegate { < nl > < nl > / / Affer successful connection < nl > func socket ( sock : GCDAsyncSocket ! , didConnectToHost host : String ! , port : UInt16 ) { < nl > - if ( self . getEndpoint ( ) . getType ( ) . ordinal ( ) = = ARConnectionEndpoint _ Type . TCP _ TLS ( ) . ordinal ( ) ) { < nl > + if ( self . getEndpoint ( ) . type = = ARConnectionEndpoint . TYPE _ TCP _ TLS ( ) ) { < nl > / / NSLog ( " \ ( TAG ) Starring TLS Session . . . " ) < nl > sock . startTLS ( nil ) < nl > } else {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > index b7af9d5 . . 24a10a6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > @ @ - 163 , 7 + 163 , 8 @ @ class CocoaInputFile : NSObject , ARInputFile { < nl > } < nl > < nl > func readWithOffset ( fileOffset : jint , withData data : IOSByteArray ! , withDataOffset offset : jint , withLength len : jint , withCallback callback : ARFileReadCallback ! ) { < nl > - dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ LOW , 0 ) ) { < nl > + < nl > + dispatchBackground { < nl > self . fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; < nl > let readed : NSData = self . fileHandle . readDataOfLength ( Int ( len ) ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 3a1cd2a . . 41750e3 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 220 , 8 + 220 , 12 @ @ public class AAAvatarView : UIImageView { < nl > self . image = image ; < nl > } < nl > } < nl > - } ) ; < nl > - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) < nl > + } ) < nl > + let fl = fileLocation < nl > + let c = callback < nl > + dispatchBackground { < nl > + Actor . bindRawFileWithReference ( fl , autoStart : true , withCallback : c ) < nl > + } < nl > } < nl > < nl > public func unbind ( ) { < nl > @ @ - 236 , 7 + 240 , 11 @ @ public class AAAvatarView : UIImageView { < nl > self . bindedTitle = nil < nl > < nl > if ( bindedFileId ! = nil ) { < nl > - Actor . unbindRawFileWithFileId ( bindedFileId ! , autoCancel : false , withCallback : callback ) < nl > + let bfid = bindedFileId < nl > + let c = callback < nl > + dispatchBackground { < nl > + Actor . unbindRawFileWithFileId ( bfid ! , autoCancel : false , withCallback : c ) < nl > + } < nl > bindedFileId = nil < nl > callback = nil < nl > requestId + + ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift 
 index 40af9f6 . . 1edbfae 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift 
 @ @ - 44 , 7 + 44 , 7 @ @ class CocoaTcpConnection : ARAsyncConnection , GCDAsyncSocketDelegate { 
 
 gcdSocket = GCDAsyncSocket ( delegate : self , delegateQueue : CocoaTcpConnection . queue ) 
 do { 
 - try self . gcdSocket ! . connectToHost ( endpoint . getHost ( ) ! , onPort : UInt16 ( endpoint . getPort ( ) ) , withTimeout : Double ( ARManagedConnection _ CONNECTION _ TIMEOUT ) / 1000 . 0 ) 
 + try self . gcdSocket ! . connectToHost ( endpoint . host ! , onPort : UInt16 ( endpoint . port ) , withTimeout : Double ( ARManagedConnection _ CONNECTION _ TIMEOUT ) / 1000 . 0 ) 
 } catch _ { 
 
 } 
 @ @ - 52 , 7 + 52 , 7 @ @ class CocoaTcpConnection : ARAsyncConnection , GCDAsyncSocketDelegate { 
 
 / / Affer successful connection 
 func socket ( sock : GCDAsyncSocket ! , didConnectToHost host : String ! , port : UInt16 ) { 
 - if ( self . getEndpoint ( ) . getType ( ) . ordinal ( ) = = ARConnectionEndpoint _ Type . TCP _ TLS ( ) . ordinal ( ) ) { 
 + if ( self . getEndpoint ( ) . type = = ARConnectionEndpoint . TYPE _ TCP _ TLS ( ) ) { 
 / / NSLog ( " \ ( TAG ) Starring TLS Session . . . " ) 
 sock . startTLS ( nil ) 
 } else {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 index b7af9d5 . . 24a10a6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 @ @ - 163 , 7 + 163 , 8 @ @ class CocoaInputFile : NSObject , ARInputFile { 
 } 
 
 func readWithOffset ( fileOffset : jint , withData data : IOSByteArray ! , withDataOffset offset : jint , withLength len : jint , withCallback callback : ARFileReadCallback ! ) { 
 - dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ LOW , 0 ) ) { 
 + 
 + dispatchBackground { 
 self . fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; 
 let readed : NSData = self . fileHandle . readDataOfLength ( Int ( len ) ) ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 3a1cd2a . . 41750e3 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 220 , 8 + 220 , 12 @ @ public class AAAvatarView : UIImageView { 
 self . image = image ; 
 } 
 } 
 - } ) ; 
 - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) 
 + } ) 
 + let fl = fileLocation 
 + let c = callback 
 + dispatchBackground { 
 + Actor . bindRawFileWithReference ( fl , autoStart : true , withCallback : c ) 
 + } 
 } 
 
 public func unbind ( ) { 
 @ @ - 236 , 7 + 240 , 11 @ @ public class AAAvatarView : UIImageView { 
 self . bindedTitle = nil 
 
 if ( bindedFileId ! = nil ) { 
 - Actor . unbindRawFileWithFileId ( bindedFileId ! , autoCancel : false , withCallback : callback ) 
 + let bfid = bindedFileId 
 + let c = callback 
 + dispatchBackground { 
 + Actor . unbindRawFileWithFileId ( bfid ! , autoCancel : false , withCallback : c ) 
 + } 
 bindedFileId = nil 
 callback = nil 
 requestId + + ;
