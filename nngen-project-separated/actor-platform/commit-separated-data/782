BLEU SCORE: 0.14411786453067818

TEST MSG: feat ( js ) : Added calls muting
GENERATED MSG: fix ( js ) : Fixing isBot flag in user and fixing find groups promice

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index b2637a0 . . cfea486 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 671 , 6 + 671 , 10 @ @ public class JsFacade implements Exportable { < nl > messenger . endCall ( Long . parseLong ( callId ) ) ; < nl > } < nl > < nl > + public void toggleCallMute ( String callId ) { < nl > + messenger . toggleCallMute ( Long . parseLong ( callId ) ) ; < nl > + } < nl > + < nl > public void bindCall ( String id , JsBindedValueCallback callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java < nl > index 65981cf . . 8f29d91 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java < nl > @ @ - 31 , 11 + 31 , 11 @ @ public class JsCall extends JavaScriptObject { < nl > state = " ended " ; < nl > break ; < nl > } < nl > - return create ( JsPeer . create ( model . getPeer ( ) ) , model . isOutgoing ( ) , members , state ) ; < nl > + return create ( JsPeer . create ( model . getPeer ( ) ) , model . isOutgoing ( ) , members , state , model . getIsMuted ( ) . get ( ) ) ; < nl > } < nl > < nl > - public static native JsCall create ( JsPeer peer , boolean isOutgoing , JsArray < JsPeerInfo > members , String state ) / * - { < nl > - return { peer : peer , isOutgoing : isOutgoing , members : members , state : state } ; < nl > + public static native JsCall create ( JsPeer peer , boolean isOutgoing , JsArray < JsPeerInfo > members , String state , boolean isMuted ) / * - { < nl > + return { peer : peer , isOutgoing : isOutgoing , members : members , state : state , isMuted : isMuted } ; < nl > } - * / ; < nl > < nl > protected JsCall ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 174a996 . . 3d9eddd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 733 , 6 + 733 , 7 @ @ public class JsFacade implements Exportable { < nl > } < nl > / / jsRes . push ( ) ; < nl > } < nl > + resolve ( jsRes ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java < nl > index bbe63e0 . . 591ad8a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java < nl > @ @ - 62 , 7 + 62 , 7 @ @ public class JsUser extends JavaScriptObject { < nl > boolean isContact , boolean isBot , String presence , boolean isOnline , JsArray < JsPhone > phones , < nl > JsArray < JsEmail > emails ) / * - { < nl > return { id : id , name : name , nick : nick , about : about , avatar : avatar , bigAvatar : bigAvatar , placeholder : placeholder , < nl > - isContact : isContact , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; < nl > + isContact : isContact , isBot : isBot , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; < nl > } - * / ; < nl > < nl > protected JsUser ( ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index b2637a0 . . cfea486 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 671 , 6 + 671 , 10 @ @ public class JsFacade implements Exportable { 
 messenger . endCall ( Long . parseLong ( callId ) ) ; 
 } 
 
 + public void toggleCallMute ( String callId ) { 
 + messenger . toggleCallMute ( Long . parseLong ( callId ) ) ; 
 + } 
 + 
 public void bindCall ( String id , JsBindedValueCallback callback ) { 
 if ( callback = = null ) { 
 return ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java 
 index 65981cf . . 8f29d91 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsCall . java 
 @ @ - 31 , 11 + 31 , 11 @ @ public class JsCall extends JavaScriptObject { 
 state = " ended " ; 
 break ; 
 } 
 - return create ( JsPeer . create ( model . getPeer ( ) ) , model . isOutgoing ( ) , members , state ) ; 
 + return create ( JsPeer . create ( model . getPeer ( ) ) , model . isOutgoing ( ) , members , state , model . getIsMuted ( ) . get ( ) ) ; 
 } 
 
 - public static native JsCall create ( JsPeer peer , boolean isOutgoing , JsArray < JsPeerInfo > members , String state ) / * - { 
 - return { peer : peer , isOutgoing : isOutgoing , members : members , state : state } ; 
 + public static native JsCall create ( JsPeer peer , boolean isOutgoing , JsArray < JsPeerInfo > members , String state , boolean isMuted ) / * - { 
 + return { peer : peer , isOutgoing : isOutgoing , members : members , state : state , isMuted : isMuted } ; 
 } - * / ; 
 
 protected JsCall ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 174a996 . . 3d9eddd 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 733 , 6 + 733 , 7 @ @ public class JsFacade implements Exportable { 
 } 
 / / jsRes . push ( ) ; 
 } 
 + resolve ( jsRes ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java 
 index bbe63e0 . . 591ad8a 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsUser . java 
 @ @ - 62 , 7 + 62 , 7 @ @ public class JsUser extends JavaScriptObject { 
 boolean isContact , boolean isBot , String presence , boolean isOnline , JsArray < JsPhone > phones , 
 JsArray < JsEmail > emails ) / * - { 
 return { id : id , name : name , nick : nick , about : about , avatar : avatar , bigAvatar : bigAvatar , placeholder : placeholder , 
 - isContact : isContact , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; 
 + isContact : isContact , isBot : isBot , presence : presence , isOnline : isOnline , phones : phones , emails : emails } ; 
 } - * / ; 
 
 protected JsUser ( ) {
