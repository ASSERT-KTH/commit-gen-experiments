BLEU SCORE: 0.23217460403031903

TEST MSG: chore ( android ) : bump gradle
GENERATED MSG: fix ( android ) : move push from sdk to app

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / build . gradle b / actor - sdk / sdk - core - android / android - app / build . gradle < nl > index 7a49b9c . . c013ad7 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - app / build . gradle < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > buildscript { < nl > dependencies { < nl > - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' < nl > + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' < nl > classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - google - maps / build . gradle b / actor - sdk / sdk - core - android / android - google - maps / build . gradle < nl > index e25667e . . 88ae171 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - google - maps / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - google - maps / build . gradle < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > buildscript { < nl > dependencies { < nl > - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' < nl > + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' < nl > classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' < nl > classpath " io . codearte . gradle . nexus : gradle - nexus - staging - plugin : 0 . 5 . 3 " < nl > classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' < nl > diff - - git a / actor - sdk / sdk - core - android / android - google - push / build . gradle b / actor - sdk / sdk - core - android / android - google - push / build . gradle < nl > index 7e6e58c . . 499980a 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - google - push / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - google - push / build . gradle < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > buildscript { < nl > dependencies { < nl > - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' < nl > + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' < nl > classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' < nl > classpath " io . codearte . gradle . nexus : gradle - nexus - staging - plugin : 0 . 5 . 3 " < nl > classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' < nl > diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java < nl > index 0a7673f . . ad1c563 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java < nl > @ @ - 6 , 7 + 6 , 7 @ @ import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > < nl > import java . io . IOException ; < nl > < nl > - import im . actor . core . util . ExponentialBackoff ; < nl > + import im . actor . runtime . util . ExponentialBackoff ; < nl > import im . actor . runtime . Log ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . core . ActorPushManager ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > index 270da19 . . 7875508 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > buildscript { < nl > dependencies { < nl > - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' < nl > + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' < nl > classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' < nl > classpath " io . codearte . gradle . nexus : gradle - nexus - staging - plugin : 0 . 5 . 3 " < nl > classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java < nl > index cc9d9d9 . . 9422256 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java < nl > @ @ - 22 , 7 + 22 , 7 @ @ import java . util . UUID ; < nl > import java . util . concurrent . Executor ; < nl > import java . util . concurrent . Executors ; < nl > < nl > - import im . actor . core . util . ExponentialBackoff ; < nl > + import im . actor . runtime . util . ExponentialBackoff ; < nl > < nl > / * * < nl > * Actor Push service based on MQTT < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml < nl > index f6fa6b1 . . cc90241 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml < nl > @ @ - 10 , 6 + 10 , 7 @ @ < nl > android : layout _ height = " match _ parent " > < nl > < nl > < LinearLayout < nl > + android : animateLayoutChanges = " true " < nl > android : id = " @ + id / container " < nl > android : layout _ width = " match _ parent " < nl > android : layout _ height = " wrap _ content " < nl > diff - - git a / actor - sdk / sdk - core / core / core - android / build . gradle b / actor - sdk / sdk - core / core / core - android / build . gradle < nl > index e501220 . . 390b823 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / build . gradle < nl > + + + b / actor - sdk / sdk - core / core / core - android / build . gradle < nl > @ @ - 4 , 7 + 4 , 7 @ @ buildscript { < nl > } < nl > < nl > dependencies { < nl > - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' < nl > + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' < nl > classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java < nl > index 080166a . . 5c9f9ff 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java < nl > @ @ - 16 , 7 + 16 , 7 @ @ import im . actor . core . network . mtp . entity . RequestStartAuth ; < nl > import im . actor . core . network . mtp . entity . ResponseDoDH ; < nl > import im . actor . core . network . mtp . entity . ResponseGetServerKey ; < nl > import im . actor . core . network . mtp . entity . ResponseStartAuth ; < nl > - import im . actor . core . util . ExponentialBackoff ; < nl > + import im . actor . runtime . util . ExponentialBackoff ; < nl > import im . actor . runtime . Crypto ; < nl > import im . actor . runtime . Log ; < nl > import im . actor . runtime . Network ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java < nl > index adb270a . . d44a339 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java < nl > @ @ - 15 , 7 + 15 , 7 @ @ import im . actor . core . network . mtp . MTProto ; < nl > import im . actor . core . network . mtp . entity . EncryptedCBCPackage ; < nl > import im . actor . core . network . mtp . entity . EncryptedPackage ; < nl > import im . actor . core . network . mtp . entity . ProtoMessage ; < nl > - import im . actor . core . util . ExponentialBackoff ; < nl > + import im . actor . runtime . util . ExponentialBackoff ; < nl > import im . actor . runtime . * ; < nl > import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ExponentialBackoff . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ExponentialBackoff . java < nl > deleted file mode 100644 < nl > index cd1a6f8 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ExponentialBackoff . java < nl > + + + / dev / null < nl > @ @ - 1 , 70 + 0 , 0 @ @ < nl > - / * < nl > - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - * / < nl > - < nl > - package im . actor . core . util ; < nl > - < nl > - import java . util . Random ; < nl > - < nl > - import im . actor . runtime . threading . AtomicIntegerCompat ; < nl > - < nl > - / * * < nl > - * Helper for calculation of exponential backoff delays < nl > - * / < nl > - < nl > - public class ExponentialBackoff { < nl > - < nl > - private final Random random = new Random ( ) ; < nl > - < nl > - private final int minDelay ; < nl > - private final int maxDelay ; < nl > - private final int maxFailureCount ; < nl > - < nl > - private int currentFailureCount = 1 ; < nl > - < nl > - public ExponentialBackoff ( ) { < nl > - this ( 500 , 15000 , 50 ) ; < nl > - } < nl > - < nl > - public ExponentialBackoff ( int minDelay , < nl > - int maxDelay , < nl > - int maxFailureCount ) { < nl > - this . minDelay = minDelay ; < nl > - this . maxDelay = maxDelay ; < nl > - this . maxFailureCount = maxFailureCount ; < nl > - } < nl > - < nl > - / * * < nl > - * Calculating wait duration after failure attempt < nl > - * < nl > - * @ return wait in ms < nl > - * / < nl > - public synchronized long exponentialWait ( ) { < nl > - long maxDelayRet = minDelay + ( ( maxDelay - minDelay ) / maxFailureCount ) * currentFailureCount ; < nl > - return ( long ) ( random . nextFloat ( ) * maxDelayRet ) ; < nl > - } < nl > - < nl > - / * * < nl > - * Notification about failure < nl > - * / < nl > - public synchronized void onFailure ( ) { < nl > - currentFailureCount + + ; < nl > - if ( currentFailureCount > maxFailureCount ) { < nl > - currentFailureCount = maxFailureCount ; < nl > - } < nl > - } < nl > - < nl > - / * * < nl > - * Notification about success < nl > - * / < nl > - public synchronized void onSuccess ( ) { < nl > - reset ( ) ; < nl > - } < nl > - < nl > - / * * < nl > - * Resetting backoff object < nl > - * / < nl > - public synchronized void reset ( ) { < nl > - currentFailureCount = 0 ; < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / build . gradle b / actor - sdk / sdk - core / runtime / runtime - android / build . gradle < nl > index 519b7d2 . . ef3cd88 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / build . gradle < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / build . gradle < nl > @ @ - 4 , 7 + 4 , 7 @ @ buildscript { < nl > } < nl > < nl > dependencies { < nl > - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' < nl > + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' < nl > classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java < nl > index fb71bff . . fb6611a 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java < nl > @ @ - 10 , 7 + 10 , 7 @ @ import android . content . Intent ; < nl > import android . content . IntentFilter ; < nl > import android . content . SharedPreferences ; < nl > < nl > - import im . actor . core . util . ExponentialBackoff ; < nl > + import im . actor . runtime . util . ExponentialBackoff ; < nl > import im . actor . runtime . Runtime ; < nl > import im . actor . runtime . actors . ThreadPriority ; < nl > import im . actor . runtime . android . threading . AndroidDispatcher ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / util / ExponentialBackoff . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / util / ExponentialBackoff . java < nl > new file mode 100644 < nl > index 0000000 . . 43aabdc < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / util / ExponentialBackoff . java < nl > @ @ - 0 , 0 + 1 , 70 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . runtime . util ; < nl > + < nl > + import java . util . Random ; < nl > + < nl > + import im . actor . runtime . threading . AtomicIntegerCompat ; < nl > + < nl > + / * * < nl > + * Helper for calculation of exponential backoff delays < nl > + * / < nl > + < nl > + public class ExponentialBackoff { < nl > + < nl > + private final Random random = new Random ( ) ; < nl > + < nl > + private final int minDelay ; < nl > + private final int maxDelay ; < nl > + private final int maxFailureCount ; < nl > + < nl > + private int currentFailureCount = 1 ; < nl > + < nl > + public ExponentialBackoff ( ) { < nl > + this ( 500 , 15000 , 50 ) ; < nl > + } < nl > + < nl > + public ExponentialBackoff ( int minDelay , < nl > + int maxDelay , < nl > + int maxFailureCount ) { < nl > + this . minDelay = minDelay ; < nl > + this . maxDelay = maxDelay ; < nl > + this . maxFailureCount = maxFailureCount ; < nl > + } < nl > + < nl > + / * * < nl > + * Calculating wait duration after failure attempt < nl > + * < nl > + * @ return wait in ms < nl > + * / < nl > + public synchronized long exponentialWait ( ) { < nl > + long maxDelayRet = minDelay + ( ( maxDelay - minDelay ) / maxFailureCount ) * currentFailureCount ; < nl > + return ( long ) ( random . nextFloat ( ) * maxDelayRet ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Notification about failure < nl > + * / < nl > + public synchronized void onFailure ( ) { < nl > + currentFailureCount + + ; < nl > + if ( currentFailureCount > maxFailureCount ) { < nl > + currentFailureCount = maxFailureCount ; < nl > + } < nl > + } < nl > + < nl > + / * * < nl > + * Notification about success < nl > + * / < nl > + public synchronized void onSuccess ( ) { < nl > + reset ( ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Resetting backoff object < nl > + * / < nl > + public synchronized void reset ( ) { < nl > + currentFailureCount = 0 ; < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / gradle / wrapper / gradle - wrapper . properties b / gradle / wrapper / gradle - wrapper . properties < nl > index 1d10ddc . . b504ce7 100755 < nl > - - - a / gradle / wrapper / gradle - wrapper . properties < nl > + + + b / gradle / wrapper / gradle - wrapper . properties < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > - # Sat Apr 09 16 : 04 : 30 MSK 2016 < nl > + # Wed Aug 24 15 : 48 : 51 MSK 2016 < nl > distributionBase = GRADLE _ USER _ HOME < nl > distributionPath = wrapper / dists < nl > zipStoreBase = GRADLE _ USER _ HOME < nl > zipStorePath = wrapper / dists < nl > - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 10 - all . zip < nl > + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 14 . 1 - all . zip
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / build . gradle b / actor - sdk / sdk - core - android / android - app / build . gradle < nl > index bcdbf65 . . 46f0a0d 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - app / build . gradle < nl > @ @ - 31 , 4 + 31 , 6 @ @ android { < nl > dependencies { < nl > compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) < nl > compile project ( ' : actor - sdk : sdk - core - android : android - sdk ' ) < nl > + compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' < nl > + < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml < nl > index 25c5fbf . . 5e3c3b1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml < nl > @ @ - 2 , 6 + 2 , 14 @ @ < nl > < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " < nl > package = " im . actor " > < nl > < nl > + < permission < nl > + android : name = " $ { applicationId } . permission . C2D _ MESSAGE " < nl > + android : protectionLevel = " signature " / > < nl > + < nl > + < uses - permission android : name = " $ { applicationId } . permission . C2D _ MESSAGE " / > < nl > + < uses - permission android : name = " com . google . android . c2dm . permission . RECEIVE " / > < nl > + < nl > + < nl > < application < nl > android : name = " . Application " < nl > android : allowBackup = " true " < nl > @ @ - 26 , 6 + 34 , 16 @ @ < nl > android : theme = " @ style / NoBarActivityTheme " < nl > android : windowSoftInputMode = " adjustNothing " / > < nl > < nl > + < receiver < nl > + android : name = " im . actor . PushReceiver " < nl > + android : permission = " com . google . android . c2dm . permission . SEND " > < nl > + < intent - filter > < nl > + < action android : name = " com . google . android . c2dm . intent . RECEIVE " / > < nl > + < nl > + < category android : name = " $ { applicationId } " / > < nl > + < / intent - filter > < nl > + < / receiver > < nl > + < nl > < / application > < nl > < nl > < / manifest > < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushManager . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushManager . java < nl > new file mode 100644 < nl > index 0000000 . . c547bed < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushManager . java < nl > @ @ - 0 , 0 + 1 , 26 @ @ < nl > + package im . actor ; < nl > + < nl > + import android . content . Context ; < nl > + < nl > + import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > + < nl > + import java . io . IOException ; < nl > + < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . core . ActorPushManager ; < nl > + < nl > + public class PushManager extends ActorPushManager { < nl > + @ Override < nl > + public String tryRegisterPush ( Context context ) { < nl > + GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > + Log . d ( " Actor GCM " , " Requesting push token iteration . . . " ) ; < nl > + try { < nl > + return cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; < nl > + } catch ( IOException e ) { < nl > + e . printStackTrace ( ) ; < nl > + return null ; < nl > + } < nl > + < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushReceiver . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushReceiver . java < nl > new file mode 100644 < nl > index 0000000 . . 13a1316 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushReceiver . java < nl > @ @ - 0 , 0 + 1 , 34 @ @ < nl > + package im . actor ; < nl > + < nl > + import android . app . Activity ; < nl > + import android . content . Context ; < nl > + import android . content . Intent ; < nl > + import android . os . Bundle ; < nl > + < nl > + import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > + < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . sdk . core . ActorPushReceiver ; < nl > + < nl > + public class PushReceiver extends ActorPushReceiver { < nl > + < nl > + private static final String TAG = " ActorPushReceiver " ; < nl > + < nl > + @ Override < nl > + public void onReceive ( Context context , Intent intent ) { < nl > + GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; < nl > + Bundle extras = intent . getExtras ( ) ; < nl > + String messageType = gcm . getMessageType ( intent ) ; < nl > + if ( ! extras . isEmpty ( ) ) { < nl > + if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > + if ( extras . containsKey ( " seq " ) ) { < nl > + int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > + onSeqReceived ( seq ) ; < nl > + setResultCode ( Activity . RESULT _ OK ) ; < nl > + Log . d ( TAG , " Push received " ) ; < nl > + } < nl > + } < nl > + } < nl > + completeWakefulIntent ( intent ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > index 8c04484 . . 12318e8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > @ @ - 76 , 9 + 76 , 6 @ @ dependencies { < nl > compile ' com . android . support : recyclerview - v7 : 23 . 1 . 0 ' < nl > compile ' com . android . support : design : 23 . 1 . 0 ' < nl > < nl > - / / GCM < nl > - compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' < nl > - < nl > } < nl > < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index ef17a74 . . 61bacbd 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 23 , 6 + 23 , 7 @ @ import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . core . AndroidNotifications ; < nl > import im . actor . sdk . core . AndroidPhoneBook ; < nl > import im . actor . sdk . core . AndroidPushActor ; < nl > + import im . actor . sdk . core . ActorPushManager ; < nl > import im . actor . sdk . intents . ActivityManager ; < nl > import im . actor . sdk . services . KeepAliveService ; < nl > import im . actor . sdk . util . Devices ; < nl > @ @ - 151 , 15 + 152 , 26 @ @ public class ActorSDK { < nl > / / < nl > / / GCM < nl > / / < nl > - if ( pushId ! = 0 ) { < nl > - system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { < nl > - @ Override < nl > - public AndroidPushActor create ( ) { < nl > - return new AndroidPushActor ( application , messenger ) ; < nl > - } < nl > - } ) , " actor / android / push " ) ; < nl > + try { < nl > + < nl > + final ActorPushManager pushManager = ( ActorPushManager ) Class . forName ( " im . actor . PushManager " ) . newInstance ( ) ; < nl > + if ( pushId ! = 0 ) { < nl > + system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { < nl > + @ Override < nl > + public AndroidPushActor create ( ) { < nl > + return new AndroidPushActor ( application , messenger , pushManager ) ; < nl > + } < nl > + } ) , " actor / android / push " ) ; < nl > + } < nl > + } catch ( ClassNotFoundException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } catch ( InstantiationException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } catch ( IllegalAccessException e ) { < nl > + e . printStackTrace ( ) ; < nl > } < nl > < nl > + < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java < nl > new file mode 100644 < nl > index 0000000 . . 2b6a8fa < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java < nl > @ @ - 0 , 0 + 1 , 20 @ @ < nl > + package im . actor . sdk . core ; < nl > + < nl > + import android . content . Context ; < nl > + < nl > + import im . actor . core . AndroidMessenger ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + < nl > + public abstract class ActorPushManager { < nl > + public abstract String tryRegisterPush ( Context context ) ; < nl > + < nl > + public void registerOnActorServer ( AndroidMessenger messenger , String token ) { < nl > + messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > + messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; < nl > + } < nl > + < nl > + < nl > + } < nl > + < nl > + < nl > + < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java < nl > new file mode 100644 < nl > index 0000000 . . e827d55 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java < nl > @ @ - 0 , 0 + 1 , 11 @ @ < nl > + package im . actor . sdk . core ; < nl > + < nl > + import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > + < nl > + import im . actor . sdk . ActorSDK ; < nl > + < nl > + public abstract class ActorPushReceiver extends WakefulBroadcastReceiver { < nl > + public void onSeqReceived ( int seq ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > index d65a7a8 . . b99d740 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > @ @ - 1 , 15 + 1 , 9 @ @ < nl > package im . actor . sdk . core ; < nl > < nl > import android . content . Context ; < nl > - < nl > - import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > - < nl > - import java . io . IOException ; < nl > - < nl > import im . actor . core . AndroidMessenger ; < nl > import im . actor . runtime . Log ; < nl > import im . actor . runtime . actors . Actor ; < nl > - import im . actor . sdk . ActorSDK ; < nl > < nl > / * * < nl > * GCM push implementation for Actor push registration . < nl > @ @ - 17 , 15 + 11 , 17 @ @ import im . actor . sdk . ActorSDK ; < nl > * / < nl > public class AndroidPushActor extends Actor { < nl > < nl > - private static final String TAG = " im . actor . core . AndroidPushActor " ; < nl > + private static final String TAG = " im . actor . sdk . core . AndroidPushActor " ; < nl > < nl > private final AndroidMessenger messenger ; < nl > private final Context context ; < nl > private boolean isRegistered ; < nl > + private ActorPushManager pushManager ; < nl > < nl > - public AndroidPushActor ( Context context , AndroidMessenger messenger ) { < nl > + public AndroidPushActor ( Context context , AndroidMessenger messenger , ActorPushManager pushManager ) { < nl > this . messenger = messenger ; < nl > this . context = context ; < nl > + this . pushManager = pushManager ; < nl > } < nl > < nl > @ Override < nl > @ @ - 42 , 10 + 38 , 8 @ @ public class AndroidPushActor extends Actor { < nl > @ Override < nl > public void run ( ) { < nl > while ( true ) { < nl > - GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > try { < nl > - Log . d ( TAG , " Requesting push token iteration . . . " ) ; < nl > - String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; < nl > + String regId = pushManager . tryRegisterPush ( context ) ; < nl > if ( regId ! = null ) { < nl > Log . d ( TAG , " Token loaded " ) ; < nl > self ( ) . send ( new PushRegistered ( regId ) ) ; < nl > @ @ - 53 , 7 + 47 , 7 @ @ public class AndroidPushActor extends Actor { < nl > } else { < nl > Log . d ( TAG , " Unable to load Token " ) ; < nl > } < nl > - } catch ( IOException e ) { < nl > + } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > Log . d ( TAG , " Waiting for next attempt " ) ; < nl > @ @ - 73 , 8 + 67 , 8 @ @ public class AndroidPushActor extends Actor { < nl > < nl > private void onPushRegistered ( String token ) { < nl > isRegistered = true ; < nl > - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; < nl > + pushManager . registerOnActorServer ( messenger , token ) ; < nl > + < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java < nl > deleted file mode 100644 < nl > index 425cfb1 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java < nl > + + + / dev / null < nl > @ @ - 1 , 35 + 0 , 0 @ @ < nl > - package im . actor . sdk . core ; < nl > - < nl > - import android . app . Activity ; < nl > - import android . content . Context ; < nl > - import android . content . Intent ; < nl > - import android . os . Bundle ; < nl > - import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > - < nl > - import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > - < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . sdk . ActorSDK ; < nl > - < nl > - public class PushReceiver extends WakefulBroadcastReceiver { < nl > - < nl > - private static final String TAG = " PushReceiver " ; < nl > - < nl > - @ Override < nl > - public void onReceive ( Context context , Intent intent ) { < nl > - GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; < nl > - Bundle extras = intent . getExtras ( ) ; < nl > - String messageType = gcm . getMessageType ( intent ) ; < nl > - if ( ! extras . isEmpty ( ) ) { < nl > - if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > - if ( extras . containsKey ( " seq " ) ) { < nl > - int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > - ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; < nl > - setResultCode ( Activity . RESULT _ OK ) ; < nl > - Log . d ( TAG , " Push received " ) ; < nl > - } < nl > - } < nl > - } < nl > - completeWakefulIntent ( intent ) ; < nl > - } < nl > - }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / build . gradle b / actor - sdk / sdk - core - android / android - app / build . gradle 
 index 7a49b9c . . c013ad7 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - app / build . gradle 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 buildscript { 
 dependencies { 
 - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' 
 + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' 
 classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - google - maps / build . gradle b / actor - sdk / sdk - core - android / android - google - maps / build . gradle 
 index e25667e . . 88ae171 100644 
 - - - a / actor - sdk / sdk - core - android / android - google - maps / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - google - maps / build . gradle 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 buildscript { 
 dependencies { 
 - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' 
 + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' 
 classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' 
 classpath " io . codearte . gradle . nexus : gradle - nexus - staging - plugin : 0 . 5 . 3 " 
 classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' 
 diff - - git a / actor - sdk / sdk - core - android / android - google - push / build . gradle b / actor - sdk / sdk - core - android / android - google - push / build . gradle 
 index 7e6e58c . . 499980a 100644 
 - - - a / actor - sdk / sdk - core - android / android - google - push / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - google - push / build . gradle 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 buildscript { 
 dependencies { 
 - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' 
 + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' 
 classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' 
 classpath " io . codearte . gradle . nexus : gradle - nexus - staging - plugin : 0 . 5 . 3 " 
 classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' 
 diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java 
 index 0a7673f . . ad1c563 100644 
 - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java 
 + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushManager . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 
 import java . io . IOException ; 
 
 - import im . actor . core . util . ExponentialBackoff ; 
 + import im . actor . runtime . util . ExponentialBackoff ; 
 import im . actor . runtime . Log ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . core . ActorPushManager ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 index 270da19 . . 7875508 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 buildscript { 
 dependencies { 
 - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' 
 + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' 
 classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' 
 classpath " io . codearte . gradle . nexus : gradle - nexus - staging - plugin : 0 . 5 . 3 " 
 classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java 
 index cc9d9d9 . . 9422256 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / push / ActorPushService . java 
 @ @ - 22 , 7 + 22 , 7 @ @ import java . util . UUID ; 
 import java . util . concurrent . Executor ; 
 import java . util . concurrent . Executors ; 
 
 - import im . actor . core . util . ExponentialBackoff ; 
 + import im . actor . runtime . util . ExponentialBackoff ; 
 
 / * * 
 * Actor Push service based on MQTT 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml 
 index f6fa6b1 . . cc90241 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ profile . xml 
 @ @ - 10 , 6 + 10 , 7 @ @ 
 android : layout _ height = " match _ parent " > 
 
 < LinearLayout 
 + android : animateLayoutChanges = " true " 
 android : id = " @ + id / container " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " wrap _ content " 
 diff - - git a / actor - sdk / sdk - core / core / core - android / build . gradle b / actor - sdk / sdk - core / core / core - android / build . gradle 
 index e501220 . . 390b823 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / build . gradle 
 + + + b / actor - sdk / sdk - core / core / core - android / build . gradle 
 @ @ - 4 , 7 + 4 , 7 @ @ buildscript { 
 } 
 
 dependencies { 
 - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' 
 + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' 
 classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java 
 index 080166a . . 5c9f9ff 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / api / AuthKeyActor . java 
 @ @ - 16 , 7 + 16 , 7 @ @ import im . actor . core . network . mtp . entity . RequestStartAuth ; 
 import im . actor . core . network . mtp . entity . ResponseDoDH ; 
 import im . actor . core . network . mtp . entity . ResponseGetServerKey ; 
 import im . actor . core . network . mtp . entity . ResponseStartAuth ; 
 - import im . actor . core . util . ExponentialBackoff ; 
 + import im . actor . runtime . util . ExponentialBackoff ; 
 import im . actor . runtime . Crypto ; 
 import im . actor . runtime . Log ; 
 import im . actor . runtime . Network ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java 
 index adb270a . . d44a339 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / mtp / actors / ManagerActor . java 
 @ @ - 15 , 7 + 15 , 7 @ @ import im . actor . core . network . mtp . MTProto ; 
 import im . actor . core . network . mtp . entity . EncryptedCBCPackage ; 
 import im . actor . core . network . mtp . entity . EncryptedPackage ; 
 import im . actor . core . network . mtp . entity . ProtoMessage ; 
 - import im . actor . core . util . ExponentialBackoff ; 
 + import im . actor . runtime . util . ExponentialBackoff ; 
 import im . actor . runtime . * ; 
 import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorRef ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ExponentialBackoff . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ExponentialBackoff . java 
 deleted file mode 100644 
 index cd1a6f8 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / util / ExponentialBackoff . java 
 + + + / dev / null 
 @ @ - 1 , 70 + 0 , 0 @ @ 
 - / * 
 - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - * / 
 - 
 - package im . actor . core . util ; 
 - 
 - import java . util . Random ; 
 - 
 - import im . actor . runtime . threading . AtomicIntegerCompat ; 
 - 
 - / * * 
 - * Helper for calculation of exponential backoff delays 
 - * / 
 - 
 - public class ExponentialBackoff { 
 - 
 - private final Random random = new Random ( ) ; 
 - 
 - private final int minDelay ; 
 - private final int maxDelay ; 
 - private final int maxFailureCount ; 
 - 
 - private int currentFailureCount = 1 ; 
 - 
 - public ExponentialBackoff ( ) { 
 - this ( 500 , 15000 , 50 ) ; 
 - } 
 - 
 - public ExponentialBackoff ( int minDelay , 
 - int maxDelay , 
 - int maxFailureCount ) { 
 - this . minDelay = minDelay ; 
 - this . maxDelay = maxDelay ; 
 - this . maxFailureCount = maxFailureCount ; 
 - } 
 - 
 - / * * 
 - * Calculating wait duration after failure attempt 
 - * 
 - * @ return wait in ms 
 - * / 
 - public synchronized long exponentialWait ( ) { 
 - long maxDelayRet = minDelay + ( ( maxDelay - minDelay ) / maxFailureCount ) * currentFailureCount ; 
 - return ( long ) ( random . nextFloat ( ) * maxDelayRet ) ; 
 - } 
 - 
 - / * * 
 - * Notification about failure 
 - * / 
 - public synchronized void onFailure ( ) { 
 - currentFailureCount + + ; 
 - if ( currentFailureCount > maxFailureCount ) { 
 - currentFailureCount = maxFailureCount ; 
 - } 
 - } 
 - 
 - / * * 
 - * Notification about success 
 - * / 
 - public synchronized void onSuccess ( ) { 
 - reset ( ) ; 
 - } 
 - 
 - / * * 
 - * Resetting backoff object 
 - * / 
 - public synchronized void reset ( ) { 
 - currentFailureCount = 0 ; 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / build . gradle b / actor - sdk / sdk - core / runtime / runtime - android / build . gradle 
 index 519b7d2 . . ef3cd88 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / build . gradle 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / build . gradle 
 @ @ - 4 , 7 + 4 , 7 @ @ buildscript { 
 } 
 
 dependencies { 
 - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' 
 + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' 
 classpath ' me . tatarka : gradle - retrolambda : 3 . 2 . 5 ' 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java 
 index fb71bff . . fb6611a 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidThreadingProvider . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import android . content . Intent ; 
 import android . content . IntentFilter ; 
 import android . content . SharedPreferences ; 
 
 - import im . actor . core . util . ExponentialBackoff ; 
 + import im . actor . runtime . util . ExponentialBackoff ; 
 import im . actor . runtime . Runtime ; 
 import im . actor . runtime . actors . ThreadPriority ; 
 import im . actor . runtime . android . threading . AndroidDispatcher ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / util / ExponentialBackoff . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / util / ExponentialBackoff . java 
 new file mode 100644 
 index 0000000 . . 43aabdc 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / util / ExponentialBackoff . java 
 @ @ - 0 , 0 + 1 , 70 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . runtime . util ; 
 + 
 + import java . util . Random ; 
 + 
 + import im . actor . runtime . threading . AtomicIntegerCompat ; 
 + 
 + / * * 
 + * Helper for calculation of exponential backoff delays 
 + * / 
 + 
 + public class ExponentialBackoff { 
 + 
 + private final Random random = new Random ( ) ; 
 + 
 + private final int minDelay ; 
 + private final int maxDelay ; 
 + private final int maxFailureCount ; 
 + 
 + private int currentFailureCount = 1 ; 
 + 
 + public ExponentialBackoff ( ) { 
 + this ( 500 , 15000 , 50 ) ; 
 + } 
 + 
 + public ExponentialBackoff ( int minDelay , 
 + int maxDelay , 
 + int maxFailureCount ) { 
 + this . minDelay = minDelay ; 
 + this . maxDelay = maxDelay ; 
 + this . maxFailureCount = maxFailureCount ; 
 + } 
 + 
 + / * * 
 + * Calculating wait duration after failure attempt 
 + * 
 + * @ return wait in ms 
 + * / 
 + public synchronized long exponentialWait ( ) { 
 + long maxDelayRet = minDelay + ( ( maxDelay - minDelay ) / maxFailureCount ) * currentFailureCount ; 
 + return ( long ) ( random . nextFloat ( ) * maxDelayRet ) ; 
 + } 
 + 
 + / * * 
 + * Notification about failure 
 + * / 
 + public synchronized void onFailure ( ) { 
 + currentFailureCount + + ; 
 + if ( currentFailureCount > maxFailureCount ) { 
 + currentFailureCount = maxFailureCount ; 
 + } 
 + } 
 + 
 + / * * 
 + * Notification about success 
 + * / 
 + public synchronized void onSuccess ( ) { 
 + reset ( ) ; 
 + } 
 + 
 + / * * 
 + * Resetting backoff object 
 + * / 
 + public synchronized void reset ( ) { 
 + currentFailureCount = 0 ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / gradle / wrapper / gradle - wrapper . properties b / gradle / wrapper / gradle - wrapper . properties 
 index 1d10ddc . . b504ce7 100755 
 - - - a / gradle / wrapper / gradle - wrapper . properties 
 + + + b / gradle / wrapper / gradle - wrapper . properties 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - # Sat Apr 09 16 : 04 : 30 MSK 2016 
 + # Wed Aug 24 15 : 48 : 51 MSK 2016 
 distributionBase = GRADLE _ USER _ HOME 
 distributionPath = wrapper / dists 
 zipStoreBase = GRADLE _ USER _ HOME 
 zipStorePath = wrapper / dists 
 - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 10 - all . zip 
 + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 14 . 1 - all . zip

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / build . gradle b / actor - sdk / sdk - core - android / android - app / build . gradle 
 index bcdbf65 . . 46f0a0d 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - app / build . gradle 
 @ @ - 31 , 4 + 31 , 6 @ @ android { 
 dependencies { 
 compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) 
 compile project ( ' : actor - sdk : sdk - core - android : android - sdk ' ) 
 + compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' 
 + 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml 
 index 25c5fbf . . 5e3c3b1 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / AndroidManifest . xml 
 @ @ - 2 , 6 + 2 , 14 @ @ 
 < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 package = " im . actor " > 
 
 + < permission 
 + android : name = " $ { applicationId } . permission . C2D _ MESSAGE " 
 + android : protectionLevel = " signature " / > 
 + 
 + < uses - permission android : name = " $ { applicationId } . permission . C2D _ MESSAGE " / > 
 + < uses - permission android : name = " com . google . android . c2dm . permission . RECEIVE " / > 
 + 
 + 
 < application 
 android : name = " . Application " 
 android : allowBackup = " true " 
 @ @ - 26 , 6 + 34 , 16 @ @ 
 android : theme = " @ style / NoBarActivityTheme " 
 android : windowSoftInputMode = " adjustNothing " / > 
 
 + < receiver 
 + android : name = " im . actor . PushReceiver " 
 + android : permission = " com . google . android . c2dm . permission . SEND " > 
 + < intent - filter > 
 + < action android : name = " com . google . android . c2dm . intent . RECEIVE " / > 
 + 
 + < category android : name = " $ { applicationId } " / > 
 + < / intent - filter > 
 + < / receiver > 
 + 
 < / application > 
 
 < / manifest > 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushManager . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushManager . java 
 new file mode 100644 
 index 0000000 . . c547bed 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushManager . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + package im . actor ; 
 + 
 + import android . content . Context ; 
 + 
 + import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 + 
 + import java . io . IOException ; 
 + 
 + import im . actor . runtime . Log ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . core . ActorPushManager ; 
 + 
 + public class PushManager extends ActorPushManager { 
 + @ Override 
 + public String tryRegisterPush ( Context context ) { 
 + GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 + Log . d ( " Actor GCM " , " Requesting push token iteration . . . " ) ; 
 + try { 
 + return cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; 
 + } catch ( IOException e ) { 
 + e . printStackTrace ( ) ; 
 + return null ; 
 + } 
 + 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushReceiver . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushReceiver . java 
 new file mode 100644 
 index 0000000 . . 13a1316 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / PushReceiver . java 
 @ @ - 0 , 0 + 1 , 34 @ @ 
 + package im . actor ; 
 + 
 + import android . app . Activity ; 
 + import android . content . Context ; 
 + import android . content . Intent ; 
 + import android . os . Bundle ; 
 + 
 + import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 + 
 + import im . actor . runtime . Log ; 
 + import im . actor . sdk . core . ActorPushReceiver ; 
 + 
 + public class PushReceiver extends ActorPushReceiver { 
 + 
 + private static final String TAG = " ActorPushReceiver " ; 
 + 
 + @ Override 
 + public void onReceive ( Context context , Intent intent ) { 
 + GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; 
 + Bundle extras = intent . getExtras ( ) ; 
 + String messageType = gcm . getMessageType ( intent ) ; 
 + if ( ! extras . isEmpty ( ) ) { 
 + if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 + if ( extras . containsKey ( " seq " ) ) { 
 + int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 + onSeqReceived ( seq ) ; 
 + setResultCode ( Activity . RESULT _ OK ) ; 
 + Log . d ( TAG , " Push received " ) ; 
 + } 
 + } 
 + } 
 + completeWakefulIntent ( intent ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 index 8c04484 . . 12318e8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 @ @ - 76 , 9 + 76 , 6 @ @ dependencies { 
 compile ' com . android . support : recyclerview - v7 : 23 . 1 . 0 ' 
 compile ' com . android . support : design : 23 . 1 . 0 ' 
 
 - / / GCM 
 - compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' 
 - 
 } 
 
 / / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index ef17a74 . . 61bacbd 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . core . AndroidNotifications ; 
 import im . actor . sdk . core . AndroidPhoneBook ; 
 import im . actor . sdk . core . AndroidPushActor ; 
 + import im . actor . sdk . core . ActorPushManager ; 
 import im . actor . sdk . intents . ActivityManager ; 
 import im . actor . sdk . services . KeepAliveService ; 
 import im . actor . sdk . util . Devices ; 
 @ @ - 151 , 15 + 152 , 26 @ @ public class ActorSDK { 
 / / 
 / / GCM 
 / / 
 - if ( pushId ! = 0 ) { 
 - system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { 
 - @ Override 
 - public AndroidPushActor create ( ) { 
 - return new AndroidPushActor ( application , messenger ) ; 
 - } 
 - } ) , " actor / android / push " ) ; 
 + try { 
 + 
 + final ActorPushManager pushManager = ( ActorPushManager ) Class . forName ( " im . actor . PushManager " ) . newInstance ( ) ; 
 + if ( pushId ! = 0 ) { 
 + system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { 
 + @ Override 
 + public AndroidPushActor create ( ) { 
 + return new AndroidPushActor ( application , messenger , pushManager ) ; 
 + } 
 + } ) , " actor / android / push " ) ; 
 + } 
 + } catch ( ClassNotFoundException e ) { 
 + e . printStackTrace ( ) ; 
 + } catch ( InstantiationException e ) { 
 + e . printStackTrace ( ) ; 
 + } catch ( IllegalAccessException e ) { 
 + e . printStackTrace ( ) ; 
 } 
 
 + 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java 
 new file mode 100644 
 index 0000000 . . 2b6a8fa 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushManager . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package im . actor . sdk . core ; 
 + 
 + import android . content . Context ; 
 + 
 + import im . actor . core . AndroidMessenger ; 
 + import im . actor . sdk . ActorSDK ; 
 + 
 + public abstract class ActorPushManager { 
 + public abstract String tryRegisterPush ( Context context ) ; 
 + 
 + public void registerOnActorServer ( AndroidMessenger messenger , String token ) { 
 + messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 + messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; 
 + } 
 + 
 + 
 + } 
 + 
 + 
 + 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java 
 new file mode 100644 
 index 0000000 . . e827d55 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / ActorPushReceiver . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + package im . actor . sdk . core ; 
 + 
 + import android . support . v4 . content . WakefulBroadcastReceiver ; 
 + 
 + import im . actor . sdk . ActorSDK ; 
 + 
 + public abstract class ActorPushReceiver extends WakefulBroadcastReceiver { 
 + public void onSeqReceived ( int seq ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 index d65a7a8 . . b99d740 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 @ @ - 1 , 15 + 1 , 9 @ @ 
 package im . actor . sdk . core ; 
 
 import android . content . Context ; 
 - 
 - import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 - 
 - import java . io . IOException ; 
 - 
 import im . actor . core . AndroidMessenger ; 
 import im . actor . runtime . Log ; 
 import im . actor . runtime . actors . Actor ; 
 - import im . actor . sdk . ActorSDK ; 
 
 / * * 
 * GCM push implementation for Actor push registration . 
 @ @ - 17 , 15 + 11 , 17 @ @ import im . actor . sdk . ActorSDK ; 
 * / 
 public class AndroidPushActor extends Actor { 
 
 - private static final String TAG = " im . actor . core . AndroidPushActor " ; 
 + private static final String TAG = " im . actor . sdk . core . AndroidPushActor " ; 
 
 private final AndroidMessenger messenger ; 
 private final Context context ; 
 private boolean isRegistered ; 
 + private ActorPushManager pushManager ; 
 
 - public AndroidPushActor ( Context context , AndroidMessenger messenger ) { 
 + public AndroidPushActor ( Context context , AndroidMessenger messenger , ActorPushManager pushManager ) { 
 this . messenger = messenger ; 
 this . context = context ; 
 + this . pushManager = pushManager ; 
 } 
 
 @ Override 
 @ @ - 42 , 10 + 38 , 8 @ @ public class AndroidPushActor extends Actor { 
 @ Override 
 public void run ( ) { 
 while ( true ) { 
 - GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 try { 
 - Log . d ( TAG , " Requesting push token iteration . . . " ) ; 
 - String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; 
 + String regId = pushManager . tryRegisterPush ( context ) ; 
 if ( regId ! = null ) { 
 Log . d ( TAG , " Token loaded " ) ; 
 self ( ) . send ( new PushRegistered ( regId ) ) ; 
 @ @ - 53 , 7 + 47 , 7 @ @ public class AndroidPushActor extends Actor { 
 } else { 
 Log . d ( TAG , " Unable to load Token " ) ; 
 } 
 - } catch ( IOException e ) { 
 + } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 Log . d ( TAG , " Waiting for next attempt " ) ; 
 @ @ - 73 , 8 + 67 , 8 @ @ public class AndroidPushActor extends Actor { 
 
 private void onPushRegistered ( String token ) { 
 isRegistered = true ; 
 - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; 
 + pushManager . registerOnActorServer ( messenger , token ) ; 
 + 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java 
 deleted file mode 100644 
 index 425cfb1 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java 
 + + + / dev / null 
 @ @ - 1 , 35 + 0 , 0 @ @ 
 - package im . actor . sdk . core ; 
 - 
 - import android . app . Activity ; 
 - import android . content . Context ; 
 - import android . content . Intent ; 
 - import android . os . Bundle ; 
 - import android . support . v4 . content . WakefulBroadcastReceiver ; 
 - 
 - import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 - 
 - import im . actor . runtime . Log ; 
 - import im . actor . sdk . ActorSDK ; 
 - 
 - public class PushReceiver extends WakefulBroadcastReceiver { 
 - 
 - private static final String TAG = " PushReceiver " ; 
 - 
 - @ Override 
 - public void onReceive ( Context context , Intent intent ) { 
 - GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; 
 - Bundle extras = intent . getExtras ( ) ; 
 - String messageType = gcm . getMessageType ( intent ) ; 
 - if ( ! extras . isEmpty ( ) ) { 
 - if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 - if ( extras . containsKey ( " seq " ) ) { 
 - int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 - ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; 
 - setResultCode ( Activity . RESULT _ OK ) ; 
 - Log . d ( TAG , " Push received " ) ; 
 - } 
 - } 
 - } 
 - completeWakefulIntent ( intent ) ; 
 - } 
 - }
