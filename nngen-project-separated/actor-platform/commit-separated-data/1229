BLEU SCORE: 0.23761018873960865

TEST MSG: feat ( scheme ) : Adding DoCall method
GENERATED MSG: fix ( scheme ) : add missing ServiceEx , correct SearchOrCondition

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json < nl > index ae20836 . . ce78eb5 100644 < nl > - - - a / actor - sdk / sdk - api / actor . json < nl > + + + b / actor - sdk / sdk - api / actor . json < nl > @ @ - 11383 , 6 + 11383 , 65 @ @ < nl > { < nl > " type " : " rpc " , < nl > " content " : { < nl > + " name " : " DoCall " , < nl > + " header " : 2597 , < nl > + " response " : { < nl > + " type " : " anonymous " , < nl > + " header " : 2598 , < nl > + " doc " : [ < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " callId " , < nl > + " category " : " full " , < nl > + " description " : " Call Id " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : " int64 " , < nl > + " id " : 1 , < nl > + " name " : " callId " < nl > + } < nl > + ] < nl > + } , < nl > + " doc " : [ < nl > + " Do Call . Right after a call client need to start sending CallInProgress " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " peer " , < nl > + " category " : " full " , < nl > + " description " : " destination peer " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " timeout " , < nl > + " category " : " hidden " , < nl > + " description " : " Call timeout " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : { < nl > + " type " : " struct " , < nl > + " childType " : " OutPeer " < nl > + } , < nl > + " id " : 1 , < nl > + " name " : " peer " < nl > + } , < nl > + { < nl > + " type " : { < nl > + " type " : " alias " , < nl > + " childType " : " sec " < nl > + } , < nl > + " id " : 2 , < nl > + " name " : " timeout " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " rpc " , < nl > + " content " : { < nl > " name " : " EndCall " , < nl > " header " : 2595 , < nl > " response " : { < nl > diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > index 470958d . . fa7eb9b 100644 < nl > - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > @ @ - 9836 , 6 + 9836 , 58 @ @ < nl > < ref role = " NX6Kv " node = " 6tgpW9bxNIA " resolve = " timeout " / > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m6fVq " id = " 201xLeQvfQO " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " DoCall " / > < nl > + < node concept = " 2m7Kf5 " id = " 201xLeQvfRW " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " peer " / > < nl > + < node concept = " 2m5mGg " id = " 201xLeQvfS5 " role = " 2m7DVh " > < nl > + < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 201xLeQvh _ H " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 2 " / > < nl > + < property role = " TrG5h " value = " timeout " / > < nl > + < node concept = " wb0Ql " id = " 201xLeQvh _ N " role = " 2m7DVh " > < nl > + < ref role = " wb18D " node = " 6u8Nlnzqdrq " resolve = " sec " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 201xLeQvfQP " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " A25 " / > < nl > + < / node > < nl > + < node concept = " 2m1R6W " id = " 201xLeQvfS8 " role = " 2m6efq " > < nl > + < node concept = " 2m7Kf5 " id = " 201xLeQvfSd " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " callId " / > < nl > + < node concept = " 2m5ndQ " id = " 201xLeQvfSh " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 201xLeQvfS9 " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " A26 " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 201xLeQvgJ5 " role = " 1y2DgH " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Call Id " / > < nl > + < ref role = " NX6Kv " node = " 201xLeQvfSd " resolve = " callId " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 201xLeQvfSk " role = " 1GBnQ6 " > < nl > + < property role = " NXePf " value = " Do Call . Right after a call client need to start sending CallInProgress " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 201xLeQvfSp " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " destination peer " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 201xLeQvfRW " resolve = " peer " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 201xLeQvisy " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " Call timeout " / > < nl > + < ref role = " NX6Kv " node = " 201xLeQvh _ H " resolve = " timeout " / > < nl > + < / node > < nl > + < node concept = " 2uC4CA " id = " 201xLeQvjjg " role = " 2uC9gA " > < nl > + < property role = " 2uC4DK " value = " 400 " / > < nl > + < property role = " 2uC4Qe " value = " CALL _ ENDED " / > < nl > + < property role = " 2uCiSL " value = " Throws when call is already ended " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m6fVq " id = " 6tgpW9bxLVc " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " EndCall " / > < nl > < node concept = " 2m7Kf5 " id = " 6tgpW9bxLVW " role = " 2m0hLx " >
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json < nl > index f869d1f . . c9d33ae 100644 < nl > - - - a / actor - sdk / sdk - api / actor . json < nl > + + + b / actor - sdk / sdk - api / actor . json < nl > @ @ - 3378 , 6 + 3378 , 66 @ @ < nl > { < nl > " type " : " struct " , < nl > " content " : { < nl > + " name " : " ServiceExChangedTopic " , < nl > + " doc " : [ < nl > + " Service message on group topic change " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " topic " , < nl > + " category " : " full " , < nl > + " description " : " New group topic " < nl > + } < nl > + ] , < nl > + " trait " : { < nl > + " name " : " ServiceEx " , < nl > + " key " : 18 < nl > + } , < nl > + " expandable " : " true " , < nl > + " attributes " : [ < nl > + { < nl > + " type " : { < nl > + " type " : " opt " , < nl > + " childType " : " string " < nl > + } , < nl > + " id " : 1 , < nl > + " name " : " topic " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " struct " , < nl > + " content " : { < nl > + " name " : " ServiceExChangedAbout " , < nl > + " doc " : [ < nl > + " Service message on group about change " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " about " , < nl > + " category " : " full " , < nl > + " description " : " New group about " < nl > + } < nl > + ] , < nl > + " trait " : { < nl > + " name " : " ServiceEx " , < nl > + " key " : 19 < nl > + } , < nl > + " expandable " : " true " , < nl > + " attributes " : [ < nl > + { < nl > + " type " : { < nl > + " type " : " opt " , < nl > + " childType " : " string " < nl > + } , < nl > + " id " : 1 , < nl > + " name " : " about " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " struct " , < nl > + " content " : { < nl > " name " : " ServiceExChangedAvatar " , < nl > " doc " : [ < nl > " Service message about avatar change " , < nl > @ @ - 7700 , 8 + 7760 , 8 @ @ < nl > " type " : { < nl > " type " : " list " , < nl > " childType " : { < nl > - " type " : " struct " , < nl > - " childType " : " SearchOrCondition " < nl > + " type " : " trait " , < nl > + " childType " : " SearchCondition " < nl > } < nl > } , < nl > " id " : 2 , < nl > @ @ - 11383 , 4 + 11443 , 4 @ @ < nl > ] < nl > } < nl > ] < nl > - } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > index a723e79 . . 5c7e0da 100644 < nl > - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > @ @ - 3213 , 6 + 3213 , 54 @ @ < nl > < property role = " Nu42W " value = " 05 " / > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m5naR " id = " 6nbRE0KfgG8 " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " ServiceExChangedTopic " / > < nl > + < property role = " tsOgz " value = " true " / > < nl > + < property role = " w4tQU " value = " true " / > < nl > + < ref role = " w4 $ XZ " node = " 55bmeIQ9med " resolve = " ServiceEx " / > < nl > + < node concept = " NXeRC " id = " 6nbRE0KftNw " role = " NXodf " > < nl > + < property role = " NXePf " value = " Service message on group topic change " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 6nbRE0Kfuwn " role = " NXodf " > < nl > + < property role = " NX6R2 " value = " New group topic " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 6nbRE0KfgPG " resolve = " topic " / > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 6nbRE0KfgPG " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " topic " / > < nl > + < node concept = " 2m5nlT " id = " 6cUOFUo0qtc " role = " 2m7DVh " > < nl > + < node concept = " 2m5ndX " id = " 6cUOFUo0ra2 " role = " 3GH5xg " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 6nbRE0Kfi5A " role = " 3BtCOu " > < nl > + < property role = " Nu42W " value = " 12 " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " 2m5naR " id = " 6nbRE0KfuE4 " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " ServiceExChangedAbout " / > < nl > + < property role = " tsOgz " value = " true " / > < nl > + < property role = " w4tQU " value = " true " / > < nl > + < ref role = " w4 $ XZ " node = " 55bmeIQ9med " resolve = " ServiceEx " / > < nl > + < node concept = " 2m7Kf5 " id = " 6nbRE0Kfvwp " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " about " / > < nl > + < node concept = " 2m5nlT " id = " 6cUOFUo0ra5 " role = " 2m7DVh " > < nl > + < node concept = " 2m5ndX " id = " 6cUOFUo0rab " role = " 3GH5xg " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 6nbRE0Kfvww " role = " 3BtCOu " > < nl > + < property role = " Nu42W " value = " 13 " / > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 6nbRE0Kfvwy " role = " NXodf " > < nl > + < property role = " NXePf " value = " Service message on group about change " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 6nbRE0KfvwB " role = " NXodf " > < nl > + < property role = " NX6R2 " value = " New group about " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 6nbRE0Kfvwp " resolve = " about " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m5naR " id = " GBscvBBldq " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " ServiceExChangedAvatar " / > < nl > < property role = " w4tQU " value = " true " / > < nl > @ @ - 6797 , 8 + 6845 , 8 @ @ < nl > < property role = " 2m7DUN " value = " 2 " / > < nl > < property role = " TrG5h " value = " orQuery " / > < nl > < node concept = " 2m5nlk " id = " 5qm50Y0f0Un " role = " 2m7DVh " > < nl > - < node concept = " 2m5mGg " id = " 5qm50Y0f0Ut " role = " 3GJlyp " > < nl > - < ref role = " 2m5mJy " node = " 5qm50Y0f0T1 " resolve = " SearchOrCondition " / > < nl > + < node concept = " 3BlaRf " id = " 6nbRE0KfzHc " role = " 3GJlyp " > < nl > + < ref role = " 3BrLez " node = " 4NJj1GT1Sc1 " resolve = " SearchCondition " / > < nl > < / node > < nl > < / node > < nl > < / node >

TEST DIFF:
diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json 
 index ae20836 . . ce78eb5 100644 
 - - - a / actor - sdk / sdk - api / actor . json 
 + + + b / actor - sdk / sdk - api / actor . json 
 @ @ - 11383 , 6 + 11383 , 65 @ @ 
 { 
 " type " : " rpc " , 
 " content " : { 
 + " name " : " DoCall " , 
 + " header " : 2597 , 
 + " response " : { 
 + " type " : " anonymous " , 
 + " header " : 2598 , 
 + " doc " : [ 
 + { 
 + " type " : " reference " , 
 + " argument " : " callId " , 
 + " category " : " full " , 
 + " description " : " Call Id " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : " int64 " , 
 + " id " : 1 , 
 + " name " : " callId " 
 + } 
 + ] 
 + } , 
 + " doc " : [ 
 + " Do Call . Right after a call client need to start sending CallInProgress " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " peer " , 
 + " category " : " full " , 
 + " description " : " destination peer " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " timeout " , 
 + " category " : " hidden " , 
 + " description " : " Call timeout " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : { 
 + " type " : " struct " , 
 + " childType " : " OutPeer " 
 + } , 
 + " id " : 1 , 
 + " name " : " peer " 
 + } , 
 + { 
 + " type " : { 
 + " type " : " alias " , 
 + " childType " : " sec " 
 + } , 
 + " id " : 2 , 
 + " name " : " timeout " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " rpc " , 
 + " content " : { 
 " name " : " EndCall " , 
 " header " : 2595 , 
 " response " : { 
 diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 index 470958d . . fa7eb9b 100644 
 - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 @ @ - 9836 , 6 + 9836 , 58 @ @ 
 < ref role = " NX6Kv " node = " 6tgpW9bxNIA " resolve = " timeout " / > 
 < / node > 
 < / node > 
 + < node concept = " 2m6fVq " id = " 201xLeQvfQO " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " DoCall " / > 
 + < node concept = " 2m7Kf5 " id = " 201xLeQvfRW " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " peer " / > 
 + < node concept = " 2m5mGg " id = " 201xLeQvfS5 " role = " 2m7DVh " > 
 + < ref role = " 2m5mJy " node = " GBscvBB6hj " resolve = " OutPeer " / > 
 + < / node > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 201xLeQvh _ H " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 2 " / > 
 + < property role = " TrG5h " value = " timeout " / > 
 + < node concept = " wb0Ql " id = " 201xLeQvh _ N " role = " 2m7DVh " > 
 + < ref role = " wb18D " node = " 6u8Nlnzqdrq " resolve = " sec " / > 
 + < / node > 
 + < / node > 
 + < node concept = " Nu42z " id = " 201xLeQvfQP " role = " NuuwV " > 
 + < property role = " Nu42W " value = " A25 " / > 
 + < / node > 
 + < node concept = " 2m1R6W " id = " 201xLeQvfS8 " role = " 2m6efq " > 
 + < node concept = " 2m7Kf5 " id = " 201xLeQvfSd " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " callId " / > 
 + < node concept = " 2m5ndQ " id = " 201xLeQvfSh " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " Nu42z " id = " 201xLeQvfS9 " role = " NuuwV " > 
 + < property role = " Nu42W " value = " A26 " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 201xLeQvgJ5 " role = " 1y2DgH " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Call Id " / > 
 + < ref role = " NX6Kv " node = " 201xLeQvfSd " resolve = " callId " / > 
 + < / node > 
 + < / node > 
 + < node concept = " NXeRC " id = " 201xLeQvfSk " role = " 1GBnQ6 " > 
 + < property role = " NXePf " value = " Do Call . Right after a call client need to start sending CallInProgress " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 201xLeQvfSp " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " destination peer " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 201xLeQvfRW " resolve = " peer " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 201xLeQvisy " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " Call timeout " / > 
 + < ref role = " NX6Kv " node = " 201xLeQvh _ H " resolve = " timeout " / > 
 + < / node > 
 + < node concept = " 2uC4CA " id = " 201xLeQvjjg " role = " 2uC9gA " > 
 + < property role = " 2uC4DK " value = " 400 " / > 
 + < property role = " 2uC4Qe " value = " CALL _ ENDED " / > 
 + < property role = " 2uCiSL " value = " Throws when call is already ended " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m6fVq " id = " 6tgpW9bxLVc " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " EndCall " / > 
 < node concept = " 2m7Kf5 " id = " 6tgpW9bxLVW " role = " 2m0hLx " >

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json 
 index f869d1f . . c9d33ae 100644 
 - - - a / actor - sdk / sdk - api / actor . json 
 + + + b / actor - sdk / sdk - api / actor . json 
 @ @ - 3378 , 6 + 3378 , 66 @ @ 
 { 
 " type " : " struct " , 
 " content " : { 
 + " name " : " ServiceExChangedTopic " , 
 + " doc " : [ 
 + " Service message on group topic change " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " topic " , 
 + " category " : " full " , 
 + " description " : " New group topic " 
 + } 
 + ] , 
 + " trait " : { 
 + " name " : " ServiceEx " , 
 + " key " : 18 
 + } , 
 + " expandable " : " true " , 
 + " attributes " : [ 
 + { 
 + " type " : { 
 + " type " : " opt " , 
 + " childType " : " string " 
 + } , 
 + " id " : 1 , 
 + " name " : " topic " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " struct " , 
 + " content " : { 
 + " name " : " ServiceExChangedAbout " , 
 + " doc " : [ 
 + " Service message on group about change " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " about " , 
 + " category " : " full " , 
 + " description " : " New group about " 
 + } 
 + ] , 
 + " trait " : { 
 + " name " : " ServiceEx " , 
 + " key " : 19 
 + } , 
 + " expandable " : " true " , 
 + " attributes " : [ 
 + { 
 + " type " : { 
 + " type " : " opt " , 
 + " childType " : " string " 
 + } , 
 + " id " : 1 , 
 + " name " : " about " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " struct " , 
 + " content " : { 
 " name " : " ServiceExChangedAvatar " , 
 " doc " : [ 
 " Service message about avatar change " , 
 @ @ - 7700 , 8 + 7760 , 8 @ @ 
 " type " : { 
 " type " : " list " , 
 " childType " : { 
 - " type " : " struct " , 
 - " childType " : " SearchOrCondition " 
 + " type " : " trait " , 
 + " childType " : " SearchCondition " 
 } 
 } , 
 " id " : 2 , 
 @ @ - 11383 , 4 + 11443 , 4 @ @ 
 ] 
 } 
 ] 
 - } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 index a723e79 . . 5c7e0da 100644 
 - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 @ @ - 3213 , 6 + 3213 , 54 @ @ 
 < property role = " Nu42W " value = " 05 " / > 
 < / node > 
 < / node > 
 + < node concept = " 2m5naR " id = " 6nbRE0KfgG8 " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " ServiceExChangedTopic " / > 
 + < property role = " tsOgz " value = " true " / > 
 + < property role = " w4tQU " value = " true " / > 
 + < ref role = " w4 $ XZ " node = " 55bmeIQ9med " resolve = " ServiceEx " / > 
 + < node concept = " NXeRC " id = " 6nbRE0KftNw " role = " NXodf " > 
 + < property role = " NXePf " value = " Service message on group topic change " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 6nbRE0Kfuwn " role = " NXodf " > 
 + < property role = " NX6R2 " value = " New group topic " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 6nbRE0KfgPG " resolve = " topic " / > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 6nbRE0KfgPG " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " topic " / > 
 + < node concept = " 2m5nlT " id = " 6cUOFUo0qtc " role = " 2m7DVh " > 
 + < node concept = " 2m5ndX " id = " 6cUOFUo0ra2 " role = " 3GH5xg " / > 
 + < / node > 
 + < / node > 
 + < node concept = " Nu42z " id = " 6nbRE0Kfi5A " role = " 3BtCOu " > 
 + < property role = " Nu42W " value = " 12 " / > 
 + < / node > 
 + < / node > 
 + < node concept = " 2m5naR " id = " 6nbRE0KfuE4 " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " ServiceExChangedAbout " / > 
 + < property role = " tsOgz " value = " true " / > 
 + < property role = " w4tQU " value = " true " / > 
 + < ref role = " w4 $ XZ " node = " 55bmeIQ9med " resolve = " ServiceEx " / > 
 + < node concept = " 2m7Kf5 " id = " 6nbRE0Kfvwp " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " about " / > 
 + < node concept = " 2m5nlT " id = " 6cUOFUo0ra5 " role = " 2m7DVh " > 
 + < node concept = " 2m5ndX " id = " 6cUOFUo0rab " role = " 3GH5xg " / > 
 + < / node > 
 + < / node > 
 + < node concept = " Nu42z " id = " 6nbRE0Kfvww " role = " 3BtCOu " > 
 + < property role = " Nu42W " value = " 13 " / > 
 + < / node > 
 + < node concept = " NXeRC " id = " 6nbRE0Kfvwy " role = " NXodf " > 
 + < property role = " NXePf " value = " Service message on group about change " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 6nbRE0KfvwB " role = " NXodf " > 
 + < property role = " NX6R2 " value = " New group about " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 6nbRE0Kfvwp " resolve = " about " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m5naR " id = " GBscvBBldq " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " ServiceExChangedAvatar " / > 
 < property role = " w4tQU " value = " true " / > 
 @ @ - 6797 , 8 + 6845 , 8 @ @ 
 < property role = " 2m7DUN " value = " 2 " / > 
 < property role = " TrG5h " value = " orQuery " / > 
 < node concept = " 2m5nlk " id = " 5qm50Y0f0Un " role = " 2m7DVh " > 
 - < node concept = " 2m5mGg " id = " 5qm50Y0f0Ut " role = " 3GJlyp " > 
 - < ref role = " 2m5mJy " node = " 5qm50Y0f0T1 " resolve = " SearchOrCondition " / > 
 + < node concept = " 3BlaRf " id = " 6nbRE0KfzHc " role = " 3GJlyp " > 
 + < ref role = " 3BrLez " node = " 4NJj1GT1Sc1 " resolve = " SearchCondition " / > 
 < / node > 
 < / node > 
 < / node >
