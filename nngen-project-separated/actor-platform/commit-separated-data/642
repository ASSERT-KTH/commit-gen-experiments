BLEU SCORE: 0.2984745896009823

TEST MSG: fix ( iOS ) : Fixing broken background dispatching
GENERATED MSG: feat ( iOS ) : Avatar Binding performance

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift < nl > index fa7d5de . . 9f937f0 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift < nl > @ @ - 6 , 10 + 6 , 8 @ @ import Foundation < nl > < nl > class CocoaDispatcher : NSObject , ARCocoaDispatcherProxy { < nl > < nl > - private let queue = YYDispatchQueueGetForQOS ( NSQualityOfService . Background ) < nl > - < nl > func dispatchOnBackgroundWithJavaLangRunnable ( runnable : JavaLangRunnable ! , withLong delay : jlong ) { < nl > - dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , Int64 ( Double ( delay ) * Double ( NSEC _ PER _ MSEC ) ) ) , queue ) { < nl > + dispatchBackgroundDelayed ( Double ( delay ) / 1000 ) { ( ) - > Void in < nl > runnable . run ( ) < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift < nl > index 2ddc4a4 . . 40af9f6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift < nl > @ @ - 24 , 7 + 24 , 7 @ @ class CocoaTcpConnectionFactory : NSObject , ARAsyncConnectionFactory { < nl > < nl > class CocoaTcpConnection : ARAsyncConnection , GCDAsyncSocketDelegate { < nl > < nl > - static let queue = YYDispatchQueueGetForQOS ( NSQualityOfService . Background ) < nl > + static let queue = dispatch _ queue _ create ( " im . actor . network " , DISPATCH _ QUEUE _ SERIAL ) < nl > < nl > let READ _ HEADER = 1 < nl > let READ _ BODY = 2 < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift < nl > index f98ad80 . . 7b4c962 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift < nl > @ @ - 4 , 7 + 4 , 7 @ @ < nl > < nl > import Foundation < nl > < nl > - private let backgroundQueue = YYDispatchQueueGetForQOS ( NSQualityOfService . Background ) < nl > + private let backgroundQueue = dispatch _ queue _ create ( " im . actor . background " , DISPATCH _ QUEUE _ SERIAL ) < nl > < nl > public func dispatchOnUi ( closure : ( ) - > Void ) { < nl > dispatch _ async ( dispatch _ get _ main _ queue ( ) , { ( ) - > Void in
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > index b7af9d5 . . 24a10a6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift < nl > @ @ - 163 , 7 + 163 , 8 @ @ class CocoaInputFile : NSObject , ARInputFile { < nl > } < nl > < nl > func readWithOffset ( fileOffset : jint , withData data : IOSByteArray ! , withDataOffset offset : jint , withLength len : jint , withCallback callback : ARFileReadCallback ! ) { < nl > - dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ LOW , 0 ) ) { < nl > + < nl > + dispatchBackground { < nl > self . fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; < nl > let readed : NSData = self . fileHandle . readDataOfLength ( Int ( len ) ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 3a1cd2a . . 41750e3 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 220 , 8 + 220 , 12 @ @ public class AAAvatarView : UIImageView { < nl > self . image = image ; < nl > } < nl > } < nl > - } ) ; < nl > - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) < nl > + } ) < nl > + let fl = fileLocation < nl > + let c = callback < nl > + dispatchBackground { < nl > + Actor . bindRawFileWithReference ( fl , autoStart : true , withCallback : c ) < nl > + } < nl > } < nl > < nl > public func unbind ( ) { < nl > @ @ - 236 , 7 + 240 , 11 @ @ public class AAAvatarView : UIImageView { < nl > self . bindedTitle = nil < nl > < nl > if ( bindedFileId ! = nil ) { < nl > - Actor . unbindRawFileWithFileId ( bindedFileId ! , autoCancel : false , withCallback : callback ) < nl > + let bfid = bindedFileId < nl > + let c = callback < nl > + dispatchBackground { < nl > + Actor . unbindRawFileWithFileId ( bfid ! , autoCancel : false , withCallback : c ) < nl > + } < nl > bindedFileId = nil < nl > callback = nil < nl > requestId + + ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift 
 index fa7d5de . . 9f937f0 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaDispatcher . swift 
 @ @ - 6 , 10 + 6 , 8 @ @ import Foundation 
 
 class CocoaDispatcher : NSObject , ARCocoaDispatcherProxy { 
 
 - private let queue = YYDispatchQueueGetForQOS ( NSQualityOfService . Background ) 
 - 
 func dispatchOnBackgroundWithJavaLangRunnable ( runnable : JavaLangRunnable ! , withLong delay : jlong ) { 
 - dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , Int64 ( Double ( delay ) * Double ( NSEC _ PER _ MSEC ) ) ) , queue ) { 
 + dispatchBackgroundDelayed ( Double ( delay ) / 1000 ) { ( ) - > Void in 
 runnable . run ( ) 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift 
 index 2ddc4a4 . . 40af9f6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaNetworkRuntime . swift 
 @ @ - 24 , 7 + 24 , 7 @ @ class CocoaTcpConnectionFactory : NSObject , ARAsyncConnectionFactory { 
 
 class CocoaTcpConnection : ARAsyncConnection , GCDAsyncSocketDelegate { 
 
 - static let queue = YYDispatchQueueGetForQOS ( NSQualityOfService . Background ) 
 + static let queue = dispatch _ queue _ create ( " im . actor . network " , DISPATCH _ QUEUE _ SERIAL ) 
 
 let READ _ HEADER = 1 
 let READ _ BODY = 2 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift 
 index f98ad80 . . 7b4c962 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Dispatch . swift 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 
 import Foundation 
 
 - private let backgroundQueue = YYDispatchQueueGetForQOS ( NSQualityOfService . Background ) 
 + private let backgroundQueue = dispatch _ queue _ create ( " im . actor . background " , DISPATCH _ QUEUE _ SERIAL ) 
 
 public func dispatchOnUi ( closure : ( ) - > Void ) { 
 dispatch _ async ( dispatch _ get _ main _ queue ( ) , { ( ) - > Void in

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 index b7af9d5 . . 24a10a6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / CocoaFileSystemRuntime . swift 
 @ @ - 163 , 7 + 163 , 8 @ @ class CocoaInputFile : NSObject , ARInputFile { 
 } 
 
 func readWithOffset ( fileOffset : jint , withData data : IOSByteArray ! , withDataOffset offset : jint , withLength len : jint , withCallback callback : ARFileReadCallback ! ) { 
 - dispatch _ async ( dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ LOW , 0 ) ) { 
 + 
 + dispatchBackground { 
 self . fileHandle . seekToFileOffset ( UInt64 ( fileOffset ) ) ; 
 let readed : NSData = self . fileHandle . readDataOfLength ( Int ( len ) ) ; 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 3a1cd2a . . 41750e3 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 220 , 8 + 220 , 12 @ @ public class AAAvatarView : UIImageView { 
 self . image = image ; 
 } 
 } 
 - } ) ; 
 - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) 
 + } ) 
 + let fl = fileLocation 
 + let c = callback 
 + dispatchBackground { 
 + Actor . bindRawFileWithReference ( fl , autoStart : true , withCallback : c ) 
 + } 
 } 
 
 public func unbind ( ) { 
 @ @ - 236 , 7 + 240 , 11 @ @ public class AAAvatarView : UIImageView { 
 self . bindedTitle = nil 
 
 if ( bindedFileId ! = nil ) { 
 - Actor . unbindRawFileWithFileId ( bindedFileId ! , autoCancel : false , withCallback : callback ) 
 + let bfid = bindedFileId 
 + let c = callback 
 + dispatchBackground { 
 + Actor . unbindRawFileWithFileId ( bfid ! , autoCancel : false , withCallback : c ) 
 + } 
 bindedFileId = nil 
 callback = nil 
 requestId + + ;
