BLEU SCORE: 0.19338531381761725

TEST MSG: refactor ( android ) : move dialogs / contacts top padding to ActorStyle
GENERATED MSG: wip ( android ) : Commenting code

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index c3f2d2f . . 1946fc6 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 2 , 6 + 2 , 8 @ @ package im . actor . sdk ; < nl > < nl > import android . graphics . Color ; < nl > < nl > + import im . actor . sdk . util . Screen ; < nl > + < nl > / * * < nl > * Actor Styling class < nl > * / < nl > @ @ - 134 , 6 + 136 , 11 @ @ public class ActorStyle { < nl > private int convMediaStateWarrningColor = Color . parseColor ( " # ffed534b " ) ; < nl > private int convLikeColor = Color . parseColor ( " # e2264d " ) ; < nl > < nl > + / / DialogsFragment layout settings < nl > + private int dialogsPaddingTop = Screen . dp ( 8 ) ; < nl > + < nl > + / / ContactsFragment layout settings < nl > + private int contactsMainPaddingTop = 0 ; < nl > < nl > public int getMainPressedColor ( ) { < nl > return getDarkenArgb ( getMainColor ( ) , 0 . 95 ) ; < nl > @ @ - 936 , 4 + 943 , 20 @ @ public class ActorStyle { < nl > public void setDefaultBackgrouds ( int [ ] defaultBackgrouds ) { < nl > this . defaultBackgrouds = defaultBackgrouds ; < nl > } < nl > + < nl > + public int getDialogsPaddingTop ( ) { < nl > + return dialogsPaddingTop ; < nl > + } < nl > + < nl > + public void setDialogsPaddingTop ( int dialogsPaddingTop ) { < nl > + this . dialogsPaddingTop = dialogsPaddingTop ; < nl > + } < nl > + < nl > + public int getContactsMainPaddingTop ( ) { < nl > + return contactsMainPaddingTop ; < nl > + } < nl > + < nl > + public void setContactsMainPaddingTop ( int contactsMainPaddingTop ) { < nl > + this . contactsMainPaddingTop = contactsMainPaddingTop ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > index fa5c448 . . 0033c3d 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > @ @ - 661 , 23 + 661 , 21 @ @ public class MainPhoneController extends MainBaseController { < nl > switch ( position ) { < nl > default : < nl > case 0 : < nl > - return getDialogsFragment ( ) ; < nl > + return getDialogsFragment ( new DialogsFragment ( ) ) ; < nl > case 1 : < nl > - return getContactsFragment ( ) ; < nl > + return getContactsFragment ( new ContactsFragment ( ) ) ; < nl > < nl > } < nl > } < nl > < nl > @ NonNull < nl > - public ContactsFragment getContactsFragment ( ) { < nl > - ContactsFragment res2 = new ContactsFragment ( ) ; < nl > + public ContactsFragment getContactsFragment ( ContactsFragment res2 ) { < nl > res2 . setHasOptionsMenu ( false ) ; < nl > return res2 ; < nl > } < nl > < nl > @ NonNull < nl > - public DialogsFragment getDialogsFragment ( ) { < nl > - DialogsFragment res1 = new DialogsFragment ( ) ; < nl > + public DialogsFragment getDialogsFragment ( DialogsFragment res1 ) { < nl > Bundle arguments = new Bundle ( ) ; < nl > arguments . putString ( " invite _ url " , joinGroupUrl ) ; < nl > res1 . setArguments ( arguments ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java < nl > index c266a9d . . 3178550 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java < nl > @ @ - 68 , 13 + 68 , 10 @ @ public abstract class BaseContactFragment extends DisplayListFragment < Contact , C < nl > ( ( TextView ) emptyView . findViewById ( R . id . empty _ collection _ text ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getMainColor ( ) ) ; < nl > } < nl > } < nl > - int topPadding = 0 ; < nl > - if ( getArguments ( ) ! = null ) { < nl > - topPadding = getArguments ( ) . getInt ( " top _ padding " , topPadding ) ; < nl > - } < nl > + < nl > View headerPadding = new View ( getActivity ( ) ) ; < nl > headerPadding . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - headerPadding . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , topPadding ) ) ; < nl > + headerPadding . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , useCompactVersion ? 0 : ActorSDK . sharedActor ( ) . style . getContactsMainPaddingTop ( ) ) ) ; < nl > addHeaderView ( headerPadding ) ; < nl > < nl > addFootersAndHeaders ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java < nl > index 717bc95 . . 74e16c3 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java < nl > @ @ - 42 , 12 + 42 , 6 @ @ public abstract class BaseDialogFragment extends DisplayListFragment < Dialog , Dia < nl > @ Override < nl > public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > < nl > - int topPadding = Screen . dp ( 8 ) ; < nl > - if ( getArguments ( ) ! = null ) { < nl > - joinGroupUrl = getArguments ( ) . getString ( " invite _ url " , null ) ; < nl > - topPadding = getArguments ( ) . getInt ( " top _ padding " , topPadding ) ; < nl > - } < nl > - < nl > View res = inflate ( inflater , container , R . layout . fragment _ dialogs , messenger ( ) . getDialogsDisplayList ( ) ) ; < nl > res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > < nl > @ @ - 61 , 7 + 55 , 7 @ @ public abstract class BaseDialogFragment extends DisplayListFragment < Dialog , Dia < nl > / / Header < nl > < nl > View header = new View ( getActivity ( ) ) ; < nl > - header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , topPadding ) ) ; < nl > + header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , ActorSDK . sharedActor ( ) . style . getDialogsPaddingTop ( ) ) ) ; < nl > header . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > addHeaderView ( header ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java < nl > index ec19775 . . e9644c8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java < nl > @ @ - 25 , 7 + 25 , 6 @ @ public abstract class DisplayListFragment < T extends BserObject & ListEngineItem , < nl > < nl > private BindedDisplayList < T > displayList ; < nl > private BindedListAdapter < T , V > adapter ; < nl > - private RecyclerView . OnScrollListener onScrollListener ; < nl > < nl > protected View inflate ( LayoutInflater inflater , ViewGroup container , int resource , BindedDisplayList < T > displayList ) { < nl > View res = inflater . inflate ( resource , container , false ) ; < nl > @ @ - 51 , 10 + 50 , 6 @ @ public abstract class DisplayListFragment < T extends BserObject & ListEngineItem , < nl > < nl > collection . setAdapter ( adapter ) ; < nl > < nl > - if ( onScrollListener ! = null ) { < nl > - collection . setOnScrollListener ( onScrollListener ) ; < nl > - } < nl > - < nl > / / if ( emptyCollection ! = null ) { < nl > / / emptyCollection . setVisibility ( View . GONE ) ; < nl > / / } < nl > @ @ - 115 , 13 + 110 , 6 @ @ public abstract class DisplayListFragment < T extends BserObject & ListEngineItem , < nl > return collection ; < nl > } < nl > < nl > - public void setOnScrollListener ( RecyclerView . OnScrollListener onScrollListener ) { < nl > - this . onScrollListener = onScrollListener ; < nl > - if ( collection ! = null ) { < nl > - collection . setOnScrollListener ( onScrollListener ) ; < nl > - } < nl > - } < nl > - < nl > @ Override < nl > public void onResume ( ) { < nl > super . onResume ( ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 8674ea8 . . dcd2ef1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > < nl > + import org . jetbrains . annotations . NotNull ; < nl > + import org . jetbrains . annotations . Nullable ; < nl > + < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > import java . util . Locale ; < nl > @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { < nl > / * * < nl > * Delegate < nl > * / < nl > + @ NotNull < nl > private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; < nl > / * * < nl > * ActivityManager < nl > @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { < nl > if ( pushId ! = 0 ) { < nl > pushManager . registerPush ( application ) ; < nl > } < nl > - } catch ( ClassNotFoundException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( InstantiationException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } catch ( IllegalAccessException e ) { < nl > + } catch ( Exception e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > - < nl > - < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { < nl > this . pushId = pushId ; < nl > } < nl > < nl > + / * * < nl > + * Getting Application Delegate . < nl > + * < nl > + * @ return Application Delegate < nl > + * / < nl > + @ NotNull < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > < nl > - public void setDelegate ( ActorSDKDelegate delegate ) { < nl > + / * * < nl > + * Setting Application Delegate . Useful for hacking various parts of SDK < nl > + * < nl > + * @ param delegate Application Delegate < nl > + * / < nl > + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { < nl > this . delegate = delegate ; < nl > } < nl > < nl > + @ Deprecated < nl > public ActivityManager getActivityManager ( ) { < nl > return activityManager ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 0ddb728 . . f404f54 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; < nl > < nl > import android . app . Application ; < nl > < nl > + / * * < nl > + * Implementation of Application object that handles everything required for creating and < nl > + * managing Actor SDK < nl > + * / < nl > public class ActorSDKApplication extends Application { < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > index 9c2321e . . 2488fa2 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java < nl > @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; < nl > < nl > import android . graphics . Color ; < nl > < nl > + / * * < nl > + * Actor Styling class < nl > + * / < nl > public class ActorStyle { < nl > private int toolBarColor = 0 ; < nl > private int fabColor = 0 ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index de2e346 . . 68ec210 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; < nl > import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > < nl > + / * * < nl > + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead < nl > + * of implementing ActorSDKDelegate < nl > + * / < nl > public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > - < nl > + < nl > + / / < nl > + / / Authentication Activity < nl > + / / < nl > + < nl > + @ Deprecated < nl > @ Override < nl > - public ActorIntent getAuthStartIntent ( ) { < nl > - return null ; < nl > + public AuthState getAuthStartState ( ) { < nl > + return AuthState . AUTH _ START ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartAfterLoginIntent ( ) { < nl > - return null ; < nl > + public BaseAuthFragment getSignFragment ( ) { < nl > + return new SignPhoneFragment ( ) ; < nl > } < nl > < nl > @ Override < nl > - public ActorIntent getStartIntent ( ) { < nl > + public ActorIntent getAuthStartIntent ( ) { < nl > return null ; < nl > } < nl > < nl > + / / < nl > + / / Starting Activity < nl > + / / < nl > + < nl > + / * * < nl > + * Return non - null to open specific Activity after user ' s successful log in . < nl > + * If null is specified , result of getStartIntent is used . < nl > + * < nl > + * @ return ActorIntent for activity after login < nl > + * / < nl > @ Override < nl > - public AuthState getAuthStartState ( ) { < nl > - return AuthState . AUTH _ START ; < nl > + public ActorIntent getStartAfterLoginIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / * * < nl > + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch < nl > + * standard Messaging activity with contacts and recent list < nl > + * < nl > + * @ return ActorIntent for start activity < nl > + * / < nl > @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignPhoneFragment ( ) ; < nl > + public ActorIntent getStartIntent ( ) { < nl > + return null ; < nl > } < nl > < nl > + / / < nl > + / / Hacking settings activity < nl > + / / < nl > + < nl > @ Override < nl > public View getBeforeNickSettingsView ( Context context ) { < nl > return null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > index dd19ba4 . . 64c5706 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java < nl > @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . fragment . auth . AuthActivity ; < nl > < nl > - / * * < nl > - * Created by root on 10 / 20 / 15 . < nl > - * / < nl > + @ Deprecated < nl > public class ActivityManager { < nl > < nl > - < nl > public void startAuthActivity ( Context context ) { < nl > startAuthActivity ( context , null ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index c3f2d2f . . 1946fc6 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 2 , 6 + 2 , 8 @ @ package im . actor . sdk ; 
 
 import android . graphics . Color ; 
 
 + import im . actor . sdk . util . Screen ; 
 + 
 / * * 
 * Actor Styling class 
 * / 
 @ @ - 134 , 6 + 136 , 11 @ @ public class ActorStyle { 
 private int convMediaStateWarrningColor = Color . parseColor ( " # ffed534b " ) ; 
 private int convLikeColor = Color . parseColor ( " # e2264d " ) ; 
 
 + / / DialogsFragment layout settings 
 + private int dialogsPaddingTop = Screen . dp ( 8 ) ; 
 + 
 + / / ContactsFragment layout settings 
 + private int contactsMainPaddingTop = 0 ; 
 
 public int getMainPressedColor ( ) { 
 return getDarkenArgb ( getMainColor ( ) , 0 . 95 ) ; 
 @ @ - 936 , 4 + 943 , 20 @ @ public class ActorStyle { 
 public void setDefaultBackgrouds ( int [ ] defaultBackgrouds ) { 
 this . defaultBackgrouds = defaultBackgrouds ; 
 } 
 + 
 + public int getDialogsPaddingTop ( ) { 
 + return dialogsPaddingTop ; 
 + } 
 + 
 + public void setDialogsPaddingTop ( int dialogsPaddingTop ) { 
 + this . dialogsPaddingTop = dialogsPaddingTop ; 
 + } 
 + 
 + public int getContactsMainPaddingTop ( ) { 
 + return contactsMainPaddingTop ; 
 + } 
 + 
 + public void setContactsMainPaddingTop ( int contactsMainPaddingTop ) { 
 + this . contactsMainPaddingTop = contactsMainPaddingTop ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 index fa5c448 . . 0033c3d 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 @ @ - 661 , 23 + 661 , 21 @ @ public class MainPhoneController extends MainBaseController { 
 switch ( position ) { 
 default : 
 case 0 : 
 - return getDialogsFragment ( ) ; 
 + return getDialogsFragment ( new DialogsFragment ( ) ) ; 
 case 1 : 
 - return getContactsFragment ( ) ; 
 + return getContactsFragment ( new ContactsFragment ( ) ) ; 
 
 } 
 } 
 
 @ NonNull 
 - public ContactsFragment getContactsFragment ( ) { 
 - ContactsFragment res2 = new ContactsFragment ( ) ; 
 + public ContactsFragment getContactsFragment ( ContactsFragment res2 ) { 
 res2 . setHasOptionsMenu ( false ) ; 
 return res2 ; 
 } 
 
 @ NonNull 
 - public DialogsFragment getDialogsFragment ( ) { 
 - DialogsFragment res1 = new DialogsFragment ( ) ; 
 + public DialogsFragment getDialogsFragment ( DialogsFragment res1 ) { 
 Bundle arguments = new Bundle ( ) ; 
 arguments . putString ( " invite _ url " , joinGroupUrl ) ; 
 res1 . setArguments ( arguments ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java 
 index c266a9d . . 3178550 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / contacts / BaseContactFragment . java 
 @ @ - 68 , 13 + 68 , 10 @ @ public abstract class BaseContactFragment extends DisplayListFragment < Contact , C 
 ( ( TextView ) emptyView . findViewById ( R . id . empty _ collection _ text ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getMainColor ( ) ) ; 
 } 
 } 
 - int topPadding = 0 ; 
 - if ( getArguments ( ) ! = null ) { 
 - topPadding = getArguments ( ) . getInt ( " top _ padding " , topPadding ) ; 
 - } 
 + 
 View headerPadding = new View ( getActivity ( ) ) ; 
 headerPadding . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - headerPadding . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , topPadding ) ) ; 
 + headerPadding . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , useCompactVersion ? 0 : ActorSDK . sharedActor ( ) . style . getContactsMainPaddingTop ( ) ) ) ; 
 addHeaderView ( headerPadding ) ; 
 
 addFootersAndHeaders ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java 
 index 717bc95 . . 74e16c3 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / dialogs / BaseDialogFragment . java 
 @ @ - 42 , 12 + 42 , 6 @ @ public abstract class BaseDialogFragment extends DisplayListFragment < Dialog , Dia 
 @ Override 
 public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 
 - int topPadding = Screen . dp ( 8 ) ; 
 - if ( getArguments ( ) ! = null ) { 
 - joinGroupUrl = getArguments ( ) . getString ( " invite _ url " , null ) ; 
 - topPadding = getArguments ( ) . getInt ( " top _ padding " , topPadding ) ; 
 - } 
 - 
 View res = inflate ( inflater , container , R . layout . fragment _ dialogs , messenger ( ) . getDialogsDisplayList ( ) ) ; 
 res . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 
 @ @ - 61 , 7 + 55 , 7 @ @ public abstract class BaseDialogFragment extends DisplayListFragment < Dialog , Dia 
 / / Header 
 
 View header = new View ( getActivity ( ) ) ; 
 - header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , topPadding ) ) ; 
 + header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , ActorSDK . sharedActor ( ) . style . getDialogsPaddingTop ( ) ) ) ; 
 header . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 addHeaderView ( header ) ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java 
 index ec19775 . . e9644c8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / DisplayListFragment . java 
 @ @ - 25 , 7 + 25 , 6 @ @ public abstract class DisplayListFragment < T extends BserObject & ListEngineItem , 
 
 private BindedDisplayList < T > displayList ; 
 private BindedListAdapter < T , V > adapter ; 
 - private RecyclerView . OnScrollListener onScrollListener ; 
 
 protected View inflate ( LayoutInflater inflater , ViewGroup container , int resource , BindedDisplayList < T > displayList ) { 
 View res = inflater . inflate ( resource , container , false ) ; 
 @ @ - 51 , 10 + 50 , 6 @ @ public abstract class DisplayListFragment < T extends BserObject & ListEngineItem , 
 
 collection . setAdapter ( adapter ) ; 
 
 - if ( onScrollListener ! = null ) { 
 - collection . setOnScrollListener ( onScrollListener ) ; 
 - } 
 - 
 / / if ( emptyCollection ! = null ) { 
 / / emptyCollection . setVisibility ( View . GONE ) ; 
 / / } 
 @ @ - 115 , 13 + 110 , 6 @ @ public abstract class DisplayListFragment < T extends BserObject & ListEngineItem , 
 return collection ; 
 } 
 
 - public void setOnScrollListener ( RecyclerView . OnScrollListener onScrollListener ) { 
 - this . onScrollListener = onScrollListener ; 
 - if ( collection ! = null ) { 
 - collection . setOnScrollListener ( onScrollListener ) ; 
 - } 
 - } 
 - 
 @ Override 
 public void onResume ( ) { 
 super . onResume ( ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 8674ea8 . . dcd2ef1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 10 , 6 + 10 , 9 @ @ import android . os . Build ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 
 + import org . jetbrains . annotations . NotNull ; 
 + import org . jetbrains . annotations . Nullable ; 
 + 
 import java . util . ArrayList ; 
 import java . util . List ; 
 import java . util . Locale ; 
 @ @ - 85 , 6 + 88 , 7 @ @ public class ActorSDK { 
 / * * 
 * Delegate 
 * / 
 + @ NotNull 
 private ActorSDKDelegate delegate = new BaseActorSDKDelegate ( ) ; 
 / * * 
 * ActivityManager 
 @ @ - 175 , 15 + 179 , 9 @ @ public class ActorSDK { 
 if ( pushId ! = 0 ) { 
 pushManager . registerPush ( application ) ; 
 } 
 - } catch ( ClassNotFoundException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( InstantiationException e ) { 
 - e . printStackTrace ( ) ; 
 - } catch ( IllegalAccessException e ) { 
 + } catch ( Exception e ) { 
 e . printStackTrace ( ) ; 
 } 
 - 
 - 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 323 , 14 + 321 , 26 @ @ public class ActorSDK { 
 this . pushId = pushId ; 
 } 
 
 + / * * 
 + * Getting Application Delegate . 
 + * 
 + * @ return Application Delegate 
 + * / 
 + @ NotNull 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 
 - public void setDelegate ( ActorSDKDelegate delegate ) { 
 + / * * 
 + * Setting Application Delegate . Useful for hacking various parts of SDK 
 + * 
 + * @ param delegate Application Delegate 
 + * / 
 + public void setDelegate ( @ NotNull ActorSDKDelegate delegate ) { 
 this . delegate = delegate ; 
 } 
 
 + @ Deprecated 
 public ActivityManager getActivityManager ( ) { 
 return activityManager ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 0ddb728 . . f404f54 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 2 , 6 + 2 , 10 @ @ package im . actor . sdk ; 
 
 import android . app . Application ; 
 
 + / * * 
 + * Implementation of Application object that handles everything required for creating and 
 + * managing Actor SDK 
 + * / 
 public class ActorSDKApplication extends Application { 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 index 9c2321e . . 2488fa2 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorStyle . java 
 @ @ - 2 , 6 + 2 , 9 @ @ package im . actor . sdk ; 
 
 import android . graphics . Color ; 
 
 + / * * 
 + * Actor Styling class 
 + * / 
 public class ActorStyle { 
 private int toolBarColor = 0 ; 
 private int fabColor = 0 ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index de2e346 . . 68ec210 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 9 , 33 + 9 , 62 @ @ import im . actor . sdk . controllers . fragment . auth . SignPhoneFragment ; 
 import im . actor . sdk . controllers . fragment . settings . ActorSettingsCategory ; 
 import im . actor . sdk . intents . ActorIntent ; 
 
 + / * * 
 + * Base Implementation of Actor SDK Delegate . This class is recommended to subclass instead 
 + * of implementing ActorSDKDelegate 
 + * / 
 public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 - 
 + 
 + / / 
 + / / Authentication Activity 
 + / / 
 + 
 + @ Deprecated 
 @ Override 
 - public ActorIntent getAuthStartIntent ( ) { 
 - return null ; 
 + public AuthState getAuthStartState ( ) { 
 + return AuthState . AUTH _ START ; 
 } 
 
 @ Override 
 - public ActorIntent getStartAfterLoginIntent ( ) { 
 - return null ; 
 + public BaseAuthFragment getSignFragment ( ) { 
 + return new SignPhoneFragment ( ) ; 
 } 
 
 @ Override 
 - public ActorIntent getStartIntent ( ) { 
 + public ActorIntent getAuthStartIntent ( ) { 
 return null ; 
 } 
 
 + / / 
 + / / Starting Activity 
 + / / 
 + 
 + / * * 
 + * Return non - null to open specific Activity after user ' s successful log in . 
 + * If null is specified , result of getStartIntent is used . 
 + * 
 + * @ return ActorIntent for activity after login 
 + * / 
 @ Override 
 - public AuthState getAuthStartState ( ) { 
 - return AuthState . AUTH _ START ; 
 + public ActorIntent getStartAfterLoginIntent ( ) { 
 + return null ; 
 } 
 
 + / * * 
 + * Return non - null to open specific Activity when user is logged in . If null , SDK will launch 
 + * standard Messaging activity with contacts and recent list 
 + * 
 + * @ return ActorIntent for start activity 
 + * / 
 @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignPhoneFragment ( ) ; 
 + public ActorIntent getStartIntent ( ) { 
 + return null ; 
 } 
 
 + / / 
 + / / Hacking settings activity 
 + / / 
 + 
 @ Override 
 public View getBeforeNickSettingsView ( Context context ) { 
 return null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 index dd19ba4 . . 64c5706 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / intents / ActivityManager . java 
 @ @ - 9 , 12 + 9 , 9 @ @ import im . actor . sdk . ActorSDKDelegate ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . fragment . auth . AuthActivity ; 
 
 - / * * 
 - * Created by root on 10 / 20 / 15 . 
 - * / 
 + @ Deprecated 
 public class ActivityManager { 
 
 - 
 public void startAuthActivity ( Context context ) { 
 startAuthActivity ( context , null ) ; 
 }
