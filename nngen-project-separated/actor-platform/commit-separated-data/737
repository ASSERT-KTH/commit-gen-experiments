BLEU SCORE: 0.5231223689135341

TEST MSG: fix ( server : webrtc ) : wrong devices filtering
GENERATED MSG: fix ( server : webrtc ) : send UpdateCallHandled on call handle

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > index f6fcaa7 . . 685a140 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > @ @ - 358 , 8 + 358 , 7 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with < nl > case msg : ApiAdvertiseSelf ⇒ < nl > for ( deviceId ← ebMessage . deviceId ) yield { < nl > val newDevice = Device ( deviceId , ebMessage . client , msg . peerSettings , isJoined = deviceId = = callerDeviceId ) < nl > - devices foreach { < nl > - case ( pairDeviceId , pairDevice ) if pairDeviceId ! = pairDevice . deviceId ⇒ < nl > + devices . values . view filterNot ( _ . deviceId = = newDevice . deviceId ) foreach { pairDevice = > < nl > if ( pairDevice . canPreConnect ( msg . peerSettings ) ) < nl > connect ( newDevice , pairDevice ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > index 9d5184d . . 0e5d6f7 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > @ @ - 117 , 6 + 117 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { < nl > ApiWebRTCSignaling . parseFrom ( message ) . right foreach { < nl > case ApiAnswerCall ⇒ < nl > scheduledUpd foreach ( _ . cancel ( ) ) < nl > + weakUpdExt . broadcastUsersWeakUpdate ( participants . filterNot ( _ = = userId ) , UpdateCallHandled ( id ) ) < nl > context become callInProgress ( eventBusId , System . currentTimeMillis ( ) , callerUserId , participants ) < nl > case ApiEndCall ⇒ < nl > scheduledUpd foreach ( _ . cancel ( ) )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 index f6fcaa7 . . 685a140 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 @ @ - 358 , 8 + 358 , 7 @ @ private final class WebrtcCallActor extends StashingActor with ActorLogging with 
 case msg : ApiAdvertiseSelf ⇒ 
 for ( deviceId ← ebMessage . deviceId ) yield { 
 val newDevice = Device ( deviceId , ebMessage . client , msg . peerSettings , isJoined = deviceId = = callerDeviceId ) 
 - devices foreach { 
 - case ( pairDeviceId , pairDevice ) if pairDeviceId ! = pairDevice . deviceId ⇒ 
 + devices . values . view filterNot ( _ . deviceId = = newDevice . deviceId ) foreach { pairDevice = > 
 if ( pairDevice . canPreConnect ( msg . peerSettings ) ) 
 connect ( newDevice , pairDevice ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 index 9d5184d . . 0e5d6f7 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 @ @ - 117 , 6 + 117 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { 
 ApiWebRTCSignaling . parseFrom ( message ) . right foreach { 
 case ApiAnswerCall ⇒ 
 scheduledUpd foreach ( _ . cancel ( ) ) 
 + weakUpdExt . broadcastUsersWeakUpdate ( participants . filterNot ( _ = = userId ) , UpdateCallHandled ( id ) ) 
 context become callInProgress ( eventBusId , System . currentTimeMillis ( ) , callerUserId , participants ) 
 case ApiEndCall ⇒ 
 scheduledUpd foreach ( _ . cancel ( ) )
