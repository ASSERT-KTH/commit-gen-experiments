BLEU SCORE: 0.24794277351227217

TEST MSG: feat ( js ) : # 255 switch chat when clicked on notification
GENERATED MSG: feat ( js ) : In electron runtime getting window state from electron main process

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java < nl > index 9fd8449 . . e082c69 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java < nl > @ @ - 21 , 7 + 21 , 7 @ @ public class JsPeer extends JavaScriptObject { < nl > } < nl > < nl > public static native JsPeer create ( String peerType , int peerId , String peerKey ) / * - { < nl > - return { type : peerType , id : peerId , key : peerKey } ; < nl > + return { type : peerType , id : peerId , key : peerKey } ; < nl > } - * / ; < nl > < nl > protected JsPeer ( ) { < nl > @ @ - 31 , 6 + 31 , 8 @ @ public class JsPeer extends JavaScriptObject { < nl > < nl > public final native int getPeerId ( ) / * - { return this . id ; } - * / ; < nl > < nl > + public final native String getPeerKey ( ) / * - { return this . key ; } - * / ; < nl > + < nl > public final Peer convert ( ) { < nl > if ( getPeerType ( ) . equals ( " user " ) ) { < nl > return Peer . user ( getPeerId ( ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > index 3426e87 . . 3fdf1a2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > @ @ - 12 , 6 + 12 , 7 @ @ import im . actor . core . Messenger ; < nl > import im . actor . core . entity . Avatar ; < nl > import im . actor . core . entity . Notification ; < nl > import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . js . entity . JsPeer ; < nl > import im . actor . core . js . JsMessenger ; < nl > import im . actor . core . js . providers . electron . JsElectronApp ; < nl > import im . actor . core . js . providers . notification . JsManagedNotification ; < nl > @ @ - 42 , 6 + 43 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > public void onNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) { < nl > < nl > String peerTitle ; < nl > + String peerKey = null ; < nl > String peerAvatarUrl = null ; < nl > String contentMessage = " " ; < nl > < nl > @ @ - 50 , 6 + 52 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > / / Peer info < nl > if ( conversationsCount = = 1 ) { < nl > Avatar peerAvatar ; < nl > + JsPeer jsPeer = JsPeer . create ( notification . getPeer ( ) ) ; < nl > if ( notification . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > UserVM userVM = messenger . getUser ( notification . getPeer ( ) . getPeerId ( ) ) ; < nl > peerTitle = userVM . getName ( ) . get ( ) ; < nl > @ @ - 62 , 6 + 65 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > if ( peerAvatar ! = null & & peerAvatar . getSmallImage ( ) ! = null ) { < nl > peerAvatarUrl = ( ( JsMessenger ) messenger ) . getFileUrl ( peerAvatar . getSmallImage ( ) . getFileReference ( ) ) ; < nl > } < nl > + peerKey = jsPeer . getPeerKey ( ) ; < nl > } else { < nl > peerTitle = " New messages " ; < nl > peerAvatarUrl = " assets / img / notification _ icon _ 512 . png " ; < nl > @ @ - 127 , 7 + 131 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > return ; < nl > } < nl > < nl > - JsManagedNotification . show ( peerTitle , contentMessage , peerAvatarUrl ) ; < nl > + JsManagedNotification . show ( peerKey , peerTitle , contentMessage , peerAvatarUrl ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > index 1b001fc . . 0cc31e2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > @ @ - 14 , 9 + 14 , 9 @ @ public class JsManagedNotification { < nl > return true ; < nl > } - * / ; < nl > < nl > - public static native void show ( String title , String message , String avatarUrl ) / * - { < nl > + public static native void show ( String key , String title , String message , String avatarUrl ) / * - { < nl > < nl > - var showNotification = function ( title , body , icon ) { < nl > + var showNotification = function ( key , title , body , icon ) { < nl > var n = new Notification ( title , { < nl > body : body , < nl > tag : ' new - message ' , < nl > @ @ - 24 , 6 + 24 , 9 @ @ public class JsManagedNotification { < nl > } ) ; < nl > n . onclick = function ( ) { < nl > $ wnd . focus ( ) ; < nl > + if ( key ! = = null ) { < nl > + $ wnd . location . replace ( ' # / im / ' + key ) ; < nl > + } < nl > this . close ( ) ; < nl > } < nl > } ; < nl > @ @ - 33 , 7 + 36 , 7 @ @ public class JsManagedNotification { < nl > var deferStart = null ; < nl > var deferredShow = null ; < nl > < nl > - var createNotification = function ( title , body , icon ) { < nl > + var createNotification = function ( key , title , body , icon ) { < nl > if ( deferredShow = = = null ) { < nl > deferStart = Date . now ( ) ; < nl > } else { < nl > @ @ - 43 , 14 + 46 , 14 @ @ public class JsManagedNotification { < nl > if ( Date . now ( ) - deferStart > MAX _ DEFER ) { < nl > deferredShow = null ; < nl > deferStart = null ; < nl > - showNotification ( title , body , icon ) ; < nl > + showNotification ( key , title , body , icon ) ; < nl > } else { < nl > deferredShow = setTimeout ( function ( ) { < nl > - showNotification ( title , body , icon ) < nl > + showNotification ( key , title , body , icon ) < nl > } , 300 ) < nl > } < nl > } ; < nl > < nl > - createNotification ( title , message , avatarUrl ) ; < nl > + createNotification ( key , title , message , avatarUrl ) ; < nl > } - * / ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java < nl > index 36ae86a . . 4b62531 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java < nl > @ @ - 24 , 7 + 24 , 7 @ @ public class JsNotification extends JavaScriptObject { < nl > return true ; < nl > } - * / ; < nl > < nl > - public static native JsNotification create ( String title , String message , String avatar ) / * - { < nl > + public static native JsNotification create ( String key , String title , String message , String avatar ) / * - { < nl > return new Notification ( title , { body : message , icon : avatar } ) ; < nl > } - * / ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 07d9399 . . 4b5bf28 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 15 , 6 + 15 , 8 @ @ import im . actor . core . js . entity . * ; < nl > import im . actor . core . js . modules . JsBindedValueCallback ; < nl > import im . actor . core . js . providers . JsNotificationsProvider ; < nl > import im . actor . core . js . providers . JsPhoneBookProvider ; < nl > + import im . actor . core . js . providers . electron . JsElectronApp ; < nl > + import im . actor . core . js . providers . electron . JsElectronListener ; < nl > import im . actor . core . js . utils . HtmlMarkdownUtils ; < nl > import im . actor . core . js . utils . IdentityUtils ; < nl > import im . actor . core . network . RpcException ; < nl > @ @ - 100 , 6 + 102 , 19 @ @ public class JsFacade implements Exportable { < nl > < nl > messenger = new JsMessenger ( configuration . build ( ) ) ; < nl > < nl > + if ( isElectron ( ) ) { < nl > + JsElectronApp . subscribe ( " window " , new JsElectronListener ( ) { < nl > + @ Override < nl > + public void onEvent ( String content ) { < nl > + if ( " focus " . equals ( content ) ) { < nl > + messenger . onAppVisible ( ) ; < nl > + } else if ( " blur " . equals ( content ) ) { < nl > + messenger . onAppHidden ( ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > Log . d ( TAG , " JsMessenger created " ) ; < nl > } < nl > < nl > @ @ - 558 , 10 + 573 , 18 @ @ public class JsFacade implements Exportable { < nl > / / Events < nl > < nl > public void onAppVisible ( ) { < nl > + / / Ignore for electron runtime < nl > + if ( isElectron ( ) ) { < nl > + return ; < nl > + } < nl > messenger . onAppVisible ( ) ; < nl > } < nl > < nl > public void onAppHidden ( ) { < nl > + / / Ignore for electron runtime < nl > + if ( isElectron ( ) ) { < nl > + return ; < nl > + } < nl > messenger . onAppHidden ( ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > index e124f8e . . 50d9572 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java < nl > @ @ - 11 , 11 + 11 , 6 @ @ public class JsElectronApp { < nl > ipc . send ( ' tray - bounce ' ) ; < nl > } - * / ; < nl > < nl > - public static native void showNewMessages ( ) / * - { < nl > - var ipc = $ wnd . require ( ' ipc ' ) ; < nl > - ipc . send ( ' new - messages - show ' ) ; < nl > - } - * / ; < nl > - < nl > public static native void hideNewMessages ( ) / * - { < nl > var ipc = $ wnd . require ( ' ipc ' ) ; < nl > ipc . send ( ' new - messages - hide ' ) ; < nl > @ @ - 25 , 4 + 20 , 12 @ @ public class JsElectronApp { < nl > var ipc = $ wnd . require ( ' ipc ' ) ; < nl > ipc . send ( ' tray - badge ' , { count : count } ) ; < nl > } - * / ; < nl > - } < nl > + < nl > + < nl > + public static native void subscribe ( String topic , JsElectronListener listener ) / * - { < nl > + var ipc = $ wnd . require ( ' ipc ' ) ; < nl > + ipc . on ( topic , function ( message ) { < nl > + listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; < nl > + } ) ; < nl > + } - * / ; < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java < nl > new file mode 100644 < nl > index 0000000 . . f3a5ccf < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java < nl > @ @ - 0 , 0 + 1 , 5 @ @ < nl > + package im . actor . core . js . providers . electron ; < nl > + < nl > + public interface JsElectronListener { < nl > + void onEvent ( String content ) ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > index 21e8876 . . 1b001fc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java < nl > @ @ - 22 , 7 + 22 , 6 @ @ public class JsManagedNotification { < nl > tag : ' new - message ' , < nl > icon : icon , < nl > } ) ; < nl > - < nl > n . onclick = function ( ) { < nl > $ wnd . focus ( ) ; < nl > this . close ( ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java 
 index 9fd8449 . . e082c69 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsPeer . java 
 @ @ - 21 , 7 + 21 , 7 @ @ public class JsPeer extends JavaScriptObject { 
 } 
 
 public static native JsPeer create ( String peerType , int peerId , String peerKey ) / * - { 
 - return { type : peerType , id : peerId , key : peerKey } ; 
 + return { type : peerType , id : peerId , key : peerKey } ; 
 } - * / ; 
 
 protected JsPeer ( ) { 
 @ @ - 31 , 6 + 31 , 8 @ @ public class JsPeer extends JavaScriptObject { 
 
 public final native int getPeerId ( ) / * - { return this . id ; } - * / ; 
 
 + public final native String getPeerKey ( ) / * - { return this . key ; } - * / ; 
 + 
 public final Peer convert ( ) { 
 if ( getPeerType ( ) . equals ( " user " ) ) { 
 return Peer . user ( getPeerId ( ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 index 3426e87 . . 3fdf1a2 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import im . actor . core . Messenger ; 
 import im . actor . core . entity . Avatar ; 
 import im . actor . core . entity . Notification ; 
 import im . actor . core . entity . PeerType ; 
 + import im . actor . core . js . entity . JsPeer ; 
 import im . actor . core . js . JsMessenger ; 
 import im . actor . core . js . providers . electron . JsElectronApp ; 
 import im . actor . core . js . providers . notification . JsManagedNotification ; 
 @ @ - 42 , 6 + 43 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 public void onNotification ( Messenger messenger , List < Notification > topNotifications , int messagesCount , int conversationsCount ) { 
 
 String peerTitle ; 
 + String peerKey = null ; 
 String peerAvatarUrl = null ; 
 String contentMessage = " " ; 
 
 @ @ - 50 , 6 + 52 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 / / Peer info 
 if ( conversationsCount = = 1 ) { 
 Avatar peerAvatar ; 
 + JsPeer jsPeer = JsPeer . create ( notification . getPeer ( ) ) ; 
 if ( notification . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { 
 UserVM userVM = messenger . getUser ( notification . getPeer ( ) . getPeerId ( ) ) ; 
 peerTitle = userVM . getName ( ) . get ( ) ; 
 @ @ - 62 , 6 + 65 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 if ( peerAvatar ! = null & & peerAvatar . getSmallImage ( ) ! = null ) { 
 peerAvatarUrl = ( ( JsMessenger ) messenger ) . getFileUrl ( peerAvatar . getSmallImage ( ) . getFileReference ( ) ) ; 
 } 
 + peerKey = jsPeer . getPeerKey ( ) ; 
 } else { 
 peerTitle = " New messages " ; 
 peerAvatarUrl = " assets / img / notification _ icon _ 512 . png " ; 
 @ @ - 127 , 7 + 131 , 7 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 return ; 
 } 
 
 - JsManagedNotification . show ( peerTitle , contentMessage , peerAvatarUrl ) ; 
 + JsManagedNotification . show ( peerKey , peerTitle , contentMessage , peerAvatarUrl ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 index 1b001fc . . 0cc31e2 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 @ @ - 14 , 9 + 14 , 9 @ @ public class JsManagedNotification { 
 return true ; 
 } - * / ; 
 
 - public static native void show ( String title , String message , String avatarUrl ) / * - { 
 + public static native void show ( String key , String title , String message , String avatarUrl ) / * - { 
 
 - var showNotification = function ( title , body , icon ) { 
 + var showNotification = function ( key , title , body , icon ) { 
 var n = new Notification ( title , { 
 body : body , 
 tag : ' new - message ' , 
 @ @ - 24 , 6 + 24 , 9 @ @ public class JsManagedNotification { 
 } ) ; 
 n . onclick = function ( ) { 
 $ wnd . focus ( ) ; 
 + if ( key ! = = null ) { 
 + $ wnd . location . replace ( ' # / im / ' + key ) ; 
 + } 
 this . close ( ) ; 
 } 
 } ; 
 @ @ - 33 , 7 + 36 , 7 @ @ public class JsManagedNotification { 
 var deferStart = null ; 
 var deferredShow = null ; 
 
 - var createNotification = function ( title , body , icon ) { 
 + var createNotification = function ( key , title , body , icon ) { 
 if ( deferredShow = = = null ) { 
 deferStart = Date . now ( ) ; 
 } else { 
 @ @ - 43 , 14 + 46 , 14 @ @ public class JsManagedNotification { 
 if ( Date . now ( ) - deferStart > MAX _ DEFER ) { 
 deferredShow = null ; 
 deferStart = null ; 
 - showNotification ( title , body , icon ) ; 
 + showNotification ( key , title , body , icon ) ; 
 } else { 
 deferredShow = setTimeout ( function ( ) { 
 - showNotification ( title , body , icon ) 
 + showNotification ( key , title , body , icon ) 
 } , 300 ) 
 } 
 } ; 
 
 - createNotification ( title , message , avatarUrl ) ; 
 + createNotification ( key , title , message , avatarUrl ) ; 
 } - * / ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java 
 index 36ae86a . . 4b62531 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsNotification . java 
 @ @ - 24 , 7 + 24 , 7 @ @ public class JsNotification extends JavaScriptObject { 
 return true ; 
 } - * / ; 
 
 - public static native JsNotification create ( String title , String message , String avatar ) / * - { 
 + public static native JsNotification create ( String key , String title , String message , String avatar ) / * - { 
 return new Notification ( title , { body : message , icon : avatar } ) ; 
 } - * / ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 07d9399 . . 4b5bf28 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 15 , 6 + 15 , 8 @ @ import im . actor . core . js . entity . * ; 
 import im . actor . core . js . modules . JsBindedValueCallback ; 
 import im . actor . core . js . providers . JsNotificationsProvider ; 
 import im . actor . core . js . providers . JsPhoneBookProvider ; 
 + import im . actor . core . js . providers . electron . JsElectronApp ; 
 + import im . actor . core . js . providers . electron . JsElectronListener ; 
 import im . actor . core . js . utils . HtmlMarkdownUtils ; 
 import im . actor . core . js . utils . IdentityUtils ; 
 import im . actor . core . network . RpcException ; 
 @ @ - 100 , 6 + 102 , 19 @ @ public class JsFacade implements Exportable { 
 
 messenger = new JsMessenger ( configuration . build ( ) ) ; 
 
 + if ( isElectron ( ) ) { 
 + JsElectronApp . subscribe ( " window " , new JsElectronListener ( ) { 
 + @ Override 
 + public void onEvent ( String content ) { 
 + if ( " focus " . equals ( content ) ) { 
 + messenger . onAppVisible ( ) ; 
 + } else if ( " blur " . equals ( content ) ) { 
 + messenger . onAppHidden ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 Log . d ( TAG , " JsMessenger created " ) ; 
 } 
 
 @ @ - 558 , 10 + 573 , 18 @ @ public class JsFacade implements Exportable { 
 / / Events 
 
 public void onAppVisible ( ) { 
 + / / Ignore for electron runtime 
 + if ( isElectron ( ) ) { 
 + return ; 
 + } 
 messenger . onAppVisible ( ) ; 
 } 
 
 public void onAppHidden ( ) { 
 + / / Ignore for electron runtime 
 + if ( isElectron ( ) ) { 
 + return ; 
 + } 
 messenger . onAppHidden ( ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 index e124f8e . . 50d9572 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronApp . java 
 @ @ - 11 , 11 + 11 , 6 @ @ public class JsElectronApp { 
 ipc . send ( ' tray - bounce ' ) ; 
 } - * / ; 
 
 - public static native void showNewMessages ( ) / * - { 
 - var ipc = $ wnd . require ( ' ipc ' ) ; 
 - ipc . send ( ' new - messages - show ' ) ; 
 - } - * / ; 
 - 
 public static native void hideNewMessages ( ) / * - { 
 var ipc = $ wnd . require ( ' ipc ' ) ; 
 ipc . send ( ' new - messages - hide ' ) ; 
 @ @ - 25 , 4 + 20 , 12 @ @ public class JsElectronApp { 
 var ipc = $ wnd . require ( ' ipc ' ) ; 
 ipc . send ( ' tray - badge ' , { count : count } ) ; 
 } - * / ; 
 - } 
 + 
 + 
 + public static native void subscribe ( String topic , JsElectronListener listener ) / * - { 
 + var ipc = $ wnd . require ( ' ipc ' ) ; 
 + ipc . on ( topic , function ( message ) { 
 + listener . @ im . actor . core . js . providers . electron . JsElectronListener : : onEvent ( * ) ( message ) ; 
 + } ) ; 
 + } - * / ; 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java 
 new file mode 100644 
 index 0000000 . . f3a5ccf 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / electron / JsElectronListener . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package im . actor . core . js . providers . electron ; 
 + 
 + public interface JsElectronListener { 
 + void onEvent ( String content ) ; 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 index 21e8876 . . 1b001fc 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / notification / JsManagedNotification . java 
 @ @ - 22 , 7 + 22 , 6 @ @ public class JsManagedNotification { 
 tag : ' new - message ' , 
 icon : icon , 
 } ) ; 
 - 
 n . onclick = function ( ) { 
 $ wnd . focus ( ) ; 
 this . close ( ) ;
