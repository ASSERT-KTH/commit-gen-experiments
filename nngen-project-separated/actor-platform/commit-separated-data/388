BLEU SCORE: 0.08737167851715878

TEST MSG: fix ( server : user ) : send ext updates to changing user
GENERATED MSG: chore ( server ) : cleaning changeName method in UserCommandHandler

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala < nl > index cb6ea65 . . 2843c7f 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala < nl > @ @ - 335 , 7 + 335 , 7 @ @ private [ user ] trait UserCommandHandlers { < nl > val update = UpdateUserExtChanged ( userId , Some ( extToApi ( newState . ext ) ) ) < nl > ( for { < nl > relatedUserIds ← getRelations ( user . id ) < nl > - _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds , update ) < nl > + _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds + user . id , update ) < nl > } yield AddExtAck ( ) ) pipeTo sender ( ) < nl > } < nl > } < nl > @ @ - 347 , 7 + 347 , 7 @ @ private [ user ] trait UserCommandHandlers { < nl > val update = UpdateUserExtChanged ( userId , Some ( extToApi ( newState . ext ) ) ) < nl > ( for { < nl > relatedUserIds ← getRelations ( user . id ) < nl > - _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds , update ) < nl > + _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds + user . id , update ) < nl > } yield RemoveExtAck ( ) ) pipeTo sender ( ) < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala < nl > index b1d6392 . . c50ea80 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala < nl > @ @ - 158 , 8 + 158 , 7 @ @ private [ user ] trait UserCommandHandlers { < nl > val update = UpdateUserNameChanged ( userId , name ) < nl > for { < nl > relatedUserIds ← getRelations ( userId ) < nl > - _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds , update ) < nl > - seqstate ← seqUpdatesExt . deliverSingleUpdate ( user . id , update ) < nl > + ( seqstate , _ ) ← seqUpdatesExt . broadcastOwnSingleUpdate ( userId , relatedUserIds , update ) < nl > _ ← db . run ( UserRepo . setName ( userId , name ) ) < nl > } yield seqstate < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala 
 index cb6ea65 . . 2843c7f 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala 
 @ @ - 335 , 7 + 335 , 7 @ @ private [ user ] trait UserCommandHandlers { 
 val update = UpdateUserExtChanged ( userId , Some ( extToApi ( newState . ext ) ) ) 
 ( for { 
 relatedUserIds ← getRelations ( user . id ) 
 - _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds , update ) 
 + _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds + user . id , update ) 
 } yield AddExtAck ( ) ) pipeTo sender ( ) 
 } 
 } 
 @ @ - 347 , 7 + 347 , 7 @ @ private [ user ] trait UserCommandHandlers { 
 val update = UpdateUserExtChanged ( userId , Some ( extToApi ( newState . ext ) ) ) 
 ( for { 
 relatedUserIds ← getRelations ( user . id ) 
 - _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds , update ) 
 + _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds + user . id , update ) 
 } yield RemoveExtAck ( ) ) pipeTo sender ( ) 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala 
 index b1d6392 . . c50ea80 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / user / UserCommandHandlers . scala 
 @ @ - 158 , 8 + 158 , 7 @ @ private [ user ] trait UserCommandHandlers { 
 val update = UpdateUserNameChanged ( userId , name ) 
 for { 
 relatedUserIds ← getRelations ( userId ) 
 - _ ← seqUpdatesExt . broadcastSingleUpdate ( relatedUserIds , update ) 
 - seqstate ← seqUpdatesExt . deliverSingleUpdate ( user . id , update ) 
 + ( seqstate , _ ) ← seqUpdatesExt . broadcastOwnSingleUpdate ( userId , relatedUserIds , update ) 
 _ ← db . run ( UserRepo . setName ( userId , name ) ) 
 } yield seqstate 
 }
