BLEU SCORE: 0.1431712315455507

TEST MSG: fix + feat ( iOS ) : add last seen settings controller + fix slk for build
GENERATED MSG: wip ( iOS ) : Location picker

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 1cc311f . . 1687242 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 177 , 26 + 177 , 28 @ @ < nl > 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; < nl > 	 	 06E7B2541C139B6F0090660C / * AABubbleContactCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / ; } ; < nl > - 	 	 152AA8A61C2989270030DEEE / * SLKInputAccessoryView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8921C2989270030DEEE / * SLKInputAccessoryView . h * / ; } ; < nl > + 	 	 152AA8A61C2989270030DEEE / * SLKInputAccessoryView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8921C2989270030DEEE / * SLKInputAccessoryView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8A71C2989270030DEEE / * SLKInputAccessoryView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8931C2989270030DEEE / * SLKInputAccessoryView . m * / ; } ; < nl > - 	 	 152AA8A81C2989270030DEEE / * SLKTextInputbar . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8941C2989270030DEEE / * SLKTextInputbar . h * / ; } ; < nl > + 	 	 152AA8A81C2989270030DEEE / * SLKTextInputbar . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8941C2989270030DEEE / * SLKTextInputbar . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8A91C2989270030DEEE / * SLKTextInputbar . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8951C2989270030DEEE / * SLKTextInputbar . m * / ; } ; < nl > - 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8961C2989270030DEEE / * SLKTextView . h * / ; } ; < nl > + 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8961C2989270030DEEE / * SLKTextView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8AB1C2989270030DEEE / * SLKTextView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8971C2989270030DEEE / * SLKTextView . m * / ; } ; < nl > - 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8981C2989270030DEEE / * SLKTextView + SLKAdditions . h * / ; } ; < nl > + 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8981C2989270030DEEE / * SLKTextView + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8AD1C2989270030DEEE / * SLKTextView + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8991C2989270030DEEE / * SLKTextView + SLKAdditions . m * / ; } ; < nl > - 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89A1C2989270030DEEE / * SLKTextViewController . h * / ; } ; < nl > + 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89A1C2989270030DEEE / * SLKTextViewController . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8AF1C2989270030DEEE / * SLKTextViewController . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA89B1C2989270030DEEE / * SLKTextViewController . m * / ; } ; < nl > - 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89C1C2989270030DEEE / * SLKTypingIndicatorProtocol . h * / ; } ; < nl > - 	 	 152AA8B11C2989270030DEEE / * SLKTypingIndicatorView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89D1C2989270030DEEE / * SLKTypingIndicatorView . h * / ; } ; < nl > + 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89C1C2989270030DEEE / * SLKTypingIndicatorProtocol . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > + 	 	 152AA8B11C2989270030DEEE / * SLKTypingIndicatorView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89D1C2989270030DEEE / * SLKTypingIndicatorView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8B21C2989270030DEEE / * SLKTypingIndicatorView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA89E1C2989270030DEEE / * SLKTypingIndicatorView . m * / ; } ; < nl > - 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89F1C2989270030DEEE / * SLKUIConstants . h * / ; } ; < nl > - 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A01C2989270030DEEE / * UIResponder + SLKAdditions . h * / ; } ; < nl > + 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89F1C2989270030DEEE / * SLKUIConstants . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > + 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A01C2989270030DEEE / * UIResponder + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8B51C2989270030DEEE / * UIResponder + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8A11C2989270030DEEE / * UIResponder + SLKAdditions . m * / ; } ; < nl > - 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A21C2989270030DEEE / * UIScrollView + SLKAdditions . h * / ; } ; < nl > + 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A21C2989270030DEEE / * UIScrollView + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8B71C2989270030DEEE / * UIScrollView + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8A31C2989270030DEEE / * UIScrollView + SLKAdditions . m * / ; } ; < nl > - 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A41C2989270030DEEE / * UIView + SLKAdditions . h * / ; } ; < nl > + 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A41C2989270030DEEE / * UIView + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 152AA8B91C2989270030DEEE / * UIView + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8A51C2989270030DEEE / * UIView + SLKAdditions . m * / ; } ; < nl > + 	 	 152AA8BD1C298BF00030DEEE / * AASettingsSessionsController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / ; } ; < nl > + 	 	 152AA8BF1C298C4B0030DEEE / * AASettingsLastSeenController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / ; } ; < nl > 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0C1C20185500E3717A / * diag _ range . c * / ; } ; < nl > 	 	 15D35F171C20185500E3717A / * diag _ range . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15D35F0D1C20185500E3717A / * diag _ range . h * / ; } ; < nl > 	 	 15D35F181C20185500E3717A / * opus _ header . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0E1C20185500E3717A / * opus _ header . c * / ; } ; < nl > @ @ - 453 , 6 + 455 , 8 @ @ < nl > 	 	 152AA8A31C2989270030DEEE / * UIScrollView + SLKAdditions . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " UIScrollView + SLKAdditions . m " ; sourceTree = " < group > " ; } ; < nl > 	 	 152AA8A41C2989270030DEEE / * UIView + SLKAdditions . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = " UIView + SLKAdditions . h " ; sourceTree = " < group > " ; } ; < nl > 	 	 152AA8A51C2989270030DEEE / * UIView + SLKAdditions . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " UIView + SLKAdditions . m " ; sourceTree = " < group > " ; } ; < nl > + 	 	 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AASettingsSessionsController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AASettingsLastSeenController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 15D35F0C1C20185500E3717A / * diag _ range . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = diag _ range . c ; sourceTree = " < group > " ; } ; < nl > 	 	 15D35F0D1C20185500E3717A / * diag _ range . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = diag _ range . h ; sourceTree = " < group > " ; } ; < nl > 	 	 15D35F0E1C20185500E3717A / * opus _ header . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = opus _ header . c ; sourceTree = " < group > " ; } ; < nl > @ @ - 905 , 6 + 909 , 8 @ @ < nl > 	 	 	 	 066A52ED1BC52B02000E606E / * AASettingsNotificationsViewController . swift * / , < nl > 	 	 	 	 066A52EE1BC52B02000E606E / * AASettingsPrivacyViewController . swift * / , < nl > 	 	 	 	 066A52EF1BC52B02000E606E / * AASettingsWallpapper . swift * / , < nl > + 	 	 	 	 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / , < nl > + 	 	 	 	 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Settings ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1262 , 7 + 1268 , 15 @ @ < nl > 	 	 	 	 152AA8B11C2989270030DEEE / * SLKTypingIndicatorView . h in Headers * / , < nl > 	 	 	 	 152AA8A81C2989270030DEEE / * SLKTextInputbar . h in Headers * / , < nl > 	 	 	 	 066A52731BC5101A000E606E / * ABPhoneField . h in Headers * / , < nl > + 	 	 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / , < nl > + 	 	 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / , < nl > + 	 	 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / , < nl > 	 	 	 	 152AA8A61C2989270030DEEE / * SLKInputAccessoryView . h in Headers * / , < nl > + 	 	 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / , < nl > + 	 	 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / , < nl > + 	 	 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / , < nl > + 	 	 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / , < nl > + 	 	 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / , < nl > 	 	 	 	 15D35F571C20187E00E3717A / * AAAudioRecorder . h in Headers * / , < nl > 	 	 	 	 15D35F641C20187E00E3717A / * AAModernConversationAudioPlayerContext . h in Headers * / , < nl > 	 	 	 	 15D35F681C20187E00E3717A / * AAModernViewInlineMediaContext . h in Headers * / , < nl > @ @ - 1271 , 13 + 1285 , 9 @ @ < nl > 	 	 	 	 15D35F661C20187E00E3717A / * NSObject + TGLock . h in Headers * / , < nl > 	 	 	 	 15D35F281C20186200E3717A / * os _ types . h in Headers * / , < nl > 	 	 	 	 15D35F191C20185500E3717A / * opus _ header . h in Headers * / , < nl > - 	 	 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / , < nl > 	 	 	 	 15F89F081C211FED00776ACD / * opus _ multistream . h in Headers * / , < nl > 	 	 	 	 15D35F1F1C20185500E3717A / * wav _ io . h in Headers * / , < nl > - 	 	 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / , < nl > - 	 	 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / , < nl > 	 	 	 	 15D35F171C20185500E3717A / * diag _ range . h in Headers * / , < nl > - 	 	 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / , < nl > 	 	 	 	 15D35F5F1C20187E00E3717A / * AAOpusAudioPlayerAU . h in Headers * / , < nl > 	 	 	 	 15D35F551C20187E00E3717A / * AAAlertView . h in Headers * / , < nl > 	 	 	 	 15D35F5D1C20187E00E3717A / * AANativeAudioPlayer . h in Headers * / , < nl > @ @ - 1292 , 10 + 1302 , 6 @ @ < nl > 	 	 	 	 15D35F511C20187E00E3717A / * ASQueue . h in Headers * / , < nl > 	 	 	 	 15D35F1D1C20185500E3717A / * picture . h in Headers * / , < nl > 	 	 	 	 06230F421BC95BD200A4807B / * RMPhoneFormat . h in Headers * / , < nl > - 	 	 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / , < nl > - 	 	 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / , < nl > - 	 	 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / , < nl > - 	 	 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / , < nl > 	 	 	 	 069CF4CE1BCB909A00C66E12 / * CLToken . h in Headers * / , < nl > 	 	 	 ) ; < nl > 	 	 	 runOnlyForDeploymentPostprocessing = 0 ; < nl > @ @ - 1559 , 6 + 1565 , 7 @ @ < nl > 	 	 	 	 066A519D1BC4C390000E606E / * UDPreferencesStorage . swift in Sources * / , < nl > 	 	 	 	 069CF4CD1BCB909A00C66E12 / * CLBackspaceDetectingTextField . m in Sources * / , < nl > 	 	 	 	 15D35F1B1C20185500E3717A / * opusenc . m in Sources * / , < nl > + 	 	 	 	 152AA8BD1C298BF00030DEEE / * AASettingsSessionsController . swift in Sources * / , < nl > 	 	 	 	 066A515B1BC4C178000E606E / * AAHashMap . swift in Sources * / , < nl > 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , < nl > 	 	 	 	 152AA8B21C2989270030DEEE / * SLKTypingIndicatorView . m in Sources * / , < nl > @ @ - 1577 , 6 + 1584 , 7 @ @ < nl > 	 	 	 	 066A514E1BC4BDE4000E606E / * Numbers . swift in Sources * / , < nl > 	 	 	 	 15D35F671C20187E00E3717A / * NSObject + TGLock . m in Sources * / , < nl > 	 	 	 	 15D35F5C1C20187E00E3717A / * AAAudioPlayer . m in Sources * / , < nl > + 	 	 	 	 152AA8BF1C298C4B0030DEEE / * AASettingsLastSeenController . swift in Sources * / , < nl > 	 	 	 	 066A51561BC4BEF5000E606E / * AALocalized . swift in Sources * / , < nl > 	 	 	 	 069CF4CF1BCB909A00C66E12 / * CLToken . m in Sources * / , < nl > 	 	 	 	 15D35F751C201B6B00E3717A / * AACustomPresentationController . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index 531dd51 . . 6ece6e5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 82 , 6 + 82 , 13 @ @ < nl > < nl > " SettingsVersion " = " Version { version } " ; < nl > < nl > + " SettingsAllSessions " = " All sessions " ; < nl > + < nl > + " SettingsLastSeen " = " Last seen " ; < nl > + < nl > + " SettingsLastSeenHint " = " Change who can see your Last Seen time . " ; < nl > + < nl > + < nl > / * < nl > * Profile < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h < nl > index c86b74b . . 6b3d9cf 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h < nl > @ @ - 34 , 6 + 34 , 8 @ @ FOUNDATION _ EXPORT const unsigned char ActorSDKVersionString [ ] ; < nl > < nl > / / Ogg record < nl > < nl > + # import " SLKTextViewController . h " < nl > + < nl > # import " AAAudioRecorder . h " < nl > # import " AAAudioPlayer . h " < nl > # import " AAModernConversationAudioPlayer . h " < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > index e33d2af . . a064522 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift < nl > @ @ - 4 , 7 + 4 , 6 @ @ < nl > < nl > import Foundation < nl > import UIKit < nl > - import SlackTextViewController < nl > < nl > public class AAConversationContentController : SLKTextViewController , ARDisplayList _ AppleChangeListener { < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsLastSeenController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsLastSeenController . swift < nl > new file mode 100644 < nl > index 0000000 . . 919efdd < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsLastSeenController . swift < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import UIKit < nl > + < nl > + public class AASettingsLastSeenController : AAContentTableController { < nl > + < nl > + private var sessionsCell : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ? < nl > + < nl > + public init ( ) { < nl > + super . init ( style : AAContentTableStyle . SettingsGrouped ) < nl > + < nl > + navigationItem . title = AALocalized ( " SettingsLastSeen " ) < nl > + < nl > + content = ACAllEvents _ Settings . PRIVACY ( ) < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + public override func tableDidLoad ( ) { < nl > + < nl > + section { ( s ) - > ( ) in < nl > + < nl > + s . common ( { ( r ) - > ( ) in < nl > + r . content = " Everybody " < nl > + < nl > + r . selectAction = { < nl > + < nl > + print ( " tap in Everybody " ) < nl > + return true < nl > + } < nl > + < nl > + } ) < nl > + < nl > + s . common ( { ( r ) - > ( ) in < nl > + r . content = " My Contacts " < nl > + < nl > + r . selectAction = { < nl > + < nl > + print ( " tap in My Contacts " ) < nl > + return true < nl > + } < nl > + < nl > + } ) < nl > + < nl > + s . common ( { ( r ) - > ( ) in < nl > + r . content = " Nobody " < nl > + < nl > + r . selectAction = { < nl > + < nl > + print ( " tap in Nobody " ) < nl > + return true < nl > + } < nl > + < nl > + } ) < nl > + < nl > + < nl > + } < nl > + < nl > + } < nl > + < nl > + < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift < nl > index 57e323e . . 5c96aab 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift < nl > @ @ - 23 , 57 + 23 , 17 @ @ public class AASettingsPrivacyViewController : AAContentTableController { < nl > public override func tableDidLoad ( ) { < nl > < nl > section { ( s ) - > ( ) in < nl > + < nl > + / / Settings : All sessions < nl > + s . navigate ( " SettingsAllSessions " , controller : AASettingsSessionsController . self ) < nl > < nl > - s . footerText = AALocalized ( " PrivacyTerminateHint " ) < nl > + / / Settings : Last seen < nl > + s . navigate ( " SettingsLastSeen " , controller : AASettingsLastSeenController . self ) < nl > + < nl > + s . footerText = AALocalized ( " SettingsLastSeenHint " ) < nl > < nl > - s . danger ( " PrivacyTerminate " ) { ( r ) - > ( ) in < nl > - r . selectAction = { ( ) - > Bool in < nl > - self . confirmDangerSheetUser ( " PrivacyTerminateAlert " , tapYes : { [ unowned self ] ( ) - > ( ) in < nl > - / / Terminating all sessions and reload list < nl > - self . executeSafe ( Actor . terminateAllSessionsCommand ( ) , successBlock : { ( val ) - > Void in < nl > - self . loadSessions ( ) < nl > - } ) < nl > - } , tapNo : nil ) < nl > - return true < nl > - } < nl > - } < nl > - } < nl > - < nl > - section { ( s ) - > ( ) in < nl > - self . sessionsCell = s . arrays ( ) { ( r : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ) - > ( ) in < nl > - r . bindData = { ( c : AACommonCell , d : ARApiAuthSession ) - > ( ) in < nl > - if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { < nl > - c . style = . Normal < nl > - c . setContent ( d . getDeviceTitle ( ) ) < nl > - } else { < nl > - c . style = . Hint < nl > - c . setContent ( " ( Current ) \ ( d . getDeviceTitle ( ) ) " ) < nl > - } < nl > - } < nl > - < nl > - r . selectAction = { ( d ) - > Bool in < nl > - if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { < nl > - self . confirmDangerSheetUser ( " PrivacyTerminateAlertSingle " , tapYes : { [ unowned self ] ( ) - > ( ) in < nl > - / / Terminating session and reload list < nl > - self . executeSafe ( Actor . terminateSessionCommandWithId ( d . getId ( ) ) , successBlock : { [ unowned self ] ( val ) - > Void in < nl > - self . loadSessions ( ) < nl > - } ) < nl > - } , tapNo : nil ) < nl > - } < nl > - return true < nl > - } < nl > - } < nl > } < nl > < nl > - / / Request sessions load < nl > - < nl > - loadSessions ( ) < nl > } < nl > < nl > - private func loadSessions ( ) { < nl > - execute ( Actor . loadSessionsCommand ( ) , successBlock : { [ unowned self ] ( val ) - > Void in < nl > - self . sessionsCell ! . data = ( val as ! JavaUtilList ) . toArray ( ) . toSwiftArray ( ) < nl > - self . managedTable . tableView . reloadData ( ) < nl > - } , failureBlock : nil ) < nl > - } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsSessionsController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsSessionsController . swift < nl > new file mode 100644 < nl > index 0000000 . . bf9be8c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsSessionsController . swift < nl > @ @ - 0 , 0 + 1 , 80 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import UIKit < nl > + < nl > + public class AASettingsSessionsController : AAContentTableController { < nl > + < nl > + private var sessionsCell : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ? < nl > + < nl > + public init ( ) { < nl > + super . init ( style : AAContentTableStyle . SettingsGrouped ) < nl > + < nl > + navigationItem . title = AALocalized ( " SettingsAllSessions " ) < nl > + < nl > + content = ACAllEvents _ Settings . PRIVACY ( ) < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + public override func tableDidLoad ( ) { < nl > + < nl > + section { ( s ) - > ( ) in < nl > + < nl > + s . footerText = AALocalized ( " PrivacyTerminateHint " ) < nl > + < nl > + s . danger ( " PrivacyTerminate " ) { ( r ) - > ( ) in < nl > + r . selectAction = { ( ) - > Bool in < nl > + self . confirmDangerSheetUser ( " PrivacyTerminateAlert " , tapYes : { [ unowned self ] ( ) - > ( ) in < nl > + / / Terminating all sessions and reload list < nl > + self . executeSafe ( Actor . terminateAllSessionsCommand ( ) , successBlock : { ( val ) - > Void in < nl > + self . loadSessions ( ) < nl > + } ) < nl > + } , tapNo : nil ) < nl > + return true < nl > + } < nl > + } < nl > + } < nl > + < nl > + section { ( s ) - > ( ) in < nl > + self . sessionsCell = s . arrays ( ) { ( r : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ) - > ( ) in < nl > + r . bindData = { ( c : AACommonCell , d : ARApiAuthSession ) - > ( ) in < nl > + if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { < nl > + c . style = . Normal < nl > + c . setContent ( d . getDeviceTitle ( ) ) < nl > + } else { < nl > + c . style = . Hint < nl > + c . setContent ( " ( Current ) \ ( d . getDeviceTitle ( ) ) " ) < nl > + } < nl > + } < nl > + < nl > + r . selectAction = { ( d ) - > Bool in < nl > + if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { < nl > + self . confirmDangerSheetUser ( " PrivacyTerminateAlertSingle " , tapYes : { [ unowned self ] ( ) - > ( ) in < nl > + / / Terminating session and reload list < nl > + self . executeSafe ( Actor . terminateSessionCommandWithId ( d . getId ( ) ) , successBlock : { [ unowned self ] ( val ) - > Void in < nl > + self . loadSessions ( ) < nl > + } ) < nl > + } , tapNo : nil ) < nl > + } < nl > + return true < nl > + } < nl > + } < nl > + } < nl > + < nl > + / / Request sessions load < nl > + < nl > + loadSessions ( ) < nl > + } < nl > + < nl > + private func loadSessions ( ) { < nl > + execute ( Actor . loadSessionsCommand ( ) , successBlock : { [ unowned self ] ( val ) - > Void in < nl > + self . sessionsCell ! . data = ( val as ! JavaUtilList ) . toArray ( ) . toSwiftArray ( ) < nl > + self . managedTable . tableView . reloadData ( ) < nl > + } , failureBlock : nil ) < nl > + } < nl > + < nl > + }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index f26bdd0 . . 5fc91d4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 172 , 9 + 172 , 10 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > - 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; < nl > + 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / ; } ; < nl > 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > + 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 350 , 9 + 351 , 10 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > - 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AALocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 537 , 6 + 539 , 7 @ @ < nl > 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , < nl > 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , < nl > 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , < nl > + 	 	 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / , < nl > 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , < nl > 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , < nl > 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , < nl > @ @ - 890 , 7 + 893 , 7 @ @ < nl > 	 	 06E7B2451C0F8D410090660C / * Location * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > - 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , < nl > + 	 	 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Location ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1124 , 7 + 1127 , 7 @ @ < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > - 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , < nl > + 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , < nl > 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , < nl > 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , < nl > 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , < nl > @ @ - 1171 , 6 + 1174 , 7 @ @ < nl > 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , < nl > 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , < nl > 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , < nl > + 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , < nl > 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , < nl > 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , < nl > 	 	 	 	 066A526D1BC50E8B000E606E / * AAAuthCountryCell . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > index 3f92572 . . e9b740d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > @ @ - 2 , 8 + 2 , 16 @ @ < nl > " images " : [ < nl > { < nl > " idiom " : " universal " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > " filename " : " LocationPin @ 2x . png " , < nl > " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " scale " : " 3x " < nl > } < nl > ] , < nl > " info " : { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 41ae8d7 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPinPoint @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 7584de8 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 0bd0b69 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPinShadow @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 3bc04a4 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > index 1c539ce . . 79edd4d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 119 , 11 + 119 , 12 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > < nl > public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > let insets = fullContentInsets < nl > + let contentWidth = self . contentView . frame . width < nl > < nl > layoutBubble ( mapWidth , contentHeight : mapHeight ) < nl > < nl > if isOut { < nl > - map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > + map . frame = CGRectMake ( contentWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > } else { < nl > map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 8d0cdcc . . 52a8665 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 6 , 7 + 6 , 7 @ @ import Foundation < nl > import UIKit < nl > import MobileCoreServices < nl > < nl > - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate { < nl > + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { < nl > < nl > / / Data binder < nl > private let binder = AABinder ( ) < nl > @ @ - 462 , 6 + 462 , 17 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > / / Location picking < nl > < nl > func pickLocation ( ) { < nl > - self . presentViewController ( AANavigationController ( rootViewController : AALocationPickerController ( ) ) , animated : true , completion : nil ) < nl > + let pickerController = AALocationPickerController ( ) < nl > + pickerController . delegate = self < nl > + self . presentViewController ( AANavigationController ( rootViewController : pickerController ) , animated : true , completion : nil ) < nl > + } < nl > + < nl > + func locationPickerDidCancelled ( controller : AALocationPickerController ) { < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > + < nl > + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) { < nl > + Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift < nl > new file mode 100644 < nl > index 0000000 . . 4366550 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift < nl > @ @ - 0 , 0 + 1 , 93 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + public class AALocationPickerController : AAViewController , CLLocationManagerDelegate , MKMapViewDelegate { < nl > + < nl > + public var delegate : AALocationPickerControllerDelegate ? = nil < nl > + < nl > + private let locationManager = CLLocationManager ( ) < nl > + private let map = MKMapView ( ) < nl > + private let pinPoint = AAMapPinPointView ( ) < nl > + < nl > + override public func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + navigationItem . title = " Location " < nl > + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) < nl > + < nl > + updateAuthStatus ( CLLocationManager . authorizationStatus ( ) ) < nl > + < nl > + locationManager . delegate = self < nl > + < nl > + locationManager . requestWhenInUseAuthorization ( ) < nl > + locationManager . startUpdatingLocation ( ) < nl > + < nl > + map . showsUserLocation = true < nl > + map . delegate = self < nl > + < nl > + self . view . addSubview ( map ) < nl > + self . view . addSubview ( pinPoint ) < nl > + } < nl > + < nl > + public func mapView ( mapView : MKMapView , regionWillChangeAnimated animated : Bool ) { < nl > + pinPoint . risePin ( true , animated : animated ) < nl > + } < nl > + < nl > + public func mapView ( mapView : MKMapView , regionDidChangeAnimated animated : Bool ) { < nl > + pinPoint . risePin ( false , animated : animated ) < nl > + } < nl > + < nl > + func cancellDidTap ( ) { < nl > + delegate ? . locationPickerDidCancelled ( self ) < nl > + } < nl > + < nl > + func doneDidTap ( ) { < nl > + delegate ? . locationPickerDidPicked ( self , latitude : map . centerCoordinate . latitude , longitude : map . centerCoordinate . longitude ) < nl > + } < nl > + < nl > + func updateAuthStatus ( status : CLAuthorizationStatus ) { < nl > + if ( status = = CLAuthorizationStatus . Denied ) { < nl > + / / User explictly denied access to maps < nl > + showPlaceholderWithImage ( UIImage . bundled ( " " ) , title : " Enable location " , subtitle : " Enable location services in settings . " ) < nl > + map . hidden = true < nl > + navigationItem . rightBarButtonItem = nil < nl > + } else if ( status = = CLAuthorizationStatus . Restricted | | status = = CLAuthorizationStatus . NotDetermined ) { < nl > + / / App doesn ' t complete auth request < nl > + map . hidden = false < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > + hidePlaceholder ( ) < nl > + } else { < nl > + / / Authorised < nl > + map . hidden = false < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > + hidePlaceholder ( ) < nl > + } < nl > + } < nl > + < nl > + override public func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + map . frame = self . view . bounds < nl > + / / pinPoint . bounds = CGRectMake ( 0 , 0 , 100 , 100 ) < nl > + pinPoint . centerIn ( self . view . bounds ) < nl > + } < nl > + < nl > + public func locationManager ( manager : CLLocationManager , didChangeAuthorizationStatus status : CLAuthorizationStatus ) { < nl > + updateAuthStatus ( status ) < nl > + } < nl > + < nl > + public func locationManager ( manager : CLLocationManager , didUpdateLocations locations : [ CLLocation ] ) { < nl > + let location = locations . first ! < nl > + map . setRegion ( MKCoordinateRegion ( center : location . coordinate , span : MKCoordinateSpanMake ( 0 . 05 , 0 . 05 ) ) , animated : true ) < nl > + locationManager . stopUpdatingLocation ( ) < nl > + } < nl > + } < nl > + < nl > + public protocol AALocationPickerControllerDelegate { < nl > + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) < nl > + func locationPickerDidCancelled ( controller : AALocationPickerController ) < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > deleted file mode 100644 < nl > index f0771bb . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > + + + / dev / null < nl > @ @ - 1 , 41 + 0 , 0 @ @ < nl > - / / < nl > - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > - / / < nl > - < nl > - import Foundation < nl > - import MapKit < nl > - < nl > - class AALocationPickerController : AAViewController { < nl > - < nl > - let locationManager = CLLocationManager ( ) < nl > - let map = MKMapView ( ) < nl > - < nl > - override func viewDidLoad ( ) { < nl > - super . viewDidLoad ( ) < nl > - < nl > - navigationItem . title = " Location " < nl > - navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) < nl > - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > - < nl > - locationManager . requestWhenInUseAuthorization ( ) < nl > - < nl > - map . showsUserLocation = true < nl > - map . userTrackingMode = MKUserTrackingMode . Follow < nl > - < nl > - self . view . addSubview ( map ) < nl > - } < nl > - < nl > - func cancellDidTap ( ) { < nl > - dismiss ( ) < nl > - } < nl > - < nl > - func doneDidTap ( ) { < nl > - dismiss ( ) < nl > - } < nl > - < nl > - override func viewDidLayoutSubviews ( ) { < nl > - super . viewDidLayoutSubviews ( ) < nl > - < nl > - map . frame = self . view . bounds < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > index 3705da0 . . f2c6164 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > @ @ - 65 , 6 + 65 , 11 @ @ public extension UIView { < nl > public var right : CGFloat { get { return frame . maxX } } < nl > public var top : CGFloat { get { return frame . minY } } < nl > public var bottom : CGFloat { get { return frame . maxY } } < nl > + < nl > + public func centerIn ( rect : CGRect ) { < nl > + self . frame = CGRectMake ( ( rect . width - self . bounds . width ) / 2 , ( rect . height - self . bounds . height ) / 2 , < nl > + self . bounds . width , self . bounds . height ) < nl > + } < nl > } < nl > < nl > / / Text measuring < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift < nl > new file mode 100644 < nl > index 0000000 . . ff92ae3 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift < nl > @ @ - 0 , 0 + 1 , 41 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public class AAMapPinPointView : UIView { < nl > + < nl > + let pinView = UIImageView ( ) < nl > + let pinPointView = UIImageView ( ) < nl > + let pinShadowView = UIImageView ( ) < nl > + < nl > + public init ( ) { < nl > + super . init ( frame : CGRectMake ( 0 , 0 , 100 , 100 ) ) < nl > + < nl > + pinShadowView . frame = CGRectMake ( 43 , 47 , 32 , 39 ) < nl > + pinShadowView . alpha = 0 . 9 < nl > + pinShadowView . image = UIImage . bundled ( " LocationPinShadow . png " ) < nl > + addSubview ( pinShadowView ) < nl > + < nl > + pinPointView . frame = CGRectMake ( 100 / 2 - 2 , 100 - 18 . 5 , 3 . 5 , 1 . 5 ) < nl > + pinPointView . image = UIImage . bundled ( " LocationPinPoint . png " ) < nl > + addSubview ( pinPointView ) < nl > + < nl > + pinView . frame = CGRectMake ( 100 / 2 - 7 , 47 , 13 . 5 , 36 ) < nl > + pinView . image = UIImage . bundled ( " LocationPin . png " ) < nl > + addSubview ( pinView ) < nl > + } < nl > + < nl > + required public init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func risePin ( rised : Bool , animated : Bool ) { < nl > + if ( rised ) { < nl > + pinView . hidden = true < nl > + } else { < nl > + pinView . hidden = false < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 1cc311f . . 1687242 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 177 , 26 + 177 , 28 @ @ 
 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; 
 	 	 06E7B2541C139B6F0090660C / * AABubbleContactCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2531C139B6F0090660C / * AABubbleContactCell . swift * / ; } ; 
 - 	 	 152AA8A61C2989270030DEEE / * SLKInputAccessoryView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8921C2989270030DEEE / * SLKInputAccessoryView . h * / ; } ; 
 + 	 	 152AA8A61C2989270030DEEE / * SLKInputAccessoryView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8921C2989270030DEEE / * SLKInputAccessoryView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8A71C2989270030DEEE / * SLKInputAccessoryView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8931C2989270030DEEE / * SLKInputAccessoryView . m * / ; } ; 
 - 	 	 152AA8A81C2989270030DEEE / * SLKTextInputbar . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8941C2989270030DEEE / * SLKTextInputbar . h * / ; } ; 
 + 	 	 152AA8A81C2989270030DEEE / * SLKTextInputbar . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8941C2989270030DEEE / * SLKTextInputbar . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8A91C2989270030DEEE / * SLKTextInputbar . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8951C2989270030DEEE / * SLKTextInputbar . m * / ; } ; 
 - 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8961C2989270030DEEE / * SLKTextView . h * / ; } ; 
 + 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8961C2989270030DEEE / * SLKTextView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8AB1C2989270030DEEE / * SLKTextView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8971C2989270030DEEE / * SLKTextView . m * / ; } ; 
 - 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8981C2989270030DEEE / * SLKTextView + SLKAdditions . h * / ; } ; 
 + 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8981C2989270030DEEE / * SLKTextView + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8AD1C2989270030DEEE / * SLKTextView + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8991C2989270030DEEE / * SLKTextView + SLKAdditions . m * / ; } ; 
 - 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89A1C2989270030DEEE / * SLKTextViewController . h * / ; } ; 
 + 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89A1C2989270030DEEE / * SLKTextViewController . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8AF1C2989270030DEEE / * SLKTextViewController . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA89B1C2989270030DEEE / * SLKTextViewController . m * / ; } ; 
 - 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89C1C2989270030DEEE / * SLKTypingIndicatorProtocol . h * / ; } ; 
 - 	 	 152AA8B11C2989270030DEEE / * SLKTypingIndicatorView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89D1C2989270030DEEE / * SLKTypingIndicatorView . h * / ; } ; 
 + 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89C1C2989270030DEEE / * SLKTypingIndicatorProtocol . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 + 	 	 152AA8B11C2989270030DEEE / * SLKTypingIndicatorView . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89D1C2989270030DEEE / * SLKTypingIndicatorView . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8B21C2989270030DEEE / * SLKTypingIndicatorView . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA89E1C2989270030DEEE / * SLKTypingIndicatorView . m * / ; } ; 
 - 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89F1C2989270030DEEE / * SLKUIConstants . h * / ; } ; 
 - 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A01C2989270030DEEE / * UIResponder + SLKAdditions . h * / ; } ; 
 + 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA89F1C2989270030DEEE / * SLKUIConstants . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 + 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A01C2989270030DEEE / * UIResponder + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8B51C2989270030DEEE / * UIResponder + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8A11C2989270030DEEE / * UIResponder + SLKAdditions . m * / ; } ; 
 - 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A21C2989270030DEEE / * UIScrollView + SLKAdditions . h * / ; } ; 
 + 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A21C2989270030DEEE / * UIScrollView + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8B71C2989270030DEEE / * UIScrollView + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8A31C2989270030DEEE / * UIScrollView + SLKAdditions . m * / ; } ; 
 - 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A41C2989270030DEEE / * UIView + SLKAdditions . h * / ; } ; 
 + 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / = { isa = PBXBuildFile ; fileRef = 152AA8A41C2989270030DEEE / * UIView + SLKAdditions . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 152AA8B91C2989270030DEEE / * UIView + SLKAdditions . m in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8A51C2989270030DEEE / * UIView + SLKAdditions . m * / ; } ; 
 + 	 	 152AA8BD1C298BF00030DEEE / * AASettingsSessionsController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / ; } ; 
 + 	 	 152AA8BF1C298C4B0030DEEE / * AASettingsLastSeenController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / ; } ; 
 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0C1C20185500E3717A / * diag _ range . c * / ; } ; 
 	 	 15D35F171C20185500E3717A / * diag _ range . h in Headers * / = { isa = PBXBuildFile ; fileRef = 15D35F0D1C20185500E3717A / * diag _ range . h * / ; } ; 
 	 	 15D35F181C20185500E3717A / * opus _ header . c in Sources * / = { isa = PBXBuildFile ; fileRef = 15D35F0E1C20185500E3717A / * opus _ header . c * / ; } ; 
 @ @ - 453 , 6 + 455 , 8 @ @ 
 	 	 152AA8A31C2989270030DEEE / * UIScrollView + SLKAdditions . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " UIScrollView + SLKAdditions . m " ; sourceTree = " < group > " ; } ; 
 	 	 152AA8A41C2989270030DEEE / * UIView + SLKAdditions . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = " UIView + SLKAdditions . h " ; sourceTree = " < group > " ; } ; 
 	 	 152AA8A51C2989270030DEEE / * UIView + SLKAdditions . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = " UIView + SLKAdditions . m " ; sourceTree = " < group > " ; } ; 
 + 	 	 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AASettingsSessionsController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AASettingsLastSeenController . swift ; sourceTree = " < group > " ; } ; 
 	 	 15D35F0C1C20185500E3717A / * diag _ range . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = diag _ range . c ; sourceTree = " < group > " ; } ; 
 	 	 15D35F0D1C20185500E3717A / * diag _ range . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = diag _ range . h ; sourceTree = " < group > " ; } ; 
 	 	 15D35F0E1C20185500E3717A / * opus _ header . c * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . c ; path = opus _ header . c ; sourceTree = " < group > " ; } ; 
 @ @ - 905 , 6 + 909 , 8 @ @ 
 	 	 	 	 066A52ED1BC52B02000E606E / * AASettingsNotificationsViewController . swift * / , 
 	 	 	 	 066A52EE1BC52B02000E606E / * AASettingsPrivacyViewController . swift * / , 
 	 	 	 	 066A52EF1BC52B02000E606E / * AASettingsWallpapper . swift * / , 
 + 	 	 	 	 152AA8BC1C298BF00030DEEE / * AASettingsSessionsController . swift * / , 
 + 	 	 	 	 152AA8BE1C298C4B0030DEEE / * AASettingsLastSeenController . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Settings ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1262 , 7 + 1268 , 15 @ @ 
 	 	 	 	 152AA8B11C2989270030DEEE / * SLKTypingIndicatorView . h in Headers * / , 
 	 	 	 	 152AA8A81C2989270030DEEE / * SLKTextInputbar . h in Headers * / , 
 	 	 	 	 066A52731BC5101A000E606E / * ABPhoneField . h in Headers * / , 
 + 	 	 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / , 
 + 	 	 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / , 
 + 	 	 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / , 
 	 	 	 	 152AA8A61C2989270030DEEE / * SLKInputAccessoryView . h in Headers * / , 
 + 	 	 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / , 
 + 	 	 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / , 
 + 	 	 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / , 
 + 	 	 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / , 
 + 	 	 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / , 
 	 	 	 	 15D35F571C20187E00E3717A / * AAAudioRecorder . h in Headers * / , 
 	 	 	 	 15D35F641C20187E00E3717A / * AAModernConversationAudioPlayerContext . h in Headers * / , 
 	 	 	 	 15D35F681C20187E00E3717A / * AAModernViewInlineMediaContext . h in Headers * / , 
 @ @ - 1271 , 13 + 1285 , 9 @ @ 
 	 	 	 	 15D35F661C20187E00E3717A / * NSObject + TGLock . h in Headers * / , 
 	 	 	 	 15D35F281C20186200E3717A / * os _ types . h in Headers * / , 
 	 	 	 	 15D35F191C20185500E3717A / * opus _ header . h in Headers * / , 
 - 	 	 	 	 152AA8B41C2989270030DEEE / * UIResponder + SLKAdditions . h in Headers * / , 
 	 	 	 	 15F89F081C211FED00776ACD / * opus _ multistream . h in Headers * / , 
 	 	 	 	 15D35F1F1C20185500E3717A / * wav _ io . h in Headers * / , 
 - 	 	 	 	 152AA8B31C2989270030DEEE / * SLKUIConstants . h in Headers * / , 
 - 	 	 	 	 152AA8B61C2989270030DEEE / * UIScrollView + SLKAdditions . h in Headers * / , 
 	 	 	 	 15D35F171C20185500E3717A / * diag _ range . h in Headers * / , 
 - 	 	 	 	 152AA8B81C2989270030DEEE / * UIView + SLKAdditions . h in Headers * / , 
 	 	 	 	 15D35F5F1C20187E00E3717A / * AAOpusAudioPlayerAU . h in Headers * / , 
 	 	 	 	 15D35F551C20187E00E3717A / * AAAlertView . h in Headers * / , 
 	 	 	 	 15D35F5D1C20187E00E3717A / * AANativeAudioPlayer . h in Headers * / , 
 @ @ - 1292 , 10 + 1302 , 6 @ @ 
 	 	 	 	 15D35F511C20187E00E3717A / * ASQueue . h in Headers * / , 
 	 	 	 	 15D35F1D1C20185500E3717A / * picture . h in Headers * / , 
 	 	 	 	 06230F421BC95BD200A4807B / * RMPhoneFormat . h in Headers * / , 
 - 	 	 	 	 152AA8AA1C2989270030DEEE / * SLKTextView . h in Headers * / , 
 - 	 	 	 	 152AA8B01C2989270030DEEE / * SLKTypingIndicatorProtocol . h in Headers * / , 
 - 	 	 	 	 152AA8AC1C2989270030DEEE / * SLKTextView + SLKAdditions . h in Headers * / , 
 - 	 	 	 	 152AA8AE1C2989270030DEEE / * SLKTextViewController . h in Headers * / , 
 	 	 	 	 069CF4CE1BCB909A00C66E12 / * CLToken . h in Headers * / , 
 	 	 	 ) ; 
 	 	 	 runOnlyForDeploymentPostprocessing = 0 ; 
 @ @ - 1559 , 6 + 1565 , 7 @ @ 
 	 	 	 	 066A519D1BC4C390000E606E / * UDPreferencesStorage . swift in Sources * / , 
 	 	 	 	 069CF4CD1BCB909A00C66E12 / * CLBackspaceDetectingTextField . m in Sources * / , 
 	 	 	 	 15D35F1B1C20185500E3717A / * opusenc . m in Sources * / , 
 + 	 	 	 	 152AA8BD1C298BF00030DEEE / * AASettingsSessionsController . swift in Sources * / , 
 	 	 	 	 066A515B1BC4C178000E606E / * AAHashMap . swift in Sources * / , 
 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , 
 	 	 	 	 152AA8B21C2989270030DEEE / * SLKTypingIndicatorView . m in Sources * / , 
 @ @ - 1577 , 6 + 1584 , 7 @ @ 
 	 	 	 	 066A514E1BC4BDE4000E606E / * Numbers . swift in Sources * / , 
 	 	 	 	 15D35F671C20187E00E3717A / * NSObject + TGLock . m in Sources * / , 
 	 	 	 	 15D35F5C1C20187E00E3717A / * AAAudioPlayer . m in Sources * / , 
 + 	 	 	 	 152AA8BF1C298C4B0030DEEE / * AASettingsLastSeenController . swift in Sources * / , 
 	 	 	 	 066A51561BC4BEF5000E606E / * AALocalized . swift in Sources * / , 
 	 	 	 	 069CF4CF1BCB909A00C66E12 / * CLToken . m in Sources * / , 
 	 	 	 	 15D35F751C201B6B00E3717A / * AACustomPresentationController . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index 531dd51 . . 6ece6e5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 82 , 6 + 82 , 13 @ @ 
 
 " SettingsVersion " = " Version { version } " ; 
 
 + " SettingsAllSessions " = " All sessions " ; 
 + 
 + " SettingsLastSeen " = " Last seen " ; 
 + 
 + " SettingsLastSeenHint " = " Change who can see your Last Seen time . " ; 
 + 
 + 
 / * 
 * Profile 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h 
 index c86b74b . . 6b3d9cf 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . h 
 @ @ - 34 , 6 + 34 , 8 @ @ FOUNDATION _ EXPORT const unsigned char ActorSDKVersionString [ ] ; 
 
 / / Ogg record 
 
 + # import " SLKTextViewController . h " 
 + 
 # import " AAAudioRecorder . h " 
 # import " AAAudioPlayer . h " 
 # import " AAModernConversationAudioPlayer . h " 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 index e33d2af . . a064522 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AAConversationContentController . swift 
 @ @ - 4 , 7 + 4 , 6 @ @ 
 
 import Foundation 
 import UIKit 
 - import SlackTextViewController 
 
 public class AAConversationContentController : SLKTextViewController , ARDisplayList _ AppleChangeListener { 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsLastSeenController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsLastSeenController . swift 
 new file mode 100644 
 index 0000000 . . 919efdd 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsLastSeenController . swift 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import UIKit 
 + 
 + public class AASettingsLastSeenController : AAContentTableController { 
 + 
 + private var sessionsCell : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ? 
 + 
 + public init ( ) { 
 + super . init ( style : AAContentTableStyle . SettingsGrouped ) 
 + 
 + navigationItem . title = AALocalized ( " SettingsLastSeen " ) 
 + 
 + content = ACAllEvents _ Settings . PRIVACY ( ) 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + public override func tableDidLoad ( ) { 
 + 
 + section { ( s ) - > ( ) in 
 + 
 + s . common ( { ( r ) - > ( ) in 
 + r . content = " Everybody " 
 + 
 + r . selectAction = { 
 + 
 + print ( " tap in Everybody " ) 
 + return true 
 + } 
 + 
 + } ) 
 + 
 + s . common ( { ( r ) - > ( ) in 
 + r . content = " My Contacts " 
 + 
 + r . selectAction = { 
 + 
 + print ( " tap in My Contacts " ) 
 + return true 
 + } 
 + 
 + } ) 
 + 
 + s . common ( { ( r ) - > ( ) in 
 + r . content = " Nobody " 
 + 
 + r . selectAction = { 
 + 
 + print ( " tap in Nobody " ) 
 + return true 
 + } 
 + 
 + } ) 
 + 
 + 
 + } 
 + 
 + } 
 + 
 + 
 + } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift 
 index 57e323e . . 5c96aab 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsPrivacyViewController . swift 
 @ @ - 23 , 57 + 23 , 17 @ @ public class AASettingsPrivacyViewController : AAContentTableController { 
 public override func tableDidLoad ( ) { 
 
 section { ( s ) - > ( ) in 
 + 
 + / / Settings : All sessions 
 + s . navigate ( " SettingsAllSessions " , controller : AASettingsSessionsController . self ) 
 
 - s . footerText = AALocalized ( " PrivacyTerminateHint " ) 
 + / / Settings : Last seen 
 + s . navigate ( " SettingsLastSeen " , controller : AASettingsLastSeenController . self ) 
 + 
 + s . footerText = AALocalized ( " SettingsLastSeenHint " ) 
 
 - s . danger ( " PrivacyTerminate " ) { ( r ) - > ( ) in 
 - r . selectAction = { ( ) - > Bool in 
 - self . confirmDangerSheetUser ( " PrivacyTerminateAlert " , tapYes : { [ unowned self ] ( ) - > ( ) in 
 - / / Terminating all sessions and reload list 
 - self . executeSafe ( Actor . terminateAllSessionsCommand ( ) , successBlock : { ( val ) - > Void in 
 - self . loadSessions ( ) 
 - } ) 
 - } , tapNo : nil ) 
 - return true 
 - } 
 - } 
 - } 
 - 
 - section { ( s ) - > ( ) in 
 - self . sessionsCell = s . arrays ( ) { ( r : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ) - > ( ) in 
 - r . bindData = { ( c : AACommonCell , d : ARApiAuthSession ) - > ( ) in 
 - if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { 
 - c . style = . Normal 
 - c . setContent ( d . getDeviceTitle ( ) ) 
 - } else { 
 - c . style = . Hint 
 - c . setContent ( " ( Current ) \ ( d . getDeviceTitle ( ) ) " ) 
 - } 
 - } 
 - 
 - r . selectAction = { ( d ) - > Bool in 
 - if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { 
 - self . confirmDangerSheetUser ( " PrivacyTerminateAlertSingle " , tapYes : { [ unowned self ] ( ) - > ( ) in 
 - / / Terminating session and reload list 
 - self . executeSafe ( Actor . terminateSessionCommandWithId ( d . getId ( ) ) , successBlock : { [ unowned self ] ( val ) - > Void in 
 - self . loadSessions ( ) 
 - } ) 
 - } , tapNo : nil ) 
 - } 
 - return true 
 - } 
 - } 
 } 
 
 - / / Request sessions load 
 - 
 - loadSessions ( ) 
 } 
 
 - private func loadSessions ( ) { 
 - execute ( Actor . loadSessionsCommand ( ) , successBlock : { [ unowned self ] ( val ) - > Void in 
 - self . sessionsCell ! . data = ( val as ! JavaUtilList ) . toArray ( ) . toSwiftArray ( ) 
 - self . managedTable . tableView . reloadData ( ) 
 - } , failureBlock : nil ) 
 - } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsSessionsController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsSessionsController . swift 
 new file mode 100644 
 index 0000000 . . bf9be8c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsSessionsController . swift 
 @ @ - 0 , 0 + 1 , 80 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import UIKit 
 + 
 + public class AASettingsSessionsController : AAContentTableController { 
 + 
 + private var sessionsCell : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ? 
 + 
 + public init ( ) { 
 + super . init ( style : AAContentTableStyle . SettingsGrouped ) 
 + 
 + navigationItem . title = AALocalized ( " SettingsAllSessions " ) 
 + 
 + content = ACAllEvents _ Settings . PRIVACY ( ) 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + public override func tableDidLoad ( ) { 
 + 
 + section { ( s ) - > ( ) in 
 + 
 + s . footerText = AALocalized ( " PrivacyTerminateHint " ) 
 + 
 + s . danger ( " PrivacyTerminate " ) { ( r ) - > ( ) in 
 + r . selectAction = { ( ) - > Bool in 
 + self . confirmDangerSheetUser ( " PrivacyTerminateAlert " , tapYes : { [ unowned self ] ( ) - > ( ) in 
 + / / Terminating all sessions and reload list 
 + self . executeSafe ( Actor . terminateAllSessionsCommand ( ) , successBlock : { ( val ) - > Void in 
 + self . loadSessions ( ) 
 + } ) 
 + } , tapNo : nil ) 
 + return true 
 + } 
 + } 
 + } 
 + 
 + section { ( s ) - > ( ) in 
 + self . sessionsCell = s . arrays ( ) { ( r : AAManagedArrayRows < ARApiAuthSession , AACommonCell > ) - > ( ) in 
 + r . bindData = { ( c : AACommonCell , d : ARApiAuthSession ) - > ( ) in 
 + if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { 
 + c . style = . Normal 
 + c . setContent ( d . getDeviceTitle ( ) ) 
 + } else { 
 + c . style = . Hint 
 + c . setContent ( " ( Current ) \ ( d . getDeviceTitle ( ) ) " ) 
 + } 
 + } 
 + 
 + r . selectAction = { ( d ) - > Bool in 
 + if d . getAuthHolder ( ) . ordinal ( ) ! = jint ( ARApiAuthHolder . THISDEVICE . rawValue ) { 
 + self . confirmDangerSheetUser ( " PrivacyTerminateAlertSingle " , tapYes : { [ unowned self ] ( ) - > ( ) in 
 + / / Terminating session and reload list 
 + self . executeSafe ( Actor . terminateSessionCommandWithId ( d . getId ( ) ) , successBlock : { [ unowned self ] ( val ) - > Void in 
 + self . loadSessions ( ) 
 + } ) 
 + } , tapNo : nil ) 
 + } 
 + return true 
 + } 
 + } 
 + } 
 + 
 + / / Request sessions load 
 + 
 + loadSessions ( ) 
 + } 
 + 
 + private func loadSessions ( ) { 
 + execute ( Actor . loadSessionsCommand ( ) , successBlock : { [ unowned self ] ( val ) - > Void in 
 + self . sessionsCell ! . data = ( val as ! JavaUtilList ) . toArray ( ) . toSwiftArray ( ) 
 + self . managedTable . tableView . reloadData ( ) 
 + } , failureBlock : nil ) 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index f26bdd0 . . 5fc91d4 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 172 , 9 + 172 , 10 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 - 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; 
 + 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / ; } ; 
 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 + 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 350 , 9 + 351 , 10 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 - 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AALocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 537 , 6 + 539 , 7 @ @ 
 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , 
 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , 
 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , 
 + 	 	 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / , 
 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , 
 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , 
 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , 
 @ @ - 890 , 7 + 893 , 7 @ @ 
 	 	 06E7B2451C0F8D410090660C / * Location * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 - 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , 
 + 	 	 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Location ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1124 , 7 + 1127 , 7 @ @ 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 - 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , 
 + 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , 
 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , 
 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , 
 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , 
 @ @ - 1171 , 6 + 1174 , 7 @ @ 
 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , 
 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , 
 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , 
 + 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , 
 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , 
 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , 
 	 	 	 	 066A526D1BC50E8B000E606E / * AAAuthCountryCell . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 index 3f92572 . . e9b740d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 @ @ - 2 , 8 + 2 , 16 @ @ 
 " images " : [ 
 { 
 " idiom " : " universal " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 " filename " : " LocationPin @ 2x . png " , 
 " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " scale " : " 3x " 
 } 
 ] , 
 " info " : { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 41ae8d7 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPinPoint @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png 
 new file mode 100644 
 index 0000000 . . 7584de8 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 0bd0b69 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPinShadow @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png 
 new file mode 100644 
 index 0000000 . . 3bc04a4 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 index 1c539ce . . 79edd4d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 119 , 11 + 119 , 12 @ @ public class AABubbleLocationCell : AABubbleCell { 
 
 public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 let insets = fullContentInsets 
 + let contentWidth = self . contentView . frame . width 
 
 layoutBubble ( mapWidth , contentHeight : mapHeight ) 
 
 if isOut { 
 - map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 + map . frame = CGRectMake ( contentWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 } else { 
 map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 8d0cdcc . . 52a8665 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 6 , 7 + 6 , 7 @ @ import Foundation 
 import UIKit 
 import MobileCoreServices 
 
 - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate { 
 + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { 
 
 / / Data binder 
 private let binder = AABinder ( ) 
 @ @ - 462 , 6 + 462 , 17 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 / / Location picking 
 
 func pickLocation ( ) { 
 - self . presentViewController ( AANavigationController ( rootViewController : AALocationPickerController ( ) ) , animated : true , completion : nil ) 
 + let pickerController = AALocationPickerController ( ) 
 + pickerController . delegate = self 
 + self . presentViewController ( AANavigationController ( rootViewController : pickerController ) , animated : true , completion : nil ) 
 + } 
 + 
 + func locationPickerDidCancelled ( controller : AALocationPickerController ) { 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 + 
 + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) { 
 + Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift 
 new file mode 100644 
 index 0000000 . . 4366550 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift 
 @ @ - 0 , 0 + 1 , 93 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + public class AALocationPickerController : AAViewController , CLLocationManagerDelegate , MKMapViewDelegate { 
 + 
 + public var delegate : AALocationPickerControllerDelegate ? = nil 
 + 
 + private let locationManager = CLLocationManager ( ) 
 + private let map = MKMapView ( ) 
 + private let pinPoint = AAMapPinPointView ( ) 
 + 
 + override public func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + navigationItem . title = " Location " 
 + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) 
 + 
 + updateAuthStatus ( CLLocationManager . authorizationStatus ( ) ) 
 + 
 + locationManager . delegate = self 
 + 
 + locationManager . requestWhenInUseAuthorization ( ) 
 + locationManager . startUpdatingLocation ( ) 
 + 
 + map . showsUserLocation = true 
 + map . delegate = self 
 + 
 + self . view . addSubview ( map ) 
 + self . view . addSubview ( pinPoint ) 
 + } 
 + 
 + public func mapView ( mapView : MKMapView , regionWillChangeAnimated animated : Bool ) { 
 + pinPoint . risePin ( true , animated : animated ) 
 + } 
 + 
 + public func mapView ( mapView : MKMapView , regionDidChangeAnimated animated : Bool ) { 
 + pinPoint . risePin ( false , animated : animated ) 
 + } 
 + 
 + func cancellDidTap ( ) { 
 + delegate ? . locationPickerDidCancelled ( self ) 
 + } 
 + 
 + func doneDidTap ( ) { 
 + delegate ? . locationPickerDidPicked ( self , latitude : map . centerCoordinate . latitude , longitude : map . centerCoordinate . longitude ) 
 + } 
 + 
 + func updateAuthStatus ( status : CLAuthorizationStatus ) { 
 + if ( status = = CLAuthorizationStatus . Denied ) { 
 + / / User explictly denied access to maps 
 + showPlaceholderWithImage ( UIImage . bundled ( " " ) , title : " Enable location " , subtitle : " Enable location services in settings . " ) 
 + map . hidden = true 
 + navigationItem . rightBarButtonItem = nil 
 + } else if ( status = = CLAuthorizationStatus . Restricted | | status = = CLAuthorizationStatus . NotDetermined ) { 
 + / / App doesn ' t complete auth request 
 + map . hidden = false 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 + hidePlaceholder ( ) 
 + } else { 
 + / / Authorised 
 + map . hidden = false 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 + hidePlaceholder ( ) 
 + } 
 + } 
 + 
 + override public func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + map . frame = self . view . bounds 
 + / / pinPoint . bounds = CGRectMake ( 0 , 0 , 100 , 100 ) 
 + pinPoint . centerIn ( self . view . bounds ) 
 + } 
 + 
 + public func locationManager ( manager : CLLocationManager , didChangeAuthorizationStatus status : CLAuthorizationStatus ) { 
 + updateAuthStatus ( status ) 
 + } 
 + 
 + public func locationManager ( manager : CLLocationManager , didUpdateLocations locations : [ CLLocation ] ) { 
 + let location = locations . first ! 
 + map . setRegion ( MKCoordinateRegion ( center : location . coordinate , span : MKCoordinateSpanMake ( 0 . 05 , 0 . 05 ) ) , animated : true ) 
 + locationManager . stopUpdatingLocation ( ) 
 + } 
 + } 
 + 
 + public protocol AALocationPickerControllerDelegate { 
 + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) 
 + func locationPickerDidCancelled ( controller : AALocationPickerController ) 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 deleted file mode 100644 
 index f0771bb . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 + + + / dev / null 
 @ @ - 1 , 41 + 0 , 0 @ @ 
 - / / 
 - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 - / / 
 - 
 - import Foundation 
 - import MapKit 
 - 
 - class AALocationPickerController : AAViewController { 
 - 
 - let locationManager = CLLocationManager ( ) 
 - let map = MKMapView ( ) 
 - 
 - override func viewDidLoad ( ) { 
 - super . viewDidLoad ( ) 
 - 
 - navigationItem . title = " Location " 
 - navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) 
 - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 - 
 - locationManager . requestWhenInUseAuthorization ( ) 
 - 
 - map . showsUserLocation = true 
 - map . userTrackingMode = MKUserTrackingMode . Follow 
 - 
 - self . view . addSubview ( map ) 
 - } 
 - 
 - func cancellDidTap ( ) { 
 - dismiss ( ) 
 - } 
 - 
 - func doneDidTap ( ) { 
 - dismiss ( ) 
 - } 
 - 
 - override func viewDidLayoutSubviews ( ) { 
 - super . viewDidLayoutSubviews ( ) 
 - 
 - map . frame = self . view . bounds 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 index 3705da0 . . f2c6164 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 @ @ - 65 , 6 + 65 , 11 @ @ public extension UIView { 
 public var right : CGFloat { get { return frame . maxX } } 
 public var top : CGFloat { get { return frame . minY } } 
 public var bottom : CGFloat { get { return frame . maxY } } 
 + 
 + public func centerIn ( rect : CGRect ) { 
 + self . frame = CGRectMake ( ( rect . width - self . bounds . width ) / 2 , ( rect . height - self . bounds . height ) / 2 , 
 + self . bounds . width , self . bounds . height ) 
 + } 
 } 
 
 / / Text measuring 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift 
 new file mode 100644 
 index 0000000 . . ff92ae3 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift 
 @ @ - 0 , 0 + 1 , 41 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public class AAMapPinPointView : UIView { 
 + 
 + let pinView = UIImageView ( ) 
 + let pinPointView = UIImageView ( ) 
 + let pinShadowView = UIImageView ( ) 
 + 
 + public init ( ) { 
 + super . init ( frame : CGRectMake ( 0 , 0 , 100 , 100 ) ) 
 + 
 + pinShadowView . frame = CGRectMake ( 43 , 47 , 32 , 39 ) 
 + pinShadowView . alpha = 0 . 9 
 + pinShadowView . image = UIImage . bundled ( " LocationPinShadow . png " ) 
 + addSubview ( pinShadowView ) 
 + 
 + pinPointView . frame = CGRectMake ( 100 / 2 - 2 , 100 - 18 . 5 , 3 . 5 , 1 . 5 ) 
 + pinPointView . image = UIImage . bundled ( " LocationPinPoint . png " ) 
 + addSubview ( pinPointView ) 
 + 
 + pinView . frame = CGRectMake ( 100 / 2 - 7 , 47 , 13 . 5 , 36 ) 
 + pinView . image = UIImage . bundled ( " LocationPin . png " ) 
 + addSubview ( pinView ) 
 + } 
 + 
 + required public init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func risePin ( rised : Bool , animated : Bool ) { 
 + if ( rised ) { 
 + pinView . hidden = true 
 + } else { 
 + pinView . hidden = false 
 + } 
 + } 
 + } 
 \ No newline at end of file
