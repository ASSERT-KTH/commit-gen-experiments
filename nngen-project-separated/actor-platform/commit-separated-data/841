BLEU SCORE: 0.06608973813188644

TEST MSG: fix ( android ) init peer connection - check ice username / credential for null
GENERATED MSG: fix ( js ) : load archive dialogs - cancel last request if init

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java < nl > index 24fb486 . . 01c9c64 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java < nl > @ @ - 38 , 18 + 38 , 18 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > / / < nl > / / notify old callback replaced < nl > / / < nl > - if ( lastCallback ! = null ) { < nl > + if ( lastCallback ! = null ) { < nl > lastCallback . onError ( new RpcException ( TAG , 0 , " callback replaced " , false , null ) ) ; < nl > } < nl > } < nl > lastCallback = callback ; < nl > < nl > - if ( isLoading & & ! init ) { < nl > + if ( isLoading & & ! init ) { < nl > return ; < nl > } < nl > < nl > - if ( init ) { < nl > - if ( lastRequest ! = - 1 ) { < nl > + if ( init ) { < nl > + if ( lastRequest ! = - 1 ) { < nl > cancelRequest ( lastRequest ) ; < nl > } < nl > nextOffset = null ; < nl > @ @ - 96 , 6 + 96 , 7 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > public static class LoadMore { < nl > RpcCallback < ResponseLoadArchived > callback ; < nl > boolean init ; < nl > + < nl > public LoadMore ( boolean init , RpcCallback < ResponseLoadArchived > callback ) { < nl > this . callback = callback ; < nl > this . init = init ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java < nl > index 05bd68f . . f90f5f7 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java < nl > @ @ - 30 , 6 + 30 , 7 @ @ import im . actor . runtime . webrtc . WebRTCSettings ; < nl > public class AndroidPeerConnection implements WebRTCPeerConnection { < nl > < nl > private static final boolean LIBJINGLE _ LOGS = false ; < nl > + public static final String TAG = " AndroidPeerConnection " ; < nl > < nl > public AndroidPeerConnection ( WebRTCIceServer [ ] webRTCIceServers , WebRTCSettings settings ) { < nl > < nl > @ @ - 41 , 11 + 42 , 18 @ @ public class AndroidPeerConnection implements WebRTCPeerConnection { < nl > } < nl > < nl > ArrayList < PeerConnection . IceServer > servers = new ArrayList < > ( ) ; < nl > + PeerConnection . IceServer ice ; < nl > for ( WebRTCIceServer webRTCIceServer : webRTCIceServers ) { < nl > - servers . add ( new PeerConnection . IceServer ( < nl > - webRTCIceServer . getUrl ( ) , < nl > - webRTCIceServer . getUsername ( ) , < nl > - webRTCIceServer . getCredential ( ) ) ) ; < nl > + if ( webRTCIceServer . getUsername ( ) ! = null ) { < nl > + ice = new PeerConnection . IceServer ( < nl > + webRTCIceServer . getUrl ( ) , < nl > + webRTCIceServer . getUsername ( ) , < nl > + webRTCIceServer . getCredential ( ) = = null ? " " : webRTCIceServer . getCredential ( ) ) ; < nl > + } else { < nl > + ice = new PeerConnection . IceServer ( webRTCIceServer . getUrl ( ) ) ; < nl > + } < nl > + servers . add ( ice ) ; < nl > + < nl > } < nl > this . peerConnection = AndroidWebRTCRuntimeProvider . FACTORY . createPeerConnection ( servers , new MediaConstraints ( ) , new PeerConnection . Observer ( ) { < nl > @ Override
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java < nl > index bd49f7e . . a071446 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java < nl > @ @ - 19 , 13 + 19 , 13 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > < nl > private static final int LIMIT = 20 ; < nl > < nl > - private static final String KEY _ LOADED _ OFFSET = " archived _ dialogs _ offset " ; < nl > < nl > private byte [ ] nextOffset ; < nl > < nl > private boolean isLoading = false ; < nl > < nl > RpcCallback < ResponseLoadArchived > lastCallback ; < nl > + private long lastRequest = - 1 ; < nl > < nl > public ArchivedDialogsActor ( ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 33 , 27 + 33 , 30 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > < nl > private void onLoadMore ( boolean init , RpcCallback < ResponseLoadArchived > callback ) { < nl > < nl > - if ( isLoading ) { < nl > + if ( init | | isLoading ) { < nl > < nl > / / < nl > - / / replace old callback < nl > + / / notify old callback replaced < nl > / / < nl > lastCallback . onError ( new RpcException ( TAG , 0 , " callback replaced " , false , null ) ) ; < nl > - lastCallback = callback ; < nl > + } < nl > + lastCallback = callback ; < nl > + < nl > + if ( isLoading & & ! init ) { < nl > return ; < nl > - } else { < nl > - lastCallback = callback ; < nl > } < nl > < nl > if ( init ) { < nl > + if ( lastRequest ! = - 1 ) { < nl > + cancelRequest ( lastRequest ) ; < nl > + } < nl > nextOffset = null ; < nl > } < nl > < nl > isLoading = true ; < nl > < nl > Log . d ( TAG , " Loading archived dialogs " ) ; < nl > - < nl > - request ( new RequestLoadArchived ( nextOffset , LIMIT ) , < nl > + lastRequest = request ( new RequestLoadArchived ( nextOffset , LIMIT ) , < nl > new RpcCallback < ResponseLoadArchived > ( ) { < nl > @ Override < nl > public void onResult ( ResponseLoadArchived response ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java 
 index 24fb486 . . 01c9c64 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java 
 @ @ - 38 , 18 + 38 , 18 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 / / 
 / / notify old callback replaced 
 / / 
 - if ( lastCallback ! = null ) { 
 + if ( lastCallback ! = null ) { 
 lastCallback . onError ( new RpcException ( TAG , 0 , " callback replaced " , false , null ) ) ; 
 } 
 } 
 lastCallback = callback ; 
 
 - if ( isLoading & & ! init ) { 
 + if ( isLoading & & ! init ) { 
 return ; 
 } 
 
 - if ( init ) { 
 - if ( lastRequest ! = - 1 ) { 
 + if ( init ) { 
 + if ( lastRequest ! = - 1 ) { 
 cancelRequest ( lastRequest ) ; 
 } 
 nextOffset = null ; 
 @ @ - 96 , 6 + 96 , 7 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 public static class LoadMore { 
 RpcCallback < ResponseLoadArchived > callback ; 
 boolean init ; 
 + 
 public LoadMore ( boolean init , RpcCallback < ResponseLoadArchived > callback ) { 
 this . callback = callback ; 
 this . init = init ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java 
 index 05bd68f . . f90f5f7 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / webrtc / AndroidPeerConnection . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import im . actor . runtime . webrtc . WebRTCSettings ; 
 public class AndroidPeerConnection implements WebRTCPeerConnection { 
 
 private static final boolean LIBJINGLE _ LOGS = false ; 
 + public static final String TAG = " AndroidPeerConnection " ; 
 
 public AndroidPeerConnection ( WebRTCIceServer [ ] webRTCIceServers , WebRTCSettings settings ) { 
 
 @ @ - 41 , 11 + 42 , 18 @ @ public class AndroidPeerConnection implements WebRTCPeerConnection { 
 } 
 
 ArrayList < PeerConnection . IceServer > servers = new ArrayList < > ( ) ; 
 + PeerConnection . IceServer ice ; 
 for ( WebRTCIceServer webRTCIceServer : webRTCIceServers ) { 
 - servers . add ( new PeerConnection . IceServer ( 
 - webRTCIceServer . getUrl ( ) , 
 - webRTCIceServer . getUsername ( ) , 
 - webRTCIceServer . getCredential ( ) ) ) ; 
 + if ( webRTCIceServer . getUsername ( ) ! = null ) { 
 + ice = new PeerConnection . IceServer ( 
 + webRTCIceServer . getUrl ( ) , 
 + webRTCIceServer . getUsername ( ) , 
 + webRTCIceServer . getCredential ( ) = = null ? " " : webRTCIceServer . getCredential ( ) ) ; 
 + } else { 
 + ice = new PeerConnection . IceServer ( webRTCIceServer . getUrl ( ) ) ; 
 + } 
 + servers . add ( ice ) ; 
 + 
 } 
 this . peerConnection = AndroidWebRTCRuntimeProvider . FACTORY . createPeerConnection ( servers , new MediaConstraints ( ) , new PeerConnection . Observer ( ) { 
 @ Override

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java 
 index bd49f7e . . a071446 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ArchivedDialogsActor . java 
 @ @ - 19 , 13 + 19 , 13 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 
 private static final int LIMIT = 20 ; 
 
 - private static final String KEY _ LOADED _ OFFSET = " archived _ dialogs _ offset " ; 
 
 private byte [ ] nextOffset ; 
 
 private boolean isLoading = false ; 
 
 RpcCallback < ResponseLoadArchived > lastCallback ; 
 + private long lastRequest = - 1 ; 
 
 public ArchivedDialogsActor ( ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 33 , 27 + 33 , 30 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 
 private void onLoadMore ( boolean init , RpcCallback < ResponseLoadArchived > callback ) { 
 
 - if ( isLoading ) { 
 + if ( init | | isLoading ) { 
 
 / / 
 - / / replace old callback 
 + / / notify old callback replaced 
 / / 
 lastCallback . onError ( new RpcException ( TAG , 0 , " callback replaced " , false , null ) ) ; 
 - lastCallback = callback ; 
 + } 
 + lastCallback = callback ; 
 + 
 + if ( isLoading & & ! init ) { 
 return ; 
 - } else { 
 - lastCallback = callback ; 
 } 
 
 if ( init ) { 
 + if ( lastRequest ! = - 1 ) { 
 + cancelRequest ( lastRequest ) ; 
 + } 
 nextOffset = null ; 
 } 
 
 isLoading = true ; 
 
 Log . d ( TAG , " Loading archived dialogs " ) ; 
 - 
 - request ( new RequestLoadArchived ( nextOffset , LIMIT ) , 
 + lastRequest = request ( new RequestLoadArchived ( nextOffset , LIMIT ) , 
 new RpcCallback < ResponseLoadArchived > ( ) { 
 @ Override 
 public void onResult ( ResponseLoadArchived response ) {
