BLEU SCORE: 0.1092329990819115

TEST MSG: fix ( core ) : serialize inMaxMessageDate
GENERATED MSG: feat ( android ) : add / remove reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index edae9ae . . f20f359 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 5 , 6 + 5 , 7 @ @ import android . graphics . PorterDuff ; < nl > import android . os . Bundle ; < nl > import android . support . multidex . MultiDex ; < nl > import android . support . v4 . app . Fragment ; < nl > + import android . text . Spannable ; < nl > import android . view . LayoutInflater ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > @ @ - 102 , 7 + 103 , 14 @ @ public class Application extends ActorSDKApplication { < nl > @ Override < nl > public void configureChatViewHolders ( ArrayList < BubbleLayouter > layouters ) { < nl > / / layouters . add ( 0 , new BubbleTextHolderLayouter ( ) ) ; < nl > - layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , CensoredTextHolderEx : : new ) ) ; < nl > + layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , ( adapter2 , root2 , peer2 ) - > new TextHolder ( adapter2 , root2 , peer2 ) { < nl > + @ Override < nl > + public void bindRawText ( CharSequence rawText , long readDate , long receiveDate , Spannable reactions , Message message , boolean isItalic ) { < nl > + super . bindRawText ( rawText , readDate , receiveDate , reactions , message , isItalic ) ; < nl > + text . append ( " \ n \ n " + message . getSortDate ( ) ) ; < nl > + } < nl > + } ) ) ; < nl > + / / layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , CensoredTextHolderEx : : new ) ) ; < nl > layouters . add ( 0 , new XmlBubbleLayouter ( content - > content instanceof PhotoContent , R . layout . adapter _ dialog _ photo , ( adapter1 , root1 , peer1 ) - > new PhotoHolder ( adapter1 , root1 , peer1 ) { < nl > @ Override < nl > protected void onConfigureViewHolder ( ) { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > index 6c13c89 . . 16b41d5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > @ @ - 64 , 7 + 64 , 6 @ @ < nl > < activity < nl > android : name = " . controllers . root . RootActivity " < nl > android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " < nl > - android : label = " @ string / app _ name " < nl > android : launchMode = " singleTop " < nl > android : theme = " @ style / MainActivityTheme " < nl > android : windowSoftInputMode = " adjustPan " > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index 6e8f199 . . bfe453f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 202 , 7 + 202 , 7 @ @ public abstract class MessagesFragment extends DisplayListFragment < Message , AbsM < nl > isUnreadLoaded = true ; < nl > < nl > / / If don ' t have unread message date : nothing to do < nl > - if ( firstUnread = = 0 ) { < nl > + if ( firstUnread < = 0 ) { < nl > return ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java < nl > index 05fd6b0 . . 83e4584 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java < nl > @ @ - 135 , 6 + 135 , 7 @ @ public class ConversationState extends BserObject implements KeyValueItem { < nl > outReadDate = values . getLong ( 5 , 0 ) ; < nl > unreadCount = values . getInt ( 6 ) ; < nl > outSendDate = values . getLong ( 7 , 0 ) ; < nl > + inMaxMessageDate = values . getLong ( 9 , 0 ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 147 , 6 + 148 , 7 @ @ public class ConversationState extends BserObject implements KeyValueItem { < nl > writer . writeLong ( 5 , outReadDate ) ; < nl > writer . writeInt ( 6 , unreadCount ) ; < nl > writer . writeLong ( 7 , outSendDate ) ; < nl > + writer . writeLong ( 9 , inMaxMessageDate ) ; < nl > } < nl > < nl > @ Override
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > index 692b43e . . 40e59cf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { < nl > < nl > private static final String TAG = " LinearLayoutManager " ; < nl > < nl > - private static final boolean DEBUG = true ; < nl > + private static final boolean DEBUG = false ; < nl > < nl > public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 7c42967 . . f8ee6ef 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > new file mode 100644 < nl > index 0000000 . . abfa92c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . graphics . Color ; < nl > + import android . graphics . Typeface ; < nl > + import android . text . TextPaint ; < nl > + import android . view . View ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > + < nl > + public class ReactionSpan extends BaseUrlSpan { < nl > + < nl > + boolean hasMyReaction ; < nl > + Peer peer ; < nl > + long rid ; < nl > + String code ; < nl > + < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + super ( code , false ) ; < nl > + this . code = code ; < nl > + this . hasMyReaction = hasMyReaction ; < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + } < nl > + < nl > + @ Override < nl > + public void updateDrawState ( TextPaint ds ) { < nl > + super . updateDrawState ( ds ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setUnderlineText ( false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( View widget ) { < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1a7465a . . 1c0ce2f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { < nl > timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > } < nl > time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > - < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index edae9ae . . f20f359 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import android . graphics . PorterDuff ; 
 import android . os . Bundle ; 
 import android . support . multidex . MultiDex ; 
 import android . support . v4 . app . Fragment ; 
 + import android . text . Spannable ; 
 import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 @ @ - 102 , 7 + 103 , 14 @ @ public class Application extends ActorSDKApplication { 
 @ Override 
 public void configureChatViewHolders ( ArrayList < BubbleLayouter > layouters ) { 
 / / layouters . add ( 0 , new BubbleTextHolderLayouter ( ) ) ; 
 - layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , CensoredTextHolderEx : : new ) ) ; 
 + layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , ( adapter2 , root2 , peer2 ) - > new TextHolder ( adapter2 , root2 , peer2 ) { 
 + @ Override 
 + public void bindRawText ( CharSequence rawText , long readDate , long receiveDate , Spannable reactions , Message message , boolean isItalic ) { 
 + super . bindRawText ( rawText , readDate , receiveDate , reactions , message , isItalic ) ; 
 + text . append ( " \ n \ n " + message . getSortDate ( ) ) ; 
 + } 
 + } ) ) ; 
 + / / layouters . add ( 0 , new DefaultLayouter ( DefaultLayouter . TEXT _ HOLDER , CensoredTextHolderEx : : new ) ) ; 
 layouters . add ( 0 , new XmlBubbleLayouter ( content - > content instanceof PhotoContent , R . layout . adapter _ dialog _ photo , ( adapter1 , root1 , peer1 ) - > new PhotoHolder ( adapter1 , root1 , peer1 ) { 
 @ Override 
 protected void onConfigureViewHolder ( ) { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 index 6c13c89 . . 16b41d5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 @ @ - 64 , 7 + 64 , 6 @ @ 
 < activity 
 android : name = " . controllers . root . RootActivity " 
 android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " 
 - android : label = " @ string / app _ name " 
 android : launchMode = " singleTop " 
 android : theme = " @ style / MainActivityTheme " 
 android : windowSoftInputMode = " adjustPan " > 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index 6e8f199 . . bfe453f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 202 , 7 + 202 , 7 @ @ public abstract class MessagesFragment extends DisplayListFragment < Message , AbsM 
 isUnreadLoaded = true ; 
 
 / / If don ' t have unread message date : nothing to do 
 - if ( firstUnread = = 0 ) { 
 + if ( firstUnread < = 0 ) { 
 return ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java 
 index 05fd6b0 . . 83e4584 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / ConversationState . java 
 @ @ - 135 , 6 + 135 , 7 @ @ public class ConversationState extends BserObject implements KeyValueItem { 
 outReadDate = values . getLong ( 5 , 0 ) ; 
 unreadCount = values . getInt ( 6 ) ; 
 outSendDate = values . getLong ( 7 , 0 ) ; 
 + inMaxMessageDate = values . getLong ( 9 , 0 ) ; 
 } 
 
 @ Override 
 @ @ - 147 , 6 + 148 , 7 @ @ public class ConversationState extends BserObject implements KeyValueItem { 
 writer . writeLong ( 5 , outReadDate ) ; 
 writer . writeInt ( 6 , unreadCount ) ; 
 writer . writeLong ( 7 , outSendDate ) ; 
 + writer . writeLong ( 9 , inMaxMessageDate ) ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 index 692b43e . . 40e59cf 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { 
 
 private static final String TAG = " LinearLayoutManager " ; 
 
 - private static final boolean DEBUG = true ; 
 + private static final boolean DEBUG = false ; 
 
 public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 7c42967 . . f8ee6ef 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 new file mode 100644 
 index 0000000 . . abfa92c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . graphics . Color ; 
 + import android . graphics . Typeface ; 
 + import android . text . TextPaint ; 
 + import android . view . View ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 + 
 + public class ReactionSpan extends BaseUrlSpan { 
 + 
 + boolean hasMyReaction ; 
 + Peer peer ; 
 + long rid ; 
 + String code ; 
 + 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + super ( code , false ) ; 
 + this . code = code ; 
 + this . hasMyReaction = hasMyReaction ; 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + } 
 + 
 + @ Override 
 + public void updateDrawState ( TextPaint ds ) { 
 + super . updateDrawState ( ds ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setUnderlineText ( false ) ; 
 + } 
 + 
 + @ Override 
 + public void onClick ( View widget ) { 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1a7465a . . 1c0ce2f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { 
 timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 } 
 time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 - 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod {
