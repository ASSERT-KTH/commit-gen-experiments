BLEU SCORE: 0.18207052811092136

TEST MSG: feat ( js ) : Upgrade to GWT 2 . 8 . 0 - beta
GENERATED MSG: fix ( js ) : Fixing search binding and built - in interval . js

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / build . gradle b / actor - sdk / sdk - core / core / core - js / build . gradle < nl > index 742d0a7 . . b0cd492 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / build . gradle < nl > + + + b / actor - sdk / sdk - core / core / core - js / build . gradle < nl > @ @ - 8 , 7 + 8 , 7 @ @ apply plugin : ' war ' < nl > apply plugin : ' gwt ' < nl > < nl > gwt { < nl > - gwtVersion = ' 2 . 7 . 0 ' < nl > + gwtVersion = ' 2 . 8 . 0 - beta1 ' < nl > modules ' im . actor . ActorCore ' < nl > devModules ' im . actor . ActorCoreDev ' < nl > < nl > @ @ - 40 , 7 + 40 , 7 @ @ dependencies { < nl > gwt ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' < nl > < nl > / / Hack for IntelliJ IDEA < nl > - providedCompile ' com . google . gwt : gwt - user : 2 . 7 . 0 ' < nl > + providedCompile ' com . google . gwt : gwt - user : 2 . 8 . 0 - beta1 ' < nl > providedCompile ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java < nl > index 6e02ff1 . . 65221f2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java < nl > @ @ - 38 , 18 + 38 , 13 @ @ public class JsFilesModule extends AbsModule { < nl > < nl > private ActorRef urlLoader ; < nl > private BaseKeyValueEngine < CachedFileUrl > keyValueStorage ; < nl > - private HashSet < Long > requestedFiles = new HashSet < Long > ( ) ; < nl > - private ArrayList < JsFileLoadedListener > listeners = new ArrayList < JsFileLoadedListener > ( ) ; < nl > + private HashSet < Long > requestedFiles = new HashSet < > ( ) ; < nl > + private ArrayList < JsFileLoadedListener > listeners = new ArrayList < > ( ) ; < nl > < nl > public JsFilesModule ( final Modules modules ) { < nl > super ( modules ) ; < nl > < nl > - urlLoader = system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public FileBinderActor create ( ) { < nl > - return new FileBinderActor ( JsFilesModule . this , modules ) ; < nl > - } < nl > - } ) , " files / url _ loader " ) ; < nl > + urlLoader = system ( ) . actorOf ( " files / url _ loader " , ( ) - > new FileBinderActor ( JsFilesModule . this , modules ) ) ; < nl > < nl > keyValueStorage = new BaseKeyValueEngine < CachedFileUrl > ( Storage . createKeyValue ( " file _ url _ cache " ) ) { < nl > < nl > @ @ - 119 , 8 + 114 , 8 @ @ public class JsFilesModule extends AbsModule { < nl > } < nl > < nl > private void onFileUrlLoaded ( ArrayList < FileResponse > responses ) { < nl > - HashSet < Long > ids = new HashSet < Long > ( ) ; < nl > - ArrayList < CachedFileUrl > cachedFileUrls = new ArrayList < CachedFileUrl > ( ) ; < nl > + HashSet < Long > ids = new HashSet < > ( ) ; < nl > + ArrayList < CachedFileUrl > cachedFileUrls = new ArrayList < > ( ) ; < nl > for ( FileResponse r : responses ) { < nl > ids . add ( r . getId ( ) ) ; < nl > requestedFiles . remove ( r . getId ( ) ) ; < nl > @ @ - 141 , 7 + 136 , 7 @ @ public class JsFilesModule extends AbsModule { < nl > < nl > private boolean isLoading = false ; < nl > private JsFilesModule filesModule ; < nl > - private ArrayList < FileRequest > filesQueue = new ArrayList < FileRequest > ( ) ; < nl > + private ArrayList < FileRequest > filesQueue = new ArrayList < > ( ) ; < nl > private Cancellable performCancellable ; < nl > < nl > public FileBinderActor ( JsFilesModule filesModule , ModuleContext context ) { < nl > @ @ - 167 , 7 + 162 , 7 @ @ public class JsFilesModule extends AbsModule { < nl > if ( isLoading ) { < nl > return ; < nl > } < nl > - ArrayList < ApiFileLocation > fileLocations = new ArrayList < ApiFileLocation > ( ) ; < nl > + ArrayList < ApiFileLocation > fileLocations = new ArrayList < > ( ) ; < nl > for ( int i = 0 ; i < MAX _ FILE _ SIZE & & filesQueue . size ( ) > 0 ; i + + ) { < nl > FileRequest request = filesQueue . remove ( 0 ) ; < nl > fileLocations . add ( new ApiFileLocation ( request . getId ( ) , < nl > @ @ - 184 , 7 + 179 , 7 @ @ public class JsFilesModule extends AbsModule { < nl > < nl > / / Converting result < nl > long currentTime = im . actor . runtime . Runtime . getCurrentSyncedTime ( ) ; < nl > - ArrayList < FileResponse > responses = new ArrayList < FileResponse > ( ) ; < nl > + ArrayList < FileResponse > responses = new ArrayList < > ( ) ; < nl > for ( ApiFileUrlDescription u : response . getFileUrls ( ) ) { < nl > long urlTime = currentTime + u . getTimeout ( ) * 1000L ; < nl > responses . add ( new FileResponse ( u . getFileId ( ) , u . getUrl ( ) , < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 274642e . . 8364a95 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 21 , 10 + 21 , 10 @ @ import im . actor . runtime . power . WakeLock ; < nl > < nl > public class CallManagerActor extends ModuleActor { < nl > < nl > - public static Constructor < CallManagerActor > CONSTRUCTOR ( final ModuleContext context ) { < nl > - return new Constructor < CallManagerActor > ( ) { < nl > + public static ActorCreator CONSTRUCTOR ( final ModuleContext context ) { < nl > + return new ActorCreator ( ) { < nl > @ Override < nl > - public CallManagerActor create ( ) { < nl > + public Actor create ( ) { < nl > return new CallManagerActor ( context ) ; < nl > } < nl > } ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > index b2a3ea8 . . a067b8a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > @ @ - 24 , 6 + 24 , 8 @ @ import im . actor . core . network . RpcException ; < nl > import im . actor . core . modules . ModuleActor ; < nl > import im . actor . runtime . * ; < nl > import im . actor . runtime . Runtime ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . Cancellable ; < nl > import im . actor . runtime . function . Constructor ; < nl > import im . actor . runtime . function . Consumer ; < nl > @ @ - 31 , 10 + 33 , 10 @ @ import im . actor . runtime . power . WakeLock ; < nl > < nl > public class SequenceActor extends ModuleActor { < nl > < nl > - public static Constructor < SequenceActor > CONSTRUCTOR ( final ModuleContext context ) { < nl > - return new Constructor < SequenceActor > ( ) { < nl > + public static ActorCreator CONSTRUCTOR ( final ModuleContext context ) { < nl > + return new ActorCreator ( ) { < nl > @ Override < nl > - public SequenceActor create ( ) { < nl > + public Actor create ( ) { < nl > return new SequenceActor ( context ) ; < nl > } < nl > } ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / build . gradle b / actor - sdk / sdk - core / runtime / runtime - js / build . gradle < nl > index f10d46a . . a60c47e 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / build . gradle < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / build . gradle < nl > @ @ - 8 , 7 + 8 , 7 @ @ apply plugin : ' war ' < nl > apply plugin : ' gwt ' < nl > < nl > gwt { < nl > - gwtVersion = ' 2 . 7 . 0 ' < nl > + gwtVersion = ' 2 . 8 . 0 - beta1 ' < nl > modules ' im . actor . ActorRuntime ' < nl > < nl > compiler { < nl > @ @ - 35 , 6 + 35 , 6 @ @ dependencies { < nl > gwt ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' < nl > < nl > / / Hack for IntelliJ IDEA < nl > - providedCompile ' com . google . gwt : gwt - user : 2 . 7 . 0 ' < nl > + providedCompile ' com . google . gwt : gwt - user : 2 . 8 . 0 - beta1 ' < nl > providedCompile ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java < nl > index 61af537 . . 8a491fe 100755 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java < nl > @ @ - 120 , 14 + 120 , 14 @ @ public class ActorSystem { < nl > . changeSupervisor ( supervisor ) , path ) ; < nl > } < nl > < nl > - public ActorRef actorOf ( String path , final Constructor < ? extends Actor > constructor ) { < nl > - return actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public Actor create ( ) { < nl > - return constructor . create ( ) ; < nl > - } < nl > - } ) , path ) ; < nl > - } < nl > + / / public ActorRef actorOf ( String path , final Constructor < ? extends Actor > constructor ) { < nl > + / / return actorOf ( Props . create ( new ActorCreator ( ) { < nl > + / / @ Override < nl > + / / public Actor create ( ) { < nl > + / / return constructor . create ( ) ; < nl > + / / } < nl > + / / } ) , path ) ; < nl > + / / } < nl > < nl > public ActorRef actorOf ( String path , String dispatcher , ActorCreator creator ) { < nl > return actorOf ( Props . create ( creator ) . changeDispatcher ( dispatcher ) , path ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > index 6572049 . . 093e3a5 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java < nl > @ @ - 38 , 6 + 38 , 7 @ @ import im . actor . core . network . RpcCallback ; < nl > import im . actor . core . network . RpcException ; < nl > import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . Storage ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > @ @ - 119 , 7 + 120 , 7 @ @ public class SearchModule extends AbsModule { < nl > updates ( ) . executeRelatedResponse ( response . getUsers ( ) , response . getGroups ( ) , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > - ArrayList < MessageSearchEntity > res = new ArrayList < MessageSearchEntity > ( ) ; < nl > + final ArrayList < MessageSearchEntity > res = new ArrayList < MessageSearchEntity > ( ) ; < nl > for ( ApiMessageSearchItem r : response . getSearchResults ( ) ) { < nl > ApiMessageSearchResult itm = r . getResult ( ) ; < nl > try { < nl > @ @ - 131 , 6 + 132 , 12 @ @ public class SearchModule extends AbsModule { < nl > e . printStackTrace ( ) ; < nl > } < nl > } < nl > + runOnUiThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onResult ( res ) ; < nl > + } < nl > + } ) ; < nl > } < nl > } ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java < nl > index e5a9f75 . . fb14eb8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java < nl > @ @ - 125 , 7 + 125 , 7 @ @ public class SequenceActor extends ModuleActor { < nl > pendingRunnables . add ( after ) ; < nl > } < nl > return ; < nl > - } else if ( u instanceof PushSeq ) { < nl > + } else if ( u instanceof PushSeq ) { < nl > PushSeq pushSeq = ( PushSeq ) u ; < nl > if ( pushSeq . seq < = this . seq ) { < nl > Log . d ( TAG , " Ignored PushSeq { seq : " + pushSeq . seq + " } " ) ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java < nl > index 7769a62 . . 4beb2dc 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java < nl > @ @ - 11 , 12 + 11 , 42 @ @ import com . google . gwt . core . client . JavaScriptObject ; < nl > * that work in background tabs < nl > * / < nl > public class JsSecureInterval extends JavaScriptObject { < nl > + < nl > public static native JsSecureInterval create ( Runnable runnable ) / * - { < nl > console . warn ( " Create jsSecureInverval " ) < nl > try { < nl > if ( typeof ( Worker ) ! = = " undefined " ) { < nl > - var worker = new Worker ( " interval . js " ) ; < nl > + < nl > + var code = " var timerId ; \ n " + < nl > + " \ n " + < nl > + " self . addEventListener ( ' message ' , function ( e ) { \ n " + < nl > + " switch ( e . data . message ) { \ n " + < nl > + " case ' schedule ' : \ n " + < nl > + " if ( timerId ) { \ n " + < nl > + " clearTimeout ( timerId ) ; \ n " + < nl > + " timerId = null ; \ n " + < nl > + " } \ n " + < nl > + " timerId = setTimeout ( function ( ) { \ n " + < nl > + " self . postMessage ( ' doSchedule ' ) ; \ n " + < nl > + " } , e . data . delay ) ; \ n " + < nl > + " break ; \ n " + < nl > + " case ' cancel ' : \ n " + < nl > + " if ( timerId ) { \ n " + < nl > + " clearTimeout ( timerId ) ; \ n " + < nl > + " timerId = null ; \ n " + < nl > + " } \ n " + < nl > + " break ; \ n " + < nl > + " } ; \ n " + < nl > + " } ) ; \ n " < nl > + < nl > + var codeBlob = new Blob ( [ code ] ) ; < nl > + var codeBlobURL = window . URL . createObjectURL ( codeBlob ) ; < nl > + < nl > + var worker = new Worker ( codeBlobURL ) ; < nl > var _ runnable = runnable ; < nl > + worker . addEventListener ( ' error ' , function ( ) { < nl > + console . warn ( " Worker error " ) < nl > + } , false ) ; < nl > worker . onmessage = function ( ) { < nl > _ runnable . @ java . lang . Runnable : : run ( ) ( ) ; < nl > } ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / build . gradle b / actor - sdk / sdk - core / core / core - js / build . gradle 
 index 742d0a7 . . b0cd492 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / build . gradle 
 + + + b / actor - sdk / sdk - core / core / core - js / build . gradle 
 @ @ - 8 , 7 + 8 , 7 @ @ apply plugin : ' war ' 
 apply plugin : ' gwt ' 
 
 gwt { 
 - gwtVersion = ' 2 . 7 . 0 ' 
 + gwtVersion = ' 2 . 8 . 0 - beta1 ' 
 modules ' im . actor . ActorCore ' 
 devModules ' im . actor . ActorCoreDev ' 
 
 @ @ - 40 , 7 + 40 , 7 @ @ dependencies { 
 gwt ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' 
 
 / / Hack for IntelliJ IDEA 
 - providedCompile ' com . google . gwt : gwt - user : 2 . 7 . 0 ' 
 + providedCompile ' com . google . gwt : gwt - user : 2 . 8 . 0 - beta1 ' 
 providedCompile ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java 
 index 6e02ff1 . . 65221f2 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsFilesModule . java 
 @ @ - 38 , 18 + 38 , 13 @ @ public class JsFilesModule extends AbsModule { 
 
 private ActorRef urlLoader ; 
 private BaseKeyValueEngine < CachedFileUrl > keyValueStorage ; 
 - private HashSet < Long > requestedFiles = new HashSet < Long > ( ) ; 
 - private ArrayList < JsFileLoadedListener > listeners = new ArrayList < JsFileLoadedListener > ( ) ; 
 + private HashSet < Long > requestedFiles = new HashSet < > ( ) ; 
 + private ArrayList < JsFileLoadedListener > listeners = new ArrayList < > ( ) ; 
 
 public JsFilesModule ( final Modules modules ) { 
 super ( modules ) ; 
 
 - urlLoader = system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public FileBinderActor create ( ) { 
 - return new FileBinderActor ( JsFilesModule . this , modules ) ; 
 - } 
 - } ) , " files / url _ loader " ) ; 
 + urlLoader = system ( ) . actorOf ( " files / url _ loader " , ( ) - > new FileBinderActor ( JsFilesModule . this , modules ) ) ; 
 
 keyValueStorage = new BaseKeyValueEngine < CachedFileUrl > ( Storage . createKeyValue ( " file _ url _ cache " ) ) { 
 
 @ @ - 119 , 8 + 114 , 8 @ @ public class JsFilesModule extends AbsModule { 
 } 
 
 private void onFileUrlLoaded ( ArrayList < FileResponse > responses ) { 
 - HashSet < Long > ids = new HashSet < Long > ( ) ; 
 - ArrayList < CachedFileUrl > cachedFileUrls = new ArrayList < CachedFileUrl > ( ) ; 
 + HashSet < Long > ids = new HashSet < > ( ) ; 
 + ArrayList < CachedFileUrl > cachedFileUrls = new ArrayList < > ( ) ; 
 for ( FileResponse r : responses ) { 
 ids . add ( r . getId ( ) ) ; 
 requestedFiles . remove ( r . getId ( ) ) ; 
 @ @ - 141 , 7 + 136 , 7 @ @ public class JsFilesModule extends AbsModule { 
 
 private boolean isLoading = false ; 
 private JsFilesModule filesModule ; 
 - private ArrayList < FileRequest > filesQueue = new ArrayList < FileRequest > ( ) ; 
 + private ArrayList < FileRequest > filesQueue = new ArrayList < > ( ) ; 
 private Cancellable performCancellable ; 
 
 public FileBinderActor ( JsFilesModule filesModule , ModuleContext context ) { 
 @ @ - 167 , 7 + 162 , 7 @ @ public class JsFilesModule extends AbsModule { 
 if ( isLoading ) { 
 return ; 
 } 
 - ArrayList < ApiFileLocation > fileLocations = new ArrayList < ApiFileLocation > ( ) ; 
 + ArrayList < ApiFileLocation > fileLocations = new ArrayList < > ( ) ; 
 for ( int i = 0 ; i < MAX _ FILE _ SIZE & & filesQueue . size ( ) > 0 ; i + + ) { 
 FileRequest request = filesQueue . remove ( 0 ) ; 
 fileLocations . add ( new ApiFileLocation ( request . getId ( ) , 
 @ @ - 184 , 7 + 179 , 7 @ @ public class JsFilesModule extends AbsModule { 
 
 / / Converting result 
 long currentTime = im . actor . runtime . Runtime . getCurrentSyncedTime ( ) ; 
 - ArrayList < FileResponse > responses = new ArrayList < FileResponse > ( ) ; 
 + ArrayList < FileResponse > responses = new ArrayList < > ( ) ; 
 for ( ApiFileUrlDescription u : response . getFileUrls ( ) ) { 
 long urlTime = currentTime + u . getTimeout ( ) * 1000L ; 
 responses . add ( new FileResponse ( u . getFileId ( ) , u . getUrl ( ) , 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 274642e . . 8364a95 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 21 , 10 + 21 , 10 @ @ import im . actor . runtime . power . WakeLock ; 
 
 public class CallManagerActor extends ModuleActor { 
 
 - public static Constructor < CallManagerActor > CONSTRUCTOR ( final ModuleContext context ) { 
 - return new Constructor < CallManagerActor > ( ) { 
 + public static ActorCreator CONSTRUCTOR ( final ModuleContext context ) { 
 + return new ActorCreator ( ) { 
 @ Override 
 - public CallManagerActor create ( ) { 
 + public Actor create ( ) { 
 return new CallManagerActor ( context ) ; 
 } 
 } ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 index b2a3ea8 . . a067b8a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 @ @ - 24 , 6 + 24 , 8 @ @ import im . actor . core . network . RpcException ; 
 import im . actor . core . modules . ModuleActor ; 
 import im . actor . runtime . * ; 
 import im . actor . runtime . Runtime ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . Cancellable ; 
 import im . actor . runtime . function . Constructor ; 
 import im . actor . runtime . function . Consumer ; 
 @ @ - 31 , 10 + 33 , 10 @ @ import im . actor . runtime . power . WakeLock ; 
 
 public class SequenceActor extends ModuleActor { 
 
 - public static Constructor < SequenceActor > CONSTRUCTOR ( final ModuleContext context ) { 
 - return new Constructor < SequenceActor > ( ) { 
 + public static ActorCreator CONSTRUCTOR ( final ModuleContext context ) { 
 + return new ActorCreator ( ) { 
 @ Override 
 - public SequenceActor create ( ) { 
 + public Actor create ( ) { 
 return new SequenceActor ( context ) ; 
 } 
 } ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / build . gradle b / actor - sdk / sdk - core / runtime / runtime - js / build . gradle 
 index f10d46a . . a60c47e 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / build . gradle 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / build . gradle 
 @ @ - 8 , 7 + 8 , 7 @ @ apply plugin : ' war ' 
 apply plugin : ' gwt ' 
 
 gwt { 
 - gwtVersion = ' 2 . 7 . 0 ' 
 + gwtVersion = ' 2 . 8 . 0 - beta1 ' 
 modules ' im . actor . ActorRuntime ' 
 
 compiler { 
 @ @ - 35 , 6 + 35 , 6 @ @ dependencies { 
 gwt ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' 
 
 / / Hack for IntelliJ IDEA 
 - providedCompile ' com . google . gwt : gwt - user : 2 . 7 . 0 ' 
 + providedCompile ' com . google . gwt : gwt - user : 2 . 8 . 0 - beta1 ' 
 providedCompile ' org . timepedia . exporter : gwtexporter : 2 . 4 . 0 ' 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java 
 index 61af537 . . 8a491fe 100755 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / ActorSystem . java 
 @ @ - 120 , 14 + 120 , 14 @ @ public class ActorSystem { 
 . changeSupervisor ( supervisor ) , path ) ; 
 } 
 
 - public ActorRef actorOf ( String path , final Constructor < ? extends Actor > constructor ) { 
 - return actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public Actor create ( ) { 
 - return constructor . create ( ) ; 
 - } 
 - } ) , path ) ; 
 - } 
 + / / public ActorRef actorOf ( String path , final Constructor < ? extends Actor > constructor ) { 
 + / / return actorOf ( Props . create ( new ActorCreator ( ) { 
 + / / @ Override 
 + / / public Actor create ( ) { 
 + / / return constructor . create ( ) ; 
 + / / } 
 + / / } ) , path ) ; 
 + / / } 
 
 public ActorRef actorOf ( String path , String dispatcher , ActorCreator creator ) { 
 return actorOf ( Props . create ( creator ) . changeDispatcher ( dispatcher ) , path ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 index 6572049 . . 093e3a5 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / SearchModule . java 
 @ @ - 38 , 6 + 38 , 7 @ @ import im . actor . core . network . RpcCallback ; 
 import im . actor . core . network . RpcException ; 
 import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . Storage ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 @ @ - 119 , 7 + 120 , 7 @ @ public class SearchModule extends AbsModule { 
 updates ( ) . executeRelatedResponse ( response . getUsers ( ) , response . getGroups ( ) , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - ArrayList < MessageSearchEntity > res = new ArrayList < MessageSearchEntity > ( ) ; 
 + final ArrayList < MessageSearchEntity > res = new ArrayList < MessageSearchEntity > ( ) ; 
 for ( ApiMessageSearchItem r : response . getSearchResults ( ) ) { 
 ApiMessageSearchResult itm = r . getResult ( ) ; 
 try { 
 @ @ - 131 , 6 + 132 , 12 @ @ public class SearchModule extends AbsModule { 
 e . printStackTrace ( ) ; 
 } 
 } 
 + runOnUiThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onResult ( res ) ; 
 + } 
 + } ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java 
 index e5a9f75 . . fb14eb8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / SequenceActor . java 
 @ @ - 125 , 7 + 125 , 7 @ @ public class SequenceActor extends ModuleActor { 
 pendingRunnables . add ( after ) ; 
 } 
 return ; 
 - } else if ( u instanceof PushSeq ) { 
 + } else if ( u instanceof PushSeq ) { 
 PushSeq pushSeq = ( PushSeq ) u ; 
 if ( pushSeq . seq < = this . seq ) { 
 Log . d ( TAG , " Ignored PushSeq { seq : " + pushSeq . seq + " } " ) ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java 
 index 7769a62 . . 4beb2dc 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsSecureInterval . java 
 @ @ - 11 , 12 + 11 , 42 @ @ import com . google . gwt . core . client . JavaScriptObject ; 
 * that work in background tabs 
 * / 
 public class JsSecureInterval extends JavaScriptObject { 
 + 
 public static native JsSecureInterval create ( Runnable runnable ) / * - { 
 console . warn ( " Create jsSecureInverval " ) 
 try { 
 if ( typeof ( Worker ) ! = = " undefined " ) { 
 - var worker = new Worker ( " interval . js " ) ; 
 + 
 + var code = " var timerId ; \ n " + 
 + " \ n " + 
 + " self . addEventListener ( ' message ' , function ( e ) { \ n " + 
 + " switch ( e . data . message ) { \ n " + 
 + " case ' schedule ' : \ n " + 
 + " if ( timerId ) { \ n " + 
 + " clearTimeout ( timerId ) ; \ n " + 
 + " timerId = null ; \ n " + 
 + " } \ n " + 
 + " timerId = setTimeout ( function ( ) { \ n " + 
 + " self . postMessage ( ' doSchedule ' ) ; \ n " + 
 + " } , e . data . delay ) ; \ n " + 
 + " break ; \ n " + 
 + " case ' cancel ' : \ n " + 
 + " if ( timerId ) { \ n " + 
 + " clearTimeout ( timerId ) ; \ n " + 
 + " timerId = null ; \ n " + 
 + " } \ n " + 
 + " break ; \ n " + 
 + " } ; \ n " + 
 + " } ) ; \ n " 
 + 
 + var codeBlob = new Blob ( [ code ] ) ; 
 + var codeBlobURL = window . URL . createObjectURL ( codeBlob ) ; 
 + 
 + var worker = new Worker ( codeBlobURL ) ; 
 var _ runnable = runnable ; 
 + worker . addEventListener ( ' error ' , function ( ) { 
 + console . warn ( " Worker error " ) 
 + } , false ) ; 
 worker . onmessage = function ( ) { 
 _ runnable . @ java . lang . Runnable : : run ( ) ( ) ; 
 } ;
