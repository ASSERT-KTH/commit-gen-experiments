BLEU SCORE: 0.08737167851715878

TEST MSG: chore ( server ) : get rid off webapp mention in config files
GENERATED MSG: refactor ( server : email ) : add load method to EmailConfig

TEST DIFF (one line): diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala < nl > index 282ecbb . . 4cede2c 100644 < nl > - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala < nl > + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala < nl > @ @ - 22 , 5 + 22 , 5 @ @ object HttpApiConfig { < nl > interface , port , scheme , host , staticFiles , keystore < nl > ) < nl > < nl > - def load : Try [ HttpApiConfig ] = load ( ActorConfig . load ( ) . getConfig ( " webapp " ) ) < nl > + def load : Try [ HttpApiConfig ] = load ( ActorConfig . load ( ) . getConfig ( " http " ) ) < nl > } < nl > diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > index fc924ff . . 446b2ee 100644 < nl > - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > @ @ - 96 , 7 + 96 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( < nl > val emailConfig = EmailConfig . load . get < nl > val gateConfig = GateConfig . load . get < nl > val groupInviteConfig = GroupInviteConfig . load ( serverConfig . getConfig ( " modules . messaging . groups . invite " ) ) < nl > - val webappConfig = HttpApiConfig . load ( serverConfig . getConfig ( " http " ) ) . toOption . get < nl > + val httpConfig = HttpApiConfig . load ( serverConfig . getConfig ( " http " ) ) . toOption . get < nl > val oauth2GoogleConfig = OAuth2GoogleConfig . load ( serverConfig . getConfig ( " services . google . oauth " ) ) < nl > val richMessageConfig = RichMessageConfig . load ( serverConfig . getConfig ( " modules . enricher " ) ) . get < nl > val sequenceConfig = SequenceServiceConfig . load ( ) . get < nl > @ @ - 213 , 7 + 213 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( < nl > val profileService = new ProfileServiceImpl < nl > < nl > system . log . debug ( " Starting IntegrationsService " ) < nl > - val integrationsService = new IntegrationsServiceImpl ( s " $ { webappConfig . scheme } : / / $ { webappConfig . host } " ) < nl > + val integrationsService = new IntegrationsServiceImpl ( s " $ { httpConfig . scheme } : / / $ { httpConfig . host } " ) < nl > < nl > system . log . debug ( " Starting WebactionsService " ) < nl > val webactionsService = new WebactionsServiceImpl < nl > diff - - git a / actor - server / src / docker / opt / docker / conf / server . conf b / actor - server / src / docker / opt / docker / conf / server . conf < nl > index 51e3e5e . . c4eada9 100644 < nl > - - - a / actor - server / src / docker / opt / docker / conf / server . conf < nl > + + + b / actor - server / src / docker / opt / docker / conf / server . conf < nl > @ @ - 26 , 7 + 26 , 7 @ @ services { < nl > } < nl > } < nl > < nl > - webapp { < nl > + http { < nl > static - files - directory : " / opt / docker / files " < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala < nl > index 8605d79 . . 450a59d 100644 < nl > - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala < nl > + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala < nl > @ @ - 1 , 5 + 1 , 7 @ @ < nl > package im . actor . server . email < nl > < nl > + import im . actor . config . ActorConfig < nl > + < nl > import scala . util . Try < nl > import com . github . kxbmap . configs . _ < nl > import com . typesafe . config . Config < nl > @ @ - 19 , 7 + 21 , 7 @ @ case class EmailConfig ( < nl > ) < nl > < nl > object EmailConfig { < nl > - def fromConfig ( config : Config ) : Try [ EmailConfig ] = < nl > + def load ( config : Config ) : Try [ EmailConfig ] = < nl > for { < nl > address ← config . get [ Try [ String ] ] ( " sender . address " ) < nl > name ← config . get [ Try [ String ] ] ( " sender . name " ) < nl > @ @ - 31 , 4 + 33 , 6 @ @ object EmailConfig { < nl > password ← config . get [ Try [ String ] ] ( " smtp . password " ) < nl > tls ← config . get [ Try [ Boolean ] ] ( " smtp . tls " ) < nl > } yield EmailConfig ( address , name , prefix , host , port , username , password , tls ) < nl > + < nl > + def load : Try [ EmailConfig ] = load ( ActorConfig . load ( ) . getConfig ( " services . email " ) ) < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala < nl > index cc16a1a . . 570329a 100644 < nl > - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala < nl > + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala < nl > @ @ - 13 , 6 + 13 , 11 @ @ case class Content ( html : Option [ String ] , text : Option [ String ] ) { < nl > require ( html . isDefined | | text . isDefined ) < nl > } < nl > < nl > + object Content { < nl > + def text ( text : String ) : Content = Content ( None , Some ( text ) ) < nl > + def html ( html : String ) : Content = Content ( Some ( html ) , None ) < nl > + } < nl > + < nl > case class Message ( to : String , subject : String , content : Content ) < nl > < nl > trait EmailSender { < nl > diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > index bfafb9c . . 7e95c52 100644 < nl > - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala < nl > @ @ - 91 , 7 + 91 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( < nl > < nl > / / FIXME : get rid of unsafe get ' s < nl > val activationConfig = ActivationConfig . load . get < nl > - val emailConfig = EmailConfig . fromConfig ( serverConfig . getConfig ( " services . email " ) ) . toOption . get < nl > + val emailConfig = EmailConfig . load . get < nl > val gateConfig = GateConfig . load . get < nl > val groupInviteConfig = GroupInviteConfig . load ( serverConfig . getConfig ( " modules . messaging . groups . invite " ) ) < nl > val webappConfig = HttpApiConfig . load ( serverConfig . getConfig ( " http " ) ) . toOption . get < nl > diff - - git a / actor - server / project / Build . scala b / actor - server / project / Build . scala < nl > index 40476af . . 3d86276 100644 < nl > - - - a / actor - server / project / Build . scala < nl > + + + b / actor - server / project / Build . scala < nl > @ @ - 168 , 6 + 168 , 7 @ @ object Build extends sbt . Build with Versioning with Releasing with Publishing { < nl > libraryDependencies + + = Dependencies . email < nl > ) < nl > ) < nl > + . dependsOn ( actorRuntime ) < nl > < nl > lazy val actorEnrich = Project ( < nl > id = " actor - enrich " ,

TEST DIFF:
diff - - git a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala 
 index 282ecbb . . 4cede2c 100644 
 - - - a / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala 
 + + + b / actor - server / actor - http - api / src / main / scala / im / actor / server / api / http / HttpApiConfig . scala 
 @ @ - 22 , 5 + 22 , 5 @ @ object HttpApiConfig { 
 interface , port , scheme , host , staticFiles , keystore 
 ) 
 
 - def load : Try [ HttpApiConfig ] = load ( ActorConfig . load ( ) . getConfig ( " webapp " ) ) 
 + def load : Try [ HttpApiConfig ] = load ( ActorConfig . load ( ) . getConfig ( " http " ) ) 
 } 
 diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 index fc924ff . . 446b2ee 100644 
 - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 @ @ - 96 , 7 + 96 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( 
 val emailConfig = EmailConfig . load . get 
 val gateConfig = GateConfig . load . get 
 val groupInviteConfig = GroupInviteConfig . load ( serverConfig . getConfig ( " modules . messaging . groups . invite " ) ) 
 - val webappConfig = HttpApiConfig . load ( serverConfig . getConfig ( " http " ) ) . toOption . get 
 + val httpConfig = HttpApiConfig . load ( serverConfig . getConfig ( " http " ) ) . toOption . get 
 val oauth2GoogleConfig = OAuth2GoogleConfig . load ( serverConfig . getConfig ( " services . google . oauth " ) ) 
 val richMessageConfig = RichMessageConfig . load ( serverConfig . getConfig ( " modules . enricher " ) ) . get 
 val sequenceConfig = SequenceServiceConfig . load ( ) . get 
 @ @ - 213 , 7 + 213 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( 
 val profileService = new ProfileServiceImpl 
 
 system . log . debug ( " Starting IntegrationsService " ) 
 - val integrationsService = new IntegrationsServiceImpl ( s " $ { webappConfig . scheme } : / / $ { webappConfig . host } " ) 
 + val integrationsService = new IntegrationsServiceImpl ( s " $ { httpConfig . scheme } : / / $ { httpConfig . host } " ) 
 
 system . log . debug ( " Starting WebactionsService " ) 
 val webactionsService = new WebactionsServiceImpl 
 diff - - git a / actor - server / src / docker / opt / docker / conf / server . conf b / actor - server / src / docker / opt / docker / conf / server . conf 
 index 51e3e5e . . c4eada9 100644 
 - - - a / actor - server / src / docker / opt / docker / conf / server . conf 
 + + + b / actor - server / src / docker / opt / docker / conf / server . conf 
 @ @ - 26 , 7 + 26 , 7 @ @ services { 
 } 
 } 
 
 - webapp { 
 + http { 
 static - files - directory : " / opt / docker / files " 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala 
 index 8605d79 . . 450a59d 100644 
 - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala 
 + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailConfig . scala 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package im . actor . server . email 
 
 + import im . actor . config . ActorConfig 
 + 
 import scala . util . Try 
 import com . github . kxbmap . configs . _ 
 import com . typesafe . config . Config 
 @ @ - 19 , 7 + 21 , 7 @ @ case class EmailConfig ( 
 ) 
 
 object EmailConfig { 
 - def fromConfig ( config : Config ) : Try [ EmailConfig ] = 
 + def load ( config : Config ) : Try [ EmailConfig ] = 
 for { 
 address ← config . get [ Try [ String ] ] ( " sender . address " ) 
 name ← config . get [ Try [ String ] ] ( " sender . name " ) 
 @ @ - 31 , 4 + 33 , 6 @ @ object EmailConfig { 
 password ← config . get [ Try [ String ] ] ( " smtp . password " ) 
 tls ← config . get [ Try [ Boolean ] ] ( " smtp . tls " ) 
 } yield EmailConfig ( address , name , prefix , host , port , username , password , tls ) 
 + 
 + def load : Try [ EmailConfig ] = load ( ActorConfig . load ( ) . getConfig ( " services . email " ) ) 
 } 
 \ No newline at end of file 
 diff - - git a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala 
 index cc16a1a . . 570329a 100644 
 - - - a / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala 
 + + + b / actor - server / actor - email / src / main / scala / im / actor / server / email / EmailSender . scala 
 @ @ - 13 , 6 + 13 , 11 @ @ case class Content ( html : Option [ String ] , text : Option [ String ] ) { 
 require ( html . isDefined | | text . isDefined ) 
 } 
 
 + object Content { 
 + def text ( text : String ) : Content = Content ( None , Some ( text ) ) 
 + def html ( html : String ) : Content = Content ( Some ( html ) , None ) 
 + } 
 + 
 case class Message ( to : String , subject : String , content : Content ) 
 
 trait EmailSender { 
 diff - - git a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 index bfafb9c . . 7e95c52 100644 
 - - - a / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 + + + b / actor - server / actor - server - sdk / src / main / scala / im / actor / server / ActorServer . scala 
 @ @ - 91 , 7 + 91 , 7 @ @ final case class ActorServerBuilder ( defaultConfig : Config = ConfigFactory . empty ( 
 
 / / FIXME : get rid of unsafe get ' s 
 val activationConfig = ActivationConfig . load . get 
 - val emailConfig = EmailConfig . fromConfig ( serverConfig . getConfig ( " services . email " ) ) . toOption . get 
 + val emailConfig = EmailConfig . load . get 
 val gateConfig = GateConfig . load . get 
 val groupInviteConfig = GroupInviteConfig . load ( serverConfig . getConfig ( " modules . messaging . groups . invite " ) ) 
 val webappConfig = HttpApiConfig . load ( serverConfig . getConfig ( " http " ) ) . toOption . get 
 diff - - git a / actor - server / project / Build . scala b / actor - server / project / Build . scala 
 index 40476af . . 3d86276 100644 
 - - - a / actor - server / project / Build . scala 
 + + + b / actor - server / project / Build . scala 
 @ @ - 168 , 6 + 168 , 7 @ @ object Build extends sbt . Build with Versioning with Releasing with Publishing { 
 libraryDependencies + + = Dependencies . email 
 ) 
 ) 
 + . dependsOn ( actorRuntime ) 
 
 lazy val actorEnrich = Project ( 
 id = " actor - enrich " ,
