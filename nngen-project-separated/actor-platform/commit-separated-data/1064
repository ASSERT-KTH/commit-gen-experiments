BLEU SCORE: 0.16783660999022343

TEST MSG: fix ( js ) : Restore reverse binding
GENERATED MSG: perf + fix ( js ) : Faster dialog list rebinding without not - updating - bug

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > index 0ef53f0 . . 8e4ad6f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java < nl > @ @ - 344 , 7 + 344 , 7 @ @ public class JsFacade implements Exportable { < nl > if ( callback = = null ) { < nl > return ; < nl > } < nl > - messenger . getSharedDialogList ( ) . subscribe ( callback ) ; < nl > + messenger . getSharedDialogList ( ) . subscribe ( callback , false ) ; < nl > } < nl > < nl > public void unbindDialogs ( JsDisplayListCallback < JsDialog > callback ) { < nl > @ @ - 376 , 7 + 376 , 7 @ @ public class JsFacade implements Exportable { < nl > if ( callback = = null ) { < nl > return ; < nl > } < nl > - messenger . getSharedContactList ( ) . subscribe ( callback ) ; < nl > + messenger . getSharedContactList ( ) . subscribe ( callback , true ) ; < nl > } < nl > < nl > public void unbindContacts ( JsDisplayListCallback < JsContact > callback ) { < nl > @ @ - 392 , 7 + 392 , 7 @ @ public class JsFacade implements Exportable { < nl > if ( callback = = null ) { < nl > return ; < nl > } < nl > - messenger . getSharedSearchList ( ) . subscribe ( callback ) ; < nl > + messenger . getSharedSearchList ( ) . subscribe ( callback , false ) ; < nl > } < nl > < nl > public void unbindSearch ( JsDisplayListCallback < JsSearchEntity > callback ) { < nl > @ @ - 408 , 15 + 408 , 13 @ @ public class JsFacade implements Exportable { < nl > if ( callback = = null ) { < nl > return ; < nl > } < nl > - / / TODO : Fix inverted < nl > - messenger . getSharedChatList ( peer . convert ( ) ) . subscribe ( callback ) ; < nl > + messenger . getSharedChatList ( peer . convert ( ) ) . subscribe ( callback , true ) ; < nl > } < nl > < nl > public void unbindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { < nl > if ( callback = = null ) { < nl > return ; < nl > } < nl > - / / TODO : Fix inverted < nl > messenger . getSharedChatList ( peer . convert ( ) ) . unsubscribe ( callback ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > index c89d405 . . b32b3bd 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > @ @ - 32 , 11 + 32 , 11 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li < nl > this . entityConverter = entityConverter ; < nl > } < nl > < nl > - public JsDisplayListBind < T , V > subscribe ( JsDisplayListCallback < T > callback ) { < nl > + public JsDisplayListBind < T , V > subscribe ( JsDisplayListCallback < T > callback , boolean isInverted ) { < nl > if ( binds . containsKey ( callback ) ) { < nl > binds . remove ( callback ) . dispose ( ) ; < nl > } < nl > - JsDisplayListBind < T , V > b = new JsDisplayListBind < T , V > ( callback , listEngine , entityConverter ) ; < nl > + JsDisplayListBind < T , V > b = new JsDisplayListBind < T , V > ( callback , isInverted , listEngine , entityConverter ) ; < nl > b . initAll ( ) ; < nl > binds . put ( callback , b ) ; < nl > return b ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java < nl > index 7ed8b60 . . 21844ef 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java < nl > @ @ - 1 , 6 + 1 , 7 @ @ < nl > package im . actor . runtime . js . mvvm ; < nl > < nl > import com . google . gwt . core . client . JavaScriptObject ; < nl > + import com . google . gwt . core . client . JsArray ; < nl > < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > @ @ - 32 , 6 + 33 , 10 @ @ public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject < nl > * Subscribers to bind < nl > * / < nl > private final JsDisplayListCallback < T > callback ; < nl > + / * * < nl > + * Is subscriber inverted < nl > + * / < nl > + private final boolean isInverted ; < nl > < nl > < nl > / * * < nl > @ @ - 70 , 9 + 75 , 10 @ @ public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject < nl > * / < nl > private boolean isForceReconverted = false ; < nl > < nl > - public JsDisplayListBind ( JsDisplayListCallback < T > callback , JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { < nl > + public JsDisplayListBind ( JsDisplayListCallback < T > callback , boolean isInverted , JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { < nl > < nl > this . callback = callback ; < nl > + this . isInverted = isInverted ; < nl > this . listEngine = listEngine ; < nl > this . entityConverter = entityConverter ; < nl > this . isOverlaysSupported = entityConverter . isSupportOverlays ( ) ; < nl > @ @ - 135 , 10 + 141 , 18 @ @ public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject < nl > } < nl > < nl > public void notifySubscriber ( ) { < nl > - if ( isOverlaysSupported ) { < nl > - callback . onCollectionChanged ( jsValues , jsOverlays ) ; < nl > + if ( isInverted ) { < nl > + if ( isOverlaysSupported ) { < nl > + callback . onCollectionChanged ( jsValues . reverse ( ) , jsOverlays . reverse ( ) ) ; < nl > + } else { < nl > + callback . onCollectionChanged ( jsValues . reverse ( ) , null ) ; < nl > + } < nl > } else { < nl > - callback . onCollectionChanged ( jsValues , null ) ; < nl > + if ( isOverlaysSupported ) { < nl > + callback . onCollectionChanged ( jsValues , jsOverlays ) ; < nl > + } else { < nl > + callback . onCollectionChanged ( jsValues , null ) ; < nl > + } < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java < nl > index 2b34e7f . . 4472625 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java < nl > @ @ - 362 , 43 + 362 , 55 @ @ public class JsBindingModule extends AbsModule implements JsFileLoadedListener { < nl > < nl > @ Override < nl > public void onFileLoaded ( HashSet < Long > fileId ) { < nl > + < nl > + / / < nl > + / / Dialogs List < nl > + / / < nl > if ( dialogsList ! = null ) { < nl > + dialogsList . startReconverting ( ) ; < nl > for ( Dialog dialog : dialogsList . getRawItems ( ) ) { < nl > if ( checkAvatar ( dialog . getDialogAvatar ( ) , fileId ) ) { < nl > dialogsList . forceReconvert ( dialog . getEngineId ( ) ) ; < nl > } < nl > } < nl > + dialogsList . stopReconverting ( ) ; < nl > + } < nl > + < nl > + / / < nl > + / / Grouped Dialogs < nl > + / / < nl > + if ( dialogsGroupedList ! = null ) { < nl > + / / TODO : Implement < nl > } < nl > < nl > if ( contactsList ! = null ) { < nl > + contactsList . startReconverting ( ) ; < nl > for ( Contact contact : contactsList . getRawItems ( ) ) { < nl > if ( checkAvatar ( contact . getAvatar ( ) , fileId ) ) { < nl > contactsList . forceReconvert ( contact . getEngineId ( ) ) ; < nl > } < nl > } < nl > + contactsList . stopReconverting ( ) ; < nl > } < nl > < nl > for ( JsDisplayList < JsMessage , Message > messageList : messageLists . values ( ) ) { < nl > - boolean founded = false ; < nl > + messageList . startReconverting ( ) ; < nl > for ( Message message : messageList . getRawItems ( ) ) { < nl > UserVM user = context ( ) . getUsersModule ( ) . getUsers ( ) . get ( message . getSenderId ( ) ) ; < nl > if ( checkAvatar ( user . getAvatar ( ) . get ( ) , fileId ) ) { < nl > - founded = true ; < nl > - break ; < nl > + messageList . forceReconvert ( message . getEngineId ( ) ) ; < nl > + continue ; < nl > } < nl > if ( message . getContent ( ) instanceof DocumentContent ) { < nl > DocumentContent doc = ( DocumentContent ) message . getContent ( ) ; < nl > if ( doc . getSource ( ) instanceof FileRemoteSource ) { < nl > if ( fileId . contains ( ( ( FileRemoteSource ) doc . getSource ( ) ) . getFileReference ( ) . getFileId ( ) ) ) { < nl > - founded = true ; < nl > - break ; < nl > + messageList . forceReconvert ( message . getEngineId ( ) ) ; < nl > } < nl > } < nl > } < nl > } < nl > - if ( founded ) { < nl > - messageList . forceReconvert ( ) ; < nl > - } < nl > + messageList . stopReconverting ( ) ; < nl > } < nl > < nl > for ( JsBindedValue < JsUser > u : users . values ( ) ) { < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > index 52322d7 . . 14e0386 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java < nl > @ @ - 28 , 6 + 28 , 7 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li < nl > < nl > private ArrayList < V > values ; < nl > private JsArray < T > jsValues ; < nl > + private boolean isForceReconverted = false ; < nl > < nl > public JsDisplayList ( JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { < nl > this . listEngine = listEngine ; < nl > @ @ - 40 , 7 + 41 , 7 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li < nl > for ( long rid : rids ) { < nl > V item = listEngine . getValue ( rid ) ; < nl > if ( item = = null ) { < nl > - Log . w ( " AngularList " , " Unable to find item # " + rid ) ; < nl > + Log . w ( " JsDisplayList " , " Unable to find item # " + rid ) ; < nl > continue ; < nl > } < nl > values . add ( item ) ; < nl > @ @ - 75 , 23 + 76 , 25 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li < nl > callbacksInverted . remove ( callback ) ; < nl > } < nl > < nl > + public void startReconverting ( ) { < nl > + isForceReconverted = false ; < nl > + } < nl > + < nl > public void forceReconvert ( long id ) { < nl > for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > if ( values . get ( i ) . getEngineId ( ) = = id ) { < nl > remove ( jsValues , i ) ; < nl > insert ( jsValues , i , entityConverter . convert ( values . get ( i ) ) ) ; < nl > + isForceReconverted = true ; < nl > } < nl > } < nl > } < nl > < nl > - public void forceReconvert ( ) { < nl > - clear ( jsValues ) ; < nl > - < nl > - for ( int i = 0 ; i < values . size ( ) ; i + + ) { < nl > - jsValues . push ( entityConverter . convert ( values . get ( i ) ) ) ; < nl > + public void stopReconverting ( ) { < nl > + if ( isForceReconverted ) { < nl > + isForceReconverted = false ; < nl > + notifySubscribers ( ) ; < nl > } < nl > - < nl > - notifySubscribers ( ) ; < nl > } < nl > < nl > public ArrayList < V > getRawItems ( ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 index 0ef53f0 . . 8e4ad6f 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / JsFacade . java 
 @ @ - 344 , 7 + 344 , 7 @ @ public class JsFacade implements Exportable { 
 if ( callback = = null ) { 
 return ; 
 } 
 - messenger . getSharedDialogList ( ) . subscribe ( callback ) ; 
 + messenger . getSharedDialogList ( ) . subscribe ( callback , false ) ; 
 } 
 
 public void unbindDialogs ( JsDisplayListCallback < JsDialog > callback ) { 
 @ @ - 376 , 7 + 376 , 7 @ @ public class JsFacade implements Exportable { 
 if ( callback = = null ) { 
 return ; 
 } 
 - messenger . getSharedContactList ( ) . subscribe ( callback ) ; 
 + messenger . getSharedContactList ( ) . subscribe ( callback , true ) ; 
 } 
 
 public void unbindContacts ( JsDisplayListCallback < JsContact > callback ) { 
 @ @ - 392 , 7 + 392 , 7 @ @ public class JsFacade implements Exportable { 
 if ( callback = = null ) { 
 return ; 
 } 
 - messenger . getSharedSearchList ( ) . subscribe ( callback ) ; 
 + messenger . getSharedSearchList ( ) . subscribe ( callback , false ) ; 
 } 
 
 public void unbindSearch ( JsDisplayListCallback < JsSearchEntity > callback ) { 
 @ @ - 408 , 15 + 408 , 13 @ @ public class JsFacade implements Exportable { 
 if ( callback = = null ) { 
 return ; 
 } 
 - / / TODO : Fix inverted 
 - messenger . getSharedChatList ( peer . convert ( ) ) . subscribe ( callback ) ; 
 + messenger . getSharedChatList ( peer . convert ( ) ) . subscribe ( callback , true ) ; 
 } 
 
 public void unbindChat ( JsPeer peer , JsDisplayListCallback < JsMessage > callback ) { 
 if ( callback = = null ) { 
 return ; 
 } 
 - / / TODO : Fix inverted 
 messenger . getSharedChatList ( peer . convert ( ) ) . unsubscribe ( callback ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 index c89d405 . . b32b3bd 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 @ @ - 32 , 11 + 32 , 11 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li 
 this . entityConverter = entityConverter ; 
 } 
 
 - public JsDisplayListBind < T , V > subscribe ( JsDisplayListCallback < T > callback ) { 
 + public JsDisplayListBind < T , V > subscribe ( JsDisplayListCallback < T > callback , boolean isInverted ) { 
 if ( binds . containsKey ( callback ) ) { 
 binds . remove ( callback ) . dispose ( ) ; 
 } 
 - JsDisplayListBind < T , V > b = new JsDisplayListBind < T , V > ( callback , listEngine , entityConverter ) ; 
 + JsDisplayListBind < T , V > b = new JsDisplayListBind < T , V > ( callback , isInverted , listEngine , entityConverter ) ; 
 b . initAll ( ) ; 
 binds . put ( callback , b ) ; 
 return b ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java 
 index 7ed8b60 . . 21844ef 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayListBind . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package im . actor . runtime . js . mvvm ; 
 
 import com . google . gwt . core . client . JavaScriptObject ; 
 + import com . google . gwt . core . client . JsArray ; 
 
 import java . util . ArrayList ; 
 import java . util . List ; 
 @ @ - 32 , 6 + 33 , 10 @ @ public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject 
 * Subscribers to bind 
 * / 
 private final JsDisplayListCallback < T > callback ; 
 + / * * 
 + * Is subscriber inverted 
 + * / 
 + private final boolean isInverted ; 
 
 
 / * * 
 @ @ - 70 , 9 + 75 , 10 @ @ public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject 
 * / 
 private boolean isForceReconverted = false ; 
 
 - public JsDisplayListBind ( JsDisplayListCallback < T > callback , JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { 
 + public JsDisplayListBind ( JsDisplayListCallback < T > callback , boolean isInverted , JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { 
 
 this . callback = callback ; 
 + this . isInverted = isInverted ; 
 this . listEngine = listEngine ; 
 this . entityConverter = entityConverter ; 
 this . isOverlaysSupported = entityConverter . isSupportOverlays ( ) ; 
 @ @ - 135 , 10 + 141 , 18 @ @ public class JsDisplayListBind < T extends JavaScriptObject , V extends BserObject 
 } 
 
 public void notifySubscriber ( ) { 
 - if ( isOverlaysSupported ) { 
 - callback . onCollectionChanged ( jsValues , jsOverlays ) ; 
 + if ( isInverted ) { 
 + if ( isOverlaysSupported ) { 
 + callback . onCollectionChanged ( jsValues . reverse ( ) , jsOverlays . reverse ( ) ) ; 
 + } else { 
 + callback . onCollectionChanged ( jsValues . reverse ( ) , null ) ; 
 + } 
 } else { 
 - callback . onCollectionChanged ( jsValues , null ) ; 
 + if ( isOverlaysSupported ) { 
 + callback . onCollectionChanged ( jsValues , jsOverlays ) ; 
 + } else { 
 + callback . onCollectionChanged ( jsValues , null ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java 
 index 2b34e7f . . 4472625 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsBindingModule . java 
 @ @ - 362 , 43 + 362 , 55 @ @ public class JsBindingModule extends AbsModule implements JsFileLoadedListener { 
 
 @ Override 
 public void onFileLoaded ( HashSet < Long > fileId ) { 
 + 
 + / / 
 + / / Dialogs List 
 + / / 
 if ( dialogsList ! = null ) { 
 + dialogsList . startReconverting ( ) ; 
 for ( Dialog dialog : dialogsList . getRawItems ( ) ) { 
 if ( checkAvatar ( dialog . getDialogAvatar ( ) , fileId ) ) { 
 dialogsList . forceReconvert ( dialog . getEngineId ( ) ) ; 
 } 
 } 
 + dialogsList . stopReconverting ( ) ; 
 + } 
 + 
 + / / 
 + / / Grouped Dialogs 
 + / / 
 + if ( dialogsGroupedList ! = null ) { 
 + / / TODO : Implement 
 } 
 
 if ( contactsList ! = null ) { 
 + contactsList . startReconverting ( ) ; 
 for ( Contact contact : contactsList . getRawItems ( ) ) { 
 if ( checkAvatar ( contact . getAvatar ( ) , fileId ) ) { 
 contactsList . forceReconvert ( contact . getEngineId ( ) ) ; 
 } 
 } 
 + contactsList . stopReconverting ( ) ; 
 } 
 
 for ( JsDisplayList < JsMessage , Message > messageList : messageLists . values ( ) ) { 
 - boolean founded = false ; 
 + messageList . startReconverting ( ) ; 
 for ( Message message : messageList . getRawItems ( ) ) { 
 UserVM user = context ( ) . getUsersModule ( ) . getUsers ( ) . get ( message . getSenderId ( ) ) ; 
 if ( checkAvatar ( user . getAvatar ( ) . get ( ) , fileId ) ) { 
 - founded = true ; 
 - break ; 
 + messageList . forceReconvert ( message . getEngineId ( ) ) ; 
 + continue ; 
 } 
 if ( message . getContent ( ) instanceof DocumentContent ) { 
 DocumentContent doc = ( DocumentContent ) message . getContent ( ) ; 
 if ( doc . getSource ( ) instanceof FileRemoteSource ) { 
 if ( fileId . contains ( ( ( FileRemoteSource ) doc . getSource ( ) ) . getFileReference ( ) . getFileId ( ) ) ) { 
 - founded = true ; 
 - break ; 
 + messageList . forceReconvert ( message . getEngineId ( ) ) ; 
 } 
 } 
 } 
 } 
 - if ( founded ) { 
 - messageList . forceReconvert ( ) ; 
 - } 
 + messageList . stopReconverting ( ) ; 
 } 
 
 for ( JsBindedValue < JsUser > u : users . values ( ) ) { 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 index 52322d7 . . 14e0386 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / mvvm / JsDisplayList . java 
 @ @ - 28 , 6 + 28 , 7 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li 
 
 private ArrayList < V > values ; 
 private JsArray < T > jsValues ; 
 + private boolean isForceReconverted = false ; 
 
 public JsDisplayList ( JsListEngine < V > listEngine , JsEntityConverter < V , T > entityConverter ) { 
 this . listEngine = listEngine ; 
 @ @ - 40 , 7 + 41 , 7 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li 
 for ( long rid : rids ) { 
 V item = listEngine . getValue ( rid ) ; 
 if ( item = = null ) { 
 - Log . w ( " AngularList " , " Unable to find item # " + rid ) ; 
 + Log . w ( " JsDisplayList " , " Unable to find item # " + rid ) ; 
 continue ; 
 } 
 values . add ( item ) ; 
 @ @ - 75 , 23 + 76 , 25 @ @ public class JsDisplayList < T extends JavaScriptObject , V extends BserObject & Li 
 callbacksInverted . remove ( callback ) ; 
 } 
 
 + public void startReconverting ( ) { 
 + isForceReconverted = false ; 
 + } 
 + 
 public void forceReconvert ( long id ) { 
 for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 if ( values . get ( i ) . getEngineId ( ) = = id ) { 
 remove ( jsValues , i ) ; 
 insert ( jsValues , i , entityConverter . convert ( values . get ( i ) ) ) ; 
 + isForceReconverted = true ; 
 } 
 } 
 } 
 
 - public void forceReconvert ( ) { 
 - clear ( jsValues ) ; 
 - 
 - for ( int i = 0 ; i < values . size ( ) ; i + + ) { 
 - jsValues . push ( entityConverter . convert ( values . get ( i ) ) ) ; 
 + public void stopReconverting ( ) { 
 + if ( isForceReconverted ) { 
 + isForceReconverted = false ; 
 + notifySubscribers ( ) ; 
 } 
 - 
 - notifySubscribers ( ) ; 
 } 
 
 public ArrayList < V > getRawItems ( ) {
