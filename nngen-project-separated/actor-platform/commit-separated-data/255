BLEU SCORE: 0.23462350320528

TEST MSG: feat ( iOS ) : Customization of a root view controllers
GENERATED MSG: chore ( iOS ) : change main navigations from sdk delegate

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index e66bdc3 . . 7274398 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 427 , 45 + 427 , 56 @ @ import DZNWebViewController < nl > } < nl > < nl > / / / Get main navigations with check in delegate for customize from SDK < nl > - < nl > private func getMainNavigations ( ) - > [ AANavigationController ] { < nl > < nl > + let allControllers = self . delegate . actorRootControllers ( ) < nl > < nl > - var mainNavigations = [ AANavigationController ] ( ) < nl > + if let all = allControllers { < nl > + < nl > + var mainNavigations = [ AANavigationController ] ( ) < nl > + < nl > + for controller in all { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : controller ) ) < nl > + } < nl > + < nl > + return mainNavigations < nl > + } else { < nl > + < nl > + var mainNavigations = [ AANavigationController ] ( ) < nl > < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > - / / contacts < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / Contacts < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > - if let contactsController = self . delegate . actorControllerForContacts ( ) { < nl > - mainNavigations . append ( AANavigationController ( rootViewController : contactsController ) ) < nl > - } else { < nl > - mainNavigations . append ( AANavigationController ( rootViewController : AAContactsViewController ( ) ) ) < nl > - } < nl > + if let contactsController = self . delegate . actorControllerForContacts ( ) { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : contactsController ) ) < nl > + } else { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : AAContactsViewController ( ) ) ) < nl > + } < nl > < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > - / / recent dialogs < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / Recent dialogs < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > - if let recentDialogs = self . delegate . actorControllerForDialogs ( ) { < nl > - mainNavigations . append ( AANavigationController ( rootViewController : recentDialogs ) ) < nl > - } else { < nl > - mainNavigations . append ( AANavigationController ( rootViewController : AARecentViewController ( ) ) ) < nl > - } < nl > + if let recentDialogs = self . delegate . actorControllerForDialogs ( ) { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : recentDialogs ) ) < nl > + } else { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : AARecentViewController ( ) ) ) < nl > + } < nl > < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > - / / settings < nl > - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / Settings < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > < nl > - if let settingsController = self . delegate . actorControllerForSettings ( ) { < nl > - mainNavigations . append ( AANavigationController ( rootViewController : settingsController ) ) < nl > - } else { < nl > - mainNavigations . append ( AANavigationController ( rootViewController : AASettingsViewController ( ) ) ) < nl > - } < nl > + if let settingsController = self . delegate . actorControllerForSettings ( ) { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : settingsController ) ) < nl > + } else { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : AASettingsViewController ( ) ) ) < nl > + } < nl > < nl > < nl > - return mainNavigations ; < nl > - < nl > + return mainNavigations < nl > + } < nl > } < nl > < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift < nl > index 7f96b65 . . 5da6b0b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift < nl > @ @ - 26 , 13 + 26 , 16 @ @ public protocol ActorSDKDelegate { < nl > func actorControllerForConversation ( peer : ACPeer ) - > UIViewController ? < nl > < nl > / / / Contacts controller < nl > - func actorControllerForContacts ( ) - > AAViewController ? < nl > + func actorControllerForContacts ( ) - > UIViewController ? < nl > < nl > / / / Dialogs controller < nl > - func actorControllerForDialogs ( ) - > AAViewController ? < nl > + func actorControllerForDialogs ( ) - > UIViewController ? < nl > < nl > / / / Settings controller < nl > - func actorControllerForSettings ( ) - > AAViewController ? < nl > + func actorControllerForSettings ( ) - > UIViewController ? < nl > + < nl > + / / / Root controllers < nl > + func actorRootControllers ( ) - > [ UIViewController ] ? < nl > < nl > / / / Configuration of bubble cells < nl > func actorConfigureBubbleLayouters ( builtIn : [ AABubbleLayouter ] ) - > [ AABubbleLayouter ] < nl > @ @ - 79 , 15 + 82 , 19 @ @ public class ActorSDKDelegateDefault : NSObject , ActorSDKDelegate { < nl > return nil < nl > } < nl > < nl > - public func actorControllerForContacts ( ) - > AAViewController ? { < nl > + public func actorControllerForContacts ( ) - > UIViewController ? { < nl > + return nil < nl > + } < nl > + < nl > + public func actorControllerForDialogs ( ) - > UIViewController ? { < nl > return nil < nl > } < nl > < nl > - public func actorControllerForDialogs ( ) - > AAViewController ? { < nl > + public func actorControllerForSettings ( ) - > UIViewController ? { < nl > return nil < nl > } < nl > < nl > - public func actorControllerForSettings ( ) - > AAViewController ? { < nl > + public func actorRootControllers ( ) - > [ UIViewController ] ? { < nl > return nil < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift < nl > index a412bf2 . . 61770a3 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift < nl > @ @ - 8 , 7 + 8 , 7 @ @ import Social < nl > import AddressBookUI < nl > import ContactsUI < nl > < nl > - class AAContactsViewController : AAContactsListContentController , AAContactsListContentControllerDelegate , UIAlertViewDelegate , MFMessageComposeViewControllerDelegate , MFMailComposeViewControllerDelegate { < nl > + public class AAContactsViewController : AAContactsListContentController , AAContactsListContentControllerDelegate , UIAlertViewDelegate , MFMessageComposeViewControllerDelegate , MFMailComposeViewControllerDelegate { < nl > < nl > var inviteText : String { < nl > get { < nl > @ @ - 16 , 7 + 16 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > } < nl > } < nl > < nl > - override init ( ) { < nl > + public override init ( ) { < nl > super . init ( ) < nl > < nl > content = ACAllEvents _ Main . CONTACTS ( ) < nl > @ @ - 29 , 11 + 29 , 11 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > delegate = self < nl > } < nl > < nl > - required init ( coder aDecoder : NSCoder ) { < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > fatalError ( " init ( coder : ) has not been implemented " ) < nl > } < nl > < nl > - func contactDidTap ( controller : AAContactsListContentController , contact : ACContact ) - > Bool { < nl > + public func contactDidTap ( controller : AAContactsListContentController , contact : ACContact ) - > Bool { < nl > < nl > if let customController = ActorSDK . sharedActor ( ) . delegate . actorControllerForConversation ( ACPeer _ userWithInt _ ( contact . uid ) ) { < nl > navigateDetail ( customController ) < nl > @ @ - 44 , 7 + 44 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > return true < nl > } < nl > < nl > - func willAddContacts ( controller : AAContactsListContentController , section : AAManagedSection ) { < nl > + public func willAddContacts ( controller : AAContactsListContentController , section : AAManagedSection ) { < nl > < nl > section . custom { ( r : AACustomRow < AAContactActionCell > ) - > ( ) in < nl > < nl > @ @ - 127 , 7 + 127 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > < nl > / / Searching for contact < nl > < nl > - func findContact ( ) { < nl > + public func findContact ( ) { < nl > < nl > startEditField { ( c ) - > ( ) in < nl > c . title = " FindTitle " < nl > @ @ - 180 , 7 + 180 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > } < nl > } < nl > < nl > - func alertView ( alertView : UIAlertView , clickedButtonAtIndex buttonIndex : Int ) { < nl > + public func alertView ( alertView : UIAlertView , clickedButtonAtIndex buttonIndex : Int ) { < nl > if buttonIndex = = 1 { < nl > let textField = alertView . textFieldAtIndex ( 0 ) ! < nl > if textField . text ? . length > 0 { < nl > @ @ - 218 , 7 + 218 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > < nl > / / Email Invitation < nl > < nl > - func showEmailInvitation ( recipients : [ String ] ? ) { < nl > + public func showEmailInvitation ( recipients : [ String ] ? ) { < nl > if MFMailComposeViewController . canSendMail ( ) { < nl > < nl > let messageComposeController = MFMailComposeViewController ( ) < nl > @ @ - 234 , 16 + 234 , 16 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > } < nl > } < nl > < nl > - func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { < nl > + public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { < nl > controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > < nl > / / SMS Invitation < nl > - func showSmsInvitation ( ) { < nl > + public func showSmsInvitation ( ) { < nl > self . showSmsInvitation ( nil ) < nl > } < nl > < nl > - func showSmsInvitation ( recipients : [ String ] ? ) { < nl > + public func showSmsInvitation ( recipients : [ String ] ? ) { < nl > if MFMessageComposeViewController . canSendText ( ) { < nl > let messageComposeController = MFMessageComposeViewController ( ) < nl > messageComposeController . messageComposeDelegate = self < nl > @ @ - 253 , 7 + 253 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC < nl > } < nl > } < nl > < nl > - @ objc func messageComposeViewController ( controller : MFMessageComposeViewController , didFinishWithResult result : MessageComposeResult ) { < nl > + @ objc public func messageComposeViewController ( controller : MFMessageComposeViewController , didFinishWithResult result : MessageComposeResult ) { < nl > controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist b / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist < nl > index 7888389 . . 326a0fa 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist 	 < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist 	 < nl > @ @ - 34 , 7 + 34 , 7 @ @ < nl > 	 	 < / dict > < nl > 	 < / array > < nl > 	 < key > CFBundleVersion < / key > < nl > - 	 < string > 511 < / string > < nl > + 	 < string > 515 < / string > < nl > 	 < key > Fabric < / key > < nl > 	 < dict > < nl > 	 	 < key > APIKey < / key > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index f742f60 . . 3c0191a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 279 , 10 + 279 , 8 @ @ public class ActorSDK { < nl > } < nl > if controller = = nil { < nl > let tab = AARootTabViewController ( ) < nl > - tab . viewControllers = [ < nl > - AANavigationController ( rootViewController : AAContactsViewController ( ) ) , < nl > - AANavigationController ( rootViewController : AARecentViewController ( ) ) , < nl > - AANavigationController ( rootViewController : AASettingsViewController ( ) ) ] < nl > + < nl > + tab . viewControllers = self . getMainNavigations ( ) < nl > tab . selectedIndex = 0 < nl > tab . selectedIndex = 1 < nl > < nl > @ @ - 319 , 6 + 317 , 48 @ @ public class ActorSDK { < nl > UIApplication . sharedApplication ( ) . registerUserNotificationSettings ( settings ) < nl > UIApplication . sharedApplication ( ) . registerForRemoteNotifications ( ) < nl > } < nl > + < nl > + / / / Get main navigations with check in delegate for customize from SDK < nl > + < nl > + private func getMainNavigations ( ) - > [ AANavigationController ] { < nl > + < nl > + < nl > + var mainNavigations = [ AANavigationController ] ( ) < nl > + < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / contacts < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + < nl > + if let contactsController = self . delegate . actorControllerForContacts ( ) { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : contactsController ) ) < nl > + } else { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : AAContactsViewController ( ) ) ) < nl > + } < nl > + < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / recent dialogs < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + < nl > + if let recentDialogs = self . delegate . actorControllerForDialogs ( ) { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : recentDialogs ) ) < nl > + } else { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : AARecentViewController ( ) ) ) < nl > + } < nl > + < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + / / settings < nl > + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > + < nl > + if let settingsController = self . delegate . actorControllerForSettings ( ) { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : settingsController ) ) < nl > + } else { < nl > + mainNavigations . append ( AANavigationController ( rootViewController : AASettingsViewController ( ) ) ) < nl > + } < nl > + < nl > + < nl > + return mainNavigations ; < nl > + < nl > + } < nl > < nl > < nl > / / < nl > @ @ - 341 , 10 + 381 , 7 @ @ public class ActorSDK { < nl > var controller : UIViewController ! = delegate . actorControllerForStart ( ) < nl > if controller = = nil { < nl > let tab = AARootTabViewController ( ) < nl > - tab . viewControllers = [ < nl > - AANavigationController ( rootViewController : AAContactsViewController ( ) ) , < nl > - AANavigationController ( rootViewController : AARecentViewController ( ) ) , < nl > - AANavigationController ( rootViewController : AASettingsViewController ( ) ) ] < nl > + tab . viewControllers = self . getMainNavigations ( ) < nl > tab . selectedIndex = 0 < nl > tab . selectedIndex = 1 < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift < nl > index c66713a . . 8096d0b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift < nl > @ @ - 25 , 6 + 25 , 15 @ @ public protocol ActorSDKDelegate { < nl > / / / Conversation controller < nl > func actorControllerForConversation ( peer : ACPeer ) - > UIViewController ? < nl > < nl > + / / / Contacts controller < nl > + func actorControllerForContacts ( ) - > AAViewController ? < nl > + < nl > + / / / Dialogs controller < nl > + func actorControllerForDialogs ( ) - > AAViewController ? < nl > + < nl > + / / / Settings controller < nl > + func actorControllerForSettings ( ) - > AAViewController ? < nl > + < nl > / / / Configuration of bubble cells < nl > func actorConfigureBubbleLayouters ( builtIn : [ AABubbleLayouter ] ) - > [ AABubbleLayouter ] < nl > < nl > @ @ - 67 , 6 + 76 , 18 @ @ public class ActorSDKDelegateDefault : NSObject , ActorSDKDelegate { < nl > return nil < nl > } < nl > < nl > + public func actorControllerForContacts ( ) - > AAViewController ? { < nl > + return nil < nl > + } < nl > + < nl > + public func actorControllerForDialogs ( ) - > AAViewController ? { < nl > + return nil < nl > + } < nl > + < nl > + public func actorControllerForSettings ( ) - > AAViewController ? { < nl > + return nil < nl > + } < nl > + < nl > public func actorConfigureBubbleLayouters ( builtIn : [ AABubbleLayouter ] ) - > [ AABubbleLayouter ] { < nl > return builtIn < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index e66bdc3 . . 7274398 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 427 , 45 + 427 , 56 @ @ import DZNWebViewController 
 } 
 
 / / / Get main navigations with check in delegate for customize from SDK 
 - 
 private func getMainNavigations ( ) - > [ AANavigationController ] { 
 
 + let allControllers = self . delegate . actorRootControllers ( ) 
 
 - var mainNavigations = [ AANavigationController ] ( ) 
 + if let all = allControllers { 
 + 
 + var mainNavigations = [ AANavigationController ] ( ) 
 + 
 + for controller in all { 
 + mainNavigations . append ( AANavigationController ( rootViewController : controller ) ) 
 + } 
 + 
 + return mainNavigations 
 + } else { 
 + 
 + var mainNavigations = [ AANavigationController ] ( ) 
 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / contacts 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Contacts 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 - if let contactsController = self . delegate . actorControllerForContacts ( ) { 
 - mainNavigations . append ( AANavigationController ( rootViewController : contactsController ) ) 
 - } else { 
 - mainNavigations . append ( AANavigationController ( rootViewController : AAContactsViewController ( ) ) ) 
 - } 
 + if let contactsController = self . delegate . actorControllerForContacts ( ) { 
 + mainNavigations . append ( AANavigationController ( rootViewController : contactsController ) ) 
 + } else { 
 + mainNavigations . append ( AANavigationController ( rootViewController : AAContactsViewController ( ) ) ) 
 + } 
 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / recent dialogs 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Recent dialogs 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 - if let recentDialogs = self . delegate . actorControllerForDialogs ( ) { 
 - mainNavigations . append ( AANavigationController ( rootViewController : recentDialogs ) ) 
 - } else { 
 - mainNavigations . append ( AANavigationController ( rootViewController : AARecentViewController ( ) ) ) 
 - } 
 + if let recentDialogs = self . delegate . actorControllerForDialogs ( ) { 
 + mainNavigations . append ( AANavigationController ( rootViewController : recentDialogs ) ) 
 + } else { 
 + mainNavigations . append ( AANavigationController ( rootViewController : AARecentViewController ( ) ) ) 
 + } 
 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / settings 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / Settings 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 
 - if let settingsController = self . delegate . actorControllerForSettings ( ) { 
 - mainNavigations . append ( AANavigationController ( rootViewController : settingsController ) ) 
 - } else { 
 - mainNavigations . append ( AANavigationController ( rootViewController : AASettingsViewController ( ) ) ) 
 - } 
 + if let settingsController = self . delegate . actorControllerForSettings ( ) { 
 + mainNavigations . append ( AANavigationController ( rootViewController : settingsController ) ) 
 + } else { 
 + mainNavigations . append ( AANavigationController ( rootViewController : AASettingsViewController ( ) ) ) 
 + } 
 
 
 - return mainNavigations ; 
 - 
 + return mainNavigations 
 + } 
 } 
 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift 
 index 7f96b65 . . 5da6b0b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift 
 @ @ - 26 , 13 + 26 , 16 @ @ public protocol ActorSDKDelegate { 
 func actorControllerForConversation ( peer : ACPeer ) - > UIViewController ? 
 
 / / / Contacts controller 
 - func actorControllerForContacts ( ) - > AAViewController ? 
 + func actorControllerForContacts ( ) - > UIViewController ? 
 
 / / / Dialogs controller 
 - func actorControllerForDialogs ( ) - > AAViewController ? 
 + func actorControllerForDialogs ( ) - > UIViewController ? 
 
 / / / Settings controller 
 - func actorControllerForSettings ( ) - > AAViewController ? 
 + func actorControllerForSettings ( ) - > UIViewController ? 
 + 
 + / / / Root controllers 
 + func actorRootControllers ( ) - > [ UIViewController ] ? 
 
 / / / Configuration of bubble cells 
 func actorConfigureBubbleLayouters ( builtIn : [ AABubbleLayouter ] ) - > [ AABubbleLayouter ] 
 @ @ - 79 , 15 + 82 , 19 @ @ public class ActorSDKDelegateDefault : NSObject , ActorSDKDelegate { 
 return nil 
 } 
 
 - public func actorControllerForContacts ( ) - > AAViewController ? { 
 + public func actorControllerForContacts ( ) - > UIViewController ? { 
 + return nil 
 + } 
 + 
 + public func actorControllerForDialogs ( ) - > UIViewController ? { 
 return nil 
 } 
 
 - public func actorControllerForDialogs ( ) - > AAViewController ? { 
 + public func actorControllerForSettings ( ) - > UIViewController ? { 
 return nil 
 } 
 
 - public func actorControllerForSettings ( ) - > AAViewController ? { 
 + public func actorRootControllers ( ) - > [ UIViewController ] ? { 
 return nil 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift 
 index a412bf2 . . 61770a3 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Contacts / AAContactsViewController . swift 
 @ @ - 8 , 7 + 8 , 7 @ @ import Social 
 import AddressBookUI 
 import ContactsUI 
 
 - class AAContactsViewController : AAContactsListContentController , AAContactsListContentControllerDelegate , UIAlertViewDelegate , MFMessageComposeViewControllerDelegate , MFMailComposeViewControllerDelegate { 
 + public class AAContactsViewController : AAContactsListContentController , AAContactsListContentControllerDelegate , UIAlertViewDelegate , MFMessageComposeViewControllerDelegate , MFMailComposeViewControllerDelegate { 
 
 var inviteText : String { 
 get { 
 @ @ - 16 , 7 + 16 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 } 
 } 
 
 - override init ( ) { 
 + public override init ( ) { 
 super . init ( ) 
 
 content = ACAllEvents _ Main . CONTACTS ( ) 
 @ @ - 29 , 11 + 29 , 11 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 delegate = self 
 } 
 
 - required init ( coder aDecoder : NSCoder ) { 
 + public required init ( coder aDecoder : NSCoder ) { 
 fatalError ( " init ( coder : ) has not been implemented " ) 
 } 
 
 - func contactDidTap ( controller : AAContactsListContentController , contact : ACContact ) - > Bool { 
 + public func contactDidTap ( controller : AAContactsListContentController , contact : ACContact ) - > Bool { 
 
 if let customController = ActorSDK . sharedActor ( ) . delegate . actorControllerForConversation ( ACPeer _ userWithInt _ ( contact . uid ) ) { 
 navigateDetail ( customController ) 
 @ @ - 44 , 7 + 44 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 return true 
 } 
 
 - func willAddContacts ( controller : AAContactsListContentController , section : AAManagedSection ) { 
 + public func willAddContacts ( controller : AAContactsListContentController , section : AAManagedSection ) { 
 
 section . custom { ( r : AACustomRow < AAContactActionCell > ) - > ( ) in 
 
 @ @ - 127 , 7 + 127 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 
 / / Searching for contact 
 
 - func findContact ( ) { 
 + public func findContact ( ) { 
 
 startEditField { ( c ) - > ( ) in 
 c . title = " FindTitle " 
 @ @ - 180 , 7 + 180 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 } 
 } 
 
 - func alertView ( alertView : UIAlertView , clickedButtonAtIndex buttonIndex : Int ) { 
 + public func alertView ( alertView : UIAlertView , clickedButtonAtIndex buttonIndex : Int ) { 
 if buttonIndex = = 1 { 
 let textField = alertView . textFieldAtIndex ( 0 ) ! 
 if textField . text ? . length > 0 { 
 @ @ - 218 , 7 + 218 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 
 / / Email Invitation 
 
 - func showEmailInvitation ( recipients : [ String ] ? ) { 
 + public func showEmailInvitation ( recipients : [ String ] ? ) { 
 if MFMailComposeViewController . canSendMail ( ) { 
 
 let messageComposeController = MFMailComposeViewController ( ) 
 @ @ - 234 , 16 + 234 , 16 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 } 
 } 
 
 - func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { 
 + public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { 
 controller . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 
 / / SMS Invitation 
 - func showSmsInvitation ( ) { 
 + public func showSmsInvitation ( ) { 
 self . showSmsInvitation ( nil ) 
 } 
 
 - func showSmsInvitation ( recipients : [ String ] ? ) { 
 + public func showSmsInvitation ( recipients : [ String ] ? ) { 
 if MFMessageComposeViewController . canSendText ( ) { 
 let messageComposeController = MFMessageComposeViewController ( ) 
 messageComposeController . messageComposeDelegate = self 
 @ @ - 253 , 7 + 253 , 7 @ @ class AAContactsViewController : AAContactsListContentController , AAContactsListC 
 } 
 } 
 
 - @ objc func messageComposeViewController ( controller : MFMessageComposeViewController , didFinishWithResult result : MessageComposeResult ) { 
 + @ objc public func messageComposeViewController ( controller : MFMessageComposeViewController , didFinishWithResult result : MessageComposeResult ) { 
 controller . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist b / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist 
 index 7888389 . . 326a0fa 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist 	 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / Supporting Files / Info . plist 	 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 	 	 < / dict > 
 	 < / array > 
 	 < key > CFBundleVersion < / key > 
 - 	 < string > 511 < / string > 
 + 	 < string > 515 < / string > 
 	 < key > Fabric < / key > 
 	 < dict > 
 	 	 < key > APIKey < / key > 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index f742f60 . . 3c0191a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 279 , 10 + 279 , 8 @ @ public class ActorSDK { 
 } 
 if controller = = nil { 
 let tab = AARootTabViewController ( ) 
 - tab . viewControllers = [ 
 - AANavigationController ( rootViewController : AAContactsViewController ( ) ) , 
 - AANavigationController ( rootViewController : AARecentViewController ( ) ) , 
 - AANavigationController ( rootViewController : AASettingsViewController ( ) ) ] 
 + 
 + tab . viewControllers = self . getMainNavigations ( ) 
 tab . selectedIndex = 0 
 tab . selectedIndex = 1 
 
 @ @ - 319 , 6 + 317 , 48 @ @ public class ActorSDK { 
 UIApplication . sharedApplication ( ) . registerUserNotificationSettings ( settings ) 
 UIApplication . sharedApplication ( ) . registerForRemoteNotifications ( ) 
 } 
 + 
 + / / / Get main navigations with check in delegate for customize from SDK 
 + 
 + private func getMainNavigations ( ) - > [ AANavigationController ] { 
 + 
 + 
 + var mainNavigations = [ AANavigationController ] ( ) 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / contacts 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + if let contactsController = self . delegate . actorControllerForContacts ( ) { 
 + mainNavigations . append ( AANavigationController ( rootViewController : contactsController ) ) 
 + } else { 
 + mainNavigations . append ( AANavigationController ( rootViewController : AAContactsViewController ( ) ) ) 
 + } 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / recent dialogs 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + if let recentDialogs = self . delegate . actorControllerForDialogs ( ) { 
 + mainNavigations . append ( AANavigationController ( rootViewController : recentDialogs ) ) 
 + } else { 
 + mainNavigations . append ( AANavigationController ( rootViewController : AARecentViewController ( ) ) ) 
 + } 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / settings 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + if let settingsController = self . delegate . actorControllerForSettings ( ) { 
 + mainNavigations . append ( AANavigationController ( rootViewController : settingsController ) ) 
 + } else { 
 + mainNavigations . append ( AANavigationController ( rootViewController : AASettingsViewController ( ) ) ) 
 + } 
 + 
 + 
 + return mainNavigations ; 
 + 
 + } 
 
 
 / / 
 @ @ - 341 , 10 + 381 , 7 @ @ public class ActorSDK { 
 var controller : UIViewController ! = delegate . actorControllerForStart ( ) 
 if controller = = nil { 
 let tab = AARootTabViewController ( ) 
 - tab . viewControllers = [ 
 - AANavigationController ( rootViewController : AAContactsViewController ( ) ) , 
 - AANavigationController ( rootViewController : AARecentViewController ( ) ) , 
 - AANavigationController ( rootViewController : AASettingsViewController ( ) ) ] 
 + tab . viewControllers = self . getMainNavigations ( ) 
 tab . selectedIndex = 0 
 tab . selectedIndex = 1 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift 
 index c66713a . . 8096d0b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDKDelegate . swift 
 @ @ - 25 , 6 + 25 , 15 @ @ public protocol ActorSDKDelegate { 
 / / / Conversation controller 
 func actorControllerForConversation ( peer : ACPeer ) - > UIViewController ? 
 
 + / / / Contacts controller 
 + func actorControllerForContacts ( ) - > AAViewController ? 
 + 
 + / / / Dialogs controller 
 + func actorControllerForDialogs ( ) - > AAViewController ? 
 + 
 + / / / Settings controller 
 + func actorControllerForSettings ( ) - > AAViewController ? 
 + 
 / / / Configuration of bubble cells 
 func actorConfigureBubbleLayouters ( builtIn : [ AABubbleLayouter ] ) - > [ AABubbleLayouter ] 
 
 @ @ - 67 , 6 + 76 , 18 @ @ public class ActorSDKDelegateDefault : NSObject , ActorSDKDelegate { 
 return nil 
 } 
 
 + public func actorControllerForContacts ( ) - > AAViewController ? { 
 + return nil 
 + } 
 + 
 + public func actorControllerForDialogs ( ) - > AAViewController ? { 
 + return nil 
 + } 
 + 
 + public func actorControllerForSettings ( ) - > AAViewController ? { 
 + return nil 
 + } 
 + 
 public func actorConfigureBubbleLayouters ( builtIn : [ AABubbleLayouter ] ) - > [ AABubbleLayouter ] { 
 return builtIn 
 }
