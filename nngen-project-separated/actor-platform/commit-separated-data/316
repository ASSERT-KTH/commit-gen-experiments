BLEU SCORE: 0.19493995755254476

TEST MSG: feat ( js ) : Adding animation content
GENERATED MSG: fix ( core - js ) : add JsContentSticker

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > index fe3864f . . cb2c36e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > @ @ - 13 , 6 + 13 , 7 @ @ import im . actor . core . api . ApiTextModernField ; < nl > import im . actor . core . api . ApiTextModernMessage ; < nl > import im . actor . core . entity . ImageLocation ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > + import im . actor . core . entity . content . AnimationContent ; < nl > import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . entity . content . FileLocalSource ; < nl > @ @ - 84 , 6 + 85 , 11 @ @ public abstract class JsContent extends JavaScriptObject { < nl > fileName , fileExtension , fileSize , < nl > photoContent . getW ( ) , photoContent . getH ( ) , thumb , < nl > fileUrl , isUploading ) ; < nl > + } else if ( src instanceof AnimationContent ) { < nl > + AnimationContent animationContent = ( AnimationContent ) src ; < nl > + content = JsContentAnimation . create ( fileName , fileExtension , fileSize , < nl > + animationContent . getW ( ) , animationContent . getH ( ) , thumb , < nl > + fileUrl , isUploading ) ; < nl > } else if ( src instanceof VoiceContent ) { < nl > VoiceContent voiceContent = ( VoiceContent ) src ; < nl > content = JsContentVoice . create ( fileName , fileExtension , fileSize , fileUrl , < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentAnimation . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentAnimation . java < nl > new file mode 100644 < nl > index 0000000 . . 237f692 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentAnimation . java < nl > @ @ - 0 , 0 + 1 , 15 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . js . entity ; < nl > + < nl > + public class JsContentAnimation extends JsContent { < nl > + public native static JsContentAnimation create ( String fileName , String fileExtension , String fileSize , int w , int h , String preview , String fileUrl , boolean isUploading ) / * - { < nl > + return { content : " animation " , fileName : fileName , fileExtension : fileExtension , w : w , h : h , preview : preview , fileSize : fileSize , fileUrl : fileUrl , isUploading : isUploading } ; < nl > + } - * / ; < nl > + < nl > + protected JsContentAnimation ( ) { < nl > + < nl > + } < nl > + }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > index 7d2c873 . . 6d1b705 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > @ @ - 25 , 6 + 25 , 7 @ @ import im . actor . core . entity . content . ServiceContent ; < nl > import im . actor . core . entity . content . StickerContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . VoiceContent ; < nl > + import im . actor . core . entity . content . internal . Sticker ; < nl > import im . actor . core . js . JsMessenger ; < nl > import im . actor . runtime . crypto . Base64Utils ; < nl > < nl > @ @ - 96 , 17 + 97 , 18 @ @ public abstract class JsContent extends JavaScriptObject { < nl > } < nl > < nl > } else if ( src instanceof StickerContent ) { < nl > - FileReference fileReference512 = ( ( StickerContent ) src ) . getSticker ( ) . getFileReference512 ( ) ; < nl > - ApiImageLocation imageLocation512 = ( ( StickerContent ) src ) . getSticker ( ) . getApiImageLocation512 ( ) ; < nl > + Sticker sticker = ( ( StickerContent ) src ) . getSticker ( ) ; < nl > + FileReference fileReference512 = sticker . getFileReference512 ( ) ; < nl > + ApiImageLocation imageLocation512 = sticker . getApiImageLocation512 ( ) ; < nl > String fileUrl = messenger . getFileUrl ( fileReference512 ) ; < nl > String fileSize = messenger . getFormatter ( ) . formatFileSize ( fileReference512 . getFileSize ( ) ) ; < nl > String thumb = null ; < nl > - byte [ ] thumbRaw = ( ( StickerContent ) src ) . getSticker ( ) . getThumb ( ) ; < nl > + byte [ ] thumbRaw = sticker . getThumb ( ) ; < nl > if ( thumbRaw ! = null ) { < nl > String thumbBase64 = Base64Utils . toBase64 ( thumbRaw ) ; < nl > thumb = " data : image / jpg ; base64 , " + thumbBase64 ; < nl > } < nl > - content = JsContentPhoto . create ( fileReference512 . getFileName ( ) , " . webp " , fileSize , imageLocation512 . getWidth ( ) , imageLocation512 . getHeight ( ) , thumb , fileUrl , false ) ; < nl > + content = JsContentSticker . create ( fileReference512 . getFileName ( ) , " . webp " , fileSize , imageLocation512 . getWidth ( ) , imageLocation512 . getHeight ( ) , thumb , fileUrl , false ) ; < nl > } else if ( src instanceof ContactContent ) { < nl > ContactContent contactContent = ( ContactContent ) src ; < nl > JsArrayString phones = JsArray . createArray ( ) . cast ( ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentSticker . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentSticker . java < nl > new file mode 100644 < nl > index 0000000 . . b38b6e7 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentSticker . java < nl > @ @ - 0 , 0 + 1 , 15 @ @ < nl > + / * < nl > + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > + * / < nl > + < nl > + package im . actor . core . js . entity ; < nl > + < nl > + public class JsContentSticker extends JsContent { < nl > + public native static JsContentSticker create ( String fileName , String fileExtension , String fileSize , int w , int h , String preview , String fileUrl , boolean isUploading ) / * - { < nl > + return { content : " sticker " , fileName : fileName , fileExtension : fileExtension , w : w , h : h , preview : preview , fileSize : fileSize , fileUrl : fileUrl , isUploading : isUploading } ; < nl > + } - * / ; < nl > + < nl > + protected JsContentSticker ( ) { < nl > + < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 index fe3864f . . cb2c36e 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 @ @ - 13 , 6 + 13 , 7 @ @ import im . actor . core . api . ApiTextModernField ; 
 import im . actor . core . api . ApiTextModernMessage ; 
 import im . actor . core . entity . ImageLocation ; 
 import im . actor . core . entity . content . AbsContent ; 
 + import im . actor . core . entity . content . AnimationContent ; 
 import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . entity . content . FileLocalSource ; 
 @ @ - 84 , 6 + 85 , 11 @ @ public abstract class JsContent extends JavaScriptObject { 
 fileName , fileExtension , fileSize , 
 photoContent . getW ( ) , photoContent . getH ( ) , thumb , 
 fileUrl , isUploading ) ; 
 + } else if ( src instanceof AnimationContent ) { 
 + AnimationContent animationContent = ( AnimationContent ) src ; 
 + content = JsContentAnimation . create ( fileName , fileExtension , fileSize , 
 + animationContent . getW ( ) , animationContent . getH ( ) , thumb , 
 + fileUrl , isUploading ) ; 
 } else if ( src instanceof VoiceContent ) { 
 VoiceContent voiceContent = ( VoiceContent ) src ; 
 content = JsContentVoice . create ( fileName , fileExtension , fileSize , fileUrl , 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentAnimation . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentAnimation . java 
 new file mode 100644 
 index 0000000 . . 237f692 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentAnimation . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . js . entity ; 
 + 
 + public class JsContentAnimation extends JsContent { 
 + public native static JsContentAnimation create ( String fileName , String fileExtension , String fileSize , int w , int h , String preview , String fileUrl , boolean isUploading ) / * - { 
 + return { content : " animation " , fileName : fileName , fileExtension : fileExtension , w : w , h : h , preview : preview , fileSize : fileSize , fileUrl : fileUrl , isUploading : isUploading } ; 
 + } - * / ; 
 + 
 + protected JsContentAnimation ( ) { 
 + 
 + } 
 + }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 index 7d2c873 . . 6d1b705 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import im . actor . core . entity . content . ServiceContent ; 
 import im . actor . core . entity . content . StickerContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . VoiceContent ; 
 + import im . actor . core . entity . content . internal . Sticker ; 
 import im . actor . core . js . JsMessenger ; 
 import im . actor . runtime . crypto . Base64Utils ; 
 
 @ @ - 96 , 17 + 97 , 18 @ @ public abstract class JsContent extends JavaScriptObject { 
 } 
 
 } else if ( src instanceof StickerContent ) { 
 - FileReference fileReference512 = ( ( StickerContent ) src ) . getSticker ( ) . getFileReference512 ( ) ; 
 - ApiImageLocation imageLocation512 = ( ( StickerContent ) src ) . getSticker ( ) . getApiImageLocation512 ( ) ; 
 + Sticker sticker = ( ( StickerContent ) src ) . getSticker ( ) ; 
 + FileReference fileReference512 = sticker . getFileReference512 ( ) ; 
 + ApiImageLocation imageLocation512 = sticker . getApiImageLocation512 ( ) ; 
 String fileUrl = messenger . getFileUrl ( fileReference512 ) ; 
 String fileSize = messenger . getFormatter ( ) . formatFileSize ( fileReference512 . getFileSize ( ) ) ; 
 String thumb = null ; 
 - byte [ ] thumbRaw = ( ( StickerContent ) src ) . getSticker ( ) . getThumb ( ) ; 
 + byte [ ] thumbRaw = sticker . getThumb ( ) ; 
 if ( thumbRaw ! = null ) { 
 String thumbBase64 = Base64Utils . toBase64 ( thumbRaw ) ; 
 thumb = " data : image / jpg ; base64 , " + thumbBase64 ; 
 } 
 - content = JsContentPhoto . create ( fileReference512 . getFileName ( ) , " . webp " , fileSize , imageLocation512 . getWidth ( ) , imageLocation512 . getHeight ( ) , thumb , fileUrl , false ) ; 
 + content = JsContentSticker . create ( fileReference512 . getFileName ( ) , " . webp " , fileSize , imageLocation512 . getWidth ( ) , imageLocation512 . getHeight ( ) , thumb , fileUrl , false ) ; 
 } else if ( src instanceof ContactContent ) { 
 ContactContent contactContent = ( ContactContent ) src ; 
 JsArrayString phones = JsArray . createArray ( ) . cast ( ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentSticker . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentSticker . java 
 new file mode 100644 
 index 0000000 . . b38b6e7 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContentSticker . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + / * 
 + * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 + * / 
 + 
 + package im . actor . core . js . entity ; 
 + 
 + public class JsContentSticker extends JsContent { 
 + public native static JsContentSticker create ( String fileName , String fileExtension , String fileSize , int w , int h , String preview , String fileUrl , boolean isUploading ) / * - { 
 + return { content : " sticker " , fileName : fileName , fileExtension : fileExtension , w : w , h : h , preview : preview , fileSize : fileSize , fileUrl : fileUrl , isUploading : isUploading } ; 
 + } - * / ; 
 + 
 + protected JsContentSticker ( ) { 
 + 
 + } 
 + }
