BLEU SCORE: 0.345720784641941

TEST MSG: fix ( core ) : Fixing archived messages
GENERATED MSG: feat ( core ) : Adding encrypted peers

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java < nl > index 04de21c . . 646387f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java < nl > @ @ - 26 , 6 + 26 , 7 @ @ import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . messaging . actions . SenderActor ; < nl > import im . actor . core . entity . EntityConverter ; < nl > + import im . actor . core . modules . messaging . history . ArchivedDialogsActor ; < nl > import im . actor . runtime . annotations . Verified ; < nl > < nl > import static im . actor . core . entity . EntityConverter . convert ; < nl > @ @ - 210 , 9 + 211 , 4 @ @ public class MessagesProcessor extends AbsModule { < nl > < nl > context ( ) . getMessagesModule ( ) . getRouter ( ) . onActiveDialogsChanged ( groups , true , true ) ; < nl > } < nl > - < nl > - @ Deprecated < nl > - public void onArchivedDialogsLoaded ( ResponseLoadArchived responseLoadArchived ) { < nl > - / / archivedDialogsActor ( ) . send ( new ArchivedDialogsActor . LoadedMore ( responseLoadArchived ) ) ; < nl > - } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java < nl > index bb2263e . . 5211ce7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java < nl > @ @ - 12 , 6 + 12 , 8 @ @ import im . actor . core . network . RpcCallback ; < nl > import im . actor . core . network . RpcException ; < nl > import im . actor . core . modules . ModuleActor ; < nl > import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . messages . Void ; < nl > + import im . actor . runtime . function . Consumer ; < nl > < nl > public class ArchivedDialogsActor extends ModuleActor { < nl > < nl > @ @ - 61 , 8 + 63 , 13 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > lastRequest = request ( new RequestLoadArchived ( nextOffset , LIMIT ) , < nl > new RpcCallback < ResponseLoadArchived > ( ) { < nl > @ Override < nl > - public void onResult ( ResponseLoadArchived response ) { < nl > - updates ( ) . onUpdateReceived ( new ArchivedDialogLoaded ( response ) ) ; < nl > + public void onResult ( final ResponseLoadArchived response ) { < nl > + updates ( ) . applyRelatedData ( response . getUsers ( ) , response . getGroups ( ) ) . then ( new Consumer < Void > ( ) { < nl > + @ Override < nl > + public void apply ( Void aVoid ) { < nl > + onLoadedMore ( response ) ; < nl > + } < nl > + } ) . done ( self ( ) ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 86 , 8 + 93 , 6 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof LoadMore ) { < nl > onLoadMore ( ( ( LoadMore ) message ) . isInit ( ) , ( ( LoadMore ) message ) . getCallback ( ) ) ; < nl > - } else if ( message instanceof LoadedMore ) { < nl > - onLoadedMore ( ( ( LoadedMore ) message ) . getResponseLoadArchived ( ) ) ; < nl > } else { < nl > drop ( message ) ; < nl > } < nl > @ @ - 110 , 16 + 115 , 4 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > return callback ; < nl > } < nl > } < nl > - < nl > - public static class LoadedMore { < nl > - ResponseLoadArchived responseLoadArchived ; < nl > - < nl > - public LoadedMore ( ResponseLoadArchived responseLoadArchived ) { < nl > - this . responseLoadArchived = responseLoadArchived ; < nl > - } < nl > - < nl > - public ResponseLoadArchived getResponseLoadArchived ( ) { < nl > - return responseLoadArchived ; < nl > - } < nl > - } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java < nl > index 897b1ec . . bf7ea62 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java < nl > @ @ - 114 , 11 + 114 , 7 @ @ public class UpdateProcessor extends AbsModule { < nl > } < nl > < nl > public void processInternalUpdate ( InternalUpdate update ) { < nl > - if ( update instanceof ArchivedDialogLoaded ) { < nl > - ResponseLoadArchived dialogs = ( ( ArchivedDialogLoaded ) update ) . getDialogs ( ) ; < nl > - applyRelated ( dialogs . getUsers ( ) , dialogs . getGroups ( ) , false ) ; < nl > - messagesProcessor . onArchivedDialogsLoaded ( ( ( ArchivedDialogLoaded ) update ) . getDialogs ( ) ) ; < nl > - } else if ( update instanceof LoggedIn ) { < nl > + if ( update instanceof LoggedIn ) { < nl > ArrayList < ApiUser > users = new ArrayList < ApiUser > ( ) ; < nl > users . add ( ( ( LoggedIn ) update ) . getAuth ( ) . getUser ( ) ) ; < nl > applyRelated ( users , new ArrayList < ApiGroup > ( ) , true ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java < nl > index 07a38e8 . . ee160ce 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java < nl > @ @ - 115 , 6 + 115 , 9 @ @ public class Peer extends BserObject { < nl > case 3 : < nl > peerType = PeerType . GROUP ; < nl > break ; < nl > + case 4 : < nl > + peerType = PeerType . PRIVATE _ ENCRYPTED ; < nl > + break ; < nl > } < nl > } < nl > < nl > @ @ - 129 , 6 + 132 , 9 @ @ public class Peer extends BserObject { < nl > case GROUP : < nl > writer . writeInt ( 2 , 3 ) ; < nl > break ; < nl > + case PRIVATE _ ENCRYPTED : < nl > + writer . writeInt ( 2 , 4 ) ; < nl > + break ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java < nl > index 4e5072a . . fa61e8c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java < nl > @ @ - 5 , 5 + 5 , 5 @ @ < nl > package im . actor . core . entity ; < nl > < nl > public enum PeerType { < nl > - PRIVATE , GROUP < nl > + PRIVATE , GROUP , PRIVATE _ ENCRYPTED < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / EncryptedProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / EncryptedProcessor . java < nl > new file mode 100644 < nl > index 0000000 . . 762fa1b < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / EncryptedProcessor . java < nl > @ @ - 0 , 0 + 1 , 38 @ @ < nl > + package im . actor . core . modules . updates ; < nl > + < nl > + import im . actor . core . api . updates . UpdateEncryptedPackage ; < nl > + import im . actor . core . api . updates . UpdatePublicKeyGroupAdded ; < nl > + import im . actor . core . api . updates . UpdatePublicKeyGroupChanged ; < nl > + import im . actor . core . api . updates . UpdatePublicKeyGroupRemoved ; < nl > + import im . actor . core . modules . AbsModule ; < nl > + import im . actor . core . modules . ModuleContext ; < nl > + import im . actor . core . modules . encryption . EncryptedMsgActor ; < nl > + import im . actor . core . modules . encryption . KeyManagerActor ; < nl > + import im . actor . core . modules . sequence . Processor ; < nl > + < nl > + public class EncryptedProcessor extends AbsModule implements Processor { < nl > + < nl > + public EncryptedProcessor ( ModuleContext context ) { < nl > + super ( context ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public boolean process ( Object update ) { < nl > + if ( update instanceof UpdatePublicKeyGroupAdded ) { < nl > + context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupAdded ( < nl > + ( ( UpdatePublicKeyGroupAdded ) update ) . getUid ( ) , < nl > + ( ( UpdatePublicKeyGroupAdded ) update ) . getKeyGroup ( ) < nl > + ) ) ; < nl > + return true ; < nl > + } else if ( update instanceof UpdatePublicKeyGroupRemoved ) { < nl > + context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupRemoved ( < nl > + ( ( UpdatePublicKeyGroupRemoved ) update ) . getUid ( ) , < nl > + ( ( UpdatePublicKeyGroupRemoved ) update ) . getKeyGroupId ( ) < nl > + ) ) ; < nl > + return true ; < nl > + } else if ( update instanceof UpdateEncryptedPackage ) { < nl > + < nl > + } < nl > + return false ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java < nl > index e543022 . . 15b78e9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java < nl > @ @ - 89 , 6 + 89 , 7 @ @ public class UpdateProcessor extends AbsModule { < nl > private ContactsProcessor contactsProcessor ; < nl > private StickersProcessor stickersProcessor ; < nl > private CallsProcessor callsProcessor ; < nl > + private EncryptedProcessor encryptedProcessor ; < nl > < nl > public UpdateProcessor ( ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 101 , 6 + 102 , 7 @ @ public class UpdateProcessor extends AbsModule { < nl > this . typingProcessor = new TypingProcessor ( context ) ; < nl > this . stickersProcessor = new StickersProcessor ( context ) ; < nl > this . callsProcessor = new CallsProcessor ( context ) ; < nl > + this . encryptedProcessor = new EncryptedProcessor ( context ) ; < nl > } < nl > < nl > public void applyRelated ( List < ApiUser > users , < nl > @ @ - 239 , 6 + 241 , 9 @ @ public class UpdateProcessor extends AbsModule { < nl > if ( usersProcessor . process ( update ) ) { < nl > return ; < nl > } < nl > + if ( encryptedProcessor . process ( update ) ) { < nl > + return ; < nl > + } < nl > if ( update instanceof UpdateMessage ) { < nl > UpdateMessage message = ( UpdateMessage ) update ; < nl > messagesProcessor . onMessage ( message . getPeer ( ) , message . getSenderUid ( ) , message . getDate ( ) , message . getRid ( ) , < nl > @ @ - 349 , 16 + 354 , 6 @ @ public class UpdateProcessor extends AbsModule { < nl > callsProcessor . onSignal ( ( UpdateCallSignal ) update ) ; < nl > } else if ( update instanceof UpdateCallEnded ) { < nl > callsProcessor . onCallEnd ( ( UpdateCallEnded ) update ) ; < nl > - } else if ( update instanceof UpdatePublicKeyGroupAdded ) { < nl > - context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupAdded ( < nl > - ( ( UpdatePublicKeyGroupAdded ) update ) . getUid ( ) , < nl > - ( ( UpdatePublicKeyGroupAdded ) update ) . getKeyGroup ( ) < nl > - ) ) ; < nl > - } else if ( update instanceof UpdatePublicKeyGroupRemoved ) { < nl > - context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupRemoved ( < nl > - ( ( UpdatePublicKeyGroupRemoved ) update ) . getUid ( ) , < nl > - ( ( UpdatePublicKeyGroupRemoved ) update ) . getKeyGroupId ( ) < nl > - ) ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java 
 index 04de21c . . 646387f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesProcessor . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . messaging . actions . SenderActor ; 
 import im . actor . core . entity . EntityConverter ; 
 + import im . actor . core . modules . messaging . history . ArchivedDialogsActor ; 
 import im . actor . runtime . annotations . Verified ; 
 
 import static im . actor . core . entity . EntityConverter . convert ; 
 @ @ - 210 , 9 + 211 , 4 @ @ public class MessagesProcessor extends AbsModule { 
 
 context ( ) . getMessagesModule ( ) . getRouter ( ) . onActiveDialogsChanged ( groups , true , true ) ; 
 } 
 - 
 - @ Deprecated 
 - public void onArchivedDialogsLoaded ( ResponseLoadArchived responseLoadArchived ) { 
 - / / archivedDialogsActor ( ) . send ( new ArchivedDialogsActor . LoadedMore ( responseLoadArchived ) ) ; 
 - } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java 
 index bb2263e . . 5211ce7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java 
 @ @ - 12 , 6 + 12 , 8 @ @ import im . actor . core . network . RpcCallback ; 
 import im . actor . core . network . RpcException ; 
 import im . actor . core . modules . ModuleActor ; 
 import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . messages . Void ; 
 + import im . actor . runtime . function . Consumer ; 
 
 public class ArchivedDialogsActor extends ModuleActor { 
 
 @ @ - 61 , 8 + 63 , 13 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 lastRequest = request ( new RequestLoadArchived ( nextOffset , LIMIT ) , 
 new RpcCallback < ResponseLoadArchived > ( ) { 
 @ Override 
 - public void onResult ( ResponseLoadArchived response ) { 
 - updates ( ) . onUpdateReceived ( new ArchivedDialogLoaded ( response ) ) ; 
 + public void onResult ( final ResponseLoadArchived response ) { 
 + updates ( ) . applyRelatedData ( response . getUsers ( ) , response . getGroups ( ) ) . then ( new Consumer < Void > ( ) { 
 + @ Override 
 + public void apply ( Void aVoid ) { 
 + onLoadedMore ( response ) ; 
 + } 
 + } ) . done ( self ( ) ) ; 
 } 
 
 @ Override 
 @ @ - 86 , 8 + 93 , 6 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 public void onReceive ( Object message ) { 
 if ( message instanceof LoadMore ) { 
 onLoadMore ( ( ( LoadMore ) message ) . isInit ( ) , ( ( LoadMore ) message ) . getCallback ( ) ) ; 
 - } else if ( message instanceof LoadedMore ) { 
 - onLoadedMore ( ( ( LoadedMore ) message ) . getResponseLoadArchived ( ) ) ; 
 } else { 
 drop ( message ) ; 
 } 
 @ @ - 110 , 16 + 115 , 4 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 return callback ; 
 } 
 } 
 - 
 - public static class LoadedMore { 
 - ResponseLoadArchived responseLoadArchived ; 
 - 
 - public LoadedMore ( ResponseLoadArchived responseLoadArchived ) { 
 - this . responseLoadArchived = responseLoadArchived ; 
 - } 
 - 
 - public ResponseLoadArchived getResponseLoadArchived ( ) { 
 - return responseLoadArchived ; 
 - } 
 - } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java 
 index 897b1ec . . bf7ea62 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / UpdateProcessor . java 
 @ @ - 114 , 11 + 114 , 7 @ @ public class UpdateProcessor extends AbsModule { 
 } 
 
 public void processInternalUpdate ( InternalUpdate update ) { 
 - if ( update instanceof ArchivedDialogLoaded ) { 
 - ResponseLoadArchived dialogs = ( ( ArchivedDialogLoaded ) update ) . getDialogs ( ) ; 
 - applyRelated ( dialogs . getUsers ( ) , dialogs . getGroups ( ) , false ) ; 
 - messagesProcessor . onArchivedDialogsLoaded ( ( ( ArchivedDialogLoaded ) update ) . getDialogs ( ) ) ; 
 - } else if ( update instanceof LoggedIn ) { 
 + if ( update instanceof LoggedIn ) { 
 ArrayList < ApiUser > users = new ArrayList < ApiUser > ( ) ; 
 users . add ( ( ( LoggedIn ) update ) . getAuth ( ) . getUser ( ) ) ; 
 applyRelated ( users , new ArrayList < ApiGroup > ( ) , true ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java 
 index 07a38e8 . . ee160ce 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Peer . java 
 @ @ - 115 , 6 + 115 , 9 @ @ public class Peer extends BserObject { 
 case 3 : 
 peerType = PeerType . GROUP ; 
 break ; 
 + case 4 : 
 + peerType = PeerType . PRIVATE _ ENCRYPTED ; 
 + break ; 
 } 
 } 
 
 @ @ - 129 , 6 + 132 , 9 @ @ public class Peer extends BserObject { 
 case GROUP : 
 writer . writeInt ( 2 , 3 ) ; 
 break ; 
 + case PRIVATE _ ENCRYPTED : 
 + writer . writeInt ( 2 , 4 ) ; 
 + break ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java 
 index 4e5072a . . fa61e8c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / PeerType . java 
 @ @ - 5 , 5 + 5 , 5 @ @ 
 package im . actor . core . entity ; 
 
 public enum PeerType { 
 - PRIVATE , GROUP 
 + PRIVATE , GROUP , PRIVATE _ ENCRYPTED 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / EncryptedProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / EncryptedProcessor . java 
 new file mode 100644 
 index 0000000 . . 762fa1b 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / EncryptedProcessor . java 
 @ @ - 0 , 0 + 1 , 38 @ @ 
 + package im . actor . core . modules . updates ; 
 + 
 + import im . actor . core . api . updates . UpdateEncryptedPackage ; 
 + import im . actor . core . api . updates . UpdatePublicKeyGroupAdded ; 
 + import im . actor . core . api . updates . UpdatePublicKeyGroupChanged ; 
 + import im . actor . core . api . updates . UpdatePublicKeyGroupRemoved ; 
 + import im . actor . core . modules . AbsModule ; 
 + import im . actor . core . modules . ModuleContext ; 
 + import im . actor . core . modules . encryption . EncryptedMsgActor ; 
 + import im . actor . core . modules . encryption . KeyManagerActor ; 
 + import im . actor . core . modules . sequence . Processor ; 
 + 
 + public class EncryptedProcessor extends AbsModule implements Processor { 
 + 
 + public EncryptedProcessor ( ModuleContext context ) { 
 + super ( context ) ; 
 + } 
 + 
 + @ Override 
 + public boolean process ( Object update ) { 
 + if ( update instanceof UpdatePublicKeyGroupAdded ) { 
 + context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupAdded ( 
 + ( ( UpdatePublicKeyGroupAdded ) update ) . getUid ( ) , 
 + ( ( UpdatePublicKeyGroupAdded ) update ) . getKeyGroup ( ) 
 + ) ) ; 
 + return true ; 
 + } else if ( update instanceof UpdatePublicKeyGroupRemoved ) { 
 + context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupRemoved ( 
 + ( ( UpdatePublicKeyGroupRemoved ) update ) . getUid ( ) , 
 + ( ( UpdatePublicKeyGroupRemoved ) update ) . getKeyGroupId ( ) 
 + ) ) ; 
 + return true ; 
 + } else if ( update instanceof UpdateEncryptedPackage ) { 
 + 
 + } 
 + return false ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java 
 index e543022 . . 15b78e9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / updates / UpdateProcessor . java 
 @ @ - 89 , 6 + 89 , 7 @ @ public class UpdateProcessor extends AbsModule { 
 private ContactsProcessor contactsProcessor ; 
 private StickersProcessor stickersProcessor ; 
 private CallsProcessor callsProcessor ; 
 + private EncryptedProcessor encryptedProcessor ; 
 
 public UpdateProcessor ( ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 101 , 6 + 102 , 7 @ @ public class UpdateProcessor extends AbsModule { 
 this . typingProcessor = new TypingProcessor ( context ) ; 
 this . stickersProcessor = new StickersProcessor ( context ) ; 
 this . callsProcessor = new CallsProcessor ( context ) ; 
 + this . encryptedProcessor = new EncryptedProcessor ( context ) ; 
 } 
 
 public void applyRelated ( List < ApiUser > users , 
 @ @ - 239 , 6 + 241 , 9 @ @ public class UpdateProcessor extends AbsModule { 
 if ( usersProcessor . process ( update ) ) { 
 return ; 
 } 
 + if ( encryptedProcessor . process ( update ) ) { 
 + return ; 
 + } 
 if ( update instanceof UpdateMessage ) { 
 UpdateMessage message = ( UpdateMessage ) update ; 
 messagesProcessor . onMessage ( message . getPeer ( ) , message . getSenderUid ( ) , message . getDate ( ) , message . getRid ( ) , 
 @ @ - 349 , 16 + 354 , 6 @ @ public class UpdateProcessor extends AbsModule { 
 callsProcessor . onSignal ( ( UpdateCallSignal ) update ) ; 
 } else if ( update instanceof UpdateCallEnded ) { 
 callsProcessor . onCallEnd ( ( UpdateCallEnded ) update ) ; 
 - } else if ( update instanceof UpdatePublicKeyGroupAdded ) { 
 - context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupAdded ( 
 - ( ( UpdatePublicKeyGroupAdded ) update ) . getUid ( ) , 
 - ( ( UpdatePublicKeyGroupAdded ) update ) . getKeyGroup ( ) 
 - ) ) ; 
 - } else if ( update instanceof UpdatePublicKeyGroupRemoved ) { 
 - context ( ) . getEncryption ( ) . getKeyManager ( ) . send ( new KeyManagerActor . PublicKeysGroupRemoved ( 
 - ( ( UpdatePublicKeyGroupRemoved ) update ) . getUid ( ) , 
 - ( ( UpdatePublicKeyGroupRemoved ) update ) . getKeyGroupId ( ) 
 - ) ) ; 
 } 
 }
