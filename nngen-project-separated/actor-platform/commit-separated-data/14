BLEU SCORE: 0.4835447404743731

TEST MSG: fix ( server ) : gcm config
GENERATED MSG: fix ( server ) : catch config exception earlier

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala < nl > index e717788 . . a509251 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala < nl > @ @ - 1 , 6 + 1 , 6 @ @ < nl > package im . actor . server . push . google < nl > < nl > - import com . typesafe . config . { Config , ConfigException } < nl > + import com . typesafe . config . Config < nl > import com . github . kxbmap . configs . syntax . _ < nl > import im . actor . config . ActorConfig < nl > < nl > @ @ - 19 , 13 + 19 , 13 @ @ private [ google ] object GooglePushManagerConfig { < nl > < nl > def loadGCM : Try [ GooglePushManagerConfig ] = { < nl > val config = ActorConfig . load ( ) < nl > - load ( config . getConfig ( " services . google . gcm " ) ) recoverWith { < nl > - case e : ConfigException . Missing ⇒ load ( config . getConfig ( " services . google . push " ) ) / / legacy conf , before firebase < nl > - } < nl > + val legacy = load ( config . getConfig ( " services . google . push " ) ) < nl > + val gcm = load ( config . getConfig ( " services . google . gcm " ) ) < nl > + legacy . orElse ( gcm ) < nl > } < nl > < nl > def loadFirebase : Try [ GooglePushManagerConfig ] = < nl > load ( ActorConfig . load ( ) . getConfig ( " services . google . firebase " ) ) < nl > < nl > - private def load ( config : = > Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) < nl > + private def load ( config : ⇒ Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala < nl > index 36aff09 . . e717788 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala < nl > @ @ - 27 , 5 + 27 , 5 @ @ private [ google ] object GooglePushManagerConfig { < nl > def loadFirebase : Try [ GooglePushManagerConfig ] = < nl > load ( ActorConfig . load ( ) . getConfig ( " services . google . firebase " ) ) < nl > < nl > - private def load ( config : Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) < nl > + private def load ( config : = > Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala 
 index e717788 . . a509251 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package im . actor . server . push . google 
 
 - import com . typesafe . config . { Config , ConfigException } 
 + import com . typesafe . config . Config 
 import com . github . kxbmap . configs . syntax . _ 
 import im . actor . config . ActorConfig 
 
 @ @ - 19 , 13 + 19 , 13 @ @ private [ google ] object GooglePushManagerConfig { 
 
 def loadGCM : Try [ GooglePushManagerConfig ] = { 
 val config = ActorConfig . load ( ) 
 - load ( config . getConfig ( " services . google . gcm " ) ) recoverWith { 
 - case e : ConfigException . Missing ⇒ load ( config . getConfig ( " services . google . push " ) ) / / legacy conf , before firebase 
 - } 
 + val legacy = load ( config . getConfig ( " services . google . push " ) ) 
 + val gcm = load ( config . getConfig ( " services . google . gcm " ) ) 
 + legacy . orElse ( gcm ) 
 } 
 
 def loadFirebase : Try [ GooglePushManagerConfig ] = 
 load ( ActorConfig . load ( ) . getConfig ( " services . google . firebase " ) ) 
 
 - private def load ( config : = > Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) 
 + private def load ( config : ⇒ Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala 
 index 36aff09 . . e717788 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / push / google / configs . scala 
 @ @ - 27 , 5 + 27 , 5 @ @ private [ google ] object GooglePushManagerConfig { 
 def loadFirebase : Try [ GooglePushManagerConfig ] = 
 load ( ActorConfig . load ( ) . getConfig ( " services . google . firebase " ) ) 
 
 - private def load ( config : Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) 
 + private def load ( config : = > Config ) = Try ( config . extract [ GooglePushManagerConfig ] ) 
 }
