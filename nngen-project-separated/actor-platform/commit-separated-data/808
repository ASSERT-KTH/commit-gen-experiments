BLEU SCORE: 0.15678003406168173

TEST MSG: fix ( server ) : fixed compilation error
GENERATED MSG: fix ( server : webrtc ) : send UpdateCallHandled on call handle

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > index 8f6e45b . . 8e00bc5 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > @ @ - 259 , 7 + 259 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { < nl > broadcastSyncedSet ( ) < nl > } < nl > case msg : ApiOnRenegotiationNeeded ⇒ < nl > - / / TODO : # perf remove filterNot < nl > + / / TODO : # perf remove sessions . find and sessions . filterNot < nl > for { < nl > deviceId ← ebMessage . deviceId < nl > ( pair , sessionId ) ← sessions find ( _ = = msg . sessionId ) < nl > @ @ - 267 , 7 + 267 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { < nl > rightDevice ← devices get pair . right < nl > } yield { < nl > if ( pair = = Pair ( deviceId , msg . device ) ) { < nl > - sessions - = sessionId < nl > + sessions = sessions filterNot ( _ = = sessionId ) < nl > eventBusExt . post ( EventBus . InternalClient ( self ) , eventBusId , Seq ( pair . left ) , ApiCloseSession ( pair . right , sessionId ) . toByteArray ) < nl > eventBusExt . post ( EventBus . InternalClient ( self ) , eventBusId , Seq ( pair . right ) , ApiCloseSession ( pair . left , sessionId ) . toByteArray ) < nl > connect ( leftDevice , rightDevice )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > index 9d5184d . . 0e5d6f7 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala < nl > @ @ - 117 , 6 + 117 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { < nl > ApiWebRTCSignaling . parseFrom ( message ) . right foreach { < nl > case ApiAnswerCall ⇒ < nl > scheduledUpd foreach ( _ . cancel ( ) ) < nl > + weakUpdExt . broadcastUsersWeakUpdate ( participants . filterNot ( _ = = userId ) , UpdateCallHandled ( id ) ) < nl > context become callInProgress ( eventBusId , System . currentTimeMillis ( ) , callerUserId , participants ) < nl > case ApiEndCall ⇒ < nl > scheduledUpd foreach ( _ . cancel ( ) )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 index 8f6e45b . . 8e00bc5 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 @ @ - 259 , 7 + 259 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { 
 broadcastSyncedSet ( ) 
 } 
 case msg : ApiOnRenegotiationNeeded ⇒ 
 - / / TODO : # perf remove filterNot 
 + / / TODO : # perf remove sessions . find and sessions . filterNot 
 for { 
 deviceId ← ebMessage . deviceId 
 ( pair , sessionId ) ← sessions find ( _ = = msg . sessionId ) 
 @ @ - 267 , 7 + 267 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { 
 rightDevice ← devices get pair . right 
 } yield { 
 if ( pair = = Pair ( deviceId , msg . device ) ) { 
 - sessions - = sessionId 
 + sessions = sessions filterNot ( _ = = sessionId ) 
 eventBusExt . post ( EventBus . InternalClient ( self ) , eventBusId , Seq ( pair . left ) , ApiCloseSession ( pair . right , sessionId ) . toByteArray ) 
 eventBusExt . post ( EventBus . InternalClient ( self ) , eventBusId , Seq ( pair . right ) , ApiCloseSession ( pair . left , sessionId ) . toByteArray ) 
 connect ( leftDevice , rightDevice )

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 index 9d5184d . . 0e5d6f7 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / webrtc / WebrtcCallActor . scala 
 @ @ - 117 , 6 + 117 , 7 @ @ private final class WebrtcCallActor extends ActorStashing with ActorLogging { 
 ApiWebRTCSignaling . parseFrom ( message ) . right foreach { 
 case ApiAnswerCall ⇒ 
 scheduledUpd foreach ( _ . cancel ( ) ) 
 + weakUpdExt . broadcastUsersWeakUpdate ( participants . filterNot ( _ = = userId ) , UpdateCallHandled ( id ) ) 
 context become callInProgress ( eventBusId , System . currentTimeMillis ( ) , callerUserId , participants ) 
 case ApiEndCall ⇒ 
 scheduledUpd foreach ( _ . cancel ( ) )
