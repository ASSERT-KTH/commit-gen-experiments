BLEU SCORE: 0.07559140888944793

TEST MSG: feat ( iOS + core ) : Working on new Auth Methods
GENERATED MSG: perf ( core ) : Async Kuznechik init , keeping public keys , delay contacts loading , lazy resources

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 9a87951 . . 41f46a6 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 181 , 6 + 181 , 7 @ @ < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / ; } ; < nl > + 	 	 06D5C05A1C8E9B3B002D5045 / * Promises . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06D5C0591C8E9B3B002D5045 / * Promises . swift * / ; } ; < nl > 	 	 06E322C91C69344A00D66F53 / * iOSCallsProvider . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / ; } ; < nl > 	 	 06E3230E1C69445C00D66F53 / * WebRTC . h in Headers * / = { isa = PBXBuildFile ; fileRef = 06E3230D1C6942C400D66F53 / * WebRTC . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > 	 	 06E323111C694C1D00D66F53 / * WebRTCExt . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / ; } ; < nl > @ @ - 490 , 6 + 491 , 7 @ @ < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthLogInViewController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06D5C0591C8E9B3B002D5045 / * Promises . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Promises . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = iOSCallsProvider . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E3230D1C6942C400D66F53 / * WebRTC . h * / = { isa = PBXFileReference ; lastKnownFileType = sourcecode . c . h ; path = WebRTC . h ; sourceTree = " < group > " ; } ; < nl > 	 	 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = WebRTCExt . swift ; sourceTree = " < group > " ; } ; < nl > @ @ - 741 , 6 + 743 , 7 @ @ < nl > 	 	 	 	 066A514D1BC4BDE4000E606E / * Numbers . swift * / , < nl > 	 	 	 	 066A51431BC4BBAF000E606E / * Strings . swift * / , < nl > 	 	 	 	 066A51471BC4BBF4000E606E / * Views . swift * / , < nl > + 	 	 	 	 06D5C0591C8E9B3B002D5045 / * Promises . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = SwiftExtensions ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1951 , 6 + 1954 , 7 @ @ < nl > 	 	 	 	 066A525C1BC502EB000E606E / * ActorSDKDelegate . swift in Sources * / , < nl > 	 	 	 	 066A52551BC4EF61000E606E / * AANavigationController . swift in Sources * / , < nl > 	 	 	 	 066A52421BC4EECD000E606E / * AATableViewHeader . swift in Sources * / , < nl > + 	 	 	 	 06D5C05A1C8E9B3B002D5045 / * Promises . swift in Sources * / , < nl > 	 	 	 	 066A52CD1BC521FA000E606E / * AADialogsListContentControllerDelegate . swift in Sources * / , < nl > 	 	 	 	 15D35F261C20186200E3717A / * framing . c in Sources * / , < nl > 	 	 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > index 6ed3802 . . 70c7c33 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > @ @ - 144 , 8 + 144 , 12 @ @ public class AAAuthEmailViewController : AAAuthViewController { < nl > return < nl > } < nl > < nl > - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in < nl > - self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) ) < nl > + Actor . doStartAuthWithEmail ( email ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in < nl > + if res . authMode . toNSEnum ( ) = = . OTP { < nl > + self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) ) < nl > + } else { < nl > + self . alertUser ( " This account can ' t be authenticated in this version . Please , update app . " ) < nl > + } < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > index 1e18f66 . . e51f0e5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > @ @ - 73 , 16 + 73 , 24 @ @ public class AAAuthLogInViewController : AAAuthViewController { < nl > return < nl > } < nl > if ( AATools . isValidEmail ( value ) ) { < nl > - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( value ) , successBlock : { ( val ) - > Void in < nl > - self . navigateNext ( AAEmailAuthCodeViewController ( email : value ) ) < nl > - } ) < nl > + Actor . doStartAuthWithEmail ( value ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in < nl > + if res . authMode . toNSEnum ( ) = = . OTP { < nl > + self . navigateNext ( AAEmailAuthCodeViewController ( email : value ) ) < nl > + } else { < nl > + / / TODO : Implement < nl > + } < nl > + } < nl > } else { < nl > let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet < nl > let stripped = value . strip ( numbersSet ) < nl > if let parsed = Int64 ( stripped ) { < nl > - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( jlong ( parsed ) ) , successBlock : { ( val ) - > Void in < nl > - self . navigateNext ( AAAuthCodeViewController ( phoneNumber : value ) ) < nl > - } ) < nl > + Actor . doStartAuthWithPhone ( jlong ( parsed ) ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in < nl > + if res . authMode . toNSEnum ( ) = = . OTP { < nl > + self . navigateNext ( AAAuthCodeViewController ( phoneNumber : value ) ) < nl > + } else { < nl > + / / TODO : Implement < nl > + } < nl > + } < nl > } else { < nl > shakeView ( field , originalX : 20 ) < nl > shakeView ( fieldLine , originalX : 10 ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > index 8a8e6d5 . . 8e4067a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > @ @ - 185 , 8 + 185 , 12 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe < nl > override func nextDidTap ( ) { < nl > let number = phoneNumberLabel . phoneNumber . toJLong ( ) < nl > < nl > - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( number ) ) { ( val ) - > Void in < nl > - self . navigateNext ( AAAuthCodeViewController ( phoneNumber : " \ ( number ) " ) ) < nl > + Actor . doStartAuthWithPhone ( number ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in < nl > + if res . authMode . toNSEnum ( ) = = . OTP { < nl > + self . navigateNext ( AAAuthCodeViewController ( phoneNumber : " \ ( number ) " ) ) < nl > + } else { < nl > + self . alertUser ( " This account can ' t be authenticated in this version . Please , update app . " ) < nl > + } < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift < nl > index 6cec7bd . . 6a05ad8 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift 	 < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift 	 < nl > @ @ - 34 , 6 + 34 , 10 @ @ public class AAMenuBuilder { < nl > < nl > public class AAExecutions { < nl > < nl > + public class func execute ( promise : ARPromise ) { < nl > + < nl > + } < nl > + < nl > public class func execute ( command : ACCommand ) { < nl > execute ( command , successBlock : nil , failureBlock : nil ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Promises . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Promises . swift < nl > new file mode 100644 < nl > index 0000000 . . 9f2aaf8 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Promises . swift < nl > @ @ - 0 , 0 + 1 , 68 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MBProgressHUD < nl > + < nl > + extension ARPromise { < nl > + < nl > + func done ( ) { < nl > + self . done ( MainThreadPromiseDispatcher ( ) ) < nl > + } < nl > + < nl > + func doneLoader ( ) - > ARPromise { < nl > + done ( ) < nl > + < nl > + let window = UIApplication . sharedApplication ( ) . windows [ 1 ] < nl > + let hud = MBProgressHUD ( window : window ) < nl > + hud . mode = MBProgressHUDMode . Indeterminate < nl > + hud . removeFromSuperViewOnHide = true < nl > + window . addSubview ( hud ) < nl > + window . bringSubviewToFront ( hud ) < nl > + hud . show ( true ) < nl > + < nl > + then { ( t : AnyObject ! ) - > ( ) in < nl > + hud . hide ( true ) < nl > + } < nl > + < nl > + failure { ( e ) - > ( ) in < nl > + hud . hide ( true ) < nl > + } < nl > + < nl > + return self < nl > + } < nl > + < nl > + func then < T > ( closure : ( T ! ) - > ( ) ) - > ARPromise { < nl > + then ( PromiseConsumer ( closure : closure ) ) < nl > + return self < nl > + } < nl > + < nl > + func failure ( withClosure closure : ( JavaLangException ! ) - > ( ) ) - > ARPromise { < nl > + failure ( PromiseConsumer ( closure : closure ) ) < nl > + return self < nl > + } < nl > + } < nl > + < nl > + class PromiseConsumer < T > : NSObject , ARConsumer { < nl > + < nl > + let closure : ( T ! ) - > ( ) < nl > + < nl > + init ( closure : ( T ! ) - > ( ) ) { < nl > + self . closure = closure < nl > + } < nl > + < nl > + < nl > + func applyWithId ( t : AnyObject ! ) { < nl > + closure ( t as ! T ) < nl > + } < nl > + } < nl > + < nl > + class MainThreadPromiseDispatcher : ARPromiseDispatcher { < nl > + < nl > + override func dispatchWithARPromise ( promise : ARPromise ! , withJavaLangRunnable runnable : JavaLangRunnable ! ) { < nl > + dispatchOnUi { < nl > + runnable . run ( ) < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift < nl > index 1e9584a . . 083e994 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift < nl > @ @ - 107 , 4 + 107 , 4 @ @ class BackgroundCommand : NSObject , ACCommand { < nl > func backgroundTask ( ) throws { < nl > < nl > } < nl > - } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 9315558 . . b6905bc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 17 , 6 + 17 , 7 @ @ import im . actor . core . api . ApiSex ; < nl > import im . actor . core . api . ApiAuthSession ; < nl > import im . actor . core . api . rpc . ResponseRawRequest ; < nl > import im . actor . core . api . rpc . ResponseSeqDate ; < nl > + import im . actor . core . entity . AuthStartRes ; < nl > import im . actor . core . entity . FileReference ; < nl > import im . actor . core . entity . Group ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > @ @ - 67 , 6 + 68 , 7 @ @ import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . crypto . primitives . kuznechik . KuznechikFastEngine ; < nl > import im . actor . runtime . mvvm . MVVMCollection ; < nl > import im . actor . runtime . mvvm . ValueModel ; < nl > + import im . actor . runtime . promise . Promise ; < nl > import im . actor . runtime . storage . PreferencesStorage ; < nl > < nl > / * * < nl > @ @ - 84 , 6 + 86 , 7 @ @ public class Messenger { < nl > * / < nl > @ ObjectiveCName ( " initWithConfiguration : " ) < nl > public Messenger ( @ NotNull Configuration configuration ) { < nl > + < nl > / / We assume that configuration is valid and all configuration verification < nl > / / Must be implemented in Configuration object < nl > < nl > @ @ - 114 , 6 + 117 , 7 @ @ public class Messenger { < nl > * @ return current Authentication state < nl > * / < nl > @ NotNull < nl > + @ Deprecated < nl > public AuthState getAuthState ( ) { < nl > return modules . getAuthModule ( ) . getAuthState ( ) ; < nl > } < nl > @ @ - 128 , 12 + 132 , 37 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Starting email auth < nl > + * < nl > + * @ param email email for authentication < nl > + * @ return promise of AuthStartRes < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " doStartAuthWithEmail : " ) < nl > + public Promise < AuthStartRes > doStartEmailAuth ( String email ) { < nl > + return modules . getAuthModule ( ) . doStartEmailAuth ( email ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Starting phone auth < nl > + * < nl > + * @ param phone phone for authentication < nl > + * @ return promise of AuthStartRes < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " doStartAuthWithPhone : " ) < nl > + public Promise < AuthStartRes > doStartPhoneAuth ( long phone ) { < nl > + return modules . getAuthModule ( ) . doStartPhoneAuth ( phone ) ; < nl > + } < nl > + < nl > + / * * < nl > * Request email auth < nl > * < nl > * @ param email email to authenticate < nl > * @ return Command for execution < nl > * / < nl > @ NotNull < nl > + @ Deprecated < nl > @ ObjectiveCName ( " requestStartAuthCommandWithEmail : " ) < nl > public Command < AuthState > requestStartEmailAuth ( final String email ) { < nl > return modules . getAuthModule ( ) . requestStartEmailAuth ( email ) ; < nl > @ @ - 146 , 6 + 175 , 7 @ @ public class Messenger { < nl > * @ return Command for execution < nl > * / < nl > @ NotNull < nl > + @ Deprecated < nl > @ ObjectiveCName ( " requestStartAuthCommandWithPhone : " ) < nl > public Command < AuthState > requestStartPhoneAuth ( final long phone ) { < nl > return modules . getAuthModule ( ) . requestStartPhoneAuth ( phone ) ; < nl > @ @ - 158 , 6 + 188 , 7 @ @ public class Messenger { < nl > * @ return Command for execution < nl > * / < nl > @ NotNull < nl > + @ Deprecated < nl > @ ObjectiveCName ( " requestStartAnonymousAuthWithUserName : " ) < nl > public Command < AuthState > requestStartAnonymousAuth ( String userName ) { < nl > return modules . getAuthModule ( ) . requestStartAnonymousAuth ( userName ) ; < nl > @ @ - 254 , 6 + 285 , 7 @ @ public class Messenger { < nl > * @ return phone number in international format < nl > * / < nl > @ ObjectiveCName ( " getAuthPhone " ) < nl > + @ Deprecated < nl > public long getAuthPhone ( ) { < nl > return modules . getAuthModule ( ) . getPhone ( ) ; < nl > } < nl > @ @ - 265 , 6 + 297 , 7 @ @ public class Messenger { < nl > * @ return email < nl > * / < nl > @ ObjectiveCName ( " getAuthEmail " ) < nl > + @ Deprecated < nl > public String getAuthEmail ( ) { < nl > return modules . getAuthModule ( ) . getEmail ( ) ; < nl > } < nl > @ @ - 273 , 10 + 306 , 14 @ @ public class Messenger { < nl > * Resetting authentication process < nl > * / < nl > @ ObjectiveCName ( " resetAuth " ) < nl > + @ Deprecated < nl > public void resetAuth ( ) { < nl > modules . getAuthModule ( ) . resetAuth ( ) ; < nl > } < nl > < nl > + / * * < nl > + * This method is called when messenger was logged in . Useful for subclasses < nl > + * / < nl > public void onLoggedIn ( ) { < nl > < nl > } < nl > @ @ - 334 , 7 + 371 , 6 @ @ public class Messenger { < nl > @ NotNull < nl > @ ObjectiveCName ( " getUserWithUid : " ) < nl > public UserVM getUser ( int uid ) { < nl > - / / noinspection ConstantConditions < nl > return getUsers ( ) . get ( uid ) ; < nl > } < nl > < nl > @ @ - 362 , 7 + 398 , 6 @ @ public class Messenger { < nl > @ NotNull < nl > @ ObjectiveCName ( " getGroupWithGid : " ) < nl > public GroupVM getGroup ( int gid ) { < nl > - / / noinspection ConstantConditions < nl > return getGroups ( ) . get ( gid ) ; < nl > } < nl > < nl > @ @ - 597 , 10 + 632 , 9 @ @ public class Messenger { < nl > / * * < nl > * Update Message < nl > * < nl > - * @ param peer destination peer < nl > - * @ param text message text < nl > - * @ param rid message rundom id < nl > - * < nl > + * @ param peer destination peer < nl > + * @ param text message text < nl > + * @ param rid message rundom id < nl > * / < nl > @ ObjectiveCName ( " updateMessageWithPeer : withText : withRid : " ) < nl > public Command < ResponseSeqDate > updateMessage ( @ NotNull Peer peer , @ NotNull String text , long rid ) { < nl > @ @ - 608 , 7 + 642 , 6 @ @ public class Messenger { < nl > } < nl > < nl > < nl > - < nl > / * * < nl > * Send Markdown Message with mentions < nl > * < nl > @ @ - 1760 , 27 + 1793 , 6 @ @ public class Messenger { < nl > modules . getSettingsModule ( ) . setPrivacy ( privacy ) ; < nl > } < nl > < nl > - < nl > - / * * < nl > - * Is markdown enabled . < nl > - * < nl > - * @ return is markdown enabled < nl > - * / < nl > - @ ObjectiveCName ( " isMarkdownEnabled " ) < nl > - public boolean isMarkdownEnabled ( ) { < nl > - return modules . getSettingsModule ( ) . isMarkdownEnabled ( ) ; < nl > - } < nl > - < nl > - / * * < nl > - * Change if markdown enabled < nl > - * < nl > - * @ param val is markdown enabled < nl > - * / < nl > - @ ObjectiveCName ( " changeMarkdownWithValue : " ) < nl > - public void changeMarkdown ( boolean val ) { < nl > - modules . getSettingsModule ( ) . changeMarkdown ( val ) ; < nl > - } < nl > - < nl > / * * < nl > * Is notifications enabled for peer < nl > * < nl > @ @ - 1904 , 16 + 1916 , 6 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > - * Is Hint about contact rename shown to user and automatically mark as shown if not . < nl > - * < nl > - * @ return is hint already shown < nl > - * / < nl > - @ ObjectiveCName ( " isRenameHintShown " ) < nl > - public boolean isRenameHintShown ( ) { < nl > - return modules . getSettingsModule ( ) . isRenameHintShown ( ) ; < nl > - } < nl > - < nl > - / * * < nl > * Getting selected wallpaper uri . local : [ file _ name ] for local files < nl > * < nl > * @ return not null if custom background set < nl > @ @ - 1951 , 6 + 1953 , 16 @ @ public class Messenger { < nl > modules . getStickersModule ( ) . loadStickers ( ) ; < nl > } < nl > < nl > + / * * < nl > + * Is Hint about contact rename shown to user and automatically mark as shown if not . < nl > + * < nl > + * @ return is hint already shown < nl > + * / < nl > + @ ObjectiveCName ( " isRenameHintShown " ) < nl > + public boolean isRenameHintShown ( ) { < nl > + return modules . getSettingsModule ( ) . isRenameHintShown ( ) ; < nl > + } < nl > + < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > / / Security < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > @ @ - 2143 , 8 + 2155 , 4 @ @ public class Messenger { < nl > ModuleContext getModuleContext ( ) { < nl > return modules ; < nl > } < nl > - < nl > - public long getAuthId ( ) { < nl > - return modules . getApiModule ( ) . getActorApi ( ) . getKeyStorage ( ) . getAuthKey ( ) ; < nl > - } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthMode . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthMode . java < nl > new file mode 100644 < nl > index 0000000 . . 2770fbd < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthMode . java < nl > @ @ - 0 , 0 + 1 , 34 @ @ < nl > + package im . actor . core . entity ; < nl > + < nl > + import im . actor . core . api . ApiEmailActivationType ; < nl > + import im . actor . core . api . ApiPhoneActivationType ; < nl > + < nl > + public enum AuthMode { < nl > + OTP , PASSWORD , OAUTH2 , UNSUPPORTED ; < nl > + < nl > + public static AuthMode fromApi ( ApiEmailActivationType activationType ) { < nl > + switch ( activationType ) { < nl > + case CODE : < nl > + return OTP ; < nl > + case PASSWORD : < nl > + return PASSWORD ; < nl > + case OAUTH2 : < nl > + return OAUTH2 ; < nl > + default : < nl > + case UNSUPPORTED _ VALUE : < nl > + return UNSUPPORTED ; < nl > + } < nl > + } < nl > + < nl > + public static AuthMode fromApi ( ApiPhoneActivationType activationType ) { < nl > + switch ( activationType ) { < nl > + case CODE : < nl > + return OTP ; < nl > + case PASSWORD : < nl > + return PASSWORD ; < nl > + default : < nl > + case UNSUPPORTED _ VALUE : < nl > + return UNSUPPORTED ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthStartRes . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthStartRes . java < nl > new file mode 100644 < nl > index 0000000 . . 30907a2 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthStartRes . java < nl > @ @ - 0 , 0 + 1 , 37 @ @ < nl > + package im . actor . core . entity ; < nl > + < nl > + import com . google . j2objc . annotations . Property ; < nl > + < nl > + import org . jetbrains . annotations . NotNull ; < nl > + < nl > + public class AuthStartRes { < nl > + < nl > + @ NotNull < nl > + @ Property ( " readonly , nonatomic " ) < nl > + private final String transactionHash ; < nl > + @ NotNull < nl > + @ Property ( " readonly , nonatomic " ) < nl > + private final AuthMode authMode ; < nl > + @ Property ( " readonly , nonatomic " ) < nl > + private final boolean isRegistered ; < nl > + < nl > + public AuthStartRes ( @ NotNull String transactionHash , @ NotNull AuthMode authMode , boolean isRegistered ) { < nl > + this . transactionHash = transactionHash ; < nl > + this . authMode = authMode ; < nl > + this . isRegistered = isRegistered ; < nl > + } < nl > + < nl > + @ NotNull < nl > + public String getTransactionHash ( ) { < nl > + return transactionHash ; < nl > + } < nl > + < nl > + @ NotNull < nl > + public AuthMode getAuthMode ( ) { < nl > + return authMode ; < nl > + } < nl > + < nl > + public boolean isRegistered ( ) { < nl > + return isRegistered ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 6c348f3 . . 9cc50b0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 4 , 6 + 4 , 8 @ @ < nl > < nl > package im . actor . core . modules ; < nl > < nl > + import org . jetbrains . annotations . NotNull ; < nl > + < nl > import java . util . ArrayList ; < nl > < nl > import im . actor . core . ApiConfiguration ; < nl > @ @ - 27 , 6 + 29 , 8 @ @ import im . actor . core . api . rpc . ResponseStartEmailAuth ; < nl > import im . actor . core . api . rpc . ResponseStartPhoneAuth ; < nl > import im . actor . core . api . rpc . ResponseStartUsernameAuth ; < nl > import im . actor . core . api . rpc . ResponseVoid ; < nl > + import im . actor . core . entity . AuthMode ; < nl > + import im . actor . core . entity . AuthStartRes ; < nl > import im . actor . core . entity . ContactRecord ; < nl > import im . actor . core . entity . ContactRecordType ; < nl > import im . actor . core . entity . User ; < nl > @ @ - 39 , 6 + 43 , 9 @ @ import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . runtime . * ; < nl > import im . actor . runtime . Runtime ; < nl > + import im . actor . runtime . promise . Promise ; < nl > + import im . actor . runtime . promise . PromiseFunc ; < nl > + import im . actor . runtime . promise . PromiseResolver ; < nl > < nl > public class Authentication { < nl > < nl > @ @ - 59 , 24 + 66 , 34 @ @ public class Authentication { < nl > private Modules modules ; < nl > private AuthState state ; < nl > < nl > - private byte [ ] deviceHash ; < nl > - private ApiConfiguration apiConfiguration ; < nl > + private final ArrayList < String > langs ; < nl > + private final byte [ ] deviceHash ; < nl > + private final ApiConfiguration apiConfiguration ; < nl > < nl > private int myUid ; < nl > < nl > public Authentication ( Modules modules ) { < nl > this . modules = modules ; < nl > < nl > - this . myUid = modules . getPreferences ( ) . getInt ( KEY _ AUTH _ UID , 0 ) ; < nl > - < nl > / / Keep device hash always stable across launch < nl > - deviceHash = modules . getPreferences ( ) . getBytes ( KEY _ DEVICE _ HASH ) ; < nl > - if ( deviceHash = = null ) { < nl > - deviceHash = Crypto . SHA256 ( modules . getConfiguration ( ) . getApiConfiguration ( ) . getDeviceString ( ) . getBytes ( ) ) ; < nl > - modules . getPreferences ( ) . putBytes ( KEY _ DEVICE _ HASH , deviceHash ) ; < nl > + byte [ ] _ deviceHash = modules . getPreferences ( ) . getBytes ( KEY _ DEVICE _ HASH ) ; < nl > + if ( _ deviceHash = = null ) { < nl > + _ deviceHash = Crypto . SHA256 ( modules . getConfiguration ( ) . getApiConfiguration ( ) . getDeviceString ( ) . getBytes ( ) ) ; < nl > + modules . getPreferences ( ) . putBytes ( KEY _ DEVICE _ HASH , _ deviceHash ) ; < nl > + } < nl > + deviceHash = _ deviceHash ; < nl > + < nl > + / / Languages < nl > + langs = new ArrayList < > ( ) ; < nl > + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > + langs . add ( s ) ; < nl > } < nl > < nl > + / / Api Configuration < nl > apiConfiguration = modules . getConfiguration ( ) . getApiConfiguration ( ) ; < nl > + < nl > + / / Authenticated UID < nl > + myUid = modules . getPreferences ( ) . getInt ( KEY _ AUTH _ UID , 0 ) ; < nl > } < nl > < nl > public int myUid ( ) { < nl > @ @ - 108 , 14 + 125 , 67 @ @ public class Authentication { < nl > } < nl > } < nl > < nl > + public Promise < AuthStartRes > doStartEmailAuth ( final String email ) { < nl > + return new Promise < > ( new PromiseFunc < AuthStartRes > ( ) { < nl > + @ Override < nl > + public void exec ( @ NotNull final PromiseResolver < AuthStartRes > resolver ) { < nl > + request ( new RequestStartEmailAuth ( email , < nl > + apiConfiguration . getAppId ( ) , < nl > + apiConfiguration . getAppKey ( ) , < nl > + deviceHash , < nl > + apiConfiguration . getDeviceTitle ( ) , < nl > + modules . getConfiguration ( ) . getTimeZone ( ) , < nl > + langs ) , new RpcCallback < ResponseStartEmailAuth > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseStartEmailAuth response ) { < nl > + resolver . result ( new AuthStartRes ( < nl > + response . getTransactionHash ( ) , < nl > + AuthMode . fromApi ( response . getActivationType ( ) ) , < nl > + response . isRegistered ( ) ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( RpcException e ) { < nl > + resolver . error ( e ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + public Promise < AuthStartRes > doStartPhoneAuth ( final long phone ) { < nl > + return new Promise < > ( new PromiseFunc < AuthStartRes > ( ) { < nl > + @ Override < nl > + public void exec ( @ NotNull final PromiseResolver < AuthStartRes > resolver ) { < nl > + request ( new RequestStartPhoneAuth ( phone , < nl > + apiConfiguration . getAppId ( ) , < nl > + apiConfiguration . getAppKey ( ) , < nl > + deviceHash , < nl > + apiConfiguration . getDeviceTitle ( ) , < nl > + modules . getConfiguration ( ) . getTimeZone ( ) , < nl > + langs ) , new RpcCallback < ResponseStartPhoneAuth > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseStartPhoneAuth response ) { < nl > + resolver . result ( new AuthStartRes ( < nl > + response . getTransactionHash ( ) , < nl > + AuthMode . fromApi ( response . getActivationType ( ) ) , < nl > + response . isRegistered ( ) ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( RpcException e ) { < nl > + resolver . error ( e ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Deprecated < nl > public Command < AuthState > requestStartAnonymousAuth ( final String userName ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > - ArrayList < String > langs = new ArrayList < > ( ) ; < nl > - for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > - langs . add ( s ) ; < nl > - } < nl > request ( new RequestStartAnonymousAuth ( userName , < nl > apiConfiguration . getAppId ( ) , < nl > apiConfiguration . getAppKey ( ) , < nl > @ @ - 143 , 6 + 213 , 7 @ @ public class Authentication { < nl > } ; < nl > } < nl > < nl > + @ Deprecated < nl > public Command < AuthState > requestStartEmailAuth ( final String email ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > @ @ - 198 , 6 + 269 , 7 @ @ public class Authentication { < nl > } ; < nl > } < nl > < nl > + @ Deprecated < nl > public Command < AuthState > requestStartUserNameAuth ( final String userName ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > @ @ - 243 , 6 + 315 , 7 @ @ public class Authentication { < nl > } ; < nl > } < nl > < nl > + @ Deprecated < nl > public Command < AuthState > requestStartPhoneAuth ( final long phone ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java < nl > index ffd7e09 . . 3607672 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java < nl > @ @ - 25 , 9 + 25 , 9 @ @ public class Promise < T > { < nl > / / Dispatching parameters < nl > / / < nl > < nl > - private final ArrayList < PromiseCallback < T > > callbacks = new ArrayList < PromiseCallback < T > > ( ) ; < nl > + private final ArrayList < PromiseCallback < T > > callbacks = new ArrayList < > ( ) ; < nl > private final PromiseFunc < T > executor ; < nl > - private ActorRef dispatchActor ; < nl > + private PromiseDispatcher dispatchActor ; < nl > < nl > / / < nl > / / State of Promise < nl > @ @ - 63 , 7 + 63 , 7 @ @ public class Promise < T > { < nl > public synchronized Promise < T > then ( final Consumer < T > then ) { < nl > if ( isFinished ) { < nl > if ( exception = = null ) { < nl > - dispatchActor . send ( new PromiseDispatch ( this ) { < nl > + dispatchActor . dispatch ( this , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > then . apply ( result ) ; < nl > @ @ - 96 , 7 + 96 , 7 @ @ public class Promise < T > { < nl > public synchronized Promise < T > failure ( final Consumer < Exception > failure ) { < nl > if ( isFinished ) { < nl > if ( exception ! = null ) { < nl > - dispatchActor . send ( new PromiseDispatch ( this ) { < nl > + dispatchActor . dispatch ( this , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > failure . apply ( exception ) ; < nl > @ @ - 129 , 8 + 129 , 7 @ @ public class Promise < T > { < nl > @ ObjectiveCName ( " complete : " ) < nl > public synchronized Promise < T > complete ( final PromiseCallback < T > callback ) { < nl > if ( isFinished ) { < nl > - < nl > - dispatchActor . send ( new PromiseDispatch ( this ) { < nl > + dispatchActor . dispatch ( this , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > if ( exception ! = null ) { < nl > @ @ - 140 , 7 + 139 , 6 @ @ public class Promise < T > { < nl > } < nl > } < nl > } ) ; < nl > - < nl > } else { < nl > callbacks . add ( callback ) ; < nl > } < nl > @ @ - 173 , 18 + 171 , 30 @ @ public class Promise < T > { < nl > * Call this method to start promise execution < nl > * < nl > * @ param ref Scheduling actor < nl > + * @ return this < nl > * / < nl > - @ ObjectiveCName ( " done : " ) < nl > + @ ObjectiveCName ( " doneWithRef : " ) < nl > public Promise < T > done ( ActorRef ref ) { < nl > + return done ( new PromiseActorDispatcher ( ref ) ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Call this method to start promise execution < nl > + * < nl > + * @ param dispatcher Scheduling dispatcher < nl > + * @ return this < nl > + * / < nl > + @ ObjectiveCName ( " done : " ) < nl > + public Promise < T > done ( PromiseDispatcher dispatcher ) { < nl > if ( isStarted ) { < nl > throw new RuntimeException ( " Promise already started ! " ) ; < nl > } < nl > isStarted = true ; < nl > - dispatchActor = ref ; < nl > - dispatchActor . send ( new PromiseDispatch ( this ) { < nl > + dispatchActor = dispatcher ; < nl > + dispatchActor . dispatch ( this , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > - exec ( new PromiseResolver < T > ( Promise . this , dispatchActor ) ) ; < nl > + exec ( new PromiseResolver < > ( Promise . this , dispatchActor ) ) ; < nl > } < nl > } ) ; < nl > return this ; < nl > @ @ - 520 , 7 + 530 , 7 @ @ public class Promise < T > { < nl > * / < nl > private void deliverResult ( ) { < nl > if ( callbacks . size ( ) > 0 ) { < nl > - dispatchActor . send ( new PromiseDispatch ( this ) { < nl > + dispatchActor . dispatch ( this , new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > if ( exception ! = null ) { < nl > @ @ - 543 , 7 + 553 , 6 @ @ public class Promise < T > { < nl > } < nl > } ) ; < nl > } < nl > - < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseActorDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseActorDispatcher . java < nl > new file mode 100644 < nl > index 0000000 . . 0b1aa09 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseActorDispatcher . java < nl > @ @ - 0 , 0 + 1 , 22 @ @ < nl > + package im . actor . runtime . promise ; < nl > + < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + < nl > + public class PromiseActorDispatcher extends PromiseDispatcher { < nl > + < nl > + private ActorRef ref ; < nl > + < nl > + public PromiseActorDispatcher ( ActorRef ref ) { < nl > + this . ref = ref ; < nl > + } < nl > + < nl > + @ Override < nl > + public void dispatch ( Promise promise , final Runnable runnable ) { < nl > + ref . send ( new PromiseDispatch ( promise ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + runnable . run ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseDispatcher . java < nl > new file mode 100644 < nl > index 0000000 . . cedad71 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseDispatcher . java < nl > @ @ - 0 , 0 + 1 , 5 @ @ < nl > + package im . actor . runtime . promise ; < nl > + < nl > + public abstract class PromiseDispatcher { < nl > + public abstract void dispatch ( Promise promise , Runnable runnable ) ; < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java < nl > index d24b7ca . . 4c5fe04 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java < nl > @ @ - 16 , 9 + 16 , 9 @ @ import im . actor . runtime . actors . ActorRef ; < nl > public class PromiseResolver < T > { < nl > < nl > private Promise < T > promise ; < nl > - private ActorRef dispatcher ; < nl > + private PromiseDispatcher dispatcher ; < nl > < nl > - PromiseResolver ( Promise < T > promise , ActorRef dispatcher ) { < nl > + PromiseResolver ( Promise < T > promise , PromiseDispatcher dispatcher ) { < nl > this . promise = promise ; < nl > this . dispatcher = dispatcher ; < nl > } < nl > @ @ - 39 , 7 + 39 , 7 @ @ public class PromiseResolver < T > { < nl > * @ return dispatcher actor < nl > * / < nl > @ ObjectiveCName ( " getDispatcher " ) < nl > - public ActorRef getDispatcher ( ) { < nl > + public PromiseDispatcher getDispatcher ( ) { < nl > return dispatcher ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme b / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme < nl > index eb4e954 . . 8695800 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme < nl > @ @ - 22 , 7 + 22 , 7 @ @ < nl > buildForAnalyzing = " YES " > < nl > < BuildableReference < nl > BuildableIdentifier = " primary " < nl > - BlueprintIdentifier = " 06DFF8781B7F8C0600296ECF " < nl > + BlueprintIdentifier = " EA6B7348F8364542DDD264F741AAAA19 " < nl > BuildableName = " ActorApp . app " < nl > BlueprintName = " ActorApp " < nl > ReferencedContainer = " container : ActorApp . xcodeproj " > < nl > @ @ - 31 , 40 + 31 , 55 @ @ < nl > < / BuildActionEntries > < nl > < / BuildAction > < nl > < TestAction < nl > + buildConfiguration = " Debug " < nl > selectedDebuggerIdentifier = " Xcode . DebuggerFoundation . Debugger . LLDB " < nl > selectedLauncherIdentifier = " Xcode . DebuggerFoundation . Launcher . LLDB " < nl > - shouldUseLaunchSchemeArgsEnv = " YES " < nl > - buildConfiguration = " Debug " > < nl > + shouldUseLaunchSchemeArgsEnv = " YES " > < nl > < Testables > < nl > < / Testables > < nl > + < AdditionalOptions > < nl > + < / AdditionalOptions > < nl > < / TestAction > < nl > < LaunchAction < nl > + buildConfiguration = " Debug " < nl > selectedDebuggerIdentifier = " Xcode . DebuggerFoundation . Debugger . LLDB " < nl > selectedLauncherIdentifier = " Xcode . DebuggerFoundation . Launcher . LLDB " < nl > launchStyle = " 0 " < nl > useCustomWorkingDirectory = " NO " < nl > - buildConfiguration = " Debug " < nl > ignoresPersistentStateOnLaunch = " NO " < nl > debugDocumentVersioning = " YES " < nl > + debugServiceExtension = " internal " < nl > allowLocationSimulation = " YES " > < nl > < BuildableProductRunnable < nl > runnableDebuggingMode = " 0 " > < nl > < BuildableReference < nl > BuildableIdentifier = " primary " < nl > - BlueprintIdentifier = " 06DFF8781B7F8C0600296ECF " < nl > + BlueprintIdentifier = " EA6B7348F8364542DDD264F741AAAA19 " < nl > BuildableName = " ActorApp . app " < nl > BlueprintName = " ActorApp " < nl > ReferencedContainer = " container : ActorApp . xcodeproj " > < nl > < / BuildableReference > < nl > < / BuildableProductRunnable > < nl > + < EnvironmentVariables > < nl > + < EnvironmentVariable < nl > + key = " DYLD _ PRINT _ STATISTICS " < nl > + value = " YES " < nl > + isEnabled = " YES " > < nl > + < / EnvironmentVariable > < nl > + < / EnvironmentVariables > < nl > < AdditionalOptions > < nl > + < AdditionalOption < nl > + key = " DYLD _ PRINT _ LIBRARIES " < nl > + value = " " < nl > + isEnabled = " YES " > < nl > + < / AdditionalOption > < nl > < / AdditionalOptions > < nl > < / LaunchAction > < nl > < ProfileAction < nl > + buildConfiguration = " Release " < nl > shouldUseLaunchSchemeArgsEnv = " YES " < nl > savedToolIdentifier = " " < nl > useCustomWorkingDirectory = " NO " < nl > - buildConfiguration = " Release " < nl > debugDocumentVersioning = " YES " > < nl > < / ProfileAction > < nl > < AnalyzeAction < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > index 1556c50 . . 133ef03 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > @ @ - 15 , 7 + 15 , 7 @ @ import ActorSDK < nl > < nl > / / Even when Fabric / Crashlytics not configured < nl > / / this method doesn ' t crash < nl > - Fabric . with ( [ Crashlytics . self ( ) ] ) < nl > + / / Fabric . with ( [ Crashlytics . self ( ) ] ) < nl > < nl > ActorSDK . sharedActor ( ) . inviteUrlHost = " quit . email " < nl > ActorSDK . sharedActor ( ) . inviteUrlScheme = " actor " < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift < nl > index 4232e91 . . a393af8 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift < nl > @ @ - 8 , 19 + 8 , 27 @ @ import AudioToolbox . AudioServices < nl > < nl > @ objc class iOSNotificationProvider : NSObject , ACNotificationProvider { < nl > < nl > + var isLoaded = false < nl > var internalMessage : SystemSoundID = 0 < nl > var sounds : [ String : SystemSoundID ] = [ : ] < nl > var lastSoundPlay : Double = 0 < nl > < nl > override init ( ) { < nl > super . init ( ) < nl > - let path = NSBundle . framework . URLForResource ( " notification " , withExtension : " caf " ) ; < nl > - AudioServicesCreateSystemSoundID ( path ! , & internalMessage ) < nl > + } < nl > + < nl > + func loadSound ( ) { < nl > + if ! isLoaded { < nl > + isLoaded = true < nl > + let path = NSBundle . framework . URLForResource ( " notification " , withExtension : " caf " ) ; < nl > + AudioServicesCreateSystemSoundID ( path ! , & internalMessage ) < nl > + } < nl > } < nl > < nl > func onMessageArriveInAppWithMessenger ( messenger : ACMessenger ! ) { < nl > let currentTime = NSDate ( ) . timeIntervalSinceReferenceDate < nl > if ( currentTime - lastSoundPlay > 0 . 2 ) { < nl > + loadSound ( ) < nl > AudioServicesPlaySystemSound ( internalMessage ) < nl > lastSoundPlay = currentTime < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift < nl > index fb36f66 . . fe2a4ed 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift < nl > @ @ - 8 , 76 + 8 , 110 @ @ import AddressBook < nl > class PhoneBookProvider : NSObject , ACPhoneBookProvider { < nl > < nl > func loadPhoneBookWithCallback ( callback : ACPhoneBookProvider _ Callback ! ) { < nl > - let rawBook = ABAddressBookCreateWithOptions ( nil , nil ) ; < nl > - if ( rawBook = = nil ) { < nl > - print ( " Access to AddressBook denied " ) ; < nl > - callback . onLoadedWithContacts ( JavaUtilArrayList ( ) ) < nl > - return < nl > - } < nl > - let book : ABAddressBook = rawBook . takeRetainedValue ( ) < nl > - ABAddressBookRequestAccessWithCompletion ( book , { ( granted : Bool , error : CFError ! ) - > Void in < nl > - if ( ! granted ) { < nl > + < nl > + dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , Int64 ( 2 . 0 * Double ( NSEC _ PER _ SEC ) ) ) , dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ DEFAULT , 0 ) ) { < nl > + < nl > + let rawBook = ABAddressBookCreateWithOptions ( nil , nil ) ; < nl > + if ( rawBook = = nil ) { < nl > print ( " Access to AddressBook denied " ) ; < nl > callback . onLoadedWithContacts ( JavaUtilArrayList ( ) ) < nl > - return ; < nl > + return < nl > } < nl > - < nl > - let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet < nl > - let contacts = JavaUtilArrayList ( ) < nl > - var index = 1 < nl > - let people = ABAddressBookCopyArrayOfAllPeople ( book ) . takeRetainedValue ( ) as [ ABRecordRef ] < nl > - for person in people { < nl > - let firstName = self . extractString ( person as ABRecord , propertyName : kABPersonFirstNameProperty ) < nl > - let middleName = self . extractString ( person as ABRecord , propertyName : kABPersonMiddleNameProperty ) < nl > - let lastName = self . extractString ( person as ABRecord , propertyName : kABPersonLastNameProperty ) < nl > - < nl > - var contactName : String ? = [ firstName , middleName , lastName ] < nl > - . filter ( { ( val : String ? ) - > Bool in return val ! = nil & & val ! . length > 0 } ) < nl > - . map ( { ( val : String ? ) - > String in return val ! } ) < nl > - . joinWithSeparator ( " " ) < nl > - < nl > - if ( firstName = = " Name not specified " ) { < nl > - contactName = nil < nl > + let book : ABAddressBook = rawBook . takeRetainedValue ( ) < nl > + ABAddressBookRequestAccessWithCompletion ( book , { ( granted : Bool , error : CFError ! ) - > Void in < nl > + if ( ! granted ) { < nl > + print ( " Access to AddressBook denied " ) ; < nl > + callback . onLoadedWithContacts ( JavaUtilArrayList ( ) ) < nl > + return ; < nl > } < nl > < nl > - let contactPhones = JavaUtilArrayList ( ) < nl > - let contactEmails = JavaUtilArrayList ( ) < nl > - let contact = ACPhoneBookContact ( long : jlong ( index + + ) , withNSString : contactName , withJavaUtilArrayList : contactPhones , withJavaUtilArrayList : contactEmails ) < nl > - < nl > - if let phones : ABMultiValueRef = < nl > - self . extractProperty ( person as ABRecord , propertyName : kABPersonPhoneProperty ) as ABMultiValueRef ? { < nl > - for i in 0 . . . ABMultiValueGetCount ( phones ) { < nl > - var phoneStr = self . extractString ( phones , index : i ) < nl > - if ( phoneStr = = nil | | phoneStr ! . trim ( ) . length = = 0 ) { < nl > - continue < nl > + autoreleasepool { < nl > + let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet < nl > + let contacts = JavaUtilArrayList ( ) < nl > + var index = 1 < nl > + let people = ABAddressBookCopyArrayOfAllPeople ( book ) . takeRetainedValue ( ) as [ ABRecordRef ] < nl > + < nl > + for person in people { < nl > + let firstName = self . extractString ( person as ABRecord , propertyName : kABPersonFirstNameProperty ) < nl > + let middleName = self . extractString ( person as ABRecord , propertyName : kABPersonMiddleNameProperty ) < nl > + let lastName = self . extractString ( person as ABRecord , propertyName : kABPersonLastNameProperty ) < nl > + < nl > + var contactName : String ? < nl > + < nl > + / / < nl > + / / For Performance . LOL . < nl > + / / < nl > + if firstName ! = nil { < nl > + if middleName ! = nil { < nl > + if lastName ! = nil { < nl > + contactName = firstName ! + " " + middleName ! + " " + lastName ! < nl > + } else { < nl > + contactName = firstName ! + " " + middleName ! < nl > + } < nl > + } else { < nl > + if ( lastName ! = nil ) { < nl > + contactName = firstName ! + " " + lastName ! < nl > + } else { < nl > + contactName = firstName < nl > + } < nl > } < nl > - phoneStr = phoneStr ? . strip ( numbersSet ) < nl > - let phoneVal = phoneStr ? . toLong ( ) < nl > - if ( phoneVal ! = nil ) { < nl > - contactPhones . addWithId ( ACPhoneBookPhone ( long : jlong ( index + + ) , withLong : jlong ( phoneVal ! ) ) ) < nl > + } else { < nl > + if middleName ! = nil { < nl > + if lastName ! = nil { < nl > + contactName = middleName ! + " " + lastName ! < nl > + } else { < nl > + contactName = middleName < nl > + } < nl > + } else { < nl > + if lastName ! = nil { < nl > + contactName = lastName < nl > + } < nl > } < nl > } < nl > - } < nl > - < nl > - if let emails : ABMultiValueRef = < nl > - self . extractProperty ( person as ABRecord , propertyName : kABPersonEmailProperty ) as ABMultiValueRef ? { < nl > - for i in 0 . . . ABMultiValueGetCount ( emails ) { < nl > - let emailStr = self . extractString ( emails , index : i ) < nl > - if ( emailStr = = nil | | emailStr ! . trim ( ) . length = = 0 ) { < nl > - continue < nl > - } < nl > - contactEmails . addWithId ( ACPhoneBookEmail ( long : jlong ( index + + ) , withNSString : emailStr ! ) ) < nl > + < nl > + if ( firstName = = " Name not specified " ) { < nl > + contactName = nil < nl > } < nl > + < nl > + let contactPhones = JavaUtilArrayList ( ) < nl > + let contactEmails = JavaUtilArrayList ( ) < nl > + let contact = ACPhoneBookContact ( long : jlong ( index + + ) , withNSString : contactName , withJavaUtilArrayList : contactPhones , withJavaUtilArrayList : contactEmails ) < nl > + < nl > + if let phones : ABMultiValueRef = < nl > + self . extractProperty ( person as ABRecord , propertyName : kABPersonPhoneProperty ) as ABMultiValueRef ? { < nl > + for i in 0 . . . ABMultiValueGetCount ( phones ) { < nl > + var phoneStr = self . extractString ( phones , index : i ) < nl > + if ( phoneStr = = nil | | phoneStr ! . trim ( ) . isEmpty ) { < nl > + continue < nl > + } < nl > + phoneStr = phoneStr ! . strip ( numbersSet ) < nl > + let phoneVal = Int64 ( phoneStr ! ) / / numberFormatter . numberFromString ( phoneStr ! ) ? . longLongValue < nl > + if ( phoneVal ! = nil ) { < nl > + contactPhones . addWithId ( ACPhoneBookPhone ( long : jlong ( index + + ) , withLong : jlong ( phoneVal ! ) ) ) < nl > + } < nl > + } < nl > + } < nl > + < nl > + if let emails : ABMultiValueRef = < nl > + self . extractProperty ( person as ABRecord , propertyName : kABPersonEmailProperty ) as ABMultiValueRef ? { < nl > + for i in 0 . . . ABMultiValueGetCount ( emails ) { < nl > + let emailStr = self . extractString ( emails , index : i ) < nl > + if ( emailStr = = nil | | emailStr ! . trim ( ) . isEmpty ) { < nl > + continue < nl > + } < nl > + contactEmails . addWithId ( ACPhoneBookEmail ( long : jlong ( index + + ) , withNSString : emailStr ! ) ) < nl > + } < nl > + } < nl > + < nl > + if ( contactPhones . size ( ) ! = 0 | | contactEmails . size ( ) ! = 0 ) { < nl > + contacts . addWithId ( contact ) < nl > + } < nl > + } < nl > + < nl > + callback . onLoadedWithContacts ( contacts ) < nl > } < nl > - < nl > - if ( contactPhones . size ( ) ! = 0 | | contactEmails . size ( ) ! = 0 ) { < nl > - contacts . addWithId ( contact ) < nl > - } < nl > - } < nl > - < nl > - callback . onLoadedWithContacts ( contacts ) < nl > - } ) ; < nl > - < nl > + } ) < nl > + } < nl > } < nl > < nl > private func extractString ( record : ABRecord , propertyName : ABPropertyID ) - > String ? { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift < nl > index ed52c21 . . 5e838f0 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift < nl > @ @ - 378 , 11 + 378 , 11 @ @ public class ActorStyle { < nl > < nl > / / Status Colors < nl > < nl > - public var chatIconCheck1 = UIImage . templated ( " msg _ check _ 1 " ) < nl > - public var chatIconCheck2 = UIImage . templated ( " msg _ check _ 2 " ) < nl > - public var chatIconError = UIImage . templated ( " msg _ error " ) < nl > - public var chatIconWarring = UIImage . templated ( " msg _ warring " ) < nl > - public var chatIconClock = UIImage . templated ( " msg _ clock " ) < nl > + public lazy var chatIconCheck1 = UIImage . templated ( " msg _ check _ 1 " ) < nl > + public lazy var chatIconCheck2 = UIImage . templated ( " msg _ check _ 2 " ) < nl > + public lazy var chatIconError = UIImage . templated ( " msg _ error " ) < nl > + public lazy var chatIconWarring = UIImage . templated ( " msg _ warring " ) < nl > + public lazy var chatIconClock = UIImage . templated ( " msg _ clock " ) < nl > < nl > < nl > < nl > @ @ - 517 , 7 + 517 , 7 @ @ public class ActorStyle { < nl > set ( v ) { _ chatAutocompleteHighlight = v } < nl > } < nl > < nl > - public var chatBgColor = UIColor ( patternImage : UIImage . bundled ( " bg _ foggy _ birds " ) ! . tintBgImage ( UIColor ( rgb : 0xe7e0c4 ) ) ) < nl > + public lazy var chatBgColor = UIColor ( patternImage : UIImage . bundled ( " bg _ foggy _ birds " ) ! . tintBgImage ( UIColor ( rgb : 0xe7e0c4 ) ) ) < nl > < nl > / / < nl > / / Dialogs styles < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift < nl > index cd1bc5f . . 4134457 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift < nl > @ @ - 7 , 6 + 7 , 8 @ @ import j2objc < nl > < nl > public extension String { < nl > < nl > + public var isEmpty : Bool { return self . characters . isEmpty } < nl > + < nl > public var length : Int { return self . characters . count } < nl > < nl > public func trim ( ) - > String { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 219518e . . 8e279db 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 62 , 6 + 62 , 7 @ @ import im . actor . core . viewmodel . UploadFileVM ; < nl > import im . actor . core . viewmodel . UploadFileVMCallback ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . * ; < nl > + import im . actor . runtime . Runtime ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . crypto . primitives . kuznechik . KuznechikFastEngine ; < nl > import im . actor . runtime . mvvm . MVVMCollection ; < nl > @ @ - 91 , 11 + 92 , 15 @ @ public class Messenger { < nl > < nl > / / Encryption < nl > timing . section ( " Encryption " ) ; < nl > - byte [ ] asset = Assets . loadBinAsset ( " kuz _ tables . bin " ) ; < nl > - if ( asset ! = null ) { < nl > - KuznechikFastEngine . initDump ( asset ) ; < nl > - } else { < nl > + if ( Runtime . isSingleThread ( ) ) { < nl > KuznechikFastEngine . initCalc ( ) ; < nl > + } else { < nl > + Runtime . dispatch ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + KuznechikFastEngine . initDump ( Assets . loadBinAsset ( " kuz _ tables . bin " ) ) ; < nl > + } < nl > + } ) ; < nl > } < nl > < nl > / / Actor system < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 84eb242 . . 244a97b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 102 , 15 + 102 , 6 @ @ public class Authentication { < nl > if ( modules . getPreferences ( ) . getBool ( KEY _ AUTH , false ) ) { < nl > state = AuthState . LOGGED _ IN ; < nl > modules . onLoggedIn ( ) ; < nl > - < nl > - / / Notify ActorAnalytics < nl > - User user = modules . getUsersModule ( ) . getUsersStorage ( ) . getValue ( myUid ) ; < nl > - ArrayList < Long > records = new ArrayList < Long > ( ) ; < nl > - for ( ContactRecord contactRecord : user . getRecords ( ) ) { < nl > - if ( contactRecord . getRecordType ( ) = = ContactRecordType . PHONE ) { < nl > - records . add ( Long . parseLong ( contactRecord . getRecordData ( ) ) ) ; < nl > - } < nl > - } < nl > } else { < nl > state = AuthState . AUTH _ START ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java < nl > index 2cdb64e . . 3f03158 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java < nl > @ @ - 33 , 6 + 33 , 7 @ @ import im . actor . runtime . actors . ask . AskIntRequest ; < nl > import im . actor . runtime . actors . ask . AskMessage ; < nl > import im . actor . runtime . actors . ask . AskResult ; < nl > import im . actor . runtime . collections . ManagedList ; < nl > + import im . actor . runtime . crypto . Curve25519KeyPair ; < nl > import im . actor . runtime . function . Function ; < nl > import im . actor . runtime . promise . Promise ; < nl > import im . actor . runtime . crypto . Curve25519 ; < nl > @ @ - 82 , 19 + 83 , 26 @ @ public class KeyManagerActor extends ModuleActor { < nl > if ( ownKeysStorage ! = null ) { < nl > try { < nl > ownKeys = new PrivateKeyStorage ( ownKeysStorage ) ; < nl > + < nl > + / / If we need re - save key storage < nl > + if ( ownKeys . isWasRegenerated ( ) ) { < nl > + encryptionKeysStorage . addOrUpdateItem ( 0 , ownKeys . toByteArray ( ) ) ; < nl > + } < nl > } catch ( IOException e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > } < nl > < nl > if ( ownKeys = = null ) { < nl > - byte [ ] identityPrivate = Curve25519 . keyGenPrivate ( Crypto . randomBytes ( 64 ) ) ; < nl > - byte [ ] key0 = Curve25519 . keyGenPrivate ( Crypto . randomBytes ( 64 ) ) ; < nl > + Curve25519KeyPair identityPrivate = Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ; < nl > + Curve25519KeyPair key0 = Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ; < nl > < nl > ownKeys = new PrivateKeyStorage ( 0 , < nl > - new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , identityPrivate ) , < nl > + new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , identityPrivate . getPrivateKey ( ) , < nl > + identityPrivate . getPublicKey ( ) ) , < nl > new PrivateKey [ ] { < nl > - new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , key0 ) < nl > + new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , key0 . getPrivateKey ( ) , < nl > + key0 . getPublicKey ( ) ) < nl > } , < nl > new PrivateKey [ 0 ] ) ; < nl > encryptionKeysStorage . addOrUpdateItem ( 0 , ownKeys . toByteArray ( ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java < nl > index 2129402 . . 07d7be2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import im . actor . runtime . bser . BserObject ; < nl > import im . actor . runtime . bser . BserValues ; < nl > import im . actor . runtime . bser . BserWriter ; < nl > import im . actor . runtime . crypto . Curve25519 ; < nl > + import im . actor . runtime . crypto . Curve25519KeyPair ; < nl > import im . actor . runtime . crypto . primitives . util . ByteStrings ; < nl > import im . actor . runtime . crypto . ratchet . RatchetKeySignature ; < nl > import im . actor . runtime . function . Function ; < nl > @ @ - 58 , 10 + 59 , 12 @ @ public class PrivateKey extends BserObject { < nl > public static final Supplier < PrivateKey > GENERATOR = new Supplier < PrivateKey > ( ) { < nl > @ Override < nl > public PrivateKey get ( ) { < nl > + Curve25519KeyPair keyPair = Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ; < nl > return new PrivateKey ( < nl > RandomUtils . nextRid ( ) , < nl > " curve25519 " , < nl > - Curve25519 . keyGenPrivate ( Crypto . randomBytes ( 64 ) ) , < nl > + keyPair . getPrivateKey ( ) , < nl > + keyPair . getPublicKey ( ) , < nl > false ) ; < nl > } < nl > } ; < nl > @ @ - 85 , 17 + 88 , 18 @ @ public class PrivateKey extends BserObject { < nl > private byte [ ] key ; < nl > private byte [ ] publicKey ; < nl > private Boolean isUploaded ; < nl > + private boolean wasRegenerated = false ; < nl > < nl > - public PrivateKey ( long keyId , String keyAlg , byte [ ] key , Boolean isUploaded ) { < nl > + public PrivateKey ( long keyId , String keyAlg , byte [ ] privateKey , byte [ ] publicKey , Boolean isUploaded ) { < nl > this . keyId = keyId ; < nl > this . keyAlg = keyAlg ; < nl > - this . key = key ; < nl > + this . key = privateKey ; < nl > this . isUploaded = isUploaded ; < nl > - this . publicKey = Curve25519 . keyGenPublic ( key ) ; < nl > + this . publicKey = publicKey ; < nl > } < nl > < nl > - public PrivateKey ( long keyId , String keyAlg , byte [ ] key ) { < nl > - this ( keyId , keyAlg , key , null ) ; < nl > + public PrivateKey ( long keyId , String keyAlg , byte [ ] privateKey , byte [ ] publicKey ) { < nl > + this ( keyId , keyAlg , privateKey , publicKey , null ) ; < nl > } < nl > < nl > public PrivateKey ( byte [ ] data ) throws IOException { < nl > @ @ - 125 , 12 + 129 , 16 @ @ public class PrivateKey extends BserObject { < nl > return isUploaded ; < nl > } < nl > < nl > + public boolean isWasRegenerated ( ) { < nl > + return wasRegenerated ; < nl > + } < nl > + < nl > public ApiEncryptionKey toApiKey ( ) { < nl > return new ApiEncryptionKey ( keyId , keyAlg , publicKey , null ) ; < nl > } < nl > < nl > public PrivateKey markAsUploaded ( ) { < nl > - return new PrivateKey ( getKeyId ( ) , getKeyAlg ( ) , getKey ( ) , true ) ; < nl > + return new PrivateKey ( getKeyId ( ) , getKeyAlg ( ) , getKey ( ) , getPublicKey ( ) , true ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 139 , 7 + 147 , 11 @ @ public class PrivateKey extends BserObject { < nl > keyAlg = values . getString ( 2 ) ; < nl > key = values . getBytes ( 3 ) ; < nl > isUploaded = values . optBool ( 4 ) ; < nl > - this . publicKey = Curve25519 . keyGenPublic ( key ) ; < nl > + publicKey = values . optBytes ( 5 ) ; < nl > + if ( publicKey = = null ) { < nl > + wasRegenerated = true ; < nl > + publicKey = Curve25519 . keyGenPublic ( key ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > @ @ - 147 , 6 + 159 , 7 @ @ public class PrivateKey extends BserObject { < nl > writer . writeLong ( 1 , keyId ) ; < nl > writer . writeString ( 2 , keyAlg ) ; < nl > writer . writeBytes ( 3 , key ) ; < nl > + writer . writeBytes ( 5 , publicKey ) ; < nl > if ( isUploaded ! = null ) { < nl > writer . writeBool ( 4 , isUploaded ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java < nl > index 2937a0e . . 74a0c65 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java < nl > @ @ - 15 , 6 + 15 , 7 @ @ public class PrivateKeyStorage extends BserObject { < nl > private PrivateKey identityKey = null ; < nl > private PrivateKey [ ] keys ; < nl > private PrivateKey [ ] preKeys ; < nl > + private boolean wasRegenerated = false ; < nl > < nl > public PrivateKeyStorage ( int keyGroupId , PrivateKey identityKey , PrivateKey [ ] keys , PrivateKey [ ] preKeys ) { < nl > this . keyGroupId = keyGroupId ; < nl > @ @ - 84 , 19 + 85 , 26 @ @ public class PrivateKeyStorage extends BserObject { < nl > return uploadedKeys . get ( RandomUtils . randomId ( uploadedKeys . size ( ) ) ) ; < nl > } < nl > < nl > + public boolean isWasRegenerated ( ) { < nl > + return wasRegenerated ; < nl > + } < nl > + < nl > @ Override < nl > public void parse ( BserValues values ) throws IOException { < nl > keyGroupId = values . getInt ( 1 ) ; < nl > identityKey = new PrivateKey ( values . getBytes ( 2 ) ) ; < nl > + wasRegenerated | = identityKey . isWasRegenerated ( ) ; < nl > List < byte [ ] > r = values . getRepeatedBytes ( 3 ) ; < nl > keys = new PrivateKey [ r . size ( ) ] ; < nl > for ( int i = 0 ; i < keys . length ; i + + ) { < nl > keys [ i ] = new PrivateKey ( r . get ( i ) ) ; < nl > + wasRegenerated | = keys [ i ] . isWasRegenerated ( ) ; < nl > } < nl > r = values . getRepeatedBytes ( 4 ) ; < nl > preKeys = new PrivateKey [ r . size ( ) ] ; < nl > for ( int i = 0 ; i < preKeys . length ; i + + ) { < nl > preKeys [ i ] = new PrivateKey ( r . get ( i ) ) ; < nl > + wasRegenerated | = preKeys [ i ] . isWasRegenerated ( ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java < nl > index e8e50c4 . . 27d57d8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java < nl > @ @ - 42 , 7 + 42 , 7 @ @ public class StickersModule extends AbsModule { < nl > public StickersModule ( ModuleContext context ) { < nl > super ( context ) ; < nl > this . stickerPacksList = Storage . createKeyValue ( STORAGE _ STICKER _ ALL _ PACKS ) ; < nl > - stickerPacks = new ValueModel < ArrayList < StickerPackVM > > ( " sticker _ packs _ vms " , new ArrayList < StickerPackVM > ( ) ) ; < nl > + stickerPacks = new ValueModel < > ( " sticker _ packs _ vms " , new ArrayList < StickerPackVM > ( ) ) ; < nl > stickerPacks . change ( buildStickerPacks ( ) ) ; < nl > context ( ) . getEvents ( ) . subscribe ( new BusSubscriber ( ) { < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java < nl > index 4fe2f6f . . 5754118 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java < nl > @ @ - 6 , 23 + 6 , 23 @ @ public class CocoaLogProvider implements LogRuntime { < nl > < nl > @ Override < nl > public native void w ( String tag , String message ) / * - [ < nl > - NSLog ( @ " WARRING % @ : % @ " , tag , message ) ; < nl > + / / NSLog ( @ " WARRING % @ : % @ " , tag , message ) ; < nl > ] - * / ; < nl > < nl > @ Override < nl > public native void e ( String tag , Throwable throwable ) / * - [ < nl > - NSLog ( @ " ERROR % @ : " , tag ) ; < nl > - [ throwable printStackTrace ] ; < nl > + / / NSLog ( @ " ERROR % @ : " , tag ) ; < nl > + / / [ throwable printStackTrace ] ; < nl > ] - * / ; < nl > < nl > < nl > @ Override < nl > public native void d ( String tag , String message ) / * - [ < nl > - NSLog ( @ " % @ : % @ " , tag , message ) ; < nl > + / / NSLog ( @ " % @ : % @ " , tag , message ) ; < nl > ] - * / ; < nl > < nl > @ Override < nl > public native void v ( String tag , String message ) / * - [ < nl > - NSLog ( @ " % @ : % @ " , tag , message ) ; < nl > + / / NSLog ( @ " % @ : % @ " , tag , message ) ; < nl > ] - * / ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java < nl > index d319adf . . c1d0d9a 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java < nl > @ @ - 1 , 5 + 1 , 8 @ @ < nl > package im . actor . runtime . crypto . primitives . kuznechik ; < nl > < nl > + import com . google . j2objc . annotations . AutoreleasePool ; < nl > + < nl > + import im . actor . runtime . * ; < nl > import im . actor . runtime . crypto . primitives . BlockCipher ; < nl > import im . actor . runtime . crypto . primitives . util . Pack ; < nl > < nl > @ @ - 122 , 14 + 125 , 17 @ @ public class KuznechikFastEngine implements BlockCipher { < nl > ( byte ) 0x37 , ( byte ) 0xc4 , ( byte ) 0xaf , ( byte ) 0x24 , ( byte ) 0x2e , ( byte ) 0x6f , ( byte ) 0x8a , ( byte ) 0xa8 , ( byte ) 0xf7 , ( byte ) 0x60 , ( byte ) 0x49 , ( byte ) 0xe3 , ( byte ) 0x80 , ( byte ) 0x86 , ( byte ) 0x59 , ( byte ) 0x07 , < nl > } ; < nl > < nl > - private static volatile int [ ] gf256res ; < nl > - private static volatile int [ ] gf256resInv ; < nl > + private static boolean isLoaded ; < nl > + private static final Object LOCk = new Object ( ) ; < nl > + < nl > + private static int [ ] gf256res ; < nl > + private static int [ ] gf256resInv ; < nl > < nl > public static void initCalc ( ) { < nl > if ( gf256res ! = null | | gf256resInv ! = null ) { < nl > return ; < nl > } < nl > - < nl > + < nl > gf256res = new int [ 16 * 256 * 4 ] ; < nl > gf256resInv = new int [ 16 * 256 * 4 ] ; < nl > < nl > @ @ - 151 , 16 + 157 , 47 @ @ public class KuznechikFastEngine implements BlockCipher { < nl > Pack . bigEndianToInt ( tmp , 0 , gf256resInv , ( index + ( 16 * i ) ) * 4 , 4 ) ; < nl > } < nl > } < nl > - } < nl > < nl > - public static void initDump ( byte [ ] data ) { < nl > - if ( gf256res ! = null | | gf256resInv ! = null ) { < nl > - return ; < nl > + synchronized ( LOCk ) { < nl > + isLoaded = true ; < nl > + LOCk . notifyAll ( ) ; < nl > } < nl > - gf256res = new int [ 16 * 256 * 4 ] ; < nl > - gf256resInv = new int [ 16 * 256 * 4 ] ; < nl > - Pack . bigEndianToInt ( data , 0 , gf256res ) ; < nl > - Pack . bigEndianToInt ( data , gf256res . length * 4 , gf256resInv ) ; < nl > + } < nl > + < nl > + @ AutoreleasePool < nl > + public static void initDump ( final byte [ ] data ) { < nl > + im . actor . runtime . Runtime . dispatch ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + if ( gf256res ! = null | | gf256resInv ! = null ) { < nl > + return ; < nl > + } < nl > + gf256res = new int [ 16 * 256 * 4 ] ; < nl > + gf256resInv = new int [ 16 * 256 * 4 ] ; < nl > + int offset = 0 ; < nl > + int n ; < nl > + for ( int i = 0 ; i < gf256res . length ; + + i ) { < nl > + n = data [ offset + + ] < < 24 ; < nl > + n | = ( data [ offset + + ] & 0xff ) < < 16 ; < nl > + n | = ( data [ offset + + ] & 0xff ) < < 8 ; < nl > + n | = ( data [ offset + + ] & 0xff ) ; < nl > + gf256res [ i ] = n ; < nl > + } < nl > + < nl > + for ( int i = 0 ; i < gf256resInv . length ; + + i ) { < nl > + n = data [ offset + + ] < < 24 ; < nl > + n | = ( data [ offset + + ] & 0xff ) < < 16 ; < nl > + n | = ( data [ offset + + ] & 0xff ) < < 8 ; < nl > + n | = ( data [ offset + + ] & 0xff ) ; < nl > + gf256resInv [ i ] = n ; < nl > + } < nl > + < nl > + synchronized ( LOCk ) { < nl > + isLoaded = true ; < nl > + LOCk . notifyAll ( ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > } < nl > < nl > static void kuz _ l _ fast ( int [ ] w ) { < nl > @ @ - 243 , 7 + 280 , 21 @ @ public class KuznechikFastEngine implements BlockCipher { < nl > private int C3 ; < nl > < nl > public KuznechikFastEngine ( byte [ ] key ) { < nl > + < nl > + synchronized ( LOCk ) { < nl > + if ( ! isLoaded ) { < nl > + try { < nl > + LOCk . wait ( ) ; < nl > + } catch ( InterruptedException e ) { < nl > + e . printStackTrace ( ) ; < nl > + throw new RuntimeException ( e ) ; < nl > + } < nl > + } < nl > + } < nl > + < nl > this . key = convertKey ( key ) ; < nl > + < nl > + < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java < nl > index 6a1fe6a . . 34ae57f 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java < nl > @ @ - 1 , 5 + 1 , 7 @ @ < nl > package im . actor . runtime . crypto . primitives . modes ; < nl > < nl > + import com . google . j2objc . annotations . AutoreleasePool ; < nl > + < nl > import im . actor . runtime . crypto . IntegrityException ; < nl > import im . actor . runtime . crypto . primitives . BlockCipher ; < nl > < nl > @ @ - 37 , 8 + 39 , 34 @ @ public class CBCBlockCipher { < nl > throw new IntegrityException ( " Incorrect iv size " ) ; < nl > } < nl > < nl > - byte [ ] currentBlock = new byte [ blockSize ] ; < nl > byte [ ] res = new byte [ data . length ] ; < nl > + encrypt ( iv , data , res ) ; < nl > + return res ; < nl > + } < nl > + < nl > + / * * < nl > + * Decrypting data < nl > + * < nl > + * @ param iv initialization vector < nl > + * @ param data data for decryption < nl > + * @ return decrypted data < nl > + * / < nl > + public byte [ ] decrypt ( byte [ ] iv , byte [ ] data ) throws IntegrityException { < nl > + if ( data . length % blockSize ! = 0 ) { < nl > + throw new IntegrityException ( " Incorrect data size " ) ; < nl > + } < nl > + if ( iv . length ! = blockSize ) { < nl > + throw new IntegrityException ( " Incorrect iv size " ) ; < nl > + } < nl > + < nl > + byte [ ] res = new byte [ data . length ] ; < nl > + decrypt ( iv , data , res ) ; < nl > + return res ; < nl > + } < nl > + < nl > + @ AutoreleasePool < nl > + private void encrypt ( byte [ ] iv , byte [ ] data , byte [ ] res ) { < nl > + byte [ ] currentBlock = new byte [ blockSize ] ; < nl > < nl > byte [ ] currentIV = new byte [ blockSize ] ; < nl > for ( int i = 0 ; i < blockSize ; i + + ) { < nl > @ @ - 58 , 27 + 86 , 10 @ @ public class CBCBlockCipher { < nl > currentIV [ j ] = res [ i * blockSize + j ] ; < nl > } < nl > } < nl > - < nl > - return res ; < nl > } < nl > < nl > - / * * < nl > - * Decrypting data < nl > - * < nl > - * @ param iv initialization vector < nl > - * @ param data data for decryption < nl > - * @ return decrypted data < nl > - * / < nl > - public byte [ ] decrypt ( byte [ ] iv , byte [ ] data ) throws IntegrityException { < nl > - if ( data . length % blockSize ! = 0 ) { < nl > - throw new IntegrityException ( " Incorrect data size " ) ; < nl > - } < nl > - if ( iv . length ! = blockSize ) { < nl > - throw new IntegrityException ( " Incorrect iv size " ) ; < nl > - } < nl > - < nl > - byte [ ] res = new byte [ data . length ] ; < nl > - < nl > + @ AutoreleasePool < nl > + private void decrypt ( byte [ ] iv , byte [ ] data , byte [ ] res ) { < nl > byte [ ] r = new byte [ blockSize ] ; < nl > for ( int i = 0 ; i < blockSize ; i + + ) { < nl > r [ i ] = iv [ i ] ; < nl > @ @ - 97 , 7 + 108 , 5 @ @ public class CBCBlockCipher { < nl > r [ j ] = data [ i * blockSize + j ] ; < nl > } < nl > } < nl > - < nl > - return res ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java < nl > index ee1c8a5 . . 72c6027 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java < nl > @ @ - 1 , 5 + 1 , 7 @ @ < nl > package im . actor . runtime . crypto . primitives . util ; < nl > < nl > + import com . google . j2objc . annotations . AutoreleasePool ; < nl > + < nl > / * * < nl > * Source : Bouncy Castle v1 . 54 < nl > * < p > < nl > @ @ - 22 , 6 + 24 , 7 @ @ public abstract class Pack { < nl > return n ; < nl > } < nl > < nl > + @ AutoreleasePool < nl > public static void bigEndianToInt ( byte [ ] bs , int off , int [ ] ns ) { < nl > for ( int i = 0 ; i < ns . length ; + + i ) { < nl > ns [ i ] = bigEndianToInt ( bs , off ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 9a87951 . . 41f46a6 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 181 , 6 + 181 , 7 @ @ 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / ; } ; 
 + 	 	 06D5C05A1C8E9B3B002D5045 / * Promises . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06D5C0591C8E9B3B002D5045 / * Promises . swift * / ; } ; 
 	 	 06E322C91C69344A00D66F53 / * iOSCallsProvider . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / ; } ; 
 	 	 06E3230E1C69445C00D66F53 / * WebRTC . h in Headers * / = { isa = PBXBuildFile ; fileRef = 06E3230D1C6942C400D66F53 / * WebRTC . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 	 	 06E323111C694C1D00D66F53 / * WebRTCExt . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / ; } ; 
 @ @ - 490 , 6 + 491 , 7 @ @ 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 	 	 06D5C0561C8D6E20002D5045 / * AAAuthLogInViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAAuthLogInViewController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06D5C0591C8E9B3B002D5045 / * Promises . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Promises . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E322C81C69344A00D66F53 / * iOSCallsProvider . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = iOSCallsProvider . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E3230D1C6942C400D66F53 / * WebRTC . h * / = { isa = PBXFileReference ; lastKnownFileType = sourcecode . c . h ; path = WebRTC . h ; sourceTree = " < group > " ; } ; 
 	 	 06E323101C694C1D00D66F53 / * WebRTCExt . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = WebRTCExt . swift ; sourceTree = " < group > " ; } ; 
 @ @ - 741 , 6 + 743 , 7 @ @ 
 	 	 	 	 066A514D1BC4BDE4000E606E / * Numbers . swift * / , 
 	 	 	 	 066A51431BC4BBAF000E606E / * Strings . swift * / , 
 	 	 	 	 066A51471BC4BBF4000E606E / * Views . swift * / , 
 + 	 	 	 	 06D5C0591C8E9B3B002D5045 / * Promises . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = SwiftExtensions ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1951 , 6 + 1954 , 7 @ @ 
 	 	 	 	 066A525C1BC502EB000E606E / * ActorSDKDelegate . swift in Sources * / , 
 	 	 	 	 066A52551BC4EF61000E606E / * AANavigationController . swift in Sources * / , 
 	 	 	 	 066A52421BC4EECD000E606E / * AATableViewHeader . swift in Sources * / , 
 + 	 	 	 	 06D5C05A1C8E9B3B002D5045 / * Promises . swift in Sources * / , 
 	 	 	 	 066A52CD1BC521FA000E606E / * AADialogsListContentControllerDelegate . swift in Sources * / , 
 	 	 	 	 15D35F261C20186200E3717A / * framing . c in Sources * / , 
 	 	 	 	 06D5C0571C8D6E20002D5045 / * AAAuthLogInViewController . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 index 6ed3802 . . 70c7c33 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 @ @ - 144 , 8 + 144 , 12 @ @ public class AAAuthEmailViewController : AAAuthViewController { 
 return 
 } 
 
 - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in 
 - self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) ) 
 + Actor . doStartAuthWithEmail ( email ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in 
 + if res . authMode . toNSEnum ( ) = = . OTP { 
 + self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) ) 
 + } else { 
 + self . alertUser ( " This account can ' t be authenticated in this version . Please , update app . " ) 
 + } 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 index 1e18f66 . . e51f0e5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 @ @ - 73 , 16 + 73 , 24 @ @ public class AAAuthLogInViewController : AAAuthViewController { 
 return 
 } 
 if ( AATools . isValidEmail ( value ) ) { 
 - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithEmail ( value ) , successBlock : { ( val ) - > Void in 
 - self . navigateNext ( AAEmailAuthCodeViewController ( email : value ) ) 
 - } ) 
 + Actor . doStartAuthWithEmail ( value ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in 
 + if res . authMode . toNSEnum ( ) = = . OTP { 
 + self . navigateNext ( AAEmailAuthCodeViewController ( email : value ) ) 
 + } else { 
 + / / TODO : Implement 
 + } 
 + } 
 } else { 
 let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet 
 let stripped = value . strip ( numbersSet ) 
 if let parsed = Int64 ( stripped ) { 
 - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( jlong ( parsed ) ) , successBlock : { ( val ) - > Void in 
 - self . navigateNext ( AAAuthCodeViewController ( phoneNumber : value ) ) 
 - } ) 
 + Actor . doStartAuthWithPhone ( jlong ( parsed ) ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in 
 + if res . authMode . toNSEnum ( ) = = . OTP { 
 + self . navigateNext ( AAAuthCodeViewController ( phoneNumber : value ) ) 
 + } else { 
 + / / TODO : Implement 
 + } 
 + } 
 } else { 
 shakeView ( field , originalX : 20 ) 
 shakeView ( fieldLine , originalX : 10 ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 index 8a8e6d5 . . 8e4067a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 @ @ - 185 , 8 + 185 , 12 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe 
 override func nextDidTap ( ) { 
 let number = phoneNumberLabel . phoneNumber . toJLong ( ) 
 
 - executeSafeOnlySuccess ( Actor . requestStartAuthCommandWithPhone ( number ) ) { ( val ) - > Void in 
 - self . navigateNext ( AAAuthCodeViewController ( phoneNumber : " \ ( number ) " ) ) 
 + Actor . doStartAuthWithPhone ( number ) . doneLoader ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in 
 + if res . authMode . toNSEnum ( ) = = . OTP { 
 + self . navigateNext ( AAAuthCodeViewController ( phoneNumber : " \ ( number ) " ) ) 
 + } else { 
 + self . alertUser ( " This account can ' t be authenticated in this version . Please , update app . " ) 
 + } 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift 
 index 6cec7bd . . 6a05ad8 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift 	 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Managed Runtime / Executions . swift 	 
 @ @ - 34 , 6 + 34 , 10 @ @ public class AAMenuBuilder { 
 
 public class AAExecutions { 
 
 + public class func execute ( promise : ARPromise ) { 
 + 
 + } 
 + 
 public class func execute ( command : ACCommand ) { 
 execute ( command , successBlock : nil , failureBlock : nil ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Promises . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Promises . swift 
 new file mode 100644 
 index 0000000 . . 9f2aaf8 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Promises . swift 
 @ @ - 0 , 0 + 1 , 68 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2016 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MBProgressHUD 
 + 
 + extension ARPromise { 
 + 
 + func done ( ) { 
 + self . done ( MainThreadPromiseDispatcher ( ) ) 
 + } 
 + 
 + func doneLoader ( ) - > ARPromise { 
 + done ( ) 
 + 
 + let window = UIApplication . sharedApplication ( ) . windows [ 1 ] 
 + let hud = MBProgressHUD ( window : window ) 
 + hud . mode = MBProgressHUDMode . Indeterminate 
 + hud . removeFromSuperViewOnHide = true 
 + window . addSubview ( hud ) 
 + window . bringSubviewToFront ( hud ) 
 + hud . show ( true ) 
 + 
 + then { ( t : AnyObject ! ) - > ( ) in 
 + hud . hide ( true ) 
 + } 
 + 
 + failure { ( e ) - > ( ) in 
 + hud . hide ( true ) 
 + } 
 + 
 + return self 
 + } 
 + 
 + func then < T > ( closure : ( T ! ) - > ( ) ) - > ARPromise { 
 + then ( PromiseConsumer ( closure : closure ) ) 
 + return self 
 + } 
 + 
 + func failure ( withClosure closure : ( JavaLangException ! ) - > ( ) ) - > ARPromise { 
 + failure ( PromiseConsumer ( closure : closure ) ) 
 + return self 
 + } 
 + } 
 + 
 + class PromiseConsumer < T > : NSObject , ARConsumer { 
 + 
 + let closure : ( T ! ) - > ( ) 
 + 
 + init ( closure : ( T ! ) - > ( ) ) { 
 + self . closure = closure 
 + } 
 + 
 + 
 + func applyWithId ( t : AnyObject ! ) { 
 + closure ( t as ! T ) 
 + } 
 + } 
 + 
 + class MainThreadPromiseDispatcher : ARPromiseDispatcher { 
 + 
 + override func dispatchWithARPromise ( promise : ARPromise ! , withJavaLangRunnable runnable : JavaLangRunnable ! ) { 
 + dispatchOnUi { 
 + runnable . run ( ) 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift 
 index 1e9584a . . 083e994 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / AATools . swift 
 @ @ - 107 , 4 + 107 , 4 @ @ class BackgroundCommand : NSObject , ACCommand { 
 func backgroundTask ( ) throws { 
 
 } 
 - } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 9315558 . . b6905bc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 17 , 6 + 17 , 7 @ @ import im . actor . core . api . ApiSex ; 
 import im . actor . core . api . ApiAuthSession ; 
 import im . actor . core . api . rpc . ResponseRawRequest ; 
 import im . actor . core . api . rpc . ResponseSeqDate ; 
 + import im . actor . core . entity . AuthStartRes ; 
 import im . actor . core . entity . FileReference ; 
 import im . actor . core . entity . Group ; 
 import im . actor . core . entity . MentionFilterResult ; 
 @ @ - 67 , 6 + 68 , 7 @ @ import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . crypto . primitives . kuznechik . KuznechikFastEngine ; 
 import im . actor . runtime . mvvm . MVVMCollection ; 
 import im . actor . runtime . mvvm . ValueModel ; 
 + import im . actor . runtime . promise . Promise ; 
 import im . actor . runtime . storage . PreferencesStorage ; 
 
 / * * 
 @ @ - 84 , 6 + 86 , 7 @ @ public class Messenger { 
 * / 
 @ ObjectiveCName ( " initWithConfiguration : " ) 
 public Messenger ( @ NotNull Configuration configuration ) { 
 + 
 / / We assume that configuration is valid and all configuration verification 
 / / Must be implemented in Configuration object 
 
 @ @ - 114 , 6 + 117 , 7 @ @ public class Messenger { 
 * @ return current Authentication state 
 * / 
 @ NotNull 
 + @ Deprecated 
 public AuthState getAuthState ( ) { 
 return modules . getAuthModule ( ) . getAuthState ( ) ; 
 } 
 @ @ - 128 , 12 + 132 , 37 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Starting email auth 
 + * 
 + * @ param email email for authentication 
 + * @ return promise of AuthStartRes 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " doStartAuthWithEmail : " ) 
 + public Promise < AuthStartRes > doStartEmailAuth ( String email ) { 
 + return modules . getAuthModule ( ) . doStartEmailAuth ( email ) ; 
 + } 
 + 
 + / * * 
 + * Starting phone auth 
 + * 
 + * @ param phone phone for authentication 
 + * @ return promise of AuthStartRes 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " doStartAuthWithPhone : " ) 
 + public Promise < AuthStartRes > doStartPhoneAuth ( long phone ) { 
 + return modules . getAuthModule ( ) . doStartPhoneAuth ( phone ) ; 
 + } 
 + 
 + / * * 
 * Request email auth 
 * 
 * @ param email email to authenticate 
 * @ return Command for execution 
 * / 
 @ NotNull 
 + @ Deprecated 
 @ ObjectiveCName ( " requestStartAuthCommandWithEmail : " ) 
 public Command < AuthState > requestStartEmailAuth ( final String email ) { 
 return modules . getAuthModule ( ) . requestStartEmailAuth ( email ) ; 
 @ @ - 146 , 6 + 175 , 7 @ @ public class Messenger { 
 * @ return Command for execution 
 * / 
 @ NotNull 
 + @ Deprecated 
 @ ObjectiveCName ( " requestStartAuthCommandWithPhone : " ) 
 public Command < AuthState > requestStartPhoneAuth ( final long phone ) { 
 return modules . getAuthModule ( ) . requestStartPhoneAuth ( phone ) ; 
 @ @ - 158 , 6 + 188 , 7 @ @ public class Messenger { 
 * @ return Command for execution 
 * / 
 @ NotNull 
 + @ Deprecated 
 @ ObjectiveCName ( " requestStartAnonymousAuthWithUserName : " ) 
 public Command < AuthState > requestStartAnonymousAuth ( String userName ) { 
 return modules . getAuthModule ( ) . requestStartAnonymousAuth ( userName ) ; 
 @ @ - 254 , 6 + 285 , 7 @ @ public class Messenger { 
 * @ return phone number in international format 
 * / 
 @ ObjectiveCName ( " getAuthPhone " ) 
 + @ Deprecated 
 public long getAuthPhone ( ) { 
 return modules . getAuthModule ( ) . getPhone ( ) ; 
 } 
 @ @ - 265 , 6 + 297 , 7 @ @ public class Messenger { 
 * @ return email 
 * / 
 @ ObjectiveCName ( " getAuthEmail " ) 
 + @ Deprecated 
 public String getAuthEmail ( ) { 
 return modules . getAuthModule ( ) . getEmail ( ) ; 
 } 
 @ @ - 273 , 10 + 306 , 14 @ @ public class Messenger { 
 * Resetting authentication process 
 * / 
 @ ObjectiveCName ( " resetAuth " ) 
 + @ Deprecated 
 public void resetAuth ( ) { 
 modules . getAuthModule ( ) . resetAuth ( ) ; 
 } 
 
 + / * * 
 + * This method is called when messenger was logged in . Useful for subclasses 
 + * / 
 public void onLoggedIn ( ) { 
 
 } 
 @ @ - 334 , 7 + 371 , 6 @ @ public class Messenger { 
 @ NotNull 
 @ ObjectiveCName ( " getUserWithUid : " ) 
 public UserVM getUser ( int uid ) { 
 - / / noinspection ConstantConditions 
 return getUsers ( ) . get ( uid ) ; 
 } 
 
 @ @ - 362 , 7 + 398 , 6 @ @ public class Messenger { 
 @ NotNull 
 @ ObjectiveCName ( " getGroupWithGid : " ) 
 public GroupVM getGroup ( int gid ) { 
 - / / noinspection ConstantConditions 
 return getGroups ( ) . get ( gid ) ; 
 } 
 
 @ @ - 597 , 10 + 632 , 9 @ @ public class Messenger { 
 / * * 
 * Update Message 
 * 
 - * @ param peer destination peer 
 - * @ param text message text 
 - * @ param rid message rundom id 
 - * 
 + * @ param peer destination peer 
 + * @ param text message text 
 + * @ param rid message rundom id 
 * / 
 @ ObjectiveCName ( " updateMessageWithPeer : withText : withRid : " ) 
 public Command < ResponseSeqDate > updateMessage ( @ NotNull Peer peer , @ NotNull String text , long rid ) { 
 @ @ - 608 , 7 + 642 , 6 @ @ public class Messenger { 
 } 
 
 
 - 
 / * * 
 * Send Markdown Message with mentions 
 * 
 @ @ - 1760 , 27 + 1793 , 6 @ @ public class Messenger { 
 modules . getSettingsModule ( ) . setPrivacy ( privacy ) ; 
 } 
 
 - 
 - / * * 
 - * Is markdown enabled . 
 - * 
 - * @ return is markdown enabled 
 - * / 
 - @ ObjectiveCName ( " isMarkdownEnabled " ) 
 - public boolean isMarkdownEnabled ( ) { 
 - return modules . getSettingsModule ( ) . isMarkdownEnabled ( ) ; 
 - } 
 - 
 - / * * 
 - * Change if markdown enabled 
 - * 
 - * @ param val is markdown enabled 
 - * / 
 - @ ObjectiveCName ( " changeMarkdownWithValue : " ) 
 - public void changeMarkdown ( boolean val ) { 
 - modules . getSettingsModule ( ) . changeMarkdown ( val ) ; 
 - } 
 - 
 / * * 
 * Is notifications enabled for peer 
 * 
 @ @ - 1904 , 16 + 1916 , 6 @ @ public class Messenger { 
 } 
 
 / * * 
 - * Is Hint about contact rename shown to user and automatically mark as shown if not . 
 - * 
 - * @ return is hint already shown 
 - * / 
 - @ ObjectiveCName ( " isRenameHintShown " ) 
 - public boolean isRenameHintShown ( ) { 
 - return modules . getSettingsModule ( ) . isRenameHintShown ( ) ; 
 - } 
 - 
 - / * * 
 * Getting selected wallpaper uri . local : [ file _ name ] for local files 
 * 
 * @ return not null if custom background set 
 @ @ - 1951 , 6 + 1953 , 16 @ @ public class Messenger { 
 modules . getStickersModule ( ) . loadStickers ( ) ; 
 } 
 
 + / * * 
 + * Is Hint about contact rename shown to user and automatically mark as shown if not . 
 + * 
 + * @ return is hint already shown 
 + * / 
 + @ ObjectiveCName ( " isRenameHintShown " ) 
 + public boolean isRenameHintShown ( ) { 
 + return modules . getSettingsModule ( ) . isRenameHintShown ( ) ; 
 + } 
 + 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 / / Security 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 @ @ - 2143 , 8 + 2155 , 4 @ @ public class Messenger { 
 ModuleContext getModuleContext ( ) { 
 return modules ; 
 } 
 - 
 - public long getAuthId ( ) { 
 - return modules . getApiModule ( ) . getActorApi ( ) . getKeyStorage ( ) . getAuthKey ( ) ; 
 - } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthMode . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthMode . java 
 new file mode 100644 
 index 0000000 . . 2770fbd 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthMode . java 
 @ @ - 0 , 0 + 1 , 34 @ @ 
 + package im . actor . core . entity ; 
 + 
 + import im . actor . core . api . ApiEmailActivationType ; 
 + import im . actor . core . api . ApiPhoneActivationType ; 
 + 
 + public enum AuthMode { 
 + OTP , PASSWORD , OAUTH2 , UNSUPPORTED ; 
 + 
 + public static AuthMode fromApi ( ApiEmailActivationType activationType ) { 
 + switch ( activationType ) { 
 + case CODE : 
 + return OTP ; 
 + case PASSWORD : 
 + return PASSWORD ; 
 + case OAUTH2 : 
 + return OAUTH2 ; 
 + default : 
 + case UNSUPPORTED _ VALUE : 
 + return UNSUPPORTED ; 
 + } 
 + } 
 + 
 + public static AuthMode fromApi ( ApiPhoneActivationType activationType ) { 
 + switch ( activationType ) { 
 + case CODE : 
 + return OTP ; 
 + case PASSWORD : 
 + return PASSWORD ; 
 + default : 
 + case UNSUPPORTED _ VALUE : 
 + return UNSUPPORTED ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthStartRes . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthStartRes . java 
 new file mode 100644 
 index 0000000 . . 30907a2 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / AuthStartRes . java 
 @ @ - 0 , 0 + 1 , 37 @ @ 
 + package im . actor . core . entity ; 
 + 
 + import com . google . j2objc . annotations . Property ; 
 + 
 + import org . jetbrains . annotations . NotNull ; 
 + 
 + public class AuthStartRes { 
 + 
 + @ NotNull 
 + @ Property ( " readonly , nonatomic " ) 
 + private final String transactionHash ; 
 + @ NotNull 
 + @ Property ( " readonly , nonatomic " ) 
 + private final AuthMode authMode ; 
 + @ Property ( " readonly , nonatomic " ) 
 + private final boolean isRegistered ; 
 + 
 + public AuthStartRes ( @ NotNull String transactionHash , @ NotNull AuthMode authMode , boolean isRegistered ) { 
 + this . transactionHash = transactionHash ; 
 + this . authMode = authMode ; 
 + this . isRegistered = isRegistered ; 
 + } 
 + 
 + @ NotNull 
 + public String getTransactionHash ( ) { 
 + return transactionHash ; 
 + } 
 + 
 + @ NotNull 
 + public AuthMode getAuthMode ( ) { 
 + return authMode ; 
 + } 
 + 
 + public boolean isRegistered ( ) { 
 + return isRegistered ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 6c348f3 . . 9cc50b0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 4 , 6 + 4 , 8 @ @ 
 
 package im . actor . core . modules ; 
 
 + import org . jetbrains . annotations . NotNull ; 
 + 
 import java . util . ArrayList ; 
 
 import im . actor . core . ApiConfiguration ; 
 @ @ - 27 , 6 + 29 , 8 @ @ import im . actor . core . api . rpc . ResponseStartEmailAuth ; 
 import im . actor . core . api . rpc . ResponseStartPhoneAuth ; 
 import im . actor . core . api . rpc . ResponseStartUsernameAuth ; 
 import im . actor . core . api . rpc . ResponseVoid ; 
 + import im . actor . core . entity . AuthMode ; 
 + import im . actor . core . entity . AuthStartRes ; 
 import im . actor . core . entity . ContactRecord ; 
 import im . actor . core . entity . ContactRecordType ; 
 import im . actor . core . entity . User ; 
 @ @ - 39 , 6 + 43 , 9 @ @ import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . runtime . * ; 
 import im . actor . runtime . Runtime ; 
 + import im . actor . runtime . promise . Promise ; 
 + import im . actor . runtime . promise . PromiseFunc ; 
 + import im . actor . runtime . promise . PromiseResolver ; 
 
 public class Authentication { 
 
 @ @ - 59 , 24 + 66 , 34 @ @ public class Authentication { 
 private Modules modules ; 
 private AuthState state ; 
 
 - private byte [ ] deviceHash ; 
 - private ApiConfiguration apiConfiguration ; 
 + private final ArrayList < String > langs ; 
 + private final byte [ ] deviceHash ; 
 + private final ApiConfiguration apiConfiguration ; 
 
 private int myUid ; 
 
 public Authentication ( Modules modules ) { 
 this . modules = modules ; 
 
 - this . myUid = modules . getPreferences ( ) . getInt ( KEY _ AUTH _ UID , 0 ) ; 
 - 
 / / Keep device hash always stable across launch 
 - deviceHash = modules . getPreferences ( ) . getBytes ( KEY _ DEVICE _ HASH ) ; 
 - if ( deviceHash = = null ) { 
 - deviceHash = Crypto . SHA256 ( modules . getConfiguration ( ) . getApiConfiguration ( ) . getDeviceString ( ) . getBytes ( ) ) ; 
 - modules . getPreferences ( ) . putBytes ( KEY _ DEVICE _ HASH , deviceHash ) ; 
 + byte [ ] _ deviceHash = modules . getPreferences ( ) . getBytes ( KEY _ DEVICE _ HASH ) ; 
 + if ( _ deviceHash = = null ) { 
 + _ deviceHash = Crypto . SHA256 ( modules . getConfiguration ( ) . getApiConfiguration ( ) . getDeviceString ( ) . getBytes ( ) ) ; 
 + modules . getPreferences ( ) . putBytes ( KEY _ DEVICE _ HASH , _ deviceHash ) ; 
 + } 
 + deviceHash = _ deviceHash ; 
 + 
 + / / Languages 
 + langs = new ArrayList < > ( ) ; 
 + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 + langs . add ( s ) ; 
 } 
 
 + / / Api Configuration 
 apiConfiguration = modules . getConfiguration ( ) . getApiConfiguration ( ) ; 
 + 
 + / / Authenticated UID 
 + myUid = modules . getPreferences ( ) . getInt ( KEY _ AUTH _ UID , 0 ) ; 
 } 
 
 public int myUid ( ) { 
 @ @ - 108 , 14 + 125 , 67 @ @ public class Authentication { 
 } 
 } 
 
 + public Promise < AuthStartRes > doStartEmailAuth ( final String email ) { 
 + return new Promise < > ( new PromiseFunc < AuthStartRes > ( ) { 
 + @ Override 
 + public void exec ( @ NotNull final PromiseResolver < AuthStartRes > resolver ) { 
 + request ( new RequestStartEmailAuth ( email , 
 + apiConfiguration . getAppId ( ) , 
 + apiConfiguration . getAppKey ( ) , 
 + deviceHash , 
 + apiConfiguration . getDeviceTitle ( ) , 
 + modules . getConfiguration ( ) . getTimeZone ( ) , 
 + langs ) , new RpcCallback < ResponseStartEmailAuth > ( ) { 
 + @ Override 
 + public void onResult ( ResponseStartEmailAuth response ) { 
 + resolver . result ( new AuthStartRes ( 
 + response . getTransactionHash ( ) , 
 + AuthMode . fromApi ( response . getActivationType ( ) ) , 
 + response . isRegistered ( ) ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( RpcException e ) { 
 + resolver . error ( e ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + public Promise < AuthStartRes > doStartPhoneAuth ( final long phone ) { 
 + return new Promise < > ( new PromiseFunc < AuthStartRes > ( ) { 
 + @ Override 
 + public void exec ( @ NotNull final PromiseResolver < AuthStartRes > resolver ) { 
 + request ( new RequestStartPhoneAuth ( phone , 
 + apiConfiguration . getAppId ( ) , 
 + apiConfiguration . getAppKey ( ) , 
 + deviceHash , 
 + apiConfiguration . getDeviceTitle ( ) , 
 + modules . getConfiguration ( ) . getTimeZone ( ) , 
 + langs ) , new RpcCallback < ResponseStartPhoneAuth > ( ) { 
 + @ Override 
 + public void onResult ( ResponseStartPhoneAuth response ) { 
 + resolver . result ( new AuthStartRes ( 
 + response . getTransactionHash ( ) , 
 + AuthMode . fromApi ( response . getActivationType ( ) ) , 
 + response . isRegistered ( ) ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( RpcException e ) { 
 + resolver . error ( e ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Deprecated 
 public Command < AuthState > requestStartAnonymousAuth ( final String userName ) { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 - ArrayList < String > langs = new ArrayList < > ( ) ; 
 - for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 - langs . add ( s ) ; 
 - } 
 request ( new RequestStartAnonymousAuth ( userName , 
 apiConfiguration . getAppId ( ) , 
 apiConfiguration . getAppKey ( ) , 
 @ @ - 143 , 6 + 213 , 7 @ @ public class Authentication { 
 } ; 
 } 
 
 + @ Deprecated 
 public Command < AuthState > requestStartEmailAuth ( final String email ) { 
 return new Command < AuthState > ( ) { 
 @ Override 
 @ @ - 198 , 6 + 269 , 7 @ @ public class Authentication { 
 } ; 
 } 
 
 + @ Deprecated 
 public Command < AuthState > requestStartUserNameAuth ( final String userName ) { 
 return new Command < AuthState > ( ) { 
 @ Override 
 @ @ - 243 , 6 + 315 , 7 @ @ public class Authentication { 
 } ; 
 } 
 
 + @ Deprecated 
 public Command < AuthState > requestStartPhoneAuth ( final long phone ) { 
 return new Command < AuthState > ( ) { 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java 
 index ffd7e09 . . 3607672 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / Promise . java 
 @ @ - 25 , 9 + 25 , 9 @ @ public class Promise < T > { 
 / / Dispatching parameters 
 / / 
 
 - private final ArrayList < PromiseCallback < T > > callbacks = new ArrayList < PromiseCallback < T > > ( ) ; 
 + private final ArrayList < PromiseCallback < T > > callbacks = new ArrayList < > ( ) ; 
 private final PromiseFunc < T > executor ; 
 - private ActorRef dispatchActor ; 
 + private PromiseDispatcher dispatchActor ; 
 
 / / 
 / / State of Promise 
 @ @ - 63 , 7 + 63 , 7 @ @ public class Promise < T > { 
 public synchronized Promise < T > then ( final Consumer < T > then ) { 
 if ( isFinished ) { 
 if ( exception = = null ) { 
 - dispatchActor . send ( new PromiseDispatch ( this ) { 
 + dispatchActor . dispatch ( this , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 then . apply ( result ) ; 
 @ @ - 96 , 7 + 96 , 7 @ @ public class Promise < T > { 
 public synchronized Promise < T > failure ( final Consumer < Exception > failure ) { 
 if ( isFinished ) { 
 if ( exception ! = null ) { 
 - dispatchActor . send ( new PromiseDispatch ( this ) { 
 + dispatchActor . dispatch ( this , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 failure . apply ( exception ) ; 
 @ @ - 129 , 8 + 129 , 7 @ @ public class Promise < T > { 
 @ ObjectiveCName ( " complete : " ) 
 public synchronized Promise < T > complete ( final PromiseCallback < T > callback ) { 
 if ( isFinished ) { 
 - 
 - dispatchActor . send ( new PromiseDispatch ( this ) { 
 + dispatchActor . dispatch ( this , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 if ( exception ! = null ) { 
 @ @ - 140 , 7 + 139 , 6 @ @ public class Promise < T > { 
 } 
 } 
 } ) ; 
 - 
 } else { 
 callbacks . add ( callback ) ; 
 } 
 @ @ - 173 , 18 + 171 , 30 @ @ public class Promise < T > { 
 * Call this method to start promise execution 
 * 
 * @ param ref Scheduling actor 
 + * @ return this 
 * / 
 - @ ObjectiveCName ( " done : " ) 
 + @ ObjectiveCName ( " doneWithRef : " ) 
 public Promise < T > done ( ActorRef ref ) { 
 + return done ( new PromiseActorDispatcher ( ref ) ) ; 
 + } 
 + 
 + / * * 
 + * Call this method to start promise execution 
 + * 
 + * @ param dispatcher Scheduling dispatcher 
 + * @ return this 
 + * / 
 + @ ObjectiveCName ( " done : " ) 
 + public Promise < T > done ( PromiseDispatcher dispatcher ) { 
 if ( isStarted ) { 
 throw new RuntimeException ( " Promise already started ! " ) ; 
 } 
 isStarted = true ; 
 - dispatchActor = ref ; 
 - dispatchActor . send ( new PromiseDispatch ( this ) { 
 + dispatchActor = dispatcher ; 
 + dispatchActor . dispatch ( this , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - exec ( new PromiseResolver < T > ( Promise . this , dispatchActor ) ) ; 
 + exec ( new PromiseResolver < > ( Promise . this , dispatchActor ) ) ; 
 } 
 } ) ; 
 return this ; 
 @ @ - 520 , 7 + 530 , 7 @ @ public class Promise < T > { 
 * / 
 private void deliverResult ( ) { 
 if ( callbacks . size ( ) > 0 ) { 
 - dispatchActor . send ( new PromiseDispatch ( this ) { 
 + dispatchActor . dispatch ( this , new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 if ( exception ! = null ) { 
 @ @ - 543 , 7 + 553 , 6 @ @ public class Promise < T > { 
 } 
 } ) ; 
 } 
 - 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseActorDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseActorDispatcher . java 
 new file mode 100644 
 index 0000000 . . 0b1aa09 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseActorDispatcher . java 
 @ @ - 0 , 0 + 1 , 22 @ @ 
 + package im . actor . runtime . promise ; 
 + 
 + import im . actor . runtime . actors . ActorRef ; 
 + 
 + public class PromiseActorDispatcher extends PromiseDispatcher { 
 + 
 + private ActorRef ref ; 
 + 
 + public PromiseActorDispatcher ( ActorRef ref ) { 
 + this . ref = ref ; 
 + } 
 + 
 + @ Override 
 + public void dispatch ( Promise promise , final Runnable runnable ) { 
 + ref . send ( new PromiseDispatch ( promise ) { 
 + @ Override 
 + public void run ( ) { 
 + runnable . run ( ) ; 
 + } 
 + } ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseDispatcher . java 
 new file mode 100644 
 index 0000000 . . cedad71 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseDispatcher . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package im . actor . runtime . promise ; 
 + 
 + public abstract class PromiseDispatcher { 
 + public abstract void dispatch ( Promise promise , Runnable runnable ) ; 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java 
 index d24b7ca . . 4c5fe04 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / promise / PromiseResolver . java 
 @ @ - 16 , 9 + 16 , 9 @ @ import im . actor . runtime . actors . ActorRef ; 
 public class PromiseResolver < T > { 
 
 private Promise < T > promise ; 
 - private ActorRef dispatcher ; 
 + private PromiseDispatcher dispatcher ; 
 
 - PromiseResolver ( Promise < T > promise , ActorRef dispatcher ) { 
 + PromiseResolver ( Promise < T > promise , PromiseDispatcher dispatcher ) { 
 this . promise = promise ; 
 this . dispatcher = dispatcher ; 
 } 
 @ @ - 39 , 7 + 39 , 7 @ @ public class PromiseResolver < T > { 
 * @ return dispatcher actor 
 * / 
 @ ObjectiveCName ( " getDispatcher " ) 
 - public ActorRef getDispatcher ( ) { 
 + public PromiseDispatcher getDispatcher ( ) { 
 return dispatcher ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme b / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme 
 index eb4e954 . . 8695800 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme 
 + + + b / actor - sdk / sdk - core - ios / ActorApp . xcodeproj / xcshareddata / xcschemes / ActorApp . xcscheme 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 buildForAnalyzing = " YES " > 
 < BuildableReference 
 BuildableIdentifier = " primary " 
 - BlueprintIdentifier = " 06DFF8781B7F8C0600296ECF " 
 + BlueprintIdentifier = " EA6B7348F8364542DDD264F741AAAA19 " 
 BuildableName = " ActorApp . app " 
 BlueprintName = " ActorApp " 
 ReferencedContainer = " container : ActorApp . xcodeproj " > 
 @ @ - 31 , 40 + 31 , 55 @ @ 
 < / BuildActionEntries > 
 < / BuildAction > 
 < TestAction 
 + buildConfiguration = " Debug " 
 selectedDebuggerIdentifier = " Xcode . DebuggerFoundation . Debugger . LLDB " 
 selectedLauncherIdentifier = " Xcode . DebuggerFoundation . Launcher . LLDB " 
 - shouldUseLaunchSchemeArgsEnv = " YES " 
 - buildConfiguration = " Debug " > 
 + shouldUseLaunchSchemeArgsEnv = " YES " > 
 < Testables > 
 < / Testables > 
 + < AdditionalOptions > 
 + < / AdditionalOptions > 
 < / TestAction > 
 < LaunchAction 
 + buildConfiguration = " Debug " 
 selectedDebuggerIdentifier = " Xcode . DebuggerFoundation . Debugger . LLDB " 
 selectedLauncherIdentifier = " Xcode . DebuggerFoundation . Launcher . LLDB " 
 launchStyle = " 0 " 
 useCustomWorkingDirectory = " NO " 
 - buildConfiguration = " Debug " 
 ignoresPersistentStateOnLaunch = " NO " 
 debugDocumentVersioning = " YES " 
 + debugServiceExtension = " internal " 
 allowLocationSimulation = " YES " > 
 < BuildableProductRunnable 
 runnableDebuggingMode = " 0 " > 
 < BuildableReference 
 BuildableIdentifier = " primary " 
 - BlueprintIdentifier = " 06DFF8781B7F8C0600296ECF " 
 + BlueprintIdentifier = " EA6B7348F8364542DDD264F741AAAA19 " 
 BuildableName = " ActorApp . app " 
 BlueprintName = " ActorApp " 
 ReferencedContainer = " container : ActorApp . xcodeproj " > 
 < / BuildableReference > 
 < / BuildableProductRunnable > 
 + < EnvironmentVariables > 
 + < EnvironmentVariable 
 + key = " DYLD _ PRINT _ STATISTICS " 
 + value = " YES " 
 + isEnabled = " YES " > 
 + < / EnvironmentVariable > 
 + < / EnvironmentVariables > 
 < AdditionalOptions > 
 + < AdditionalOption 
 + key = " DYLD _ PRINT _ LIBRARIES " 
 + value = " " 
 + isEnabled = " YES " > 
 + < / AdditionalOption > 
 < / AdditionalOptions > 
 < / LaunchAction > 
 < ProfileAction 
 + buildConfiguration = " Release " 
 shouldUseLaunchSchemeArgsEnv = " YES " 
 savedToolIdentifier = " " 
 useCustomWorkingDirectory = " NO " 
 - buildConfiguration = " Release " 
 debugDocumentVersioning = " YES " > 
 < / ProfileAction > 
 < AnalyzeAction 
 diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 index 1556c50 . . 133ef03 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 @ @ - 15 , 7 + 15 , 7 @ @ import ActorSDK 
 
 / / Even when Fabric / Crashlytics not configured 
 / / this method doesn ' t crash 
 - Fabric . with ( [ Crashlytics . self ( ) ] ) 
 + / / Fabric . with ( [ Crashlytics . self ( ) ] ) 
 
 ActorSDK . sharedActor ( ) . inviteUrlHost = " quit . email " 
 ActorSDK . sharedActor ( ) . inviteUrlScheme = " actor " 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift 
 index 4232e91 . . a393af8 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSNotificationProvider . swift 
 @ @ - 8 , 19 + 8 , 27 @ @ import AudioToolbox . AudioServices 
 
 @ objc class iOSNotificationProvider : NSObject , ACNotificationProvider { 
 
 + var isLoaded = false 
 var internalMessage : SystemSoundID = 0 
 var sounds : [ String : SystemSoundID ] = [ : ] 
 var lastSoundPlay : Double = 0 
 
 override init ( ) { 
 super . init ( ) 
 - let path = NSBundle . framework . URLForResource ( " notification " , withExtension : " caf " ) ; 
 - AudioServicesCreateSystemSoundID ( path ! , & internalMessage ) 
 + } 
 + 
 + func loadSound ( ) { 
 + if ! isLoaded { 
 + isLoaded = true 
 + let path = NSBundle . framework . URLForResource ( " notification " , withExtension : " caf " ) ; 
 + AudioServicesCreateSystemSoundID ( path ! , & internalMessage ) 
 + } 
 } 
 
 func onMessageArriveInAppWithMessenger ( messenger : ACMessenger ! ) { 
 let currentTime = NSDate ( ) . timeIntervalSinceReferenceDate 
 if ( currentTime - lastSoundPlay > 0 . 2 ) { 
 + loadSound ( ) 
 AudioServicesPlaySystemSound ( internalMessage ) 
 lastSoundPlay = currentTime 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift 
 index fb36f66 . . fe2a4ed 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSPhoneBookProvider . swift 
 @ @ - 8 , 76 + 8 , 110 @ @ import AddressBook 
 class PhoneBookProvider : NSObject , ACPhoneBookProvider { 
 
 func loadPhoneBookWithCallback ( callback : ACPhoneBookProvider _ Callback ! ) { 
 - let rawBook = ABAddressBookCreateWithOptions ( nil , nil ) ; 
 - if ( rawBook = = nil ) { 
 - print ( " Access to AddressBook denied " ) ; 
 - callback . onLoadedWithContacts ( JavaUtilArrayList ( ) ) 
 - return 
 - } 
 - let book : ABAddressBook = rawBook . takeRetainedValue ( ) 
 - ABAddressBookRequestAccessWithCompletion ( book , { ( granted : Bool , error : CFError ! ) - > Void in 
 - if ( ! granted ) { 
 + 
 + dispatch _ after ( dispatch _ time ( DISPATCH _ TIME _ NOW , Int64 ( 2 . 0 * Double ( NSEC _ PER _ SEC ) ) ) , dispatch _ get _ global _ queue ( DISPATCH _ QUEUE _ PRIORITY _ DEFAULT , 0 ) ) { 
 + 
 + let rawBook = ABAddressBookCreateWithOptions ( nil , nil ) ; 
 + if ( rawBook = = nil ) { 
 print ( " Access to AddressBook denied " ) ; 
 callback . onLoadedWithContacts ( JavaUtilArrayList ( ) ) 
 - return ; 
 + return 
 } 
 - 
 - let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet 
 - let contacts = JavaUtilArrayList ( ) 
 - var index = 1 
 - let people = ABAddressBookCopyArrayOfAllPeople ( book ) . takeRetainedValue ( ) as [ ABRecordRef ] 
 - for person in people { 
 - let firstName = self . extractString ( person as ABRecord , propertyName : kABPersonFirstNameProperty ) 
 - let middleName = self . extractString ( person as ABRecord , propertyName : kABPersonMiddleNameProperty ) 
 - let lastName = self . extractString ( person as ABRecord , propertyName : kABPersonLastNameProperty ) 
 - 
 - var contactName : String ? = [ firstName , middleName , lastName ] 
 - . filter ( { ( val : String ? ) - > Bool in return val ! = nil & & val ! . length > 0 } ) 
 - . map ( { ( val : String ? ) - > String in return val ! } ) 
 - . joinWithSeparator ( " " ) 
 - 
 - if ( firstName = = " Name not specified " ) { 
 - contactName = nil 
 + let book : ABAddressBook = rawBook . takeRetainedValue ( ) 
 + ABAddressBookRequestAccessWithCompletion ( book , { ( granted : Bool , error : CFError ! ) - > Void in 
 + if ( ! granted ) { 
 + print ( " Access to AddressBook denied " ) ; 
 + callback . onLoadedWithContacts ( JavaUtilArrayList ( ) ) 
 + return ; 
 } 
 
 - let contactPhones = JavaUtilArrayList ( ) 
 - let contactEmails = JavaUtilArrayList ( ) 
 - let contact = ACPhoneBookContact ( long : jlong ( index + + ) , withNSString : contactName , withJavaUtilArrayList : contactPhones , withJavaUtilArrayList : contactEmails ) 
 - 
 - if let phones : ABMultiValueRef = 
 - self . extractProperty ( person as ABRecord , propertyName : kABPersonPhoneProperty ) as ABMultiValueRef ? { 
 - for i in 0 . . . ABMultiValueGetCount ( phones ) { 
 - var phoneStr = self . extractString ( phones , index : i ) 
 - if ( phoneStr = = nil | | phoneStr ! . trim ( ) . length = = 0 ) { 
 - continue 
 + autoreleasepool { 
 + let numbersSet = NSCharacterSet ( charactersInString : " 0123456789 " ) . invertedSet 
 + let contacts = JavaUtilArrayList ( ) 
 + var index = 1 
 + let people = ABAddressBookCopyArrayOfAllPeople ( book ) . takeRetainedValue ( ) as [ ABRecordRef ] 
 + 
 + for person in people { 
 + let firstName = self . extractString ( person as ABRecord , propertyName : kABPersonFirstNameProperty ) 
 + let middleName = self . extractString ( person as ABRecord , propertyName : kABPersonMiddleNameProperty ) 
 + let lastName = self . extractString ( person as ABRecord , propertyName : kABPersonLastNameProperty ) 
 + 
 + var contactName : String ? 
 + 
 + / / 
 + / / For Performance . LOL . 
 + / / 
 + if firstName ! = nil { 
 + if middleName ! = nil { 
 + if lastName ! = nil { 
 + contactName = firstName ! + " " + middleName ! + " " + lastName ! 
 + } else { 
 + contactName = firstName ! + " " + middleName ! 
 + } 
 + } else { 
 + if ( lastName ! = nil ) { 
 + contactName = firstName ! + " " + lastName ! 
 + } else { 
 + contactName = firstName 
 + } 
 } 
 - phoneStr = phoneStr ? . strip ( numbersSet ) 
 - let phoneVal = phoneStr ? . toLong ( ) 
 - if ( phoneVal ! = nil ) { 
 - contactPhones . addWithId ( ACPhoneBookPhone ( long : jlong ( index + + ) , withLong : jlong ( phoneVal ! ) ) ) 
 + } else { 
 + if middleName ! = nil { 
 + if lastName ! = nil { 
 + contactName = middleName ! + " " + lastName ! 
 + } else { 
 + contactName = middleName 
 + } 
 + } else { 
 + if lastName ! = nil { 
 + contactName = lastName 
 + } 
 } 
 } 
 - } 
 - 
 - if let emails : ABMultiValueRef = 
 - self . extractProperty ( person as ABRecord , propertyName : kABPersonEmailProperty ) as ABMultiValueRef ? { 
 - for i in 0 . . . ABMultiValueGetCount ( emails ) { 
 - let emailStr = self . extractString ( emails , index : i ) 
 - if ( emailStr = = nil | | emailStr ! . trim ( ) . length = = 0 ) { 
 - continue 
 - } 
 - contactEmails . addWithId ( ACPhoneBookEmail ( long : jlong ( index + + ) , withNSString : emailStr ! ) ) 
 + 
 + if ( firstName = = " Name not specified " ) { 
 + contactName = nil 
 } 
 + 
 + let contactPhones = JavaUtilArrayList ( ) 
 + let contactEmails = JavaUtilArrayList ( ) 
 + let contact = ACPhoneBookContact ( long : jlong ( index + + ) , withNSString : contactName , withJavaUtilArrayList : contactPhones , withJavaUtilArrayList : contactEmails ) 
 + 
 + if let phones : ABMultiValueRef = 
 + self . extractProperty ( person as ABRecord , propertyName : kABPersonPhoneProperty ) as ABMultiValueRef ? { 
 + for i in 0 . . . ABMultiValueGetCount ( phones ) { 
 + var phoneStr = self . extractString ( phones , index : i ) 
 + if ( phoneStr = = nil | | phoneStr ! . trim ( ) . isEmpty ) { 
 + continue 
 + } 
 + phoneStr = phoneStr ! . strip ( numbersSet ) 
 + let phoneVal = Int64 ( phoneStr ! ) / / numberFormatter . numberFromString ( phoneStr ! ) ? . longLongValue 
 + if ( phoneVal ! = nil ) { 
 + contactPhones . addWithId ( ACPhoneBookPhone ( long : jlong ( index + + ) , withLong : jlong ( phoneVal ! ) ) ) 
 + } 
 + } 
 + } 
 + 
 + if let emails : ABMultiValueRef = 
 + self . extractProperty ( person as ABRecord , propertyName : kABPersonEmailProperty ) as ABMultiValueRef ? { 
 + for i in 0 . . . ABMultiValueGetCount ( emails ) { 
 + let emailStr = self . extractString ( emails , index : i ) 
 + if ( emailStr = = nil | | emailStr ! . trim ( ) . isEmpty ) { 
 + continue 
 + } 
 + contactEmails . addWithId ( ACPhoneBookEmail ( long : jlong ( index + + ) , withNSString : emailStr ! ) ) 
 + } 
 + } 
 + 
 + if ( contactPhones . size ( ) ! = 0 | | contactEmails . size ( ) ! = 0 ) { 
 + contacts . addWithId ( contact ) 
 + } 
 + } 
 + 
 + callback . onLoadedWithContacts ( contacts ) 
 } 
 - 
 - if ( contactPhones . size ( ) ! = 0 | | contactEmails . size ( ) ! = 0 ) { 
 - contacts . addWithId ( contact ) 
 - } 
 - } 
 - 
 - callback . onLoadedWithContacts ( contacts ) 
 - } ) ; 
 - 
 + } ) 
 + } 
 } 
 
 private func extractString ( record : ABRecord , propertyName : ABPropertyID ) - > String ? { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift 
 index ed52c21 . . 5e838f0 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorStyle . swift 
 @ @ - 378 , 11 + 378 , 11 @ @ public class ActorStyle { 
 
 / / Status Colors 
 
 - public var chatIconCheck1 = UIImage . templated ( " msg _ check _ 1 " ) 
 - public var chatIconCheck2 = UIImage . templated ( " msg _ check _ 2 " ) 
 - public var chatIconError = UIImage . templated ( " msg _ error " ) 
 - public var chatIconWarring = UIImage . templated ( " msg _ warring " ) 
 - public var chatIconClock = UIImage . templated ( " msg _ clock " ) 
 + public lazy var chatIconCheck1 = UIImage . templated ( " msg _ check _ 1 " ) 
 + public lazy var chatIconCheck2 = UIImage . templated ( " msg _ check _ 2 " ) 
 + public lazy var chatIconError = UIImage . templated ( " msg _ error " ) 
 + public lazy var chatIconWarring = UIImage . templated ( " msg _ warring " ) 
 + public lazy var chatIconClock = UIImage . templated ( " msg _ clock " ) 
 
 
 
 @ @ - 517 , 7 + 517 , 7 @ @ public class ActorStyle { 
 set ( v ) { _ chatAutocompleteHighlight = v } 
 } 
 
 - public var chatBgColor = UIColor ( patternImage : UIImage . bundled ( " bg _ foggy _ birds " ) ! . tintBgImage ( UIColor ( rgb : 0xe7e0c4 ) ) ) 
 + public lazy var chatBgColor = UIColor ( patternImage : UIImage . bundled ( " bg _ foggy _ birds " ) ! . tintBgImage ( UIColor ( rgb : 0xe7e0c4 ) ) ) 
 
 / / 
 / / Dialogs styles 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift 
 index cd1bc5f . . 4134457 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Strings . swift 
 @ @ - 7 , 6 + 7 , 8 @ @ import j2objc 
 
 public extension String { 
 
 + public var isEmpty : Bool { return self . characters . isEmpty } 
 + 
 public var length : Int { return self . characters . count } 
 
 public func trim ( ) - > String { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 219518e . . 8e279db 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 62 , 6 + 62 , 7 @ @ import im . actor . core . viewmodel . UploadFileVM ; 
 import im . actor . core . viewmodel . UploadFileVMCallback ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . * ; 
 + import im . actor . runtime . Runtime ; 
 import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . crypto . primitives . kuznechik . KuznechikFastEngine ; 
 import im . actor . runtime . mvvm . MVVMCollection ; 
 @ @ - 91 , 11 + 92 , 15 @ @ public class Messenger { 
 
 / / Encryption 
 timing . section ( " Encryption " ) ; 
 - byte [ ] asset = Assets . loadBinAsset ( " kuz _ tables . bin " ) ; 
 - if ( asset ! = null ) { 
 - KuznechikFastEngine . initDump ( asset ) ; 
 - } else { 
 + if ( Runtime . isSingleThread ( ) ) { 
 KuznechikFastEngine . initCalc ( ) ; 
 + } else { 
 + Runtime . dispatch ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + KuznechikFastEngine . initDump ( Assets . loadBinAsset ( " kuz _ tables . bin " ) ) ; 
 + } 
 + } ) ; 
 } 
 
 / / Actor system 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 84eb242 . . 244a97b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 102 , 15 + 102 , 6 @ @ public class Authentication { 
 if ( modules . getPreferences ( ) . getBool ( KEY _ AUTH , false ) ) { 
 state = AuthState . LOGGED _ IN ; 
 modules . onLoggedIn ( ) ; 
 - 
 - / / Notify ActorAnalytics 
 - User user = modules . getUsersModule ( ) . getUsersStorage ( ) . getValue ( myUid ) ; 
 - ArrayList < Long > records = new ArrayList < Long > ( ) ; 
 - for ( ContactRecord contactRecord : user . getRecords ( ) ) { 
 - if ( contactRecord . getRecordType ( ) = = ContactRecordType . PHONE ) { 
 - records . add ( Long . parseLong ( contactRecord . getRecordData ( ) ) ) ; 
 - } 
 - } 
 } else { 
 state = AuthState . AUTH _ START ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java 
 index 2cdb64e . . 3f03158 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / KeyManagerActor . java 
 @ @ - 33 , 6 + 33 , 7 @ @ import im . actor . runtime . actors . ask . AskIntRequest ; 
 import im . actor . runtime . actors . ask . AskMessage ; 
 import im . actor . runtime . actors . ask . AskResult ; 
 import im . actor . runtime . collections . ManagedList ; 
 + import im . actor . runtime . crypto . Curve25519KeyPair ; 
 import im . actor . runtime . function . Function ; 
 import im . actor . runtime . promise . Promise ; 
 import im . actor . runtime . crypto . Curve25519 ; 
 @ @ - 82 , 19 + 83 , 26 @ @ public class KeyManagerActor extends ModuleActor { 
 if ( ownKeysStorage ! = null ) { 
 try { 
 ownKeys = new PrivateKeyStorage ( ownKeysStorage ) ; 
 + 
 + / / If we need re - save key storage 
 + if ( ownKeys . isWasRegenerated ( ) ) { 
 + encryptionKeysStorage . addOrUpdateItem ( 0 , ownKeys . toByteArray ( ) ) ; 
 + } 
 } catch ( IOException e ) { 
 e . printStackTrace ( ) ; 
 } 
 } 
 
 if ( ownKeys = = null ) { 
 - byte [ ] identityPrivate = Curve25519 . keyGenPrivate ( Crypto . randomBytes ( 64 ) ) ; 
 - byte [ ] key0 = Curve25519 . keyGenPrivate ( Crypto . randomBytes ( 64 ) ) ; 
 + Curve25519KeyPair identityPrivate = Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ; 
 + Curve25519KeyPair key0 = Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ; 
 
 ownKeys = new PrivateKeyStorage ( 0 , 
 - new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , identityPrivate ) , 
 + new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , identityPrivate . getPrivateKey ( ) , 
 + identityPrivate . getPublicKey ( ) ) , 
 new PrivateKey [ ] { 
 - new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , key0 ) 
 + new PrivateKey ( RandomUtils . nextRid ( ) , " curve25519 " , key0 . getPrivateKey ( ) , 
 + key0 . getPublicKey ( ) ) 
 } , 
 new PrivateKey [ 0 ] ) ; 
 encryptionKeysStorage . addOrUpdateItem ( 0 , ownKeys . toByteArray ( ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java 
 index 2129402 . . 07d7be2 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKey . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import im . actor . runtime . bser . BserObject ; 
 import im . actor . runtime . bser . BserValues ; 
 import im . actor . runtime . bser . BserWriter ; 
 import im . actor . runtime . crypto . Curve25519 ; 
 + import im . actor . runtime . crypto . Curve25519KeyPair ; 
 import im . actor . runtime . crypto . primitives . util . ByteStrings ; 
 import im . actor . runtime . crypto . ratchet . RatchetKeySignature ; 
 import im . actor . runtime . function . Function ; 
 @ @ - 58 , 10 + 59 , 12 @ @ public class PrivateKey extends BserObject { 
 public static final Supplier < PrivateKey > GENERATOR = new Supplier < PrivateKey > ( ) { 
 @ Override 
 public PrivateKey get ( ) { 
 + Curve25519KeyPair keyPair = Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ; 
 return new PrivateKey ( 
 RandomUtils . nextRid ( ) , 
 " curve25519 " , 
 - Curve25519 . keyGenPrivate ( Crypto . randomBytes ( 64 ) ) , 
 + keyPair . getPrivateKey ( ) , 
 + keyPair . getPublicKey ( ) , 
 false ) ; 
 } 
 } ; 
 @ @ - 85 , 17 + 88 , 18 @ @ public class PrivateKey extends BserObject { 
 private byte [ ] key ; 
 private byte [ ] publicKey ; 
 private Boolean isUploaded ; 
 + private boolean wasRegenerated = false ; 
 
 - public PrivateKey ( long keyId , String keyAlg , byte [ ] key , Boolean isUploaded ) { 
 + public PrivateKey ( long keyId , String keyAlg , byte [ ] privateKey , byte [ ] publicKey , Boolean isUploaded ) { 
 this . keyId = keyId ; 
 this . keyAlg = keyAlg ; 
 - this . key = key ; 
 + this . key = privateKey ; 
 this . isUploaded = isUploaded ; 
 - this . publicKey = Curve25519 . keyGenPublic ( key ) ; 
 + this . publicKey = publicKey ; 
 } 
 
 - public PrivateKey ( long keyId , String keyAlg , byte [ ] key ) { 
 - this ( keyId , keyAlg , key , null ) ; 
 + public PrivateKey ( long keyId , String keyAlg , byte [ ] privateKey , byte [ ] publicKey ) { 
 + this ( keyId , keyAlg , privateKey , publicKey , null ) ; 
 } 
 
 public PrivateKey ( byte [ ] data ) throws IOException { 
 @ @ - 125 , 12 + 129 , 16 @ @ public class PrivateKey extends BserObject { 
 return isUploaded ; 
 } 
 
 + public boolean isWasRegenerated ( ) { 
 + return wasRegenerated ; 
 + } 
 + 
 public ApiEncryptionKey toApiKey ( ) { 
 return new ApiEncryptionKey ( keyId , keyAlg , publicKey , null ) ; 
 } 
 
 public PrivateKey markAsUploaded ( ) { 
 - return new PrivateKey ( getKeyId ( ) , getKeyAlg ( ) , getKey ( ) , true ) ; 
 + return new PrivateKey ( getKeyId ( ) , getKeyAlg ( ) , getKey ( ) , getPublicKey ( ) , true ) ; 
 } 
 
 @ Override 
 @ @ - 139 , 7 + 147 , 11 @ @ public class PrivateKey extends BserObject { 
 keyAlg = values . getString ( 2 ) ; 
 key = values . getBytes ( 3 ) ; 
 isUploaded = values . optBool ( 4 ) ; 
 - this . publicKey = Curve25519 . keyGenPublic ( key ) ; 
 + publicKey = values . optBytes ( 5 ) ; 
 + if ( publicKey = = null ) { 
 + wasRegenerated = true ; 
 + publicKey = Curve25519 . keyGenPublic ( key ) ; 
 + } 
 } 
 
 @ Override 
 @ @ - 147 , 6 + 159 , 7 @ @ public class PrivateKey extends BserObject { 
 writer . writeLong ( 1 , keyId ) ; 
 writer . writeString ( 2 , keyAlg ) ; 
 writer . writeBytes ( 3 , key ) ; 
 + writer . writeBytes ( 5 , publicKey ) ; 
 if ( isUploaded ! = null ) { 
 writer . writeBool ( 4 , isUploaded ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java 
 index 2937a0e . . 74a0c65 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / encryption / entity / PrivateKeyStorage . java 
 @ @ - 15 , 6 + 15 , 7 @ @ public class PrivateKeyStorage extends BserObject { 
 private PrivateKey identityKey = null ; 
 private PrivateKey [ ] keys ; 
 private PrivateKey [ ] preKeys ; 
 + private boolean wasRegenerated = false ; 
 
 public PrivateKeyStorage ( int keyGroupId , PrivateKey identityKey , PrivateKey [ ] keys , PrivateKey [ ] preKeys ) { 
 this . keyGroupId = keyGroupId ; 
 @ @ - 84 , 19 + 85 , 26 @ @ public class PrivateKeyStorage extends BserObject { 
 return uploadedKeys . get ( RandomUtils . randomId ( uploadedKeys . size ( ) ) ) ; 
 } 
 
 + public boolean isWasRegenerated ( ) { 
 + return wasRegenerated ; 
 + } 
 + 
 @ Override 
 public void parse ( BserValues values ) throws IOException { 
 keyGroupId = values . getInt ( 1 ) ; 
 identityKey = new PrivateKey ( values . getBytes ( 2 ) ) ; 
 + wasRegenerated | = identityKey . isWasRegenerated ( ) ; 
 List < byte [ ] > r = values . getRepeatedBytes ( 3 ) ; 
 keys = new PrivateKey [ r . size ( ) ] ; 
 for ( int i = 0 ; i < keys . length ; i + + ) { 
 keys [ i ] = new PrivateKey ( r . get ( i ) ) ; 
 + wasRegenerated | = keys [ i ] . isWasRegenerated ( ) ; 
 } 
 r = values . getRepeatedBytes ( 4 ) ; 
 preKeys = new PrivateKey [ r . size ( ) ] ; 
 for ( int i = 0 ; i < preKeys . length ; i + + ) { 
 preKeys [ i ] = new PrivateKey ( r . get ( i ) ) ; 
 + wasRegenerated | = preKeys [ i ] . isWasRegenerated ( ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java 
 index e8e50c4 . . 27d57d8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / StickersModule . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class StickersModule extends AbsModule { 
 public StickersModule ( ModuleContext context ) { 
 super ( context ) ; 
 this . stickerPacksList = Storage . createKeyValue ( STORAGE _ STICKER _ ALL _ PACKS ) ; 
 - stickerPacks = new ValueModel < ArrayList < StickerPackVM > > ( " sticker _ packs _ vms " , new ArrayList < StickerPackVM > ( ) ) ; 
 + stickerPacks = new ValueModel < > ( " sticker _ packs _ vms " , new ArrayList < StickerPackVM > ( ) ) ; 
 stickerPacks . change ( buildStickerPacks ( ) ) ; 
 context ( ) . getEvents ( ) . subscribe ( new BusSubscriber ( ) { 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java 
 index 4fe2f6f . . 5754118 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaLogProvider . java 
 @ @ - 6 , 23 + 6 , 23 @ @ public class CocoaLogProvider implements LogRuntime { 
 
 @ Override 
 public native void w ( String tag , String message ) / * - [ 
 - NSLog ( @ " WARRING % @ : % @ " , tag , message ) ; 
 + / / NSLog ( @ " WARRING % @ : % @ " , tag , message ) ; 
 ] - * / ; 
 
 @ Override 
 public native void e ( String tag , Throwable throwable ) / * - [ 
 - NSLog ( @ " ERROR % @ : " , tag ) ; 
 - [ throwable printStackTrace ] ; 
 + / / NSLog ( @ " ERROR % @ : " , tag ) ; 
 + / / [ throwable printStackTrace ] ; 
 ] - * / ; 
 
 
 @ Override 
 public native void d ( String tag , String message ) / * - [ 
 - NSLog ( @ " % @ : % @ " , tag , message ) ; 
 + / / NSLog ( @ " % @ : % @ " , tag , message ) ; 
 ] - * / ; 
 
 @ Override 
 public native void v ( String tag , String message ) / * - [ 
 - NSLog ( @ " % @ : % @ " , tag , message ) ; 
 + / / NSLog ( @ " % @ : % @ " , tag , message ) ; 
 ] - * / ; 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java 
 index d319adf . . c1d0d9a 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / kuznechik / KuznechikFastEngine . java 
 @ @ - 1 , 5 + 1 , 8 @ @ 
 package im . actor . runtime . crypto . primitives . kuznechik ; 
 
 + import com . google . j2objc . annotations . AutoreleasePool ; 
 + 
 + import im . actor . runtime . * ; 
 import im . actor . runtime . crypto . primitives . BlockCipher ; 
 import im . actor . runtime . crypto . primitives . util . Pack ; 
 
 @ @ - 122 , 14 + 125 , 17 @ @ public class KuznechikFastEngine implements BlockCipher { 
 ( byte ) 0x37 , ( byte ) 0xc4 , ( byte ) 0xaf , ( byte ) 0x24 , ( byte ) 0x2e , ( byte ) 0x6f , ( byte ) 0x8a , ( byte ) 0xa8 , ( byte ) 0xf7 , ( byte ) 0x60 , ( byte ) 0x49 , ( byte ) 0xe3 , ( byte ) 0x80 , ( byte ) 0x86 , ( byte ) 0x59 , ( byte ) 0x07 , 
 } ; 
 
 - private static volatile int [ ] gf256res ; 
 - private static volatile int [ ] gf256resInv ; 
 + private static boolean isLoaded ; 
 + private static final Object LOCk = new Object ( ) ; 
 + 
 + private static int [ ] gf256res ; 
 + private static int [ ] gf256resInv ; 
 
 public static void initCalc ( ) { 
 if ( gf256res ! = null | | gf256resInv ! = null ) { 
 return ; 
 } 
 - 
 + 
 gf256res = new int [ 16 * 256 * 4 ] ; 
 gf256resInv = new int [ 16 * 256 * 4 ] ; 
 
 @ @ - 151 , 16 + 157 , 47 @ @ public class KuznechikFastEngine implements BlockCipher { 
 Pack . bigEndianToInt ( tmp , 0 , gf256resInv , ( index + ( 16 * i ) ) * 4 , 4 ) ; 
 } 
 } 
 - } 
 
 - public static void initDump ( byte [ ] data ) { 
 - if ( gf256res ! = null | | gf256resInv ! = null ) { 
 - return ; 
 + synchronized ( LOCk ) { 
 + isLoaded = true ; 
 + LOCk . notifyAll ( ) ; 
 } 
 - gf256res = new int [ 16 * 256 * 4 ] ; 
 - gf256resInv = new int [ 16 * 256 * 4 ] ; 
 - Pack . bigEndianToInt ( data , 0 , gf256res ) ; 
 - Pack . bigEndianToInt ( data , gf256res . length * 4 , gf256resInv ) ; 
 + } 
 + 
 + @ AutoreleasePool 
 + public static void initDump ( final byte [ ] data ) { 
 + im . actor . runtime . Runtime . dispatch ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + if ( gf256res ! = null | | gf256resInv ! = null ) { 
 + return ; 
 + } 
 + gf256res = new int [ 16 * 256 * 4 ] ; 
 + gf256resInv = new int [ 16 * 256 * 4 ] ; 
 + int offset = 0 ; 
 + int n ; 
 + for ( int i = 0 ; i < gf256res . length ; + + i ) { 
 + n = data [ offset + + ] < < 24 ; 
 + n | = ( data [ offset + + ] & 0xff ) < < 16 ; 
 + n | = ( data [ offset + + ] & 0xff ) < < 8 ; 
 + n | = ( data [ offset + + ] & 0xff ) ; 
 + gf256res [ i ] = n ; 
 + } 
 + 
 + for ( int i = 0 ; i < gf256resInv . length ; + + i ) { 
 + n = data [ offset + + ] < < 24 ; 
 + n | = ( data [ offset + + ] & 0xff ) < < 16 ; 
 + n | = ( data [ offset + + ] & 0xff ) < < 8 ; 
 + n | = ( data [ offset + + ] & 0xff ) ; 
 + gf256resInv [ i ] = n ; 
 + } 
 + 
 + synchronized ( LOCk ) { 
 + isLoaded = true ; 
 + LOCk . notifyAll ( ) ; 
 + } 
 + } 
 + } ) ; 
 } 
 
 static void kuz _ l _ fast ( int [ ] w ) { 
 @ @ - 243 , 7 + 280 , 21 @ @ public class KuznechikFastEngine implements BlockCipher { 
 private int C3 ; 
 
 public KuznechikFastEngine ( byte [ ] key ) { 
 + 
 + synchronized ( LOCk ) { 
 + if ( ! isLoaded ) { 
 + try { 
 + LOCk . wait ( ) ; 
 + } catch ( InterruptedException e ) { 
 + e . printStackTrace ( ) ; 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 + } 
 + 
 this . key = convertKey ( key ) ; 
 + 
 + 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java 
 index 6a1fe6a . . 34ae57f 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / modes / CBCBlockCipher . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package im . actor . runtime . crypto . primitives . modes ; 
 
 + import com . google . j2objc . annotations . AutoreleasePool ; 
 + 
 import im . actor . runtime . crypto . IntegrityException ; 
 import im . actor . runtime . crypto . primitives . BlockCipher ; 
 
 @ @ - 37 , 8 + 39 , 34 @ @ public class CBCBlockCipher { 
 throw new IntegrityException ( " Incorrect iv size " ) ; 
 } 
 
 - byte [ ] currentBlock = new byte [ blockSize ] ; 
 byte [ ] res = new byte [ data . length ] ; 
 + encrypt ( iv , data , res ) ; 
 + return res ; 
 + } 
 + 
 + / * * 
 + * Decrypting data 
 + * 
 + * @ param iv initialization vector 
 + * @ param data data for decryption 
 + * @ return decrypted data 
 + * / 
 + public byte [ ] decrypt ( byte [ ] iv , byte [ ] data ) throws IntegrityException { 
 + if ( data . length % blockSize ! = 0 ) { 
 + throw new IntegrityException ( " Incorrect data size " ) ; 
 + } 
 + if ( iv . length ! = blockSize ) { 
 + throw new IntegrityException ( " Incorrect iv size " ) ; 
 + } 
 + 
 + byte [ ] res = new byte [ data . length ] ; 
 + decrypt ( iv , data , res ) ; 
 + return res ; 
 + } 
 + 
 + @ AutoreleasePool 
 + private void encrypt ( byte [ ] iv , byte [ ] data , byte [ ] res ) { 
 + byte [ ] currentBlock = new byte [ blockSize ] ; 
 
 byte [ ] currentIV = new byte [ blockSize ] ; 
 for ( int i = 0 ; i < blockSize ; i + + ) { 
 @ @ - 58 , 27 + 86 , 10 @ @ public class CBCBlockCipher { 
 currentIV [ j ] = res [ i * blockSize + j ] ; 
 } 
 } 
 - 
 - return res ; 
 } 
 
 - / * * 
 - * Decrypting data 
 - * 
 - * @ param iv initialization vector 
 - * @ param data data for decryption 
 - * @ return decrypted data 
 - * / 
 - public byte [ ] decrypt ( byte [ ] iv , byte [ ] data ) throws IntegrityException { 
 - if ( data . length % blockSize ! = 0 ) { 
 - throw new IntegrityException ( " Incorrect data size " ) ; 
 - } 
 - if ( iv . length ! = blockSize ) { 
 - throw new IntegrityException ( " Incorrect iv size " ) ; 
 - } 
 - 
 - byte [ ] res = new byte [ data . length ] ; 
 - 
 + @ AutoreleasePool 
 + private void decrypt ( byte [ ] iv , byte [ ] data , byte [ ] res ) { 
 byte [ ] r = new byte [ blockSize ] ; 
 for ( int i = 0 ; i < blockSize ; i + + ) { 
 r [ i ] = iv [ i ] ; 
 @ @ - 97 , 7 + 108 , 5 @ @ public class CBCBlockCipher { 
 r [ j ] = data [ i * blockSize + j ] ; 
 } 
 } 
 - 
 - return res ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java 
 index ee1c8a5 . . 72c6027 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / crypto / primitives / util / Pack . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package im . actor . runtime . crypto . primitives . util ; 
 
 + import com . google . j2objc . annotations . AutoreleasePool ; 
 + 
 / * * 
 * Source : Bouncy Castle v1 . 54 
 * < p > 
 @ @ - 22 , 6 + 24 , 7 @ @ public abstract class Pack { 
 return n ; 
 } 
 
 + @ AutoreleasePool 
 public static void bigEndianToInt ( byte [ ] bs , int off , int [ ] ns ) { 
 for ( int i = 0 ; i < ns . length ; + + i ) { 
 ns [ i ] = bigEndianToInt ( bs , off ) ;
