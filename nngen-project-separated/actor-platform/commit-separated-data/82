BLEU SCORE: 0.15851165692617147

TEST MSG: fix ( server ) : try to fix server hang on start
GENERATED MSG: fix ( server : groups ) : group deletion updates

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala < nl > index 9579a21 . . de8fab6 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala < nl > @ @ - 28 , 7 + 28 , 6 @ @ private [ group ] final class GroupsHttpHandler ( ) ( implicit system : ActorSystem ) ext < nl > private val db = DbExtension ( system ) . db < nl > private val fsAdapter = FileStorageExtension ( system ) . fsAdapter < nl > private val globalNamesStorage = new GlobalNamesStorageKeyValueStorage < nl > - private val groupExt = GroupExtension ( system ) < nl > < nl > override def routes : Route = < nl > defaultVersion { < nl > @ @ - 62 , 8 + 61 , 8 @ @ private [ group ] final class GroupsHttpHandler ( ) ( implicit system : ActorSystem ) ext < nl > result ← optInviteData map { < nl > case ( groupId , optInviterId ) ⇒ < nl > for { < nl > - groupInfo ← groupExt . getApiStruct ( groupId , 0 ) < nl > - isHistoryShared ← groupExt . isHistoryShared ( groupId ) < nl > + groupInfo ← GroupExtension ( system ) . getApiStruct ( groupId , 0 ) < nl > + isHistoryShared ← GroupExtension ( system ) . isHistoryShared ( groupId ) < nl > groupTitle = groupInfo . title < nl > groupAvatar = groupInfo . avatar < nl > groupAvatarUrls ← avatarUrls ( groupAvatar )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > index eaae17e . . 090a6d0 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > @ @ - 270 , 7 + 270 , 6 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) < nl > } < nl > < nl > private def sendChatGroupsChanged ( authId : Long ) : Future [ SeqState ] = { < nl > - val pushRules = if ( authId = = 0L ) PushRules ( ) else PushRules ( ) . withExcludeAuthIds ( Seq ( authId ) ) < nl > for { < nl > groups ← DialogExtension ( system ) . fetchApiGroupedDialogs ( userId ) < nl > update = UpdateChatGroupsChanged ( groups ) < nl > @ @ - 278 , 7 + 277 , 6 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) < nl > userId , < nl > authId , < nl > update , < nl > - pushRules , < nl > reduceKey = Some ( s " dialogschanged _ $ { userId } " ) < nl > ) < nl > } yield seqState < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala < nl > index 8254b34 . . 5f750cb 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala < nl > @ @ - 328 , 12 + 328 , 12 @ @ private [ group ] trait AdminCommandHandlers extends GroupsImplicits { < nl > val deleteGroupMembersUpdates : Vector [ Update ] = emptyPermissions + + < nl > Vector ( < nl > UpdateGroupMemberChanged ( groupId , isMember = false ) , < nl > + UpdateGroupDeleted ( groupId ) , < nl > / / if channel , or group is big enough < nl > if ( exGroupType . isChannel ) < nl > UpdateGroupMembersCountChanged ( groupId , membersCount = 0 ) < nl > else < nl > - UpdateGroupMembersUpdated ( groupId , members = Vector . empty ) , < nl > - UpdateGroupDeleted ( groupId ) < nl > + UpdateGroupMembersUpdated ( groupId , members = Vector . empty ) < nl > ) < nl > < nl > / / TODO : remove deprecated . GroupInviteTokenRepo don ' t have replacement yet .

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala 
 index 9579a21 . . de8fab6 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / http / GroupsHttpHandler . scala 
 @ @ - 28 , 7 + 28 , 6 @ @ private [ group ] final class GroupsHttpHandler ( ) ( implicit system : ActorSystem ) ext 
 private val db = DbExtension ( system ) . db 
 private val fsAdapter = FileStorageExtension ( system ) . fsAdapter 
 private val globalNamesStorage = new GlobalNamesStorageKeyValueStorage 
 - private val groupExt = GroupExtension ( system ) 
 
 override def routes : Route = 
 defaultVersion { 
 @ @ - 62 , 8 + 61 , 8 @ @ private [ group ] final class GroupsHttpHandler ( ) ( implicit system : ActorSystem ) ext 
 result ← optInviteData map { 
 case ( groupId , optInviterId ) ⇒ 
 for { 
 - groupInfo ← groupExt . getApiStruct ( groupId , 0 ) 
 - isHistoryShared ← groupExt . isHistoryShared ( groupId ) 
 + groupInfo ← GroupExtension ( system ) . getApiStruct ( groupId , 0 ) 
 + isHistoryShared ← GroupExtension ( system ) . isHistoryShared ( groupId ) 
 groupTitle = groupInfo . title 
 groupAvatar = groupInfo . avatar 
 groupAvatarUrls ← avatarUrls ( groupAvatar )

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 index eaae17e . . 090a6d0 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 @ @ - 270 , 7 + 270 , 6 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) 
 } 
 
 private def sendChatGroupsChanged ( authId : Long ) : Future [ SeqState ] = { 
 - val pushRules = if ( authId = = 0L ) PushRules ( ) else PushRules ( ) . withExcludeAuthIds ( Seq ( authId ) ) 
 for { 
 groups ← DialogExtension ( system ) . fetchApiGroupedDialogs ( userId ) 
 update = UpdateChatGroupsChanged ( groups ) 
 @ @ - 278 , 7 + 277 , 6 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) 
 userId , 
 authId , 
 update , 
 - pushRules , 
 reduceKey = Some ( s " dialogschanged _ $ { userId } " ) 
 ) 
 } yield seqState 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala 
 index 8254b34 . . 5f750cb 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / AdminCommandHandlers . scala 
 @ @ - 328 , 12 + 328 , 12 @ @ private [ group ] trait AdminCommandHandlers extends GroupsImplicits { 
 val deleteGroupMembersUpdates : Vector [ Update ] = emptyPermissions + + 
 Vector ( 
 UpdateGroupMemberChanged ( groupId , isMember = false ) , 
 + UpdateGroupDeleted ( groupId ) , 
 / / if channel , or group is big enough 
 if ( exGroupType . isChannel ) 
 UpdateGroupMembersCountChanged ( groupId , membersCount = 0 ) 
 else 
 - UpdateGroupMembersUpdated ( groupId , members = Vector . empty ) , 
 - UpdateGroupDeleted ( groupId ) 
 + UpdateGroupMembersUpdated ( groupId , members = Vector . empty ) 
 ) 
 
 / / TODO : remove deprecated . GroupInviteTokenRepo don ' t have replacement yet .
