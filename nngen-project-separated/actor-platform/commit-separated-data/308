BLEU SCORE: 0.3290385879986622

TEST MSG: fix ( runtime ) : remove sdk reference from runtime , fix CocoaWebRTCProxyProvider , JsWebRTCProvider
GENERATED MSG: fix ( runtime ) : Fixing incorrect reference from runtime to core classes

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index 907fbcd . . 115a35f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 6 , 7 + 6 , 6 @ @ import org . jetbrains . annotations . NotNull ; < nl > < nl > import java . util . List ; < nl > < nl > - import im . actor . core . Configuration ; < nl > import im . actor . core . api . ApiICEServer ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . ModuleActor ; < nl > @ @ - 23 , 7 + 22 , 6 @ @ import im . actor . runtime . webrtc . WebRTCPeerConnection ; < nl > import im . actor . runtime . webrtc . WebRTCPeerConnectionCallback ; < nl > import im . actor . runtime . webrtc . WebRTCSessionDescription ; < nl > import im . actor . runtime . webrtc . WebRTCSettings ; < nl > - import im . actor . sdk . ActorSDK ; < nl > < nl > / * - [ < nl > # pragma clang diagnostic ignored " - Wnullability - completeness " < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java < nl > index af4085f . . 049a2e7 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java < nl > @ @ - 32 , 11 + 32 , 11 @ @ public class CocoaWebRTCProxyProvider implements WebRTCRuntime { < nl > < nl > @ NotNull < nl > @ Override < nl > - public Promise < WebRTCMediaStream > getUserAudio ( ) { < nl > + public Promise < WebRTCMediaStream > getUserMedia ( boolean isVideoEnabled ) { < nl > if ( rtcRuntime = = null ) { < nl > return Promise . failure ( new RuntimeException ( " WebRTC Runtime not set " ) ) ; < nl > } < nl > - return rtcRuntime . getUserAudio ( ) ; < nl > + return rtcRuntime . getUserMedia ( isVideoEnabled ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java < nl > index 20391e0 . . 1e39ee6 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java < nl > @ @ - 45 , 7 + 45 , 7 @ @ public class JsWebRTCProvider implements WebRTCRuntime { < nl > < nl > @ NotNull < nl > @ Override < nl > - public Promise < WebRTCMediaStream > getUserAudio ( ) { < nl > + public Promise < WebRTCMediaStream > getUserMedia ( boolean isVideoEnabled ) { < nl > return new Promise < > ( new PromiseFunc < WebRTCMediaStream > ( ) { < nl > @ Override < nl > public void exec ( @ NotNull final PromiseResolver < WebRTCMediaStream > resolver ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsScheduller . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsScheduller . java < nl > deleted file mode 100644 < nl > index b2fb2aa . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsScheduller . java < nl > + + + / dev / null < nl > @ @ - 1 , 21 + 0 , 0 @ @ < nl > - package im . actor . core . js . modules ; < nl > - < nl > - import im . actor . runtime . actors . Actor ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > - import im . actor . runtime . actors . ActorRef ; < nl > - < nl > - import static im . actor . runtime . actors . ActorSystem . system ; < nl > - < nl > - public class JsScheduller { < nl > - < nl > - private static final ActorRef SCHEDULLER = system ( ) . actorOf ( " js / scheduller " , new ActorCreator ( ) { < nl > - @ Override < nl > - public Actor create ( ) { < nl > - return new Actor ( ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - public static ActorRef scheduller ( ) { < nl > - return SCHEDULLER ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java < nl > index fb0b712 . . 9c84672 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java < nl > @ @ - 4 , 9 + 4 , 9 @ @ import com . google . gwt . core . client . JsArray ; < nl > < nl > import org . jetbrains . annotations . NotNull ; < nl > < nl > - import im . actor . core . js . modules . JsScheduller ; < nl > import im . actor . runtime . WebRTCRuntime ; < nl > import im . actor . runtime . function . Consumer ; < nl > + import im . actor . runtime . js . threading . JsScheduller ; < nl > import im . actor . runtime . js . webrtc . JsIceServer ; < nl > import im . actor . runtime . js . webrtc . JsMediaStream ; < nl > import im . actor . runtime . js . webrtc . JsPeerConnection ; < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsScheduller . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsScheduller . java < nl > new file mode 100644 < nl > index 0000000 . . d6519c0 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsScheduller . java < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + package im . actor . runtime . js . threading ; < nl > + < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + < nl > + import static im . actor . runtime . actors . ActorSystem . system ; < nl > + < nl > + public class JsScheduller { < nl > + < nl > + private static final ActorRef SCHEDULLER = system ( ) . actorOf ( " js / scheduller " , new ActorCreator ( ) { < nl > + @ Override < nl > + public Actor create ( ) { < nl > + return new Actor ( ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + public static ActorRef scheduller ( ) { < nl > + return SCHEDULLER ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index 907fbcd . . 115a35f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 6 , 7 + 6 , 6 @ @ import org . jetbrains . annotations . NotNull ; 
 
 import java . util . List ; 
 
 - import im . actor . core . Configuration ; 
 import im . actor . core . api . ApiICEServer ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . ModuleActor ; 
 @ @ - 23 , 7 + 22 , 6 @ @ import im . actor . runtime . webrtc . WebRTCPeerConnection ; 
 import im . actor . runtime . webrtc . WebRTCPeerConnectionCallback ; 
 import im . actor . runtime . webrtc . WebRTCSessionDescription ; 
 import im . actor . runtime . webrtc . WebRTCSettings ; 
 - import im . actor . sdk . ActorSDK ; 
 
 / * - [ 
 # pragma clang diagnostic ignored " - Wnullability - completeness " 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java 
 index af4085f . . 049a2e7 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - cocoa / src / main / java / im / actor / runtime / cocoa / CocoaWebRTCProxyProvider . java 
 @ @ - 32 , 11 + 32 , 11 @ @ public class CocoaWebRTCProxyProvider implements WebRTCRuntime { 
 
 @ NotNull 
 @ Override 
 - public Promise < WebRTCMediaStream > getUserAudio ( ) { 
 + public Promise < WebRTCMediaStream > getUserMedia ( boolean isVideoEnabled ) { 
 if ( rtcRuntime = = null ) { 
 return Promise . failure ( new RuntimeException ( " WebRTC Runtime not set " ) ) ; 
 } 
 - return rtcRuntime . getUserAudio ( ) ; 
 + return rtcRuntime . getUserMedia ( isVideoEnabled ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java 
 index 20391e0 . . 1e39ee6 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class JsWebRTCProvider implements WebRTCRuntime { 
 
 @ NotNull 
 @ Override 
 - public Promise < WebRTCMediaStream > getUserAudio ( ) { 
 + public Promise < WebRTCMediaStream > getUserMedia ( boolean isVideoEnabled ) { 
 return new Promise < > ( new PromiseFunc < WebRTCMediaStream > ( ) { 
 @ Override 
 public void exec ( @ NotNull final PromiseResolver < WebRTCMediaStream > resolver ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsScheduller . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsScheduller . java 
 deleted file mode 100644 
 index b2fb2aa . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / modules / JsScheduller . java 
 + + + / dev / null 
 @ @ - 1 , 21 + 0 , 0 @ @ 
 - package im . actor . core . js . modules ; 
 - 
 - import im . actor . runtime . actors . Actor ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 - import im . actor . runtime . actors . ActorRef ; 
 - 
 - import static im . actor . runtime . actors . ActorSystem . system ; 
 - 
 - public class JsScheduller { 
 - 
 - private static final ActorRef SCHEDULLER = system ( ) . actorOf ( " js / scheduller " , new ActorCreator ( ) { 
 - @ Override 
 - public Actor create ( ) { 
 - return new Actor ( ) ; 
 - } 
 - } ) ; 
 - 
 - public static ActorRef scheduller ( ) { 
 - return SCHEDULLER ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java 
 index fb0b712 . . 9c84672 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / JsWebRTCProvider . java 
 @ @ - 4 , 9 + 4 , 9 @ @ import com . google . gwt . core . client . JsArray ; 
 
 import org . jetbrains . annotations . NotNull ; 
 
 - import im . actor . core . js . modules . JsScheduller ; 
 import im . actor . runtime . WebRTCRuntime ; 
 import im . actor . runtime . function . Consumer ; 
 + import im . actor . runtime . js . threading . JsScheduller ; 
 import im . actor . runtime . js . webrtc . JsIceServer ; 
 import im . actor . runtime . js . webrtc . JsMediaStream ; 
 import im . actor . runtime . js . webrtc . JsPeerConnection ; 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsScheduller . java b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsScheduller . java 
 new file mode 100644 
 index 0000000 . . d6519c0 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / runtime / runtime - js / src / main / java / im / actor / runtime / js / threading / JsScheduller . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package im . actor . runtime . js . threading ; 
 + 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 + 
 + import static im . actor . runtime . actors . ActorSystem . system ; 
 + 
 + public class JsScheduller { 
 + 
 + private static final ActorRef SCHEDULLER = system ( ) . actorOf ( " js / scheduller " , new ActorCreator ( ) { 
 + @ Override 
 + public Actor create ( ) { 
 + return new Actor ( ) ; 
 + } 
 + } ) ; 
 + 
 + public static ActorRef scheduller ( ) { 
 + return SCHEDULLER ; 
 + } 
 + }
