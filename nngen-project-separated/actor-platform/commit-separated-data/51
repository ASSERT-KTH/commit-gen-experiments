BLEU SCORE: 0.35084396956386854

TEST MSG: fix ( android ) : pick last message for notification configure
GENERATED MSG: fix ( android ) : set AndroidContext before onConfigureActorSDK

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index edf1ff5 . . f9725ba 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 122 , 12 + 122 , 8 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > public Uri getNotificationSoundForPeer ( Peer peer ) { < nl > < nl > String globalSound = messenger ( ) . getPreferences ( ) . getString ( " userNotificationSound _ " + peer . getPeerId ( ) ) ; < nl > - if ( globalSound ! = null ) { < nl > - if ( globalSound . equals ( " none " ) ) { < nl > - return null ; < nl > - } else { < nl > - return Uri . parse ( globalSound ) ; < nl > - } < nl > + if ( globalSound ! = null & & ! globalSound . equals ( " none " ) ) { < nl > + return Uri . parse ( globalSound ) ; < nl > } < nl > < nl > return getNotificationSound ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > index 2c3200f . . 0a925c4 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java < nl > @ @ - 91 , 7 + 91 , 7 @ @ public class AndroidNotifications implements NotificationProvider { < nl > / / . setBackground ( ( ( BitmapDrawable ) AppContext . getContext ( ) . getResources ( ) . getDrawable ( R . drawable . wear _ bg ) ) . getBitmap ( ) ) < nl > / / . setHintHideIcon ( true ) ) ; < nl > < nl > - final Notification topNotification = topNotifications . get ( 0 ) ; < nl > + final Notification topNotification = topNotifications . get ( topNotifications . size ( ) - 1 ) ; < nl > < nl > / / if ( ! silentUpdate ) { < nl > / / builder . setTicker ( getNotificationTextFull ( topNotification , messenger ) ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 5c374a8 . . 3e5a5b8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 220 , 7 + 220 , 6 @ @ public class ActorSDK { < nl > . setDownsampleEnabled ( true ) < nl > . build ( ) ; < nl > Fresco . initialize ( application , config ) ; < nl > - AndroidContext . setContext ( application ) ; < nl > / / TODO : Replace < nl > new SmileProcessor ( application ) . loadEmoji ( ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 55aba69 . . 4e9b398 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 3 , 6 + 3 , 8 @ @ package im . actor . sdk ; < nl > import android . app . ActivityManager ; < nl > import android . app . Application ; < nl > < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + < nl > / * * < nl > * Implementation of Application object that handles everything required for creating and < nl > * managing Actor SDK < nl > @ @ - 24 , 6 + 26 , 7 @ @ public class ActorSDKApplication extends Application { < nl > < nl > / / Protection on double start < nl > if ( ! myProcessName . endsWith ( " : actor _ push " ) ) { < nl > + AndroidContext . setContext ( this ) ; < nl > onConfigureActorSDK ( ) ; < nl > ActorSDK . sharedActor ( ) . createActor ( this ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index edf1ff5 . . f9725ba 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 122 , 12 + 122 , 8 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 public Uri getNotificationSoundForPeer ( Peer peer ) { 
 
 String globalSound = messenger ( ) . getPreferences ( ) . getString ( " userNotificationSound _ " + peer . getPeerId ( ) ) ; 
 - if ( globalSound ! = null ) { 
 - if ( globalSound . equals ( " none " ) ) { 
 - return null ; 
 - } else { 
 - return Uri . parse ( globalSound ) ; 
 - } 
 + if ( globalSound ! = null & & ! globalSound . equals ( " none " ) ) { 
 + return Uri . parse ( globalSound ) ; 
 } 
 
 return getNotificationSound ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 index 2c3200f . . 0a925c4 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidNotifications . java 
 @ @ - 91 , 7 + 91 , 7 @ @ public class AndroidNotifications implements NotificationProvider { 
 / / . setBackground ( ( ( BitmapDrawable ) AppContext . getContext ( ) . getResources ( ) . getDrawable ( R . drawable . wear _ bg ) ) . getBitmap ( ) ) 
 / / . setHintHideIcon ( true ) ) ; 
 
 - final Notification topNotification = topNotifications . get ( 0 ) ; 
 + final Notification topNotification = topNotifications . get ( topNotifications . size ( ) - 1 ) ; 
 
 / / if ( ! silentUpdate ) { 
 / / builder . setTicker ( getNotificationTextFull ( topNotification , messenger ) ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 5c374a8 . . 3e5a5b8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 220 , 7 + 220 , 6 @ @ public class ActorSDK { 
 . setDownsampleEnabled ( true ) 
 . build ( ) ; 
 Fresco . initialize ( application , config ) ; 
 - AndroidContext . setContext ( application ) ; 
 / / TODO : Replace 
 new SmileProcessor ( application ) . loadEmoji ( ) ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 55aba69 . . 4e9b398 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 3 , 6 + 3 , 8 @ @ package im . actor . sdk ; 
 import android . app . ActivityManager ; 
 import android . app . Application ; 
 
 + import im . actor . runtime . android . AndroidContext ; 
 + 
 / * * 
 * Implementation of Application object that handles everything required for creating and 
 * managing Actor SDK 
 @ @ - 24 , 6 + 26 , 7 @ @ public class ActorSDKApplication extends Application { 
 
 / / Protection on double start 
 if ( ! myProcessName . endsWith ( " : actor _ push " ) ) { 
 + AndroidContext . setContext ( this ) ; 
 onConfigureActorSDK ( ) ; 
 ActorSDK . sharedActor ( ) . createActor ( this ) ; 
 }
