BLEU SCORE: 0.21200626759025185

TEST MSG: fix ( android ) : Fixing missing search on invite to group
GENERATED MSG: feat ( android ) : add / remove reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java < nl > index cad1ea9 . . e036571 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java < nl > @ @ - 7 , 18 + 7 , 12 @ @ import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > < nl > public class AddMemberActivity extends BaseFragmentActivity { < nl > < nl > - private int gid ; < nl > - < nl > @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > super . onCreate ( savedInstanceState ) ; < nl > < nl > - getSupportActionBar ( ) . setTitle ( R . string . group _ add _ title ) ; < nl > - < nl > - gid = getIntent ( ) . getIntExtra ( " GROUP _ ID " , 0 ) ; < nl > - < nl > if ( savedInstanceState = = null ) { < nl > - showFragment ( AddMemberFragment . create ( gid ) , false , false ) ; < nl > + showFragment ( AddMemberFragment . create ( getIntent ( ) . getIntExtra ( " GROUP _ ID " , 0 ) ) , false , false ) ; < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java < nl > index 850264d . . 232b138 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java < nl > @ @ - 22 , 10 + 22 , 6 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > < nl > public class AddMemberFragment extends BaseContactFragment { < nl > < nl > - public AddMemberFragment ( ) { < nl > - super ( true , true , false ) ; < nl > - } < nl > - < nl > public static AddMemberFragment create ( int gid ) { < nl > AddMemberFragment res = new AddMemberFragment ( ) ; < nl > Bundle arguments = new Bundle ( ) ; < nl > @ @ - 34 , 6 + 30 , 13 @ @ public class AddMemberFragment extends BaseContactFragment { < nl > return res ; < nl > } < nl > < nl > + public AddMemberFragment ( ) { < nl > + super ( true , true , false ) ; < nl > + setRootFragment ( true ) ; < nl > + setTitle ( R . string . group _ add _ title ) ; < nl > + setHomeAsUp ( true ) ; < nl > + } < nl > + < nl > @ Override < nl > protected void addFootersAndHeaders ( ) { < nl > addFooterOrHeaderAction ( ActorSDK . sharedActor ( ) . style . getActionAddContactColor ( ) , R . drawable . ic _ person _ add _ white _ 24dp , R . string . contacts _ invite _ via _ link , false , new Runnable ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > index 692b43e . . 40e59cf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { < nl > < nl > private static final String TAG = " LinearLayoutManager " ; < nl > < nl > - private static final boolean DEBUG = true ; < nl > + private static final boolean DEBUG = false ; < nl > < nl > public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 7c42967 . . f8ee6ef 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > new file mode 100644 < nl > index 0000000 . . abfa92c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . graphics . Color ; < nl > + import android . graphics . Typeface ; < nl > + import android . text . TextPaint ; < nl > + import android . view . View ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > + < nl > + public class ReactionSpan extends BaseUrlSpan { < nl > + < nl > + boolean hasMyReaction ; < nl > + Peer peer ; < nl > + long rid ; < nl > + String code ; < nl > + < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + super ( code , false ) ; < nl > + this . code = code ; < nl > + this . hasMyReaction = hasMyReaction ; < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + } < nl > + < nl > + @ Override < nl > + public void updateDrawState ( TextPaint ds ) { < nl > + super . updateDrawState ( ds ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setUnderlineText ( false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( View widget ) { < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1a7465a . . 1c0ce2f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { < nl > timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > } < nl > time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > - < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java 
 index cad1ea9 . . e036571 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberActivity . java 
 @ @ - 7 , 18 + 7 , 12 @ @ import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 
 public class AddMemberActivity extends BaseFragmentActivity { 
 
 - private int gid ; 
 - 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 super . onCreate ( savedInstanceState ) ; 
 
 - getSupportActionBar ( ) . setTitle ( R . string . group _ add _ title ) ; 
 - 
 - gid = getIntent ( ) . getIntExtra ( " GROUP _ ID " , 0 ) ; 
 - 
 if ( savedInstanceState = = null ) { 
 - showFragment ( AddMemberFragment . create ( gid ) , false , false ) ; 
 + showFragment ( AddMemberFragment . create ( getIntent ( ) . getIntExtra ( " GROUP _ ID " , 0 ) ) , false , false ) ; 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java 
 index 850264d . . 232b138 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / AddMemberFragment . java 
 @ @ - 22 , 10 + 22 , 6 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 
 public class AddMemberFragment extends BaseContactFragment { 
 
 - public AddMemberFragment ( ) { 
 - super ( true , true , false ) ; 
 - } 
 - 
 public static AddMemberFragment create ( int gid ) { 
 AddMemberFragment res = new AddMemberFragment ( ) ; 
 Bundle arguments = new Bundle ( ) ; 
 @ @ - 34 , 6 + 30 , 13 @ @ public class AddMemberFragment extends BaseContactFragment { 
 return res ; 
 } 
 
 + public AddMemberFragment ( ) { 
 + super ( true , true , false ) ; 
 + setRootFragment ( true ) ; 
 + setTitle ( R . string . group _ add _ title ) ; 
 + setHomeAsUp ( true ) ; 
 + } 
 + 
 @ Override 
 protected void addFootersAndHeaders ( ) { 
 addFooterOrHeaderAction ( ActorSDK . sharedActor ( ) . style . getActionAddContactColor ( ) , R . drawable . ic _ person _ add _ white _ 24dp , R . string . contacts _ invite _ via _ link , false , new Runnable ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 index 692b43e . . 40e59cf 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { 
 
 private static final String TAG = " LinearLayoutManager " ; 
 
 - private static final boolean DEBUG = true ; 
 + private static final boolean DEBUG = false ; 
 
 public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 7c42967 . . f8ee6ef 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 new file mode 100644 
 index 0000000 . . abfa92c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . graphics . Color ; 
 + import android . graphics . Typeface ; 
 + import android . text . TextPaint ; 
 + import android . view . View ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 + 
 + public class ReactionSpan extends BaseUrlSpan { 
 + 
 + boolean hasMyReaction ; 
 + Peer peer ; 
 + long rid ; 
 + String code ; 
 + 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + super ( code , false ) ; 
 + this . code = code ; 
 + this . hasMyReaction = hasMyReaction ; 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + } 
 + 
 + @ Override 
 + public void updateDrawState ( TextPaint ds ) { 
 + super . updateDrawState ( ds ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setUnderlineText ( false ) ; 
 + } 
 + 
 + @ Override 
 + public void onClick ( View widget ) { 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1a7465a . . 1c0ce2f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { 
 timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 } 
 time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 - 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod {
