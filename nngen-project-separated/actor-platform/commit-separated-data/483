BLEU SCORE: 0.1860045401920258

TEST MSG: feat ( ios + core ) : Moving to Java8
GENERATED MSG: feat ( core ) : Ability to disable phone book import

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile < nl > index 8af1f92 . . 7241304 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile < nl > @ @ - 28 , 7 + 28 , 7 @ @ space : = $ { null } $ { null } < nl > J2OBJC _ DISTRIBUTION = $ ( PODS _ ROOT ) / J2ObjC - Framework / Distributive < nl > J2OBJC = $ ( J2OBJC _ DISTRIBUTION ) / j2objc < nl > J2OBJCC = $ ( J2OBJC _ DISTRIBUTION ) / j2objcc < nl > - J2OBJC _ ARGS = - use - arc - - generate - deprecated - - doc - comments - g - - swift - friendly - source 7 - - nullability - - strip - reflection < nl > + J2OBJC _ ARGS = - use - arc - - generate - deprecated - - doc - comments - g - - swift - friendly - source 8 - - nullability - - strip - reflection < nl > J2OBJCC _ ARGS = - ObjC - fobjc - arc - fembed - bitcode - marker - Wobjc - designated - initializers - Wno - nullability - completeness - g $ ( ARCHFLAGS ) $ ( SDKFLAGS ) - I $ ( J2OBJC _ DISTRIBUTION ) / include < nl > < nl > LIBRARY _ NAME = libactor . so < nl > diff - - git a / actor - sdk / sdk - core - ios / Podfile b / actor - sdk / sdk - core - ios / Podfile < nl > index 20769e5 . . ee94bb2 100644 < nl > - - - a / actor - sdk / sdk - core - ios / Podfile < nl > + + + b / actor - sdk / sdk - core - ios / Podfile < nl > @ @ - 2 , 15 + 2 , 13 @ @ platform : ios , ' 8 . 0 ' < nl > use _ frameworks ! < nl > < nl > workspace ' ActorSDK ' < nl > - xcodeproj ' ActorSDK . xcodeproj ' < nl > - xcodeproj ' ActorApp . xcodeproj ' < nl > + project ' ActorSDK . xcodeproj ' < nl > + project ' ActorApp . xcodeproj ' < nl > < nl > inhibit _ all _ warnings ! < nl > < nl > - # link _ with ' ActorApp ' < nl > - < nl > target ' ActorApp ' do < nl > - xcodeproj ' ActorApp . xcodeproj ' < nl > + project ' ActorApp . xcodeproj ' < nl > < nl > # Core Tools < nl > pod ' RegexKitLite ' < nl > @ @ - 38 , 7 + 36 , 7 @ @ target ' ActorApp ' do < nl > end < nl > < nl > target ' ActorSDK ' do < nl > - xcodeproj ' ActorSDK . xcodeproj ' < nl > + project ' ActorSDK . xcodeproj ' < nl > < nl > # J2Objc Runtime < nl > pod ' J2ObjC - Framework ' < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java < nl > index ddab87c . . 67c7b3f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java < nl > @ @ - 285 , 18 + 285 , 12 @ @ public class PresenceActor extends ModuleActor implements BusSubscriber { < nl > < nl > if ( requests . size ( ) > 0 ) { < nl > isRequesting = true ; < nl > - PromisesArray . ofPromises ( requests ) . zip ( ) . then ( new Consumer < List < ResponseVoid > > ( ) { < nl > - @ Override < nl > - public void apply ( List < ResponseVoid > responseVoids ) { < nl > - isRequesting = false ; < nl > - onCheckQueue ( ) ; < nl > - } < nl > - } ) . failure ( new Consumer < Exception > ( ) { < nl > - @ Override < nl > - public void apply ( Exception e ) { < nl > - isRequesting = false ; < nl > - onCheckQueue ( ) ; < nl > - } < nl > + PromisesArray . ofPromises ( requests ) . zip ( ) . then ( responseVoids - > { < nl > + isRequesting = false ; < nl > + onCheckQueue ( ) ; < nl > + } ) . failure ( e - > { < nl > + isRequesting = false ; < nl > + onCheckQueue ( ) ; < nl > } ) . done ( self ( ) ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java < nl > index d2f353a . . 8beb6d1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java < nl > @ @ - 19 , 12 + 19 , 7 @ @ public class PresenceModule extends AbsModule { < nl > super ( modules ) ; < nl > < nl > / / Creating own presence actor < nl > - system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public OwnPresenceActor create ( ) { < nl > - return new OwnPresenceActor ( modules ) ; < nl > - } < nl > - } ) , " actor / presence / own " ) ; < nl > + system ( ) . actorOf ( " actor / presence / own " , ( ) - > new OwnPresenceActor ( modules ) ) ; < nl > < nl > / / Creating users and groups presence actor < nl > PresenceActor . create ( modules ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java < nl > index 1a97ce2 . . 00d2547 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java < nl > @ @ - 21 , 12 + 21 , 7 @ @ import im . actor . runtime . annotations . Verified ; < nl > public class TypingActor extends ModuleActor { < nl > < nl > public static ActorRef get ( final ModuleContext messenger ) { < nl > - return ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > - @ Override < nl > - public TypingActor create ( ) { < nl > - return new TypingActor ( messenger ) ; < nl > - } < nl > - } ) , " actor / typing " ) ; < nl > + return ActorSystem . system ( ) . actorOf ( " actor / typing " , ( ) - > new TypingActor ( messenger ) ) ; < nl > } < nl > < nl > private static final int TYPING _ TEXT _ TIMEOUT = 7000 ; < nl > @ @ - 118 , 7 + 113 , 7 @ @ public class TypingActor extends ModuleActor { < nl > } < nl > < nl > if ( ! groupCancellables . containsKey ( gid ) ) { < nl > - groupCancellables . put ( gid , new HashMap < Integer , Cancellable > ( ) ) ; < nl > + groupCancellables . put ( gid , new HashMap < > ( ) ) ; < nl > } < nl > < nl > HashMap < Integer , Cancellable > cancellables = groupCancellables . get ( gid ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java < nl > index f79e7dd . . dabfdde 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java < nl > @ @ - 19 , 8 + 19 , 8 @ @ public class TypingModule extends AbsModule { < nl > < nl > private ActorRef ownTypingActor ; < nl > private ActorRef typingActor ; < nl > - private HashMap < Integer , UserTypingVM > uids = new HashMap < Integer , UserTypingVM > ( ) ; < nl > - private HashMap < Integer , GroupTypingVM > groups = new HashMap < Integer , GroupTypingVM > ( ) ; < nl > + private HashMap < Integer , UserTypingVM > uids = new HashMap < > ( ) ; < nl > + private HashMap < Integer , GroupTypingVM > groups = new HashMap < > ( ) ; < nl > < nl > public TypingModule ( final ModuleContext context ) { < nl > super ( context ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 01a0edb . . 63f9dd8 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 72 , 6 + 72 , 9 @ @ public class ActorSDK { < nl > / / / Push token registration id . Required for sending push tokens < nl > public var apiPushId : Int ? = nil < nl > < nl > + / / / Enable phone book import < nl > + public var enablePhoneBookImport = true < nl > + < nl > / / / Invitation URL for apps < nl > public var inviteUrl : String = " https : / / actor . im / dl " < nl > < nl > @ @ - 198 , 6 + 201 , 9 @ @ public class ActorSDK { < nl > builder . setCustomAppName ( AALocalized ( appNameInLocStrings ) ) < nl > } < nl > < nl > + / / Config < nl > + builder . setPhoneBookImportEnabled ( jboolean ( enablePhoneBookImport ) ) < nl > + < nl > / / Creating messenger < nl > messenger = ACCocoaMessenger ( configuration : builder . build ( ) ) < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > index bf0da53 . . 1d73500 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > @ @ - 43 , 6 + 43 , 8 @ @ public class Configuration { < nl > < nl > private String customAppName ; < nl > < nl > + private boolean enablePhoneBookImport ; < nl > + < nl > Configuration ( ConnectionEndpoint [ ] endpoints , < nl > PhoneBookProvider phoneBookProvider , < nl > NotificationProvider notificationProvider , < nl > @ @ - 59 , 7 + 61 , 8 @ @ public class Configuration { < nl > String timeZone , < nl > String [ ] preferredLanguages , < nl > String customAppName , < nl > - TrustedKey [ ] trustedKeys ) { < nl > + TrustedKey [ ] trustedKeys , < nl > + boolean enablePhoneBookImport ) { < nl > this . endpoints = endpoints ; < nl > this . phoneBookProvider = phoneBookProvider ; < nl > this . enableContactsLogging = enableContactsLogging ; < nl > @ @ - 77 , 6 + 80 , 16 @ @ public class Configuration { < nl > this . preferredLanguages = preferredLanguages ; < nl > this . customAppName = customAppName ; < nl > this . trustedKeys = trustedKeys ; < nl > + this . enablePhoneBookImport = enablePhoneBookImport ; < nl > + } < nl > + < nl > + / * * < nl > + * Getting if app automatically imports phone book to server < nl > + * < nl > + * @ return if phone book enabled < nl > + * / < nl > + public boolean isEnablePhoneBookImport ( ) { < nl > + return enablePhoneBookImport ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > index a8a872d . . 8d1c65e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > @ @ - 47 , 6 + 47 , 21 @ @ public class ConfigurationBuilder { < nl > < nl > private String customAppName ; < nl > < nl > + private boolean isPhoneBookImportEnabled = true ; < nl > + < nl > + / * * < nl > + * Setting if application need to upload phone book to server < nl > + * < nl > + * @ param isPhoneBookImportEnabled enabled flag < nl > + * @ return this < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " setPhoneBookImportEnabled : " ) < nl > + public ConfigurationBuilder setPhoneBookImportEnabled ( boolean isPhoneBookImportEnabled ) { < nl > + this . isPhoneBookImportEnabled = isPhoneBookImportEnabled ; < nl > + return this ; < nl > + } < nl > + < nl > / * * < nl > * Adding Trusted key for protocol encryption securing < nl > * < nl > @ @ - 341 , 6 + 356 , 7 @ @ public class ConfigurationBuilder { < nl > extensions . toArray ( new ConfigurationExtension [ extensions . size ( ) ] ) , < nl > timeZone , preferredLanguages . toArray ( new String [ preferredLanguages . size ( ) ] ) , < nl > customAppName , < nl > - trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) ) ; < nl > + trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) , < nl > + isPhoneBookImportEnabled ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 1a36d66 . . a44d871 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 154 , 9 + 154 , 9 @ @ public class Messenger { < nl > * @ return Command for execution < nl > * / < nl > @ NotNull < nl > - @ ObjectiveCName ( " requestStartAuthCommandWithUserName : " ) < nl > + @ ObjectiveCName ( " requestStartAnonymousAuthWithUserName : " ) < nl > public Command < AuthState > requestStartAnonymousAuth ( String userName ) { < nl > - return modules . getAuthModule ( ) . requestStartAnonumousAuth ( userName ) ; < nl > + return modules . getAuthModule ( ) . requestStartAnonymousAuth ( userName ) ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 482e019 . . 5776d0f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 116 , 7 + 116 , 7 @ @ public class Authentication { < nl > } < nl > } < nl > < nl > - public Command < AuthState > requestStartAnonumousAuth ( final String userName ) { < nl > + public Command < AuthState > requestStartAnonymousAuth ( final String userName ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > index 2f23fc3 . . 2910480 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > @ @ - 65 , 10 + 65 , 16 @ @ public class BookImportActor extends ModuleActor { < nl > e . getLocalizedMessage ( ) ; < nl > } < nl > } < nl > + < nl > self ( ) . send ( new PerformSync ( ) ) ; < nl > } < nl > < nl > private void performSync ( ) { < nl > + / / Ignoring syncing if not enabled < nl > + if ( ! config ( ) . isEnablePhoneBookImport ( ) ) { < nl > + return ; < nl > + } < nl > + < nl > if ( ENABLE _ LOG ) { < nl > Log . d ( TAG , " Checking sync . . . " ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile 
 index 8af1f92 . . 7241304 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Makefile 
 @ @ - 28 , 7 + 28 , 7 @ @ space : = $ { null } $ { null } 
 J2OBJC _ DISTRIBUTION = $ ( PODS _ ROOT ) / J2ObjC - Framework / Distributive 
 J2OBJC = $ ( J2OBJC _ DISTRIBUTION ) / j2objc 
 J2OBJCC = $ ( J2OBJC _ DISTRIBUTION ) / j2objcc 
 - J2OBJC _ ARGS = - use - arc - - generate - deprecated - - doc - comments - g - - swift - friendly - source 7 - - nullability - - strip - reflection 
 + J2OBJC _ ARGS = - use - arc - - generate - deprecated - - doc - comments - g - - swift - friendly - source 8 - - nullability - - strip - reflection 
 J2OBJCC _ ARGS = - ObjC - fobjc - arc - fembed - bitcode - marker - Wobjc - designated - initializers - Wno - nullability - completeness - g $ ( ARCHFLAGS ) $ ( SDKFLAGS ) - I $ ( J2OBJC _ DISTRIBUTION ) / include 
 
 LIBRARY _ NAME = libactor . so 
 diff - - git a / actor - sdk / sdk - core - ios / Podfile b / actor - sdk / sdk - core - ios / Podfile 
 index 20769e5 . . ee94bb2 100644 
 - - - a / actor - sdk / sdk - core - ios / Podfile 
 + + + b / actor - sdk / sdk - core - ios / Podfile 
 @ @ - 2 , 15 + 2 , 13 @ @ platform : ios , ' 8 . 0 ' 
 use _ frameworks ! 
 
 workspace ' ActorSDK ' 
 - xcodeproj ' ActorSDK . xcodeproj ' 
 - xcodeproj ' ActorApp . xcodeproj ' 
 + project ' ActorSDK . xcodeproj ' 
 + project ' ActorApp . xcodeproj ' 
 
 inhibit _ all _ warnings ! 
 
 - # link _ with ' ActorApp ' 
 - 
 target ' ActorApp ' do 
 - xcodeproj ' ActorApp . xcodeproj ' 
 + project ' ActorApp . xcodeproj ' 
 
 # Core Tools 
 pod ' RegexKitLite ' 
 @ @ - 38 , 7 + 36 , 7 @ @ target ' ActorApp ' do 
 end 
 
 target ' ActorSDK ' do 
 - xcodeproj ' ActorSDK . xcodeproj ' 
 + project ' ActorSDK . xcodeproj ' 
 
 # J2Objc Runtime 
 pod ' J2ObjC - Framework ' 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java 
 index ddab87c . . 67c7b3f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceActor . java 
 @ @ - 285 , 18 + 285 , 12 @ @ public class PresenceActor extends ModuleActor implements BusSubscriber { 
 
 if ( requests . size ( ) > 0 ) { 
 isRequesting = true ; 
 - PromisesArray . ofPromises ( requests ) . zip ( ) . then ( new Consumer < List < ResponseVoid > > ( ) { 
 - @ Override 
 - public void apply ( List < ResponseVoid > responseVoids ) { 
 - isRequesting = false ; 
 - onCheckQueue ( ) ; 
 - } 
 - } ) . failure ( new Consumer < Exception > ( ) { 
 - @ Override 
 - public void apply ( Exception e ) { 
 - isRequesting = false ; 
 - onCheckQueue ( ) ; 
 - } 
 + PromisesArray . ofPromises ( requests ) . zip ( ) . then ( responseVoids - > { 
 + isRequesting = false ; 
 + onCheckQueue ( ) ; 
 + } ) . failure ( e - > { 
 + isRequesting = false ; 
 + onCheckQueue ( ) ; 
 } ) . done ( self ( ) ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java 
 index d2f353a . . 8beb6d1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / presence / PresenceModule . java 
 @ @ - 19 , 12 + 19 , 7 @ @ public class PresenceModule extends AbsModule { 
 super ( modules ) ; 
 
 / / Creating own presence actor 
 - system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public OwnPresenceActor create ( ) { 
 - return new OwnPresenceActor ( modules ) ; 
 - } 
 - } ) , " actor / presence / own " ) ; 
 + system ( ) . actorOf ( " actor / presence / own " , ( ) - > new OwnPresenceActor ( modules ) ) ; 
 
 / / Creating users and groups presence actor 
 PresenceActor . create ( modules ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java 
 index 1a97ce2 . . 00d2547 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingActor . java 
 @ @ - 21 , 12 + 21 , 7 @ @ import im . actor . runtime . annotations . Verified ; 
 public class TypingActor extends ModuleActor { 
 
 public static ActorRef get ( final ModuleContext messenger ) { 
 - return ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 - @ Override 
 - public TypingActor create ( ) { 
 - return new TypingActor ( messenger ) ; 
 - } 
 - } ) , " actor / typing " ) ; 
 + return ActorSystem . system ( ) . actorOf ( " actor / typing " , ( ) - > new TypingActor ( messenger ) ) ; 
 } 
 
 private static final int TYPING _ TEXT _ TIMEOUT = 7000 ; 
 @ @ - 118 , 7 + 113 , 7 @ @ public class TypingActor extends ModuleActor { 
 } 
 
 if ( ! groupCancellables . containsKey ( gid ) ) { 
 - groupCancellables . put ( gid , new HashMap < Integer , Cancellable > ( ) ) ; 
 + groupCancellables . put ( gid , new HashMap < > ( ) ) ; 
 } 
 
 HashMap < Integer , Cancellable > cancellables = groupCancellables . get ( gid ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java 
 index f79e7dd . . dabfdde 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / typing / TypingModule . java 
 @ @ - 19 , 8 + 19 , 8 @ @ public class TypingModule extends AbsModule { 
 
 private ActorRef ownTypingActor ; 
 private ActorRef typingActor ; 
 - private HashMap < Integer , UserTypingVM > uids = new HashMap < Integer , UserTypingVM > ( ) ; 
 - private HashMap < Integer , GroupTypingVM > groups = new HashMap < Integer , GroupTypingVM > ( ) ; 
 + private HashMap < Integer , UserTypingVM > uids = new HashMap < > ( ) ; 
 + private HashMap < Integer , GroupTypingVM > groups = new HashMap < > ( ) ; 
 
 public TypingModule ( final ModuleContext context ) { 
 super ( context ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 01a0edb . . 63f9dd8 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 72 , 6 + 72 , 9 @ @ public class ActorSDK { 
 / / / Push token registration id . Required for sending push tokens 
 public var apiPushId : Int ? = nil 
 
 + / / / Enable phone book import 
 + public var enablePhoneBookImport = true 
 + 
 / / / Invitation URL for apps 
 public var inviteUrl : String = " https : / / actor . im / dl " 
 
 @ @ - 198 , 6 + 201 , 9 @ @ public class ActorSDK { 
 builder . setCustomAppName ( AALocalized ( appNameInLocStrings ) ) 
 } 
 
 + / / Config 
 + builder . setPhoneBookImportEnabled ( jboolean ( enablePhoneBookImport ) ) 
 + 
 / / Creating messenger 
 messenger = ACCocoaMessenger ( configuration : builder . build ( ) ) 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 index bf0da53 . . 1d73500 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 @ @ - 43 , 6 + 43 , 8 @ @ public class Configuration { 
 
 private String customAppName ; 
 
 + private boolean enablePhoneBookImport ; 
 + 
 Configuration ( ConnectionEndpoint [ ] endpoints , 
 PhoneBookProvider phoneBookProvider , 
 NotificationProvider notificationProvider , 
 @ @ - 59 , 7 + 61 , 8 @ @ public class Configuration { 
 String timeZone , 
 String [ ] preferredLanguages , 
 String customAppName , 
 - TrustedKey [ ] trustedKeys ) { 
 + TrustedKey [ ] trustedKeys , 
 + boolean enablePhoneBookImport ) { 
 this . endpoints = endpoints ; 
 this . phoneBookProvider = phoneBookProvider ; 
 this . enableContactsLogging = enableContactsLogging ; 
 @ @ - 77 , 6 + 80 , 16 @ @ public class Configuration { 
 this . preferredLanguages = preferredLanguages ; 
 this . customAppName = customAppName ; 
 this . trustedKeys = trustedKeys ; 
 + this . enablePhoneBookImport = enablePhoneBookImport ; 
 + } 
 + 
 + / * * 
 + * Getting if app automatically imports phone book to server 
 + * 
 + * @ return if phone book enabled 
 + * / 
 + public boolean isEnablePhoneBookImport ( ) { 
 + return enablePhoneBookImport ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 index a8a872d . . 8d1c65e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 @ @ - 47 , 6 + 47 , 21 @ @ public class ConfigurationBuilder { 
 
 private String customAppName ; 
 
 + private boolean isPhoneBookImportEnabled = true ; 
 + 
 + / * * 
 + * Setting if application need to upload phone book to server 
 + * 
 + * @ param isPhoneBookImportEnabled enabled flag 
 + * @ return this 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " setPhoneBookImportEnabled : " ) 
 + public ConfigurationBuilder setPhoneBookImportEnabled ( boolean isPhoneBookImportEnabled ) { 
 + this . isPhoneBookImportEnabled = isPhoneBookImportEnabled ; 
 + return this ; 
 + } 
 + 
 / * * 
 * Adding Trusted key for protocol encryption securing 
 * 
 @ @ - 341 , 6 + 356 , 7 @ @ public class ConfigurationBuilder { 
 extensions . toArray ( new ConfigurationExtension [ extensions . size ( ) ] ) , 
 timeZone , preferredLanguages . toArray ( new String [ preferredLanguages . size ( ) ] ) , 
 customAppName , 
 - trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) ) ; 
 + trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) , 
 + isPhoneBookImportEnabled ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 1a36d66 . . a44d871 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 154 , 9 + 154 , 9 @ @ public class Messenger { 
 * @ return Command for execution 
 * / 
 @ NotNull 
 - @ ObjectiveCName ( " requestStartAuthCommandWithUserName : " ) 
 + @ ObjectiveCName ( " requestStartAnonymousAuthWithUserName : " ) 
 public Command < AuthState > requestStartAnonymousAuth ( String userName ) { 
 - return modules . getAuthModule ( ) . requestStartAnonumousAuth ( userName ) ; 
 + return modules . getAuthModule ( ) . requestStartAnonymousAuth ( userName ) ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 482e019 . . 5776d0f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 116 , 7 + 116 , 7 @ @ public class Authentication { 
 } 
 } 
 
 - public Command < AuthState > requestStartAnonumousAuth ( final String userName ) { 
 + public Command < AuthState > requestStartAnonymousAuth ( final String userName ) { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 index 2f23fc3 . . 2910480 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 @ @ - 65 , 10 + 65 , 16 @ @ public class BookImportActor extends ModuleActor { 
 e . getLocalizedMessage ( ) ; 
 } 
 } 
 + 
 self ( ) . send ( new PerformSync ( ) ) ; 
 } 
 
 private void performSync ( ) { 
 + / / Ignoring syncing if not enabled 
 + if ( ! config ( ) . isEnablePhoneBookImport ( ) ) { 
 + return ; 
 + } 
 + 
 if ( ENABLE _ LOG ) { 
 Log . d ( TAG , " Checking sync . . . " ) ; 
 }
