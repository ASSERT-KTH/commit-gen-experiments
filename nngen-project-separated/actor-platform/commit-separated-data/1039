BLEU SCORE: 0.44632361378533286

TEST MSG: fix ( core ) : CallActor path with callId
GENERATED MSG: fix ( core ) : max calls count

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > index 42882c5 . . f78c0f4 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > @ @ - 64 , 7 + 64 , 7 @ @ public class CallsModule extends AbsModule { < nl > public CallActor create ( ) { < nl > return new CallActor ( response . getCallId ( ) , callCallback , context ( ) ) ; < nl > } < nl > - } ) , " actor / call " ) ) ; < nl > + } ) , " actor / call _ " + response . getCallId ( ) ) ) ; < nl > < nl > < nl > } < nl > @ @ - 118 , 7 + 118 , 7 @ @ public class CallsModule extends AbsModule { < nl > public CallActor create ( ) { < nl > return new CallActor ( callId , context ( ) ) ; < nl > } < nl > - } ) , " actor / call " ) ) ; < nl > + } ) , " actor / call _ " + callId ) ) ; < nl > if ( ! MULTIPLE _ CALLS _ ENABLED & calls . keySet ( ) . size ( ) > MAX _ CALLS _ COUNT ) { < nl > calls . get ( callId ) . send ( new CallActor . EndCall ( ) ) ; < nl > } else {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > index aed8460 . . 6e8c907 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java < nl > @ @ - 26 , 6 + 26 , 9 @ @ import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . Props ; < nl > < nl > public class CallsModule extends AbsModule { < nl > + < nl > + public static final int MAX _ CALLS _ COUNT = 1 ; < nl > + < nl > public CallsModule ( ModuleContext context ) { < nl > super ( context ) ; < nl > } < nl > @ @ - 105 , 7 + 108 , 7 @ @ public class CallsModule extends AbsModule { < nl > return new CallActor ( callId , context ( ) ) ; < nl > } < nl > } ) , " actor / call " ) ) ; < nl > - if ( ! MULTIPLE _ CALLS _ ENABLED & calls . keySet ( ) . size ( ) > 0 ) { < nl > + if ( ! MULTIPLE _ CALLS _ ENABLED & calls . keySet ( ) . size ( ) > MAX _ CALLS _ COUNT ) { < nl > calls . get ( callId ) . send ( new CallActor . EndCall ( ) ) ; < nl > } else { < nl > context ( ) . getEvents ( ) . post ( new IncomingCall ( callId , uid ) ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 index 42882c5 . . f78c0f4 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class CallsModule extends AbsModule { 
 public CallActor create ( ) { 
 return new CallActor ( response . getCallId ( ) , callCallback , context ( ) ) ; 
 } 
 - } ) , " actor / call " ) ) ; 
 + } ) , " actor / call _ " + response . getCallId ( ) ) ) ; 
 
 
 } 
 @ @ - 118 , 7 + 118 , 7 @ @ public class CallsModule extends AbsModule { 
 public CallActor create ( ) { 
 return new CallActor ( callId , context ( ) ) ; 
 } 
 - } ) , " actor / call " ) ) ; 
 + } ) , " actor / call _ " + callId ) ) ; 
 if ( ! MULTIPLE _ CALLS _ ENABLED & calls . keySet ( ) . size ( ) > MAX _ CALLS _ COUNT ) { 
 calls . get ( callId ) . send ( new CallActor . EndCall ( ) ) ; 
 } else {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 index aed8460 . . 6e8c907 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / CallsModule . java 
 @ @ - 26 , 6 + 26 , 9 @ @ import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . Props ; 
 
 public class CallsModule extends AbsModule { 
 + 
 + public static final int MAX _ CALLS _ COUNT = 1 ; 
 + 
 public CallsModule ( ModuleContext context ) { 
 super ( context ) ; 
 } 
 @ @ - 105 , 7 + 108 , 7 @ @ public class CallsModule extends AbsModule { 
 return new CallActor ( callId , context ( ) ) ; 
 } 
 } ) , " actor / call " ) ) ; 
 - if ( ! MULTIPLE _ CALLS _ ENABLED & calls . keySet ( ) . size ( ) > 0 ) { 
 + if ( ! MULTIPLE _ CALLS _ ENABLED & calls . keySet ( ) . size ( ) > MAX _ CALLS _ COUNT ) { 
 calls . get ( callId ) . send ( new CallActor . EndCall ( ) ) ; 
 } else { 
 context ( ) . getEvents ( ) . post ( new IncomingCall ( callId , uid ) ) ;
