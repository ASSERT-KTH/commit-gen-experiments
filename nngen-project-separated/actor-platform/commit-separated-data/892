BLEU SCORE: 0.016074772865287294

TEST MSG: Fixing missed close button for photo viewer
GENERATED MSG: fix + chore ( iOS ) : save background and some chore

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift < nl > index a9ead63 . . fa12f51 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift < nl > @ @ - 6 , 7 + 6 , 7 @ @ import Foundation < nl > < nl > let frameworkBundle = NSBundle ( identifier : " im . actor . ActorSDK " ) ! < nl > < nl > - extension NSBundle { < nl > + public extension NSBundle { < nl > static var framework : NSBundle { < nl > get { < nl > return frameworkBundle < nl > @ @ - 14 , 7 + 14 , 7 @ @ extension NSBundle { < nl > } < nl > } < nl > < nl > - extension UIImage { < nl > + public extension UIImage { < nl > class func bundled ( named : String ) - > UIImage ? { < nl > < nl > if let appImage = UIImage ( named : named ) { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m < nl > index a56133b . . d6594d7 100755 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m < nl > @ @ - 16 , 6 + 16 , 7 @ @ < nl > # import " NYTPhotosOverlayView . h " < nl > # import " NYTPhotoCaptionView . h " < nl > # import " NSBundle + NYTPhotoViewer . h " < nl > + # import < ActorSDK / ActorSDK - Swift . h > < nl > < nl > # ifdef ANIMATED _ GIF _ SUPPORT < nl > # import < FLAnimatedImage / FLAnimatedImage . h > < nl > @ @ - 176 , 7 + 177 , 7 @ @ static const UIEdgeInsets NYTPhotosViewControllerCloseButtonImageInsets = { 3 , 0 , < nl > self . modalPresentationCapturesStatusBarAppearance = YES ; < nl > < nl > _ overlayView = [ [ NYTPhotosOverlayView alloc ] initWithFrame : CGRectZero ] ; < nl > - _ overlayView . leftBarButtonItem = [ [ UIBarButtonItem alloc ] initWithImage : [ UIImage imageNamed : @ " NYTPhotoViewerCloseButtonX " inBundle : [ NSBundle nyt _ photoViewerResourceBundle ] compatibleWithTraitCollection : nil ] landscapeImagePhone : [ UIImage imageNamed : @ " NYTPhotoViewerCloseButtonXLandscape " inBundle : [ NSBundle nyt _ photoViewerResourceBundle ] compatibleWithTraitCollection : nil ] style : UIBarButtonItemStylePlain target : self action : @ selector ( doneButtonTapped : ) ] ; < nl > + _ overlayView . leftBarButtonItem = [ [ UIBarButtonItem alloc ] initWithImage : [ UIImage bundled : @ " NYTPhotoViewerCloseButtonX . png " ] landscapeImagePhone : [ UIImage bundled : @ " NYTPhotoViewerCloseButtonXLandscape . png " ] style : UIBarButtonItemStylePlain target : self action : @ selector ( doneButtonTapped : ) ] ; < nl > _ overlayView . leftBarButtonItem . imageInsets = NYTPhotosViewControllerCloseButtonImageInsets ; < nl > _ overlayView . rightBarButtonItem = [ [ UIBarButtonItem alloc ] initWithBarButtonSystemItem : UIBarButtonSystemItemAction target : self action : @ selector ( actionButtonTapped : ) ] ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift < nl > index b53f1bf . . 7a03ef1 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift < nl > @ @ - 161 , 8 + 161 , 6 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou < nl > } < nl > < nl > func collectionView ( collectionView : UICollectionView , numberOfItemsInSection section : Int ) - > Int { < nl > - print ( " ASSSEEETS = = = \ ( self . assets . count ) " ) < nl > - < nl > return self . assets . count < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift < nl > index 3463b55 . . 9007bfe 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift < nl > @ @ - 85 , 12 + 85 , 13 @ @ public class AAWallpapperPreviewController : AAViewController { < nl > < nl > } else { < nl > dispatchBackground ( { ( ) - > Void in < nl > - let descriptor = " / tmp / " + NSUUID ( ) . UUIDString < nl > - let path = CocoaFiles . pathFromDescriptor ( descriptor ) ; < nl > + < nl > + let descriptor = " / tmp / customWallpaperImage " < nl > + let path = CocoaFiles . pathFromDescriptor ( descriptor ) < nl > < nl > UIImageJPEGRepresentation ( self . selectedImage , 1 . 00 ) ! . writeToFile ( path , atomically : true ) < nl > < nl > - Actor . changeSelectedWallpaper ( " file : \ ( path ) " ) < nl > + Actor . changeSelectedWallpaper ( " file : \ ( descriptor ) " ) < nl > } ) < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 18f6929 . . bf7e724 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 63 , 7 + 63 , 8 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > if bg . startsWith ( " local : " ) { < nl > backgroundView . image = UIImage . bundled ( bg . skip ( 6 ) ) < nl > } else { < nl > - backgroundView . image = UIImage ( contentsOfFile : bg . skip ( 5 ) ) < nl > + let path = CocoaFiles . pathFromDescriptor ( bg . skip ( 5 ) ) < nl > + backgroundView . image = UIImage ( contentsOfFile : path ) < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift < nl > index 1f3bfe8 . . fc43d91 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift < nl > @ @ - 312 , 6 + 312 , 7 @ @ public class AAGroupViewController : AAContentTableController { < nl > self . memberRows . data = v . toArray ( ) . toSwiftArray ( ) < nl > self . memberRows . data . sortInPlace ( self . membersSort ) < nl > self . memberRows . reload ( ) < nl > + < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift < nl > index fdb7280 . . 5d7fb9f 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift < nl > @ @ - 45 , 6 + 45 , 27 @ @ class AASettingsWallpapersController : AATableViewController { < nl > return 1 < nl > } < nl > < nl > + override func tableView ( tableView : UITableView , cellForRowAtIndexPath indexPath : NSIndexPath ) - > UITableViewCell { < nl > + if indexPath . section = = 0 { < nl > + return photosLibrary ( indexPath ) < nl > + } else { < nl > + return wallpapersCell ( indexPath ) < nl > + } < nl > + } < nl > + < nl > + func tableView ( tableView : UITableView , didSelectRowAtIndexPath indexPath : NSIndexPath ) { < nl > + / / < nl > + self . tableView . deselectRowAtIndexPath ( indexPath , animated : true ) < nl > + < nl > + if indexPath . section = = 0 { < nl > + < nl > + self . pickImage ( . PhotoLibrary ) < nl > + < nl > + } < nl > + < nl > + } < nl > + < nl > + < nl > func tableView ( tableView : UITableView , titleForHeaderInSection section : Int ) - > String ? { < nl > return nil < nl > } < nl > @ @ - 61 , 6 + 82 , 9 @ @ class AASettingsWallpapersController : AATableViewController { < nl > } < nl > } < nl > < nl > + / / MARK : - < nl > + / / MARK : Create cells < nl > + < nl > private func photosLibrary ( indexPath : NSIndexPath ) - > AACommonCell { < nl > let cell = AACommonCell ( ) < nl > < nl > @ @ - 81 , 26 + 105 , 8 @ @ class AASettingsWallpapersController : AATableViewController { < nl > return cell < nl > } < nl > < nl > - < nl > - override func tableView ( tableView : UITableView , cellForRowAtIndexPath indexPath : NSIndexPath ) - > UITableViewCell { < nl > - if indexPath . section = = 0 { < nl > - return photosLibrary ( indexPath ) < nl > - } else { < nl > - return wallpapersCell ( indexPath ) < nl > - } < nl > - } < nl > - < nl > - func tableView ( tableView : UITableView , didSelectRowAtIndexPath indexPath : NSIndexPath ) { < nl > - / / < nl > - self . tableView . deselectRowAtIndexPath ( indexPath , animated : true ) < nl > - < nl > - if indexPath . section = = 0 { < nl > - < nl > - self . pickImage ( . PhotoLibrary ) < nl > - < nl > - } < nl > - < nl > - } < nl > + / / MARK : - < nl > + / / MARK : Picker delegate < nl > < nl > override func imagePickerController ( picker : UIImagePickerController , didFinishPickingImage image : UIImage , editingInfo : [ String : AnyObject ] ? ) { < nl > < nl > @ @ - 120 , 7 + 126 , 8 @ @ class AASettingsWallpapersController : AATableViewController { < nl > picker . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > < nl > - / / Image picking < nl > + / / MARK : - < nl > + / / MARK : Image picking < nl > < nl > func pickImage ( source : UIImagePickerControllerSourceType ) { < nl > let pickerController = AAImagePickerController ( )

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift 
 index a9ead63 . . fa12f51 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Bundle . swift 
 @ @ - 6 , 7 + 6 , 7 @ @ import Foundation 
 
 let frameworkBundle = NSBundle ( identifier : " im . actor . ActorSDK " ) ! 
 
 - extension NSBundle { 
 + public extension NSBundle { 
 static var framework : NSBundle { 
 get { 
 return frameworkBundle 
 @ @ - 14 , 7 + 14 , 7 @ @ extension NSBundle { 
 } 
 } 
 
 - extension UIImage { 
 + public extension UIImage { 
 class func bundled ( named : String ) - > UIImage ? { 
 
 if let appImage = UIImage ( named : named ) { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m 
 index a56133b . . d6594d7 100755 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Utils / Extensions / NYTPhotosViewController . m 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 # import " NYTPhotosOverlayView . h " 
 # import " NYTPhotoCaptionView . h " 
 # import " NSBundle + NYTPhotoViewer . h " 
 + # import < ActorSDK / ActorSDK - Swift . h > 
 
 # ifdef ANIMATED _ GIF _ SUPPORT 
 # import < FLAnimatedImage / FLAnimatedImage . h > 
 @ @ - 176 , 7 + 177 , 7 @ @ static const UIEdgeInsets NYTPhotosViewControllerCloseButtonImageInsets = { 3 , 0 , 
 self . modalPresentationCapturesStatusBarAppearance = YES ; 
 
 _ overlayView = [ [ NYTPhotosOverlayView alloc ] initWithFrame : CGRectZero ] ; 
 - _ overlayView . leftBarButtonItem = [ [ UIBarButtonItem alloc ] initWithImage : [ UIImage imageNamed : @ " NYTPhotoViewerCloseButtonX " inBundle : [ NSBundle nyt _ photoViewerResourceBundle ] compatibleWithTraitCollection : nil ] landscapeImagePhone : [ UIImage imageNamed : @ " NYTPhotoViewerCloseButtonXLandscape " inBundle : [ NSBundle nyt _ photoViewerResourceBundle ] compatibleWithTraitCollection : nil ] style : UIBarButtonItemStylePlain target : self action : @ selector ( doneButtonTapped : ) ] ; 
 + _ overlayView . leftBarButtonItem = [ [ UIBarButtonItem alloc ] initWithImage : [ UIImage bundled : @ " NYTPhotoViewerCloseButtonX . png " ] landscapeImagePhone : [ UIImage bundled : @ " NYTPhotoViewerCloseButtonXLandscape . png " ] style : UIBarButtonItemStylePlain target : self action : @ selector ( doneButtonTapped : ) ] ; 
 _ overlayView . leftBarButtonItem . imageInsets = NYTPhotosViewControllerCloseButtonImageInsets ; 
 _ overlayView . rightBarButtonItem = [ [ UIBarButtonItem alloc ] initWithBarButtonSystemItem : UIBarButtonSystemItemAction target : self action : @ selector ( actionButtonTapped : ) ] ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift 
 index b53f1bf . . 7a03ef1 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Views / AAThumbnailView . swift 
 @ @ - 161 , 8 + 161 , 6 @ @ class AAThumbnailView : UIView , UICollectionViewDelegate , UICollectionViewDataSou 
 } 
 
 func collectionView ( collectionView : UICollectionView , numberOfItemsInSection section : Int ) - > Int { 
 - print ( " ASSSEEETS = = = \ ( self . assets . count ) " ) 
 - 
 return self . assets . count 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift 
 index 3463b55 . . 9007bfe 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Previews / AAWallpapperPreviewController . swift 
 @ @ - 85 , 12 + 85 , 13 @ @ public class AAWallpapperPreviewController : AAViewController { 
 
 } else { 
 dispatchBackground ( { ( ) - > Void in 
 - let descriptor = " / tmp / " + NSUUID ( ) . UUIDString 
 - let path = CocoaFiles . pathFromDescriptor ( descriptor ) ; 
 + 
 + let descriptor = " / tmp / customWallpaperImage " 
 + let path = CocoaFiles . pathFromDescriptor ( descriptor ) 
 
 UIImageJPEGRepresentation ( self . selectedImage , 1 . 00 ) ! . writeToFile ( path , atomically : true ) 
 
 - Actor . changeSelectedWallpaper ( " file : \ ( path ) " ) 
 + Actor . changeSelectedWallpaper ( " file : \ ( descriptor ) " ) 
 } ) 
 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 18f6929 . . bf7e724 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 63 , 7 + 63 , 8 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 if bg . startsWith ( " local : " ) { 
 backgroundView . image = UIImage . bundled ( bg . skip ( 6 ) ) 
 } else { 
 - backgroundView . image = UIImage ( contentsOfFile : bg . skip ( 5 ) ) 
 + let path = CocoaFiles . pathFromDescriptor ( bg . skip ( 5 ) ) 
 + backgroundView . image = UIImage ( contentsOfFile : path ) 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift 
 index 1f3bfe8 . . fc43d91 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Group / AAGroupViewController . swift 
 @ @ - 312 , 6 + 312 , 7 @ @ public class AAGroupViewController : AAContentTableController { 
 self . memberRows . data = v . toArray ( ) . toSwiftArray ( ) 
 self . memberRows . data . sortInPlace ( self . membersSort ) 
 self . memberRows . reload ( ) 
 + 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift 
 index fdb7280 . . 5d7fb9f 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Settings / AASettingsWallpapersController . swift 
 @ @ - 45 , 6 + 45 , 27 @ @ class AASettingsWallpapersController : AATableViewController { 
 return 1 
 } 
 
 + override func tableView ( tableView : UITableView , cellForRowAtIndexPath indexPath : NSIndexPath ) - > UITableViewCell { 
 + if indexPath . section = = 0 { 
 + return photosLibrary ( indexPath ) 
 + } else { 
 + return wallpapersCell ( indexPath ) 
 + } 
 + } 
 + 
 + func tableView ( tableView : UITableView , didSelectRowAtIndexPath indexPath : NSIndexPath ) { 
 + / / 
 + self . tableView . deselectRowAtIndexPath ( indexPath , animated : true ) 
 + 
 + if indexPath . section = = 0 { 
 + 
 + self . pickImage ( . PhotoLibrary ) 
 + 
 + } 
 + 
 + } 
 + 
 + 
 func tableView ( tableView : UITableView , titleForHeaderInSection section : Int ) - > String ? { 
 return nil 
 } 
 @ @ - 61 , 6 + 82 , 9 @ @ class AASettingsWallpapersController : AATableViewController { 
 } 
 } 
 
 + / / MARK : - 
 + / / MARK : Create cells 
 + 
 private func photosLibrary ( indexPath : NSIndexPath ) - > AACommonCell { 
 let cell = AACommonCell ( ) 
 
 @ @ - 81 , 26 + 105 , 8 @ @ class AASettingsWallpapersController : AATableViewController { 
 return cell 
 } 
 
 - 
 - override func tableView ( tableView : UITableView , cellForRowAtIndexPath indexPath : NSIndexPath ) - > UITableViewCell { 
 - if indexPath . section = = 0 { 
 - return photosLibrary ( indexPath ) 
 - } else { 
 - return wallpapersCell ( indexPath ) 
 - } 
 - } 
 - 
 - func tableView ( tableView : UITableView , didSelectRowAtIndexPath indexPath : NSIndexPath ) { 
 - / / 
 - self . tableView . deselectRowAtIndexPath ( indexPath , animated : true ) 
 - 
 - if indexPath . section = = 0 { 
 - 
 - self . pickImage ( . PhotoLibrary ) 
 - 
 - } 
 - 
 - } 
 + / / MARK : - 
 + / / MARK : Picker delegate 
 
 override func imagePickerController ( picker : UIImagePickerController , didFinishPickingImage image : UIImage , editingInfo : [ String : AnyObject ] ? ) { 
 
 @ @ - 120 , 7 + 126 , 8 @ @ class AASettingsWallpapersController : AATableViewController { 
 picker . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 
 - / / Image picking 
 + / / MARK : - 
 + / / MARK : Image picking 
 
 func pickImage ( source : UIImagePickerControllerSourceType ) { 
 let pickerController = AAImagePickerController ( )
