BLEU SCORE: 0.10600313379512592

TEST MSG: chore ( core + android ) : add WebRTCMediaStreams to CallVM
GENERATED MSG: wip ( core ) : Peer State passing

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index 04f5eeb . . 7afb9cd 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 26 , 7 + 26 , 6 @ @ import android . view . MotionEvent ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > import android . view . WindowManager ; < nl > - import android . widget . AdapterView ; < nl > import android . widget . FrameLayout ; < nl > import android . widget . ImageButton ; < nl > import android . widget . TextView ; < nl > @ @ - 42 , 6 + 41 , 8 @ @ import java . text . SimpleDateFormat ; < nl > import java . util . ArrayList ; < nl > import java . util . Date ; < nl > import java . util . HashMap ; < nl > + import java . util . HashSet ; < nl > + import java . util . Iterator ; < nl > import java . util . TimeZone ; < nl > < nl > import im . actor . core . entity . PeerType ; < nl > @ @ - 52 , 8 + 53 , 6 @ @ import im . actor . core . viewmodel . CallVM ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . Props ; < nl > @ @ - 125 , 10 + 124 , 12 @ @ public class CallFragment extends BaseFragment { < nl > private TintImageView muteCall ; < nl > private TextView speakerTV ; < nl > private boolean sourceIsStopped = false ; < nl > - private WebRTCPeerConnectionCallback webRTCPeerConnectionCallback ; < nl > float dX , dY ; < nl > private TintImageView videoIcon ; < nl > private boolean remoteRendererBinded = false ; < nl > + private TextView nameTV ; < nl > + private HashSet < AndroidMediaStream > mediaStreams = new HashSet < > ( ) ; < nl > + private AndroidMediaStream ownStream ; < nl > < nl > public CallFragment ( ) { < nl > < nl > @ @ - 203 , 7 + 204 , 7 @ @ public class CallFragment extends BaseFragment { < nl > avatarView = ( AvatarView ) cont . findViewById ( R . id . avatar ) ; < nl > avatarView . init ( Screen . dp ( 130 ) , 50 ) ; < nl > < nl > - TextView nameTV = ( TextView ) cont . findViewById ( R . id . name ) ; < nl > + nameTV = ( TextView ) cont . findViewById ( R . id . name ) ; < nl > nameTV . setTextColor ( ActorSDK . sharedActor ( ) . style . getProfileTitleColor ( ) ) ; < nl > if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > UserVM user = users ( ) . get ( peer . getPeerId ( ) ) ; < nl > @ @ - 338 , 81 + 339 , 6 @ @ public class CallFragment extends BaseFragment { < nl > params . setMargins ( margin , margin + statusBarHeight , 0 , 0 ) ; < nl > cont . addView ( localVideoView , params ) ; < nl > < nl > - < nl > - webRTCPeerConnectionCallback = new WebRTCPeerConnectionCallback ( ) { < nl > - @ Override < nl > - public void onCandidate ( int label , String id , String candidate ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onStreamAdded ( WebRTCMediaStream remoteStream ) { < nl > - AndroidMediaStream stream = ( AndroidMediaStream ) remoteStream ; < nl > - if ( stream . getVideoTrack ( ) ! = null ) { < nl > - < nl > - getActivity ( ) . runOnUiThread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - if ( ! remoteRendererBinded ) { < nl > - try { < nl > - remoteVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; < nl > - } catch ( IllegalStateException e ) { < nl > - / / Already inited , it ' s ok here < nl > - } < nl > - < nl > - remoteRender = new VideoRenderer ( remoteVideoView ) ; < nl > - stream . getVideoTrack ( ) . addRenderer ( remoteRender ) ; < nl > - remoteVideoView . setVisibility ( View . VISIBLE ) ; < nl > - avatarView . setVisibility ( View . INVISIBLE ) ; < nl > - nameTV . setVisibility ( View . INVISIBLE ) ; < nl > - } < nl > - < nl > - } < nl > - } ) ; < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onStreamRemoved ( WebRTCMediaStream stream ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onOwnStreamAdded ( WebRTCMediaStream ownStream ) { < nl > - AndroidMediaStream stream = ( AndroidMediaStream ) ownStream ; < nl > - if ( stream . getVideoTrack ( ) ! = null ) { < nl > - < nl > - < nl > - getActivity ( ) . runOnUiThread ( ( ) - > { < nl > - try { < nl > - localVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; < nl > - } catch ( IllegalStateException e ) { < nl > - / / Already inited , it ' s ok here < nl > - } < nl > - source = stream . getVideoSource ( ) ; < nl > - localRender = new VideoRenderer ( localVideoView ) ; < nl > - stream . getVideoTrack ( ) . addRenderer ( localRender ) ; < nl > - localVideoView . setVisibility ( View . VISIBLE ) ; < nl > - < nl > - } ) ; < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onRenegotiationNeeded ( ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onDisposed ( ) { < nl > - < nl > - } < nl > - } ; < nl > } else { < nl > if ( call ! = null ) { < nl > if ( call . getIsVideoEnabled ( ) . get ( ) ) { < nl > @ @ - 528 , 6 + 454 , 53 @ @ public class CallFragment extends BaseFragment { < nl > messenger ( ) . answerCall ( callId ) ; < nl > } < nl > < nl > + public void onStreamAdded ( WebRTCMediaStream remoteStream ) { < nl > + AndroidMediaStream stream = ( AndroidMediaStream ) remoteStream ; < nl > + if ( stream . getVideoTrack ( ) ! = null ) { < nl > + < nl > + getActivity ( ) . runOnUiThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + if ( ! remoteRendererBinded ) { < nl > + try { < nl > + remoteVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; < nl > + } catch ( IllegalStateException e ) { < nl > + / / Already inited , it ' s ok here < nl > + } < nl > + < nl > + remoteRender = new VideoRenderer ( remoteVideoView ) ; < nl > + stream . getVideoTrack ( ) . addRenderer ( remoteRender ) ; < nl > + remoteVideoView . setVisibility ( View . VISIBLE ) ; < nl > + avatarView . setVisibility ( View . INVISIBLE ) ; < nl > + nameTV . setVisibility ( View . INVISIBLE ) ; < nl > + } < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + < nl > + public void onOwnStreamAdded ( WebRTCMediaStream ownStream ) { < nl > + AndroidMediaStream stream = ( AndroidMediaStream ) ownStream ; < nl > + if ( stream . getVideoTrack ( ) ! = null ) { < nl > + < nl > + < nl > + getActivity ( ) . runOnUiThread ( ( ) - > { < nl > + try { < nl > + localVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; < nl > + } catch ( IllegalStateException e ) { < nl > + / / Already inited , it ' s ok here < nl > + } < nl > + CallFragment . this . ownStream = ( AndroidMediaStream ) ownStream ; < nl > + source = stream . getVideoSource ( ) ; < nl > + localRender = new VideoRenderer ( localVideoView ) ; < nl > + stream . getVideoTrack ( ) . addRenderer ( localRender ) ; < nl > + localVideoView . setVisibility ( View . VISIBLE ) ; < nl > + < nl > + } ) ; < nl > + } < nl > + } < nl > + < nl > private void doEndCall ( ) { < nl > messenger ( ) . endCall ( callId ) ; < nl > onCallEnd ( ) ; < nl > @ @ - 618 , 22 + 591 , 16 @ @ public class CallFragment extends BaseFragment { < nl > < nl > < nl > if ( call ! = null ) { < nl > - ArrayList < WebRTCPeerConnection > webRTCPeerConnections = call . getPeerConnection ( ) . get ( ) ; < nl > - < nl > - for ( WebRTCPeerConnection webRTCPeerConnection : webRTCPeerConnections ) { < nl > < nl > - webRTCPeerConnection . removeCallback ( webRTCPeerConnectionCallback ) ; < nl > - < nl > - HashMap < MediaStream , AndroidMediaStream > mediaStreams = ( ( AndroidPeerConnection ) webRTCPeerConnection ) . getStreams ( ) ; < nl > - for ( MediaStream mediaStream : mediaStreams . keySet ( ) ) { < nl > - mediaStreams . get ( mediaStream ) . removeRenderer ( remoteRender ) ; < nl > - } < nl > + for ( AndroidMediaStream s : mediaStreams ) { < nl > + s . removeRenderer ( remoteRender ) ; < nl > remoteRendererBinded = false ; < nl > + } < nl > + mediaStreams . clear ( ) ; < nl > < nl > - AndroidMediaStream stream = ( ( AndroidPeerConnection ) webRTCPeerConnection ) . getLocalStream ( ) ; < nl > - if ( stream ! = null ) { < nl > - stream . removeRenderer ( localRender ) ; < nl > - } < nl > + if ( ownStream ! = null ) { < nl > + ownStream . removeRenderer ( localRender ) ; < nl > + ownStream = null ; < nl > } < nl > < nl > } < nl > @ @ - 680 , 9 + 647 , 22 @ @ public class CallFragment extends BaseFragment { < nl > if ( call ! = null ) { < nl > < nl > if ( peer . getPeerType ( ) = = PeerType . PRIVATE & & ActorSDK . sharedActor ( ) . isVideoCallsEnabled ( ) ) { < nl > - bind ( call . getPeerConnection ( ) , ( val , valueModel ) - > { < nl > - for ( WebRTCPeerConnection webRTCPeerConnection : val ) { < nl > - webRTCPeerConnection . addCallback ( webRTCPeerConnectionCallback ) ; < nl > + bind ( call . getMediaStreams ( ) , ( val , valueModel ) - > { < nl > + mediaStreams . retainAll ( val ) ; < nl > + for ( WebRTCMediaStream s : val ) { < nl > + if ( ! mediaStreams . contains ( s ) ) { < nl > + onStreamAdded ( s ) ; < nl > + mediaStreams . add ( ( AndroidMediaStream ) s ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + < nl > + bind ( call . getOwnMediaStream ( ) , new ValueChangedListener < WebRTCMediaStream > ( ) { < nl > + @ Override < nl > + public void onChanged ( WebRTCMediaStream val , Value < WebRTCMediaStream > valueModel ) { < nl > + if ( val ! = null ) { < nl > + onOwnStreamAdded ( val ) ; < nl > + } < nl > } < nl > } ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 744b737 . . b2f742d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 8 , 8 + 8 , 6 @ @ import im . actor . core . api . rpc . RequestDoCall ; < nl > import im . actor . core . api . rpc . RequestGetCallInfo ; < nl > import im . actor . core . api . rpc . RequestJoinCall ; < nl > import im . actor . core . api . rpc . RequestRejectCall ; < nl > - import im . actor . core . api . rpc . ResponseDoCall ; < nl > - import im . actor . core . api . rpc . ResponseGetCallInfo ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . calls . peers . AbsCallActor ; < nl > @ @ - 18 , 8 + 16 , 8 @ @ import im . actor . core . viewmodel . CallState ; < nl > import im . actor . core . viewmodel . CallVM ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . runtime . actors . messages . PoisonPill ; < nl > - import im . actor . runtime . function . Consumer ; < nl > import im . actor . runtime . power . WakeLock ; < nl > + import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > import im . actor . runtime . webrtc . WebRTCPeerConnection ; < nl > < nl > import static im . actor . core . entity . EntityConverter . convert ; < nl > @ @ - 94 , 9 + 92 , 34 @ @ public class CallActor extends AbsCallActor { < nl > < nl > @ Override < nl > public void onPeerConnectionCreated ( @ NotNull WebRTCPeerConnection peerConnection ) { < nl > - ArrayList < WebRTCPeerConnection > webRTCPeerConnections = new ArrayList < > ( callVM . getPeerConnection ( ) . get ( ) ) ; < nl > + ArrayList < WebRTCPeerConnection > webRTCPeerConnections = new ArrayList < > ( callVM . getPeerConnections ( ) . get ( ) ) ; < nl > webRTCPeerConnections . add ( peerConnection ) ; < nl > - callVM . getPeerConnection ( ) . change ( webRTCPeerConnections ) ; < nl > + callVM . getPeerConnections ( ) . change ( webRTCPeerConnections ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onStreamAdded ( WebRTCMediaStream stream ) { < nl > + ArrayList < WebRTCMediaStream > mediaStreams = new ArrayList < > ( callVM . getMediaStreams ( ) . get ( ) ) ; < nl > + mediaStreams . add ( stream ) ; < nl > + callVM . getMediaStreams ( ) . change ( mediaStreams ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onStreamRemoved ( WebRTCMediaStream stream ) { < nl > + ArrayList < WebRTCMediaStream > mediaStreams = new ArrayList < > ( callVM . getMediaStreams ( ) . get ( ) ) ; < nl > + if ( mediaStreams . remove ( stream ) ) { < nl > + callVM . getMediaStreams ( ) . change ( mediaStreams ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + callVM . getOwnMediaStream ( ) . change ( stream ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + callVM . getOwnMediaStream ( ) . change ( null ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > index e037be4 . . 2358e38 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > @ @ - 7 , 6 + 7 , 7 @ @ import im . actor . runtime . WebRTC ; < nl > import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > import im . actor . runtime . webrtc . WebRTCPeerConnection ; < nl > < nl > public abstract class AbsCallActor extends ModuleActor implements CallBusCallback { < nl > @ @ - 109 , 5 + 110 , 25 @ @ public abstract class AbsCallActor extends ModuleActor implements CallBusCallbac < nl > public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { < nl > self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onPeerConnectionCreated ( peerConnection ) ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onStreamAdded ( WebRTCMediaStream stream ) { < nl > + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onStreamAdded ( stream ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onStreamRemoved ( WebRTCMediaStream stream ) { < nl > + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onStreamRemoved ( stream ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onOwnStreamAdded ( stream ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onOwnStreamRemoved ( stream ) ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index ef832fb . . 92b4477 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 19 , 8 + 19 , 6 @ @ import im . actor . core . api . ApiWebRTCSignaling ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . eventbus . EventBusActor ; < nl > import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > import im . actor . runtime . webrtc . WebRTCPeerConnection ; < nl > @ @ - 118 , 11 + 116 , 12 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > < nl > @ Override < nl > public void onStreamAdded ( long deviceId , @ NotNull WebRTCMediaStream stream ) { < nl > - < nl > + callBusCallback . onStreamAdded ( stream ) ; < nl > } < nl > < nl > @ Override < nl > public void onStreamRemoved ( long deviceId , @ NotNull WebRTCMediaStream stream ) { < nl > + callBusCallback . onStreamRemoved ( stream ) ; < nl > < nl > } < nl > < nl > @ @ - 131 , 6 + 130 , 16 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > callBusCallback . onPeerConnectionCreated ( peerConnection ) ; < nl > } < nl > < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + callBusCallback . onOwnStreamAdded ( stream ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + callBusCallback . onOwnStreamRemoved ( stream ) ; < nl > + } < nl > + < nl > < nl > / / < nl > / / Actions < nl > @ @ - 375 , 5 + 384 , 15 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > self ( ) . send ( ( Runnable ) ( ) - > callCallback . onPeerConnectionCreated ( peerConnection ) ) ; < nl > < nl > } < nl > + < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + self ( ) . send ( ( Runnable ) ( ) - > callCallback . onOwnStreamAdded ( stream ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + self ( ) . send ( ( Runnable ) ( ) - > callCallback . onOwnStreamRemoved ( stream ) ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > index f94a823 . . e68092b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . core . modules . calls . peers ; < nl > < nl > import org . jetbrains . annotations . NotNull ; < nl > < nl > + import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > import im . actor . runtime . webrtc . WebRTCPeerConnection ; < nl > < nl > public interface CallBusCallback { < nl > @ @ - 15 , 4 + 16 , 12 @ @ public interface CallBusCallback { < nl > void onBusStopped ( ) ; < nl > < nl > void onPeerConnectionCreated ( @ NotNull WebRTCPeerConnection peerConnection ) ; < nl > + < nl > + void onStreamAdded ( WebRTCMediaStream stream ) ; < nl > + < nl > + void onStreamRemoved ( WebRTCMediaStream stream ) ; < nl > + < nl > + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; < nl > + < nl > + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > index 5877c94 . . 11bf8ed 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > @ @ - 286 , 5 + 286 , 15 @ @ public class PeerCallActor extends ModuleActor { < nl > public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { < nl > callback . onPeerConnectionCreated ( peerConnection ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + callback . onOwnStreamAdded ( stream ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + callback . onOwnStreamRemoved ( stream ) ; < nl > + } < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java < nl > index 0382386 . . 3753ced 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java < nl > @ @ - 20 , 4 + 20 , 8 @ @ public interface PeerCallCallback { < nl > void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) ; < nl > < nl > void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) ; < nl > + < nl > + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; < nl > + < nl > + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index 115a35f . . d36b519 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 107 , 12 + 107 , 12 @ @ public class PeerConnectionActor extends ModuleActor { < nl > < nl > @ Override < nl > public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > - < nl > + callback . onOwnStreamAdded ( stream ) ; < nl > } < nl > < nl > @ Override < nl > public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > - < nl > + callback . onOwnStreamRemoved ( stream ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java < nl > index c3565b6 . . 5fe0d81 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java < nl > @ @ - 51 , 4 + 51 , 8 @ @ public interface PeerConnectionCallback { < nl > void onStreamRemoved ( WebRTCMediaStream stream ) ; < nl > < nl > void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) ; < nl > + < nl > + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; < nl > + < nl > + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java < nl > index a1c6e11 . . 0b10f62 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java < nl > @ @ - 133 , 5 + 133 , 15 @ @ public class PeerConnectionInt extends ActorInterface { < nl > public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { < nl > callbackDest . send ( ( Runnable ) ( ) - > callback . onPeerConnectionCreated ( peerConnection ) ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamAdded ( stream ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamRemoved ( stream ) ) ; < nl > + } < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > index 4f8920b . . 62dc0b7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > @ @ - 196 , 6 + 196 , 16 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > callback . onPeerConnectionCreated ( peerConnection ) ; < nl > } < nl > < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + callback . onOwnStreamAdded ( stream ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + callback . onOwnStreamRemoved ( stream ) ; < nl > + } < nl > + < nl > < nl > public void onCloseSession ( long sessionId ) { < nl > if ( ! closedSessions . contains ( sessionId ) ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java < nl > index fabfcf6 . . 09894ff 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java < nl > @ @ - 70 , 4 + 70 , 8 @ @ public interface PeerNodeCallback { < nl > void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) ; < nl > < nl > void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) ; < nl > + < nl > + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; < nl > + < nl > + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java < nl > index ec6f301 . . ae6b1c4 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java < nl > @ @ - 171 , 5 + 171 , 15 @ @ public class PeerNodeInt extends ActorInterface { < nl > public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { < nl > callbackDest . send ( ( Runnable ) ( ) - > callback . onPeerConnectionCreated ( peerConnection ) ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { < nl > + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamAdded ( stream ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { < nl > + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamRemoved ( stream ) ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java < nl > index 728f4b2 . . 5d8133e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java < nl > @ @ - 6 , 11 + 6 , 8 @ @ import java . util . ArrayList ; < nl > < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . viewmodel . generics . BooleanValueModel ; < nl > - import im . actor . core . viewmodel . generics . IntValueModel ; < nl > - import im . actor . runtime . * ; < nl > - import im . actor . runtime . actors . ActorTime ; < nl > import im . actor . runtime . mvvm . ValueModel ; < nl > - import im . actor . runtime . threading . CommonTimer ; < nl > + import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > import im . actor . runtime . webrtc . WebRTCPeerConnection ; < nl > < nl > public class CallVM { < nl > @ @ - 22 , 7 + 19 , 11 @ @ public class CallVM { < nl > @ Property ( " nonatomic , readonly " ) < nl > private final ValueModel < CallState > state ; < nl > @ Property ( " nonatomic , readonly " ) < nl > - private final ValueModel < ArrayList < WebRTCPeerConnection > > peerConnection ; < nl > + private final ValueModel < ArrayList < WebRTCPeerConnection > > peerConnections ; < nl > + @ Property ( " nonatomic , readonly " ) < nl > + private final ValueModel < ArrayList < WebRTCMediaStream > > mediaStreams ; < nl > + @ Property ( " nonatomic , readonly " ) < nl > + private final ValueModel < WebRTCMediaStream > ownMediaStream ; < nl > @ Property ( " nonatomic , readonly " ) < nl > private final ValueModel < ArrayList < CallMember > > members ; < nl > @ Property ( " nonatomic , readonly " ) < nl > @ @ - 41 , 7 + 42 , 9 @ @ public class CallVM { < nl > this . peer = peer ; < nl > this . isOutgoing = isOutgoing ; < nl > this . state = new ValueModel < > ( " calls . " + callId + " . state " , state ) ; < nl > - this . peerConnection = new ValueModel < > ( " calls . " + callId + " . peer _ connection " , new ArrayList < > ( ) ) ; < nl > + this . peerConnections = new ValueModel < > ( " calls . " + callId + " . peer _ connection " , new ArrayList < > ( ) ) ; < nl > + this . mediaStreams = new ValueModel < > ( " calls . " + callId + " . media _ stram " , new ArrayList < > ( ) ) ; < nl > + this . ownMediaStream = new ValueModel < > ( " calls . " + callId + " . own _ media _ stream " , null ) ; < nl > this . members = new ValueModel < > ( " calls . " + callId + " . members " , new ArrayList < > ( initialMembers ) ) ; < nl > this . isMuted = new BooleanValueModel ( " calls . " + callId + " . muted " , false ) ; < nl > this . isVideoEnabled = new BooleanValueModel ( " calls . " + callId + " . video _ enabled " , true ) ; < nl > @ @ - 92 , 7 + 95 , 15 @ @ public class CallVM { < nl > this . callEnd = callEnd ; < nl > } < nl > < nl > - public ValueModel < ArrayList < WebRTCPeerConnection > > getPeerConnection ( ) { < nl > - return peerConnection ; < nl > + public ValueModel < ArrayList < WebRTCPeerConnection > > getPeerConnections ( ) { < nl > + return peerConnections ; < nl > + } < nl > + < nl > + public ValueModel < ArrayList < WebRTCMediaStream > > getMediaStreams ( ) { < nl > + return mediaStreams ; < nl > + } < nl > + < nl > + public ValueModel < WebRTCMediaStream > getOwnMediaStream ( ) { < nl > + return ownMediaStream ; < nl > } < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java < nl > index b3180fd . . ed05fe8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java < nl > @ @ - 1 , 64 + 1 , 101 @ @ < nl > package im . actor . core . modules . calls ; < nl > < nl > - import java . util . ArrayList ; < nl > - import java . util . HashMap ; < nl > + import java . util . List ; < nl > < nl > - import im . actor . core . entity . Group ; < nl > - import im . actor . core . entity . GroupMember ; < nl > - import im . actor . core . entity . Peer ; < nl > - import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . api . ApiCallMember ; < nl > import im . actor . core . modules . ModuleContext ; < nl > + import im . actor . core . modules . calls . bus . CallBusActor ; < nl > + import im . actor . core . modules . calls . bus . CallBusCallback ; < nl > + import im . actor . core . modules . calls . bus . CallBusInt ; < nl > + import im . actor . core . modules . calls . peers . PeerCallInt ; < nl > + import im . actor . core . modules . calls . peers . PeerSettings ; < nl > import im . actor . core . modules . eventbus . EventBusActor ; < nl > - import im . actor . core . viewmodel . CallMember ; < nl > - import im . actor . core . viewmodel . CallMemberState ; < nl > - import im . actor . core . viewmodel . CallState ; < nl > - import im . actor . core . viewmodel . CallVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > < nl > - public class AbsCallActor extends EventBusActor { < nl > + public abstract class AbsCallActor extends EventBusActor implements CallBusCallback { < nl > < nl > - private final HashMap < Long , CallVM > callModels ; < nl > - private CallVM callVM ; < nl > + protected final PeerSettings selfSettings ; < nl > + protected final CallViewModels callViewModels ; < nl > + protected final ActorRef callManager ; < nl > + protected CallBusInt callBus ; < nl > + protected PeerCallInt peerCall ; < nl > < nl > public AbsCallActor ( ModuleContext context ) { < nl > super ( context ) ; < nl > < nl > - callModels = context ( ) . getCallsModule ( ) . getCallModels ( ) ; < nl > + this . callManager = context . getCallsModule ( ) . getCallManager ( ) ; < nl > + this . callViewModels = context ( ) . getCallsModule ( ) . getCallViewModels ( ) ; < nl > + this . selfSettings = new PeerSettings ( ) ; < nl > + this . selfSettings . setIsPreConnectionEnabled ( true ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + super . preStart ( ) ; < nl > + callBus = new CallBusInt ( system ( ) . actorOf ( getPath ( ) + " / bus " , new ActorCreator ( ) { < nl > + @ Override < nl > + public Actor create ( ) { < nl > + return new CallBusActor ( new CallBusCallbackWrapper ( ) , selfSettings , context ( ) ) ; < nl > + } < nl > + } ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public final void onBusCreated ( PeerCallInt peerCallInt ) { < nl > + this . peerCall = peerCallInt ; < nl > + callPreStart ( ) ; < nl > + } < nl > + < nl > + public void callPreStart ( ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onBusStarted ( String busId ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onMembersChanged ( List < ApiCallMember > members ) { < nl > + < nl > } < nl > < nl > / / < nl > - / / Call Model helpers < nl > + / / Wrapper < nl > / / < nl > - public CallVM spawnNewVM ( long callId , Peer peer , boolean isOutgoing , ArrayList < CallMember > members , CallState callState ) { < nl > - CallVM callVM = new CallVM ( callId , peer , isOutgoing , members , callState ) ; < nl > - / / callVM . getIsMuted ( ) . change ( isMuted ( ) ) ; < nl > - synchronized ( callModels ) { < nl > - callModels . put ( callId , callVM ) ; < nl > + < nl > + private class CallBusCallbackWrapper implements CallBusCallback { < nl > + < nl > + @ Override < nl > + public void onBusCreated ( final PeerCallInt peerCallInt ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onBusCreated ( peerCallInt ) ; < nl > + } < nl > + } ) ; < nl > } < nl > - this . callVM = callVM ; < nl > - return callVM ; < nl > - } < nl > < nl > - public CallVM spanNewOutgoingVM ( long callId , Peer peer ) { < nl > - ArrayList < CallMember > members = new ArrayList < > ( ) ; < nl > - if ( peer . getPeerType ( ) = = PeerType . PRIVATE | | < nl > - peer . getPeerType ( ) = = PeerType . PRIVATE _ ENCRYPTED ) { < nl > - members . add ( new CallMember ( peer . getPeerId ( ) , CallMemberState . RINGING ) ) ; < nl > - } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > - Group g = getGroup ( peer . getPeerId ( ) ) ; < nl > - for ( GroupMember gm : g . getMembers ( ) ) { < nl > - if ( gm . getUid ( ) ! = myUid ( ) ) { < nl > - members . add ( new CallMember ( gm . getUid ( ) , CallMemberState . RINGING ) ) ; < nl > + @ Override < nl > + public void onBusStarted ( final String busId ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onBusStarted ( busId ) ; < nl > } < nl > - } < nl > + } ) ; < nl > } < nl > - return spawnNewVM ( callId , peer , true , members , CallState . RINGING ) ; < nl > - } < nl > < nl > - / / @ Override < nl > - / / public void onMute ( boolean isMuted ) { < nl > - / / super . onMute ( isMuted ) ; < nl > - / / if ( callVM ! = null ) { < nl > - / / callVM . getIsMuted ( ) . change ( isMuted ) ; < nl > - / / } < nl > - / / } < nl > + @ Override < nl > + public void onMembersChanged ( final List < ApiCallMember > members ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onMembersChanged ( members ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index e8f614d . . e3ac82b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . core . modules . calls ; < nl > < nl > + import java . util . ArrayList ; < nl > import java . util . List ; < nl > < nl > import im . actor . core . api . ApiAdvertiseSelf ; < nl > @ @ - 9 , 125 + 10 , 92 @ @ import im . actor . core . api . rpc . RequestGetCallInfo ; < nl > import im . actor . core . api . rpc . ResponseGetCallInfo ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . modules . ModuleContext ; < nl > - import im . actor . core . modules . calls . bus . CallBusActor ; < nl > - import im . actor . core . modules . calls . bus . CallBusCallbackSlave ; < nl > - import im . actor . core . modules . calls . bus . CallBusInt ; < nl > - import im . actor . core . modules . calls . peers . PeerCallInt ; < nl > - import im . actor . core . modules . calls . peers . PeerSettings ; < nl > - import im . actor . core . util . ModuleActor ; < nl > + import im . actor . core . viewmodel . CallMember ; < nl > + import im . actor . core . viewmodel . CallState ; < nl > import im . actor . core . viewmodel . CallVM ; < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > - import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . messages . PoisonPill ; < nl > import im . actor . runtime . function . Consumer ; < nl > < nl > import static im . actor . core . modules . internal . messages . entity . EntityConverter . convert ; < nl > < nl > - public class CallActor extends ModuleActor implements CallBusCallbackSlave { < nl > + public class CallActor extends AbsCallActor { < nl > < nl > private static final String TAG = " CallActor " ; < nl > < nl > - private CallBusInt callBusInt ; < nl > - private PeerCallInt peerCallInt ; < nl > - private final ActorRef callManager ; < nl > private final long callId ; < nl > - private final PeerSettings selfSettings ; < nl > < nl > private Peer peer ; < nl > private CallVM callVM ; < nl > < nl > - private boolean isMasterReady ; < nl > - private int masterUid ; < nl > - private long masterDeviceId ; < nl > - < nl > private boolean isConnected ; < nl > private boolean isAnswered ; < nl > private boolean isRejected ; < nl > < nl > public CallActor ( long callId , ModuleContext context ) { < nl > super ( context ) ; < nl > - < nl > this . callId = callId ; < nl > - this . callManager = context . getCallsModule ( ) . getCallManager ( ) ; < nl > this . isAnswered = false ; < nl > this . isConnected = false ; < nl > - this . selfSettings = new PeerSettings ( ) ; < nl > - this . selfSettings . setIsPreConnectionEnabled ( true ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void preStart ( ) { < nl > - super . preStart ( ) ; < nl > - < nl > - < nl > - callBusInt = new CallBusInt ( system ( ) . actorOf ( getPath ( ) + " / bus " , new ActorCreator ( ) { < nl > - @ Override < nl > - public Actor create ( ) { < nl > - return new CallBusActor ( new CallbackWrapper ( ) , selfSettings , context ( ) ) ; < nl > - } < nl > - } ) ) ; < nl > } < nl > < nl > @ Override < nl > - public void onBusCreated ( PeerCallInt peerCallInt ) { < nl > - this . peerCallInt = peerCallInt ; < nl > - < nl > + public void callPreStart ( ) { < nl > api ( new RequestGetCallInfo ( callId ) ) . then ( new Consumer < ResponseGetCallInfo > ( ) { < nl > @ Override < nl > public void apply ( final ResponseGetCallInfo responseGetCallInfo ) { < nl > peer = convert ( responseGetCallInfo . getPeer ( ) ) ; < nl > - callBusInt . joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; < nl > + callBus . joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; < nl > + callVM = callViewModels . spawnNewIncomingVM ( callId , peer , CallState . RINGING ) ; < nl > } < nl > } ) . failure ( new Consumer < Exception > ( ) { < nl > @ Override < nl > public void apply ( Exception e ) { < nl > - < nl > + self ( ) . send ( PoisonPill . INSTANCE ) ; < nl > } < nl > } ) . done ( self ( ) ) ; < nl > } < nl > < nl > @ Override < nl > public void onBusStarted ( String busId ) { < nl > + super . onBusStarted ( busId ) ; < nl > < nl > + callManager . send ( new CallManagerActor . OnIncomingCall ( callId ) ) ; < nl > } < nl > < nl > @ Override < nl > - public void onMasterSwitched ( int uid , long deviceId ) { < nl > - if ( isMasterReady ) { < nl > - return ; < nl > - } < nl > - < nl > - Log . d ( TAG , " onMasterSwitched " ) ; < nl > - < nl > - isMasterReady = true ; < nl > - masterUid = uid ; < nl > - masterDeviceId = deviceId ; < nl > - callBusInt . sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; < nl > - unstashAll ( ) ; < nl > - < nl > - schedule ( new AnswerCall ( ) , 1000 ) ; < nl > + public void onMembersChanged ( List < ApiCallMember > members ) { < nl > + / / < nl > + / / Handle Members Update < nl > + / / < nl > } < nl > < nl > - @ Override < nl > - public void onMembersChanged ( List < ApiCallMember > members ) { < nl > - Log . d ( TAG , " onMembersChanged " ) ; < nl > + public void onAnswerCall ( ) { < nl > + if ( ! isAnswered & & ! isRejected ) { < nl > + isAnswered = true ; < nl > + callBus . answerCall ( ) ; < nl > + peerCall . onOwnStarted ( ) ; < nl > < nl > + } < nl > } < nl > < nl > - public void onAnswerCall ( ) { < nl > - callBusInt . sendSignal ( masterUid , masterDeviceId , new ApiAnswerCall ( ) ) ; < nl > - peerCallInt . onOwnStarted ( ) ; < nl > + public void onRejectCall ( ) { < nl > + if ( ! isAnswered & & ! isRejected ) { < nl > + isRejected = true ; < nl > + callBus . rejectCall ( ) ; < nl > + peerCall . kill ( ) ; < nl > + } < nl > } < nl > < nl > + / / < nl > + / / Messages < nl > + / / < nl > + < nl > @ Override < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof AnswerCall ) { < nl > - if ( ! isMasterReady ) { < nl > - stash ( ) ; < nl > - return ; < nl > - } < nl > onAnswerCall ( ) ; < nl > + } else if ( message instanceof RejectCall ) { < nl > + onRejectCall ( ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > @ @ - 137 , 64 + 105 , 7 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { < nl > < nl > } < nl > < nl > - public class CallbackWrapper implements CallBusCallbackSlave { < nl > + public static class RejectCall { < nl > < nl > - @ Override < nl > - public void onMasterSwitched ( final int uid , final long deviceId ) { < nl > - self ( ) . send ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - CallActor . this . onMasterSwitched ( uid , deviceId ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onMembersChanged ( final List < ApiCallMember > members ) { < nl > - self ( ) . send ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - CallActor . this . onMembersChanged ( members ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onBusCreated ( final PeerCallInt peerCallInt ) { < nl > - self ( ) . send ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - CallActor . this . onBusCreated ( peerCallInt ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onBusStarted ( final String busId ) { < nl > - self ( ) . send ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - CallActor . this . onBusStarted ( busId ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > } < nl > - < nl > - / / @ Override < nl > - / / public void onSignalingStarted ( ) { < nl > - / / < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onSignal ( int uid , long deviceId , ApiWebRTCSignaling signal ) { < nl > - / / if ( signal instanceof ApiSwitchMaster ) { < nl > - / / < nl > - / / } < nl > - / / Log . d ( TAG , " onSignal : " + signal ) ; < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onSignalingStopped ( ) { < nl > - / / < nl > - / / } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallViewModels . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallViewModels . java < nl > new file mode 100644 < nl > index 0000000 . . 3dd3942 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallViewModels . java < nl > @ @ - 0 , 0 + 1 , 61 @ @ < nl > + package im . actor . core . modules . calls ; < nl > + < nl > + import java . util . ArrayList ; < nl > + import java . util . HashMap ; < nl > + < nl > + import im . actor . core . entity . Group ; < nl > + import im . actor . core . entity . GroupMember ; < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . modules . ModuleContext ; < nl > + import im . actor . core . viewmodel . CallMember ; < nl > + import im . actor . core . viewmodel . CallMemberState ; < nl > + import im . actor . core . viewmodel . CallState ; < nl > + import im . actor . core . viewmodel . CallVM ; < nl > + < nl > + public class CallViewModels { < nl > + < nl > + private final HashMap < Long , CallVM > callModels ; < nl > + private final ModuleContext context ; < nl > + < nl > + public CallViewModels ( ModuleContext context ) { < nl > + this . context = context ; < nl > + this . callModels = new HashMap < > ( ) ; < nl > + } < nl > + < nl > + public synchronized CallVM getCall ( long id ) { < nl > + return callModels . get ( id ) ; < nl > + } < nl > + < nl > + public synchronized CallVM spawnNewVM ( long callId , Peer peer , boolean isOutgoing , ArrayList < CallMember > members , CallState callState ) { < nl > + CallVM callVM = new CallVM ( callId , peer , isOutgoing , members , callState ) ; < nl > + synchronized ( callModels ) { < nl > + callModels . put ( callId , callVM ) ; < nl > + } < nl > + return callVM ; < nl > + } < nl > + < nl > + public synchronized CallVM spawnNewIncomingVM ( long callId , Peer peer , CallState callState ) { < nl > + CallVM callVM = new CallVM ( callId , peer , false , new ArrayList < CallMember > ( ) , callState ) ; < nl > + synchronized ( callModels ) { < nl > + callModels . put ( callId , callVM ) ; < nl > + } < nl > + return callVM ; < nl > + } < nl > + < nl > + public synchronized CallVM spawnNewOutgoingVM ( long callId , Peer peer ) { < nl > + ArrayList < CallMember > members = new ArrayList < > ( ) ; < nl > + if ( peer . getPeerType ( ) = = PeerType . PRIVATE | | < nl > + peer . getPeerType ( ) = = PeerType . PRIVATE _ ENCRYPTED ) { < nl > + members . add ( new CallMember ( peer . getPeerId ( ) , CallMemberState . RINGING ) ) ; < nl > + } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > + Group g = context . getGroupsModule ( ) . getGroups ( ) . getValue ( peer . getPeerId ( ) ) ; < nl > + for ( GroupMember gm : g . getMembers ( ) ) { < nl > + if ( gm . getUid ( ) ! = context . getAuthModule ( ) . myUid ( ) ) { < nl > + members . add ( new CallMember ( gm . getUid ( ) , CallMemberState . RINGING ) ) ; < nl > + } < nl > + } < nl > + } < nl > + return spawnNewVM ( callId , peer , true , members , CallState . RINGING ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java < nl > index a6664fc . . acdbf99 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java < nl > @ @ - 19 , 28 + 19 , 28 @ @ public class CallsModule extends AbsModule { < nl > < nl > private CallsProvider provider ; < nl > private ActorRef callManager ; < nl > - private HashMap < Long , CallVM > callModels = new HashMap < > ( ) ; < nl > + private CallViewModels callViewModels ; < nl > < nl > public CallsModule ( ModuleContext context ) { < nl > super ( context ) ; < nl > < nl > provider = context ( ) . getConfiguration ( ) . getCallsProvider ( ) ; < nl > + callViewModels = new CallViewModels ( context ( ) ) ; < nl > } < nl > < nl > public void run ( ) { < nl > if ( provider = = null ) { < nl > return ; < nl > } < nl > - < nl > callManager = system ( ) . actorOf ( " calls / manager " , CallManagerActor . CONSTRUCTOR ( context ( ) ) ) ; < nl > } < nl > < nl > - public HashMap < Long , CallVM > getCallModels ( ) { < nl > - return callModels ; < nl > + public CallViewModels getCallViewModels ( ) { < nl > + return callViewModels ; < nl > } < nl > < nl > public CallVM getCall ( long id ) { < nl > - return callModels . get ( id ) ; < nl > + return callViewModels . getCall ( id ) ; < nl > } < nl > < nl > public ActorRef getCallManager ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java < nl > index 6286caf . . 868ea55 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java < nl > @ @ - 5 , 6 + 5 , 7 @ @ import org . jetbrains . annotations . Nullable ; < nl > import java . io . IOException ; < nl > import java . util . HashMap ; < nl > < nl > + import im . actor . core . api . ApiAdvertiseSelf ; < nl > import im . actor . core . api . ApiAnswer ; < nl > import im . actor . core . api . ApiCandidate ; < nl > import im . actor . core . api . ApiMembersChanged ; < nl > @ @ - 27 , 10 + 28 , 15 @ @ import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > < nl > public class CallBusActor extends EventBusActor { < nl > < nl > + private static final int STASH = 1 ; < nl > + < nl > private HashMap < Long , Integer > deviceIds = new HashMap < > ( ) ; < nl > private final PeerSettings selfSettings ; < nl > private final PeerCallCallback peerCallback ; < nl > private final CallBusCallback callBusCallback ; < nl > + private boolean isMasterReady ; < nl > + private int masterUid ; < nl > + private long masterDeviceId ; < nl > private PeerCallInt peerCall ; < nl > < nl > public CallBusActor ( CallBusCallback callBusCallback , PeerSettings selfSettings , ModuleContext context ) { < nl > @ @ - 55 , 6 + 61 , 11 @ @ public class CallBusActor extends EventBusActor { < nl > } < nl > < nl > @ Override < nl > + public void onHandshakeSuccessful ( long deviceId ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > public void onConnectionStarted ( long deviceId ) { < nl > < nl > } < nl > @ @ - 98 , 6 + 109 , 10 @ @ public class CallBusActor extends EventBusActor { < nl > callBusCallback . onBusStarted ( getBusId ( ) ) ; < nl > } < nl > < nl > + public void onAnswerCall ( ) { < nl > + < nl > + } < nl > + < nl > @ Override < nl > public final void onMessageReceived ( @ Nullable Integer senderId , @ Nullable Long senderDeviceId , byte [ ] data ) { < nl > if ( senderId = = null | | senderDeviceId = = null ) { < nl > @ @ - 139 , 18 + 154 , 27 @ @ public class CallBusActor extends EventBusActor { < nl > ApiOnAnswer onAnswer = ( ApiOnAnswer ) signal ; < nl > deviceIds . put ( onAnswer . getDevice ( ) , onAnswer . getUid ( ) ) ; < nl > peerCall . onTheirStarted ( onAnswer . getDevice ( ) ) ; < nl > - } else { < nl > - if ( callBusCallback instanceof CallBusCallbackSlave ) { < nl > - CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; < nl > - if ( signal instanceof ApiSwitchMaster ) { < nl > - slaveCallback . onMasterSwitched ( senderId , senderDeviceId ) ; < nl > - } else if ( signal instanceof ApiMembersChanged ) { < nl > - ApiMembersChanged membersChanged = ( ApiMembersChanged ) signal ; < nl > - slaveCallback . onMembersChanged ( membersChanged . getAllMembers ( ) ) ; < nl > - } < nl > - } else { < nl > - / / Nothing ? < nl > + } else if ( signal instanceof ApiSwitchMaster ) { < nl > + if ( isMasterReady ) { < nl > + return ; < nl > } < nl > + isMasterReady = true ; < nl > + masterUid = senderId ; < nl > + masterDeviceId = senderDeviceId ; < nl > + unstashAll ( STASH ) ; < nl > + sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; < nl > + } else { < nl > + / / if ( callBusCallback instanceof CallBusCallbackSlave ) { < nl > + / / CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; < nl > + / / if ( signal instanceof ApiSwitchMaster ) { < nl > + / / slaveCallback . onMasterSwitched ( senderId , senderDeviceId ) ; < nl > + / / } else if ( signal instanceof ApiMembersChanged ) { < nl > + / / ApiMembersChanged membersChanged = ( ApiMembersChanged ) signal ; < nl > + / / slaveCallback . onMembersChanged ( membersChanged . getAllMembers ( ) ) ; < nl > + / / } < nl > + / / } else { < nl > + / / / / Nothing ? < nl > + / / } < nl > } < nl > } < nl > < nl > @ @ - 177 , 6 + 201 , 11 @ @ public class CallBusActor extends EventBusActor { < nl > } else if ( message instanceof SendSignal ) { < nl > SendSignal signal = ( SendSignal ) message ; < nl > sendSignal ( signal . getUid ( ) , signal . getDeviceId ( ) , signal . getSignal ( ) ) ; < nl > + } else if ( message instanceof AnswerCall ) { < nl > + if ( ! isMasterReady ) { < nl > + stash ( STASH ) ; < nl > + } < nl > + onAnswerCall ( ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > @ @ - 224 , 6 + 253 , 14 @ @ public class CallBusActor extends EventBusActor { < nl > } < nl > } < nl > < nl > + public static class AnswerCall { < nl > + < nl > + } < nl > + < nl > + public static class RejectCall { < nl > + < nl > + } < nl > + < nl > public class CallbackWrapper implements PeerCallCallback { < nl > < nl > private final PeerCallCallback callCallback ; < nl > @ @ - 263 , 6 + 300 , 16 @ @ public class CallBusActor extends EventBusActor { < nl > } < nl > < nl > @ Override < nl > + public void onHandshakeSuccessful ( final long deviceId ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callCallback . onHandshakeSuccessful ( deviceId ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onConnectionStarted ( final long deviceId ) { < nl > self ( ) . send ( new Runnable ( ) { < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java < nl > index d830a7a . . 258f807 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java < nl > @ @ - 1 , 9 + 1 , 15 @ @ < nl > package im . actor . core . modules . calls . bus ; < nl > < nl > + import java . util . List ; < nl > + < nl > + import im . actor . core . api . ApiCallMember ; < nl > import im . actor . core . modules . calls . peers . PeerCallInt ; < nl > < nl > public interface CallBusCallback { < nl > + < nl > void onBusCreated ( PeerCallInt peerCallInt ) ; < nl > < nl > void onBusStarted ( String busId ) ; < nl > + < nl > + void onMembersChanged ( List < ApiCallMember > members ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallbackSlave . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallbackSlave . java < nl > deleted file mode 100644 < nl > index 9bdc718 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallbackSlave . java < nl > + + + / dev / null < nl > @ @ - 1 , 11 + 0 , 0 @ @ < nl > - package im . actor . core . modules . calls . bus ; < nl > - < nl > - import java . util . List ; < nl > - < nl > - import im . actor . core . api . ApiCallMember ; < nl > - < nl > - public interface CallBusCallbackSlave extends CallBusCallback { < nl > - void onMasterSwitched ( int uid , long deviceId ) ; < nl > - < nl > - void onMembersChanged ( List < ApiCallMember > members ) ; < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java < nl > index 2a8b486 . . 1b82c74 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java < nl > @ @ - 21 , 4 + 21 , 12 @ @ public class CallBusInt extends ActorInterface { < nl > public void sendSignal ( int uid , long deviceId , ApiWebRTCSignaling signal ) { < nl > send ( new CallBusActor . SendSignal ( uid , deviceId , signal ) ) ; < nl > } < nl > + < nl > + public void answerCall ( ) { < nl > + send ( new CallBusActor . AnswerCall ( ) ) ; < nl > + } < nl > + < nl > + public void rejectCall ( ) { < nl > + send ( new CallBusActor . RejectCall ( ) ) ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > index b84b9f0 . . 54cc145 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > @ @ - 192 , 6 + 192 , 11 @ @ public class PeerCallActor extends ModuleActor { < nl > } < nl > < nl > @ Override < nl > + public void onHandshakeSuccessful ( long deviceId ) { < nl > + callback . onHandshakeSuccessful ( deviceId ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onConnectionStarted ( long deviceId ) { < nl > callback . onConnectionStarted ( deviceId ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java < nl > index 5740f32 . . bf25d3a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java < nl > @ @ - 10 , 6 + 10 , 8 @ @ public interface PeerCallCallback { < nl > < nl > void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) ; < nl > < nl > + void onHandshakeSuccessful ( long deviceId ) ; < nl > + < nl > void onConnectionStarted ( long deviceId ) ; < nl > < nl > void onConnectionEstablished ( long deviceId ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index ce67492 . . bce9862 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 229 , 6 + 229 , 7 @ @ public class PeerConnectionActor extends ModuleActor { < nl > } < nl > < nl > private void onHandShakeCompleted ( ) { < nl > + callback . onHandshakeSuccessful ( ) ; < nl > isReady = true ; < nl > isReadyForCandidates = true ; < nl > state = PeerConnectionState . READY ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java < nl > index d7c07c7 . . 710287b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java < nl > @ @ - 31 , 6 + 31 , 11 @ @ public interface PeerConnectionCallback { < nl > void onCandidate ( int mdpIndex , String id , String sdp ) ; < nl > < nl > / * * < nl > + * Called when Answer / Offer finished successfully < nl > + * / < nl > + void onHandshakeSuccessful ( ) ; < nl > + < nl > + / * * < nl > * Called when peer stream was added < nl > * < nl > * @ param stream added stream < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java < nl > index f784b69 . . 9a1bbbc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java < nl > @ @ - 113 , 6 + 113 , 16 @ @ public class PeerConnectionInt extends ActorInterface { < nl > } < nl > < nl > @ Override < nl > + public void onHandshakeSuccessful ( ) { < nl > + callbackDest . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onHandshakeSuccessful ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onStreamAdded ( final WebRTCMediaStream stream ) { < nl > callbackDest . send ( new Runnable ( ) { < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > index 337fe7d . . 0aaf20d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > @ @ - 148 , 6 + 148 , 11 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > } < nl > < nl > @ Override < nl > + public void onHandshakeSuccessful ( ) { < nl > + callback . onHandshakeSuccessful ( deviceId ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onStreamAdded ( WebRTCMediaStream stream ) { < nl > theirMediaStreams . add ( stream ) ; < nl > stream . setEnabled ( isEnabled ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java < nl > index 4f8b2c2 . . d11afa5 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java < nl > @ @ - 37 , 6 + 37 , 13 @ @ public interface PeerNodeCallback { < nl > void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) ; < nl > < nl > / * * < nl > + * Called when handshake was successful < nl > + * < nl > + * @ param deviceId Device Id < nl > + * / < nl > + void onHandshakeSuccessful ( long deviceId ) ; < nl > + < nl > + / * * < nl > * Called when connection started < nl > * < nl > * @ param deviceId Device Id < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java < nl > index 0645618 . . 89abb45 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java < nl > @ @ - 145 , 6 + 145 , 16 @ @ public class PeerNodeInt extends ActorInterface { < nl > } < nl > < nl > @ Override < nl > + public void onHandshakeSuccessful ( final long deviceId ) { < nl > + callbackDest . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + callback . onHandshakeSuccessful ( deviceId ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onConnectionStarted ( final long deviceId ) { < nl > callbackDest . send ( new Runnable ( ) { < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerState . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerState . java < nl > new file mode 100644 < nl > index 0000000 . . 3a00ef9 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerState . java < nl > @ @ - 0 , 0 + 1 , 5 @ @ < nl > + package im . actor . core . modules . calls . peers ; < nl > + < nl > + public enum PeerState { < nl > + CONNECTING , CONNECTED , ACTIVE < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index 04f5eeb . . 7afb9cd 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 26 , 7 + 26 , 6 @ @ import android . view . MotionEvent ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 import android . view . WindowManager ; 
 - import android . widget . AdapterView ; 
 import android . widget . FrameLayout ; 
 import android . widget . ImageButton ; 
 import android . widget . TextView ; 
 @ @ - 42 , 6 + 41 , 8 @ @ import java . text . SimpleDateFormat ; 
 import java . util . ArrayList ; 
 import java . util . Date ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 + import java . util . Iterator ; 
 import java . util . TimeZone ; 
 
 import im . actor . core . entity . PeerType ; 
 @ @ - 52 , 8 + 53 , 6 @ @ import im . actor . core . viewmodel . CallVM ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . Props ; 
 @ @ - 125 , 10 + 124 , 12 @ @ public class CallFragment extends BaseFragment { 
 private TintImageView muteCall ; 
 private TextView speakerTV ; 
 private boolean sourceIsStopped = false ; 
 - private WebRTCPeerConnectionCallback webRTCPeerConnectionCallback ; 
 float dX , dY ; 
 private TintImageView videoIcon ; 
 private boolean remoteRendererBinded = false ; 
 + private TextView nameTV ; 
 + private HashSet < AndroidMediaStream > mediaStreams = new HashSet < > ( ) ; 
 + private AndroidMediaStream ownStream ; 
 
 public CallFragment ( ) { 
 
 @ @ - 203 , 7 + 204 , 7 @ @ public class CallFragment extends BaseFragment { 
 avatarView = ( AvatarView ) cont . findViewById ( R . id . avatar ) ; 
 avatarView . init ( Screen . dp ( 130 ) , 50 ) ; 
 
 - TextView nameTV = ( TextView ) cont . findViewById ( R . id . name ) ; 
 + nameTV = ( TextView ) cont . findViewById ( R . id . name ) ; 
 nameTV . setTextColor ( ActorSDK . sharedActor ( ) . style . getProfileTitleColor ( ) ) ; 
 if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 UserVM user = users ( ) . get ( peer . getPeerId ( ) ) ; 
 @ @ - 338 , 81 + 339 , 6 @ @ public class CallFragment extends BaseFragment { 
 params . setMargins ( margin , margin + statusBarHeight , 0 , 0 ) ; 
 cont . addView ( localVideoView , params ) ; 
 
 - 
 - webRTCPeerConnectionCallback = new WebRTCPeerConnectionCallback ( ) { 
 - @ Override 
 - public void onCandidate ( int label , String id , String candidate ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onStreamAdded ( WebRTCMediaStream remoteStream ) { 
 - AndroidMediaStream stream = ( AndroidMediaStream ) remoteStream ; 
 - if ( stream . getVideoTrack ( ) ! = null ) { 
 - 
 - getActivity ( ) . runOnUiThread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - if ( ! remoteRendererBinded ) { 
 - try { 
 - remoteVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; 
 - } catch ( IllegalStateException e ) { 
 - / / Already inited , it ' s ok here 
 - } 
 - 
 - remoteRender = new VideoRenderer ( remoteVideoView ) ; 
 - stream . getVideoTrack ( ) . addRenderer ( remoteRender ) ; 
 - remoteVideoView . setVisibility ( View . VISIBLE ) ; 
 - avatarView . setVisibility ( View . INVISIBLE ) ; 
 - nameTV . setVisibility ( View . INVISIBLE ) ; 
 - } 
 - 
 - } 
 - } ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void onStreamRemoved ( WebRTCMediaStream stream ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onOwnStreamAdded ( WebRTCMediaStream ownStream ) { 
 - AndroidMediaStream stream = ( AndroidMediaStream ) ownStream ; 
 - if ( stream . getVideoTrack ( ) ! = null ) { 
 - 
 - 
 - getActivity ( ) . runOnUiThread ( ( ) - > { 
 - try { 
 - localVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; 
 - } catch ( IllegalStateException e ) { 
 - / / Already inited , it ' s ok here 
 - } 
 - source = stream . getVideoSource ( ) ; 
 - localRender = new VideoRenderer ( localVideoView ) ; 
 - stream . getVideoTrack ( ) . addRenderer ( localRender ) ; 
 - localVideoView . setVisibility ( View . VISIBLE ) ; 
 - 
 - } ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onRenegotiationNeeded ( ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onDisposed ( ) { 
 - 
 - } 
 - } ; 
 } else { 
 if ( call ! = null ) { 
 if ( call . getIsVideoEnabled ( ) . get ( ) ) { 
 @ @ - 528 , 6 + 454 , 53 @ @ public class CallFragment extends BaseFragment { 
 messenger ( ) . answerCall ( callId ) ; 
 } 
 
 + public void onStreamAdded ( WebRTCMediaStream remoteStream ) { 
 + AndroidMediaStream stream = ( AndroidMediaStream ) remoteStream ; 
 + if ( stream . getVideoTrack ( ) ! = null ) { 
 + 
 + getActivity ( ) . runOnUiThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + if ( ! remoteRendererBinded ) { 
 + try { 
 + remoteVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; 
 + } catch ( IllegalStateException e ) { 
 + / / Already inited , it ' s ok here 
 + } 
 + 
 + remoteRender = new VideoRenderer ( remoteVideoView ) ; 
 + stream . getVideoTrack ( ) . addRenderer ( remoteRender ) ; 
 + remoteVideoView . setVisibility ( View . VISIBLE ) ; 
 + avatarView . setVisibility ( View . INVISIBLE ) ; 
 + nameTV . setVisibility ( View . INVISIBLE ) ; 
 + } 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + 
 + public void onOwnStreamAdded ( WebRTCMediaStream ownStream ) { 
 + AndroidMediaStream stream = ( AndroidMediaStream ) ownStream ; 
 + if ( stream . getVideoTrack ( ) ! = null ) { 
 + 
 + 
 + getActivity ( ) . runOnUiThread ( ( ) - > { 
 + try { 
 + localVideoView . init ( rootEglBase . getEglBaseContext ( ) , null ) ; 
 + } catch ( IllegalStateException e ) { 
 + / / Already inited , it ' s ok here 
 + } 
 + CallFragment . this . ownStream = ( AndroidMediaStream ) ownStream ; 
 + source = stream . getVideoSource ( ) ; 
 + localRender = new VideoRenderer ( localVideoView ) ; 
 + stream . getVideoTrack ( ) . addRenderer ( localRender ) ; 
 + localVideoView . setVisibility ( View . VISIBLE ) ; 
 + 
 + } ) ; 
 + } 
 + } 
 + 
 private void doEndCall ( ) { 
 messenger ( ) . endCall ( callId ) ; 
 onCallEnd ( ) ; 
 @ @ - 618 , 22 + 591 , 16 @ @ public class CallFragment extends BaseFragment { 
 
 
 if ( call ! = null ) { 
 - ArrayList < WebRTCPeerConnection > webRTCPeerConnections = call . getPeerConnection ( ) . get ( ) ; 
 - 
 - for ( WebRTCPeerConnection webRTCPeerConnection : webRTCPeerConnections ) { 
 
 - webRTCPeerConnection . removeCallback ( webRTCPeerConnectionCallback ) ; 
 - 
 - HashMap < MediaStream , AndroidMediaStream > mediaStreams = ( ( AndroidPeerConnection ) webRTCPeerConnection ) . getStreams ( ) ; 
 - for ( MediaStream mediaStream : mediaStreams . keySet ( ) ) { 
 - mediaStreams . get ( mediaStream ) . removeRenderer ( remoteRender ) ; 
 - } 
 + for ( AndroidMediaStream s : mediaStreams ) { 
 + s . removeRenderer ( remoteRender ) ; 
 remoteRendererBinded = false ; 
 + } 
 + mediaStreams . clear ( ) ; 
 
 - AndroidMediaStream stream = ( ( AndroidPeerConnection ) webRTCPeerConnection ) . getLocalStream ( ) ; 
 - if ( stream ! = null ) { 
 - stream . removeRenderer ( localRender ) ; 
 - } 
 + if ( ownStream ! = null ) { 
 + ownStream . removeRenderer ( localRender ) ; 
 + ownStream = null ; 
 } 
 
 } 
 @ @ - 680 , 9 + 647 , 22 @ @ public class CallFragment extends BaseFragment { 
 if ( call ! = null ) { 
 
 if ( peer . getPeerType ( ) = = PeerType . PRIVATE & & ActorSDK . sharedActor ( ) . isVideoCallsEnabled ( ) ) { 
 - bind ( call . getPeerConnection ( ) , ( val , valueModel ) - > { 
 - for ( WebRTCPeerConnection webRTCPeerConnection : val ) { 
 - webRTCPeerConnection . addCallback ( webRTCPeerConnectionCallback ) ; 
 + bind ( call . getMediaStreams ( ) , ( val , valueModel ) - > { 
 + mediaStreams . retainAll ( val ) ; 
 + for ( WebRTCMediaStream s : val ) { 
 + if ( ! mediaStreams . contains ( s ) ) { 
 + onStreamAdded ( s ) ; 
 + mediaStreams . add ( ( AndroidMediaStream ) s ) ; 
 + } 
 + } 
 + } ) ; 
 + 
 + bind ( call . getOwnMediaStream ( ) , new ValueChangedListener < WebRTCMediaStream > ( ) { 
 + @ Override 
 + public void onChanged ( WebRTCMediaStream val , Value < WebRTCMediaStream > valueModel ) { 
 + if ( val ! = null ) { 
 + onOwnStreamAdded ( val ) ; 
 + } 
 } 
 } ) ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 744b737 . . b2f742d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 8 , 8 + 8 , 6 @ @ import im . actor . core . api . rpc . RequestDoCall ; 
 import im . actor . core . api . rpc . RequestGetCallInfo ; 
 import im . actor . core . api . rpc . RequestJoinCall ; 
 import im . actor . core . api . rpc . RequestRejectCall ; 
 - import im . actor . core . api . rpc . ResponseDoCall ; 
 - import im . actor . core . api . rpc . ResponseGetCallInfo ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . calls . peers . AbsCallActor ; 
 @ @ - 18 , 8 + 16 , 8 @ @ import im . actor . core . viewmodel . CallState ; 
 import im . actor . core . viewmodel . CallVM ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . runtime . actors . messages . PoisonPill ; 
 - import im . actor . runtime . function . Consumer ; 
 import im . actor . runtime . power . WakeLock ; 
 + import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 import im . actor . runtime . webrtc . WebRTCPeerConnection ; 
 
 import static im . actor . core . entity . EntityConverter . convert ; 
 @ @ - 94 , 9 + 92 , 34 @ @ public class CallActor extends AbsCallActor { 
 
 @ Override 
 public void onPeerConnectionCreated ( @ NotNull WebRTCPeerConnection peerConnection ) { 
 - ArrayList < WebRTCPeerConnection > webRTCPeerConnections = new ArrayList < > ( callVM . getPeerConnection ( ) . get ( ) ) ; 
 + ArrayList < WebRTCPeerConnection > webRTCPeerConnections = new ArrayList < > ( callVM . getPeerConnections ( ) . get ( ) ) ; 
 webRTCPeerConnections . add ( peerConnection ) ; 
 - callVM . getPeerConnection ( ) . change ( webRTCPeerConnections ) ; 
 + callVM . getPeerConnections ( ) . change ( webRTCPeerConnections ) ; 
 + } 
 + 
 + @ Override 
 + public void onStreamAdded ( WebRTCMediaStream stream ) { 
 + ArrayList < WebRTCMediaStream > mediaStreams = new ArrayList < > ( callVM . getMediaStreams ( ) . get ( ) ) ; 
 + mediaStreams . add ( stream ) ; 
 + callVM . getMediaStreams ( ) . change ( mediaStreams ) ; 
 + } 
 + 
 + @ Override 
 + public void onStreamRemoved ( WebRTCMediaStream stream ) { 
 + ArrayList < WebRTCMediaStream > mediaStreams = new ArrayList < > ( callVM . getMediaStreams ( ) . get ( ) ) ; 
 + if ( mediaStreams . remove ( stream ) ) { 
 + callVM . getMediaStreams ( ) . change ( mediaStreams ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + callVM . getOwnMediaStream ( ) . change ( stream ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + callVM . getOwnMediaStream ( ) . change ( null ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 index e037be4 . . 2358e38 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import im . actor . runtime . WebRTC ; 
 import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 import im . actor . runtime . webrtc . WebRTCPeerConnection ; 
 
 public abstract class AbsCallActor extends ModuleActor implements CallBusCallback { 
 @ @ - 109 , 5 + 110 , 25 @ @ public abstract class AbsCallActor extends ModuleActor implements CallBusCallbac 
 public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { 
 self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onPeerConnectionCreated ( peerConnection ) ) ; 
 } 
 + 
 + @ Override 
 + public void onStreamAdded ( WebRTCMediaStream stream ) { 
 + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onStreamAdded ( stream ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onStreamRemoved ( WebRTCMediaStream stream ) { 
 + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onStreamRemoved ( stream ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onOwnStreamAdded ( stream ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + self ( ) . send ( ( Runnable ) ( ) - > AbsCallActor . this . onOwnStreamRemoved ( stream ) ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index ef832fb . . 92b4477 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 19 , 8 + 19 , 6 @ @ import im . actor . core . api . ApiWebRTCSignaling ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . eventbus . EventBusActor ; 
 import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 import im . actor . runtime . webrtc . WebRTCPeerConnection ; 
 @ @ - 118 , 11 + 116 , 12 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 
 @ Override 
 public void onStreamAdded ( long deviceId , @ NotNull WebRTCMediaStream stream ) { 
 - 
 + callBusCallback . onStreamAdded ( stream ) ; 
 } 
 
 @ Override 
 public void onStreamRemoved ( long deviceId , @ NotNull WebRTCMediaStream stream ) { 
 + callBusCallback . onStreamRemoved ( stream ) ; 
 
 } 
 
 @ @ - 131 , 6 + 130 , 16 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 callBusCallback . onPeerConnectionCreated ( peerConnection ) ; 
 } 
 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + callBusCallback . onOwnStreamAdded ( stream ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + callBusCallback . onOwnStreamRemoved ( stream ) ; 
 + } 
 + 
 
 / / 
 / / Actions 
 @ @ - 375 , 5 + 384 , 15 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 self ( ) . send ( ( Runnable ) ( ) - > callCallback . onPeerConnectionCreated ( peerConnection ) ) ; 
 
 } 
 + 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + self ( ) . send ( ( Runnable ) ( ) - > callCallback . onOwnStreamAdded ( stream ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + self ( ) . send ( ( Runnable ) ( ) - > callCallback . onOwnStreamRemoved ( stream ) ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 index f94a823 . . e68092b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package im . actor . core . modules . calls . peers ; 
 
 import org . jetbrains . annotations . NotNull ; 
 
 + import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 import im . actor . runtime . webrtc . WebRTCPeerConnection ; 
 
 public interface CallBusCallback { 
 @ @ - 15 , 4 + 16 , 12 @ @ public interface CallBusCallback { 
 void onBusStopped ( ) ; 
 
 void onPeerConnectionCreated ( @ NotNull WebRTCPeerConnection peerConnection ) ; 
 + 
 + void onStreamAdded ( WebRTCMediaStream stream ) ; 
 + 
 + void onStreamRemoved ( WebRTCMediaStream stream ) ; 
 + 
 + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; 
 + 
 + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 index 5877c94 . . 11bf8ed 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 @ @ - 286 , 5 + 286 , 15 @ @ public class PeerCallActor extends ModuleActor { 
 public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { 
 callback . onPeerConnectionCreated ( peerConnection ) ; 
 } 
 + 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + callback . onOwnStreamAdded ( stream ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + callback . onOwnStreamRemoved ( stream ) ; 
 + } 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java 
 index 0382386 . . 3753ced 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java 
 @ @ - 20 , 4 + 20 , 8 @ @ public interface PeerCallCallback { 
 void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) ; 
 
 void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) ; 
 + 
 + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; 
 + 
 + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index 115a35f . . d36b519 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 107 , 12 + 107 , 12 @ @ public class PeerConnectionActor extends ModuleActor { 
 
 @ Override 
 public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 - 
 + callback . onOwnStreamAdded ( stream ) ; 
 } 
 
 @ Override 
 public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 - 
 + callback . onOwnStreamRemoved ( stream ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java 
 index c3565b6 . . 5fe0d81 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java 
 @ @ - 51 , 4 + 51 , 8 @ @ public interface PeerConnectionCallback { 
 void onStreamRemoved ( WebRTCMediaStream stream ) ; 
 
 void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) ; 
 + 
 + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; 
 + 
 + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java 
 index a1c6e11 . . 0b10f62 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java 
 @ @ - 133 , 5 + 133 , 15 @ @ public class PeerConnectionInt extends ActorInterface { 
 public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { 
 callbackDest . send ( ( Runnable ) ( ) - > callback . onPeerConnectionCreated ( peerConnection ) ) ; 
 } 
 + 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamAdded ( stream ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamRemoved ( stream ) ) ; 
 + } 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 index 4f8920b . . 62dc0b7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 @ @ - 196 , 6 + 196 , 16 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 callback . onPeerConnectionCreated ( peerConnection ) ; 
 } 
 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + callback . onOwnStreamAdded ( stream ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + callback . onOwnStreamRemoved ( stream ) ; 
 + } 
 + 
 
 public void onCloseSession ( long sessionId ) { 
 if ( ! closedSessions . contains ( sessionId ) ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java 
 index fabfcf6 . . 09894ff 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java 
 @ @ - 70 , 4 + 70 , 8 @ @ public interface PeerNodeCallback { 
 void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) ; 
 
 void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) ; 
 + 
 + void onOwnStreamAdded ( WebRTCMediaStream stream ) ; 
 + 
 + void onOwnStreamRemoved ( WebRTCMediaStream stream ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java 
 index ec6f301 . . ae6b1c4 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java 
 @ @ - 171 , 5 + 171 , 15 @ @ public class PeerNodeInt extends ActorInterface { 
 public void onPeerConnectionCreated ( WebRTCPeerConnection peerConnection ) { 
 callbackDest . send ( ( Runnable ) ( ) - > callback . onPeerConnectionCreated ( peerConnection ) ) ; 
 } 
 + 
 + @ Override 
 + public void onOwnStreamAdded ( WebRTCMediaStream stream ) { 
 + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamAdded ( stream ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onOwnStreamRemoved ( WebRTCMediaStream stream ) { 
 + callbackDest . send ( ( Runnable ) ( ) - > callback . onOwnStreamRemoved ( stream ) ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java 
 index 728f4b2 . . 5d8133e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / CallVM . java 
 @ @ - 6 , 11 + 6 , 8 @ @ import java . util . ArrayList ; 
 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . viewmodel . generics . BooleanValueModel ; 
 - import im . actor . core . viewmodel . generics . IntValueModel ; 
 - import im . actor . runtime . * ; 
 - import im . actor . runtime . actors . ActorTime ; 
 import im . actor . runtime . mvvm . ValueModel ; 
 - import im . actor . runtime . threading . CommonTimer ; 
 + import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 import im . actor . runtime . webrtc . WebRTCPeerConnection ; 
 
 public class CallVM { 
 @ @ - 22 , 7 + 19 , 11 @ @ public class CallVM { 
 @ Property ( " nonatomic , readonly " ) 
 private final ValueModel < CallState > state ; 
 @ Property ( " nonatomic , readonly " ) 
 - private final ValueModel < ArrayList < WebRTCPeerConnection > > peerConnection ; 
 + private final ValueModel < ArrayList < WebRTCPeerConnection > > peerConnections ; 
 + @ Property ( " nonatomic , readonly " ) 
 + private final ValueModel < ArrayList < WebRTCMediaStream > > mediaStreams ; 
 + @ Property ( " nonatomic , readonly " ) 
 + private final ValueModel < WebRTCMediaStream > ownMediaStream ; 
 @ Property ( " nonatomic , readonly " ) 
 private final ValueModel < ArrayList < CallMember > > members ; 
 @ Property ( " nonatomic , readonly " ) 
 @ @ - 41 , 7 + 42 , 9 @ @ public class CallVM { 
 this . peer = peer ; 
 this . isOutgoing = isOutgoing ; 
 this . state = new ValueModel < > ( " calls . " + callId + " . state " , state ) ; 
 - this . peerConnection = new ValueModel < > ( " calls . " + callId + " . peer _ connection " , new ArrayList < > ( ) ) ; 
 + this . peerConnections = new ValueModel < > ( " calls . " + callId + " . peer _ connection " , new ArrayList < > ( ) ) ; 
 + this . mediaStreams = new ValueModel < > ( " calls . " + callId + " . media _ stram " , new ArrayList < > ( ) ) ; 
 + this . ownMediaStream = new ValueModel < > ( " calls . " + callId + " . own _ media _ stream " , null ) ; 
 this . members = new ValueModel < > ( " calls . " + callId + " . members " , new ArrayList < > ( initialMembers ) ) ; 
 this . isMuted = new BooleanValueModel ( " calls . " + callId + " . muted " , false ) ; 
 this . isVideoEnabled = new BooleanValueModel ( " calls . " + callId + " . video _ enabled " , true ) ; 
 @ @ - 92 , 7 + 95 , 15 @ @ public class CallVM { 
 this . callEnd = callEnd ; 
 } 
 
 - public ValueModel < ArrayList < WebRTCPeerConnection > > getPeerConnection ( ) { 
 - return peerConnection ; 
 + public ValueModel < ArrayList < WebRTCPeerConnection > > getPeerConnections ( ) { 
 + return peerConnections ; 
 + } 
 + 
 + public ValueModel < ArrayList < WebRTCMediaStream > > getMediaStreams ( ) { 
 + return mediaStreams ; 
 + } 
 + 
 + public ValueModel < WebRTCMediaStream > getOwnMediaStream ( ) { 
 + return ownMediaStream ; 
 } 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java 
 index b3180fd . . ed05fe8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / AbsCallActor . java 
 @ @ - 1 , 64 + 1 , 101 @ @ 
 package im . actor . core . modules . calls ; 
 
 - import java . util . ArrayList ; 
 - import java . util . HashMap ; 
 + import java . util . List ; 
 
 - import im . actor . core . entity . Group ; 
 - import im . actor . core . entity . GroupMember ; 
 - import im . actor . core . entity . Peer ; 
 - import im . actor . core . entity . PeerType ; 
 + import im . actor . core . api . ApiCallMember ; 
 import im . actor . core . modules . ModuleContext ; 
 + import im . actor . core . modules . calls . bus . CallBusActor ; 
 + import im . actor . core . modules . calls . bus . CallBusCallback ; 
 + import im . actor . core . modules . calls . bus . CallBusInt ; 
 + import im . actor . core . modules . calls . peers . PeerCallInt ; 
 + import im . actor . core . modules . calls . peers . PeerSettings ; 
 import im . actor . core . modules . eventbus . EventBusActor ; 
 - import im . actor . core . viewmodel . CallMember ; 
 - import im . actor . core . viewmodel . CallMemberState ; 
 - import im . actor . core . viewmodel . CallState ; 
 - import im . actor . core . viewmodel . CallVM ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 
 - public class AbsCallActor extends EventBusActor { 
 + public abstract class AbsCallActor extends EventBusActor implements CallBusCallback { 
 
 - private final HashMap < Long , CallVM > callModels ; 
 - private CallVM callVM ; 
 + protected final PeerSettings selfSettings ; 
 + protected final CallViewModels callViewModels ; 
 + protected final ActorRef callManager ; 
 + protected CallBusInt callBus ; 
 + protected PeerCallInt peerCall ; 
 
 public AbsCallActor ( ModuleContext context ) { 
 super ( context ) ; 
 
 - callModels = context ( ) . getCallsModule ( ) . getCallModels ( ) ; 
 + this . callManager = context . getCallsModule ( ) . getCallManager ( ) ; 
 + this . callViewModels = context ( ) . getCallsModule ( ) . getCallViewModels ( ) ; 
 + this . selfSettings = new PeerSettings ( ) ; 
 + this . selfSettings . setIsPreConnectionEnabled ( true ) ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + super . preStart ( ) ; 
 + callBus = new CallBusInt ( system ( ) . actorOf ( getPath ( ) + " / bus " , new ActorCreator ( ) { 
 + @ Override 
 + public Actor create ( ) { 
 + return new CallBusActor ( new CallBusCallbackWrapper ( ) , selfSettings , context ( ) ) ; 
 + } 
 + } ) ) ; 
 + } 
 + 
 + @ Override 
 + public final void onBusCreated ( PeerCallInt peerCallInt ) { 
 + this . peerCall = peerCallInt ; 
 + callPreStart ( ) ; 
 + } 
 + 
 + public void callPreStart ( ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onBusStarted ( String busId ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onMembersChanged ( List < ApiCallMember > members ) { 
 + 
 } 
 
 / / 
 - / / Call Model helpers 
 + / / Wrapper 
 / / 
 - public CallVM spawnNewVM ( long callId , Peer peer , boolean isOutgoing , ArrayList < CallMember > members , CallState callState ) { 
 - CallVM callVM = new CallVM ( callId , peer , isOutgoing , members , callState ) ; 
 - / / callVM . getIsMuted ( ) . change ( isMuted ( ) ) ; 
 - synchronized ( callModels ) { 
 - callModels . put ( callId , callVM ) ; 
 + 
 + private class CallBusCallbackWrapper implements CallBusCallback { 
 + 
 + @ Override 
 + public void onBusCreated ( final PeerCallInt peerCallInt ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onBusCreated ( peerCallInt ) ; 
 + } 
 + } ) ; 
 } 
 - this . callVM = callVM ; 
 - return callVM ; 
 - } 
 
 - public CallVM spanNewOutgoingVM ( long callId , Peer peer ) { 
 - ArrayList < CallMember > members = new ArrayList < > ( ) ; 
 - if ( peer . getPeerType ( ) = = PeerType . PRIVATE | | 
 - peer . getPeerType ( ) = = PeerType . PRIVATE _ ENCRYPTED ) { 
 - members . add ( new CallMember ( peer . getPeerId ( ) , CallMemberState . RINGING ) ) ; 
 - } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 - Group g = getGroup ( peer . getPeerId ( ) ) ; 
 - for ( GroupMember gm : g . getMembers ( ) ) { 
 - if ( gm . getUid ( ) ! = myUid ( ) ) { 
 - members . add ( new CallMember ( gm . getUid ( ) , CallMemberState . RINGING ) ) ; 
 + @ Override 
 + public void onBusStarted ( final String busId ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onBusStarted ( busId ) ; 
 } 
 - } 
 + } ) ; 
 } 
 - return spawnNewVM ( callId , peer , true , members , CallState . RINGING ) ; 
 - } 
 
 - / / @ Override 
 - / / public void onMute ( boolean isMuted ) { 
 - / / super . onMute ( isMuted ) ; 
 - / / if ( callVM ! = null ) { 
 - / / callVM . getIsMuted ( ) . change ( isMuted ) ; 
 - / / } 
 - / / } 
 + @ Override 
 + public void onMembersChanged ( final List < ApiCallMember > members ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onMembersChanged ( members ) ; 
 + } 
 + } ) ; 
 + } 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index e8f614d . . e3ac82b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . core . modules . calls ; 
 
 + import java . util . ArrayList ; 
 import java . util . List ; 
 
 import im . actor . core . api . ApiAdvertiseSelf ; 
 @ @ - 9 , 125 + 10 , 92 @ @ import im . actor . core . api . rpc . RequestGetCallInfo ; 
 import im . actor . core . api . rpc . ResponseGetCallInfo ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . modules . ModuleContext ; 
 - import im . actor . core . modules . calls . bus . CallBusActor ; 
 - import im . actor . core . modules . calls . bus . CallBusCallbackSlave ; 
 - import im . actor . core . modules . calls . bus . CallBusInt ; 
 - import im . actor . core . modules . calls . peers . PeerCallInt ; 
 - import im . actor . core . modules . calls . peers . PeerSettings ; 
 - import im . actor . core . util . ModuleActor ; 
 + import im . actor . core . viewmodel . CallMember ; 
 + import im . actor . core . viewmodel . CallState ; 
 import im . actor . core . viewmodel . CallVM ; 
 - import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 - import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . messages . PoisonPill ; 
 import im . actor . runtime . function . Consumer ; 
 
 import static im . actor . core . modules . internal . messages . entity . EntityConverter . convert ; 
 
 - public class CallActor extends ModuleActor implements CallBusCallbackSlave { 
 + public class CallActor extends AbsCallActor { 
 
 private static final String TAG = " CallActor " ; 
 
 - private CallBusInt callBusInt ; 
 - private PeerCallInt peerCallInt ; 
 - private final ActorRef callManager ; 
 private final long callId ; 
 - private final PeerSettings selfSettings ; 
 
 private Peer peer ; 
 private CallVM callVM ; 
 
 - private boolean isMasterReady ; 
 - private int masterUid ; 
 - private long masterDeviceId ; 
 - 
 private boolean isConnected ; 
 private boolean isAnswered ; 
 private boolean isRejected ; 
 
 public CallActor ( long callId , ModuleContext context ) { 
 super ( context ) ; 
 - 
 this . callId = callId ; 
 - this . callManager = context . getCallsModule ( ) . getCallManager ( ) ; 
 this . isAnswered = false ; 
 this . isConnected = false ; 
 - this . selfSettings = new PeerSettings ( ) ; 
 - this . selfSettings . setIsPreConnectionEnabled ( true ) ; 
 - } 
 - 
 - @ Override 
 - public void preStart ( ) { 
 - super . preStart ( ) ; 
 - 
 - 
 - callBusInt = new CallBusInt ( system ( ) . actorOf ( getPath ( ) + " / bus " , new ActorCreator ( ) { 
 - @ Override 
 - public Actor create ( ) { 
 - return new CallBusActor ( new CallbackWrapper ( ) , selfSettings , context ( ) ) ; 
 - } 
 - } ) ) ; 
 } 
 
 @ Override 
 - public void onBusCreated ( PeerCallInt peerCallInt ) { 
 - this . peerCallInt = peerCallInt ; 
 - 
 + public void callPreStart ( ) { 
 api ( new RequestGetCallInfo ( callId ) ) . then ( new Consumer < ResponseGetCallInfo > ( ) { 
 @ Override 
 public void apply ( final ResponseGetCallInfo responseGetCallInfo ) { 
 peer = convert ( responseGetCallInfo . getPeer ( ) ) ; 
 - callBusInt . joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; 
 + callBus . joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; 
 + callVM = callViewModels . spawnNewIncomingVM ( callId , peer , CallState . RINGING ) ; 
 } 
 } ) . failure ( new Consumer < Exception > ( ) { 
 @ Override 
 public void apply ( Exception e ) { 
 - 
 + self ( ) . send ( PoisonPill . INSTANCE ) ; 
 } 
 } ) . done ( self ( ) ) ; 
 } 
 
 @ Override 
 public void onBusStarted ( String busId ) { 
 + super . onBusStarted ( busId ) ; 
 
 + callManager . send ( new CallManagerActor . OnIncomingCall ( callId ) ) ; 
 } 
 
 @ Override 
 - public void onMasterSwitched ( int uid , long deviceId ) { 
 - if ( isMasterReady ) { 
 - return ; 
 - } 
 - 
 - Log . d ( TAG , " onMasterSwitched " ) ; 
 - 
 - isMasterReady = true ; 
 - masterUid = uid ; 
 - masterDeviceId = deviceId ; 
 - callBusInt . sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; 
 - unstashAll ( ) ; 
 - 
 - schedule ( new AnswerCall ( ) , 1000 ) ; 
 + public void onMembersChanged ( List < ApiCallMember > members ) { 
 + / / 
 + / / Handle Members Update 
 + / / 
 } 
 
 - @ Override 
 - public void onMembersChanged ( List < ApiCallMember > members ) { 
 - Log . d ( TAG , " onMembersChanged " ) ; 
 + public void onAnswerCall ( ) { 
 + if ( ! isAnswered & & ! isRejected ) { 
 + isAnswered = true ; 
 + callBus . answerCall ( ) ; 
 + peerCall . onOwnStarted ( ) ; 
 
 + } 
 } 
 
 - public void onAnswerCall ( ) { 
 - callBusInt . sendSignal ( masterUid , masterDeviceId , new ApiAnswerCall ( ) ) ; 
 - peerCallInt . onOwnStarted ( ) ; 
 + public void onRejectCall ( ) { 
 + if ( ! isAnswered & & ! isRejected ) { 
 + isRejected = true ; 
 + callBus . rejectCall ( ) ; 
 + peerCall . kill ( ) ; 
 + } 
 } 
 
 + / / 
 + / / Messages 
 + / / 
 + 
 @ Override 
 public void onReceive ( Object message ) { 
 if ( message instanceof AnswerCall ) { 
 - if ( ! isMasterReady ) { 
 - stash ( ) ; 
 - return ; 
 - } 
 onAnswerCall ( ) ; 
 + } else if ( message instanceof RejectCall ) { 
 + onRejectCall ( ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 @ @ - 137 , 64 + 105 , 7 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { 
 
 } 
 
 - public class CallbackWrapper implements CallBusCallbackSlave { 
 + public static class RejectCall { 
 
 - @ Override 
 - public void onMasterSwitched ( final int uid , final long deviceId ) { 
 - self ( ) . send ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - CallActor . this . onMasterSwitched ( uid , deviceId ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public void onMembersChanged ( final List < ApiCallMember > members ) { 
 - self ( ) . send ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - CallActor . this . onMembersChanged ( members ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public void onBusCreated ( final PeerCallInt peerCallInt ) { 
 - self ( ) . send ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - CallActor . this . onBusCreated ( peerCallInt ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public void onBusStarted ( final String busId ) { 
 - self ( ) . send ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - CallActor . this . onBusStarted ( busId ) ; 
 - } 
 - } ) ; 
 - } 
 } 
 - 
 - / / @ Override 
 - / / public void onSignalingStarted ( ) { 
 - / / 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onSignal ( int uid , long deviceId , ApiWebRTCSignaling signal ) { 
 - / / if ( signal instanceof ApiSwitchMaster ) { 
 - / / 
 - / / } 
 - / / Log . d ( TAG , " onSignal : " + signal ) ; 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onSignalingStopped ( ) { 
 - / / 
 - / / } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallViewModels . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallViewModels . java 
 new file mode 100644 
 index 0000000 . . 3dd3942 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallViewModels . java 
 @ @ - 0 , 0 + 1 , 61 @ @ 
 + package im . actor . core . modules . calls ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . HashMap ; 
 + 
 + import im . actor . core . entity . Group ; 
 + import im . actor . core . entity . GroupMember ; 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . entity . PeerType ; 
 + import im . actor . core . modules . ModuleContext ; 
 + import im . actor . core . viewmodel . CallMember ; 
 + import im . actor . core . viewmodel . CallMemberState ; 
 + import im . actor . core . viewmodel . CallState ; 
 + import im . actor . core . viewmodel . CallVM ; 
 + 
 + public class CallViewModels { 
 + 
 + private final HashMap < Long , CallVM > callModels ; 
 + private final ModuleContext context ; 
 + 
 + public CallViewModels ( ModuleContext context ) { 
 + this . context = context ; 
 + this . callModels = new HashMap < > ( ) ; 
 + } 
 + 
 + public synchronized CallVM getCall ( long id ) { 
 + return callModels . get ( id ) ; 
 + } 
 + 
 + public synchronized CallVM spawnNewVM ( long callId , Peer peer , boolean isOutgoing , ArrayList < CallMember > members , CallState callState ) { 
 + CallVM callVM = new CallVM ( callId , peer , isOutgoing , members , callState ) ; 
 + synchronized ( callModels ) { 
 + callModels . put ( callId , callVM ) ; 
 + } 
 + return callVM ; 
 + } 
 + 
 + public synchronized CallVM spawnNewIncomingVM ( long callId , Peer peer , CallState callState ) { 
 + CallVM callVM = new CallVM ( callId , peer , false , new ArrayList < CallMember > ( ) , callState ) ; 
 + synchronized ( callModels ) { 
 + callModels . put ( callId , callVM ) ; 
 + } 
 + return callVM ; 
 + } 
 + 
 + public synchronized CallVM spawnNewOutgoingVM ( long callId , Peer peer ) { 
 + ArrayList < CallMember > members = new ArrayList < > ( ) ; 
 + if ( peer . getPeerType ( ) = = PeerType . PRIVATE | | 
 + peer . getPeerType ( ) = = PeerType . PRIVATE _ ENCRYPTED ) { 
 + members . add ( new CallMember ( peer . getPeerId ( ) , CallMemberState . RINGING ) ) ; 
 + } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 + Group g = context . getGroupsModule ( ) . getGroups ( ) . getValue ( peer . getPeerId ( ) ) ; 
 + for ( GroupMember gm : g . getMembers ( ) ) { 
 + if ( gm . getUid ( ) ! = context . getAuthModule ( ) . myUid ( ) ) { 
 + members . add ( new CallMember ( gm . getUid ( ) , CallMemberState . RINGING ) ) ; 
 + } 
 + } 
 + } 
 + return spawnNewVM ( callId , peer , true , members , CallState . RINGING ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java 
 index a6664fc . . acdbf99 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java 
 @ @ - 19 , 28 + 19 , 28 @ @ public class CallsModule extends AbsModule { 
 
 private CallsProvider provider ; 
 private ActorRef callManager ; 
 - private HashMap < Long , CallVM > callModels = new HashMap < > ( ) ; 
 + private CallViewModels callViewModels ; 
 
 public CallsModule ( ModuleContext context ) { 
 super ( context ) ; 
 
 provider = context ( ) . getConfiguration ( ) . getCallsProvider ( ) ; 
 + callViewModels = new CallViewModels ( context ( ) ) ; 
 } 
 
 public void run ( ) { 
 if ( provider = = null ) { 
 return ; 
 } 
 - 
 callManager = system ( ) . actorOf ( " calls / manager " , CallManagerActor . CONSTRUCTOR ( context ( ) ) ) ; 
 } 
 
 - public HashMap < Long , CallVM > getCallModels ( ) { 
 - return callModels ; 
 + public CallViewModels getCallViewModels ( ) { 
 + return callViewModels ; 
 } 
 
 public CallVM getCall ( long id ) { 
 - return callModels . get ( id ) ; 
 + return callViewModels . getCall ( id ) ; 
 } 
 
 public ActorRef getCallManager ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java 
 index 6286caf . . 868ea55 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import org . jetbrains . annotations . Nullable ; 
 import java . io . IOException ; 
 import java . util . HashMap ; 
 
 + import im . actor . core . api . ApiAdvertiseSelf ; 
 import im . actor . core . api . ApiAnswer ; 
 import im . actor . core . api . ApiCandidate ; 
 import im . actor . core . api . ApiMembersChanged ; 
 @ @ - 27 , 10 + 28 , 15 @ @ import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 
 public class CallBusActor extends EventBusActor { 
 
 + private static final int STASH = 1 ; 
 + 
 private HashMap < Long , Integer > deviceIds = new HashMap < > ( ) ; 
 private final PeerSettings selfSettings ; 
 private final PeerCallCallback peerCallback ; 
 private final CallBusCallback callBusCallback ; 
 + private boolean isMasterReady ; 
 + private int masterUid ; 
 + private long masterDeviceId ; 
 private PeerCallInt peerCall ; 
 
 public CallBusActor ( CallBusCallback callBusCallback , PeerSettings selfSettings , ModuleContext context ) { 
 @ @ - 55 , 6 + 61 , 11 @ @ public class CallBusActor extends EventBusActor { 
 } 
 
 @ Override 
 + public void onHandshakeSuccessful ( long deviceId ) { 
 + 
 + } 
 + 
 + @ Override 
 public void onConnectionStarted ( long deviceId ) { 
 
 } 
 @ @ - 98 , 6 + 109 , 10 @ @ public class CallBusActor extends EventBusActor { 
 callBusCallback . onBusStarted ( getBusId ( ) ) ; 
 } 
 
 + public void onAnswerCall ( ) { 
 + 
 + } 
 + 
 @ Override 
 public final void onMessageReceived ( @ Nullable Integer senderId , @ Nullable Long senderDeviceId , byte [ ] data ) { 
 if ( senderId = = null | | senderDeviceId = = null ) { 
 @ @ - 139 , 18 + 154 , 27 @ @ public class CallBusActor extends EventBusActor { 
 ApiOnAnswer onAnswer = ( ApiOnAnswer ) signal ; 
 deviceIds . put ( onAnswer . getDevice ( ) , onAnswer . getUid ( ) ) ; 
 peerCall . onTheirStarted ( onAnswer . getDevice ( ) ) ; 
 - } else { 
 - if ( callBusCallback instanceof CallBusCallbackSlave ) { 
 - CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; 
 - if ( signal instanceof ApiSwitchMaster ) { 
 - slaveCallback . onMasterSwitched ( senderId , senderDeviceId ) ; 
 - } else if ( signal instanceof ApiMembersChanged ) { 
 - ApiMembersChanged membersChanged = ( ApiMembersChanged ) signal ; 
 - slaveCallback . onMembersChanged ( membersChanged . getAllMembers ( ) ) ; 
 - } 
 - } else { 
 - / / Nothing ? 
 + } else if ( signal instanceof ApiSwitchMaster ) { 
 + if ( isMasterReady ) { 
 + return ; 
 } 
 + isMasterReady = true ; 
 + masterUid = senderId ; 
 + masterDeviceId = senderDeviceId ; 
 + unstashAll ( STASH ) ; 
 + sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; 
 + } else { 
 + / / if ( callBusCallback instanceof CallBusCallbackSlave ) { 
 + / / CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; 
 + / / if ( signal instanceof ApiSwitchMaster ) { 
 + / / slaveCallback . onMasterSwitched ( senderId , senderDeviceId ) ; 
 + / / } else if ( signal instanceof ApiMembersChanged ) { 
 + / / ApiMembersChanged membersChanged = ( ApiMembersChanged ) signal ; 
 + / / slaveCallback . onMembersChanged ( membersChanged . getAllMembers ( ) ) ; 
 + / / } 
 + / / } else { 
 + / / / / Nothing ? 
 + / / } 
 } 
 } 
 
 @ @ - 177 , 6 + 201 , 11 @ @ public class CallBusActor extends EventBusActor { 
 } else if ( message instanceof SendSignal ) { 
 SendSignal signal = ( SendSignal ) message ; 
 sendSignal ( signal . getUid ( ) , signal . getDeviceId ( ) , signal . getSignal ( ) ) ; 
 + } else if ( message instanceof AnswerCall ) { 
 + if ( ! isMasterReady ) { 
 + stash ( STASH ) ; 
 + } 
 + onAnswerCall ( ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 @ @ - 224 , 6 + 253 , 14 @ @ public class CallBusActor extends EventBusActor { 
 } 
 } 
 
 + public static class AnswerCall { 
 + 
 + } 
 + 
 + public static class RejectCall { 
 + 
 + } 
 + 
 public class CallbackWrapper implements PeerCallCallback { 
 
 private final PeerCallCallback callCallback ; 
 @ @ - 263 , 6 + 300 , 16 @ @ public class CallBusActor extends EventBusActor { 
 } 
 
 @ Override 
 + public void onHandshakeSuccessful ( final long deviceId ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callCallback . onHandshakeSuccessful ( deviceId ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 public void onConnectionStarted ( final long deviceId ) { 
 self ( ) . send ( new Runnable ( ) { 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java 
 index d830a7a . . 258f807 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallback . java 
 @ @ - 1 , 9 + 1 , 15 @ @ 
 package im . actor . core . modules . calls . bus ; 
 
 + import java . util . List ; 
 + 
 + import im . actor . core . api . ApiCallMember ; 
 import im . actor . core . modules . calls . peers . PeerCallInt ; 
 
 public interface CallBusCallback { 
 + 
 void onBusCreated ( PeerCallInt peerCallInt ) ; 
 
 void onBusStarted ( String busId ) ; 
 + 
 + void onMembersChanged ( List < ApiCallMember > members ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallbackSlave . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallbackSlave . java 
 deleted file mode 100644 
 index 9bdc718 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusCallbackSlave . java 
 + + + / dev / null 
 @ @ - 1 , 11 + 0 , 0 @ @ 
 - package im . actor . core . modules . calls . bus ; 
 - 
 - import java . util . List ; 
 - 
 - import im . actor . core . api . ApiCallMember ; 
 - 
 - public interface CallBusCallbackSlave extends CallBusCallback { 
 - void onMasterSwitched ( int uid , long deviceId ) ; 
 - 
 - void onMembersChanged ( List < ApiCallMember > members ) ; 
 - } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java 
 index 2a8b486 . . 1b82c74 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusInt . java 
 @ @ - 21 , 4 + 21 , 12 @ @ public class CallBusInt extends ActorInterface { 
 public void sendSignal ( int uid , long deviceId , ApiWebRTCSignaling signal ) { 
 send ( new CallBusActor . SendSignal ( uid , deviceId , signal ) ) ; 
 } 
 + 
 + public void answerCall ( ) { 
 + send ( new CallBusActor . AnswerCall ( ) ) ; 
 + } 
 + 
 + public void rejectCall ( ) { 
 + send ( new CallBusActor . RejectCall ( ) ) ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 index b84b9f0 . . 54cc145 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 @ @ - 192 , 6 + 192 , 11 @ @ public class PeerCallActor extends ModuleActor { 
 } 
 
 @ Override 
 + public void onHandshakeSuccessful ( long deviceId ) { 
 + callback . onHandshakeSuccessful ( deviceId ) ; 
 + } 
 + 
 + @ Override 
 public void onConnectionStarted ( long deviceId ) { 
 callback . onConnectionStarted ( deviceId ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java 
 index 5740f32 . . bf25d3a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallCallback . java 
 @ @ - 10 , 6 + 10 , 8 @ @ public interface PeerCallCallback { 
 
 void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) ; 
 
 + void onHandshakeSuccessful ( long deviceId ) ; 
 + 
 void onConnectionStarted ( long deviceId ) ; 
 
 void onConnectionEstablished ( long deviceId ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index ce67492 . . bce9862 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 229 , 6 + 229 , 7 @ @ public class PeerConnectionActor extends ModuleActor { 
 } 
 
 private void onHandShakeCompleted ( ) { 
 + callback . onHandshakeSuccessful ( ) ; 
 isReady = true ; 
 isReadyForCandidates = true ; 
 state = PeerConnectionState . READY ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java 
 index d7c07c7 . . 710287b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionCallback . java 
 @ @ - 31 , 6 + 31 , 11 @ @ public interface PeerConnectionCallback { 
 void onCandidate ( int mdpIndex , String id , String sdp ) ; 
 
 / * * 
 + * Called when Answer / Offer finished successfully 
 + * / 
 + void onHandshakeSuccessful ( ) ; 
 + 
 + / * * 
 * Called when peer stream was added 
 * 
 * @ param stream added stream 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java 
 index f784b69 . . 9a1bbbc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionInt . java 
 @ @ - 113 , 6 + 113 , 16 @ @ public class PeerConnectionInt extends ActorInterface { 
 } 
 
 @ Override 
 + public void onHandshakeSuccessful ( ) { 
 + callbackDest . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onHandshakeSuccessful ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 public void onStreamAdded ( final WebRTCMediaStream stream ) { 
 callbackDest . send ( new Runnable ( ) { 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 index 337fe7d . . 0aaf20d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 @ @ - 148 , 6 + 148 , 11 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 } 
 
 @ Override 
 + public void onHandshakeSuccessful ( ) { 
 + callback . onHandshakeSuccessful ( deviceId ) ; 
 + } 
 + 
 + @ Override 
 public void onStreamAdded ( WebRTCMediaStream stream ) { 
 theirMediaStreams . add ( stream ) ; 
 stream . setEnabled ( isEnabled ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java 
 index 4f8b2c2 . . d11afa5 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeCallback . java 
 @ @ - 37 , 6 + 37 , 13 @ @ public interface PeerNodeCallback { 
 void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) ; 
 
 / * * 
 + * Called when handshake was successful 
 + * 
 + * @ param deviceId Device Id 
 + * / 
 + void onHandshakeSuccessful ( long deviceId ) ; 
 + 
 + / * * 
 * Called when connection started 
 * 
 * @ param deviceId Device Id 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java 
 index 0645618 . . 89abb45 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeInt . java 
 @ @ - 145 , 6 + 145 , 16 @ @ public class PeerNodeInt extends ActorInterface { 
 } 
 
 @ Override 
 + public void onHandshakeSuccessful ( final long deviceId ) { 
 + callbackDest . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + callback . onHandshakeSuccessful ( deviceId ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 public void onConnectionStarted ( final long deviceId ) { 
 callbackDest . send ( new Runnable ( ) { 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerState . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerState . java 
 new file mode 100644 
 index 0000000 . . 3a00ef9 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerState . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package im . actor . core . modules . calls . peers ; 
 + 
 + public enum PeerState { 
 + CONNECTING , CONNECTED , ACTIVE 
 + } 
 \ No newline at end of file
