BLEU SCORE: 0.3989486553351905

TEST MSG: feat ( scheme ) : Adding encryption package and actor push support
GENERATED MSG: feat ( scheme ) : Adding anonymous , token auth and password validation

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json < nl > index 780d4cc . . 8f07e3d 100644 < nl > - - - a / actor - sdk / sdk - api / actor . json < nl > + + + b / actor - sdk / sdk - api / actor . json < nl > @ @ - 11691 , 6 + 11691 , 50 @ @ < nl > { < nl > " type " : " rpc " , < nl > " content " : { < nl > + " name " : " RegisterActorPush " , < nl > + " header " : 2575 , < nl > + " response " : { < nl > + " type " : " reference " , < nl > + " name " : " Void " < nl > + } , < nl > + " doc " : [ < nl > + " Register Actor Push token " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " endpoint " , < nl > + " category " : " full " , < nl > + " description " : " Endpoint for push sending " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " publicKeys " , < nl > + " category " : " full " , < nl > + " description " : " Optional public keys for receiving push notifications " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : " string " , < nl > + " id " : 1 , < nl > + " name " : " endpoint " < nl > + } , < nl > + { < nl > + " type " : { < nl > + " type " : " list " , < nl > + " childType " : { < nl > + " type " : " struct " , < nl > + " childType " : " EncPublicKey " < nl > + } < nl > + } , < nl > + " id " : 2 , < nl > + " name " : " publicKeys " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " rpc " , < nl > + " content " : { < nl > " name " : " UnregisterPush " , < nl > " header " : 52 , < nl > " response " : { < nl > @ @ - 11706 , 6 + 11750 , 61 @ @ < nl > ] < nl > } , < nl > { < nl > + " title " : " Encryption " , < nl > + " package " : " encryption " , < nl > + " doc " : [ < nl > + " Package that include encryption support " , < nl > + " Key types : " , < nl > + " * Curve25519 - https : / / en . wikipedia . org / wiki / Curve25519 " < nl > + ] , < nl > + " items " : [ < nl > + { < nl > + " type " : " struct " , < nl > + " content " : { < nl > + " name " : " EncPublicKey " , < nl > + " doc " : [ < nl > + " Encryption Public Key " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " keyId " , < nl > + " category " : " full " , < nl > + " description " : " Unique key Id " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " keyType " , < nl > + " category " : " full " , < nl > + " description " : " Type of the key . Specific for each use case . " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " key " , < nl > + " category " : " compact " , < nl > + " description " : " Raw key data " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : " string " , < nl > + " id " : 1 , < nl > + " name " : " keyId " < nl > + } , < nl > + { < nl > + " type " : " string " , < nl > + " id " : 2 , < nl > + " name " : " keyType " < nl > + } , < nl > + { < nl > + " type " : " bytes " , < nl > + " id " : 3 , < nl > + " name " : " key " < nl > + } < nl > + ] < nl > + } < nl > + } < nl > + ] < nl > + } , < nl > + { < nl > " title " : " Peers " , < nl > " package " : " peers " , < nl > " doc " : [ < nl > diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > index ba38653 . . 5f97022 100644 < nl > - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > @ @ - 10093 , 6 + 10093 , 42 @ @ < nl > < ref role = " NX6Kv " node = " GBscvBBv9B " resolve = " token " / > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m6fVq " id = " 7ZzLuuoIUGN " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " RegisterActorPush " / > < nl > + < node concept = " NXeRC " id = " 7ZzLuuoIUHC " role = " 1GBnQ6 " > < nl > + < property role = " NXePf " value = " Register Actor Push token " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 7ZzLuuoIVxe " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " Endpoint for push sending " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 7ZzLuuoIUHm " resolve = " endpoint " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 7ZzLuuoJ20U " role = " 1GBnQ6 " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Optional public keys for receiving push notifications " / > < nl > + < ref role = " NX6Kv " node = " 7ZzLuuoJ20H " resolve = " publicKeys " / > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 7ZzLuuoIUHm " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " endpoint " / > < nl > + < node concept = " 2m5ndX " id = " 7ZzLuuoIUHq " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 7ZzLuuoJ20H " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 2 " / > < nl > + < property role = " TrG5h " value = " publicKeys " / > < nl > + < node concept = " 2m5nlk " id = " 7ZzLuuoJ5gy " role = " 2m7DVh " > < nl > + < node concept = " 2m5mGg " id = " 7ZzLuuoJ5gC " role = " 3GJlyp " > < nl > + < ref role = " 2m5mJy " node = " 7ZzLuuoIYMi " resolve = " EncPublicKey " / > < nl > + < / node > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 7ZzLuuoIUGO " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " A0F " / > < nl > + < / node > < nl > + < node concept = " 2m1Rp1 " id = " 7ZzLuuoIUHj " role = " 2m6efq " > < nl > + < ref role = " 2m1o9l " node = " GBscvBB6 _ K " resolve = " Void " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m6fVq " id = " GBscvBBvmU " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " UnregisterPush " / > < nl > < node concept = " Nu42z " id = " GBscvBBvmV " role = " NuuwV " > < nl > @ @ - 10106 , 6 + 10142 , 55 @ @ < nl > < / node > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m5mJO " id = " 7ZzLuuoIXbw " role = " 2m5lHt " > < nl > + < property role = " TrG5h " value = " Encryption " / > < nl > + < property role = " 3XOG $ Z " value = " encryption " / > < nl > + < node concept = " 2m5naR " id = " 7ZzLuuoIYMi " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " EncPublicKey " / > < nl > + < node concept = " 2m7Kf5 " id = " 7ZzLuuoJ2OH " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " keyId " / > < nl > + < node concept = " 2m5ndX " id = " 7ZzLuuoJ2OP " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 7ZzLuuoIYMl " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 2 " / > < nl > + < property role = " TrG5h " value = " keyType " / > < nl > + < node concept = " 2m5ndX " id = " 7ZzLuuoIYMp " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 7ZzLuuoJ0oR " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 3 " / > < nl > + < property role = " TrG5h " value = " key " / > < nl > + < node concept = " 2m61tm " id = " 7ZzLuuoJ0oX " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 7ZzLuuoJ0p0 " role = " NXodf " > < nl > + < property role = " NXePf " value = " Encryption Public Key " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 7ZzLuuoJ2OX " role = " NXodf " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Unique key Id " / > < nl > + < ref role = " NX6Kv " node = " 7ZzLuuoJ2OH " resolve = " keyId " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 7ZzLuuoJ0p5 " role = " NXodf " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Type of the key . Specific for each use case . " / > < nl > + < ref role = " NX6Kv " node = " 7ZzLuuoIYMl " resolve = " keyType " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 7ZzLuuoJ0pd " role = " NXodf " > < nl > + < property role = " 1GSvIU " value = " compact " / > < nl > + < property role = " NX6R2 " value = " Raw key data " / > < nl > + < ref role = " NX6Kv " node = " 7ZzLuuoJ0oR " resolve = " key " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " 1Dx9M1 " id = " 7ZzLuuoIXYH " role = " 1Dx9rD " > < nl > + < property role = " 1Dx9K7 " value = " Package that include encryption support " / > < nl > + < / node > < nl > + < node concept = " 1Dx9M1 " id = " 7ZzLuuoJ1cV " role = " 1Dx9rD " > < nl > + < property role = " 1Dx9K7 " value = " Key types : " / > < nl > + < / node > < nl > + < node concept = " 1Dx9M1 " id = " 7ZzLuuoJ1cY " role = " 1Dx9rD " > < nl > + < property role = " 1Dx9K7 " value = " * Curve25519 - https : / / en . wikipedia . org / wiki / Curve25519 " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m5mJO " id = " GBscvBB6e7 " role = " 2m5lHt " > < nl > < property role = " TrG5h " value = " Peers " / > < nl > < property role = " 3XOG $ Z " value = " peers " / >
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json < nl > index 573fb22 . . f869d1f 100644 < nl > - - - a / actor - sdk / sdk - api / actor . json < nl > + + + b / actor - sdk / sdk - api / actor . json < nl > @ @ - 364 , 6 + 364 , 60 @ @ < nl > { < nl > " type " : " rpc " , < nl > " content " : { < nl > + " name " : " StartAnonymousAuth " , < nl > + " header " : 198 , < nl > + " response " : { < nl > + " type " : " reference " , < nl > + " name " : " Auth " < nl > + } , < nl > + " doc " : [ < nl > + " Starting Anonymous login " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " name " , < nl > + " category " : " full " , < nl > + " description " : " Name of new user " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : " string " , < nl > + " id " : 1 , < nl > + " name " : " name " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " rpc " , < nl > + " content " : { < nl > + " name " : " StartTokenAuth " , < nl > + " header " : 203 , < nl > + " response " : { < nl > + " type " : " reference " , < nl > + " name " : " Auth " < nl > + } , < nl > + " doc " : [ < nl > + " Starting token - based login " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " token " , < nl > + " category " : " full " , < nl > + " description " : " Token for authentication " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : " string " , < nl > + " id " : 1 , < nl > + " name " : " token " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " rpc " , < nl > + " content " : { < nl > " name " : " ValidateCode " , < nl > " header " : 189 , < nl > " response " : { < nl > @ @ - 402 , 6 + 456 , 44 @ @ < nl > { < nl > " type " : " rpc " , < nl > " content " : { < nl > + " name " : " ValidatePassword " , < nl > + " header " : 207 , < nl > + " response " : { < nl > + " type " : " reference " , < nl > + " name " : " Auth " < nl > + } , < nl > + " doc " : [ < nl > + " Validation of account password " , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " transactionHash " , < nl > + " category " : " full " , < nl > + " description " : " Hash of transaction " < nl > + } , < nl > + { < nl > + " type " : " reference " , < nl > + " argument " : " password " , < nl > + " category " : " full " , < nl > + " description " : " Password for account " < nl > + } < nl > + ] , < nl > + " attributes " : [ < nl > + { < nl > + " type " : " string " , < nl > + " id " : 1 , < nl > + " name " : " transactionHash " < nl > + } , < nl > + { < nl > + " type " : " string " , < nl > + " id " : 2 , < nl > + " name " : " password " < nl > + } < nl > + ] < nl > + } < nl > + } , < nl > + { < nl > + " type " : " rpc " , < nl > + " content " : { < nl > " name " : " GetOAuth2Params " , < nl > " header " : 194 , < nl > " response " : { < nl > diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > index c2c4992 . . a723e79 100644 < nl > - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > @ @ - 466 , 6 + 466 , 50 @ @ < nl > < property role = " 2uCiSL " value = " Throws when email is invalid " / > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m6fVq " id = " 64HNz1Ipfm5 " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " StartAnonymousAuth " / > < nl > + < node concept = " 2m7Kf5 " id = " 64HNz1IpiSH " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " name " / > < nl > + < node concept = " 2m5ndX " id = " 64HNz1IpiSL " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 64HNz1Ipfm6 " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " C6 " / > < nl > + < / node > < nl > + < node concept = " 2m1Rp1 " id = " 64HNz1IphvX " role = " 2m6efq " > < nl > + < ref role = " 2m1o9l " node = " GBscvBB6Vl " resolve = " Auth " / > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 64HNz1Ipich " role = " 1GBnQ6 " > < nl > + < property role = " NXePf " value = " Starting Anonymous login " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 64HNz1IpkhH " role = " 1GBnQ6 " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Name of new user " / > < nl > + < ref role = " NX6Kv " node = " 64HNz1IpiSH " resolve = " name " / > < nl > + < / node > < nl > + < / node > < nl > + < node concept = " 2m6fVq " id = " 64HNz1Ipfc1 " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " StartTokenAuth " / > < nl > + < node concept = " 2m7Kf5 " id = " 64HNz1IplEr " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " token " / > < nl > + < node concept = " 2m5ndX " id = " 64HNz1IplEv " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 64HNz1Ipfc2 " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " CB " / > < nl > + < / node > < nl > + < node concept = " 2m1Rp1 " id = " 64HNz1Ipfh3 " role = " 2m6efq " > < nl > + < ref role = " 2m1o9l " node = " GBscvBB6Vl " resolve = " Auth " / > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 64HNz1IplEy " role = " 1GBnQ6 " > < nl > + < property role = " NXePf " value = " Starting token - based login " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 64HNz1IplEB " role = " 1GBnQ6 " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Token for authentication " / > < nl > + < ref role = " NX6Kv " node = " 64HNz1IplEr " resolve = " token " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m6fVq " id = " 3zgy61ElQmM " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " ValidateCode " / > < nl > < node concept = " 2uC4CA " id = " 3zgy61ElSkB " role = " 2uC9gA " > < nl > @ @ - 473 , 6 + 517 , 11 @ @ < nl > < property role = " 2uC4Qe " value = " UNOCCUPIED " / > < nl > < property role = " 2uCiSL " value = " Signup required " / > < nl > < / node > < nl > + < node concept = " 2uC4CA " id = " 64HNz1Ipq9p " role = " 2uC9gA " > < nl > + < property role = " 2uC4DK " value = " 401 " / > < nl > + < property role = " 2uC4Qe " value = " PASSWORD _ REQUIRED " / > < nl > + < property role = " 2uCiSL " value = " Password is required " / > < nl > + < / node > < nl > < node concept = " 2uC4CA " id = " 3zgy61ElSkC " role = " 2uC9gA " > < nl > < property role = " 2uC4DK " value = " 400 " / > < nl > < property role = " 2uC4Qe " value = " INVALID " / > < nl > @ @ - 517 , 6 + 566 , 38 @ @ < nl > < ref role = " NX6Kv " node = " 3zgy61ElTeQ " resolve = " code " / > < nl > < / node > < nl > < / node > < nl > + < node concept = " 2m6fVq " id = " 64HNz1IpqV4 " role = " 2m5mJr " > < nl > + < property role = " TrG5h " value = " ValidatePassword " / > < nl > + < node concept = " 2m7Kf5 " id = " 64HNz1Ipr0o " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 1 " / > < nl > + < property role = " TrG5h " value = " transactionHash " / > < nl > + < node concept = " 2m5ndX " id = " 64HNz1Ipr0s " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " 2m7Kf5 " id = " 64HNz1Ipr0v " role = " 2m0hLx " > < nl > + < property role = " 2m7DUN " value = " 2 " / > < nl > + < property role = " TrG5h " value = " password " / > < nl > + < node concept = " 2m5ndX " id = " 64HNz1Ipr0 _ " role = " 2m7DVh " / > < nl > + < / node > < nl > + < node concept = " Nu42z " id = " 64HNz1IpqV5 " role = " NuuwV " > < nl > + < property role = " Nu42W " value = " CF " / > < nl > + < / node > < nl > + < node concept = " 2m1Rp1 " id = " 64HNz1Ipr0l " role = " 2m6efq " > < nl > + < ref role = " 2m1o9l " node = " GBscvBB6Vl " resolve = " Auth " / > < nl > + < / node > < nl > + < node concept = " NXeRC " id = " 64HNz1Ipr0C " role = " 1GBnQ6 " > < nl > + < property role = " NXePf " value = " Validation of account password " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 64HNz1Ipr0H " role = " 1GBnQ6 " > < nl > + < property role = " NX6R2 " value = " Hash of transaction " / > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < ref role = " NX6Kv " node = " 64HNz1Ipr0o " resolve = " transactionHash " / > < nl > + < / node > < nl > + < node concept = " NX1gA " id = " 64HNz1Ipr0P " role = " 1GBnQ6 " > < nl > + < property role = " 1GSvIU " value = " full " / > < nl > + < property role = " NX6R2 " value = " Password for account " / > < nl > + < ref role = " NX6Kv " node = " 64HNz1Ipr0v " resolve = " password " / > < nl > + < / node > < nl > + < / node > < nl > < node concept = " 2m6fVq " id = " 3zgy61Em9Ob " role = " 2m5mJr " > < nl > < property role = " TrG5h " value = " GetOAuth2Params " / > < nl > < node concept = " NXeRC " id = " 3zgy61Emcoc " role = " 1GBnQ6 " >

TEST DIFF:
diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json 
 index 780d4cc . . 8f07e3d 100644 
 - - - a / actor - sdk / sdk - api / actor . json 
 + + + b / actor - sdk / sdk - api / actor . json 
 @ @ - 11691 , 6 + 11691 , 50 @ @ 
 { 
 " type " : " rpc " , 
 " content " : { 
 + " name " : " RegisterActorPush " , 
 + " header " : 2575 , 
 + " response " : { 
 + " type " : " reference " , 
 + " name " : " Void " 
 + } , 
 + " doc " : [ 
 + " Register Actor Push token " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " endpoint " , 
 + " category " : " full " , 
 + " description " : " Endpoint for push sending " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " publicKeys " , 
 + " category " : " full " , 
 + " description " : " Optional public keys for receiving push notifications " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : " string " , 
 + " id " : 1 , 
 + " name " : " endpoint " 
 + } , 
 + { 
 + " type " : { 
 + " type " : " list " , 
 + " childType " : { 
 + " type " : " struct " , 
 + " childType " : " EncPublicKey " 
 + } 
 + } , 
 + " id " : 2 , 
 + " name " : " publicKeys " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " rpc " , 
 + " content " : { 
 " name " : " UnregisterPush " , 
 " header " : 52 , 
 " response " : { 
 @ @ - 11706 , 6 + 11750 , 61 @ @ 
 ] 
 } , 
 { 
 + " title " : " Encryption " , 
 + " package " : " encryption " , 
 + " doc " : [ 
 + " Package that include encryption support " , 
 + " Key types : " , 
 + " * Curve25519 - https : / / en . wikipedia . org / wiki / Curve25519 " 
 + ] , 
 + " items " : [ 
 + { 
 + " type " : " struct " , 
 + " content " : { 
 + " name " : " EncPublicKey " , 
 + " doc " : [ 
 + " Encryption Public Key " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " keyId " , 
 + " category " : " full " , 
 + " description " : " Unique key Id " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " keyType " , 
 + " category " : " full " , 
 + " description " : " Type of the key . Specific for each use case . " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " key " , 
 + " category " : " compact " , 
 + " description " : " Raw key data " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : " string " , 
 + " id " : 1 , 
 + " name " : " keyId " 
 + } , 
 + { 
 + " type " : " string " , 
 + " id " : 2 , 
 + " name " : " keyType " 
 + } , 
 + { 
 + " type " : " bytes " , 
 + " id " : 3 , 
 + " name " : " key " 
 + } 
 + ] 
 + } 
 + } 
 + ] 
 + } , 
 + { 
 " title " : " Peers " , 
 " package " : " peers " , 
 " doc " : [ 
 diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 index ba38653 . . 5f97022 100644 
 - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 @ @ - 10093 , 6 + 10093 , 42 @ @ 
 < ref role = " NX6Kv " node = " GBscvBBv9B " resolve = " token " / > 
 < / node > 
 < / node > 
 + < node concept = " 2m6fVq " id = " 7ZzLuuoIUGN " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " RegisterActorPush " / > 
 + < node concept = " NXeRC " id = " 7ZzLuuoIUHC " role = " 1GBnQ6 " > 
 + < property role = " NXePf " value = " Register Actor Push token " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 7ZzLuuoIVxe " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " Endpoint for push sending " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 7ZzLuuoIUHm " resolve = " endpoint " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 7ZzLuuoJ20U " role = " 1GBnQ6 " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Optional public keys for receiving push notifications " / > 
 + < ref role = " NX6Kv " node = " 7ZzLuuoJ20H " resolve = " publicKeys " / > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 7ZzLuuoIUHm " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " endpoint " / > 
 + < node concept = " 2m5ndX " id = " 7ZzLuuoIUHq " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 7ZzLuuoJ20H " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 2 " / > 
 + < property role = " TrG5h " value = " publicKeys " / > 
 + < node concept = " 2m5nlk " id = " 7ZzLuuoJ5gy " role = " 2m7DVh " > 
 + < node concept = " 2m5mGg " id = " 7ZzLuuoJ5gC " role = " 3GJlyp " > 
 + < ref role = " 2m5mJy " node = " 7ZzLuuoIYMi " resolve = " EncPublicKey " / > 
 + < / node > 
 + < / node > 
 + < / node > 
 + < node concept = " Nu42z " id = " 7ZzLuuoIUGO " role = " NuuwV " > 
 + < property role = " Nu42W " value = " A0F " / > 
 + < / node > 
 + < node concept = " 2m1Rp1 " id = " 7ZzLuuoIUHj " role = " 2m6efq " > 
 + < ref role = " 2m1o9l " node = " GBscvBB6 _ K " resolve = " Void " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m6fVq " id = " GBscvBBvmU " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " UnregisterPush " / > 
 < node concept = " Nu42z " id = " GBscvBBvmV " role = " NuuwV " > 
 @ @ - 10106 , 6 + 10142 , 55 @ @ 
 < / node > 
 < / node > 
 < / node > 
 + < node concept = " 2m5mJO " id = " 7ZzLuuoIXbw " role = " 2m5lHt " > 
 + < property role = " TrG5h " value = " Encryption " / > 
 + < property role = " 3XOG $ Z " value = " encryption " / > 
 + < node concept = " 2m5naR " id = " 7ZzLuuoIYMi " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " EncPublicKey " / > 
 + < node concept = " 2m7Kf5 " id = " 7ZzLuuoJ2OH " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " keyId " / > 
 + < node concept = " 2m5ndX " id = " 7ZzLuuoJ2OP " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 7ZzLuuoIYMl " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 2 " / > 
 + < property role = " TrG5h " value = " keyType " / > 
 + < node concept = " 2m5ndX " id = " 7ZzLuuoIYMp " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 7ZzLuuoJ0oR " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 3 " / > 
 + < property role = " TrG5h " value = " key " / > 
 + < node concept = " 2m61tm " id = " 7ZzLuuoJ0oX " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " NXeRC " id = " 7ZzLuuoJ0p0 " role = " NXodf " > 
 + < property role = " NXePf " value = " Encryption Public Key " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 7ZzLuuoJ2OX " role = " NXodf " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Unique key Id " / > 
 + < ref role = " NX6Kv " node = " 7ZzLuuoJ2OH " resolve = " keyId " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 7ZzLuuoJ0p5 " role = " NXodf " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Type of the key . Specific for each use case . " / > 
 + < ref role = " NX6Kv " node = " 7ZzLuuoIYMl " resolve = " keyType " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 7ZzLuuoJ0pd " role = " NXodf " > 
 + < property role = " 1GSvIU " value = " compact " / > 
 + < property role = " NX6R2 " value = " Raw key data " / > 
 + < ref role = " NX6Kv " node = " 7ZzLuuoJ0oR " resolve = " key " / > 
 + < / node > 
 + < / node > 
 + < node concept = " 1Dx9M1 " id = " 7ZzLuuoIXYH " role = " 1Dx9rD " > 
 + < property role = " 1Dx9K7 " value = " Package that include encryption support " / > 
 + < / node > 
 + < node concept = " 1Dx9M1 " id = " 7ZzLuuoJ1cV " role = " 1Dx9rD " > 
 + < property role = " 1Dx9K7 " value = " Key types : " / > 
 + < / node > 
 + < node concept = " 1Dx9M1 " id = " 7ZzLuuoJ1cY " role = " 1Dx9rD " > 
 + < property role = " 1Dx9K7 " value = " * Curve25519 - https : / / en . wikipedia . org / wiki / Curve25519 " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m5mJO " id = " GBscvBB6e7 " role = " 2m5lHt " > 
 < property role = " TrG5h " value = " Peers " / > 
 < property role = " 3XOG $ Z " value = " peers " / >

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json 
 index 573fb22 . . f869d1f 100644 
 - - - a / actor - sdk / sdk - api / actor . json 
 + + + b / actor - sdk / sdk - api / actor . json 
 @ @ - 364 , 6 + 364 , 60 @ @ 
 { 
 " type " : " rpc " , 
 " content " : { 
 + " name " : " StartAnonymousAuth " , 
 + " header " : 198 , 
 + " response " : { 
 + " type " : " reference " , 
 + " name " : " Auth " 
 + } , 
 + " doc " : [ 
 + " Starting Anonymous login " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " name " , 
 + " category " : " full " , 
 + " description " : " Name of new user " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : " string " , 
 + " id " : 1 , 
 + " name " : " name " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " rpc " , 
 + " content " : { 
 + " name " : " StartTokenAuth " , 
 + " header " : 203 , 
 + " response " : { 
 + " type " : " reference " , 
 + " name " : " Auth " 
 + } , 
 + " doc " : [ 
 + " Starting token - based login " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " token " , 
 + " category " : " full " , 
 + " description " : " Token for authentication " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : " string " , 
 + " id " : 1 , 
 + " name " : " token " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " rpc " , 
 + " content " : { 
 " name " : " ValidateCode " , 
 " header " : 189 , 
 " response " : { 
 @ @ - 402 , 6 + 456 , 44 @ @ 
 { 
 " type " : " rpc " , 
 " content " : { 
 + " name " : " ValidatePassword " , 
 + " header " : 207 , 
 + " response " : { 
 + " type " : " reference " , 
 + " name " : " Auth " 
 + } , 
 + " doc " : [ 
 + " Validation of account password " , 
 + { 
 + " type " : " reference " , 
 + " argument " : " transactionHash " , 
 + " category " : " full " , 
 + " description " : " Hash of transaction " 
 + } , 
 + { 
 + " type " : " reference " , 
 + " argument " : " password " , 
 + " category " : " full " , 
 + " description " : " Password for account " 
 + } 
 + ] , 
 + " attributes " : [ 
 + { 
 + " type " : " string " , 
 + " id " : 1 , 
 + " name " : " transactionHash " 
 + } , 
 + { 
 + " type " : " string " , 
 + " id " : 2 , 
 + " name " : " password " 
 + } 
 + ] 
 + } 
 + } , 
 + { 
 + " type " : " rpc " , 
 + " content " : { 
 " name " : " GetOAuth2Params " , 
 " header " : 194 , 
 " response " : { 
 diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 index c2c4992 . . a723e79 100644 
 - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 @ @ - 466 , 6 + 466 , 50 @ @ 
 < property role = " 2uCiSL " value = " Throws when email is invalid " / > 
 < / node > 
 < / node > 
 + < node concept = " 2m6fVq " id = " 64HNz1Ipfm5 " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " StartAnonymousAuth " / > 
 + < node concept = " 2m7Kf5 " id = " 64HNz1IpiSH " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " name " / > 
 + < node concept = " 2m5ndX " id = " 64HNz1IpiSL " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " Nu42z " id = " 64HNz1Ipfm6 " role = " NuuwV " > 
 + < property role = " Nu42W " value = " C6 " / > 
 + < / node > 
 + < node concept = " 2m1Rp1 " id = " 64HNz1IphvX " role = " 2m6efq " > 
 + < ref role = " 2m1o9l " node = " GBscvBB6Vl " resolve = " Auth " / > 
 + < / node > 
 + < node concept = " NXeRC " id = " 64HNz1Ipich " role = " 1GBnQ6 " > 
 + < property role = " NXePf " value = " Starting Anonymous login " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 64HNz1IpkhH " role = " 1GBnQ6 " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Name of new user " / > 
 + < ref role = " NX6Kv " node = " 64HNz1IpiSH " resolve = " name " / > 
 + < / node > 
 + < / node > 
 + < node concept = " 2m6fVq " id = " 64HNz1Ipfc1 " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " StartTokenAuth " / > 
 + < node concept = " 2m7Kf5 " id = " 64HNz1IplEr " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " token " / > 
 + < node concept = " 2m5ndX " id = " 64HNz1IplEv " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " Nu42z " id = " 64HNz1Ipfc2 " role = " NuuwV " > 
 + < property role = " Nu42W " value = " CB " / > 
 + < / node > 
 + < node concept = " 2m1Rp1 " id = " 64HNz1Ipfh3 " role = " 2m6efq " > 
 + < ref role = " 2m1o9l " node = " GBscvBB6Vl " resolve = " Auth " / > 
 + < / node > 
 + < node concept = " NXeRC " id = " 64HNz1IplEy " role = " 1GBnQ6 " > 
 + < property role = " NXePf " value = " Starting token - based login " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 64HNz1IplEB " role = " 1GBnQ6 " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Token for authentication " / > 
 + < ref role = " NX6Kv " node = " 64HNz1IplEr " resolve = " token " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m6fVq " id = " 3zgy61ElQmM " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " ValidateCode " / > 
 < node concept = " 2uC4CA " id = " 3zgy61ElSkB " role = " 2uC9gA " > 
 @ @ - 473 , 6 + 517 , 11 @ @ 
 < property role = " 2uC4Qe " value = " UNOCCUPIED " / > 
 < property role = " 2uCiSL " value = " Signup required " / > 
 < / node > 
 + < node concept = " 2uC4CA " id = " 64HNz1Ipq9p " role = " 2uC9gA " > 
 + < property role = " 2uC4DK " value = " 401 " / > 
 + < property role = " 2uC4Qe " value = " PASSWORD _ REQUIRED " / > 
 + < property role = " 2uCiSL " value = " Password is required " / > 
 + < / node > 
 < node concept = " 2uC4CA " id = " 3zgy61ElSkC " role = " 2uC9gA " > 
 < property role = " 2uC4DK " value = " 400 " / > 
 < property role = " 2uC4Qe " value = " INVALID " / > 
 @ @ - 517 , 6 + 566 , 38 @ @ 
 < ref role = " NX6Kv " node = " 3zgy61ElTeQ " resolve = " code " / > 
 < / node > 
 < / node > 
 + < node concept = " 2m6fVq " id = " 64HNz1IpqV4 " role = " 2m5mJr " > 
 + < property role = " TrG5h " value = " ValidatePassword " / > 
 + < node concept = " 2m7Kf5 " id = " 64HNz1Ipr0o " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 1 " / > 
 + < property role = " TrG5h " value = " transactionHash " / > 
 + < node concept = " 2m5ndX " id = " 64HNz1Ipr0s " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " 2m7Kf5 " id = " 64HNz1Ipr0v " role = " 2m0hLx " > 
 + < property role = " 2m7DUN " value = " 2 " / > 
 + < property role = " TrG5h " value = " password " / > 
 + < node concept = " 2m5ndX " id = " 64HNz1Ipr0 _ " role = " 2m7DVh " / > 
 + < / node > 
 + < node concept = " Nu42z " id = " 64HNz1IpqV5 " role = " NuuwV " > 
 + < property role = " Nu42W " value = " CF " / > 
 + < / node > 
 + < node concept = " 2m1Rp1 " id = " 64HNz1Ipr0l " role = " 2m6efq " > 
 + < ref role = " 2m1o9l " node = " GBscvBB6Vl " resolve = " Auth " / > 
 + < / node > 
 + < node concept = " NXeRC " id = " 64HNz1Ipr0C " role = " 1GBnQ6 " > 
 + < property role = " NXePf " value = " Validation of account password " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 64HNz1Ipr0H " role = " 1GBnQ6 " > 
 + < property role = " NX6R2 " value = " Hash of transaction " / > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < ref role = " NX6Kv " node = " 64HNz1Ipr0o " resolve = " transactionHash " / > 
 + < / node > 
 + < node concept = " NX1gA " id = " 64HNz1Ipr0P " role = " 1GBnQ6 " > 
 + < property role = " 1GSvIU " value = " full " / > 
 + < property role = " NX6R2 " value = " Password for account " / > 
 + < ref role = " NX6Kv " node = " 64HNz1Ipr0v " resolve = " password " / > 
 + < / node > 
 + < / node > 
 < node concept = " 2m6fVq " id = " 3zgy61Em9Ob " role = " 2m5mJr " > 
 < property role = " TrG5h " value = " GetOAuth2Params " / > 
 < node concept = " NXeRC " id = " 3zgy61Emcoc " role = " 1GBnQ6 " >
