BLEU SCORE: 0.20504572236241866

TEST MSG: perf ( server : messaging ) : fetchDialogs uses compiled query
GENERATED MSG: perf ( server ) : compiled query for config parameter read

TEST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala < nl > index 66eb2de . . cb2a1d3 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala < nl > @ @ - 189 , 5 + 189 , 5 @ @ object DialogRepo extends UserDialogOperations with DialogCommonOperations { < nl > byPKC ( ( userId , peer . typ . value , peer . id ) ) . result . headOption map ( _ . map { case ( c , u ) ⇒ DialogObsolete . fromCommonAndUser ( c , u ) } ) < nl > < nl > def fetchDialogs ( userId : Int ) ( implicit ec : ExecutionContext ) : DBIO [ Seq [ DialogObsolete ] ] = < nl > - byUserId ( userId ) . result map ( _ . map { case ( c , u ) ⇒ DialogObsolete . fromCommonAndUser ( c , u ) } ) < nl > + byUserC ( userId ) . result map ( _ . map { case ( c , u ) ⇒ DialogObsolete . fromCommonAndUser ( c , u ) } ) < nl > } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala < nl > index 5ef7457 . . 828ca5c 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala < nl > @ @ - 25 , 6 + 25 , 9 @ @ object Parameter { < nl > def find ( userId : Int ) = < nl > parameters . filter ( _ . userId = = = userId ) . result < nl > < nl > + private def byUserIdAndKey ( userId : Rep [ Int ] , key : Rep [ String ] ) = parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) < nl > + private val byUserIdAndKeyC = Compiled ( byUserIdAndKey _ ) < nl > + < nl > def findValue ( userId : Int , key : String ) ( implicit ec : ExecutionContext ) = < nl > - parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) . result . headOption map ( _ . flatten ) < nl > + byUserIdAndKeyC ( userId → key ) . result . headOption map ( _ . flatten ) < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala 
 index 66eb2de . . cb2a1d3 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / dialog / DialogRepo . scala 
 @ @ - 189 , 5 + 189 , 5 @ @ object DialogRepo extends UserDialogOperations with DialogCommonOperations { 
 byPKC ( ( userId , peer . typ . value , peer . id ) ) . result . headOption map ( _ . map { case ( c , u ) ⇒ DialogObsolete . fromCommonAndUser ( c , u ) } ) 
 
 def fetchDialogs ( userId : Int ) ( implicit ec : ExecutionContext ) : DBIO [ Seq [ DialogObsolete ] ] = 
 - byUserId ( userId ) . result map ( _ . map { case ( c , u ) ⇒ DialogObsolete . fromCommonAndUser ( c , u ) } ) 
 + byUserC ( userId ) . result map ( _ . map { case ( c , u ) ⇒ DialogObsolete . fromCommonAndUser ( c , u ) } ) 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala 
 index 5ef7457 . . 828ca5c 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / configs / Parameter . scala 
 @ @ - 25 , 6 + 25 , 9 @ @ object Parameter { 
 def find ( userId : Int ) = 
 parameters . filter ( _ . userId = = = userId ) . result 
 
 + private def byUserIdAndKey ( userId : Rep [ Int ] , key : Rep [ String ] ) = parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) 
 + private val byUserIdAndKeyC = Compiled ( byUserIdAndKey _ ) 
 + 
 def findValue ( userId : Int , key : String ) ( implicit ec : ExecutionContext ) = 
 - parameters . filter ( p ⇒ p . userId = = = userId & & p . key = = = key ) . map ( _ . value ) . result . headOption map ( _ . flatten ) 
 + byUserIdAndKeyC ( userId → key ) . result . headOption map ( _ . flatten ) 
 } 
 \ No newline at end of file
