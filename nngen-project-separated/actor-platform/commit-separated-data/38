BLEU SCORE: 0.46713797772820004

TEST MSG: feat ( android ) : attach menu appear animation
GENERATED MSG: feat ( android ) : add fast share menu

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java < nl > index b26975e . . a0c1ebb 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java < nl > @ @ - 344 , 7 + 344 , 7 @ @ public class ChatFragment extends BaseFragment implements InputBarCallback , Mess < nl > < nl > AbsAttachFragment attachFragment = findShareFragment ( ) ; < nl > if ( attachFragment ! = null ) { < nl > - quoteContainer . post ( ( ) - > attachFragment . show ( ) ) ; < nl > + quoteContainer . postDelayed ( ( ) - > attachFragment . show ( ) , 200 ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java < nl > index 75694e9 . . f6142b8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java < nl > @ @ - 15 , 7 + 15 , 6 @ @ import android . support . annotation . NonNull ; < nl > import android . support . annotation . Nullable ; < nl > import android . support . v4 . content . ContextCompat ; < nl > import android . support . v7 . widget . GridLayoutManager ; < nl > - import android . support . v7 . widget . LinearLayoutManager ; < nl > import android . support . v7 . widget . RecyclerView ; < nl > import android . util . Base64 ; < nl > import android . view . Gravity ; < nl > @ @ - 23 , 6 + 22 , 7 @ @ import android . view . LayoutInflater ; < nl > import android . view . View ; < nl > import android . view . ViewAnimationUtils ; < nl > import android . view . ViewGroup ; < nl > + import android . view . animation . TranslateAnimation ; < nl > import android . widget . FrameLayout ; < nl > import android . widget . ImageView ; < nl > import android . widget . LinearLayout ; < nl > @ @ - 42 , 6 + 42 , 7 @ @ import im . actor . sdk . controllers . tools . MediaPickerCallback ; < nl > import im . actor . sdk . controllers . tools . MediaPickerFragment ; < nl > import im . actor . sdk . util . SDKFeatures ; < nl > import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . view . MaterialInterpolator ; < nl > import im . actor . sdk . view . ShareMenuButtonFactory ; < nl > import im . actor . sdk . view . adapters . HeaderViewRecyclerAdapter ; < nl > < nl > @ @ - 53 , 13 + 54 , 22 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > public static final int SPAN _ COUNT = 4 ; < nl > < nl > private FrameLayout root ; < nl > - private View container ; < nl > + private View shareButtons ; < nl > private FastAttachAdapter fastAttachAdapter ; < nl > private ImageView menuIconToChange ; < nl > private TextView menuTitleToChange ; < nl > + private ImageView menuIconToChangeClone ; < nl > + private TextView menuTitleToChangeClone ; < nl > < nl > private boolean isLoaded = false ; < nl > private RecyclerView fastShare ; < nl > + private View bottomBackground ; < nl > + private boolean isFastShareFullScreen ; < nl > + private GridLayoutManager layoutManager ; < nl > + private int shareIconSize ; < nl > + private View hideClone ; < nl > + private int fastShareWidth ; < nl > + private int spanCount ; < nl > < nl > public AttachFragment ( Peer peer ) { < nl > super ( peer ) ; < nl > @ @ - 68 , 6 + 78 , 21 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > public AttachFragment ( ) { < nl > } < nl > < nl > + @ Override < nl > + public void onConfigurationChanged ( Configuration newConfig ) { < nl > + super . onConfigurationChanged ( newConfig ) ; < nl > + hide ( ) ; < nl > + if ( layoutManager ! = null ) { < nl > + layoutManager = getGridLayoutManager ( ) ; < nl > + } < nl > + root . removeAllViews ( ) ; < nl > + isLoaded = false ; < nl > + } < nl > + < nl > + protected GridLayoutManager getLayoutManager ( ) { < nl > + return layoutManager ; < nl > + } < nl > + < nl > @ Nullable < nl > @ Override < nl > public View onCreateView ( LayoutInflater inflater , @ Nullable ViewGroup fcontainer , @ Nullable Bundle savedInstanceState ) { < nl > @ @ - 78 , 11 + 103 , 24 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > . commitNow ( ) ; < nl > } < nl > < nl > - root = new FrameLayout ( getContext ( ) ) ; < nl > + root = new FrameLayout ( getContext ( ) ) { < nl > + @ Override < nl > + protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { < nl > + super . onSizeChanged ( w , h , oldw , oldh ) ; < nl > + if ( h ! = oldh & & shareButtons ! = null ) { < nl > + shareButtons . getLayoutParams ( ) . height = root . getHeight ( ) - Screen . dp ( 135 ) ; < nl > + shareButtons . requestLayout ( ) ; < nl > + } < nl > + } < nl > + } ; < nl > root . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , < nl > ViewGroup . LayoutParams . MATCH _ PARENT ) ) ; < nl > + root . setBackgroundColor ( getActivity ( ) . getResources ( ) . getColor ( R . color . dialog _ overlay ) ) ; < nl > + root . setVisibility ( View . INVISIBLE ) ; < nl > < nl > isLoaded = false ; < nl > + / / messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Show ( ) ) ; < nl > + / / messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Hide ( ) ) ; < nl > < nl > return root ; < nl > } < nl > @ @ - 93 , 37 + 131 , 57 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > } < nl > isLoaded = true ; < nl > < nl > - container = getLayoutInflater ( null ) . inflate ( R . layout . share _ menu , root , false ) ; < nl > + shareButtons = getLayoutInflater ( null ) . inflate ( R . layout . share _ menu , root , false ) ; < nl > fastShare = new RecyclerView ( getActivity ( ) ) ; < nl > - fastShare . setVisibility ( View . INVISIBLE ) ; < nl > + fastShare . setOverScrollMode ( View . OVER _ SCROLL _ NEVER ) ; < nl > < nl > - container . findViewById ( R . id . menu _ bg ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; < nl > - container . findViewById ( R . id . cancelField ) . setOnClickListener ( view - > hide ( ) ) ; < nl > + shareButtons . findViewById ( R . id . menu _ bg ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; < nl > + shareButtons . findViewById ( R . id . cancelField ) . setOnClickListener ( view - > hide ( ) ) ; < nl > + < nl > + / / < nl > + / / Setup appearing hide button < nl > + / / < nl > + isFastShareFullScreen = false ; < nl > + fastShare . addOnScrollListener ( new RecyclerView . OnScrollListener ( ) { < nl > + @ Override < nl > + public void onScrolled ( RecyclerView recyclerView , int dx , int dy ) { < nl > + boolean visible = layoutManager . findFirstVisibleItemPosition ( ) = = 0 ; < nl > + if ( isFastShareFullScreen = = visible ) { < nl > + isFastShareFullScreen = ! visible ; < nl > + if ( visible ) { < nl > + hideView ( hideClone ) ; < nl > + } else { < nl > + showView ( hideClone ) ; < nl > + } < nl > + } < nl > + } < nl > + } ) ; < nl > < nl > / / < nl > / / Building Menu Fields < nl > / / < nl > ArrayList < ShareMenuField > menuFields = new ArrayList < > ( onCreateFields ( ) ) ; < nl > / / Adding Additional Hide for better UI < nl > + ShareMenuField shareMenuFieldHide = new ShareMenuField ( R . id . share _ hide , R . drawable . attach _ hide2 , style . getAccentColor ( ) , " " ) ; < nl > if ( menuFields . size ( ) % 2 ! = 0 ) { < nl > - menuFields . add ( new ShareMenuField ( R . id . share _ hide , R . drawable . attach _ hide2 , style . getBackyardBackgroundColor ( ) , " " ) ) ; < nl > + menuFields . add ( shareMenuFieldHide ) ; < nl > } < nl > < nl > / / < nl > / / Building Layout < nl > / / < nl > - FrameLayout row = ( FrameLayout ) container . findViewById ( R . id . share _ row _ one ) ; < nl > + FrameLayout row = ( FrameLayout ) shareButtons . findViewById ( R . id . share _ row _ one ) ; < nl > boolean first = true ; < nl > int menuItemSize = Screen . dp ( 80 ) ; < nl > int screenWidth = < nl > ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ PORTRAIT < nl > ? Screen . getWidth ( ) < nl > - : Screen . getHeight ( ) ) ; < nl > + : Screen . getWidth ( ) ) ; < nl > int distance = screenWidth / ( menuFields . size ( ) / 2 + menuFields . size ( ) % 2 ) ; < nl > int initialMargin = distance / 2 - menuItemSize / 2 ; < nl > int marginFromStart = initialMargin ; < nl > int secondRowTopMargin = Screen . dp ( 96 ) ; < nl > - int shareIconSize = Screen . dp ( 60 ) ; < nl > + shareIconSize = Screen . dp ( 60 ) ; < nl > View . OnClickListener defaultSendOcl = null ; < nl > < nl > Configuration config = getResources ( ) . getConfiguration ( ) ; < nl > @ @ - 135 , 43 + 193 , 15 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > for ( int i = 0 ; i < menuFields . size ( ) ; i + + ) { < nl > ShareMenuField f = menuFields . get ( i ) ; < nl > < nl > - LinearLayout shareItem = new LinearLayout ( getActivity ( ) ) ; < nl > - shareItem . setOrientation ( LinearLayout . VERTICAL ) ; < nl > - shareItem . setGravity ( Gravity . CENTER _ HORIZONTAL ) ; < nl > - < nl > - TextView title = new TextView ( getActivity ( ) ) ; < nl > - title . setGravity ( Gravity . CENTER ) ; < nl > - title . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > - title . setText ( f . getTitle ( ) ) ; < nl > - title . setTextSize ( 14 ) ; < nl > - < nl > - ImageView icon = new ImageView ( getActivity ( ) ) ; < nl > - icon . setClickable ( true ) ; < nl > - if ( f . getSelector ( ) ! = 0 ) { < nl > - icon . setBackgroundResource ( f . getSelector ( ) ) ; < nl > - } else { < nl > - icon . setBackgroundDrawable ( ShareMenuButtonFactory . get ( f . getColor ( ) , getActivity ( ) ) ) ; < nl > - icon . setScaleType ( ImageView . ScaleType . CENTER _ INSIDE ) ; < nl > - icon . setImageResource ( f . getIcon ( ) ) ; < nl > - } < nl > - < nl > - shareItem . addView ( icon , shareIconSize , shareIconSize ) ; < nl > - shareItem . addView ( title ) ; < nl > - < nl > - View . OnClickListener l = v - > { < nl > - hide ( ) ; < nl > - onItemClicked ( v . getId ( ) ) ; < nl > - } ; < nl > - icon . setId ( f . getId ( ) ) ; < nl > - icon . setOnClickListener ( l ) ; < nl > + View shareItem = instantiateShareMenuItem ( f ) ; < nl > < nl > FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( menuItemSize , menuItemSize ) ; < nl > params . setMargins ( isRtl ? initialMargin : marginFromStart , first ? 0 : secondRowTopMargin , isRtl ? marginFromStart : initialMargin , 0 ) ; < nl > < nl > if ( i = = menuFields . size ( ) - 1 ) { < nl > - menuIconToChange = icon ; < nl > - menuTitleToChange = title ; < nl > - defaultSendOcl = l ; < nl > + menuIconToChange = ( ImageView ) shareItem . getTag ( R . id . icon ) ; < nl > + menuTitleToChange = ( TextView ) shareItem . getTag ( R . id . title ) ; < nl > + defaultSendOcl = ( View . OnClickListener ) shareItem . getTag ( R . id . list ) ; < nl > < nl > params . setMargins ( isRtl ? 0 : marginFromStart , first ? 0 : secondRowTopMargin , isRtl ? marginFromStart : 0 , 0 ) ; < nl > < nl > @ @ - 183 , 6 + 213 , 12 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > first = ! first ; < nl > } < nl > < nl > + hideClone = instantiateShareMenuItem ( shareMenuFieldHide ) ; < nl > + hideClone . setVisibility ( View . INVISIBLE ) ; < nl > + menuTitleToChangeClone = ( TextView ) hideClone . getTag ( R . id . title ) ; < nl > + menuIconToChangeClone = ( ImageView ) hideClone . getTag ( R . id . icon ) ; < nl > + menuTitleToChangeClone . setVisibility ( View . GONE ) ; < nl > + < nl > menuIconToChange . setTag ( R . id . icon , menuIconToChange . getDrawable ( ) ) ; < nl > menuIconToChange . setTag ( R . id . background , menuIconToChange . getBackground ( ) ) ; < nl > menuTitleToChange . setTag ( menuTitleToChange . getText ( ) . toString ( ) ) ; < nl > @ @ - 197 , 17 + 233 , 18 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > hide ( ) ; < nl > } ; < nl > < nl > - / / RecyclerView fastShare = ( RecyclerView ) container . findViewById ( R . id . fast _ share ) ; < nl > - fastAttachAdapter = new FastAttachAdapter ( getActivity ( ) ) ; < nl > + / / RecyclerView fastShare = ( RecyclerView ) shareButtons . findViewById ( R . id . fast _ share ) ; < nl > + fastAttachAdapter = new FastAttachAdapter ( getActivity ( ) , ( ) - > fastShareWidth + 1 ) ; < nl > + < nl > HeaderViewRecyclerAdapter adapter = new HeaderViewRecyclerAdapter ( fastAttachAdapter ) ; < nl > - adapter . addHeaderView ( container ) ; < nl > - GridLayoutManager layoutManager = new GridLayoutManager ( getActivity ( ) , SPAN _ COUNT ) ; < nl > + adapter . addHeaderView ( shareButtons ) ; < nl > + layoutManager = getGridLayoutManager ( ) ; < nl > fastShare . setAdapter ( adapter ) ; < nl > fastShare . setLayoutManager ( layoutManager ) ; < nl > layoutManager . setSpanSizeLookup ( new GridLayoutManager . SpanSizeLookup ( ) { < nl > @ Override < nl > public int getSpanSize ( int position ) { < nl > - return position = = 0 ? 4 : 1 ; < nl > + return position = = 0 ? spanCount : 1 ; < nl > } < nl > } ) ; < nl > StateListDrawable background = ShareMenuButtonFactory . get ( style . getMainColor ( ) , getActivity ( ) ) ; < nl > @ @ - 221 , 6 + 258 , 13 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > menuTitleToChange . setText ( getString ( R . string . chat _ doc _ send ) + " ( " + val . size ( ) + " ) " ) ; < nl > menuIconToChange . setOnClickListener ( shareSendOcl ) ; < nl > menuIconToChange . setPadding ( Screen . dp ( 10 ) , 0 , Screen . dp ( 5 ) , 0 ) ; < nl > + < nl > + < nl > + menuIconToChangeClone . setBackgroundDrawable ( background ) ; < nl > + menuIconToChangeClone . setImageResource ( R . drawable . conv _ send ) ; < nl > + menuIconToChangeClone . setColorFilter ( 0xffffffff , PorterDuff . Mode . SRC _ IN ) ; < nl > + menuIconToChangeClone . setOnClickListener ( shareSendOcl ) ; < nl > + menuIconToChangeClone . setPadding ( Screen . dp ( 10 ) , 0 , Screen . dp ( 5 ) , 0 ) ; < nl > } else { < nl > < nl > menuIconToChange . setBackgroundDrawable ( ( Drawable ) menuIconToChange . getTag ( R . id . background ) ) ; < nl > @ @ - 229 , 22 + 273 , 78 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > menuIconToChange . setOnClickListener ( finalDefaultSendOcl ) ; < nl > menuTitleToChange . setText ( ( String ) menuTitleToChange . getTag ( ) ) ; < nl > menuIconToChange . setPadding ( 0 , 0 , 0 , 0 ) ; < nl > + < nl > + menuIconToChangeClone . setBackgroundDrawable ( ( Drawable ) menuIconToChange . getTag ( R . id . background ) ) ; < nl > + menuIconToChangeClone . setImageDrawable ( ( Drawable ) menuIconToChange . getTag ( R . id . icon ) ) ; < nl > + menuIconToChangeClone . setColorFilter ( null ) ; < nl > + menuIconToChangeClone . setOnClickListener ( finalDefaultSendOcl ) ; < nl > + menuIconToChangeClone . setPadding ( 0 , 0 , 0 , 0 ) ; < nl > } < nl > } ) ; < nl > - root . post ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - container . getLayoutParams ( ) . height = root . getHeight ( ) - Screen . dp ( 135 ) ; < nl > - container . requestLayout ( ) ; < nl > - } < nl > - } ) ; < nl > + < nl > + shareButtons . getLayoutParams ( ) . height = root . getHeight ( ) - Screen . dp ( 135 ) ; < nl > + shareButtons . requestLayout ( ) ; < nl > + < nl > + < nl > + bottomBackground = new View ( getContext ( ) ) ; < nl > + FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 135 ) , Gravity . BOTTOM ) ; < nl > + bottomBackground . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + root . addView ( bottomBackground , params ) ; < nl > root . addView ( fastShare ) ; < nl > + FrameLayout . LayoutParams params2 = new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , ViewGroup . LayoutParams . WRAP _ CONTENT , Gravity . BOTTOM | Gravity . RIGHT ) ; < nl > + params2 . setMargins ( 0 , 0 , Screen . dp ( 20 ) , Screen . dp ( 20 ) ) ; < nl > + root . addView ( hideClone , params2 ) ; < nl > + } < nl > + < nl > + @ NonNull < nl > + private GridLayoutManager getGridLayoutManager ( ) { < nl > + spanCount = Screen . getWidth ( ) / Screen . dp ( 88 ) ; < nl > + fastShareWidth = Screen . getWidth ( ) / spanCount ; < nl > + return new GridLayoutManager ( getActivity ( ) , spanCount ) ; < nl > + } < nl > + < nl > + private View instantiateShareMenuItem ( ShareMenuField f ) { < nl > + LinearLayout shareItem = new LinearLayout ( getActivity ( ) ) ; < nl > + shareItem . setOrientation ( LinearLayout . VERTICAL ) ; < nl > + shareItem . setGravity ( Gravity . CENTER _ HORIZONTAL ) ; < nl > + < nl > + TextView title = new TextView ( getActivity ( ) ) ; < nl > + title . setGravity ( Gravity . CENTER ) ; < nl > + title . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > + title . setText ( f . getTitle ( ) ) ; < nl > + title . setTextSize ( 14 ) ; < nl > + < nl > + ImageView icon = new ImageView ( getActivity ( ) ) ; < nl > + icon . setClickable ( true ) ; < nl > + if ( f . getSelector ( ) ! = 0 ) { < nl > + icon . setBackgroundResource ( f . getSelector ( ) ) ; < nl > + } else { < nl > + icon . setBackgroundDrawable ( ShareMenuButtonFactory . get ( f . getColor ( ) , getActivity ( ) ) ) ; < nl > + icon . setScaleType ( ImageView . ScaleType . CENTER _ INSIDE ) ; < nl > + icon . setImageResource ( f . getIcon ( ) ) ; < nl > + } < nl > + < nl > + shareItem . addView ( icon , shareIconSize , shareIconSize ) ; < nl > + shareItem . addView ( title ) ; < nl > + < nl > + View . OnClickListener l = v - > { < nl > + hide ( ) ; < nl > + onItemClicked ( v . getId ( ) ) ; < nl > + } ; < nl > + icon . setId ( f . getId ( ) ) ; < nl > + icon . setOnClickListener ( l ) ; < nl > + < nl > + shareItem . setTag ( R . id . title , title ) ; < nl > + shareItem . setTag ( R . id . icon , icon ) ; < nl > + shareItem . setTag ( R . id . list , l ) ; < nl > + < nl > + return shareItem ; < nl > } < nl > < nl > @ Override < nl > public void show ( ) { < nl > prepareView ( ) ; < nl > - if ( fastShare . getVisibility ( ) = = View . INVISIBLE ) { < nl > + if ( root . getVisibility ( ) = = View . INVISIBLE ) { < nl > if ( Build . VERSION . SDK _ INT > = Build . VERSION _ CODES . M ) { < nl > Activity activity = getActivity ( ) ; < nl > if ( activity = = null ) { < nl > @ @ - 259 , 58 + 359 , 78 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > } < nl > onShown ( ) ; < nl > messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Show ( ) ) ; < nl > - showView ( fastShare ) ; < nl > - / / if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP ) { < nl > - / / View internal = container . findViewById ( R . id . menu _ bg ) ; < nl > - / / int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; < nl > - / / int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; < nl > - / / float finalRadius = ( float ) Math . hypot ( cx , cy ) ; < nl > - / / Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , 0 , finalRadius ) ; < nl > - / / anim . setDuration ( 200 ) ; < nl > - / / anim . start ( ) ; < nl > - / / internal . setAlpha ( 1 ) ; < nl > - / / } < nl > + showView ( root ) ; < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , root . getHeight ( ) , 0 ) ; < nl > + animation . setInterpolator ( MaterialInterpolator . getInstance ( ) ) ; < nl > + animation . setDuration ( 200 ) ; < nl > + / / fastShare . startAnimation ( animation ) ; < nl > + / / bottomBackground . startAnimation ( animation ) ; < nl > + shareButtons . post ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP ) { < nl > + View internal = fastShare ; < nl > + int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; < nl > + int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; < nl > + float finalRadius = ( float ) Math . hypot ( cx , cy ) ; < nl > + Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , 0 , finalRadius ) ; < nl > + anim . setDuration ( 200 ) ; < nl > + anim . start ( ) ; < nl > + internal . setAlpha ( 1 ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + < nl > } < nl > } < nl > < nl > @ Override < nl > public void hide ( ) { < nl > - if ( fastShare ! = null & & fastShare . getVisibility ( ) = = View . VISIBLE ) { < nl > + if ( root ! = null & & root . getVisibility ( ) = = View . VISIBLE ) { < nl > onHidden ( ) ; < nl > fastAttachAdapter . clearSelected ( ) ; < nl > messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Hide ( ) ) ; < nl > - hideView ( fastShare ) ; < nl > - / / if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP ) { < nl > - / / View internal = container . findViewById ( R . id . menu _ bg ) ; < nl > - / / int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; < nl > - / / int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; < nl > - / / float finalRadius = ( float ) Math . hypot ( cx , cy ) ; < nl > - / / Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , finalRadius , 0 ) ; < nl > - / / anim . addListener ( new Animator . AnimatorListener ( ) { < nl > - / / @ Override < nl > - / / public void onAnimationStart ( Animator animator ) { < nl > - / / internal . setAlpha ( 1 ) ; < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onAnimationEnd ( Animator animator ) { < nl > - / / internal . setAlpha ( 0 ) ; < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onAnimationCancel ( Animator animator ) { < nl > - / / < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onAnimationRepeat ( Animator animator ) { < nl > - / / < nl > - / / } < nl > - / / } ) ; < nl > - / / < nl > - / / anim . setDuration ( 200 ) ; < nl > - / / anim . start ( ) ; < nl > - / / } < nl > + fastShare . scrollToPosition ( 0 ) ; < nl > + hideView ( root ) ; < nl > + < nl > + < nl > + if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP & & ! isFastShareFullScreen ) { < nl > + View internal = fastShare ; < nl > + int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; < nl > + int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; < nl > + float finalRadius = ( float ) Math . hypot ( cx , cy ) ; < nl > + Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , finalRadius , 0 ) ; < nl > + anim . addListener ( new Animator . AnimatorListener ( ) { < nl > + @ Override < nl > + public void onAnimationStart ( Animator animator ) { < nl > + internal . setAlpha ( 1 ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationEnd ( Animator animator ) { < nl > + internal . setAlpha ( 0 ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationCancel ( Animator animator ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationRepeat ( Animator animator ) { < nl > + < nl > + } < nl > + } ) ; < nl > + < nl > + anim . setDuration ( 200 ) ; < nl > + anim . start ( ) ; < nl > + } else { < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , root . getHeight ( ) ) ; < nl > + animation . setInterpolator ( MaterialInterpolator . getInstance ( ) ) ; < nl > + animation . setDuration ( 250 ) ; < nl > + fastShare . startAnimation ( animation ) ; < nl > + bottomBackground . startAnimation ( animation ) ; < nl > + } < nl > } < nl > } < nl > < nl > @ @ - 399 , 7 + 519 , 7 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > < nl > @ Override < nl > public boolean onBackPressed ( ) { < nl > - if ( container ! = null & & container . getVisibility ( ) = = View . VISIBLE ) { < nl > + if ( root ! = null & & root . getVisibility ( ) = = View . VISIBLE ) { < nl > hide ( ) ; < nl > return true ; < nl > } < nl > @ @ - 429 , 7 + 549 , 7 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall < nl > fastAttachAdapter . release ( ) ; < nl > fastAttachAdapter = null ; < nl > } < nl > - container = null ; < nl > + shareButtons = null ; < nl > fastShare = null ; < nl > root = null ; < nl > menuIconToChange = null ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java < nl > index 41b8db5 . . 56295659 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java < nl > @ @ - 38 , 9 + 38 , 12 @ @ public class FastAttachAdapter extends RecyclerView . Adapter < FastAttachAdapter . Fa < nl > private ValueModel < Set < String > > selectedVM ; < nl > < nl > private ActorBinder binder ; < nl > + private WidthGetter widthGetter ; < nl > < nl > - public FastAttachAdapter ( Context context ) { < nl > + public FastAttachAdapter ( Context context , WidthGetter widthGetter ) { < nl > + this . widthGetter = widthGetter ; < nl > this . context = context ; < nl > + / / setHasStableIds ( true ) ; < nl > binder = new ActorBinder ( ) ; < nl > binder . bind ( messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) , ( val , valueModel ) - > { < nl > imagesPath . clear ( ) ; < nl > @ @ - 50 , 19 + 53 , 23 @ @ public class FastAttachAdapter extends RecyclerView . Adapter < FastAttachAdapter . Fa < nl > selectedVM = new ValueModel < > ( " fast _ share . selected " , new HashSet < > ( ) ) ; < nl > } < nl > < nl > + < nl > protected View inflate ( int id , ViewGroup viewGroup ) { < nl > return LayoutInflater < nl > . from ( context ) < nl > . inflate ( id , viewGroup , false ) ; < nl > } < nl > < nl > + < nl > public void release ( ) { < nl > binder . unbindAll ( ) ; < nl > } < nl > < nl > @ Override < nl > public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { < nl > - return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; < nl > + View itemView = inflate ( R . layout . share _ menu _ fast _ share , parent ) ; < nl > + itemView . setLayoutParams ( new ViewGroup . LayoutParams ( widthGetter . get ( ) , widthGetter . get ( ) ) ) ; < nl > + return new FastShareVH ( itemView ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 128 , 4 + 135 , 8 @ @ public class FastAttachAdapter extends RecyclerView . Adapter < FastAttachAdapter . Fa < nl > public ValueModel < Set < String > > getSelectedVM ( ) { < nl > return selectedVM ; < nl > } < nl > + < nl > + public interface WidthGetter { < nl > + int get ( ) ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java < nl > index 7f3d850 . . 949098a 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java < nl > @ @ - 160 , 40 + 160 , 6 @ @ public class AutocompleteFragment extends BaseFragment { < nl > < nl > } < nl > < nl > - private static class ExpandAnimation extends Animation { < nl > - < nl > - private final View v ; < nl > - private final int targetHeight ; < nl > - private final int initialHeight ; < nl > - private int currentHeight ; < nl > - < nl > - public ExpandAnimation ( View v , int targetHeight , int initialHeight ) { < nl > - this . v = v ; < nl > - this . targetHeight = targetHeight ; < nl > - this . initialHeight = initialHeight ; < nl > - this . currentHeight = initialHeight ; < nl > - } < nl > - < nl > - @ Override < nl > - protected void applyTransformation ( float interpolatedTime , Transformation t ) { < nl > - if ( targetHeight > initialHeight ) { < nl > - currentHeight = < nl > - ( int ) ( ( targetHeight * interpolatedTime ) - initialHeight * interpolatedTime + initialHeight ) ; < nl > - } else { < nl > - currentHeight = < nl > - ( int ) ( initialHeight - ( initialHeight * interpolatedTime ) - targetHeight * ( 1f - interpolatedTime ) + targetHeight ) ; < nl > - } < nl > - < nl > - v . getLayoutParams ( ) . height = currentHeight ; < nl > - v . requestLayout ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean willChangeBounds ( ) { < nl > - return true ; < nl > - } < nl > - } < nl > - < nl > public void setUnderlyingView ( View underlyingView ) { < nl > this . underlyingView = underlyingView ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java < nl > index f7bd2f2 . . e556112 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java < nl > @ @ - 7 , 6 + 7 , 7 @ @ import android . view . ViewGroup ; < nl > import android . view . animation . AlphaAnimation ; < nl > import android . view . animation . Animation ; < nl > import android . view . animation . ScaleAnimation ; < nl > + import android . view . animation . Transformation ; < nl > < nl > import im . actor . sdk . view . MaterialInterpolator ; < nl > < nl > @ @ - 285 , 5 + 286 , 68 @ @ public class ViewUtils { < nl > layer . startAnimation ( scaleAnimation ) ; < nl > } < nl > < nl > + public static void expandView ( View v , int targetHeight , int initialHeight , After after ) { < nl > < nl > + Animation a = new ExpandAnimation ( v , targetHeight , initialHeight ) ; < nl > + < nl > + a . setDuration ( ( targetHeight > initialHeight ? targetHeight : initialHeight / Screen . dp ( 1 ) ) ) ; < nl > + a . setInterpolator ( MaterialInterpolator . getInstance ( ) ) ; < nl > + v . clearAnimation ( ) ; < nl > + a . setAnimationListener ( new Animation . AnimationListener ( ) { < nl > + @ Override < nl > + public void onAnimationStart ( Animation animation ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationEnd ( Animation animation ) { < nl > + after . doAfter ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationRepeat ( Animation animation ) { < nl > + < nl > + } < nl > + } ) ; < nl > + v . startAnimation ( a ) ; < nl > + < nl > + } < nl > + < nl > + private static class ExpandAnimation extends Animation { < nl > + < nl > + private final View v ; < nl > + private final int targetHeight ; < nl > + private final int initialHeight ; < nl > + private int currentHeight ; < nl > + < nl > + public ExpandAnimation ( View v , int targetHeight , int initialHeight ) { < nl > + this . v = v ; < nl > + this . targetHeight = targetHeight ; < nl > + this . initialHeight = initialHeight ; < nl > + this . currentHeight = initialHeight ; < nl > + } < nl > + < nl > + @ Override < nl > + protected void applyTransformation ( float interpolatedTime , Transformation t ) { < nl > + if ( targetHeight > initialHeight ) { < nl > + currentHeight = < nl > + ( int ) ( ( targetHeight * interpolatedTime ) - initialHeight * interpolatedTime + initialHeight ) ; < nl > + } else { < nl > + currentHeight = < nl > + ( int ) ( initialHeight - ( initialHeight * interpolatedTime ) - targetHeight * ( 1f - interpolatedTime ) + targetHeight ) ; < nl > + } < nl > + < nl > + v . getLayoutParams ( ) . height = currentHeight ; < nl > + v . requestLayout ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public boolean willChangeBounds ( ) { < nl > + return true ; < nl > + } < nl > + } < nl > + < nl > + public interface After { < nl > + void doAfter ( ) ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml < nl > index b3bde0f . . 6015f16 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml < nl > @ @ - 7 , 21 + 7 , 15 @ @ < nl > android : id = " @ + id / cancelField " < nl > android : layout _ width = " match _ parent " < nl > android : layout _ height = " match _ parent " < nl > - android : background = " @ color / dialog _ overlay " < nl > android : clickable = " true " / > < nl > < nl > < LinearLayout < nl > android : id = " @ + id / menu _ bg " < nl > android : layout _ width = " match _ parent " < nl > - android : layout _ height = " 196dp " < nl > + android : layout _ height = " 191dp " < nl > + android : paddingTop = " 10dp " < nl > android : layout _ gravity = " bottom " < nl > android : orientation = " vertical " > < nl > - < nl > - < ! - - < android . support . v7 . widget . RecyclerView - - > < nl > - < ! - - android : id = " @ + id / fast _ share " - - > < nl > - < ! - - android : layout _ width = " match _ parent " - - > < nl > - < ! - - android : layout _ height = " 90dp " / > - - > < nl > - < nl > < FrameLayout < nl > android : id = " @ + id / share _ row _ one " < nl > android : layout _ width = " wrap _ content " < nl > diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > index 8201f0d . . f217534 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > @ @ - 513 , 6 + 513 , 13 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > public GalleryVM getGalleryVM ( ) { < nl > if ( galleryVM = = null ) { < nl > galleryVM = new GalleryVM ( ) ; < nl > + checkGalleryScannerActor ( ) ; < nl > + } < nl > + return galleryVM ; < nl > + } < nl > + < nl > + protected void checkGalleryScannerActor ( ) { < nl > + if ( galleryScannerActor = = null ) { < nl > galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > @ Override < nl > public Actor create ( ) { < nl > @ @ - 520 , 10 + 527 , 10 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > } < nl > } ) , " actor / gallery _ scanner " ) ; < nl > } < nl > - return galleryVM ; < nl > } < nl > < nl > public ActorRef getGalleryScannerActor ( ) { < nl > + checkGalleryScannerActor ( ) ; < nl > return galleryScannerActor ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index bf6a2fa . . e54c5ad 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 11 , 6 + 11 , 7 @ @ import android . os . Bundle ; < nl > import android . view . ViewGroup ; < nl > < nl > import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . imagepipeline . core . ImagePipelineConfig ; < nl > < nl > import org . jetbrains . annotations . NotNull ; < nl > < nl > @ @ - 193 , 7 + 194 , 10 @ @ public class ActorSDK { < nl > / / SDK Tools < nl > / / < nl > < nl > - Fresco . initialize ( application ) ; < nl > + ImagePipelineConfig config = ImagePipelineConfig . newBuilder ( application ) < nl > + . setDownsampleEnabled ( true ) < nl > + . build ( ) ; < nl > + Fresco . initialize ( application , config ) ; < nl > AndroidContext . setContext ( application ) ; < nl > / / TODO : Replace < nl > new SmileProcessor ( application ) . loadEmoji ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index 885ab7a . . 19ce772 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 22 , 6 + 22 , 8 @ @ import android . support . v4 . app . Fragment ; < nl > import android . support . v4 . content . ContextCompat ; < nl > import android . support . v7 . app . ActionBar ; < nl > import android . support . v7 . view . ActionMode ; < nl > + import android . support . v7 . widget . LinearLayoutManager ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > import android . text . Editable ; < nl > import android . text . Spannable ; < nl > import android . text . TextWatcher ; < nl > @ @ - 32 , 6 + 34 , 7 @ @ import android . view . MenuItem ; < nl > import android . view . MotionEvent ; < nl > import android . view . View ; < nl > import android . view . animation . AlphaAnimation ; < nl > + import android . view . animation . Animation ; < nl > import android . view . animation . TranslateAnimation ; < nl > import android . widget . AdapterView ; < nl > import android . widget . FrameLayout ; < nl > @ @ - 53 , 6 + 56 , 7 @ @ import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . core . viewmodel . GroupVM ; < nl > import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . actors . ActorSystem ; < nl > @ @ - 62 , 15 + 66 , 16 @ @ import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . ActorStyle ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . calls . CallActivity ; < nl > import im . actor . sdk . controllers . conversation . mentions . MentionsAdapter ; < nl > import im . actor . sdk . controllers . conversation . messages . AudioHolder ; < nl > import im . actor . sdk . controllers . conversation . messages . MessagesFragment ; < nl > + import im . actor . sdk . controllers . conversation . view . FastShareAdapter ; < nl > import im . actor . sdk . controllers . fragment . settings . BaseActorChatActivity ; < nl > import im . actor . sdk . core . audio . VoiceCaptureActor ; < nl > import im . actor . sdk . intents . ActorIntent ; < nl > import im . actor . sdk . util . Randoms ; < nl > import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . util . images . GalleryScannerActor ; < nl > import im . actor . sdk . view . avatar . AvatarView ; < nl > import im . actor . sdk . controllers . conversation . view . TypingDrawable ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > @ @ - 78 , 7 + 83 , 6 @ @ import im . actor . sdk . view . markdown . AndroidMarkdown ; < nl > import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > < nl > - import static im . actor . sdk . util . ViewUtils . expand ; < nl > import static im . actor . sdk . util . ViewUtils . expandMentions ; < nl > import static im . actor . sdk . util . ViewUtils . goneView ; < nl > import static im . actor . sdk . util . ViewUtils . hideView ; < nl > @ @ - 152 , 6 + 156 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private int slideStart ; < nl > private TextView audioTimer ; < nl > private boolean isAudioVisible ; < nl > + private boolean isShareVisible ; < nl > private int SLIDE _ LIMIT ; < nl > ActorRef voiceRecordActor ; < nl > private String audioFile ; < nl > @ @ - 204 , 6 + 209 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > private Intent intent ; < nl > private boolean textEditing = false ; < nl > private long currentEditRid ; < nl > + private Animation . AnimationListener animationListener ; < nl > < nl > public static Intent build ( Peer peer , boolean compose , Context context ) { < nl > final Intent intent = new Intent ( context , ChatActivity . class ) ; < nl > @ @ - 283 , 7 + 289 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > goneView ( quoteContainer ) ; < nl > quoteText . setText ( " " ) ; < nl > currentQuote = " " ; < nl > - if ( textEditing ) { < nl > + if ( textEditing ) { < nl > messageEditText . setText ( " " ) ; < nl > } < nl > textEditing = false ; < nl > @ @ - 301 , 10 + 307 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } ) ; < nl > shareContainer = findViewById ( R . id . closeMenuLayout ) ; < nl > - shareContainer . setOnClickListener ( new View . OnClickListener ( ) { < nl > + shareContainer . setOnTouchListener ( new View . OnTouchListener ( ) { < nl > @ Override < nl > - public void onClick ( View v ) { < nl > - hideShareMenu ( ) ; < nl > + public boolean onTouch ( View v , MotionEvent event ) { < nl > + hideShare ( ) ; < nl > + return false ; < nl > } < nl > } ) ; < nl > < nl > @ @ - 382 , 7 + 389 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > < nl > / / hide it < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > } < nl > } ; < nl > < nl > @ @ - 395 , 6 + 402 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; < nl > handleIntent ( ) ; < nl > < nl > + RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; < nl > + FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; < nl > + LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; < nl > + fastShare . setAdapter ( fastShareAdapter ) ; < nl > + fastShare . setLayoutManager ( layoutManager ) ; < nl > < nl > } < nl > < nl > @ @ - 434 , 13 + 446 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > handleIntent ( ) ; < nl > } < nl > < nl > - private void hideShareMenu ( ) { < nl > - if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { < nl > - / / hideView ( shareMenu ) ; < nl > - expand ( shareMenu , 0 ) ; < nl > - shareContainer . setVisibility ( View . GONE ) ; < nl > - } < nl > - } < nl > + < nl > < nl > @ Override < nl > protected Fragment onCreateFragment ( ) { < nl > @ @ - 831 , 13 + 837 , 13 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / } ) ; < nl > / / popup . show ( ) ; < nl > if ( shareMenuMaxHeight = = 0 ) { < nl > - shareMenuMaxHeight = Screen . dp ( 180 ) ; < nl > + shareMenuMaxHeight = Screen . dp ( 245 ) ; < nl > } < nl > if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > } else { < nl > shareContainer . setVisibility ( View . VISIBLE ) ; < nl > - expand ( shareMenu , shareMenuMaxHeight ) ; < nl > + showShare ( ) ; < nl > if ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ LANDSCAPE ) { < nl > keyboardUtils . setImeVisibility ( messageEditText , false ) ; < nl > } < nl > @ @ - 982 , 7 + 988 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > } < nl > } < nl > } ) ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > expandMentions ( mentionsList , 0 , mentionsList . getCount ( ) ) ; < nl > } < nl > < nl > @ @ - 1028 , 7 + 1034 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > quoteText . setText ( rawQuote ) ; < nl > } < nl > currentQuote = rawQuote ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; < nl > showView ( quoteContainer ) ; < nl > } < nl > @ @ - 1195 , 7 + 1201 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; < nl > quoteText . setText ( R . string . edit _ message ) ; < nl > messageEditText . setText ( text ) ; < nl > - hideShareMenu ( ) ; < nl > + hideShare ( ) ; < nl > showView ( quoteContainer ) ; < nl > < nl > } < nl > @ @ - 1343 , 6 + 1349 , 60 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > < nl > } < nl > < nl > + private boolean animationInProgress = false ; < nl > + < nl > + private void showShare ( ) { < nl > + if ( animationInProgress ) { < nl > + return ; < nl > + } < nl > + if ( animationListener = = null ) { < nl > + animationListener = new Animation . AnimationListener ( ) { < nl > + @ Override < nl > + public void onAnimationStart ( Animation animation ) { < nl > + animationInProgress = true ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationEnd ( Animation animation ) { < nl > + animationInProgress = false ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnimationRepeat ( Animation animation ) { < nl > + < nl > + } < nl > + } ; < nl > + } < nl > + < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , Screen . getHeight ( ) , 0 ) ; < nl > + animation . setDuration ( 160 ) ; < nl > + animation . setAnimationListener ( animationListener ) ; < nl > + shareMenu . clearAnimation ( ) ; < nl > + shareMenu . setAnimation ( animation ) ; < nl > + shareMenu . animate ( ) ; < nl > + shareMenu . setVisibility ( View . VISIBLE ) ; < nl > + isShareVisible = true ; < nl > + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( true ) ) ; < nl > + } < nl > + < nl > + private void hideShare ( ) { < nl > + if ( ! isShareVisible | | animationInProgress ) { < nl > + return ; < nl > + } < nl > + isShareVisible = false ; < nl > + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , Screen . getHeight ( ) ) ; < nl > + animation . setDuration ( 160 ) ; < nl > + < nl > + animation . setAnimationListener ( animationListener ) ; < nl > + shareMenu . clearAnimation ( ) ; < nl > + shareMenu . setAnimation ( animation ) ; < nl > + shareMenu . animate ( ) ; < nl > + shareMenu . setVisibility ( View . GONE ) ; < nl > + shareContainer . setVisibility ( View . GONE ) ; < nl > + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( false ) ) ; < nl > + < nl > + } < nl > + < nl > private void slideAudio ( int value ) { < nl > ObjectAnimator oa = ObjectAnimator . ofFloat ( audioSlide , " translationX " , audioSlide . getX ( ) , - value ) ; < nl > oa . setDuration ( 0 ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > new file mode 100644 < nl > index 0000000 . . a7cc631 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java < nl > @ @ - 0 , 0 + 1 , 109 @ @ < nl > + package im . actor . sdk . controllers . conversation . view ; < nl > + < nl > + import android . content . Context ; < nl > + import android . net . Uri ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > + import android . view . LayoutInflater ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . widget . CheckBox ; < nl > + import android . widget . CompoundButton ; < nl > + import android . widget . FrameLayout ; < nl > + < nl > + import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; < nl > + import com . facebook . drawee . view . SimpleDraweeView ; < nl > + import com . facebook . imagepipeline . common . ResizeOptions ; < nl > + import com . facebook . imagepipeline . request . ImageRequest ; < nl > + import com . facebook . imagepipeline . request . ImageRequestBuilder ; < nl > + < nl > + import java . io . File ; < nl > + import java . util . ArrayList ; < nl > + import java . util . HashSet ; < nl > + import java . util . Set ; < nl > + < nl > + import im . actor . runtime . mvvm . Value ; < nl > + import im . actor . runtime . mvvm . ValueChangedListener ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . util . Screen ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { < nl > + < nl > + ArrayList < String > imagesPath = new ArrayList < > ( ) ; < nl > + Set < String > selected = new HashSet < > ( ) ; < nl > + Context context ; < nl > + < nl > + public FastShareAdapter ( Context context ) { < nl > + this . context = context ; < nl > + messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { < nl > + @ Override < nl > + public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { < nl > + imagesPath . clear ( ) ; < nl > + imagesPath . addAll ( val ) ; < nl > + notifyDataSetChanged ( ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + protected View inflate ( int id , ViewGroup viewGroup ) { < nl > + return LayoutInflater < nl > + . from ( context ) < nl > + . inflate ( id , viewGroup , false ) ; < nl > + } < nl > + < nl > + < nl > + @ Override < nl > + public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { < nl > + return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onBindViewHolder ( FastShareVH holder , int position ) { < nl > + holder . bind ( imagesPath . get ( position ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public int getItemCount ( ) { < nl > + return imagesPath . size ( ) ; < nl > + } < nl > + < nl > + public class FastShareVH extends RecyclerView . ViewHolder { < nl > + SimpleDraweeView v ; < nl > + CheckBox chb ; < nl > + String data ; < nl > + < nl > + public FastShareVH ( View itemView ) { < nl > + super ( itemView ) ; < nl > + v = ( SimpleDraweeView ) itemView . findViewById ( R . id . image ) ; < nl > + chb = ( CheckBox ) itemView . findViewById ( R . id . check ) ; < nl > + int size = context . getResources ( ) . getDimensionPixelSize ( R . dimen . share _ btn _ size ) ; < nl > + v . setLayoutParams ( new FrameLayout . LayoutParams ( size , size ) ) ; < nl > + chb . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { < nl > + @ Override < nl > + public void onCheckedChanged ( CompoundButton buttonView , boolean isChecked ) { < nl > + if ( isChecked & & data ! = null ) { < nl > + selected . add ( data ) ; < nl > + } else { < nl > + selected . remove ( data ) ; < nl > + } < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + public void bind ( String path ) { < nl > + data = path ; < nl > + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( path ) ) ) < nl > + . setResizeOptions ( new ResizeOptions ( v . getLayoutParams ( ) . width , < nl > + v . getLayoutParams ( ) . height ) ) < nl > + . build ( ) ; < nl > + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) < nl > + . setOldController ( v . getController ( ) ) < nl > + . setImageRequest ( request ) < nl > + . build ( ) ; < nl > + v . setController ( controller ) ; < nl > + chb . setChecked ( selected . contains ( data ) ) ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java < nl > new file mode 100644 < nl > index 0000000 . . e2dcc9b < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java < nl > @ @ - 0 , 0 + 1 , 171 @ @ < nl > + package im . actor . sdk . util . images ; < nl > + < nl > + import android . content . BroadcastReceiver ; < nl > + import android . content . Context ; < nl > + import android . content . Intent ; < nl > + import android . content . IntentFilter ; < nl > + import android . database . Cursor ; < nl > + import android . graphics . Bitmap ; < nl > + import android . graphics . BitmapFactory ; < nl > + import android . net . Uri ; < nl > + import android . provider . MediaStore ; < nl > + < nl > + import java . io . File ; < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . utils . ImageHelper ; < nl > + import im . actor . core . viewmodel . GalleryVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class GalleryScannerActor extends Actor { < nl > + < nl > + Context context ; < nl > + Uri uri ; < nl > + Cursor cursor ; < nl > + int offset = 0 ; < nl > + int column _ index _ data , column _ index _ folder _ name , column _ index _ date ; < nl > + < nl > + ArrayList < String > listOfAllImages = new ArrayList < String > ( ) ; < nl > + ArrayList < String > newMedia = new ArrayList < > ( ) ; < nl > + < nl > + String absolutePathOfImage = null ; < nl > + GalleryVM galleryVM ; < nl > + Uri lastScan ; < nl > + < nl > + private static final int SCAN _ COUNT = 10 ; < nl > + < nl > + ArrayList < String > loaded = new ArrayList < > ( ) ; < nl > + private boolean visible = false ; < nl > + private boolean scanned = false ; < nl > + private String [ ] projection ; < nl > + < nl > + public GalleryScannerActor ( Context context ) { < nl > + this . context = context ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + galleryVM = messenger ( ) . getGalleryVM ( ) ; < nl > + uri = android . provider . MediaStore . Images . Media . EXTERNAL _ CONTENT _ URI ; < nl > + < nl > + self ( ) . send ( new InitScan ( ) ) ; < nl > + } < nl > + < nl > + public void initScan ( ) { < nl > + projection = new String [ ] { MediaStore . MediaColumns . DATA , < nl > + MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME , < nl > + MediaStore . Images . Media . DATE _ MODIFIED } ; < nl > + < nl > + cursor = getQuery ( ) ; < nl > + < nl > + if ( cursor ! = null & & cursor . getCount ( ) > 0 ) { < nl > + column _ index _ data = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATA ) ; < nl > + column _ index _ date = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATE _ MODIFIED ) ; < nl > + column _ index _ folder _ name = cursor < nl > + . getColumnIndexOrThrow ( MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME ) ; < nl > + < nl > + < nl > + self ( ) . send ( new Scan ( ) ) ; < nl > + } else { < nl > + schedule ( new InitScan ( ) , 1000 ) ; < nl > + } < nl > + < nl > + } < nl > + < nl > + public Cursor getQuery ( ) { < nl > + return context . getContentResolver ( ) . query ( uri , projection , null , < nl > + null , MediaStore . MediaColumns . DATE _ MODIFIED + " DESC " ) ; < nl > + } < nl > + < nl > + private void scan ( ) { < nl > + < nl > + < nl > + int i = 0 ; < nl > + while ( offset + i + + < offset + SCAN _ COUNT & & cursor . moveToNext ( ) ) { < nl > + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; < nl > + < nl > + listOfAllImages . add ( absolutePathOfImage ) ; < nl > + } < nl > + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; < nl > + offset + = i ; < nl > + if ( offset < cursor . getCount ( ) ) { < nl > + self ( ) . send ( new Scan ( ) ) ; < nl > + } else { < nl > + lastScan = MediaStore . getMediaScannerUri ( ) ; < nl > + scanned = true ; < nl > + schedule ( new CheckNew ( ) , 1000 ) ; < nl > + } < nl > + } < nl > + < nl > + private void checkNew ( ) { < nl > + cursor = getQuery ( ) ; < nl > + newMedia . clear ( ) ; < nl > + while ( cursor ! = null & & cursor . moveToNext ( ) ) { < nl > + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; < nl > + if ( ! listOfAllImages . contains ( absolutePathOfImage ) ) { < nl > + Bitmap bitmap = ImageHelper . loadOptimizedHQ ( absolutePathOfImage ) ; < nl > + if ( bitmap ! = null ) { < nl > + bitmap . recycle ( ) ; < nl > + newMedia . add ( absolutePathOfImage ) ; < nl > + } else { < nl > + break ; < nl > + } < nl > + } else { < nl > + break ; < nl > + } < nl > + } < nl > + if ( newMedia . size ( ) > 0 ) { < nl > + listOfAllImages . addAll ( 0 , newMedia ) ; < nl > + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; < nl > + } < nl > + if ( visible ) { < nl > + schedule ( new CheckNew ( ) , 1000 ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof Scan ) { < nl > + scan ( ) ; < nl > + } else if ( message instanceof InitScan ) { < nl > + initScan ( ) ; < nl > + } else if ( message instanceof CheckNew ) { < nl > + checkNew ( ) ; < nl > + } else if ( message instanceof Visible ) { < nl > + if ( ( ( Visible ) message ) . isVisible ( ) ) { < nl > + visible = true ; < nl > + if ( scanned ) { < nl > + self ( ) . send ( new CheckNew ( ) ) ; < nl > + } < nl > + } else { < nl > + visible = false ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + private static class Scan { < nl > + < nl > + } < nl > + < nl > + private static class InitScan { < nl > + < nl > + } < nl > + < nl > + private static class CheckNew { < nl > + < nl > + } < nl > + < nl > + public static class Visible { < nl > + boolean visible ; < nl > + < nl > + public Visible ( boolean visible ) { < nl > + this . visible = visible ; < nl > + } < nl > + < nl > + public boolean isVisible ( ) { < nl > + return visible ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > index 68cf866 . . 029cf8f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml < nl > @ @ - 81 , 11 + 81 , 12 @ @ < nl > < nl > < LinearLayout < nl > android : layout _ width = " match _ parent " < nl > - android : layout _ height = " 0dp " < nl > + android : layout _ height = " 245dp " < nl > android : layout _ above = " @ + id / fl _ send _ panel " < nl > android : id = " @ + id / share _ container " < nl > android : visibility = " invisible " < nl > android : orientation = " vertical " < nl > + android : gravity = " bottom " < nl > android : background = " @ android : color / transparent " > < nl > < nl > < ImageView < nl > @ @ - 96 , 7 + 97 , 7 @ @ < nl > < nl > < TableLayout < nl > android : id = " @ + id / share _ menu " < nl > - android : paddingTop = " 20dp " < nl > + android : paddingTop = " 5dp " < nl > android : layout _ gravity = " bottom " < nl > android : layout _ width = " wrap _ content " < nl > android : layout _ height = " wrap _ content " < nl > @ @ - 105 , 6 + 106 , 15 @ @ < nl > < nl > < TableRow > < nl > < nl > + < android . support . v7 . widget . RecyclerView < nl > + android : id = " @ + id / fast _ share " < nl > + android : layout _ width = " 0dp " < nl > + android : layout _ weight = " 1 " < nl > + android : layout _ height = " @ dimen / fast _ share _ size " / > < nl > + < / TableRow > < nl > + < nl > + < TableRow > < nl > + < nl > < LinearLayout < nl > android : gravity = " center _ horizontal " < nl > android : layout _ width = " wrap _ content " < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml < nl > new file mode 100644 < nl > index 0000000 . . 4814076 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < nl > + < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " < nl > + android : padding = " 5dp " > < nl > + < nl > + < com . facebook . drawee . view . SimpleDraweeView < nl > + android : id = " @ + id / image " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " / > < nl > + < nl > + < CheckBox < nl > + android : layout _ gravity = " top | right " < nl > + < nl > + android : id = " @ + id / check " < nl > + android : layout _ width = " wrap _ content " < nl > + android : layout _ height = " wrap _ content " / > < nl > + < nl > + < / FrameLayout > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > index 6f29efa . . e2e84c6 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml < nl > @ @ - 24 , 6 + 24 , 7 @ @ < nl > < dimen name = " tour _ card _ message " > 14sp < / dimen > < nl > < dimen name = " keyboard _ height " > 250dp < / dimen > < nl > < dimen name = " share _ btn _ size " > 60dp < / dimen > < nl > + < dimen name = " fast _ share _ size " > 70dp < / dimen > < nl > < nl > < dimen name = " call _ btn _ size " > 40dp < / dimen > < nl > < dimen name = " end _ call _ btn _ size " > 70dp < / dimen > < nl > diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > index 8fd7d10 . . 27391fb 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java < nl > @ @ - 40 , 8 + 40 , 11 @ @ import im . actor . core . utils . IOUtils ; < nl > import im . actor . core . utils . ImageHelper ; < nl > import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . core . viewmodel . GalleryVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > import im . actor . runtime . actors . Props ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > import im . actor . runtime . bser . BserCreator ; < nl > @ @ - 51 , 6 + 54 , 7 @ @ import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . runtime . mvvm . Value ; < nl > import im . actor . runtime . mvvm . ValueChangedListener ; < nl > import im . actor . runtime . storage . ListEngineItem ; < nl > + import im . actor . sdk . util . images . GalleryScannerActor ; < nl > import me . leolin . shortcutbadger . ShortcutBadger ; < nl > < nl > import static im . actor . runtime . actors . ActorSystem . system ; < nl > @ @ - 68 , 6 + 72 , 8 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > private HashMap < Peer , BindedDisplayList < Message > > messagesLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; < nl > private HashMap < Peer , BindedDisplayList < Message > > docsLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; < nl > private HashMap < String , BindedDisplayList > customLists = new HashMap < String , BindedDisplayList > ( ) ; < nl > + private GalleryVM galleryVM ; < nl > + private ActorRef galleryScannerActor ; < nl > < nl > public AndroidMessenger ( Context context , im . actor . core . Configuration configuration ) { < nl > super ( configuration ) ; < nl > @ @ - 482 , 6 + 488 , 23 @ @ public class AndroidMessenger extends im . actor . core . Messenger { < nl > return customLists . get ( key ) ; < nl > } < nl > < nl > + public GalleryVM getGalleryVM ( ) { < nl > + if ( galleryVM = = null ) { < nl > + galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public Actor create ( ) { < nl > + return new GalleryScannerActor ( AndroidContext . getContext ( ) ) ; < nl > + } < nl > + } ) , " actor / gallery _ scanner " ) ; < nl > + galleryVM = new GalleryVM ( ) ; < nl > + } < nl > + return galleryVM ; < nl > + } < nl > + < nl > + public ActorRef getGalleryScannerActor ( ) { < nl > + return galleryScannerActor ; < nl > + } < nl > + < nl > public EventBus getEvents ( ) { < nl > return modules . getEvents ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java < nl > new file mode 100644 < nl > index 0000000 . . 9a3eb07 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java < nl > @ @ - 0 , 0 + 1 , 19 @ @ < nl > + package im . actor . core . viewmodel ; < nl > + < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . entity . StickerPack ; < nl > + import im . actor . runtime . mvvm . ValueModel ; < nl > + < nl > + public class GalleryVM { < nl > + < nl > + private ValueModel < ArrayList < String > > galleryMediaPath ; < nl > + < nl > + public GalleryVM ( ) { < nl > + galleryMediaPath = new ValueModel < > ( " gallery . photo " , new ArrayList < String > ( ) ) ; < nl > + } < nl > + < nl > + public ValueModel < ArrayList < String > > getGalleryMediaPath ( ) { < nl > + return galleryMediaPath ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java 
 index b26975e . . a0c1ebb 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatFragment . java 
 @ @ - 344 , 7 + 344 , 7 @ @ public class ChatFragment extends BaseFragment implements InputBarCallback , Mess 
 
 AbsAttachFragment attachFragment = findShareFragment ( ) ; 
 if ( attachFragment ! = null ) { 
 - quoteContainer . post ( ( ) - > attachFragment . show ( ) ) ; 
 + quoteContainer . postDelayed ( ( ) - > attachFragment . show ( ) , 200 ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java 
 index 75694e9 . . f6142b8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / AttachFragment . java 
 @ @ - 15 , 7 + 15 , 6 @ @ import android . support . annotation . NonNull ; 
 import android . support . annotation . Nullable ; 
 import android . support . v4 . content . ContextCompat ; 
 import android . support . v7 . widget . GridLayoutManager ; 
 - import android . support . v7 . widget . LinearLayoutManager ; 
 import android . support . v7 . widget . RecyclerView ; 
 import android . util . Base64 ; 
 import android . view . Gravity ; 
 @ @ - 23 , 6 + 22 , 7 @ @ import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewAnimationUtils ; 
 import android . view . ViewGroup ; 
 + import android . view . animation . TranslateAnimation ; 
 import android . widget . FrameLayout ; 
 import android . widget . ImageView ; 
 import android . widget . LinearLayout ; 
 @ @ - 42 , 6 + 42 , 7 @ @ import im . actor . sdk . controllers . tools . MediaPickerCallback ; 
 import im . actor . sdk . controllers . tools . MediaPickerFragment ; 
 import im . actor . sdk . util . SDKFeatures ; 
 import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . view . MaterialInterpolator ; 
 import im . actor . sdk . view . ShareMenuButtonFactory ; 
 import im . actor . sdk . view . adapters . HeaderViewRecyclerAdapter ; 
 
 @ @ - 53 , 13 + 54 , 22 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 public static final int SPAN _ COUNT = 4 ; 
 
 private FrameLayout root ; 
 - private View container ; 
 + private View shareButtons ; 
 private FastAttachAdapter fastAttachAdapter ; 
 private ImageView menuIconToChange ; 
 private TextView menuTitleToChange ; 
 + private ImageView menuIconToChangeClone ; 
 + private TextView menuTitleToChangeClone ; 
 
 private boolean isLoaded = false ; 
 private RecyclerView fastShare ; 
 + private View bottomBackground ; 
 + private boolean isFastShareFullScreen ; 
 + private GridLayoutManager layoutManager ; 
 + private int shareIconSize ; 
 + private View hideClone ; 
 + private int fastShareWidth ; 
 + private int spanCount ; 
 
 public AttachFragment ( Peer peer ) { 
 super ( peer ) ; 
 @ @ - 68 , 6 + 78 , 21 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 public AttachFragment ( ) { 
 } 
 
 + @ Override 
 + public void onConfigurationChanged ( Configuration newConfig ) { 
 + super . onConfigurationChanged ( newConfig ) ; 
 + hide ( ) ; 
 + if ( layoutManager ! = null ) { 
 + layoutManager = getGridLayoutManager ( ) ; 
 + } 
 + root . removeAllViews ( ) ; 
 + isLoaded = false ; 
 + } 
 + 
 + protected GridLayoutManager getLayoutManager ( ) { 
 + return layoutManager ; 
 + } 
 + 
 @ Nullable 
 @ Override 
 public View onCreateView ( LayoutInflater inflater , @ Nullable ViewGroup fcontainer , @ Nullable Bundle savedInstanceState ) { 
 @ @ - 78 , 11 + 103 , 24 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 . commitNow ( ) ; 
 } 
 
 - root = new FrameLayout ( getContext ( ) ) ; 
 + root = new FrameLayout ( getContext ( ) ) { 
 + @ Override 
 + protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { 
 + super . onSizeChanged ( w , h , oldw , oldh ) ; 
 + if ( h ! = oldh & & shareButtons ! = null ) { 
 + shareButtons . getLayoutParams ( ) . height = root . getHeight ( ) - Screen . dp ( 135 ) ; 
 + shareButtons . requestLayout ( ) ; 
 + } 
 + } 
 + } ; 
 root . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , 
 ViewGroup . LayoutParams . MATCH _ PARENT ) ) ; 
 + root . setBackgroundColor ( getActivity ( ) . getResources ( ) . getColor ( R . color . dialog _ overlay ) ) ; 
 + root . setVisibility ( View . INVISIBLE ) ; 
 
 isLoaded = false ; 
 + / / messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Show ( ) ) ; 
 + / / messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Hide ( ) ) ; 
 
 return root ; 
 } 
 @ @ - 93 , 37 + 131 , 57 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 } 
 isLoaded = true ; 
 
 - container = getLayoutInflater ( null ) . inflate ( R . layout . share _ menu , root , false ) ; 
 + shareButtons = getLayoutInflater ( null ) . inflate ( R . layout . share _ menu , root , false ) ; 
 fastShare = new RecyclerView ( getActivity ( ) ) ; 
 - fastShare . setVisibility ( View . INVISIBLE ) ; 
 + fastShare . setOverScrollMode ( View . OVER _ SCROLL _ NEVER ) ; 
 
 - container . findViewById ( R . id . menu _ bg ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; 
 - container . findViewById ( R . id . cancelField ) . setOnClickListener ( view - > hide ( ) ) ; 
 + shareButtons . findViewById ( R . id . menu _ bg ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; 
 + shareButtons . findViewById ( R . id . cancelField ) . setOnClickListener ( view - > hide ( ) ) ; 
 + 
 + / / 
 + / / Setup appearing hide button 
 + / / 
 + isFastShareFullScreen = false ; 
 + fastShare . addOnScrollListener ( new RecyclerView . OnScrollListener ( ) { 
 + @ Override 
 + public void onScrolled ( RecyclerView recyclerView , int dx , int dy ) { 
 + boolean visible = layoutManager . findFirstVisibleItemPosition ( ) = = 0 ; 
 + if ( isFastShareFullScreen = = visible ) { 
 + isFastShareFullScreen = ! visible ; 
 + if ( visible ) { 
 + hideView ( hideClone ) ; 
 + } else { 
 + showView ( hideClone ) ; 
 + } 
 + } 
 + } 
 + } ) ; 
 
 / / 
 / / Building Menu Fields 
 / / 
 ArrayList < ShareMenuField > menuFields = new ArrayList < > ( onCreateFields ( ) ) ; 
 / / Adding Additional Hide for better UI 
 + ShareMenuField shareMenuFieldHide = new ShareMenuField ( R . id . share _ hide , R . drawable . attach _ hide2 , style . getAccentColor ( ) , " " ) ; 
 if ( menuFields . size ( ) % 2 ! = 0 ) { 
 - menuFields . add ( new ShareMenuField ( R . id . share _ hide , R . drawable . attach _ hide2 , style . getBackyardBackgroundColor ( ) , " " ) ) ; 
 + menuFields . add ( shareMenuFieldHide ) ; 
 } 
 
 / / 
 / / Building Layout 
 / / 
 - FrameLayout row = ( FrameLayout ) container . findViewById ( R . id . share _ row _ one ) ; 
 + FrameLayout row = ( FrameLayout ) shareButtons . findViewById ( R . id . share _ row _ one ) ; 
 boolean first = true ; 
 int menuItemSize = Screen . dp ( 80 ) ; 
 int screenWidth = 
 ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ PORTRAIT 
 ? Screen . getWidth ( ) 
 - : Screen . getHeight ( ) ) ; 
 + : Screen . getWidth ( ) ) ; 
 int distance = screenWidth / ( menuFields . size ( ) / 2 + menuFields . size ( ) % 2 ) ; 
 int initialMargin = distance / 2 - menuItemSize / 2 ; 
 int marginFromStart = initialMargin ; 
 int secondRowTopMargin = Screen . dp ( 96 ) ; 
 - int shareIconSize = Screen . dp ( 60 ) ; 
 + shareIconSize = Screen . dp ( 60 ) ; 
 View . OnClickListener defaultSendOcl = null ; 
 
 Configuration config = getResources ( ) . getConfiguration ( ) ; 
 @ @ - 135 , 43 + 193 , 15 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 for ( int i = 0 ; i < menuFields . size ( ) ; i + + ) { 
 ShareMenuField f = menuFields . get ( i ) ; 
 
 - LinearLayout shareItem = new LinearLayout ( getActivity ( ) ) ; 
 - shareItem . setOrientation ( LinearLayout . VERTICAL ) ; 
 - shareItem . setGravity ( Gravity . CENTER _ HORIZONTAL ) ; 
 - 
 - TextView title = new TextView ( getActivity ( ) ) ; 
 - title . setGravity ( Gravity . CENTER ) ; 
 - title . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 - title . setText ( f . getTitle ( ) ) ; 
 - title . setTextSize ( 14 ) ; 
 - 
 - ImageView icon = new ImageView ( getActivity ( ) ) ; 
 - icon . setClickable ( true ) ; 
 - if ( f . getSelector ( ) ! = 0 ) { 
 - icon . setBackgroundResource ( f . getSelector ( ) ) ; 
 - } else { 
 - icon . setBackgroundDrawable ( ShareMenuButtonFactory . get ( f . getColor ( ) , getActivity ( ) ) ) ; 
 - icon . setScaleType ( ImageView . ScaleType . CENTER _ INSIDE ) ; 
 - icon . setImageResource ( f . getIcon ( ) ) ; 
 - } 
 - 
 - shareItem . addView ( icon , shareIconSize , shareIconSize ) ; 
 - shareItem . addView ( title ) ; 
 - 
 - View . OnClickListener l = v - > { 
 - hide ( ) ; 
 - onItemClicked ( v . getId ( ) ) ; 
 - } ; 
 - icon . setId ( f . getId ( ) ) ; 
 - icon . setOnClickListener ( l ) ; 
 + View shareItem = instantiateShareMenuItem ( f ) ; 
 
 FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( menuItemSize , menuItemSize ) ; 
 params . setMargins ( isRtl ? initialMargin : marginFromStart , first ? 0 : secondRowTopMargin , isRtl ? marginFromStart : initialMargin , 0 ) ; 
 
 if ( i = = menuFields . size ( ) - 1 ) { 
 - menuIconToChange = icon ; 
 - menuTitleToChange = title ; 
 - defaultSendOcl = l ; 
 + menuIconToChange = ( ImageView ) shareItem . getTag ( R . id . icon ) ; 
 + menuTitleToChange = ( TextView ) shareItem . getTag ( R . id . title ) ; 
 + defaultSendOcl = ( View . OnClickListener ) shareItem . getTag ( R . id . list ) ; 
 
 params . setMargins ( isRtl ? 0 : marginFromStart , first ? 0 : secondRowTopMargin , isRtl ? marginFromStart : 0 , 0 ) ; 
 
 @ @ - 183 , 6 + 213 , 12 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 first = ! first ; 
 } 
 
 + hideClone = instantiateShareMenuItem ( shareMenuFieldHide ) ; 
 + hideClone . setVisibility ( View . INVISIBLE ) ; 
 + menuTitleToChangeClone = ( TextView ) hideClone . getTag ( R . id . title ) ; 
 + menuIconToChangeClone = ( ImageView ) hideClone . getTag ( R . id . icon ) ; 
 + menuTitleToChangeClone . setVisibility ( View . GONE ) ; 
 + 
 menuIconToChange . setTag ( R . id . icon , menuIconToChange . getDrawable ( ) ) ; 
 menuIconToChange . setTag ( R . id . background , menuIconToChange . getBackground ( ) ) ; 
 menuTitleToChange . setTag ( menuTitleToChange . getText ( ) . toString ( ) ) ; 
 @ @ - 197 , 17 + 233 , 18 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 hide ( ) ; 
 } ; 
 
 - / / RecyclerView fastShare = ( RecyclerView ) container . findViewById ( R . id . fast _ share ) ; 
 - fastAttachAdapter = new FastAttachAdapter ( getActivity ( ) ) ; 
 + / / RecyclerView fastShare = ( RecyclerView ) shareButtons . findViewById ( R . id . fast _ share ) ; 
 + fastAttachAdapter = new FastAttachAdapter ( getActivity ( ) , ( ) - > fastShareWidth + 1 ) ; 
 + 
 HeaderViewRecyclerAdapter adapter = new HeaderViewRecyclerAdapter ( fastAttachAdapter ) ; 
 - adapter . addHeaderView ( container ) ; 
 - GridLayoutManager layoutManager = new GridLayoutManager ( getActivity ( ) , SPAN _ COUNT ) ; 
 + adapter . addHeaderView ( shareButtons ) ; 
 + layoutManager = getGridLayoutManager ( ) ; 
 fastShare . setAdapter ( adapter ) ; 
 fastShare . setLayoutManager ( layoutManager ) ; 
 layoutManager . setSpanSizeLookup ( new GridLayoutManager . SpanSizeLookup ( ) { 
 @ Override 
 public int getSpanSize ( int position ) { 
 - return position = = 0 ? 4 : 1 ; 
 + return position = = 0 ? spanCount : 1 ; 
 } 
 } ) ; 
 StateListDrawable background = ShareMenuButtonFactory . get ( style . getMainColor ( ) , getActivity ( ) ) ; 
 @ @ - 221 , 6 + 258 , 13 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 menuTitleToChange . setText ( getString ( R . string . chat _ doc _ send ) + " ( " + val . size ( ) + " ) " ) ; 
 menuIconToChange . setOnClickListener ( shareSendOcl ) ; 
 menuIconToChange . setPadding ( Screen . dp ( 10 ) , 0 , Screen . dp ( 5 ) , 0 ) ; 
 + 
 + 
 + menuIconToChangeClone . setBackgroundDrawable ( background ) ; 
 + menuIconToChangeClone . setImageResource ( R . drawable . conv _ send ) ; 
 + menuIconToChangeClone . setColorFilter ( 0xffffffff , PorterDuff . Mode . SRC _ IN ) ; 
 + menuIconToChangeClone . setOnClickListener ( shareSendOcl ) ; 
 + menuIconToChangeClone . setPadding ( Screen . dp ( 10 ) , 0 , Screen . dp ( 5 ) , 0 ) ; 
 } else { 
 
 menuIconToChange . setBackgroundDrawable ( ( Drawable ) menuIconToChange . getTag ( R . id . background ) ) ; 
 @ @ - 229 , 22 + 273 , 78 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 menuIconToChange . setOnClickListener ( finalDefaultSendOcl ) ; 
 menuTitleToChange . setText ( ( String ) menuTitleToChange . getTag ( ) ) ; 
 menuIconToChange . setPadding ( 0 , 0 , 0 , 0 ) ; 
 + 
 + menuIconToChangeClone . setBackgroundDrawable ( ( Drawable ) menuIconToChange . getTag ( R . id . background ) ) ; 
 + menuIconToChangeClone . setImageDrawable ( ( Drawable ) menuIconToChange . getTag ( R . id . icon ) ) ; 
 + menuIconToChangeClone . setColorFilter ( null ) ; 
 + menuIconToChangeClone . setOnClickListener ( finalDefaultSendOcl ) ; 
 + menuIconToChangeClone . setPadding ( 0 , 0 , 0 , 0 ) ; 
 } 
 } ) ; 
 - root . post ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - container . getLayoutParams ( ) . height = root . getHeight ( ) - Screen . dp ( 135 ) ; 
 - container . requestLayout ( ) ; 
 - } 
 - } ) ; 
 + 
 + shareButtons . getLayoutParams ( ) . height = root . getHeight ( ) - Screen . dp ( 135 ) ; 
 + shareButtons . requestLayout ( ) ; 
 + 
 + 
 + bottomBackground = new View ( getContext ( ) ) ; 
 + FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 135 ) , Gravity . BOTTOM ) ; 
 + bottomBackground . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + root . addView ( bottomBackground , params ) ; 
 root . addView ( fastShare ) ; 
 + FrameLayout . LayoutParams params2 = new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , ViewGroup . LayoutParams . WRAP _ CONTENT , Gravity . BOTTOM | Gravity . RIGHT ) ; 
 + params2 . setMargins ( 0 , 0 , Screen . dp ( 20 ) , Screen . dp ( 20 ) ) ; 
 + root . addView ( hideClone , params2 ) ; 
 + } 
 + 
 + @ NonNull 
 + private GridLayoutManager getGridLayoutManager ( ) { 
 + spanCount = Screen . getWidth ( ) / Screen . dp ( 88 ) ; 
 + fastShareWidth = Screen . getWidth ( ) / spanCount ; 
 + return new GridLayoutManager ( getActivity ( ) , spanCount ) ; 
 + } 
 + 
 + private View instantiateShareMenuItem ( ShareMenuField f ) { 
 + LinearLayout shareItem = new LinearLayout ( getActivity ( ) ) ; 
 + shareItem . setOrientation ( LinearLayout . VERTICAL ) ; 
 + shareItem . setGravity ( Gravity . CENTER _ HORIZONTAL ) ; 
 + 
 + TextView title = new TextView ( getActivity ( ) ) ; 
 + title . setGravity ( Gravity . CENTER ) ; 
 + title . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 + title . setText ( f . getTitle ( ) ) ; 
 + title . setTextSize ( 14 ) ; 
 + 
 + ImageView icon = new ImageView ( getActivity ( ) ) ; 
 + icon . setClickable ( true ) ; 
 + if ( f . getSelector ( ) ! = 0 ) { 
 + icon . setBackgroundResource ( f . getSelector ( ) ) ; 
 + } else { 
 + icon . setBackgroundDrawable ( ShareMenuButtonFactory . get ( f . getColor ( ) , getActivity ( ) ) ) ; 
 + icon . setScaleType ( ImageView . ScaleType . CENTER _ INSIDE ) ; 
 + icon . setImageResource ( f . getIcon ( ) ) ; 
 + } 
 + 
 + shareItem . addView ( icon , shareIconSize , shareIconSize ) ; 
 + shareItem . addView ( title ) ; 
 + 
 + View . OnClickListener l = v - > { 
 + hide ( ) ; 
 + onItemClicked ( v . getId ( ) ) ; 
 + } ; 
 + icon . setId ( f . getId ( ) ) ; 
 + icon . setOnClickListener ( l ) ; 
 + 
 + shareItem . setTag ( R . id . title , title ) ; 
 + shareItem . setTag ( R . id . icon , icon ) ; 
 + shareItem . setTag ( R . id . list , l ) ; 
 + 
 + return shareItem ; 
 } 
 
 @ Override 
 public void show ( ) { 
 prepareView ( ) ; 
 - if ( fastShare . getVisibility ( ) = = View . INVISIBLE ) { 
 + if ( root . getVisibility ( ) = = View . INVISIBLE ) { 
 if ( Build . VERSION . SDK _ INT > = Build . VERSION _ CODES . M ) { 
 Activity activity = getActivity ( ) ; 
 if ( activity = = null ) { 
 @ @ - 259 , 58 + 359 , 78 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 } 
 onShown ( ) ; 
 messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Show ( ) ) ; 
 - showView ( fastShare ) ; 
 - / / if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP ) { 
 - / / View internal = container . findViewById ( R . id . menu _ bg ) ; 
 - / / int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; 
 - / / int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; 
 - / / float finalRadius = ( float ) Math . hypot ( cx , cy ) ; 
 - / / Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , 0 , finalRadius ) ; 
 - / / anim . setDuration ( 200 ) ; 
 - / / anim . start ( ) ; 
 - / / internal . setAlpha ( 1 ) ; 
 - / / } 
 + showView ( root ) ; 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , root . getHeight ( ) , 0 ) ; 
 + animation . setInterpolator ( MaterialInterpolator . getInstance ( ) ) ; 
 + animation . setDuration ( 200 ) ; 
 + / / fastShare . startAnimation ( animation ) ; 
 + / / bottomBackground . startAnimation ( animation ) ; 
 + shareButtons . post ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP ) { 
 + View internal = fastShare ; 
 + int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; 
 + int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; 
 + float finalRadius = ( float ) Math . hypot ( cx , cy ) ; 
 + Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , 0 , finalRadius ) ; 
 + anim . setDuration ( 200 ) ; 
 + anim . start ( ) ; 
 + internal . setAlpha ( 1 ) ; 
 + } 
 + } 
 + } ) ; 
 + 
 } 
 } 
 
 @ Override 
 public void hide ( ) { 
 - if ( fastShare ! = null & & fastShare . getVisibility ( ) = = View . VISIBLE ) { 
 + if ( root ! = null & & root . getVisibility ( ) = = View . VISIBLE ) { 
 onHidden ( ) ; 
 fastAttachAdapter . clearSelected ( ) ; 
 messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Hide ( ) ) ; 
 - hideView ( fastShare ) ; 
 - / / if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP ) { 
 - / / View internal = container . findViewById ( R . id . menu _ bg ) ; 
 - / / int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; 
 - / / int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; 
 - / / float finalRadius = ( float ) Math . hypot ( cx , cy ) ; 
 - / / Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , finalRadius , 0 ) ; 
 - / / anim . addListener ( new Animator . AnimatorListener ( ) { 
 - / / @ Override 
 - / / public void onAnimationStart ( Animator animator ) { 
 - / / internal . setAlpha ( 1 ) ; 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onAnimationEnd ( Animator animator ) { 
 - / / internal . setAlpha ( 0 ) ; 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onAnimationCancel ( Animator animator ) { 
 - / / 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onAnimationRepeat ( Animator animator ) { 
 - / / 
 - / / } 
 - / / } ) ; 
 - / / 
 - / / anim . setDuration ( 200 ) ; 
 - / / anim . start ( ) ; 
 - / / } 
 + fastShare . scrollToPosition ( 0 ) ; 
 + hideView ( root ) ; 
 + 
 + 
 + if ( android . os . Build . VERSION . SDK _ INT > = android . os . Build . VERSION _ CODES . LOLLIPOP & & ! isFastShareFullScreen ) { 
 + View internal = fastShare ; 
 + int cx = internal . getWidth ( ) - Screen . dp ( 56 + 56 ) ; 
 + int cy = internal . getHeight ( ) - Screen . dp ( 56 / 2 ) ; 
 + float finalRadius = ( float ) Math . hypot ( cx , cy ) ; 
 + Animator anim = ViewAnimationUtils . createCircularReveal ( internal , cx , cy , finalRadius , 0 ) ; 
 + anim . addListener ( new Animator . AnimatorListener ( ) { 
 + @ Override 
 + public void onAnimationStart ( Animator animator ) { 
 + internal . setAlpha ( 1 ) ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationEnd ( Animator animator ) { 
 + internal . setAlpha ( 0 ) ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationCancel ( Animator animator ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onAnimationRepeat ( Animator animator ) { 
 + 
 + } 
 + } ) ; 
 + 
 + anim . setDuration ( 200 ) ; 
 + anim . start ( ) ; 
 + } else { 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , root . getHeight ( ) ) ; 
 + animation . setInterpolator ( MaterialInterpolator . getInstance ( ) ) ; 
 + animation . setDuration ( 250 ) ; 
 + fastShare . startAnimation ( animation ) ; 
 + bottomBackground . startAnimation ( animation ) ; 
 + } 
 } 
 } 
 
 @ @ - 399 , 7 + 519 , 7 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 
 @ Override 
 public boolean onBackPressed ( ) { 
 - if ( container ! = null & & container . getVisibility ( ) = = View . VISIBLE ) { 
 + if ( root ! = null & & root . getVisibility ( ) = = View . VISIBLE ) { 
 hide ( ) ; 
 return true ; 
 } 
 @ @ - 429 , 7 + 549 , 7 @ @ public class AttachFragment extends AbsAttachFragment implements MediaPickerCall 
 fastAttachAdapter . release ( ) ; 
 fastAttachAdapter = null ; 
 } 
 - container = null ; 
 + shareButtons = null ; 
 fastShare = null ; 
 root = null ; 
 menuIconToChange = null ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java 
 index 41b8db5 . . 56295659 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / attach / FastAttachAdapter . java 
 @ @ - 38 , 9 + 38 , 12 @ @ public class FastAttachAdapter extends RecyclerView . Adapter < FastAttachAdapter . Fa 
 private ValueModel < Set < String > > selectedVM ; 
 
 private ActorBinder binder ; 
 + private WidthGetter widthGetter ; 
 
 - public FastAttachAdapter ( Context context ) { 
 + public FastAttachAdapter ( Context context , WidthGetter widthGetter ) { 
 + this . widthGetter = widthGetter ; 
 this . context = context ; 
 + / / setHasStableIds ( true ) ; 
 binder = new ActorBinder ( ) ; 
 binder . bind ( messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) , ( val , valueModel ) - > { 
 imagesPath . clear ( ) ; 
 @ @ - 50 , 19 + 53 , 23 @ @ public class FastAttachAdapter extends RecyclerView . Adapter < FastAttachAdapter . Fa 
 selectedVM = new ValueModel < > ( " fast _ share . selected " , new HashSet < > ( ) ) ; 
 } 
 
 + 
 protected View inflate ( int id , ViewGroup viewGroup ) { 
 return LayoutInflater 
 . from ( context ) 
 . inflate ( id , viewGroup , false ) ; 
 } 
 
 + 
 public void release ( ) { 
 binder . unbindAll ( ) ; 
 } 
 
 @ Override 
 public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { 
 - return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; 
 + View itemView = inflate ( R . layout . share _ menu _ fast _ share , parent ) ; 
 + itemView . setLayoutParams ( new ViewGroup . LayoutParams ( widthGetter . get ( ) , widthGetter . get ( ) ) ) ; 
 + return new FastShareVH ( itemView ) ; 
 } 
 
 @ Override 
 @ @ - 128 , 4 + 135 , 8 @ @ public class FastAttachAdapter extends RecyclerView . Adapter < FastAttachAdapter . Fa 
 public ValueModel < Set < String > > getSelectedVM ( ) { 
 return selectedVM ; 
 } 
 + 
 + public interface WidthGetter { 
 + int get ( ) ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java 
 index 7f3d850 . . 949098a 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / mentions / AutocompleteFragment . java 
 @ @ - 160 , 40 + 160 , 6 @ @ public class AutocompleteFragment extends BaseFragment { 
 
 } 
 
 - private static class ExpandAnimation extends Animation { 
 - 
 - private final View v ; 
 - private final int targetHeight ; 
 - private final int initialHeight ; 
 - private int currentHeight ; 
 - 
 - public ExpandAnimation ( View v , int targetHeight , int initialHeight ) { 
 - this . v = v ; 
 - this . targetHeight = targetHeight ; 
 - this . initialHeight = initialHeight ; 
 - this . currentHeight = initialHeight ; 
 - } 
 - 
 - @ Override 
 - protected void applyTransformation ( float interpolatedTime , Transformation t ) { 
 - if ( targetHeight > initialHeight ) { 
 - currentHeight = 
 - ( int ) ( ( targetHeight * interpolatedTime ) - initialHeight * interpolatedTime + initialHeight ) ; 
 - } else { 
 - currentHeight = 
 - ( int ) ( initialHeight - ( initialHeight * interpolatedTime ) - targetHeight * ( 1f - interpolatedTime ) + targetHeight ) ; 
 - } 
 - 
 - v . getLayoutParams ( ) . height = currentHeight ; 
 - v . requestLayout ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean willChangeBounds ( ) { 
 - return true ; 
 - } 
 - } 
 - 
 public void setUnderlyingView ( View underlyingView ) { 
 this . underlyingView = underlyingView ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java 
 index f7bd2f2 . . e556112 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / ViewUtils . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import android . view . ViewGroup ; 
 import android . view . animation . AlphaAnimation ; 
 import android . view . animation . Animation ; 
 import android . view . animation . ScaleAnimation ; 
 + import android . view . animation . Transformation ; 
 
 import im . actor . sdk . view . MaterialInterpolator ; 
 
 @ @ - 285 , 5 + 286 , 68 @ @ public class ViewUtils { 
 layer . startAnimation ( scaleAnimation ) ; 
 } 
 
 + public static void expandView ( View v , int targetHeight , int initialHeight , After after ) { 
 
 + Animation a = new ExpandAnimation ( v , targetHeight , initialHeight ) ; 
 + 
 + a . setDuration ( ( targetHeight > initialHeight ? targetHeight : initialHeight / Screen . dp ( 1 ) ) ) ; 
 + a . setInterpolator ( MaterialInterpolator . getInstance ( ) ) ; 
 + v . clearAnimation ( ) ; 
 + a . setAnimationListener ( new Animation . AnimationListener ( ) { 
 + @ Override 
 + public void onAnimationStart ( Animation animation ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onAnimationEnd ( Animation animation ) { 
 + after . doAfter ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationRepeat ( Animation animation ) { 
 + 
 + } 
 + } ) ; 
 + v . startAnimation ( a ) ; 
 + 
 + } 
 + 
 + private static class ExpandAnimation extends Animation { 
 + 
 + private final View v ; 
 + private final int targetHeight ; 
 + private final int initialHeight ; 
 + private int currentHeight ; 
 + 
 + public ExpandAnimation ( View v , int targetHeight , int initialHeight ) { 
 + this . v = v ; 
 + this . targetHeight = targetHeight ; 
 + this . initialHeight = initialHeight ; 
 + this . currentHeight = initialHeight ; 
 + } 
 + 
 + @ Override 
 + protected void applyTransformation ( float interpolatedTime , Transformation t ) { 
 + if ( targetHeight > initialHeight ) { 
 + currentHeight = 
 + ( int ) ( ( targetHeight * interpolatedTime ) - initialHeight * interpolatedTime + initialHeight ) ; 
 + } else { 
 + currentHeight = 
 + ( int ) ( initialHeight - ( initialHeight * interpolatedTime ) - targetHeight * ( 1f - interpolatedTime ) + targetHeight ) ; 
 + } 
 + 
 + v . getLayoutParams ( ) . height = currentHeight ; 
 + v . requestLayout ( ) ; 
 + } 
 + 
 + @ Override 
 + public boolean willChangeBounds ( ) { 
 + return true ; 
 + } 
 + } 
 + 
 + public interface After { 
 + void doAfter ( ) ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml 
 index b3bde0f . . 6015f16 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res - material / layout / share _ menu . xml 
 @ @ - 7 , 21 + 7 , 15 @ @ 
 android : id = " @ + id / cancelField " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " match _ parent " 
 - android : background = " @ color / dialog _ overlay " 
 android : clickable = " true " / > 
 
 < LinearLayout 
 android : id = " @ + id / menu _ bg " 
 android : layout _ width = " match _ parent " 
 - android : layout _ height = " 196dp " 
 + android : layout _ height = " 191dp " 
 + android : paddingTop = " 10dp " 
 android : layout _ gravity = " bottom " 
 android : orientation = " vertical " > 
 - 
 - < ! - - < android . support . v7 . widget . RecyclerView - - > 
 - < ! - - android : id = " @ + id / fast _ share " - - > 
 - < ! - - android : layout _ width = " match _ parent " - - > 
 - < ! - - android : layout _ height = " 90dp " / > - - > 
 - 
 < FrameLayout 
 android : id = " @ + id / share _ row _ one " 
 android : layout _ width = " wrap _ content " 
 diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 index 8201f0d . . f217534 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 @ @ - 513 , 6 + 513 , 13 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 public GalleryVM getGalleryVM ( ) { 
 if ( galleryVM = = null ) { 
 galleryVM = new GalleryVM ( ) ; 
 + checkGalleryScannerActor ( ) ; 
 + } 
 + return galleryVM ; 
 + } 
 + 
 + protected void checkGalleryScannerActor ( ) { 
 + if ( galleryScannerActor = = null ) { 
 galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 @ Override 
 public Actor create ( ) { 
 @ @ - 520 , 10 + 527 , 10 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 } 
 } ) , " actor / gallery _ scanner " ) ; 
 } 
 - return galleryVM ; 
 } 
 
 public ActorRef getGalleryScannerActor ( ) { 
 + checkGalleryScannerActor ( ) ; 
 return galleryScannerActor ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index bf6a2fa . . e54c5ad 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import android . os . Bundle ; 
 import android . view . ViewGroup ; 
 
 import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . imagepipeline . core . ImagePipelineConfig ; 
 
 import org . jetbrains . annotations . NotNull ; 
 
 @ @ - 193 , 7 + 194 , 10 @ @ public class ActorSDK { 
 / / SDK Tools 
 / / 
 
 - Fresco . initialize ( application ) ; 
 + ImagePipelineConfig config = ImagePipelineConfig . newBuilder ( application ) 
 + . setDownsampleEnabled ( true ) 
 + . build ( ) ; 
 + Fresco . initialize ( application , config ) ; 
 AndroidContext . setContext ( application ) ; 
 / / TODO : Replace 
 new SmileProcessor ( application ) . loadEmoji ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index 885ab7a . . 19ce772 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 22 , 6 + 22 , 8 @ @ import android . support . v4 . app . Fragment ; 
 import android . support . v4 . content . ContextCompat ; 
 import android . support . v7 . app . ActionBar ; 
 import android . support . v7 . view . ActionMode ; 
 + import android . support . v7 . widget . LinearLayoutManager ; 
 + import android . support . v7 . widget . RecyclerView ; 
 import android . text . Editable ; 
 import android . text . Spannable ; 
 import android . text . TextWatcher ; 
 @ @ - 32 , 6 + 34 , 7 @ @ import android . view . MenuItem ; 
 import android . view . MotionEvent ; 
 import android . view . View ; 
 import android . view . animation . AlphaAnimation ; 
 + import android . view . animation . Animation ; 
 import android . view . animation . TranslateAnimation ; 
 import android . widget . AdapterView ; 
 import android . widget . FrameLayout ; 
 @ @ - 53 , 6 + 56 , 7 @ @ import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . core . viewmodel . GroupVM ; 
 import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . actors . ActorSystem ; 
 @ @ - 62 , 15 + 66 , 16 @ @ import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . ActorStyle ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . calls . CallActivity ; 
 import im . actor . sdk . controllers . conversation . mentions . MentionsAdapter ; 
 import im . actor . sdk . controllers . conversation . messages . AudioHolder ; 
 import im . actor . sdk . controllers . conversation . messages . MessagesFragment ; 
 + import im . actor . sdk . controllers . conversation . view . FastShareAdapter ; 
 import im . actor . sdk . controllers . fragment . settings . BaseActorChatActivity ; 
 import im . actor . sdk . core . audio . VoiceCaptureActor ; 
 import im . actor . sdk . intents . ActorIntent ; 
 import im . actor . sdk . util . Randoms ; 
 import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . util . images . GalleryScannerActor ; 
 import im . actor . sdk . view . avatar . AvatarView ; 
 import im . actor . sdk . controllers . conversation . view . TypingDrawable ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 @ @ - 78 , 7 + 83 , 6 @ @ import im . actor . sdk . view . markdown . AndroidMarkdown ; 
 import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 
 - import static im . actor . sdk . util . ViewUtils . expand ; 
 import static im . actor . sdk . util . ViewUtils . expandMentions ; 
 import static im . actor . sdk . util . ViewUtils . goneView ; 
 import static im . actor . sdk . util . ViewUtils . hideView ; 
 @ @ - 152 , 6 + 156 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private int slideStart ; 
 private TextView audioTimer ; 
 private boolean isAudioVisible ; 
 + private boolean isShareVisible ; 
 private int SLIDE _ LIMIT ; 
 ActorRef voiceRecordActor ; 
 private String audioFile ; 
 @ @ - 204 , 6 + 209 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 private Intent intent ; 
 private boolean textEditing = false ; 
 private long currentEditRid ; 
 + private Animation . AnimationListener animationListener ; 
 
 public static Intent build ( Peer peer , boolean compose , Context context ) { 
 final Intent intent = new Intent ( context , ChatActivity . class ) ; 
 @ @ - 283 , 7 + 289 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 goneView ( quoteContainer ) ; 
 quoteText . setText ( " " ) ; 
 currentQuote = " " ; 
 - if ( textEditing ) { 
 + if ( textEditing ) { 
 messageEditText . setText ( " " ) ; 
 } 
 textEditing = false ; 
 @ @ - 301 , 10 + 307 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } ) ; 
 shareContainer = findViewById ( R . id . closeMenuLayout ) ; 
 - shareContainer . setOnClickListener ( new View . OnClickListener ( ) { 
 + shareContainer . setOnTouchListener ( new View . OnTouchListener ( ) { 
 @ Override 
 - public void onClick ( View v ) { 
 - hideShareMenu ( ) ; 
 + public boolean onTouch ( View v , MotionEvent event ) { 
 + hideShare ( ) ; 
 + return false ; 
 } 
 } ) ; 
 
 @ @ - 382 , 7 + 389 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 
 / / hide it 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 } 
 } ; 
 
 @ @ - 395 , 6 + 402 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 findViewById ( R . id . share _ contact ) . setOnClickListener ( shareMenuOCL ) ; 
 handleIntent ( ) ; 
 
 + RecyclerView fastShare = ( RecyclerView ) findViewById ( R . id . fast _ share ) ; 
 + FastShareAdapter fastShareAdapter = new FastShareAdapter ( this ) ; 
 + LinearLayoutManager layoutManager = new LinearLayoutManager ( this , LinearLayoutManager . HORIZONTAL , false ) ; 
 + fastShare . setAdapter ( fastShareAdapter ) ; 
 + fastShare . setLayoutManager ( layoutManager ) ; 
 
 } 
 
 @ @ - 434 , 13 + 446 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 handleIntent ( ) ; 
 } 
 
 - private void hideShareMenu ( ) { 
 - if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { 
 - / / hideView ( shareMenu ) ; 
 - expand ( shareMenu , 0 ) ; 
 - shareContainer . setVisibility ( View . GONE ) ; 
 - } 
 - } 
 + 
 
 @ Override 
 protected Fragment onCreateFragment ( ) { 
 @ @ - 831 , 13 + 837 , 13 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / } ) ; 
 / / popup . show ( ) ; 
 if ( shareMenuMaxHeight = = 0 ) { 
 - shareMenuMaxHeight = Screen . dp ( 180 ) ; 
 + shareMenuMaxHeight = Screen . dp ( 245 ) ; 
 } 
 if ( shareMenu . getVisibility ( ) = = View . VISIBLE ) { 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 } else { 
 shareContainer . setVisibility ( View . VISIBLE ) ; 
 - expand ( shareMenu , shareMenuMaxHeight ) ; 
 + showShare ( ) ; 
 if ( getResources ( ) . getConfiguration ( ) . orientation = = Configuration . ORIENTATION _ LANDSCAPE ) { 
 keyboardUtils . setImeVisibility ( messageEditText , false ) ; 
 } 
 @ @ - 982 , 7 + 988 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 } 
 } 
 } ) ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 expandMentions ( mentionsList , 0 , mentionsList . getCount ( ) ) ; 
 } 
 
 @ @ - 1028 , 7 + 1034 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 quoteText . setText ( rawQuote ) ; 
 } 
 currentQuote = rawQuote ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ editor _ format _ quote _ gray ) , null , null , null ) ; 
 showView ( quoteContainer ) ; 
 } 
 @ @ - 1195 , 7 + 1201 , 7 @ @ public class ChatActivity extends ActorEditTextActivity { 
 quoteText . setCompoundDrawablesWithIntrinsicBounds ( getResources ( ) . getDrawable ( R . drawable . ic _ content _ create ) , null , null , null ) ; 
 quoteText . setText ( R . string . edit _ message ) ; 
 messageEditText . setText ( text ) ; 
 - hideShareMenu ( ) ; 
 + hideShare ( ) ; 
 showView ( quoteContainer ) ; 
 
 } 
 @ @ - 1343 , 6 + 1349 , 60 @ @ public class ChatActivity extends ActorEditTextActivity { 
 
 } 
 
 + private boolean animationInProgress = false ; 
 + 
 + private void showShare ( ) { 
 + if ( animationInProgress ) { 
 + return ; 
 + } 
 + if ( animationListener = = null ) { 
 + animationListener = new Animation . AnimationListener ( ) { 
 + @ Override 
 + public void onAnimationStart ( Animation animation ) { 
 + animationInProgress = true ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationEnd ( Animation animation ) { 
 + animationInProgress = false ; 
 + } 
 + 
 + @ Override 
 + public void onAnimationRepeat ( Animation animation ) { 
 + 
 + } 
 + } ; 
 + } 
 + 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , Screen . getHeight ( ) , 0 ) ; 
 + animation . setDuration ( 160 ) ; 
 + animation . setAnimationListener ( animationListener ) ; 
 + shareMenu . clearAnimation ( ) ; 
 + shareMenu . setAnimation ( animation ) ; 
 + shareMenu . animate ( ) ; 
 + shareMenu . setVisibility ( View . VISIBLE ) ; 
 + isShareVisible = true ; 
 + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( true ) ) ; 
 + } 
 + 
 + private void hideShare ( ) { 
 + if ( ! isShareVisible | | animationInProgress ) { 
 + return ; 
 + } 
 + isShareVisible = false ; 
 + TranslateAnimation animation = new TranslateAnimation ( 0 , 0 , 0 , Screen . getHeight ( ) ) ; 
 + animation . setDuration ( 160 ) ; 
 + 
 + animation . setAnimationListener ( animationListener ) ; 
 + shareMenu . clearAnimation ( ) ; 
 + shareMenu . setAnimation ( animation ) ; 
 + shareMenu . animate ( ) ; 
 + shareMenu . setVisibility ( View . GONE ) ; 
 + shareContainer . setVisibility ( View . GONE ) ; 
 + messenger ( ) . getGalleryScannerActor ( ) . send ( new GalleryScannerActor . Visible ( false ) ) ; 
 + 
 + } 
 + 
 private void slideAudio ( int value ) { 
 ObjectAnimator oa = ObjectAnimator . ofFloat ( audioSlide , " translationX " , audioSlide . getX ( ) , - value ) ; 
 oa . setDuration ( 0 ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 new file mode 100644 
 index 0000000 . . a7cc631 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastShareAdapter . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package im . actor . sdk . controllers . conversation . view ; 
 + 
 + import android . content . Context ; 
 + import android . net . Uri ; 
 + import android . support . v7 . widget . RecyclerView ; 
 + import android . view . LayoutInflater ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . widget . CheckBox ; 
 + import android . widget . CompoundButton ; 
 + import android . widget . FrameLayout ; 
 + 
 + import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; 
 + import com . facebook . drawee . view . SimpleDraweeView ; 
 + import com . facebook . imagepipeline . common . ResizeOptions ; 
 + import com . facebook . imagepipeline . request . ImageRequest ; 
 + import com . facebook . imagepipeline . request . ImageRequestBuilder ; 
 + 
 + import java . io . File ; 
 + import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 + import java . util . Set ; 
 + 
 + import im . actor . runtime . mvvm . Value ; 
 + import im . actor . runtime . mvvm . ValueChangedListener ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . util . Screen ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class FastShareAdapter extends RecyclerView . Adapter < FastShareAdapter . FastShareVH > { 
 + 
 + ArrayList < String > imagesPath = new ArrayList < > ( ) ; 
 + Set < String > selected = new HashSet < > ( ) ; 
 + Context context ; 
 + 
 + public FastShareAdapter ( Context context ) { 
 + this . context = context ; 
 + messenger ( ) . getGalleryVM ( ) . getGalleryMediaPath ( ) . subscribe ( new ValueChangedListener < ArrayList < String > > ( ) { 
 + @ Override 
 + public void onChanged ( ArrayList < String > val , Value < ArrayList < String > > valueModel ) { 
 + imagesPath . clear ( ) ; 
 + imagesPath . addAll ( val ) ; 
 + notifyDataSetChanged ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + protected View inflate ( int id , ViewGroup viewGroup ) { 
 + return LayoutInflater 
 + . from ( context ) 
 + . inflate ( id , viewGroup , false ) ; 
 + } 
 + 
 + 
 + @ Override 
 + public FastShareVH onCreateViewHolder ( ViewGroup parent , int viewType ) { 
 + return new FastShareVH ( inflate ( R . layout . share _ menu _ fast _ share , parent ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onBindViewHolder ( FastShareVH holder , int position ) { 
 + holder . bind ( imagesPath . get ( position ) ) ; 
 + } 
 + 
 + @ Override 
 + public int getItemCount ( ) { 
 + return imagesPath . size ( ) ; 
 + } 
 + 
 + public class FastShareVH extends RecyclerView . ViewHolder { 
 + SimpleDraweeView v ; 
 + CheckBox chb ; 
 + String data ; 
 + 
 + public FastShareVH ( View itemView ) { 
 + super ( itemView ) ; 
 + v = ( SimpleDraweeView ) itemView . findViewById ( R . id . image ) ; 
 + chb = ( CheckBox ) itemView . findViewById ( R . id . check ) ; 
 + int size = context . getResources ( ) . getDimensionPixelSize ( R . dimen . share _ btn _ size ) ; 
 + v . setLayoutParams ( new FrameLayout . LayoutParams ( size , size ) ) ; 
 + chb . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { 
 + @ Override 
 + public void onCheckedChanged ( CompoundButton buttonView , boolean isChecked ) { 
 + if ( isChecked & & data ! = null ) { 
 + selected . add ( data ) ; 
 + } else { 
 + selected . remove ( data ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 + public void bind ( String path ) { 
 + data = path ; 
 + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( path ) ) ) 
 + . setResizeOptions ( new ResizeOptions ( v . getLayoutParams ( ) . width , 
 + v . getLayoutParams ( ) . height ) ) 
 + . build ( ) ; 
 + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) 
 + . setOldController ( v . getController ( ) ) 
 + . setImageRequest ( request ) 
 + . build ( ) ; 
 + v . setController ( controller ) ; 
 + chb . setChecked ( selected . contains ( data ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java 
 new file mode 100644 
 index 0000000 . . e2dcc9b 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / util / images / GalleryScannerActor . java 
 @ @ - 0 , 0 + 1 , 171 @ @ 
 + package im . actor . sdk . util . images ; 
 + 
 + import android . content . BroadcastReceiver ; 
 + import android . content . Context ; 
 + import android . content . Intent ; 
 + import android . content . IntentFilter ; 
 + import android . database . Cursor ; 
 + import android . graphics . Bitmap ; 
 + import android . graphics . BitmapFactory ; 
 + import android . net . Uri ; 
 + import android . provider . MediaStore ; 
 + 
 + import java . io . File ; 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . utils . ImageHelper ; 
 + import im . actor . core . viewmodel . GalleryVM ; 
 + import im . actor . runtime . actors . Actor ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class GalleryScannerActor extends Actor { 
 + 
 + Context context ; 
 + Uri uri ; 
 + Cursor cursor ; 
 + int offset = 0 ; 
 + int column _ index _ data , column _ index _ folder _ name , column _ index _ date ; 
 + 
 + ArrayList < String > listOfAllImages = new ArrayList < String > ( ) ; 
 + ArrayList < String > newMedia = new ArrayList < > ( ) ; 
 + 
 + String absolutePathOfImage = null ; 
 + GalleryVM galleryVM ; 
 + Uri lastScan ; 
 + 
 + private static final int SCAN _ COUNT = 10 ; 
 + 
 + ArrayList < String > loaded = new ArrayList < > ( ) ; 
 + private boolean visible = false ; 
 + private boolean scanned = false ; 
 + private String [ ] projection ; 
 + 
 + public GalleryScannerActor ( Context context ) { 
 + this . context = context ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + galleryVM = messenger ( ) . getGalleryVM ( ) ; 
 + uri = android . provider . MediaStore . Images . Media . EXTERNAL _ CONTENT _ URI ; 
 + 
 + self ( ) . send ( new InitScan ( ) ) ; 
 + } 
 + 
 + public void initScan ( ) { 
 + projection = new String [ ] { MediaStore . MediaColumns . DATA , 
 + MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME , 
 + MediaStore . Images . Media . DATE _ MODIFIED } ; 
 + 
 + cursor = getQuery ( ) ; 
 + 
 + if ( cursor ! = null & & cursor . getCount ( ) > 0 ) { 
 + column _ index _ data = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATA ) ; 
 + column _ index _ date = cursor . getColumnIndexOrThrow ( MediaStore . MediaColumns . DATE _ MODIFIED ) ; 
 + column _ index _ folder _ name = cursor 
 + . getColumnIndexOrThrow ( MediaStore . Images . Media . BUCKET _ DISPLAY _ NAME ) ; 
 + 
 + 
 + self ( ) . send ( new Scan ( ) ) ; 
 + } else { 
 + schedule ( new InitScan ( ) , 1000 ) ; 
 + } 
 + 
 + } 
 + 
 + public Cursor getQuery ( ) { 
 + return context . getContentResolver ( ) . query ( uri , projection , null , 
 + null , MediaStore . MediaColumns . DATE _ MODIFIED + " DESC " ) ; 
 + } 
 + 
 + private void scan ( ) { 
 + 
 + 
 + int i = 0 ; 
 + while ( offset + i + + < offset + SCAN _ COUNT & & cursor . moveToNext ( ) ) { 
 + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; 
 + 
 + listOfAllImages . add ( absolutePathOfImage ) ; 
 + } 
 + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; 
 + offset + = i ; 
 + if ( offset < cursor . getCount ( ) ) { 
 + self ( ) . send ( new Scan ( ) ) ; 
 + } else { 
 + lastScan = MediaStore . getMediaScannerUri ( ) ; 
 + scanned = true ; 
 + schedule ( new CheckNew ( ) , 1000 ) ; 
 + } 
 + } 
 + 
 + private void checkNew ( ) { 
 + cursor = getQuery ( ) ; 
 + newMedia . clear ( ) ; 
 + while ( cursor ! = null & & cursor . moveToNext ( ) ) { 
 + absolutePathOfImage = cursor . getString ( column _ index _ data ) ; 
 + if ( ! listOfAllImages . contains ( absolutePathOfImage ) ) { 
 + Bitmap bitmap = ImageHelper . loadOptimizedHQ ( absolutePathOfImage ) ; 
 + if ( bitmap ! = null ) { 
 + bitmap . recycle ( ) ; 
 + newMedia . add ( absolutePathOfImage ) ; 
 + } else { 
 + break ; 
 + } 
 + } else { 
 + break ; 
 + } 
 + } 
 + if ( newMedia . size ( ) > 0 ) { 
 + listOfAllImages . addAll ( 0 , newMedia ) ; 
 + galleryVM . getGalleryMediaPath ( ) . change ( new ArrayList < String > ( listOfAllImages ) ) ; 
 + } 
 + if ( visible ) { 
 + schedule ( new CheckNew ( ) , 1000 ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof Scan ) { 
 + scan ( ) ; 
 + } else if ( message instanceof InitScan ) { 
 + initScan ( ) ; 
 + } else if ( message instanceof CheckNew ) { 
 + checkNew ( ) ; 
 + } else if ( message instanceof Visible ) { 
 + if ( ( ( Visible ) message ) . isVisible ( ) ) { 
 + visible = true ; 
 + if ( scanned ) { 
 + self ( ) . send ( new CheckNew ( ) ) ; 
 + } 
 + } else { 
 + visible = false ; 
 + } 
 + } 
 + } 
 + 
 + private static class Scan { 
 + 
 + } 
 + 
 + private static class InitScan { 
 + 
 + } 
 + 
 + private static class CheckNew { 
 + 
 + } 
 + 
 + public static class Visible { 
 + boolean visible ; 
 + 
 + public Visible ( boolean visible ) { 
 + this . visible = visible ; 
 + } 
 + 
 + public boolean isVisible ( ) { 
 + return visible ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 index 68cf866 . . 029cf8f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / activity _ dialog . xml 
 @ @ - 81 , 11 + 81 , 12 @ @ 
 
 < LinearLayout 
 android : layout _ width = " match _ parent " 
 - android : layout _ height = " 0dp " 
 + android : layout _ height = " 245dp " 
 android : layout _ above = " @ + id / fl _ send _ panel " 
 android : id = " @ + id / share _ container " 
 android : visibility = " invisible " 
 android : orientation = " vertical " 
 + android : gravity = " bottom " 
 android : background = " @ android : color / transparent " > 
 
 < ImageView 
 @ @ - 96 , 7 + 97 , 7 @ @ 
 
 < TableLayout 
 android : id = " @ + id / share _ menu " 
 - android : paddingTop = " 20dp " 
 + android : paddingTop = " 5dp " 
 android : layout _ gravity = " bottom " 
 android : layout _ width = " wrap _ content " 
 android : layout _ height = " wrap _ content " 
 @ @ - 105 , 6 + 106 , 15 @ @ 
 
 < TableRow > 
 
 + < android . support . v7 . widget . RecyclerView 
 + android : id = " @ + id / fast _ share " 
 + android : layout _ width = " 0dp " 
 + android : layout _ weight = " 1 " 
 + android : layout _ height = " @ dimen / fast _ share _ size " / > 
 + < / TableRow > 
 + 
 + < TableRow > 
 + 
 < LinearLayout 
 android : gravity = " center _ horizontal " 
 android : layout _ width = " wrap _ content " 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml 
 new file mode 100644 
 index 0000000 . . 4814076 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / share _ menu _ fast _ share . xml 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + android : padding = " 5dp " > 
 + 
 + < com . facebook . drawee . view . SimpleDraweeView 
 + android : id = " @ + id / image " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " / > 
 + 
 + < CheckBox 
 + android : layout _ gravity = " top | right " 
 + 
 + android : id = " @ + id / check " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " / > 
 + 
 + < / FrameLayout > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 index 6f29efa . . e2e84c6 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / dimens . xml 
 @ @ - 24 , 6 + 24 , 7 @ @ 
 < dimen name = " tour _ card _ message " > 14sp < / dimen > 
 < dimen name = " keyboard _ height " > 250dp < / dimen > 
 < dimen name = " share _ btn _ size " > 60dp < / dimen > 
 + < dimen name = " fast _ share _ size " > 70dp < / dimen > 
 
 < dimen name = " call _ btn _ size " > 40dp < / dimen > 
 < dimen name = " end _ call _ btn _ size " > 70dp < / dimen > 
 diff - - git a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 index 8fd7d10 . . 27391fb 100644 
 - - - a / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 + + + b / actor - sdk / sdk - core / core / core - android / src / main / java / im / actor / core / AndroidMessenger . java 
 @ @ - 40 , 8 + 40 , 11 @ @ import im . actor . core . utils . IOUtils ; 
 import im . actor . core . utils . ImageHelper ; 
 import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . core . viewmodel . GalleryVM ; 
 + import im . actor . runtime . actors . Actor ; 
 import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 import im . actor . runtime . actors . Props ; 
 import im . actor . runtime . android . AndroidContext ; 
 import im . actor . runtime . bser . BserCreator ; 
 @ @ - 51 , 6 + 54 , 7 @ @ import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . runtime . mvvm . Value ; 
 import im . actor . runtime . mvvm . ValueChangedListener ; 
 import im . actor . runtime . storage . ListEngineItem ; 
 + import im . actor . sdk . util . images . GalleryScannerActor ; 
 import me . leolin . shortcutbadger . ShortcutBadger ; 
 
 import static im . actor . runtime . actors . ActorSystem . system ; 
 @ @ - 68 , 6 + 72 , 8 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 private HashMap < Peer , BindedDisplayList < Message > > messagesLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; 
 private HashMap < Peer , BindedDisplayList < Message > > docsLists = new HashMap < Peer , BindedDisplayList < Message > > ( ) ; 
 private HashMap < String , BindedDisplayList > customLists = new HashMap < String , BindedDisplayList > ( ) ; 
 + private GalleryVM galleryVM ; 
 + private ActorRef galleryScannerActor ; 
 
 public AndroidMessenger ( Context context , im . actor . core . Configuration configuration ) { 
 super ( configuration ) ; 
 @ @ - 482 , 6 + 488 , 23 @ @ public class AndroidMessenger extends im . actor . core . Messenger { 
 return customLists . get ( key ) ; 
 } 
 
 + public GalleryVM getGalleryVM ( ) { 
 + if ( galleryVM = = null ) { 
 + galleryScannerActor = ActorSystem . system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public Actor create ( ) { 
 + return new GalleryScannerActor ( AndroidContext . getContext ( ) ) ; 
 + } 
 + } ) , " actor / gallery _ scanner " ) ; 
 + galleryVM = new GalleryVM ( ) ; 
 + } 
 + return galleryVM ; 
 + } 
 + 
 + public ActorRef getGalleryScannerActor ( ) { 
 + return galleryScannerActor ; 
 + } 
 + 
 public EventBus getEvents ( ) { 
 return modules . getEvents ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java 
 new file mode 100644 
 index 0000000 . . 9a3eb07 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / GalleryVM . java 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + package im . actor . core . viewmodel ; 
 + 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . entity . StickerPack ; 
 + import im . actor . runtime . mvvm . ValueModel ; 
 + 
 + public class GalleryVM { 
 + 
 + private ValueModel < ArrayList < String > > galleryMediaPath ; 
 + 
 + public GalleryVM ( ) { 
 + galleryMediaPath = new ValueModel < > ( " gallery . photo " , new ArrayList < String > ( ) ) ; 
 + } 
 + 
 + public ValueModel < ArrayList < String > > getGalleryMediaPath ( ) { 
 + return galleryMediaPath ; 
 + } 
 + }
