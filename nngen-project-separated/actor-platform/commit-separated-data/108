BLEU SCORE: 0.17771669724375852

TEST MSG: refactor ( server : groups ) : add some logging
GENERATED MSG: fix ( server : group ) : fixed kick response seq

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala < nl > index 0b0b37a . . 0eb5380 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala < nl > @ @ - 173 , 6 + 173 , 7 @ @ private [ group ] trait GroupCommandHandlers < nl > protected def isValidTitle ( title : String ) = title . nonEmpty & & title . length < 255 < nl > < nl > protected def updateCanCall ( currState : GroupState ) : Unit = { < nl > + log . debug ( s " Group { } can call updated " , groupId ) < nl > currState . memberIds foreach { userId ⇒ < nl > permissionsUpdates ( userId , currState ) foreach { update ⇒ < nl > seqUpdExt . deliverUserUpdate ( userId , update ) < nl > @ @ - 183 , 6 + 184 , 7 @ @ private [ group ] trait GroupCommandHandlers < nl > protected def makeMembersAsync ( ) : Unit = { < nl > persist ( MembersBecameAsync ( Instant . now ) ) { evt ⇒ < nl > val newState = commit ( evt ) < nl > + log . debug ( s " Group { } became async members " , groupId ) < nl > < nl > seqUpdExt . broadcastPeopleUpdate ( < nl > userIds = newState . memberIds ,
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala < nl > index 74ca9db . . 700f66e 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala < nl > @ @ - 418 , 9 + 418 , 9 @ @ private [ group ] trait GroupCommandHandlers extends GroupsImplicits with GroupComm < nl > _ ← GroupUserRepo . delete ( groupId , userId ) < nl > _ ← GroupInviteTokenRepo . revoke ( groupId , userId ) < nl > ( SeqState ( seq , state ) , _ ) ← DBIO . from ( userExt . broadcastClientAndUsersUpdate ( < nl > - clientUserId = userId , < nl > + clientUserId = initiatorId , < nl > clientAuthSid = clientAuthSid , < nl > - userIds = memberIds - userId , < nl > + userIds = memberIds , < nl > update = update , < nl > pushText = Some ( PushTexts . Left ) , < nl > isFat = false ,

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala 
 index 0b0b37a . . 0eb5380 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala 
 @ @ - 173 , 6 + 173 , 7 @ @ private [ group ] trait GroupCommandHandlers 
 protected def isValidTitle ( title : String ) = title . nonEmpty & & title . length < 255 
 
 protected def updateCanCall ( currState : GroupState ) : Unit = { 
 + log . debug ( s " Group { } can call updated " , groupId ) 
 currState . memberIds foreach { userId ⇒ 
 permissionsUpdates ( userId , currState ) foreach { update ⇒ 
 seqUpdExt . deliverUserUpdate ( userId , update ) 
 @ @ - 183 , 6 + 184 , 7 @ @ private [ group ] trait GroupCommandHandlers 
 protected def makeMembersAsync ( ) : Unit = { 
 persist ( MembersBecameAsync ( Instant . now ) ) { evt ⇒ 
 val newState = commit ( evt ) 
 + log . debug ( s " Group { } became async members " , groupId ) 
 
 seqUpdExt . broadcastPeopleUpdate ( 
 userIds = newState . memberIds ,

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala 
 index 74ca9db . . 700f66e 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / group / GroupCommandHandlers . scala 
 @ @ - 418 , 9 + 418 , 9 @ @ private [ group ] trait GroupCommandHandlers extends GroupsImplicits with GroupComm 
 _ ← GroupUserRepo . delete ( groupId , userId ) 
 _ ← GroupInviteTokenRepo . revoke ( groupId , userId ) 
 ( SeqState ( seq , state ) , _ ) ← DBIO . from ( userExt . broadcastClientAndUsersUpdate ( 
 - clientUserId = userId , 
 + clientUserId = initiatorId , 
 clientAuthSid = clientAuthSid , 
 - userIds = memberIds - userId , 
 + userIds = memberIds , 
 update = update , 
 pushText = Some ( PushTexts . Left ) , 
 isFat = false ,
