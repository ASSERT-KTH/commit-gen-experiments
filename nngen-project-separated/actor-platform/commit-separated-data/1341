BLEU SCORE: 0.19640732545025652

TEST MSG: feat ( core - js ) : StickerContent as ContentPhoto
GENERATED MSG: feat ( js ) : Adding reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > index c4d219e . . 7d2c873 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > @ @ - 8 , 10 + 8 , 12 @ @ import com . google . gwt . core . client . JavaScriptObject ; < nl > import com . google . gwt . core . client . JsArray ; < nl > import com . google . gwt . core . client . JsArrayString ; < nl > < nl > + import im . actor . core . api . ApiImageLocation ; < nl > import im . actor . core . api . ApiTextExMarkdown ; < nl > import im . actor . core . api . ApiTextModernAttach ; < nl > import im . actor . core . api . ApiTextModernField ; < nl > import im . actor . core . api . ApiTextModernMessage ; < nl > + import im . actor . core . entity . FileReference ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . entity . content . ContactContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > @ @ - 20 , 6 + 22 , 7 @ @ import im . actor . core . entity . content . FileRemoteSource ; < nl > import im . actor . core . entity . content . LocationContent ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . ServiceContent ; < nl > + import im . actor . core . entity . content . StickerContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . entity . content . VoiceContent ; < nl > import im . actor . core . js . JsMessenger ; < nl > @ @ - 92 , 6 + 95 , 18 @ @ public abstract class JsContent extends JavaScriptObject { < nl > thumb , fileUrl , isUploading ) ; < nl > } < nl > < nl > + } else if ( src instanceof StickerContent ) { < nl > + FileReference fileReference512 = ( ( StickerContent ) src ) . getSticker ( ) . getFileReference512 ( ) ; < nl > + ApiImageLocation imageLocation512 = ( ( StickerContent ) src ) . getSticker ( ) . getApiImageLocation512 ( ) ; < nl > + String fileUrl = messenger . getFileUrl ( fileReference512 ) ; < nl > + String fileSize = messenger . getFormatter ( ) . formatFileSize ( fileReference512 . getFileSize ( ) ) ; < nl > + String thumb = null ; < nl > + byte [ ] thumbRaw = ( ( StickerContent ) src ) . getSticker ( ) . getThumb ( ) ; < nl > + if ( thumbRaw ! = null ) { < nl > + String thumbBase64 = Base64Utils . toBase64 ( thumbRaw ) ; < nl > + thumb = " data : image / jpg ; base64 , " + thumbBase64 ; < nl > + } < nl > + content = JsContentPhoto . create ( fileReference512 . getFileName ( ) , " . webp " , fileSize , imageLocation512 . getWidth ( ) , imageLocation512 . getHeight ( ) , thumb , fileUrl , false ) ; < nl > } else if ( src instanceof ContactContent ) { < nl > ContactContent contactContent = ( ContactContent ) src ; < nl > JsArrayString phones = JsArray . createArray ( ) . cast ( ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java < nl > index 6c832c6 . . d55b094 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java < nl > @ @ - 21 , 6 + 21 , 7 @ @ public class Sticker extends AbsLocalContent { < nl > ApiImageLocation apiImageLocation128 ; < nl > ApiImageLocation apiImageLocation256 ; < nl > ApiImageLocation apiImageLocation512 ; < nl > + byte [ ] thumb ; < nl > < nl > int stickerId ; < nl > int stickerCollectionId ; < nl > @ @ - 38 , 6 + 39 , 7 @ @ public class Sticker extends AbsLocalContent { < nl > } < nl > < nl > public Sticker ( ApiStickerMessage msg ) { < nl > + thumb = msg . getFastPreview ( ) ; < nl > this . stickerId = msg . getStickerId ( ) ; < nl > this . stickerCollectionId = msg . getStickerCollectionId ( ) ; < nl > this . collectionAccessHash = msg . getStickerCollectionAccessHash ( ) ; < nl > @ @ - 135 , 6 + 137 , 9 @ @ public class Sticker extends AbsLocalContent { < nl > return apiImageLocation512 . getWidth ( ) ; < nl > } < nl > < nl > + public byte [ ] getThumb ( ) { < nl > + return thumb ; < nl > + } < nl > < nl > public int getStickerId ( ) { < nl > return stickerId ; < nl > @ @ - 158 , 6 + 163 , 8 @ @ public class Sticker extends AbsLocalContent { < nl > stickerId = values . getInt ( 4 ) ; < nl > stickerCollectionId = values . getInt ( 5 ) ; < nl > collectionAccessHash = values . getLong ( 6 ) ; < nl > + < nl > + thumb = values . getBytes ( 7 ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 169 , 5 + 176 , 7 @ @ public class Sticker extends AbsLocalContent { < nl > writer . writeInt ( 4 , stickerId ) ; < nl > writer . writeInt ( 5 , stickerCollectionId ) ; < nl > writer . writeLong ( 6 , collectionAccessHash ) ; < nl > + < nl > + writer . writeBytes ( 7 , thumb ) ; < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java < nl > index 74224e2 . . cf77d4e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java < nl > @ @ - 5 , 11 + 5 , 14 @ @ < nl > package im . actor . core . js . entity ; < nl > < nl > import com . google . gwt . core . client . JavaScriptObject ; < nl > + import com . google . gwt . core . client . JsArray ; < nl > + import com . google . gwt . core . client . JsArrayInteger ; < nl > import com . google . gwt . core . client . JsDate ; < nl > < nl > import im . actor . core . api . ApiTextExMarkdown ; < nl > import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . Peer ; < nl > + import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . entity . content . FileLocalSource ; < nl > import im . actor . core . entity . content . FileRemoteSource ; < nl > @ @ - 85 , 11 + 88 , 27 @ @ public class JsMessage extends JavaScriptObject { < nl > content = JsContentUnsupported . create ( ) ; < nl > } < nl > < nl > - return create ( rid , sortKey , sender , isOut , date , fullDate , Enums . convert ( value . getMessageState ( ) ) , isOnServer , content ) ; < nl > + JsArray < JsReaction > reactions = JsArray . createArray ( ) . cast ( ) ; < nl > + < nl > + for ( Reaction r : value . getReactions ( ) ) { < nl > + JsArrayInteger uids = ( JsArrayInteger ) JsArrayInteger . createArray ( ) ; < nl > + boolean isOwnSet = false ; < nl > + for ( Integer i : r . getUids ( ) ) { < nl > + uids . push ( i ) ; < nl > + if ( i = = messenger . myUid ( ) ) { < nl > + isOwnSet = true ; < nl > + } < nl > + } < nl > + reactions . push ( JsReaction . create ( r . getCode ( ) , uids , isOwnSet ) ; < nl > + } < nl > + < nl > + return create ( rid , sortKey , sender , isOut , date , fullDate , Enums . convert ( value . getMessageState ( ) ) , isOnServer , content , < nl > + reactions ) ; < nl > } < nl > } ; < nl > < nl > - public native static JsMessage create ( String rid , String sortKey , JsPeerInfo sender , boolean isOut , String date , JsDate fullDate , String state , boolean isOnServer , JsContent content ) / * - { < nl > + public native static JsMessage create ( String rid , String sortKey , JsPeerInfo sender , boolean isOut , String date , JsDate fullDate , String state , boolean isOnServer , JsContent content , < nl > + JsArray < JsReaction > reactions ) / * - { < nl > return { < nl > rid : rid , < nl > sortKey : sortKey , < nl > @ @ - 99 , 7 + 118 , 8 @ @ public class JsMessage extends JavaScriptObject { < nl > fullDate : fullDate , < nl > state : state , < nl > isOnServer : isOnServer , < nl > - content : content < nl > + content : content , < nl > + reactions : reactions < nl > } ; < nl > } - * / ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsReaction . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsReaction . java < nl > new file mode 100644 < nl > index 0000000 . . 5925834 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsReaction . java < nl > @ @ - 0 , 0 + 1 , 15 @ @ < nl > + package im . actor . core . js . entity ; < nl > + < nl > + import com . google . gwt . core . client . JavaScriptObject ; < nl > + import com . google . gwt . core . client . JsArrayInteger ; < nl > + < nl > + public class JsReaction extends JavaScriptObject { < nl > + < nl > + public static native JsReaction create ( String reaction , JsArrayInteger uids , boolean isOwnSet ) / * - { < nl > + return { reaction : reaction , uids : uids , isOwnSet : isOwnSet } ; < nl > + } - * / ; < nl > + < nl > + protected JsReaction ( ) { < nl > + < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java < nl > index 4011ef8 . . 50ad9d9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java < nl > @ @ - 135 , 7 + 135 , 7 @ @ public class Message extends BserObject implements ListEngineItem { < nl > senderId = values . getInt ( 4 ) ; < nl > messageState = MessageState . fromValue ( values . getInt ( 5 ) ) ; < nl > content = AbsContent . parse ( values . getBytes ( 6 ) ) ; < nl > - reactions . clear ( ) ; < nl > + reactions = new ArrayList < Reaction > ( ) ; < nl > for ( byte [ ] react : values . getRepeatedBytes ( 7 ) ) { < nl > reactions . add ( Reaction . fromBytes ( react ) ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 index c4d219e . . 7d2c873 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 @ @ - 8 , 10 + 8 , 12 @ @ import com . google . gwt . core . client . JavaScriptObject ; 
 import com . google . gwt . core . client . JsArray ; 
 import com . google . gwt . core . client . JsArrayString ; 
 
 + import im . actor . core . api . ApiImageLocation ; 
 import im . actor . core . api . ApiTextExMarkdown ; 
 import im . actor . core . api . ApiTextModernAttach ; 
 import im . actor . core . api . ApiTextModernField ; 
 import im . actor . core . api . ApiTextModernMessage ; 
 + import im . actor . core . entity . FileReference ; 
 import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . entity . content . ContactContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 @ @ - 20 , 6 + 22 , 7 @ @ import im . actor . core . entity . content . FileRemoteSource ; 
 import im . actor . core . entity . content . LocationContent ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . ServiceContent ; 
 + import im . actor . core . entity . content . StickerContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . entity . content . VoiceContent ; 
 import im . actor . core . js . JsMessenger ; 
 @ @ - 92 , 6 + 95 , 18 @ @ public abstract class JsContent extends JavaScriptObject { 
 thumb , fileUrl , isUploading ) ; 
 } 
 
 + } else if ( src instanceof StickerContent ) { 
 + FileReference fileReference512 = ( ( StickerContent ) src ) . getSticker ( ) . getFileReference512 ( ) ; 
 + ApiImageLocation imageLocation512 = ( ( StickerContent ) src ) . getSticker ( ) . getApiImageLocation512 ( ) ; 
 + String fileUrl = messenger . getFileUrl ( fileReference512 ) ; 
 + String fileSize = messenger . getFormatter ( ) . formatFileSize ( fileReference512 . getFileSize ( ) ) ; 
 + String thumb = null ; 
 + byte [ ] thumbRaw = ( ( StickerContent ) src ) . getSticker ( ) . getThumb ( ) ; 
 + if ( thumbRaw ! = null ) { 
 + String thumbBase64 = Base64Utils . toBase64 ( thumbRaw ) ; 
 + thumb = " data : image / jpg ; base64 , " + thumbBase64 ; 
 + } 
 + content = JsContentPhoto . create ( fileReference512 . getFileName ( ) , " . webp " , fileSize , imageLocation512 . getWidth ( ) , imageLocation512 . getHeight ( ) , thumb , fileUrl , false ) ; 
 } else if ( src instanceof ContactContent ) { 
 ContactContent contactContent = ( ContactContent ) src ; 
 JsArrayString phones = JsArray . createArray ( ) . cast ( ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java 
 index 6c832c6 . . d55b094 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java 
 @ @ - 21 , 6 + 21 , 7 @ @ public class Sticker extends AbsLocalContent { 
 ApiImageLocation apiImageLocation128 ; 
 ApiImageLocation apiImageLocation256 ; 
 ApiImageLocation apiImageLocation512 ; 
 + byte [ ] thumb ; 
 
 int stickerId ; 
 int stickerCollectionId ; 
 @ @ - 38 , 6 + 39 , 7 @ @ public class Sticker extends AbsLocalContent { 
 } 
 
 public Sticker ( ApiStickerMessage msg ) { 
 + thumb = msg . getFastPreview ( ) ; 
 this . stickerId = msg . getStickerId ( ) ; 
 this . stickerCollectionId = msg . getStickerCollectionId ( ) ; 
 this . collectionAccessHash = msg . getStickerCollectionAccessHash ( ) ; 
 @ @ - 135 , 6 + 137 , 9 @ @ public class Sticker extends AbsLocalContent { 
 return apiImageLocation512 . getWidth ( ) ; 
 } 
 
 + public byte [ ] getThumb ( ) { 
 + return thumb ; 
 + } 
 
 public int getStickerId ( ) { 
 return stickerId ; 
 @ @ - 158 , 6 + 163 , 8 @ @ public class Sticker extends AbsLocalContent { 
 stickerId = values . getInt ( 4 ) ; 
 stickerCollectionId = values . getInt ( 5 ) ; 
 collectionAccessHash = values . getLong ( 6 ) ; 
 + 
 + thumb = values . getBytes ( 7 ) ; 
 } 
 
 @ Override 
 @ @ - 169 , 5 + 176 , 7 @ @ public class Sticker extends AbsLocalContent { 
 writer . writeInt ( 4 , stickerId ) ; 
 writer . writeInt ( 5 , stickerCollectionId ) ; 
 writer . writeLong ( 6 , collectionAccessHash ) ; 
 + 
 + writer . writeBytes ( 7 , thumb ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java 
 index 74224e2 . . cf77d4e 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsMessage . java 
 @ @ - 5 , 11 + 5 , 14 @ @ 
 package im . actor . core . js . entity ; 
 
 import com . google . gwt . core . client . JavaScriptObject ; 
 + import com . google . gwt . core . client . JsArray ; 
 + import com . google . gwt . core . client . JsArrayInteger ; 
 import com . google . gwt . core . client . JsDate ; 
 
 import im . actor . core . api . ApiTextExMarkdown ; 
 import im . actor . core . entity . Message ; 
 import im . actor . core . entity . Peer ; 
 + import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . entity . content . FileLocalSource ; 
 import im . actor . core . entity . content . FileRemoteSource ; 
 @ @ - 85 , 11 + 88 , 27 @ @ public class JsMessage extends JavaScriptObject { 
 content = JsContentUnsupported . create ( ) ; 
 } 
 
 - return create ( rid , sortKey , sender , isOut , date , fullDate , Enums . convert ( value . getMessageState ( ) ) , isOnServer , content ) ; 
 + JsArray < JsReaction > reactions = JsArray . createArray ( ) . cast ( ) ; 
 + 
 + for ( Reaction r : value . getReactions ( ) ) { 
 + JsArrayInteger uids = ( JsArrayInteger ) JsArrayInteger . createArray ( ) ; 
 + boolean isOwnSet = false ; 
 + for ( Integer i : r . getUids ( ) ) { 
 + uids . push ( i ) ; 
 + if ( i = = messenger . myUid ( ) ) { 
 + isOwnSet = true ; 
 + } 
 + } 
 + reactions . push ( JsReaction . create ( r . getCode ( ) , uids , isOwnSet ) ; 
 + } 
 + 
 + return create ( rid , sortKey , sender , isOut , date , fullDate , Enums . convert ( value . getMessageState ( ) ) , isOnServer , content , 
 + reactions ) ; 
 } 
 } ; 
 
 - public native static JsMessage create ( String rid , String sortKey , JsPeerInfo sender , boolean isOut , String date , JsDate fullDate , String state , boolean isOnServer , JsContent content ) / * - { 
 + public native static JsMessage create ( String rid , String sortKey , JsPeerInfo sender , boolean isOut , String date , JsDate fullDate , String state , boolean isOnServer , JsContent content , 
 + JsArray < JsReaction > reactions ) / * - { 
 return { 
 rid : rid , 
 sortKey : sortKey , 
 @ @ - 99 , 7 + 118 , 8 @ @ public class JsMessage extends JavaScriptObject { 
 fullDate : fullDate , 
 state : state , 
 isOnServer : isOnServer , 
 - content : content 
 + content : content , 
 + reactions : reactions 
 } ; 
 } - * / ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsReaction . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsReaction . java 
 new file mode 100644 
 index 0000000 . . 5925834 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsReaction . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package im . actor . core . js . entity ; 
 + 
 + import com . google . gwt . core . client . JavaScriptObject ; 
 + import com . google . gwt . core . client . JsArrayInteger ; 
 + 
 + public class JsReaction extends JavaScriptObject { 
 + 
 + public static native JsReaction create ( String reaction , JsArrayInteger uids , boolean isOwnSet ) / * - { 
 + return { reaction : reaction , uids : uids , isOwnSet : isOwnSet } ; 
 + } - * / ; 
 + 
 + protected JsReaction ( ) { 
 + 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java 
 index 4011ef8 . . 50ad9d9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / Message . java 
 @ @ - 135 , 7 + 135 , 7 @ @ public class Message extends BserObject implements ListEngineItem { 
 senderId = values . getInt ( 4 ) ; 
 messageState = MessageState . fromValue ( values . getInt ( 5 ) ) ; 
 content = AbsContent . parse ( values . getBytes ( 6 ) ) ; 
 - reactions . clear ( ) ; 
 + reactions = new ArrayList < Reaction > ( ) ; 
 for ( byte [ ] react : values . getRepeatedBytes ( 7 ) ) { 
 reactions . add ( Reaction . fromBytes ( react ) ) ; 
 }
