BLEU SCORE: 0.2984745896009823

TEST MSG: chore ( android ) : recover scroll to unread
GENERATED MSG: style ( android ) : calls blur background

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > index 6eed32a . . 8ef2758 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java < nl > @ @ - 20 , 7 + 20 , 6 @ @ import android . support . v7 . view . ActionMode ; < nl > import android . support . v7 . widget . ChatLinearLayoutManager ; < nl > import android . support . v7 . widget . LinearLayoutManager ; < nl > import android . support . v7 . widget . RecyclerView ; < nl > - import android . text . InputType ; < nl > import android . view . LayoutInflater ; < nl > import android . view . Menu ; < nl > import android . view . MenuItem ; < nl > @ @ - 50 , 7 + 49 , 6 @ @ import im . actor . core . viewmodel . UserVM ; < nl > import im . actor . runtime . Log ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . Intents ; < nl > import im . actor . sdk . controllers . activity . ActorMainActivity ; < nl > import im . actor . sdk . controllers . activity . ShortcutActivity ; < nl > import im . actor . sdk . controllers . fragment . DisplayListFragment ; < nl > @ @ - 61 , 7 + 59 , 6 @ @ import im . actor . runtime . android . view . BindedListAdapter ; < nl > import im . actor . runtime . generic . mvvm . AndroidListUpdate ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > import im . actor . runtime . generic . mvvm . DisplayList ; < nl > - import im . actor . sdk . view . BackgroundPreviewView ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > import static im . actor . sdk . util . ActorSDKMessenger . myUid ; < nl > @ @ - 82 , 7 + 79 , 6 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > < nl > private Peer peer ; < nl > < nl > - / / private ChatLinearLayoutManager linearLayoutManager ; < nl > protected MessagesAdapter messagesAdapter ; < nl > / / private ConversationVM conversationVM ; < nl > private ActionMode actionMode ; < nl > @ @ - 247 , 18 + 243 , 18 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > messagesAdapter . setFirstUnread ( unreadId ) ; < nl > } < nl > < nl > - if ( index > 0 ) { < nl > - < nl > - / / if ( linearLayoutManager ! = null ) { < nl > - / / linearLayoutManager . setStackFromEnd ( false ) ; < nl > - / / linearLayoutManager . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; < nl > - / / / / linearLayoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; < nl > - / / / / linearLayoutManager . scrollToPosition ( index + 1 ) ; < nl > - / / / / getCollection ( ) . scrollToPosition ( index + 1 ) ; < nl > - / / } < nl > + RecyclerView . LayoutManager layoutManager = getCollection ( ) . getLayoutManager ( ) ; < nl > + if ( index > 0 & & layoutManager ! = null & & layoutManager instanceof ChatLinearLayoutManager ) { < nl > + if ( layoutManager ! = null ) { < nl > + ( ( ChatLinearLayoutManager ) layoutManager ) . setStackFromEnd ( false ) ; < nl > + ( ( ChatLinearLayoutManager ) layoutManager ) . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; < nl > + / / layoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; < nl > + / / layoutManager . scrollToPosition ( index + 1 ) ; < nl > + / / getCollection ( ) . scrollToPosition ( index + 1 ) ; < nl > + } < nl > < nl > } else if ( getCollection ( ) ! = null ) { < nl > - / / linearLayoutManager . scrollToPosition ( 0 ) ; < nl > + / / layoutManager . scrollToPosition ( 0 ) ; < nl > getCollection ( ) . scrollToPosition ( 0 ) ; < nl > } < nl > } < nl > @ @ - 275 , 13 + 271 , 13 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > @ Override < nl > protected void configureRecyclerView ( RecyclerView recyclerView ) { < nl > recyclerView . setHasFixedSize ( true ) ; < nl > - final LinearLayoutManager manager = new LinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; < nl > - manager . setStackFromEnd ( false ) ; < nl > - recyclerView . setLayoutManager ( manager ) ; < nl > + final ChatLinearLayoutManager layoutManager = new ChatLinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; < nl > + layoutManager . setStackFromEnd ( false ) ; < nl > + recyclerView . setLayoutManager ( layoutManager ) ; < nl > getDisplayList ( ) . setLinearLayoutCallback ( new BindedDisplayList . LinearLayoutCallback ( ) { < nl > @ Override < nl > public void setStackFromEnd ( boolean b ) { < nl > - if ( manager ! = null ) manager . setStackFromEnd ( b ) ; < nl > + if ( layoutManager ! = null ) layoutManager . setStackFromEnd ( b ) ; < nl > } < nl > } ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > index f1f2db1 . . 127e639 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java < nl > @ @ - 60 , 6 + 60 , 7 @ @ import im . actor . sdk . view . TintImageView ; < nl > import im . actor . sdk . view . adapters . HolderAdapter ; < nl > import im . actor . sdk . view . adapters . ViewHolder ; < nl > import im . actor . sdk . view . avatar . AvatarView ; < nl > + import im . actor . sdk . view . avatar . CallBackgroundAvatarView ; < nl > < nl > import static im . actor . sdk . util . ActorSDKMessenger . groups ; < nl > import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > @ @ - 121 , 6 + 122 , 8 @ @ public class CallFragment extends BaseFragment { < nl > FrameLayout cont = ( FrameLayout ) inflater . inflate ( R . layout . fragment _ call , container , false ) ; < nl > v = ( Vibrator ) getActivity ( ) . getSystemService ( Context . VIBRATOR _ SERVICE ) ; < nl > < nl > + CallBackgroundAvatarView backgroundAvatarView = ( CallBackgroundAvatarView ) cont . findViewById ( R . id . background ) ; < nl > + < nl > / / animator = new CallAvatarLayerAnimator ( cont . findViewById ( R . id . layer ) , < nl > / / cont . findViewById ( R . id . layer1 ) , < nl > / / cont . findViewById ( R . id . layer2 ) , < nl > @ @ - 185 , 10 + 188 , 12 @ @ public class CallFragment extends BaseFragment { < nl > if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > UserVM user = users ( ) . get ( peer . getPeerId ( ) ) ; < nl > avatarView . bind ( user ) ; < nl > + backgroundAvatarView . bind ( user ) ; < nl > bind ( nameTV , user . getName ( ) ) ; < nl > } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > GroupVM g = groups ( ) . get ( peer . getPeerId ( ) ) ; < nl > avatarView . bind ( g ) ; < nl > + backgroundAvatarView . bind ( g ) ; < nl > bind ( nameTV , g . getName ( ) ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / BlurActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / BlurActor . java < nl > new file mode 100644 < nl > index 0000000 . . 3ffd227 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / BlurActor . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . view . avatar ; < nl > + < nl > + import android . graphics . Bitmap ; < nl > + < nl > + import java . io . File ; < nl > + import java . io . IOException ; < nl > + < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . sdk . util . images . BitmapUtil ; < nl > + import im . actor . sdk . util . images . common . ImageLoadException ; < nl > + import im . actor . sdk . util . images . ops . ImageLoading ; < nl > + < nl > + public class BlurActor extends Actor { < nl > + < nl > + private void onNeedBlur ( String path , int blurRadius , BluredListener bl ) { < nl > + File blured = new File ( path + " _ blured " ) ; < nl > + if ( ! blured . exists ( ) | | blured . length ( ) = = 0 ) { < nl > + try { < nl > + Bitmap blurdBitmap = BitmapUtil . fastBlur ( ImageLoading . loadBitmap ( path ) , blurRadius ) ; < nl > + BitmapUtil . save ( blurdBitmap , blured . getPath ( ) ) ; < nl > + bl . onBlured ( blured ) ; < nl > + } catch ( ImageLoadException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } catch ( IOException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + } else { < nl > + bl . onBlured ( blured ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof RequestBlur ) { < nl > + onNeedBlur ( ( ( RequestBlur ) message ) . getPath ( ) , ( ( RequestBlur ) message ) . getRadius ( ) , ( ( RequestBlur ) message ) . getBl ( ) ) ; < nl > + } < nl > + } < nl > + < nl > + public static class RequestBlur { < nl > + String path ; < nl > + int radius ; < nl > + BluredListener bl ; < nl > + < nl > + public String getPath ( ) { < nl > + return path ; < nl > + } < nl > + < nl > + public int getRadius ( ) { < nl > + return radius ; < nl > + } < nl > + < nl > + public BluredListener getBl ( ) { < nl > + return bl ; < nl > + } < nl > + < nl > + public RequestBlur ( String path , int radius , BluredListener bl ) { < nl > + this . path = path ; < nl > + this . radius = radius ; < nl > + this . bl = bl ; < nl > + } < nl > + } < nl > + < nl > + interface BluredListener { < nl > + void onBlured ( File f ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / CallBackgroundAvatarView . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / CallBackgroundAvatarView . java < nl > new file mode 100644 < nl > index 0000000 . . 450475a < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / CallBackgroundAvatarView . java < nl > @ @ - 0 , 0 + 1 , 188 @ @ < nl > + package im . actor . sdk . view . avatar ; < nl > + < nl > + import android . content . Context ; < nl > + import android . net . Uri ; < nl > + import android . util . AttributeSet ; < nl > + < nl > + import com . facebook . drawee . backends . pipeline . Fresco ; < nl > + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; < nl > + import com . facebook . drawee . generic . GenericDraweeHierarchy ; < nl > + import com . facebook . drawee . generic . GenericDraweeHierarchyBuilder ; < nl > + import com . facebook . drawee . generic . RoundingParams ; < nl > + import com . facebook . drawee . view . SimpleDraweeView ; < nl > + import com . facebook . imagepipeline . common . ResizeOptions ; < nl > + import com . facebook . imagepipeline . request . ImageRequest ; < nl > + import com . facebook . imagepipeline . request . ImageRequestBuilder ; < nl > + < nl > + import java . io . File ; < nl > + < nl > + import im . actor . core . entity . Avatar ; < nl > + import im . actor . core . entity . AvatarImage ; < nl > + import im . actor . core . entity . Contact ; < nl > + import im . actor . core . entity . Dialog ; < nl > + import im . actor . core . entity . PublicGroup ; < nl > + import im . actor . core . viewmodel . FileVM ; < nl > + import im . actor . core . viewmodel . FileVMCallback ; < nl > + import im . actor . core . viewmodel . GroupVM ; < nl > + import im . actor . core . viewmodel . UserVM ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . ActorRef ; < nl > + import im . actor . runtime . actors . ActorSystem ; < nl > + import im . actor . runtime . actors . Props ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . runtime . files . FileSystemReference ; < nl > + import im . actor . sdk . controllers . activity . BaseActivity ; < nl > + import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; < nl > + import im . actor . sdk . util . Screen ; < nl > + < nl > + import static im . actor . runtime . actors . ActorSystem . system ; < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class CallBackgroundAvatarView extends SimpleDraweeView { < nl > + < nl > + private FileVM bindedFile ; < nl > + private long currentId ; < nl > + private FastThumbLoader fastThumbLoader ; < nl > + < nl > + private static ActorRef blurActor ; < nl > + < nl > + public CallBackgroundAvatarView ( Context context , GenericDraweeHierarchy hierarchy ) { < nl > + super ( context , hierarchy ) ; < nl > + init ( ) ; < nl > + } < nl > + < nl > + public CallBackgroundAvatarView ( Context context ) { < nl > + super ( context ) ; < nl > + init ( ) ; < nl > + } < nl > + < nl > + public CallBackgroundAvatarView ( Context context , AttributeSet attrs ) { < nl > + super ( context , attrs ) ; < nl > + init ( ) ; < nl > + } < nl > + < nl > + public CallBackgroundAvatarView ( Context context , AttributeSet attrs , int defStyle ) { < nl > + super ( context , attrs , defStyle ) ; < nl > + init ( ) ; < nl > + } < nl > + < nl > + public void init ( ) { < nl > + if ( blurActor = = null ) { < nl > + blurActor = system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { < nl > + @ Override < nl > + public BlurActor create ( ) { < nl > + return new BlurActor ( ) ; < nl > + } < nl > + } ) , " actor / call _ blur " ) ; < nl > + } < nl > + GenericDraweeHierarchyBuilder builder = < nl > + new GenericDraweeHierarchyBuilder ( getResources ( ) ) ; < nl > + < nl > + GenericDraweeHierarchy hierarchy = builder < nl > + . setFadeDuration ( 200 ) < nl > + . build ( ) ; < nl > + setHierarchy ( hierarchy ) ; < nl > + } < nl > + public void bind ( UserVM user ) { < nl > + bind ( user . getAvatar ( ) . get ( ) ) ; < nl > + } < nl > + < nl > + public void bind ( GroupVM group ) { < nl > + bind ( group . getAvatar ( ) . get ( ) ) ; < nl > + } < nl > + < nl > + < nl > + < nl > + public void bind ( Avatar avatar ) { < nl > + / / Same avatar < nl > + if ( avatar ! = null & & getImage ( avatar ) ! = null < nl > + & & getImage ( avatar ) . getFileReference ( ) . getFileId ( ) = = currentId ) { < nl > + return ; < nl > + } < nl > + < nl > + fastThumbLoader = new FastThumbLoader ( this ) ; < nl > + fastThumbLoader . setBlur ( 10 ) ; < nl > + < nl > + if ( bindedFile ! = null ) { < nl > + bindedFile . detach ( ) ; < nl > + bindedFile = null ; < nl > + } < nl > + < nl > + setImageURI ( null ) ; < nl > + < nl > + if ( avatar = = null | | getImage ( avatar ) = = null ) { < nl > + currentId = 0 ; < nl > + return ; < nl > + } < nl > + currentId = getImage ( avatar ) . getFileReference ( ) . getFileId ( ) ; < nl > + < nl > + bindedFile = messenger ( ) . bindFile ( getImage ( avatar ) . getFileReference ( ) , true , new FileVMCallback ( ) { < nl > + @ Override < nl > + public void onNotDownloaded ( ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onDownloading ( float progress ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onDownloaded ( FileSystemReference reference ) { < nl > + < nl > + blurActor . send ( new BlurActor . RequestBlur ( reference . getDescriptor ( ) , 10 , new BlurActor . BluredListener ( ) { < nl > + @ Override < nl > + public void onBlured ( final File f ) { < nl > + ( ( BaseActivity ) getContext ( ) ) . runOnUiThread ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( f ) ) < nl > + . setResizeOptions ( new ResizeOptions ( Screen . getWidth ( ) , Screen . getHeight ( ) ) ) < nl > + . build ( ) ; < nl > + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) < nl > + . setOldController ( getController ( ) ) < nl > + . setImageRequest ( request ) < nl > + . build ( ) ; < nl > + setController ( controller ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + } < nl > + } ) ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + public AvatarImage getImage ( Avatar avatar ) { < nl > + < nl > + return avatar . getSmallImage ( ) ; < nl > + } < nl > + < nl > + public void bindRaw ( String fileName ) { < nl > + if ( bindedFile ! = null ) { < nl > + bindedFile . detach ( ) ; < nl > + bindedFile = null ; < nl > + } < nl > + currentId = 0 ; < nl > + < nl > + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( fileName ) ) ) < nl > + . setAutoRotateEnabled ( true ) < nl > + . build ( ) ; < nl > + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) < nl > + . setOldController ( getController ( ) ) < nl > + . setImageRequest ( request ) < nl > + . build ( ) ; < nl > + setController ( controller ) ; < nl > + } < nl > + < nl > + public void unbind ( ) { < nl > + if ( bindedFile ! = null ) { < nl > + bindedFile . detach ( ) ; < nl > + bindedFile = null ; < nl > + } < nl > + currentId = 0 ; < nl > + < nl > + setImageURI ( null ) ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml < nl > index bb045bf . . 823ba18 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml < nl > @ @ - 2 , 13 + 2 , 18 @ @ < nl > < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " < nl > xmlns : tools = " http : / / schemas . android . com / tools " < nl > android : layout _ width = " match _ parent " < nl > + android : background = " @ android : color / black " < nl > android : layout _ height = " match _ parent " > < nl > < nl > + < im . actor . sdk . view . avatar . CallBackgroundAvatarView < nl > + android : id = " @ + id / background " < nl > + android : layout _ width = " match _ parent " < nl > + android : layout _ height = " match _ parent " / > < nl > + < nl > < LinearLayout < nl > android : layout _ width = " match _ parent " < nl > android : layout _ height = " match _ parent " < nl > android : weightSum = " 2 " < nl > - android : background = " @ android : color / black " < nl > android : orientation = " vertical " > < nl > < nl > < TextView

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 index 6eed32a . . 8ef2758 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / MessagesFragment . java 
 @ @ - 20 , 7 + 20 , 6 @ @ import android . support . v7 . view . ActionMode ; 
 import android . support . v7 . widget . ChatLinearLayoutManager ; 
 import android . support . v7 . widget . LinearLayoutManager ; 
 import android . support . v7 . widget . RecyclerView ; 
 - import android . text . InputType ; 
 import android . view . LayoutInflater ; 
 import android . view . Menu ; 
 import android . view . MenuItem ; 
 @ @ - 50 , 7 + 49 , 6 @ @ import im . actor . core . viewmodel . UserVM ; 
 import im . actor . runtime . Log ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . Intents ; 
 import im . actor . sdk . controllers . activity . ActorMainActivity ; 
 import im . actor . sdk . controllers . activity . ShortcutActivity ; 
 import im . actor . sdk . controllers . fragment . DisplayListFragment ; 
 @ @ - 61 , 7 + 59 , 6 @ @ import im . actor . runtime . android . view . BindedListAdapter ; 
 import im . actor . runtime . generic . mvvm . AndroidListUpdate ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 import im . actor . runtime . generic . mvvm . DisplayList ; 
 - import im . actor . sdk . view . BackgroundPreviewView ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 import static im . actor . sdk . util . ActorSDKMessenger . myUid ; 
 @ @ - 82 , 7 + 79 , 6 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 
 private Peer peer ; 
 
 - / / private ChatLinearLayoutManager linearLayoutManager ; 
 protected MessagesAdapter messagesAdapter ; 
 / / private ConversationVM conversationVM ; 
 private ActionMode actionMode ; 
 @ @ - 247 , 18 + 243 , 18 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 messagesAdapter . setFirstUnread ( unreadId ) ; 
 } 
 
 - if ( index > 0 ) { 
 - 
 - / / if ( linearLayoutManager ! = null ) { 
 - / / linearLayoutManager . setStackFromEnd ( false ) ; 
 - / / linearLayoutManager . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; 
 - / / / / linearLayoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; 
 - / / / / linearLayoutManager . scrollToPosition ( index + 1 ) ; 
 - / / / / getCollection ( ) . scrollToPosition ( index + 1 ) ; 
 - / / } 
 + RecyclerView . LayoutManager layoutManager = getCollection ( ) . getLayoutManager ( ) ; 
 + if ( index > 0 & & layoutManager ! = null & & layoutManager instanceof ChatLinearLayoutManager ) { 
 + if ( layoutManager ! = null ) { 
 + ( ( ChatLinearLayoutManager ) layoutManager ) . setStackFromEnd ( false ) ; 
 + ( ( ChatLinearLayoutManager ) layoutManager ) . scrollToPositionWithOffset ( index + 1 , Screen . dp ( 64 ) ) ; 
 + / / layoutManager . scrollToPosition ( getDisplayList ( ) . getSize ( ) - index - 1 ) ; 
 + / / layoutManager . scrollToPosition ( index + 1 ) ; 
 + / / getCollection ( ) . scrollToPosition ( index + 1 ) ; 
 + } 
 
 } else if ( getCollection ( ) ! = null ) { 
 - / / linearLayoutManager . scrollToPosition ( 0 ) ; 
 + / / layoutManager . scrollToPosition ( 0 ) ; 
 getCollection ( ) . scrollToPosition ( 0 ) ; 
 } 
 } 
 @ @ - 275 , 13 + 271 , 13 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 @ Override 
 protected void configureRecyclerView ( RecyclerView recyclerView ) { 
 recyclerView . setHasFixedSize ( true ) ; 
 - final LinearLayoutManager manager = new LinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; 
 - manager . setStackFromEnd ( false ) ; 
 - recyclerView . setLayoutManager ( manager ) ; 
 + final ChatLinearLayoutManager layoutManager = new ChatLinearLayoutManager ( getActivity ( ) , ChatLinearLayoutManager . VERTICAL , true ) ; 
 + layoutManager . setStackFromEnd ( false ) ; 
 + recyclerView . setLayoutManager ( layoutManager ) ; 
 getDisplayList ( ) . setLinearLayoutCallback ( new BindedDisplayList . LinearLayoutCallback ( ) { 
 @ Override 
 public void setStackFromEnd ( boolean b ) { 
 - if ( manager ! = null ) manager . setStackFromEnd ( b ) ; 
 + if ( layoutManager ! = null ) layoutManager . setStackFromEnd ( b ) ; 
 } 
 } ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 index f1f2db1 . . 127e639 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / calls / CallFragment . java 
 @ @ - 60 , 6 + 60 , 7 @ @ import im . actor . sdk . view . TintImageView ; 
 import im . actor . sdk . view . adapters . HolderAdapter ; 
 import im . actor . sdk . view . adapters . ViewHolder ; 
 import im . actor . sdk . view . avatar . AvatarView ; 
 + import im . actor . sdk . view . avatar . CallBackgroundAvatarView ; 
 
 import static im . actor . sdk . util . ActorSDKMessenger . groups ; 
 import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 @ @ - 121 , 6 + 122 , 8 @ @ public class CallFragment extends BaseFragment { 
 FrameLayout cont = ( FrameLayout ) inflater . inflate ( R . layout . fragment _ call , container , false ) ; 
 v = ( Vibrator ) getActivity ( ) . getSystemService ( Context . VIBRATOR _ SERVICE ) ; 
 
 + CallBackgroundAvatarView backgroundAvatarView = ( CallBackgroundAvatarView ) cont . findViewById ( R . id . background ) ; 
 + 
 / / animator = new CallAvatarLayerAnimator ( cont . findViewById ( R . id . layer ) , 
 / / cont . findViewById ( R . id . layer1 ) , 
 / / cont . findViewById ( R . id . layer2 ) , 
 @ @ - 185 , 10 + 188 , 12 @ @ public class CallFragment extends BaseFragment { 
 if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 UserVM user = users ( ) . get ( peer . getPeerId ( ) ) ; 
 avatarView . bind ( user ) ; 
 + backgroundAvatarView . bind ( user ) ; 
 bind ( nameTV , user . getName ( ) ) ; 
 } else if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 GroupVM g = groups ( ) . get ( peer . getPeerId ( ) ) ; 
 avatarView . bind ( g ) ; 
 + backgroundAvatarView . bind ( g ) ; 
 bind ( nameTV , g . getName ( ) ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / BlurActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / BlurActor . java 
 new file mode 100644 
 index 0000000 . . 3ffd227 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / BlurActor . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . view . avatar ; 
 + 
 + import android . graphics . Bitmap ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 + 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . sdk . util . images . BitmapUtil ; 
 + import im . actor . sdk . util . images . common . ImageLoadException ; 
 + import im . actor . sdk . util . images . ops . ImageLoading ; 
 + 
 + public class BlurActor extends Actor { 
 + 
 + private void onNeedBlur ( String path , int blurRadius , BluredListener bl ) { 
 + File blured = new File ( path + " _ blured " ) ; 
 + if ( ! blured . exists ( ) | | blured . length ( ) = = 0 ) { 
 + try { 
 + Bitmap blurdBitmap = BitmapUtil . fastBlur ( ImageLoading . loadBitmap ( path ) , blurRadius ) ; 
 + BitmapUtil . save ( blurdBitmap , blured . getPath ( ) ) ; 
 + bl . onBlured ( blured ) ; 
 + } catch ( ImageLoadException e ) { 
 + e . printStackTrace ( ) ; 
 + } catch ( IOException e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + } else { 
 + bl . onBlured ( blured ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof RequestBlur ) { 
 + onNeedBlur ( ( ( RequestBlur ) message ) . getPath ( ) , ( ( RequestBlur ) message ) . getRadius ( ) , ( ( RequestBlur ) message ) . getBl ( ) ) ; 
 + } 
 + } 
 + 
 + public static class RequestBlur { 
 + String path ; 
 + int radius ; 
 + BluredListener bl ; 
 + 
 + public String getPath ( ) { 
 + return path ; 
 + } 
 + 
 + public int getRadius ( ) { 
 + return radius ; 
 + } 
 + 
 + public BluredListener getBl ( ) { 
 + return bl ; 
 + } 
 + 
 + public RequestBlur ( String path , int radius , BluredListener bl ) { 
 + this . path = path ; 
 + this . radius = radius ; 
 + this . bl = bl ; 
 + } 
 + } 
 + 
 + interface BluredListener { 
 + void onBlured ( File f ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / CallBackgroundAvatarView . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / CallBackgroundAvatarView . java 
 new file mode 100644 
 index 0000000 . . 450475a 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / avatar / CallBackgroundAvatarView . java 
 @ @ - 0 , 0 + 1 , 188 @ @ 
 + package im . actor . sdk . view . avatar ; 
 + 
 + import android . content . Context ; 
 + import android . net . Uri ; 
 + import android . util . AttributeSet ; 
 + 
 + import com . facebook . drawee . backends . pipeline . Fresco ; 
 + import com . facebook . drawee . backends . pipeline . PipelineDraweeController ; 
 + import com . facebook . drawee . generic . GenericDraweeHierarchy ; 
 + import com . facebook . drawee . generic . GenericDraweeHierarchyBuilder ; 
 + import com . facebook . drawee . generic . RoundingParams ; 
 + import com . facebook . drawee . view . SimpleDraweeView ; 
 + import com . facebook . imagepipeline . common . ResizeOptions ; 
 + import com . facebook . imagepipeline . request . ImageRequest ; 
 + import com . facebook . imagepipeline . request . ImageRequestBuilder ; 
 + 
 + import java . io . File ; 
 + 
 + import im . actor . core . entity . Avatar ; 
 + import im . actor . core . entity . AvatarImage ; 
 + import im . actor . core . entity . Contact ; 
 + import im . actor . core . entity . Dialog ; 
 + import im . actor . core . entity . PublicGroup ; 
 + import im . actor . core . viewmodel . FileVM ; 
 + import im . actor . core . viewmodel . FileVMCallback ; 
 + import im . actor . core . viewmodel . GroupVM ; 
 + import im . actor . core . viewmodel . UserVM ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . ActorRef ; 
 + import im . actor . runtime . actors . ActorSystem ; 
 + import im . actor . runtime . actors . Props ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . runtime . files . FileSystemReference ; 
 + import im . actor . sdk . controllers . activity . BaseActivity ; 
 + import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; 
 + import im . actor . sdk . util . Screen ; 
 + 
 + import static im . actor . runtime . actors . ActorSystem . system ; 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class CallBackgroundAvatarView extends SimpleDraweeView { 
 + 
 + private FileVM bindedFile ; 
 + private long currentId ; 
 + private FastThumbLoader fastThumbLoader ; 
 + 
 + private static ActorRef blurActor ; 
 + 
 + public CallBackgroundAvatarView ( Context context , GenericDraweeHierarchy hierarchy ) { 
 + super ( context , hierarchy ) ; 
 + init ( ) ; 
 + } 
 + 
 + public CallBackgroundAvatarView ( Context context ) { 
 + super ( context ) ; 
 + init ( ) ; 
 + } 
 + 
 + public CallBackgroundAvatarView ( Context context , AttributeSet attrs ) { 
 + super ( context , attrs ) ; 
 + init ( ) ; 
 + } 
 + 
 + public CallBackgroundAvatarView ( Context context , AttributeSet attrs , int defStyle ) { 
 + super ( context , attrs , defStyle ) ; 
 + init ( ) ; 
 + } 
 + 
 + public void init ( ) { 
 + if ( blurActor = = null ) { 
 + blurActor = system ( ) . actorOf ( Props . create ( new ActorCreator ( ) { 
 + @ Override 
 + public BlurActor create ( ) { 
 + return new BlurActor ( ) ; 
 + } 
 + } ) , " actor / call _ blur " ) ; 
 + } 
 + GenericDraweeHierarchyBuilder builder = 
 + new GenericDraweeHierarchyBuilder ( getResources ( ) ) ; 
 + 
 + GenericDraweeHierarchy hierarchy = builder 
 + . setFadeDuration ( 200 ) 
 + . build ( ) ; 
 + setHierarchy ( hierarchy ) ; 
 + } 
 + public void bind ( UserVM user ) { 
 + bind ( user . getAvatar ( ) . get ( ) ) ; 
 + } 
 + 
 + public void bind ( GroupVM group ) { 
 + bind ( group . getAvatar ( ) . get ( ) ) ; 
 + } 
 + 
 + 
 + 
 + public void bind ( Avatar avatar ) { 
 + / / Same avatar 
 + if ( avatar ! = null & & getImage ( avatar ) ! = null 
 + & & getImage ( avatar ) . getFileReference ( ) . getFileId ( ) = = currentId ) { 
 + return ; 
 + } 
 + 
 + fastThumbLoader = new FastThumbLoader ( this ) ; 
 + fastThumbLoader . setBlur ( 10 ) ; 
 + 
 + if ( bindedFile ! = null ) { 
 + bindedFile . detach ( ) ; 
 + bindedFile = null ; 
 + } 
 + 
 + setImageURI ( null ) ; 
 + 
 + if ( avatar = = null | | getImage ( avatar ) = = null ) { 
 + currentId = 0 ; 
 + return ; 
 + } 
 + currentId = getImage ( avatar ) . getFileReference ( ) . getFileId ( ) ; 
 + 
 + bindedFile = messenger ( ) . bindFile ( getImage ( avatar ) . getFileReference ( ) , true , new FileVMCallback ( ) { 
 + @ Override 
 + public void onNotDownloaded ( ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onDownloading ( float progress ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onDownloaded ( FileSystemReference reference ) { 
 + 
 + blurActor . send ( new BlurActor . RequestBlur ( reference . getDescriptor ( ) , 10 , new BlurActor . BluredListener ( ) { 
 + @ Override 
 + public void onBlured ( final File f ) { 
 + ( ( BaseActivity ) getContext ( ) ) . runOnUiThread ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( f ) ) 
 + . setResizeOptions ( new ResizeOptions ( Screen . getWidth ( ) , Screen . getHeight ( ) ) ) 
 + . build ( ) ; 
 + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) 
 + . setOldController ( getController ( ) ) 
 + . setImageRequest ( request ) 
 + . build ( ) ; 
 + setController ( controller ) ; 
 + } 
 + } ) ; 
 + 
 + } 
 + } ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + public AvatarImage getImage ( Avatar avatar ) { 
 + 
 + return avatar . getSmallImage ( ) ; 
 + } 
 + 
 + public void bindRaw ( String fileName ) { 
 + if ( bindedFile ! = null ) { 
 + bindedFile . detach ( ) ; 
 + bindedFile = null ; 
 + } 
 + currentId = 0 ; 
 + 
 + ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( fileName ) ) ) 
 + . setAutoRotateEnabled ( true ) 
 + . build ( ) ; 
 + PipelineDraweeController controller = ( PipelineDraweeController ) Fresco . newDraweeControllerBuilder ( ) 
 + . setOldController ( getController ( ) ) 
 + . setImageRequest ( request ) 
 + . build ( ) ; 
 + setController ( controller ) ; 
 + } 
 + 
 + public void unbind ( ) { 
 + if ( bindedFile ! = null ) { 
 + bindedFile . detach ( ) ; 
 + bindedFile = null ; 
 + } 
 + currentId = 0 ; 
 + 
 + setImageURI ( null ) ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml 
 index bb045bf . . 823ba18 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / layout / fragment _ call . xml 
 @ @ - 2 , 13 + 2 , 18 @ @ 
 < FrameLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 xmlns : tools = " http : / / schemas . android . com / tools " 
 android : layout _ width = " match _ parent " 
 + android : background = " @ android : color / black " 
 android : layout _ height = " match _ parent " > 
 
 + < im . actor . sdk . view . avatar . CallBackgroundAvatarView 
 + android : id = " @ + id / background " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " / > 
 + 
 < LinearLayout 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " match _ parent " 
 android : weightSum = " 2 " 
 - android : background = " @ android : color / black " 
 android : orientation = " vertical " > 
 
 < TextView
