BLEU SCORE: 0.09578464408619825

TEST MSG: wip ( core + android ) : implement on client contacts privacy
GENERATED MSG: feat ( core ) : limited notifications pending storage

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 9722be5 . . d737d25 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 56 , 6 + 56 , 7 @ @ public class Application extends ActorSDKApplication { < nl > public void onConfigureActorSDK ( ) { < nl > ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > + ActorSDK . sharedActor ( ) . setOnClientPrivacyEnabled ( true ) ; < nl > < nl > ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > style . setDialogsActiveTextColor ( 0xff5882ac ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 08bc190 . . d6c6684 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 194 , 6 + 194 , 9 @ @ public class ActorSDK { < nl > * / < nl > private boolean callsEnabled = false ; < nl > private boolean videoCallsEnabled = false ; < nl > + < nl > + private boolean onClientPrivacyEnabled = false ; < nl > + < nl > private String inviteDataUrl = " https : / / api . actor . im / v1 / groups / invites / " ; < nl > < nl > private ActorSDK ( ) { < nl > @ @ - 257 , 6 + 260 , 7 @ @ public class ActorSDK { < nl > } < nl > builder . setPhoneBookProvider ( new AndroidPhoneBook ( ) ) ; < nl > builder . setVideoCallsEnabled ( videoCallsEnabled ) ; < nl > + builder . setOnClientPrivacyEnabled ( onClientPrivacyEnabled ) ; < nl > builder . setNotificationProvider ( new AndroidNotifications ( application ) ) ; < nl > builder . setDeviceCategory ( DeviceCategory . MOBILE ) ; < nl > builder . setPlatformType ( PlatformType . ANDROID ) ; < nl > @ @ - 1051 , 6 + 1055 , 14 @ @ public class ActorSDK { < nl > this . videoCallsEnabled = videoCallsEnabled ; < nl > } < nl > < nl > + public void setOnClientPrivacyEnabled ( boolean onClientPrivacyEnabled ) { < nl > + this . onClientPrivacyEnabled = onClientPrivacyEnabled ; < nl > + } < nl > + < nl > + public boolean isOnClientPrivacyEnabled ( ) { < nl > + return onClientPrivacyEnabled ; < nl > + } < nl > + < nl > public String getInviteDataUrl ( ) { < nl > return inviteDataUrl ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java < nl > index bf969b4 . . 97201e3 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java < nl > @ @ - 284 , 137 + 284 , 142 @ @ public class ProfileFragment extends BaseFragment { < nl > } < nl > } ) ; < nl > < nl > - / / < nl > - / / Phones < nl > - / / < nl > < nl > - for ( int i = 0 ; i < phones . size ( ) ; i + + ) { < nl > - final UserPhone userPhone = phones . get ( i ) ; < nl > - < nl > - / / Formatting Phone Number < nl > - String _ phoneNumber ; < nl > - try { < nl > - Phonenumber . PhoneNumber number = PhoneNumberUtil . getInstance ( ) . parse ( " + " + userPhone . getPhone ( ) , " us " ) ; < nl > - _ phoneNumber = PhoneNumberUtil . getInstance ( ) . format ( number , PhoneNumberUtil . PhoneNumberFormat . INTERNATIONAL ) ; < nl > - } catch ( NumberParseException e ) { < nl > - e . printStackTrace ( ) ; < nl > - _ phoneNumber = " + " + userPhone . getPhone ( ) ; < nl > - } < nl > - final String phoneNumber = _ phoneNumber ; < nl > + if ( ! ActorSDK . sharedActor ( ) . isOnClientPrivacyEnabled ( ) | | user . isInPhoneBook ( ) . get ( ) ) { < nl > < nl > + / / < nl > + / / Phones < nl > + / / < nl > < nl > - String phoneTitle = userPhone . getTitle ( ) ; < nl > + for ( int i = 0 ; i < phones . size ( ) ; i + + ) { < nl > + final UserPhone userPhone = phones . get ( i ) ; < nl > + < nl > + / / Formatting Phone Number < nl > + String _ phoneNumber ; < nl > + try { < nl > + Phonenumber . PhoneNumber number = PhoneNumberUtil . getInstance ( ) . parse ( " + " + userPhone . getPhone ( ) , " us " ) ; < nl > + _ phoneNumber = PhoneNumberUtil . getInstance ( ) . format ( number , PhoneNumberUtil . PhoneNumberFormat . INTERNATIONAL ) ; < nl > + } catch ( NumberParseException e ) { < nl > + e . printStackTrace ( ) ; < nl > + _ phoneNumber = " + " + userPhone . getPhone ( ) ; < nl > + } < nl > + final String phoneNumber = _ phoneNumber ; < nl > < nl > - / / " Mobile phone " is default value for non specified title < nl > - / / Trying to localize this < nl > - if ( phoneTitle . toLowerCase ( ) . equals ( " mobile phone " ) ) { < nl > - phoneTitle = getString ( R . string . settings _ mobile _ phone ) ; < nl > - } < nl > < nl > - View view = buildRecord ( phoneTitle , < nl > - phoneNumber , < nl > - R . drawable . ic _ import _ contacts _ black _ 24dp , < nl > - isFirstContact , < nl > - false , < nl > - inflater , contactsContainer ) ; < nl > - if ( isFirstContact ) { < nl > - recordFieldWithIcon = view ; < nl > - } < nl > + String phoneTitle = userPhone . getTitle ( ) ; < nl > < nl > - view . setOnClickListener ( v - > { < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setItems ( new CharSequence [ ] { < nl > - getString ( R . string . phone _ menu _ call ) . replace ( " { 0 } " , phoneNumber ) , < nl > - getString ( R . string . phone _ menu _ sms ) . replace ( " { 0 } " , phoneNumber ) , < nl > - getString ( R . string . phone _ menu _ share ) . replace ( " { 0 } " , phoneNumber ) , < nl > - getString ( R . string . phone _ menu _ copy ) < nl > - } , ( dialog , which ) - > { < nl > - if ( which = = 0 ) { < nl > - startActivity ( new Intent ( Intent . ACTION _ DIAL ) < nl > - . setData ( Uri . parse ( " tel : + " + userPhone . getPhone ( ) ) ) ) ; < nl > - } else if ( which = = 1 ) { < nl > - startActivity ( new Intent ( Intent . ACTION _ VIEW ) < nl > - . setData ( Uri . parse ( " sms : + " + userPhone . getPhone ( ) ) ) ) ; < nl > - } else if ( which = = 2 ) { < nl > - startActivity ( new Intent ( Intent . ACTION _ SEND ) < nl > - . setType ( " text / plain " ) < nl > - . putExtra ( Intent . EXTRA _ TEXT , getString ( R . string . settings _ share _ text ) < nl > - . replace ( " { 0 } " , phoneNumber ) < nl > - . replace ( " { 1 } " , user . getName ( ) . get ( ) ) ) ) ; < nl > - } else if ( which = = 3 ) { < nl > - ClipboardManager clipboard = < nl > - ( ClipboardManager ) getActivity ( ) < nl > - . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > - ClipData clip = ClipData . newPlainText ( " Phone number " , phoneNumber ) ; < nl > - clipboard . setPrimaryClip ( clip ) ; < nl > - Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) < nl > - . show ( ) ; < nl > - } < nl > - } ) < nl > - . show ( ) < nl > - . setCanceledOnTouchOutside ( true ) ; < nl > - } ) ; < nl > - < nl > - view . setOnLongClickListener ( v - > { < nl > - ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > - ClipData clip = ClipData . newPlainText ( " Phone number " , " + " + userPhone . getPhone ( ) ) ; < nl > - clipboard . setPrimaryClip ( clip ) ; < nl > - Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) < nl > - . show ( ) ; < nl > - return true ; < nl > - } ) ; < nl > + / / " Mobile phone " is default value for non specified title < nl > + / / Trying to localize this < nl > + if ( phoneTitle . toLowerCase ( ) . equals ( " mobile phone " ) ) { < nl > + phoneTitle = getString ( R . string . settings _ mobile _ phone ) ; < nl > + } < nl > < nl > - isFirstContact = false ; < nl > - } < nl > + View view = buildRecord ( phoneTitle , < nl > + phoneNumber , < nl > + R . drawable . ic _ import _ contacts _ black _ 24dp , < nl > + isFirstContact , < nl > + false , < nl > + inflater , contactsContainer ) ; < nl > + if ( isFirstContact ) { < nl > + recordFieldWithIcon = view ; < nl > + } < nl > < nl > - / / < nl > - / / Emails < nl > - / / < nl > + view . setOnClickListener ( v - > { < nl > + new AlertDialog . Builder ( getActivity ( ) ) < nl > + . setItems ( new CharSequence [ ] { < nl > + getString ( R . string . phone _ menu _ call ) . replace ( " { 0 } " , phoneNumber ) , < nl > + getString ( R . string . phone _ menu _ sms ) . replace ( " { 0 } " , phoneNumber ) , < nl > + getString ( R . string . phone _ menu _ share ) . replace ( " { 0 } " , phoneNumber ) , < nl > + getString ( R . string . phone _ menu _ copy ) < nl > + } , ( dialog , which ) - > { < nl > + if ( which = = 0 ) { < nl > + startActivity ( new Intent ( Intent . ACTION _ DIAL ) < nl > + . setData ( Uri . parse ( " tel : + " + userPhone . getPhone ( ) ) ) ) ; < nl > + } else if ( which = = 1 ) { < nl > + startActivity ( new Intent ( Intent . ACTION _ VIEW ) < nl > + . setData ( Uri . parse ( " sms : + " + userPhone . getPhone ( ) ) ) ) ; < nl > + } else if ( which = = 2 ) { < nl > + startActivity ( new Intent ( Intent . ACTION _ SEND ) < nl > + . setType ( " text / plain " ) < nl > + . putExtra ( Intent . EXTRA _ TEXT , getString ( R . string . settings _ share _ text ) < nl > + . replace ( " { 0 } " , phoneNumber ) < nl > + . replace ( " { 1 } " , user . getName ( ) . get ( ) ) ) ) ; < nl > + } else if ( which = = 3 ) { < nl > + ClipboardManager clipboard = < nl > + ( ClipboardManager ) getActivity ( ) < nl > + . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > + ClipData clip = ClipData . newPlainText ( " Phone number " , phoneNumber ) ; < nl > + clipboard . setPrimaryClip ( clip ) ; < nl > + Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) < nl > + . show ( ) ; < nl > + } < nl > + } ) < nl > + . show ( ) < nl > + . setCanceledOnTouchOutside ( true ) ; < nl > + } ) ; < nl > + < nl > + view . setOnLongClickListener ( v - > { < nl > + ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > + ClipData clip = ClipData . newPlainText ( " Phone number " , " + " + userPhone . getPhone ( ) ) ; < nl > + clipboard . setPrimaryClip ( clip ) ; < nl > + Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) < nl > + . show ( ) ; < nl > + return true ; < nl > + } ) ; < nl > < nl > - for ( int i = 0 ; i < emails . size ( ) ; i + + ) { < nl > - final UserEmail userEmail = emails . get ( i ) ; < nl > - View view = buildRecord ( userEmail . getTitle ( ) , < nl > - userEmail . getEmail ( ) , < nl > - R . drawable . ic _ import _ contacts _ black _ 24dp , < nl > - isFirstContact , < nl > - false , < nl > - inflater , contactsContainer ) ; < nl > - if ( isFirstContact ) { < nl > - recordFieldWithIcon = view ; < nl > + isFirstContact = false ; < nl > } < nl > < nl > - view . setOnClickListener ( v - > { < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setItems ( new CharSequence [ ] { < nl > - getString ( R . string . email _ menu _ email ) . replace ( " { 0 } " , userEmail . getEmail ( ) ) , < nl > - getString ( R . string . phone _ menu _ copy ) < nl > - } , ( dialog , which ) - > { < nl > - if ( which = = 0 ) { < nl > - startActivity ( new Intent ( Intent . ACTION _ SENDTO , Uri . fromParts ( " mailto " , userEmail . getEmail ( ) , null ) ) ) ; < nl > - } else if ( which = = 1 ) { < nl > - ClipboardManager clipboard = < nl > - ( ClipboardManager ) getActivity ( ) < nl > - . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > - ClipData clip = ClipData . newPlainText ( " Email " , userEmail . getEmail ( ) ) ; < nl > - clipboard . setPrimaryClip ( clip ) ; < nl > - Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) < nl > - . show ( ) ; < nl > - } < nl > - } ) < nl > - . show ( ) < nl > - . setCanceledOnTouchOutside ( true ) ; < nl > - } ) ; < nl > - view . setOnLongClickListener ( v - > { < nl > - ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > - ClipData clip = ClipData . newPlainText ( " Email " , " + " + userEmail . getEmail ( ) ) ; < nl > - clipboard . setPrimaryClip ( clip ) ; < nl > - Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) < nl > - . show ( ) ; < nl > - return true ; < nl > - } ) ; < nl > - isFirstContact = false ; < nl > + / / < nl > + / / Emails < nl > + / / < nl > + < nl > + for ( int i = 0 ; i < emails . size ( ) ; i + + ) { < nl > + final UserEmail userEmail = emails . get ( i ) ; < nl > + View view = buildRecord ( userEmail . getTitle ( ) , < nl > + userEmail . getEmail ( ) , < nl > + R . drawable . ic _ import _ contacts _ black _ 24dp , < nl > + isFirstContact , < nl > + false , < nl > + inflater , contactsContainer ) ; < nl > + if ( isFirstContact ) { < nl > + recordFieldWithIcon = view ; < nl > + } < nl > + < nl > + view . setOnClickListener ( v - > { < nl > + new AlertDialog . Builder ( getActivity ( ) ) < nl > + . setItems ( new CharSequence [ ] { < nl > + getString ( R . string . email _ menu _ email ) . replace ( " { 0 } " , userEmail . getEmail ( ) ) , < nl > + getString ( R . string . phone _ menu _ copy ) < nl > + } , ( dialog , which ) - > { < nl > + if ( which = = 0 ) { < nl > + startActivity ( new Intent ( Intent . ACTION _ SENDTO , Uri . fromParts ( " mailto " , userEmail . getEmail ( ) , null ) ) ) ; < nl > + } else if ( which = = 1 ) { < nl > + ClipboardManager clipboard = < nl > + ( ClipboardManager ) getActivity ( ) < nl > + . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > + ClipData clip = ClipData . newPlainText ( " Email " , userEmail . getEmail ( ) ) ; < nl > + clipboard . setPrimaryClip ( clip ) ; < nl > + Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) < nl > + . show ( ) ; < nl > + } < nl > + } ) < nl > + . show ( ) < nl > + . setCanceledOnTouchOutside ( true ) ; < nl > + } ) ; < nl > + view . setOnLongClickListener ( v - > { < nl > + ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; < nl > + ClipData clip = ClipData . newPlainText ( " Email " , " + " + userEmail . getEmail ( ) ) ; < nl > + clipboard . setPrimaryClip ( clip ) ; < nl > + Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) < nl > + . show ( ) ; < nl > + return true ; < nl > + } ) ; < nl > + isFirstContact = false ; < nl > + } < nl > } < nl > < nl > + < nl > / / < nl > / / Username < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > index f7c17c7 . . 7ff38a5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml < nl > @ @ - 480 , 6 + 480 , 9 @ @ < nl > < string name = " invite _ link _ error _ revoke _ link " > Unable to revoke invite link < / string > < nl > < string name = " invite _ link _ empty _ view " > Loading invite link < / string > < nl > < nl > + < string name = " join " > JOIN < / string > < nl > + < string name = " open " > OPEN < / string > < nl > + < nl > < string name = " invite _ link _ join _ confirm " > Join " % 1 $ s " ? < / string > < nl > < nl > < ! - - Documents - - > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > index 665496f . . ddd67f9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > @ @ - 56 , 6 + 56 , 8 @ @ public class Configuration { < nl > @ Property ( " readonly , nonatomic " ) < nl > private final boolean enablePhoneBookImport ; < nl > @ Property ( " readonly , nonatomic " ) < nl > + private final boolean enableOnClientPrivacy ; < nl > + @ Property ( " readonly , nonatomic " ) < nl > private final CallsProvider callsProvider ; < nl > @ Property ( " readonly , nonatomic " ) < nl > private final RawUpdatesHandler rawUpdatesHandler ; < nl > @ @ - 83 , 6 + 85 , 7 @ @ public class Configuration { < nl > String customAppName , < nl > TrustedKey [ ] trustedKeys , < nl > boolean enablePhoneBookImport , < nl > + boolean enableOnClientPrivcy , < nl > CallsProvider callsProvider , < nl > RawUpdatesHandler rawUpdatesHandler , < nl > boolean voiceCallsEnabled , < nl > @ @ - 107 , 6 + 110 , 7 @ @ public class Configuration { < nl > this . customAppName = customAppName ; < nl > this . trustedKeys = trustedKeys ; < nl > this . enablePhoneBookImport = enablePhoneBookImport ; < nl > + this . enableOnClientPrivacy = enableOnClientPrivcy ; < nl > this . callsProvider = callsProvider ; < nl > this . rawUpdatesHandler = rawUpdatesHandler ; < nl > this . voiceCallsEnabled = voiceCallsEnabled ; < nl > @ @ - 162 , 6 + 166 , 15 @ @ public class Configuration { < nl > } < nl > < nl > / * * < nl > + * Getting if app check if contact not in phone book and hides phone / email in that case < nl > + * < nl > + * @ return if on client privacy enabled < nl > + * / < nl > + public boolean isEnableOnClientPrivacy ( ) { < nl > + return enableOnClientPrivacy ; < nl > + } < nl > + < nl > + / * * < nl > * Getting Trusted keys < nl > * < nl > * @ return trusted keys if set < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > index 3942b86 . . 0f82c00 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > @ @ - 58 , 6 + 58 , 7 @ @ public class ConfigurationBuilder { < nl > private String customAppName ; < nl > < nl > private boolean isPhoneBookImportEnabled = true ; < nl > + private boolean isOnClientPrivacyEnabled = false ; < nl > < nl > private CallsProvider callsProvider ; < nl > private RawUpdatesHandler rawUpdatesHandler ; < nl > @ @ - 130 , 6 + 131 , 19 @ @ public class ConfigurationBuilder { < nl > } < nl > < nl > / * * < nl > + * Setting if application uses on client contacts privacy < nl > + * < nl > + * @ param isOnClientPrivacyEnabled enabled flag < nl > + * @ return this < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " setOnClientPrivacyEnabled : " ) < nl > + public ConfigurationBuilder setOnClientPrivacyEnabled ( boolean isOnClientPrivacyEnabled ) { < nl > + this . isOnClientPrivacyEnabled = isOnClientPrivacyEnabled ; < nl > + return this ; < nl > + } < nl > + < nl > + / * * < nl > * Setting Web RTC support provider < nl > * < nl > * @ param callsProvider WebRTC provider < nl > @ @ - 419 , 6 + 433 , 7 @ @ public class ConfigurationBuilder { < nl > customAppName , < nl > trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) , < nl > isPhoneBookImportEnabled , < nl > + isOnClientPrivacyEnabled , < nl > callsProvider , < nl > rawUpdatesHandler , < nl > voiceCallsEnabled , < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java < nl > index 723f519 . . 4a7af1c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java < nl > @ @ - 86 , 6 + 86 , 18 @ @ public class ContactsModule extends AbsModule { < nl > return preferences ( ) . getBool ( " contact _ " + uid , false ) ; < nl > } < nl > < nl > + public void markInPhoneBook ( int uid ) { < nl > + preferences ( ) . putBool ( " contact _ in _ pb _ " + uid , true ) ; < nl > + } < nl > + < nl > + public void markNotInPhoneBook ( int uid ) { < nl > + preferences ( ) . putBool ( " contact _ in _ pb _ " + uid , false ) ; < nl > + } < nl > + < nl > + public boolean isUserInPhoneBook ( int uid ) { < nl > + return preferences ( ) . getBool ( " contact _ in _ pb _ " + uid , false ) ; < nl > + } < nl > + < nl > public Promise < UserVM [ ] > findUsers ( final String query ) { < nl > return api ( new RequestSearchContacts ( query , ApiSupportConfiguration . OPTIMIZATIONS ) ) < nl > . chain ( responseSearchContacts - > updates ( ) . loadRequiredPeers ( responseSearchContacts . getUserPeers ( ) , new ArrayList < > ( ) ) ) < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java < nl > index fb25bd0 . . 7615243 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java < nl > @ @ - 34 , 11 + 34 , 17 @ @ import im . actor . core . entity . content . ServiceUserRegistered ; < nl > import im . actor . core . modules . ModuleActor ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . contacts . ContactsSyncActor ; < nl > + import im . actor . core . modules . contacts . entity . BookImportStorage ; < nl > import im . actor . core . modules . users . router . entity . RouterApplyUsers ; < nl > import im . actor . core . modules . users . router . entity . RouterFetchMissingUsers ; < nl > import im . actor . core . modules . users . router . entity . RouterLoadFullUser ; < nl > import im . actor . core . modules . users . router . entity . RouterUserUpdate ; < nl > import im . actor . core . network . parser . Update ; < nl > + import im . actor . core . viewmodel . UserEmail ; < nl > + import im . actor . core . viewmodel . UserPhone ; < nl > + import im . actor . core . viewmodel . UserVM ; < nl > + import im . actor . core . viewmodel . generics . ArrayListUserEmail ; < nl > + import im . actor . core . viewmodel . generics . ArrayListUserPhone ; < nl > import im . actor . runtime . actors . messages . Void ; < nl > import im . actor . runtime . annotations . Verified ; < nl > import im . actor . runtime . function . Function ; < nl > @ @ - 60 , 7 + 66 , 6 @ @ public class UserRouter extends ModuleActor { < nl > super ( context ) ; < nl > } < nl > < nl > - < nl > / / < nl > / / Small User < nl > / / < nl > @ @ - 380 , 7 + 385 , 11 @ @ public class UserRouter extends ModuleActor { < nl > / / Updating user in collection < nl > users ( ) . addOrUpdateItem ( upd ) ; < nl > } ) < nl > - . after ( ( r , e ) - > unfreeze ( ) ) ; < nl > + . after ( ( r , e ) - > unfreeze ( ) ) < nl > + . chain ( r - > { < nl > + checkIsInPhoneBook ( getUserVM ( uid ) ) ; < nl > + return Promise . success ( null ) ; < nl > + } ) ; < nl > } < nl > < nl > @ Verified < nl > @ @ - 426 , 6 + 435 , 53 @ @ public class UserRouter extends ModuleActor { < nl > . after ( ( r , e ) - > unfreeze ( ) ) ; < nl > } < nl > < nl > + private BookImportStorage getBookImportStorage ( ) { < nl > + BookImportStorage storage = null ; < nl > + byte [ ] data = context ( ) . getContactsModule ( ) . getBookImportState ( ) . get ( 0 ) ; < nl > + if ( data ! = null ) { < nl > + try { < nl > + storage = new BookImportStorage ( data ) ; < nl > + } catch ( Exception e ) { < nl > + e . getLocalizedMessage ( ) ; < nl > + } < nl > + } < nl > + return storage ; < nl > + } < nl > + < nl > + protected void checkIsInPhoneBook ( UserVM userVM ) { < nl > + if ( ! config ( ) . isEnableOnClientPrivacy ( ) ) { < nl > + return ; < nl > + } < nl > + < nl > + BookImportStorage storage = getBookImportStorage ( ) ; < nl > + if ( storage = = null ) { < nl > + return ; < nl > + } < nl > + < nl > + ArrayListUserPhone userPhones = userVM . getPhones ( ) . get ( ) ; < nl > + ArrayListUserEmail userEmails = userVM . getEmails ( ) . get ( ) ; < nl > + < nl > + if ( ! userVM . isInPhoneBook ( ) . get ( ) ) { < nl > + for ( UserPhone phone : userPhones ) { < nl > + if ( storage . isImported ( phone . getPhone ( ) ) ) { < nl > + userVM . isInPhoneBook ( ) . change ( true ) ; < nl > + context ( ) . getContactsModule ( ) . markInPhoneBook ( userVM . getId ( ) ) ; < nl > + break ; < nl > + } < nl > + } < nl > + } < nl > + < nl > + if ( ! userVM . isInPhoneBook ( ) . get ( ) ) { < nl > + for ( UserEmail email : userEmails ) { < nl > + if ( storage . isImported ( email . getEmail ( ) ) ) { < nl > + userVM . isInPhoneBook ( ) . change ( true ) ; < nl > + context ( ) . getContactsModule ( ) . markInPhoneBook ( userVM . getId ( ) ) ; < nl > + break ; < nl > + } < nl > + } < nl > + } < nl > + } < nl > + < nl > < nl > / / < nl > / / Tools < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java < nl > index bd7b823 . . 8752651 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java < nl > @ @ - 69 , 6 + 69 , 8 @ @ public class UserVM extends BaseValueModel < User > { < nl > @ NotNull < nl > private BooleanValueModel isContact ; < nl > @ NotNull < nl > + private BooleanValueModel isInPhoneBook ; < nl > + @ NotNull < nl > private BooleanValueModel isBlocked ; < nl > @ NotNull < nl > private BooleanValueModel isVerified ; < nl > @ @ - 112 , 6 + 114 , 7 @ @ public class UserVM extends BaseValueModel < User > { < nl > about = new StringValueModel ( " user . " + id + " . about " , user . getAbout ( ) ) ; < nl > avatar = new AvatarValueModel ( " user . " + id + " . avatar " , user . getAvatar ( ) ) ; < nl > isContact = new BooleanValueModel ( " user . " + id + " . contact " , modules . getContactsModule ( ) . isUserContact ( id ) ) ; < nl > + isInPhoneBook = new BooleanValueModel ( " user . " + id + " . in _ pb " , modules . getContactsModule ( ) . isUserInPhoneBook ( id ) ) ; < nl > isBlocked = new BooleanValueModel ( " user . " + id + " . blocked " , user . isBlocked ( ) ) ; < nl > isVerified = new BooleanValueModel ( " user . " + id + " . is _ verified " , user . isVerified ( ) ) ; < nl > timeZone = new StringValueModel ( " user . " + id + " . time _ zone " , user . getTimeZone ( ) ) ; < nl > @ @ - 265 , 6 + 268 , 17 @ @ public class UserVM extends BaseValueModel < User > { < nl > } < nl > < nl > / * * < nl > + * Get ValueModel of flag if user is in phone book < nl > + * < nl > + * @ return ValueModel of Boolean < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " isInPhoneBookModel " ) < nl > + public BooleanValueModel isInPhoneBook ( ) { < nl > + return isInPhoneBook ; < nl > + } < nl > + < nl > + / * * < nl > * Get ValueModel of flag if user is blocked < nl > * < nl > * @ return ValueModel of Boolean
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > index 9a0a041 . . 19def96 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml < nl > @ @ - 297 , 6 + 297 , 8 @ @ < nl > android : showOnLockScreen = " true " < nl > android : theme = " @ style / CallTheme " / > < nl > < nl > + < activity android : name = " . discover . DiscoverActivity " / > < nl > + < nl > < service < nl > android : name = " im . actor . sdk . services . KeepAliveService " < nl > android : enabled = " true " < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java < nl > index 1687a09 . . edba108 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java < nl > @ @ - 46 , 6 + 46 , 7 @ @ import im . actor . sdk . controllers . contacts . ContactsFragment ; < nl > import im . actor . sdk . controllers . dialogs . DialogsFragment ; < nl > import im . actor . sdk . controllers . fragment . help . HelpActivity ; < nl > import im . actor . sdk . controllers . fragment . main . SearchAdapter ; < nl > + import im . actor . sdk . discover . DiscoverActivity ; < nl > import im . actor . sdk . util . Screen ; < nl > import im . actor . sdk . util . Fonts ; < nl > import im . actor . sdk . view . adapters . FragmentNoMenuStatePagerAdapter ; < nl > @ @ - 545 , 6 + 546 , 9 @ @ public class MainPhoneController extends MainBaseController { < nl > } else if ( i = = R . id . contacts ) { < nl > startActivity ( new Intent ( getActivity ( ) , ContactsActivity . class ) ) ; < nl > return true ; < nl > + } else if ( i = = R . id . discover ) { < nl > + startActivity ( new Intent ( getActivity ( ) , DiscoverActivity . class ) ) ; < nl > + return true ; < nl > } < nl > < nl > return false ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / DiscoverActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / DiscoverActivity . java < nl > new file mode 100644 < nl > index 0000000 . . 951d794 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / DiscoverActivity . java < nl > @ @ - 0 , 0 + 1 , 21 @ @ < nl > + package im . actor . sdk . discover ; < nl > + < nl > + import android . os . Bundle ; < nl > + < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . activity . BaseFragmentActivity ; < nl > + import im . actor . sdk . controllers . group . AddMemberFragment ; < nl > + < nl > + public class DiscoverActivity extends BaseFragmentActivity { < nl > + @ Override < nl > + protected void onCreate ( Bundle savedInstanceState ) { < nl > + super . onCreate ( savedInstanceState ) ; < nl > + < nl > + getSupportActionBar ( ) . setTitle ( " Discover " ) ; < nl > + < nl > + < nl > + if ( savedInstanceState = = null ) { < nl > + showFragment ( new StoreFragment ( ) , false , false ) ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / StoreFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / StoreFragment . java < nl > new file mode 100644 < nl > index 0000000 . . feb6d46 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / StoreFragment . java < nl > @ @ - 0 , 0 + 1 , 158 @ @ < nl > + package im . actor . sdk . discover ; < nl > + < nl > + import android . content . DialogInterface ; < nl > + import android . graphics . drawable . StateListDrawable ; < nl > + import android . net . Uri ; < nl > + import android . os . Bundle ; < nl > + import android . support . v7 . app . AlertDialog ; < nl > + import android . support . v7 . widget . RecyclerView ; < nl > + import android . view . Gravity ; < nl > + import android . view . LayoutInflater ; < nl > + import android . view . View ; < nl > + import android . view . ViewGroup ; < nl > + import android . webkit . WebView ; < nl > + import android . webkit . WebViewClient ; < nl > + import android . widget . FrameLayout ; < nl > + import android . widget . LinearLayout ; < nl > + import android . widget . TextView ; < nl > + < nl > + import im . actor . core . viewmodel . Command ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . fragment . BaseFragment ; < nl > + import im . actor . sdk . util . Fonts ; < nl > + import im . actor . sdk . util . Screen ; < nl > + import im . actor . sdk . view . SelectorFactory ; < nl > + import im . actor . sdk . view . markdown . AndroidMarkdown ; < nl > + < nl > + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > + < nl > + public class StoreFragment extends BaseFragment { < nl > + < nl > + private RecyclerView . OnScrollListener onScrollListener ; < nl > + < nl > + @ Override < nl > + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > + FrameLayout fl = new FrameLayout ( getActivity ( ) ) ; < nl > + fl . setPadding ( 0 , Screen . dp ( 56 ) , 0 , 0 ) ; < nl > + fl . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + final TextView placeHolder = new TextView ( getActivity ( ) ) ; < nl > + placeHolder . setGravity ( Gravity . CENTER ) ; < nl > + placeHolder . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + placeHolder . setText ( R . string . progress _ common ) ; < nl > + placeHolder . setTextSize ( 18 ) ; < nl > + placeHolder . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > + < nl > + final WebView wv = new WebView ( getActivity ( ) ) ; < nl > + wv . setVisibility ( View . INVISIBLE ) ; < nl > + < nl > + final FrameLayout buttonRetry = new FrameLayout ( getActivity ( ) ) ; < nl > + buttonRetry . setBackgroundResource ( R . drawable . shadow _ square _ 3 ) ; < nl > + final TextView retryBtnText = new TextView ( getActivity ( ) ) ; < nl > + buttonRetry . addView ( retryBtnText , FrameLayout . LayoutParams . WRAP _ CONTENT , Screen . dp ( 48 ) ) ; < nl > + StateListDrawable states = SelectorFactory . get ( ActorSDK . sharedActor ( ) . style . getMainColor ( ) , getActivity ( ) ) ; < nl > + retryBtnText . setBackgroundDrawable ( states ) ; < nl > + retryBtnText . setText ( R . string . dialog _ try _ again ) ; < nl > + retryBtnText . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryInvColor ( ) ) ; < nl > + retryBtnText . setTypeface ( Fonts . medium ( ) ) ; < nl > + retryBtnText . setTextSize ( 17 ) ; < nl > + retryBtnText . setGravity ( Gravity . CENTER ) ; < nl > + retryBtnText . setAllCaps ( true ) ; < nl > + retryBtnText . setPadding ( Screen . dp ( 24 ) , 0 , Screen . dp ( 24 ) , 0 ) ; < nl > + buttonRetry . setVisibility ( View . INVISIBLE ) ; < nl > + buttonRetry . setOnClickListener ( new View . OnClickListener ( ) { < nl > + @ Override < nl > + public void onClick ( View v ) { < nl > + showView ( placeHolder ) ; < nl > + hideView ( buttonRetry ) ; < nl > + hideView ( wv ) ; < nl > + wv . loadUrl ( wv . getUrl ( ) ) ; < nl > + } < nl > + } ) ; < nl > + < nl > + fl . addView ( placeHolder , new FrameLayout . LayoutParams ( FrameLayout . LayoutParams . WRAP _ CONTENT , LinearLayout . LayoutParams . WRAP _ CONTENT , Gravity . CENTER ) ) ; < nl > + fl . addView ( wv , FrameLayout . LayoutParams . MATCH _ PARENT , FrameLayout . LayoutParams . MATCH _ PARENT ) ; < nl > + fl . addView ( buttonRetry , new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , ViewGroup . LayoutParams . WRAP _ CONTENT , Gravity . CENTER ) ) ; < nl > + < nl > + wv . getSettings ( ) . setJavaScriptEnabled ( true ) ; < nl > + wv . setWebViewClient ( new WebViewClient ( ) { < nl > + < nl > + boolean errorHandled = false ; < nl > + < nl > + @ Override < nl > + public void onPageFinished ( WebView view , String url ) { < nl > + if ( wv . getVisibility ( ) ! = View . VISIBLE & & ! errorHandled ) { < nl > + showView ( wv ) ; < nl > + hideView ( placeHolder ) ; < nl > + hideView ( buttonRetry ) ; < nl > + } < nl > + errorHandled = false ; < nl > + super . onPageFinished ( view , url ) ; < nl > + } < nl > + < nl > + < nl > + @ Override < nl > + public void onReceivedError ( WebView view , int errorCode , String description , String failingUrl ) { < nl > + errorHandled = true ; < nl > + hideView ( wv ) ; < nl > + showView ( buttonRetry ) ; < nl > + hideView ( placeHolder ) ; < nl > + super . onReceivedError ( view , errorCode , description , failingUrl ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public boolean shouldOverrideUrlLoading ( WebView view , String url ) { < nl > + if ( url . startsWith ( " group : / / " ) ) { < nl > + final String token = url . substring ( 8 ) ; < nl > + AlertDialog . Builder builder = new AlertDialog . Builder ( getActivity ( ) ) ; < nl > + builder . setMessage ( " Join " ) < nl > + . setPositiveButton ( R . string . dialog _ ok , new DialogInterface . OnClickListener ( ) { < nl > + @ Override < nl > + public void onClick ( DialogInterface dialog , int which ) { < nl > + joinGroup ( token ) ; < nl > + dialog . dismiss ( ) ; < nl > + } < nl > + } ) < nl > + . setNegativeButton ( R . string . dialog _ cancel , new DialogInterface . OnClickListener ( ) { < nl > + @ Override < nl > + public void onClick ( DialogInterface dialog , int which ) { < nl > + dialog . cancel ( ) ; < nl > + } < nl > + } ) < nl > + . show ( ) ; < nl > + return true ; < nl > + } else if ( url . startsWith ( " user : / / " ) ) { < nl > + String id = url . substring ( 7 ) ; < nl > + execute ( messenger ( ) . findUsers ( id ) ) ; < nl > + return true ; < nl > + } < nl > + < nl > + AndroidMarkdown . buildChromeIntent ( ) . launchUrl ( getActivity ( ) , Uri . parse ( url ) ) ; < nl > + return true ; < nl > + } < nl > + } ) ; < nl > + wv . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > + < nl > + wv . loadUrl ( " http : / / actorapp . github . io / store / " ) ; < nl > + return fl ; < nl > + } < nl > + < nl > + private void joinGroup ( String token ) { < nl > + Command < Integer > cmd = messenger ( ) . joinGroupViaToken ( token ) ; < nl > + if ( cmd ! = null ) { < nl > + execute ( cmd , im . actor . sdk . R . string . invite _ link _ title , new CommandCallback < Integer > ( ) { < nl > + @ Override < nl > + public void onResult ( Integer res ) { < nl > + getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml < nl > index fa4bd7b . . f894153 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml < nl > @ @ - 23 , 4 + 23 , 9 @ @ < nl > android : id = " @ + id / profile " < nl > android : title = " Profile " < nl > app : showAsAction = " never " / > < nl > + < nl > + < item < nl > + android : id = " @ + id / discover " < nl > + android : title = " Discover " < nl > + app : showAsAction = " never " / > < nl > < / menu > < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > index e3570c2 . . 7bf870f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java < nl > @ @ - 289 , 12 + 289 , 24 @ @ public class RouterActor extends ModuleActor { < nl > hasCurrentMention = true ; < nl > } < nl > } < nl > + int messagesCount = 0 ; < nl > + int dialogsCount = 0 ; < nl > + for ( Peer activePeer : activeDialogStorage . getAllPeers ( ) ) { < nl > + int activeDialogueUnreadCount = conversationStates . getValue ( activePeer . getUnuqueId ( ) ) . getUnreadCount ( ) ; < nl > + if ( activeDialogueUnreadCount > 0 ) { < nl > + dialogsCount + + ; < nl > + messagesCount + = activeDialogueUnreadCount ; < nl > + } < nl > + } < nl > + < nl > context ( ) . getNotificationsModule ( ) . onInMessage ( < nl > peer , < nl > m . getSenderId ( ) , < nl > m . getSortDate ( ) , < nl > ContentDescription . fromContent ( m . getContent ( ) ) , < nl > - hasCurrentMention ) ; < nl > + hasCurrentMention , < nl > + messagesCount , < nl > + dialogsCount ) ; < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java < nl > index 51d120a . . f509bf0 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java < nl > @ @ - 3 , 6 + 3 , 7 @ @ package im . actor . core . modules . messaging . router . entity ; < nl > import java . io . IOException ; < nl > import java . util . ArrayList ; < nl > < nl > + import im . actor . core . entity . Peer ; < nl > import im . actor . runtime . bser . BserObject ; < nl > import im . actor . runtime . bser . BserValues ; < nl > import im . actor . runtime . bser . BserWriter ; < nl > @ @ - 50 , 6 + 51 , 14 @ @ public class ActiveDialogStorage extends BserObject { < nl > return groups ; < nl > } < nl > < nl > + public ArrayList < Peer > getAllPeers ( ) { < nl > + ArrayList < Peer > peers = new ArrayList < > ( ) ; < nl > + for ( ActiveDialogGroup group : groups ) { < nl > + peers . addAll ( group . getPeers ( ) ) ; < nl > + } < nl > + return peers ; < nl > + } < nl > + < nl > @ Override < nl > public void parse ( BserValues values ) throws IOException { < nl > isLoaded = values . getBool ( 1 ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java < nl > index 5eb012f . . 20add75 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java < nl > @ @ - 45 , 7 + 45 , 8 @ @ public class NotificationsActor extends ModuleActor { < nl > / * * < nl > * KeyValue storage name for actor state < nl > * / < nl > - private static final String STORAGE _ NOTIFICATIONS = " notifications " ; < nl > + private static final String STORAGE _ NOTIFICATIONS _ DEPRECATED = " notifications " ; < nl > + private static final String STORAGE _ NOTIFICATIONS = " limited _ notifications " ; < nl > < nl > < nl > / * * < nl > @ @ - 57 , 6 + 58 , 10 @ @ public class NotificationsActor extends ModuleActor { < nl > * / < nl > private PendingStorage pendingStorage ; < nl > / * * < nl > + * in memory not limited pending storage < nl > + * / < nl > + private ArrayList < PendingNotification > allPendingNotifications = new ArrayList < PendingNotification > ( ) ; < nl > + / * * < nl > * Cached read states < nl > * / < nl > private HashMap < Peer , Long > readStates = new HashMap < > ( ) ; < nl > @ @ - 106 , 11 + 111 , 11 @ @ public class NotificationsActor extends ModuleActor { < nl > storage = new SyncKeyValue ( Storage . createKeyValue ( STORAGE _ NOTIFICATIONS ) ) ; < nl > < nl > / / Loading pending messages < nl > - pendingStorage = new PendingStorage ( ) ; < nl > + pendingStorage = new PendingStorage ( MAX _ NOTIFICATION _ COUNT ) ; < nl > byte [ ] storage = this . storage . get ( 0 ) ; < nl > if ( storage ! = null ) { < nl > try { < nl > - pendingStorage = PendingStorage . fromBytes ( storage ) ; < nl > + pendingStorage = PendingStorage . fromBytes ( storage , MAX _ NOTIFICATION _ COUNT ) ; < nl > } catch ( IOException e ) { < nl > e . printStackTrace ( ) ; < nl > } < nl > @ @ - 131 , 7 + 136 , 7 @ @ public class NotificationsActor extends ModuleActor { < nl > * @ param hasCurrentUserMention does message have user mention < nl > * / < nl > public void onNewMessage ( Peer peer , int sender , long date , ContentDescription description , < nl > - boolean hasCurrentUserMention ) { < nl > + boolean hasCurrentUserMention , int messagesCount , int dialogsCount ) { < nl > < nl > / / Check if message already read to avoid incorrect notifications < nl > / / for already read messages < nl > @ @ - 144 , 8 + 149 , 12 @ @ public class NotificationsActor extends ModuleActor { < nl > < nl > / / Save to pending storage < nl > if ( isEnabled ) { < nl > - List < PendingNotification > allPending = getNotifications ( ) ; < nl > - allPending . add ( new PendingNotification ( peer , sender , date , description ) ) ; < nl > + List < PendingNotification > pendingNotifications = getNotifications ( ) ; < nl > + PendingNotification pendingNotification = new PendingNotification ( peer , sender , date , description ) ; < nl > + pendingNotifications . add ( pendingNotification ) ; < nl > + pendingStorage . setMessagesCount ( messagesCount ) ; < nl > + pendingStorage . setDialogsCount ( dialogsCount ) ; < nl > + allPendingNotifications . add ( pendingNotification ) ; < nl > saveStorage ( ) ; < nl > } < nl > < nl > @ @ - 235 , 21 + 244 , 12 @ @ public class NotificationsActor extends ModuleActor { < nl > } < nl > < nl > / / Removing read messages from pending storage < nl > - boolean isChanged = false ; < nl > - List < PendingNotification > notifications = pendingStorage . getNotifications ( ) ; < nl > - for ( PendingNotification p : notifications . toArray ( new PendingNotification [ notifications . size ( ) ] ) ) { < nl > - if ( p . getPeer ( ) . equals ( peer ) & & p . getDate ( ) < = fromDate ) { < nl > - pendingStorage . getNotifications ( ) . remove ( p ) ; < nl > - isChanged = true ; < nl > - } < nl > - } < nl > - < nl > - / / If there are some messages < nl > - / / Save pending and update notification < nl > - if ( isChanged ) { < nl > - saveStorage ( ) ; < nl > - updateNotification ( ) ; < nl > - } < nl > + getNotifications ( ) . clear ( ) ; < nl > + pendingStorage . setMessagesCount ( 0 ) ; < nl > + pendingStorage . setDialogsCount ( 0 ) ; < nl > + allPendingNotifications . clear ( ) ; < nl > + saveStorage ( ) ; < nl > + updateNotification ( ) ; < nl > < nl > / / Setting last read date < nl > setLastReadDate ( peer , fromDate ) ; < nl > @ @ - 398 , 36 + 398 , 25 @ @ public class NotificationsActor extends ModuleActor { < nl > * / < nl > private void performNotificationImp ( boolean performUpdate ) { < nl > / / Getting pending notifications list < nl > - List < PendingNotification > allPending = getNotifications ( ) ; < nl > - int messagesCount = allPending . size ( ) ; < nl > - if ( messagesCount = = 0 ) { < nl > + List < PendingNotification > destNotifications = getNotifications ( ) ; < nl > + if ( destNotifications . size ( ) = = 0 ) { < nl > hideNotification ( ) ; < nl > return ; < nl > } < nl > < nl > - / / Destination notifications list < nl > - List < PendingNotification > destNotifications = last ( allPending , MAX _ NOTIFICATION _ COUNT ) ; < nl > - < nl > / / Converting to PendingNotifications < nl > List < Notification > res = new ArrayList < > ( ) ; < nl > for ( PendingNotification p : destNotifications ) { < nl > res . add ( new Notification ( p . getPeer ( ) , p . getSender ( ) , p . getContent ( ) ) ) ; < nl > } < nl > < nl > - / / Getting count of unique peers < nl > - HashSet < Peer > peers = new HashSet < > ( ) ; < nl > - for ( PendingNotification p : allPending ) { < nl > - peers . add ( p . getPeer ( ) ) ; < nl > - } < nl > - int chatsCount = peers . size ( ) ; < nl > - < nl > / / Performing notifications < nl > if ( performUpdate ) { < nl > config ( ) . getNotificationProvider ( ) . onUpdateNotification ( context ( ) . getMessenger ( ) , res , < nl > - messagesCount , chatsCount ) ; < nl > + pendingStorage . getMessagesCount ( ) , pendingStorage . getDialogsCount ( ) ) ; < nl > } else { < nl > config ( ) . getNotificationProvider ( ) . onNotification ( context ( ) . getMessenger ( ) , res , < nl > - messagesCount , chatsCount ) ; < nl > + pendingStorage . getMessagesCount ( ) , pendingStorage . getDialogsCount ( ) ) ; < nl > } < nl > } < nl > < nl > @ @ - 565 , 7 + 554 , 8 @ @ public class NotificationsActor extends ModuleActor { < nl > if ( message instanceof NewMessage ) { < nl > NewMessage newMessage = ( NewMessage ) message ; < nl > onNewMessage ( newMessage . getPeer ( ) , newMessage . getSender ( ) , newMessage . getSortDate ( ) , < nl > - newMessage . getContentDescription ( ) , newMessage . getHasCurrentUserMention ( ) ) ; < nl > + newMessage . getContentDescription ( ) , newMessage . getHasCurrentUserMention ( ) , < nl > + newMessage . getUnreadMessagesCount ( ) , newMessage . getUnreadDialogsCount ( ) ) ; < nl > } else if ( message instanceof MessagesRead ) { < nl > MessagesRead read = ( MessagesRead ) message ; < nl > onMessagesRead ( read . getPeer ( ) , read . getFromDate ( ) ) ; < nl > @ @ - 605 , 14 + 595 , 18 @ @ public class NotificationsActor extends ModuleActor { < nl > private long sortDate ; < nl > private ContentDescription contentDescription ; < nl > private boolean hasCurrentUserMention ; < nl > + private int unreadMessagesCount ; < nl > + private int unreadDialogsCount ; < nl > < nl > public NewMessage ( Peer peer , int sender , long sortDate , ContentDescription contentDescription , < nl > - boolean hasCurrentUserMention ) { < nl > + boolean hasCurrentUserMention , int unreadMessagesCount , int unreadDialogsCount ) { < nl > this . peer = peer ; < nl > this . sender = sender ; < nl > this . sortDate = sortDate ; < nl > this . contentDescription = contentDescription ; < nl > this . hasCurrentUserMention = hasCurrentUserMention ; < nl > + this . unreadMessagesCount = unreadMessagesCount ; < nl > + this . unreadDialogsCount = unreadDialogsCount ; < nl > } < nl > < nl > public Peer getPeer ( ) { < nl > @ @ - 634 , 6 + 628 , 14 @ @ public class NotificationsActor extends ModuleActor { < nl > public boolean getHasCurrentUserMention ( ) { < nl > return hasCurrentUserMention ; < nl > } < nl > + < nl > + public int getUnreadMessagesCount ( ) { < nl > + return unreadMessagesCount ; < nl > + } < nl > + < nl > + public int getUnreadDialogsCount ( ) { < nl > + return unreadDialogsCount ; < nl > + } < nl > } < nl > < nl > public static class MessagesRead { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java < nl > index afeda43 . . 0bc7b5e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java < nl > @ @ - 35 , 8 + 35 , 8 @ @ public class NotificationsModule extends AbsModule { < nl > notificationsActor . send ( new NotificationsActor . MessagesRead ( peer , fromDate ) ) ; < nl > } < nl > < nl > - public void onInMessage ( Peer peer , int sender , long sortDate , ContentDescription contentDescription , boolean hasCurrentUserMention ) { < nl > - notificationsActor . send ( new NotificationsActor . NewMessage ( peer , sender , sortDate , contentDescription , hasCurrentUserMention ) ) ; < nl > + public void onInMessage ( Peer peer , int sender , long sortDate , ContentDescription contentDescription , boolean hasCurrentUserMention , int unreadMessagesCount , int unreadDialogsCount ) { < nl > + notificationsActor . send ( new NotificationsActor . NewMessage ( peer , sender , sortDate , contentDescription , hasCurrentUserMention , unreadMessagesCount , unreadDialogsCount ) ) ; < nl > } < nl > < nl > public void pauseNotifications ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsQueue . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsQueue . java < nl > new file mode 100644 < nl > index 0000000 . . 5ad7acf < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsQueue . java < nl > @ @ - 0 , 0 + 1 , 26 @ @ < nl > + package im . actor . core . modules . notifications ; < nl > + < nl > + import java . util . Collection ; < nl > + import java . util . LinkedList ; < nl > + < nl > + public class NotificationsQueue < E > extends LinkedList < E > { < nl > + private int limit ; < nl > + < nl > + public NotificationsQueue ( int limit ) { < nl > + this . limit = limit ; < nl > + } < nl > + < nl > + @ Override < nl > + public boolean add ( E o ) { < nl > + super . add ( o ) ; < nl > + while ( size ( ) > limit ) { < nl > + super . remove ( ) ; < nl > + } < nl > + return true ; < nl > + } < nl > + < nl > + public NotificationsQueue addAllChain ( Collection c ) { < nl > + super . addAll ( c ) ; < nl > + return this ; < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java < nl > index 089c4a9 . . b3fede8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java < nl > @ @ - 8 , 6 + 8 , 7 @ @ import java . io . IOException ; < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > < nl > + import im . actor . core . modules . notifications . NotificationsQueue ; < nl > import im . actor . runtime . bser . Bser ; < nl > import im . actor . runtime . bser . BserObject ; < nl > import im . actor . runtime . bser . BserValues ; < nl > @ @ - 15 , 20 + 16 , 41 @ @ import im . actor . runtime . bser . BserWriter ; < nl > < nl > public class PendingStorage extends BserObject { < nl > < nl > - public static PendingStorage fromBytes ( byte [ ] data ) throws IOException { < nl > - return Bser . parse ( new PendingStorage ( ) , data ) ; < nl > + private int limit ; < nl > + private int messagesCount = 0 ; < nl > + private int dialogsCount = 0 ; < nl > + < nl > + public static PendingStorage fromBytes ( byte [ ] data , int maxMessagesLimit ) throws IOException { < nl > + return Bser . parse ( new PendingStorage ( maxMessagesLimit ) , data ) ; < nl > } < nl > < nl > - private List < PendingNotification > notifications ; < nl > + private NotificationsQueue < PendingNotification > notifications ; < nl > < nl > - public PendingStorage ( ) { < nl > - notifications = new ArrayList < > ( ) ; < nl > + public PendingStorage ( int maxMessagesLimit ) { < nl > + limit = maxMessagesLimit ; < nl > + notifications = new NotificationsQueue < > ( limit ) ; < nl > } < nl > < nl > - public List < PendingNotification > getNotifications ( ) { < nl > + public NotificationsQueue < PendingNotification > getNotifications ( ) { < nl > return notifications ; < nl > } < nl > < nl > + public int getMessagesCount ( ) { < nl > + return messagesCount ; < nl > + } < nl > + < nl > + public void setMessagesCount ( int messagesCount ) { < nl > + this . messagesCount = messagesCount ; < nl > + } < nl > + < nl > + public int getDialogsCount ( ) { < nl > + return dialogsCount ; < nl > + } < nl > + < nl > + public void setDialogsCount ( int dialogsCount ) { < nl > + this . dialogsCount = dialogsCount ; < nl > + } < nl > + < nl > @ Override < nl > public void parse ( BserValues values ) throws IOException { < nl > int count = values . getRepeatedCount ( 1 ) ; < nl > @ @ - 38 , 12 + 60 , 17 @ @ public class PendingStorage extends BserObject { < nl > stubs . add ( new PendingNotification ( ) ) ; < nl > < nl > } < nl > - notifications = values . getRepeatedObj ( 1 , stubs ) ; < nl > + notifications = new NotificationsQueue < > ( limit ) . addAllChain ( values . getRepeatedObj ( 1 , stubs ) ) ; < nl > } < nl > + messagesCount = values . getInt ( 2 ) ; < nl > + dialogsCount = values . getInt ( 3 ) ; < nl > + < nl > } < nl > < nl > @ Override < nl > public void serialize ( BserWriter writer ) throws IOException { < nl > writer . writeRepeatedObj ( 1 , notifications ) ; < nl > + writer . writeInt ( 2 , messagesCount ) ; < nl > + writer . writeInt ( 3 , dialogsCount ) ; < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 9722be5 . . d737d25 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 56 , 6 + 56 , 7 @ @ public class Application extends ActorSDKApplication { 
 public void onConfigureActorSDK ( ) { 
 ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 + ActorSDK . sharedActor ( ) . setOnClientPrivacyEnabled ( true ) ; 
 
 ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 style . setDialogsActiveTextColor ( 0xff5882ac ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 08bc190 . . d6c6684 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 194 , 6 + 194 , 9 @ @ public class ActorSDK { 
 * / 
 private boolean callsEnabled = false ; 
 private boolean videoCallsEnabled = false ; 
 + 
 + private boolean onClientPrivacyEnabled = false ; 
 + 
 private String inviteDataUrl = " https : / / api . actor . im / v1 / groups / invites / " ; 
 
 private ActorSDK ( ) { 
 @ @ - 257 , 6 + 260 , 7 @ @ public class ActorSDK { 
 } 
 builder . setPhoneBookProvider ( new AndroidPhoneBook ( ) ) ; 
 builder . setVideoCallsEnabled ( videoCallsEnabled ) ; 
 + builder . setOnClientPrivacyEnabled ( onClientPrivacyEnabled ) ; 
 builder . setNotificationProvider ( new AndroidNotifications ( application ) ) ; 
 builder . setDeviceCategory ( DeviceCategory . MOBILE ) ; 
 builder . setPlatformType ( PlatformType . ANDROID ) ; 
 @ @ - 1051 , 6 + 1055 , 14 @ @ public class ActorSDK { 
 this . videoCallsEnabled = videoCallsEnabled ; 
 } 
 
 + public void setOnClientPrivacyEnabled ( boolean onClientPrivacyEnabled ) { 
 + this . onClientPrivacyEnabled = onClientPrivacyEnabled ; 
 + } 
 + 
 + public boolean isOnClientPrivacyEnabled ( ) { 
 + return onClientPrivacyEnabled ; 
 + } 
 + 
 public String getInviteDataUrl ( ) { 
 return inviteDataUrl ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java 
 index bf969b4 . . 97201e3 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / profile / ProfileFragment . java 
 @ @ - 284 , 137 + 284 , 142 @ @ public class ProfileFragment extends BaseFragment { 
 } 
 } ) ; 
 
 - / / 
 - / / Phones 
 - / / 
 
 - for ( int i = 0 ; i < phones . size ( ) ; i + + ) { 
 - final UserPhone userPhone = phones . get ( i ) ; 
 - 
 - / / Formatting Phone Number 
 - String _ phoneNumber ; 
 - try { 
 - Phonenumber . PhoneNumber number = PhoneNumberUtil . getInstance ( ) . parse ( " + " + userPhone . getPhone ( ) , " us " ) ; 
 - _ phoneNumber = PhoneNumberUtil . getInstance ( ) . format ( number , PhoneNumberUtil . PhoneNumberFormat . INTERNATIONAL ) ; 
 - } catch ( NumberParseException e ) { 
 - e . printStackTrace ( ) ; 
 - _ phoneNumber = " + " + userPhone . getPhone ( ) ; 
 - } 
 - final String phoneNumber = _ phoneNumber ; 
 + if ( ! ActorSDK . sharedActor ( ) . isOnClientPrivacyEnabled ( ) | | user . isInPhoneBook ( ) . get ( ) ) { 
 
 + / / 
 + / / Phones 
 + / / 
 
 - String phoneTitle = userPhone . getTitle ( ) ; 
 + for ( int i = 0 ; i < phones . size ( ) ; i + + ) { 
 + final UserPhone userPhone = phones . get ( i ) ; 
 + 
 + / / Formatting Phone Number 
 + String _ phoneNumber ; 
 + try { 
 + Phonenumber . PhoneNumber number = PhoneNumberUtil . getInstance ( ) . parse ( " + " + userPhone . getPhone ( ) , " us " ) ; 
 + _ phoneNumber = PhoneNumberUtil . getInstance ( ) . format ( number , PhoneNumberUtil . PhoneNumberFormat . INTERNATIONAL ) ; 
 + } catch ( NumberParseException e ) { 
 + e . printStackTrace ( ) ; 
 + _ phoneNumber = " + " + userPhone . getPhone ( ) ; 
 + } 
 + final String phoneNumber = _ phoneNumber ; 
 
 - / / " Mobile phone " is default value for non specified title 
 - / / Trying to localize this 
 - if ( phoneTitle . toLowerCase ( ) . equals ( " mobile phone " ) ) { 
 - phoneTitle = getString ( R . string . settings _ mobile _ phone ) ; 
 - } 
 
 - View view = buildRecord ( phoneTitle , 
 - phoneNumber , 
 - R . drawable . ic _ import _ contacts _ black _ 24dp , 
 - isFirstContact , 
 - false , 
 - inflater , contactsContainer ) ; 
 - if ( isFirstContact ) { 
 - recordFieldWithIcon = view ; 
 - } 
 + String phoneTitle = userPhone . getTitle ( ) ; 
 
 - view . setOnClickListener ( v - > { 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setItems ( new CharSequence [ ] { 
 - getString ( R . string . phone _ menu _ call ) . replace ( " { 0 } " , phoneNumber ) , 
 - getString ( R . string . phone _ menu _ sms ) . replace ( " { 0 } " , phoneNumber ) , 
 - getString ( R . string . phone _ menu _ share ) . replace ( " { 0 } " , phoneNumber ) , 
 - getString ( R . string . phone _ menu _ copy ) 
 - } , ( dialog , which ) - > { 
 - if ( which = = 0 ) { 
 - startActivity ( new Intent ( Intent . ACTION _ DIAL ) 
 - . setData ( Uri . parse ( " tel : + " + userPhone . getPhone ( ) ) ) ) ; 
 - } else if ( which = = 1 ) { 
 - startActivity ( new Intent ( Intent . ACTION _ VIEW ) 
 - . setData ( Uri . parse ( " sms : + " + userPhone . getPhone ( ) ) ) ) ; 
 - } else if ( which = = 2 ) { 
 - startActivity ( new Intent ( Intent . ACTION _ SEND ) 
 - . setType ( " text / plain " ) 
 - . putExtra ( Intent . EXTRA _ TEXT , getString ( R . string . settings _ share _ text ) 
 - . replace ( " { 0 } " , phoneNumber ) 
 - . replace ( " { 1 } " , user . getName ( ) . get ( ) ) ) ) ; 
 - } else if ( which = = 3 ) { 
 - ClipboardManager clipboard = 
 - ( ClipboardManager ) getActivity ( ) 
 - . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 - ClipData clip = ClipData . newPlainText ( " Phone number " , phoneNumber ) ; 
 - clipboard . setPrimaryClip ( clip ) ; 
 - Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) 
 - . show ( ) ; 
 - } 
 - } ) 
 - . show ( ) 
 - . setCanceledOnTouchOutside ( true ) ; 
 - } ) ; 
 - 
 - view . setOnLongClickListener ( v - > { 
 - ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 - ClipData clip = ClipData . newPlainText ( " Phone number " , " + " + userPhone . getPhone ( ) ) ; 
 - clipboard . setPrimaryClip ( clip ) ; 
 - Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) 
 - . show ( ) ; 
 - return true ; 
 - } ) ; 
 + / / " Mobile phone " is default value for non specified title 
 + / / Trying to localize this 
 + if ( phoneTitle . toLowerCase ( ) . equals ( " mobile phone " ) ) { 
 + phoneTitle = getString ( R . string . settings _ mobile _ phone ) ; 
 + } 
 
 - isFirstContact = false ; 
 - } 
 + View view = buildRecord ( phoneTitle , 
 + phoneNumber , 
 + R . drawable . ic _ import _ contacts _ black _ 24dp , 
 + isFirstContact , 
 + false , 
 + inflater , contactsContainer ) ; 
 + if ( isFirstContact ) { 
 + recordFieldWithIcon = view ; 
 + } 
 
 - / / 
 - / / Emails 
 - / / 
 + view . setOnClickListener ( v - > { 
 + new AlertDialog . Builder ( getActivity ( ) ) 
 + . setItems ( new CharSequence [ ] { 
 + getString ( R . string . phone _ menu _ call ) . replace ( " { 0 } " , phoneNumber ) , 
 + getString ( R . string . phone _ menu _ sms ) . replace ( " { 0 } " , phoneNumber ) , 
 + getString ( R . string . phone _ menu _ share ) . replace ( " { 0 } " , phoneNumber ) , 
 + getString ( R . string . phone _ menu _ copy ) 
 + } , ( dialog , which ) - > { 
 + if ( which = = 0 ) { 
 + startActivity ( new Intent ( Intent . ACTION _ DIAL ) 
 + . setData ( Uri . parse ( " tel : + " + userPhone . getPhone ( ) ) ) ) ; 
 + } else if ( which = = 1 ) { 
 + startActivity ( new Intent ( Intent . ACTION _ VIEW ) 
 + . setData ( Uri . parse ( " sms : + " + userPhone . getPhone ( ) ) ) ) ; 
 + } else if ( which = = 2 ) { 
 + startActivity ( new Intent ( Intent . ACTION _ SEND ) 
 + . setType ( " text / plain " ) 
 + . putExtra ( Intent . EXTRA _ TEXT , getString ( R . string . settings _ share _ text ) 
 + . replace ( " { 0 } " , phoneNumber ) 
 + . replace ( " { 1 } " , user . getName ( ) . get ( ) ) ) ) ; 
 + } else if ( which = = 3 ) { 
 + ClipboardManager clipboard = 
 + ( ClipboardManager ) getActivity ( ) 
 + . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 + ClipData clip = ClipData . newPlainText ( " Phone number " , phoneNumber ) ; 
 + clipboard . setPrimaryClip ( clip ) ; 
 + Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) 
 + . show ( ) ; 
 + } 
 + } ) 
 + . show ( ) 
 + . setCanceledOnTouchOutside ( true ) ; 
 + } ) ; 
 + 
 + view . setOnLongClickListener ( v - > { 
 + ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 + ClipData clip = ClipData . newPlainText ( " Phone number " , " + " + userPhone . getPhone ( ) ) ; 
 + clipboard . setPrimaryClip ( clip ) ; 
 + Snackbar . make ( res , R . string . toast _ phone _ copied , Snackbar . LENGTH _ SHORT ) 
 + . show ( ) ; 
 + return true ; 
 + } ) ; 
 
 - for ( int i = 0 ; i < emails . size ( ) ; i + + ) { 
 - final UserEmail userEmail = emails . get ( i ) ; 
 - View view = buildRecord ( userEmail . getTitle ( ) , 
 - userEmail . getEmail ( ) , 
 - R . drawable . ic _ import _ contacts _ black _ 24dp , 
 - isFirstContact , 
 - false , 
 - inflater , contactsContainer ) ; 
 - if ( isFirstContact ) { 
 - recordFieldWithIcon = view ; 
 + isFirstContact = false ; 
 } 
 
 - view . setOnClickListener ( v - > { 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setItems ( new CharSequence [ ] { 
 - getString ( R . string . email _ menu _ email ) . replace ( " { 0 } " , userEmail . getEmail ( ) ) , 
 - getString ( R . string . phone _ menu _ copy ) 
 - } , ( dialog , which ) - > { 
 - if ( which = = 0 ) { 
 - startActivity ( new Intent ( Intent . ACTION _ SENDTO , Uri . fromParts ( " mailto " , userEmail . getEmail ( ) , null ) ) ) ; 
 - } else if ( which = = 1 ) { 
 - ClipboardManager clipboard = 
 - ( ClipboardManager ) getActivity ( ) 
 - . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 - ClipData clip = ClipData . newPlainText ( " Email " , userEmail . getEmail ( ) ) ; 
 - clipboard . setPrimaryClip ( clip ) ; 
 - Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) 
 - . show ( ) ; 
 - } 
 - } ) 
 - . show ( ) 
 - . setCanceledOnTouchOutside ( true ) ; 
 - } ) ; 
 - view . setOnLongClickListener ( v - > { 
 - ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 - ClipData clip = ClipData . newPlainText ( " Email " , " + " + userEmail . getEmail ( ) ) ; 
 - clipboard . setPrimaryClip ( clip ) ; 
 - Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) 
 - . show ( ) ; 
 - return true ; 
 - } ) ; 
 - isFirstContact = false ; 
 + / / 
 + / / Emails 
 + / / 
 + 
 + for ( int i = 0 ; i < emails . size ( ) ; i + + ) { 
 + final UserEmail userEmail = emails . get ( i ) ; 
 + View view = buildRecord ( userEmail . getTitle ( ) , 
 + userEmail . getEmail ( ) , 
 + R . drawable . ic _ import _ contacts _ black _ 24dp , 
 + isFirstContact , 
 + false , 
 + inflater , contactsContainer ) ; 
 + if ( isFirstContact ) { 
 + recordFieldWithIcon = view ; 
 + } 
 + 
 + view . setOnClickListener ( v - > { 
 + new AlertDialog . Builder ( getActivity ( ) ) 
 + . setItems ( new CharSequence [ ] { 
 + getString ( R . string . email _ menu _ email ) . replace ( " { 0 } " , userEmail . getEmail ( ) ) , 
 + getString ( R . string . phone _ menu _ copy ) 
 + } , ( dialog , which ) - > { 
 + if ( which = = 0 ) { 
 + startActivity ( new Intent ( Intent . ACTION _ SENDTO , Uri . fromParts ( " mailto " , userEmail . getEmail ( ) , null ) ) ) ; 
 + } else if ( which = = 1 ) { 
 + ClipboardManager clipboard = 
 + ( ClipboardManager ) getActivity ( ) 
 + . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 + ClipData clip = ClipData . newPlainText ( " Email " , userEmail . getEmail ( ) ) ; 
 + clipboard . setPrimaryClip ( clip ) ; 
 + Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) 
 + . show ( ) ; 
 + } 
 + } ) 
 + . show ( ) 
 + . setCanceledOnTouchOutside ( true ) ; 
 + } ) ; 
 + view . setOnLongClickListener ( v - > { 
 + ClipboardManager clipboard = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD _ SERVICE ) ; 
 + ClipData clip = ClipData . newPlainText ( " Email " , " + " + userEmail . getEmail ( ) ) ; 
 + clipboard . setPrimaryClip ( clip ) ; 
 + Snackbar . make ( res , R . string . toast _ email _ copied , Snackbar . LENGTH _ SHORT ) 
 + . show ( ) ; 
 + return true ; 
 + } ) ; 
 + isFirstContact = false ; 
 + } 
 } 
 
 + 
 / / 
 / / Username 
 / / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 index f7c17c7 . . 7ff38a5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / values / ui _ text . xml 
 @ @ - 480 , 6 + 480 , 9 @ @ 
 < string name = " invite _ link _ error _ revoke _ link " > Unable to revoke invite link < / string > 
 < string name = " invite _ link _ empty _ view " > Loading invite link < / string > 
 
 + < string name = " join " > JOIN < / string > 
 + < string name = " open " > OPEN < / string > 
 + 
 < string name = " invite _ link _ join _ confirm " > Join " % 1 $ s " ? < / string > 
 
 < ! - - Documents - - > 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 index 665496f . . ddd67f9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 @ @ - 56 , 6 + 56 , 8 @ @ public class Configuration { 
 @ Property ( " readonly , nonatomic " ) 
 private final boolean enablePhoneBookImport ; 
 @ Property ( " readonly , nonatomic " ) 
 + private final boolean enableOnClientPrivacy ; 
 + @ Property ( " readonly , nonatomic " ) 
 private final CallsProvider callsProvider ; 
 @ Property ( " readonly , nonatomic " ) 
 private final RawUpdatesHandler rawUpdatesHandler ; 
 @ @ - 83 , 6 + 85 , 7 @ @ public class Configuration { 
 String customAppName , 
 TrustedKey [ ] trustedKeys , 
 boolean enablePhoneBookImport , 
 + boolean enableOnClientPrivcy , 
 CallsProvider callsProvider , 
 RawUpdatesHandler rawUpdatesHandler , 
 boolean voiceCallsEnabled , 
 @ @ - 107 , 6 + 110 , 7 @ @ public class Configuration { 
 this . customAppName = customAppName ; 
 this . trustedKeys = trustedKeys ; 
 this . enablePhoneBookImport = enablePhoneBookImport ; 
 + this . enableOnClientPrivacy = enableOnClientPrivcy ; 
 this . callsProvider = callsProvider ; 
 this . rawUpdatesHandler = rawUpdatesHandler ; 
 this . voiceCallsEnabled = voiceCallsEnabled ; 
 @ @ - 162 , 6 + 166 , 15 @ @ public class Configuration { 
 } 
 
 / * * 
 + * Getting if app check if contact not in phone book and hides phone / email in that case 
 + * 
 + * @ return if on client privacy enabled 
 + * / 
 + public boolean isEnableOnClientPrivacy ( ) { 
 + return enableOnClientPrivacy ; 
 + } 
 + 
 + / * * 
 * Getting Trusted keys 
 * 
 * @ return trusted keys if set 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 index 3942b86 . . 0f82c00 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 @ @ - 58 , 6 + 58 , 7 @ @ public class ConfigurationBuilder { 
 private String customAppName ; 
 
 private boolean isPhoneBookImportEnabled = true ; 
 + private boolean isOnClientPrivacyEnabled = false ; 
 
 private CallsProvider callsProvider ; 
 private RawUpdatesHandler rawUpdatesHandler ; 
 @ @ - 130 , 6 + 131 , 19 @ @ public class ConfigurationBuilder { 
 } 
 
 / * * 
 + * Setting if application uses on client contacts privacy 
 + * 
 + * @ param isOnClientPrivacyEnabled enabled flag 
 + * @ return this 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " setOnClientPrivacyEnabled : " ) 
 + public ConfigurationBuilder setOnClientPrivacyEnabled ( boolean isOnClientPrivacyEnabled ) { 
 + this . isOnClientPrivacyEnabled = isOnClientPrivacyEnabled ; 
 + return this ; 
 + } 
 + 
 + / * * 
 * Setting Web RTC support provider 
 * 
 * @ param callsProvider WebRTC provider 
 @ @ - 419 , 6 + 433 , 7 @ @ public class ConfigurationBuilder { 
 customAppName , 
 trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) , 
 isPhoneBookImportEnabled , 
 + isOnClientPrivacyEnabled , 
 callsProvider , 
 rawUpdatesHandler , 
 voiceCallsEnabled , 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java 
 index 723f519 . . 4a7af1c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / ContactsModule . java 
 @ @ - 86 , 6 + 86 , 18 @ @ public class ContactsModule extends AbsModule { 
 return preferences ( ) . getBool ( " contact _ " + uid , false ) ; 
 } 
 
 + public void markInPhoneBook ( int uid ) { 
 + preferences ( ) . putBool ( " contact _ in _ pb _ " + uid , true ) ; 
 + } 
 + 
 + public void markNotInPhoneBook ( int uid ) { 
 + preferences ( ) . putBool ( " contact _ in _ pb _ " + uid , false ) ; 
 + } 
 + 
 + public boolean isUserInPhoneBook ( int uid ) { 
 + return preferences ( ) . getBool ( " contact _ in _ pb _ " + uid , false ) ; 
 + } 
 + 
 public Promise < UserVM [ ] > findUsers ( final String query ) { 
 return api ( new RequestSearchContacts ( query , ApiSupportConfiguration . OPTIMIZATIONS ) ) 
 . chain ( responseSearchContacts - > updates ( ) . loadRequiredPeers ( responseSearchContacts . getUserPeers ( ) , new ArrayList < > ( ) ) ) 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java 
 index fb25bd0 . . 7615243 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / users / router / UserRouter . java 
 @ @ - 34 , 11 + 34 , 17 @ @ import im . actor . core . entity . content . ServiceUserRegistered ; 
 import im . actor . core . modules . ModuleActor ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . contacts . ContactsSyncActor ; 
 + import im . actor . core . modules . contacts . entity . BookImportStorage ; 
 import im . actor . core . modules . users . router . entity . RouterApplyUsers ; 
 import im . actor . core . modules . users . router . entity . RouterFetchMissingUsers ; 
 import im . actor . core . modules . users . router . entity . RouterLoadFullUser ; 
 import im . actor . core . modules . users . router . entity . RouterUserUpdate ; 
 import im . actor . core . network . parser . Update ; 
 + import im . actor . core . viewmodel . UserEmail ; 
 + import im . actor . core . viewmodel . UserPhone ; 
 + import im . actor . core . viewmodel . UserVM ; 
 + import im . actor . core . viewmodel . generics . ArrayListUserEmail ; 
 + import im . actor . core . viewmodel . generics . ArrayListUserPhone ; 
 import im . actor . runtime . actors . messages . Void ; 
 import im . actor . runtime . annotations . Verified ; 
 import im . actor . runtime . function . Function ; 
 @ @ - 60 , 7 + 66 , 6 @ @ public class UserRouter extends ModuleActor { 
 super ( context ) ; 
 } 
 
 - 
 / / 
 / / Small User 
 / / 
 @ @ - 380 , 7 + 385 , 11 @ @ public class UserRouter extends ModuleActor { 
 / / Updating user in collection 
 users ( ) . addOrUpdateItem ( upd ) ; 
 } ) 
 - . after ( ( r , e ) - > unfreeze ( ) ) ; 
 + . after ( ( r , e ) - > unfreeze ( ) ) 
 + . chain ( r - > { 
 + checkIsInPhoneBook ( getUserVM ( uid ) ) ; 
 + return Promise . success ( null ) ; 
 + } ) ; 
 } 
 
 @ Verified 
 @ @ - 426 , 6 + 435 , 53 @ @ public class UserRouter extends ModuleActor { 
 . after ( ( r , e ) - > unfreeze ( ) ) ; 
 } 
 
 + private BookImportStorage getBookImportStorage ( ) { 
 + BookImportStorage storage = null ; 
 + byte [ ] data = context ( ) . getContactsModule ( ) . getBookImportState ( ) . get ( 0 ) ; 
 + if ( data ! = null ) { 
 + try { 
 + storage = new BookImportStorage ( data ) ; 
 + } catch ( Exception e ) { 
 + e . getLocalizedMessage ( ) ; 
 + } 
 + } 
 + return storage ; 
 + } 
 + 
 + protected void checkIsInPhoneBook ( UserVM userVM ) { 
 + if ( ! config ( ) . isEnableOnClientPrivacy ( ) ) { 
 + return ; 
 + } 
 + 
 + BookImportStorage storage = getBookImportStorage ( ) ; 
 + if ( storage = = null ) { 
 + return ; 
 + } 
 + 
 + ArrayListUserPhone userPhones = userVM . getPhones ( ) . get ( ) ; 
 + ArrayListUserEmail userEmails = userVM . getEmails ( ) . get ( ) ; 
 + 
 + if ( ! userVM . isInPhoneBook ( ) . get ( ) ) { 
 + for ( UserPhone phone : userPhones ) { 
 + if ( storage . isImported ( phone . getPhone ( ) ) ) { 
 + userVM . isInPhoneBook ( ) . change ( true ) ; 
 + context ( ) . getContactsModule ( ) . markInPhoneBook ( userVM . getId ( ) ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + 
 + if ( ! userVM . isInPhoneBook ( ) . get ( ) ) { 
 + for ( UserEmail email : userEmails ) { 
 + if ( storage . isImported ( email . getEmail ( ) ) ) { 
 + userVM . isInPhoneBook ( ) . change ( true ) ; 
 + context ( ) . getContactsModule ( ) . markInPhoneBook ( userVM . getId ( ) ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + } 
 + 
 
 / / 
 / / Tools 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java 
 index bd7b823 . . 8752651 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / viewmodel / UserVM . java 
 @ @ - 69 , 6 + 69 , 8 @ @ public class UserVM extends BaseValueModel < User > { 
 @ NotNull 
 private BooleanValueModel isContact ; 
 @ NotNull 
 + private BooleanValueModel isInPhoneBook ; 
 + @ NotNull 
 private BooleanValueModel isBlocked ; 
 @ NotNull 
 private BooleanValueModel isVerified ; 
 @ @ - 112 , 6 + 114 , 7 @ @ public class UserVM extends BaseValueModel < User > { 
 about = new StringValueModel ( " user . " + id + " . about " , user . getAbout ( ) ) ; 
 avatar = new AvatarValueModel ( " user . " + id + " . avatar " , user . getAvatar ( ) ) ; 
 isContact = new BooleanValueModel ( " user . " + id + " . contact " , modules . getContactsModule ( ) . isUserContact ( id ) ) ; 
 + isInPhoneBook = new BooleanValueModel ( " user . " + id + " . in _ pb " , modules . getContactsModule ( ) . isUserInPhoneBook ( id ) ) ; 
 isBlocked = new BooleanValueModel ( " user . " + id + " . blocked " , user . isBlocked ( ) ) ; 
 isVerified = new BooleanValueModel ( " user . " + id + " . is _ verified " , user . isVerified ( ) ) ; 
 timeZone = new StringValueModel ( " user . " + id + " . time _ zone " , user . getTimeZone ( ) ) ; 
 @ @ - 265 , 6 + 268 , 17 @ @ public class UserVM extends BaseValueModel < User > { 
 } 
 
 / * * 
 + * Get ValueModel of flag if user is in phone book 
 + * 
 + * @ return ValueModel of Boolean 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " isInPhoneBookModel " ) 
 + public BooleanValueModel isInPhoneBook ( ) { 
 + return isInPhoneBook ; 
 + } 
 + 
 + / * * 
 * Get ValueModel of flag if user is blocked 
 * 
 * @ return ValueModel of Boolean

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 index 9a0a041 . . 19def96 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / AndroidManifest . xml 
 @ @ - 297 , 6 + 297 , 8 @ @ 
 android : showOnLockScreen = " true " 
 android : theme = " @ style / CallTheme " / > 
 
 + < activity android : name = " . discover . DiscoverActivity " / > 
 + 
 < service 
 android : name = " im . actor . sdk . services . KeepAliveService " 
 android : enabled = " true " 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java 
 index 1687a09 . . edba108 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import im . actor . sdk . controllers . contacts . ContactsFragment ; 
 import im . actor . sdk . controllers . dialogs . DialogsFragment ; 
 import im . actor . sdk . controllers . fragment . help . HelpActivity ; 
 import im . actor . sdk . controllers . fragment . main . SearchAdapter ; 
 + import im . actor . sdk . discover . DiscoverActivity ; 
 import im . actor . sdk . util . Screen ; 
 import im . actor . sdk . util . Fonts ; 
 import im . actor . sdk . view . adapters . FragmentNoMenuStatePagerAdapter ; 
 @ @ - 545 , 6 + 546 , 9 @ @ public class MainPhoneController extends MainBaseController { 
 } else if ( i = = R . id . contacts ) { 
 startActivity ( new Intent ( getActivity ( ) , ContactsActivity . class ) ) ; 
 return true ; 
 + } else if ( i = = R . id . discover ) { 
 + startActivity ( new Intent ( getActivity ( ) , DiscoverActivity . class ) ) ; 
 + return true ; 
 } 
 
 return false ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / DiscoverActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / DiscoverActivity . java 
 new file mode 100644 
 index 0000000 . . 951d794 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / DiscoverActivity . java 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + package im . actor . sdk . discover ; 
 + 
 + import android . os . Bundle ; 
 + 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . activity . BaseFragmentActivity ; 
 + import im . actor . sdk . controllers . group . AddMemberFragment ; 
 + 
 + public class DiscoverActivity extends BaseFragmentActivity { 
 + @ Override 
 + protected void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + 
 + getSupportActionBar ( ) . setTitle ( " Discover " ) ; 
 + 
 + 
 + if ( savedInstanceState = = null ) { 
 + showFragment ( new StoreFragment ( ) , false , false ) ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / StoreFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / StoreFragment . java 
 new file mode 100644 
 index 0000000 . . feb6d46 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / discover / StoreFragment . java 
 @ @ - 0 , 0 + 1 , 158 @ @ 
 + package im . actor . sdk . discover ; 
 + 
 + import android . content . DialogInterface ; 
 + import android . graphics . drawable . StateListDrawable ; 
 + import android . net . Uri ; 
 + import android . os . Bundle ; 
 + import android . support . v7 . app . AlertDialog ; 
 + import android . support . v7 . widget . RecyclerView ; 
 + import android . view . Gravity ; 
 + import android . view . LayoutInflater ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + import android . webkit . WebView ; 
 + import android . webkit . WebViewClient ; 
 + import android . widget . FrameLayout ; 
 + import android . widget . LinearLayout ; 
 + import android . widget . TextView ; 
 + 
 + import im . actor . core . viewmodel . Command ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . fragment . BaseFragment ; 
 + import im . actor . sdk . util . Fonts ; 
 + import im . actor . sdk . util . Screen ; 
 + import im . actor . sdk . view . SelectorFactory ; 
 + import im . actor . sdk . view . markdown . AndroidMarkdown ; 
 + 
 + import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 + 
 + public class StoreFragment extends BaseFragment { 
 + 
 + private RecyclerView . OnScrollListener onScrollListener ; 
 + 
 + @ Override 
 + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 + FrameLayout fl = new FrameLayout ( getActivity ( ) ) ; 
 + fl . setPadding ( 0 , Screen . dp ( 56 ) , 0 , 0 ) ; 
 + fl . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + final TextView placeHolder = new TextView ( getActivity ( ) ) ; 
 + placeHolder . setGravity ( Gravity . CENTER ) ; 
 + placeHolder . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + placeHolder . setText ( R . string . progress _ common ) ; 
 + placeHolder . setTextSize ( 18 ) ; 
 + placeHolder . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 + 
 + final WebView wv = new WebView ( getActivity ( ) ) ; 
 + wv . setVisibility ( View . INVISIBLE ) ; 
 + 
 + final FrameLayout buttonRetry = new FrameLayout ( getActivity ( ) ) ; 
 + buttonRetry . setBackgroundResource ( R . drawable . shadow _ square _ 3 ) ; 
 + final TextView retryBtnText = new TextView ( getActivity ( ) ) ; 
 + buttonRetry . addView ( retryBtnText , FrameLayout . LayoutParams . WRAP _ CONTENT , Screen . dp ( 48 ) ) ; 
 + StateListDrawable states = SelectorFactory . get ( ActorSDK . sharedActor ( ) . style . getMainColor ( ) , getActivity ( ) ) ; 
 + retryBtnText . setBackgroundDrawable ( states ) ; 
 + retryBtnText . setText ( R . string . dialog _ try _ again ) ; 
 + retryBtnText . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryInvColor ( ) ) ; 
 + retryBtnText . setTypeface ( Fonts . medium ( ) ) ; 
 + retryBtnText . setTextSize ( 17 ) ; 
 + retryBtnText . setGravity ( Gravity . CENTER ) ; 
 + retryBtnText . setAllCaps ( true ) ; 
 + retryBtnText . setPadding ( Screen . dp ( 24 ) , 0 , Screen . dp ( 24 ) , 0 ) ; 
 + buttonRetry . setVisibility ( View . INVISIBLE ) ; 
 + buttonRetry . setOnClickListener ( new View . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( View v ) { 
 + showView ( placeHolder ) ; 
 + hideView ( buttonRetry ) ; 
 + hideView ( wv ) ; 
 + wv . loadUrl ( wv . getUrl ( ) ) ; 
 + } 
 + } ) ; 
 + 
 + fl . addView ( placeHolder , new FrameLayout . LayoutParams ( FrameLayout . LayoutParams . WRAP _ CONTENT , LinearLayout . LayoutParams . WRAP _ CONTENT , Gravity . CENTER ) ) ; 
 + fl . addView ( wv , FrameLayout . LayoutParams . MATCH _ PARENT , FrameLayout . LayoutParams . MATCH _ PARENT ) ; 
 + fl . addView ( buttonRetry , new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , ViewGroup . LayoutParams . WRAP _ CONTENT , Gravity . CENTER ) ) ; 
 + 
 + wv . getSettings ( ) . setJavaScriptEnabled ( true ) ; 
 + wv . setWebViewClient ( new WebViewClient ( ) { 
 + 
 + boolean errorHandled = false ; 
 + 
 + @ Override 
 + public void onPageFinished ( WebView view , String url ) { 
 + if ( wv . getVisibility ( ) ! = View . VISIBLE & & ! errorHandled ) { 
 + showView ( wv ) ; 
 + hideView ( placeHolder ) ; 
 + hideView ( buttonRetry ) ; 
 + } 
 + errorHandled = false ; 
 + super . onPageFinished ( view , url ) ; 
 + } 
 + 
 + 
 + @ Override 
 + public void onReceivedError ( WebView view , int errorCode , String description , String failingUrl ) { 
 + errorHandled = true ; 
 + hideView ( wv ) ; 
 + showView ( buttonRetry ) ; 
 + hideView ( placeHolder ) ; 
 + super . onReceivedError ( view , errorCode , description , failingUrl ) ; 
 + } 
 + 
 + @ Override 
 + public boolean shouldOverrideUrlLoading ( WebView view , String url ) { 
 + if ( url . startsWith ( " group : / / " ) ) { 
 + final String token = url . substring ( 8 ) ; 
 + AlertDialog . Builder builder = new AlertDialog . Builder ( getActivity ( ) ) ; 
 + builder . setMessage ( " Join " ) 
 + . setPositiveButton ( R . string . dialog _ ok , new DialogInterface . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( DialogInterface dialog , int which ) { 
 + joinGroup ( token ) ; 
 + dialog . dismiss ( ) ; 
 + } 
 + } ) 
 + . setNegativeButton ( R . string . dialog _ cancel , new DialogInterface . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( DialogInterface dialog , int which ) { 
 + dialog . cancel ( ) ; 
 + } 
 + } ) 
 + . show ( ) ; 
 + return true ; 
 + } else if ( url . startsWith ( " user : / / " ) ) { 
 + String id = url . substring ( 7 ) ; 
 + execute ( messenger ( ) . findUsers ( id ) ) ; 
 + return true ; 
 + } 
 + 
 + AndroidMarkdown . buildChromeIntent ( ) . launchUrl ( getActivity ( ) , Uri . parse ( url ) ) ; 
 + return true ; 
 + } 
 + } ) ; 
 + wv . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 + 
 + wv . loadUrl ( " http : / / actorapp . github . io / store / " ) ; 
 + return fl ; 
 + } 
 + 
 + private void joinGroup ( String token ) { 
 + Command < Integer > cmd = messenger ( ) . joinGroupViaToken ( token ) ; 
 + if ( cmd ! = null ) { 
 + execute ( cmd , im . actor . sdk . R . string . invite _ link _ title , new CommandCallback < Integer > ( ) { 
 + @ Override 
 + public void onResult ( Integer res ) { 
 + getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml 
 index fa4bd7b . . f894153 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / res / menu / main . xml 
 @ @ - 23 , 4 + 23 , 9 @ @ 
 android : id = " @ + id / profile " 
 android : title = " Profile " 
 app : showAsAction = " never " / > 
 + 
 + < item 
 + android : id = " @ + id / discover " 
 + android : title = " Discover " 
 + app : showAsAction = " never " / > 
 < / menu > 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 index e3570c2 . . 7bf870f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / RouterActor . java 
 @ @ - 289 , 12 + 289 , 24 @ @ public class RouterActor extends ModuleActor { 
 hasCurrentMention = true ; 
 } 
 } 
 + int messagesCount = 0 ; 
 + int dialogsCount = 0 ; 
 + for ( Peer activePeer : activeDialogStorage . getAllPeers ( ) ) { 
 + int activeDialogueUnreadCount = conversationStates . getValue ( activePeer . getUnuqueId ( ) ) . getUnreadCount ( ) ; 
 + if ( activeDialogueUnreadCount > 0 ) { 
 + dialogsCount + + ; 
 + messagesCount + = activeDialogueUnreadCount ; 
 + } 
 + } 
 + 
 context ( ) . getNotificationsModule ( ) . onInMessage ( 
 peer , 
 m . getSenderId ( ) , 
 m . getSortDate ( ) , 
 ContentDescription . fromContent ( m . getContent ( ) ) , 
 - hasCurrentMention ) ; 
 + hasCurrentMention , 
 + messagesCount , 
 + dialogsCount ) ; 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java 
 index 51d120a . . f509bf0 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / router / entity / ActiveDialogStorage . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package im . actor . core . modules . messaging . router . entity ; 
 import java . io . IOException ; 
 import java . util . ArrayList ; 
 
 + import im . actor . core . entity . Peer ; 
 import im . actor . runtime . bser . BserObject ; 
 import im . actor . runtime . bser . BserValues ; 
 import im . actor . runtime . bser . BserWriter ; 
 @ @ - 50 , 6 + 51 , 14 @ @ public class ActiveDialogStorage extends BserObject { 
 return groups ; 
 } 
 
 + public ArrayList < Peer > getAllPeers ( ) { 
 + ArrayList < Peer > peers = new ArrayList < > ( ) ; 
 + for ( ActiveDialogGroup group : groups ) { 
 + peers . addAll ( group . getPeers ( ) ) ; 
 + } 
 + return peers ; 
 + } 
 + 
 @ Override 
 public void parse ( BserValues values ) throws IOException { 
 isLoaded = values . getBool ( 1 ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java 
 index 5eb012f . . 20add75 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsActor . java 
 @ @ - 45 , 7 + 45 , 8 @ @ public class NotificationsActor extends ModuleActor { 
 / * * 
 * KeyValue storage name for actor state 
 * / 
 - private static final String STORAGE _ NOTIFICATIONS = " notifications " ; 
 + private static final String STORAGE _ NOTIFICATIONS _ DEPRECATED = " notifications " ; 
 + private static final String STORAGE _ NOTIFICATIONS = " limited _ notifications " ; 
 
 
 / * * 
 @ @ - 57 , 6 + 58 , 10 @ @ public class NotificationsActor extends ModuleActor { 
 * / 
 private PendingStorage pendingStorage ; 
 / * * 
 + * in memory not limited pending storage 
 + * / 
 + private ArrayList < PendingNotification > allPendingNotifications = new ArrayList < PendingNotification > ( ) ; 
 + / * * 
 * Cached read states 
 * / 
 private HashMap < Peer , Long > readStates = new HashMap < > ( ) ; 
 @ @ - 106 , 11 + 111 , 11 @ @ public class NotificationsActor extends ModuleActor { 
 storage = new SyncKeyValue ( Storage . createKeyValue ( STORAGE _ NOTIFICATIONS ) ) ; 
 
 / / Loading pending messages 
 - pendingStorage = new PendingStorage ( ) ; 
 + pendingStorage = new PendingStorage ( MAX _ NOTIFICATION _ COUNT ) ; 
 byte [ ] storage = this . storage . get ( 0 ) ; 
 if ( storage ! = null ) { 
 try { 
 - pendingStorage = PendingStorage . fromBytes ( storage ) ; 
 + pendingStorage = PendingStorage . fromBytes ( storage , MAX _ NOTIFICATION _ COUNT ) ; 
 } catch ( IOException e ) { 
 e . printStackTrace ( ) ; 
 } 
 @ @ - 131 , 7 + 136 , 7 @ @ public class NotificationsActor extends ModuleActor { 
 * @ param hasCurrentUserMention does message have user mention 
 * / 
 public void onNewMessage ( Peer peer , int sender , long date , ContentDescription description , 
 - boolean hasCurrentUserMention ) { 
 + boolean hasCurrentUserMention , int messagesCount , int dialogsCount ) { 
 
 / / Check if message already read to avoid incorrect notifications 
 / / for already read messages 
 @ @ - 144 , 8 + 149 , 12 @ @ public class NotificationsActor extends ModuleActor { 
 
 / / Save to pending storage 
 if ( isEnabled ) { 
 - List < PendingNotification > allPending = getNotifications ( ) ; 
 - allPending . add ( new PendingNotification ( peer , sender , date , description ) ) ; 
 + List < PendingNotification > pendingNotifications = getNotifications ( ) ; 
 + PendingNotification pendingNotification = new PendingNotification ( peer , sender , date , description ) ; 
 + pendingNotifications . add ( pendingNotification ) ; 
 + pendingStorage . setMessagesCount ( messagesCount ) ; 
 + pendingStorage . setDialogsCount ( dialogsCount ) ; 
 + allPendingNotifications . add ( pendingNotification ) ; 
 saveStorage ( ) ; 
 } 
 
 @ @ - 235 , 21 + 244 , 12 @ @ public class NotificationsActor extends ModuleActor { 
 } 
 
 / / Removing read messages from pending storage 
 - boolean isChanged = false ; 
 - List < PendingNotification > notifications = pendingStorage . getNotifications ( ) ; 
 - for ( PendingNotification p : notifications . toArray ( new PendingNotification [ notifications . size ( ) ] ) ) { 
 - if ( p . getPeer ( ) . equals ( peer ) & & p . getDate ( ) < = fromDate ) { 
 - pendingStorage . getNotifications ( ) . remove ( p ) ; 
 - isChanged = true ; 
 - } 
 - } 
 - 
 - / / If there are some messages 
 - / / Save pending and update notification 
 - if ( isChanged ) { 
 - saveStorage ( ) ; 
 - updateNotification ( ) ; 
 - } 
 + getNotifications ( ) . clear ( ) ; 
 + pendingStorage . setMessagesCount ( 0 ) ; 
 + pendingStorage . setDialogsCount ( 0 ) ; 
 + allPendingNotifications . clear ( ) ; 
 + saveStorage ( ) ; 
 + updateNotification ( ) ; 
 
 / / Setting last read date 
 setLastReadDate ( peer , fromDate ) ; 
 @ @ - 398 , 36 + 398 , 25 @ @ public class NotificationsActor extends ModuleActor { 
 * / 
 private void performNotificationImp ( boolean performUpdate ) { 
 / / Getting pending notifications list 
 - List < PendingNotification > allPending = getNotifications ( ) ; 
 - int messagesCount = allPending . size ( ) ; 
 - if ( messagesCount = = 0 ) { 
 + List < PendingNotification > destNotifications = getNotifications ( ) ; 
 + if ( destNotifications . size ( ) = = 0 ) { 
 hideNotification ( ) ; 
 return ; 
 } 
 
 - / / Destination notifications list 
 - List < PendingNotification > destNotifications = last ( allPending , MAX _ NOTIFICATION _ COUNT ) ; 
 - 
 / / Converting to PendingNotifications 
 List < Notification > res = new ArrayList < > ( ) ; 
 for ( PendingNotification p : destNotifications ) { 
 res . add ( new Notification ( p . getPeer ( ) , p . getSender ( ) , p . getContent ( ) ) ) ; 
 } 
 
 - / / Getting count of unique peers 
 - HashSet < Peer > peers = new HashSet < > ( ) ; 
 - for ( PendingNotification p : allPending ) { 
 - peers . add ( p . getPeer ( ) ) ; 
 - } 
 - int chatsCount = peers . size ( ) ; 
 - 
 / / Performing notifications 
 if ( performUpdate ) { 
 config ( ) . getNotificationProvider ( ) . onUpdateNotification ( context ( ) . getMessenger ( ) , res , 
 - messagesCount , chatsCount ) ; 
 + pendingStorage . getMessagesCount ( ) , pendingStorage . getDialogsCount ( ) ) ; 
 } else { 
 config ( ) . getNotificationProvider ( ) . onNotification ( context ( ) . getMessenger ( ) , res , 
 - messagesCount , chatsCount ) ; 
 + pendingStorage . getMessagesCount ( ) , pendingStorage . getDialogsCount ( ) ) ; 
 } 
 } 
 
 @ @ - 565 , 7 + 554 , 8 @ @ public class NotificationsActor extends ModuleActor { 
 if ( message instanceof NewMessage ) { 
 NewMessage newMessage = ( NewMessage ) message ; 
 onNewMessage ( newMessage . getPeer ( ) , newMessage . getSender ( ) , newMessage . getSortDate ( ) , 
 - newMessage . getContentDescription ( ) , newMessage . getHasCurrentUserMention ( ) ) ; 
 + newMessage . getContentDescription ( ) , newMessage . getHasCurrentUserMention ( ) , 
 + newMessage . getUnreadMessagesCount ( ) , newMessage . getUnreadDialogsCount ( ) ) ; 
 } else if ( message instanceof MessagesRead ) { 
 MessagesRead read = ( MessagesRead ) message ; 
 onMessagesRead ( read . getPeer ( ) , read . getFromDate ( ) ) ; 
 @ @ - 605 , 14 + 595 , 18 @ @ public class NotificationsActor extends ModuleActor { 
 private long sortDate ; 
 private ContentDescription contentDescription ; 
 private boolean hasCurrentUserMention ; 
 + private int unreadMessagesCount ; 
 + private int unreadDialogsCount ; 
 
 public NewMessage ( Peer peer , int sender , long sortDate , ContentDescription contentDescription , 
 - boolean hasCurrentUserMention ) { 
 + boolean hasCurrentUserMention , int unreadMessagesCount , int unreadDialogsCount ) { 
 this . peer = peer ; 
 this . sender = sender ; 
 this . sortDate = sortDate ; 
 this . contentDescription = contentDescription ; 
 this . hasCurrentUserMention = hasCurrentUserMention ; 
 + this . unreadMessagesCount = unreadMessagesCount ; 
 + this . unreadDialogsCount = unreadDialogsCount ; 
 } 
 
 public Peer getPeer ( ) { 
 @ @ - 634 , 6 + 628 , 14 @ @ public class NotificationsActor extends ModuleActor { 
 public boolean getHasCurrentUserMention ( ) { 
 return hasCurrentUserMention ; 
 } 
 + 
 + public int getUnreadMessagesCount ( ) { 
 + return unreadMessagesCount ; 
 + } 
 + 
 + public int getUnreadDialogsCount ( ) { 
 + return unreadDialogsCount ; 
 + } 
 } 
 
 public static class MessagesRead { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java 
 index afeda43 . . 0bc7b5e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsModule . java 
 @ @ - 35 , 8 + 35 , 8 @ @ public class NotificationsModule extends AbsModule { 
 notificationsActor . send ( new NotificationsActor . MessagesRead ( peer , fromDate ) ) ; 
 } 
 
 - public void onInMessage ( Peer peer , int sender , long sortDate , ContentDescription contentDescription , boolean hasCurrentUserMention ) { 
 - notificationsActor . send ( new NotificationsActor . NewMessage ( peer , sender , sortDate , contentDescription , hasCurrentUserMention ) ) ; 
 + public void onInMessage ( Peer peer , int sender , long sortDate , ContentDescription contentDescription , boolean hasCurrentUserMention , int unreadMessagesCount , int unreadDialogsCount ) { 
 + notificationsActor . send ( new NotificationsActor . NewMessage ( peer , sender , sortDate , contentDescription , hasCurrentUserMention , unreadMessagesCount , unreadDialogsCount ) ) ; 
 } 
 
 public void pauseNotifications ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsQueue . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsQueue . java 
 new file mode 100644 
 index 0000000 . . 5ad7acf 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / NotificationsQueue . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + package im . actor . core . modules . notifications ; 
 + 
 + import java . util . Collection ; 
 + import java . util . LinkedList ; 
 + 
 + public class NotificationsQueue < E > extends LinkedList < E > { 
 + private int limit ; 
 + 
 + public NotificationsQueue ( int limit ) { 
 + this . limit = limit ; 
 + } 
 + 
 + @ Override 
 + public boolean add ( E o ) { 
 + super . add ( o ) ; 
 + while ( size ( ) > limit ) { 
 + super . remove ( ) ; 
 + } 
 + return true ; 
 + } 
 + 
 + public NotificationsQueue addAllChain ( Collection c ) { 
 + super . addAll ( c ) ; 
 + return this ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java 
 index 089c4a9 . . b3fede8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / notifications / entity / PendingStorage . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import java . io . IOException ; 
 import java . util . ArrayList ; 
 import java . util . List ; 
 
 + import im . actor . core . modules . notifications . NotificationsQueue ; 
 import im . actor . runtime . bser . Bser ; 
 import im . actor . runtime . bser . BserObject ; 
 import im . actor . runtime . bser . BserValues ; 
 @ @ - 15 , 20 + 16 , 41 @ @ import im . actor . runtime . bser . BserWriter ; 
 
 public class PendingStorage extends BserObject { 
 
 - public static PendingStorage fromBytes ( byte [ ] data ) throws IOException { 
 - return Bser . parse ( new PendingStorage ( ) , data ) ; 
 + private int limit ; 
 + private int messagesCount = 0 ; 
 + private int dialogsCount = 0 ; 
 + 
 + public static PendingStorage fromBytes ( byte [ ] data , int maxMessagesLimit ) throws IOException { 
 + return Bser . parse ( new PendingStorage ( maxMessagesLimit ) , data ) ; 
 } 
 
 - private List < PendingNotification > notifications ; 
 + private NotificationsQueue < PendingNotification > notifications ; 
 
 - public PendingStorage ( ) { 
 - notifications = new ArrayList < > ( ) ; 
 + public PendingStorage ( int maxMessagesLimit ) { 
 + limit = maxMessagesLimit ; 
 + notifications = new NotificationsQueue < > ( limit ) ; 
 } 
 
 - public List < PendingNotification > getNotifications ( ) { 
 + public NotificationsQueue < PendingNotification > getNotifications ( ) { 
 return notifications ; 
 } 
 
 + public int getMessagesCount ( ) { 
 + return messagesCount ; 
 + } 
 + 
 + public void setMessagesCount ( int messagesCount ) { 
 + this . messagesCount = messagesCount ; 
 + } 
 + 
 + public int getDialogsCount ( ) { 
 + return dialogsCount ; 
 + } 
 + 
 + public void setDialogsCount ( int dialogsCount ) { 
 + this . dialogsCount = dialogsCount ; 
 + } 
 + 
 @ Override 
 public void parse ( BserValues values ) throws IOException { 
 int count = values . getRepeatedCount ( 1 ) ; 
 @ @ - 38 , 12 + 60 , 17 @ @ public class PendingStorage extends BserObject { 
 stubs . add ( new PendingNotification ( ) ) ; 
 
 } 
 - notifications = values . getRepeatedObj ( 1 , stubs ) ; 
 + notifications = new NotificationsQueue < > ( limit ) . addAllChain ( values . getRepeatedObj ( 1 , stubs ) ) ; 
 } 
 + messagesCount = values . getInt ( 2 ) ; 
 + dialogsCount = values . getInt ( 3 ) ; 
 + 
 } 
 
 @ Override 
 public void serialize ( BserWriter writer ) throws IOException { 
 writer . writeRepeatedObj ( 1 , notifications ) ; 
 + writer . writeInt ( 2 , messagesCount ) ; 
 + writer . writeInt ( 3 , dialogsCount ) ; 
 } 
 }
