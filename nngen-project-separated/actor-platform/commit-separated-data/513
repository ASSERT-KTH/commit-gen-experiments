BLEU SCORE: 0.3050975216056289

TEST MSG: feat ( core ) : Enable counters stripping
GENERATED MSG: fix ( core ) : Fixing execute after handler

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > index a067b8a . . bc78607 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > @ @ - 173 , 6 + 173 , 7 @ @ public class SequenceActor extends ModuleActor { < nl > Log . d ( TAG , " Loading fresh state . . . " ) ; < nl > ArrayList < ApiUpdateOptimization > optimizations = new ArrayList < > ( ) ; < nl > optimizations . add ( ApiUpdateOptimization . STRIP _ ENTITIES ) ; < nl > + optimizations . add ( ApiUpdateOptimization . STRIP _ COUNTERS ) ; < nl > request ( new RequestGetState ( optimizations ) , new RpcCallback < ResponseSeq > ( ) { < nl > @ Override < nl > public void onResult ( ResponseSeq response ) { < nl > @ @ - 206 , 6 + 207 , 7 @ @ public class SequenceActor extends ModuleActor { < nl > final long loadStart = im . actor . runtime . Runtime . getCurrentTime ( ) ; < nl > ArrayList < ApiUpdateOptimization > optimizations = new ArrayList < > ( ) ; < nl > optimizations . add ( ApiUpdateOptimization . STRIP _ ENTITIES ) ; < nl > + optimizations . add ( ApiUpdateOptimization . STRIP _ COUNTERS ) ; < nl > request ( new RequestGetDifference ( seq , state , optimizations ) , new RpcCallback < ResponseGetDifference > ( ) { < nl > @ Override < nl > public void onResult ( final ResponseGetDifference response ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > index 3cf9d18 . . 691b782 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java < nl > @ @ - 91 , 7 + 91 , 7 @ @ public class SequenceActor extends ModuleActor { < nl > < nl > @ Deprecated < nl > private void onExecuteAfter ( ExecuteAfter after ) { < nl > - if ( after . getSeq ( ) < = this . seq ) { < nl > + if ( after . getSeq ( ) < = this . finishedSeq ) { < nl > after . getRunnable ( ) . run ( ) ; < nl > } else { < nl > pendingRunnables . add ( after ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 index a067b8a . . bc78607 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 @ @ - 173 , 6 + 173 , 7 @ @ public class SequenceActor extends ModuleActor { 
 Log . d ( TAG , " Loading fresh state . . . " ) ; 
 ArrayList < ApiUpdateOptimization > optimizations = new ArrayList < > ( ) ; 
 optimizations . add ( ApiUpdateOptimization . STRIP _ ENTITIES ) ; 
 + optimizations . add ( ApiUpdateOptimization . STRIP _ COUNTERS ) ; 
 request ( new RequestGetState ( optimizations ) , new RpcCallback < ResponseSeq > ( ) { 
 @ Override 
 public void onResult ( ResponseSeq response ) { 
 @ @ - 206 , 6 + 207 , 7 @ @ public class SequenceActor extends ModuleActor { 
 final long loadStart = im . actor . runtime . Runtime . getCurrentTime ( ) ; 
 ArrayList < ApiUpdateOptimization > optimizations = new ArrayList < > ( ) ; 
 optimizations . add ( ApiUpdateOptimization . STRIP _ ENTITIES ) ; 
 + optimizations . add ( ApiUpdateOptimization . STRIP _ COUNTERS ) ; 
 request ( new RequestGetDifference ( seq , state , optimizations ) , new RpcCallback < ResponseGetDifference > ( ) { 
 @ Override 
 public void onResult ( final ResponseGetDifference response ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 index 3cf9d18 . . 691b782 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / sequence / SequenceActor . java 
 @ @ - 91 , 7 + 91 , 7 @ @ public class SequenceActor extends ModuleActor { 
 
 @ Deprecated 
 private void onExecuteAfter ( ExecuteAfter after ) { 
 - if ( after . getSeq ( ) < = this . seq ) { 
 + if ( after . getSeq ( ) < = this . finishedSeq ) { 
 after . getRunnable ( ) . run ( ) ; 
 } else { 
 pendingRunnables . add ( after ) ;
