BLEU SCORE: 0.44632361378533286

TEST MSG: wip ( iOS ) : Working on Call Screen
GENERATED MSG: wip ( iOS ) : Location picker

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 7a28195 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 23 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " ic _ call _ 36pt . png " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " ic _ call _ 36pt @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " ic _ call _ 36pt @ 3x . png " , < nl > + " scale " : " 3x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt . png < nl > new file mode 100644 < nl > index 0000000 . . d4077ac < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 7c9d1b0 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 3x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 3x . png < nl > new file mode 100644 < nl > index 0000000 . . 0c736c4 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 3x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 67d3348 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 23 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " ic _ call _ end _ 36pt . png " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " ic _ call _ end _ 36pt @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " ic _ call _ end _ 36pt @ 3x . png " , < nl > + " scale " : " 3x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt . png < nl > new file mode 100644 < nl > index 0000000 . . 3f193b1 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 44794a9 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 3x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 3x . png < nl > new file mode 100644 < nl > index 0000000 . . ab57d90 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 3x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift < nl > index 9f218c8 . . 526c01f 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift < nl > @ @ - 7 , 14 + 7 , 16 @ @ import Foundation < nl > class iOSCallsProvider : NSObject , ACCallsProvider { < nl > < nl > func onCallStartWithCallId ( callId : jlong ) { < nl > - dispatchOnUi ( ) { ( ) - > Void in < nl > + dispatchOnUi ( ) { < nl > let rootController = ActorSDK . sharedActor ( ) . bindedToWindow . rootViewController ! < nl > rootController . presentViewController ( AACallViewController ( callId : callId ) , animated : true , completion : nil ) < nl > } < nl > } < nl > < nl > func onCallEndWithCallId ( callId : jlong ) { < nl > - < nl > + dispatchOnUi ( ) { < nl > + < nl > + } < nl > } < nl > < nl > / / private var controller : ACWebRTCController ! < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > index 1584eec . . 7455707 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift < nl > @ @ - 10 , 12 + 10 , 11 @ @ public class AACallViewController : AAViewController { < nl > public let binder = AABinder ( ) < nl > public let callId : jlong < nl > public let call : ACCallVM < nl > - public let bgImage = UIImageView ( image : UIImage . bundled ( " bg _ 1 . jpg " ) ) < nl > - public let bgImageOverlay = UIView ( ) < nl > public let senderAvatar : AAAvatarView = AAAvatarView ( frameSize : 120 , type : . Rounded ) < nl > public let peerTitle = UILabel ( ) < nl > - public let answerCall = UIButton ( frame : CGRectMake ( 0 , 0 , 80 , 80 ) ) < nl > - public let declineCall = UIButton ( frame : CGRectMake ( 0 , 0 , 80 , 80 ) ) < nl > + public let callState = UILabel ( ) < nl > + public let answerCallButton = UIButton ( ) < nl > + public let declineCallButton = UIButton ( ) < nl > < nl > public init ( callId : jlong ) { < nl > self . callId = callId < nl > @ @ - 30 , 48 + 29 , 66 @ @ public class AACallViewController : AAViewController { < nl > public override func viewDidLoad ( ) { < nl > super . viewDidLoad ( ) < nl > < nl > - answerCall . backgroundColor = UIColor . greenColor ( ) < nl > - answerCall . setTitle ( " Answer " , forState : . Normal ) < nl > - answerCall . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) < nl > - answerCall . viewDidTap = { < nl > + / / < nl > + / / Buttons < nl > + / / < nl > + answerCallButton . setImage ( UIImage . bundled ( " ic _ call _ 36pt " ) ! . tintImage ( UIColor . whiteColor ( ) ) , forState : . Normal ) < nl > + answerCallButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( rgb : 0x54dd64 ) , size : CGSizeMake ( 72 , 72 ) , radius : 36 ) , forState : . Normal ) < nl > + answerCallButton . viewDidTap = { < nl > Actor . answerCallWithCallId ( self . callId ) < nl > - / / self . navigateDetail ( ConversationViewController ( peer : self . call . peer ) ) < nl > - / / self . dismiss ( ) < nl > } < nl > < nl > - declineCall . backgroundColor = UIColor . redColor ( ) < nl > - declineCall . setTitle ( " End Call " , forState : . Normal ) < nl > - declineCall . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) < nl > - declineCall . viewDidTap = { < nl > + declineCallButton . setImage ( UIImage . bundled ( " ic _ call _ end _ 36pt " ) ! . tintImage ( UIColor . whiteColor ( ) ) , forState : . Normal ) < nl > + declineCallButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( rgb : 0xfc2c31 ) , size : CGSizeMake ( 72 , 72 ) , radius : 36 ) , forState : . Normal ) < nl > + declineCallButton . viewDidTap = { < nl > Actor . endCallWithCallId ( self . callId ) < nl > - self . navigateDetail ( ConversationViewController ( peer : self . call . peer ) ) < nl > self . dismiss ( ) < nl > } < nl > < nl > - bgImage . contentMode = UIViewContentMode . ScaleAspectFill < nl > - bgImageOverlay . opaque = false < nl > - bgImageOverlay . backgroundColor = UIColor ( rgb : 0x86aed7 ) < nl > - peerTitle . textColor = UIColor . whiteColor ( ) < nl > + / / < nl > + / / Peer Info < nl > + / / < nl > + < nl > + peerTitle . textColor = ActorSDK . sharedActor ( ) . style . vcTextColor < nl > peerTitle . textAlignment = NSTextAlignment . Center < nl > peerTitle . font = UIFont . thinSystemFontOfSize ( 32 ) < nl > < nl > - self . view . addSubview ( bgImage ) < nl > - self . view . addSubview ( bgImageOverlay ) < nl > + callState . textColor = ActorSDK . sharedActor ( ) . style . vcHintColor < nl > + callState . textAlignment = NSTextAlignment . Center < nl > + callState . font = UIFont . thinSystemFontOfSize ( 32 ) < nl > + < nl > + self . view . backgroundColor = UIColor . whiteColor ( ) < nl > + < nl > self . view . addSubview ( senderAvatar ) < nl > self . view . addSubview ( peerTitle ) < nl > - self . view . addSubview ( answerCall ) < nl > + self . view . addSubview ( callState ) < nl > + self . view . addSubview ( answerCallButton ) < nl > + self . view . addSubview ( declineCallButton ) < nl > } < nl > < nl > public override func viewWillLayoutSubviews ( ) { < nl > super . viewWillLayoutSubviews ( ) < nl > < nl > - bgImage . frame = self . view . bounds < nl > - bgImageOverlay . frame = self . view . bounds < nl > - < nl > - senderAvatar . frame = CGRectMake ( ( self . view . width - 120 ) / 2 , 100 , 120 , 120 ) < nl > + senderAvatar . frame = CGRectMake ( ( self . view . width - 90 ) / 2 , 100 , 90 , 90 ) < nl > peerTitle . frame = CGRectMake ( 60 , senderAvatar . bottom + 20 , view . width - 120 , 34 ) < nl > - answerCall . frame = CGRectMake ( 0 , self . view . height - 48 , self . view . width , 48 ) < nl > - declineCall . frame = CGRectMake ( 0 , self . view . height - 48 - 48 , self . view . width , 48 ) < nl > + callState . frame = CGRectMake ( 60 , peerTitle . bottom + 20 , view . width - 120 , 34 ) < nl > + < nl > + layoutButtons ( ) < nl > + } < nl > + < nl > + private func layoutButtons ( ) { < nl > + if ! declineCallButton . hidden | | ! answerCallButton . hidden { < nl > + if ! declineCallButton . hidden & & ! answerCallButton . hidden { < nl > + < nl > + } else { < nl > + if ! answerCallButton . hidden { < nl > + answerCallButton . frame = CGRectMake ( ( self . view . width - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) < nl > + } < nl > + if ! declineCallButton . hidden { < nl > + declineCallButton . frame = CGRectMake ( ( self . view . width - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) < nl > + } < nl > + } < nl > + } < nl > } < nl > < nl > public override func viewWillAppear ( animated : Bool ) { < nl > @ @ - 82 , 44 + 99 , 30 @ @ public class AACallViewController : AAViewController { < nl > / / < nl > binder . bind ( call . state ) { ( value : ACCallState ! ) - > ( ) in < nl > if ( ACCallState _ Enum . CALLING _ INCOMING = = value . toNSEnum ( ) ) { < nl > - self . answerCall . hidden = false < nl > - self . declineCall . hidden = false < nl > + self . answerCallButton . hidden = false < nl > + self . declineCallButton . hidden = false < nl > + self . callState . text = " Incoming call . . . " < nl > + self . layoutButtons ( ) < nl > } else if ( ACCallState _ Enum . IN _ PROGRESS = = value . toNSEnum ( ) ) { < nl > - self . answerCall . hidden = true < nl > - self . declineCall . hidden = false < nl > + self . answerCallButton . hidden = true < nl > + self . declineCallButton . hidden = false < nl > + self . callState . text = " 0 : 00 " < nl > + self . layoutButtons ( ) < nl > } else if ( ACCallState _ Enum . CALLING _ OUTGOING = = value . toNSEnum ( ) ) { < nl > - self . answerCall . hidden = true < nl > - self . declineCall . hidden = false < nl > + self . answerCallButton . hidden = true < nl > + self . declineCallButton . hidden = false < nl > + self . callState . text = " Ringing . . . " < nl > + self . layoutButtons ( ) < nl > } else if ( ACCallState _ Enum . ENDED = = value . toNSEnum ( ) ) { < nl > - self . answerCall . hidden = false < nl > - self . declineCall . hidden = false < nl > - } else { < nl > - self . answerCall . hidden = false < nl > - self . declineCall . hidden = false < nl > - } < nl > - } < nl > - < nl > - / / < nl > - / / Binding Avatar < nl > - / / < nl > - binder . bind ( call . members ) { ( value : JavaUtilArrayList ! ) - > ( ) in < nl > - < nl > - print ( " Bind user " ) < nl > - < nl > - var users = [ ACUserVM ] ( ) < nl > - for i in 0 . . < value . size ( ) { < nl > - let uid = ( value . getWithInt ( i ) as ! ACCallMember ) . uid < nl > - if ( uid ! = Actor . myUid ( ) ) { < nl > - users . append ( Actor . getUserWithUid ( uid ) ) < nl > - } < nl > - } < nl > - < nl > - print ( " Bind user \ ( users . count ) " ) < nl > - < nl > - if ( users . count = = 1 ) { < nl > - self . senderAvatar . bind ( users [ 0 ] . getNameModel ( ) . get ( ) , id : users [ 0 ] . getId ( ) , avatar : users [ 0 ] . getAvatarModel ( ) . get ( ) ) < nl > + self . answerCallButton . hidden = false < nl > + self . declineCallButton . hidden = false < nl > + self . callState . text = " Call Ended " < nl > + self . layoutButtons ( ) < nl > } else { < nl > - / / TODO : Multiple Users < nl > + self . answerCallButton . hidden = false < nl > + self . declineCallButton . hidden = false < nl > + self . callState . text = " " < nl > + self . layoutButtons ( ) < nl > } < nl > } < nl > < nl > @ @ - 127 , 22 + 130 , 26 @ @ public class AACallViewController : AAViewController { < nl > / / Binding Title < nl > / / < nl > if ( call . peer . peerType . toNSEnum ( ) = = ACPeerType _ Enum . PRIVATE ) { < nl > - binder . bind ( Actor . getUserWithUid ( call . peer . peerId ) . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in < nl > + let user = Actor . getUserWithUid ( call . peer . peerId ) < nl > + binder . bind ( user . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in < nl > self . peerTitle . text = value < nl > } ) < nl > + binder . bind ( user . getAvatarModel ( ) , closure : { ( value : ACAvatar ! ) - > ( ) in < nl > + self . senderAvatar . bind ( user . getNameModel ( ) . get ( ) , id : user . getId ( ) , avatar : value ) < nl > + } ) < nl > } else if ( call . peer . peerType . toNSEnum ( ) = = ACPeerType _ Enum . GROUP ) { < nl > - binder . bind ( Actor . getGroupWithGid ( call . peer . peerId ) . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in < nl > + let group = Actor . getGroupWithGid ( call . peer . peerId ) < nl > + binder . bind ( group . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in < nl > self . peerTitle . text = value < nl > } ) < nl > + binder . bind ( group . getAvatarModel ( ) , closure : { ( value : ACAvatar ! ) - > ( ) in < nl > + self . senderAvatar . bind ( group . getNameModel ( ) . get ( ) , id : group . getId ( ) , avatar : value ) < nl > + } ) < nl > } < nl > - < nl > - UIApplication . sharedApplication ( ) . setStatusBarStyle ( . LightContent , animated : true ) < nl > } < nl > < nl > public override func viewWillDisappear ( animated : Bool ) { < nl > super . viewWillDisappear ( animated ) < nl > binder . unbindAll ( ) < nl > - < nl > - UIApplication . sharedApplication ( ) . setStatusBarStyle ( ActorSDK . sharedActor ( ) . style . vcStatusBarStyle , animated : true ) < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 070bda1 . . 702e352 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 171 , 7 + 171 , 7 @ @ public class CallManagerActor extends ModuleActor { < nl > } < nl > < nl > private void doAnswerCall ( final long callId ) { < nl > - Log . d ( TAG , " onIncomingCall ( " + callId + " ) " ) ; < nl > + Log . d ( TAG , " doAnswerCall ( " + callId + " ) " ) ; < nl > < nl > / / If not already answered < nl > if ( ! answeredCalls . contains ( callId ) ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java < nl > index 0711a6d . . 8ef9859 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java < nl > @ @ - 8 , 6 + 8 , 7 @ @ import im . actor . core . api . ApiSwitchMaster ; < nl > import im . actor . core . api . ApiWebRTCSignaling ; < nl > import im . actor . core . api . rpc . RequestGetCallInfo ; < nl > import im . actor . core . api . rpc . ResponseGetCallInfo ; < nl > + import im . actor . core . entity . Peer ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . viewmodel . CallMember ; < nl > import im . actor . core . viewmodel . CallState ; < nl > @ @ - 22 , 6 + 23 , 7 @ @ public class CallSlaveActor extends CallActor { < nl > private MasterNode masterNode ; < nl > private boolean isAnswerPending = false ; < nl > private long callId ; < nl > + private Peer peer ; < nl > < nl > public CallSlaveActor ( long callId , ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 35 , 9 + 37 , 7 @ @ public class CallSlaveActor extends CallActor { < nl > api ( new RequestGetCallInfo ( callId ) ) . then ( new Consumer < ResponseGetCallInfo > ( ) { < nl > @ Override < nl > public void apply ( final ResponseGetCallInfo responseGetCallInfo ) { < nl > - spawnNewVM ( callId , convert ( responseGetCallInfo . getPeer ( ) ) , < nl > - new ArrayList < CallMember > ( ) , CallState . CALLING _ INCOMING ) ; < nl > - callManager . send ( new CallManagerActor . IncomingCallReady ( callId ) , self ( ) ) ; < nl > + peer = convert ( responseGetCallInfo . getPeer ( ) ) ; < nl > joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; < nl > } < nl > } ) . failure ( new Consumer < Exception > ( ) { < nl > @ @ - 48 , 6 + 48 , 13 @ @ public class CallSlaveActor extends CallActor { < nl > } ) . done ( self ( ) ) ; < nl > } < nl > < nl > + @ Override < nl > + public void onBusStarted ( ) { < nl > + super . onBusStarted ( ) ; < nl > + spawnNewVM ( callId , peer , new ArrayList < CallMember > ( ) , CallState . CALLING _ INCOMING ) ; < nl > + callManager . send ( new CallManagerActor . IncomingCallReady ( callId ) , self ( ) ) ; < nl > + } < nl > + < nl > public void onMasterNodeChanged ( int fromUid , long fromDeviceId ) { < nl > masterNode = new MasterNode ( fromUid , fromDeviceId ) ; < nl > if ( isAnswerPending ) { < nl > @ @ - 55 , 7 + 62 , 7 @ @ public class CallSlaveActor extends CallActor { < nl > sendSignalingMessage ( masterNode . getUid ( ) , masterNode . getDeviceId ( ) , new ApiAnswerCall ( ) ) ; < nl > } < nl > < nl > - schedule ( new DoAnswer ( ) , 5000 ) ; < nl > + / / schedule ( new DoAnswer ( ) , 5000 ) ; < nl > } < nl > < nl > public void onNeedOffer ( int destUid , long destDeviceId ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index f26bdd0 . . 5fc91d4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 172 , 9 + 172 , 10 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > - 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; < nl > + 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / ; } ; < nl > 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > + 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 350 , 9 + 351 , 10 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > - 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AALocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 537 , 6 + 539 , 7 @ @ < nl > 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , < nl > 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , < nl > 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , < nl > + 	 	 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / , < nl > 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , < nl > 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , < nl > 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , < nl > @ @ - 890 , 7 + 893 , 7 @ @ < nl > 	 	 06E7B2451C0F8D410090660C / * Location * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > - 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , < nl > + 	 	 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Location ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1124 , 7 + 1127 , 7 @ @ < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > - 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , < nl > + 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , < nl > 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , < nl > 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , < nl > 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , < nl > @ @ - 1171 , 6 + 1174 , 7 @ @ < nl > 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , < nl > 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , < nl > 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , < nl > + 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , < nl > 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , < nl > 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , < nl > 	 	 	 	 066A526D1BC50E8B000E606E / * AAAuthCountryCell . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > index 3f92572 . . e9b740d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > @ @ - 2 , 8 + 2 , 16 @ @ < nl > " images " : [ < nl > { < nl > " idiom " : " universal " , < nl > + " scale " : " 1x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > " filename " : " LocationPin @ 2x . png " , < nl > " scale " : " 2x " < nl > + } , < nl > + { < nl > + " idiom " : " universal " , < nl > + " scale " : " 3x " < nl > } < nl > ] , < nl > " info " : { < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 41ae8d7 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPinPoint @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 7584de8 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 0bd0b69 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPinShadow @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 3bc04a4 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > index 1c539ce . . 79edd4d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 119 , 11 + 119 , 12 @ @ public class AABubbleLocationCell : AABubbleCell { < nl > < nl > public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > let insets = fullContentInsets < nl > + let contentWidth = self . contentView . frame . width < nl > < nl > layoutBubble ( mapWidth , contentHeight : mapHeight ) < nl > < nl > if isOut { < nl > - map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > + map . frame = CGRectMake ( contentWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > } else { < nl > map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 8d0cdcc . . 52a8665 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 6 , 7 + 6 , 7 @ @ import Foundation < nl > import UIKit < nl > import MobileCoreServices < nl > < nl > - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate { < nl > + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { < nl > < nl > / / Data binder < nl > private let binder = AABinder ( ) < nl > @ @ - 462 , 6 + 462 , 17 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > / / Location picking < nl > < nl > func pickLocation ( ) { < nl > - self . presentViewController ( AANavigationController ( rootViewController : AALocationPickerController ( ) ) , animated : true , completion : nil ) < nl > + let pickerController = AALocationPickerController ( ) < nl > + pickerController . delegate = self < nl > + self . presentViewController ( AANavigationController ( rootViewController : pickerController ) , animated : true , completion : nil ) < nl > + } < nl > + < nl > + func locationPickerDidCancelled ( controller : AALocationPickerController ) { < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > + < nl > + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) { < nl > + Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift < nl > new file mode 100644 < nl > index 0000000 . . 4366550 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift < nl > @ @ - 0 , 0 + 1 , 93 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + public class AALocationPickerController : AAViewController , CLLocationManagerDelegate , MKMapViewDelegate { < nl > + < nl > + public var delegate : AALocationPickerControllerDelegate ? = nil < nl > + < nl > + private let locationManager = CLLocationManager ( ) < nl > + private let map = MKMapView ( ) < nl > + private let pinPoint = AAMapPinPointView ( ) < nl > + < nl > + override public func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + navigationItem . title = " Location " < nl > + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) < nl > + < nl > + updateAuthStatus ( CLLocationManager . authorizationStatus ( ) ) < nl > + < nl > + locationManager . delegate = self < nl > + < nl > + locationManager . requestWhenInUseAuthorization ( ) < nl > + locationManager . startUpdatingLocation ( ) < nl > + < nl > + map . showsUserLocation = true < nl > + map . delegate = self < nl > + < nl > + self . view . addSubview ( map ) < nl > + self . view . addSubview ( pinPoint ) < nl > + } < nl > + < nl > + public func mapView ( mapView : MKMapView , regionWillChangeAnimated animated : Bool ) { < nl > + pinPoint . risePin ( true , animated : animated ) < nl > + } < nl > + < nl > + public func mapView ( mapView : MKMapView , regionDidChangeAnimated animated : Bool ) { < nl > + pinPoint . risePin ( false , animated : animated ) < nl > + } < nl > + < nl > + func cancellDidTap ( ) { < nl > + delegate ? . locationPickerDidCancelled ( self ) < nl > + } < nl > + < nl > + func doneDidTap ( ) { < nl > + delegate ? . locationPickerDidPicked ( self , latitude : map . centerCoordinate . latitude , longitude : map . centerCoordinate . longitude ) < nl > + } < nl > + < nl > + func updateAuthStatus ( status : CLAuthorizationStatus ) { < nl > + if ( status = = CLAuthorizationStatus . Denied ) { < nl > + / / User explictly denied access to maps < nl > + showPlaceholderWithImage ( UIImage . bundled ( " " ) , title : " Enable location " , subtitle : " Enable location services in settings . " ) < nl > + map . hidden = true < nl > + navigationItem . rightBarButtonItem = nil < nl > + } else if ( status = = CLAuthorizationStatus . Restricted | | status = = CLAuthorizationStatus . NotDetermined ) { < nl > + / / App doesn ' t complete auth request < nl > + map . hidden = false < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > + hidePlaceholder ( ) < nl > + } else { < nl > + / / Authorised < nl > + map . hidden = false < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > + hidePlaceholder ( ) < nl > + } < nl > + } < nl > + < nl > + override public func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + map . frame = self . view . bounds < nl > + / / pinPoint . bounds = CGRectMake ( 0 , 0 , 100 , 100 ) < nl > + pinPoint . centerIn ( self . view . bounds ) < nl > + } < nl > + < nl > + public func locationManager ( manager : CLLocationManager , didChangeAuthorizationStatus status : CLAuthorizationStatus ) { < nl > + updateAuthStatus ( status ) < nl > + } < nl > + < nl > + public func locationManager ( manager : CLLocationManager , didUpdateLocations locations : [ CLLocation ] ) { < nl > + let location = locations . first ! < nl > + map . setRegion ( MKCoordinateRegion ( center : location . coordinate , span : MKCoordinateSpanMake ( 0 . 05 , 0 . 05 ) ) , animated : true ) < nl > + locationManager . stopUpdatingLocation ( ) < nl > + } < nl > + } < nl > + < nl > + public protocol AALocationPickerControllerDelegate { < nl > + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) < nl > + func locationPickerDidCancelled ( controller : AALocationPickerController ) < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > deleted file mode 100644 < nl > index f0771bb . . 0000000 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > + + + / dev / null < nl > @ @ - 1 , 41 + 0 , 0 @ @ < nl > - / / < nl > - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > - / / < nl > - < nl > - import Foundation < nl > - import MapKit < nl > - < nl > - class AALocationPickerController : AAViewController { < nl > - < nl > - let locationManager = CLLocationManager ( ) < nl > - let map = MKMapView ( ) < nl > - < nl > - override func viewDidLoad ( ) { < nl > - super . viewDidLoad ( ) < nl > - < nl > - navigationItem . title = " Location " < nl > - navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) < nl > - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) < nl > - < nl > - locationManager . requestWhenInUseAuthorization ( ) < nl > - < nl > - map . showsUserLocation = true < nl > - map . userTrackingMode = MKUserTrackingMode . Follow < nl > - < nl > - self . view . addSubview ( map ) < nl > - } < nl > - < nl > - func cancellDidTap ( ) { < nl > - dismiss ( ) < nl > - } < nl > - < nl > - func doneDidTap ( ) { < nl > - dismiss ( ) < nl > - } < nl > - < nl > - override func viewDidLayoutSubviews ( ) { < nl > - super . viewDidLayoutSubviews ( ) < nl > - < nl > - map . frame = self . view . bounds < nl > - } < nl > - } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > index 3705da0 . . f2c6164 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift < nl > @ @ - 65 , 6 + 65 , 11 @ @ public extension UIView { < nl > public var right : CGFloat { get { return frame . maxX } } < nl > public var top : CGFloat { get { return frame . minY } } < nl > public var bottom : CGFloat { get { return frame . maxY } } < nl > + < nl > + public func centerIn ( rect : CGRect ) { < nl > + self . frame = CGRectMake ( ( rect . width - self . bounds . width ) / 2 , ( rect . height - self . bounds . height ) / 2 , < nl > + self . bounds . width , self . bounds . height ) < nl > + } < nl > } < nl > < nl > / / Text measuring < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift < nl > new file mode 100644 < nl > index 0000000 . . ff92ae3 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift < nl > @ @ - 0 , 0 + 1 , 41 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + public class AAMapPinPointView : UIView { < nl > + < nl > + let pinView = UIImageView ( ) < nl > + let pinPointView = UIImageView ( ) < nl > + let pinShadowView = UIImageView ( ) < nl > + < nl > + public init ( ) { < nl > + super . init ( frame : CGRectMake ( 0 , 0 , 100 , 100 ) ) < nl > + < nl > + pinShadowView . frame = CGRectMake ( 43 , 47 , 32 , 39 ) < nl > + pinShadowView . alpha = 0 . 9 < nl > + pinShadowView . image = UIImage . bundled ( " LocationPinShadow . png " ) < nl > + addSubview ( pinShadowView ) < nl > + < nl > + pinPointView . frame = CGRectMake ( 100 / 2 - 2 , 100 - 18 . 5 , 3 . 5 , 1 . 5 ) < nl > + pinPointView . image = UIImage . bundled ( " LocationPinPoint . png " ) < nl > + addSubview ( pinPointView ) < nl > + < nl > + pinView . frame = CGRectMake ( 100 / 2 - 7 , 47 , 13 . 5 , 36 ) < nl > + pinView . image = UIImage . bundled ( " LocationPin . png " ) < nl > + addSubview ( pinView ) < nl > + } < nl > + < nl > + required public init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func risePin ( rised : Bool , animated : Bool ) { < nl > + if ( rised ) { < nl > + pinView . hidden = true < nl > + } else { < nl > + pinView . hidden = false < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 7a28195 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " ic _ call _ 36pt . png " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " ic _ call _ 36pt @ 2x . png " , 
 + " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " ic _ call _ 36pt @ 3x . png " , 
 + " scale " : " 3x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt . png 
 new file mode 100644 
 index 0000000 . . d4077ac 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 2x . png 
 new file mode 100644 
 index 0000000 . . 7c9d1b0 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 3x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 3x . png 
 new file mode 100644 
 index 0000000 . . 0c736c4 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ 36pt . imageset / ic _ call _ 36pt @ 3x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 67d3348 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " ic _ call _ end _ 36pt . png " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " ic _ call _ end _ 36pt @ 2x . png " , 
 + " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " ic _ call _ end _ 36pt @ 3x . png " , 
 + " scale " : " 3x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt . png 
 new file mode 100644 
 index 0000000 . . 3f193b1 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 2x . png 
 new file mode 100644 
 index 0000000 . . 44794a9 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 3x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 3x . png 
 new file mode 100644 
 index 0000000 . . ab57d90 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / ic _ call _ end _ 36pt . imageset / ic _ call _ end _ 36pt @ 3x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift 
 index 9f218c8 . . 526c01f 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorCore / Providers / iOSCallsProvider . swift 
 @ @ - 7 , 14 + 7 , 16 @ @ import Foundation 
 class iOSCallsProvider : NSObject , ACCallsProvider { 
 
 func onCallStartWithCallId ( callId : jlong ) { 
 - dispatchOnUi ( ) { ( ) - > Void in 
 + dispatchOnUi ( ) { 
 let rootController = ActorSDK . sharedActor ( ) . bindedToWindow . rootViewController ! 
 rootController . presentViewController ( AACallViewController ( callId : callId ) , animated : true , completion : nil ) 
 } 
 } 
 
 func onCallEndWithCallId ( callId : jlong ) { 
 - 
 + dispatchOnUi ( ) { 
 + 
 + } 
 } 
 
 / / private var controller : ACWebRTCController ! 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 index 1584eec . . 7455707 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Calls / AACallViewController . swift 
 @ @ - 10 , 12 + 10 , 11 @ @ public class AACallViewController : AAViewController { 
 public let binder = AABinder ( ) 
 public let callId : jlong 
 public let call : ACCallVM 
 - public let bgImage = UIImageView ( image : UIImage . bundled ( " bg _ 1 . jpg " ) ) 
 - public let bgImageOverlay = UIView ( ) 
 public let senderAvatar : AAAvatarView = AAAvatarView ( frameSize : 120 , type : . Rounded ) 
 public let peerTitle = UILabel ( ) 
 - public let answerCall = UIButton ( frame : CGRectMake ( 0 , 0 , 80 , 80 ) ) 
 - public let declineCall = UIButton ( frame : CGRectMake ( 0 , 0 , 80 , 80 ) ) 
 + public let callState = UILabel ( ) 
 + public let answerCallButton = UIButton ( ) 
 + public let declineCallButton = UIButton ( ) 
 
 public init ( callId : jlong ) { 
 self . callId = callId 
 @ @ - 30 , 48 + 29 , 66 @ @ public class AACallViewController : AAViewController { 
 public override func viewDidLoad ( ) { 
 super . viewDidLoad ( ) 
 
 - answerCall . backgroundColor = UIColor . greenColor ( ) 
 - answerCall . setTitle ( " Answer " , forState : . Normal ) 
 - answerCall . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) 
 - answerCall . viewDidTap = { 
 + / / 
 + / / Buttons 
 + / / 
 + answerCallButton . setImage ( UIImage . bundled ( " ic _ call _ 36pt " ) ! . tintImage ( UIColor . whiteColor ( ) ) , forState : . Normal ) 
 + answerCallButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( rgb : 0x54dd64 ) , size : CGSizeMake ( 72 , 72 ) , radius : 36 ) , forState : . Normal ) 
 + answerCallButton . viewDidTap = { 
 Actor . answerCallWithCallId ( self . callId ) 
 - / / self . navigateDetail ( ConversationViewController ( peer : self . call . peer ) ) 
 - / / self . dismiss ( ) 
 } 
 
 - declineCall . backgroundColor = UIColor . redColor ( ) 
 - declineCall . setTitle ( " End Call " , forState : . Normal ) 
 - declineCall . setTitleColor ( UIColor . whiteColor ( ) , forState : . Normal ) 
 - declineCall . viewDidTap = { 
 + declineCallButton . setImage ( UIImage . bundled ( " ic _ call _ end _ 36pt " ) ! . tintImage ( UIColor . whiteColor ( ) ) , forState : . Normal ) 
 + declineCallButton . setBackgroundImage ( Imaging . roundedImage ( UIColor ( rgb : 0xfc2c31 ) , size : CGSizeMake ( 72 , 72 ) , radius : 36 ) , forState : . Normal ) 
 + declineCallButton . viewDidTap = { 
 Actor . endCallWithCallId ( self . callId ) 
 - self . navigateDetail ( ConversationViewController ( peer : self . call . peer ) ) 
 self . dismiss ( ) 
 } 
 
 - bgImage . contentMode = UIViewContentMode . ScaleAspectFill 
 - bgImageOverlay . opaque = false 
 - bgImageOverlay . backgroundColor = UIColor ( rgb : 0x86aed7 ) 
 - peerTitle . textColor = UIColor . whiteColor ( ) 
 + / / 
 + / / Peer Info 
 + / / 
 + 
 + peerTitle . textColor = ActorSDK . sharedActor ( ) . style . vcTextColor 
 peerTitle . textAlignment = NSTextAlignment . Center 
 peerTitle . font = UIFont . thinSystemFontOfSize ( 32 ) 
 
 - self . view . addSubview ( bgImage ) 
 - self . view . addSubview ( bgImageOverlay ) 
 + callState . textColor = ActorSDK . sharedActor ( ) . style . vcHintColor 
 + callState . textAlignment = NSTextAlignment . Center 
 + callState . font = UIFont . thinSystemFontOfSize ( 32 ) 
 + 
 + self . view . backgroundColor = UIColor . whiteColor ( ) 
 + 
 self . view . addSubview ( senderAvatar ) 
 self . view . addSubview ( peerTitle ) 
 - self . view . addSubview ( answerCall ) 
 + self . view . addSubview ( callState ) 
 + self . view . addSubview ( answerCallButton ) 
 + self . view . addSubview ( declineCallButton ) 
 } 
 
 public override func viewWillLayoutSubviews ( ) { 
 super . viewWillLayoutSubviews ( ) 
 
 - bgImage . frame = self . view . bounds 
 - bgImageOverlay . frame = self . view . bounds 
 - 
 - senderAvatar . frame = CGRectMake ( ( self . view . width - 120 ) / 2 , 100 , 120 , 120 ) 
 + senderAvatar . frame = CGRectMake ( ( self . view . width - 90 ) / 2 , 100 , 90 , 90 ) 
 peerTitle . frame = CGRectMake ( 60 , senderAvatar . bottom + 20 , view . width - 120 , 34 ) 
 - answerCall . frame = CGRectMake ( 0 , self . view . height - 48 , self . view . width , 48 ) 
 - declineCall . frame = CGRectMake ( 0 , self . view . height - 48 - 48 , self . view . width , 48 ) 
 + callState . frame = CGRectMake ( 60 , peerTitle . bottom + 20 , view . width - 120 , 34 ) 
 + 
 + layoutButtons ( ) 
 + } 
 + 
 + private func layoutButtons ( ) { 
 + if ! declineCallButton . hidden | | ! answerCallButton . hidden { 
 + if ! declineCallButton . hidden & & ! answerCallButton . hidden { 
 + 
 + } else { 
 + if ! answerCallButton . hidden { 
 + answerCallButton . frame = CGRectMake ( ( self . view . width - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) 
 + } 
 + if ! declineCallButton . hidden { 
 + declineCallButton . frame = CGRectMake ( ( self . view . width - 72 ) / 2 , self . view . height - 96 , 72 , 72 ) 
 + } 
 + } 
 + } 
 } 
 
 public override func viewWillAppear ( animated : Bool ) { 
 @ @ - 82 , 44 + 99 , 30 @ @ public class AACallViewController : AAViewController { 
 / / 
 binder . bind ( call . state ) { ( value : ACCallState ! ) - > ( ) in 
 if ( ACCallState _ Enum . CALLING _ INCOMING = = value . toNSEnum ( ) ) { 
 - self . answerCall . hidden = false 
 - self . declineCall . hidden = false 
 + self . answerCallButton . hidden = false 
 + self . declineCallButton . hidden = false 
 + self . callState . text = " Incoming call . . . " 
 + self . layoutButtons ( ) 
 } else if ( ACCallState _ Enum . IN _ PROGRESS = = value . toNSEnum ( ) ) { 
 - self . answerCall . hidden = true 
 - self . declineCall . hidden = false 
 + self . answerCallButton . hidden = true 
 + self . declineCallButton . hidden = false 
 + self . callState . text = " 0 : 00 " 
 + self . layoutButtons ( ) 
 } else if ( ACCallState _ Enum . CALLING _ OUTGOING = = value . toNSEnum ( ) ) { 
 - self . answerCall . hidden = true 
 - self . declineCall . hidden = false 
 + self . answerCallButton . hidden = true 
 + self . declineCallButton . hidden = false 
 + self . callState . text = " Ringing . . . " 
 + self . layoutButtons ( ) 
 } else if ( ACCallState _ Enum . ENDED = = value . toNSEnum ( ) ) { 
 - self . answerCall . hidden = false 
 - self . declineCall . hidden = false 
 - } else { 
 - self . answerCall . hidden = false 
 - self . declineCall . hidden = false 
 - } 
 - } 
 - 
 - / / 
 - / / Binding Avatar 
 - / / 
 - binder . bind ( call . members ) { ( value : JavaUtilArrayList ! ) - > ( ) in 
 - 
 - print ( " Bind user " ) 
 - 
 - var users = [ ACUserVM ] ( ) 
 - for i in 0 . . < value . size ( ) { 
 - let uid = ( value . getWithInt ( i ) as ! ACCallMember ) . uid 
 - if ( uid ! = Actor . myUid ( ) ) { 
 - users . append ( Actor . getUserWithUid ( uid ) ) 
 - } 
 - } 
 - 
 - print ( " Bind user \ ( users . count ) " ) 
 - 
 - if ( users . count = = 1 ) { 
 - self . senderAvatar . bind ( users [ 0 ] . getNameModel ( ) . get ( ) , id : users [ 0 ] . getId ( ) , avatar : users [ 0 ] . getAvatarModel ( ) . get ( ) ) 
 + self . answerCallButton . hidden = false 
 + self . declineCallButton . hidden = false 
 + self . callState . text = " Call Ended " 
 + self . layoutButtons ( ) 
 } else { 
 - / / TODO : Multiple Users 
 + self . answerCallButton . hidden = false 
 + self . declineCallButton . hidden = false 
 + self . callState . text = " " 
 + self . layoutButtons ( ) 
 } 
 } 
 
 @ @ - 127 , 22 + 130 , 26 @ @ public class AACallViewController : AAViewController { 
 / / Binding Title 
 / / 
 if ( call . peer . peerType . toNSEnum ( ) = = ACPeerType _ Enum . PRIVATE ) { 
 - binder . bind ( Actor . getUserWithUid ( call . peer . peerId ) . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in 
 + let user = Actor . getUserWithUid ( call . peer . peerId ) 
 + binder . bind ( user . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in 
 self . peerTitle . text = value 
 } ) 
 + binder . bind ( user . getAvatarModel ( ) , closure : { ( value : ACAvatar ! ) - > ( ) in 
 + self . senderAvatar . bind ( user . getNameModel ( ) . get ( ) , id : user . getId ( ) , avatar : value ) 
 + } ) 
 } else if ( call . peer . peerType . toNSEnum ( ) = = ACPeerType _ Enum . GROUP ) { 
 - binder . bind ( Actor . getGroupWithGid ( call . peer . peerId ) . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in 
 + let group = Actor . getGroupWithGid ( call . peer . peerId ) 
 + binder . bind ( group . getNameModel ( ) , closure : { ( value : String ! ) - > ( ) in 
 self . peerTitle . text = value 
 } ) 
 + binder . bind ( group . getAvatarModel ( ) , closure : { ( value : ACAvatar ! ) - > ( ) in 
 + self . senderAvatar . bind ( group . getNameModel ( ) . get ( ) , id : group . getId ( ) , avatar : value ) 
 + } ) 
 } 
 - 
 - UIApplication . sharedApplication ( ) . setStatusBarStyle ( . LightContent , animated : true ) 
 } 
 
 public override func viewWillDisappear ( animated : Bool ) { 
 super . viewWillDisappear ( animated ) 
 binder . unbindAll ( ) 
 - 
 - UIApplication . sharedApplication ( ) . setStatusBarStyle ( ActorSDK . sharedActor ( ) . style . vcStatusBarStyle , animated : true ) 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 070bda1 . . 702e352 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 171 , 7 + 171 , 7 @ @ public class CallManagerActor extends ModuleActor { 
 } 
 
 private void doAnswerCall ( final long callId ) { 
 - Log . d ( TAG , " onIncomingCall ( " + callId + " ) " ) ; 
 + Log . d ( TAG , " doAnswerCall ( " + callId + " ) " ) ; 
 
 / / If not already answered 
 if ( ! answeredCalls . contains ( callId ) ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java 
 index 0711a6d . . 8ef9859 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallSlaveActor . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import im . actor . core . api . ApiSwitchMaster ; 
 import im . actor . core . api . ApiWebRTCSignaling ; 
 import im . actor . core . api . rpc . RequestGetCallInfo ; 
 import im . actor . core . api . rpc . ResponseGetCallInfo ; 
 + import im . actor . core . entity . Peer ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . viewmodel . CallMember ; 
 import im . actor . core . viewmodel . CallState ; 
 @ @ - 22 , 6 + 23 , 7 @ @ public class CallSlaveActor extends CallActor { 
 private MasterNode masterNode ; 
 private boolean isAnswerPending = false ; 
 private long callId ; 
 + private Peer peer ; 
 
 public CallSlaveActor ( long callId , ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 35 , 9 + 37 , 7 @ @ public class CallSlaveActor extends CallActor { 
 api ( new RequestGetCallInfo ( callId ) ) . then ( new Consumer < ResponseGetCallInfo > ( ) { 
 @ Override 
 public void apply ( final ResponseGetCallInfo responseGetCallInfo ) { 
 - spawnNewVM ( callId , convert ( responseGetCallInfo . getPeer ( ) ) , 
 - new ArrayList < CallMember > ( ) , CallState . CALLING _ INCOMING ) ; 
 - callManager . send ( new CallManagerActor . IncomingCallReady ( callId ) , self ( ) ) ; 
 + peer = convert ( responseGetCallInfo . getPeer ( ) ) ; 
 joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; 
 } 
 } ) . failure ( new Consumer < Exception > ( ) { 
 @ @ - 48 , 6 + 48 , 13 @ @ public class CallSlaveActor extends CallActor { 
 } ) . done ( self ( ) ) ; 
 } 
 
 + @ Override 
 + public void onBusStarted ( ) { 
 + super . onBusStarted ( ) ; 
 + spawnNewVM ( callId , peer , new ArrayList < CallMember > ( ) , CallState . CALLING _ INCOMING ) ; 
 + callManager . send ( new CallManagerActor . IncomingCallReady ( callId ) , self ( ) ) ; 
 + } 
 + 
 public void onMasterNodeChanged ( int fromUid , long fromDeviceId ) { 
 masterNode = new MasterNode ( fromUid , fromDeviceId ) ; 
 if ( isAnswerPending ) { 
 @ @ - 55 , 7 + 62 , 7 @ @ public class CallSlaveActor extends CallActor { 
 sendSignalingMessage ( masterNode . getUid ( ) , masterNode . getDeviceId ( ) , new ApiAnswerCall ( ) ) ; 
 } 
 
 - schedule ( new DoAnswer ( ) , 5000 ) ; 
 + / / schedule ( new DoAnswer ( ) , 5000 ) ; 
 } 
 
 public void onNeedOffer ( int destUid , long destDeviceId ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index f26bdd0 . . 5fc91d4 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 172 , 9 + 172 , 10 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 - 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; 
 + 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / ; } ; 
 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 + 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 350 , 9 + 351 , 10 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 - 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AALocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapPinPointView . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 537 , 6 + 539 , 7 @ @ 
 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , 
 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , 
 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , 
 + 	 	 	 	 06E7B2511C1345E70090660C / * AAMapPinPointView . swift * / , 
 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , 
 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , 
 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , 
 @ @ - 890 , 7 + 893 , 7 @ @ 
 	 	 06E7B2451C0F8D410090660C / * Location * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 - 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , 
 + 	 	 	 	 06E7B2461C0F8D7A0090660C / * AALocationPickerController . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Location ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1124 , 7 + 1127 , 7 @ @ 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 - 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , 
 + 	 	 	 	 06E7B2471C0F8D7A0090660C / * AALocationPickerController . swift in Sources * / , 
 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , 
 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , 
 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , 
 @ @ - 1171 , 6 + 1174 , 7 @ @ 
 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , 
 	 	 	 	 066A52281BC4EEAC000E606E / * AAManagedTableController . swift in Sources * / , 
 	 	 	 	 065975541BC7DF5100B8C7DF / * CocoaAssetsRuntime . swift in Sources * / , 
 + 	 	 	 	 06E7B2521C1345E70090660C / * AAMapPinPointView . swift in Sources * / , 
 	 	 	 	 066A53121BC53317000E606E / * AAPhotoPreviewController . swift in Sources * / , 
 	 	 	 	 066A52391BC4EEBA000E606E / * AAEditCell . swift in Sources * / , 
 	 	 	 	 066A526D1BC50E8B000E606E / * AAAuthCountryCell . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 index 3f92572 . . e9b740d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 @ @ - 2 , 8 + 2 , 16 @ @ 
 " images " : [ 
 { 
 " idiom " : " universal " , 
 + " scale " : " 1x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 " filename " : " LocationPin @ 2x . png " , 
 " scale " : " 2x " 
 + } , 
 + { 
 + " idiom " : " universal " , 
 + " scale " : " 3x " 
 } 
 ] , 
 " info " : { 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 41ae8d7 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPinPoint @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png 
 new file mode 100644 
 index 0000000 . . 7584de8 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinPoint . imageset / LocationPinPoint @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 0bd0b69 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPinShadow @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png 
 new file mode 100644 
 index 0000000 . . 3bc04a4 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPinShadow . imageset / LocationPinShadow @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 index 1c539ce . . 79edd4d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 119 , 11 + 119 , 12 @ @ public class AABubbleLocationCell : AABubbleCell { 
 
 public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 let insets = fullContentInsets 
 + let contentWidth = self . contentView . frame . width 
 
 layoutBubble ( mapWidth , contentHeight : mapHeight ) 
 
 if isOut { 
 - map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 + map . frame = CGRectMake ( contentWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 } else { 
 map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 8d0cdcc . . 52a8665 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 6 , 7 + 6 , 7 @ @ import Foundation 
 import UIKit 
 import MobileCoreServices 
 
 - class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate { 
 + class ConversationViewController : AAConversationContentController , UIDocumentMenuDelegate , UIDocumentPickerDelegate , UIImagePickerControllerDelegate , UINavigationControllerDelegate , AALocationPickerControllerDelegate { 
 
 / / Data binder 
 private let binder = AABinder ( ) 
 @ @ - 462 , 6 + 462 , 17 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 / / Location picking 
 
 func pickLocation ( ) { 
 - self . presentViewController ( AANavigationController ( rootViewController : AALocationPickerController ( ) ) , animated : true , completion : nil ) 
 + let pickerController = AALocationPickerController ( ) 
 + pickerController . delegate = self 
 + self . presentViewController ( AANavigationController ( rootViewController : pickerController ) , animated : true , completion : nil ) 
 + } 
 + 
 + func locationPickerDidCancelled ( controller : AALocationPickerController ) { 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 + 
 + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) { 
 + Actor . sendLocationWithPeer ( self . peer , withLongitude : JavaLangDouble ( double : longitude ) , withLatitude : JavaLangDouble ( double : latitude ) , withStreet : nil , withPlace : nil ) 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift 
 new file mode 100644 
 index 0000000 . . 4366550 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / AALocationPickerController . swift 
 @ @ - 0 , 0 + 1 , 93 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + public class AALocationPickerController : AAViewController , CLLocationManagerDelegate , MKMapViewDelegate { 
 + 
 + public var delegate : AALocationPickerControllerDelegate ? = nil 
 + 
 + private let locationManager = CLLocationManager ( ) 
 + private let map = MKMapView ( ) 
 + private let pinPoint = AAMapPinPointView ( ) 
 + 
 + override public func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + navigationItem . title = " Location " 
 + navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) 
 + 
 + updateAuthStatus ( CLLocationManager . authorizationStatus ( ) ) 
 + 
 + locationManager . delegate = self 
 + 
 + locationManager . requestWhenInUseAuthorization ( ) 
 + locationManager . startUpdatingLocation ( ) 
 + 
 + map . showsUserLocation = true 
 + map . delegate = self 
 + 
 + self . view . addSubview ( map ) 
 + self . view . addSubview ( pinPoint ) 
 + } 
 + 
 + public func mapView ( mapView : MKMapView , regionWillChangeAnimated animated : Bool ) { 
 + pinPoint . risePin ( true , animated : animated ) 
 + } 
 + 
 + public func mapView ( mapView : MKMapView , regionDidChangeAnimated animated : Bool ) { 
 + pinPoint . risePin ( false , animated : animated ) 
 + } 
 + 
 + func cancellDidTap ( ) { 
 + delegate ? . locationPickerDidCancelled ( self ) 
 + } 
 + 
 + func doneDidTap ( ) { 
 + delegate ? . locationPickerDidPicked ( self , latitude : map . centerCoordinate . latitude , longitude : map . centerCoordinate . longitude ) 
 + } 
 + 
 + func updateAuthStatus ( status : CLAuthorizationStatus ) { 
 + if ( status = = CLAuthorizationStatus . Denied ) { 
 + / / User explictly denied access to maps 
 + showPlaceholderWithImage ( UIImage . bundled ( " " ) , title : " Enable location " , subtitle : " Enable location services in settings . " ) 
 + map . hidden = true 
 + navigationItem . rightBarButtonItem = nil 
 + } else if ( status = = CLAuthorizationStatus . Restricted | | status = = CLAuthorizationStatus . NotDetermined ) { 
 + / / App doesn ' t complete auth request 
 + map . hidden = false 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 + hidePlaceholder ( ) 
 + } else { 
 + / / Authorised 
 + map . hidden = false 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 + hidePlaceholder ( ) 
 + } 
 + } 
 + 
 + override public func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + map . frame = self . view . bounds 
 + / / pinPoint . bounds = CGRectMake ( 0 , 0 , 100 , 100 ) 
 + pinPoint . centerIn ( self . view . bounds ) 
 + } 
 + 
 + public func locationManager ( manager : CLLocationManager , didChangeAuthorizationStatus status : CLAuthorizationStatus ) { 
 + updateAuthStatus ( status ) 
 + } 
 + 
 + public func locationManager ( manager : CLLocationManager , didUpdateLocations locations : [ CLLocation ] ) { 
 + let location = locations . first ! 
 + map . setRegion ( MKCoordinateRegion ( center : location . coordinate , span : MKCoordinateSpanMake ( 0 . 05 , 0 . 05 ) ) , animated : true ) 
 + locationManager . stopUpdatingLocation ( ) 
 + } 
 + } 
 + 
 + public protocol AALocationPickerControllerDelegate { 
 + func locationPickerDidPicked ( controller : AALocationPickerController , latitude : Double , longitude : Double ) 
 + func locationPickerDidCancelled ( controller : AALocationPickerController ) 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 deleted file mode 100644 
 index f0771bb . . 0000000 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 + + + / dev / null 
 @ @ - 1 , 41 + 0 , 0 @ @ 
 - / / 
 - / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 - / / 
 - 
 - import Foundation 
 - import MapKit 
 - 
 - class AALocationPickerController : AAViewController { 
 - 
 - let locationManager = CLLocationManager ( ) 
 - let map = MKMapView ( ) 
 - 
 - override func viewDidLoad ( ) { 
 - super . viewDidLoad ( ) 
 - 
 - navigationItem . title = " Location " 
 - navigationItem . leftBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationCancel " ) , style : . Plain , target : self , action : " cancellDidTap " ) 
 - navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationDone " ) , style : . Done , target : self , action : " doneDidTap " ) 
 - 
 - locationManager . requestWhenInUseAuthorization ( ) 
 - 
 - map . showsUserLocation = true 
 - map . userTrackingMode = MKUserTrackingMode . Follow 
 - 
 - self . view . addSubview ( map ) 
 - } 
 - 
 - func cancellDidTap ( ) { 
 - dismiss ( ) 
 - } 
 - 
 - func doneDidTap ( ) { 
 - dismiss ( ) 
 - } 
 - 
 - override func viewDidLayoutSubviews ( ) { 
 - super . viewDidLayoutSubviews ( ) 
 - 
 - map . frame = self . view . bounds 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 index 3705da0 . . f2c6164 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / SwiftExtensions / Views . swift 
 @ @ - 65 , 6 + 65 , 11 @ @ public extension UIView { 
 public var right : CGFloat { get { return frame . maxX } } 
 public var top : CGFloat { get { return frame . minY } } 
 public var bottom : CGFloat { get { return frame . maxY } } 
 + 
 + public func centerIn ( rect : CGRect ) { 
 + self . frame = CGRectMake ( ( rect . width - self . bounds . width ) / 2 , ( rect . height - self . bounds . height ) / 2 , 
 + self . bounds . width , self . bounds . height ) 
 + } 
 } 
 
 / / Text measuring 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift 
 new file mode 100644 
 index 0000000 . . ff92ae3 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapPinPointView . swift 
 @ @ - 0 , 0 + 1 , 41 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + public class AAMapPinPointView : UIView { 
 + 
 + let pinView = UIImageView ( ) 
 + let pinPointView = UIImageView ( ) 
 + let pinShadowView = UIImageView ( ) 
 + 
 + public init ( ) { 
 + super . init ( frame : CGRectMake ( 0 , 0 , 100 , 100 ) ) 
 + 
 + pinShadowView . frame = CGRectMake ( 43 , 47 , 32 , 39 ) 
 + pinShadowView . alpha = 0 . 9 
 + pinShadowView . image = UIImage . bundled ( " LocationPinShadow . png " ) 
 + addSubview ( pinShadowView ) 
 + 
 + pinPointView . frame = CGRectMake ( 100 / 2 - 2 , 100 - 18 . 5 , 3 . 5 , 1 . 5 ) 
 + pinPointView . image = UIImage . bundled ( " LocationPinPoint . png " ) 
 + addSubview ( pinPointView ) 
 + 
 + pinView . frame = CGRectMake ( 100 / 2 - 7 , 47 , 13 . 5 , 36 ) 
 + pinView . image = UIImage . bundled ( " LocationPin . png " ) 
 + addSubview ( pinView ) 
 + } 
 + 
 + required public init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func risePin ( rised : Bool , animated : Bool ) { 
 + if ( rised ) { 
 + pinView . hidden = true 
 + } else { 
 + pinView . hidden = false 
 + } 
 + } 
 + } 
 \ No newline at end of file
