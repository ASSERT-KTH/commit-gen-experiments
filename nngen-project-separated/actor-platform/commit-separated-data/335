BLEU SCORE: 0.317023313852343

TEST MSG: fix ( android ) : push receiver wait for messenger is ready
GENERATED MSG: fix ( android ) : set AndroidContext before onConfigureActorSDK

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java < nl > index 9344c7a . . a002f0f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java < nl > + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java < nl > @ @ - 22 , 6 + 22 , 7 @ @ public class PushReceiver extends WakefulBroadcastReceiver { < nl > String messageType = gcm . getMessageType ( intent ) ; < nl > if ( ! extras . isEmpty ( ) ) { < nl > if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > + ActorSDK . sharedActor ( ) . waitForReady ( ) ; < nl > if ( extras . containsKey ( " seq " ) ) { < nl > int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > Log . d ( TAG , " Push received # " + seq ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 5c374a8 . . 3e5a5b8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 220 , 7 + 220 , 6 @ @ public class ActorSDK { < nl > . setDownsampleEnabled ( true ) < nl > . build ( ) ; < nl > Fresco . initialize ( application , config ) ; < nl > - AndroidContext . setContext ( application ) ; < nl > / / TODO : Replace < nl > new SmileProcessor ( application ) . loadEmoji ( ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > index 55aba69 . . 4e9b398 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java < nl > @ @ - 3 , 6 + 3 , 8 @ @ package im . actor . sdk ; < nl > import android . app . ActivityManager ; < nl > import android . app . Application ; < nl > < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + < nl > / * * < nl > * Implementation of Application object that handles everything required for creating and < nl > * managing Actor SDK < nl > @ @ - 24 , 6 + 26 , 7 @ @ public class ActorSDKApplication extends Application { < nl > < nl > / / Protection on double start < nl > if ( ! myProcessName . endsWith ( " : actor _ push " ) ) { < nl > + AndroidContext . setContext ( this ) ; < nl > onConfigureActorSDK ( ) ; < nl > ActorSDK . sharedActor ( ) . createActor ( this ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java 
 index 9344c7a . . a002f0f 100644 
 - - - a / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java 
 + + + b / actor - sdk / sdk - core - android / android - google - push / src / main / java / im / actor / push / PushReceiver . java 
 @ @ - 22 , 6 + 22 , 7 @ @ public class PushReceiver extends WakefulBroadcastReceiver { 
 String messageType = gcm . getMessageType ( intent ) ; 
 if ( ! extras . isEmpty ( ) ) { 
 if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 + ActorSDK . sharedActor ( ) . waitForReady ( ) ; 
 if ( extras . containsKey ( " seq " ) ) { 
 int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 Log . d ( TAG , " Push received # " + seq ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 5c374a8 . . 3e5a5b8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 220 , 7 + 220 , 6 @ @ public class ActorSDK { 
 . setDownsampleEnabled ( true ) 
 . build ( ) ; 
 Fresco . initialize ( application , config ) ; 
 - AndroidContext . setContext ( application ) ; 
 / / TODO : Replace 
 new SmileProcessor ( application ) . loadEmoji ( ) ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 index 55aba69 . . 4e9b398 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKApplication . java 
 @ @ - 3 , 6 + 3 , 8 @ @ package im . actor . sdk ; 
 import android . app . ActivityManager ; 
 import android . app . Application ; 
 
 + import im . actor . runtime . android . AndroidContext ; 
 + 
 / * * 
 * Implementation of Application object that handles everything required for creating and 
 * managing Actor SDK 
 @ @ - 24 , 6 + 26 , 7 @ @ public class ActorSDKApplication extends Application { 
 
 / / Protection on double start 
 if ( ! myProcessName . endsWith ( " : actor _ push " ) ) { 
 + AndroidContext . setContext ( this ) ; 
 onConfigureActorSDK ( ) ; 
 ActorSDK . sharedActor ( ) . createActor ( this ) ; 
 }
