BLEU SCORE: 0.2626909894424158

TEST MSG: design ( android ) : async members list progress view
GENERATED MSG: feat ( android ) : add / remove reactions

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > index 417b13b . . 6058d95 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > @ @ - 157 , 7 + 157 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > break ; < nl > case LOGGED _ IN : < nl > finish ( ) ; < nl > - ActorSDK . sharedActor ( ) . startMessagingApp ( this ) ; < nl > + ActorSDK . sharedActor ( ) . startAfterLoginActivity ( this ) ; < nl > break ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java < nl > index 5526042 . . 38ba163 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java < nl > @ @ - 8 , 6 + 8 , 7 @ @ import android . view . LayoutInflater ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > import android . widget . AdapterView ; < nl > + import android . widget . FrameLayout ; < nl > import android . widget . LinearLayout ; < nl > import android . widget . TextView ; < nl > < nl > @ @ - 32 , 6 + 33 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; < nl > public class MembersFragment extends BaseFragment { < nl > < nl > protected CircularProgressBar progressView ; < nl > + private LinearLayout footer ; < nl > < nl > public static MembersFragment create ( int groupId ) { < nl > MembersFragment res = new MembersFragment ( ) ; < nl > @ @ - 101 , 6 + 103 , 18 @ @ public class MembersFragment extends BaseFragment { < nl > } < nl > } < nl > < nl > + footer = new LinearLayout ( getActivity ( ) ) ; < nl > + list . addFooterView ( footer ) ; < nl > + CircularProgressBar botProgressView = new CircularProgressBar ( getActivity ( ) ) ; < nl > + int padding = Screen . dp ( 16 ) ; < nl > + botProgressView . setPadding ( padding , padding , padding , padding ) ; < nl > + botProgressView . setIndeterminate ( true ) ; < nl > + FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( Screen . dp ( 72 ) , Screen . dp ( 72 ) ) ; < nl > + params . gravity = Gravity . CENTER ; < nl > + FrameLayout cont = new FrameLayout ( getActivity ( ) ) ; < nl > + cont . addView ( botProgressView , params ) ; < nl > + footer . addView ( cont , ViewGroup . LayoutParams . MATCH _ PARENT , ViewGroup . LayoutParams . MATCH _ PARENT ) ; < nl > + < nl > list . setAdapter ( adapter ) ; < nl > list . setOnItemClickListener ( ( parent , view , position , id ) - > { < nl > Object item = parent . getItemAtPosition ( position ) ; < nl > @ @ - 142 , 7 + 156 , 17 @ @ public class MembersFragment extends BaseFragment { < nl > @ Override < nl > public void onResume ( ) { < nl > super . onResume ( ) ; < nl > - adapter . initLoad ( ( ) - > hideView ( progressView ) ) ; < nl > + adapter . initLoad ( new MembersAdapter . LoadedCallback ( ) { < nl > + @ Override < nl > + public void onLoaded ( ) { < nl > + hideView ( progressView ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onLoadedToEnd ( ) { < nl > + footer . setVisibility ( View . INVISIBLE ) ; < nl > + } < nl > + } ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java < nl > index 71765dc . . 40276b3 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java < nl > @ @ - 105 , 6 + 105 , 8 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { < nl > < nl > public interface LoadedCallback { < nl > void onLoaded ( ) ; < nl > + < nl > + void onLoadedToEnd ( ) ; < nl > } < nl > < nl > private void loadMore ( ) { < nl > @ @ - 119 , 6 + 121 , 9 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { < nl > } < nl > nextMembers = groupMembersSlice . getNext ( ) ; < nl > loaddedToEnd = nextMembers = = null ; < nl > + if ( loaddedToEnd & & callback ! = null ) { < nl > + callback . onLoadedToEnd ( ) ; < nl > + } < nl > loadInProgress = false ; < nl > setMembers ( groupMembersSlice . getMembers ( ) , false , false ) ; < nl > } ) ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > index 692b43e . . 40e59cf 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java < nl > @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { < nl > < nl > private static final String TAG = " LinearLayoutManager " ; < nl > < nl > - private static final boolean DEBUG = true ; < nl > + private static final boolean DEBUG = false ; < nl > < nl > public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 7c42967 . . f8ee6ef 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > break ; < nl > } < nl > } < nl > - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; < nl > reactions = builder . append ( s ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > new file mode 100644 < nl > index 0000000 . . abfa92c < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java < nl > @ @ - 0 , 0 + 1 , 66 @ @ < nl > + package im . actor . sdk . controllers . conversation . messages ; < nl > + < nl > + import android . graphics . Color ; < nl > + import android . graphics . Typeface ; < nl > + import android . text . TextPaint ; < nl > + import android . view . View ; < nl > + < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . android . AndroidContext ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + import im . actor . sdk . R ; < nl > + import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . view . BaseUrlSpan ; < nl > + < nl > + public class ReactionSpan extends BaseUrlSpan { < nl > + < nl > + boolean hasMyReaction ; < nl > + Peer peer ; < nl > + long rid ; < nl > + String code ; < nl > + < nl > + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { < nl > + super ( code , false ) ; < nl > + this . code = code ; < nl > + this . hasMyReaction = hasMyReaction ; < nl > + this . peer = peer ; < nl > + this . rid = rid ; < nl > + } < nl > + < nl > + @ Override < nl > + public void updateDrawState ( TextPaint ds ) { < nl > + super . updateDrawState ( ds ) ; < nl > + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; < nl > + ds . setUnderlineText ( false ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onClick ( View widget ) { < nl > + if ( hasMyReaction ) { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } else { < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { < nl > + @ Override < nl > + public void onResult ( Boolean res ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( Exception e ) { < nl > + < nl > + } < nl > + } ) ; < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > index 1a7465a . . 1c0ce2f 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java < nl > @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { < nl > timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; < nl > } < nl > time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; < nl > - < nl > - < nl > + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; < nl > } < nl > < nl > class CustomLinkMovementMethod extends LinkMovementMethod {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 index 417b13b . . 6058d95 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 @ @ - 157 , 7 + 157 , 7 @ @ public class AuthActivity extends BaseFragmentActivity { 
 break ; 
 case LOGGED _ IN : 
 finish ( ) ; 
 - ActorSDK . sharedActor ( ) . startMessagingApp ( this ) ; 
 + ActorSDK . sharedActor ( ) . startAfterLoginActivity ( this ) ; 
 break ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java 
 index 5526042 . . 38ba163 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / MembersFragment . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 import android . widget . AdapterView ; 
 + import android . widget . FrameLayout ; 
 import android . widget . LinearLayout ; 
 import android . widget . TextView ; 
 
 @ @ - 32 , 6 + 33 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . users ; 
 public class MembersFragment extends BaseFragment { 
 
 protected CircularProgressBar progressView ; 
 + private LinearLayout footer ; 
 
 public static MembersFragment create ( int groupId ) { 
 MembersFragment res = new MembersFragment ( ) ; 
 @ @ - 101 , 6 + 103 , 18 @ @ public class MembersFragment extends BaseFragment { 
 } 
 } 
 
 + footer = new LinearLayout ( getActivity ( ) ) ; 
 + list . addFooterView ( footer ) ; 
 + CircularProgressBar botProgressView = new CircularProgressBar ( getActivity ( ) ) ; 
 + int padding = Screen . dp ( 16 ) ; 
 + botProgressView . setPadding ( padding , padding , padding , padding ) ; 
 + botProgressView . setIndeterminate ( true ) ; 
 + FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( Screen . dp ( 72 ) , Screen . dp ( 72 ) ) ; 
 + params . gravity = Gravity . CENTER ; 
 + FrameLayout cont = new FrameLayout ( getActivity ( ) ) ; 
 + cont . addView ( botProgressView , params ) ; 
 + footer . addView ( cont , ViewGroup . LayoutParams . MATCH _ PARENT , ViewGroup . LayoutParams . MATCH _ PARENT ) ; 
 + 
 list . setAdapter ( adapter ) ; 
 list . setOnItemClickListener ( ( parent , view , position , id ) - > { 
 Object item = parent . getItemAtPosition ( position ) ; 
 @ @ - 142 , 7 + 156 , 17 @ @ public class MembersFragment extends BaseFragment { 
 @ Override 
 public void onResume ( ) { 
 super . onResume ( ) ; 
 - adapter . initLoad ( ( ) - > hideView ( progressView ) ) ; 
 + adapter . initLoad ( new MembersAdapter . LoadedCallback ( ) { 
 + @ Override 
 + public void onLoaded ( ) { 
 + hideView ( progressView ) ; 
 + } 
 + 
 + @ Override 
 + public void onLoadedToEnd ( ) { 
 + footer . setVisibility ( View . INVISIBLE ) ; 
 + } 
 + } ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java 
 index 71765dc . . 40276b3 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / group / view / MembersAdapter . java 
 @ @ - 105 , 6 + 105 , 8 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { 
 
 public interface LoadedCallback { 
 void onLoaded ( ) ; 
 + 
 + void onLoadedToEnd ( ) ; 
 } 
 
 private void loadMore ( ) { 
 @ @ - 119 , 6 + 121 , 9 @ @ public class MembersAdapter extends HolderAdapter < GroupMember > { 
 } 
 nextMembers = groupMembersSlice . getNext ( ) ; 
 loaddedToEnd = nextMembers = = null ; 
 + if ( loaddedToEnd & & callback ! = null ) { 
 + callback . onLoadedToEnd ( ) ; 
 + } 
 loadInProgress = false ; 
 setMembers ( groupMembersSlice . getMembers ( ) , false , false ) ; 
 } ) ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 index 692b43e . . 40e59cf 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / android / support / v7 / widget / ChatLinearLayoutManager . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class ChatLinearLayoutManager extends RecyclerView . LayoutManager { 
 
 private static final String TAG = " LinearLayoutManager " ; 
 
 - private static final boolean DEBUG = true ; 
 + private static final boolean DEBUG = false ; 
 
 public static final int HORIZONTAL = OrientationHelper . HORIZONTAL ; 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 7c42967 . . f8ee6ef 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 114 , 7 + 114 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 break ; 
 } 
 } 
 - s . setSpan ( new ForegroundColorSpan ( hasMyReaction & & r . getCode ( ) . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 + s . setSpan ( new ReactionSpan ( r . getCode ( ) , hasMyReaction , fragment . getPeer ( ) , msg . getRid ( ) ) , 0 , s . length ( ) , Spanned . SPAN _ EXCLUSIVE _ EXCLUSIVE ) ; 
 reactions = builder . append ( s ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 new file mode 100644 
 index 0000000 . . abfa92c 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ReactionSpan . java 
 @ @ - 0 , 0 + 1 , 66 @ @ 
 + package im . actor . sdk . controllers . conversation . messages ; 
 + 
 + import android . graphics . Color ; 
 + import android . graphics . Typeface ; 
 + import android . text . TextPaint ; 
 + import android . view . View ; 
 + 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . android . AndroidContext ; 
 + import im . actor . sdk . ActorSDK ; 
 + import im . actor . sdk . R ; 
 + import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . view . BaseUrlSpan ; 
 + 
 + public class ReactionSpan extends BaseUrlSpan { 
 + 
 + boolean hasMyReaction ; 
 + Peer peer ; 
 + long rid ; 
 + String code ; 
 + 
 + public ReactionSpan ( String code , boolean hasMyReaction , Peer peer , long rid ) { 
 + super ( code , false ) ; 
 + this . code = code ; 
 + this . hasMyReaction = hasMyReaction ; 
 + this . peer = peer ; 
 + this . rid = rid ; 
 + } 
 + 
 + @ Override 
 + public void updateDrawState ( TextPaint ds ) { 
 + super . updateDrawState ( ds ) ; 
 + ds . setColor ( hasMyReaction & & code . equals ( " \ u2764 " ) ? ActorSDK . sharedActor ( ) . style . getConvLikeColor ( ) : ActorSDK . sharedActor ( ) . style . getConvTimeColor ( ) ) ; 
 + ds . setUnderlineText ( false ) ; 
 + } 
 + 
 + @ Override 
 + public void onClick ( View widget ) { 
 + if ( hasMyReaction ) { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . removeReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } else { 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . addReaction ( peer , rid , code ) . start ( new CommandCallback < Boolean > ( ) { 
 + @ Override 
 + public void onResult ( Boolean res ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onError ( Exception e ) { 
 + 
 + } 
 + } ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 index 1a7465a . . 1c0ce2f 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / TextHolder . java 
 @ @ - 136 , 8 + 136 , 7 @ @ public class TextHolder extends MessageHolder { 
 timeWithReactions = builder . append ( Strings . formatTime ( message . getDate ( ) ) ) ; 
 } 
 time . setText ( timeWithReactions ! = null ? timeWithReactions : Strings . formatTime ( message . getDate ( ) ) ) ; 
 - 
 - 
 + time . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; 
 } 
 
 class CustomLinkMovementMethod extends LinkMovementMethod {
