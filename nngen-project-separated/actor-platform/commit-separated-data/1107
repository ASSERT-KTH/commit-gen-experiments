BLEU SCORE: 0.14550212536891413

TEST MSG: feat ( core ) : Generation of ephemeral encryption keys
GENERATED MSG: feat ( core + android ) : Passing timezone and locales to server

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java < nl > index d79491a . . c214949 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java < nl > @ @ - 1 , 8 + 1 , 8 @ @ < nl > package im . actor . core . modules . internal . encryption ; < nl > < nl > import java . io . IOException ; < nl > - import java . lang . reflect . Array ; < nl > import java . util . ArrayList ; < nl > + import java . util . List ; < nl > < nl > import im . actor . core . api . ApiEncryptionKey ; < nl > import im . actor . core . api . ApiEncryptionKeySignature ; < nl > @ @ - 10 , 13 + 10 , 17 @ @ import im . actor . core . api . rpc . RequestCreateNewKeyGroup ; < nl > import im . actor . core . api . rpc . ResponseCreateNewKeyGroup ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . internal . encryption . entity . EncryptionKey ; < nl > + import im . actor . core . modules . internal . encryption . entity . EphermalEncryptionKey ; < nl > import im . actor . core . modules . internal . encryption . entity . PrivateKeyStorage ; < nl > import im . actor . core . modules . utils . ModuleActor ; < nl > import im . actor . core . network . RpcCallback ; < nl > import im . actor . core . network . RpcException ; < nl > import im . actor . runtime . Crypto ; < nl > import im . actor . runtime . Log ; < nl > + import im . actor . runtime . Storage ; < nl > import im . actor . runtime . crypto . Curve25519 ; < nl > + import im . actor . runtime . storage . KeyValueRecord ; < nl > + import im . actor . runtime . storage . KeyValueStorage ; < nl > import im . actor . sdk . util . Randoms ; < nl > < nl > public class KeyManagerActor extends ModuleActor { < nl > @ @ - 26 , 6 + 30 , 7 @ @ public class KeyManagerActor extends ModuleActor { < nl > private static final String TAG = " KeyManagerActor " ; < nl > < nl > private PrivateKeyStorage privateKeyStorage ; < nl > + private KeyValueStorage ephermalStorage ; < nl > < nl > public KeyManagerActor ( ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 33 , 6 + 38 , 8 @ @ public class KeyManagerActor extends ModuleActor { < nl > < nl > @ Override < nl > public void preStart ( ) { < nl > + ephermalStorage = Storage . createKeyValue ( " ephermal _ keys " ) ; < nl > + < nl > byte [ ] data = preferences ( ) . getBytes ( PRIVATE _ KEYS ) ; < nl > if ( data ! = null ) { < nl > try { < nl > @ @ - 118 , 5 + 125 , 22 @ @ public class KeyManagerActor extends ModuleActor { < nl > < nl > private void onMainKeysReady ( ) { < nl > Log . d ( TAG , " Main Keys are ready " ) ; < nl > + < nl > + / / Generating ephemeral keys < nl > + List < KeyValueRecord > records = ephermalStorage . loadAllItems ( ) ; < nl > + for ( int i = 0 ; i < records . size ( ) - 100 ; i + + ) { < nl > + long randomId = Randoms . randomId ( ) ; < nl > + EncryptionKey encryptionKey = new EncryptionKey ( < nl > + randomId , < nl > + Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ) ; < nl > + EphermalEncryptionKey ephermalEncryptionKey = < nl > + new EphermalEncryptionKey ( encryptionKey , false ) ; < nl > + ephermalStorage . addOrUpdateItem ( randomId , ephermalEncryptionKey . toByteArray ( ) ) ; < nl > + } < nl > + < nl > + / / Uploading ephemeral keys < nl > + records = ephermalStorage . loadAllItems ( ) ; < nl > + < nl > + / / TODO : Implement uploading < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / entity / EphermalEncryptionKey . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / entity / EphermalEncryptionKey . java < nl > new file mode 100644 < nl > index 0000000 . . 7942fd2 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / entity / EphermalEncryptionKey . java < nl > @ @ - 0 , 0 + 1 , 46 @ @ < nl > + package im . actor . core . modules . internal . encryption . entity ; < nl > + < nl > + import java . io . IOException ; < nl > + < nl > + import im . actor . runtime . bser . BserObject ; < nl > + import im . actor . runtime . bser . BserValues ; < nl > + import im . actor . runtime . bser . BserWriter ; < nl > + < nl > + public class EphermalEncryptionKey extends BserObject { < nl > + < nl > + private EncryptionKey encryptionKey ; < nl > + private boolean isUploaded ; < nl > + < nl > + public EphermalEncryptionKey ( EncryptionKey encryptionKey , boolean isUploaded ) { < nl > + this . encryptionKey = encryptionKey ; < nl > + this . isUploaded = isUploaded ; < nl > + } < nl > + < nl > + public EphermalEncryptionKey ( byte [ ] data ) throws IOException { < nl > + load ( data ) ; < nl > + } < nl > + < nl > + public EncryptionKey getEncryptionKey ( ) { < nl > + return encryptionKey ; < nl > + } < nl > + < nl > + public boolean isUploaded ( ) { < nl > + return isUploaded ; < nl > + } < nl > + < nl > + public EphermalEncryptionKey markUploaded ( ) { < nl > + return new EphermalEncryptionKey ( encryptionKey , true ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void parse ( BserValues values ) throws IOException { < nl > + encryptionKey = new EncryptionKey ( values . getBytes ( 1 ) ) ; < nl > + isUploaded = values . getBool ( 2 ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void serialize ( BserWriter writer ) throws IOException { < nl > + writer . writeBytes ( 1 , encryptionKey . toByteArray ( ) ) ; < nl > + writer . writeBool ( 2 , isUploaded ) ; < nl > + } < nl > + } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 3808015 . . 8674ea8 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 12 , 12 + 12 , 15 @ @ import com . facebook . drawee . backends . pipeline . Fresco ; < nl > < nl > import java . util . ArrayList ; < nl > import java . util . List ; < nl > + import java . util . Locale ; < nl > + import java . util . TimeZone ; < nl > < nl > import im . actor . core . AndroidMessenger ; < nl > import im . actor . core . ApiConfiguration ; < nl > import im . actor . core . ConfigurationBuilder ; < nl > import im . actor . core . DeviceCategory ; < nl > import im . actor . core . PlatformType ; < nl > + import im . actor . runtime . Log ; < nl > import im . actor . sdk . core . AndroidNotifications ; < nl > import im . actor . sdk . core . AndroidPhoneBook ; < nl > import im . actor . sdk . core . ActorPushManager ; < nl > @ @ - 30 , 6 + 33 , 7 @ @ import im . actor . runtime . android . AndroidContext ; < nl > < nl > public class ActorSDK { < nl > < nl > + private static final String TAG = " ActorSDK " ; < nl > < nl > private static volatile ActorSDK sdk = new ActorSDK ( ) ; < nl > / / < nl > @ @ - 67 , 6 + 71 , 10 @ @ public class ActorSDK { < nl > * / < nl > private String apiAppKey = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; < nl > / * * < nl > + * Actor App Name < nl > + * / < nl > + private String appName = " Actor " ; < nl > + / * * < nl > * Push Registration Id < nl > * / < nl > private long pushId = 0 ; < nl > @ @ - 128 , 12 + 136 , 24 @ @ public class ActorSDK { < nl > builder . setDeviceCategory ( DeviceCategory . MOBILE ) ; < nl > builder . setPlatformType ( PlatformType . ANDROID ) ; < nl > builder . setApiConfiguration ( new ApiConfiguration ( < nl > - / / TODO : Update Title < nl > - " Title ? " , < nl > + appName , < nl > apiAppId , < nl > apiAppKey , < nl > Devices . getDeviceName ( ) , < nl > AndroidContext . getContext ( ) . getPackageName ( ) + " : " + Build . SERIAL ) ) ; < nl > + < nl > + / / Adding Locales < nl > + Locale defaultLocale = Locale . getDefault ( ) ; < nl > + Log . d ( TAG , " Found Locale : " + defaultLocale . getLanguage ( ) + " - " + defaultLocale . getCountry ( ) ) ; < nl > + Log . d ( TAG , " Found Locale : " + defaultLocale . getLanguage ( ) ) ; < nl > + builder . addPreferredLanguage ( defaultLocale . getLanguage ( ) + " - " + defaultLocale . getCountry ( ) ) ; < nl > + builder . addPreferredLanguage ( defaultLocale . getLanguage ( ) ) ; < nl > + < nl > + / / Adding TimeZone < nl > + String timeZone = TimeZone . getDefault ( ) . getID ( ) ; < nl > + Log . d ( TAG , " Found TimeZone : " + timeZone ) ; < nl > + builder . setTimeZone ( timeZone ) ; < nl > + < nl > this . messenger = new AndroidMessenger ( AndroidContext . getContext ( ) , builder . build ( ) ) ; < nl > < nl > / / < nl > @ @ - 270 , 6 + 290 , 24 @ @ public class ActorSDK { < nl > } < nl > < nl > / * * < nl > + * Getting Application Name . Used to identify application . < nl > + * < nl > + * @ return Application Name < nl > + * / < nl > + public String getAppName ( ) { < nl > + return appName ; < nl > + } < nl > + < nl > + / * * < nl > + * Setting Application Name . < nl > + * < nl > + * @ param appName Application name < nl > + * / < nl > + public void setAppName ( String appName ) { < nl > + this . appName = appName ; < nl > + } < nl > + < nl > + / * * < nl > * Getting Push Registration Id < nl > * < nl > * @ return pushId < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 8a0b75a . . 93f8478 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 114 , 12 + 114 , 17 @ @ public class Authentication { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > + ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > + langs . add ( s ) ; < nl > + } < nl > request ( new RequestStartEmailAuth ( email , < nl > apiConfiguration . getAppId ( ) , < nl > apiConfiguration . getAppKey ( ) , < nl > deviceHash , < nl > apiConfiguration . getDeviceTitle ( ) , < nl > - null , new ArrayList < String > ( ) < nl > + modules . getConfiguration ( ) . getTimeZone ( ) , < nl > + langs < nl > ) , new RpcCallback < ResponseStartEmailAuth > ( ) { < nl > @ Override < nl > public void onResult ( ResponseStartEmailAuth response ) { < nl > @ @ - 160 , 12 + 165 , 17 @ @ public class Authentication { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > + ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > + langs . add ( s ) ; < nl > + } < nl > request ( new RequestStartPhoneAuth ( phone , < nl > apiConfiguration . getAppId ( ) , < nl > apiConfiguration . getAppKey ( ) , < nl > deviceHash , < nl > apiConfiguration . getDeviceTitle ( ) , < nl > - null , new ArrayList < String > ( ) < nl > + modules . getConfiguration ( ) . getTimeZone ( ) , < nl > + langs < nl > ) , new RpcCallback < ResponseStartPhoneAuth > ( ) { < nl > @ Override < nl > public void onResult ( ResponseStartPhoneAuth response ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java < nl > index f5c5862 . . 4bd048f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java < nl > @ @ - 6 , 6 + 6 , 7 @ @ import im . actor . core . Messenger ; < nl > import im . actor . core . i18n . I18nEngine ; < nl > import im . actor . core . modules . internal . AppStateModule ; < nl > import im . actor . core . modules . internal . ContactsModule ; < nl > + import im . actor . core . modules . internal . DeviceInfoModule ; < nl > import im . actor . core . modules . internal . DisplayLists ; < nl > import im . actor . core . modules . internal . ExternalModule ; < nl > import im . actor . core . modules . internal . FilesModule ; < nl > @ @ - 84 , 5 + 85 , 7 @ @ public interface ModuleContext { < nl > < nl > MentionsModule getMentions ( ) ; < nl > < nl > + DeviceInfoModule getDeviceInfoModule ( ) ; < nl > + < nl > Extensions getExtensions ( ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java < nl > index 9f80b34 . . 15ad0e9 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import im . actor . core . Messenger ; < nl > import im . actor . core . i18n . I18nEngine ; < nl > import im . actor . core . modules . internal . AppStateModule ; < nl > import im . actor . core . modules . internal . ContactsModule ; < nl > + import im . actor . core . modules . internal . DeviceInfoModule ; < nl > import im . actor . core . modules . internal . DisplayLists ; < nl > import im . actor . core . modules . internal . ExternalModule ; < nl > import im . actor . core . modules . internal . FilesModule ; < nl > @ @ - 68 , 6 + 69 , 7 @ @ public class Modules implements ModuleContext { < nl > private volatile SecurityModule security ; < nl > private volatile DisplayLists displayLists ; < nl > private volatile MentionsModule mentions ; < nl > + private volatile DeviceInfoModule deviceInfoModule ; < nl > < nl > public Modules ( Messenger messenger , Configuration configuration ) { < nl > this . messenger = messenger ; < nl > @ @ - 143 , 12 + 145 , 16 @ @ public class Modules implements ModuleContext { < nl > mentions = new MentionsModule ( this ) ; < nl > timing . section ( " DisplayLists " ) ; < nl > displayLists = new DisplayLists ( this ) ; < nl > + timing . section ( " DeviceInfo " ) ; < nl > + deviceInfoModule = new DeviceInfoModule ( this ) ; < nl > timing . end ( ) ; < nl > < nl > < nl > timing = new Timing ( " ACCOUNT _ RUN " ) ; < nl > timing . section ( " Settings " ) ; < nl > settings . run ( ) ; < nl > + timing . section ( " DeviceInfo " ) ; < nl > + deviceInfoModule . run ( ) ; < nl > timing . section ( " Files " ) ; < nl > filesModule . run ( ) ; < nl > timing . section ( " Search " ) ; < nl > @ @ - 283 , 6 + 289 , 10 @ @ public class Modules implements ModuleContext { < nl > return mentions ; < nl > } < nl > < nl > + public DeviceInfoModule getDeviceInfoModule ( ) { < nl > + return deviceInfoModule ; < nl > + } < nl > + < nl > @ Override < nl > public Extensions getExtensions ( ) { < nl > return extensions ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java < nl > new file mode 100644 < nl > index 0000000 . . b991f5e < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java < nl > @ @ - 0 , 0 + 1 , 23 @ @ < nl > + package im . actor . core . modules . internal ; < nl > + < nl > + import java . util . ArrayList ; < nl > + < nl > + import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; < nl > + import im . actor . core . modules . AbsModule ; < nl > + import im . actor . core . modules . ModuleContext ; < nl > + < nl > + public class DeviceInfoModule extends AbsModule { < nl > + < nl > + public DeviceInfoModule ( ModuleContext context ) { < nl > + super ( context ) ; < nl > + } < nl > + < nl > + public void run ( ) { < nl > + ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > + for ( String s : context ( ) . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > + langs . add ( s ) ; < nl > + } < nl > + String timeZone = context ( ) . getConfiguration ( ) . getTimeZone ( ) ; < nl > + request ( new RequestNotifyAboutDeviceInfo ( langs , timeZone ) ) ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java 
 index d79491a . . c214949 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / KeyManagerActor . java 
 @ @ - 1 , 8 + 1 , 8 @ @ 
 package im . actor . core . modules . internal . encryption ; 
 
 import java . io . IOException ; 
 - import java . lang . reflect . Array ; 
 import java . util . ArrayList ; 
 + import java . util . List ; 
 
 import im . actor . core . api . ApiEncryptionKey ; 
 import im . actor . core . api . ApiEncryptionKeySignature ; 
 @ @ - 10 , 13 + 10 , 17 @ @ import im . actor . core . api . rpc . RequestCreateNewKeyGroup ; 
 import im . actor . core . api . rpc . ResponseCreateNewKeyGroup ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . internal . encryption . entity . EncryptionKey ; 
 + import im . actor . core . modules . internal . encryption . entity . EphermalEncryptionKey ; 
 import im . actor . core . modules . internal . encryption . entity . PrivateKeyStorage ; 
 import im . actor . core . modules . utils . ModuleActor ; 
 import im . actor . core . network . RpcCallback ; 
 import im . actor . core . network . RpcException ; 
 import im . actor . runtime . Crypto ; 
 import im . actor . runtime . Log ; 
 + import im . actor . runtime . Storage ; 
 import im . actor . runtime . crypto . Curve25519 ; 
 + import im . actor . runtime . storage . KeyValueRecord ; 
 + import im . actor . runtime . storage . KeyValueStorage ; 
 import im . actor . sdk . util . Randoms ; 
 
 public class KeyManagerActor extends ModuleActor { 
 @ @ - 26 , 6 + 30 , 7 @ @ public class KeyManagerActor extends ModuleActor { 
 private static final String TAG = " KeyManagerActor " ; 
 
 private PrivateKeyStorage privateKeyStorage ; 
 + private KeyValueStorage ephermalStorage ; 
 
 public KeyManagerActor ( ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 33 , 6 + 38 , 8 @ @ public class KeyManagerActor extends ModuleActor { 
 
 @ Override 
 public void preStart ( ) { 
 + ephermalStorage = Storage . createKeyValue ( " ephermal _ keys " ) ; 
 + 
 byte [ ] data = preferences ( ) . getBytes ( PRIVATE _ KEYS ) ; 
 if ( data ! = null ) { 
 try { 
 @ @ - 118 , 5 + 125 , 22 @ @ public class KeyManagerActor extends ModuleActor { 
 
 private void onMainKeysReady ( ) { 
 Log . d ( TAG , " Main Keys are ready " ) ; 
 + 
 + / / Generating ephemeral keys 
 + List < KeyValueRecord > records = ephermalStorage . loadAllItems ( ) ; 
 + for ( int i = 0 ; i < records . size ( ) - 100 ; i + + ) { 
 + long randomId = Randoms . randomId ( ) ; 
 + EncryptionKey encryptionKey = new EncryptionKey ( 
 + randomId , 
 + Curve25519 . keyGen ( Crypto . randomBytes ( 64 ) ) ) ; 
 + EphermalEncryptionKey ephermalEncryptionKey = 
 + new EphermalEncryptionKey ( encryptionKey , false ) ; 
 + ephermalStorage . addOrUpdateItem ( randomId , ephermalEncryptionKey . toByteArray ( ) ) ; 
 + } 
 + 
 + / / Uploading ephemeral keys 
 + records = ephermalStorage . loadAllItems ( ) ; 
 + 
 + / / TODO : Implement uploading 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / entity / EphermalEncryptionKey . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / entity / EphermalEncryptionKey . java 
 new file mode 100644 
 index 0000000 . . 7942fd2 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / encryption / entity / EphermalEncryptionKey . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + package im . actor . core . modules . internal . encryption . entity ; 
 + 
 + import java . io . IOException ; 
 + 
 + import im . actor . runtime . bser . BserObject ; 
 + import im . actor . runtime . bser . BserValues ; 
 + import im . actor . runtime . bser . BserWriter ; 
 + 
 + public class EphermalEncryptionKey extends BserObject { 
 + 
 + private EncryptionKey encryptionKey ; 
 + private boolean isUploaded ; 
 + 
 + public EphermalEncryptionKey ( EncryptionKey encryptionKey , boolean isUploaded ) { 
 + this . encryptionKey = encryptionKey ; 
 + this . isUploaded = isUploaded ; 
 + } 
 + 
 + public EphermalEncryptionKey ( byte [ ] data ) throws IOException { 
 + load ( data ) ; 
 + } 
 + 
 + public EncryptionKey getEncryptionKey ( ) { 
 + return encryptionKey ; 
 + } 
 + 
 + public boolean isUploaded ( ) { 
 + return isUploaded ; 
 + } 
 + 
 + public EphermalEncryptionKey markUploaded ( ) { 
 + return new EphermalEncryptionKey ( encryptionKey , true ) ; 
 + } 
 + 
 + @ Override 
 + public void parse ( BserValues values ) throws IOException { 
 + encryptionKey = new EncryptionKey ( values . getBytes ( 1 ) ) ; 
 + isUploaded = values . getBool ( 2 ) ; 
 + } 
 + 
 + @ Override 
 + public void serialize ( BserWriter writer ) throws IOException { 
 + writer . writeBytes ( 1 , encryptionKey . toByteArray ( ) ) ; 
 + writer . writeBool ( 2 , isUploaded ) ; 
 + } 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 3808015 . . 8674ea8 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 12 , 12 + 12 , 15 @ @ import com . facebook . drawee . backends . pipeline . Fresco ; 
 
 import java . util . ArrayList ; 
 import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . TimeZone ; 
 
 import im . actor . core . AndroidMessenger ; 
 import im . actor . core . ApiConfiguration ; 
 import im . actor . core . ConfigurationBuilder ; 
 import im . actor . core . DeviceCategory ; 
 import im . actor . core . PlatformType ; 
 + import im . actor . runtime . Log ; 
 import im . actor . sdk . core . AndroidNotifications ; 
 import im . actor . sdk . core . AndroidPhoneBook ; 
 import im . actor . sdk . core . ActorPushManager ; 
 @ @ - 30 , 6 + 33 , 7 @ @ import im . actor . runtime . android . AndroidContext ; 
 
 public class ActorSDK { 
 
 + private static final String TAG = " ActorSDK " ; 
 
 private static volatile ActorSDK sdk = new ActorSDK ( ) ; 
 / / 
 @ @ - 67 , 6 + 71 , 10 @ @ public class ActorSDK { 
 * / 
 private String apiAppKey = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; 
 / * * 
 + * Actor App Name 
 + * / 
 + private String appName = " Actor " ; 
 + / * * 
 * Push Registration Id 
 * / 
 private long pushId = 0 ; 
 @ @ - 128 , 12 + 136 , 24 @ @ public class ActorSDK { 
 builder . setDeviceCategory ( DeviceCategory . MOBILE ) ; 
 builder . setPlatformType ( PlatformType . ANDROID ) ; 
 builder . setApiConfiguration ( new ApiConfiguration ( 
 - / / TODO : Update Title 
 - " Title ? " , 
 + appName , 
 apiAppId , 
 apiAppKey , 
 Devices . getDeviceName ( ) , 
 AndroidContext . getContext ( ) . getPackageName ( ) + " : " + Build . SERIAL ) ) ; 
 + 
 + / / Adding Locales 
 + Locale defaultLocale = Locale . getDefault ( ) ; 
 + Log . d ( TAG , " Found Locale : " + defaultLocale . getLanguage ( ) + " - " + defaultLocale . getCountry ( ) ) ; 
 + Log . d ( TAG , " Found Locale : " + defaultLocale . getLanguage ( ) ) ; 
 + builder . addPreferredLanguage ( defaultLocale . getLanguage ( ) + " - " + defaultLocale . getCountry ( ) ) ; 
 + builder . addPreferredLanguage ( defaultLocale . getLanguage ( ) ) ; 
 + 
 + / / Adding TimeZone 
 + String timeZone = TimeZone . getDefault ( ) . getID ( ) ; 
 + Log . d ( TAG , " Found TimeZone : " + timeZone ) ; 
 + builder . setTimeZone ( timeZone ) ; 
 + 
 this . messenger = new AndroidMessenger ( AndroidContext . getContext ( ) , builder . build ( ) ) ; 
 
 / / 
 @ @ - 270 , 6 + 290 , 24 @ @ public class ActorSDK { 
 } 
 
 / * * 
 + * Getting Application Name . Used to identify application . 
 + * 
 + * @ return Application Name 
 + * / 
 + public String getAppName ( ) { 
 + return appName ; 
 + } 
 + 
 + / * * 
 + * Setting Application Name . 
 + * 
 + * @ param appName Application name 
 + * / 
 + public void setAppName ( String appName ) { 
 + this . appName = appName ; 
 + } 
 + 
 + / * * 
 * Getting Push Registration Id 
 * 
 * @ return pushId 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 8a0b75a . . 93f8478 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 114 , 12 + 114 , 17 @ @ public class Authentication { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 + ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 + langs . add ( s ) ; 
 + } 
 request ( new RequestStartEmailAuth ( email , 
 apiConfiguration . getAppId ( ) , 
 apiConfiguration . getAppKey ( ) , 
 deviceHash , 
 apiConfiguration . getDeviceTitle ( ) , 
 - null , new ArrayList < String > ( ) 
 + modules . getConfiguration ( ) . getTimeZone ( ) , 
 + langs 
 ) , new RpcCallback < ResponseStartEmailAuth > ( ) { 
 @ Override 
 public void onResult ( ResponseStartEmailAuth response ) { 
 @ @ - 160 , 12 + 165 , 17 @ @ public class Authentication { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 + ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 + langs . add ( s ) ; 
 + } 
 request ( new RequestStartPhoneAuth ( phone , 
 apiConfiguration . getAppId ( ) , 
 apiConfiguration . getAppKey ( ) , 
 deviceHash , 
 apiConfiguration . getDeviceTitle ( ) , 
 - null , new ArrayList < String > ( ) 
 + modules . getConfiguration ( ) . getTimeZone ( ) , 
 + langs 
 ) , new RpcCallback < ResponseStartPhoneAuth > ( ) { 
 @ Override 
 public void onResult ( ResponseStartPhoneAuth response ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java 
 index f5c5862 . . 4bd048f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / ModuleContext . java 
 @ @ - 6 , 6 + 6 , 7 @ @ import im . actor . core . Messenger ; 
 import im . actor . core . i18n . I18nEngine ; 
 import im . actor . core . modules . internal . AppStateModule ; 
 import im . actor . core . modules . internal . ContactsModule ; 
 + import im . actor . core . modules . internal . DeviceInfoModule ; 
 import im . actor . core . modules . internal . DisplayLists ; 
 import im . actor . core . modules . internal . ExternalModule ; 
 import im . actor . core . modules . internal . FilesModule ; 
 @ @ - 84 , 5 + 85 , 7 @ @ public interface ModuleContext { 
 
 MentionsModule getMentions ( ) ; 
 
 + DeviceInfoModule getDeviceInfoModule ( ) ; 
 + 
 Extensions getExtensions ( ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java 
 index 9f80b34 . . 15ad0e9 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import im . actor . core . Messenger ; 
 import im . actor . core . i18n . I18nEngine ; 
 import im . actor . core . modules . internal . AppStateModule ; 
 import im . actor . core . modules . internal . ContactsModule ; 
 + import im . actor . core . modules . internal . DeviceInfoModule ; 
 import im . actor . core . modules . internal . DisplayLists ; 
 import im . actor . core . modules . internal . ExternalModule ; 
 import im . actor . core . modules . internal . FilesModule ; 
 @ @ - 68 , 6 + 69 , 7 @ @ public class Modules implements ModuleContext { 
 private volatile SecurityModule security ; 
 private volatile DisplayLists displayLists ; 
 private volatile MentionsModule mentions ; 
 + private volatile DeviceInfoModule deviceInfoModule ; 
 
 public Modules ( Messenger messenger , Configuration configuration ) { 
 this . messenger = messenger ; 
 @ @ - 143 , 12 + 145 , 16 @ @ public class Modules implements ModuleContext { 
 mentions = new MentionsModule ( this ) ; 
 timing . section ( " DisplayLists " ) ; 
 displayLists = new DisplayLists ( this ) ; 
 + timing . section ( " DeviceInfo " ) ; 
 + deviceInfoModule = new DeviceInfoModule ( this ) ; 
 timing . end ( ) ; 
 
 
 timing = new Timing ( " ACCOUNT _ RUN " ) ; 
 timing . section ( " Settings " ) ; 
 settings . run ( ) ; 
 + timing . section ( " DeviceInfo " ) ; 
 + deviceInfoModule . run ( ) ; 
 timing . section ( " Files " ) ; 
 filesModule . run ( ) ; 
 timing . section ( " Search " ) ; 
 @ @ - 283 , 6 + 289 , 10 @ @ public class Modules implements ModuleContext { 
 return mentions ; 
 } 
 
 + public DeviceInfoModule getDeviceInfoModule ( ) { 
 + return deviceInfoModule ; 
 + } 
 + 
 @ Override 
 public Extensions getExtensions ( ) { 
 return extensions ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java 
 new file mode 100644 
 index 0000000 . . b991f5e 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / DeviceInfoModule . java 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + package im . actor . core . modules . internal ; 
 + 
 + import java . util . ArrayList ; 
 + 
 + import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; 
 + import im . actor . core . modules . AbsModule ; 
 + import im . actor . core . modules . ModuleContext ; 
 + 
 + public class DeviceInfoModule extends AbsModule { 
 + 
 + public DeviceInfoModule ( ModuleContext context ) { 
 + super ( context ) ; 
 + } 
 + 
 + public void run ( ) { 
 + ArrayList < String > langs = new ArrayList < String > ( ) ; 
 + for ( String s : context ( ) . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 + langs . add ( s ) ; 
 + } 
 + String timeZone = context ( ) . getConfiguration ( ) . getTimeZone ( ) ; 
 + request ( new RequestNotifyAboutDeviceInfo ( langs , timeZone ) ) ; 
 + } 
 + }
