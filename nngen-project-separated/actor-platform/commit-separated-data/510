BLEU SCORE: 0.21142141714303078

TEST MSG: fix ( server : rpc ) : unique user ids in blocked users list
GENERATED MSG: fix ( server : search ) : fixed public groups search

TEST DIFF (one line): diff - - git a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala < nl > index 9d69537 . . 696ebc4 100644 < nl > - - - a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala < nl > + + + b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala < nl > @ @ - 53 , 7 + 53 , 8 @ @ final class PrivacyServiceImpl ( implicit system : ActorSystem ) extends PrivacyServ < nl > authorized ( clientData ) { client ⇒ < nl > for { < nl > ids ← db . run ( UserContactRepo . findBlockedIds ( client . userId ) ) < nl > - outPeers ← Future . sequence ( ids map ( id ⇒ ACLUtils . getUserOutPeer ( id , client . authId ) ) ) < nl > + uniqueIds = ids . toSet < nl > + outPeers ← Future . sequence ( uniqueIds map ( id ⇒ ACLUtils . getUserOutPeer ( id , client . authId ) ) ) < nl > } yield Ok ( ResponseLoadBlockedUsers ( outPeers . toVector ) ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala < nl > index de19382 . . 4262f8c 100644 < nl > - - - a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala < nl > + + + b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala < nl > @ @ - 63 , 7 + 63 , 7 @ @ final class SearchServiceImpl ( implicit system : ActorSystem ) extends SearchServic < nl > } yield groups map ( result ( _ , isPublic = false ) ) < nl > case ApiSearchPeerType . Public ⇒ < nl > for { < nl > - groups ← searchGroups ( text ) < nl > + groups ← searchPublic ( text ) < nl > } yield groups map ( result ( _ , isPublic = true ) ) < nl > } < nl > }

TEST DIFF:
diff - - git a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala 
 index 9d69537 . . 696ebc4 100644 
 - - - a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala 
 + + + b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / privacy / PrivacyServiceImpl . scala 
 @ @ - 53 , 7 + 53 , 8 @ @ final class PrivacyServiceImpl ( implicit system : ActorSystem ) extends PrivacyServ 
 authorized ( clientData ) { client ⇒ 
 for { 
 ids ← db . run ( UserContactRepo . findBlockedIds ( client . userId ) ) 
 - outPeers ← Future . sequence ( ids map ( id ⇒ ACLUtils . getUserOutPeer ( id , client . authId ) ) ) 
 + uniqueIds = ids . toSet 
 + outPeers ← Future . sequence ( uniqueIds map ( id ⇒ ACLUtils . getUserOutPeer ( id , client . authId ) ) ) 
 } yield Ok ( ResponseLoadBlockedUsers ( outPeers . toVector ) ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala 
 index de19382 . . 4262f8c 100644 
 - - - a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala 
 + + + b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / search / SearchServiceImpl . scala 
 @ @ - 63 , 7 + 63 , 7 @ @ final class SearchServiceImpl ( implicit system : ActorSystem ) extends SearchServic 
 } yield groups map ( result ( _ , isPublic = false ) ) 
 case ApiSearchPeerType . Public ⇒ 
 for { 
 - groups ← searchGroups ( text ) 
 + groups ← searchPublic ( text ) 
 } yield groups map ( result ( _ , isPublic = true ) ) 
 } 
 }
