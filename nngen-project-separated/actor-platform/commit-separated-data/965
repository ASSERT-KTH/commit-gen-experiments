BLEU SCORE: 0.2984745896009823

TEST MSG: ref ( core ) : Removed unused IDLE event
GENERATED MSG: wip ( core ) : Adding idle events

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 3f23265 . . f77c35a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 42 , 7 + 42 , 6 @ @ import im . actor . core . events . PeerChatClosed ; < nl > import im . actor . core . events . PeerChatOpened ; < nl > import im . actor . core . events . PeerInfoClosed ; < nl > import im . actor . core . events . PeerInfoOpened ; < nl > - import im . actor . core . events . UserIDLEChanged ; < nl > import im . actor . core . events . UserVisible ; < nl > import im . actor . core . modules . internal . CallsModule ; < nl > import im . actor . core . network . NetworkState ; < nl > @ @ - 451 , 22 + 450 , 6 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > - * Can be called to indicate that user is active < nl > - * / < nl > - @ ObjectiveCName ( " onUserActive " ) < nl > - public void onUserActive ( ) { < nl > - modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( false ) ) ; < nl > - } < nl > - < nl > - / * * < nl > - * Can be called to indicate that user became idle < nl > - * / < nl > - @ ObjectiveCName ( " onUserIDLE " ) < nl > - public void onUserIDLE ( ) { < nl > - modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( true ) ) ; < nl > - } < nl > - < nl > - / * * < nl > * MUST be called on dialogs open < nl > * / < nl > @ ObjectiveCName ( " onDialogsOpen " ) < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / UserIDLEChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / UserIDLEChanged . java < nl > deleted file mode 100644 < nl > index b30969a . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / UserIDLEChanged . java < nl > + + + / dev / null < nl > @ @ - 1 , 29 + 0 , 0 @ @ < nl > - package im . actor . core . events ; < nl > - < nl > - import im . actor . runtime . eventbus . Event ; < nl > - < nl > - public class UserIDLEChanged extends Event { < nl > - < nl > - public static final String EVENT = " user _ idle _ changed " ; < nl > - < nl > - private boolean isIDLE ; < nl > - < nl > - public UserIDLEChanged ( boolean isIDLE ) { < nl > - this . isIDLE = isIDLE ; < nl > - } < nl > - < nl > - < nl > - public boolean isIDLE ( ) { < nl > - return isIDLE ; < nl > - } < nl > - < nl > - @ Override < nl > - public String getType ( ) { < nl > - return EVENT ; < nl > - } < nl > - < nl > - @ Override < nl > - public String toString ( ) { < nl > - return EVENT + " { " + isIDLE + " } " ; < nl > - } < nl > - }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index a44d871 . . a9ec5fc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 41 , 6 + 41 , 7 @ @ import im . actor . core . modules . events . PeerChatClosed ; < nl > import im . actor . core . modules . events . PeerChatOpened ; < nl > import im . actor . core . modules . events . PeerInfoClosed ; < nl > import im . actor . core . modules . events . PeerInfoOpened ; < nl > + import im . actor . core . modules . events . UserIDLEChanged ; < nl > import im . actor . core . modules . events . UserVisible ; < nl > import im . actor . core . modules . internal . CallsModule ; < nl > import im . actor . core . network . NetworkState ; < nl > @ @ - 449 , 6 + 450 , 22 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Can be called to indicate that user is active < nl > + * / < nl > + @ ObjectiveCName ( " onUserActive " ) < nl > + public void onUserActive ( ) { < nl > + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( false ) ) ; < nl > + } < nl > + < nl > + / * * < nl > + * Can be called to indicate that user became idle < nl > + * / < nl > + @ ObjectiveCName ( " onUserIDLE " ) < nl > + public void onUserIDLE ( ) { < nl > + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( true ) ) ; < nl > + } < nl > + < nl > + / * * < nl > * MUST be called on dialogs open < nl > * / < nl > @ ObjectiveCName ( " onDialogsOpen " ) < nl > @ @ - 733 , 7 + 750 , 7 @ @ public class Messenger { < nl > * Send json message < nl > * < nl > * @ param peer destination peer < nl > - * @ param json json content < nl > + * @ param content json content < nl > * / < nl > @ ObjectiveCName ( " sendJsonWithPeer : withJson : " ) < nl > public void sendCustomJsonMessage ( @ NotNull Peer peer , @ NotNull JsonContent content ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java < nl > new file mode 100644 < nl > index 0000000 . . b70bb54 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java < nl > @ @ - 0 , 0 + 1 , 29 @ @ < nl > + package im . actor . core . modules . events ; < nl > + < nl > + import im . actor . runtime . eventbus . Event ; < nl > + < nl > + public class UserIDLEChanged extends Event { < nl > + < nl > + public static final String EVENT = " user _ idle _ changed " ; < nl > + < nl > + private boolean isIDLE ; < nl > + < nl > + public UserIDLEChanged ( boolean isIDLE ) { < nl > + this . isIDLE = isIDLE ; < nl > + } < nl > + < nl > + < nl > + public boolean isIDLE ( ) { < nl > + return isIDLE ; < nl > + } < nl > + < nl > + @ Override < nl > + public String getType ( ) { < nl > + return EVENT ; < nl > + } < nl > + < nl > + @ Override < nl > + public String toString ( ) { < nl > + return EVENT + " { " + isIDLE + " } " ; < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java < nl > index 55643c3 . . aca6bd6 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java < nl > @ @ - 6 , 5 + 6 , 5 @ @ public class CryptoRuntimeProvider implements CryptoRuntime { < nl > public byte [ ] MD5 ( byte [ ] data ) { < nl > throw new RuntimeException ( " Dumb " ) ; < nl > } < nl > - < nl > + < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 3f23265 . . f77c35a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 42 , 7 + 42 , 6 @ @ import im . actor . core . events . PeerChatClosed ; 
 import im . actor . core . events . PeerChatOpened ; 
 import im . actor . core . events . PeerInfoClosed ; 
 import im . actor . core . events . PeerInfoOpened ; 
 - import im . actor . core . events . UserIDLEChanged ; 
 import im . actor . core . events . UserVisible ; 
 import im . actor . core . modules . internal . CallsModule ; 
 import im . actor . core . network . NetworkState ; 
 @ @ - 451 , 22 + 450 , 6 @ @ public class Messenger { 
 } 
 
 / * * 
 - * Can be called to indicate that user is active 
 - * / 
 - @ ObjectiveCName ( " onUserActive " ) 
 - public void onUserActive ( ) { 
 - modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( false ) ) ; 
 - } 
 - 
 - / * * 
 - * Can be called to indicate that user became idle 
 - * / 
 - @ ObjectiveCName ( " onUserIDLE " ) 
 - public void onUserIDLE ( ) { 
 - modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( true ) ) ; 
 - } 
 - 
 - / * * 
 * MUST be called on dialogs open 
 * / 
 @ ObjectiveCName ( " onDialogsOpen " ) 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / UserIDLEChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / UserIDLEChanged . java 
 deleted file mode 100644 
 index b30969a . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / events / UserIDLEChanged . java 
 + + + / dev / null 
 @ @ - 1 , 29 + 0 , 0 @ @ 
 - package im . actor . core . events ; 
 - 
 - import im . actor . runtime . eventbus . Event ; 
 - 
 - public class UserIDLEChanged extends Event { 
 - 
 - public static final String EVENT = " user _ idle _ changed " ; 
 - 
 - private boolean isIDLE ; 
 - 
 - public UserIDLEChanged ( boolean isIDLE ) { 
 - this . isIDLE = isIDLE ; 
 - } 
 - 
 - 
 - public boolean isIDLE ( ) { 
 - return isIDLE ; 
 - } 
 - 
 - @ Override 
 - public String getType ( ) { 
 - return EVENT ; 
 - } 
 - 
 - @ Override 
 - public String toString ( ) { 
 - return EVENT + " { " + isIDLE + " } " ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index a44d871 . . a9ec5fc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 41 , 6 + 41 , 7 @ @ import im . actor . core . modules . events . PeerChatClosed ; 
 import im . actor . core . modules . events . PeerChatOpened ; 
 import im . actor . core . modules . events . PeerInfoClosed ; 
 import im . actor . core . modules . events . PeerInfoOpened ; 
 + import im . actor . core . modules . events . UserIDLEChanged ; 
 import im . actor . core . modules . events . UserVisible ; 
 import im . actor . core . modules . internal . CallsModule ; 
 import im . actor . core . network . NetworkState ; 
 @ @ - 449 , 6 + 450 , 22 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Can be called to indicate that user is active 
 + * / 
 + @ ObjectiveCName ( " onUserActive " ) 
 + public void onUserActive ( ) { 
 + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( false ) ) ; 
 + } 
 + 
 + / * * 
 + * Can be called to indicate that user became idle 
 + * / 
 + @ ObjectiveCName ( " onUserIDLE " ) 
 + public void onUserIDLE ( ) { 
 + modules . getEvents ( ) . postSticky ( new UserIDLEChanged ( true ) ) ; 
 + } 
 + 
 + / * * 
 * MUST be called on dialogs open 
 * / 
 @ ObjectiveCName ( " onDialogsOpen " ) 
 @ @ - 733 , 7 + 750 , 7 @ @ public class Messenger { 
 * Send json message 
 * 
 * @ param peer destination peer 
 - * @ param json json content 
 + * @ param content json content 
 * / 
 @ ObjectiveCName ( " sendJsonWithPeer : withJson : " ) 
 public void sendCustomJsonMessage ( @ NotNull Peer peer , @ NotNull JsonContent content ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java 
 new file mode 100644 
 index 0000000 . . b70bb54 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / events / UserIDLEChanged . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package im . actor . core . modules . events ; 
 + 
 + import im . actor . runtime . eventbus . Event ; 
 + 
 + public class UserIDLEChanged extends Event { 
 + 
 + public static final String EVENT = " user _ idle _ changed " ; 
 + 
 + private boolean isIDLE ; 
 + 
 + public UserIDLEChanged ( boolean isIDLE ) { 
 + this . isIDLE = isIDLE ; 
 + } 
 + 
 + 
 + public boolean isIDLE ( ) { 
 + return isIDLE ; 
 + } 
 + 
 + @ Override 
 + public String getType ( ) { 
 + return EVENT ; 
 + } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return EVENT + " { " + isIDLE + " } " ; 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java 
 index 55643c3 . . aca6bd6 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / template / java / im / actor / runtime / CryptoRuntimeProvider . java 
 @ @ - 6 , 5 + 6 , 5 @ @ public class CryptoRuntimeProvider implements CryptoRuntime { 
 public byte [ ] MD5 ( byte [ ] data ) { 
 throw new RuntimeException ( " Dumb " ) ; 
 } 
 - 
 + 
 }
