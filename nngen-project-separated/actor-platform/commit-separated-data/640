BLEU SCORE: 0.26924761780320416

TEST MSG: ref ( iOS ) : Refactored sticker bubble
GENERATED MSG: fix ( iOS ) : fix video cell thumb image

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift < nl > index 256780a . . ac59350 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift < nl > @ @ - 66 , 6 + 66 , 34 @ @ public class AABubbleBaseFileCell : AABubbleCell { < nl > } else { < nl > fatalError ( " Unsupported file source " ) < nl > } < nl > + } else if let sticker = message . content as ? ACStickerContent { < nl > + / / Default One : Smallest < nl > + var file = sticker . getSticker ( ) . getApiImageLocation256 ( ) < nl > + if AADevice . isiPhone6 | | AADevice . isiPhone6P { < nl > + file = sticker . getSticker ( ) . getApiImageLocation512 ( ) < nl > + } < nl > + < nl > + let selfGeneration = prepareBind ( ) < nl > + < nl > + bindedDownloadFile = file . getFileLocation ( ) . getFileId ( ) < nl > + bindedDownloadCallback = AAFileCallback ( notDownloaded : { ( ) - > ( ) in < nl > + if ( self . bindGeneration ! = selfGeneration ) { < nl > + return < nl > + } < nl > + self . fileDownloadPaused ( selfGeneration ) < nl > + } , onDownloading : { ( progress ) - > ( ) in < nl > + if ( self . bindGeneration ! = selfGeneration ) { < nl > + return < nl > + } < nl > + self . fileDownloading ( progress , selfGeneration : selfGeneration ) < nl > + } , onDownloaded : { ( reference ) - > ( ) in < nl > + if ( self . bindGeneration ! = selfGeneration ) { < nl > + return < nl > + } < nl > + self . fileReady ( reference , selfGeneration : selfGeneration ) < nl > + } ) < nl > + < nl > + Actor . bindRawFileWithReference ( ACFileReference ( ARApiFileLocation : file . getFileLocation ( ) , withNSString : " sticker . webp " , withInt : file . getFileSize ( ) ) , autoStart : autoDownload , withCallback : bindedDownloadCallback ) < nl > } else { < nl > fatalError ( " Unsupported message type " ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift < nl > index c5adb9f . . 11da74d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift < nl > @ @ - 18 , 7 + 18 , 6 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { < nl > / / Binded data < nl > < nl > var bindedLayout : StikerCellLayout ! < nl > - var thumbLoaded = false < nl > var contentLoaded = false < nl > < nl > private var callback : AAFileCallback ? = nil < nl > @ @ - 70 , 35 + 69 , 11 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { < nl > bindBubbleType ( BubbleType . Sticker , isCompact : false ) < nl > < nl > / / Reset content state < nl > - self . preview . image = nil < nl > + preview . image = nil < nl > contentLoaded = false < nl > - thumbLoaded = false < nl > - < nl > - / / Reset progress < nl > < nl > - let sticker = message . content as ! ACStickerContent < nl > - < nl > - var fileLocation : ACFileReference ? < nl > - fileLocation = sticker . getSticker ( ) . getFileReference512 ( ) < nl > - < nl > - self . callback = AAFileCallback ( onDownloaded : { ( reference ) - > ( ) in < nl > - let path = CocoaFiles . pathFromDescriptor ( reference ) < nl > - let data = NSFileManager . defaultManager ( ) . contentsAtPath ( path ) ! < nl > - let image = YYImage ( data : data ) < nl > - < nl > - if ( image = = nil ) { < nl > - return < nl > - } < nl > - < nl > - dispatchOnUi { < nl > - self . preview . image = image < nl > - } < nl > - } ) ; < nl > - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) < nl > - < nl > - < nl > / / Bind file < nl > - / / fileBind ( message , autoDownload : bindedLayout . autoDownload ) < nl > + fileBind ( message , autoDownload : true ) < nl > < nl > } < nl > < nl > @ @ - 141 , 97 + 116 , 24 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { < nl > < nl > / / File state binding < nl > < nl > - public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - / / self . progress . showView ( ) < nl > - / / self . progress . setButtonType ( FlatButtonType . buttonUpBasicType , animated : true ) < nl > - / / self . progress . hideProgress ( ) < nl > - } < nl > - } < nl > - < nl > - public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - / / self . progress . showView ( ) < nl > - / / self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) < nl > - / / self . progress . setProgress ( progress ) < nl > - } < nl > - } < nl > - < nl > - public override func fileDownloadPaused ( selfGeneration : Int ) { < nl > - bgLoadThumb ( selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - / / self . progress . showView ( ) < nl > - / / self . progress . setButtonType ( FlatButtonType . buttonDownloadType , animated : true ) < nl > - / / self . progress . hideProgress ( ) < nl > - } < nl > - } < nl > - < nl > - public override func fileDownloading ( progress : Double , selfGeneration : Int ) { < nl > - bgLoadThumb ( selfGeneration ) < nl > - < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - / / self . progress . showView ( ) < nl > - / / self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) < nl > - / / self . progress . setProgress ( progress ) < nl > - } < nl > - } < nl > - < nl > public override func fileReady ( reference : String , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > < nl > - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > - / / self . progress . setProgress ( 1 ) < nl > - / / self . progress . hideView ( ) < nl > - } < nl > - } < nl > - < nl > - public func bgLoadThumb ( selfGeneration : Int ) { < nl > - / / if ( thumbLoaded ) { < nl > - / / return < nl > - / / } < nl > - / / thumbLoaded = true < nl > - / / < nl > - / / if ( bindedLayout . fastThumb ! = nil ) { < nl > - / / let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? < nl > - / / . roundCorners ( bindedLayout . screenSize . width , < nl > - / / h : bindedLayout . screenSize . height , < nl > - / / roundSize : 14 ) < nl > - / / < nl > - / / runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > - / / self . setPreviewImage ( loadedThumb ! , fast : true ) < nl > - / / } ) ; < nl > - / / } < nl > - } < nl > - < nl > - public func bgLoadReference ( reference : String , selfGeneration : Int ) { < nl > if ( contentLoaded ) { < nl > return < nl > } < nl > contentLoaded = true < nl > < nl > - let loadedContent = UIImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) ? . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) < nl > - < nl > + let filePath = CocoaFiles . pathFromDescriptor ( reference ) < nl > + let loadedContent = YYImage ( contentsOfFile : filePath ) < nl > if ( loadedContent = = nil ) { < nl > return < nl > } < nl > < nl > runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > - self . setPreviewImage ( loadedContent ! , fast : false ) < nl > + self . preview . image = loadedContent ! < nl > } ) < nl > } < nl > - < nl > - public func setPreviewImage ( img : UIImage , fast : Bool ) { < nl > - if ( ( fast & & self . preview . image = = nil ) | | ! fast ) { < nl > - self . preview . image = img ; < nl > - self . preview . showView ( ) < nl > - } < nl > - } < nl > - < nl > + < nl > / / Media Action < nl > < nl > public func mediaDidTap ( ) {
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > index cd9e1a8 . . 3f9cd7c 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift < nl > @ @ - 141 , 6 + 141 , 7 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > / / File state binding < nl > < nl > public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { < nl > + bgLoadThumb ( selfGeneration ) < nl > bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > < nl > runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > @ @ - 152 , 6 + 153 , 7 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > } < nl > < nl > public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { < nl > + bgLoadThumb ( selfGeneration ) < nl > bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > < nl > runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > @ @ - 185 , 7 + 187 , 8 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > } < nl > < nl > public override func fileReady ( reference : String , selfGeneration : Int ) { < nl > - bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > + bgLoadThumb ( selfGeneration ) < nl > + self . bgLoadReference ( reference , selfGeneration : selfGeneration ) < nl > < nl > runOnUiThread ( selfGeneration ) { ( ) - > ( ) in < nl > self . progress . setProgress ( 1 ) < nl > @ @ - 198 , 6 + 201 , 7 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > if ( thumbLoaded ) { < nl > return < nl > } < nl > + < nl > thumbLoaded = true < nl > < nl > if ( bindedLayout . fastThumb ! = nil ) { < nl > @ @ - 210 , 14 + 214 , 10 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > self . setPreviewImage ( loadedThumb ! , fast : true ) < nl > } ) ; < nl > } < nl > + < nl > } < nl > < nl > public func bgLoadReference ( reference : String , selfGeneration : Int ) { < nl > - if ( contentLoaded ) { < nl > - return < nl > - } < nl > - contentLoaded = true < nl > - < nl > < nl > let movieAsset = AVAsset ( URL : NSURL ( fileURLWithPath : CocoaFiles . pathFromDescriptor ( reference ) ) ) / / video asset < nl > let imageGenerator = AVAssetImageGenerator ( asset : movieAsset ) < nl > @ @ - 236 , 16 + 236 , 16 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { < nl > } < nl > < nl > let loadedContent = thumbnail . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) < nl > - < nl > + print ( " loadedContent = = = \ ( loadedContent ) " ) < nl > runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in < nl > self . setPreviewImage ( loadedContent , fast : false ) < nl > + self . contentLoaded = true < nl > } ) < nl > < nl > } catch { < nl > < nl > } < nl > < nl > - < nl > } < nl > < nl > public func setPreviewImage ( img : UIImage , fast : Bool ) { < nl > @ @ - 363 , 7 + 363 , 7 @ @ public class VideoCellLayout : AACellLayout { < nl > Creating layout for video content < nl > * / < nl > public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 ) { < nl > - self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : true ) < nl > + self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : false ) < nl > } < nl > < nl > / * *

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift 
 index 256780a . . ac59350 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleBaseFileCell . swift 
 @ @ - 66 , 6 + 66 , 34 @ @ public class AABubbleBaseFileCell : AABubbleCell { 
 } else { 
 fatalError ( " Unsupported file source " ) 
 } 
 + } else if let sticker = message . content as ? ACStickerContent { 
 + / / Default One : Smallest 
 + var file = sticker . getSticker ( ) . getApiImageLocation256 ( ) 
 + if AADevice . isiPhone6 | | AADevice . isiPhone6P { 
 + file = sticker . getSticker ( ) . getApiImageLocation512 ( ) 
 + } 
 + 
 + let selfGeneration = prepareBind ( ) 
 + 
 + bindedDownloadFile = file . getFileLocation ( ) . getFileId ( ) 
 + bindedDownloadCallback = AAFileCallback ( notDownloaded : { ( ) - > ( ) in 
 + if ( self . bindGeneration ! = selfGeneration ) { 
 + return 
 + } 
 + self . fileDownloadPaused ( selfGeneration ) 
 + } , onDownloading : { ( progress ) - > ( ) in 
 + if ( self . bindGeneration ! = selfGeneration ) { 
 + return 
 + } 
 + self . fileDownloading ( progress , selfGeneration : selfGeneration ) 
 + } , onDownloaded : { ( reference ) - > ( ) in 
 + if ( self . bindGeneration ! = selfGeneration ) { 
 + return 
 + } 
 + self . fileReady ( reference , selfGeneration : selfGeneration ) 
 + } ) 
 + 
 + Actor . bindRawFileWithReference ( ACFileReference ( ARApiFileLocation : file . getFileLocation ( ) , withNSString : " sticker . webp " , withInt : file . getFileSize ( ) ) , autoStart : autoDownload , withCallback : bindedDownloadCallback ) 
 } else { 
 fatalError ( " Unsupported message type " ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift 
 index c5adb9f . . 11da74d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleStickerCell . swift 
 @ @ - 18 , 7 + 18 , 6 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { 
 / / Binded data 
 
 var bindedLayout : StikerCellLayout ! 
 - var thumbLoaded = false 
 var contentLoaded = false 
 
 private var callback : AAFileCallback ? = nil 
 @ @ - 70 , 35 + 69 , 11 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { 
 bindBubbleType ( BubbleType . Sticker , isCompact : false ) 
 
 / / Reset content state 
 - self . preview . image = nil 
 + preview . image = nil 
 contentLoaded = false 
 - thumbLoaded = false 
 - 
 - / / Reset progress 
 
 - let sticker = message . content as ! ACStickerContent 
 - 
 - var fileLocation : ACFileReference ? 
 - fileLocation = sticker . getSticker ( ) . getFileReference512 ( ) 
 - 
 - self . callback = AAFileCallback ( onDownloaded : { ( reference ) - > ( ) in 
 - let path = CocoaFiles . pathFromDescriptor ( reference ) 
 - let data = NSFileManager . defaultManager ( ) . contentsAtPath ( path ) ! 
 - let image = YYImage ( data : data ) 
 - 
 - if ( image = = nil ) { 
 - return 
 - } 
 - 
 - dispatchOnUi { 
 - self . preview . image = image 
 - } 
 - } ) ; 
 - Actor . bindRawFileWithReference ( fileLocation , autoStart : true , withCallback : self . callback ) 
 - 
 - 
 / / Bind file 
 - / / fileBind ( message , autoDownload : bindedLayout . autoDownload ) 
 + fileBind ( message , autoDownload : true ) 
 
 } 
 
 @ @ - 141 , 97 + 116 , 24 @ @ public class AABubbleStickerCell : AABubbleBaseFileCell { 
 
 / / File state binding 
 
 - public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - / / self . progress . showView ( ) 
 - / / self . progress . setButtonType ( FlatButtonType . buttonUpBasicType , animated : true ) 
 - / / self . progress . hideProgress ( ) 
 - } 
 - } 
 - 
 - public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - / / self . progress . showView ( ) 
 - / / self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) 
 - / / self . progress . setProgress ( progress ) 
 - } 
 - } 
 - 
 - public override func fileDownloadPaused ( selfGeneration : Int ) { 
 - bgLoadThumb ( selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - / / self . progress . showView ( ) 
 - / / self . progress . setButtonType ( FlatButtonType . buttonDownloadType , animated : true ) 
 - / / self . progress . hideProgress ( ) 
 - } 
 - } 
 - 
 - public override func fileDownloading ( progress : Double , selfGeneration : Int ) { 
 - bgLoadThumb ( selfGeneration ) 
 - 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - / / self . progress . showView ( ) 
 - / / self . progress . setButtonType ( FlatButtonType . buttonPausedType , animated : true ) 
 - / / self . progress . setProgress ( progress ) 
 - } 
 - } 
 - 
 public override func fileReady ( reference : String , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 
 - runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 - / / self . progress . setProgress ( 1 ) 
 - / / self . progress . hideView ( ) 
 - } 
 - } 
 - 
 - public func bgLoadThumb ( selfGeneration : Int ) { 
 - / / if ( thumbLoaded ) { 
 - / / return 
 - / / } 
 - / / thumbLoaded = true 
 - / / 
 - / / if ( bindedLayout . fastThumb ! = nil ) { 
 - / / let loadedThumb = UIImage ( data : bindedLayout . fastThumb ! ) ? 
 - / / . roundCorners ( bindedLayout . screenSize . width , 
 - / / h : bindedLayout . screenSize . height , 
 - / / roundSize : 14 ) 
 - / / 
 - / / runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 - / / self . setPreviewImage ( loadedThumb ! , fast : true ) 
 - / / } ) ; 
 - / / } 
 - } 
 - 
 - public func bgLoadReference ( reference : String , selfGeneration : Int ) { 
 if ( contentLoaded ) { 
 return 
 } 
 contentLoaded = true 
 
 - let loadedContent = UIImage ( contentsOfFile : CocoaFiles . pathFromDescriptor ( reference ) ) ? . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) 
 - 
 + let filePath = CocoaFiles . pathFromDescriptor ( reference ) 
 + let loadedContent = YYImage ( contentsOfFile : filePath ) 
 if ( loadedContent = = nil ) { 
 return 
 } 
 
 runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 - self . setPreviewImage ( loadedContent ! , fast : false ) 
 + self . preview . image = loadedContent ! 
 } ) 
 } 
 - 
 - public func setPreviewImage ( img : UIImage , fast : Bool ) { 
 - if ( ( fast & & self . preview . image = = nil ) | | ! fast ) { 
 - self . preview . image = img ; 
 - self . preview . showView ( ) 
 - } 
 - } 
 - 
 + 
 / / Media Action 
 
 public func mediaDidTap ( ) {

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 index cd9e1a8 . . 3f9cd7c 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleVideoCell . swift 
 @ @ - 141 , 6 + 141 , 7 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { 
 / / File state binding 
 
 public override func fileUploadPaused ( reference : String , selfGeneration : Int ) { 
 + bgLoadThumb ( selfGeneration ) 
 bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 
 runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 @ @ - 152 , 6 + 153 , 7 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { 
 } 
 
 public override func fileUploading ( reference : String , progress : Double , selfGeneration : Int ) { 
 + bgLoadThumb ( selfGeneration ) 
 bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 
 runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 @ @ - 185 , 7 + 187 , 8 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { 
 } 
 
 public override func fileReady ( reference : String , selfGeneration : Int ) { 
 - bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 + bgLoadThumb ( selfGeneration ) 
 + self . bgLoadReference ( reference , selfGeneration : selfGeneration ) 
 
 runOnUiThread ( selfGeneration ) { ( ) - > ( ) in 
 self . progress . setProgress ( 1 ) 
 @ @ - 198 , 6 + 201 , 7 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { 
 if ( thumbLoaded ) { 
 return 
 } 
 + 
 thumbLoaded = true 
 
 if ( bindedLayout . fastThumb ! = nil ) { 
 @ @ - 210 , 14 + 214 , 10 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { 
 self . setPreviewImage ( loadedThumb ! , fast : true ) 
 } ) ; 
 } 
 + 
 } 
 
 public func bgLoadReference ( reference : String , selfGeneration : Int ) { 
 - if ( contentLoaded ) { 
 - return 
 - } 
 - contentLoaded = true 
 - 
 
 let movieAsset = AVAsset ( URL : NSURL ( fileURLWithPath : CocoaFiles . pathFromDescriptor ( reference ) ) ) / / video asset 
 let imageGenerator = AVAssetImageGenerator ( asset : movieAsset ) 
 @ @ - 236 , 16 + 236 , 16 @ @ public class AABubbleVideoCell : AABubbleBaseFileCell { 
 } 
 
 let loadedContent = thumbnail . roundCorners ( self . bindedLayout . screenSize . width , h : self . bindedLayout . screenSize . height , roundSize : 14 ) 
 - 
 + print ( " loadedContent = = = \ ( loadedContent ) " ) 
 runOnUiThread ( selfGeneration , closure : { ( ) - > ( ) in 
 self . setPreviewImage ( loadedContent , fast : false ) 
 + self . contentLoaded = true 
 } ) 
 
 } catch { 
 
 } 
 
 - 
 } 
 
 public func setPreviewImage ( img : UIImage , fast : Bool ) { 
 @ @ - 363 , 7 + 363 , 7 @ @ public class VideoCellLayout : AACellLayout { 
 Creating layout for video content 
 * / 
 public convenience init ( id : Int64 , videoContent : ACVideoContent , date : Int64 ) { 
 - self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : true ) 
 + self . init ( id : id , width : CGFloat ( videoContent . getW ( ) ) , height : CGFloat ( videoContent . getH ( ) ) , date : date , fastThumb : videoContent . getFastThumb ( ) , autoDownload : false ) 
 } 
 
 / * *
