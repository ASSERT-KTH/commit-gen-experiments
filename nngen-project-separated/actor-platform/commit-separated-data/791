BLEU SCORE: 0.14416787170305084

TEST MSG: feat ( core ) : Fixed incorrect joining to bus
GENERATED MSG: fix ( core ) : Fixing stashing in peer node , fixing initialization of peer node

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 27487e9 . . f867349 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 59 , 7 + 59 , 7 @ @ public class CallActor extends AbsCallActor { < nl > public void apply ( ResponseDoCall responseDoCall ) { < nl > < nl > callId = responseDoCall . getCallId ( ) ; < nl > - callBus . joinBus ( responseDoCall . getEventBusId ( ) ) ; < nl > + callBus . joinMasterBus ( responseDoCall . getEventBusId ( ) , responseDoCall . getDeviceId ( ) ) ; < nl > callBus . startOwn ( ) ; < nl > callVM = callViewModels . spawnNewOutgoingVM ( responseDoCall . getCallId ( ) , peer ) ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index b09810a . . 206cf57 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 226 , 6 + 226 , 9 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof JoinBus ) { < nl > joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; < nl > + } else if ( message instanceof JoinMasterBus ) { < nl > + JoinMasterBus joinMasterBus = ( JoinMasterBus ) message ; < nl > + connectBus ( joinMasterBus . getBusId ( ) , joinMasterBus . getDeviceId ( ) , true ) ; < nl > } else if ( message instanceof Mute ) { < nl > onChangeMute ( ( ( Mute ) message ) . isMuted ( ) ) ; < nl > } else if ( message instanceof OnAnswered ) { < nl > @ @ - 248 , 6 + 251 , 25 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > } < nl > } < nl > < nl > + public static class JoinMasterBus { < nl > + < nl > + private String busId ; < nl > + private long deviceId ; < nl > + < nl > + public JoinMasterBus ( String busId , long deviceId ) { < nl > + this . busId = busId ; < nl > + this . deviceId = deviceId ; < nl > + } < nl > + < nl > + public String getBusId ( ) { < nl > + return busId ; < nl > + } < nl > + < nl > + public long getDeviceId ( ) { < nl > + return deviceId ; < nl > + } < nl > + } < nl > + < nl > public static class Mute { < nl > private boolean isMuted ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java < nl > index f6b9045 . . 3ac90df 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java < nl > @ @ - 13 , 6 + 13 , 10 @ @ public class CallBusInt extends ActorInterface { < nl > send ( new CallBusActor . JoinBus ( busId ) ) ; < nl > } < nl > < nl > + public void joinMasterBus ( String busId , long deviceId ) { < nl > + send ( new CallBusActor . JoinMasterBus ( busId , deviceId ) ) ; < nl > + } < nl > + < nl > public void changeMute ( boolean isMuted ) { < nl > send ( new CallBusActor . Mute ( isMuted ) ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java < nl > index 2718a82 . . 61a71fc 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java < nl > @ @ - 45 , 25 + 45 , 17 @ @ public class EventBusActor extends ModuleActor { < nl > return deviceId ; < nl > } < nl > < nl > + < nl > public void joinBus ( final String busId ) { < nl > joinBus ( busId , DEFAULT _ TIMEOUT ) ; < nl > } < nl > < nl > - public void joinBus ( final String busId , long timeout ) { < nl > + public void joinBus ( final String busId , final long timeout ) { < nl > isProcessing = true ; < nl > - keepAliveTimeout = timeout ; < nl > - keepAliveRetry = timeout / 2 ; < nl > - api ( new RequestJoinEventBus ( busId , keepAliveTimeout ) ) . then ( new Consumer < ResponseJoinEventBus > ( ) { < nl > + api ( new RequestJoinEventBus ( busId , timeout ) ) . then ( new Consumer < ResponseJoinEventBus > ( ) { < nl > @ Override < nl > public void apply ( ResponseJoinEventBus responseJoinEventBus ) { < nl > - EventBusActor . this . busId = busId ; < nl > - deviceId = responseJoinEventBus . getDeviceId ( ) ; < nl > - context ( ) . getEventBus ( ) . subscribe ( busId , self ( ) ) ; < nl > - onBusJoined ( ) ; < nl > - onBusStarted ( ) ; < nl > - isProcessing = false ; < nl > - unstashAll ( ) ; < nl > - keepAliveCancel = schedule ( new KeepAlive ( ) , keepAliveRetry ) ; < nl > + connectBus ( busId , responseJoinEventBus . getDeviceId ( ) , timeout , true ) ; < nl > } < nl > } ) . failure ( new Consumer < Exception > ( ) { < nl > @ Override < nl > @ @ - 77 , 21 + 69 , 12 @ @ public class EventBusActor extends ModuleActor { < nl > createBus ( DEFAULT _ TIMEOUT ) ; < nl > } < nl > < nl > - public void createBus ( long timeout ) { < nl > + public void createBus ( final long timeout ) { < nl > isProcessing = true ; < nl > - keepAliveTimeout = timeout ; < nl > - keepAliveRetry = timeout / 2 ; < nl > - api ( new RequestCreateNewEventBus ( keepAliveTimeout , true ) ) . then ( new Consumer < ResponseCreateNewEventBus > ( ) { < nl > + api ( new RequestCreateNewEventBus ( timeout , true ) ) . then ( new Consumer < ResponseCreateNewEventBus > ( ) { < nl > @ Override < nl > public void apply ( ResponseCreateNewEventBus responseCreateNewEventBus ) { < nl > - busId = responseCreateNewEventBus . getId ( ) ; < nl > - deviceId = responseCreateNewEventBus . getDeviceId ( ) ; < nl > - context ( ) . getEventBus ( ) . subscribe ( busId , self ( ) ) ; < nl > - onBusCreated ( ) ; < nl > - onBusStarted ( ) ; < nl > - isProcessing = false ; < nl > - unstashAll ( ) ; < nl > - keepAliveCancel = schedule ( new KeepAlive ( ) , keepAliveRetry ) ; < nl > + connectBus ( responseCreateNewEventBus . getId ( ) , responseCreateNewEventBus . getDeviceId ( ) , timeout , false ) ; < nl > } < nl > } ) . failure ( new Consumer < Exception > ( ) { < nl > @ Override < nl > @ @ - 101 , 6 + 84 , 27 @ @ public class EventBusActor extends ModuleActor { < nl > } ) . done ( self ( ) ) ; < nl > } < nl > < nl > + public void connectBus ( String busId , long deviceId , boolean isJoined ) { < nl > + connectBus ( busId , deviceId , DEFAULT _ TIMEOUT , isJoined ) ; < nl > + } < nl > + < nl > + public void connectBus ( String busId , long deviceId , long timeout , boolean isJoined ) { < nl > + keepAliveTimeout = timeout ; < nl > + keepAliveRetry = timeout / 2 ; < nl > + this . busId = busId ; < nl > + this . deviceId = deviceId ; < nl > + context ( ) . getEventBus ( ) . subscribe ( busId , self ( ) ) ; < nl > + if ( isJoined ) { < nl > + onBusJoined ( ) ; < nl > + } else { < nl > + onBusCreated ( ) ; < nl > + } < nl > + onBusStarted ( ) ; < nl > + isProcessing = false ; < nl > + unstashAll ( ) ; < nl > + keepAliveCancel = schedule ( new KeepAlive ( ) , keepAliveRetry ) ; < nl > + } < nl > + < nl > / / < nl > / / Processing < nl > / /
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index 710b84b . . 985f11f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 29 , 6 + 29 , 7 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { < nl > private static final String TAG = " CallActor " ; < nl > < nl > private CallBusInt callBusInt ; < nl > + private PeerCallInt peerCallInt ; < nl > private final ActorRef callManager ; < nl > private final long callId ; < nl > private final PeerNodeSettings selfSettings ; < nl > @ @ - 66 , 6 + 67 , 11 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { < nl > return new CallBusActor ( new CallbackWrapper ( ) , selfSettings , context ( ) ) ; < nl > } < nl > } ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onBusCreated ( PeerCallInt peerCallInt ) { < nl > + this . peerCallInt = peerCallInt ; < nl > < nl > api ( new RequestGetCallInfo ( callId ) ) . then ( new Consumer < ResponseGetCallInfo > ( ) { < nl > @ Override < nl > @ @ - 82 , 11 + 88 , 6 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { < nl > } < nl > < nl > @ Override < nl > - public void onBusCreated ( PeerCallInt peerCallInt ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > public void onBusStarted ( String busId ) { < nl > < nl > } < nl > @ @ - 116 , 6 + 117 , 7 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { < nl > < nl > public void onAnswerCall ( ) { < nl > callBusInt . sendSignal ( masterUid , masterDeviceId , new ApiAnswerCall ( ) ) ; < nl > + peerCallInt . onOwnStarted ( ) ; < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java < nl > index a346e4e . . b2d2456 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java < nl > @ @ - 119 , 14 + 119 , 18 @ @ public class CallBusActor extends EventBusActor { < nl > peerCall . onAnswer ( senderDeviceId , answer . getSdp ( ) ) ; < nl > } else if ( signal instanceof ApiOffer ) { < nl > ApiOffer offer = ( ApiOffer ) signal ; < nl > + peerCall . onAdvertised ( senderDeviceId , new PeerNodeSettings ( offer . getOwnPeerSettings ( ) ) ) ; < nl > peerCall . onOffer ( senderDeviceId , offer . getSdp ( ) ) ; < nl > + peerCall . onTheirStarted ( senderDeviceId ) ; < nl > } else if ( signal instanceof ApiCandidate ) { < nl > ApiCandidate candidate = ( ApiCandidate ) signal ; < nl > peerCall . onCandidate ( senderDeviceId , candidate . getIndex ( ) , candidate . getId ( ) , candidate . getSdp ( ) ) ; < nl > } else if ( signal instanceof ApiNeedOffer ) { < nl > ApiNeedOffer needOffer = ( ApiNeedOffer ) signal ; < nl > deviceIds . put ( needOffer . getDevice ( ) , needOffer . getUid ( ) ) ; < nl > + peerCall . onAdvertised ( needOffer . getDevice ( ) , new PeerNodeSettings ( needOffer . getPeerSettings ( ) ) ) ; < nl > peerCall . onOfferNeeded ( needOffer . getDevice ( ) ) ; < nl > + peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; < nl > } else { < nl > if ( callBusCallback instanceof CallBusCallbackSlave ) { < nl > CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; < nl > @ @ - 148 , 6 + 152 , 7 @ @ public class CallBusActor extends EventBusActor { < nl > } < nl > < nl > public final void sendSignal ( int uid , long deviceId , ApiWebRTCSignaling signal ) { < nl > + Log . d ( " CallBusActor " , " Message Sent : " + signal ) ; < nl > try { < nl > sendMessage ( uid , deviceId , signal . buildContainer ( ) ) ; < nl > } catch ( IOException e ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > index ab7c2b7 . . 1f2adf7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java < nl > @ @ - 54 , 7 + 54 , 7 @ @ public class PeerCallActor extends ModuleActor implements PeerNodeCallback { < nl > @ Override < nl > public void apply ( WebRTCMediaStream webRTCMediaStream ) { < nl > PeerCallActor . this . webRTCMediaStream = webRTCMediaStream ; < nl > - PeerCallActor . this . webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; < nl > + / / PeerCallActor . this . webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; < nl > for ( PeerNodeInt node : refs . values ( ) ) { < nl > node . setOwnStream ( webRTCMediaStream ) ; < nl > } < nl > @ @ - 116 , 7 + 116 , 7 @ @ public class PeerCallActor extends ModuleActor implements PeerNodeCallback { < nl > public void onMediaOutputChanged ( boolean isEnabled ) { < nl > this . isOutputEnabled = isEnabled ; < nl > if ( webRTCMediaStream ! = null ) { < nl > - webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; < nl > + / / webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index 93657de . . a3deb60 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 91 , 7 + 91 , 7 @ @ public class PeerConnectionActor extends ModuleActor { < nl > public void onStreamAdded ( WebRTCMediaStream stream ) { < nl > / / Making stream as muted and make it needed to be explicitly enabled < nl > / / by parent actor < nl > - stream . setEnabled ( false ) ; < nl > + / / stream . setEnabled ( false ) ; < nl > callback . onStreamAdded ( stream ) ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > index e388cdb . . f53d210 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java < nl > @ @ - 12 , 6 + 12 , 7 @ @ import im . actor . core . modules . calls . peers . messages . RTCOffer ; < nl > import im . actor . core . modules . calls . peers . messages . RTCOwnStart ; < nl > import im . actor . core . modules . calls . peers . messages . RTCStart ; < nl > import im . actor . core . util . ModuleActor ; < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > < nl > / * * < nl > @ @ - 20 , 7 + 21 , 7 @ @ import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > * / < nl > public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback { < nl > < nl > - private static final int STASH _ CONNECTION = 1 ; < nl > + private static final String TAG = " PeerNodeActor " ; < nl > < nl > private final long deviceId ; < nl > private final PeerNodeCallback callback ; < nl > @ @ - 64 , 6 + 65 , 7 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > } < nl > this . theirSettings = settings ; < nl > reconfigurePeerConnectionIfNeeded ( ) ; < nl > + Log . d ( TAG , " onAdvertised " ) ; < nl > } < nl > < nl > public void onEnableOwn ( ) { < nl > @ @ - 72 , 6 + 74 , 7 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > } < nl > this . isOwnEnabled = true ; < nl > reconfigurePeerConnectionIfNeeded ( ) ; < nl > + Log . d ( TAG , " onEnableOwn " ) ; < nl > } < nl > < nl > public void onEnableTheir ( ) { < nl > @ @ - 80 , 11 + 83 , 13 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > } < nl > this . isTheirEnabled = true ; < nl > reconfigurePeerConnectionIfNeeded ( ) ; < nl > + Log . d ( TAG , " onEnableTheir " ) ; < nl > } < nl > < nl > public void setOwnSetStream ( WebRTCMediaStream mediaStream ) { < nl > this . mediaStream = mediaStream ; < nl > reconfigurePeerConnectionIfNeeded ( ) ; < nl > + Log . d ( TAG , " setOwnSetStream " ) ; < nl > } < nl > < nl > private void reconfigurePeerConnectionIfNeeded ( ) { < nl > @ @ - 101 , 11 + 106 , 13 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > if ( ( isOwnEnabled & & isTheirEnabled ) | | < nl > ( theirSettings . isPreConnectionEnabled ( ) & & ownSettings . isPreConnectionEnabled ( ) ) ) { < nl > < nl > + Log . d ( TAG , " Creating connection " ) ; < nl > + < nl > peerConnection = new PeerConnectionInt ( < nl > ownSettings , theirSettings , < nl > mediaStream , this , context ( ) , self ( ) , " connection " ) ; < nl > < nl > - unstashAll ( STASH _ CONNECTION ) ; < nl > + unstashAll ( ) ; < nl > } < nl > } < nl > < nl > @ @ - 114 , 14 + 121 , 20 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > return ; < nl > } < nl > isEnabled = true ; < nl > + < nl > + Log . d ( TAG , " Enabling connection " ) ; < nl > + < nl > for ( WebRTCMediaStream mediaStream : incomingStreams ) { < nl > - mediaStream . setEnabled ( true ) ; < nl > + / / mediaStream . setEnabled ( true ) ; < nl > } < nl > } < nl > < nl > private void startIfNeeded ( ) { < nl > if ( isEnabled & & isConnected & & ! isStarted ) { < nl > isStarted = true ; < nl > + < nl > + Log . d ( TAG , " Starting connection " ) ; < nl > + < nl > callback . onConnectionStarted ( deviceId ) ; < nl > for ( WebRTCMediaStream mediaStream : incomingStreams ) { < nl > callback . onStreamAdded ( deviceId , mediaStream ) ; < nl > @ @ - 152 , 7 + 165 , 7 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback < nl > @ Override < nl > public void onStreamAdded ( WebRTCMediaStream stream ) { < nl > incomingStreams . add ( stream ) ; < nl > - stream . setEnabled ( isEnabled ) ; < nl > + / / stream . setEnabled ( isEnabled ) ; < nl > if ( isStarted ) { < nl > callback . onStreamAdded ( deviceId , stream ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 27487e9 . . f867349 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 59 , 7 + 59 , 7 @ @ public class CallActor extends AbsCallActor { 
 public void apply ( ResponseDoCall responseDoCall ) { 
 
 callId = responseDoCall . getCallId ( ) ; 
 - callBus . joinBus ( responseDoCall . getEventBusId ( ) ) ; 
 + callBus . joinMasterBus ( responseDoCall . getEventBusId ( ) , responseDoCall . getDeviceId ( ) ) ; 
 callBus . startOwn ( ) ; 
 callVM = callViewModels . spawnNewOutgoingVM ( responseDoCall . getCallId ( ) , peer ) ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index b09810a . . 206cf57 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 226 , 6 + 226 , 9 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 public void onReceive ( Object message ) { 
 if ( message instanceof JoinBus ) { 
 joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; 
 + } else if ( message instanceof JoinMasterBus ) { 
 + JoinMasterBus joinMasterBus = ( JoinMasterBus ) message ; 
 + connectBus ( joinMasterBus . getBusId ( ) , joinMasterBus . getDeviceId ( ) , true ) ; 
 } else if ( message instanceof Mute ) { 
 onChangeMute ( ( ( Mute ) message ) . isMuted ( ) ) ; 
 } else if ( message instanceof OnAnswered ) { 
 @ @ - 248 , 6 + 251 , 25 @ @ public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 } 
 } 
 
 + public static class JoinMasterBus { 
 + 
 + private String busId ; 
 + private long deviceId ; 
 + 
 + public JoinMasterBus ( String busId , long deviceId ) { 
 + this . busId = busId ; 
 + this . deviceId = deviceId ; 
 + } 
 + 
 + public String getBusId ( ) { 
 + return busId ; 
 + } 
 + 
 + public long getDeviceId ( ) { 
 + return deviceId ; 
 + } 
 + } 
 + 
 public static class Mute { 
 private boolean isMuted ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java 
 index f6b9045 . . 3ac90df 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java 
 @ @ - 13 , 6 + 13 , 10 @ @ public class CallBusInt extends ActorInterface { 
 send ( new CallBusActor . JoinBus ( busId ) ) ; 
 } 
 
 + public void joinMasterBus ( String busId , long deviceId ) { 
 + send ( new CallBusActor . JoinMasterBus ( busId , deviceId ) ) ; 
 + } 
 + 
 public void changeMute ( boolean isMuted ) { 
 send ( new CallBusActor . Mute ( isMuted ) ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java 
 index 2718a82 . . 61a71fc 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / eventbus / EventBusActor . java 
 @ @ - 45 , 25 + 45 , 17 @ @ public class EventBusActor extends ModuleActor { 
 return deviceId ; 
 } 
 
 + 
 public void joinBus ( final String busId ) { 
 joinBus ( busId , DEFAULT _ TIMEOUT ) ; 
 } 
 
 - public void joinBus ( final String busId , long timeout ) { 
 + public void joinBus ( final String busId , final long timeout ) { 
 isProcessing = true ; 
 - keepAliveTimeout = timeout ; 
 - keepAliveRetry = timeout / 2 ; 
 - api ( new RequestJoinEventBus ( busId , keepAliveTimeout ) ) . then ( new Consumer < ResponseJoinEventBus > ( ) { 
 + api ( new RequestJoinEventBus ( busId , timeout ) ) . then ( new Consumer < ResponseJoinEventBus > ( ) { 
 @ Override 
 public void apply ( ResponseJoinEventBus responseJoinEventBus ) { 
 - EventBusActor . this . busId = busId ; 
 - deviceId = responseJoinEventBus . getDeviceId ( ) ; 
 - context ( ) . getEventBus ( ) . subscribe ( busId , self ( ) ) ; 
 - onBusJoined ( ) ; 
 - onBusStarted ( ) ; 
 - isProcessing = false ; 
 - unstashAll ( ) ; 
 - keepAliveCancel = schedule ( new KeepAlive ( ) , keepAliveRetry ) ; 
 + connectBus ( busId , responseJoinEventBus . getDeviceId ( ) , timeout , true ) ; 
 } 
 } ) . failure ( new Consumer < Exception > ( ) { 
 @ Override 
 @ @ - 77 , 21 + 69 , 12 @ @ public class EventBusActor extends ModuleActor { 
 createBus ( DEFAULT _ TIMEOUT ) ; 
 } 
 
 - public void createBus ( long timeout ) { 
 + public void createBus ( final long timeout ) { 
 isProcessing = true ; 
 - keepAliveTimeout = timeout ; 
 - keepAliveRetry = timeout / 2 ; 
 - api ( new RequestCreateNewEventBus ( keepAliveTimeout , true ) ) . then ( new Consumer < ResponseCreateNewEventBus > ( ) { 
 + api ( new RequestCreateNewEventBus ( timeout , true ) ) . then ( new Consumer < ResponseCreateNewEventBus > ( ) { 
 @ Override 
 public void apply ( ResponseCreateNewEventBus responseCreateNewEventBus ) { 
 - busId = responseCreateNewEventBus . getId ( ) ; 
 - deviceId = responseCreateNewEventBus . getDeviceId ( ) ; 
 - context ( ) . getEventBus ( ) . subscribe ( busId , self ( ) ) ; 
 - onBusCreated ( ) ; 
 - onBusStarted ( ) ; 
 - isProcessing = false ; 
 - unstashAll ( ) ; 
 - keepAliveCancel = schedule ( new KeepAlive ( ) , keepAliveRetry ) ; 
 + connectBus ( responseCreateNewEventBus . getId ( ) , responseCreateNewEventBus . getDeviceId ( ) , timeout , false ) ; 
 } 
 } ) . failure ( new Consumer < Exception > ( ) { 
 @ Override 
 @ @ - 101 , 6 + 84 , 27 @ @ public class EventBusActor extends ModuleActor { 
 } ) . done ( self ( ) ) ; 
 } 
 
 + public void connectBus ( String busId , long deviceId , boolean isJoined ) { 
 + connectBus ( busId , deviceId , DEFAULT _ TIMEOUT , isJoined ) ; 
 + } 
 + 
 + public void connectBus ( String busId , long deviceId , long timeout , boolean isJoined ) { 
 + keepAliveTimeout = timeout ; 
 + keepAliveRetry = timeout / 2 ; 
 + this . busId = busId ; 
 + this . deviceId = deviceId ; 
 + context ( ) . getEventBus ( ) . subscribe ( busId , self ( ) ) ; 
 + if ( isJoined ) { 
 + onBusJoined ( ) ; 
 + } else { 
 + onBusCreated ( ) ; 
 + } 
 + onBusStarted ( ) ; 
 + isProcessing = false ; 
 + unstashAll ( ) ; 
 + keepAliveCancel = schedule ( new KeepAlive ( ) , keepAliveRetry ) ; 
 + } 
 + 
 / / 
 / / Processing 
 / /

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index 710b84b . . 985f11f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 29 , 6 + 29 , 7 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { 
 private static final String TAG = " CallActor " ; 
 
 private CallBusInt callBusInt ; 
 + private PeerCallInt peerCallInt ; 
 private final ActorRef callManager ; 
 private final long callId ; 
 private final PeerNodeSettings selfSettings ; 
 @ @ - 66 , 6 + 67 , 11 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { 
 return new CallBusActor ( new CallbackWrapper ( ) , selfSettings , context ( ) ) ; 
 } 
 } ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onBusCreated ( PeerCallInt peerCallInt ) { 
 + this . peerCallInt = peerCallInt ; 
 
 api ( new RequestGetCallInfo ( callId ) ) . then ( new Consumer < ResponseGetCallInfo > ( ) { 
 @ Override 
 @ @ - 82 , 11 + 88 , 6 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { 
 } 
 
 @ Override 
 - public void onBusCreated ( PeerCallInt peerCallInt ) { 
 - 
 - } 
 - 
 - @ Override 
 public void onBusStarted ( String busId ) { 
 
 } 
 @ @ - 116 , 6 + 117 , 7 @ @ public class CallActor extends ModuleActor implements CallBusCallbackSlave { 
 
 public void onAnswerCall ( ) { 
 callBusInt . sendSignal ( masterUid , masterDeviceId , new ApiAnswerCall ( ) ) ; 
 + peerCallInt . onOwnStarted ( ) ; 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java 
 index a346e4e . . b2d2456 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / bus / CallBusActor . java 
 @ @ - 119 , 14 + 119 , 18 @ @ public class CallBusActor extends EventBusActor { 
 peerCall . onAnswer ( senderDeviceId , answer . getSdp ( ) ) ; 
 } else if ( signal instanceof ApiOffer ) { 
 ApiOffer offer = ( ApiOffer ) signal ; 
 + peerCall . onAdvertised ( senderDeviceId , new PeerNodeSettings ( offer . getOwnPeerSettings ( ) ) ) ; 
 peerCall . onOffer ( senderDeviceId , offer . getSdp ( ) ) ; 
 + peerCall . onTheirStarted ( senderDeviceId ) ; 
 } else if ( signal instanceof ApiCandidate ) { 
 ApiCandidate candidate = ( ApiCandidate ) signal ; 
 peerCall . onCandidate ( senderDeviceId , candidate . getIndex ( ) , candidate . getId ( ) , candidate . getSdp ( ) ) ; 
 } else if ( signal instanceof ApiNeedOffer ) { 
 ApiNeedOffer needOffer = ( ApiNeedOffer ) signal ; 
 deviceIds . put ( needOffer . getDevice ( ) , needOffer . getUid ( ) ) ; 
 + peerCall . onAdvertised ( needOffer . getDevice ( ) , new PeerNodeSettings ( needOffer . getPeerSettings ( ) ) ) ; 
 peerCall . onOfferNeeded ( needOffer . getDevice ( ) ) ; 
 + peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; 
 } else { 
 if ( callBusCallback instanceof CallBusCallbackSlave ) { 
 CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; 
 @ @ - 148 , 6 + 152 , 7 @ @ public class CallBusActor extends EventBusActor { 
 } 
 
 public final void sendSignal ( int uid , long deviceId , ApiWebRTCSignaling signal ) { 
 + Log . d ( " CallBusActor " , " Message Sent : " + signal ) ; 
 try { 
 sendMessage ( uid , deviceId , signal . buildContainer ( ) ) ; 
 } catch ( IOException e ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 index ab7c2b7 . . 1f2adf7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerCallActor . java 
 @ @ - 54 , 7 + 54 , 7 @ @ public class PeerCallActor extends ModuleActor implements PeerNodeCallback { 
 @ Override 
 public void apply ( WebRTCMediaStream webRTCMediaStream ) { 
 PeerCallActor . this . webRTCMediaStream = webRTCMediaStream ; 
 - PeerCallActor . this . webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; 
 + / / PeerCallActor . this . webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; 
 for ( PeerNodeInt node : refs . values ( ) ) { 
 node . setOwnStream ( webRTCMediaStream ) ; 
 } 
 @ @ - 116 , 7 + 116 , 7 @ @ public class PeerCallActor extends ModuleActor implements PeerNodeCallback { 
 public void onMediaOutputChanged ( boolean isEnabled ) { 
 this . isOutputEnabled = isEnabled ; 
 if ( webRTCMediaStream ! = null ) { 
 - webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; 
 + / / webRTCMediaStream . setEnabled ( ! isOutputEnabled ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index 93657de . . a3deb60 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 91 , 7 + 91 , 7 @ @ public class PeerConnectionActor extends ModuleActor { 
 public void onStreamAdded ( WebRTCMediaStream stream ) { 
 / / Making stream as muted and make it needed to be explicitly enabled 
 / / by parent actor 
 - stream . setEnabled ( false ) ; 
 + / / stream . setEnabled ( false ) ; 
 callback . onStreamAdded ( stream ) ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 index e388cdb . . f53d210 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerNodeActor . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import im . actor . core . modules . calls . peers . messages . RTCOffer ; 
 import im . actor . core . modules . calls . peers . messages . RTCOwnStart ; 
 import im . actor . core . modules . calls . peers . messages . RTCStart ; 
 import im . actor . core . util . ModuleActor ; 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 
 / * * 
 @ @ - 20 , 7 + 21 , 7 @ @ import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 * / 
 public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback { 
 
 - private static final int STASH _ CONNECTION = 1 ; 
 + private static final String TAG = " PeerNodeActor " ; 
 
 private final long deviceId ; 
 private final PeerNodeCallback callback ; 
 @ @ - 64 , 6 + 65 , 7 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 } 
 this . theirSettings = settings ; 
 reconfigurePeerConnectionIfNeeded ( ) ; 
 + Log . d ( TAG , " onAdvertised " ) ; 
 } 
 
 public void onEnableOwn ( ) { 
 @ @ - 72 , 6 + 74 , 7 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 } 
 this . isOwnEnabled = true ; 
 reconfigurePeerConnectionIfNeeded ( ) ; 
 + Log . d ( TAG , " onEnableOwn " ) ; 
 } 
 
 public void onEnableTheir ( ) { 
 @ @ - 80 , 11 + 83 , 13 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 } 
 this . isTheirEnabled = true ; 
 reconfigurePeerConnectionIfNeeded ( ) ; 
 + Log . d ( TAG , " onEnableTheir " ) ; 
 } 
 
 public void setOwnSetStream ( WebRTCMediaStream mediaStream ) { 
 this . mediaStream = mediaStream ; 
 reconfigurePeerConnectionIfNeeded ( ) ; 
 + Log . d ( TAG , " setOwnSetStream " ) ; 
 } 
 
 private void reconfigurePeerConnectionIfNeeded ( ) { 
 @ @ - 101 , 11 + 106 , 13 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 if ( ( isOwnEnabled & & isTheirEnabled ) | | 
 ( theirSettings . isPreConnectionEnabled ( ) & & ownSettings . isPreConnectionEnabled ( ) ) ) { 
 
 + Log . d ( TAG , " Creating connection " ) ; 
 + 
 peerConnection = new PeerConnectionInt ( 
 ownSettings , theirSettings , 
 mediaStream , this , context ( ) , self ( ) , " connection " ) ; 
 
 - unstashAll ( STASH _ CONNECTION ) ; 
 + unstashAll ( ) ; 
 } 
 } 
 
 @ @ - 114 , 14 + 121 , 20 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 return ; 
 } 
 isEnabled = true ; 
 + 
 + Log . d ( TAG , " Enabling connection " ) ; 
 + 
 for ( WebRTCMediaStream mediaStream : incomingStreams ) { 
 - mediaStream . setEnabled ( true ) ; 
 + / / mediaStream . setEnabled ( true ) ; 
 } 
 } 
 
 private void startIfNeeded ( ) { 
 if ( isEnabled & & isConnected & & ! isStarted ) { 
 isStarted = true ; 
 + 
 + Log . d ( TAG , " Starting connection " ) ; 
 + 
 callback . onConnectionStarted ( deviceId ) ; 
 for ( WebRTCMediaStream mediaStream : incomingStreams ) { 
 callback . onStreamAdded ( deviceId , mediaStream ) ; 
 @ @ - 152 , 7 + 165 , 7 @ @ public class PeerNodeActor extends ModuleActor implements PeerConnectionCallback 
 @ Override 
 public void onStreamAdded ( WebRTCMediaStream stream ) { 
 incomingStreams . add ( stream ) ; 
 - stream . setEnabled ( isEnabled ) ; 
 + / / stream . setEnabled ( isEnabled ) ; 
 if ( isStarted ) { 
 callback . onStreamAdded ( deviceId , stream ) ; 
 }
