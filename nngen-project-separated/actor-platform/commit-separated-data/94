BLEU SCORE: 0.07658412276041004

TEST MSG: feat + fix ( iOS , core ) : Auto join to groups in iOS , fixing crash in ConductorActor
GENERATED MSG: ref ( core ) : Improve initial state handling

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > index 3773b66 . . 70eee0d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > @ @ - 30 , 6 + 30 , 8 @ @ import ActorSDK < nl > < nl > ActorSDK . sharedActor ( ) . style . dialogAvatarSize = 58 < nl > < nl > + ActorSDK . sharedActor ( ) . autoJoinGroups = [ " actor _ news " ] < nl > + < nl > / / Creating Actor < nl > ActorSDK . sharedActor ( ) . createActor ( ) < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 8c2f8eb . . 0116857 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 138 , 6 + 138 , 11 @ @ import DZNWebViewController < nl > / / / Enable experimental features < nl > public var enableExperimentalFeatures : Bool = false < nl > < nl > + / / / Auto Join Groups < nl > + public var autoJoinGroups = [ String ] ( ) < nl > + < nl > + / / / Should perform auto join only after first message or contact < nl > + public var autoJoinOnReady = true < nl > < nl > / / < nl > / / User Onlines < nl > @ @ - 256 , 6 + 261 , 16 @ @ import DZNWebViewController < nl > log ( " Found time zone : \ ( timeZone ) " ) < nl > builder . setTimeZone ( timeZone ) < nl > < nl > + / / AutoJoin < nl > + for s in autoJoinGroups { < nl > + builder . addAutoJoinGroupWithToken ( s ) < nl > + } < nl > + if autoJoinOnReady { < nl > + builder . setAutoJoinType ( ACAutoJoinType . AFTER _ INIT ( ) ) < nl > + } else { < nl > + builder . setAutoJoinType ( ACAutoJoinType . IMMEDIATELY ( ) ) < nl > + } < nl > + < nl > / / Logs < nl > / / builder . setEnableFilesLogging ( true ) < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java < nl > index ea51a10 . . cca0a8b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java < nl > @ @ - 197 , 17 + 197 , 14 @ @ public class Modules implements ModuleContext { < nl > calls . run ( ) ; < nl > timing . section ( " Stickers " ) ; < nl > stickers . run ( ) ; < nl > + timing . section ( " Conductor : end " ) ; < nl > + conductor . runAfter ( ) ; < nl > timing . end ( ) ; < nl > < nl > if ( Runtime . isMainThread ( ) ) { < nl > messenger . onLoggedIn ( ) ; < nl > } else { < nl > - Runtime . postToMainThread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - messenger . onLoggedIn ( ) ; < nl > - } < nl > - } ) ; < nl > + Runtime . postToMainThread ( ( ) - > messenger . onLoggedIn ( ) ) ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java < nl > index c242562 . . 1cf4037 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java < nl > @ @ - 11 , 6 + 11 , 10 @ @ public class Conductor extends ActorInterface { < nl > super ( system ( ) . actorOf ( " conductor " , ( ) - > new ConductorActor ( context ) ) ) ; < nl > } < nl > < nl > + public void finishLaunching ( ) { < nl > + send ( new ConductorActor . FinishLaunching ( ) ) ; < nl > + } < nl > + < nl > public void onContactsLoaded ( ) { < nl > send ( new ConductorActor . ContactsLoaded ( ) ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java < nl > index 0adb99c . . 9b616db 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java < nl > @ @ - 4 , 6 + 4 , 7 @ @ import java . util . ArrayList ; < nl > < nl > import im . actor . core . AutoJoinType ; < nl > import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; < nl > + import im . actor . core . api . rpc . ResponseVoid ; < nl > import im . actor . core . modules . ModuleActor ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . util . JavaUtil ; < nl > @ @ - 20 , 8 + 21 , 11 @ @ import im . actor . runtime . Log ; < nl > public class ConductorActor extends ModuleActor { < nl > < nl > public static final String TAG = " Conductor " ; < nl > + private static final ResponseVoid DUMB = null ; < nl > + private static final Integer DUMB2 = null ; < nl > < nl > private AppStateVM appStateVM ; < nl > + private boolean isStarted = false ; < nl > < nl > public ConductorActor ( ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 34 , 7 + 38 , 15 @ @ public class ConductorActor extends ModuleActor { < nl > updateDeviceInfoIfNeeded ( ) ; < nl > < nl > appStateVM = context ( ) . getConductor ( ) . getAppStateVM ( ) ; < nl > + } < nl > < nl > + public void onFinishLaunching ( ) { < nl > + if ( isStarted ) { < nl > + return ; < nl > + } < nl > + isStarted = true ; < nl > + unstashAll ( ) ; < nl > + < nl > if ( appStateVM . isDialogsLoaded ( ) & & appStateVM . isContactsLoaded ( ) & & appStateVM . isSettingsLoaded ( ) ) { < nl > onInitialDataDownloaded ( ) ; < nl > } < nl > @ @ - 202 , 17 + 214 , 43 @ @ public class ConductorActor extends ModuleActor { < nl > @ Override < nl > public void onReceive ( Object message ) { < nl > if ( message instanceof DialogsLoaded ) { < nl > + if ( ! isStarted ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > onDialogsLoaded ( ) ; < nl > } else if ( message instanceof ContactsLoaded ) { < nl > + if ( ! isStarted ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > onContactsLoaded ( ) ; < nl > } else if ( message instanceof SettingsLoaded ) { < nl > + if ( ! isStarted ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > onSettingsLoaded ( ) ; < nl > } else if ( message instanceof BookImported ) { < nl > + if ( ! isStarted ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > onBookImported ( ) ; < nl > } else if ( message instanceof ContactsChanged ) { < nl > + if ( ! isStarted ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > onContactsChanged ( ( ( ContactsChanged ) message ) . isEmpty ( ) ) ; < nl > } else if ( message instanceof DialogsChanged ) { < nl > + if ( ! isStarted ) { < nl > + stash ( ) ; < nl > + return ; < nl > + } < nl > onDialogsChanged ( ( ( DialogsChanged ) message ) . isEmpty ( ) ) ; < nl > + } else if ( message instanceof FinishLaunching ) { < nl > + onFinishLaunching ( ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > @ @ - 257 , 4 + 295 , 8 @ @ public class ConductorActor extends ModuleActor { < nl > return isEmpty ; < nl > } < nl > } < nl > + < nl > + public static class FinishLaunching { < nl > + < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java < nl > index f81aba4 . . fb58a1c 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java < nl > @ @ - 22 , 6 + 22 , 10 @ @ public class ConductorModule extends AbsModule { < nl > this . conductor = new Conductor ( context ( ) ) ; < nl > } < nl > < nl > + public void runAfter ( ) { < nl > + this . conductor . finishLaunching ( ) ; < nl > + } < nl > + < nl > public Conductor getConductor ( ) { < nl > return conductor ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java < nl > index 2618f6b . . c541833 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java < nl > @ @ - 78 , 6 + 78 , 8 @ @ public class BookImportActor extends ModuleActor { < nl > private void performSync ( ) { < nl > / / Ignoring syncing if not enabled < nl > if ( ! config ( ) . isEnablePhoneBookImport ( ) ) { < nl > + / / Marking as everything is imported < nl > + context ( ) . getAppStateModule ( ) . onBookImported ( ) ; < nl > return ; < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java < nl > index bde055b . . 994c545 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java < nl > @ @ - 301 , 7 + 301 , 6 @ @ public class DialogsActor extends ModuleActor { < nl > } < nl > addOrUpdateItems ( updated ) ; < nl > updateSearch ( updated ) ; < nl > - context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; < nl > notifyState ( true ) ; < nl > return Promise . success ( null ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java < nl > index eba6428 . . fdc14ed 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java < nl > @ @ - 4 , 21 + 4 , 15 @ @ < nl > < nl > package im . actor . core . modules . misc ; < nl > < nl > - import im . actor . core . api . ApiAppCounters ; < nl > import im . actor . core . modules . AbsModule ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . viewmodel . AppStateVM ; < nl > import im . actor . core . viewmodel . GlobalStateVM ; < nl > - import im . actor . runtime . actors . ActorCreator ; < nl > - import im . actor . runtime . actors . ActorRef ; < nl > - < nl > - import static im . actor . runtime . actors . ActorSystem . system ; < nl > < nl > public class AppStateModule extends AbsModule { < nl > < nl > private AppStateVM appStateVM ; < nl > private GlobalStateVM globalStateVM ; < nl > - private ActorRef listStatesActor ; < nl > < nl > public AppStateModule ( ModuleContext context ) { < nl > super ( context ) ; < nl > @ @ - 28 , 27 + 22 , 26 @ @ public class AppStateModule extends AbsModule { < nl > < nl > public void run ( ) { < nl > this . appStateVM = new AppStateVM ( context ( ) ) ; < nl > - listStatesActor = system ( ) . actorOf ( " actor / app / state " , ( ) - > new ListsStatesActor ( context ( ) ) ) ; < nl > } < nl > < nl > public void onDialogsUpdate ( boolean isEmpty ) { < nl > - listStatesActor . send ( new ListsStatesActor . OnDialogsChanged ( isEmpty ) ) ; < nl > + appStateVM . onDialogsChanged ( isEmpty ) ; < nl > } < nl > < nl > public void onContactsUpdate ( boolean isEmpty ) { < nl > - listStatesActor . send ( new ListsStatesActor . OnContactsChanged ( isEmpty ) ) ; < nl > + appStateVM . onContactsChanged ( isEmpty ) ; < nl > } < nl > < nl > public void onBookImported ( ) { < nl > - listStatesActor . send ( new ListsStatesActor . OnBookImported ( ) ) ; < nl > + appStateVM . onPhoneImported ( ) ; < nl > } < nl > < nl > public void onContactsLoaded ( ) { < nl > - listStatesActor . send ( new ListsStatesActor . OnContactsLoaded ( ) ) ; < nl > + appStateVM . onContactsLoaded ( ) ; < nl > } < nl > < nl > public void onDialogsLoaded ( ) { < nl > - listStatesActor . send ( new ListsStatesActor . OnDialogsLoaded ( ) ) ; < nl > + appStateVM . onDialogsLoaded ( ) ; < nl > } < nl > < nl > public AppStateVM getAppStateVM ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / ListsStatesActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / ListsStatesActor . java < nl > deleted file mode 100644 < nl > index 7992638 . . 0000000 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / ListsStatesActor . java < nl > + + + / dev / null < nl > @ @ - 1 , 88 + 0 , 0 @ @ < nl > - / * < nl > - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > < nl > - * / < nl > - < nl > - package im . actor . core . modules . misc ; < nl > - < nl > - import im . actor . core . modules . ModuleContext ; < nl > - import im . actor . core . modules . ModuleActor ; < nl > - < nl > - public class ListsStatesActor extends ModuleActor { < nl > - < nl > - public ListsStatesActor ( ModuleContext context ) { < nl > - super ( context ) ; < nl > - } < nl > - < nl > - public void onDialogsChanged ( boolean isEmpty ) { < nl > - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onDialogsChanged ( isEmpty ) ; < nl > - } < nl > - < nl > - public void onContactsChanged ( boolean isEmpty ) { < nl > - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onContactsChanged ( isEmpty ) ; < nl > - } < nl > - < nl > - public void onBookImported ( ) { < nl > - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onPhoneImported ( ) ; < nl > - } < nl > - < nl > - public void onContactsLoaded ( ) { < nl > - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onContactsLoaded ( ) ; < nl > - } < nl > - < nl > - public void onDialogsLoaded ( ) { < nl > - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onDialogsLoaded ( ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onReceive ( Object message ) { < nl > - if ( message instanceof OnContactsChanged ) { < nl > - onContactsChanged ( ( ( OnContactsChanged ) message ) . isEmpty ( ) ) ; < nl > - } else if ( message instanceof OnDialogsChanged ) { < nl > - onDialogsChanged ( ( ( OnDialogsChanged ) message ) . isEmpty ( ) ) ; < nl > - } else if ( message instanceof OnBookImported ) { < nl > - onBookImported ( ) ; < nl > - } else if ( message instanceof OnContactsLoaded ) { < nl > - onContactsLoaded ( ) ; < nl > - } else if ( message instanceof OnDialogsLoaded ) { < nl > - onDialogsLoaded ( ) ; < nl > - } else { < nl > - super . onReceive ( message ) ; < nl > - } < nl > - } < nl > - < nl > - public static class OnBookImported { < nl > - < nl > - } < nl > - < nl > - public static class OnContactsLoaded { < nl > - < nl > - } < nl > - < nl > - public static class OnDialogsLoaded { < nl > - < nl > - } < nl > - < nl > - public static class OnContactsChanged { < nl > - private boolean isEmpty ; < nl > - < nl > - public OnContactsChanged ( boolean isEmpty ) { < nl > - this . isEmpty = isEmpty ; < nl > - } < nl > - < nl > - public boolean isEmpty ( ) { < nl > - return isEmpty ; < nl > - } < nl > - } < nl > - < nl > - public static class OnDialogsChanged { < nl > - private boolean isEmpty ; < nl > - < nl > - public OnDialogsChanged ( boolean isEmpty ) { < nl > - this . isEmpty = isEmpty ; < nl > - } < nl > - < nl > - public boolean isEmpty ( ) { < nl > - return isEmpty ; < nl > - } < nl > - } < nl > - }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 index 3773b66 . . 70eee0d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 @ @ - 30 , 6 + 30 , 8 @ @ import ActorSDK 
 
 ActorSDK . sharedActor ( ) . style . dialogAvatarSize = 58 
 
 + ActorSDK . sharedActor ( ) . autoJoinGroups = [ " actor _ news " ] 
 + 
 / / Creating Actor 
 ActorSDK . sharedActor ( ) . createActor ( ) 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 8c2f8eb . . 0116857 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 138 , 6 + 138 , 11 @ @ import DZNWebViewController 
 / / / Enable experimental features 
 public var enableExperimentalFeatures : Bool = false 
 
 + / / / Auto Join Groups 
 + public var autoJoinGroups = [ String ] ( ) 
 + 
 + / / / Should perform auto join only after first message or contact 
 + public var autoJoinOnReady = true 
 
 / / 
 / / User Onlines 
 @ @ - 256 , 6 + 261 , 16 @ @ import DZNWebViewController 
 log ( " Found time zone : \ ( timeZone ) " ) 
 builder . setTimeZone ( timeZone ) 
 
 + / / AutoJoin 
 + for s in autoJoinGroups { 
 + builder . addAutoJoinGroupWithToken ( s ) 
 + } 
 + if autoJoinOnReady { 
 + builder . setAutoJoinType ( ACAutoJoinType . AFTER _ INIT ( ) ) 
 + } else { 
 + builder . setAutoJoinType ( ACAutoJoinType . IMMEDIATELY ( ) ) 
 + } 
 + 
 / / Logs 
 / / builder . setEnableFilesLogging ( true ) 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java 
 index ea51a10 . . cca0a8b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Modules . java 
 @ @ - 197 , 17 + 197 , 14 @ @ public class Modules implements ModuleContext { 
 calls . run ( ) ; 
 timing . section ( " Stickers " ) ; 
 stickers . run ( ) ; 
 + timing . section ( " Conductor : end " ) ; 
 + conductor . runAfter ( ) ; 
 timing . end ( ) ; 
 
 if ( Runtime . isMainThread ( ) ) { 
 messenger . onLoggedIn ( ) ; 
 } else { 
 - Runtime . postToMainThread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - messenger . onLoggedIn ( ) ; 
 - } 
 - } ) ; 
 + Runtime . postToMainThread ( ( ) - > messenger . onLoggedIn ( ) ) ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java 
 index c242562 . . 1cf4037 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / Conductor . java 
 @ @ - 11 , 6 + 11 , 10 @ @ public class Conductor extends ActorInterface { 
 super ( system ( ) . actorOf ( " conductor " , ( ) - > new ConductorActor ( context ) ) ) ; 
 } 
 
 + public void finishLaunching ( ) { 
 + send ( new ConductorActor . FinishLaunching ( ) ) ; 
 + } 
 + 
 public void onContactsLoaded ( ) { 
 send ( new ConductorActor . ContactsLoaded ( ) ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java 
 index 0adb99c . . 9b616db 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorActor . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . ArrayList ; 
 
 import im . actor . core . AutoJoinType ; 
 import im . actor . core . api . rpc . RequestNotifyAboutDeviceInfo ; 
 + import im . actor . core . api . rpc . ResponseVoid ; 
 import im . actor . core . modules . ModuleActor ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . util . JavaUtil ; 
 @ @ - 20 , 8 + 21 , 11 @ @ import im . actor . runtime . Log ; 
 public class ConductorActor extends ModuleActor { 
 
 public static final String TAG = " Conductor " ; 
 + private static final ResponseVoid DUMB = null ; 
 + private static final Integer DUMB2 = null ; 
 
 private AppStateVM appStateVM ; 
 + private boolean isStarted = false ; 
 
 public ConductorActor ( ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 34 , 7 + 38 , 15 @ @ public class ConductorActor extends ModuleActor { 
 updateDeviceInfoIfNeeded ( ) ; 
 
 appStateVM = context ( ) . getConductor ( ) . getAppStateVM ( ) ; 
 + } 
 
 + public void onFinishLaunching ( ) { 
 + if ( isStarted ) { 
 + return ; 
 + } 
 + isStarted = true ; 
 + unstashAll ( ) ; 
 + 
 if ( appStateVM . isDialogsLoaded ( ) & & appStateVM . isContactsLoaded ( ) & & appStateVM . isSettingsLoaded ( ) ) { 
 onInitialDataDownloaded ( ) ; 
 } 
 @ @ - 202 , 17 + 214 , 43 @ @ public class ConductorActor extends ModuleActor { 
 @ Override 
 public void onReceive ( Object message ) { 
 if ( message instanceof DialogsLoaded ) { 
 + if ( ! isStarted ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 onDialogsLoaded ( ) ; 
 } else if ( message instanceof ContactsLoaded ) { 
 + if ( ! isStarted ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 onContactsLoaded ( ) ; 
 } else if ( message instanceof SettingsLoaded ) { 
 + if ( ! isStarted ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 onSettingsLoaded ( ) ; 
 } else if ( message instanceof BookImported ) { 
 + if ( ! isStarted ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 onBookImported ( ) ; 
 } else if ( message instanceof ContactsChanged ) { 
 + if ( ! isStarted ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 onContactsChanged ( ( ( ContactsChanged ) message ) . isEmpty ( ) ) ; 
 } else if ( message instanceof DialogsChanged ) { 
 + if ( ! isStarted ) { 
 + stash ( ) ; 
 + return ; 
 + } 
 onDialogsChanged ( ( ( DialogsChanged ) message ) . isEmpty ( ) ) ; 
 + } else if ( message instanceof FinishLaunching ) { 
 + onFinishLaunching ( ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 @ @ - 257 , 4 + 295 , 8 @ @ public class ConductorActor extends ModuleActor { 
 return isEmpty ; 
 } 
 } 
 + 
 + public static class FinishLaunching { 
 + 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java 
 index f81aba4 . . fb58a1c 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / conductor / ConductorModule . java 
 @ @ - 22 , 6 + 22 , 10 @ @ public class ConductorModule extends AbsModule { 
 this . conductor = new Conductor ( context ( ) ) ; 
 } 
 
 + public void runAfter ( ) { 
 + this . conductor . finishLaunching ( ) ; 
 + } 
 + 
 public Conductor getConductor ( ) { 
 return conductor ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java 
 index 2618f6b . . c541833 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / BookImportActor . java 
 @ @ - 78 , 6 + 78 , 8 @ @ public class BookImportActor extends ModuleActor { 
 private void performSync ( ) { 
 / / Ignoring syncing if not enabled 
 if ( ! config ( ) . isEnablePhoneBookImport ( ) ) { 
 + / / Marking as everything is imported 
 + context ( ) . getAppStateModule ( ) . onBookImported ( ) ; 
 return ; 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java 
 index bde055b . . 994c545 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / dialogs / DialogsActor . java 
 @ @ - 301 , 7 + 301 , 6 @ @ public class DialogsActor extends ModuleActor { 
 } 
 addOrUpdateItems ( updated ) ; 
 updateSearch ( updated ) ; 
 - context ( ) . getAppStateModule ( ) . onDialogsLoaded ( ) ; 
 notifyState ( true ) ; 
 return Promise . success ( null ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java 
 index eba6428 . . fdc14ed 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / AppStateModule . java 
 @ @ - 4 , 21 + 4 , 15 @ @ 
 
 package im . actor . core . modules . misc ; 
 
 - import im . actor . core . api . ApiAppCounters ; 
 import im . actor . core . modules . AbsModule ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . viewmodel . AppStateVM ; 
 import im . actor . core . viewmodel . GlobalStateVM ; 
 - import im . actor . runtime . actors . ActorCreator ; 
 - import im . actor . runtime . actors . ActorRef ; 
 - 
 - import static im . actor . runtime . actors . ActorSystem . system ; 
 
 public class AppStateModule extends AbsModule { 
 
 private AppStateVM appStateVM ; 
 private GlobalStateVM globalStateVM ; 
 - private ActorRef listStatesActor ; 
 
 public AppStateModule ( ModuleContext context ) { 
 super ( context ) ; 
 @ @ - 28 , 27 + 22 , 26 @ @ public class AppStateModule extends AbsModule { 
 
 public void run ( ) { 
 this . appStateVM = new AppStateVM ( context ( ) ) ; 
 - listStatesActor = system ( ) . actorOf ( " actor / app / state " , ( ) - > new ListsStatesActor ( context ( ) ) ) ; 
 } 
 
 public void onDialogsUpdate ( boolean isEmpty ) { 
 - listStatesActor . send ( new ListsStatesActor . OnDialogsChanged ( isEmpty ) ) ; 
 + appStateVM . onDialogsChanged ( isEmpty ) ; 
 } 
 
 public void onContactsUpdate ( boolean isEmpty ) { 
 - listStatesActor . send ( new ListsStatesActor . OnContactsChanged ( isEmpty ) ) ; 
 + appStateVM . onContactsChanged ( isEmpty ) ; 
 } 
 
 public void onBookImported ( ) { 
 - listStatesActor . send ( new ListsStatesActor . OnBookImported ( ) ) ; 
 + appStateVM . onPhoneImported ( ) ; 
 } 
 
 public void onContactsLoaded ( ) { 
 - listStatesActor . send ( new ListsStatesActor . OnContactsLoaded ( ) ) ; 
 + appStateVM . onContactsLoaded ( ) ; 
 } 
 
 public void onDialogsLoaded ( ) { 
 - listStatesActor . send ( new ListsStatesActor . OnDialogsLoaded ( ) ) ; 
 + appStateVM . onDialogsLoaded ( ) ; 
 } 
 
 public AppStateVM getAppStateVM ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / ListsStatesActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / ListsStatesActor . java 
 deleted file mode 100644 
 index 7992638 . . 0000000 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / misc / ListsStatesActor . java 
 + + + / dev / null 
 @ @ - 1 , 88 + 0 , 0 @ @ 
 - / * 
 - * Copyright ( C ) 2015 Actor LLC . < https : / / actor . im > 
 - * / 
 - 
 - package im . actor . core . modules . misc ; 
 - 
 - import im . actor . core . modules . ModuleContext ; 
 - import im . actor . core . modules . ModuleActor ; 
 - 
 - public class ListsStatesActor extends ModuleActor { 
 - 
 - public ListsStatesActor ( ModuleContext context ) { 
 - super ( context ) ; 
 - } 
 - 
 - public void onDialogsChanged ( boolean isEmpty ) { 
 - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onDialogsChanged ( isEmpty ) ; 
 - } 
 - 
 - public void onContactsChanged ( boolean isEmpty ) { 
 - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onContactsChanged ( isEmpty ) ; 
 - } 
 - 
 - public void onBookImported ( ) { 
 - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onPhoneImported ( ) ; 
 - } 
 - 
 - public void onContactsLoaded ( ) { 
 - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onContactsLoaded ( ) ; 
 - } 
 - 
 - public void onDialogsLoaded ( ) { 
 - context ( ) . getAppStateModule ( ) . getAppStateVM ( ) . onDialogsLoaded ( ) ; 
 - } 
 - 
 - @ Override 
 - public void onReceive ( Object message ) { 
 - if ( message instanceof OnContactsChanged ) { 
 - onContactsChanged ( ( ( OnContactsChanged ) message ) . isEmpty ( ) ) ; 
 - } else if ( message instanceof OnDialogsChanged ) { 
 - onDialogsChanged ( ( ( OnDialogsChanged ) message ) . isEmpty ( ) ) ; 
 - } else if ( message instanceof OnBookImported ) { 
 - onBookImported ( ) ; 
 - } else if ( message instanceof OnContactsLoaded ) { 
 - onContactsLoaded ( ) ; 
 - } else if ( message instanceof OnDialogsLoaded ) { 
 - onDialogsLoaded ( ) ; 
 - } else { 
 - super . onReceive ( message ) ; 
 - } 
 - } 
 - 
 - public static class OnBookImported { 
 - 
 - } 
 - 
 - public static class OnContactsLoaded { 
 - 
 - } 
 - 
 - public static class OnDialogsLoaded { 
 - 
 - } 
 - 
 - public static class OnContactsChanged { 
 - private boolean isEmpty ; 
 - 
 - public OnContactsChanged ( boolean isEmpty ) { 
 - this . isEmpty = isEmpty ; 
 - } 
 - 
 - public boolean isEmpty ( ) { 
 - return isEmpty ; 
 - } 
 - } 
 - 
 - public static class OnDialogsChanged { 
 - private boolean isEmpty ; 
 - 
 - public OnDialogsChanged ( boolean isEmpty ) { 
 - this . isEmpty = isEmpty ; 
 - } 
 - 
 - public boolean isEmpty ( ) { 
 - return isEmpty ; 
 - } 
 - } 
 - }
