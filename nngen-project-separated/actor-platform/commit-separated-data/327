BLEU SCORE: 1.0

TEST MSG: fix ( server : push ) : google push stream optimization
GENERATED MSG: fix ( server : push ) : google push stream optimization

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > index ee60d41 . . 0c978a7 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > @ @ - 140 , 7 + 140 , 7 @ @ private object GooglePushDelivery { < nl > def flow ( implicit system : ActorSystem ) : Flow [ ( HttpRequest , Delivery ) , Xor [ RuntimeException , ( String , Delivery ) ] , NotUsed ] = { < nl > import system . dispatcher < nl > val pipeline = sendReceive < nl > - Flow [ ( HttpRequest , GooglePushDelivery . Delivery ) ] . mapAsync ( 1 ) { < nl > + Flow [ ( HttpRequest , GooglePushDelivery . Delivery ) ] . mapAsync ( 2 ) { < nl > case ( req , del ) ⇒ < nl > pipeline ( req ) map { resp ⇒ < nl > if ( resp . status = = StatusCodes . OK ) < nl > @ @ - 172 , 8 + 172 , 8 @ @ private final class GooglePushDelivery extends ActorPublisher [ ( HttpRequest , Goog < nl > this . buf : + = mkJob ( d ) < nl > deliverBuf ( ) < nl > } < nl > - case Request ( n ) = > < nl > - log . debug ( " Trying to deliver google push . Queue size : { } , totalDemand : { } , subscriber requests { } elements " , buf . size , totalDemand , n ) < nl > + case Request ( n ) ⇒ < nl > + log . debug ( " Trying to deliver google push . Queue size : { } , totalDemand : { } , subscriber requests { } elements " , buf . size , totalDemand , n ) < nl > deliverBuf ( ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > index 277e2fe . . ee60d41 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala < nl > @ @ - 4 , 7 + 4 , 7 @ @ import akka . NotUsed < nl > import akka . actor . _ < nl > import akka . event . Logging < nl > import akka . stream . ActorMaterializer < nl > - import akka . stream . actor . ActorPublisher < nl > + import akka . stream . actor . { ActorPublisher , ActorPublisherMessage } < nl > import akka . stream . scaladsl . { Flow , Source } < nl > import cats . data . Xor < nl > import com . github . kxbmap . configs . syntax . _ < nl > @ @ - 155 , 6 + 155 , 7 @ @ private object GooglePushDelivery { < nl > private final class GooglePushDelivery extends ActorPublisher [ ( HttpRequest , GooglePushDelivery . Delivery ) ] with ActorLogging { < nl > < nl > import GooglePushDelivery . _ < nl > + import ActorPublisherMessage . _ < nl > < nl > private [ this ] var buf = Vector . empty [ ( HttpRequest , Delivery ) ] < nl > private val uri = Uri ( " https : / / gcm - http . googleapis . com / gcm / send " ) < nl > @ @ - 171 , 6 + 172 , 9 @ @ private final class GooglePushDelivery extends ActorPublisher [ ( HttpRequest , Goog < nl > this . buf : + = mkJob ( d ) < nl > deliverBuf ( ) < nl > } < nl > + case Request ( n ) = > < nl > + log . debug ( " Trying to deliver google push . Queue size : { } , totalDemand : { } , subscriber requests { } elements " , buf . size , totalDemand , n ) < nl > + deliverBuf ( ) < nl > } < nl > < nl > @ tailrec def deliverBuf ( ) : Unit =

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 index ee60d41 . . 0c978a7 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 @ @ - 140 , 7 + 140 , 7 @ @ private object GooglePushDelivery { 
 def flow ( implicit system : ActorSystem ) : Flow [ ( HttpRequest , Delivery ) , Xor [ RuntimeException , ( String , Delivery ) ] , NotUsed ] = { 
 import system . dispatcher 
 val pipeline = sendReceive 
 - Flow [ ( HttpRequest , GooglePushDelivery . Delivery ) ] . mapAsync ( 1 ) { 
 + Flow [ ( HttpRequest , GooglePushDelivery . Delivery ) ] . mapAsync ( 2 ) { 
 case ( req , del ) ⇒ 
 pipeline ( req ) map { resp ⇒ 
 if ( resp . status = = StatusCodes . OK ) 
 @ @ - 172 , 8 + 172 , 8 @ @ private final class GooglePushDelivery extends ActorPublisher [ ( HttpRequest , Goog 
 this . buf : + = mkJob ( d ) 
 deliverBuf ( ) 
 } 
 - case Request ( n ) = > 
 - log . debug ( " Trying to deliver google push . Queue size : { } , totalDemand : { } , subscriber requests { } elements " , buf . size , totalDemand , n ) 
 + case Request ( n ) ⇒ 
 + log . debug ( " Trying to deliver google push . Queue size : { } , totalDemand : { } , subscriber requests { } elements " , buf . size , totalDemand , n ) 
 deliverBuf ( ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 index 277e2fe . . ee60d41 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / sequence / GooglePushExtension . scala 
 @ @ - 4 , 7 + 4 , 7 @ @ import akka . NotUsed 
 import akka . actor . _ 
 import akka . event . Logging 
 import akka . stream . ActorMaterializer 
 - import akka . stream . actor . ActorPublisher 
 + import akka . stream . actor . { ActorPublisher , ActorPublisherMessage } 
 import akka . stream . scaladsl . { Flow , Source } 
 import cats . data . Xor 
 import com . github . kxbmap . configs . syntax . _ 
 @ @ - 155 , 6 + 155 , 7 @ @ private object GooglePushDelivery { 
 private final class GooglePushDelivery extends ActorPublisher [ ( HttpRequest , GooglePushDelivery . Delivery ) ] with ActorLogging { 
 
 import GooglePushDelivery . _ 
 + import ActorPublisherMessage . _ 
 
 private [ this ] var buf = Vector . empty [ ( HttpRequest , Delivery ) ] 
 private val uri = Uri ( " https : / / gcm - http . googleapis . com / gcm / send " ) 
 @ @ - 171 , 6 + 172 , 9 @ @ private final class GooglePushDelivery extends ActorPublisher [ ( HttpRequest , Goog 
 this . buf : + = mkJob ( d ) 
 deliverBuf ( ) 
 } 
 + case Request ( n ) = > 
 + log . debug ( " Trying to deliver google push . Queue size : { } , totalDemand : { } , subscriber requests { } elements " , buf . size , totalDemand , n ) 
 + deliverBuf ( ) 
 } 
 
 @ tailrec def deliverBuf ( ) : Unit =
