BLEU SCORE: 0.26269098944241576

TEST MSG: fix ( server : cqrs ) : fixed migration completion
GENERATED MSG: fix ( server ) : fixed compilation error

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala < nl > index 5bf21e7 . . 0ce236c 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala < nl > @ @ - 63 , 7 + 63 , 9 @ @ trait DialogProcessorMigration extends Processor [ DialogState ] { < nl > ) ) pipeTo self < nl > case PersistEvents ( events ) ⇒ < nl > log . warning ( " Persisting events " ) < nl > - persistAll ( events ) { _ ⇒ < nl > + persistAll ( events ) ( _ = > ( ) ) < nl > + < nl > + deferAsync ( ( ) ) { _ ⇒ < nl > log . warning ( " Persisted events , commiting " ) < nl > events foreach ( e = > commit ( e ) ) < nl > log . warning ( " Migration completed " ) < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala < nl > index 34ea267 . . fddb9a8 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala < nl > @ @ - 78 , 7 + 78 , 8 @ @ trait DialogRootMigration extends Processor [ DialogRootState ] { < nl > } < nl > < nl > val events : List [ Event ] = Initialized ( Instant . now ( ) ) + : ( created + + archived + + favourited ) . toList < nl > - persistAll ( events ) { _ ⇒ < nl > + persistAll ( events ) ( _ = > ( ) ) < nl > + deferAsync ( ( ) ) { _ = > < nl > events foreach ( e ⇒ commit ( e ) ) < nl > onComplete < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala < nl > index 6ee639d . . e114d7a 100644 < nl > - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala < nl > + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala < nl > @ @ - 1 , 7 + 1 , 6 @ @ < nl > package im . actor . server . user < nl > < nl > import akka . actor . { ActorRef , ActorSystem , Props } < nl > - import akka . contrib . pattern . { ClusterSharding , ShardRegion } < nl > < nl > object UserViewRegion { < nl > private def start ( props : Option [ Props ] ) ( implicit system : ActorSystem ) : UserViewRegion = < nl > @ @ - 19 , 7 + 18 , 7 @ @ object UserViewRegion { < nl > implicit < nl > system : ActorSystem < nl > ) : UserViewRegion = < nl > - start ( Some ( UserView . props ) ) < nl > + start ( None ) < nl > < nl > def startProxy ( ) ( implicit system : ActorSystem ) : UserViewRegion = < nl > start ( None )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala 
 index 5bf21e7 . . 0ce236c 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogProcessorMigration . scala 
 @ @ - 63 , 7 + 63 , 9 @ @ trait DialogProcessorMigration extends Processor [ DialogState ] { 
 ) ) pipeTo self 
 case PersistEvents ( events ) ⇒ 
 log . warning ( " Persisting events " ) 
 - persistAll ( events ) { _ ⇒ 
 + persistAll ( events ) ( _ = > ( ) ) 
 + 
 + deferAsync ( ( ) ) { _ ⇒ 
 log . warning ( " Persisted events , commiting " ) 
 events foreach ( e = > commit ( e ) ) 
 log . warning ( " Migration completed " ) 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala 
 index 34ea267 . . fddb9a8 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRootMigration . scala 
 @ @ - 78 , 7 + 78 , 8 @ @ trait DialogRootMigration extends Processor [ DialogRootState ] { 
 } 
 
 val events : List [ Event ] = Initialized ( Instant . now ( ) ) + : ( created + + archived + + favourited ) . toList 
 - persistAll ( events ) { _ ⇒ 
 + persistAll ( events ) ( _ = > ( ) ) 
 + deferAsync ( ( ) ) { _ = > 
 events foreach ( e ⇒ commit ( e ) ) 
 onComplete 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala 
 index 6ee639d . . e114d7a 100644 
 - - - a / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala 
 + + + b / actor - server / actor - peer - managers / src / main / scala / im / actor / server / user / UserViewRegion . scala 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package im . actor . server . user 
 
 import akka . actor . { ActorRef , ActorSystem , Props } 
 - import akka . contrib . pattern . { ClusterSharding , ShardRegion } 
 
 object UserViewRegion { 
 private def start ( props : Option [ Props ] ) ( implicit system : ActorSystem ) : UserViewRegion = 
 @ @ - 19 , 7 + 18 , 7 @ @ object UserViewRegion { 
 implicit 
 system : ActorSystem 
 ) : UserViewRegion = 
 - start ( Some ( UserView . props ) ) 
 + start ( None ) 
 
 def startProxy ( ) ( implicit system : ActorSystem ) : UserViewRegion = 
 start ( None )
