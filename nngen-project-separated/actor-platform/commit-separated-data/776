BLEU SCORE: 0.44632361378533286

TEST MSG: feat ( iOS ) : Added email authentication support
GENERATED MSG: feat ( iOS ) : Location preview cell

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > index 8d991cf . . 6d3cfd4 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > @ @ - 28 , 6 + 28 , 8 @ @ import ActorSDK < nl > / / Setting Development Push Id < nl > ActorSDK . sharedActor ( ) . apiPushId = 868547 < nl > < nl > + ActorSDK . sharedActor ( ) . authStrategy = . EmailOnly < nl > + < nl > / / Creating Actor < nl > ActorSDK . sharedActor ( ) . createActor ( ) < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index b712d1d . . b63b5f5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 165 , 6 + 165 , 8 @ @ < nl > 	 	 066A53331BC534F5000E606E / * AAFileTypes . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53311BC534F5000E606E / * AAFileTypes . swift * / ; } ; < nl > 	 	 066A53371BC537CA000E606E / * ConversationViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53361BC537CA000E606E / * ConversationViewController . swift * / ; } ; < nl > 	 	 066A53391BC5456B000E606E / * ActorStyle . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53381BC5456B000E606E / * ActorStyle . swift * / ; } ; < nl > + 	 	 068B39831C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / ; } ; < nl > + 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / ; } ; < nl > 	 	 069CF4CC1BCB909A00C66E12 / * CLBackspaceDetectingTextField . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / ; } ; < nl > 	 	 069CF4CD1BCB909A00C66E12 / * CLBackspaceDetectingTextField . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / ; } ; < nl > 	 	 069CF4CE1BCB909A00C66E12 / * CLToken . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C61BCB909A00C66E12 / * CLToken . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; < nl > @ @ - 469 , 6 + 471 , 8 @ @ < nl > 	 	 066A53311BC534F5000E606E / * AAFileTypes . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAFileTypes . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 066A53361BC537CA000E606E / * ConversationViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ConversationViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 066A53381BC5456B000E606E / * ActorStyle . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorStyle . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthCodeViewController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthViewController . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLBackspaceDetectingTextField . h ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLBackspaceDetectingTextField . m ; sourceTree = " < group > " ; } ; < nl > 	 	 069CF4C61BCB909A00C66E12 / * CLToken . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLToken . h ; sourceTree = " < group > " ; } ; < nl > @ @ - 891 , 6 + 895 , 8 @ @ < nl > 	 	 	 	 066A52651BC50E7B000E606E / * AAAuthViewController . swift * / , < nl > 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , < nl > 	 	 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / , < nl > + 	 	 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / , < nl > + 	 	 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Auth ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 1141 , 8 + 1147 , 8 @ @ < nl > 	 	 069CF4151BCA5DB500C66E12 / * Sources * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > - 	 	 	 	 066A511D1BC4B4BD000E606E / * ActorCore * / , < nl > 	 	 	 	 066A525F1BC50E53000E606E / * Controllers * / , < nl > + 	 	 	 	 066A511D1BC4B4BD000E606E / * ActorCore * / , < nl > 	 	 	 	 066A51201BC4B53C000E606E / * SwiftExtensions * / , < nl > 	 	 	 	 066A51571BC4C112000E606E / * Utils * / , < nl > 	 	 	 	 06E322CB1C69392F00D66F53 / * Libs * / , < nl > @ @ - 1726 , 6 + 1732 , 7 @ @ < nl > 	 	 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / , < nl > 	 	 	 	 066A525E1BC503BB000E606E / * ActorApplicationDelegate . swift in Sources * / , < nl > 	 	 	 	 BED5A1F91C48396A0045FDB0 / * NYTPhotosViewController . m in Sources * / , < nl > + 	 	 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / , < nl > 	 	 	 	 066A53101BC53317000E606E / * AAWallpapperPreviewController . swift in Sources * / , < nl > 	 	 	 	 152AA8B91C2989270030DEEE / * UIView + SLKAdditions . m in Sources * / , < nl > 	 	 	 	 066A52F21BC52B02000E606E / * AASettingsPrivacyViewController . swift in Sources * / , < nl > @ @ - 1862 , 6 + 1869 , 7 @ @ < nl > 	 	 	 	 15D35F1B1C20185500E3717A / * opusenc . m in Sources * / , < nl > 	 	 	 	 152AA8BD1C298BF00030DEEE / * AASettingsSessionsController . swift in Sources * / , < nl > 	 	 	 	 066A515B1BC4C178000E606E / * AAHashMap . swift in Sources * / , < nl > + 	 	 	 	 068B39831C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift in Sources * / , < nl > 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , < nl > 	 	 	 	 BEE6EB041C4D9A4900A2280E / * AAWallpapersCell . swift in Sources * / , < nl > 	 	 	 	 152AA8B21C2989270030DEEE / * SLKTypingIndicatorView . m in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index 8bb8efa . . 8985069 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 467 , 6 + 467 , 17 @ @ < nl > < nl > " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; < nl > < nl > + " AuthEmailTitle " = " Your Email " ; < nl > + < nl > + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; < nl > + < nl > + " AuthEmailFieldHint " = " Your corporate email adress " ; < nl > + < nl > + < nl > + " AuthEmailCodeFieldHint " = " Activation Code " ; < nl > + < nl > + " AuthEmailCodeHint " = " We sent activation code to your email . " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > index a35bcd7 . . 7b966ce 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > @ @ - 462 , 6 + 462 , 17 @ @ < nl > < nl > " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; < nl > < nl > + " AuthEmailTitle " = " Your Email " ; < nl > + < nl > + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; < nl > + < nl > + " AuthEmailFieldHint " = " Your corporate email adress " ; < nl > + < nl > + < nl > + " AuthEmailCodeFieldHint " = " Activation Code " ; < nl > + < nl > + " AuthEmailCodeHint " = " We sent activation code to your email . " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > index ead1375 . . 838c369 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > @ @ - 443 , 6 + 443 , 17 @ @ < nl > < nl > " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; < nl > < nl > + " AuthEmailTitle " = " Your Email " ; < nl > + < nl > + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; < nl > + < nl > + " AuthEmailFieldHint " = " Your corporate email adress " ; < nl > + < nl > + < nl > + " AuthEmailCodeFieldHint " = " Activation Code " ; < nl > + < nl > + " AuthEmailCodeHint " = " We sent activation code to your email . " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > index 56bfbb4 . . e737ed7 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > @ @ - 457 , 6 + 457 , 17 @ @ < nl > < nl > " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; < nl > < nl > + " AuthEmailTitle " = " В а ш а п о ч т а " ; < nl > + < nl > + " AuthEmailHint " = " П о ж а л у й с т а , в в е д и т е с в о ю р а б о ч у ю п о ч т у и н а ж м и т е д а л е е " ; < nl > + < nl > + " AuthEmailFieldHint " = " В а ш а р а б о ч а я п о ч т а " ; < nl > + < nl > + < nl > + " AuthEmailCodeFieldHint " = " К о д а к т и в а ц и и " ; < nl > + < nl > + " AuthEmailCodeHint " = " М ы о т п р а в и л и в а м к о д а к т и в а ц и и н а п о ч т у . " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > index 4916979 . . 3a8e625 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > @ @ - 466 , 6 + 466 , 17 @ @ < nl > < nl > " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; < nl > < nl > + " AuthEmailTitle " = " Your Email " ; < nl > + < nl > + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; < nl > + < nl > + " AuthEmailFieldHint " = " Your corporate email adress " ; < nl > + < nl > + < nl > + " AuthEmailCodeFieldHint " = " Activation Code " ; < nl > + < nl > + " AuthEmailCodeHint " = " We sent activation code to your email . " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 1511ed9 . . c75315d 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 71 , 6 + 71 , 9 @ @ import PushKit < nl > / / / Push token registration id . Required for sending push tokens < nl > public var apiPushId : Int ? = nil < nl > < nl > + / / / Strategy about authentication < nl > + public var authStrategy = AAAuthStrategy . PhoneOnly < nl > + < nl > / / / Enable phone book import < nl > public var enablePhoneBookImport = true < nl > < nl > @ @ - 107 , 6 + 110 , 7 @ @ import PushKit < nl > / / / Enable voice calls feature < nl > public var enableCalls : Bool = true < nl > < nl > + < nl > / / / Enable experimental features < nl > public var enableExperimentalFeatures : Bool = false < nl > < nl > @ @ - 428 , 8 + 432 , 13 @ @ import PushKit < nl > } else { < nl > var controller : UIViewController ! = delegate . actorControllerForAuthStart ( ) < nl > if controller = = nil { < nl > - / / controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) < nl > - controller = AAAuthNavigationController ( rootViewController : AAWelcomeController ( ) ) < nl > + if self . authStrategy = = . PhoneOnly { < nl > + controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) < nl > + } else if self . authStrategy = = . EmailOnly { < nl > + controller = AAAuthNavigationController ( rootViewController : AAEmailAuthViewController ( ) ) < nl > + } else { < nl > + / / ? ? ? < nl > + } < nl > } < nl > window . rootViewController = controller ! < nl > } < nl > @ @ - 752 , 4 + 761 , 9 @ @ public enum AAAutoPush { < nl > case None < nl > case FromStart < nl > case AfterLogin < nl > + } < nl > + < nl > + public enum AAAuthStrategy { < nl > + case PhoneOnly < nl > + case EmailOnly < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift < nl > new file mode 100644 < nl > index 0000000 . . df912e3 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift < nl > @ @ - 0 , 0 + 1 , 158 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + class AAEmailAuthCodeViewController : AAAuthViewController { < nl > + < nl > + / / Views < nl > + < nl > + private let grayBackground = UIView ( ) < nl > + private let titleLabel = UILabel ( ) < nl > + < nl > + private let codeTextField = UITextField ( ) < nl > + private let hintLabel = UILabel ( ) < nl > + < nl > + private var navigationBarSeparator = UIView ( ) < nl > + private var codeSeparator = UIView ( ) < nl > + < nl > + private let email : String < nl > + < nl > + init ( email : String ) { < nl > + self . email = email < nl > + super . init ( ) < nl > + } < nl > + < nl > + required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + / / Layouting < nl > + < nl > + override func loadView ( ) { < nl > + super . loadView ( ) < nl > + < nl > + view . backgroundColor = UIColor . whiteColor ( ) < nl > + < nl > + grayBackground . backgroundColor = UIColor ( rgb : 0xf2f2f2 ) < nl > + view . addSubview ( grayBackground ) < nl > + < nl > + titleLabel . backgroundColor = UIColor . clearColor ( ) < nl > + titleLabel . textColor = UIColor . blackColor ( ) < nl > + titleLabel . font = AADevice . isiPad < nl > + ? UIFont . thinSystemFontOfSize ( 50 . 0 ) < nl > + : UIFont . lightSystemFontOfSize ( 22 ) < nl > + < nl > + titleLabel . textLocalized = email < nl > + grayBackground . addSubview ( titleLabel ) < nl > + < nl > + codeTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) < nl > + codeTextField . backgroundColor = UIColor . whiteColor ( ) < nl > + codeTextField . placeholder = AALocalized ( " AuthEmailCodeFieldHint " ) < nl > + codeTextField . keyboardType = UIKeyboardType . EmailAddress < nl > + codeTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center < nl > + codeTextField . textAlignment = . Center < nl > + view . addSubview ( codeTextField ) < nl > + < nl > + codeSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) < nl > + view . addSubview ( codeSeparator ) < nl > + < nl > + navigationBarSeparator = UIView ( ) < nl > + navigationBarSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) < nl > + view . addSubview ( navigationBarSeparator ) < nl > + < nl > + hintLabel . font = UIFont . systemFontOfSize ( 17 . 0 ) < nl > + hintLabel . textColor = UIColor ( rgb : 0x999999 ) < nl > + hintLabel . lineBreakMode = NSLineBreakMode . ByWordWrapping < nl > + hintLabel . backgroundColor = UIColor . whiteColor ( ) < nl > + hintLabel . textAlignment = NSTextAlignment . Center < nl > + hintLabel . contentMode = UIViewContentMode . Center < nl > + hintLabel . numberOfLines = 0 < nl > + hintLabel . textLocalized = " AuthEmailCodeHint " < nl > + view . addSubview ( hintLabel ) < nl > + < nl > + / / Configure navigation bar < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationNext " ) , style : UIBarButtonItemStyle . Done , target : self , action : " nextButtonPressed " ) < nl > + } < nl > + < nl > + override func viewWillLayoutSubviews ( ) { < nl > + super . viewWillLayoutSubviews ( ) < nl > + < nl > + let screenSize = UIScreen . mainScreen ( ) . bounds . size < nl > + let isWidescreen = screenSize . width > 320 | | screenSize . height > 480 < nl > + let isPortraint = screenSize . width < screenSize . height < nl > + < nl > + let bgSize = AADevice . isiPad < nl > + ? ( isPortraint ? 304 . 0 : 140 ) < nl > + : ( isWidescreen ? 131 . 0 : 90 . 0 ) < nl > + grayBackground . frame = CGRect ( x : 0 . 0 , y : 0 . 0 , width : screenSize . width , height : CGFloat ( bgSize ) ) < nl > + < nl > + let padding = AADevice . isiPad < nl > + ? ( isPortraint ? 48 : 20 ) < nl > + : ( 20 ) < nl > + titleLabel . sizeToFit ( ) < nl > + titleLabel . frame = CGRect ( x : ( screenSize . width - titleLabel . frame . size . width ) / 2 . 0 , y : grayBackground . frame . height - titleLabel . frame . size . height - CGFloat ( padding ) , width : titleLabel . frame . size . width , height : titleLabel . frame . size . height ) < nl > + < nl > + navigationBarSeparator . frame = CGRect ( x : 0 , y : grayBackground . bounds . size . height , width : screenSize . width , height : 0 . 5 ) < nl > + < nl > + let fieldWidth : CGFloat = AADevice . isiPad < nl > + ? ( 520 ) < nl > + : ( screenSize . width ) < nl > + < nl > + codeTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 32 , y : navigationBarSeparator . top + 16 , width : fieldWidth - 10 . 0 - 64 , height : 50 - 2 ) < nl > + < nl > + codeTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 , y : navigationBarSeparator . frame . origin . y + navigationBarSeparator . bounds . size . height , width : fieldWidth , height : 56 . 0 ) < nl > + < nl > + codeSeparator . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 22 , y : codeTextField . frame . origin . y + codeTextField . height , width : fieldWidth - 44 , height : 0 . 5 ) < nl > + < nl > + let hintPadding : CGFloat = AADevice . isiPad < nl > + ? ( isPortraint ? 460 . 0 : 274 . 0 ) < nl > + : ( isWidescreen ? 214 . 0 : 184 . 0 ) < nl > + < nl > + let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) < nl > + hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; < nl > + } < nl > + < nl > + / / Constoller states < nl > + < nl > + override func viewDidAppear ( animated : Bool ) { < nl > + super . viewDidAppear ( animated ) < nl > + codeTextField . becomeFirstResponder ( ) < nl > + } < nl > + < nl > + / / Actions < nl > + < nl > + func nextButtonPressed ( ) { < nl > + if codeTextField . text = = nil | | codeTextField . text ! . trim ( ) . length = = 0 { < nl > + let fieldWidth : CGFloat = AADevice . isiPad < nl > + ? ( 520 ) < nl > + : ( view . width ) < nl > + self . shakeView ( codeTextField , originalX : ( view . width - fieldWidth ) / 2 ) < nl > + return < nl > + } < nl > + < nl > + executeSafe ( Actor . validateCodeCommand ( codeTextField . text ! ) , ignore : [ " PHONE _ CODE _ INVALID " ] ) { ( val ) - > Void in < nl > + < nl > + let state = Actor . getAuthState ( ) . ordinal ( ) < nl > + < nl > + if state = = ACAuthState . LOGGED _ IN ( ) . ordinal ( ) { < nl > + < nl > + / / If logged in state : end authentication < nl > + self . onAuthenticated ( ) < nl > + } else if state = = ACAuthState . SIGN _ UP ( ) . ordinal ( ) { < nl > + < nl > + / / Is signup go to signup controller < nl > + self . navigateNext ( AAAuthRegisterViewController ( ) , removeCurrent : true ) < nl > + } else if state ! = ACAuthState . CODE _ VALIDATION _ PHONE ( ) . ordinal ( ) { < nl > + < nl > + / / If state not for the current state : start from scratch < nl > + self . navigateBack ( ) < nl > + } else { < nl > + < nl > + / / If same state : something code is incorrect < nl > + self . shakeView ( self . codeTextField , originalX : self . codeTextField . frame . origin . x ) < nl > + } < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift < nl > new file mode 100644 < nl > index 0000000 . . 584adfd < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift < nl > @ @ - 0 , 0 + 1 , 161 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + < nl > + class AAEmailAuthViewController : AAAuthViewController { < nl > + < nl > + / / Views < nl > + < nl > + private var grayBackground : UIView ! < nl > + private var titleLabel : UILabel ! < nl > + private var emailTextField : UITextField ! < nl > + private var emailTextSeparator = UIView ( ) < nl > + private var hintLabel : UILabel ! < nl > + private var navigationBarSeparator : UIView ! < nl > + < nl > + / / Constructors < nl > + < nl > + override init ( ) { < nl > + super . init ( ) < nl > + < nl > + self . content = ACAllEvents _ Auth . AUTH _ PHONE ( ) < nl > + } < nl > + < nl > + required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + / / Layouting < nl > + < nl > + override func loadView ( ) { < nl > + super . loadView ( ) < nl > + < nl > + view . backgroundColor = UIColor . whiteColor ( ) < nl > + < nl > + grayBackground = UIView ( ) < nl > + grayBackground . backgroundColor = UIColor ( rgb : 0xf2f2f2 ) < nl > + view . addSubview ( grayBackground ) < nl > + < nl > + titleLabel = UILabel ( ) < nl > + titleLabel . backgroundColor = UIColor . clearColor ( ) < nl > + titleLabel . textColor = UIColor . blackColor ( ) < nl > + titleLabel . font = AADevice . isiPad < nl > + ? UIFont . thinSystemFontOfSize ( 50 . 0 ) < nl > + : UIFont . lightSystemFontOfSize ( 30 ) < nl > + < nl > + titleLabel . textLocalized = " AuthEmailTitle " < nl > + grayBackground . addSubview ( titleLabel ) < nl > + < nl > + emailTextField = UITextField ( ) < nl > + emailTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) < nl > + emailTextField . backgroundColor = UIColor . whiteColor ( ) < nl > + emailTextField . placeholder = AALocalized ( " AuthEmailFieldHint " ) < nl > + emailTextField . keyboardType = UIKeyboardType . EmailAddress < nl > + emailTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center < nl > + emailTextField . textAlignment = . Center < nl > + emailTextField . autocapitalizationType = . None < nl > + / / phoneTextField . delegate = self < nl > + view . addSubview ( emailTextField ) < nl > + < nl > + emailTextSeparator = UIView ( ) < nl > + emailTextSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) < nl > + view . addSubview ( emailTextSeparator ) < nl > + < nl > + navigationBarSeparator = UIView ( ) < nl > + navigationBarSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) < nl > + view . addSubview ( navigationBarSeparator ) < nl > + < nl > + hintLabel = UILabel ( ) < nl > + hintLabel . font = UIFont . systemFontOfSize ( 17 . 0 ) < nl > + hintLabel . textColor = UIColor ( rgb : 0x999999 ) < nl > + hintLabel . lineBreakMode = NSLineBreakMode . ByWordWrapping < nl > + hintLabel . backgroundColor = UIColor . whiteColor ( ) < nl > + hintLabel . textAlignment = NSTextAlignment . Center < nl > + hintLabel . contentMode = UIViewContentMode . Center < nl > + hintLabel . numberOfLines = 0 < nl > + hintLabel . textLocalized = " AuthEmailHint " < nl > + view . addSubview ( hintLabel ) < nl > + < nl > + / / Configure navigation bar < nl > + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationNext " ) , style : UIBarButtonItemStyle . Done , target : self , action : " nextButtonPressed " ) < nl > + } < nl > + < nl > + override func viewWillLayoutSubviews ( ) { < nl > + super . viewWillLayoutSubviews ( ) < nl > + < nl > + let screenSize = UIScreen . mainScreen ( ) . bounds . size < nl > + let isWidescreen = screenSize . width > 320 | | screenSize . height > 480 < nl > + let isPortraint = screenSize . width < screenSize . height < nl > + < nl > + let bgSize = AADevice . isiPad < nl > + ? ( isPortraint ? 304 . 0 : 140 ) < nl > + : ( isWidescreen ? 131 . 0 : 90 . 0 ) < nl > + grayBackground . frame = CGRect ( x : 0 . 0 , y : 0 . 0 , width : screenSize . width , height : CGFloat ( bgSize ) ) < nl > + < nl > + let padding = AADevice . isiPad < nl > + ? ( isPortraint ? 48 : 20 ) < nl > + : ( 20 ) < nl > + titleLabel . sizeToFit ( ) < nl > + titleLabel . frame = CGRect ( x : ( screenSize . width - titleLabel . frame . size . width ) / 2 . 0 , y : grayBackground . frame . height - titleLabel . frame . size . height - CGFloat ( padding ) , width : titleLabel . frame . size . width , height : titleLabel . frame . size . height ) < nl > + < nl > + navigationBarSeparator . frame = CGRect ( x : 0 , y : grayBackground . bounds . size . height , width : screenSize . width , height : 0 . 5 ) < nl > + < nl > + let fieldWidth : CGFloat = AADevice . isiPad < nl > + ? ( 520 ) < nl > + : ( screenSize . width ) < nl > + < nl > + emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 32 , y : navigationBarSeparator . top + 16 , width : fieldWidth - 10 . 0 - 64 , height : 50 - 2 ) < nl > + < nl > + emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 , y : navigationBarSeparator . frame . origin . y + navigationBarSeparator . bounds . size . height , width : fieldWidth , height : 56 . 0 ) < nl > + < nl > + emailTextSeparator . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 22 , y : emailTextField . frame . origin . y + emailTextField . height , width : fieldWidth - 44 , height : 0 . 5 ) < nl > + < nl > + let hintPadding : CGFloat = AADevice . isiPad < nl > + ? ( isPortraint ? 460 . 0 : 274 . 0 ) < nl > + : ( isWidescreen ? 214 . 0 : 184 . 0 ) < nl > + < nl > + let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) < nl > + hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; < nl > + } < nl > + < nl > + / / Constoller states < nl > + < nl > + override func viewDidAppear ( animated : Bool ) { < nl > + super . viewDidAppear ( animated ) < nl > + emailTextField . becomeFirstResponder ( ) < nl > + } < nl > + < nl > + / / Actions < nl > + < nl > + func nextButtonPressed ( ) { < nl > + < nl > + if emailTextField . text = = nil | | ! isValidEmail ( emailTextField . text ! ) { < nl > + let fieldWidth : CGFloat = AADevice . isiPad < nl > + ? ( 520 ) < nl > + : ( view . width ) < nl > + self . shakeView ( emailTextField , originalX : ( view . width - fieldWidth ) / 2 ) < nl > + return < nl > + } < nl > + < nl > + let email = emailTextField . text ! < nl > + executeSafe ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in < nl > + self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) , removeCurrent : false ) < nl > + } < nl > + } < nl > + < nl > + func isValidEmail ( testStr : String ) - > Bool { < nl > + < nl > + let emailRegEx = " ^ [ A - Z0 - 9a - z . _ % + - ] + @ [ A - Za - z0 - 9 . - ] + \ \ . [ A - Za - z ] { 2 , 6 } " < nl > + < nl > + let emailTest = NSPredicate ( format : " SELF MATCHES % @ " , emailRegEx ) < nl > + return emailTest . evaluateWithObject ( testStr ) < nl > + } < nl > + < nl > + / / Events < nl > + < nl > + func textField ( textField : UITextField , shouldChangeCharactersInRange range : NSRange , replacementString string : String ) - > Bool { < nl > + return true < nl > + } < nl > + } < nl > \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > index c38d4cd . . 56b461b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift < nl > @ @ - 22 , 6 + 22 , 9 @ @ import ActorSDK < nl > < nl > ActorSDK . sharedActor ( ) . style . searchStatusBarStyle = . Default < nl > < nl > + / / Enabling experimental features < nl > + ActorSDK . sharedActor ( ) . enableExperimentalFeatures = true < nl > + < nl > / / Creating Actor < nl > ActorSDK . sharedActor ( ) . createActor ( ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > index 9bf41a2 . . f26bdd0 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj < nl > @ @ - 172 , 6 + 172 , 9 @ @ < nl > 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; < nl > 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; < nl > 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; < nl > + 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; < nl > + 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; < nl > + 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; < nl > 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; < nl > / * End PBXBuildFile section * / < nl > < nl > @ @ - 347 , 6 + 350 , 9 @ @ < nl > 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; < nl > 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; < nl > + 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; < nl > 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; < nl > 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; < nl > @ @ - 530 , 6 + 536 , 7 @ @ < nl > 	 	 	 	 069CF4C31BCB908C00C66E12 / * CLTokenInputView * / , < nl > 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , < nl > 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , < nl > + 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , < nl > 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , < nl > 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , < nl > 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , < nl > @ @ - 589 , 6 + 596 , 7 @ @ < nl > 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , < nl > 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , < nl > 	 	 	 	 066A52C41BC521D5000E606E / * Content * / , < nl > + 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , < nl > 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , < nl > 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , < nl > 	 	 	 ) ; < nl > @ @ - 832 , 6 + 840 , 7 @ @ < nl > 	 	 	 	 066A53281BC53406000E606E / * AABubbleBaseFileCell . swift * / , < nl > 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , < nl > 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , < nl > + 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , < nl > 	 	 	 ) ; < nl > 	 	 	 path = Cell ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > @ @ - 878 , 6 + 887 , 14 @ @ < nl > 	 	 	 name = CLTokenInputView ; < nl > 	 	 	 sourceTree = " < group > " ; < nl > 	 	 } ; < nl > + 	 	 06E7B2451C0F8D410090660C / * Location * / = { < nl > + 	 	 	 isa = PBXGroup ; < nl > + 	 	 	 children = ( < nl > + 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , < nl > + 	 	 	 ) ; < nl > + 	 	 	 path = Location ; < nl > + 	 	 	 sourceTree = " < group > " ; < nl > + 	 	 } ; < nl > 	 	 2F428D134E194A828C3DF863 / * Frameworks * / = { < nl > 	 	 	 isa = PBXGroup ; < nl > 	 	 	 children = ( < nl > @ @ - 1107 , 6 + 1124 , 7 @ @ < nl > 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , < nl > 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , < nl > 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , < nl > + 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , < nl > 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , < nl > 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , < nl > 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , < nl > @ @ - 1171 , 6 + 1189 , 7 @ @ < nl > 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , < nl > 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , < nl > 	 	 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / , < nl > + 	 	 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / , < nl > 	 	 	 	 066A516D1BC4C366000E606E / * ActorCoreExt . swift in Sources * / , < nl > 	 	 	 	 066A517E1BC4C373000E606E / * FMDatabaseAdditions . m in Sources * / , < nl > 	 	 	 	 066A519A1BC4C390000E606E / * FMDBList . swift in Sources * / , < nl > @ @ - 1187 , 6 + 1206 , 7 @ @ < nl > 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , < nl > 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , < nl > 	 	 	 	 066A51901BC4C383000E606E / * CocoaNetworkRuntime . swift in Sources * / , < nl > + 	 	 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / , < nl > 	 	 	 	 066A52581BC4EF61000E606E / * Alerts . swift in Sources * / , < nl > 	 	 	 	 066A51691BC4C366000E606E / * AATools . swift in Sources * / , < nl > 	 	 	 	 066A53201BC533F5000E606E / * AABubbleBackgroundProcessor . swift in Sources * / , < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > new file mode 100644 < nl > index 0000000 . . 3f92572 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json < nl > @ @ - 0 , 0 + 1 , 13 @ @ < nl > + { < nl > + " images " : [ < nl > + { < nl > + " idiom " : " universal " , < nl > + " filename " : " LocationPin @ 2x . png " , < nl > + " scale " : " 2x " < nl > + } < nl > + ] , < nl > + " info " : { < nl > + " version " : 1 , < nl > + " author " : " xcode " < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png < nl > new file mode 100644 < nl > index 0000000 . . 709d3b0 < nl > Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png differ < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 587321a . . 9edb0ad 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 82 , 6 + 82 , 9 @ @ public class ActorSDK { < nl > / / / Extensions < nl > private var extensions = [ ActorExtension ] ( ) < nl > < nl > + / / / Enable experimental features < nl > + public var enableExperimentalFeatures : Bool = false < nl > + < nl > / / < nl > / / User Onlines < nl > / / < nl > @ @ - 91 , 7 + 94 , 7 @ @ public class ActorSDK { < nl > < nl > / / / Disable this if you want manually handle online states < nl > public var automaticOnlineHandling = true < nl > - < nl > + < nl > / / < nl > / / Internal State < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > index ca23c70 . . a98f2ef 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift < nl > @ @ - 10 , 11 + 10 , 13 @ @ class AABubbles { < nl > static let mediaLayouter = AABubbleMediaCellLayouter ( ) < nl > static let documentLayouter = AABubbleDocumentCellLayout ( ) < nl > static let serviceLayouter = AABubbleServiceCellLayouter ( ) < nl > + static let locationLayouter = AABubbleLocationCellLayouter ( ) < nl > < nl > static let builtInLayouters : [ AABubbleLayouter ] = [ < nl > serviceLayouter , < nl > mediaLayouter , < nl > documentLayouter , < nl > + locationLayouter , < nl > textLayouter < nl > ] < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > new file mode 100644 < nl > index 0000000 . . 1c539ce < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift < nl > @ @ - 0 , 0 + 1 , 179 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + private let mapWidth : CGFloat = 200 < nl > + private let mapHeight : CGFloat = 160 < nl > + < nl > + public class AABubbleLocationCell : AABubbleCell { < nl > + < nl > + private let map = AAMapFastView ( mapWidth : mapWidth , mapHeight : mapHeight ) < nl > + < nl > + private let pin = UIImageView ( ) < nl > + private let timeBg = UIImageView ( ) < nl > + private let timeLabel = UILabel ( ) < nl > + private let statusView = UIImageView ( ) < nl > + < nl > + private var bindedLat : Double ? = nil < nl > + private var bindedLon : Double ? = nil < nl > + < nl > + public init ( frame : CGRect ) { < nl > + super . init ( frame : frame , isFullSize : false ) < nl > + < nl > + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) < nl > + < nl > + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) < nl > + timeLabel . textColor = appStyle . chatMediaDateColor < nl > + < nl > + statusView . contentMode = UIViewContentMode . Center < nl > + < nl > + pin . image = UIImage . bundled ( " LocationPin " ) < nl > + < nl > + contentView . addSubview ( map ) < nl > + map . addSubview ( pin ) < nl > + < nl > + contentView . addSubview ( timeBg ) < nl > + contentView . addSubview ( timeLabel ) < nl > + contentView . addSubview ( statusView ) < nl > + < nl > + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + < nl > + map . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mapDidTap " ) ) < nl > + map . userInteractionEnabled = true < nl > + } < nl > + < nl > + public required init ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func mapDidTap ( ) { < nl > + let url = " http : / / maps . apple . com / ? q = \ ( bindedLat ! ) , \ ( bindedLon ! ) " < nl > + / / print ( " url : \ ( url ) " ) < nl > + UIApplication . sharedApplication ( ) . openURL ( NSURL ( string : url ) ! ) < nl > + } < nl > + < nl > + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > + < nl > + let layout = cellLayout as ! AALocationCellLayout < nl > + < nl > + bindedLat = layout . latitude < nl > + bindedLon = layout . longitude < nl > + < nl > + bubbleInsets = UIEdgeInsets ( < nl > + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , < nl > + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , < nl > + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , < nl > + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) < nl > + < nl > + if ( ! reuse ) { < nl > + < nl > + / / Bind bubble < nl > + if ( self . isOut ) { < nl > + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) < nl > + } else { < nl > + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) < nl > + } < nl > + } < nl > + < nl > + map . bind ( layout . latitude , longitude : layout . longitude ) < nl > + < nl > + / / Update time < nl > + timeLabel . text = cellLayout . date < nl > + < nl > + / / Update status < nl > + if ( isOut ) { < nl > + statusView . hidden = false < nl > + switch ( UInt ( message . messageState . ordinal ( ) ) ) { < nl > + case ACMessageState . PENDING . rawValue : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + case ACMessageState . SENT . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck1 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSent < nl > + break ; < nl > + case ACMessageState . RECEIVED . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaReceived < nl > + break ; < nl > + case ACMessageState . READ . rawValue : < nl > + self . statusView . image = appStyle . chatIconCheck2 ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaRead < nl > + break ; < nl > + case ACMessageState . ERROR . rawValue : < nl > + self . statusView . image = appStyle . chatIconError ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaError < nl > + break < nl > + default : < nl > + self . statusView . image = appStyle . chatIconClock ; < nl > + self . statusView . tintColor = appStyle . chatStatusMediaSending < nl > + break ; < nl > + } < nl > + } else { < nl > + statusView . hidden = true < nl > + } < nl > + } < nl > + < nl > + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { < nl > + let insets = fullContentInsets < nl > + < nl > + layoutBubble ( mapWidth , contentHeight : mapHeight ) < nl > + < nl > + if isOut { < nl > + map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) < nl > + } else { < nl > + map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) < nl > + } < nl > + < nl > + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) < nl > + timeLabel . sizeToFit ( ) < nl > + < nl > + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width < nl > + let timeHeight : CGFloat = 20 < nl > + < nl > + timeLabel . frame = CGRectMake ( map . frame . maxX - timeWidth - 18 , map . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) < nl > + < nl > + if ( isOut ) { < nl > + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) < nl > + } < nl > + < nl > + pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height - pin . image ! . size . height ) / 2 , < nl > + pin . image ! . size . width , pin . image ! . size . height ) < nl > + < nl > + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) < nl > + } < nl > + } < nl > + < nl > + public class AALocationCellLayout : AACellLayout { < nl > + < nl > + let latitude : Double < nl > + let longitude : Double < nl > + < nl > + init ( latitude : Double , longitude : Double , date : Int64 ) { < nl > + self . latitude = latitude < nl > + self . longitude = longitude < nl > + super . init ( height : mapHeight , date : date , key : " location " ) < nl > + } < nl > + } < nl > + < nl > + public class AABubbleLocationCellLayouter : AABubbleLayouter { < nl > + < nl > + public func isSuitable ( message : ACMessage ) - > Bool { < nl > + if ( message . content is ACLocationContent ) { < nl > + return true < nl > + } < nl > + return false < nl > + } < nl > + < nl > + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { < nl > + let content = message . content as ! ACLocationContent < nl > + return AALocationCellLayout ( latitude : Double ( content . getLatitude ( ) ) , longitude : Double ( content . getLongitude ( ) ) , date : Int64 ( message . date ) ) < nl > + } < nl > + < nl > + public func cellClass ( ) - > AnyClass { < nl > + return AABubbleLocationCell . self < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 7704094 . . af819ab 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 308 , 6 + 308 , 12 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > self . pickDocument ( ) < nl > } < nl > < nl > + if ( ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { < nl > + builder . add ( " Location " ) { ( ) - > ( ) in < nl > + self . pickLocation ( ) < nl > + } < nl > + } < nl > + < nl > showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) < nl > } < nl > < nl > @ @ - 452 , 4 + 458 , 10 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > func imagePickerControllerDidCancel ( picker : UIImagePickerController ) { < nl > picker . dismissViewControllerAnimated ( true , completion : nil ) < nl > } < nl > + < nl > + / / Location picking < nl > + < nl > + func pickLocation ( ) { < nl > + < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > new file mode 100644 < nl > index 0000000 . . 123575a < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift < nl > @ @ - 0 , 0 + 1 , 24 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + class AALocationPickerController : AAViewController { < nl > + < nl > + let map = MKMapView ( ) < nl > + < nl > + override func viewDidLoad ( ) { < nl > + super . viewDidLoad ( ) < nl > + < nl > + self . view . addSubview ( map ) < nl > + } < nl > + < nl > + < nl > + override func viewDidLayoutSubviews ( ) { < nl > + super . viewDidLayoutSubviews ( ) < nl > + < nl > + map . frame = self . view . bounds < nl > + } < nl > + } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > index 3d7e2c7 . . bf761a5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift < nl > @ @ - 17 , 8 + 17 , 8 @ @ public class AAAvatarView : UIImageView { < nl > < nl > var enableAnimation : Bool = false < nl > < nl > - private let cacheSize = 10 < nl > - private var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) < nl > + private static let cacheSize = 10 < nl > + private static var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) < nl > < nl > private var bindedFileId : jlong ! = nil < nl > private var bindedTitle : String ! = nil < nl > @ @ - 233 , 7 + 233 , 7 @ @ public class AAAvatarView : UIImageView { < nl > / / < nl > < nl > private func checkCache ( size : Int , id : Int64 ) - > UIImage ? { < nl > - if let cache = avatarCache [ size ] { < nl > + if let cache = AAAvatarView . avatarCache [ size ] { < nl > if let img = cache [ id ] { < nl > return img < nl > } < nl > @ @ - 242 , 12 + 242 , 12 @ @ public class AAAvatarView : UIImageView { < nl > } < nl > < nl > private func putToCache ( size : Int , id : Int64 , image : UIImage ) { < nl > - if let cache = avatarCache [ size ] { < nl > + if let cache = AAAvatarView . avatarCache [ size ] { < nl > cache [ id ] = image < nl > } else { < nl > - let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : cacheSize ) ; < nl > + let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : AAAvatarView . cacheSize ) ; < nl > cache [ id ] = image < nl > - avatarCache . updateValue ( cache , forKey : size ) < nl > + AAAvatarView . avatarCache . updateValue ( cache , forKey : size ) < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift < nl > new file mode 100644 < nl > index 0000000 . . 217c38e < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift < nl > @ @ - 0 , 0 + 1 , 58 @ @ < nl > + / / < nl > + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > < nl > + / / < nl > + < nl > + import Foundation < nl > + import MapKit < nl > + < nl > + public class AAMapFastView : UIImageView { < nl > + < nl > + static private var mapCache = AASwiftlyLRU < String , UIImage > ( capacity : 16 ) < nl > + < nl > + let mapWidth : CGFloat < nl > + let mapHeight : CGFloat < nl > + var mapKey : String ? = nil < nl > + < nl > + public init ( mapWidth : CGFloat , mapHeight : CGFloat ) { < nl > + self . mapWidth = mapWidth < nl > + self . mapHeight = mapHeight < nl > + super . init ( image : nil ) < nl > + } < nl > + < nl > + required public init ? ( coder aDecoder : NSCoder ) { < nl > + fatalError ( " init ( coder : ) has not been implemented " ) < nl > + } < nl > + < nl > + func bind ( latitude : Double , longitude : Double ) { < nl > + let key = " \ ( Int ( latitude * 1000000 ) ) _ \ ( Int ( longitude * 1000000 ) ) " < nl > + < nl > + / / Same Key < nl > + if ( self . mapKey = = key ) { < nl > + return < nl > + } < nl > + < nl > + self . mapKey = key < nl > + < nl > + let cached = AAMapFastView . mapCache [ key ] < nl > + if ( cached ! = nil ) { < nl > + self . image = cached < nl > + return < nl > + } < nl > + < nl > + let options = MKMapSnapshotOptions ( ) < nl > + options . region = MKCoordinateRegion ( center : CLLocationCoordinate2D ( latitude : latitude , longitude : longitude ) , span : MKCoordinateSpan ( latitudeDelta : 0 . 005 , longitudeDelta : 0 . 005 ) ) < nl > + options . size = CGSizeMake ( mapWidth , mapHeight ) < nl > + options . scale = UIScreen . mainScreen ( ) . scale < nl > + < nl > + let snapshotter = MKMapSnapshotter ( options : options ) < nl > + snapshotter . startWithCompletionHandler { snapshot , error in < nl > + if let img = snapshot ? . image { < nl > + let rounded = img . roundCorners ( img . size . width , h : img . size . height , roundSize : 14 ) < nl > + dispatchOnUi { < nl > + AAMapFastView . mapCache [ key ] = rounded < nl > + self . image = rounded < nl > + } < nl > + } < nl > + } < nl > + } < nl > + } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 index 8d991cf . . 6d3cfd4 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 @ @ - 28 , 6 + 28 , 8 @ @ import ActorSDK 
 / / Setting Development Push Id 
 ActorSDK . sharedActor ( ) . apiPushId = 868547 
 
 + ActorSDK . sharedActor ( ) . authStrategy = . EmailOnly 
 + 
 / / Creating Actor 
 ActorSDK . sharedActor ( ) . createActor ( ) 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index b712d1d . . b63b5f5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 165 , 6 + 165 , 8 @ @ 
 	 	 066A53331BC534F5000E606E / * AAFileTypes . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53311BC534F5000E606E / * AAFileTypes . swift * / ; } ; 
 	 	 066A53371BC537CA000E606E / * ConversationViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53361BC537CA000E606E / * ConversationViewController . swift * / ; } ; 
 	 	 066A53391BC5456B000E606E / * ActorStyle . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 066A53381BC5456B000E606E / * ActorStyle . swift * / ; } ; 
 + 	 	 068B39831C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / ; } ; 
 + 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / ; } ; 
 	 	 069CF4CC1BCB909A00C66E12 / * CLBackspaceDetectingTextField . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / ; } ; 
 	 	 069CF4CD1BCB909A00C66E12 / * CLBackspaceDetectingTextField . m in Sources * / = { isa = PBXBuildFile ; fileRef = 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / ; } ; 
 	 	 069CF4CE1BCB909A00C66E12 / * CLToken . h in Headers * / = { isa = PBXBuildFile ; fileRef = 069CF4C61BCB909A00C66E12 / * CLToken . h * / ; settings = { ATTRIBUTES = ( Public , ) ; } ; } ; 
 @ @ - 469 , 6 + 471 , 8 @ @ 
 	 	 066A53311BC534F5000E606E / * AAFileTypes . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAFileTypes . swift ; sourceTree = " < group > " ; } ; 
 	 	 066A53361BC537CA000E606E / * ConversationViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ConversationViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 066A53381BC5456B000E606E / * ActorStyle . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorStyle . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthCodeViewController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAEmailAuthViewController . swift ; sourceTree = " < group > " ; } ; 
 	 	 069CF4C41BCB909A00C66E12 / * CLBackspaceDetectingTextField . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLBackspaceDetectingTextField . h ; sourceTree = " < group > " ; } ; 
 	 	 069CF4C51BCB909A00C66E12 / * CLBackspaceDetectingTextField . m * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . objc ; path = CLBackspaceDetectingTextField . m ; sourceTree = " < group > " ; } ; 
 	 	 069CF4C61BCB909A00C66E12 / * CLToken . h * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . c . h ; path = CLToken . h ; sourceTree = " < group > " ; } ; 
 @ @ - 891 , 6 + 895 , 8 @ @ 
 	 	 	 	 066A52651BC50E7B000E606E / * AAAuthViewController . swift * / , 
 	 	 	 	 153F6B601C2BF8EC00C0B960 / * AAAuthWelcomeController . swift * / , 
 	 	 	 	 153F6B8D1C2D868100C0B960 / * AATermsController . swift * / , 
 + 	 	 	 	 068B39811C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift * / , 
 + 	 	 	 	 068B39821C876AF5002BFF73 / * AAEmailAuthViewController . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Auth ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 1141 , 8 + 1147 , 8 @ @ 
 	 	 069CF4151BCA5DB500C66E12 / * Sources * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 - 	 	 	 	 066A511D1BC4B4BD000E606E / * ActorCore * / , 
 	 	 	 	 066A525F1BC50E53000E606E / * Controllers * / , 
 + 	 	 	 	 066A511D1BC4B4BD000E606E / * ActorCore * / , 
 	 	 	 	 066A51201BC4B53C000E606E / * SwiftExtensions * / , 
 	 	 	 	 066A51571BC4C112000E606E / * Utils * / , 
 	 	 	 	 06E322CB1C69392F00D66F53 / * Libs * / , 
 @ @ - 1726 , 6 + 1732 , 7 @ @ 
 	 	 	 	 15D35F161C20185500E3717A / * diag _ range . c in Sources * / , 
 	 	 	 	 066A525E1BC503BB000E606E / * ActorApplicationDelegate . swift in Sources * / , 
 	 	 	 	 BED5A1F91C48396A0045FDB0 / * NYTPhotosViewController . m in Sources * / , 
 + 	 	 	 	 068B39841C876AF5002BFF73 / * AAEmailAuthViewController . swift in Sources * / , 
 	 	 	 	 066A53101BC53317000E606E / * AAWallpapperPreviewController . swift in Sources * / , 
 	 	 	 	 152AA8B91C2989270030DEEE / * UIView + SLKAdditions . m in Sources * / , 
 	 	 	 	 066A52F21BC52B02000E606E / * AASettingsPrivacyViewController . swift in Sources * / , 
 @ @ - 1862 , 6 + 1869 , 7 @ @ 
 	 	 	 	 15D35F1B1C20185500E3717A / * opusenc . m in Sources * / , 
 	 	 	 	 152AA8BD1C298BF00030DEEE / * AASettingsSessionsController . swift in Sources * / , 
 	 	 	 	 066A515B1BC4C178000E606E / * AAHashMap . swift in Sources * / , 
 + 	 	 	 	 068B39831C876AF5002BFF73 / * AAEmailAuthCodeViewController . swift in Sources * / , 
 	 	 	 	 066A52811BC51ED0000E606E / * AANoSelectionViewController . swift in Sources * / , 
 	 	 	 	 BEE6EB041C4D9A4900A2280E / * AAWallpapersCell . swift in Sources * / , 
 	 	 	 	 152AA8B21C2989270030DEEE / * SLKTypingIndicatorView . m in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index 8bb8efa . . 8985069 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 467 , 6 + 467 , 17 @ @ 
 
 " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; 
 
 + " AuthEmailTitle " = " Your Email " ; 
 + 
 + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; 
 + 
 + " AuthEmailFieldHint " = " Your corporate email adress " ; 
 + 
 + 
 + " AuthEmailCodeFieldHint " = " Activation Code " ; 
 + 
 + " AuthEmailCodeHint " = " We sent activation code to your email . " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 index a35bcd7 . . 7b966ce 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 @ @ - 462 , 6 + 462 , 17 @ @ 
 
 " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; 
 
 + " AuthEmailTitle " = " Your Email " ; 
 + 
 + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; 
 + 
 + " AuthEmailFieldHint " = " Your corporate email adress " ; 
 + 
 + 
 + " AuthEmailCodeFieldHint " = " Activation Code " ; 
 + 
 + " AuthEmailCodeHint " = " We sent activation code to your email . " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 index ead1375 . . 838c369 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 @ @ - 443 , 6 + 443 , 17 @ @ 
 
 " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; 
 
 + " AuthEmailTitle " = " Your Email " ; 
 + 
 + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; 
 + 
 + " AuthEmailFieldHint " = " Your corporate email adress " ; 
 + 
 + 
 + " AuthEmailCodeFieldHint " = " Activation Code " ; 
 + 
 + " AuthEmailCodeHint " = " We sent activation code to your email . " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 index 56bfbb4 . . e737ed7 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 @ @ - 457 , 6 + 457 , 17 @ @ 
 
 " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; 
 
 + " AuthEmailTitle " = " В а ш а п о ч т а " ; 
 + 
 + " AuthEmailHint " = " П о ж а л у й с т а , в в е д и т е с в о ю р а б о ч у ю п о ч т у и н а ж м и т е д а л е е " ; 
 + 
 + " AuthEmailFieldHint " = " В а ш а р а б о ч а я п о ч т а " ; 
 + 
 + 
 + " AuthEmailCodeFieldHint " = " К о д а к т и в а ц и и " ; 
 + 
 + " AuthEmailCodeHint " = " М ы о т п р а в и л и в а м к о д а к т и в а ц и и н а п о ч т у . " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 index 4916979 . . 3a8e625 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 @ @ - 466 , 6 + 466 , 17 @ @ 
 
 " AuthTerms " = " By signing up to { app _ name } , you agree not to : \ n \ n - use our service to send spam and scam users . \ n \ n - promote violence on publicly viewable { app _ name } bots or channels . \ n \ nWe reserve the right to update these Terms of Service later . " ; 
 
 + " AuthEmailTitle " = " Your Email " ; 
 + 
 + " AuthEmailHint " = " Please , confirm your corporate email address and press next " ; 
 + 
 + " AuthEmailFieldHint " = " Your corporate email adress " ; 
 + 
 + 
 + " AuthEmailCodeFieldHint " = " Activation Code " ; 
 + 
 + " AuthEmailCodeHint " = " We sent activation code to your email . " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 1511ed9 . . c75315d 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 71 , 6 + 71 , 9 @ @ import PushKit 
 / / / Push token registration id . Required for sending push tokens 
 public var apiPushId : Int ? = nil 
 
 + / / / Strategy about authentication 
 + public var authStrategy = AAAuthStrategy . PhoneOnly 
 + 
 / / / Enable phone book import 
 public var enablePhoneBookImport = true 
 
 @ @ - 107 , 6 + 110 , 7 @ @ import PushKit 
 / / / Enable voice calls feature 
 public var enableCalls : Bool = true 
 
 + 
 / / / Enable experimental features 
 public var enableExperimentalFeatures : Bool = false 
 
 @ @ - 428 , 8 + 432 , 13 @ @ import PushKit 
 } else { 
 var controller : UIViewController ! = delegate . actorControllerForAuthStart ( ) 
 if controller = = nil { 
 - / / controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) 
 - controller = AAAuthNavigationController ( rootViewController : AAWelcomeController ( ) ) 
 + if self . authStrategy = = . PhoneOnly { 
 + controller = AAAuthNavigationController ( rootViewController : AAAuthPhoneViewController ( ) ) 
 + } else if self . authStrategy = = . EmailOnly { 
 + controller = AAAuthNavigationController ( rootViewController : AAEmailAuthViewController ( ) ) 
 + } else { 
 + / / ? ? ? 
 + } 
 } 
 window . rootViewController = controller ! 
 } 
 @ @ - 752 , 4 + 761 , 9 @ @ public enum AAAutoPush { 
 case None 
 case FromStart 
 case AfterLogin 
 + } 
 + 
 + public enum AAAuthStrategy { 
 + case PhoneOnly 
 + case EmailOnly 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift 
 new file mode 100644 
 index 0000000 . . df912e3 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthCodeViewController . swift 
 @ @ - 0 , 0 + 1 , 158 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + class AAEmailAuthCodeViewController : AAAuthViewController { 
 + 
 + / / Views 
 + 
 + private let grayBackground = UIView ( ) 
 + private let titleLabel = UILabel ( ) 
 + 
 + private let codeTextField = UITextField ( ) 
 + private let hintLabel = UILabel ( ) 
 + 
 + private var navigationBarSeparator = UIView ( ) 
 + private var codeSeparator = UIView ( ) 
 + 
 + private let email : String 
 + 
 + init ( email : String ) { 
 + self . email = email 
 + super . init ( ) 
 + } 
 + 
 + required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + / / Layouting 
 + 
 + override func loadView ( ) { 
 + super . loadView ( ) 
 + 
 + view . backgroundColor = UIColor . whiteColor ( ) 
 + 
 + grayBackground . backgroundColor = UIColor ( rgb : 0xf2f2f2 ) 
 + view . addSubview ( grayBackground ) 
 + 
 + titleLabel . backgroundColor = UIColor . clearColor ( ) 
 + titleLabel . textColor = UIColor . blackColor ( ) 
 + titleLabel . font = AADevice . isiPad 
 + ? UIFont . thinSystemFontOfSize ( 50 . 0 ) 
 + : UIFont . lightSystemFontOfSize ( 22 ) 
 + 
 + titleLabel . textLocalized = email 
 + grayBackground . addSubview ( titleLabel ) 
 + 
 + codeTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) 
 + codeTextField . backgroundColor = UIColor . whiteColor ( ) 
 + codeTextField . placeholder = AALocalized ( " AuthEmailCodeFieldHint " ) 
 + codeTextField . keyboardType = UIKeyboardType . EmailAddress 
 + codeTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center 
 + codeTextField . textAlignment = . Center 
 + view . addSubview ( codeTextField ) 
 + 
 + codeSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) 
 + view . addSubview ( codeSeparator ) 
 + 
 + navigationBarSeparator = UIView ( ) 
 + navigationBarSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) 
 + view . addSubview ( navigationBarSeparator ) 
 + 
 + hintLabel . font = UIFont . systemFontOfSize ( 17 . 0 ) 
 + hintLabel . textColor = UIColor ( rgb : 0x999999 ) 
 + hintLabel . lineBreakMode = NSLineBreakMode . ByWordWrapping 
 + hintLabel . backgroundColor = UIColor . whiteColor ( ) 
 + hintLabel . textAlignment = NSTextAlignment . Center 
 + hintLabel . contentMode = UIViewContentMode . Center 
 + hintLabel . numberOfLines = 0 
 + hintLabel . textLocalized = " AuthEmailCodeHint " 
 + view . addSubview ( hintLabel ) 
 + 
 + / / Configure navigation bar 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationNext " ) , style : UIBarButtonItemStyle . Done , target : self , action : " nextButtonPressed " ) 
 + } 
 + 
 + override func viewWillLayoutSubviews ( ) { 
 + super . viewWillLayoutSubviews ( ) 
 + 
 + let screenSize = UIScreen . mainScreen ( ) . bounds . size 
 + let isWidescreen = screenSize . width > 320 | | screenSize . height > 480 
 + let isPortraint = screenSize . width < screenSize . height 
 + 
 + let bgSize = AADevice . isiPad 
 + ? ( isPortraint ? 304 . 0 : 140 ) 
 + : ( isWidescreen ? 131 . 0 : 90 . 0 ) 
 + grayBackground . frame = CGRect ( x : 0 . 0 , y : 0 . 0 , width : screenSize . width , height : CGFloat ( bgSize ) ) 
 + 
 + let padding = AADevice . isiPad 
 + ? ( isPortraint ? 48 : 20 ) 
 + : ( 20 ) 
 + titleLabel . sizeToFit ( ) 
 + titleLabel . frame = CGRect ( x : ( screenSize . width - titleLabel . frame . size . width ) / 2 . 0 , y : grayBackground . frame . height - titleLabel . frame . size . height - CGFloat ( padding ) , width : titleLabel . frame . size . width , height : titleLabel . frame . size . height ) 
 + 
 + navigationBarSeparator . frame = CGRect ( x : 0 , y : grayBackground . bounds . size . height , width : screenSize . width , height : 0 . 5 ) 
 + 
 + let fieldWidth : CGFloat = AADevice . isiPad 
 + ? ( 520 ) 
 + : ( screenSize . width ) 
 + 
 + codeTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 32 , y : navigationBarSeparator . top + 16 , width : fieldWidth - 10 . 0 - 64 , height : 50 - 2 ) 
 + 
 + codeTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 , y : navigationBarSeparator . frame . origin . y + navigationBarSeparator . bounds . size . height , width : fieldWidth , height : 56 . 0 ) 
 + 
 + codeSeparator . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 22 , y : codeTextField . frame . origin . y + codeTextField . height , width : fieldWidth - 44 , height : 0 . 5 ) 
 + 
 + let hintPadding : CGFloat = AADevice . isiPad 
 + ? ( isPortraint ? 460 . 0 : 274 . 0 ) 
 + : ( isWidescreen ? 214 . 0 : 184 . 0 ) 
 + 
 + let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) 
 + hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; 
 + } 
 + 
 + / / Constoller states 
 + 
 + override func viewDidAppear ( animated : Bool ) { 
 + super . viewDidAppear ( animated ) 
 + codeTextField . becomeFirstResponder ( ) 
 + } 
 + 
 + / / Actions 
 + 
 + func nextButtonPressed ( ) { 
 + if codeTextField . text = = nil | | codeTextField . text ! . trim ( ) . length = = 0 { 
 + let fieldWidth : CGFloat = AADevice . isiPad 
 + ? ( 520 ) 
 + : ( view . width ) 
 + self . shakeView ( codeTextField , originalX : ( view . width - fieldWidth ) / 2 ) 
 + return 
 + } 
 + 
 + executeSafe ( Actor . validateCodeCommand ( codeTextField . text ! ) , ignore : [ " PHONE _ CODE _ INVALID " ] ) { ( val ) - > Void in 
 + 
 + let state = Actor . getAuthState ( ) . ordinal ( ) 
 + 
 + if state = = ACAuthState . LOGGED _ IN ( ) . ordinal ( ) { 
 + 
 + / / If logged in state : end authentication 
 + self . onAuthenticated ( ) 
 + } else if state = = ACAuthState . SIGN _ UP ( ) . ordinal ( ) { 
 + 
 + / / Is signup go to signup controller 
 + self . navigateNext ( AAAuthRegisterViewController ( ) , removeCurrent : true ) 
 + } else if state ! = ACAuthState . CODE _ VALIDATION _ PHONE ( ) . ordinal ( ) { 
 + 
 + / / If state not for the current state : start from scratch 
 + self . navigateBack ( ) 
 + } else { 
 + 
 + / / If same state : something code is incorrect 
 + self . shakeView ( self . codeTextField , originalX : self . codeTextField . frame . origin . x ) 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift 
 new file mode 100644 
 index 0000000 . . 584adfd 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAEmailAuthViewController . swift 
 @ @ - 0 , 0 + 1 , 161 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + 
 + class AAEmailAuthViewController : AAAuthViewController { 
 + 
 + / / Views 
 + 
 + private var grayBackground : UIView ! 
 + private var titleLabel : UILabel ! 
 + private var emailTextField : UITextField ! 
 + private var emailTextSeparator = UIView ( ) 
 + private var hintLabel : UILabel ! 
 + private var navigationBarSeparator : UIView ! 
 + 
 + / / Constructors 
 + 
 + override init ( ) { 
 + super . init ( ) 
 + 
 + self . content = ACAllEvents _ Auth . AUTH _ PHONE ( ) 
 + } 
 + 
 + required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + / / Layouting 
 + 
 + override func loadView ( ) { 
 + super . loadView ( ) 
 + 
 + view . backgroundColor = UIColor . whiteColor ( ) 
 + 
 + grayBackground = UIView ( ) 
 + grayBackground . backgroundColor = UIColor ( rgb : 0xf2f2f2 ) 
 + view . addSubview ( grayBackground ) 
 + 
 + titleLabel = UILabel ( ) 
 + titleLabel . backgroundColor = UIColor . clearColor ( ) 
 + titleLabel . textColor = UIColor . blackColor ( ) 
 + titleLabel . font = AADevice . isiPad 
 + ? UIFont . thinSystemFontOfSize ( 50 . 0 ) 
 + : UIFont . lightSystemFontOfSize ( 30 ) 
 + 
 + titleLabel . textLocalized = " AuthEmailTitle " 
 + grayBackground . addSubview ( titleLabel ) 
 + 
 + emailTextField = UITextField ( ) 
 + emailTextField . font = UIFont . systemFontOfSize ( 20 . 0 ) 
 + emailTextField . backgroundColor = UIColor . whiteColor ( ) 
 + emailTextField . placeholder = AALocalized ( " AuthEmailFieldHint " ) 
 + emailTextField . keyboardType = UIKeyboardType . EmailAddress 
 + emailTextField . contentVerticalAlignment = UIControlContentVerticalAlignment . Center 
 + emailTextField . textAlignment = . Center 
 + emailTextField . autocapitalizationType = . None 
 + / / phoneTextField . delegate = self 
 + view . addSubview ( emailTextField ) 
 + 
 + emailTextSeparator = UIView ( ) 
 + emailTextSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) 
 + view . addSubview ( emailTextSeparator ) 
 + 
 + navigationBarSeparator = UIView ( ) 
 + navigationBarSeparator . backgroundColor = UIColor ( rgb : 0xc8c7cc ) 
 + view . addSubview ( navigationBarSeparator ) 
 + 
 + hintLabel = UILabel ( ) 
 + hintLabel . font = UIFont . systemFontOfSize ( 17 . 0 ) 
 + hintLabel . textColor = UIColor ( rgb : 0x999999 ) 
 + hintLabel . lineBreakMode = NSLineBreakMode . ByWordWrapping 
 + hintLabel . backgroundColor = UIColor . whiteColor ( ) 
 + hintLabel . textAlignment = NSTextAlignment . Center 
 + hintLabel . contentMode = UIViewContentMode . Center 
 + hintLabel . numberOfLines = 0 
 + hintLabel . textLocalized = " AuthEmailHint " 
 + view . addSubview ( hintLabel ) 
 + 
 + / / Configure navigation bar 
 + navigationItem . rightBarButtonItem = UIBarButtonItem ( title : AALocalized ( " NavigationNext " ) , style : UIBarButtonItemStyle . Done , target : self , action : " nextButtonPressed " ) 
 + } 
 + 
 + override func viewWillLayoutSubviews ( ) { 
 + super . viewWillLayoutSubviews ( ) 
 + 
 + let screenSize = UIScreen . mainScreen ( ) . bounds . size 
 + let isWidescreen = screenSize . width > 320 | | screenSize . height > 480 
 + let isPortraint = screenSize . width < screenSize . height 
 + 
 + let bgSize = AADevice . isiPad 
 + ? ( isPortraint ? 304 . 0 : 140 ) 
 + : ( isWidescreen ? 131 . 0 : 90 . 0 ) 
 + grayBackground . frame = CGRect ( x : 0 . 0 , y : 0 . 0 , width : screenSize . width , height : CGFloat ( bgSize ) ) 
 + 
 + let padding = AADevice . isiPad 
 + ? ( isPortraint ? 48 : 20 ) 
 + : ( 20 ) 
 + titleLabel . sizeToFit ( ) 
 + titleLabel . frame = CGRect ( x : ( screenSize . width - titleLabel . frame . size . width ) / 2 . 0 , y : grayBackground . frame . height - titleLabel . frame . size . height - CGFloat ( padding ) , width : titleLabel . frame . size . width , height : titleLabel . frame . size . height ) 
 + 
 + navigationBarSeparator . frame = CGRect ( x : 0 , y : grayBackground . bounds . size . height , width : screenSize . width , height : 0 . 5 ) 
 + 
 + let fieldWidth : CGFloat = AADevice . isiPad 
 + ? ( 520 ) 
 + : ( screenSize . width ) 
 + 
 + emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 32 , y : navigationBarSeparator . top + 16 , width : fieldWidth - 10 . 0 - 64 , height : 50 - 2 ) 
 + 
 + emailTextField . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 , y : navigationBarSeparator . frame . origin . y + navigationBarSeparator . bounds . size . height , width : fieldWidth , height : 56 . 0 ) 
 + 
 + emailTextSeparator . frame = CGRect ( x : ( screenSize . width - fieldWidth ) / 2 + 22 , y : emailTextField . frame . origin . y + emailTextField . height , width : fieldWidth - 44 , height : 0 . 5 ) 
 + 
 + let hintPadding : CGFloat = AADevice . isiPad 
 + ? ( isPortraint ? 460 . 0 : 274 . 0 ) 
 + : ( isWidescreen ? 214 . 0 : 184 . 0 ) 
 + 
 + let hintLabelSize = hintLabel . sizeThatFits ( CGSize ( width : 278 . 0 , height : CGFloat . max ) ) 
 + hintLabel . frame = CGRect ( x : ( screenSize . width - hintLabelSize . width ) / 2 . 0 , y : hintPadding , width : hintLabelSize . width , height : hintLabelSize . height ) ; 
 + } 
 + 
 + / / Constoller states 
 + 
 + override func viewDidAppear ( animated : Bool ) { 
 + super . viewDidAppear ( animated ) 
 + emailTextField . becomeFirstResponder ( ) 
 + } 
 + 
 + / / Actions 
 + 
 + func nextButtonPressed ( ) { 
 + 
 + if emailTextField . text = = nil | | ! isValidEmail ( emailTextField . text ! ) { 
 + let fieldWidth : CGFloat = AADevice . isiPad 
 + ? ( 520 ) 
 + : ( view . width ) 
 + self . shakeView ( emailTextField , originalX : ( view . width - fieldWidth ) / 2 ) 
 + return 
 + } 
 + 
 + let email = emailTextField . text ! 
 + executeSafe ( Actor . requestStartAuthCommandWithEmail ( email ) ) { ( val ) - > Void in 
 + self . navigateNext ( AAEmailAuthCodeViewController ( email : email ) , removeCurrent : false ) 
 + } 
 + } 
 + 
 + func isValidEmail ( testStr : String ) - > Bool { 
 + 
 + let emailRegEx = " ^ [ A - Z0 - 9a - z . _ % + - ] + @ [ A - Za - z0 - 9 . - ] + \ \ . [ A - Za - z ] { 2 , 6 } " 
 + 
 + let emailTest = NSPredicate ( format : " SELF MATCHES % @ " , emailRegEx ) 
 + return emailTest . evaluateWithObject ( testStr ) 
 + } 
 + 
 + / / Events 
 + 
 + func textField ( textField : UITextField , shouldChangeCharactersInRange range : NSRange , replacementString string : String ) - > Bool { 
 + return true 
 + } 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 index c38d4cd . . 56b461b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorApp / AppDelegate . swift 
 @ @ - 22 , 6 + 22 , 9 @ @ import ActorSDK 
 
 ActorSDK . sharedActor ( ) . style . searchStatusBarStyle = . Default 
 
 + / / Enabling experimental features 
 + ActorSDK . sharedActor ( ) . enableExperimentalFeatures = true 
 + 
 / / Creating Actor 
 ActorSDK . sharedActor ( ) . createActor ( ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 index 9bf41a2 . . f26bdd0 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK . xcodeproj / project . pbxproj 
 @ @ - 172 , 6 + 172 , 9 @ @ 
 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE89891BD8401C005A5530 / * Reachability . swift * / ; } ; 
 	 	 06CE898C1BD841C9005A5530 / * SystemConfiguration . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / ; } ; 
 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / ; } ; 
 + 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / ; } ; 
 + 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / ; } ; 
 + 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / = { isa = PBXBuildFile ; fileRef = 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / ; } ; 
 	 	 697B3A12994653F581459F63 / * Pods _ ActorSDK . framework in Frameworks * / = { isa = PBXBuildFile ; fileRef = 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / ; } ; 
 / * End PBXBuildFile section * / 
 
 @ @ - 347 , 6 + 350 , 9 @ @ 
 	 	 06CE89891BD8401C005A5530 / * Reachability . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = Reachability . swift ; sourceTree = " < group > " ; } ; 
 	 	 06CE898B1BD841C9005A5530 / * SystemConfiguration . framework * / = { isa = PBXFileReference ; lastKnownFileType = wrapper . framework ; name = SystemConfiguration . framework ; path = System / Library / Frameworks / SystemConfiguration . framework ; sourceTree = SDKROOT ; } ; 
 	 	 06CE898F1BD84DF5005A5530 / * ActorSDKAnalytics . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = ActorSDKAnalytics . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = LocationPickerController . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AABubbleLocationCell . swift ; sourceTree = " < group > " ; } ; 
 + 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / = { isa = PBXFileReference ; fileEncoding = 4 ; lastKnownFileType = sourcecode . swift ; path = AAMapFastView . swift ; sourceTree = " < group > " ; } ; 
 	 	 22BAEA363892E475F59B7E9F / * Pods - ActorSDK . debug . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . debug . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . debug . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 333F91AE5263DD450666CC87 / * Pods - ActorSDK . release . xcconfig * / = { isa = PBXFileReference ; includeInIndex = 1 ; lastKnownFileType = text . xcconfig ; name = " Pods - ActorSDK . release . xcconfig " ; path = " Pods / Target Support Files / Pods - ActorSDK / Pods - ActorSDK . release . xcconfig " ; sourceTree = " < group > " ; } ; 
 	 	 9A22DF21664BBB34087283F6 / * Pods _ ActorSDK . framework * / = { isa = PBXFileReference ; explicitFileType = wrapper . framework ; includeInIndex = 0 ; path = Pods _ ActorSDK . framework ; sourceTree = BUILT _ PRODUCTS _ DIR ; } ; 
 @ @ - 530 , 6 + 536 , 7 @ @ 
 	 	 	 	 069CF4C31BCB908C00C66E12 / * CLTokenInputView * / , 
 	 	 	 	 066A52321BC4EEBA000E606E / * Cells * / , 
 	 	 	 	 066A52141BC4EE04000E606E / * AAAvatarView . swift * / , 
 + 	 	 	 	 06E7B24B1C0FAB500090660C / * AAMapFastView . swift * / , 
 	 	 	 	 066A52461BC4EED5000E606E / * AAProgressView . swift * / , 
 	 	 	 	 066A523A1BC4EECD000E606E / * AABigPlaceholderView . swift * / , 
 	 	 	 	 066A523C1BC4EECD000E606E / * AATableViewHeader . swift * / , 
 @ @ - 589 , 6 + 596 , 7 @ @ 
 	 	 	 	 066A52F91BC52FA0000E606E / * Compose * / , 
 	 	 	 	 066A52601BC50E6B000E606E / * Auth * / , 
 	 	 	 	 066A52C41BC521D5000E606E / * Content * / , 
 + 	 	 	 	 06E7B2451C0F8D410090660C / * Location * / , 
 	 	 	 	 066A527B1BC51EC6000E606E / * Root * / , 
 	 	 	 	 066A52181BC4EE9A000E606E / * Managed Runtime * / , 
 	 	 	 ) ; 
 @ @ - 832 , 6 + 840 , 7 @ @ 
 	 	 	 	 066A53281BC53406000E606E / * AABubbleBaseFileCell . swift * / , 
 	 	 	 	 066A53291BC53406000E606E / * AABubbleMediaCell . swift * / , 
 	 	 	 	 066A532A1BC53406000E606E / * AABubbleDocumentCell . swift * / , 
 + 	 	 	 	 06E7B2491C0F92140090660C / * AABubbleLocationCell . swift * / , 
 	 	 	 ) ; 
 	 	 	 path = Cell ; 
 	 	 	 sourceTree = " < group > " ; 
 @ @ - 878 , 6 + 887 , 14 @ @ 
 	 	 	 name = CLTokenInputView ; 
 	 	 	 sourceTree = " < group > " ; 
 	 	 } ; 
 + 	 	 06E7B2451C0F8D410090660C / * Location * / = { 
 + 	 	 	 isa = PBXGroup ; 
 + 	 	 	 children = ( 
 + 	 	 	 	 06E7B2461C0F8D7A0090660C / * LocationPickerController . swift * / , 
 + 	 	 	 ) ; 
 + 	 	 	 path = Location ; 
 + 	 	 	 sourceTree = " < group > " ; 
 + 	 	 } ; 
 	 	 2F428D134E194A828C3DF863 / * Frameworks * / = { 
 	 	 	 isa = PBXGroup ; 
 	 	 	 children = ( 
 @ @ - 1107 , 6 + 1124 , 7 @ @ 
 	 	 	 	 066A53171BC533DD000E606E / * AABubbles . swift in Sources * / , 
 	 	 	 	 066A52081BC4E962000E606E / * Makefile in Sources * / , 
 	 	 	 	 066A53231BC533F5000E606E / * Caches . swift in Sources * / , 
 + 	 	 	 	 06E7B2471C0F8D7A0090660C / * LocationPickerController . swift in Sources * / , 
 	 	 	 	 066A52691BC50E7B000E606E / * AAAuthRegisterViewController . swift in Sources * / , 
 	 	 	 	 066A51501BC4BE06000E606E / * AARegex . swift in Sources * / , 
 	 	 	 	 06CE89901BD84DF5005A5530 / * ActorSDKAnalytics . swift in Sources * / , 
 @ @ - 1171 , 6 + 1189 , 7 @ @ 
 	 	 	 	 066A52241BC4EEAC000E606E / * AAManagedRange . swift in Sources * / , 
 	 	 	 	 066A50E21BC4AF9F000E606E / * ActorSDK . swift in Sources * / , 
 	 	 	 	 06CE898A1BD8401C005A5530 / * Reachability . swift in Sources * / , 
 + 	 	 	 	 06E7B24C1C0FAB500090660C / * AAMapFastView . swift in Sources * / , 
 	 	 	 	 066A516D1BC4C366000E606E / * ActorCoreExt . swift in Sources * / , 
 	 	 	 	 066A517E1BC4C373000E606E / * FMDatabaseAdditions . m in Sources * / , 
 	 	 	 	 066A519A1BC4C390000E606E / * FMDBList . swift in Sources * / , 
 @ @ - 1187 , 6 + 1206 , 7 @ @ 
 	 	 	 	 066A52231BC4EEAC000E606E / * AAManagedSection . swift in Sources * / , 
 	 	 	 	 066A52D11BC52204000E606E / * AADialogCell . swift in Sources * / , 
 	 	 	 	 066A51901BC4C383000E606E / * CocoaNetworkRuntime . swift in Sources * / , 
 + 	 	 	 	 06E7B24A1C0F92140090660C / * AABubbleLocationCell . swift in Sources * / , 
 	 	 	 	 066A52581BC4EF61000E606E / * Alerts . swift in Sources * / , 
 	 	 	 	 066A51691BC4C366000E606E / * AATools . swift in Sources * / , 
 	 	 	 	 066A53201BC533F5000E606E / * AABubbleBackgroundProcessor . swift in Sources * / , 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 new file mode 100644 
 index 0000000 . . 3f92572 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / Contents . json 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + { 
 + " images " : [ 
 + { 
 + " idiom " : " universal " , 
 + " filename " : " LocationPin @ 2x . png " , 
 + " scale " : " 2x " 
 + } 
 + ] , 
 + " info " : { 
 + " version " : 1 , 
 + " author " : " xcode " 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png 
 new file mode 100644 
 index 0000000 . . 709d3b0 
 Binary files / dev / null and b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Images . xcassets / LocationPin . imageset / LocationPin @ 2x . png differ 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 587321a . . 9edb0ad 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 82 , 6 + 82 , 9 @ @ public class ActorSDK { 
 / / / Extensions 
 private var extensions = [ ActorExtension ] ( ) 
 
 + / / / Enable experimental features 
 + public var enableExperimentalFeatures : Bool = false 
 + 
 / / 
 / / User Onlines 
 / / 
 @ @ - 91 , 7 + 94 , 7 @ @ public class ActorSDK { 
 
 / / / Disable this if you want manually handle online states 
 public var automaticOnlineHandling = true 
 - 
 + 
 / / 
 / / Internal State 
 / / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 index ca23c70 . . a98f2ef 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / AABubbles . swift 
 @ @ - 10 , 11 + 10 , 13 @ @ class AABubbles { 
 static let mediaLayouter = AABubbleMediaCellLayouter ( ) 
 static let documentLayouter = AABubbleDocumentCellLayout ( ) 
 static let serviceLayouter = AABubbleServiceCellLayouter ( ) 
 + static let locationLayouter = AABubbleLocationCellLayouter ( ) 
 
 static let builtInLayouters : [ AABubbleLayouter ] = [ 
 serviceLayouter , 
 mediaLayouter , 
 documentLayouter , 
 + locationLayouter , 
 textLayouter 
 ] 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 new file mode 100644 
 index 0000000 . . 1c539ce 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleLocationCell . swift 
 @ @ - 0 , 0 + 1 , 179 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + private let mapWidth : CGFloat = 200 
 + private let mapHeight : CGFloat = 160 
 + 
 + public class AABubbleLocationCell : AABubbleCell { 
 + 
 + private let map = AAMapFastView ( mapWidth : mapWidth , mapHeight : mapHeight ) 
 + 
 + private let pin = UIImageView ( ) 
 + private let timeBg = UIImageView ( ) 
 + private let timeLabel = UILabel ( ) 
 + private let statusView = UIImageView ( ) 
 + 
 + private var bindedLat : Double ? = nil 
 + private var bindedLon : Double ? = nil 
 + 
 + public init ( frame : CGRect ) { 
 + super . init ( frame : frame , isFullSize : false ) 
 + 
 + timeBg . image = Imaging . imageWithColor ( appStyle . chatMediaDateBgColor , size : CGSize ( width : 1 , height : 1 ) ) 
 + 
 + timeLabel . font = UIFont . italicSystemFontOfSize ( 11 ) 
 + timeLabel . textColor = appStyle . chatMediaDateColor 
 + 
 + statusView . contentMode = UIViewContentMode . Center 
 + 
 + pin . image = UIImage . bundled ( " LocationPin " ) 
 + 
 + contentView . addSubview ( map ) 
 + map . addSubview ( pin ) 
 + 
 + contentView . addSubview ( timeBg ) 
 + contentView . addSubview ( timeLabel ) 
 + contentView . addSubview ( statusView ) 
 + 
 + contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + 
 + map . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " mapDidTap " ) ) 
 + map . userInteractionEnabled = true 
 + } 
 + 
 + public required init ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func mapDidTap ( ) { 
 + let url = " http : / / maps . apple . com / ? q = \ ( bindedLat ! ) , \ ( bindedLon ! ) " 
 + / / print ( " url : \ ( url ) " ) 
 + UIApplication . sharedApplication ( ) . openURL ( NSURL ( string : url ) ! ) 
 + } 
 + 
 + public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 + 
 + let layout = cellLayout as ! AALocationCellLayout 
 + 
 + bindedLat = layout . latitude 
 + bindedLon = layout . longitude 
 + 
 + bubbleInsets = UIEdgeInsets ( 
 + top : setting . clenchTop ? AABubbleCell . bubbleTopCompact : AABubbleCell . bubbleTop , 
 + left : 10 + ( AADevice . isiPad ? 16 : 0 ) , 
 + bottom : setting . clenchBottom ? AABubbleCell . bubbleBottomCompact : AABubbleCell . bubbleBottom , 
 + right : 10 + ( AADevice . isiPad ? 16 : 0 ) ) 
 + 
 + if ( ! reuse ) { 
 + 
 + / / Bind bubble 
 + if ( self . isOut ) { 
 + bindBubbleType ( BubbleType . MediaOut , isCompact : false ) 
 + } else { 
 + bindBubbleType ( BubbleType . MediaIn , isCompact : false ) 
 + } 
 + } 
 + 
 + map . bind ( layout . latitude , longitude : layout . longitude ) 
 + 
 + / / Update time 
 + timeLabel . text = cellLayout . date 
 + 
 + / / Update status 
 + if ( isOut ) { 
 + statusView . hidden = false 
 + switch ( UInt ( message . messageState . ordinal ( ) ) ) { 
 + case ACMessageState . PENDING . rawValue : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + case ACMessageState . SENT . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck1 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSent 
 + break ; 
 + case ACMessageState . RECEIVED . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaReceived 
 + break ; 
 + case ACMessageState . READ . rawValue : 
 + self . statusView . image = appStyle . chatIconCheck2 ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaRead 
 + break ; 
 + case ACMessageState . ERROR . rawValue : 
 + self . statusView . image = appStyle . chatIconError ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaError 
 + break 
 + default : 
 + self . statusView . image = appStyle . chatIconClock ; 
 + self . statusView . tintColor = appStyle . chatStatusMediaSending 
 + break ; 
 + } 
 + } else { 
 + statusView . hidden = true 
 + } 
 + } 
 + 
 + public override func layoutContent ( maxWidth : CGFloat , offsetX : CGFloat ) { 
 + let insets = fullContentInsets 
 + 
 + layoutBubble ( mapWidth , contentHeight : mapHeight ) 
 + 
 + if isOut { 
 + map . frame = CGRectMake ( maxWidth - insets . right - mapWidth , insets . top , mapWidth , mapHeight ) 
 + } else { 
 + map . frame = CGRectMake ( insets . left , insets . top , mapWidth , mapHeight ) 
 + } 
 + 
 + timeLabel . frame = CGRectMake ( 0 , 0 , 1000 , 1000 ) 
 + timeLabel . sizeToFit ( ) 
 + 
 + let timeWidth = ( isOut ? 23 : 0 ) + timeLabel . bounds . width 
 + let timeHeight : CGFloat = 20 
 + 
 + timeLabel . frame = CGRectMake ( map . frame . maxX - timeWidth - 18 , map . frame . maxY - timeHeight - 6 , timeLabel . frame . width , timeHeight ) 
 + 
 + if ( isOut ) { 
 + statusView . frame = CGRectMake ( timeLabel . frame . maxX , timeLabel . frame . minY , 23 , timeHeight ) 
 + } 
 + 
 + pin . frame = CGRectMake ( ( map . width - pin . image ! . size . width ) / 2 , ( map . height - pin . image ! . size . height ) / 2 , 
 + pin . image ! . size . width , pin . image ! . size . height ) 
 + 
 + timeBg . frame = CGRectMake ( timeLabel . frame . minX - 3 , timeLabel . frame . minY - 1 , timeWidth + 6 , timeHeight + 2 ) 
 + } 
 + } 
 + 
 + public class AALocationCellLayout : AACellLayout { 
 + 
 + let latitude : Double 
 + let longitude : Double 
 + 
 + init ( latitude : Double , longitude : Double , date : Int64 ) { 
 + self . latitude = latitude 
 + self . longitude = longitude 
 + super . init ( height : mapHeight , date : date , key : " location " ) 
 + } 
 + } 
 + 
 + public class AABubbleLocationCellLayouter : AABubbleLayouter { 
 + 
 + public func isSuitable ( message : ACMessage ) - > Bool { 
 + if ( message . content is ACLocationContent ) { 
 + return true 
 + } 
 + return false 
 + } 
 + 
 + public func buildLayout ( peer : ACPeer , message : ACMessage ) - > AACellLayout { 
 + let content = message . content as ! ACLocationContent 
 + return AALocationCellLayout ( latitude : Double ( content . getLatitude ( ) ) , longitude : Double ( content . getLongitude ( ) ) , date : Int64 ( message . date ) ) 
 + } 
 + 
 + public func cellClass ( ) - > AnyClass { 
 + return AABubbleLocationCell . self 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 7704094 . . af819ab 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 308 , 6 + 308 , 12 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 self . pickDocument ( ) 
 } 
 
 + if ( ActorSDK . sharedActor ( ) . enableExperimentalFeatures ) { 
 + builder . add ( " Location " ) { ( ) - > ( ) in 
 + self . pickLocation ( ) 
 + } 
 + } 
 + 
 showActionSheet ( builder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : self . leftButton , sourceRect : self . leftButton . bounds , tapClosure : builder . tapClosure ) 
 } 
 
 @ @ - 452 , 4 + 458 , 10 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 func imagePickerControllerDidCancel ( picker : UIImagePickerController ) { 
 picker . dismissViewControllerAnimated ( true , completion : nil ) 
 } 
 + 
 + / / Location picking 
 + 
 + func pickLocation ( ) { 
 + 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 new file mode 100644 
 index 0000000 . . 123575a 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Location / LocationPickerController . swift 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + class AALocationPickerController : AAViewController { 
 + 
 + let map = MKMapView ( ) 
 + 
 + override func viewDidLoad ( ) { 
 + super . viewDidLoad ( ) 
 + 
 + self . view . addSubview ( map ) 
 + } 
 + 
 + 
 + override func viewDidLayoutSubviews ( ) { 
 + super . viewDidLayoutSubviews ( ) 
 + 
 + map . frame = self . view . bounds 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 index 3d7e2c7 . . bf761a5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAAvatarView . swift 
 @ @ - 17 , 8 + 17 , 8 @ @ public class AAAvatarView : UIImageView { 
 
 var enableAnimation : Bool = false 
 
 - private let cacheSize = 10 
 - private var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) 
 + private static let cacheSize = 10 
 + private static var avatarCache = Dictionary < Int , AASwiftlyLRU < Int64 , UIImage > > ( ) 
 
 private var bindedFileId : jlong ! = nil 
 private var bindedTitle : String ! = nil 
 @ @ - 233 , 7 + 233 , 7 @ @ public class AAAvatarView : UIImageView { 
 / / 
 
 private func checkCache ( size : Int , id : Int64 ) - > UIImage ? { 
 - if let cache = avatarCache [ size ] { 
 + if let cache = AAAvatarView . avatarCache [ size ] { 
 if let img = cache [ id ] { 
 return img 
 } 
 @ @ - 242 , 12 + 242 , 12 @ @ public class AAAvatarView : UIImageView { 
 } 
 
 private func putToCache ( size : Int , id : Int64 , image : UIImage ) { 
 - if let cache = avatarCache [ size ] { 
 + if let cache = AAAvatarView . avatarCache [ size ] { 
 cache [ id ] = image 
 } else { 
 - let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : cacheSize ) ; 
 + let cache = AASwiftlyLRU < jlong , UIImage > ( capacity : AAAvatarView . cacheSize ) ; 
 cache [ id ] = image 
 - avatarCache . updateValue ( cache , forKey : size ) 
 + AAAvatarView . avatarCache . updateValue ( cache , forKey : size ) 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift 
 new file mode 100644 
 index 0000000 . . 217c38e 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Views / AAMapFastView . swift 
 @ @ - 0 , 0 + 1 , 58 @ @ 
 + / / 
 + / / Copyright ( c ) 2014 - 2015 Actor LLC . < https : / / actor . im > 
 + / / 
 + 
 + import Foundation 
 + import MapKit 
 + 
 + public class AAMapFastView : UIImageView { 
 + 
 + static private var mapCache = AASwiftlyLRU < String , UIImage > ( capacity : 16 ) 
 + 
 + let mapWidth : CGFloat 
 + let mapHeight : CGFloat 
 + var mapKey : String ? = nil 
 + 
 + public init ( mapWidth : CGFloat , mapHeight : CGFloat ) { 
 + self . mapWidth = mapWidth 
 + self . mapHeight = mapHeight 
 + super . init ( image : nil ) 
 + } 
 + 
 + required public init ? ( coder aDecoder : NSCoder ) { 
 + fatalError ( " init ( coder : ) has not been implemented " ) 
 + } 
 + 
 + func bind ( latitude : Double , longitude : Double ) { 
 + let key = " \ ( Int ( latitude * 1000000 ) ) _ \ ( Int ( longitude * 1000000 ) ) " 
 + 
 + / / Same Key 
 + if ( self . mapKey = = key ) { 
 + return 
 + } 
 + 
 + self . mapKey = key 
 + 
 + let cached = AAMapFastView . mapCache [ key ] 
 + if ( cached ! = nil ) { 
 + self . image = cached 
 + return 
 + } 
 + 
 + let options = MKMapSnapshotOptions ( ) 
 + options . region = MKCoordinateRegion ( center : CLLocationCoordinate2D ( latitude : latitude , longitude : longitude ) , span : MKCoordinateSpan ( latitudeDelta : 0 . 005 , longitudeDelta : 0 . 005 ) ) 
 + options . size = CGSizeMake ( mapWidth , mapHeight ) 
 + options . scale = UIScreen . mainScreen ( ) . scale 
 + 
 + let snapshotter = MKMapSnapshotter ( options : options ) 
 + snapshotter . startWithCompletionHandler { snapshot , error in 
 + if let img = snapshot ? . image { 
 + let rounded = img . roundCorners ( img . size . width , h : img . size . height , roundSize : 14 ) 
 + dispatchOnUi { 
 + AAMapFastView . mapCache [ key ] = rounded 
 + self . image = rounded 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file
