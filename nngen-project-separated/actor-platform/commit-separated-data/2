BLEU SCORE: 0.11208466750961142

TEST MSG: feat ( bots ) : allow to add users to group
GENERATED MSG: feat ( server : botkit ) : add isAdmin request

TEST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index 41b25b9 . . 294e3a7 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 553 , 11 + 553 , 17 @ @ object BotMessages { < nl > @ key ( " CreateGroupWithOwner " ) < nl > final case class CreateGroupWithOwner ( < nl > @ beanGetter title : String , < nl > - @ beanGetter user : UserPeer < nl > + @ beanGetter user : UserPeer , < nl > + members : Seq [ UserPeer ] < nl > ) extends RequestBody { < nl > override type Response = ResponseCreateGroup < nl > override val service : String = Services . Groups < nl > < nl > + def this ( title : String , user : UserPeer , members : java . util . List [ UserPeer ] ) = < nl > + this ( title , user , members . toIndexedSeq ) < nl > + < nl > + def getMembers = seqAsJavaList ( members ) < nl > + < nl > override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) < nl > }
NEAREST DIFF (one line): diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > index a18cdc3 . . 9f1d263 100644 < nl > - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala < nl > @ @ - 416 , 6 + 416 , 17 @ @ object BotMessages { < nl > def getAbout = about . asJava < nl > } < nl > < nl > + @ key ( " IsAdmin " ) < nl > + final case class IsAdmin ( @ beanGetter userId : Int ) extends RequestBody { < nl > + override type Response = ResponseIdAdmin < nl > + override val service = Services . Users < nl > + override def readResponse ( obj : Js . Obj ) = readJs [ Response ] ( obj ) < nl > + } < nl > + < nl > + final case class ResponseIdAdmin ( isAdmin : Boolean , in : Int ) extends ResponseBody { < nl > + def getIsAdmin : java . lang . Boolean = isAdmin . booleanValue ( ) < nl > + } < nl > + < nl > @ key ( " FindUser " ) < nl > final case class FindUser ( < nl > @ beanGetter query : String

TEST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index 41b25b9 . . 294e3a7 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 553 , 11 + 553 , 17 @ @ object BotMessages { 
 @ key ( " CreateGroupWithOwner " ) 
 final case class CreateGroupWithOwner ( 
 @ beanGetter title : String , 
 - @ beanGetter user : UserPeer 
 + @ beanGetter user : UserPeer , 
 + members : Seq [ UserPeer ] 
 ) extends RequestBody { 
 override type Response = ResponseCreateGroup 
 override val service : String = Services . Groups 
 
 + def this ( title : String , user : UserPeer , members : java . util . List [ UserPeer ] ) = 
 + this ( title , user , members . toIndexedSeq ) 
 + 
 + def getMembers = seqAsJavaList ( members ) 
 + 
 override def readResponse ( obj : Js . Obj ) : Response = readJs [ Response ] ( obj ) 
 }

NEAREST DIFF:
diff - - git a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 index a18cdc3 . . 9f1d263 100644 
 - - - a / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 + + + b / actor - server / actor - bots - shared / src / main / scala / im / actor / bots / BotMessages . scala 
 @ @ - 416 , 6 + 416 , 17 @ @ object BotMessages { 
 def getAbout = about . asJava 
 } 
 
 + @ key ( " IsAdmin " ) 
 + final case class IsAdmin ( @ beanGetter userId : Int ) extends RequestBody { 
 + override type Response = ResponseIdAdmin 
 + override val service = Services . Users 
 + override def readResponse ( obj : Js . Obj ) = readJs [ Response ] ( obj ) 
 + } 
 + 
 + final case class ResponseIdAdmin ( isAdmin : Boolean , in : Int ) extends ResponseBody { 
 + def getIsAdmin : java . lang . Boolean = isAdmin . booleanValue ( ) 
 + } 
 + 
 @ key ( " FindUser " ) 
 final case class FindUser ( 
 @ beanGetter query : String
