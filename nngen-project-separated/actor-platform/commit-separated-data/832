BLEU SCORE: 0.2626909894424158

TEST MSG: feat ( core ) : Better answer / advertise handling
GENERATED MSG: wip ( core ) : Implementation of Master Call actor

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java < nl > index 5005b03 . . 054f48d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . core . modules . calls ; < nl > < nl > + import java . util . HashMap ; < nl > import java . util . HashSet ; < nl > < nl > import im . actor . core . api . rpc . RequestDoCall ; < nl > @ @ - 9 , 6 + 10 , 7 @ @ import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . calls . peers . AbsCallActor ; < nl > + import im . actor . core . modules . calls . peers . PeerSettings ; < nl > import im . actor . core . viewmodel . CallVM ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > import im . actor . runtime . Log ; < nl > @ @ - 20 , 6 + 22 , 8 @ @ public class CallMasterActor extends AbsCallActor { < nl > private long callId ; < nl > private CallVM callVM ; < nl > private CommandCallback < Long > callback ; < nl > + private HashMap < Long , PeerSettings > peerSettings = new HashMap < > ( ) ; < nl > + private HashSet < Long > isAnswered = new HashSet < > ( ) ; < nl > < nl > public CallMasterActor ( Peer peer , ModuleContext context , CommandCallback < Long > callback ) { < nl > super ( context ) ; < nl > @ @ - 82 , 15 + 86 , 19 @ @ public class CallMasterActor extends AbsCallActor { < nl > } < nl > < nl > @ Override < nl > - public void onAnswered ( int uid , long deviceId ) { < nl > - Log . d ( " CallMasterActor " , " On Answered : " + uid + " , device : " + deviceId ) ; < nl > + public void onAnswered ( int uid , long deviceId , PeerSettings settings ) { < nl > peerCall . onTheirStarted ( deviceId ) ; < nl > + if ( ! selfSettings . isPreConnectionEnabled ( ) | | ! settings . isPreConnectionEnabled ( ) ) { < nl > + peerCall . onOfferNeeded ( deviceId ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > - public void onPeerConnected ( int uid , long deviceId ) { < nl > - Log . d ( " CallMasterActor " , " On Peer Connected : " + uid + " , device : " + deviceId ) ; < nl > - peerCall . onOfferNeeded ( deviceId ) ; < nl > + public void onAdvertised ( int uid , long deviceId , PeerSettings settings ) { < nl > + peerCall . onAdvertised ( deviceId , settings ) ; < nl > + if ( selfSettings . isPreConnectionEnabled ( ) & & settings . isPreConnectionEnabled ( ) ) { < nl > + peerCall . onOfferNeeded ( deviceId ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > index 4eebf2f . . d55ebf2 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > @ @ - 69 , 7 + 69 , 12 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb < nl > } < nl > < nl > @ Override < nl > - public void onAnswered ( int uid , long deviceId ) { < nl > + public void onAnswered ( int uid , long deviceId , PeerSettings settings ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onAdvertised ( int uid , long deviceId , PeerSettings settings ) { < nl > < nl > } < nl > < nl > @ @ - 156 , 11 + 161 , 21 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb < nl > } < nl > < nl > @ Override < nl > - public void onAnswered ( final int uid , final long deviceId ) { < nl > + public void onAnswered ( final int uid , final long deviceId , final PeerSettings settings ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onAnswered ( uid , deviceId , settings ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAdvertised ( final int uid , final long deviceId , final PeerSettings settings ) { < nl > self ( ) . send ( new Runnable ( ) { < nl > @ Override < nl > public void run ( ) { < nl > - AbsCallActor . this . onAnswered ( uid , deviceId ) ; < nl > + AbsCallActor . this . onAdvertised ( uid , deviceId , settings ) ; < nl > } < nl > } ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index 89814bd . . 95731d1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 4 , 6 + 4 , 7 @ @ import org . jetbrains . annotations . Nullable ; < nl > < nl > import java . io . IOException ; < nl > import java . util . HashMap ; < nl > + import java . util . HashSet ; < nl > < nl > import im . actor . core . api . ApiAdvertiseSelf ; < nl > import im . actor . core . api . ApiAnswer ; < nl > @ @ - 30 , 11 + 31 , 15 @ @ import im . actor . runtime . actors . ActorCreator ; < nl > import im . actor . runtime . actors . ActorRef ; < nl > import im . actor . runtime . webrtc . WebRTCMediaStream ; < nl > < nl > - public class CallBusActor extends EventBusActor { < nl > + public class CallBusActor extends EventBusActor implements PeerCallCallback { < nl > < nl > private static final int STASH = 1 ; < nl > < nl > private HashMap < Long , Integer > deviceIds = new HashMap < > ( ) ; < nl > + < nl > + private HashMap < Long , PeerSettings > peerSettings = new HashMap < > ( ) ; < nl > + private HashSet < Long > isAnswered = new HashSet < > ( ) ; < nl > + < nl > private final PeerSettings selfSettings ; < nl > private final PeerCallCallback peerCallback ; < nl > private final CallBusCallback callBusCallback ; < nl > @ @ - 49 , 37 + 54 , 7 @ @ public class CallBusActor extends EventBusActor { < nl > < nl > this . selfSettings = selfSettings ; < nl > this . callBusCallback = callBusCallback ; < nl > - this . peerCallback = new CallbackWrapper ( new PeerCallCallback ( ) { < nl > - @ Override < nl > - public void onOffer ( long deviceId , String sdp ) { < nl > - sendSignal ( deviceId , new ApiOffer ( 0 , sdp , CallBusActor . this . selfSettings . toApi ( ) ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onAnswer ( long deviceId , String sdp ) { < nl > - sendSignal ( deviceId , new ApiAnswer ( 0 , sdp ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) { < nl > - sendSignal ( deviceId , new ApiCandidate ( 0 , mdpIndex , id , sdp ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onPeerStateChanged ( long deviceId , PeerState state ) { < nl > - callBusCallback . onPeerStateChanged ( deviceIds . get ( deviceId ) , deviceId , state ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onStreamAdded ( long deviceId , WebRTCMediaStream stream ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) { < nl > - < nl > - } < nl > - } ) ; < nl > + this . peerCallback = new CallbackWrapper ( this ) ; < nl > } < nl > < nl > < nl > @ @ - 109 , 6 + 84 , 46 @ @ public class CallBusActor extends EventBusActor { < nl > callBusCallback . onBusStarted ( getBusId ( ) ) ; < nl > } < nl > < nl > + < nl > + / / < nl > + / / PeerCall callback < nl > + / / < nl > + < nl > + @ Override < nl > + public void onOffer ( long deviceId , String sdp ) { < nl > + sendSignal ( deviceId , new ApiOffer ( 0 , sdp , CallBusActor . this . selfSettings . toApi ( ) ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnswer ( long deviceId , String sdp ) { < nl > + sendSignal ( deviceId , new ApiAnswer ( 0 , sdp ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) { < nl > + sendSignal ( deviceId , new ApiCandidate ( 0 , mdpIndex , id , sdp ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onPeerStateChanged ( long deviceId , PeerState state ) { < nl > + callBusCallback . onPeerStateChanged ( deviceIds . get ( deviceId ) , deviceId , state ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onStreamAdded ( long deviceId , WebRTCMediaStream stream ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) { < nl > + < nl > + } < nl > + < nl > + < nl > + / / < nl > + / / Actions < nl > + / / < nl > + < nl > public void onAnswerCall ( ) { < nl > sendSignal ( masterUid , masterDeviceId , new ApiAnswerCall ( ) ) ; < nl > } < nl > @ @ - 117 , 6 + 132 , 11 @ @ public class CallBusActor extends EventBusActor { < nl > sendSignal ( masterUid , masterDeviceId , new ApiRejectCall ( ) ) ; < nl > } < nl > < nl > + < nl > + / / < nl > + / / Event Bus handler < nl > + / / < nl > + < nl > @ Override < nl > public void onDeviceConnected ( int uid , long deviceId ) { < nl > deviceIds . put ( deviceId , uid ) ; < nl > @ @ - 155 , 7 + 175 , 6 @ @ public class CallBusActor extends EventBusActor { < nl > ApiOffer offer = ( ApiOffer ) signal ; < nl > peerCall . onAdvertised ( senderDeviceId , new PeerSettings ( offer . getOwnPeerSettings ( ) ) ) ; < nl > peerCall . onOffer ( senderDeviceId , offer . getSdp ( ) ) ; < nl > - peerCall . onTheirStarted ( senderDeviceId ) ; < nl > } else if ( signal instanceof ApiCandidate ) { < nl > ApiCandidate candidate = ( ApiCandidate ) signal ; < nl > peerCall . onCandidate ( senderDeviceId , candidate . getIndex ( ) , candidate . getId ( ) , candidate . getSdp ( ) ) ; < nl > @ @ - 164 , 7 + 183 , 6 @ @ public class CallBusActor extends EventBusActor { < nl > deviceIds . put ( needOffer . getDevice ( ) , needOffer . getUid ( ) ) ; < nl > peerCall . onAdvertised ( needOffer . getDevice ( ) , new PeerSettings ( needOffer . getPeerSettings ( ) ) ) ; < nl > peerCall . onOfferNeeded ( needOffer . getDevice ( ) ) ; < nl > - peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; < nl > } else if ( signal instanceof ApiOnAnswer ) { < nl > ApiOnAnswer onAnswer = ( ApiOnAnswer ) signal ; < nl > deviceIds . put ( onAnswer . getDevice ( ) , onAnswer . getUid ( ) ) ; < nl > @ @ - 181 , 12 + 199 , 37 @ @ public class CallBusActor extends EventBusActor { < nl > masterUid = senderId ; < nl > masterDeviceId = senderDeviceId ; < nl > unstashAll ( STASH ) ; < nl > + < nl > + / / < nl > + / / Advertise own settings to master device < nl > + / / < nl > sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; < nl > + < nl > + / / < nl > + / / Automatically start master device < nl > + / / < nl > + peerCall . onTheirStarted ( masterDeviceId ) ; < nl > + < nl > } else if ( signal instanceof ApiAdvertiseSelf ) { < nl > ApiAdvertiseSelf advertiseSelf = ( ApiAdvertiseSelf ) signal ; < nl > - peerCall . onAdvertised ( senderDeviceId , new PeerSettings ( advertiseSelf . getPeerSettings ( ) ) ) ; < nl > + if ( peerSettings . containsKey ( senderDeviceId ) ) { < nl > + return ; < nl > + } < nl > + < nl > + PeerSettings settings = new PeerSettings ( advertiseSelf . getPeerSettings ( ) ) ; < nl > + peerSettings . put ( senderDeviceId , settings ) ; < nl > + peerCall . onAdvertised ( senderDeviceId , settings ) ; < nl > + if ( isAnswered . contains ( senderDeviceId ) ) { < nl > + callBusCallback . onAnswered ( senderId , senderDeviceId ) ; < nl > + } < nl > } else if ( signal instanceof ApiAnswerCall ) { < nl > - callBusCallback . onAnswered ( senderId , senderDeviceId ) ; < nl > + if ( isAnswered . contains ( senderDeviceId ) ) { < nl > + return ; < nl > + } < nl > + isAnswered . add ( senderDeviceId ) ; < nl > + if ( peerSettings . containsKey ( senderDeviceId ) ) { < nl > + callBusCallback . onAnswered ( senderId , senderDeviceId ) ; < nl > + } < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > index 7dc807a . . cc46c94 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > @ @ - 14 , 9 + 14 , 12 @ @ public interface CallBusCallback { < nl > < nl > void onMembersChanged ( List < ApiCallMember > members ) ; < nl > < nl > + < nl > void onPeerConnected ( int uid , long deviceId ) ; < nl > < nl > - void onPeerStateChanged ( int uid , long deviceId , PeerState state ) ; < nl > + void onAnswered ( int uid , long deviceId , PeerSettings settings ) ; < nl > < nl > - void onAnswered ( int uid , long deviceId ) ; < nl > + void onAdvertised ( int uid , long deviceId , PeerSettings settings ) ; < nl > + < nl > + void onPeerStateChanged ( int uid , long deviceId , PeerState state ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > index c2c125d . . ec0ac24 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java < nl > @ @ - 45 , 7 + 45 , 7 @ @ public class CallActor extends AbsCallActor { < nl > @ Override < nl > public void apply ( final ResponseGetCallInfo responseGetCallInfo ) { < nl > peer = convert ( responseGetCallInfo . getPeer ( ) ) ; < nl > - callBus . joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; < nl > + callBus . startSlaveBus ( responseGetCallInfo . getEventBusId ( ) ) ; < nl > callVM = callViewModels . spawnNewIncomingVM ( callId , peer , CallState . RINGING ) ; < nl > } < nl > } ) . failure ( new Consumer < Exception > ( ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index d3e21a6 . . 32a8436 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 73 , 8 + 73 , 7 @ @ public class CallManagerActor extends ModuleActor { < nl > system ( ) . actorOf ( " actor / master / " + RandomUtils . nextRid ( ) , new ActorCreator ( ) { < nl > @ Override < nl > public Actor create ( ) { < nl > - / / return new PeerCallMasterActor ( peer , callback , context ( ) ) ; < nl > - return null ; < nl > + return new CallMasterActor ( peer , context ( ) , callback ) ; < nl > } < nl > } ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java < nl > new file mode 100644 < nl > index 0000000 . . 5005b03 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java < nl > @ @ - 0 , 0 + 1 , 104 @ @ < nl > + package im . actor . core . modules . calls ; < nl > + < nl > + import java . util . HashSet ; < nl > + < nl > + import im . actor . core . api . rpc . RequestDoCall ; < nl > + import im . actor . core . api . rpc . ResponseDoCall ; < nl > + import im . actor . core . entity . GroupMember ; < nl > + import im . actor . core . entity . Peer ; < nl > + import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . modules . ModuleContext ; < nl > + import im . actor . core . modules . calls . peers . AbsCallActor ; < nl > + import im . actor . core . viewmodel . CallVM ; < nl > + import im . actor . core . viewmodel . CommandCallback ; < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . function . Consumer ; < nl > + < nl > + public class CallMasterActor extends AbsCallActor { < nl > + < nl > + private final Peer peer ; < nl > + private long callId ; < nl > + private CallVM callVM ; < nl > + private CommandCallback < Long > callback ; < nl > + < nl > + public CallMasterActor ( Peer peer , ModuleContext context , CommandCallback < Long > callback ) { < nl > + super ( context ) ; < nl > + this . peer = peer ; < nl > + this . callback = callback ; < nl > + } < nl > + < nl > + @ Override < nl > + public void callPreStart ( ) { < nl > + callBus . startMaster ( ) ; < nl > + peerCall . onOwnStarted ( ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onBusStarted ( String busId ) { < nl > + api ( new RequestDoCall ( buidOutPeer ( peer ) , busId ) ) . then ( new Consumer < ResponseDoCall > ( ) { < nl > + @ Override < nl > + public void apply ( ResponseDoCall responseDoCall ) { < nl > + < nl > + / / < nl > + / / Initialization of Call State < nl > + / / < nl > + / / TODO : Possible race conditions when members changed during call initiation < nl > + / / Need to return explicit callers in response < nl > + < nl > + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > + for ( GroupMember gm : getGroup ( peer . getPeerId ( ) ) . getMembers ( ) ) { < nl > + if ( gm . getUid ( ) ! = myUid ( ) ) { < nl > + / / state . addMember ( gm . getUid ( ) , MasterCallMemberState . RINGING ) ; < nl > + } < nl > + } < nl > + } else if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > + / / state . addMember ( peer . getPeerId ( ) , MasterCallMemberState . RINGING ) ; < nl > + } else { < nl > + throw new RuntimeException ( " Unsupported Peer Type group " ) ; < nl > + } < nl > + < nl > + / / < nl > + / / Initialization of CallVM < nl > + / / < nl > + callId = responseDoCall . getCallId ( ) ; < nl > + callVM = callViewModels . spawnNewOutgoingVM ( responseDoCall . getCallId ( ) , peer ) ; < nl > + / / callVM . getIsMuted ( ) . change ( isMuted ( ) ) ; < nl > + < nl > + / / < nl > + / / Notifying about successful call creation < nl > + / / < nl > + callManager . send ( new CallManagerActor . DoCallComplete ( responseDoCall . getCallId ( ) ) , self ( ) ) ; < nl > + callback . onResult ( responseDoCall . getCallId ( ) ) ; < nl > + callback = null ; < nl > + } < nl > + } ) . failure ( new Consumer < Exception > ( ) { < nl > + @ Override < nl > + public void apply ( Exception e ) { < nl > + callback . onError ( e ) ; < nl > + callback = null ; < nl > + dispose ( ) ; < nl > + } < nl > + } ) . done ( self ( ) ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnswered ( int uid , long deviceId ) { < nl > + Log . d ( " CallMasterActor " , " On Answered : " + uid + " , device : " + deviceId ) ; < nl > + peerCall . onTheirStarted ( deviceId ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onPeerConnected ( int uid , long deviceId ) { < nl > + Log . d ( " CallMasterActor " , " On Peer Connected : " + uid + " , device : " + deviceId ) ; < nl > + peerCall . onOfferNeeded ( deviceId ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void postStop ( ) { < nl > + super . postStop ( ) ; < nl > + if ( callback ! = null ) { < nl > + callback . onError ( new RuntimeException ( ) ) ; < nl > + callback = null ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > index 7817cec . . 4eebf2f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java < nl > @ @ - 63 , 6 + 63 , 16 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb < nl > < nl > } < nl > < nl > + @ Override < nl > + public void onPeerConnected ( int uid , long deviceId ) { < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void onAnswered ( int uid , long deviceId ) { < nl > + < nl > + } < nl > + < nl > public void onMuteChanged ( boolean isMuted ) { < nl > peerCall . onMuteChanged ( isMuted ) ; < nl > } < nl > @ @ - 126 , 6 + 136 , 16 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb < nl > } < nl > < nl > @ Override < nl > + public void onPeerConnected ( final int uid , final long deviceId ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onPeerConnected ( uid , deviceId ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > + @ Override < nl > public void onPeerStateChanged ( final int uid , final long deviceId , final PeerState state ) { < nl > self ( ) . send ( new Runnable ( ) { < nl > @ Override < nl > @ @ - 134 , 5 + 154 , 15 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb < nl > } < nl > } ) ; < nl > } < nl > + < nl > + @ Override < nl > + public void onAnswered ( final int uid , final long deviceId ) { < nl > + self ( ) . send ( new Runnable ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + AbsCallActor . this . onAnswered ( uid , deviceId ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > index 6ebd1c4 . . 89814bd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import im . actor . core . api . ApiAnswer ; < nl > import im . actor . core . api . ApiAnswerCall ; < nl > import im . actor . core . api . ApiCandidate ; < nl > import im . actor . core . api . ApiMembersChanged ; < nl > + import im . actor . core . api . ApiNeedDisconnect ; < nl > import im . actor . core . api . ApiNeedOffer ; < nl > import im . actor . core . api . ApiOffer ; < nl > import im . actor . core . api . ApiOnAnswer ; < nl > @ @ - 37 , 6 + 38 , 7 @ @ public class CallBusActor extends EventBusActor { < nl > private final PeerSettings selfSettings ; < nl > private final PeerCallCallback peerCallback ; < nl > private final CallBusCallback callBusCallback ; < nl > + private boolean isMasterMode ; < nl > private boolean isMasterReady ; < nl > private int masterUid ; < nl > private long masterDeviceId ; < nl > @ @ - 96 , 6 + 98 , 11 @ @ public class CallBusActor extends EventBusActor { < nl > callBusCallback . onBusCreated ( peerCall ) ; < nl > } < nl > < nl > + public void createMasterBus ( ) { < nl > + isMasterMode = true ; < nl > + createBus ( ) ; < nl > + } < nl > + < nl > @ Override < nl > public void onBusStarted ( ) { < nl > super . onBusStarted ( ) ; < nl > @ @ - 111 , 6 + 118 , 20 @ @ public class CallBusActor extends EventBusActor { < nl > } < nl > < nl > @ Override < nl > + public void onDeviceConnected ( int uid , long deviceId ) { < nl > + deviceIds . put ( deviceId , uid ) ; < nl > + if ( isMasterMode ) { < nl > + sendSignal ( uid , deviceId , new ApiSwitchMaster ( ) ) ; < nl > + } < nl > + callBusCallback . onPeerConnected ( uid , deviceId ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onDeviceDisconnected ( int uid , long deviceId ) { < nl > + peerCall . disposePeer ( deviceId ) ; < nl > + } < nl > + < nl > + @ Override < nl > public final void onMessageReceived ( @ Nullable Integer senderId , @ Nullable Long senderDeviceId , byte [ ] data ) { < nl > if ( senderId = = null | | senderDeviceId = = null ) { < nl > return ; < nl > @ @ - 144 , 15 + 165 , 16 @ @ public class CallBusActor extends EventBusActor { < nl > peerCall . onAdvertised ( needOffer . getDevice ( ) , new PeerSettings ( needOffer . getPeerSettings ( ) ) ) ; < nl > peerCall . onOfferNeeded ( needOffer . getDevice ( ) ) ; < nl > peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; < nl > - / / if ( needOffer . isSilent ( ) ! = null & & ! needOffer . isSilent ( ) ) { < nl > - / / peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; < nl > - / / } < nl > } else if ( signal instanceof ApiOnAnswer ) { < nl > ApiOnAnswer onAnswer = ( ApiOnAnswer ) signal ; < nl > deviceIds . put ( onAnswer . getDevice ( ) , onAnswer . getUid ( ) ) ; < nl > peerCall . onTheirStarted ( onAnswer . getDevice ( ) ) ; < nl > + } else if ( signal instanceof ApiNeedDisconnect ) { < nl > + ApiNeedDisconnect disconnect = ( ApiNeedDisconnect ) signal ; < nl > + deviceIds . put ( disconnect . getDevice ( ) , disconnect . getUid ( ) ) ; < nl > + peerCall . disposePeer ( disconnect . getDevice ( ) ) ; < nl > } else if ( signal instanceof ApiSwitchMaster ) { < nl > - if ( isMasterReady ) { < nl > + if ( isMasterReady | | isMasterMode ) { < nl > return ; < nl > } < nl > isMasterReady = true ; < nl > @ @ - 160 , 18 + 182 , 11 @ @ public class CallBusActor extends EventBusActor { < nl > masterDeviceId = senderDeviceId ; < nl > unstashAll ( STASH ) ; < nl > sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; < nl > - } else { < nl > - / / if ( callBusCallback instanceof CallBusCallbackSlave ) { < nl > - / / CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; < nl > - / / if ( signal instanceof ApiSwitchMaster ) { < nl > - / / slaveCallback . onMasterSwitched ( senderId , senderDeviceId ) ; < nl > - / / } else if ( signal instanceof ApiMembersChanged ) { < nl > - / / ApiMembersChanged membersChanged = ( ApiMembersChanged ) signal ; < nl > - / / slaveCallback . onMembersChanged ( membersChanged . getAllMembers ( ) ) ; < nl > - / / } < nl > - / / } else { < nl > - / / / / Nothing ? < nl > - / / } < nl > + } else if ( signal instanceof ApiAdvertiseSelf ) { < nl > + ApiAdvertiseSelf advertiseSelf = ( ApiAdvertiseSelf ) signal ; < nl > + peerCall . onAdvertised ( senderDeviceId , new PeerSettings ( advertiseSelf . getPeerSettings ( ) ) ) ; < nl > + } else if ( signal instanceof ApiAnswerCall ) { < nl > + callBusCallback . onAnswered ( senderId , senderDeviceId ) ; < nl > } < nl > } < nl > < nl > @ @ - 193 , 17 + 208 , 23 @ @ public class CallBusActor extends EventBusActor { < nl > if ( message instanceof JoinBus ) { < nl > joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; < nl > } else if ( message instanceof CreateBus ) { < nl > - createBus ( ) ; < nl > + createMasterBus ( ) ; < nl > } else if ( message instanceof SendSignal ) { < nl > SendSignal signal = ( SendSignal ) message ; < nl > sendSignal ( signal . getUid ( ) , signal . getDeviceId ( ) , signal . getSignal ( ) ) ; < nl > } else if ( message instanceof AnswerCall ) { < nl > + if ( isMasterMode ) { < nl > + return ; < nl > + } < nl > if ( ! isMasterReady ) { < nl > stash ( STASH ) ; < nl > return ; < nl > } < nl > onAnswerCall ( ) ; < nl > } else if ( message instanceof RejectCall ) { < nl > + if ( isMasterMode ) { < nl > + return ; < nl > + } < nl > if ( ! isMasterReady ) { < nl > stash ( STASH ) ; < nl > return ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > index 8d21384 . . 7dc807a 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java < nl > @ @ - 14 , 5 + 14 , 9 @ @ public interface CallBusCallback { < nl > < nl > void onMembersChanged ( List < ApiCallMember > members ) ; < nl > < nl > + void onPeerConnected ( int uid , long deviceId ) ; < nl > + < nl > void onPeerStateChanged ( int uid , long deviceId , PeerState state ) ; < nl > + < nl > + void onAnswered ( int uid , long deviceId ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java < nl > index 71314b3 . . 3ca058b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java < nl > @ @ - 10 , 11 + 10 , 11 @ @ public class CallBusInt extends ActorInterface { < nl > super ( dest ) ; < nl > } < nl > < nl > - public void joinBus ( String busId ) { < nl > + public void startSlaveBus ( String busId ) { < nl > send ( new CallBusActor . JoinBus ( busId ) ) ; < nl > } < nl > < nl > - public void createBus ( ) { < nl > + public void startMaster ( ) { < nl > send ( new CallBusActor . CreateBus ( ) ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java 
 index 5005b03 . . 054f48d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . core . modules . calls ; 
 
 + import java . util . HashMap ; 
 import java . util . HashSet ; 
 
 import im . actor . core . api . rpc . RequestDoCall ; 
 @ @ - 9 , 6 + 10 , 7 @ @ import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . calls . peers . AbsCallActor ; 
 + import im . actor . core . modules . calls . peers . PeerSettings ; 
 import im . actor . core . viewmodel . CallVM ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 import im . actor . runtime . Log ; 
 @ @ - 20 , 6 + 22 , 8 @ @ public class CallMasterActor extends AbsCallActor { 
 private long callId ; 
 private CallVM callVM ; 
 private CommandCallback < Long > callback ; 
 + private HashMap < Long , PeerSettings > peerSettings = new HashMap < > ( ) ; 
 + private HashSet < Long > isAnswered = new HashSet < > ( ) ; 
 
 public CallMasterActor ( Peer peer , ModuleContext context , CommandCallback < Long > callback ) { 
 super ( context ) ; 
 @ @ - 82 , 15 + 86 , 19 @ @ public class CallMasterActor extends AbsCallActor { 
 } 
 
 @ Override 
 - public void onAnswered ( int uid , long deviceId ) { 
 - Log . d ( " CallMasterActor " , " On Answered : " + uid + " , device : " + deviceId ) ; 
 + public void onAnswered ( int uid , long deviceId , PeerSettings settings ) { 
 peerCall . onTheirStarted ( deviceId ) ; 
 + if ( ! selfSettings . isPreConnectionEnabled ( ) | | ! settings . isPreConnectionEnabled ( ) ) { 
 + peerCall . onOfferNeeded ( deviceId ) ; 
 + } 
 } 
 
 @ Override 
 - public void onPeerConnected ( int uid , long deviceId ) { 
 - Log . d ( " CallMasterActor " , " On Peer Connected : " + uid + " , device : " + deviceId ) ; 
 - peerCall . onOfferNeeded ( deviceId ) ; 
 + public void onAdvertised ( int uid , long deviceId , PeerSettings settings ) { 
 + peerCall . onAdvertised ( deviceId , settings ) ; 
 + if ( selfSettings . isPreConnectionEnabled ( ) & & settings . isPreConnectionEnabled ( ) ) { 
 + peerCall . onOfferNeeded ( deviceId ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 index 4eebf2f . . d55ebf2 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 @ @ - 69 , 7 + 69 , 12 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb 
 } 
 
 @ Override 
 - public void onAnswered ( int uid , long deviceId ) { 
 + public void onAnswered ( int uid , long deviceId , PeerSettings settings ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onAdvertised ( int uid , long deviceId , PeerSettings settings ) { 
 
 } 
 
 @ @ - 156 , 11 + 161 , 21 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb 
 } 
 
 @ Override 
 - public void onAnswered ( final int uid , final long deviceId ) { 
 + public void onAnswered ( final int uid , final long deviceId , final PeerSettings settings ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onAnswered ( uid , deviceId , settings ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 + public void onAdvertised ( final int uid , final long deviceId , final PeerSettings settings ) { 
 self ( ) . send ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - AbsCallActor . this . onAnswered ( uid , deviceId ) ; 
 + AbsCallActor . this . onAdvertised ( uid , deviceId , settings ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index 89814bd . . 95731d1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import org . jetbrains . annotations . Nullable ; 
 
 import java . io . IOException ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 
 import im . actor . core . api . ApiAdvertiseSelf ; 
 import im . actor . core . api . ApiAnswer ; 
 @ @ - 30 , 11 + 31 , 15 @ @ import im . actor . runtime . actors . ActorCreator ; 
 import im . actor . runtime . actors . ActorRef ; 
 import im . actor . runtime . webrtc . WebRTCMediaStream ; 
 
 - public class CallBusActor extends EventBusActor { 
 + public class CallBusActor extends EventBusActor implements PeerCallCallback { 
 
 private static final int STASH = 1 ; 
 
 private HashMap < Long , Integer > deviceIds = new HashMap < > ( ) ; 
 + 
 + private HashMap < Long , PeerSettings > peerSettings = new HashMap < > ( ) ; 
 + private HashSet < Long > isAnswered = new HashSet < > ( ) ; 
 + 
 private final PeerSettings selfSettings ; 
 private final PeerCallCallback peerCallback ; 
 private final CallBusCallback callBusCallback ; 
 @ @ - 49 , 37 + 54 , 7 @ @ public class CallBusActor extends EventBusActor { 
 
 this . selfSettings = selfSettings ; 
 this . callBusCallback = callBusCallback ; 
 - this . peerCallback = new CallbackWrapper ( new PeerCallCallback ( ) { 
 - @ Override 
 - public void onOffer ( long deviceId , String sdp ) { 
 - sendSignal ( deviceId , new ApiOffer ( 0 , sdp , CallBusActor . this . selfSettings . toApi ( ) ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onAnswer ( long deviceId , String sdp ) { 
 - sendSignal ( deviceId , new ApiAnswer ( 0 , sdp ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) { 
 - sendSignal ( deviceId , new ApiCandidate ( 0 , mdpIndex , id , sdp ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onPeerStateChanged ( long deviceId , PeerState state ) { 
 - callBusCallback . onPeerStateChanged ( deviceIds . get ( deviceId ) , deviceId , state ) ; 
 - } 
 - 
 - @ Override 
 - public void onStreamAdded ( long deviceId , WebRTCMediaStream stream ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) { 
 - 
 - } 
 - } ) ; 
 + this . peerCallback = new CallbackWrapper ( this ) ; 
 } 
 
 
 @ @ - 109 , 6 + 84 , 46 @ @ public class CallBusActor extends EventBusActor { 
 callBusCallback . onBusStarted ( getBusId ( ) ) ; 
 } 
 
 + 
 + / / 
 + / / PeerCall callback 
 + / / 
 + 
 + @ Override 
 + public void onOffer ( long deviceId , String sdp ) { 
 + sendSignal ( deviceId , new ApiOffer ( 0 , sdp , CallBusActor . this . selfSettings . toApi ( ) ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onAnswer ( long deviceId , String sdp ) { 
 + sendSignal ( deviceId , new ApiAnswer ( 0 , sdp ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onCandidate ( long deviceId , int mdpIndex , String id , String sdp ) { 
 + sendSignal ( deviceId , new ApiCandidate ( 0 , mdpIndex , id , sdp ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onPeerStateChanged ( long deviceId , PeerState state ) { 
 + callBusCallback . onPeerStateChanged ( deviceIds . get ( deviceId ) , deviceId , state ) ; 
 + } 
 + 
 + @ Override 
 + public void onStreamAdded ( long deviceId , WebRTCMediaStream stream ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onStreamRemoved ( long deviceId , WebRTCMediaStream stream ) { 
 + 
 + } 
 + 
 + 
 + / / 
 + / / Actions 
 + / / 
 + 
 public void onAnswerCall ( ) { 
 sendSignal ( masterUid , masterDeviceId , new ApiAnswerCall ( ) ) ; 
 } 
 @ @ - 117 , 6 + 132 , 11 @ @ public class CallBusActor extends EventBusActor { 
 sendSignal ( masterUid , masterDeviceId , new ApiRejectCall ( ) ) ; 
 } 
 
 + 
 + / / 
 + / / Event Bus handler 
 + / / 
 + 
 @ Override 
 public void onDeviceConnected ( int uid , long deviceId ) { 
 deviceIds . put ( deviceId , uid ) ; 
 @ @ - 155 , 7 + 175 , 6 @ @ public class CallBusActor extends EventBusActor { 
 ApiOffer offer = ( ApiOffer ) signal ; 
 peerCall . onAdvertised ( senderDeviceId , new PeerSettings ( offer . getOwnPeerSettings ( ) ) ) ; 
 peerCall . onOffer ( senderDeviceId , offer . getSdp ( ) ) ; 
 - peerCall . onTheirStarted ( senderDeviceId ) ; 
 } else if ( signal instanceof ApiCandidate ) { 
 ApiCandidate candidate = ( ApiCandidate ) signal ; 
 peerCall . onCandidate ( senderDeviceId , candidate . getIndex ( ) , candidate . getId ( ) , candidate . getSdp ( ) ) ; 
 @ @ - 164 , 7 + 183 , 6 @ @ public class CallBusActor extends EventBusActor { 
 deviceIds . put ( needOffer . getDevice ( ) , needOffer . getUid ( ) ) ; 
 peerCall . onAdvertised ( needOffer . getDevice ( ) , new PeerSettings ( needOffer . getPeerSettings ( ) ) ) ; 
 peerCall . onOfferNeeded ( needOffer . getDevice ( ) ) ; 
 - peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; 
 } else if ( signal instanceof ApiOnAnswer ) { 
 ApiOnAnswer onAnswer = ( ApiOnAnswer ) signal ; 
 deviceIds . put ( onAnswer . getDevice ( ) , onAnswer . getUid ( ) ) ; 
 @ @ - 181 , 12 + 199 , 37 @ @ public class CallBusActor extends EventBusActor { 
 masterUid = senderId ; 
 masterDeviceId = senderDeviceId ; 
 unstashAll ( STASH ) ; 
 + 
 + / / 
 + / / Advertise own settings to master device 
 + / / 
 sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; 
 + 
 + / / 
 + / / Automatically start master device 
 + / / 
 + peerCall . onTheirStarted ( masterDeviceId ) ; 
 + 
 } else if ( signal instanceof ApiAdvertiseSelf ) { 
 ApiAdvertiseSelf advertiseSelf = ( ApiAdvertiseSelf ) signal ; 
 - peerCall . onAdvertised ( senderDeviceId , new PeerSettings ( advertiseSelf . getPeerSettings ( ) ) ) ; 
 + if ( peerSettings . containsKey ( senderDeviceId ) ) { 
 + return ; 
 + } 
 + 
 + PeerSettings settings = new PeerSettings ( advertiseSelf . getPeerSettings ( ) ) ; 
 + peerSettings . put ( senderDeviceId , settings ) ; 
 + peerCall . onAdvertised ( senderDeviceId , settings ) ; 
 + if ( isAnswered . contains ( senderDeviceId ) ) { 
 + callBusCallback . onAnswered ( senderId , senderDeviceId ) ; 
 + } 
 } else if ( signal instanceof ApiAnswerCall ) { 
 - callBusCallback . onAnswered ( senderId , senderDeviceId ) ; 
 + if ( isAnswered . contains ( senderDeviceId ) ) { 
 + return ; 
 + } 
 + isAnswered . add ( senderDeviceId ) ; 
 + if ( peerSettings . containsKey ( senderDeviceId ) ) { 
 + callBusCallback . onAnswered ( senderId , senderDeviceId ) ; 
 + } 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 index 7dc807a . . cc46c94 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 @ @ - 14 , 9 + 14 , 12 @ @ public interface CallBusCallback { 
 
 void onMembersChanged ( List < ApiCallMember > members ) ; 
 
 + 
 void onPeerConnected ( int uid , long deviceId ) ; 
 
 - void onPeerStateChanged ( int uid , long deviceId , PeerState state ) ; 
 + void onAnswered ( int uid , long deviceId , PeerSettings settings ) ; 
 
 - void onAnswered ( int uid , long deviceId ) ; 
 + void onAdvertised ( int uid , long deviceId , PeerSettings settings ) ; 
 + 
 + void onPeerStateChanged ( int uid , long deviceId , PeerState state ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 index c2c125d . . ec0ac24 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallActor . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class CallActor extends AbsCallActor { 
 @ Override 
 public void apply ( final ResponseGetCallInfo responseGetCallInfo ) { 
 peer = convert ( responseGetCallInfo . getPeer ( ) ) ; 
 - callBus . joinBus ( responseGetCallInfo . getEventBusId ( ) ) ; 
 + callBus . startSlaveBus ( responseGetCallInfo . getEventBusId ( ) ) ; 
 callVM = callViewModels . spawnNewIncomingVM ( callId , peer , CallState . RINGING ) ; 
 } 
 } ) . failure ( new Consumer < Exception > ( ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index d3e21a6 . . 32a8436 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 73 , 8 + 73 , 7 @ @ public class CallManagerActor extends ModuleActor { 
 system ( ) . actorOf ( " actor / master / " + RandomUtils . nextRid ( ) , new ActorCreator ( ) { 
 @ Override 
 public Actor create ( ) { 
 - / / return new PeerCallMasterActor ( peer , callback , context ( ) ) ; 
 - return null ; 
 + return new CallMasterActor ( peer , context ( ) , callback ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java 
 new file mode 100644 
 index 0000000 . . 5005b03 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallMasterActor . java 
 @ @ - 0 , 0 + 1 , 104 @ @ 
 + package im . actor . core . modules . calls ; 
 + 
 + import java . util . HashSet ; 
 + 
 + import im . actor . core . api . rpc . RequestDoCall ; 
 + import im . actor . core . api . rpc . ResponseDoCall ; 
 + import im . actor . core . entity . GroupMember ; 
 + import im . actor . core . entity . Peer ; 
 + import im . actor . core . entity . PeerType ; 
 + import im . actor . core . modules . ModuleContext ; 
 + import im . actor . core . modules . calls . peers . AbsCallActor ; 
 + import im . actor . core . viewmodel . CallVM ; 
 + import im . actor . core . viewmodel . CommandCallback ; 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . function . Consumer ; 
 + 
 + public class CallMasterActor extends AbsCallActor { 
 + 
 + private final Peer peer ; 
 + private long callId ; 
 + private CallVM callVM ; 
 + private CommandCallback < Long > callback ; 
 + 
 + public CallMasterActor ( Peer peer , ModuleContext context , CommandCallback < Long > callback ) { 
 + super ( context ) ; 
 + this . peer = peer ; 
 + this . callback = callback ; 
 + } 
 + 
 + @ Override 
 + public void callPreStart ( ) { 
 + callBus . startMaster ( ) ; 
 + peerCall . onOwnStarted ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onBusStarted ( String busId ) { 
 + api ( new RequestDoCall ( buidOutPeer ( peer ) , busId ) ) . then ( new Consumer < ResponseDoCall > ( ) { 
 + @ Override 
 + public void apply ( ResponseDoCall responseDoCall ) { 
 + 
 + / / 
 + / / Initialization of Call State 
 + / / 
 + / / TODO : Possible race conditions when members changed during call initiation 
 + / / Need to return explicit callers in response 
 + 
 + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 + for ( GroupMember gm : getGroup ( peer . getPeerId ( ) ) . getMembers ( ) ) { 
 + if ( gm . getUid ( ) ! = myUid ( ) ) { 
 + / / state . addMember ( gm . getUid ( ) , MasterCallMemberState . RINGING ) ; 
 + } 
 + } 
 + } else if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 + / / state . addMember ( peer . getPeerId ( ) , MasterCallMemberState . RINGING ) ; 
 + } else { 
 + throw new RuntimeException ( " Unsupported Peer Type group " ) ; 
 + } 
 + 
 + / / 
 + / / Initialization of CallVM 
 + / / 
 + callId = responseDoCall . getCallId ( ) ; 
 + callVM = callViewModels . spawnNewOutgoingVM ( responseDoCall . getCallId ( ) , peer ) ; 
 + / / callVM . getIsMuted ( ) . change ( isMuted ( ) ) ; 
 + 
 + / / 
 + / / Notifying about successful call creation 
 + / / 
 + callManager . send ( new CallManagerActor . DoCallComplete ( responseDoCall . getCallId ( ) ) , self ( ) ) ; 
 + callback . onResult ( responseDoCall . getCallId ( ) ) ; 
 + callback = null ; 
 + } 
 + } ) . failure ( new Consumer < Exception > ( ) { 
 + @ Override 
 + public void apply ( Exception e ) { 
 + callback . onError ( e ) ; 
 + callback = null ; 
 + dispose ( ) ; 
 + } 
 + } ) . done ( self ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onAnswered ( int uid , long deviceId ) { 
 + Log . d ( " CallMasterActor " , " On Answered : " + uid + " , device : " + deviceId ) ; 
 + peerCall . onTheirStarted ( deviceId ) ; 
 + } 
 + 
 + @ Override 
 + public void onPeerConnected ( int uid , long deviceId ) { 
 + Log . d ( " CallMasterActor " , " On Peer Connected : " + uid + " , device : " + deviceId ) ; 
 + peerCall . onOfferNeeded ( deviceId ) ; 
 + } 
 + 
 + @ Override 
 + public void postStop ( ) { 
 + super . postStop ( ) ; 
 + if ( callback ! = null ) { 
 + callback . onError ( new RuntimeException ( ) ) ; 
 + callback = null ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 index 7817cec . . 4eebf2f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / AbsCallActor . java 
 @ @ - 63 , 6 + 63 , 16 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb 
 
 } 
 
 + @ Override 
 + public void onPeerConnected ( int uid , long deviceId ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onAnswered ( int uid , long deviceId ) { 
 + 
 + } 
 + 
 public void onMuteChanged ( boolean isMuted ) { 
 peerCall . onMuteChanged ( isMuted ) ; 
 } 
 @ @ - 126 , 6 + 136 , 16 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb 
 } 
 
 @ Override 
 + public void onPeerConnected ( final int uid , final long deviceId ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onPeerConnected ( uid , deviceId ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Override 
 public void onPeerStateChanged ( final int uid , final long deviceId , final PeerState state ) { 
 self ( ) . send ( new Runnable ( ) { 
 @ Override 
 @ @ - 134 , 5 + 154 , 15 @ @ public abstract class AbsCallActor extends EventBusActor implements CallBusCallb 
 } 
 } ) ; 
 } 
 + 
 + @ Override 
 + public void onAnswered ( final int uid , final long deviceId ) { 
 + self ( ) . send ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + AbsCallActor . this . onAnswered ( uid , deviceId ) ; 
 + } 
 + } ) ; 
 + } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 index 6ebd1c4 . . 89814bd 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusActor . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import im . actor . core . api . ApiAnswer ; 
 import im . actor . core . api . ApiAnswerCall ; 
 import im . actor . core . api . ApiCandidate ; 
 import im . actor . core . api . ApiMembersChanged ; 
 + import im . actor . core . api . ApiNeedDisconnect ; 
 import im . actor . core . api . ApiNeedOffer ; 
 import im . actor . core . api . ApiOffer ; 
 import im . actor . core . api . ApiOnAnswer ; 
 @ @ - 37 , 6 + 38 , 7 @ @ public class CallBusActor extends EventBusActor { 
 private final PeerSettings selfSettings ; 
 private final PeerCallCallback peerCallback ; 
 private final CallBusCallback callBusCallback ; 
 + private boolean isMasterMode ; 
 private boolean isMasterReady ; 
 private int masterUid ; 
 private long masterDeviceId ; 
 @ @ - 96 , 6 + 98 , 11 @ @ public class CallBusActor extends EventBusActor { 
 callBusCallback . onBusCreated ( peerCall ) ; 
 } 
 
 + public void createMasterBus ( ) { 
 + isMasterMode = true ; 
 + createBus ( ) ; 
 + } 
 + 
 @ Override 
 public void onBusStarted ( ) { 
 super . onBusStarted ( ) ; 
 @ @ - 111 , 6 + 118 , 20 @ @ public class CallBusActor extends EventBusActor { 
 } 
 
 @ Override 
 + public void onDeviceConnected ( int uid , long deviceId ) { 
 + deviceIds . put ( deviceId , uid ) ; 
 + if ( isMasterMode ) { 
 + sendSignal ( uid , deviceId , new ApiSwitchMaster ( ) ) ; 
 + } 
 + callBusCallback . onPeerConnected ( uid , deviceId ) ; 
 + } 
 + 
 + @ Override 
 + public void onDeviceDisconnected ( int uid , long deviceId ) { 
 + peerCall . disposePeer ( deviceId ) ; 
 + } 
 + 
 + @ Override 
 public final void onMessageReceived ( @ Nullable Integer senderId , @ Nullable Long senderDeviceId , byte [ ] data ) { 
 if ( senderId = = null | | senderDeviceId = = null ) { 
 return ; 
 @ @ - 144 , 15 + 165 , 16 @ @ public class CallBusActor extends EventBusActor { 
 peerCall . onAdvertised ( needOffer . getDevice ( ) , new PeerSettings ( needOffer . getPeerSettings ( ) ) ) ; 
 peerCall . onOfferNeeded ( needOffer . getDevice ( ) ) ; 
 peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; 
 - / / if ( needOffer . isSilent ( ) ! = null & & ! needOffer . isSilent ( ) ) { 
 - / / peerCall . onTheirStarted ( needOffer . getDevice ( ) ) ; 
 - / / } 
 } else if ( signal instanceof ApiOnAnswer ) { 
 ApiOnAnswer onAnswer = ( ApiOnAnswer ) signal ; 
 deviceIds . put ( onAnswer . getDevice ( ) , onAnswer . getUid ( ) ) ; 
 peerCall . onTheirStarted ( onAnswer . getDevice ( ) ) ; 
 + } else if ( signal instanceof ApiNeedDisconnect ) { 
 + ApiNeedDisconnect disconnect = ( ApiNeedDisconnect ) signal ; 
 + deviceIds . put ( disconnect . getDevice ( ) , disconnect . getUid ( ) ) ; 
 + peerCall . disposePeer ( disconnect . getDevice ( ) ) ; 
 } else if ( signal instanceof ApiSwitchMaster ) { 
 - if ( isMasterReady ) { 
 + if ( isMasterReady | | isMasterMode ) { 
 return ; 
 } 
 isMasterReady = true ; 
 @ @ - 160 , 18 + 182 , 11 @ @ public class CallBusActor extends EventBusActor { 
 masterDeviceId = senderDeviceId ; 
 unstashAll ( STASH ) ; 
 sendSignal ( masterUid , masterDeviceId , new ApiAdvertiseSelf ( selfSettings . toApi ( ) ) ) ; 
 - } else { 
 - / / if ( callBusCallback instanceof CallBusCallbackSlave ) { 
 - / / CallBusCallbackSlave slaveCallback = ( CallBusCallbackSlave ) callBusCallback ; 
 - / / if ( signal instanceof ApiSwitchMaster ) { 
 - / / slaveCallback . onMasterSwitched ( senderId , senderDeviceId ) ; 
 - / / } else if ( signal instanceof ApiMembersChanged ) { 
 - / / ApiMembersChanged membersChanged = ( ApiMembersChanged ) signal ; 
 - / / slaveCallback . onMembersChanged ( membersChanged . getAllMembers ( ) ) ; 
 - / / } 
 - / / } else { 
 - / / / / Nothing ? 
 - / / } 
 + } else if ( signal instanceof ApiAdvertiseSelf ) { 
 + ApiAdvertiseSelf advertiseSelf = ( ApiAdvertiseSelf ) signal ; 
 + peerCall . onAdvertised ( senderDeviceId , new PeerSettings ( advertiseSelf . getPeerSettings ( ) ) ) ; 
 + } else if ( signal instanceof ApiAnswerCall ) { 
 + callBusCallback . onAnswered ( senderId , senderDeviceId ) ; 
 } 
 } 
 
 @ @ - 193 , 17 + 208 , 23 @ @ public class CallBusActor extends EventBusActor { 
 if ( message instanceof JoinBus ) { 
 joinBus ( ( ( JoinBus ) message ) . getBusId ( ) ) ; 
 } else if ( message instanceof CreateBus ) { 
 - createBus ( ) ; 
 + createMasterBus ( ) ; 
 } else if ( message instanceof SendSignal ) { 
 SendSignal signal = ( SendSignal ) message ; 
 sendSignal ( signal . getUid ( ) , signal . getDeviceId ( ) , signal . getSignal ( ) ) ; 
 } else if ( message instanceof AnswerCall ) { 
 + if ( isMasterMode ) { 
 + return ; 
 + } 
 if ( ! isMasterReady ) { 
 stash ( STASH ) ; 
 return ; 
 } 
 onAnswerCall ( ) ; 
 } else if ( message instanceof RejectCall ) { 
 + if ( isMasterMode ) { 
 + return ; 
 + } 
 if ( ! isMasterReady ) { 
 stash ( STASH ) ; 
 return ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 index 8d21384 . . 7dc807a 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusCallback . java 
 @ @ - 14 , 5 + 14 , 9 @ @ public interface CallBusCallback { 
 
 void onMembersChanged ( List < ApiCallMember > members ) ; 
 
 + void onPeerConnected ( int uid , long deviceId ) ; 
 + 
 void onPeerStateChanged ( int uid , long deviceId , PeerState state ) ; 
 + 
 + void onAnswered ( int uid , long deviceId ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java 
 index 71314b3 . . 3ca058b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / CallBusInt . java 
 @ @ - 10 , 11 + 10 , 11 @ @ public class CallBusInt extends ActorInterface { 
 super ( dest ) ; 
 } 
 
 - public void joinBus ( String busId ) { 
 + public void startSlaveBus ( String busId ) { 
 send ( new CallBusActor . JoinBus ( busId ) ) ; 
 } 
 
 - public void createBus ( ) { 
 + public void startMaster ( ) { 
 send ( new CallBusActor . CreateBus ( ) ) ; 
 }
