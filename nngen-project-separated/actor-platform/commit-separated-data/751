BLEU SCORE: 0.35084396956386854

TEST MSG: feat ( iOS ) : Adding receiving activation code via call
GENERATED MSG: feat ( iOS ) : Implemented contact sharing

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index 4ba9550 . . 16b016a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 489 , 6 + 489 , 8 @ @ < nl > < nl > " AuthOTPNoCode " = " Haven ' t received code ? " ; < nl > < nl > + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; < nl > + < nl > < nl > / * < nl > * Common Elements < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > index 1f9d31f . . cfe8436 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings < nl > @ @ - 481 , 6 + 481 , 8 @ @ < nl > < nl > " AuthOTPNoCode " = " Haven ' t received code ? " ; < nl > < nl > + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > index 2d03a7b . . 9e1844b 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > @ @ - 465 , 6 + 465 , 8 @ @ < nl > < nl > " AuthOTPNoCode " = " Haven ' t received code ? " ; < nl > < nl > + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > index 13cc2e6 . . d9b444a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > @ @ - 478 , 6 + 478 , 8 @ @ < nl > < nl > " AuthOTPNoCode " = " Н е п о л у ч и л и к о д ? " ; < nl > < nl > + " AuthOTPCallHint " = " { app _ name } п о з в о н и т в а м ч е р е з { time } " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > index 2808f61 . . 6e3318c 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > @ @ - 488 , 6 + 488 , 8 @ @ < nl > < nl > " AuthOTPNoCode " = " Haven ' t received code ? " ; < nl > < nl > + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; < nl > + < nl > / * < nl > * Common Elements < nl > * / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > index 14d982a . . afa34fb 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift < nl > @ @ - 67 , 7 + 67 , 7 @ @ public class AAAuthEmailViewController : AAAuthViewController { < nl > let privacyRange = NSRange ( location : hintText . indexOf ( privacyText ) ! , length : privacyText . length ) < nl > < nl > let attributedTerms = NSMutableAttributedString ( string : hintText ) < nl > - attributedTerms . yy _ color = ActorSDK . sharedActor ( ) . style . authTintColor . alpha ( 0 . 56 ) < nl > + attributedTerms . yy _ color = ActorSDK . sharedActor ( ) . style . authHintColor < nl > < nl > < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > index c50f590 . . 7ed93b5 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift < nl > @ @ - 39 , 12 + 39 , 14 @ @ public class AAAuthLogInViewController : AAAuthViewController { < nl > < nl > if ActorSDK . sharedActor ( ) . authStrategy = = . PhoneOnly { < nl > field . placeholder = AALocalized ( " AuthLoginPhone " ) < nl > + field . keyboardType = . EmailAddress < nl > } else if ActorSDK . sharedActor ( ) . authStrategy = = . EmailOnly { < nl > field . placeholder = AALocalized ( " AuthLoginEmail " ) < nl > + field . keyboardType = . PhonePad < nl > } else if ActorSDK . sharedActor ( ) . authStrategy = = . PhoneEmail { < nl > field . placeholder = AALocalized ( " AuthLoginPhoneEmail " ) < nl > + field . keyboardType = . Default < nl > } < nl > - field . keyboardType = . Default < nl > field . autocapitalizationType = . None < nl > < nl > fieldLine . backgroundColor = ActorSDK . sharedActor ( ) . style . authSeparatorColor < nl > @ @ - 97 , 7 + 99 , 8 @ @ public class AAAuthLogInViewController : AAAuthViewController { < nl > if let parsed = Int64 ( stripped ) { < nl > Actor . doStartAuthWithPhone ( jlong ( parsed ) ) . startUserAction ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in < nl > if res . authMode . toNSEnum ( ) = = . OTP { < nl > - self . navigateNext ( AAAuthOTPViewController ( phone : value , transactionHash : res . transactionHash ) ) < nl > + let formatted = RMPhoneFormat ( ) . format ( " \ ( parsed ) " ) < nl > + self . navigateNext ( AAAuthOTPViewController ( phone : formatted , transactionHash : res . transactionHash ) ) < nl > } else { < nl > self . alertUser ( AALocalized ( " AuthUnsupported " ) . replace ( " { app _ name } " , dest : ActorSDK . sharedActor ( ) . appName ) ) < nl > } < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift < nl > index 2e84dba . . 1ba462a 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift < nl > @ @ - 8 , 6 + 8 , 8 @ @ import YYText < nl > < nl > public class AAAuthOTPViewController : AAAuthViewController { < nl > < nl > + private static let DIAL _ SECONDS : Int = 60 < nl > + < nl > let scrollView = UIScrollView ( ) < nl > let welcomeLabel = UILabel ( ) < nl > let validateLabel = UILabel ( ) < nl > @ @ - 23 , 6 + 25 , 10 @ @ public class AAAuthOTPViewController : AAAuthViewController { < nl > let email : String ! < nl > let phone : String ! < nl > < nl > + private var counterTimer : NSTimer ! < nl > + private var dialed : Bool = false < nl > + private var counter = AAAuthOTPViewController . DIAL _ SECONDS < nl > + < nl > public init ( email : String , transactionHash : String ) { < nl > self . transactionHash = transactionHash < nl > self . name = nil < nl > @ @ - 77 , 7 + 83 , 11 @ @ public class AAAuthOTPViewController : AAAuthViewController { < nl > welcomeLabel . textAlignment = . Center < nl > < nl > validateLabel . font = UIFont . systemFontOfSize ( 14 ) < nl > - validateLabel . text = email < nl > + if email ! = nil { < nl > + validateLabel . text = email < nl > + } else { < nl > + validateLabel . text = phone < nl > + } < nl > validateLabel . textColor = ActorSDK . sharedActor ( ) . style . authTintColor < nl > validateLabel . textAlignment = . Center < nl > < nl > @ @ - 102 , 6 + 112 , 7 @ @ public class AAAuthOTPViewController : AAAuthViewController { < nl > haventReceivedCode . titleLabel ? . font = UIFont . systemFontOfSize ( 14 ) < nl > haventReceivedCode . setTitleColor ( ActorSDK . sharedActor ( ) . style . authTintColor , forState : . Normal ) < nl > haventReceivedCode . setTitleColor ( ActorSDK . sharedActor ( ) . style . authTintColor . alpha ( 0 . 64 ) , forState : . Highlighted ) < nl > + haventReceivedCode . setTitleColor ( ActorSDK . sharedActor ( ) . style . authHintColor , forState : . Disabled ) < nl > haventReceivedCode . addTarget ( self , action : " haventReceivedCodeDidPressed " , forControlEvents : . TouchUpInside ) < nl > < nl > scrollView . addSubview ( welcomeLabel ) < nl > @ @ - 125 , 7 + 136 , 7 @ @ public class AAAuthOTPViewController : AAAuthViewController { < nl > codeField . frame = CGRectMake ( 20 , 228 - 66 , view . width - 40 , 44 ) < nl > codeFieldLine . frame = CGRectMake ( 10 , 228 + 44 - 66 , view . width - 20 , 0 . 5 ) < nl > < nl > - haventReceivedCode . frame = CGRectMake ( 20 , 297 - 66 , view . width - 40 , 38 ) < nl > + haventReceivedCode . frame = CGRectMake ( 20 , 297 - 66 , view . width - 40 , 56 ) < nl > < nl > scrollView . frame = view . bounds < nl > scrollView . contentSize = CGSizeMake ( view . width , 240 - 66 ) < nl > @ @ - 199 , 6 + 210 , 70 @ @ public class AAAuthOTPViewController : AAAuthViewController { < nl > shakeView ( codeField , originalX : 20 ) < nl > shakeView ( codeFieldLine , originalX : 10 ) < nl > } < nl > + < nl > + public override func viewWillAppear ( animated : Bool ) { < nl > + super . viewWillAppear ( animated ) < nl > + < nl > + if self . phone ! = nil { < nl > + < nl > + updateTimerText ( ) < nl > + < nl > + if ! dialed { < nl > + counterTimer = NSTimer . scheduledTimerWithTimeInterval ( 1 . 0 , target : self , selector : " updateTimer " , userInfo : nil , repeats : true ) < nl > + } < nl > + } < nl > + } < nl > + < nl > + func updateTimer ( ) { < nl > + < nl > + counter - - < nl > + < nl > + if counter = = 0 { < nl > + dialed = true < nl > + if counterTimer ! = nil { < nl > + counterTimer . invalidate ( ) < nl > + counterTimer = nil < nl > + } < nl > + < nl > + Actor . doSendCodeViaCall ( self . transactionHash ) . done ( ) < nl > + } < nl > + < nl > + updateTimerText ( ) < nl > + } < nl > + < nl > + < nl > + func updateTimerText ( ) { < nl > + if dialed { < nl > + if ActorSDK . sharedActor ( ) . supportEmail ! = nil { < nl > + haventReceivedCode . setTitle ( AALocalized ( " AuthOTPNoCode " ) , forState : . Normal ) < nl > + haventReceivedCode . hidden = false < nl > + haventReceivedCode . enabled = true < nl > + } else { < nl > + haventReceivedCode . hidden = true < nl > + } < nl > + } else { < nl > + let min = counter / 60 < nl > + let sec = counter % 60 < nl > + let minFormatted = min . format ( " 02 " ) < nl > + let secFormatted = sec . format ( " 02 " ) < nl > + let time = " \ ( minFormatted ) : \ ( secFormatted ) " < nl > + let text = AALocalized ( " AuthOTPCallHint " ) < nl > + . replace ( " { app _ name } " , dest : ActorSDK . sharedActor ( ) . appName ) < nl > + . replace ( " { time } " , dest : time ) < nl > + haventReceivedCode . setTitle ( text , forState : . Normal ) < nl > + haventReceivedCode . enabled = false < nl > + haventReceivedCode . hidden = false < nl > + } < nl > + } < nl > + < nl > + public override func viewWillDisappear ( animated : Bool ) { < nl > + super . viewWillDisappear ( animated ) < nl > + < nl > + if counterTimer ! = nil { < nl > + counterTimer . invalidate ( ) < nl > + counterTimer = nil < nl > + } < nl > + } < nl > } < nl > < nl > < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > index c7f60ae . . 7361549 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift < nl > @ @ - 150 , 6 + 150 , 8 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe < nl > super . viewDidLoad ( ) < nl > } < nl > < nl > + < nl > + < nl > override func viewDidLayoutSubviews ( ) { < nl > super . viewDidLayoutSubviews ( ) < nl > < nl > @ @ - 182 , 6 + 184 , 7 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe < nl > currentCountry = AATelephony . getCountry ( currentIso ) < nl > countryButton . setTitle ( currentCountry . country , forState : . Normal ) < nl > phoneCodeLabel . text = " + \ ( currentCountry . code ) " < nl > + phoneNumberLabel . currentIso = currentIso < nl > resizePhoneLabels ( ) < nl > } < nl > < nl > @ @ - 228 , 5 + 231 , 6 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe < nl > super . viewWillDisappear ( animated ) < nl > < nl > phoneNumberLabel . resignFirstResponder ( ) < nl > + < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 4395fca . . 3a29b28 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 170 , 6 + 170 , 19 @ @ public class Messenger { < nl > return modules . getAuthModule ( ) . doValidateCode ( transactionHash , code ) ; < nl > } < nl > < nl > + < nl > + / * * < nl > + * Sending activation code via voice < nl > + * < nl > + * @ param transactionHash transaction hash < nl > + * @ return promice of Boolean < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " doSendCodeViaCall : " ) < nl > + public Promise < Boolean > doSendCodeViaCall ( String transactionHash ) { < nl > + return modules . getAuthModule ( ) . doSendCall ( transactionHash ) ; < nl > + } < nl > + < nl > / * * < nl > * Signing Up < nl > * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index a346e6e . . 0908052 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 205 , 6 + 205 , 25 @ @ public class Authentication { < nl > } ) ; < nl > } < nl > < nl > + public Promise < Boolean > doSendCall ( final String transactionHash ) { < nl > + return new Promise < > ( new PromiseFunc < Boolean > ( ) { < nl > + @ Override < nl > + public void exec ( @ NotNull final PromiseResolver < Boolean > resolver ) { < nl > + request ( new RequestSendCodeByPhoneCall ( transactionHash ) , new RpcCallback < ResponseVoid > ( ) { < nl > + @ Override < nl > + public void onResult ( ResponseVoid response ) { < nl > + resolver . result ( true ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onError ( RpcException e ) { < nl > + resolver . error ( e ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + } ) ; < nl > + } < nl > + < nl > < nl > / / < nl > / / Signup
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > index adb1ae5 . . 2059691 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings < nl > @ @ - 396 , 6 + 396 , 8 @ @ < nl > < nl > " ShareLocation " = " Location " ; < nl > < nl > + " ShareContact " = " Share Contact " ; < nl > + < nl > " NavigationEdit " = " Edit " ; < nl > < nl > " NavigationDone " = " Done " ; < nl > @ @ - 455 , 3 + 457 , 5 @ @ < nl > " ErrorAlreadyJoined " = " You are already member of group " ; < nl > < nl > " ErrorUnableToJoin " = " Unable to join to group " ; < nl > + < nl > + " ErrorUnableToCall " = " Unable to call this number " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > index 576fd1d . . aee6b33 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings < nl > @ @ - 449 , 3 + 449 , 7 @ @ < nl > " ErrorPhoneIncorrect " = " N ú mero de telefone inv á lido . Por favor tente de novo . " ; < nl > < nl > " ErrorCodeExpired " = " C ó digo expirou . Por favor reinicie a autentica ç ã o . " ; < nl > + < nl > + " ErrorUnableToJoin " = " Unable to join to group " ; < nl > + < nl > + " ErrorUnableToCall " = " Unable to call this number " ; < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > index 4e1554a . . 3fc1106 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings < nl > @ @ - 398 , 6 + 398 , 8 @ @ < nl > < nl > " SendDocument " = " Д о к у м е н т " ; < nl > < nl > + " ShareContact " = " К о н т а к т " ; < nl > + < nl > " NavigationEdit " = " И з м е н и т ь " ; < nl > < nl > " NavigationDone " = " Г о т о в о " ; < nl > @ @ - 457 , 3 + 459 , 5 @ @ < nl > " ErrorAlreadyJoined " = " В ы у ж е у ч а с т н и к г р у п п ы " ; < nl > < nl > " ErrorUnableToJoin " = " Н е в о з м о ж н о в с т у п и т ь в г р у п п у " ; < nl > + < nl > + " ErrorUnableToCall " = " Н е в о з м о ж н о п о з в о н и т ь н а э т о т н о м е р " ; < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > index 6e4eb3c . . 8fc5e28 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings < nl > @ @ - 396 , 6 + 396 , 8 @ @ < nl > < nl > " ShareLocation " = " Location " ; < nl > < nl > + " ShareContact " = " Contact " ; < nl > + < nl > " NavigationEdit " = " 编 辑 " ; < nl > < nl > " NavigationDone " = " 完 成 " ; < nl > @ @ - 454 , 4 + 456 , 6 @ @ < nl > < nl > " ErrorAlreadyJoined " = " You are already member of group " ; < nl > < nl > - " ErrorUnableToJoin " = " Unable to join to group " ; < nl > \ No newline at end of file < nl > + " ErrorUnableToJoin " = " Unable to join to group " ; < nl > + < nl > + " ErrorUnableToCall " = " Unable to call this number " ; < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > index 4a76f56 . . bd4c0fd 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift < nl > @ @ - 3 , 30 + 3 , 113 @ @ < nl > / / < nl > < nl > import Foundation < nl > + import AddressBookUI < nl > + import MessageUI < nl > < nl > - public class AABubbleContactCell : AABubbleCell { < nl > + public class AABubbleContactCell : AABubbleCell , ABNewPersonViewControllerDelegate , MFMailComposeViewControllerDelegate , UINavigationControllerDelegate { < nl > < nl > private let avatar = AAAvatarView ( frameSize : 44 ) < nl > private let name = UILabel ( ) < nl > private let contact = UILabel ( ) < nl > private var bindedRecords = [ String ] ( ) < nl > + private let tapView = UIView ( ) < nl > < nl > public init ( frame : CGRect ) { < nl > super . init ( frame : frame , isFullSize : false ) < nl > < nl > name . font = UIFont . mediumSystemFontOfSize ( 17 ) < nl > contact . font = UIFont . systemFontOfSize ( 15 ) < nl > + tapView . backgroundColor = UIColor . clearColor ( ) < nl > < nl > contentView . addSubview ( avatar ) < nl > contentView . addSubview ( name ) < nl > contentView . addSubview ( contact ) < nl > + contentView . addSubview ( tapView ) < nl > < nl > contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) < nl > + < nl > + tapView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " contactDidTap " ) ) < nl > + tapView . userInteractionEnabled = true < nl > } < nl > < nl > public required init ( coder aDecoder : NSCoder ) { < nl > fatalError ( " init ( coder : ) has not been implemented " ) < nl > } < nl > + < nl > + func contactDidTap ( ) { < nl > + if let m = bindedMessage { < nl > + if let c = m . content as ? ACContactContent { < nl > + let menuBuilder = AAMenuBuilder ( ) < nl > + let phones = c . getPhones ( ) < nl > + for i in 0 . . < phones . size ( ) { < nl > + let p = phones . getWithInt ( i ) as ! String < nl > + menuBuilder . add ( p , closure : { ( ) - > ( ) in < nl > + if let url = NSURL ( string : " tel : \ ( p ) " ) { < nl > + if ! UIApplication . sharedApplication ( ) . openURL ( url ) { < nl > + self . controller . alertUser ( " ErrorUnableToCall " ) < nl > + } < nl > + } else { < nl > + self . controller . alertUser ( " ErrorUnableToCall " ) < nl > + } < nl > + } ) < nl > + } < nl > + let emails = c . getEmails ( ) < nl > + for i in 0 . . < emails . size ( ) { < nl > + let e = emails . getWithInt ( i ) as ! String < nl > + menuBuilder . add ( e , closure : { ( ) - > ( ) in < nl > + let emailController = MFMailComposeViewController ( ) < nl > + emailController . delegate = self < nl > + emailController . setToRecipients ( [ e ] ) < nl > + self . controller . presentViewController ( emailController , animated : true , completion : nil ) < nl > + } ) < nl > + } < nl > + menuBuilder . add ( " Add to Contacts " , closure : { ( ) - > ( ) in < nl > + let add = ABNewPersonViewController ( ) < nl > + add . newPersonViewDelegate = self < nl > + < nl > + let person : ABRecordRef = ABPersonCreate ( ) . takeRetainedValue ( ) < nl > + let name = c . getName ( ) . trim ( ) < nl > + let nameParts = name . componentsSeparatedByString ( " " ) < nl > + ABRecordSetValue ( person , kABPersonFirstNameProperty , nameParts [ 0 ] , nil ) < nl > + if ( nameParts . count > = 2 ) { < nl > + let lastName = name . substringFromIndex ( nameParts [ 0 ] . endIndex ) . trim ( ) < nl > + ABRecordSetValue ( person , kABPersonLastNameProperty , lastName , nil ) < nl > + } < nl > + < nl > + if ( phones . size ( ) > 0 ) { < nl > + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) < nl > + for i in 0 . . < phones . size ( ) { < nl > + let p = phones . getWithInt ( i ) as ! String < nl > + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) < nl > + } < nl > + ABRecordSetValue ( person , kABPersonPhoneProperty , phonesValues , nil ) < nl > + } < nl > + < nl > + if ( emails . size ( ) > 0 ) { < nl > + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) < nl > + for i in 0 . . < emails . size ( ) { < nl > + let p = emails . getWithInt ( i ) as ! String < nl > + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) < nl > + } < nl > + ABRecordSetValue ( person , kABPersonEmailProperty , phonesValues , nil ) < nl > + } < nl > + < nl > + add . displayedPerson = person < nl > + self . controller . presentViewController ( AANavigationController ( rootViewController : add ) , animated : true , completion : nil ) < nl > + } ) < nl > + < nl > + controller . showActionSheet ( menuBuilder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : tapView , sourceRect : tapView . bounds , tapClosure : menuBuilder . tapClosure ) < nl > + } < nl > + } < nl > + } < nl > + < nl > + public func newPersonViewController ( newPersonView : ABNewPersonViewController , didCompleteWithNewPerson person : ABRecord ? ) { < nl > + newPersonView . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > + < nl > + public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { < nl > + controller . dismissViewControllerAnimated ( true , completion : nil ) < nl > + } < nl > < nl > public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { < nl > < nl > @ @ - 90 , 8 + 173 , 10 @ @ public class AABubbleContactCell : AABubbleCell { < nl > < nl > if ( isOut ) { < nl > avatar . frame = CGRectMake ( contentWidth - insets . right - 200 , insets . top , 44 , 44 ) < nl > + tapView . frame = CGRectMake ( contentWidth - insets . left - 200 , insets . top , 200 , CGFloat ( height ) ) < nl > } else { < nl > avatar . frame = CGRectMake ( insets . left , insets . top , 44 , 44 ) < nl > + tapView . frame = CGRectMake ( insets . left , insets . top , 200 , CGFloat ( height ) ) < nl > } < nl > name . frame = CGRectMake ( avatar . right + 6 , insets . top , 200 - 58 , 22 ) < nl > contact . frame = CGRectMake ( avatar . right + 6 , insets . top + 22 , 200 - 58 , 200 ) < nl > diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > index 0622c28 . . 1bb3c65 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift < nl > @ @ - 539 , 6 + 539 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen < nl > < nl > / / Sending < nl > < nl > - Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : JavaUtilHashSet ( ) , withPhoto : jAvatarImage ) < nl > + Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : jEmails , withPhoto : jAvatarImage ) < nl > } < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index 4ba9550 . . 16b016a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 489 , 6 + 489 , 8 @ @ 
 
 " AuthOTPNoCode " = " Haven ' t received code ? " ; 
 
 + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; 
 + 
 
 / * 
 * Common Elements 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 index 1f9d31f . . cfe8436 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / es . lproj / Localizable . strings 
 @ @ - 481 , 6 + 481 , 8 @ @ 
 
 " AuthOTPNoCode " = " Haven ' t received code ? " ; 
 
 + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 index 2d03a7b . . 9e1844b 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 @ @ - 465 , 6 + 465 , 8 @ @ 
 
 " AuthOTPNoCode " = " Haven ' t received code ? " ; 
 
 + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 index 13cc2e6 . . d9b444a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 @ @ - 478 , 6 + 478 , 8 @ @ 
 
 " AuthOTPNoCode " = " Н е п о л у ч и л и к о д ? " ; 
 
 + " AuthOTPCallHint " = " { app _ name } п о з в о н и т в а м ч е р е з { time } " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 index 2808f61 . . 6e3318c 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 @ @ - 488 , 6 + 488 , 8 @ @ 
 
 " AuthOTPNoCode " = " Haven ' t received code ? " ; 
 
 + " AuthOTPCallHint " = " { app _ name } will call you in { time } " ; 
 + 
 / * 
 * Common Elements 
 * / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 index 14d982a . . afa34fb 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthEmailViewController . swift 
 @ @ - 67 , 7 + 67 , 7 @ @ public class AAAuthEmailViewController : AAAuthViewController { 
 let privacyRange = NSRange ( location : hintText . indexOf ( privacyText ) ! , length : privacyText . length ) 
 
 let attributedTerms = NSMutableAttributedString ( string : hintText ) 
 - attributedTerms . yy _ color = ActorSDK . sharedActor ( ) . style . authTintColor . alpha ( 0 . 56 ) 
 + attributedTerms . yy _ color = ActorSDK . sharedActor ( ) . style . authHintColor 
 
 
 / / 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 index c50f590 . . 7ed93b5 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthLogInViewController . swift 
 @ @ - 39 , 12 + 39 , 14 @ @ public class AAAuthLogInViewController : AAAuthViewController { 
 
 if ActorSDK . sharedActor ( ) . authStrategy = = . PhoneOnly { 
 field . placeholder = AALocalized ( " AuthLoginPhone " ) 
 + field . keyboardType = . EmailAddress 
 } else if ActorSDK . sharedActor ( ) . authStrategy = = . EmailOnly { 
 field . placeholder = AALocalized ( " AuthLoginEmail " ) 
 + field . keyboardType = . PhonePad 
 } else if ActorSDK . sharedActor ( ) . authStrategy = = . PhoneEmail { 
 field . placeholder = AALocalized ( " AuthLoginPhoneEmail " ) 
 + field . keyboardType = . Default 
 } 
 - field . keyboardType = . Default 
 field . autocapitalizationType = . None 
 
 fieldLine . backgroundColor = ActorSDK . sharedActor ( ) . style . authSeparatorColor 
 @ @ - 97 , 7 + 99 , 8 @ @ public class AAAuthLogInViewController : AAAuthViewController { 
 if let parsed = Int64 ( stripped ) { 
 Actor . doStartAuthWithPhone ( jlong ( parsed ) ) . startUserAction ( ) . then { ( res : ACAuthStartRes ! ) - > ( ) in 
 if res . authMode . toNSEnum ( ) = = . OTP { 
 - self . navigateNext ( AAAuthOTPViewController ( phone : value , transactionHash : res . transactionHash ) ) 
 + let formatted = RMPhoneFormat ( ) . format ( " \ ( parsed ) " ) 
 + self . navigateNext ( AAAuthOTPViewController ( phone : formatted , transactionHash : res . transactionHash ) ) 
 } else { 
 self . alertUser ( AALocalized ( " AuthUnsupported " ) . replace ( " { app _ name } " , dest : ActorSDK . sharedActor ( ) . appName ) ) 
 } 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift 
 index 2e84dba . . 1ba462a 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthOTPViewController . swift 
 @ @ - 8 , 6 + 8 , 8 @ @ import YYText 
 
 public class AAAuthOTPViewController : AAAuthViewController { 
 
 + private static let DIAL _ SECONDS : Int = 60 
 + 
 let scrollView = UIScrollView ( ) 
 let welcomeLabel = UILabel ( ) 
 let validateLabel = UILabel ( ) 
 @ @ - 23 , 6 + 25 , 10 @ @ public class AAAuthOTPViewController : AAAuthViewController { 
 let email : String ! 
 let phone : String ! 
 
 + private var counterTimer : NSTimer ! 
 + private var dialed : Bool = false 
 + private var counter = AAAuthOTPViewController . DIAL _ SECONDS 
 + 
 public init ( email : String , transactionHash : String ) { 
 self . transactionHash = transactionHash 
 self . name = nil 
 @ @ - 77 , 7 + 83 , 11 @ @ public class AAAuthOTPViewController : AAAuthViewController { 
 welcomeLabel . textAlignment = . Center 
 
 validateLabel . font = UIFont . systemFontOfSize ( 14 ) 
 - validateLabel . text = email 
 + if email ! = nil { 
 + validateLabel . text = email 
 + } else { 
 + validateLabel . text = phone 
 + } 
 validateLabel . textColor = ActorSDK . sharedActor ( ) . style . authTintColor 
 validateLabel . textAlignment = . Center 
 
 @ @ - 102 , 6 + 112 , 7 @ @ public class AAAuthOTPViewController : AAAuthViewController { 
 haventReceivedCode . titleLabel ? . font = UIFont . systemFontOfSize ( 14 ) 
 haventReceivedCode . setTitleColor ( ActorSDK . sharedActor ( ) . style . authTintColor , forState : . Normal ) 
 haventReceivedCode . setTitleColor ( ActorSDK . sharedActor ( ) . style . authTintColor . alpha ( 0 . 64 ) , forState : . Highlighted ) 
 + haventReceivedCode . setTitleColor ( ActorSDK . sharedActor ( ) . style . authHintColor , forState : . Disabled ) 
 haventReceivedCode . addTarget ( self , action : " haventReceivedCodeDidPressed " , forControlEvents : . TouchUpInside ) 
 
 scrollView . addSubview ( welcomeLabel ) 
 @ @ - 125 , 7 + 136 , 7 @ @ public class AAAuthOTPViewController : AAAuthViewController { 
 codeField . frame = CGRectMake ( 20 , 228 - 66 , view . width - 40 , 44 ) 
 codeFieldLine . frame = CGRectMake ( 10 , 228 + 44 - 66 , view . width - 20 , 0 . 5 ) 
 
 - haventReceivedCode . frame = CGRectMake ( 20 , 297 - 66 , view . width - 40 , 38 ) 
 + haventReceivedCode . frame = CGRectMake ( 20 , 297 - 66 , view . width - 40 , 56 ) 
 
 scrollView . frame = view . bounds 
 scrollView . contentSize = CGSizeMake ( view . width , 240 - 66 ) 
 @ @ - 199 , 6 + 210 , 70 @ @ public class AAAuthOTPViewController : AAAuthViewController { 
 shakeView ( codeField , originalX : 20 ) 
 shakeView ( codeFieldLine , originalX : 10 ) 
 } 
 + 
 + public override func viewWillAppear ( animated : Bool ) { 
 + super . viewWillAppear ( animated ) 
 + 
 + if self . phone ! = nil { 
 + 
 + updateTimerText ( ) 
 + 
 + if ! dialed { 
 + counterTimer = NSTimer . scheduledTimerWithTimeInterval ( 1 . 0 , target : self , selector : " updateTimer " , userInfo : nil , repeats : true ) 
 + } 
 + } 
 + } 
 + 
 + func updateTimer ( ) { 
 + 
 + counter - - 
 + 
 + if counter = = 0 { 
 + dialed = true 
 + if counterTimer ! = nil { 
 + counterTimer . invalidate ( ) 
 + counterTimer = nil 
 + } 
 + 
 + Actor . doSendCodeViaCall ( self . transactionHash ) . done ( ) 
 + } 
 + 
 + updateTimerText ( ) 
 + } 
 + 
 + 
 + func updateTimerText ( ) { 
 + if dialed { 
 + if ActorSDK . sharedActor ( ) . supportEmail ! = nil { 
 + haventReceivedCode . setTitle ( AALocalized ( " AuthOTPNoCode " ) , forState : . Normal ) 
 + haventReceivedCode . hidden = false 
 + haventReceivedCode . enabled = true 
 + } else { 
 + haventReceivedCode . hidden = true 
 + } 
 + } else { 
 + let min = counter / 60 
 + let sec = counter % 60 
 + let minFormatted = min . format ( " 02 " ) 
 + let secFormatted = sec . format ( " 02 " ) 
 + let time = " \ ( minFormatted ) : \ ( secFormatted ) " 
 + let text = AALocalized ( " AuthOTPCallHint " ) 
 + . replace ( " { app _ name } " , dest : ActorSDK . sharedActor ( ) . appName ) 
 + . replace ( " { time } " , dest : time ) 
 + haventReceivedCode . setTitle ( text , forState : . Normal ) 
 + haventReceivedCode . enabled = false 
 + haventReceivedCode . hidden = false 
 + } 
 + } 
 + 
 + public override func viewWillDisappear ( animated : Bool ) { 
 + super . viewWillDisappear ( animated ) 
 + 
 + if counterTimer ! = nil { 
 + counterTimer . invalidate ( ) 
 + counterTimer = nil 
 + } 
 + } 
 } 
 
 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 index c7f60ae . . 7361549 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Auth / AAAuthPhoneViewController . swift 
 @ @ - 150 , 6 + 150 , 8 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe 
 super . viewDidLoad ( ) 
 } 
 
 + 
 + 
 override func viewDidLayoutSubviews ( ) { 
 super . viewDidLayoutSubviews ( ) 
 
 @ @ - 182 , 6 + 184 , 7 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe 
 currentCountry = AATelephony . getCountry ( currentIso ) 
 countryButton . setTitle ( currentCountry . country , forState : . Normal ) 
 phoneCodeLabel . text = " + \ ( currentCountry . code ) " 
 + phoneNumberLabel . currentIso = currentIso 
 resizePhoneLabels ( ) 
 } 
 
 @ @ - 228 , 5 + 231 , 6 @ @ class AAAuthPhoneViewController : AAAuthViewController , AACountryViewControllerDe 
 super . viewWillDisappear ( animated ) 
 
 phoneNumberLabel . resignFirstResponder ( ) 
 + 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 4395fca . . 3a29b28 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 170 , 6 + 170 , 19 @ @ public class Messenger { 
 return modules . getAuthModule ( ) . doValidateCode ( transactionHash , code ) ; 
 } 
 
 + 
 + / * * 
 + * Sending activation code via voice 
 + * 
 + * @ param transactionHash transaction hash 
 + * @ return promice of Boolean 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " doSendCodeViaCall : " ) 
 + public Promise < Boolean > doSendCodeViaCall ( String transactionHash ) { 
 + return modules . getAuthModule ( ) . doSendCall ( transactionHash ) ; 
 + } 
 + 
 / * * 
 * Signing Up 
 * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index a346e6e . . 0908052 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 205 , 6 + 205 , 25 @ @ public class Authentication { 
 } ) ; 
 } 
 
 + public Promise < Boolean > doSendCall ( final String transactionHash ) { 
 + return new Promise < > ( new PromiseFunc < Boolean > ( ) { 
 + @ Override 
 + public void exec ( @ NotNull final PromiseResolver < Boolean > resolver ) { 
 + request ( new RequestSendCodeByPhoneCall ( transactionHash ) , new RpcCallback < ResponseVoid > ( ) { 
 + @ Override 
 + public void onResult ( ResponseVoid response ) { 
 + resolver . result ( true ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( RpcException e ) { 
 + resolver . error ( e ) ; 
 + } 
 + } ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 
 / / 
 / / Signup

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 index adb1ae5 . . 2059691 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / Base . lproj / Localizable . strings 
 @ @ - 396 , 6 + 396 , 8 @ @ 
 
 " ShareLocation " = " Location " ; 
 
 + " ShareContact " = " Share Contact " ; 
 + 
 " NavigationEdit " = " Edit " ; 
 
 " NavigationDone " = " Done " ; 
 @ @ - 455 , 3 + 457 , 5 @ @ 
 " ErrorAlreadyJoined " = " You are already member of group " ; 
 
 " ErrorUnableToJoin " = " Unable to join to group " ; 
 + 
 + " ErrorUnableToCall " = " Unable to call this number " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 index 576fd1d . . aee6b33 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / pt . lproj / Localizable . strings 
 @ @ - 449 , 3 + 449 , 7 @ @ 
 " ErrorPhoneIncorrect " = " N ú mero de telefone inv á lido . Por favor tente de novo . " ; 
 
 " ErrorCodeExpired " = " C ó digo expirou . Por favor reinicie a autentica ç ã o . " ; 
 + 
 + " ErrorUnableToJoin " = " Unable to join to group " ; 
 + 
 + " ErrorUnableToCall " = " Unable to call this number " ; 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 index 4e1554a . . 3fc1106 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / ru . lproj / Localizable . strings 
 @ @ - 398 , 6 + 398 , 8 @ @ 
 
 " SendDocument " = " Д о к у м е н т " ; 
 
 + " ShareContact " = " К о н т а к т " ; 
 + 
 " NavigationEdit " = " И з м е н и т ь " ; 
 
 " NavigationDone " = " Г о т о в о " ; 
 @ @ - 457 , 3 + 459 , 5 @ @ 
 " ErrorAlreadyJoined " = " В ы у ж е у ч а с т н и к г р у п п ы " ; 
 
 " ErrorUnableToJoin " = " Н е в о з м о ж н о в с т у п и т ь в г р у п п у " ; 
 + 
 + " ErrorUnableToCall " = " Н е в о з м о ж н о п о з в о н и т ь н а э т о т н о м е р " ; 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 index 6e4eb3c . . 8fc5e28 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Resources / zh - Hans . lproj / Localizable . strings 
 @ @ - 396 , 6 + 396 , 8 @ @ 
 
 " ShareLocation " = " Location " ; 
 
 + " ShareContact " = " Contact " ; 
 + 
 " NavigationEdit " = " 编 辑 " ; 
 
 " NavigationDone " = " 完 成 " ; 
 @ @ - 454 , 4 + 456 , 6 @ @ 
 
 " ErrorAlreadyJoined " = " You are already member of group " ; 
 
 - " ErrorUnableToJoin " = " Unable to join to group " ; 
 \ No newline at end of file 
 + " ErrorUnableToJoin " = " Unable to join to group " ; 
 + 
 + " ErrorUnableToCall " = " Unable to call this number " ; 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 index 4a76f56 . . bd4c0fd 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Content / Conversation / Cell / AABubbleContactCell . swift 
 @ @ - 3 , 30 + 3 , 113 @ @ 
 / / 
 
 import Foundation 
 + import AddressBookUI 
 + import MessageUI 
 
 - public class AABubbleContactCell : AABubbleCell { 
 + public class AABubbleContactCell : AABubbleCell , ABNewPersonViewControllerDelegate , MFMailComposeViewControllerDelegate , UINavigationControllerDelegate { 
 
 private let avatar = AAAvatarView ( frameSize : 44 ) 
 private let name = UILabel ( ) 
 private let contact = UILabel ( ) 
 private var bindedRecords = [ String ] ( ) 
 + private let tapView = UIView ( ) 
 
 public init ( frame : CGRect ) { 
 super . init ( frame : frame , isFullSize : false ) 
 
 name . font = UIFont . mediumSystemFontOfSize ( 17 ) 
 contact . font = UIFont . systemFontOfSize ( 15 ) 
 + tapView . backgroundColor = UIColor . clearColor ( ) 
 
 contentView . addSubview ( avatar ) 
 contentView . addSubview ( name ) 
 contentView . addSubview ( contact ) 
 + contentView . addSubview ( tapView ) 
 
 contentInsets = UIEdgeInsets ( top : 1 , left : 1 , bottom : 1 , right : 1 ) 
 + 
 + tapView . addGestureRecognizer ( UITapGestureRecognizer ( target : self , action : " contactDidTap " ) ) 
 + tapView . userInteractionEnabled = true 
 } 
 
 public required init ( coder aDecoder : NSCoder ) { 
 fatalError ( " init ( coder : ) has not been implemented " ) 
 } 
 + 
 + func contactDidTap ( ) { 
 + if let m = bindedMessage { 
 + if let c = m . content as ? ACContactContent { 
 + let menuBuilder = AAMenuBuilder ( ) 
 + let phones = c . getPhones ( ) 
 + for i in 0 . . < phones . size ( ) { 
 + let p = phones . getWithInt ( i ) as ! String 
 + menuBuilder . add ( p , closure : { ( ) - > ( ) in 
 + if let url = NSURL ( string : " tel : \ ( p ) " ) { 
 + if ! UIApplication . sharedApplication ( ) . openURL ( url ) { 
 + self . controller . alertUser ( " ErrorUnableToCall " ) 
 + } 
 + } else { 
 + self . controller . alertUser ( " ErrorUnableToCall " ) 
 + } 
 + } ) 
 + } 
 + let emails = c . getEmails ( ) 
 + for i in 0 . . < emails . size ( ) { 
 + let e = emails . getWithInt ( i ) as ! String 
 + menuBuilder . add ( e , closure : { ( ) - > ( ) in 
 + let emailController = MFMailComposeViewController ( ) 
 + emailController . delegate = self 
 + emailController . setToRecipients ( [ e ] ) 
 + self . controller . presentViewController ( emailController , animated : true , completion : nil ) 
 + } ) 
 + } 
 + menuBuilder . add ( " Add to Contacts " , closure : { ( ) - > ( ) in 
 + let add = ABNewPersonViewController ( ) 
 + add . newPersonViewDelegate = self 
 + 
 + let person : ABRecordRef = ABPersonCreate ( ) . takeRetainedValue ( ) 
 + let name = c . getName ( ) . trim ( ) 
 + let nameParts = name . componentsSeparatedByString ( " " ) 
 + ABRecordSetValue ( person , kABPersonFirstNameProperty , nameParts [ 0 ] , nil ) 
 + if ( nameParts . count > = 2 ) { 
 + let lastName = name . substringFromIndex ( nameParts [ 0 ] . endIndex ) . trim ( ) 
 + ABRecordSetValue ( person , kABPersonLastNameProperty , lastName , nil ) 
 + } 
 + 
 + if ( phones . size ( ) > 0 ) { 
 + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) 
 + for i in 0 . . < phones . size ( ) { 
 + let p = phones . getWithInt ( i ) as ! String 
 + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) 
 + } 
 + ABRecordSetValue ( person , kABPersonPhoneProperty , phonesValues , nil ) 
 + } 
 + 
 + if ( emails . size ( ) > 0 ) { 
 + let phonesValues : ABMultiValueRef = ABMultiValueCreateMutable ( UInt32 ( kABMultiStringPropertyType ) ) . takeRetainedValue ( ) 
 + for i in 0 . . < emails . size ( ) { 
 + let p = emails . getWithInt ( i ) as ! String 
 + ABMultiValueAddValueAndLabel ( phonesValues , p . replace ( " " , dest : " " ) , kABPersonPhoneMainLabel , nil ) 
 + } 
 + ABRecordSetValue ( person , kABPersonEmailProperty , phonesValues , nil ) 
 + } 
 + 
 + add . displayedPerson = person 
 + self . controller . presentViewController ( AANavigationController ( rootViewController : add ) , animated : true , completion : nil ) 
 + } ) 
 + 
 + controller . showActionSheet ( menuBuilder . items , cancelButton : " AlertCancel " , destructButton : nil , sourceView : tapView , sourceRect : tapView . bounds , tapClosure : menuBuilder . tapClosure ) 
 + } 
 + } 
 + } 
 + 
 + public func newPersonViewController ( newPersonView : ABNewPersonViewController , didCompleteWithNewPerson person : ABRecord ? ) { 
 + newPersonView . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 + 
 + public func mailComposeController ( controller : MFMailComposeViewController , didFinishWithResult result : MFMailComposeResult , error : NSError ? ) { 
 + controller . dismissViewControllerAnimated ( true , completion : nil ) 
 + } 
 
 public override func bind ( message : ACMessage , reuse : Bool , cellLayout : AACellLayout , setting : AACellSetting ) { 
 
 @ @ - 90 , 8 + 173 , 10 @ @ public class AABubbleContactCell : AABubbleCell { 
 
 if ( isOut ) { 
 avatar . frame = CGRectMake ( contentWidth - insets . right - 200 , insets . top , 44 , 44 ) 
 + tapView . frame = CGRectMake ( contentWidth - insets . left - 200 , insets . top , 200 , CGFloat ( height ) ) 
 } else { 
 avatar . frame = CGRectMake ( insets . left , insets . top , 44 , 44 ) 
 + tapView . frame = CGRectMake ( insets . left , insets . top , 200 , CGFloat ( height ) ) 
 } 
 name . frame = CGRectMake ( avatar . right + 6 , insets . top , 200 - 58 , 22 ) 
 contact . frame = CGRectMake ( avatar . right + 6 , insets . top + 22 , 200 - 58 , 200 ) 
 diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 index 0622c28 . . 1bb3c65 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / Conversation / ConversationViewController . swift 
 @ @ - 539 , 6 + 539 , 6 @ @ class ConversationViewController : AAConversationContentController , UIDocumentMen 
 
 / / Sending 
 
 - Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : JavaUtilHashSet ( ) , withPhoto : jAvatarImage ) 
 + Actor . sendContactWithPeer ( self . peer , withName : name , withPhones : jPhones , withEmails : jEmails , withPhoto : jAvatarImage ) 
 } 
 } 
 \ No newline at end of file
