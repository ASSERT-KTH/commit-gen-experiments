BLEU SCORE: 0.23899976771375064

TEST MSG: fix ( core ) : Fixing related data application
GENERATED MSG: feat ( core ) : Ability to disable phone book import

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > index 3a93114 . . dabd3e8 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java < nl > @ @ - 37 , 13 + 37 , 8 @ @ public class PeerConnectionActor extends ModuleActor { < nl > @ NotNull final WebRTCMediaStream mediaStream , < nl > @ NotNull final PeerConnectionCallback callback , < nl > @ NotNull final ModuleContext context ) { < nl > - return new ActorCreator ( ) { < nl > - @ Override < nl > - public Actor create ( ) { < nl > - return new PeerConnectionActor ( iceServers , selfSettings , theirSettings , mediaStream , < nl > - callback , context ) ; < nl > - } < nl > - } ; < nl > + return ( ) - > new PeerConnectionActor ( iceServers , selfSettings , theirSettings , mediaStream , < nl > + callback , context ) ; < nl > } < nl > < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java < nl > index 5afcb7f . . 87a3a07 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java < nl > @ @ - 9 , 8 + 9 , 8 @ @ import im . actor . runtime . bser . BserWriter ; < nl > < nl > public class BookImportStorage extends BserObject { < nl > < nl > - private HashSet < String > importedEmails = new HashSet < String > ( ) ; < nl > - private HashSet < Long > importedPhones = new HashSet < Long > ( ) ; < nl > + private HashSet < String > importedEmails = new HashSet < > ( ) ; < nl > + private HashSet < Long > importedPhones = new HashSet < > ( ) ; < nl > < nl > public BookImportStorage ( ) { < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java < nl > index 7ea896e . . 34ed5dd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java < nl > @ @ - 38 , 7 + 38 , 7 @ @ public class DownloadTask extends ModuleActor { < nl > private Cancellable notifyCancellable ; < nl > < nl > private String fileUrl ; < nl > - private int blockSize = 32 * 1024 ; < nl > + private int blockSize = 128 * 1024 ; < nl > private int blocksCount ; < nl > private int nextBlock = 0 ; < nl > private int currentDownloads = 0 ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java < nl > index 9dadad9 . . ae5d15b 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java < nl > @ @ - 60 , 23 + 60 , 11 @ @ public class ArchivedDialogsActor extends ModuleActor { < nl > isLoading = true ; < nl > < nl > Log . d ( TAG , " Loading archived dialogs " ) ; < nl > - lastRequest = request ( new RequestLoadArchived ( nextOffset , LIMIT , ApiSupportConfiguration . OPTIMIZATIONS ) , < nl > - new RpcCallback < ResponseLoadArchived > ( ) { < nl > - @ Override < nl > - public void onResult ( final ResponseLoadArchived response ) { < nl > - updates ( ) . applyRelatedData ( response . getUsers ( ) , response . getGroups ( ) ) . then ( new Consumer < Void > ( ) { < nl > - @ Override < nl > - public void apply ( Void aVoid ) { < nl > - onLoadedMore ( response ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( RpcException e ) { < nl > - lastCallback . onError ( e ) ; < nl > - } < nl > - } ) ; < nl > + api ( new RequestLoadArchived ( nextOffset , LIMIT , ApiSupportConfiguration . OPTIMIZATIONS ) ) < nl > + . chain ( r - > updates ( ) . applyRelatedData ( r . getUsers ( ) , r . getGroups ( ) ) ) < nl > + . chain ( r - > updates ( ) . loadRequiredPeers ( r . getUserPeers ( ) , r . getGroupPeers ( ) ) ) < nl > + . then ( r - > onLoadedMore ( r ) ) < nl > + . failure ( e - > lastCallback . onError ( ( RpcException ) e ) ) ; < nl > } < nl > < nl > private void onLoadedMore ( ResponseLoadArchived responseLoadArchiveds ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java < nl > index e623b33 . . 691d5b6 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java < nl > @ @ - 65 , 13 + 65 , 8 @ @ public class ConversationHistoryActor extends ModuleActor { < nl > } < nl > isLoading = true ; < nl > api ( new RequestLoadHistory ( buidOutPeer ( peer ) , historyMaxDate , null , LIMIT , ApiSupportConfiguration . OPTIMIZATIONS ) ) < nl > - . then ( new Consumer < ResponseLoadHistory > ( ) { < nl > - @ Override < nl > - public void apply ( ResponseLoadHistory responseLoadHistory ) { < nl > - Log . d ( " ConversationHistory " , " Loaded ! " ) ; < nl > - } < nl > - } ) < nl > - . flatMap ( applyRelated ( ) ) < nl > + . chain ( r - > updates ( ) . applyRelatedData ( r . getUsers ( ) , r . getGroups ( ) ) ) < nl > + . chain ( r - > updates ( ) . loadRequiredPeers ( r . getUserPeers ( ) , r . getGroupPeers ( ) ) ) < nl > . then ( applyHistory ( peer ) ) < nl > . then ( responseLoadHistory - > isLoading = false ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java < nl > index 5310de6 . . 1b9ccc5 100755 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java < nl > @ @ - 40 , 12 + 40 , 7 @ @ public class ActorDispatcher { < nl > this . name = name ; < nl > this . actorSystem = actorSystem ; < nl > this . dispatchers = new QueueDispatcher [ dispatchersCount ] ; < nl > - final Consumer < Envelope > handler = new Consumer < Envelope > ( ) { < nl > - @ Override < nl > - public void apply ( Envelope envelope ) { < nl > - processEnvelope ( envelope ) ; < nl > - } < nl > - } ; < nl > + final Consumer < Envelope > handler = envelope - > processEnvelope ( envelope ) ; < nl > for ( int i = 0 ; i < dispatchers . length ; i + + ) { < nl > this . dispatchers [ i ] = new QueueDispatcher < > ( name + " _ " + i , priority , queueCollection , handler ) ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > index 01a0edb . . 63f9dd8 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift < nl > @ @ - 72 , 6 + 72 , 9 @ @ public class ActorSDK { < nl > / / / Push token registration id . Required for sending push tokens < nl > public var apiPushId : Int ? = nil < nl > < nl > + / / / Enable phone book import < nl > + public var enablePhoneBookImport = true < nl > + < nl > / / / Invitation URL for apps < nl > public var inviteUrl : String = " https : / / actor . im / dl " < nl > < nl > @ @ - 198 , 6 + 201 , 9 @ @ public class ActorSDK { < nl > builder . setCustomAppName ( AALocalized ( appNameInLocStrings ) ) < nl > } < nl > < nl > + / / Config < nl > + builder . setPhoneBookImportEnabled ( jboolean ( enablePhoneBookImport ) ) < nl > + < nl > / / Creating messenger < nl > messenger = ACCocoaMessenger ( configuration : builder . build ( ) ) < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > index bf0da53 . . 1d73500 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java < nl > @ @ - 43 , 6 + 43 , 8 @ @ public class Configuration { < nl > < nl > private String customAppName ; < nl > < nl > + private boolean enablePhoneBookImport ; < nl > + < nl > Configuration ( ConnectionEndpoint [ ] endpoints , < nl > PhoneBookProvider phoneBookProvider , < nl > NotificationProvider notificationProvider , < nl > @ @ - 59 , 7 + 61 , 8 @ @ public class Configuration { < nl > String timeZone , < nl > String [ ] preferredLanguages , < nl > String customAppName , < nl > - TrustedKey [ ] trustedKeys ) { < nl > + TrustedKey [ ] trustedKeys , < nl > + boolean enablePhoneBookImport ) { < nl > this . endpoints = endpoints ; < nl > this . phoneBookProvider = phoneBookProvider ; < nl > this . enableContactsLogging = enableContactsLogging ; < nl > @ @ - 77 , 6 + 80 , 16 @ @ public class Configuration { < nl > this . preferredLanguages = preferredLanguages ; < nl > this . customAppName = customAppName ; < nl > this . trustedKeys = trustedKeys ; < nl > + this . enablePhoneBookImport = enablePhoneBookImport ; < nl > + } < nl > + < nl > + / * * < nl > + * Getting if app automatically imports phone book to server < nl > + * < nl > + * @ return if phone book enabled < nl > + * / < nl > + public boolean isEnablePhoneBookImport ( ) { < nl > + return enablePhoneBookImport ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > index a8a872d . . 8d1c65e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java < nl > @ @ - 47 , 6 + 47 , 21 @ @ public class ConfigurationBuilder { < nl > < nl > private String customAppName ; < nl > < nl > + private boolean isPhoneBookImportEnabled = true ; < nl > + < nl > + / * * < nl > + * Setting if application need to upload phone book to server < nl > + * < nl > + * @ param isPhoneBookImportEnabled enabled flag < nl > + * @ return this < nl > + * / < nl > + @ NotNull < nl > + @ ObjectiveCName ( " setPhoneBookImportEnabled : " ) < nl > + public ConfigurationBuilder setPhoneBookImportEnabled ( boolean isPhoneBookImportEnabled ) { < nl > + this . isPhoneBookImportEnabled = isPhoneBookImportEnabled ; < nl > + return this ; < nl > + } < nl > + < nl > / * * < nl > * Adding Trusted key for protocol encryption securing < nl > * < nl > @ @ - 341 , 6 + 356 , 7 @ @ public class ConfigurationBuilder { < nl > extensions . toArray ( new ConfigurationExtension [ extensions . size ( ) ] ) , < nl > timeZone , preferredLanguages . toArray ( new String [ preferredLanguages . size ( ) ] ) , < nl > customAppName , < nl > - trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) ) ; < nl > + trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) , < nl > + isPhoneBookImportEnabled ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 1a36d66 . . a44d871 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 154 , 9 + 154 , 9 @ @ public class Messenger { < nl > * @ return Command for execution < nl > * / < nl > @ NotNull < nl > - @ ObjectiveCName ( " requestStartAuthCommandWithUserName : " ) < nl > + @ ObjectiveCName ( " requestStartAnonymousAuthWithUserName : " ) < nl > public Command < AuthState > requestStartAnonymousAuth ( String userName ) { < nl > - return modules . getAuthModule ( ) . requestStartAnonumousAuth ( userName ) ; < nl > + return modules . getAuthModule ( ) . requestStartAnonymousAuth ( userName ) ; < nl > } < nl > < nl > / * * < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 482e019 . . 5776d0f 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 116 , 7 + 116 , 7 @ @ public class Authentication { < nl > } < nl > } < nl > < nl > - public Command < AuthState > requestStartAnonumousAuth ( final String userName ) { < nl > + public Command < AuthState > requestStartAnonymousAuth ( final String userName ) { < nl > return new Command < AuthState > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < AuthState > callback ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > index 2f23fc3 . . 2910480 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java < nl > @ @ - 65 , 10 + 65 , 16 @ @ public class BookImportActor extends ModuleActor { < nl > e . getLocalizedMessage ( ) ; < nl > } < nl > } < nl > + < nl > self ( ) . send ( new PerformSync ( ) ) ; < nl > } < nl > < nl > private void performSync ( ) { < nl > + / / Ignoring syncing if not enabled < nl > + if ( ! config ( ) . isEnablePhoneBookImport ( ) ) { < nl > + return ; < nl > + } < nl > + < nl > if ( ENABLE _ LOG ) { < nl > Log . d ( TAG , " Checking sync . . . " ) ; < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 index 3a93114 . . dabd3e8 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / peers / PeerConnectionActor . java 
 @ @ - 37 , 13 + 37 , 8 @ @ public class PeerConnectionActor extends ModuleActor { 
 @ NotNull final WebRTCMediaStream mediaStream , 
 @ NotNull final PeerConnectionCallback callback , 
 @ NotNull final ModuleContext context ) { 
 - return new ActorCreator ( ) { 
 - @ Override 
 - public Actor create ( ) { 
 - return new PeerConnectionActor ( iceServers , selfSettings , theirSettings , mediaStream , 
 - callback , context ) ; 
 - } 
 - } ; 
 + return ( ) - > new PeerConnectionActor ( iceServers , selfSettings , theirSettings , mediaStream , 
 + callback , context ) ; 
 } 
 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java 
 index 5afcb7f . . 87a3a07 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / contacts / entity / BookImportStorage . java 
 @ @ - 9 , 8 + 9 , 8 @ @ import im . actor . runtime . bser . BserWriter ; 
 
 public class BookImportStorage extends BserObject { 
 
 - private HashSet < String > importedEmails = new HashSet < String > ( ) ; 
 - private HashSet < Long > importedPhones = new HashSet < Long > ( ) ; 
 + private HashSet < String > importedEmails = new HashSet < > ( ) ; 
 + private HashSet < Long > importedPhones = new HashSet < > ( ) ; 
 
 public BookImportStorage ( ) { 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java 
 index 7ea896e . . 34ed5dd 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / file / DownloadTask . java 
 @ @ - 38 , 7 + 38 , 7 @ @ public class DownloadTask extends ModuleActor { 
 private Cancellable notifyCancellable ; 
 
 private String fileUrl ; 
 - private int blockSize = 32 * 1024 ; 
 + private int blockSize = 128 * 1024 ; 
 private int blocksCount ; 
 private int nextBlock = 0 ; 
 private int currentDownloads = 0 ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java 
 index 9dadad9 . . ae5d15b 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ArchivedDialogsActor . java 
 @ @ - 60 , 23 + 60 , 11 @ @ public class ArchivedDialogsActor extends ModuleActor { 
 isLoading = true ; 
 
 Log . d ( TAG , " Loading archived dialogs " ) ; 
 - lastRequest = request ( new RequestLoadArchived ( nextOffset , LIMIT , ApiSupportConfiguration . OPTIMIZATIONS ) , 
 - new RpcCallback < ResponseLoadArchived > ( ) { 
 - @ Override 
 - public void onResult ( final ResponseLoadArchived response ) { 
 - updates ( ) . applyRelatedData ( response . getUsers ( ) , response . getGroups ( ) ) . then ( new Consumer < Void > ( ) { 
 - @ Override 
 - public void apply ( Void aVoid ) { 
 - onLoadedMore ( response ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( RpcException e ) { 
 - lastCallback . onError ( e ) ; 
 - } 
 - } ) ; 
 + api ( new RequestLoadArchived ( nextOffset , LIMIT , ApiSupportConfiguration . OPTIMIZATIONS ) ) 
 + . chain ( r - > updates ( ) . applyRelatedData ( r . getUsers ( ) , r . getGroups ( ) ) ) 
 + . chain ( r - > updates ( ) . loadRequiredPeers ( r . getUserPeers ( ) , r . getGroupPeers ( ) ) ) 
 + . then ( r - > onLoadedMore ( r ) ) 
 + . failure ( e - > lastCallback . onError ( ( RpcException ) e ) ) ; 
 } 
 
 private void onLoadedMore ( ResponseLoadArchived responseLoadArchiveds ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java 
 index e623b33 . . 691d5b6 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / history / ConversationHistoryActor . java 
 @ @ - 65 , 13 + 65 , 8 @ @ public class ConversationHistoryActor extends ModuleActor { 
 } 
 isLoading = true ; 
 api ( new RequestLoadHistory ( buidOutPeer ( peer ) , historyMaxDate , null , LIMIT , ApiSupportConfiguration . OPTIMIZATIONS ) ) 
 - . then ( new Consumer < ResponseLoadHistory > ( ) { 
 - @ Override 
 - public void apply ( ResponseLoadHistory responseLoadHistory ) { 
 - Log . d ( " ConversationHistory " , " Loaded ! " ) ; 
 - } 
 - } ) 
 - . flatMap ( applyRelated ( ) ) 
 + . chain ( r - > updates ( ) . applyRelatedData ( r . getUsers ( ) , r . getGroups ( ) ) ) 
 + . chain ( r - > updates ( ) . loadRequiredPeers ( r . getUserPeers ( ) , r . getGroupPeers ( ) ) ) 
 . then ( applyHistory ( peer ) ) 
 . then ( responseLoadHistory - > isLoading = false ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java 
 index 5310de6 . . 1b9ccc5 100755 
 - - - a / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - shared / src / main / java / im / actor / runtime / actors / dispatch / ActorDispatcher . java 
 @ @ - 40 , 12 + 40 , 7 @ @ public class ActorDispatcher { 
 this . name = name ; 
 this . actorSystem = actorSystem ; 
 this . dispatchers = new QueueDispatcher [ dispatchersCount ] ; 
 - final Consumer < Envelope > handler = new Consumer < Envelope > ( ) { 
 - @ Override 
 - public void apply ( Envelope envelope ) { 
 - processEnvelope ( envelope ) ; 
 - } 
 - } ; 
 + final Consumer < Envelope > handler = envelope - > processEnvelope ( envelope ) ; 
 for ( int i = 0 ; i < dispatchers . length ; i + + ) { 
 this . dispatchers [ i ] = new QueueDispatcher < > ( name + " _ " + i , priority , queueCollection , handler ) ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 index 01a0edb . . 63f9dd8 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / ActorSDK . swift 
 @ @ - 72 , 6 + 72 , 9 @ @ public class ActorSDK { 
 / / / Push token registration id . Required for sending push tokens 
 public var apiPushId : Int ? = nil 
 
 + / / / Enable phone book import 
 + public var enablePhoneBookImport = true 
 + 
 / / / Invitation URL for apps 
 public var inviteUrl : String = " https : / / actor . im / dl " 
 
 @ @ - 198 , 6 + 201 , 9 @ @ public class ActorSDK { 
 builder . setCustomAppName ( AALocalized ( appNameInLocStrings ) ) 
 } 
 
 + / / Config 
 + builder . setPhoneBookImportEnabled ( jboolean ( enablePhoneBookImport ) ) 
 + 
 / / Creating messenger 
 messenger = ACCocoaMessenger ( configuration : builder . build ( ) ) 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 index bf0da53 . . 1d73500 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Configuration . java 
 @ @ - 43 , 6 + 43 , 8 @ @ public class Configuration { 
 
 private String customAppName ; 
 
 + private boolean enablePhoneBookImport ; 
 + 
 Configuration ( ConnectionEndpoint [ ] endpoints , 
 PhoneBookProvider phoneBookProvider , 
 NotificationProvider notificationProvider , 
 @ @ - 59 , 7 + 61 , 8 @ @ public class Configuration { 
 String timeZone , 
 String [ ] preferredLanguages , 
 String customAppName , 
 - TrustedKey [ ] trustedKeys ) { 
 + TrustedKey [ ] trustedKeys , 
 + boolean enablePhoneBookImport ) { 
 this . endpoints = endpoints ; 
 this . phoneBookProvider = phoneBookProvider ; 
 this . enableContactsLogging = enableContactsLogging ; 
 @ @ - 77 , 6 + 80 , 16 @ @ public class Configuration { 
 this . preferredLanguages = preferredLanguages ; 
 this . customAppName = customAppName ; 
 this . trustedKeys = trustedKeys ; 
 + this . enablePhoneBookImport = enablePhoneBookImport ; 
 + } 
 + 
 + / * * 
 + * Getting if app automatically imports phone book to server 
 + * 
 + * @ return if phone book enabled 
 + * / 
 + public boolean isEnablePhoneBookImport ( ) { 
 + return enablePhoneBookImport ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 index a8a872d . . 8d1c65e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / ConfigurationBuilder . java 
 @ @ - 47 , 6 + 47 , 21 @ @ public class ConfigurationBuilder { 
 
 private String customAppName ; 
 
 + private boolean isPhoneBookImportEnabled = true ; 
 + 
 + / * * 
 + * Setting if application need to upload phone book to server 
 + * 
 + * @ param isPhoneBookImportEnabled enabled flag 
 + * @ return this 
 + * / 
 + @ NotNull 
 + @ ObjectiveCName ( " setPhoneBookImportEnabled : " ) 
 + public ConfigurationBuilder setPhoneBookImportEnabled ( boolean isPhoneBookImportEnabled ) { 
 + this . isPhoneBookImportEnabled = isPhoneBookImportEnabled ; 
 + return this ; 
 + } 
 + 
 / * * 
 * Adding Trusted key for protocol encryption securing 
 * 
 @ @ - 341 , 6 + 356 , 7 @ @ public class ConfigurationBuilder { 
 extensions . toArray ( new ConfigurationExtension [ extensions . size ( ) ] ) , 
 timeZone , preferredLanguages . toArray ( new String [ preferredLanguages . size ( ) ] ) , 
 customAppName , 
 - trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) ) ; 
 + trustedKeys . toArray ( new TrustedKey [ trustedKeys . size ( ) ] ) , 
 + isPhoneBookImportEnabled ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 1a36d66 . . a44d871 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 154 , 9 + 154 , 9 @ @ public class Messenger { 
 * @ return Command for execution 
 * / 
 @ NotNull 
 - @ ObjectiveCName ( " requestStartAuthCommandWithUserName : " ) 
 + @ ObjectiveCName ( " requestStartAnonymousAuthWithUserName : " ) 
 public Command < AuthState > requestStartAnonymousAuth ( String userName ) { 
 - return modules . getAuthModule ( ) . requestStartAnonumousAuth ( userName ) ; 
 + return modules . getAuthModule ( ) . requestStartAnonymousAuth ( userName ) ; 
 } 
 
 / * * 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 482e019 . . 5776d0f 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 116 , 7 + 116 , 7 @ @ public class Authentication { 
 } 
 } 
 
 - public Command < AuthState > requestStartAnonumousAuth ( final String userName ) { 
 + public Command < AuthState > requestStartAnonymousAuth ( final String userName ) { 
 return new Command < AuthState > ( ) { 
 @ Override 
 public void start ( final CommandCallback < AuthState > callback ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 index 2f23fc3 . . 2910480 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / contacts / BookImportActor . java 
 @ @ - 65 , 10 + 65 , 16 @ @ public class BookImportActor extends ModuleActor { 
 e . getLocalizedMessage ( ) ; 
 } 
 } 
 + 
 self ( ) . send ( new PerformSync ( ) ) ; 
 } 
 
 private void performSync ( ) { 
 + / / Ignoring syncing if not enabled 
 + if ( ! config ( ) . isEnablePhoneBookImport ( ) ) { 
 + return ; 
 + } 
 + 
 if ( ENABLE _ LOG ) { 
 Log . d ( TAG , " Checking sync . . . " ) ; 
 }
