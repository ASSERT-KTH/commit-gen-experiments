BLEU SCORE: 0.30130404892785684

TEST MSG: fix ( server : session ) : flush push buffer sizes on resending to new clients
GENERATED MSG: refactor ( server : session ) : log SeqUpdateTooLong

TEST DIFF (one line): diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > index 2fdcd1b . . 7eb3907 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > @ @ - 131 , 6 + 131 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > log . debug ( " New client , sending all scheduled for resend " ) < nl > < nl > this . mbQueue . clear ( ) < nl > + this . resendBufferSize = 0 < nl > + this . resendPushBufferSize = 0 < nl > < nl > this . newSessionBuffer foreach { < nl > case ( messageId , ni , scheduled ) ⇒
NEAREST DIFF (one line): diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > index 7f0485c . . e9f8313 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala < nl > @ @ - 250 , 6 + 250 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L < nl > } < nl > < nl > private def clearPushBuffer ( ) : Unit = { < nl > + log . debug ( " Push buffer exceeded , clearing and sending SeqUpdateTooLong " ) < nl > + < nl > pushBuffer foreach { < nl > case ( messageId , ( pi : PushItem , resend ) ) ⇒ < nl > pushBuffer - = messageId

TEST DIFF:
diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 index 2fdcd1b . . 7eb3907 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 @ @ - 131 , 6 + 131 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 log . debug ( " New client , sending all scheduled for resend " ) 
 
 this . mbQueue . clear ( ) 
 + this . resendBufferSize = 0 
 + this . resendPushBufferSize = 0 
 
 this . newSessionBuffer foreach { 
 case ( messageId , ni , scheduled ) ⇒

NEAREST DIFF:
diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 index 7f0485c . . e9f8313 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / Resender . scala 
 @ @ - 250 , 6 + 250 , 8 @ @ private [ session ] class ReSender ( authId : Long , sessionId : Long , firstMessageId : L 
 } 
 
 private def clearPushBuffer ( ) : Unit = { 
 + log . debug ( " Push buffer exceeded , clearing and sending SeqUpdateTooLong " ) 
 + 
 pushBuffer foreach { 
 case ( messageId , ( pi : PushItem , resend ) ) ⇒ 
 pushBuffer - = messageId
