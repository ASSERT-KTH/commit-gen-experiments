BLEU SCORE: 1.0

TEST MSG: refactor ( server : session ) : added messageId to log
GENERATED MSG: refactor ( server : session ) : added messageId to log

TEST DIFF (one line): diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala < nl > index 44d99c2 . . 6082872 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala < nl > @ @ - 84 , 7 + 84 , 7 @ @ private [ session ] class RpcHandler ( authId : Long , sessionId : Long , config : RpcConf < nl > val responseFuture = < nl > RequestCodec . decode ( requestBytes ) match { < nl > case Attempt . Successful ( DecodeResult ( request , _ ) ) ⇒ < nl > - log . debug ( " Request { } : { } , userId : { } " , messageId , request , userIdOpt ) < nl > + log . debug ( " Request messageId { } : { } , userId : { } " , messageId , request , userIdOpt ) < nl > < nl > val resultFuture = handleRequest ( request , clientData ) < nl > responseCache . put ( messageId , resultFuture )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala < nl > index d48e08f . . 669bf71 100644 < nl > - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala < nl > + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala < nl > @ @ - 125 , 7 + 125 , 7 @ @ private [ session ] class RpcHandler ( authId : Long , sessionId : Long , config : RpcConf < nl > enqueue ( Some ( rsp ) , messageId ) < nl > case ResponseFailure ( messageId , request , failure , clientData ) ⇒ < nl > markFailure { < nl > - log . error ( failure , " Failed to process request : { } " , request ) < nl > + log . error ( failure , " Failed to process request messageId : { } : { } " , messageId , request ) < nl > responseCache . invalidate ( messageId ) < nl > removeFromQueue ( messageId ) < nl > enqueue ( Some ( RpcErrors . InternalError ) , messageId )

TEST DIFF:
diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala 
 index 44d99c2 . . 6082872 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala 
 @ @ - 84 , 7 + 84 , 7 @ @ private [ session ] class RpcHandler ( authId : Long , sessionId : Long , config : RpcConf 
 val responseFuture = 
 RequestCodec . decode ( requestBytes ) match { 
 case Attempt . Successful ( DecodeResult ( request , _ ) ) ⇒ 
 - log . debug ( " Request { } : { } , userId : { } " , messageId , request , userIdOpt ) 
 + log . debug ( " Request messageId { } : { } , userId : { } " , messageId , request , userIdOpt ) 
 
 val resultFuture = handleRequest ( request , clientData ) 
 responseCache . put ( messageId , resultFuture )

NEAREST DIFF:
diff - - git a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala 
 index d48e08f . . 669bf71 100644 
 - - - a / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala 
 + + + b / actor - server / actor - session / src / main / scala / im / actor / server / session / RpcHandler . scala 
 @ @ - 125 , 7 + 125 , 7 @ @ private [ session ] class RpcHandler ( authId : Long , sessionId : Long , config : RpcConf 
 enqueue ( Some ( rsp ) , messageId ) 
 case ResponseFailure ( messageId , request , failure , clientData ) ⇒ 
 markFailure { 
 - log . error ( failure , " Failed to process request : { } " , request ) 
 + log . error ( failure , " Failed to process request messageId : { } : { } " , messageId , request ) 
 responseCache . invalidate ( messageId ) 
 removeFromQueue ( messageId ) 
 enqueue ( Some ( RpcErrors . InternalError ) , messageId )
