BLEU SCORE: 0.2777619034011791

TEST MSG: fix ( server ) : fixed aspectj - weaver dependency
GENERATED MSG: deps ( server ) : removed dependency on Kryo

TEST DIFF (one line): diff - - git a / actor - server / notes / 1 . 0 . 66 . markdown b / actor - server / notes / 1 . 0 . 66 . markdown < nl > new file mode 100644 < nl > index 0000000 . . 6672631 < nl > - - - / dev / null < nl > + + + b / actor - server / notes / 1 . 0 . 66 . markdown < nl > @ @ - 0 , 0 + 1 @ @ < nl > + * fixed aspectj - weaver dependency < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 9101cac . . 3203755 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 118 , 7 + 118 , 7 @ @ object Dependencies { < nl > val shared = Seq ( configs , javaCompat , logbackClassic , scalaLogging , tyrex , kamon , kamonDatadog ) < nl > < nl > val root = shared + + Seq ( < nl > - akkaSlf4j , akkaActor , akkaStream , aspectj < nl > + akkaSlf4j , akkaActor , akkaStream < nl > ) < nl > < nl > val activation = shared + + Seq ( akkaActor , sprayClient , playJson ) < nl > @ @ - 186 , 7 + 186 , 7 @ @ object Dependencies { < nl > < nl > val notifications = shared + + Seq ( akkaClusterTools , slick ) < nl > < nl > - val sdk = Seq . empty < nl > + val sdk = Seq ( aspectj ) < nl > < nl > val runtime = shared + + Seq ( akkaActor , akkaHttp , akkaStream , akkaPersistenceJdbc , caffeine , cats , concmap , jodaConvert , jodaTime , libPhoneNumber , scalapbSer , scalazCore , akkaTestkit % " test " , scalatest % " test " )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - commons - base / src / main / scala / im / actor / server / commons / serialization / BaseSerializer . scala b / actor - server / actor - commons - base / src / main / scala / im / actor / server / commons / serialization / BaseSerializer . scala < nl > deleted file mode 100644 < nl > index 20c52cd . . 0000000 < nl > - - - a / actor - server / actor - commons - base / src / main / scala / im / actor / server / commons / serialization / BaseSerializer . scala < nl > + + + / dev / null < nl > @ @ - 1 , 20 + 0 , 0 @ @ < nl > - package im . actor . server . commons . serialization < nl > - < nl > - import scala . collection . JavaConversions . _ < nl > - < nl > - import com . esotericsoftware . kryo . Kryo < nl > - import com . esotericsoftware . kryo . serializers . TaggedFieldSerializer < nl > - import com . typesafe . config . ConfigFactory < nl > - < nl > - class KryoInit { < nl > - def customize ( kryo : Kryo ) : Unit = { < nl > - ConfigFactory . load ( ) . getConfig ( " akka . actor . kryo . tagged - mappings " ) . root . unwrapped ( ) foreach { < nl > - case ( className , id : java . lang . Integer ) ⇒ < nl > - val clazz : Class [ _ < : AnyRef ] = Class . forName ( className ) . asInstanceOf [ Class [ _ < : AnyRef ] ] < nl > - val serializer = new TaggedFieldSerializer ( kryo , clazz ) < nl > - kryo . register ( clazz , serializer , id ) < nl > - } < nl > - } < nl > - } < nl > - < nl > - trait KryoSerializable extends Serializable < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 5443454 . . e7b5e0b 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 51 , 9 + 51 , 6 @ @ object Dependencies { < nl > < nl > val libPhoneNumber = " com . googlecode . libphonenumber " % " libphonenumber " % " 7 . 0 . + " < nl > < nl > - val akkaKryoSerialization = " com . github . romix . akka " % % " akka - kryo - serialization " % " 0 . 3 . 3 " < nl > - val kryoSerializers = " de . javakaffee " % " kryo - serializers " % " 0 . 29 " < nl > - < nl > val protobuf = " com . google . protobuf " % " protobuf - java " % " 2 . 6 . 1 " < nl > < nl > val scodecBits = " org . scodec " % % " scodec - bits " % " 1 . 0 . 9 " < nl > @ @ - 102 , 7 + 99 , 7 @ @ object Dependencies { < nl > < nl > val activation = shared + + Seq ( akkaActor , akkaHttp , playJson ) < nl > < nl > - val commonsBase = shared + + Seq ( akkaActor , akkaPersistenceJdbc , akkaKryoSerialization , concmap , jodaConvert , jodaTime , kryoSerializers ) < nl > + val commonsBase = shared + + Seq ( akkaActor , akkaPersistenceJdbc , concmap , jodaConvert , jodaTime ) < nl > < nl > val commonsApi = shared + + Seq ( akkaSlf4j , akkaActor , akkaStream , apacheCommonsCodec , protobuf , scalazCore )

TEST DIFF:
diff - - git a / actor - server / notes / 1 . 0 . 66 . markdown b / actor - server / notes / 1 . 0 . 66 . markdown 
 new file mode 100644 
 index 0000000 . . 6672631 
 - - - / dev / null 
 + + + b / actor - server / notes / 1 . 0 . 66 . markdown 
 @ @ - 0 , 0 + 1 @ @ 
 + * fixed aspectj - weaver dependency 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 9101cac . . 3203755 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 118 , 7 + 118 , 7 @ @ object Dependencies { 
 val shared = Seq ( configs , javaCompat , logbackClassic , scalaLogging , tyrex , kamon , kamonDatadog ) 
 
 val root = shared + + Seq ( 
 - akkaSlf4j , akkaActor , akkaStream , aspectj 
 + akkaSlf4j , akkaActor , akkaStream 
 ) 
 
 val activation = shared + + Seq ( akkaActor , sprayClient , playJson ) 
 @ @ - 186 , 7 + 186 , 7 @ @ object Dependencies { 
 
 val notifications = shared + + Seq ( akkaClusterTools , slick ) 
 
 - val sdk = Seq . empty 
 + val sdk = Seq ( aspectj ) 
 
 val runtime = shared + + Seq ( akkaActor , akkaHttp , akkaStream , akkaPersistenceJdbc , caffeine , cats , concmap , jodaConvert , jodaTime , libPhoneNumber , scalapbSer , scalazCore , akkaTestkit % " test " , scalatest % " test " )

NEAREST DIFF:
diff - - git a / actor - server / actor - commons - base / src / main / scala / im / actor / server / commons / serialization / BaseSerializer . scala b / actor - server / actor - commons - base / src / main / scala / im / actor / server / commons / serialization / BaseSerializer . scala 
 deleted file mode 100644 
 index 20c52cd . . 0000000 
 - - - a / actor - server / actor - commons - base / src / main / scala / im / actor / server / commons / serialization / BaseSerializer . scala 
 + + + / dev / null 
 @ @ - 1 , 20 + 0 , 0 @ @ 
 - package im . actor . server . commons . serialization 
 - 
 - import scala . collection . JavaConversions . _ 
 - 
 - import com . esotericsoftware . kryo . Kryo 
 - import com . esotericsoftware . kryo . serializers . TaggedFieldSerializer 
 - import com . typesafe . config . ConfigFactory 
 - 
 - class KryoInit { 
 - def customize ( kryo : Kryo ) : Unit = { 
 - ConfigFactory . load ( ) . getConfig ( " akka . actor . kryo . tagged - mappings " ) . root . unwrapped ( ) foreach { 
 - case ( className , id : java . lang . Integer ) ⇒ 
 - val clazz : Class [ _ < : AnyRef ] = Class . forName ( className ) . asInstanceOf [ Class [ _ < : AnyRef ] ] 
 - val serializer = new TaggedFieldSerializer ( kryo , clazz ) 
 - kryo . register ( clazz , serializer , id ) 
 - } 
 - } 
 - } 
 - 
 - trait KryoSerializable extends Serializable 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 5443454 . . e7b5e0b 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 51 , 9 + 51 , 6 @ @ object Dependencies { 
 
 val libPhoneNumber = " com . googlecode . libphonenumber " % " libphonenumber " % " 7 . 0 . + " 
 
 - val akkaKryoSerialization = " com . github . romix . akka " % % " akka - kryo - serialization " % " 0 . 3 . 3 " 
 - val kryoSerializers = " de . javakaffee " % " kryo - serializers " % " 0 . 29 " 
 - 
 val protobuf = " com . google . protobuf " % " protobuf - java " % " 2 . 6 . 1 " 
 
 val scodecBits = " org . scodec " % % " scodec - bits " % " 1 . 0 . 9 " 
 @ @ - 102 , 7 + 99 , 7 @ @ object Dependencies { 
 
 val activation = shared + + Seq ( akkaActor , akkaHttp , playJson ) 
 
 - val commonsBase = shared + + Seq ( akkaActor , akkaPersistenceJdbc , akkaKryoSerialization , concmap , jodaConvert , jodaTime , kryoSerializers ) 
 + val commonsBase = shared + + Seq ( akkaActor , akkaPersistenceJdbc , concmap , jodaConvert , jodaTime ) 
 
 val commonsApi = shared + + Seq ( akkaSlf4j , akkaActor , akkaStream , apacheCommonsCodec , protobuf , scalazCore )
