BLEU SCORE: 0.17203390873009322

TEST MSG: fix ( android ) : save auth state
GENERATED MSG: chore ( core + android ) : remove email sign

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java < nl > index 493706e . . bbe4e06 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java < nl > @ @ - 1 , 5 + 1 , 6 @ @ < nl > package im . actor . tour ; < nl > < nl > + import android . content . Context ; < nl > import android . graphics . drawable . StateListDrawable ; < nl > import android . os . Build ; < nl > import android . os . Bundle ; < nl > @ @ - 29 , 6 + 30 , 16 @ @ public class TourActivity extends ActionBarActivity { < nl > private int contentTopPadding ; < nl > < nl > @ Override < nl > + protected void onStart ( ) { < nl > + super . onStart ( ) ; < nl > + String authState = getSharedPreferences ( " properties . ini " , Context . MODE _ PRIVATE ) . getString ( " auth _ state " , null ) ; < nl > + if ( authState ! = null & & ! authState . equals ( " SIGN _ UP " ) & & ! authState . equals ( " AUTH _ START " ) ) { < nl > + ActorSDK . sharedActor ( ) . startMessagingApp ( this ) ; < nl > + finish ( ) ; < nl > + } < nl > + } < nl > + < nl > + @ Override < nl > protected void onCreate ( Bundle savedInstanceState ) { < nl > super . onCreate ( savedInstanceState ) ; < nl > setContentView ( R . layout . tour _ activity ) ; < nl > @ @ - 62 , 7 + 73 , 7 @ @ public class TourActivity extends ActionBarActivity { < nl > public void onClick ( View v ) { < nl > Bundle authExtras = new Bundle ( ) ; < nl > authExtras . putInt ( AuthActivity . SIGN _ TYPE _ KEY , AuthActivity . SIGN _ TYPE _ UP ) ; < nl > - ActorSDK . sharedActor ( ) . getActivityManager ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; < nl > + ActorSDK . sharedActor ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; < nl > finish ( ) ; < nl > < nl > } < nl > @ @ - 73 , 7 + 84 , 7 @ @ public class TourActivity extends ActionBarActivity { < nl > public void onClick ( View v ) { < nl > Bundle authExtras = new Bundle ( ) ; < nl > authExtras . putInt ( AuthActivity . SIGN _ TYPE _ KEY , AuthActivity . SIGN _ TYPE _ IN ) ; < nl > - ActorSDK . sharedActor ( ) . getActivityManager ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; < nl > + ActorSDK . sharedActor ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; < nl > finish ( ) ; < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > index 3a2a672 . . 686cfbe 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java < nl > @ @ - 47 , 7 + 47 , 6 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > private int availableAuthType = AUTH _ TYPE _ PHONE ; < nl > private int currentAuthType = AUTH _ TYPE _ PHONE ; < nl > private int signType ; < nl > - private BaseAuthFragment signFragment ; < nl > private long currentPhone ; < nl > private String currentEmail ; < nl > private String transactionHash ; < nl > @ @ - 66 , 20 + 65 , 20 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > return new Actor ( ) ; < nl > } < nl > } ) , " actor / auth _ promises _ actor " ) ; < nl > + < nl > signType = getIntent ( ) . getIntExtra ( SIGN _ TYPE _ KEY , SIGN _ TYPE _ IN ) ; < nl > - if ( savedInstanceState = = null ) { < nl > - updateState ( AuthState . AUTH _ START ) ; < nl > - } else { < nl > - currentPhone = savedInstanceState . getLong ( " currentPhone " , 0 ) ; < nl > - currentEmail = savedInstanceState . getString ( " currentEmail " ) ; < nl > - transactionHash = savedInstanceState . getString ( " transactionHash " ) ; < nl > - currentCode = savedInstanceState . getString ( " currentCode " ) ; < nl > - isRegistered = savedInstanceState . getBoolean ( " isRegistered " , false ) ; < nl > - currentName = savedInstanceState . getString ( " currentName " ) ; < nl > - signType = savedInstanceState . getInt ( " signType " , SIGN _ TYPE _ UP ) ; < nl > - state = Enum . valueOf ( AuthState . class , savedInstanceState . getString ( " state " , " AUTH _ START " ) ) ; < nl > - updateState ( state ) ; < nl > - } < nl > + < nl > + PreferencesStorage preferences = messenger ( ) . getPreferences ( ) ; < nl > + currentPhone = preferences . getLong ( " currentPhone " , 0 ) ; < nl > + currentEmail = preferences . getString ( " currentEmail " ) ; < nl > + transactionHash = preferences . getString ( " transactionHash " ) ; < nl > + currentCode = preferences . getString ( " currentCode " ) ; < nl > + isRegistered = preferences . getBool ( " isRegistered " , false ) ; < nl > + currentName = preferences . getString ( " currentName " ) ; < nl > + signType = preferences . getInt ( " signType " , signType ) ; < nl > + String savedState = preferences . getString ( " auth _ state " ) ; < nl > + state = Enum . valueOf ( AuthState . class , savedState ! = null ? savedState : " AUTH _ START " ) ; < nl > + updateState ( state , true ) ; < nl > } < nl > < nl > < nl > @ @ - 99 , 6 + 98 , 15 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > if ( this . state ! = null & & ( this . state = = state & & ! force ) ) { < nl > return ; < nl > } < nl > + PreferencesStorage preferences = messenger ( ) . getPreferences ( ) ; < nl > + preferences . putLong ( " currentPhone " , currentPhone ) ; < nl > + preferences . putString ( " currentEmail " , currentEmail ) ; < nl > + preferences . putString ( " transactionHash " , transactionHash ) ; < nl > + preferences . putString ( " currentCode " , currentCode ) ; < nl > + preferences . putBool ( " isRegistered " , isRegistered ) ; < nl > + preferences . putString ( " currentName " , currentName ) ; < nl > + preferences . putInt ( " signType " , signType ) ; < nl > + preferences . putString ( " auth _ state " , state . toString ( ) ) ; < nl > < nl > / / if we show the next fragment when app is in background and not visible , app crashes ! < nl > / / e . g when the GSM data is off and after trying to send code we go to settings to turn on , app is going invisible and . . . < nl > @ @ - 127 , 11 + 135 , 11 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > break ; < nl > case AUTH _ PHONE : < nl > currentAuthType = AUTH _ TYPE _ PHONE ; < nl > - showFragment ( signFragment , false , false ) ; < nl > + showFragment ( ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignPhoneFragment ( ) , BaseAuthFragment . class ) , false , false ) ; < nl > break ; < nl > case AUTH _ EMAIL : < nl > currentAuthType = AUTH _ TYPE _ EMAIL ; < nl > - showFragment ( signFragment , false , false ) ; < nl > + showFragment ( ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignEmailFragment ( ) , BaseAuthFragment . class ) , false , false ) ; < nl > break ; < nl > case CODE _ VALIDATION _ PHONE : < nl > case CODE _ VALIDATION _ EMAIL : < nl > @ @ - 155 , 21 + 163 , 15 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > currentName = name ; < nl > currentSex = Sex . UNKNOWN ; < nl > availableAuthType = ActorSDK . sharedActor ( ) . getAuthType ( ) ; < nl > - BaseAuthFragment baseAuthFragment ; < nl > AuthState authState ; < nl > if ( ( availableAuthType & AUTH _ TYPE _ PHONE ) = = AUTH _ TYPE _ PHONE ) { < nl > - baseAuthFragment = new SignPhoneFragment ( ) ; < nl > authState = AuthState . AUTH _ PHONE ; < nl > } else if ( ( availableAuthType & AUTH _ TYPE _ EMAIL ) = = AUTH _ TYPE _ EMAIL ) { < nl > - baseAuthFragment = new SignEmailFragment ( ) ; < nl > authState = AuthState . AUTH _ EMAIL ; < nl > } else { < nl > / / none of valid auth types selected - force crash ? < nl > return ; < nl > } < nl > - < nl > - signFragment = ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , baseAuthFragment , BaseAuthFragment . class ) ; < nl > - < nl > updateState ( authState ) ; < nl > } < nl > < nl > @ @ - 401 , 12 + 403 , 10 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > } < nl > < nl > public void switchToEmailAuth ( ) { < nl > - signFragment = ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignEmailFragment ( ) , BaseAuthFragment . class ) ; < nl > updateState ( AuthState . AUTH _ EMAIL ) ; < nl > } < nl > < nl > public void switchToPhoneAuth ( ) { < nl > - signFragment = ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignPhoneFragment ( ) , BaseAuthFragment . class ) ; < nl > updateState ( AuthState . AUTH _ PHONE ) ; < nl > } < nl > < nl > @ @ - 422 , 18 + 422 , 6 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > updateState ( AuthState . AUTH _ START , true ) ; < nl > } < nl > < nl > - @ Override < nl > - protected void onSaveInstanceState ( Bundle outState ) { < nl > - super . onSaveInstanceState ( outState ) ; < nl > - outState . putLong ( " currentPhone " , currentPhone ) ; < nl > - outState . putString ( " currentEmail " , currentEmail ) ; < nl > - outState . putString ( " transactionHash " , transactionHash ) ; < nl > - outState . putString ( " currentCode " , currentCode ) ; < nl > - outState . putBoolean ( " isRegistered " , isRegistered ) ; < nl > - outState . putString ( " currentName " , currentName ) ; < nl > - outState . putInt ( " signType " , signType ) ; < nl > - outState . putString ( " state " , state . toString ( ) ) ; < nl > - } < nl > < nl > public void showProgress ( ) { < nl > dismissProgress ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java < nl > index b12bee5 . . d0a8281 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java < nl > @ @ - 34 , 6 + 34 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > public abstract class BaseAuthFragment extends BaseFragment { < nl > < nl > private static final int PERMISSIONS _ REQUEST _ ACCOUNT = 1 ; < nl > + public static final boolean USE _ SUGGESTED _ EMAIL = false ; < nl > private EditText edittextToFill ; < nl > public BaseAuthFragment ( ) { < nl > < nl > @ @ - 89 , 13 + 90 , 15 @ @ public abstract class BaseAuthFragment extends BaseFragment { < nl > } < nl > < nl > protected void setSuggestedEmail ( EditText et ) { < nl > - edittextToFill = et ; < nl > - if ( ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . GET _ ACCOUNTS ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > - requestPermissions ( new String [ ] { Manifest . permission . GET _ ACCOUNTS } , < nl > - PERMISSIONS _ REQUEST _ ACCOUNT ) ; < nl > - < nl > - } else { < nl > - et . setText ( getSuggestedEmailChecked ( ) ) ; < nl > + if ( USE _ SUGGESTED _ EMAIL ) { < nl > + edittextToFill = et ; < nl > + if ( ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . GET _ ACCOUNTS ) ! = PackageManager . PERMISSION _ GRANTED ) { < nl > + requestPermissions ( new String [ ] { Manifest . permission . GET _ ACCOUNTS } , < nl > + PERMISSIONS _ REQUEST _ ACCOUNT ) ; < nl > + < nl > + } else { < nl > + et . setText ( getSuggestedEmailChecked ( ) ) ; < nl > + } < nl > } < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java < nl > index 27dafc9 . . 6d9e303 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java < nl > @ @ - 81 , 20 + 81 , 14 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > switch ( state ) { < nl > case AUTH _ START : < nl > signFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . getSignFragment ( ) ; < nl > - if ( signFragment instanceof SignEmailFragment ) { < nl > - authType = AUTH _ TYPE _ EMAIL ; < nl > - } else if ( signFragment instanceof SignPhoneFragment ) { < nl > + < nl > + if ( signFragment instanceof SignPhoneFragment ) { < nl > authType = AUTH _ TYPE _ PHONE ; < nl > } else { < nl > authType = AUTH _ TYPE _ CUSTOM ; < nl > } < nl > showFragment ( signFragment , false , false ) ; < nl > break ; < nl > - case AUTH _ EMAIL : < nl > - signFragment = new SignEmailFragment ( ) ; < nl > - showFragment ( signFragment , false , false ) ; < nl > - authType = AUTH _ TYPE _ EMAIL ; < nl > - break ; < nl > case AUTH _ PHONE : < nl > signFragment = new SignPhoneFragment ( ) ; < nl > showFragment ( signFragment , false , false ) ; < nl > @ @ - 102 , 14 + 96 , 10 @ @ public class AuthActivity extends BaseFragmentActivity { < nl > break ; < nl > case CODE _ VALIDATION _ CUSTOM : < nl > case CODE _ VALIDATION _ PHONE : < nl > - case CODE _ VALIDATION _ EMAIL : < nl > - if ( ( state = = AuthState . CODE _ VALIDATION _ EMAIL & & authType = = AUTH _ TYPE _ PHONE ) | | ( state = = AuthState . CODE _ VALIDATION _ PHONE & & authType = = AUTH _ TYPE _ EMAIL ) ) { < nl > - updateState ( AuthState . AUTH _ START ) ; < nl > - break ; < nl > - } < nl > + < nl > Fragment signInFragment = new SignInFragment ( ) ; < nl > Bundle args = new Bundle ( ) ; < nl > - args . putString ( " authType " , state = = AuthState . CODE _ VALIDATION _ EMAIL ? SignInFragment . AUTH _ TYPE _ EMAIL : SignInFragment . AUTH _ TYPE _ PHONE ) ; < nl > + args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ PHONE ) ; < nl > if ( state = = AuthState . CODE _ VALIDATION _ CUSTOM ) { < nl > args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ CUSTOM ) ; < nl > args . putString ( " authId " , signFragment . getAuthId ( ) ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / SignEmailFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / SignEmailFragment . java < nl > deleted file mode 100644 < nl > index 7be97a2 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / SignEmailFragment . java < nl > + + + / dev / null < nl > @ @ - 1 , 136 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . fragment . auth ; < nl > - < nl > - import android . app . AlertDialog ; < nl > - import android . graphics . drawable . StateListDrawable ; < nl > - import android . os . Bundle ; < nl > - import android . telephony . PhoneNumberFormattingTextWatcher ; < nl > - import android . text . Editable ; < nl > - import android . text . TextWatcher ; < nl > - import android . view . KeyEvent ; < nl > - import android . view . LayoutInflater ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . view . inputmethod . EditorInfo ; < nl > - import android . widget . EditText ; < nl > - import android . widget . TextView ; < nl > - < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . util . Fonts ; < nl > - import im . actor . sdk . util . KeyboardHelper ; < nl > - import im . actor . sdk . view . SelectorFactory ; < nl > - < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - < nl > - public class SignEmailFragment extends BaseAuthFragment { < nl > - < nl > - private EditText emailEditText ; < nl > - private KeyboardHelper keyboardHelper ; < nl > - < nl > - @ Override < nl > - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > - View v = inflater . inflate ( R . layout . fragment _ sign _ email , container , false ) ; < nl > - < nl > - TextView buttonCotinueText = ( TextView ) v . findViewById ( R . id . button _ continue _ text ) ; < nl > - StateListDrawable states = SelectorFactory . get ( ActorSDK . sharedActor ( ) . style . getMainColor ( ) , getActivity ( ) ) ; < nl > - buttonCotinueText . setBackgroundDrawable ( states ) ; < nl > - buttonCotinueText . setTypeface ( Fonts . medium ( ) ) ; < nl > - buttonCotinueText . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryInvColor ( ) ) ; < nl > - < nl > - keyboardHelper = new KeyboardHelper ( getActivity ( ) ) ; < nl > - < nl > - initView ( v ) ; < nl > - < nl > - return v ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onResume ( ) { < nl > - super . onResume ( ) ; < nl > - < nl > - / / TODO track email auth open < nl > - / / messenger ( ) . trackAuthPhoneOpen ( ) ; < nl > - < nl > - setTitle ( R . string . auth _ email _ title ) ; < nl > - < nl > - focusEmail ( ) ; < nl > - < nl > - keyboardHelper . setImeVisibility ( emailEditText , true ) ; < nl > - } < nl > - < nl > - private void initView ( View v ) { < nl > - ( ( TextView ) v . findViewById ( R . id . email _ login _ hint ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > - emailEditText = ( EditText ) v . findViewById ( R . id . tv _ email ) ; < nl > - emailEditText . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; < nl > - emailEditText . addTextChangedListener ( new PhoneNumberFormattingTextWatcher ( ) ) ; < nl > - String email = messenger ( ) . getAuthEmail ( ) ; < nl > - if ( email ! = null & & ! email . isEmpty ( ) ) { < nl > - emailEditText . setText ( email ) ; < nl > - } < nl > - emailEditText . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { < nl > - @ Override < nl > - public boolean onEditorAction ( TextView textView , int id , KeyEvent keyEvent ) { < nl > - if ( id = = EditorInfo . IME _ ACTION _ GO ) { < nl > - requestCode ( ) ; < nl > - return true ; < nl > - } < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - emailEditText . addTextChangedListener ( new TextWatcher ( ) { < nl > - @ Override < nl > - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onTextChanged ( CharSequence s , int start , int before , int count ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void afterTextChanged ( Editable s ) { < nl > - / / TODO trackAuthEmailType < nl > - / / messenger ( ) . trackAuthPhoneType ( emailEditText . getText ( ) . toString ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - onClick ( v , R . id . button _ continue , new View . OnClickListener ( ) { < nl > - @ Override < nl > - public void onClick ( View view ) { < nl > - requestCode ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - private void requestCode ( ) { < nl > - final String ACTION = " Request code email " ; < nl > - < nl > - < nl > - if ( emailEditText . getText ( ) . toString ( ) . trim ( ) . length ( ) = = 0 ) { < nl > - String message = getString ( R . string . auth _ error _ empty _ email ) ; < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( R . string . auth _ error _ empty _ email ) < nl > - . setPositiveButton ( R . string . dialog _ ok , null ) < nl > - . show ( ) ; < nl > - return ; < nl > - } < nl > - < nl > - String rawEmail = emailEditText . getText ( ) . toString ( ) ; < nl > - < nl > - if ( rawEmail . length ( ) = = 0 ) { < nl > - String message = getString ( R . string . auth _ error _ empty _ email ) ; < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( R . string . auth _ error _ empty _ email ) < nl > - . setPositiveButton ( R . string . dialog _ ok , null ) < nl > - . show ( ) ; < nl > - return ; < nl > - } < nl > - executeAuth ( messenger ( ) . requestStartEmailAuth ( rawEmail ) , ACTION ) ; < nl > - } < nl > - < nl > - private void focusEmail ( ) { < nl > - focus ( emailEditText ) ; < nl > - } < nl > - < nl > - } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index ec6d9d5 . . 6c0c169 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 117 , 18 + 117 , 6 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > - * Request email auth < nl > - * < nl > - * @ param email email to authenticate < nl > - * @ return Command for execution < nl > - * / < nl > - @ NotNull < nl > - @ ObjectiveCName ( " requestStartAuthCommandWithEmail : " ) < nl > - public Command < AuthState > requestStartEmailAuth ( final String email ) { < nl > - return modules . getAuthModule ( ) . requestStartEmailAuth ( email ) ; < nl > - } < nl > - < nl > - / * * < nl > * Request phone auth < nl > * < nl > * @ param phone phone to authenticate < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > index 93f8478 . . df1173e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java < nl > @ @ - 110 , 56 + 110 , 6 @ @ public class Authentication { < nl > } < nl > } < nl > < nl > - public Command < AuthState > requestStartEmailAuth ( final String email ) { < nl > - return new Command < AuthState > ( ) { < nl > - @ Override < nl > - public void start ( final CommandCallback < AuthState > callback ) { < nl > - ArrayList < String > langs = new ArrayList < String > ( ) ; < nl > - for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { < nl > - langs . add ( s ) ; < nl > - } < nl > - request ( new RequestStartEmailAuth ( email , < nl > - apiConfiguration . getAppId ( ) , < nl > - apiConfiguration . getAppKey ( ) , < nl > - deviceHash , < nl > - apiConfiguration . getDeviceTitle ( ) , < nl > - modules . getConfiguration ( ) . getTimeZone ( ) , < nl > - langs < nl > - ) , new RpcCallback < ResponseStartEmailAuth > ( ) { < nl > - @ Override < nl > - public void onResult ( ResponseStartEmailAuth response ) { < nl > - modules . getPreferences ( ) . putString ( KEY _ EMAIL , email ) ; < nl > - modules . getPreferences ( ) . putString ( KEY _ TRANSACTION _ HASH , response . getTransactionHash ( ) ) ; < nl > - < nl > - ApiEmailActivationType emailActivationType = response . getActivationType ( ) ; < nl > - if ( emailActivationType . equals ( ApiEmailActivationType . OAUTH2 ) ) { < nl > - state = AuthState . GET _ OAUTH _ PARAMS ; < nl > - } else if ( emailActivationType . equals ( ApiEmailActivationType . CODE ) ) { < nl > - state = AuthState . CODE _ VALIDATION _ EMAIL ; < nl > - } < nl > - < nl > - im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - callback . onResult ( state ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( final RpcException e ) { < nl > - im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - callback . onError ( e ) ; < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } ; < nl > - } < nl > < nl > public Command < AuthState > requestStartPhoneAuth ( final long phone ) { < nl > return new Command < AuthState > ( ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java 
 index 493706e . . bbe4e06 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / tour / TourActivity . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package im . actor . tour ; 
 
 + import android . content . Context ; 
 import android . graphics . drawable . StateListDrawable ; 
 import android . os . Build ; 
 import android . os . Bundle ; 
 @ @ - 29 , 6 + 30 , 16 @ @ public class TourActivity extends ActionBarActivity { 
 private int contentTopPadding ; 
 
 @ Override 
 + protected void onStart ( ) { 
 + super . onStart ( ) ; 
 + String authState = getSharedPreferences ( " properties . ini " , Context . MODE _ PRIVATE ) . getString ( " auth _ state " , null ) ; 
 + if ( authState ! = null & & ! authState . equals ( " SIGN _ UP " ) & & ! authState . equals ( " AUTH _ START " ) ) { 
 + ActorSDK . sharedActor ( ) . startMessagingApp ( this ) ; 
 + finish ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 super . onCreate ( savedInstanceState ) ; 
 setContentView ( R . layout . tour _ activity ) ; 
 @ @ - 62 , 7 + 73 , 7 @ @ public class TourActivity extends ActionBarActivity { 
 public void onClick ( View v ) { 
 Bundle authExtras = new Bundle ( ) ; 
 authExtras . putInt ( AuthActivity . SIGN _ TYPE _ KEY , AuthActivity . SIGN _ TYPE _ UP ) ; 
 - ActorSDK . sharedActor ( ) . getActivityManager ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; 
 + ActorSDK . sharedActor ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; 
 finish ( ) ; 
 
 } 
 @ @ - 73 , 7 + 84 , 7 @ @ public class TourActivity extends ActionBarActivity { 
 public void onClick ( View v ) { 
 Bundle authExtras = new Bundle ( ) ; 
 authExtras . putInt ( AuthActivity . SIGN _ TYPE _ KEY , AuthActivity . SIGN _ TYPE _ IN ) ; 
 - ActorSDK . sharedActor ( ) . getActivityManager ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; 
 + ActorSDK . sharedActor ( ) . startAuthActivity ( TourActivity . this , authExtras ) ; 
 finish ( ) ; 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 index 3a2a672 . . 686cfbe 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / AuthActivity . java 
 @ @ - 47 , 7 + 47 , 6 @ @ public class AuthActivity extends BaseFragmentActivity { 
 private int availableAuthType = AUTH _ TYPE _ PHONE ; 
 private int currentAuthType = AUTH _ TYPE _ PHONE ; 
 private int signType ; 
 - private BaseAuthFragment signFragment ; 
 private long currentPhone ; 
 private String currentEmail ; 
 private String transactionHash ; 
 @ @ - 66 , 20 + 65 , 20 @ @ public class AuthActivity extends BaseFragmentActivity { 
 return new Actor ( ) ; 
 } 
 } ) , " actor / auth _ promises _ actor " ) ; 
 + 
 signType = getIntent ( ) . getIntExtra ( SIGN _ TYPE _ KEY , SIGN _ TYPE _ IN ) ; 
 - if ( savedInstanceState = = null ) { 
 - updateState ( AuthState . AUTH _ START ) ; 
 - } else { 
 - currentPhone = savedInstanceState . getLong ( " currentPhone " , 0 ) ; 
 - currentEmail = savedInstanceState . getString ( " currentEmail " ) ; 
 - transactionHash = savedInstanceState . getString ( " transactionHash " ) ; 
 - currentCode = savedInstanceState . getString ( " currentCode " ) ; 
 - isRegistered = savedInstanceState . getBoolean ( " isRegistered " , false ) ; 
 - currentName = savedInstanceState . getString ( " currentName " ) ; 
 - signType = savedInstanceState . getInt ( " signType " , SIGN _ TYPE _ UP ) ; 
 - state = Enum . valueOf ( AuthState . class , savedInstanceState . getString ( " state " , " AUTH _ START " ) ) ; 
 - updateState ( state ) ; 
 - } 
 + 
 + PreferencesStorage preferences = messenger ( ) . getPreferences ( ) ; 
 + currentPhone = preferences . getLong ( " currentPhone " , 0 ) ; 
 + currentEmail = preferences . getString ( " currentEmail " ) ; 
 + transactionHash = preferences . getString ( " transactionHash " ) ; 
 + currentCode = preferences . getString ( " currentCode " ) ; 
 + isRegistered = preferences . getBool ( " isRegistered " , false ) ; 
 + currentName = preferences . getString ( " currentName " ) ; 
 + signType = preferences . getInt ( " signType " , signType ) ; 
 + String savedState = preferences . getString ( " auth _ state " ) ; 
 + state = Enum . valueOf ( AuthState . class , savedState ! = null ? savedState : " AUTH _ START " ) ; 
 + updateState ( state , true ) ; 
 } 
 
 
 @ @ - 99 , 6 + 98 , 15 @ @ public class AuthActivity extends BaseFragmentActivity { 
 if ( this . state ! = null & & ( this . state = = state & & ! force ) ) { 
 return ; 
 } 
 + PreferencesStorage preferences = messenger ( ) . getPreferences ( ) ; 
 + preferences . putLong ( " currentPhone " , currentPhone ) ; 
 + preferences . putString ( " currentEmail " , currentEmail ) ; 
 + preferences . putString ( " transactionHash " , transactionHash ) ; 
 + preferences . putString ( " currentCode " , currentCode ) ; 
 + preferences . putBool ( " isRegistered " , isRegistered ) ; 
 + preferences . putString ( " currentName " , currentName ) ; 
 + preferences . putInt ( " signType " , signType ) ; 
 + preferences . putString ( " auth _ state " , state . toString ( ) ) ; 
 
 / / if we show the next fragment when app is in background and not visible , app crashes ! 
 / / e . g when the GSM data is off and after trying to send code we go to settings to turn on , app is going invisible and . . . 
 @ @ - 127 , 11 + 135 , 11 @ @ public class AuthActivity extends BaseFragmentActivity { 
 break ; 
 case AUTH _ PHONE : 
 currentAuthType = AUTH _ TYPE _ PHONE ; 
 - showFragment ( signFragment , false , false ) ; 
 + showFragment ( ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignPhoneFragment ( ) , BaseAuthFragment . class ) , false , false ) ; 
 break ; 
 case AUTH _ EMAIL : 
 currentAuthType = AUTH _ TYPE _ EMAIL ; 
 - showFragment ( signFragment , false , false ) ; 
 + showFragment ( ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignEmailFragment ( ) , BaseAuthFragment . class ) , false , false ) ; 
 break ; 
 case CODE _ VALIDATION _ PHONE : 
 case CODE _ VALIDATION _ EMAIL : 
 @ @ - 155 , 21 + 163 , 15 @ @ public class AuthActivity extends BaseFragmentActivity { 
 currentName = name ; 
 currentSex = Sex . UNKNOWN ; 
 availableAuthType = ActorSDK . sharedActor ( ) . getAuthType ( ) ; 
 - BaseAuthFragment baseAuthFragment ; 
 AuthState authState ; 
 if ( ( availableAuthType & AUTH _ TYPE _ PHONE ) = = AUTH _ TYPE _ PHONE ) { 
 - baseAuthFragment = new SignPhoneFragment ( ) ; 
 authState = AuthState . AUTH _ PHONE ; 
 } else if ( ( availableAuthType & AUTH _ TYPE _ EMAIL ) = = AUTH _ TYPE _ EMAIL ) { 
 - baseAuthFragment = new SignEmailFragment ( ) ; 
 authState = AuthState . AUTH _ EMAIL ; 
 } else { 
 / / none of valid auth types selected - force crash ? 
 return ; 
 } 
 - 
 - signFragment = ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , baseAuthFragment , BaseAuthFragment . class ) ; 
 - 
 updateState ( authState ) ; 
 } 
 
 @ @ - 401 , 12 + 403 , 10 @ @ public class AuthActivity extends BaseFragmentActivity { 
 } 
 
 public void switchToEmailAuth ( ) { 
 - signFragment = ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignEmailFragment ( ) , BaseAuthFragment . class ) ; 
 updateState ( AuthState . AUTH _ EMAIL ) ; 
 } 
 
 public void switchToPhoneAuth ( ) { 
 - signFragment = ActorSDK . sharedActor ( ) . getDelegatedFragment ( ActorSDK . sharedActor ( ) . getDelegate ( ) . getAuthStartIntent ( ) , new SignPhoneFragment ( ) , BaseAuthFragment . class ) ; 
 updateState ( AuthState . AUTH _ PHONE ) ; 
 } 
 
 @ @ - 422 , 18 + 422 , 6 @ @ public class AuthActivity extends BaseFragmentActivity { 
 updateState ( AuthState . AUTH _ START , true ) ; 
 } 
 
 - @ Override 
 - protected void onSaveInstanceState ( Bundle outState ) { 
 - super . onSaveInstanceState ( outState ) ; 
 - outState . putLong ( " currentPhone " , currentPhone ) ; 
 - outState . putString ( " currentEmail " , currentEmail ) ; 
 - outState . putString ( " transactionHash " , transactionHash ) ; 
 - outState . putString ( " currentCode " , currentCode ) ; 
 - outState . putBoolean ( " isRegistered " , isRegistered ) ; 
 - outState . putString ( " currentName " , currentName ) ; 
 - outState . putInt ( " signType " , signType ) ; 
 - outState . putString ( " state " , state . toString ( ) ) ; 
 - } 
 
 public void showProgress ( ) { 
 dismissProgress ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java 
 index b12bee5 . . d0a8281 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / auth / BaseAuthFragment . java 
 @ @ - 34 , 6 + 34 , 7 @ @ import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 public abstract class BaseAuthFragment extends BaseFragment { 
 
 private static final int PERMISSIONS _ REQUEST _ ACCOUNT = 1 ; 
 + public static final boolean USE _ SUGGESTED _ EMAIL = false ; 
 private EditText edittextToFill ; 
 public BaseAuthFragment ( ) { 
 
 @ @ - 89 , 13 + 90 , 15 @ @ public abstract class BaseAuthFragment extends BaseFragment { 
 } 
 
 protected void setSuggestedEmail ( EditText et ) { 
 - edittextToFill = et ; 
 - if ( ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . GET _ ACCOUNTS ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 - requestPermissions ( new String [ ] { Manifest . permission . GET _ ACCOUNTS } , 
 - PERMISSIONS _ REQUEST _ ACCOUNT ) ; 
 - 
 - } else { 
 - et . setText ( getSuggestedEmailChecked ( ) ) ; 
 + if ( USE _ SUGGESTED _ EMAIL ) { 
 + edittextToFill = et ; 
 + if ( ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . GET _ ACCOUNTS ) ! = PackageManager . PERMISSION _ GRANTED ) { 
 + requestPermissions ( new String [ ] { Manifest . permission . GET _ ACCOUNTS } , 
 + PERMISSIONS _ REQUEST _ ACCOUNT ) ; 
 + 
 + } else { 
 + et . setText ( getSuggestedEmailChecked ( ) ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java 
 index 27dafc9 . . 6d9e303 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / AuthActivity . java 
 @ @ - 81 , 20 + 81 , 14 @ @ public class AuthActivity extends BaseFragmentActivity { 
 switch ( state ) { 
 case AUTH _ START : 
 signFragment = ActorSDK . sharedActor ( ) . getDelegate ( ) . getSignFragment ( ) ; 
 - if ( signFragment instanceof SignEmailFragment ) { 
 - authType = AUTH _ TYPE _ EMAIL ; 
 - } else if ( signFragment instanceof SignPhoneFragment ) { 
 + 
 + if ( signFragment instanceof SignPhoneFragment ) { 
 authType = AUTH _ TYPE _ PHONE ; 
 } else { 
 authType = AUTH _ TYPE _ CUSTOM ; 
 } 
 showFragment ( signFragment , false , false ) ; 
 break ; 
 - case AUTH _ EMAIL : 
 - signFragment = new SignEmailFragment ( ) ; 
 - showFragment ( signFragment , false , false ) ; 
 - authType = AUTH _ TYPE _ EMAIL ; 
 - break ; 
 case AUTH _ PHONE : 
 signFragment = new SignPhoneFragment ( ) ; 
 showFragment ( signFragment , false , false ) ; 
 @ @ - 102 , 14 + 96 , 10 @ @ public class AuthActivity extends BaseFragmentActivity { 
 break ; 
 case CODE _ VALIDATION _ CUSTOM : 
 case CODE _ VALIDATION _ PHONE : 
 - case CODE _ VALIDATION _ EMAIL : 
 - if ( ( state = = AuthState . CODE _ VALIDATION _ EMAIL & & authType = = AUTH _ TYPE _ PHONE ) | | ( state = = AuthState . CODE _ VALIDATION _ PHONE & & authType = = AUTH _ TYPE _ EMAIL ) ) { 
 - updateState ( AuthState . AUTH _ START ) ; 
 - break ; 
 - } 
 + 
 Fragment signInFragment = new SignInFragment ( ) ; 
 Bundle args = new Bundle ( ) ; 
 - args . putString ( " authType " , state = = AuthState . CODE _ VALIDATION _ EMAIL ? SignInFragment . AUTH _ TYPE _ EMAIL : SignInFragment . AUTH _ TYPE _ PHONE ) ; 
 + args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ PHONE ) ; 
 if ( state = = AuthState . CODE _ VALIDATION _ CUSTOM ) { 
 args . putString ( " authType " , SignInFragment . AUTH _ TYPE _ CUSTOM ) ; 
 args . putString ( " authId " , signFragment . getAuthId ( ) ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / SignEmailFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / SignEmailFragment . java 
 deleted file mode 100644 
 index 7be97a2 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / fragment / auth / SignEmailFragment . java 
 + + + / dev / null 
 @ @ - 1 , 136 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . fragment . auth ; 
 - 
 - import android . app . AlertDialog ; 
 - import android . graphics . drawable . StateListDrawable ; 
 - import android . os . Bundle ; 
 - import android . telephony . PhoneNumberFormattingTextWatcher ; 
 - import android . text . Editable ; 
 - import android . text . TextWatcher ; 
 - import android . view . KeyEvent ; 
 - import android . view . LayoutInflater ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . view . inputmethod . EditorInfo ; 
 - import android . widget . EditText ; 
 - import android . widget . TextView ; 
 - 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . util . Fonts ; 
 - import im . actor . sdk . util . KeyboardHelper ; 
 - import im . actor . sdk . view . SelectorFactory ; 
 - 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - 
 - public class SignEmailFragment extends BaseAuthFragment { 
 - 
 - private EditText emailEditText ; 
 - private KeyboardHelper keyboardHelper ; 
 - 
 - @ Override 
 - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 - View v = inflater . inflate ( R . layout . fragment _ sign _ email , container , false ) ; 
 - 
 - TextView buttonCotinueText = ( TextView ) v . findViewById ( R . id . button _ continue _ text ) ; 
 - StateListDrawable states = SelectorFactory . get ( ActorSDK . sharedActor ( ) . style . getMainColor ( ) , getActivity ( ) ) ; 
 - buttonCotinueText . setBackgroundDrawable ( states ) ; 
 - buttonCotinueText . setTypeface ( Fonts . medium ( ) ) ; 
 - buttonCotinueText . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryInvColor ( ) ) ; 
 - 
 - keyboardHelper = new KeyboardHelper ( getActivity ( ) ) ; 
 - 
 - initView ( v ) ; 
 - 
 - return v ; 
 - } 
 - 
 - @ Override 
 - public void onResume ( ) { 
 - super . onResume ( ) ; 
 - 
 - / / TODO track email auth open 
 - / / messenger ( ) . trackAuthPhoneOpen ( ) ; 
 - 
 - setTitle ( R . string . auth _ email _ title ) ; 
 - 
 - focusEmail ( ) ; 
 - 
 - keyboardHelper . setImeVisibility ( emailEditText , true ) ; 
 - } 
 - 
 - private void initView ( View v ) { 
 - ( ( TextView ) v . findViewById ( R . id . email _ login _ hint ) ) . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 - emailEditText = ( EditText ) v . findViewById ( R . id . tv _ email ) ; 
 - emailEditText . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextPrimaryColor ( ) ) ; 
 - emailEditText . addTextChangedListener ( new PhoneNumberFormattingTextWatcher ( ) ) ; 
 - String email = messenger ( ) . getAuthEmail ( ) ; 
 - if ( email ! = null & & ! email . isEmpty ( ) ) { 
 - emailEditText . setText ( email ) ; 
 - } 
 - emailEditText . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { 
 - @ Override 
 - public boolean onEditorAction ( TextView textView , int id , KeyEvent keyEvent ) { 
 - if ( id = = EditorInfo . IME _ ACTION _ GO ) { 
 - requestCode ( ) ; 
 - return true ; 
 - } 
 - return false ; 
 - } 
 - } ) ; 
 - emailEditText . addTextChangedListener ( new TextWatcher ( ) { 
 - @ Override 
 - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onTextChanged ( CharSequence s , int start , int before , int count ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void afterTextChanged ( Editable s ) { 
 - / / TODO trackAuthEmailType 
 - / / messenger ( ) . trackAuthPhoneType ( emailEditText . getText ( ) . toString ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - onClick ( v , R . id . button _ continue , new View . OnClickListener ( ) { 
 - @ Override 
 - public void onClick ( View view ) { 
 - requestCode ( ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - private void requestCode ( ) { 
 - final String ACTION = " Request code email " ; 
 - 
 - 
 - if ( emailEditText . getText ( ) . toString ( ) . trim ( ) . length ( ) = = 0 ) { 
 - String message = getString ( R . string . auth _ error _ empty _ email ) ; 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( R . string . auth _ error _ empty _ email ) 
 - . setPositiveButton ( R . string . dialog _ ok , null ) 
 - . show ( ) ; 
 - return ; 
 - } 
 - 
 - String rawEmail = emailEditText . getText ( ) . toString ( ) ; 
 - 
 - if ( rawEmail . length ( ) = = 0 ) { 
 - String message = getString ( R . string . auth _ error _ empty _ email ) ; 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( R . string . auth _ error _ empty _ email ) 
 - . setPositiveButton ( R . string . dialog _ ok , null ) 
 - . show ( ) ; 
 - return ; 
 - } 
 - executeAuth ( messenger ( ) . requestStartEmailAuth ( rawEmail ) , ACTION ) ; 
 - } 
 - 
 - private void focusEmail ( ) { 
 - focus ( emailEditText ) ; 
 - } 
 - 
 - } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index ec6d9d5 . . 6c0c169 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 117 , 18 + 117 , 6 @ @ public class Messenger { 
 } 
 
 / * * 
 - * Request email auth 
 - * 
 - * @ param email email to authenticate 
 - * @ return Command for execution 
 - * / 
 - @ NotNull 
 - @ ObjectiveCName ( " requestStartAuthCommandWithEmail : " ) 
 - public Command < AuthState > requestStartEmailAuth ( final String email ) { 
 - return modules . getAuthModule ( ) . requestStartEmailAuth ( email ) ; 
 - } 
 - 
 - / * * 
 * Request phone auth 
 * 
 * @ param phone phone to authenticate 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 index 93f8478 . . df1173e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / Authentication . java 
 @ @ - 110 , 56 + 110 , 6 @ @ public class Authentication { 
 } 
 } 
 
 - public Command < AuthState > requestStartEmailAuth ( final String email ) { 
 - return new Command < AuthState > ( ) { 
 - @ Override 
 - public void start ( final CommandCallback < AuthState > callback ) { 
 - ArrayList < String > langs = new ArrayList < String > ( ) ; 
 - for ( String s : modules . getConfiguration ( ) . getPreferredLanguages ( ) ) { 
 - langs . add ( s ) ; 
 - } 
 - request ( new RequestStartEmailAuth ( email , 
 - apiConfiguration . getAppId ( ) , 
 - apiConfiguration . getAppKey ( ) , 
 - deviceHash , 
 - apiConfiguration . getDeviceTitle ( ) , 
 - modules . getConfiguration ( ) . getTimeZone ( ) , 
 - langs 
 - ) , new RpcCallback < ResponseStartEmailAuth > ( ) { 
 - @ Override 
 - public void onResult ( ResponseStartEmailAuth response ) { 
 - modules . getPreferences ( ) . putString ( KEY _ EMAIL , email ) ; 
 - modules . getPreferences ( ) . putString ( KEY _ TRANSACTION _ HASH , response . getTransactionHash ( ) ) ; 
 - 
 - ApiEmailActivationType emailActivationType = response . getActivationType ( ) ; 
 - if ( emailActivationType . equals ( ApiEmailActivationType . OAUTH2 ) ) { 
 - state = AuthState . GET _ OAUTH _ PARAMS ; 
 - } else if ( emailActivationType . equals ( ApiEmailActivationType . CODE ) ) { 
 - state = AuthState . CODE _ VALIDATION _ EMAIL ; 
 - } 
 - 
 - im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - callback . onResult ( state ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( final RpcException e ) { 
 - im . actor . runtime . Runtime . postToMainThread ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - callback . onError ( e ) ; 
 - e . printStackTrace ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 - } 
 - } ; 
 - } 
 
 public Command < AuthState > requestStartPhoneAuth ( final long phone ) { 
 return new Command < AuthState > ( ) {
