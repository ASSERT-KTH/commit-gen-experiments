BLEU SCORE: 0.4001601601922499

TEST MSG: fix ( server : eventbus ) : don ' t post message to sender device
GENERATED MSG: fix ( server : eventbus ) : broadcast in case when dests not specified

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala < nl > index c9fbc73 . . 15f40ba 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala < nl > @ @ - 150 , 7 + 150 , 7 @ @ final class EventBusMediator extends Actor with ActorLogging { < nl > } < nl > } < nl > < nl > - authIds foreach ( weakExt . pushUpdate ( _ , update , None , None ) ) < nl > + authIds filterNot ( _ = = clientAuthId ) foreach ( weakExt . pushUpdate ( _ , update , None , None ) ) < nl > < nl > val msg = EventBus . Message ( id , clientUserId , clientAuthId , message ) < nl > this . internalConsumers foreach ( _ ! msg )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala < nl > index 4934b98 . . ee75c1b 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala < nl > @ @ - 137 , 16 + 137 , 21 @ @ final class EventBusMediator extends Actor with ActorLogging { < nl > message = message < nl > ) < nl > < nl > - dests foreach { < nl > - case ApiEventBusDestination ( destUserId , deviceIds ) ⇒ < nl > - deviceIds foreach { deviceId ⇒ < nl > - consumers . byDeviceId ( deviceId ) foreach { < nl > - case ( userId , authId ) ⇒ < nl > - weakExt . pushUpdate ( authId , update , None , None ) < nl > - } < nl > + val authIds = dests match { < nl > + case Nil ⇒ consumers . authIds < nl > + case _ ⇒ < nl > + dests flatMap { < nl > + case ApiEventBusDestination ( destUserId , deviceIds ) ⇒ < nl > + deviceIds flatMap { deviceId ⇒ < nl > + consumers . byDeviceId ( deviceId ) map { < nl > + case ( userId , authId ) ⇒ authId < nl > + } < nl > + } < nl > } < nl > } < nl > < nl > + authIds foreach ( weakExt . pushUpdate ( _ , update , None , None ) ) < nl > + < nl > val msg = EventBus . Message ( id , clientUserId , message ) < nl > this . internalConsumers foreach ( _ ! msg )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala 
 index c9fbc73 . . 15f40ba 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala 
 @ @ - 150 , 7 + 150 , 7 @ @ final class EventBusMediator extends Actor with ActorLogging { 
 } 
 } 
 
 - authIds foreach ( weakExt . pushUpdate ( _ , update , None , None ) ) 
 + authIds filterNot ( _ = = clientAuthId ) foreach ( weakExt . pushUpdate ( _ , update , None , None ) ) 
 
 val msg = EventBus . Message ( id , clientUserId , clientAuthId , message ) 
 this . internalConsumers foreach ( _ ! msg )

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala 
 index 4934b98 . . ee75c1b 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / eventbus / EventBusMediator . scala 
 @ @ - 137 , 16 + 137 , 21 @ @ final class EventBusMediator extends Actor with ActorLogging { 
 message = message 
 ) 
 
 - dests foreach { 
 - case ApiEventBusDestination ( destUserId , deviceIds ) ⇒ 
 - deviceIds foreach { deviceId ⇒ 
 - consumers . byDeviceId ( deviceId ) foreach { 
 - case ( userId , authId ) ⇒ 
 - weakExt . pushUpdate ( authId , update , None , None ) 
 - } 
 + val authIds = dests match { 
 + case Nil ⇒ consumers . authIds 
 + case _ ⇒ 
 + dests flatMap { 
 + case ApiEventBusDestination ( destUserId , deviceIds ) ⇒ 
 + deviceIds flatMap { deviceId ⇒ 
 + consumers . byDeviceId ( deviceId ) map { 
 + case ( userId , authId ) ⇒ authId 
 + } 
 + } 
 } 
 } 
 
 + authIds foreach ( weakExt . pushUpdate ( _ , update , None , None ) ) 
 + 
 val msg = EventBus . Message ( id , clientUserId , message ) 
 this . internalConsumers foreach ( _ ! msg )
