BLEU SCORE: 0.04767707020457096

TEST MSG: feat ( server : files ) : GetFileUrls handler
GENERATED MSG: Merge branch ' server / master '

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json < nl > index 9ea5859 . . bc501f7 100644 < nl > - - - a / actor - sdk / sdk - api / actor . json < nl > + + + b / actor - sdk / sdk - api / actor . json < nl > @ @ - 10720 , 7 + 10720 , 7 @ @ < nl > ] , < nl > " attributes " : [ < nl > { < nl > - " type " : " int32 " , < nl > + " type " : " int64 " , < nl > " id " : 1 , < nl > " name " : " fileId " < nl > } , < nl > diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > index a5229ad . . bf3087a 100644 < nl > - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps < nl > @ @ - 9282 , 7 + 9282 , 7 @ @ < nl > < node concept = " 2m7Kf5 " id = " 6Fl2chwC8Bv " role = " 2m0hLx " > < nl > < property role = " 2m7DUN " value = " 1 " / > < nl > < property role = " TrG5h " value = " fileId " / > < nl > - < node concept = " 2m5ndE " id = " 6Fl2chwC8BB " role = " 2m7DVh " / > < nl > + < node concept = " 2m5ndQ " id = " 4PMjvAhaUPo " role = " 2m7DVh " / > < nl > < / node > < nl > < node concept = " 2m7Kf5 " id = " 6Fl2chwC7NJ " role = " 2m0hLx " > < nl > < property role = " 2m7DUN " value = " 2 " / > < nl > diff - - git a / actor - server / actor - core / src / main / actor - api / actor . json b / actor - server / actor - core / src / main / actor - api / actor . json < nl > index 9ea5859 . . bc501f7 100644 < nl > - - - a / actor - server / actor - core / src / main / actor - api / actor . json < nl > + + + b / actor - server / actor - core / src / main / actor - api / actor . json < nl > @ @ - 10720 , 7 + 10720 , 7 @ @ < nl > ] , < nl > " attributes " : [ < nl > { < nl > - " type " : " int32 " , < nl > + " type " : " int64 " , < nl > " id " : 1 , < nl > " name " : " fileId " < nl > } , < nl > diff - - git a / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala b / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala < nl > index c7a682a . . d091971 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala < nl > @ @ - 3 , 7 + 3 , 7 @ @ package im . actor . api . rpc < nl > import cats . std . { EitherInstances , FutureInstances } < nl > < nl > import scala . concurrent . { ExecutionContext , Future } < nl > - import cats . _ , cats . data . { XorT , Xor } , data . Xor . _ , syntax . option . _ < nl > + import cats . _ , cats . data . { XorT , Xor } , data . Xor . _ , syntax . all . _ < nl > < nl > import scala . language . implicitConversions < nl > import scalaz . { \ / - , - \ / , \ / } < nl > diff - - git a / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala b / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala < nl > index 6a9f9fd . . 2cb6fa5 100644 < nl > - - - a / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala < nl > + + + b / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala < nl > @ @ - 5 , 7 + 5 , 11 @ @ import java . io . File < nl > import im . actor . server . model < nl > import im . actor . server . db . ActorPostgresDriver . api . _ < nl > < nl > - import scala . concurrent . _ < nl > + import scala . concurrent . _ , duration . _ < nl > + < nl > + object FileStorageAdapter { < nl > + val UrlExpirationTimeout = 1 . day < nl > + } < nl > < nl > trait FileStorageAdapter extends UploadActions with DownloadActions with UploadKeyParsing < nl > < nl > diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala < nl > index c48922f . . 3ca1f1b 100644 < nl > - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala < nl > + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala < nl > @ @ - 31 , 6 + 31 , 9 @ @ object FileRepo { < nl > def find ( id : Long ) : SqlAction [ Option [ model . File ] , NoStream , Read ] = < nl > files . filter ( _ . id = = = id ) . result . headOption < nl > < nl > + def fetch ( ids : Set [ Long ] ) = < nl > + files . filter ( _ . id inSetBind ids ) . result < nl > + < nl > def findByKey ( key : String ) = < nl > files . filter ( _ . uploadKey = = = key ) . result . headOption < nl > < nl > diff - - git a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala < nl > index 1fe9c5c . . e362365 100644 < nl > - - - a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala < nl > + + + b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala < nl > @ @ - 1 , 18 + 1 , 22 @ @ < nl > package im . actor . server . api . rpc . service . files < nl > < nl > import akka . actor . _ < nl > + import cats . data . Xor < nl > + import cats . std . all . _ < nl > + import cats . syntax . traverse . _ < nl > import im . actor . api . rpc . FileHelpers . Errors < nl > import im . actor . api . rpc . files . _ < nl > import im . actor . api . rpc . _ < nl > + import im . actor . concurrent . FutureExt < nl > import im . actor . server . acl . ACLUtils < nl > import im . actor . server . db . DbExtension < nl > import im . actor . server . file . _ < nl > import im . actor . server . persist < nl > + import im . actor . server . persist . FileRepo < nl > import slick . driver . PostgresDriver . api . _ < nl > < nl > import scala . concurrent . duration . _ < nl > import scala . concurrent . { ExecutionContext , Future } < nl > - import scala . languageFeature . implicitConversions < nl > < nl > class FilesServiceImpl ( implicit actorSystem : ActorSystem ) extends FilesService { < nl > < nl > @ @ - 25 , 11 + 29 , 30 @ @ class FilesServiceImpl ( implicit actorSystem : ActorSystem ) extends FilesService { < nl > < nl > override def jhandleGetFileUrl ( location : ApiFileLocation , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUrl ] ] = < nl > authorized ( clientData ) { client ⇒ < nl > - val timeout = 1 . day < nl > ( for { < nl > file ← fromFutureOption ( Errors . LocationInvalid ) ( db . run ( persist . FileRepo . find ( location . fileId ) ) ) < nl > url ← fromFutureOption ( Errors . LocationInvalid ) ( fsAdapter . getFileDownloadUrl ( file , location . accessHash ) ) < nl > - } yield ResponseGetFileUrl ( url , timeout . toSeconds . toInt ) ) . value map ( _ . toScalaz ) < nl > + } yield ResponseGetFileUrl ( url , FileStorageAdapter . UrlExpirationTimeout . toSeconds . toInt ) ) . value map ( _ . toScalaz ) < nl > + } < nl > + < nl > + override def jhandleGetFileUrls ( files : IndexedSeq [ ApiFileLocation ] , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUrls ] ] = < nl > + authorized ( clientData ) { client ⇒ < nl > + val idsHashes = files . map ( fl ⇒ fl . fileId → fl . accessHash ) . toMap < nl > + ( for { < nl > + models ← fromFuture ( db . run ( FileRepo . fetch ( idsHashes . keySet ) ) ) < nl > + attempts ← fromFuture ( FutureExt . ftraverse ( models ) { model ⇒ < nl > + val accessHash = idsHashes . getOrElse ( model . id , throw new RuntimeException ( " Db returned file " ) ) < nl > + ( for { < nl > + url ← fromFutureOption ( Errors . LocationInvalid ) ( fsAdapter . getFileDownloadUrl ( model , accessHash ) ) < nl > + } yield ApiFileUrlDescription ( model . id , url , FileStorageAdapter . UrlExpirationTimeout . toSeconds . toInt ) ) . value < nl > + } ) < nl > + / / FIXME : fail - fast here < nl > + urlDescs ← fromEither ( ( e : RpcError ) ⇒ e ) ( attempts . foldLeft ( Xor . Right ( Nil ) : Xor [ RpcError , List [ ApiFileUrlDescription ] ] ) { < nl > + case ( Xor . Right ( acc ) , Xor . Right ( fd ) ) ⇒ Xor . Right ( fd : : acc ) < nl > + case ( l : Xor . Left [ _ ] , _ ) ⇒ l < nl > + case ( _ , l : Xor . Left [ _ ] ) ⇒ l < nl > + } ) < nl > + } yield ResponseGetFileUrls ( urlDescs . toVector ) ) . value map ( _ . toScalaz ) < nl > } < nl > < nl > override def jhandleGetFileUploadUrl ( expectedSize : Int , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUploadUrl ] ] = < nl > @ @ - 61 , 7 + 84 , 4 @ @ class FilesServiceImpl ( implicit actorSystem : ActorSystem ) extends FilesService { < nl > _ ← fromFuture ( db . run ( persist . FileRepo . setUploaded ( file . id , fileName ) ) ) < nl > } yield ResponseCommitFileUpload ( ApiFileLocation ( file . id , ACLUtils . fileAccessHash ( file . id , file . accessSalt ) ) ) ) . value map ( _ . toScalaz ) < nl > } < nl > - < nl > - override def jhandleGetFileUrls ( files : IndexedSeq [ ApiFileLocation ] , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUrls ] ] = < nl > - Future . failed ( new RuntimeException ( " Not implemented " ) ) < nl > } < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 4708c5d . . d2737e5 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 8 , 7 + 8 , 7 @ @ object Dependencies { < nl > val actorBotkit = " 1 . 0 . 66 " < nl > val akka = " 2 . 4 . 0 " < nl > val akkaExperimental = " 2 . 0 - M1 " < nl > - val cats = " 0 . 2 . 0 " < nl > + val cats = " 0 . 3 . 0 " < nl > val kamon = " 0 . 5 . 2 " < nl > val scalaz = " 7 . 1 . 1 " < nl > val slick = " 3 . 1 . 1 "
NEAREST DIFF (one line): diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / IlectroUser . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / IlectroUser . scala < nl > deleted file mode 100644 < nl > index 189d99e . . 0000000 < nl > - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / IlectroUser . scala < nl > + + + / dev / null < nl > @ @ - 1 , 5 + 0 , 0 @ @ < nl > - package im . actor . server . models . llectro < nl > - < nl > - import java . util . UUID < nl > - < nl > - case class LlectroUser ( userId : Int , uuid : UUID , name : String ) < nl > diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / Interest . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / Interest . scala < nl > deleted file mode 100644 < nl > index d5e361a . . 0000000 < nl > - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / Interest . scala < nl > + + + / dev / null < nl > @ @ - 1 , 3 + 0 , 0 @ @ < nl > - package im . actor . server . models . llectro < nl > - < nl > - case class Interest ( id : Int , name : String , parentId : Int , fullPath : String , level : Int ) < nl > \ No newline at end of file < nl > diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / LlectroDevice . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / LlectroDevice . scala < nl > deleted file mode 100644 < nl > index 268056a . . 0000000 < nl > - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / LlectroDevice . scala < nl > + + + / dev / null < nl > @ @ - 1 , 3 + 0 , 0 @ @ < nl > - package im . actor . server . models . llectro < nl > - < nl > - case class LlectroDevice ( authId : Long , screenWidth : Int , screenHeight : Int ) < nl > \ No newline at end of file < nl > diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / UserInterest . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / UserInterest . scala < nl > deleted file mode 100644 < nl > index 963e5df . . 0000000 < nl > - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / UserInterest . scala < nl > + + + / dev / null < nl > @ @ - 1 , 3 + 0 , 0 @ @ < nl > - package im . actor . server . models . llectro < nl > - < nl > - case class UserInterest ( userId : Int , interestId : Int ) < nl > \ No newline at end of file < nl > diff - - git a / actor - server / bin / merge - to - master b / actor - server / bin / merge - to - master < nl > new file mode 100755 < nl > index 0000000 . . 57bea44 < nl > - - - / dev / null < nl > + + + b / actor - server / bin / merge - to - master < nl > @ @ - 0 , 0 + 1 , 15 @ @ < nl > + # ! / usr / bin / env bash < nl > + < nl > + set - eu < nl > + < nl > + git diff - index - - quiet - - cached HEAD < nl > + < nl > + if [ $ ? - eq 0 ] < nl > + then < nl > + git checkout master < nl > + git pull - - rebase origin master < nl > + git merge server / master < nl > + git push origin master < nl > + else < nl > + echo " Branch is dirty " < nl > + fi < nl > diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala < nl > index 0ae9ff5 . . 1d00c84 100644 < nl > - - - a / actor - server / project / Dependencies . scala < nl > + + + b / actor - server / project / Dependencies . scala < nl > @ @ - 38 , 7 + 38 , 6 @ @ object Dependencies { < nl > < nl > val concmap = " com . googlecode . concurrentlinkedhashmap " % " concurrentlinkedhashmap - lru " % " 1 . 4 . 2 " < nl > val caffeine = " com . github . ben - manes . caffeine " % " caffeine " % " 1 . 2 . 0 " < nl > - val eaioUuid = " com . eaio . uuid " % " uuid " % " 3 . 4 " < nl > < nl > val cats = " org . spire - math " % % " cats " % V . cats < nl > < nl > @ @ - 166 , 7 + 165 , 7 @ @ object Dependencies { < nl > < nl > val codecs = shared + + Seq ( scalazCore , scodecBits , scodecCore ) < nl > < nl > - val models = shared + + Seq ( eaioUuid , scodecBits , scodecCore , jodaTime , jodaConvert , slickPg ) < nl > + val models = shared + + Seq ( scodecBits , scodecCore , jodaTime , jodaConvert , slickPg ) < nl > < nl > val frontend = shared + + Seq ( < nl > akkaSlf4j , akkaActor , akkaStream ,

TEST DIFF:
diff - - git a / actor - sdk / sdk - api / actor . json b / actor - sdk / sdk - api / actor . json 
 index 9ea5859 . . bc501f7 100644 
 - - - a / actor - sdk / sdk - api / actor . json 
 + + + b / actor - sdk / sdk - api / actor . json 
 @ @ - 10720 , 7 + 10720 , 7 @ @ 
 ] , 
 " attributes " : [ 
 { 
 - " type " : " int32 " , 
 + " type " : " int64 " , 
 " id " : 1 , 
 " name " : " fileId " 
 } , 
 diff - - git a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 index a5229ad . . bf3087a 100644 
 - - - a / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 + + + b / actor - sdk / sdk - api / api - language / solutions / im . actor . api / models / im / actor / api / scheme . mps 
 @ @ - 9282 , 7 + 9282 , 7 @ @ 
 < node concept = " 2m7Kf5 " id = " 6Fl2chwC8Bv " role = " 2m0hLx " > 
 < property role = " 2m7DUN " value = " 1 " / > 
 < property role = " TrG5h " value = " fileId " / > 
 - < node concept = " 2m5ndE " id = " 6Fl2chwC8BB " role = " 2m7DVh " / > 
 + < node concept = " 2m5ndQ " id = " 4PMjvAhaUPo " role = " 2m7DVh " / > 
 < / node > 
 < node concept = " 2m7Kf5 " id = " 6Fl2chwC7NJ " role = " 2m0hLx " > 
 < property role = " 2m7DUN " value = " 2 " / > 
 diff - - git a / actor - server / actor - core / src / main / actor - api / actor . json b / actor - server / actor - core / src / main / actor - api / actor . json 
 index 9ea5859 . . bc501f7 100644 
 - - - a / actor - server / actor - core / src / main / actor - api / actor . json 
 + + + b / actor - server / actor - core / src / main / actor - api / actor . json 
 @ @ - 10720 , 7 + 10720 , 7 @ @ 
 ] , 
 " attributes " : [ 
 { 
 - " type " : " int32 " , 
 + " type " : " int64 " , 
 " id " : 1 , 
 " name " : " fileId " 
 } , 
 diff - - git a / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala b / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala 
 index c7a682a . . d091971 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / rpc / FutureResultRpcCats . scala 
 @ @ - 3 , 7 + 3 , 7 @ @ package im . actor . api . rpc 
 import cats . std . { EitherInstances , FutureInstances } 
 
 import scala . concurrent . { ExecutionContext , Future } 
 - import cats . _ , cats . data . { XorT , Xor } , data . Xor . _ , syntax . option . _ 
 + import cats . _ , cats . data . { XorT , Xor } , data . Xor . _ , syntax . all . _ 
 
 import scala . language . implicitConversions 
 import scalaz . { \ / - , - \ / , \ / } 
 diff - - git a / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala b / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala 
 index 6a9f9fd . . 2cb6fa5 100644 
 - - - a / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala 
 + + + b / actor - server / actor - fs - adapters / src / main / scala / im / actor / server / file / FileStorageAdapter . scala 
 @ @ - 5 , 7 + 5 , 11 @ @ import java . io . File 
 import im . actor . server . model 
 import im . actor . server . db . ActorPostgresDriver . api . _ 
 
 - import scala . concurrent . _ 
 + import scala . concurrent . _ , duration . _ 
 + 
 + object FileStorageAdapter { 
 + val UrlExpirationTimeout = 1 . day 
 + } 
 
 trait FileStorageAdapter extends UploadActions with DownloadActions with UploadKeyParsing 
 
 diff - - git a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala 
 index c48922f . . 3ca1f1b 100644 
 - - - a / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala 
 + + + b / actor - server / actor - persist / src / main / scala / im / actor / server / persist / FileRepo . scala 
 @ @ - 31 , 6 + 31 , 9 @ @ object FileRepo { 
 def find ( id : Long ) : SqlAction [ Option [ model . File ] , NoStream , Read ] = 
 files . filter ( _ . id = = = id ) . result . headOption 
 
 + def fetch ( ids : Set [ Long ] ) = 
 + files . filter ( _ . id inSetBind ids ) . result 
 + 
 def findByKey ( key : String ) = 
 files . filter ( _ . uploadKey = = = key ) . result . headOption 
 
 diff - - git a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala 
 index 1fe9c5c . . e362365 100644 
 - - - a / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala 
 + + + b / actor - server / actor - rpc - api / src / main / scala / im / actor / server / api / rpc / service / files / FilesServiceImpl . scala 
 @ @ - 1 , 18 + 1 , 22 @ @ 
 package im . actor . server . api . rpc . service . files 
 
 import akka . actor . _ 
 + import cats . data . Xor 
 + import cats . std . all . _ 
 + import cats . syntax . traverse . _ 
 import im . actor . api . rpc . FileHelpers . Errors 
 import im . actor . api . rpc . files . _ 
 import im . actor . api . rpc . _ 
 + import im . actor . concurrent . FutureExt 
 import im . actor . server . acl . ACLUtils 
 import im . actor . server . db . DbExtension 
 import im . actor . server . file . _ 
 import im . actor . server . persist 
 + import im . actor . server . persist . FileRepo 
 import slick . driver . PostgresDriver . api . _ 
 
 import scala . concurrent . duration . _ 
 import scala . concurrent . { ExecutionContext , Future } 
 - import scala . languageFeature . implicitConversions 
 
 class FilesServiceImpl ( implicit actorSystem : ActorSystem ) extends FilesService { 
 
 @ @ - 25 , 11 + 29 , 30 @ @ class FilesServiceImpl ( implicit actorSystem : ActorSystem ) extends FilesService { 
 
 override def jhandleGetFileUrl ( location : ApiFileLocation , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUrl ] ] = 
 authorized ( clientData ) { client ⇒ 
 - val timeout = 1 . day 
 ( for { 
 file ← fromFutureOption ( Errors . LocationInvalid ) ( db . run ( persist . FileRepo . find ( location . fileId ) ) ) 
 url ← fromFutureOption ( Errors . LocationInvalid ) ( fsAdapter . getFileDownloadUrl ( file , location . accessHash ) ) 
 - } yield ResponseGetFileUrl ( url , timeout . toSeconds . toInt ) ) . value map ( _ . toScalaz ) 
 + } yield ResponseGetFileUrl ( url , FileStorageAdapter . UrlExpirationTimeout . toSeconds . toInt ) ) . value map ( _ . toScalaz ) 
 + } 
 + 
 + override def jhandleGetFileUrls ( files : IndexedSeq [ ApiFileLocation ] , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUrls ] ] = 
 + authorized ( clientData ) { client ⇒ 
 + val idsHashes = files . map ( fl ⇒ fl . fileId → fl . accessHash ) . toMap 
 + ( for { 
 + models ← fromFuture ( db . run ( FileRepo . fetch ( idsHashes . keySet ) ) ) 
 + attempts ← fromFuture ( FutureExt . ftraverse ( models ) { model ⇒ 
 + val accessHash = idsHashes . getOrElse ( model . id , throw new RuntimeException ( " Db returned file " ) ) 
 + ( for { 
 + url ← fromFutureOption ( Errors . LocationInvalid ) ( fsAdapter . getFileDownloadUrl ( model , accessHash ) ) 
 + } yield ApiFileUrlDescription ( model . id , url , FileStorageAdapter . UrlExpirationTimeout . toSeconds . toInt ) ) . value 
 + } ) 
 + / / FIXME : fail - fast here 
 + urlDescs ← fromEither ( ( e : RpcError ) ⇒ e ) ( attempts . foldLeft ( Xor . Right ( Nil ) : Xor [ RpcError , List [ ApiFileUrlDescription ] ] ) { 
 + case ( Xor . Right ( acc ) , Xor . Right ( fd ) ) ⇒ Xor . Right ( fd : : acc ) 
 + case ( l : Xor . Left [ _ ] , _ ) ⇒ l 
 + case ( _ , l : Xor . Left [ _ ] ) ⇒ l 
 + } ) 
 + } yield ResponseGetFileUrls ( urlDescs . toVector ) ) . value map ( _ . toScalaz ) 
 } 
 
 override def jhandleGetFileUploadUrl ( expectedSize : Int , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUploadUrl ] ] = 
 @ @ - 61 , 7 + 84 , 4 @ @ class FilesServiceImpl ( implicit actorSystem : ActorSystem ) extends FilesService { 
 _ ← fromFuture ( db . run ( persist . FileRepo . setUploaded ( file . id , fileName ) ) ) 
 } yield ResponseCommitFileUpload ( ApiFileLocation ( file . id , ACLUtils . fileAccessHash ( file . id , file . accessSalt ) ) ) ) . value map ( _ . toScalaz ) 
 } 
 - 
 - override def jhandleGetFileUrls ( files : IndexedSeq [ ApiFileLocation ] , clientData : ClientData ) : Future [ HandlerResult [ ResponseGetFileUrls ] ] = 
 - Future . failed ( new RuntimeException ( " Not implemented " ) ) 
 } 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 4708c5d . . d2737e5 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 8 , 7 + 8 , 7 @ @ object Dependencies { 
 val actorBotkit = " 1 . 0 . 66 " 
 val akka = " 2 . 4 . 0 " 
 val akkaExperimental = " 2 . 0 - M1 " 
 - val cats = " 0 . 2 . 0 " 
 + val cats = " 0 . 3 . 0 " 
 val kamon = " 0 . 5 . 2 " 
 val scalaz = " 7 . 1 . 1 " 
 val slick = " 3 . 1 . 1 "

NEAREST DIFF:
diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / IlectroUser . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / IlectroUser . scala 
 deleted file mode 100644 
 index 189d99e . . 0000000 
 - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / IlectroUser . scala 
 + + + / dev / null 
 @ @ - 1 , 5 + 0 , 0 @ @ 
 - package im . actor . server . models . llectro 
 - 
 - import java . util . UUID 
 - 
 - case class LlectroUser ( userId : Int , uuid : UUID , name : String ) 
 diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / Interest . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / Interest . scala 
 deleted file mode 100644 
 index d5e361a . . 0000000 
 - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / Interest . scala 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - package im . actor . server . models . llectro 
 - 
 - case class Interest ( id : Int , name : String , parentId : Int , fullPath : String , level : Int ) 
 \ No newline at end of file 
 diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / LlectroDevice . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / LlectroDevice . scala 
 deleted file mode 100644 
 index 268056a . . 0000000 
 - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / LlectroDevice . scala 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - package im . actor . server . models . llectro 
 - 
 - case class LlectroDevice ( authId : Long , screenWidth : Int , screenHeight : Int ) 
 \ No newline at end of file 
 diff - - git a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / UserInterest . scala b / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / UserInterest . scala 
 deleted file mode 100644 
 index 963e5df . . 0000000 
 - - - a / actor - server / actor - models / src / main / scala / im / actor / server / models / llectro / UserInterest . scala 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - package im . actor . server . models . llectro 
 - 
 - case class UserInterest ( userId : Int , interestId : Int ) 
 \ No newline at end of file 
 diff - - git a / actor - server / bin / merge - to - master b / actor - server / bin / merge - to - master 
 new file mode 100755 
 index 0000000 . . 57bea44 
 - - - / dev / null 
 + + + b / actor - server / bin / merge - to - master 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + # ! / usr / bin / env bash 
 + 
 + set - eu 
 + 
 + git diff - index - - quiet - - cached HEAD 
 + 
 + if [ $ ? - eq 0 ] 
 + then 
 + git checkout master 
 + git pull - - rebase origin master 
 + git merge server / master 
 + git push origin master 
 + else 
 + echo " Branch is dirty " 
 + fi 
 diff - - git a / actor - server / project / Dependencies . scala b / actor - server / project / Dependencies . scala 
 index 0ae9ff5 . . 1d00c84 100644 
 - - - a / actor - server / project / Dependencies . scala 
 + + + b / actor - server / project / Dependencies . scala 
 @ @ - 38 , 7 + 38 , 6 @ @ object Dependencies { 
 
 val concmap = " com . googlecode . concurrentlinkedhashmap " % " concurrentlinkedhashmap - lru " % " 1 . 4 . 2 " 
 val caffeine = " com . github . ben - manes . caffeine " % " caffeine " % " 1 . 2 . 0 " 
 - val eaioUuid = " com . eaio . uuid " % " uuid " % " 3 . 4 " 
 
 val cats = " org . spire - math " % % " cats " % V . cats 
 
 @ @ - 166 , 7 + 165 , 7 @ @ object Dependencies { 
 
 val codecs = shared + + Seq ( scalazCore , scodecBits , scodecCore ) 
 
 - val models = shared + + Seq ( eaioUuid , scodecBits , scodecCore , jodaTime , jodaConvert , slickPg ) 
 + val models = shared + + Seq ( scodecBits , scodecCore , jodaTime , jodaConvert , slickPg ) 
 
 val frontend = shared + + Seq ( 
 akkaSlf4j , akkaActor , akkaStream ,
