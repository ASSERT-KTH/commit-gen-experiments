BLEU SCORE: 0.10600313379512592

TEST MSG: feat ( iOS ) : Test button for making a call
GENERATED MSG: feat ( android ) : get auth id

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift < nl > index 917a3a6 . . 4c1ea67 100644 < nl > - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift < nl > + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift < nl > @ @ - 65 , 6 + 65 , 14 @ @ class AAUserViewController : AAContentTableController { < nl > } < nl > < nl > / / Profile : Send messages < nl > + s . action ( " Do Call " ) { ( r ) - > ( ) in < nl > + r . selectAction = { ( ) - > Bool in < nl > + self . execute ( Actor . doCallWithUid ( jint ( self . uid ) ) ) < nl > + return false < nl > + } < nl > + } < nl > + < nl > + / / Profile : Send messages < nl > s . action ( " ProfileSendMessage " ) { ( r ) - > ( ) in < nl > r . selectAction = { ( ) - > Bool in < nl > self . navigateDetail ( ConversationViewController ( peer : ACPeer . userWithInt ( jint ( self . uid ) ) ) ) < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > index 98322f4 . . a19566e 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java < nl > @ @ - 294 , 6 + 294 , 9 @ @ public class CallManagerActor extends ModuleActor { < nl > } else if ( message instanceof ReadyForCandidates ) { < nl > ReadyForCandidates readyForCandidates = ( ReadyForCandidates ) message ; < nl > onReadyReceiveCandidates ( readyForCandidates . getCallId ( ) ) ; < nl > + } else if ( message instanceof DoCall ) { < nl > + DoCall doCall = ( DoCall ) message ; < nl > + doCall ( doCall . getPeer ( ) ) ; < nl > } else { < nl > super . onReceive ( message ) ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java < nl > index 66f7b03 . . ecb1408 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java < nl > @ @ - 62 , 6 + 62 , 7 @ @ public class CallsModule extends AbsModule { < nl > return new Command < ResponseDoCall > ( ) { < nl > @ Override < nl > public void start ( final CommandCallback < ResponseDoCall > callback ) { < nl > + callManager . send ( new CallManagerActor . DoCall ( Peer . user ( uid ) ) ) ; < nl > / / User u = users ( ) . getValue ( uid ) ; < nl > / / request ( new RequestDoCall ( new ApiOutPeer ( ApiPeerType . PRIVATE , u . getUid ( ) , u . getAccessHash ( ) ) , CALL _ TIMEOUT ) , new RpcCallback < ResponseDoCall > ( ) { < nl > / / @ Override
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 99c6fb2 . . 830d0b5 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 1919 , 4 + 1919 , 8 @ @ public class Messenger { < nl > ModuleContext getModuleContext ( ) { < nl > return modules ; < nl > } < nl > + < nl > + public long getAuthId ( ) { < nl > + return modules . getApiModule ( ) . getActorApi ( ) . getKeyStorage ( ) . getAuthKey ( ) ; < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java < nl > index acfcafa . . 85b25fd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java < nl > @ @ - 99 , 4 + 99 , 8 @ @ public class ActorApi { < nl > public synchronized void forceNetworkCheck ( ) { < nl > this . apiBroker . send ( new ApiBroker . ForceNetworkCheck ( ) ) ; < nl > } < nl > + < nl > + public AuthKeyStorage getKeyStorage ( ) { < nl > + return keyStorage ; < nl > + } < nl > }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift 
 index 917a3a6 . . 4c1ea67 100644 
 - - - a / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift 
 + + + b / actor - sdk / sdk - core - ios / ActorSDK / Sources / Controllers / User / AAUserViewController . swift 
 @ @ - 65 , 6 + 65 , 14 @ @ class AAUserViewController : AAContentTableController { 
 } 
 
 / / Profile : Send messages 
 + s . action ( " Do Call " ) { ( r ) - > ( ) in 
 + r . selectAction = { ( ) - > Bool in 
 + self . execute ( Actor . doCallWithUid ( jint ( self . uid ) ) ) 
 + return false 
 + } 
 + } 
 + 
 + / / Profile : Send messages 
 s . action ( " ProfileSendMessage " ) { ( r ) - > ( ) in 
 r . selectAction = { ( ) - > Bool in 
 self . navigateDetail ( ConversationViewController ( peer : ACPeer . userWithInt ( jint ( self . uid ) ) ) ) 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 index 98322f4 . . a19566e 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallManagerActor . java 
 @ @ - 294 , 6 + 294 , 9 @ @ public class CallManagerActor extends ModuleActor { 
 } else if ( message instanceof ReadyForCandidates ) { 
 ReadyForCandidates readyForCandidates = ( ReadyForCandidates ) message ; 
 onReadyReceiveCandidates ( readyForCandidates . getCallId ( ) ) ; 
 + } else if ( message instanceof DoCall ) { 
 + DoCall doCall = ( DoCall ) message ; 
 + doCall ( doCall . getPeer ( ) ) ; 
 } else { 
 super . onReceive ( message ) ; 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java 
 index 66f7b03 . . ecb1408 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / calls / CallsModule . java 
 @ @ - 62 , 6 + 62 , 7 @ @ public class CallsModule extends AbsModule { 
 return new Command < ResponseDoCall > ( ) { 
 @ Override 
 public void start ( final CommandCallback < ResponseDoCall > callback ) { 
 + callManager . send ( new CallManagerActor . DoCall ( Peer . user ( uid ) ) ) ; 
 / / User u = users ( ) . getValue ( uid ) ; 
 / / request ( new RequestDoCall ( new ApiOutPeer ( ApiPeerType . PRIVATE , u . getUid ( ) , u . getAccessHash ( ) ) , CALL _ TIMEOUT ) , new RpcCallback < ResponseDoCall > ( ) { 
 / / @ Override

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 99c6fb2 . . 830d0b5 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 1919 , 4 + 1919 , 8 @ @ public class Messenger { 
 ModuleContext getModuleContext ( ) { 
 return modules ; 
 } 
 + 
 + public long getAuthId ( ) { 
 + return modules . getApiModule ( ) . getActorApi ( ) . getKeyStorage ( ) . getAuthKey ( ) ; 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java 
 index acfcafa . . 85b25fd 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / network / ActorApi . java 
 @ @ - 99 , 4 + 99 , 8 @ @ public class ActorApi { 
 public synchronized void forceNetworkCheck ( ) { 
 this . apiBroker . send ( new ApiBroker . ForceNetworkCheck ( ) ) ; 
 } 
 + 
 + public AuthKeyStorage getKeyStorage ( ) { 
 + return keyStorage ; 
 + } 
 }
