BLEU SCORE: 0.22894156860669912

TEST MSG: fix ( android ) : forward doc as content - fixing forward of not loaded docs
GENERATED MSG: fix ( android ) : replace update hash with incremental value , fix picture update

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > index 2a876f2 . . 8f9e8e5 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java < nl > @ @ - 98 , 8 + 98 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > private int shareUser ; < nl > private String forwardText = " " ; < nl > private String forwardTextRaw = " " ; < nl > - private String forwardDocDescriptor = " " ; < nl > - private boolean forwardDocIsDoc = true ; < nl > + private byte [ ] docContent = null ; < nl > < nl > public MainPhoneController ( ActorMainActivity mainActivity ) { < nl > super ( mainActivity ) ; < nl > @ @ - 107 , 7 + 106 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > < nl > @ Override < nl > public void onDialogClicked ( final Dialog item ) { < nl > - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | ( forwardDocDescriptor ! = null & & ! forwardDocDescriptor . isEmpty ( ) ) | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { < nl > + if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { < nl > new AlertDialog . Builder ( getActivity ( ) ) < nl > . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + item . getDialogTitle ( ) + " ? " ) < nl > . setPositiveButton ( R . string . dialog _ ok , new DialogInterface . OnClickListener ( ) { < nl > @ @ - 130 , 7 + 129 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > < nl > @ Override < nl > public void onContactClicked ( final Contact contact ) { < nl > - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | ( forwardDocDescriptor ! = null & & ! forwardDocDescriptor . isEmpty ( ) ) | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { < nl > + if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { < nl > new AlertDialog . Builder ( getActivity ( ) ) < nl > . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + contact . getName ( ) + " ? " ) < nl > . setPositiveButton ( R . string . dialog _ ok , new DialogInterface . OnClickListener ( ) { < nl > @ @ - 157 , 8 + 156 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > . putExtra ( " send _ text " , sendText ) < nl > . putExtra ( " forward _ text " , forwardText ) < nl > . putExtra ( " forward _ text _ raw " , forwardTextRaw ) < nl > - . putExtra ( " forward _ doc _ descriptor " , forwardDocDescriptor ) < nl > - . putExtra ( " forward _ doc _ is _ doc " , forwardDocIsDoc ) < nl > + . putExtra ( " forward _ content " , docContent ) < nl > . putExtra ( " share _ user " , shareUser ) ) ; < nl > clearShare ( ) ; < nl > } < nl > @ @ - 169 , 8 + 167 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > . putExtra ( " send _ text " , sendText ) < nl > . putExtra ( " forward _ text " , forwardText ) < nl > . putExtra ( " forward _ text _ raw " , forwardTextRaw ) < nl > - . putExtra ( " forward _ doc _ descriptor " , forwardDocDescriptor ) < nl > - . putExtra ( " forward _ doc _ is _ doc " , forwardDocIsDoc ) < nl > + . putExtra ( " forward _ content " , docContent ) < nl > . putExtra ( " share _ user " , shareUser ) ) ; < nl > < nl > clearShare ( ) ; < nl > @ @ - 179 , 7 + 176 , 7 @ @ public class MainPhoneController extends MainBaseController { < nl > private void clearShare ( ) { < nl > sendUriMultiple . clear ( ) ; < nl > sendUriString = " " ; < nl > - forwardDocDescriptor = " " ; < nl > + docContent = null ; < nl > forwardText = " " ; < nl > forwardTextRaw = " " ; < nl > sendText = " " ; < nl > @ @ - 396 , 9 + 393 , 8 @ @ public class MainPhoneController extends MainBaseController { < nl > } else if ( extras . containsKey ( " forward _ text " ) ) { < nl > forwardText = extras . getString ( " forward _ text " ) ; < nl > forwardTextRaw = extras . getString ( " forward _ text _ raw " ) ; < nl > - } else if ( extras . containsKey ( " forward _ doc _ descriptor " ) ) { < nl > - forwardDocDescriptor = extras . getString ( " forward _ doc _ descriptor " ) ; < nl > - forwardDocIsDoc = extras . getBoolean ( " forward _ doc _ is _ doc " ) ; < nl > + } else if ( extras . containsKey ( " forward _ content " ) ) { < nl > + docContent = extras . getByteArray ( " forward _ content " ) ; < nl > } < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > index dd798a8 . . 369d380 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java < nl > @ @ - 46 , 6 + 46 , 7 @ @ import android . widget . TextView ; < nl > import android . widget . Toast ; < nl > < nl > import java . io . File ; < nl > + import java . io . IOException ; < nl > import java . util . ArrayList ; < nl > import java . util . Set ; < nl > < nl > @ @ - 53 , 6 + 54 , 8 @ @ import im . actor . core . api . rpc . ResponseSeqDate ; < nl > import im . actor . core . entity . MentionFilterResult ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . entity . content . AbsContent ; < nl > + import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . network . RpcException ; < nl > import im . actor . core . viewmodel . Command ; < nl > import im . actor . core . viewmodel . CommandCallback ; < nl > @ @ - 186 , 11 + 189 , 10 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / < nl > private ArrayList < String > sendUriMultiple ; < nl > private int shareUser ; < nl > - private String forwardDocDescriptor ; < nl > - private boolean forwardDocIsDoc = true ; < nl > private String forwardText ; < nl > private String forwardTextRaw ; < nl > private String sendText ; < nl > + private DocumentContent forwardContent ; < nl > / / Camera photo destination name < nl > private String pending _ fileName ; < nl > < nl > @ @ - 475 , 8 + 477 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > forwardText = intent . getStringExtra ( " forward _ text " ) ; < nl > forwardTextRaw = intent . getStringExtra ( " forward _ text _ raw " ) ; < nl > sendText = intent . getStringExtra ( " send _ text " ) ; < nl > - forwardDocDescriptor = intent . getStringExtra ( " forward _ doc _ descriptor " ) ; < nl > - forwardDocIsDoc = intent . getBooleanExtra ( " forward _ doc _ is _ doc " , true ) ; < nl > + try { < nl > + forwardContent = ( DocumentContent ) DocumentContent . parse ( intent . getByteArrayExtra ( " forward _ content " ) ) ; < nl > + } catch ( Exception e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > @ @ - 657 , 13 + 662 , 9 @ @ public class ChatActivity extends ActorEditTextActivity { < nl > forwardTextRaw = " " ; < nl > } < nl > < nl > - if ( forwardDocDescriptor ! = null & & ! forwardDocDescriptor . isEmpty ( ) ) { < nl > - if ( forwardDocIsDoc ) { < nl > - messenger ( ) . sendDocument ( peer , forwardDocDescriptor ) ; < nl > - } else { < nl > - execute ( messenger ( ) . sendUri ( peer , Uri . fromFile ( new File ( forwardDocDescriptor ) ) ) ) ; < nl > - } < nl > - forwardDocDescriptor = " " ; < nl > + if ( forwardContent ! = null ) { < nl > + messenger ( ) . sendDocumentContent ( peer , forwardContent ) ; < nl > + forwardContent = null ; < nl > } < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java < nl > index 7177ce4 . . d8734ea 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java < nl > @ @ - 468 , 15 + 468 , 12 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder < nl > i . putExtra ( " forward _ text " , forward ) ; < nl > i . putExtra ( " forward _ text _ raw " , forward ) ; < nl > } else if ( m . getContent ( ) instanceof DocumentContent ) { < nl > - boolean isDoc = ! ( m . getContent ( ) instanceof PhotoContent | | m . getContent ( ) instanceof VideoContent ) ; < nl > DocumentContent fileMessage = ( DocumentContent ) m . getContent ( ) ; < nl > - if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { < nl > - i . putExtra ( " forward _ doc _ descriptor " , messenger ( ) . findDownloadedDescriptor ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) . getFileId ( ) ) ) ; < nl > - } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { < nl > - String descriptor = ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ; < nl > - i . putExtra ( " forward _ doc _ descriptor " , descriptor ) ; < nl > + try { < nl > + i . putExtra ( " forward _ content " , DocumentContent . serialize ( fileMessage ) ) ; < nl > + } catch ( IOException e ) { < nl > + e . printStackTrace ( ) ; < nl > } < nl > - i . putExtra ( " forward _ doc _ is _ doc " , isDoc ) ; < nl > } < nl > } else { < nl > String quote = " " ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > index 60c43a8 . . 2bc5fb7 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java < nl > @ @ - 31 , 6 + 31 , 7 @ @ import im . actor . core . entity . PublicGroup ; < nl > import im . actor . core . entity . Sex ; < nl > import im . actor . core . entity . User ; < nl > import im . actor . core . entity . WebActionDescriptor ; < nl > + import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . entity . content . FastThumb ; < nl > import im . actor . core . entity . content . JsonContent ; < nl > import im . actor . core . entity . Sticker ; < nl > @ @ - 902 , 6 + 903 , 17 @ @ public class Messenger { < nl > } < nl > < nl > / * * < nl > + * Send DocumentContent - used for forwarding < nl > + * < nl > + * @ param peer destination peer < nl > + * @ param content content to forward < nl > + * / < nl > + @ ObjectiveCName ( " sendDocumentContentWithPeer : withContent : " ) < nl > + public void sendDocumentContent ( Peer peer , DocumentContent content ) { < nl > + modules . getMessagesModule ( ) . sendDocumentContent ( peer , content ) ; < nl > + } < nl > + < nl > + / * * < nl > * Delete messages < nl > * < nl > * @ param peer destination peer < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java < nl > index 6b10fd1 . . 9860c84 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java < nl > @ @ - 44 , 6 + 44 , 7 @ @ import im . actor . core . entity . Message ; < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . User ; < nl > + import im . actor . core . entity . content . DocumentContent ; < nl > import im . actor . core . entity . content . FastThumb ; < nl > import im . actor . core . entity . content . JsonContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > @ @ - 480 , 6 + 481 , 10 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { < nl > reference . getSize ( ) , reference . getDescriptor ( ) , fastThumb ) ) ; < nl > } < nl > < nl > + public void sendDocumentContent ( Peer peer , DocumentContent content ) { < nl > + sendMessageActor . send ( new SenderActor . SendDocumentContent ( peer , content ) ) ; < nl > + } < nl > + < nl > public void sendSticker ( @ NotNull Peer peer , < nl > @ NotNull Sticker sticker ) { < nl > sendMessageActor . send ( new SenderActor . SendSticker ( peer , sticker ) ) ; < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java < nl > index a7f85bc . . 67879dd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java < nl > @ @ - 232 , 6 + 232 , 21 @ @ public class SenderActor extends ModuleActor { < nl > performUploadFile ( rid , descriptor , fileName ) ; < nl > } < nl > < nl > + public void doSendDocumentContent ( Peer peer , DocumentContent remoteContent ) { < nl > + long rid = RandomUtils . nextRid ( ) ; < nl > + long date = createPendingDate ( ) ; < nl > + long sortDate = date + 365 * 24 * 60 * 60 * 1000L ; < nl > + < nl > + Message message = new Message ( rid , sortDate , date , myUid ( ) , MessageState . PENDING , remoteContent , < nl > + new ArrayList < Reaction > ( ) ) ; < nl > + context ( ) . getMessagesModule ( ) . getConversationActor ( peer ) . send ( message ) ; < nl > + < nl > + pendingMessages . getPendingMessages ( ) . add ( new PendingMessage ( peer , rid , remoteContent ) ) ; < nl > + savePending ( ) ; < nl > + < nl > + performSendContent ( peer , rid , remoteContent ) ; < nl > + } < nl > + < nl > public void doSendPhoto ( Peer peer , FastThumb fastThumb , String descriptor , String fileName , < nl > int fileSize , int w , int h ) { < nl > long rid = RandomUtils . nextRid ( ) ; < nl > @ @ - 541 , 6 + 556 , 9 @ @ public class SenderActor extends ModuleActor { < nl > } else if ( message instanceof SendJson ) { < nl > SendJson sendJson = ( SendJson ) message ; < nl > doSendJson ( sendJson . getPeer ( ) , sendJson . getJson ( ) ) ; < nl > + } else if ( message instanceof SendDocumentContent ) { < nl > + SendDocumentContent sendDocumentContent = ( SendDocumentContent ) message ; < nl > + doSendDocumentContent ( sendDocumentContent . getPeer ( ) , sendDocumentContent . getDocumentContent ( ) ) ; < nl > } else { < nl > drop ( message ) ; < nl > } < nl > @ @ - 589 , 6 + 607 , 24 @ @ public class SenderActor extends ModuleActor { < nl > } < nl > } < nl > < nl > + public static class SendDocumentContent { < nl > + private Peer peer ; < nl > + private DocumentContent remoteContent ; < nl > + < nl > + public SendDocumentContent ( Peer peer , DocumentContent remoteContent ) { < nl > + this . peer = peer ; < nl > + this . remoteContent = remoteContent ; < nl > + } < nl > + < nl > + public Peer getPeer ( ) { < nl > + return peer ; < nl > + } < nl > + < nl > + public DocumentContent getDocumentContent ( ) { < nl > + return remoteContent ; < nl > + } < nl > + } < nl > + < nl > public static class SendPhoto { < nl > private Peer peer ; < nl > private FastThumb fastThumb ;
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 084acb3 . . f52746b 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 28 , 17 + 28 , 17 @ @ public class Application extends ActorSDKApplication { < nl > < nl > @ Override < nl > public void onConfigureActorSDK ( ) { < nl > - ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > + / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > - ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > - ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > - ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > - ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > + / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; < nl > + / / ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; < nl > < nl > / / ActorSDK . sharedActor ( ) . setEndpoints ( new String [ ] { " tcp : / / 192 . 168 . 1 . 184 : 9070 " } ) ; < nl > < nl > - ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > - style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > + / / ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > + / / style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; < nl > / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; < nl > / / AbsContent . registerConverter ( new ContentConverter ( ) { < nl > / / @ Override < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > index 8b8ceac . . a2d86ff 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java < nl > @ @ - 129 , 8 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > < nl > / / Process Content < nl > if ( msg . getContent ( ) instanceof TextContent ) { < nl > - int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; < nl > - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { < nl > + int updatedCounter = msg . getContent ( ) . getUpdatedCounter ( ) ; < nl > + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedCounter ) ) { < nl > TextContent text = ( TextContent ) msg . getContent ( ) ; < nl > Spannable spannableString = new SpannableString ( text . getText ( ) ) ; < nl > boolean hasSpannable = false ; < nl > @ @ - 191 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { < nl > spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; < nl > hasSpannable = true ; < nl > } < nl > - updatedTexts . add ( updatedHash ) ; < nl > + updatedTexts . add ( updatedCounter ) ; < nl > preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , < nl > hasSpannable ? spannableString : null ) ) ; < nl > } else { < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > index 8422981 . . 0e5ad94 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java < nl > @ @ - 2 , 7 + 2 , 9 @ @ package im . actor . sdk . controllers . conversation . messages ; < nl > < nl > import android . app . Activity ; < nl > import android . content . Context ; < nl > + import android . graphics . Bitmap ; < nl > import android . graphics . Color ; < nl > + import android . graphics . drawable . BitmapDrawable ; < nl > import android . net . Uri ; < nl > import android . view . View ; < nl > import android . widget . FrameLayout ; < nl > @ @ - 29 , 6 + 31 , 7 @ @ import im . actor . core . entity . content . FileLocalSource ; < nl > import im . actor . core . entity . content . FileRemoteSource ; < nl > import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . VideoContent ; < nl > + import im . actor . core . utils . ImageHelper ; < nl > import im . actor . core . viewmodel . FileCallback ; < nl > import im . actor . core . viewmodel . FileVM ; < nl > import im . actor . core . viewmodel . FileVMCallback ; < nl > @ @ - 38 , 9 + 41 , 11 @ @ import im . actor . core . viewmodel . UploadFileVMCallback ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . R ; < nl > import im . actor . sdk . controllers . Intents ; < nl > + import im . actor . sdk . controllers . conversation . view . FastBitmapDrawable ; < nl > import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; < nl > import im . actor . sdk . util . Screen ; < nl > import im . actor . sdk . util . Strings ; < nl > + import im . actor . sdk . util . images . BitmapUtil ; < nl > import im . actor . sdk . view . TintImageView ; < nl > import im . actor . runtime . files . FileSystemReference ; < nl > < nl > @ @ - 82 , 6 + 87 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > protected UploadFileVM uploadFileVM ; < nl > protected boolean isPhoto ; < nl > < nl > + int lastUpdatedIndex = 0 ; < nl > + private boolean updated = false ; < nl > + < nl > public PhotoHolder ( MessagesAdapter fragment , View itemView ) { < nl > super ( fragment , itemView , false ) ; < nl > this . context = fragment . getMessagesFragment ( ) . getActivity ( ) ; < nl > @ @ - 218 , 6 + 226 , 14 @ @ public class PhotoHolder extends MessageHolder { < nl > needRebind = true ; < nl > } < nl > < nl > + updated = false ; < nl > + int updatedCounter = fileMessage . getUpdatedCounter ( ) ; < nl > + if ( lastUpdatedIndex ! = updatedCounter ) { < nl > + updated = true ; < nl > + needRebind = true ; < nl > + lastUpdatedIndex = updatedCounter ; < nl > + } < nl > + < nl > if ( needRebind ) { < nl > / / Resetting progress state < nl > progressContainer . setVisibility ( View . GONE ) ; < nl > @ @ - 227 , 7 + 243 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > < nl > if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { < nl > boolean autoDownload = fileMessage instanceof PhotoContent ; < nl > - previewView . setImageURI ( null ) ; < nl > + if ( ! updated ) { < nl > + previewView . setImageURI ( null ) ; < nl > + } < nl > downloadFileVM = messenger ( ) . bindFile ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) , < nl > autoDownload , new DownloadVMCallback ( fileMessage ) ) ; < nl > } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { < nl > @ @ - 236 , 7 + 254 , 9 @ @ public class PhotoHolder extends MessageHolder { < nl > previewView . setImageURI ( Uri . fromFile ( < nl > new File ( ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ) ) ) ; < nl > } else { < nl > - previewView . setImageURI ( null ) ; < nl > + if ( ! updated ) { < nl > + previewView . setImageURI ( null ) ; < nl > + } < nl > / / TODO : better approach ? < nl > if ( fileMessage . getFastThumb ( ) ! = null ) { < nl > fastThumbLoader . request ( fileMessage . getFastThumb ( ) . getImage ( ) ) ; < nl > @ @ - 318 , 6 + 338 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > / / Releasing images < nl > fastThumbLoader . cancel ( ) ; < nl > previewView . setImageURI ( null ) ; < nl > + previewView . destroyDrawingCache ( ) ; < nl > } < nl > < nl > private class UploadVMCallback implements UploadFileVMCallback { < nl > @ @ - 389 , 22 + 410 , 33 @ @ public class PhotoHolder extends MessageHolder { < nl > < nl > @ Override < nl > public void onDownloading ( float progress ) { < nl > - checkFastThumb ( ) ; < nl > + if ( ! updated ) { < nl > + checkFastThumb ( ) ; < nl > < nl > - showView ( progressContainer ) ; < nl > + showView ( progressContainer ) ; < nl > < nl > - goneView ( progressIcon ) ; < nl > + goneView ( progressIcon ) ; < nl > < nl > - int val = ( int ) ( 100 * progress ) ; < nl > - progressValue . setText ( val + " " ) ; < nl > - progressView . setValue ( val ) ; < nl > - showView ( progressView ) ; < nl > - showView ( progressValue ) ; < nl > + int val = ( int ) ( 100 * progress ) ; < nl > + progressValue . setText ( val + " " ) ; < nl > + progressView . setValue ( val ) ; < nl > + showView ( progressView ) ; < nl > + showView ( progressValue ) ; < nl > + < nl > + } < nl > } < nl > < nl > @ Override < nl > public void onDownloaded ( FileSystemReference reference ) { < nl > if ( isPhoto ) { < nl > + if ( updated ) { < nl > + previewView . destroyDrawingCache ( ) ; < nl > + previewView . buildDrawingCache ( ) ; < nl > + Bitmap drawingCache = previewView . getDrawingCache ( ) ; < nl > + if ( drawingCache ! = null & & ! drawingCache . isRecycled ( ) ) { < nl > + previewView . getHierarchy ( ) . setPlaceholderImage ( new FastBitmapDrawable ( drawingCache ) ) ; < nl > + } < nl > + } < nl > ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) < nl > . setResizeOptions ( new ResizeOptions ( previewView . getLayoutParams ( ) . width , < nl > previewView . getLayoutParams ( ) . height ) ) < nl > @ @ - 414 , 6 + 446 , 7 @ @ public class PhotoHolder extends MessageHolder { < nl > . setImageRequest ( request ) < nl > . build ( ) ; < nl > previewView . setController ( controller ) ; < nl > + < nl > / / previewView . setImageURI ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) ; < nl > } else { < nl > checkFastThumb ( ) ; < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > index a41eab2 . . fb9b958 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java < nl > @ @ - 25 , 7 + 25 , 9 @ @ public class FastBitmapDrawable extends Drawable { < nl > < nl > @ Override < nl > public void draw ( Canvas canvas ) { < nl > - canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; < nl > + if ( ! bitmap . isRecycled ( ) ) { < nl > + canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; < nl > + } < nl > } < nl > < nl > @ Override < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > index 8a00e7f . . 7dfeba1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java < nl > @ @ - 56 , 7 + 56 , 7 @ @ public abstract class AbsContent { < nl > < nl > private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; < nl > < nl > - private int updatedHash ; < nl > + private int updatedCounter = 0 ; < nl > < nl > public static void registerConverter ( ContentConverter contentConverter ) { < nl > ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; < nl > @ @ - 216 , 11 + 216 , 11 @ @ public abstract class AbsContent { < nl > return converters ; < nl > } < nl > < nl > - public int getUpdatedHash ( ) { < nl > - return updatedHash ; < nl > + public int getUpdatedCounter ( ) { < nl > + return updatedCounter ; < nl > } < nl > < nl > - public void setUpdatedHash ( int updatedHash ) { < nl > - this . updatedHash = updatedHash ; < nl > + public void incrementUpdatedCounter ( int oldCounter ) { < nl > + updatedCounter = + + oldCounter ; < nl > } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > index 7a5ffce . . 6c1102d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java < nl > @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; < nl > import im . actor . core . entity . Reaction ; < nl > import im . actor . core . entity . content . AbsContent ; < nl > import im . actor . core . entity . content . DocumentContent ; < nl > + import im . actor . core . entity . content . PhotoContent ; < nl > import im . actor . core . entity . content . TextContent ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . events . AppVisibleChanged ; < nl > @ @ - 280 , 9 + 281 , 8 @ @ public class ConversationActor extends ModuleActor { < nl > } < nl > < nl > / / Updating message < nl > - if ( content instanceof TextContent ) { < nl > - content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; < nl > - } < nl > + content . incrementUpdatedCounter ( message . getContent ( ) . getUpdatedCounter ( ) ) ; < nl > + < nl > Message updatedMsg = message . changeContent ( content ) ; < nl > messages . addOrUpdateItem ( updatedMsg ) ; < nl > if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 index 2a876f2 . . 8f9e8e5 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / activity / controllers / MainPhoneController . java 
 @ @ - 98 , 8 + 98 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 private int shareUser ; 
 private String forwardText = " " ; 
 private String forwardTextRaw = " " ; 
 - private String forwardDocDescriptor = " " ; 
 - private boolean forwardDocIsDoc = true ; 
 + private byte [ ] docContent = null ; 
 
 public MainPhoneController ( ActorMainActivity mainActivity ) { 
 super ( mainActivity ) ; 
 @ @ - 107 , 7 + 106 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 
 @ Override 
 public void onDialogClicked ( final Dialog item ) { 
 - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | ( forwardDocDescriptor ! = null & & ! forwardDocDescriptor . isEmpty ( ) ) | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { 
 + if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { 
 new AlertDialog . Builder ( getActivity ( ) ) 
 . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + item . getDialogTitle ( ) + " ? " ) 
 . setPositiveButton ( R . string . dialog _ ok , new DialogInterface . OnClickListener ( ) { 
 @ @ - 130 , 7 + 129 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 
 @ Override 
 public void onContactClicked ( final Contact contact ) { 
 - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | ( forwardDocDescriptor ! = null & & ! forwardDocDescriptor . isEmpty ( ) ) | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { 
 + if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { 
 new AlertDialog . Builder ( getActivity ( ) ) 
 . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + contact . getName ( ) + " ? " ) 
 . setPositiveButton ( R . string . dialog _ ok , new DialogInterface . OnClickListener ( ) { 
 @ @ - 157 , 8 + 156 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 . putExtra ( " send _ text " , sendText ) 
 . putExtra ( " forward _ text " , forwardText ) 
 . putExtra ( " forward _ text _ raw " , forwardTextRaw ) 
 - . putExtra ( " forward _ doc _ descriptor " , forwardDocDescriptor ) 
 - . putExtra ( " forward _ doc _ is _ doc " , forwardDocIsDoc ) 
 + . putExtra ( " forward _ content " , docContent ) 
 . putExtra ( " share _ user " , shareUser ) ) ; 
 clearShare ( ) ; 
 } 
 @ @ - 169 , 8 + 167 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 . putExtra ( " send _ text " , sendText ) 
 . putExtra ( " forward _ text " , forwardText ) 
 . putExtra ( " forward _ text _ raw " , forwardTextRaw ) 
 - . putExtra ( " forward _ doc _ descriptor " , forwardDocDescriptor ) 
 - . putExtra ( " forward _ doc _ is _ doc " , forwardDocIsDoc ) 
 + . putExtra ( " forward _ content " , docContent ) 
 . putExtra ( " share _ user " , shareUser ) ) ; 
 
 clearShare ( ) ; 
 @ @ - 179 , 7 + 176 , 7 @ @ public class MainPhoneController extends MainBaseController { 
 private void clearShare ( ) { 
 sendUriMultiple . clear ( ) ; 
 sendUriString = " " ; 
 - forwardDocDescriptor = " " ; 
 + docContent = null ; 
 forwardText = " " ; 
 forwardTextRaw = " " ; 
 sendText = " " ; 
 @ @ - 396 , 9 + 393 , 8 @ @ public class MainPhoneController extends MainBaseController { 
 } else if ( extras . containsKey ( " forward _ text " ) ) { 
 forwardText = extras . getString ( " forward _ text " ) ; 
 forwardTextRaw = extras . getString ( " forward _ text _ raw " ) ; 
 - } else if ( extras . containsKey ( " forward _ doc _ descriptor " ) ) { 
 - forwardDocDescriptor = extras . getString ( " forward _ doc _ descriptor " ) ; 
 - forwardDocIsDoc = extras . getBoolean ( " forward _ doc _ is _ doc " ) ; 
 + } else if ( extras . containsKey ( " forward _ content " ) ) { 
 + docContent = extras . getByteArray ( " forward _ content " ) ; 
 } 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 index dd798a8 . . 369d380 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / ChatActivity . java 
 @ @ - 46 , 6 + 46 , 7 @ @ import android . widget . TextView ; 
 import android . widget . Toast ; 
 
 import java . io . File ; 
 + import java . io . IOException ; 
 import java . util . ArrayList ; 
 import java . util . Set ; 
 
 @ @ - 53 , 6 + 54 , 8 @ @ import im . actor . core . api . rpc . ResponseSeqDate ; 
 import im . actor . core . entity . MentionFilterResult ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 + import im . actor . core . entity . content . AbsContent ; 
 + import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . network . RpcException ; 
 import im . actor . core . viewmodel . Command ; 
 import im . actor . core . viewmodel . CommandCallback ; 
 @ @ - 186 , 11 + 189 , 10 @ @ public class ChatActivity extends ActorEditTextActivity { 
 / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 private ArrayList < String > sendUriMultiple ; 
 private int shareUser ; 
 - private String forwardDocDescriptor ; 
 - private boolean forwardDocIsDoc = true ; 
 private String forwardText ; 
 private String forwardTextRaw ; 
 private String sendText ; 
 + private DocumentContent forwardContent ; 
 / / Camera photo destination name 
 private String pending _ fileName ; 
 
 @ @ - 475 , 8 + 477 , 11 @ @ public class ChatActivity extends ActorEditTextActivity { 
 forwardText = intent . getStringExtra ( " forward _ text " ) ; 
 forwardTextRaw = intent . getStringExtra ( " forward _ text _ raw " ) ; 
 sendText = intent . getStringExtra ( " send _ text " ) ; 
 - forwardDocDescriptor = intent . getStringExtra ( " forward _ doc _ descriptor " ) ; 
 - forwardDocIsDoc = intent . getBooleanExtra ( " forward _ doc _ is _ doc " , true ) ; 
 + try { 
 + forwardContent = ( DocumentContent ) DocumentContent . parse ( intent . getByteArrayExtra ( " forward _ content " ) ) ; 
 + } catch ( Exception e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 } 
 
 @ Override 
 @ @ - 657 , 13 + 662 , 9 @ @ public class ChatActivity extends ActorEditTextActivity { 
 forwardTextRaw = " " ; 
 } 
 
 - if ( forwardDocDescriptor ! = null & & ! forwardDocDescriptor . isEmpty ( ) ) { 
 - if ( forwardDocIsDoc ) { 
 - messenger ( ) . sendDocument ( peer , forwardDocDescriptor ) ; 
 - } else { 
 - execute ( messenger ( ) . sendUri ( peer , Uri . fromFile ( new File ( forwardDocDescriptor ) ) ) ) ; 
 - } 
 - forwardDocDescriptor = " " ; 
 + if ( forwardContent ! = null ) { 
 + messenger ( ) . sendDocumentContent ( peer , forwardContent ) ; 
 + forwardContent = null ; 
 } 
 } 
 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java 
 index 7177ce4 . . d8734ea 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / MessagesFragment . java 
 @ @ - 468 , 15 + 468 , 12 @ @ public class MessagesFragment extends DisplayListFragment < Message , MessageHolder 
 i . putExtra ( " forward _ text " , forward ) ; 
 i . putExtra ( " forward _ text _ raw " , forward ) ; 
 } else if ( m . getContent ( ) instanceof DocumentContent ) { 
 - boolean isDoc = ! ( m . getContent ( ) instanceof PhotoContent | | m . getContent ( ) instanceof VideoContent ) ; 
 DocumentContent fileMessage = ( DocumentContent ) m . getContent ( ) ; 
 - if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { 
 - i . putExtra ( " forward _ doc _ descriptor " , messenger ( ) . findDownloadedDescriptor ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) . getFileId ( ) ) ) ; 
 - } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { 
 - String descriptor = ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ; 
 - i . putExtra ( " forward _ doc _ descriptor " , descriptor ) ; 
 + try { 
 + i . putExtra ( " forward _ content " , DocumentContent . serialize ( fileMessage ) ) ; 
 + } catch ( IOException e ) { 
 + e . printStackTrace ( ) ; 
 } 
 - i . putExtra ( " forward _ doc _ is _ doc " , isDoc ) ; 
 } 
 } else { 
 String quote = " " ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 index 60c43a8 . . 2bc5fb7 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / Messenger . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import im . actor . core . entity . PublicGroup ; 
 import im . actor . core . entity . Sex ; 
 import im . actor . core . entity . User ; 
 import im . actor . core . entity . WebActionDescriptor ; 
 + import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . entity . content . FastThumb ; 
 import im . actor . core . entity . content . JsonContent ; 
 import im . actor . core . entity . Sticker ; 
 @ @ - 902 , 6 + 903 , 17 @ @ public class Messenger { 
 } 
 
 / * * 
 + * Send DocumentContent - used for forwarding 
 + * 
 + * @ param peer destination peer 
 + * @ param content content to forward 
 + * / 
 + @ ObjectiveCName ( " sendDocumentContentWithPeer : withContent : " ) 
 + public void sendDocumentContent ( Peer peer , DocumentContent content ) { 
 + modules . getMessagesModule ( ) . sendDocumentContent ( peer , content ) ; 
 + } 
 + 
 + / * * 
 * Delete messages 
 * 
 * @ param peer destination peer 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java 
 index 6b10fd1 . . 9860c84 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / MessagesModule . java 
 @ @ - 44 , 6 + 44 , 7 @ @ import im . actor . core . entity . Message ; 
 import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . User ; 
 + import im . actor . core . entity . content . DocumentContent ; 
 import im . actor . core . entity . content . FastThumb ; 
 import im . actor . core . entity . content . JsonContent ; 
 import im . actor . core . entity . content . TextContent ; 
 @ @ - 480 , 6 + 481 , 10 @ @ public class MessagesModule extends AbsModule implements BusSubscriber { 
 reference . getSize ( ) , reference . getDescriptor ( ) , fastThumb ) ) ; 
 } 
 
 + public void sendDocumentContent ( Peer peer , DocumentContent content ) { 
 + sendMessageActor . send ( new SenderActor . SendDocumentContent ( peer , content ) ) ; 
 + } 
 + 
 public void sendSticker ( @ NotNull Peer peer , 
 @ NotNull Sticker sticker ) { 
 sendMessageActor . send ( new SenderActor . SendSticker ( peer , sticker ) ) ; 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java 
 index a7f85bc . . 67879dd 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / messaging / actors / SenderActor . java 
 @ @ - 232 , 6 + 232 , 21 @ @ public class SenderActor extends ModuleActor { 
 performUploadFile ( rid , descriptor , fileName ) ; 
 } 
 
 + public void doSendDocumentContent ( Peer peer , DocumentContent remoteContent ) { 
 + long rid = RandomUtils . nextRid ( ) ; 
 + long date = createPendingDate ( ) ; 
 + long sortDate = date + 365 * 24 * 60 * 60 * 1000L ; 
 + 
 + Message message = new Message ( rid , sortDate , date , myUid ( ) , MessageState . PENDING , remoteContent , 
 + new ArrayList < Reaction > ( ) ) ; 
 + context ( ) . getMessagesModule ( ) . getConversationActor ( peer ) . send ( message ) ; 
 + 
 + pendingMessages . getPendingMessages ( ) . add ( new PendingMessage ( peer , rid , remoteContent ) ) ; 
 + savePending ( ) ; 
 + 
 + performSendContent ( peer , rid , remoteContent ) ; 
 + } 
 + 
 public void doSendPhoto ( Peer peer , FastThumb fastThumb , String descriptor , String fileName , 
 int fileSize , int w , int h ) { 
 long rid = RandomUtils . nextRid ( ) ; 
 @ @ - 541 , 6 + 556 , 9 @ @ public class SenderActor extends ModuleActor { 
 } else if ( message instanceof SendJson ) { 
 SendJson sendJson = ( SendJson ) message ; 
 doSendJson ( sendJson . getPeer ( ) , sendJson . getJson ( ) ) ; 
 + } else if ( message instanceof SendDocumentContent ) { 
 + SendDocumentContent sendDocumentContent = ( SendDocumentContent ) message ; 
 + doSendDocumentContent ( sendDocumentContent . getPeer ( ) , sendDocumentContent . getDocumentContent ( ) ) ; 
 } else { 
 drop ( message ) ; 
 } 
 @ @ - 589 , 6 + 607 , 24 @ @ public class SenderActor extends ModuleActor { 
 } 
 } 
 
 + public static class SendDocumentContent { 
 + private Peer peer ; 
 + private DocumentContent remoteContent ; 
 + 
 + public SendDocumentContent ( Peer peer , DocumentContent remoteContent ) { 
 + this . peer = peer ; 
 + this . remoteContent = remoteContent ; 
 + } 
 + 
 + public Peer getPeer ( ) { 
 + return peer ; 
 + } 
 + 
 + public DocumentContent getDocumentContent ( ) { 
 + return remoteContent ; 
 + } 
 + } 
 + 
 public static class SendPhoto { 
 private Peer peer ; 
 private FastThumb fastThumb ;

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 084acb3 . . f52746b 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 28 , 17 + 28 , 17 @ @ public class Application extends ActorSDKApplication { 
 
 @ Override 
 public void onConfigureActorSDK ( ) { 
 - ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 + / / ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 - ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 - ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 - ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 - ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 + / / ActorSDK . sharedActor ( ) . setTwitter ( " " ) ; 
 + / / ActorSDK . sharedActor ( ) . setHomePage ( " http : / / www . foo . com " ) ; 
 + / / ActorSDK . sharedActor ( ) . setInviteUrl ( " http : / / www . foo . com " ) ; 
 + / / ActorSDK . sharedActor ( ) . setCallsEnabled ( true ) ; 
 
 / / ActorSDK . sharedActor ( ) . setEndpoints ( new String [ ] { " tcp : / / 192 . 168 . 1 . 184 : 9070 " } ) ; 
 
 - ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 - style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 + / / ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 + / / style . setMainColor ( Color . parseColor ( " # 529a88 " ) ) ; 
 / / style . setAvatarBackgroundResource ( R . drawable . img _ profile _ avatar _ default ) ; 
 / / AbsContent . registerConverter ( new ContentConverter ( ) { 
 / / @ Override 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 index 8b8ceac . . a2d86ff 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / ChatListProcessor . java 
 @ @ - 129 , 8 + 129 , 8 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 
 / / Process Content 
 if ( msg . getContent ( ) instanceof TextContent ) { 
 - int updatedHash = msg . getContent ( ) . getUpdatedHash ( ) ; 
 - if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedHash ) ) { 
 + int updatedCounter = msg . getContent ( ) . getUpdatedCounter ( ) ; 
 + if ( ! preprocessedTexts . containsKey ( msg . getRid ( ) ) | | ! updatedTexts . contains ( updatedCounter ) ) { 
 TextContent text = ( TextContent ) msg . getContent ( ) ; 
 Spannable spannableString = new SpannableString ( text . getText ( ) ) ; 
 boolean hasSpannable = false ; 
 @ @ - 191 , 7 + 191 , 7 @ @ public class ChatListProcessor implements ListProcessor < Message > { 
 spannableString = emoji ( ) . processEmojiCompatMutable ( spannableString , SmileProcessor . CONFIGURATION _ BUBBLES ) ; 
 hasSpannable = true ; 
 } 
 - updatedTexts . add ( updatedHash ) ; 
 + updatedTexts . add ( updatedCounter ) ; 
 preprocessedTexts . put ( msg . getRid ( ) , new PreprocessedTextData ( reactions , text . getText ( ) , 
 hasSpannable ? spannableString : null ) ) ; 
 } else { 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 index 8422981 . . 0e5ad94 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / messages / PhotoHolder . java 
 @ @ - 2 , 7 + 2 , 9 @ @ package im . actor . sdk . controllers . conversation . messages ; 
 
 import android . app . Activity ; 
 import android . content . Context ; 
 + import android . graphics . Bitmap ; 
 import android . graphics . Color ; 
 + import android . graphics . drawable . BitmapDrawable ; 
 import android . net . Uri ; 
 import android . view . View ; 
 import android . widget . FrameLayout ; 
 @ @ - 29 , 6 + 31 , 7 @ @ import im . actor . core . entity . content . FileLocalSource ; 
 import im . actor . core . entity . content . FileRemoteSource ; 
 import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . VideoContent ; 
 + import im . actor . core . utils . ImageHelper ; 
 import im . actor . core . viewmodel . FileCallback ; 
 import im . actor . core . viewmodel . FileVM ; 
 import im . actor . core . viewmodel . FileVMCallback ; 
 @ @ - 38 , 9 + 41 , 11 @ @ import im . actor . core . viewmodel . UploadFileVMCallback ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . R ; 
 import im . actor . sdk . controllers . Intents ; 
 + import im . actor . sdk . controllers . conversation . view . FastBitmapDrawable ; 
 import im . actor . sdk . controllers . conversation . view . FastThumbLoader ; 
 import im . actor . sdk . util . Screen ; 
 import im . actor . sdk . util . Strings ; 
 + import im . actor . sdk . util . images . BitmapUtil ; 
 import im . actor . sdk . view . TintImageView ; 
 import im . actor . runtime . files . FileSystemReference ; 
 
 @ @ - 82 , 6 + 87 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 protected UploadFileVM uploadFileVM ; 
 protected boolean isPhoto ; 
 
 + int lastUpdatedIndex = 0 ; 
 + private boolean updated = false ; 
 + 
 public PhotoHolder ( MessagesAdapter fragment , View itemView ) { 
 super ( fragment , itemView , false ) ; 
 this . context = fragment . getMessagesFragment ( ) . getActivity ( ) ; 
 @ @ - 218 , 6 + 226 , 14 @ @ public class PhotoHolder extends MessageHolder { 
 needRebind = true ; 
 } 
 
 + updated = false ; 
 + int updatedCounter = fileMessage . getUpdatedCounter ( ) ; 
 + if ( lastUpdatedIndex ! = updatedCounter ) { 
 + updated = true ; 
 + needRebind = true ; 
 + lastUpdatedIndex = updatedCounter ; 
 + } 
 + 
 if ( needRebind ) { 
 / / Resetting progress state 
 progressContainer . setVisibility ( View . GONE ) ; 
 @ @ - 227 , 7 + 243 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 
 if ( fileMessage . getSource ( ) instanceof FileRemoteSource ) { 
 boolean autoDownload = fileMessage instanceof PhotoContent ; 
 - previewView . setImageURI ( null ) ; 
 + if ( ! updated ) { 
 + previewView . setImageURI ( null ) ; 
 + } 
 downloadFileVM = messenger ( ) . bindFile ( ( ( FileRemoteSource ) fileMessage . getSource ( ) ) . getFileReference ( ) , 
 autoDownload , new DownloadVMCallback ( fileMessage ) ) ; 
 } else if ( fileMessage . getSource ( ) instanceof FileLocalSource ) { 
 @ @ - 236 , 7 + 254 , 9 @ @ public class PhotoHolder extends MessageHolder { 
 previewView . setImageURI ( Uri . fromFile ( 
 new File ( ( ( FileLocalSource ) fileMessage . getSource ( ) ) . getFileDescriptor ( ) ) ) ) ; 
 } else { 
 - previewView . setImageURI ( null ) ; 
 + if ( ! updated ) { 
 + previewView . setImageURI ( null ) ; 
 + } 
 / / TODO : better approach ? 
 if ( fileMessage . getFastThumb ( ) ! = null ) { 
 fastThumbLoader . request ( fileMessage . getFastThumb ( ) . getImage ( ) ) ; 
 @ @ - 318 , 6 + 338 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 / / Releasing images 
 fastThumbLoader . cancel ( ) ; 
 previewView . setImageURI ( null ) ; 
 + previewView . destroyDrawingCache ( ) ; 
 } 
 
 private class UploadVMCallback implements UploadFileVMCallback { 
 @ @ - 389 , 22 + 410 , 33 @ @ public class PhotoHolder extends MessageHolder { 
 
 @ Override 
 public void onDownloading ( float progress ) { 
 - checkFastThumb ( ) ; 
 + if ( ! updated ) { 
 + checkFastThumb ( ) ; 
 
 - showView ( progressContainer ) ; 
 + showView ( progressContainer ) ; 
 
 - goneView ( progressIcon ) ; 
 + goneView ( progressIcon ) ; 
 
 - int val = ( int ) ( 100 * progress ) ; 
 - progressValue . setText ( val + " " ) ; 
 - progressView . setValue ( val ) ; 
 - showView ( progressView ) ; 
 - showView ( progressValue ) ; 
 + int val = ( int ) ( 100 * progress ) ; 
 + progressValue . setText ( val + " " ) ; 
 + progressView . setValue ( val ) ; 
 + showView ( progressView ) ; 
 + showView ( progressValue ) ; 
 + 
 + } 
 } 
 
 @ Override 
 public void onDownloaded ( FileSystemReference reference ) { 
 if ( isPhoto ) { 
 + if ( updated ) { 
 + previewView . destroyDrawingCache ( ) ; 
 + previewView . buildDrawingCache ( ) ; 
 + Bitmap drawingCache = previewView . getDrawingCache ( ) ; 
 + if ( drawingCache ! = null & & ! drawingCache . isRecycled ( ) ) { 
 + previewView . getHierarchy ( ) . setPlaceholderImage ( new FastBitmapDrawable ( drawingCache ) ) ; 
 + } 
 + } 
 ImageRequest request = ImageRequestBuilder . newBuilderWithSource ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) 
 . setResizeOptions ( new ResizeOptions ( previewView . getLayoutParams ( ) . width , 
 previewView . getLayoutParams ( ) . height ) ) 
 @ @ - 414 , 6 + 446 , 7 @ @ public class PhotoHolder extends MessageHolder { 
 . setImageRequest ( request ) 
 . build ( ) ; 
 previewView . setController ( controller ) ; 
 + 
 / / previewView . setImageURI ( Uri . fromFile ( new File ( reference . getDescriptor ( ) ) ) ) ; 
 } else { 
 checkFastThumb ( ) ; 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 index a41eab2 . . fb9b958 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / conversation / view / FastBitmapDrawable . java 
 @ @ - 25 , 7 + 25 , 9 @ @ public class FastBitmapDrawable extends Drawable { 
 
 @ Override 
 public void draw ( Canvas canvas ) { 
 - canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; 
 + if ( ! bitmap . isRecycled ( ) ) { 
 + canvas . drawBitmap ( bitmap , bitmapBounds , getBounds ( ) , PAINT ) ; 
 + } 
 } 
 
 @ Override 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 index 8a00e7f . . 7dfeba1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / AbsContent . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public abstract class AbsContent { 
 
 private static ContentConverter [ ] converters = new ContentConverter [ 0 ] ; 
 
 - private int updatedHash ; 
 + private int updatedCounter = 0 ; 
 
 public static void registerConverter ( ContentConverter contentConverter ) { 
 ContentConverter [ ] nConverters = new ContentConverter [ converters . length + 1 ] ; 
 @ @ - 216 , 11 + 216 , 11 @ @ public abstract class AbsContent { 
 return converters ; 
 } 
 
 - public int getUpdatedHash ( ) { 
 - return updatedHash ; 
 + public int getUpdatedCounter ( ) { 
 + return updatedCounter ; 
 } 
 
 - public void setUpdatedHash ( int updatedHash ) { 
 - this . updatedHash = updatedHash ; 
 + public void incrementUpdatedCounter ( int oldCounter ) { 
 + updatedCounter = + + oldCounter ; 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 index 7a5ffce . . 6c1102d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / ConversationActor . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import im . actor . core . entity . PeerType ; 
 import im . actor . core . entity . Reaction ; 
 import im . actor . core . entity . content . AbsContent ; 
 import im . actor . core . entity . content . DocumentContent ; 
 + import im . actor . core . entity . content . PhotoContent ; 
 import im . actor . core . entity . content . TextContent ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . events . AppVisibleChanged ; 
 @ @ - 280 , 9 + 281 , 8 @ @ public class ConversationActor extends ModuleActor { 
 } 
 
 / / Updating message 
 - if ( content instanceof TextContent ) { 
 - content . setUpdatedHash ( ( ( TextContent ) content ) . getText ( ) . hashCode ( ) ) ; 
 - } 
 + content . incrementUpdatedCounter ( message . getContent ( ) . getUpdatedCounter ( ) ) ; 
 + 
 Message updatedMsg = message . changeContent ( content ) ; 
 messages . addOrUpdateItem ( updatedMsg ) ; 
 if ( updatedMsg . getContent ( ) instanceof DocumentContent ) {
