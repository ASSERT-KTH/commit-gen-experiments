BLEU SCORE: 0.4111336169005197

TEST MSG: feat ( android ) : Remove MainPhoneController
GENERATED MSG: fix ( android ) : recover push

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 6b5273b . . 9bc0f42 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 157 , 11 + 157 , 6 @ @ public void addCustomShareMenuFields ( ArrayList < ShareMenuField > shareMenuFields ) < nl > } < nl > } ; < nl > } < nl > - < nl > - / / @ Override < nl > - / / public MainPhoneController getMainPhoneController ( ActorMainActivity mainActivity ) { < nl > - / / return new MainPhoneControllerEx ( mainActivity ) ; < nl > - / / } < nl > } < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > index ca73df8 . . db69967 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java < nl > @ @ - 12 , 9 + 12 , 7 @ @ import java . util . ArrayList ; < nl > < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . runtime . android . view . BindedViewHolder ; < nl > - import im . actor . sdk . controllers . root . RootActivity ; < nl > import im . actor . sdk . controllers . conversation . ShareMenuField ; < nl > - import im . actor . sdk . controllers . root . MainPhoneController ; < nl > import im . actor . sdk . controllers . conversation . messages . MessageHolder ; < nl > import im . actor . sdk . controllers . conversation . MessagesAdapter ; < nl > import im . actor . sdk . controllers . settings . BaseActorProfileActivity ; < nl > @ @ - 121 , 14 + 119 , 6 @ @ public interface ActorSDKDelegate { < nl > < T extends BindedViewHolder , J extends T > J getViewHolder ( Class < T > base , Object . . . args ) ; < nl > < nl > / * * < nl > - * Override for hacking MainPhoneController - activity with chats / contacts < nl > - * < nl > - * @ param mainActivity main activity < nl > - * @ return hacked MainPhoneController < nl > - * / < nl > - MainPhoneController getMainPhoneController ( RootActivity mainActivity ) ; < nl > - < nl > - / * * < nl > * Override for hacking custom messages view holders < nl > * < nl > * @ param dataTypeHash json dataType hash < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > index f696d9b . . 330510d 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java < nl > @ @ - 13 , 9 + 13 , 7 @ @ import java . util . ArrayList ; < nl > < nl > import im . actor . core . entity . Peer ; < nl > import im . actor . runtime . android . view . BindedViewHolder ; < nl > - import im . actor . sdk . controllers . root . RootActivity ; < nl > import im . actor . sdk . controllers . conversation . ShareMenuField ; < nl > - import im . actor . sdk . controllers . root . MainPhoneController ; < nl > import im . actor . sdk . controllers . conversation . messages . MessageHolder ; < nl > import im . actor . sdk . controllers . conversation . MessagesAdapter ; < nl > import im . actor . sdk . controllers . settings . BaseActorProfileActivity ; < nl > @ @ - 169 , 17 + 167 , 6 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { < nl > } < nl > < nl > / * * < nl > - * Override for hacking MainPhoneController - activity with chats / contacts < nl > - * < nl > - * @ param mainActivity main activity < nl > - * @ return hacked MainPhoneController < nl > - * / < nl > - @ Override < nl > - public MainPhoneController getMainPhoneController ( RootActivity mainActivity ) { < nl > - return null ; < nl > - } < nl > - < nl > - / * * < nl > * Override for hacking custom messages view holders < nl > * < nl > * @ param dataTypeHash id in same order as added to AbsContent . registerConverter ( ) < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainBaseController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainBaseController . java < nl > deleted file mode 100644 < nl > index db823bb . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainBaseController . java < nl > + + + / dev / null < nl > @ @ - 1 , 16 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . root ; < nl > - < nl > - import im . actor . core . entity . Contact ; < nl > - import im . actor . sdk . controllers . activity . base . Controller ; < nl > - import im . actor . core . entity . Dialog ; < nl > - < nl > - public abstract class MainBaseController extends Controller < RootActivity > { < nl > - < nl > - protected MainBaseController ( RootActivity activity ) { < nl > - super ( activity ) ; < nl > - } < nl > - < nl > - public abstract void onDialogClicked ( Dialog dialogItem ) ; < nl > - < nl > - public abstract void onContactClicked ( Contact contact ) ; < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java < nl > deleted file mode 100644 < nl > index eef02b3 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java < nl > + + + / dev / null < nl > @ @ - 1 , 627 + 0 , 0 @ @ < nl > - package im . actor . sdk . controllers . root ; < nl > - < nl > - import android . content . Intent ; < nl > - import android . graphics . drawable . ColorDrawable ; < nl > - import android . net . Uri ; < nl > - import android . os . Bundle ; < nl > - import android . support . v4 . view . MenuItemCompat ; < nl > - import android . support . v7 . app . ActionBar ; < nl > - import android . support . v7 . app . AlertDialog ; < nl > - import android . support . v7 . widget . ChatLinearLayoutManager ; < nl > - import android . support . v7 . widget . RecyclerView ; < nl > - import android . support . v7 . widget . SearchView ; < nl > - import android . support . v7 . widget . Toolbar ; < nl > - import android . view . Menu ; < nl > - import android . view . MenuItem ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . widget . FrameLayout ; < nl > - import android . widget . LinearLayout ; < nl > - import android . widget . TextView ; < nl > - < nl > - import com . getbase . floatingactionbutton . FloatingActionButton ; < nl > - < nl > - import java . util . ArrayList ; < nl > - < nl > - import im . actor . core . entity . Contact ; < nl > - import im . actor . core . entity . Dialog ; < nl > - import im . actor . core . entity . Peer ; < nl > - import im . actor . core . entity . SearchEntity ; < nl > - import im . actor . core . viewmodel . CommandCallback ; < nl > - import im . actor . core . viewmodel . UserVM ; < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . ActorStyle ; < nl > - import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > - import im . actor . runtime . generic . mvvm . DisplayList ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . Intents ; < nl > - import im . actor . sdk . controllers . contacts . AddContactActivity ; < nl > - import im . actor . sdk . controllers . compose . ComposeActivity ; < nl > - import im . actor . sdk . controllers . contacts . ContactsActivity ; < nl > - import im . actor . sdk . controllers . dialogs . DialogsFragment ; < nl > - import im . actor . sdk . controllers . fragment . help . HelpActivity ; < nl > - import im . actor . sdk . controllers . fragment . main . SearchAdapter ; < nl > - import im . actor . sdk . controllers . fragment . main . SearchHolder ; < nl > - import im . actor . sdk . util . Screen ; < nl > - import im . actor . sdk . util . Fonts ; < nl > - import im . actor . sdk . view . adapters . HeaderViewRecyclerAdapter ; < nl > - import im . actor . sdk . view . adapters . OnItemClickedListener ; < nl > - < nl > - import static im . actor . sdk . util . ViewUtils . goneView ; < nl > - import static im . actor . sdk . util . ViewUtils . showView ; < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - < nl > - public class MainPhoneController extends MainBaseController { < nl > - < nl > - private RecyclerView searchList ; < nl > - private View searchContainer ; < nl > - private TextView searchEmptyView ; < nl > - private TextView searchHintView ; < nl > - < nl > - private boolean isSearchVisible = false ; < nl > - private SearchAdapter searchAdapter ; < nl > - private BindedDisplayList < SearchEntity > searchDisplay ; < nl > - private final DisplayList . Listener searchListener = ( ) - > onSearchChanged ( ) ; < nl > - private SearchView searchView ; < nl > - private MenuItem searchMenu ; < nl > - < nl > - private View syncInProgressView ; < nl > - private View emptyContactsView ; < nl > - < nl > - private com . getbase . floatingactionbutton . FloatingActionButton fabRoot ; < nl > - < nl > - private String sendUriString = " " ; < nl > - private String sendText = " " ; < nl > - private ArrayList < String > sendUriMultiple = new ArrayList < String > ( ) ; < nl > - private int shareUser ; < nl > - private String forwardText = " " ; < nl > - private String forwardTextRaw = " " ; < nl > - private byte [ ] docContent = null ; < nl > - private String joinGroupUrl ; < nl > - < nl > - private SearchHolder footerSearchHolder ; < nl > - private String searchQuery ; < nl > - private LinearLayout footer ; < nl > - < nl > - public MainPhoneController ( RootActivity mainActivity ) { < nl > - super ( mainActivity ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onDialogClicked ( final Dialog item ) { < nl > - < nl > - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + item . getDialogTitle ( ) + " ? " ) < nl > - . setPositiveButton ( R . string . dialog _ ok , ( dialog , which ) - > { < nl > - openDialog ( item ) ; < nl > - } ) < nl > - . setNegativeButton ( R . string . dialog _ cancel , ( dialog , which ) - > { < nl > - dialog . dismiss ( ) ; < nl > - } ) < nl > - . show ( ) ; < nl > - } else { < nl > - openDialog ( item ) ; < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onContactClicked ( final Contact contact ) { < nl > - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + contact . getName ( ) + " ? " ) < nl > - . setPositiveButton ( R . string . dialog _ ok , ( dialog , which ) - > { < nl > - openContactDialog ( contact ) ; < nl > - } ) < nl > - . setNegativeButton ( R . string . dialog _ cancel , ( dialog , which ) - > { < nl > - dialog . dismiss ( ) ; < nl > - } ) < nl > - . show ( ) ; < nl > - } else { < nl > - openContactDialog ( contact ) ; < nl > - } < nl > - } < nl > - < nl > - private void openDialog ( Dialog item ) { < nl > - startActivity ( Intents . openDialog ( item . getPeer ( ) , false , getActivity ( ) ) . putExtra ( " send _ uri " , sendUriString ) < nl > - . putExtra ( " send _ uri _ multiple " , sendUriMultiple ) < nl > - . putExtra ( " send _ text " , sendText ) < nl > - . putExtra ( " forward _ text " , forwardText ) < nl > - . putExtra ( " forward _ text _ raw " , forwardTextRaw ) < nl > - . putExtra ( " forward _ content " , docContent ) < nl > - . putExtra ( " share _ user " , shareUser ) ) ; < nl > - clearShare ( ) ; < nl > - } < nl > - < nl > - private void openContactDialog ( Contact contact ) { < nl > - getActivity ( ) . startActivity ( Intents . openPrivateDialog ( contact . getUid ( ) , true , getActivity ( ) ) . putExtra ( " send _ uri " , sendUriString ) < nl > - . putExtra ( " send _ uri _ multiple " , sendUriMultiple ) < nl > - . putExtra ( " send _ text " , sendText ) < nl > - . putExtra ( " forward _ text " , forwardText ) < nl > - . putExtra ( " forward _ text _ raw " , forwardTextRaw ) < nl > - . putExtra ( " forward _ content " , docContent ) < nl > - . putExtra ( " share _ user " , shareUser ) ) ; < nl > - < nl > - clearShare ( ) ; < nl > - } < nl > - < nl > - private void clearShare ( ) { < nl > - sendUriMultiple . clear ( ) ; < nl > - sendUriString = " " ; < nl > - docContent = null ; < nl > - forwardText = " " ; < nl > - forwardTextRaw = " " ; < nl > - sendText = " " ; < nl > - shareUser = 0 ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onCreate ( Bundle savedInstance ) { < nl > - < nl > - Intent intent = getIntent ( ) ; < nl > - < nl > - handleIntent ( intent ) ; < nl > - < nl > - setContentView ( R . layout . actor _ activity _ main ) ; < nl > - ActorStyle style = ActorSDK . sharedActor ( ) . style ; < nl > - getActivity ( ) . setSupportActionBar ( ( ( Toolbar ) findViewById ( R . id . toolbar ) ) ) ; < nl > - < nl > - syncInProgressView = findViewById ( R . id . syncInProgress ) ; < nl > - ( ( TextView ) syncInProgressView . findViewById ( R . id . wait _ text ) ) . setTextColor ( style . getTextSecondaryColor ( ) ) ; < nl > - ( ( TextView ) syncInProgressView . findViewById ( R . id . sync _ text ) ) . setTextColor ( style . getMainColor ( ) ) ; < nl > - syncInProgressView . findViewById ( R . id . sync _ background ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; < nl > - syncInProgressView . findViewById ( R . id . syncInProgress ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; < nl > - emptyContactsView = findViewById ( R . id . emptyContacts ) ; < nl > - findViewById ( R . id . emptyContactsFrame ) . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - ( ( TextView ) emptyContactsView . findViewById ( R . id . no _ contacts ) ) . setTextColor ( style . getTextSecondaryColor ( ) ) ; < nl > - ( ( TextView ) emptyContactsView . findViewById ( R . id . no _ contacts ) ) . setText ( getResources ( ) . getString ( R . string . main _ empty _ invite _ hint ) . replace ( " { appName } " , ActorSDK . sharedActor ( ) . getAppName ( ) ) ) ; < nl > - ( ( TextView ) emptyContactsView . findViewById ( R . id . add _ contact _ manually _ text ) ) . setTextColor ( style . getTextSecondaryColor ( ) ) ; < nl > - ( ( TextView ) emptyContactsView . findViewById ( R . id . empty _ contacts _ text ) ) . setTextColor ( style . getMainColor ( ) ) ; < nl > - emptyContactsView . findViewById ( R . id . empty _ contacts _ bg ) . setBackgroundColor ( style . getMainColor ( ) ) ; < nl > - < nl > - TextView addContactBtnText = ( TextView ) findViewById ( R . id . addContactButtonText ) ; < nl > - addContactBtnText . setTextColor ( style . getTextSecondaryColor ( ) ) ; < nl > - addContactBtnText . setTypeface ( Fonts . medium ( ) ) ; < nl > - TextView inviteBtnText = ( TextView ) findViewById ( R . id . inviteButtonText ) ; < nl > - inviteBtnText . setTypeface ( Fonts . medium ( ) ) ; < nl > - inviteBtnText . setTextColor ( style . getTextPrimaryInvColor ( ) ) ; < nl > - < nl > - fabRoot = ( FloatingActionButton ) findViewById ( R . id . rootFab ) ; < nl > - if ( ActorSDK . sharedActor ( ) . style . getFabColor ( ) ! = 0 ) { < nl > - fabRoot . setColorNormal ( ActorSDK . sharedActor ( ) . style . getFabColor ( ) ) ; < nl > - } < nl > - if ( ActorSDK . sharedActor ( ) . style . getFabPressedColor ( ) ! = 0 ) { < nl > - fabRoot . setColorPressed ( ActorSDK . sharedActor ( ) . style . getFabPressedColor ( ) ) ; < nl > - } < nl > - fabRoot . setOnClickListener ( v - > startActivity ( new Intent ( getActivity ( ) , ComposeActivity . class ) ) ) ; < nl > - < nl > - searchList = ( RecyclerView ) findViewById ( R . id . searchList ) ; < nl > - searchList . setLayoutManager ( new ChatLinearLayoutManager ( getActivity ( ) ) ) ; < nl > - < nl > - searchContainer = findViewById ( R . id . searchCont ) ; < nl > - searchContainer . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - searchEmptyView = ( TextView ) findViewById ( R . id . empty ) ; < nl > - searchHintView = ( TextView ) findViewById ( R . id . searchHint ) ; < nl > - searchEmptyView . setTextColor ( style . getTextSecondaryColor ( ) ) ; < nl > - searchHintView . setTextColor ( style . getTextSecondaryColor ( ) ) ; < nl > - searchHintView . setVisibility ( View . GONE ) ; < nl > - searchEmptyView . setVisibility ( View . GONE ) ; < nl > - < nl > - / / pager = ( ViewPager ) findViewById ( R . id . vp _ pager ) ; < nl > - / / pager . setOffscreenPageLimit ( 2 ) ; < nl > - / / homePagerAdapter = getHomePagerAdapter ( ) ; < nl > - / / pager . setAdapter ( homePagerAdapter ) ; < nl > - / / pager . setCurrentItem ( 0 ) ; < nl > - / / pager . setOnPageChangeListener ( new ViewPager . OnPageChangeListener ( ) { < nl > - / / private int prevPage = - 1 ; < nl > - / / < nl > - / / @ Override < nl > - / / public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { < nl > - / / < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onPageSelected ( int position ) { < nl > - / / if ( position = = 0 ) { < nl > - / / prevPage = position ; < nl > - / / } else if ( position = = 1 ) { < nl > - / / prevPage = position ; < nl > - / / } < nl > - / / } < nl > - / / < nl > - / / @ Override < nl > - / / public void onPageScrollStateChanged ( int state ) { < nl > - / / < nl > - / / } < nl > - / / } ) ; < nl > - < nl > - if ( savedInstance = = null ) { < nl > - getFragmentManager ( ) . beginTransaction ( ) < nl > - . add ( R . id . contentRoot , new DialogsFragment ( ) ) < nl > - . commit ( ) ; < nl > - } < nl > - < nl > - findViewById ( R . id . addContactButton ) . setOnClickListener ( v - > startActivity ( new Intent ( getActivity ( ) , AddContactActivity . class ) ) ) ; < nl > - < nl > - findViewById ( R . id . inviteButton ) . setOnClickListener ( v - > { < nl > - String inviteMessage = getResources ( ) . getString ( R . string . invite _ message ) . replace ( " { inviteUrl } " , ActorSDK . sharedActor ( ) . getInviteUrl ( ) ) . replace ( " { appName } " , ActorSDK . sharedActor ( ) . getAppName ( ) ) ; < nl > - Intent sendIntent = new Intent ( Intent . ACTION _ SEND ) ; < nl > - sendIntent . putExtra ( Intent . EXTRA _ TEXT , inviteMessage ) ; < nl > - sendIntent . setType ( " text / plain " ) ; < nl > - startActivity ( sendIntent ) ; < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onNewIntent ( Intent intent ) { < nl > - handleIntent ( intent ) ; < nl > - } < nl > - < nl > - private void handleIntent ( Intent intent ) { < nl > - if ( intent ! = null ) { < nl > - if ( intent . getAction ( ) ! = null ) { < nl > - if ( intent . getAction ( ) . equals ( Intent . ACTION _ VIEW ) & & intent . getData ( ) ! = null ) { < nl > - joinGroupUrl = intent . getData ( ) . toString ( ) ; < nl > - if ( joinGroupUrl ! = null & & ! joinGroupUrl . isEmpty ( ) ) { < nl > - String [ ] urlSplit = null ; < nl > - if ( joinGroupUrl . contains ( " join " ) ) { < nl > - urlSplit = joinGroupUrl . split ( " / join / " ) ; < nl > - } else if ( joinGroupUrl . contains ( " token " ) ) { < nl > - urlSplit = joinGroupUrl . split ( " token = " ) ; < nl > - } < nl > - if ( urlSplit ! = null ) { < nl > - joinGroupUrl = urlSplit [ urlSplit . length - 1 ] ; < nl > - < nl > - getActivity ( ) . execute ( messenger ( ) . joinGroupViaToken ( joinGroupUrl ) , R . string . invite _ link _ title , new CommandCallback < Integer > ( ) { < nl > - @ Override < nl > - public void onResult ( Integer res ) { < nl > - getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; < nl > - getActivity ( ) . finish ( ) ; < nl > - joinGroupUrl = " " ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - joinGroupUrl = " " ; < nl > - } < nl > - } ) ; < nl > - } < nl > - } < nl > - } else if ( intent . getAction ( ) . equals ( Intent . ACTION _ SEND ) ) { < nl > - if ( " text / plain " . equals ( getIntent ( ) . getType ( ) ) ) { < nl > - sendText = intent . getStringExtra ( Intent . EXTRA _ TEXT ) ; < nl > - } else if ( intent . getParcelableExtra ( Intent . EXTRA _ STREAM ) ! = null ) { < nl > - sendUriString = intent . getParcelableExtra ( Intent . EXTRA _ STREAM ) . toString ( ) ; < nl > - } < nl > - } else if ( intent . getAction ( ) . equals ( Intent . ACTION _ SEND _ MULTIPLE ) ) { < nl > - ArrayList < Uri > imageUris = intent . getParcelableArrayListExtra ( Intent . EXTRA _ STREAM ) ; < nl > - if ( imageUris ! = null ) { < nl > - for ( Uri u : imageUris ) { < nl > - sendUriMultiple . add ( u . toString ( ) ) ; < nl > - } < nl > - } < nl > - } < nl > - } < nl > - < nl > - if ( intent . getExtras ( ) ! = null ) { < nl > - Bundle extras = intent . getExtras ( ) ; < nl > - if ( extras . containsKey ( " share _ user " ) ) { < nl > - shareUser = extras . getInt ( " share _ user " ) ; < nl > - } else if ( extras . containsKey ( " forward _ text " ) ) { < nl > - forwardText = extras . getString ( " forward _ text " ) ; < nl > - forwardTextRaw = extras . getString ( " forward _ text _ raw " ) ; < nl > - } else if ( extras . containsKey ( " forward _ content " ) ) { < nl > - docContent = extras . getByteArray ( " forward _ content " ) ; < nl > - } < nl > - } < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onResume ( ) { < nl > - ActionBar ab = getActionBar ( ) ; < nl > - ab . setDisplayShowCustomEnabled ( false ) ; < nl > - ab . setDisplayHomeAsUpEnabled ( false ) ; < nl > - ab . setDisplayShowHomeEnabled ( false ) ; < nl > - ab . setDisplayShowTitleEnabled ( true ) ; < nl > - ab . setTitle ( getResources ( ) . getString ( R . string . app _ name ) ) ; < nl > - < nl > - if ( ActorSDK . sharedActor ( ) . style . getToolBarColor ( ) ! = 0 ) { < nl > - ab . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . getToolBarColor ( ) ) ) ; < nl > - } < nl > - < nl > - onConfigireToolbarCustomView ( ab ) ; < nl > - < nl > - onShowToolbarCustomView ( ) ; < nl > - emptyContactsView . setVisibility ( View . GONE ) ; < nl > - syncInProgressView . setVisibility ( View . GONE ) ; < nl > - < nl > - getActivity ( ) . bind ( messenger ( ) . getAppState ( ) . getIsAppLoaded ( ) , messenger ( ) . getAppState ( ) . getIsAppEmpty ( ) , ( isAppLoaded , Value , isAppEmpty , Value2 ) - > { < nl > - if ( isAppEmpty ) { < nl > - if ( isAppLoaded ) { < nl > - onHideToolbarCustomView ( ) ; < nl > - emptyContactsView . setVisibility ( View . VISIBLE ) ; < nl > - syncInProgressView . setVisibility ( View . GONE ) ; < nl > - < nl > - getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > - } else { < nl > - onHideToolbarCustomView ( ) ; < nl > - emptyContactsView . setVisibility ( View . GONE ) ; < nl > - syncInProgressView . setVisibility ( View . VISIBLE ) ; < nl > - getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > - } < nl > - } else { < nl > - onShowToolbarCustomView ( ) ; < nl > - emptyContactsView . setVisibility ( View . GONE ) ; < nl > - syncInProgressView . setVisibility ( View . GONE ) ; < nl > - getActivity ( ) . invalidateOptionsMenu ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - protected void onShowToolbarCustomView ( ) { < nl > - / / barTabs . setVisibility ( View . VISIBLE ) ; < nl > - } < nl > - < nl > - protected void onHideToolbarCustomView ( ) { < nl > - / / barTabs . setVisibility ( View . GONE ) ; < nl > - } < nl > - < nl > - protected void onConfigireToolbarCustomView ( ActionBar ab ) { < nl > - / / FrameLayout tabsContainer = new FrameLayout ( getActivity ( ) ) ; < nl > - / / barTabs = new PagerSlidingTabStrip ( getActivity ( ) ) ; < nl > - / / barTabs . setTabBackground ( R . drawable . selector _ bar ) ; < nl > - / / / / barTabs . setIndicatorColorResource ( R . color . main _ tab _ selected ) ; < nl > - / / barTabs . setIndicatorHeight ( Screen . dp ( 2 ) ) ; < nl > - / / < nl > - / / barTabs . setDividerColorResource ( android . R . color . transparent ) ; < nl > - / / / / barTabs . setTextColorResource ( R . color . main _ tab _ text ) ; < nl > - / / barTabs . setTextSize ( Screen . dp ( 14 ) ) ; < nl > - / / barTabs . setUnderlineHeight ( 0 ) ; < nl > - / / < nl > - / / barTabs . setViewPager ( pager ) ; < nl > - < nl > - / / Icons < nl > - / / int width = Screen . dp ( 72 * 2 ) ; < nl > - < nl > - / / tabsContainer . addView ( barTabs , new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , Screen . dp ( 56 ) ) ) ; < nl > - / / Toolbar . LayoutParams lp = new Toolbar . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , Screen . dp ( 56 ) ) ; < nl > - / / tabsContainer . setLayoutParams ( lp ) ; < nl > - / / ab . setCustomView ( tabsContainer ) ; < nl > - } < nl > - < nl > - < nl > - @ Override < nl > - public boolean onCreateOptionsMenu ( Menu menu ) { < nl > - getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; < nl > - < nl > - searchMenu = menu . findItem ( R . id . search ) ; < nl > - if ( messenger ( ) . getAppState ( ) . getIsAppEmpty ( ) . get ( ) ) { < nl > - searchMenu . setVisible ( false ) ; < nl > - } else { < nl > - searchMenu . setVisible ( true ) ; < nl > - } < nl > - searchView = ( SearchView ) searchMenu . getActionView ( ) ; < nl > - searchView . setIconifiedByDefault ( true ) ; < nl > - < nl > - MenuItemCompat . setOnActionExpandListener ( searchMenu , new MenuItemCompat . OnActionExpandListener ( ) { < nl > - @ Override < nl > - public boolean onMenuItemActionExpand ( MenuItem item ) { < nl > - showSearch ( ) ; < nl > - return true ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onMenuItemActionCollapse ( MenuItem item ) { < nl > - hideSearch ( ) ; < nl > - return true ; < nl > - } < nl > - } ) ; < nl > - < nl > - searchView . setOnQueryTextListener ( new SearchView . OnQueryTextListener ( ) { < nl > - @ Override < nl > - public boolean onQueryTextSubmit ( String s ) { < nl > - return false ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onQueryTextChange ( String s ) { < nl > - searchQuery = s . trim ( ) ; < nl > - < nl > - if ( isSearchVisible ) { < nl > - if ( s . trim ( ) . length ( ) > 0 ) { < nl > - String activeSearchQuery = searchQuery ; < nl > - searchDisplay . initSearch ( s . trim ( ) . toLowerCase ( ) , false ) ; < nl > - searchAdapter . setQuery ( s . trim ( ) . toLowerCase ( ) ) ; < nl > - messenger ( ) . findUsers ( s ) . start ( new CommandCallback < UserVM [ ] > ( ) { < nl > - @ Override < nl > - public void onResult ( UserVM [ ] res ) { < nl > - int footerVisability = footer . getVisibility ( ) ; < nl > - if ( searchQuery . equals ( activeSearchQuery ) ) { < nl > - boolean showResult = false ; < nl > - UserVM u = null ; < nl > - if ( res . length > 0 ) { < nl > - u = res [ 0 ] ; < nl > - showResult = true ; < nl > - for ( int i = 0 ; i < searchDisplay . getSize ( ) ; i + + ) { < nl > - if ( searchDisplay . getItem ( i ) . getPeer ( ) . equals ( Peer . user ( u . getId ( ) ) ) ) < nl > - showResult = false ; < nl > - break ; < nl > - } < nl > - } < nl > - if ( showResult ) { < nl > - footerSearchHolder . bind ( new SearchEntity ( Peer . user ( u . getId ( ) ) , 0 , u . getAvatar ( ) . get ( ) , u . getName ( ) . get ( ) ) , activeSearchQuery , true ) ; < nl > - showView ( footer ) ; < nl > - } else { < nl > - goneView ( footer ) ; < nl > - } < nl > - } < nl > - if ( footerVisability ! = footer . getVisibility ( ) ) { < nl > - onSearchChanged ( ) ; < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - < nl > - } < nl > - } ) ; < nl > - } else { < nl > - searchDisplay . initEmpty ( ) ; < nl > - goneView ( footer ) ; < nl > - < nl > - } < nl > - } < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - return true ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onBackPressed ( ) { < nl > - if ( isSearchVisible ) { < nl > - hideSearch ( ) ; < nl > - return true ; < nl > - } < nl > - < nl > - return false ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onPause ( ) { < nl > - super . onPause ( ) ; < nl > - hideSearch ( ) ; < nl > - } < nl > - < nl > - private void showSearch ( ) { < nl > - if ( isSearchVisible ) { < nl > - return ; < nl > - } < nl > - isSearchVisible = true ; < nl > - < nl > - searchDisplay = messenger ( ) . buildSearchDisplayList ( ) ; < nl > - searchAdapter = new SearchAdapter ( getActivity ( ) , searchDisplay , new OnItemClickedListener < SearchEntity > ( ) { < nl > - @ Override < nl > - public void onClicked ( SearchEntity item ) { < nl > - startActivity ( Intents . openDialog ( item . getPeer ( ) , false , getActivity ( ) ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onLongClicked ( SearchEntity item ) { < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - HeaderViewRecyclerAdapter recyclerAdapter = new HeaderViewRecyclerAdapter ( searchAdapter ) ; < nl > - < nl > - View header = new View ( getActivity ( ) ) ; < nl > - header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 0 ) ) ) ; < nl > - header . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; < nl > - recyclerAdapter . addHeaderView ( header ) ; < nl > - < nl > - TextView footerTitle = new TextView ( getActivity ( ) ) ; < nl > - footerTitle . setText ( R . string . main _ search _ global _ header ) ; < nl > - footerTitle . setTextSize ( 16 ) ; < nl > - footerTitle . setPadding ( Screen . dp ( 12 ) , Screen . dp ( 8 ) , 0 , Screen . dp ( 8 ) ) ; < nl > - footerTitle . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getBackyardBackgroundColor ( ) ) ; < nl > - footerTitle . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; < nl > - < nl > - footerSearchHolder = new SearchHolder ( getActivity ( ) , new OnItemClickedListener < SearchEntity > ( ) { < nl > - @ Override < nl > - public void onClicked ( SearchEntity item ) { < nl > - int peerId = item . getPeer ( ) . getPeerId ( ) ; < nl > - getActivity ( ) . execute ( messenger ( ) . addContact ( peerId ) , R . string . progress _ common , new CommandCallback < Boolean > ( ) { < nl > - @ Override < nl > - public void onResult ( Boolean res2 ) { < nl > - startActivity ( Intents . openPrivateDialog ( peerId , < nl > - true , < nl > - getActivity ( ) ) ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onError ( Exception e ) { < nl > - startActivity ( Intents . openPrivateDialog ( peerId , < nl > - true , < nl > - getActivity ( ) ) ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onLongClicked ( SearchEntity item ) { < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - View footerGlobalSearchView = footerSearchHolder . itemView ; < nl > - < nl > - footer = new LinearLayout ( getActivity ( ) ) ; < nl > - footer . setOrientation ( LinearLayout . VERTICAL ) ; < nl > - LinearLayout . LayoutParams params = new LinearLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , ViewGroup . LayoutParams . WRAP _ CONTENT ) ; < nl > - footer . addView ( footerTitle , params ) ; < nl > - footer . addView ( footerGlobalSearchView , params ) ; < nl > - < nl > - footer . setVisibility ( View . GONE ) ; < nl > - < nl > - recyclerAdapter . addFooterView ( footer ) ; < nl > - < nl > - searchList . setAdapter ( recyclerAdapter ) ; < nl > - searchDisplay . addListener ( searchListener ) ; < nl > - onHideToolbarCustomView ( ) ; < nl > - showView ( searchHintView , false ) ; < nl > - goneView ( searchEmptyView , false ) ; < nl > - < nl > - showView ( searchContainer ) ; < nl > - } < nl > - < nl > - private void onSearchChanged ( ) { < nl > - if ( ! searchDisplay . isInSearchState ( ) ) { < nl > - showView ( searchHintView ) ; < nl > - goneView ( searchEmptyView ) ; < nl > - } else { < nl > - goneView ( searchHintView ) ; < nl > - if ( searchDisplay . getSize ( ) = = 0 & & footer . getVisibility ( ) ! = View . VISIBLE ) { < nl > - showView ( searchEmptyView ) ; < nl > - } else { < nl > - goneView ( searchEmptyView ) ; < nl > - } < nl > - } < nl > - } < nl > - < nl > - private void hideSearch ( ) { < nl > - if ( ! isSearchVisible ) { < nl > - return ; < nl > - } < nl > - isSearchVisible = false ; < nl > - < nl > - if ( searchDisplay ! = null ) { < nl > - searchDisplay . dispose ( ) ; < nl > - searchDisplay = null ; < nl > - } < nl > - searchAdapter = null ; < nl > - searchList . setAdapter ( null ) ; < nl > - < nl > - goneView ( searchContainer ) ; < nl > - onShowToolbarCustomView ( ) ; < nl > - if ( searchMenu ! = null ) { < nl > - if ( searchMenu . isActionViewExpanded ( ) ) { < nl > - searchMenu . collapseActionView ( ) ; < nl > - } < nl > - } < nl > - } < nl > - < nl > - @ Override < nl > - public boolean onOptionsItemSelected ( MenuItem item ) { < nl > - int i = item . getItemId ( ) ; < nl > - if ( i = = R . id . help ) { < nl > - startActivity ( new Intent ( getActivity ( ) , HelpActivity . class ) ) ; < nl > - return true ; < nl > - } else if ( i = = R . id . profile ) { < nl > - ActorSDK . sharedActor ( ) . startSettingActivity ( getActivity ( ) ) ; < nl > - return true ; < nl > - } else if ( i = = R . id . contacts ) { < nl > - startActivity ( new Intent ( getActivity ( ) , ContactsActivity . class ) ) ; < nl > - return true ; < nl > - } < nl > - return false ; < nl > - } < nl > - }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 71da5ab . . 8045a74 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 1 , 11 + 1 , 7 @ @ < nl > package im . actor ; < nl > < nl > - import java . util . ArrayList ; < nl > - < nl > - import im . actor . auth . SignEmailFragment ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . BaseActorSDKDelegate ; < nl > - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; < nl > < nl > / * * < nl > * Created by badgr on 16 . 10 . 2015 . < nl > @ @ - 15 , 13 + 11 , 11 @ @ public class Application extends android . app . Application { < nl > public void onCreate ( ) { < nl > super . onCreate ( ) ; < nl > ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > + ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > ActorSDK . sharedActor ( ) . createActor ( this ) ; < nl > } < nl > < nl > private class ActorSDKDelegate extends BaseActorSDKDelegate { < nl > - @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignEmailFragment ( ) ; < nl > - } < nl > + < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java < nl > deleted file mode 100644 < nl > index 37ce216 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java < nl > + + + / dev / null < nl > @ @ - 1 , 137 + 0 , 0 @ @ < nl > - package im . actor . auth ; < nl > - < nl > - import android . app . AlertDialog ; < nl > - import android . os . Bundle ; < nl > - import android . telephony . PhoneNumberFormattingTextWatcher ; < nl > - import android . text . Editable ; < nl > - import android . text . TextWatcher ; < nl > - import android . view . KeyEvent ; < nl > - import android . view . LayoutInflater ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . view . inputmethod . EditorInfo ; < nl > - import android . widget . EditText ; < nl > - import android . widget . TextView ; < nl > - < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; < nl > - import im . actor . sdk . util . Fonts ; < nl > - import im . actor . sdk . util . KeyboardHelper ; < nl > - < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - < nl > - public class SignEmailFragment extends BaseAuthFragment { < nl > - < nl > - private EditText emailEditText ; < nl > - private KeyboardHelper keyboardHelper ; < nl > - < nl > - @ Override < nl > - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > - View v = inflater . inflate ( R . layout . fragment _ sign _ email , container , false ) ; < nl > - < nl > - ( ( TextView ) v . findViewById ( R . id . button _ continue _ text ) ) . setTypeface ( Fonts . medium ( ) ) ; < nl > - < nl > - keyboardHelper = new KeyboardHelper ( getActivity ( ) ) ; < nl > - < nl > - initView ( v ) ; < nl > - < nl > - return v ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onResume ( ) { < nl > - super . onResume ( ) ; < nl > - < nl > - / / TODO track email auth open < nl > - / / messenger ( ) . trackAuthPhoneOpen ( ) ; < nl > - < nl > - setTitle ( R . string . auth _ email _ title ) ; < nl > - < nl > - focusEmail ( ) ; < nl > - < nl > - keyboardHelper . setImeVisibility ( emailEditText , true ) ; < nl > - } < nl > - < nl > - private void initView ( View v ) { < nl > - < nl > - emailEditText = ( EditText ) v . findViewById ( R . id . tv _ email ) ; < nl > - emailEditText . addTextChangedListener ( new PhoneNumberFormattingTextWatcher ( ) ) ; < nl > - String email = messenger ( ) . getAuthEmail ( ) ; < nl > - if ( email ! = null & & ! email . isEmpty ( ) ) { < nl > - emailEditText . setText ( email ) ; < nl > - } < nl > - emailEditText . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { < nl > - @ Override < nl > - public boolean onEditorAction ( TextView textView , int id , KeyEvent keyEvent ) { < nl > - if ( id = = EditorInfo . IME _ ACTION _ GO ) { < nl > - requestCode ( ) ; < nl > - return true ; < nl > - } < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - emailEditText . addTextChangedListener ( new TextWatcher ( ) { < nl > - @ Override < nl > - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onTextChanged ( CharSequence s , int start , int before , int count ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void afterTextChanged ( Editable s ) { < nl > - / / TODO trackAuthEmailType < nl > - / / messenger ( ) . trackAuthPhoneType ( emailEditText . getText ( ) . toString ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - onClick ( v , R . id . button _ continue , new View . OnClickListener ( ) { < nl > - @ Override < nl > - public void onClick ( View view ) { < nl > - requestCode ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - private void requestCode ( ) { < nl > - final String ACTION = " Request code email " ; < nl > - < nl > - < nl > - if ( emailEditText . getText ( ) . toString ( ) . trim ( ) . length ( ) = = 0 ) { < nl > - String message = getString ( R . string . auth _ error _ empty _ email ) ; < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( R . string . auth _ error _ empty _ email ) < nl > - . setPositiveButton ( R . string . dialog _ ok , null ) < nl > - . show ( ) ; < nl > - return ; < nl > - } < nl > - < nl > - String rawEmail = emailEditText . getText ( ) . toString ( ) ; < nl > - < nl > - if ( rawEmail . length ( ) = = 0 ) { < nl > - String message = getString ( R . string . auth _ error _ empty _ email ) ; < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( R . string . auth _ error _ empty _ email ) < nl > - . setPositiveButton ( R . string . dialog _ ok , null ) < nl > - . show ( ) ; < nl > - return ; < nl > - } < nl > - < nl > - setAuthId ( rawEmail ) ; < nl > - < nl > - executeAuth ( ActorSDK . sharedActor ( ) . getMessenger ( ) . requestStartEmailAuth ( rawEmail ) , ACTION ) ; < nl > - } < nl > - < nl > - private void focusEmail ( ) { < nl > - focus ( emailEditText ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public String getHintText ( ) { < nl > - return getString ( R . string . auth _ code _ email _ hint ) . replace ( " { 0 } " , " < b > " + getAuthId ( ) + " < / b > " ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java < nl > deleted file mode 100644 < nl > index c74e30f . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java < nl > + + + / dev / null < nl > @ @ - 1 , 100 + 0 , 0 @ @ < nl > - package im . actor . core ; < nl > - < nl > - import android . content . Context ; < nl > - < nl > - import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > - < nl > - import java . io . IOException ; < nl > - < nl > - import im . actor . messenger . app . core . ActorSDK ; < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - < nl > - / * * < nl > - * GCM push implementation for Actor push registration . < nl > - * This actor is used for load GCM token and register it on server . < nl > - * / < nl > - public class AndroidPushActor extends Actor { < nl > - < nl > - private static final String TAG = " im . actor . core . AndroidPushActor " ; < nl > - < nl > - private final AndroidMessenger messenger ; < nl > - private final Context context ; < nl > - private boolean isRegistered ; < nl > - < nl > - public AndroidPushActor ( Context context , AndroidMessenger messenger ) { < nl > - this . messenger = messenger ; < nl > - this . context = context ; < nl > - } < nl > - < nl > - @ Override < nl > - public void preStart ( ) { < nl > - super . preStart ( ) ; < nl > - < nl > - isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; < nl > - < nl > - if ( ! isRegistered ) { < nl > - Log . d ( TAG , " Requesting push token . . . " ) ; < nl > - < nl > - / / TODO : Add backoff < nl > - new Thread ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - while ( true ) { < nl > - GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > - try { < nl > - Log . d ( TAG , " Requesting push token iteration . . . " ) ; < nl > - String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getGcmProjectId ( ) ) ; < nl > - if ( regId ! = null ) { < nl > - Log . d ( TAG , " Token loaded " ) ; < nl > - self ( ) . send ( new PushRegistered ( regId ) ) ; < nl > - return ; < nl > - } else { < nl > - Log . d ( TAG , " Unable to load Token " ) ; < nl > - } < nl > - } catch ( IOException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - Log . d ( TAG , " Waiting for next attempt " ) ; < nl > - try { < nl > - Thread . sleep ( 1000 ) ; < nl > - } catch ( InterruptedException e1 ) { < nl > - e1 . printStackTrace ( ) ; < nl > - return ; < nl > - } < nl > - } < nl > - } < nl > - } . start ( ) ; < nl > - } else { < nl > - Log . d ( TAG , " Already registered token " ) ; < nl > - } < nl > - } < nl > - < nl > - private void onPushRegistered ( String token ) { < nl > - isRegistered = true ; < nl > - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getGcmProjectId ( ) , token ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onReceive ( Object message ) { < nl > - if ( message instanceof PushRegistered ) { < nl > - PushRegistered pushRegistered = ( PushRegistered ) message ; < nl > - onPushRegistered ( pushRegistered . getToken ( ) ) ; < nl > - } else { < nl > - drop ( message ) ; < nl > - } < nl > - } < nl > - < nl > - public static class PushRegistered { < nl > - private String token ; < nl > - < nl > - public PushRegistered ( String token ) { < nl > - this . token = token ; < nl > - } < nl > - < nl > - public String getToken ( ) { < nl > - return token ; < nl > - } < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java < nl > deleted file mode 100644 < nl > index 8dbd762 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java < nl > + + + / dev / null < nl > @ @ - 1 , 37 + 0 , 0 @ @ < nl > - package im . actor . messenger ; < nl > - < nl > - import android . app . Activity ; < nl > - import android . content . Context ; < nl > - import android . content . Intent ; < nl > - import android . os . Bundle ; < nl > - import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > - < nl > - import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > - < nl > - import im . actor . runtime . Log ; < nl > - < nl > - < nl > - import static im . actor . messenger . app . core . ActorSDK . messenger ; < nl > - < nl > - public class PushReceiver extends WakefulBroadcastReceiver { < nl > - < nl > - private static final String TAG = " PushReceiver " ; < nl > - < nl > - @ Override < nl > - public void onReceive ( Context context , Intent intent ) { < nl > - GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; < nl > - Bundle extras = intent . getExtras ( ) ; < nl > - String messageType = gcm . getMessageType ( intent ) ; < nl > - if ( ! extras . isEmpty ( ) ) { < nl > - if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > - if ( extras . containsKey ( " seq " ) ) { < nl > - int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > - messenger ( ) . onPushReceived ( seq ) ; < nl > - setResultCode ( Activity . RESULT _ OK ) ; < nl > - Log . d ( TAG , " Push received " ) ; < nl > - } < nl > - } < nl > - } < nl > - completeWakefulIntent ( intent ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > index 5153388 . . 8c04484 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > @ @ - 75 , 6 + 75 , 10 @ @ dependencies { < nl > compile ' com . android . support : palette - v7 : 23 . 1 . 0 ' < nl > compile ' com . android . support : recyclerview - v7 : 23 . 1 . 0 ' < nl > compile ' com . android . support : design : 23 . 1 . 0 ' < nl > + < nl > + / / GCM < nl > + compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' < nl > + < nl > } < nl > < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 1492015 . . ef17a74 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 18 , 14 + 18 , 20 @ @ import im . actor . core . ApiConfiguration ; < nl > import im . actor . core . ConfigurationBuilder ; < nl > import im . actor . core . DeviceCategory ; < nl > import im . actor . core . PlatformType ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . core . AndroidNotifications ; < nl > import im . actor . sdk . core . AndroidPhoneBook ; < nl > + import im . actor . sdk . core . AndroidPushActor ; < nl > import im . actor . sdk . intents . ActivityManager ; < nl > import im . actor . sdk . services . KeepAliveService ; < nl > import im . actor . sdk . util . Devices ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > < nl > + import static im . actor . runtime . actors . ActorSystem . system ; < nl > + < nl > + < nl > public class ActorSDK { < nl > < nl > < nl > @ @ - 61 , 6 + 67 , 11 @ @ public class ActorSDK { < nl > * / < nl > private String apiAppKey = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; < nl > / * * < nl > + * Push Registration Id < nl > + * / < nl > + private long pushId = 0 ; < nl > + < nl > + / * * < nl > * Is Keeping app alive enabled < nl > * / < nl > private boolean isKeepAliveEnabled = false ; < nl > @ @ - 71 , 7 + 82 , 8 @ @ public class ActorSDK { < nl > / * * < nl > * ActivityManager < nl > * / < nl > - private ActivityManager activityManager = new ActivityManager ( ) ; < nl > + private ActivityManager activityManager = new ActivityManager ( ) ; < nl > + < nl > private ActorSDK ( ) { < nl > endpoints . add ( " tls : / / front1 - mtproto - api - rev2 . actor . im " ) ; < nl > endpoints . add ( " tls : / / front2 - mtproto - api - rev2 . actor . im " ) ; < nl > @ @ - 91 , 7 + 103 , 7 @ @ public class ActorSDK { < nl > / / SDK Initialization < nl > / / < nl > < nl > - public void createActor ( Application application ) { < nl > + public void createActor ( final Application application ) { < nl > < nl > this . application = application ; < nl > < nl > @ @ - 135 , 6 + 147 , 19 @ @ public class ActorSDK { < nl > AlarmManager alarm = ( AlarmManager ) application . getSystemService ( Context . ALARM _ SERVICE ) ; < nl > alarm . setRepeating ( AlarmManager . RTC , System . currentTimeMillis ( ) , 30 * 1000 , pendingIntent ) ; < nl > } < nl > + < nl > + / / < nl > + / / GCM < nl > + / / < nl > + if ( pushId ! = 0 ) { < nl > + system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { < nl > + @ Override < nl > + public AndroidPushActor create ( ) { < nl > + return new AndroidPushActor ( application , messenger ) ; < nl > + } < nl > + } ) , " actor / android / push " ) ; < nl > + } < nl > + < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 240 , 6 + 265 , 22 @ @ public class ActorSDK { < nl > this . isKeepAliveEnabled = isKeepAliveEnabled ; < nl > } < nl > < nl > + / * * < nl > + * Getting Push Registration Id < nl > + * < nl > + * @ return pushId < nl > + * / < nl > + public long getPushId ( ) { < nl > + return pushId ; < nl > + } < nl > + < nl > + / * * < nl > + * Setting Push Registration Id < nl > + * / < nl > + public void setPushId ( long pushId ) { < nl > + this . pushId = pushId ; < nl > + } < nl > + < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > new file mode 100644 < nl > index 0000000 . . d65a7a8 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > @ @ - 0 , 0 + 1 , 101 @ @ < nl > + package im . actor . sdk . core ; < nl > + < nl > + import android . content . Context ; < nl > + < nl > + import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > + < nl > + import java . io . IOException ; < nl > + < nl > + import im . actor . core . AndroidMessenger ; < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + < nl > + / * * < nl > + * GCM push implementation for Actor push registration . < nl > + * This actor is used for load GCM token and register it on server . < nl > + * / < nl > + public class AndroidPushActor extends Actor { < nl > + < nl > + private static final String TAG = " im . actor . core . AndroidPushActor " ; < nl > + < nl > + private final AndroidMessenger messenger ; < nl > + private final Context context ; < nl > + private boolean isRegistered ; < nl > + < nl > + public AndroidPushActor ( Context context , AndroidMessenger messenger ) { < nl > + this . messenger = messenger ; < nl > + this . context = context ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + super . preStart ( ) ; < nl > + < nl > + isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; < nl > + < nl > + if ( ! isRegistered ) { < nl > + Log . d ( TAG , " Requesting push token . . . " ) ; < nl > + < nl > + / / TODO : Add backoff < nl > + new Thread ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + while ( true ) { < nl > + GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > + try { < nl > + Log . d ( TAG , " Requesting push token iteration . . . " ) ; < nl > + String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; < nl > + if ( regId ! = null ) { < nl > + Log . d ( TAG , " Token loaded " ) ; < nl > + self ( ) . send ( new PushRegistered ( regId ) ) ; < nl > + return ; < nl > + } else { < nl > + Log . d ( TAG , " Unable to load Token " ) ; < nl > + } < nl > + } catch ( IOException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + Log . d ( TAG , " Waiting for next attempt " ) ; < nl > + try { < nl > + Thread . sleep ( 1000 ) ; < nl > + } catch ( InterruptedException e1 ) { < nl > + e1 . printStackTrace ( ) ; < nl > + return ; < nl > + } < nl > + } < nl > + } < nl > + } . start ( ) ; < nl > + } else { < nl > + Log . d ( TAG , " Already registered token " ) ; < nl > + } < nl > + } < nl > + < nl > + private void onPushRegistered ( String token ) { < nl > + isRegistered = true ; < nl > + messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > + messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof PushRegistered ) { < nl > + PushRegistered pushRegistered = ( PushRegistered ) message ; < nl > + onPushRegistered ( pushRegistered . getToken ( ) ) ; < nl > + } else { < nl > + drop ( message ) ; < nl > + } < nl > + } < nl > + < nl > + public static class PushRegistered { < nl > + private String token ; < nl > + < nl > + public PushRegistered ( String token ) { < nl > + this . token = token ; < nl > + } < nl > + < nl > + public String getToken ( ) { < nl > + return token ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java < nl > new file mode 100644 < nl > index 0000000 . . 425cfb1 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java < nl > @ @ - 0 , 0 + 1 , 35 @ @ < nl > + package im . actor . sdk . core ; < nl > + < nl > + import android . app . Activity ; < nl > + import android . content . Context ; < nl > + import android . content . Intent ; < nl > + import android . os . Bundle ; < nl > + import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > + < nl > + import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > + < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + < nl > + public class PushReceiver extends WakefulBroadcastReceiver { < nl > + < nl > + private static final String TAG = " PushReceiver " ; < nl > + < nl > + @ Override < nl > + public void onReceive ( Context context , Intent intent ) { < nl > + GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; < nl > + Bundle extras = intent . getExtras ( ) ; < nl > + String messageType = gcm . getMessageType ( intent ) ; < nl > + if ( ! extras . isEmpty ( ) ) { < nl > + if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > + if ( extras . containsKey ( " seq " ) ) { < nl > + int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; < nl > + setResultCode ( Activity . RESULT _ OK ) ; < nl > + Log . d ( TAG , " Push received " ) ; < nl > + } < nl > + } < nl > + } < nl > + completeWakefulIntent ( intent ) ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 6b5273b . . 9bc0f42 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 157 , 11 + 157 , 6 @ @ public void addCustomShareMenuFields ( ArrayList < ShareMenuField > shareMenuFields ) 
 } 
 } ; 
 } 
 - 
 - / / @ Override 
 - / / public MainPhoneController getMainPhoneController ( ActorMainActivity mainActivity ) { 
 - / / return new MainPhoneControllerEx ( mainActivity ) ; 
 - / / } 
 } 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 index ca73df8 . . db69967 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDKDelegate . java 
 @ @ - 12 , 9 + 12 , 7 @ @ import java . util . ArrayList ; 
 
 import im . actor . core . entity . Peer ; 
 import im . actor . runtime . android . view . BindedViewHolder ; 
 - import im . actor . sdk . controllers . root . RootActivity ; 
 import im . actor . sdk . controllers . conversation . ShareMenuField ; 
 - import im . actor . sdk . controllers . root . MainPhoneController ; 
 import im . actor . sdk . controllers . conversation . messages . MessageHolder ; 
 import im . actor . sdk . controllers . conversation . MessagesAdapter ; 
 import im . actor . sdk . controllers . settings . BaseActorProfileActivity ; 
 @ @ - 121 , 14 + 119 , 6 @ @ public interface ActorSDKDelegate { 
 < T extends BindedViewHolder , J extends T > J getViewHolder ( Class < T > base , Object . . . args ) ; 
 
 / * * 
 - * Override for hacking MainPhoneController - activity with chats / contacts 
 - * 
 - * @ param mainActivity main activity 
 - * @ return hacked MainPhoneController 
 - * / 
 - MainPhoneController getMainPhoneController ( RootActivity mainActivity ) ; 
 - 
 - / * * 
 * Override for hacking custom messages view holders 
 * 
 * @ param dataTypeHash json dataType hash 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 index f696d9b . . 330510d 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / BaseActorSDKDelegate . java 
 @ @ - 13 , 9 + 13 , 7 @ @ import java . util . ArrayList ; 
 
 import im . actor . core . entity . Peer ; 
 import im . actor . runtime . android . view . BindedViewHolder ; 
 - import im . actor . sdk . controllers . root . RootActivity ; 
 import im . actor . sdk . controllers . conversation . ShareMenuField ; 
 - import im . actor . sdk . controllers . root . MainPhoneController ; 
 import im . actor . sdk . controllers . conversation . messages . MessageHolder ; 
 import im . actor . sdk . controllers . conversation . MessagesAdapter ; 
 import im . actor . sdk . controllers . settings . BaseActorProfileActivity ; 
 @ @ - 169 , 17 + 167 , 6 @ @ public class BaseActorSDKDelegate implements ActorSDKDelegate { 
 } 
 
 / * * 
 - * Override for hacking MainPhoneController - activity with chats / contacts 
 - * 
 - * @ param mainActivity main activity 
 - * @ return hacked MainPhoneController 
 - * / 
 - @ Override 
 - public MainPhoneController getMainPhoneController ( RootActivity mainActivity ) { 
 - return null ; 
 - } 
 - 
 - / * * 
 * Override for hacking custom messages view holders 
 * 
 * @ param dataTypeHash id in same order as added to AbsContent . registerConverter ( ) 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainBaseController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainBaseController . java 
 deleted file mode 100644 
 index db823bb . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainBaseController . java 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . root ; 
 - 
 - import im . actor . core . entity . Contact ; 
 - import im . actor . sdk . controllers . activity . base . Controller ; 
 - import im . actor . core . entity . Dialog ; 
 - 
 - public abstract class MainBaseController extends Controller < RootActivity > { 
 - 
 - protected MainBaseController ( RootActivity activity ) { 
 - super ( activity ) ; 
 - } 
 - 
 - public abstract void onDialogClicked ( Dialog dialogItem ) ; 
 - 
 - public abstract void onContactClicked ( Contact contact ) ; 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java 
 deleted file mode 100644 
 index eef02b3 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / controllers / root / MainPhoneController . java 
 + + + / dev / null 
 @ @ - 1 , 627 + 0 , 0 @ @ 
 - package im . actor . sdk . controllers . root ; 
 - 
 - import android . content . Intent ; 
 - import android . graphics . drawable . ColorDrawable ; 
 - import android . net . Uri ; 
 - import android . os . Bundle ; 
 - import android . support . v4 . view . MenuItemCompat ; 
 - import android . support . v7 . app . ActionBar ; 
 - import android . support . v7 . app . AlertDialog ; 
 - import android . support . v7 . widget . ChatLinearLayoutManager ; 
 - import android . support . v7 . widget . RecyclerView ; 
 - import android . support . v7 . widget . SearchView ; 
 - import android . support . v7 . widget . Toolbar ; 
 - import android . view . Menu ; 
 - import android . view . MenuItem ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . widget . FrameLayout ; 
 - import android . widget . LinearLayout ; 
 - import android . widget . TextView ; 
 - 
 - import com . getbase . floatingactionbutton . FloatingActionButton ; 
 - 
 - import java . util . ArrayList ; 
 - 
 - import im . actor . core . entity . Contact ; 
 - import im . actor . core . entity . Dialog ; 
 - import im . actor . core . entity . Peer ; 
 - import im . actor . core . entity . SearchEntity ; 
 - import im . actor . core . viewmodel . CommandCallback ; 
 - import im . actor . core . viewmodel . UserVM ; 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . ActorStyle ; 
 - import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 - import im . actor . runtime . generic . mvvm . DisplayList ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . Intents ; 
 - import im . actor . sdk . controllers . contacts . AddContactActivity ; 
 - import im . actor . sdk . controllers . compose . ComposeActivity ; 
 - import im . actor . sdk . controllers . contacts . ContactsActivity ; 
 - import im . actor . sdk . controllers . dialogs . DialogsFragment ; 
 - import im . actor . sdk . controllers . fragment . help . HelpActivity ; 
 - import im . actor . sdk . controllers . fragment . main . SearchAdapter ; 
 - import im . actor . sdk . controllers . fragment . main . SearchHolder ; 
 - import im . actor . sdk . util . Screen ; 
 - import im . actor . sdk . util . Fonts ; 
 - import im . actor . sdk . view . adapters . HeaderViewRecyclerAdapter ; 
 - import im . actor . sdk . view . adapters . OnItemClickedListener ; 
 - 
 - import static im . actor . sdk . util . ViewUtils . goneView ; 
 - import static im . actor . sdk . util . ViewUtils . showView ; 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - 
 - public class MainPhoneController extends MainBaseController { 
 - 
 - private RecyclerView searchList ; 
 - private View searchContainer ; 
 - private TextView searchEmptyView ; 
 - private TextView searchHintView ; 
 - 
 - private boolean isSearchVisible = false ; 
 - private SearchAdapter searchAdapter ; 
 - private BindedDisplayList < SearchEntity > searchDisplay ; 
 - private final DisplayList . Listener searchListener = ( ) - > onSearchChanged ( ) ; 
 - private SearchView searchView ; 
 - private MenuItem searchMenu ; 
 - 
 - private View syncInProgressView ; 
 - private View emptyContactsView ; 
 - 
 - private com . getbase . floatingactionbutton . FloatingActionButton fabRoot ; 
 - 
 - private String sendUriString = " " ; 
 - private String sendText = " " ; 
 - private ArrayList < String > sendUriMultiple = new ArrayList < String > ( ) ; 
 - private int shareUser ; 
 - private String forwardText = " " ; 
 - private String forwardTextRaw = " " ; 
 - private byte [ ] docContent = null ; 
 - private String joinGroupUrl ; 
 - 
 - private SearchHolder footerSearchHolder ; 
 - private String searchQuery ; 
 - private LinearLayout footer ; 
 - 
 - public MainPhoneController ( RootActivity mainActivity ) { 
 - super ( mainActivity ) ; 
 - } 
 - 
 - @ Override 
 - public void onDialogClicked ( final Dialog item ) { 
 - 
 - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + item . getDialogTitle ( ) + " ? " ) 
 - . setPositiveButton ( R . string . dialog _ ok , ( dialog , which ) - > { 
 - openDialog ( item ) ; 
 - } ) 
 - . setNegativeButton ( R . string . dialog _ cancel , ( dialog , which ) - > { 
 - dialog . dismiss ( ) ; 
 - } ) 
 - . show ( ) ; 
 - } else { 
 - openDialog ( item ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void onContactClicked ( final Contact contact ) { 
 - if ( ( sendUriMultiple ! = null & & ! sendUriMultiple . isEmpty ( ) ) | | docContent ! = null | | ( sendUriString ! = null & & ! sendUriString . isEmpty ( ) ) ) { 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( getActivity ( ) . getString ( R . string . confirm _ share ) + " " + contact . getName ( ) + " ? " ) 
 - . setPositiveButton ( R . string . dialog _ ok , ( dialog , which ) - > { 
 - openContactDialog ( contact ) ; 
 - } ) 
 - . setNegativeButton ( R . string . dialog _ cancel , ( dialog , which ) - > { 
 - dialog . dismiss ( ) ; 
 - } ) 
 - . show ( ) ; 
 - } else { 
 - openContactDialog ( contact ) ; 
 - } 
 - } 
 - 
 - private void openDialog ( Dialog item ) { 
 - startActivity ( Intents . openDialog ( item . getPeer ( ) , false , getActivity ( ) ) . putExtra ( " send _ uri " , sendUriString ) 
 - . putExtra ( " send _ uri _ multiple " , sendUriMultiple ) 
 - . putExtra ( " send _ text " , sendText ) 
 - . putExtra ( " forward _ text " , forwardText ) 
 - . putExtra ( " forward _ text _ raw " , forwardTextRaw ) 
 - . putExtra ( " forward _ content " , docContent ) 
 - . putExtra ( " share _ user " , shareUser ) ) ; 
 - clearShare ( ) ; 
 - } 
 - 
 - private void openContactDialog ( Contact contact ) { 
 - getActivity ( ) . startActivity ( Intents . openPrivateDialog ( contact . getUid ( ) , true , getActivity ( ) ) . putExtra ( " send _ uri " , sendUriString ) 
 - . putExtra ( " send _ uri _ multiple " , sendUriMultiple ) 
 - . putExtra ( " send _ text " , sendText ) 
 - . putExtra ( " forward _ text " , forwardText ) 
 - . putExtra ( " forward _ text _ raw " , forwardTextRaw ) 
 - . putExtra ( " forward _ content " , docContent ) 
 - . putExtra ( " share _ user " , shareUser ) ) ; 
 - 
 - clearShare ( ) ; 
 - } 
 - 
 - private void clearShare ( ) { 
 - sendUriMultiple . clear ( ) ; 
 - sendUriString = " " ; 
 - docContent = null ; 
 - forwardText = " " ; 
 - forwardTextRaw = " " ; 
 - sendText = " " ; 
 - shareUser = 0 ; 
 - } 
 - 
 - @ Override 
 - public void onCreate ( Bundle savedInstance ) { 
 - 
 - Intent intent = getIntent ( ) ; 
 - 
 - handleIntent ( intent ) ; 
 - 
 - setContentView ( R . layout . actor _ activity _ main ) ; 
 - ActorStyle style = ActorSDK . sharedActor ( ) . style ; 
 - getActivity ( ) . setSupportActionBar ( ( ( Toolbar ) findViewById ( R . id . toolbar ) ) ) ; 
 - 
 - syncInProgressView = findViewById ( R . id . syncInProgress ) ; 
 - ( ( TextView ) syncInProgressView . findViewById ( R . id . wait _ text ) ) . setTextColor ( style . getTextSecondaryColor ( ) ) ; 
 - ( ( TextView ) syncInProgressView . findViewById ( R . id . sync _ text ) ) . setTextColor ( style . getMainColor ( ) ) ; 
 - syncInProgressView . findViewById ( R . id . sync _ background ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; 
 - syncInProgressView . findViewById ( R . id . syncInProgress ) . setBackgroundColor ( style . getMainBackgroundColor ( ) ) ; 
 - emptyContactsView = findViewById ( R . id . emptyContacts ) ; 
 - findViewById ( R . id . emptyContactsFrame ) . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - ( ( TextView ) emptyContactsView . findViewById ( R . id . no _ contacts ) ) . setTextColor ( style . getTextSecondaryColor ( ) ) ; 
 - ( ( TextView ) emptyContactsView . findViewById ( R . id . no _ contacts ) ) . setText ( getResources ( ) . getString ( R . string . main _ empty _ invite _ hint ) . replace ( " { appName } " , ActorSDK . sharedActor ( ) . getAppName ( ) ) ) ; 
 - ( ( TextView ) emptyContactsView . findViewById ( R . id . add _ contact _ manually _ text ) ) . setTextColor ( style . getTextSecondaryColor ( ) ) ; 
 - ( ( TextView ) emptyContactsView . findViewById ( R . id . empty _ contacts _ text ) ) . setTextColor ( style . getMainColor ( ) ) ; 
 - emptyContactsView . findViewById ( R . id . empty _ contacts _ bg ) . setBackgroundColor ( style . getMainColor ( ) ) ; 
 - 
 - TextView addContactBtnText = ( TextView ) findViewById ( R . id . addContactButtonText ) ; 
 - addContactBtnText . setTextColor ( style . getTextSecondaryColor ( ) ) ; 
 - addContactBtnText . setTypeface ( Fonts . medium ( ) ) ; 
 - TextView inviteBtnText = ( TextView ) findViewById ( R . id . inviteButtonText ) ; 
 - inviteBtnText . setTypeface ( Fonts . medium ( ) ) ; 
 - inviteBtnText . setTextColor ( style . getTextPrimaryInvColor ( ) ) ; 
 - 
 - fabRoot = ( FloatingActionButton ) findViewById ( R . id . rootFab ) ; 
 - if ( ActorSDK . sharedActor ( ) . style . getFabColor ( ) ! = 0 ) { 
 - fabRoot . setColorNormal ( ActorSDK . sharedActor ( ) . style . getFabColor ( ) ) ; 
 - } 
 - if ( ActorSDK . sharedActor ( ) . style . getFabPressedColor ( ) ! = 0 ) { 
 - fabRoot . setColorPressed ( ActorSDK . sharedActor ( ) . style . getFabPressedColor ( ) ) ; 
 - } 
 - fabRoot . setOnClickListener ( v - > startActivity ( new Intent ( getActivity ( ) , ComposeActivity . class ) ) ) ; 
 - 
 - searchList = ( RecyclerView ) findViewById ( R . id . searchList ) ; 
 - searchList . setLayoutManager ( new ChatLinearLayoutManager ( getActivity ( ) ) ) ; 
 - 
 - searchContainer = findViewById ( R . id . searchCont ) ; 
 - searchContainer . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - searchEmptyView = ( TextView ) findViewById ( R . id . empty ) ; 
 - searchHintView = ( TextView ) findViewById ( R . id . searchHint ) ; 
 - searchEmptyView . setTextColor ( style . getTextSecondaryColor ( ) ) ; 
 - searchHintView . setTextColor ( style . getTextSecondaryColor ( ) ) ; 
 - searchHintView . setVisibility ( View . GONE ) ; 
 - searchEmptyView . setVisibility ( View . GONE ) ; 
 - 
 - / / pager = ( ViewPager ) findViewById ( R . id . vp _ pager ) ; 
 - / / pager . setOffscreenPageLimit ( 2 ) ; 
 - / / homePagerAdapter = getHomePagerAdapter ( ) ; 
 - / / pager . setAdapter ( homePagerAdapter ) ; 
 - / / pager . setCurrentItem ( 0 ) ; 
 - / / pager . setOnPageChangeListener ( new ViewPager . OnPageChangeListener ( ) { 
 - / / private int prevPage = - 1 ; 
 - / / 
 - / / @ Override 
 - / / public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { 
 - / / 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onPageSelected ( int position ) { 
 - / / if ( position = = 0 ) { 
 - / / prevPage = position ; 
 - / / } else if ( position = = 1 ) { 
 - / / prevPage = position ; 
 - / / } 
 - / / } 
 - / / 
 - / / @ Override 
 - / / public void onPageScrollStateChanged ( int state ) { 
 - / / 
 - / / } 
 - / / } ) ; 
 - 
 - if ( savedInstance = = null ) { 
 - getFragmentManager ( ) . beginTransaction ( ) 
 - . add ( R . id . contentRoot , new DialogsFragment ( ) ) 
 - . commit ( ) ; 
 - } 
 - 
 - findViewById ( R . id . addContactButton ) . setOnClickListener ( v - > startActivity ( new Intent ( getActivity ( ) , AddContactActivity . class ) ) ) ; 
 - 
 - findViewById ( R . id . inviteButton ) . setOnClickListener ( v - > { 
 - String inviteMessage = getResources ( ) . getString ( R . string . invite _ message ) . replace ( " { inviteUrl } " , ActorSDK . sharedActor ( ) . getInviteUrl ( ) ) . replace ( " { appName } " , ActorSDK . sharedActor ( ) . getAppName ( ) ) ; 
 - Intent sendIntent = new Intent ( Intent . ACTION _ SEND ) ; 
 - sendIntent . putExtra ( Intent . EXTRA _ TEXT , inviteMessage ) ; 
 - sendIntent . setType ( " text / plain " ) ; 
 - startActivity ( sendIntent ) ; 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public void onNewIntent ( Intent intent ) { 
 - handleIntent ( intent ) ; 
 - } 
 - 
 - private void handleIntent ( Intent intent ) { 
 - if ( intent ! = null ) { 
 - if ( intent . getAction ( ) ! = null ) { 
 - if ( intent . getAction ( ) . equals ( Intent . ACTION _ VIEW ) & & intent . getData ( ) ! = null ) { 
 - joinGroupUrl = intent . getData ( ) . toString ( ) ; 
 - if ( joinGroupUrl ! = null & & ! joinGroupUrl . isEmpty ( ) ) { 
 - String [ ] urlSplit = null ; 
 - if ( joinGroupUrl . contains ( " join " ) ) { 
 - urlSplit = joinGroupUrl . split ( " / join / " ) ; 
 - } else if ( joinGroupUrl . contains ( " token " ) ) { 
 - urlSplit = joinGroupUrl . split ( " token = " ) ; 
 - } 
 - if ( urlSplit ! = null ) { 
 - joinGroupUrl = urlSplit [ urlSplit . length - 1 ] ; 
 - 
 - getActivity ( ) . execute ( messenger ( ) . joinGroupViaToken ( joinGroupUrl ) , R . string . invite _ link _ title , new CommandCallback < Integer > ( ) { 
 - @ Override 
 - public void onResult ( Integer res ) { 
 - getActivity ( ) . startActivity ( Intents . openGroupDialog ( res , true , getActivity ( ) ) ) ; 
 - getActivity ( ) . finish ( ) ; 
 - joinGroupUrl = " " ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - joinGroupUrl = " " ; 
 - } 
 - } ) ; 
 - } 
 - } 
 - } else if ( intent . getAction ( ) . equals ( Intent . ACTION _ SEND ) ) { 
 - if ( " text / plain " . equals ( getIntent ( ) . getType ( ) ) ) { 
 - sendText = intent . getStringExtra ( Intent . EXTRA _ TEXT ) ; 
 - } else if ( intent . getParcelableExtra ( Intent . EXTRA _ STREAM ) ! = null ) { 
 - sendUriString = intent . getParcelableExtra ( Intent . EXTRA _ STREAM ) . toString ( ) ; 
 - } 
 - } else if ( intent . getAction ( ) . equals ( Intent . ACTION _ SEND _ MULTIPLE ) ) { 
 - ArrayList < Uri > imageUris = intent . getParcelableArrayListExtra ( Intent . EXTRA _ STREAM ) ; 
 - if ( imageUris ! = null ) { 
 - for ( Uri u : imageUris ) { 
 - sendUriMultiple . add ( u . toString ( ) ) ; 
 - } 
 - } 
 - } 
 - } 
 - 
 - if ( intent . getExtras ( ) ! = null ) { 
 - Bundle extras = intent . getExtras ( ) ; 
 - if ( extras . containsKey ( " share _ user " ) ) { 
 - shareUser = extras . getInt ( " share _ user " ) ; 
 - } else if ( extras . containsKey ( " forward _ text " ) ) { 
 - forwardText = extras . getString ( " forward _ text " ) ; 
 - forwardTextRaw = extras . getString ( " forward _ text _ raw " ) ; 
 - } else if ( extras . containsKey ( " forward _ content " ) ) { 
 - docContent = extras . getByteArray ( " forward _ content " ) ; 
 - } 
 - } 
 - } 
 - } 
 - 
 - @ Override 
 - public void onResume ( ) { 
 - ActionBar ab = getActionBar ( ) ; 
 - ab . setDisplayShowCustomEnabled ( false ) ; 
 - ab . setDisplayHomeAsUpEnabled ( false ) ; 
 - ab . setDisplayShowHomeEnabled ( false ) ; 
 - ab . setDisplayShowTitleEnabled ( true ) ; 
 - ab . setTitle ( getResources ( ) . getString ( R . string . app _ name ) ) ; 
 - 
 - if ( ActorSDK . sharedActor ( ) . style . getToolBarColor ( ) ! = 0 ) { 
 - ab . setBackgroundDrawable ( new ColorDrawable ( ActorSDK . sharedActor ( ) . style . getToolBarColor ( ) ) ) ; 
 - } 
 - 
 - onConfigireToolbarCustomView ( ab ) ; 
 - 
 - onShowToolbarCustomView ( ) ; 
 - emptyContactsView . setVisibility ( View . GONE ) ; 
 - syncInProgressView . setVisibility ( View . GONE ) ; 
 - 
 - getActivity ( ) . bind ( messenger ( ) . getAppState ( ) . getIsAppLoaded ( ) , messenger ( ) . getAppState ( ) . getIsAppEmpty ( ) , ( isAppLoaded , Value , isAppEmpty , Value2 ) - > { 
 - if ( isAppEmpty ) { 
 - if ( isAppLoaded ) { 
 - onHideToolbarCustomView ( ) ; 
 - emptyContactsView . setVisibility ( View . VISIBLE ) ; 
 - syncInProgressView . setVisibility ( View . GONE ) ; 
 - 
 - getActivity ( ) . invalidateOptionsMenu ( ) ; 
 - } else { 
 - onHideToolbarCustomView ( ) ; 
 - emptyContactsView . setVisibility ( View . GONE ) ; 
 - syncInProgressView . setVisibility ( View . VISIBLE ) ; 
 - getActivity ( ) . invalidateOptionsMenu ( ) ; 
 - } 
 - } else { 
 - onShowToolbarCustomView ( ) ; 
 - emptyContactsView . setVisibility ( View . GONE ) ; 
 - syncInProgressView . setVisibility ( View . GONE ) ; 
 - getActivity ( ) . invalidateOptionsMenu ( ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - protected void onShowToolbarCustomView ( ) { 
 - / / barTabs . setVisibility ( View . VISIBLE ) ; 
 - } 
 - 
 - protected void onHideToolbarCustomView ( ) { 
 - / / barTabs . setVisibility ( View . GONE ) ; 
 - } 
 - 
 - protected void onConfigireToolbarCustomView ( ActionBar ab ) { 
 - / / FrameLayout tabsContainer = new FrameLayout ( getActivity ( ) ) ; 
 - / / barTabs = new PagerSlidingTabStrip ( getActivity ( ) ) ; 
 - / / barTabs . setTabBackground ( R . drawable . selector _ bar ) ; 
 - / / / / barTabs . setIndicatorColorResource ( R . color . main _ tab _ selected ) ; 
 - / / barTabs . setIndicatorHeight ( Screen . dp ( 2 ) ) ; 
 - / / 
 - / / barTabs . setDividerColorResource ( android . R . color . transparent ) ; 
 - / / / / barTabs . setTextColorResource ( R . color . main _ tab _ text ) ; 
 - / / barTabs . setTextSize ( Screen . dp ( 14 ) ) ; 
 - / / barTabs . setUnderlineHeight ( 0 ) ; 
 - / / 
 - / / barTabs . setViewPager ( pager ) ; 
 - 
 - / / Icons 
 - / / int width = Screen . dp ( 72 * 2 ) ; 
 - 
 - / / tabsContainer . addView ( barTabs , new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , Screen . dp ( 56 ) ) ) ; 
 - / / Toolbar . LayoutParams lp = new Toolbar . LayoutParams ( ViewGroup . LayoutParams . WRAP _ CONTENT , Screen . dp ( 56 ) ) ; 
 - / / tabsContainer . setLayoutParams ( lp ) ; 
 - / / ab . setCustomView ( tabsContainer ) ; 
 - } 
 - 
 - 
 - @ Override 
 - public boolean onCreateOptionsMenu ( Menu menu ) { 
 - getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; 
 - 
 - searchMenu = menu . findItem ( R . id . search ) ; 
 - if ( messenger ( ) . getAppState ( ) . getIsAppEmpty ( ) . get ( ) ) { 
 - searchMenu . setVisible ( false ) ; 
 - } else { 
 - searchMenu . setVisible ( true ) ; 
 - } 
 - searchView = ( SearchView ) searchMenu . getActionView ( ) ; 
 - searchView . setIconifiedByDefault ( true ) ; 
 - 
 - MenuItemCompat . setOnActionExpandListener ( searchMenu , new MenuItemCompat . OnActionExpandListener ( ) { 
 - @ Override 
 - public boolean onMenuItemActionExpand ( MenuItem item ) { 
 - showSearch ( ) ; 
 - return true ; 
 - } 
 - 
 - @ Override 
 - public boolean onMenuItemActionCollapse ( MenuItem item ) { 
 - hideSearch ( ) ; 
 - return true ; 
 - } 
 - } ) ; 
 - 
 - searchView . setOnQueryTextListener ( new SearchView . OnQueryTextListener ( ) { 
 - @ Override 
 - public boolean onQueryTextSubmit ( String s ) { 
 - return false ; 
 - } 
 - 
 - @ Override 
 - public boolean onQueryTextChange ( String s ) { 
 - searchQuery = s . trim ( ) ; 
 - 
 - if ( isSearchVisible ) { 
 - if ( s . trim ( ) . length ( ) > 0 ) { 
 - String activeSearchQuery = searchQuery ; 
 - searchDisplay . initSearch ( s . trim ( ) . toLowerCase ( ) , false ) ; 
 - searchAdapter . setQuery ( s . trim ( ) . toLowerCase ( ) ) ; 
 - messenger ( ) . findUsers ( s ) . start ( new CommandCallback < UserVM [ ] > ( ) { 
 - @ Override 
 - public void onResult ( UserVM [ ] res ) { 
 - int footerVisability = footer . getVisibility ( ) ; 
 - if ( searchQuery . equals ( activeSearchQuery ) ) { 
 - boolean showResult = false ; 
 - UserVM u = null ; 
 - if ( res . length > 0 ) { 
 - u = res [ 0 ] ; 
 - showResult = true ; 
 - for ( int i = 0 ; i < searchDisplay . getSize ( ) ; i + + ) { 
 - if ( searchDisplay . getItem ( i ) . getPeer ( ) . equals ( Peer . user ( u . getId ( ) ) ) ) 
 - showResult = false ; 
 - break ; 
 - } 
 - } 
 - if ( showResult ) { 
 - footerSearchHolder . bind ( new SearchEntity ( Peer . user ( u . getId ( ) ) , 0 , u . getAvatar ( ) . get ( ) , u . getName ( ) . get ( ) ) , activeSearchQuery , true ) ; 
 - showView ( footer ) ; 
 - } else { 
 - goneView ( footer ) ; 
 - } 
 - } 
 - if ( footerVisability ! = footer . getVisibility ( ) ) { 
 - onSearchChanged ( ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - 
 - } 
 - } ) ; 
 - } else { 
 - searchDisplay . initEmpty ( ) ; 
 - goneView ( footer ) ; 
 - 
 - } 
 - } 
 - return false ; 
 - } 
 - } ) ; 
 - return true ; 
 - } 
 - 
 - @ Override 
 - public boolean onBackPressed ( ) { 
 - if ( isSearchVisible ) { 
 - hideSearch ( ) ; 
 - return true ; 
 - } 
 - 
 - return false ; 
 - } 
 - 
 - @ Override 
 - public void onPause ( ) { 
 - super . onPause ( ) ; 
 - hideSearch ( ) ; 
 - } 
 - 
 - private void showSearch ( ) { 
 - if ( isSearchVisible ) { 
 - return ; 
 - } 
 - isSearchVisible = true ; 
 - 
 - searchDisplay = messenger ( ) . buildSearchDisplayList ( ) ; 
 - searchAdapter = new SearchAdapter ( getActivity ( ) , searchDisplay , new OnItemClickedListener < SearchEntity > ( ) { 
 - @ Override 
 - public void onClicked ( SearchEntity item ) { 
 - startActivity ( Intents . openDialog ( item . getPeer ( ) , false , getActivity ( ) ) ) ; 
 - } 
 - 
 - @ Override 
 - public boolean onLongClicked ( SearchEntity item ) { 
 - return false ; 
 - } 
 - } ) ; 
 - HeaderViewRecyclerAdapter recyclerAdapter = new HeaderViewRecyclerAdapter ( searchAdapter ) ; 
 - 
 - View header = new View ( getActivity ( ) ) ; 
 - header . setLayoutParams ( new FrameLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , Screen . dp ( 0 ) ) ) ; 
 - header . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getMainBackgroundColor ( ) ) ; 
 - recyclerAdapter . addHeaderView ( header ) ; 
 - 
 - TextView footerTitle = new TextView ( getActivity ( ) ) ; 
 - footerTitle . setText ( R . string . main _ search _ global _ header ) ; 
 - footerTitle . setTextSize ( 16 ) ; 
 - footerTitle . setPadding ( Screen . dp ( 12 ) , Screen . dp ( 8 ) , 0 , Screen . dp ( 8 ) ) ; 
 - footerTitle . setBackgroundColor ( ActorSDK . sharedActor ( ) . style . getBackyardBackgroundColor ( ) ) ; 
 - footerTitle . setTextColor ( ActorSDK . sharedActor ( ) . style . getTextSecondaryColor ( ) ) ; 
 - 
 - footerSearchHolder = new SearchHolder ( getActivity ( ) , new OnItemClickedListener < SearchEntity > ( ) { 
 - @ Override 
 - public void onClicked ( SearchEntity item ) { 
 - int peerId = item . getPeer ( ) . getPeerId ( ) ; 
 - getActivity ( ) . execute ( messenger ( ) . addContact ( peerId ) , R . string . progress _ common , new CommandCallback < Boolean > ( ) { 
 - @ Override 
 - public void onResult ( Boolean res2 ) { 
 - startActivity ( Intents . openPrivateDialog ( peerId , 
 - true , 
 - getActivity ( ) ) ) ; 
 - } 
 - 
 - @ Override 
 - public void onError ( Exception e ) { 
 - startActivity ( Intents . openPrivateDialog ( peerId , 
 - true , 
 - getActivity ( ) ) ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - @ Override 
 - public boolean onLongClicked ( SearchEntity item ) { 
 - return false ; 
 - } 
 - } ) ; 
 - View footerGlobalSearchView = footerSearchHolder . itemView ; 
 - 
 - footer = new LinearLayout ( getActivity ( ) ) ; 
 - footer . setOrientation ( LinearLayout . VERTICAL ) ; 
 - LinearLayout . LayoutParams params = new LinearLayout . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , ViewGroup . LayoutParams . WRAP _ CONTENT ) ; 
 - footer . addView ( footerTitle , params ) ; 
 - footer . addView ( footerGlobalSearchView , params ) ; 
 - 
 - footer . setVisibility ( View . GONE ) ; 
 - 
 - recyclerAdapter . addFooterView ( footer ) ; 
 - 
 - searchList . setAdapter ( recyclerAdapter ) ; 
 - searchDisplay . addListener ( searchListener ) ; 
 - onHideToolbarCustomView ( ) ; 
 - showView ( searchHintView , false ) ; 
 - goneView ( searchEmptyView , false ) ; 
 - 
 - showView ( searchContainer ) ; 
 - } 
 - 
 - private void onSearchChanged ( ) { 
 - if ( ! searchDisplay . isInSearchState ( ) ) { 
 - showView ( searchHintView ) ; 
 - goneView ( searchEmptyView ) ; 
 - } else { 
 - goneView ( searchHintView ) ; 
 - if ( searchDisplay . getSize ( ) = = 0 & & footer . getVisibility ( ) ! = View . VISIBLE ) { 
 - showView ( searchEmptyView ) ; 
 - } else { 
 - goneView ( searchEmptyView ) ; 
 - } 
 - } 
 - } 
 - 
 - private void hideSearch ( ) { 
 - if ( ! isSearchVisible ) { 
 - return ; 
 - } 
 - isSearchVisible = false ; 
 - 
 - if ( searchDisplay ! = null ) { 
 - searchDisplay . dispose ( ) ; 
 - searchDisplay = null ; 
 - } 
 - searchAdapter = null ; 
 - searchList . setAdapter ( null ) ; 
 - 
 - goneView ( searchContainer ) ; 
 - onShowToolbarCustomView ( ) ; 
 - if ( searchMenu ! = null ) { 
 - if ( searchMenu . isActionViewExpanded ( ) ) { 
 - searchMenu . collapseActionView ( ) ; 
 - } 
 - } 
 - } 
 - 
 - @ Override 
 - public boolean onOptionsItemSelected ( MenuItem item ) { 
 - int i = item . getItemId ( ) ; 
 - if ( i = = R . id . help ) { 
 - startActivity ( new Intent ( getActivity ( ) , HelpActivity . class ) ) ; 
 - return true ; 
 - } else if ( i = = R . id . profile ) { 
 - ActorSDK . sharedActor ( ) . startSettingActivity ( getActivity ( ) ) ; 
 - return true ; 
 - } else if ( i = = R . id . contacts ) { 
 - startActivity ( new Intent ( getActivity ( ) , ContactsActivity . class ) ) ; 
 - return true ; 
 - } 
 - return false ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 71da5ab . . 8045a74 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 1 , 11 + 1 , 7 @ @ 
 package im . actor ; 
 
 - import java . util . ArrayList ; 
 - 
 - import im . actor . auth . SignEmailFragment ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . BaseActorSDKDelegate ; 
 - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; 
 
 / * * 
 * Created by badgr on 16 . 10 . 2015 . 
 @ @ - 15 , 13 + 11 , 11 @ @ public class Application extends android . app . Application { 
 public void onCreate ( ) { 
 super . onCreate ( ) ; 
 ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 + ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 ActorSDK . sharedActor ( ) . createActor ( this ) ; 
 } 
 
 private class ActorSDKDelegate extends BaseActorSDKDelegate { 
 - @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignEmailFragment ( ) ; 
 - } 
 + 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java 
 deleted file mode 100644 
 index 37ce216 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java 
 + + + / dev / null 
 @ @ - 1 , 137 + 0 , 0 @ @ 
 - package im . actor . auth ; 
 - 
 - import android . app . AlertDialog ; 
 - import android . os . Bundle ; 
 - import android . telephony . PhoneNumberFormattingTextWatcher ; 
 - import android . text . Editable ; 
 - import android . text . TextWatcher ; 
 - import android . view . KeyEvent ; 
 - import android . view . LayoutInflater ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . view . inputmethod . EditorInfo ; 
 - import android . widget . EditText ; 
 - import android . widget . TextView ; 
 - 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; 
 - import im . actor . sdk . util . Fonts ; 
 - import im . actor . sdk . util . KeyboardHelper ; 
 - 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - 
 - public class SignEmailFragment extends BaseAuthFragment { 
 - 
 - private EditText emailEditText ; 
 - private KeyboardHelper keyboardHelper ; 
 - 
 - @ Override 
 - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 - View v = inflater . inflate ( R . layout . fragment _ sign _ email , container , false ) ; 
 - 
 - ( ( TextView ) v . findViewById ( R . id . button _ continue _ text ) ) . setTypeface ( Fonts . medium ( ) ) ; 
 - 
 - keyboardHelper = new KeyboardHelper ( getActivity ( ) ) ; 
 - 
 - initView ( v ) ; 
 - 
 - return v ; 
 - } 
 - 
 - @ Override 
 - public void onResume ( ) { 
 - super . onResume ( ) ; 
 - 
 - / / TODO track email auth open 
 - / / messenger ( ) . trackAuthPhoneOpen ( ) ; 
 - 
 - setTitle ( R . string . auth _ email _ title ) ; 
 - 
 - focusEmail ( ) ; 
 - 
 - keyboardHelper . setImeVisibility ( emailEditText , true ) ; 
 - } 
 - 
 - private void initView ( View v ) { 
 - 
 - emailEditText = ( EditText ) v . findViewById ( R . id . tv _ email ) ; 
 - emailEditText . addTextChangedListener ( new PhoneNumberFormattingTextWatcher ( ) ) ; 
 - String email = messenger ( ) . getAuthEmail ( ) ; 
 - if ( email ! = null & & ! email . isEmpty ( ) ) { 
 - emailEditText . setText ( email ) ; 
 - } 
 - emailEditText . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { 
 - @ Override 
 - public boolean onEditorAction ( TextView textView , int id , KeyEvent keyEvent ) { 
 - if ( id = = EditorInfo . IME _ ACTION _ GO ) { 
 - requestCode ( ) ; 
 - return true ; 
 - } 
 - return false ; 
 - } 
 - } ) ; 
 - emailEditText . addTextChangedListener ( new TextWatcher ( ) { 
 - @ Override 
 - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onTextChanged ( CharSequence s , int start , int before , int count ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void afterTextChanged ( Editable s ) { 
 - / / TODO trackAuthEmailType 
 - / / messenger ( ) . trackAuthPhoneType ( emailEditText . getText ( ) . toString ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - onClick ( v , R . id . button _ continue , new View . OnClickListener ( ) { 
 - @ Override 
 - public void onClick ( View view ) { 
 - requestCode ( ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - private void requestCode ( ) { 
 - final String ACTION = " Request code email " ; 
 - 
 - 
 - if ( emailEditText . getText ( ) . toString ( ) . trim ( ) . length ( ) = = 0 ) { 
 - String message = getString ( R . string . auth _ error _ empty _ email ) ; 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( R . string . auth _ error _ empty _ email ) 
 - . setPositiveButton ( R . string . dialog _ ok , null ) 
 - . show ( ) ; 
 - return ; 
 - } 
 - 
 - String rawEmail = emailEditText . getText ( ) . toString ( ) ; 
 - 
 - if ( rawEmail . length ( ) = = 0 ) { 
 - String message = getString ( R . string . auth _ error _ empty _ email ) ; 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( R . string . auth _ error _ empty _ email ) 
 - . setPositiveButton ( R . string . dialog _ ok , null ) 
 - . show ( ) ; 
 - return ; 
 - } 
 - 
 - setAuthId ( rawEmail ) ; 
 - 
 - executeAuth ( ActorSDK . sharedActor ( ) . getMessenger ( ) . requestStartEmailAuth ( rawEmail ) , ACTION ) ; 
 - } 
 - 
 - private void focusEmail ( ) { 
 - focus ( emailEditText ) ; 
 - } 
 - 
 - @ Override 
 - public String getHintText ( ) { 
 - return getString ( R . string . auth _ code _ email _ hint ) . replace ( " { 0 } " , " < b > " + getAuthId ( ) + " < / b > " ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java 
 deleted file mode 100644 
 index c74e30f . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java 
 + + + / dev / null 
 @ @ - 1 , 100 + 0 , 0 @ @ 
 - package im . actor . core ; 
 - 
 - import android . content . Context ; 
 - 
 - import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 - 
 - import java . io . IOException ; 
 - 
 - import im . actor . messenger . app . core . ActorSDK ; 
 - import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - 
 - / * * 
 - * GCM push implementation for Actor push registration . 
 - * This actor is used for load GCM token and register it on server . 
 - * / 
 - public class AndroidPushActor extends Actor { 
 - 
 - private static final String TAG = " im . actor . core . AndroidPushActor " ; 
 - 
 - private final AndroidMessenger messenger ; 
 - private final Context context ; 
 - private boolean isRegistered ; 
 - 
 - public AndroidPushActor ( Context context , AndroidMessenger messenger ) { 
 - this . messenger = messenger ; 
 - this . context = context ; 
 - } 
 - 
 - @ Override 
 - public void preStart ( ) { 
 - super . preStart ( ) ; 
 - 
 - isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; 
 - 
 - if ( ! isRegistered ) { 
 - Log . d ( TAG , " Requesting push token . . . " ) ; 
 - 
 - / / TODO : Add backoff 
 - new Thread ( ) { 
 - @ Override 
 - public void run ( ) { 
 - while ( true ) { 
 - GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 - try { 
 - Log . d ( TAG , " Requesting push token iteration . . . " ) ; 
 - String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getGcmProjectId ( ) ) ; 
 - if ( regId ! = null ) { 
 - Log . d ( TAG , " Token loaded " ) ; 
 - self ( ) . send ( new PushRegistered ( regId ) ) ; 
 - return ; 
 - } else { 
 - Log . d ( TAG , " Unable to load Token " ) ; 
 - } 
 - } catch ( IOException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - Log . d ( TAG , " Waiting for next attempt " ) ; 
 - try { 
 - Thread . sleep ( 1000 ) ; 
 - } catch ( InterruptedException e1 ) { 
 - e1 . printStackTrace ( ) ; 
 - return ; 
 - } 
 - } 
 - } 
 - } . start ( ) ; 
 - } else { 
 - Log . d ( TAG , " Already registered token " ) ; 
 - } 
 - } 
 - 
 - private void onPushRegistered ( String token ) { 
 - isRegistered = true ; 
 - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getGcmProjectId ( ) , token ) ; 
 - } 
 - 
 - @ Override 
 - public void onReceive ( Object message ) { 
 - if ( message instanceof PushRegistered ) { 
 - PushRegistered pushRegistered = ( PushRegistered ) message ; 
 - onPushRegistered ( pushRegistered . getToken ( ) ) ; 
 - } else { 
 - drop ( message ) ; 
 - } 
 - } 
 - 
 - public static class PushRegistered { 
 - private String token ; 
 - 
 - public PushRegistered ( String token ) { 
 - this . token = token ; 
 - } 
 - 
 - public String getToken ( ) { 
 - return token ; 
 - } 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java 
 deleted file mode 100644 
 index 8dbd762 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java 
 + + + / dev / null 
 @ @ - 1 , 37 + 0 , 0 @ @ 
 - package im . actor . messenger ; 
 - 
 - import android . app . Activity ; 
 - import android . content . Context ; 
 - import android . content . Intent ; 
 - import android . os . Bundle ; 
 - import android . support . v4 . content . WakefulBroadcastReceiver ; 
 - 
 - import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 - 
 - import im . actor . runtime . Log ; 
 - 
 - 
 - import static im . actor . messenger . app . core . ActorSDK . messenger ; 
 - 
 - public class PushReceiver extends WakefulBroadcastReceiver { 
 - 
 - private static final String TAG = " PushReceiver " ; 
 - 
 - @ Override 
 - public void onReceive ( Context context , Intent intent ) { 
 - GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; 
 - Bundle extras = intent . getExtras ( ) ; 
 - String messageType = gcm . getMessageType ( intent ) ; 
 - if ( ! extras . isEmpty ( ) ) { 
 - if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 - if ( extras . containsKey ( " seq " ) ) { 
 - int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 - messenger ( ) . onPushReceived ( seq ) ; 
 - setResultCode ( Activity . RESULT _ OK ) ; 
 - Log . d ( TAG , " Push received " ) ; 
 - } 
 - } 
 - } 
 - completeWakefulIntent ( intent ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 index 5153388 . . 8c04484 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 @ @ - 75 , 6 + 75 , 10 @ @ dependencies { 
 compile ' com . android . support : palette - v7 : 23 . 1 . 0 ' 
 compile ' com . android . support : recyclerview - v7 : 23 . 1 . 0 ' 
 compile ' com . android . support : design : 23 . 1 . 0 ' 
 + 
 + / / GCM 
 + compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' 
 + 
 } 
 
 / / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 1492015 . . ef17a74 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 18 , 14 + 18 , 20 @ @ import im . actor . core . ApiConfiguration ; 
 import im . actor . core . ConfigurationBuilder ; 
 import im . actor . core . DeviceCategory ; 
 import im . actor . core . PlatformType ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . core . AndroidNotifications ; 
 import im . actor . sdk . core . AndroidPhoneBook ; 
 + import im . actor . sdk . core . AndroidPushActor ; 
 import im . actor . sdk . intents . ActivityManager ; 
 import im . actor . sdk . services . KeepAliveService ; 
 import im . actor . sdk . util . Devices ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 import im . actor . runtime . android . AndroidContext ; 
 
 + import static im . actor . runtime . actors . ActorSystem . system ; 
 + 
 + 
 public class ActorSDK { 
 
 
 @ @ - 61 , 6 + 67 , 11 @ @ public class ActorSDK { 
 * / 
 private String apiAppKey = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; 
 / * * 
 + * Push Registration Id 
 + * / 
 + private long pushId = 0 ; 
 + 
 + / * * 
 * Is Keeping app alive enabled 
 * / 
 private boolean isKeepAliveEnabled = false ; 
 @ @ - 71 , 7 + 82 , 8 @ @ public class ActorSDK { 
 / * * 
 * ActivityManager 
 * / 
 - private ActivityManager activityManager = new ActivityManager ( ) ; 
 + private ActivityManager activityManager = new ActivityManager ( ) ; 
 + 
 private ActorSDK ( ) { 
 endpoints . add ( " tls : / / front1 - mtproto - api - rev2 . actor . im " ) ; 
 endpoints . add ( " tls : / / front2 - mtproto - api - rev2 . actor . im " ) ; 
 @ @ - 91 , 7 + 103 , 7 @ @ public class ActorSDK { 
 / / SDK Initialization 
 / / 
 
 - public void createActor ( Application application ) { 
 + public void createActor ( final Application application ) { 
 
 this . application = application ; 
 
 @ @ - 135 , 6 + 147 , 19 @ @ public class ActorSDK { 
 AlarmManager alarm = ( AlarmManager ) application . getSystemService ( Context . ALARM _ SERVICE ) ; 
 alarm . setRepeating ( AlarmManager . RTC , System . currentTimeMillis ( ) , 30 * 1000 , pendingIntent ) ; 
 } 
 + 
 + / / 
 + / / GCM 
 + / / 
 + if ( pushId ! = 0 ) { 
 + system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { 
 + @ Override 
 + public AndroidPushActor create ( ) { 
 + return new AndroidPushActor ( application , messenger ) ; 
 + } 
 + } ) , " actor / android / push " ) ; 
 + } 
 + 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 240 , 6 + 265 , 22 @ @ public class ActorSDK { 
 this . isKeepAliveEnabled = isKeepAliveEnabled ; 
 } 
 
 + / * * 
 + * Getting Push Registration Id 
 + * 
 + * @ return pushId 
 + * / 
 + public long getPushId ( ) { 
 + return pushId ; 
 + } 
 + 
 + / * * 
 + * Setting Push Registration Id 
 + * / 
 + public void setPushId ( long pushId ) { 
 + this . pushId = pushId ; 
 + } 
 + 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 new file mode 100644 
 index 0000000 . . d65a7a8 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 @ @ - 0 , 0 + 1 , 101 @ @ 
 + package im . actor . sdk . core ; 
 + 
 + import android . content . Context ; 
 + 
 + import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 + 
 + import java . io . IOException ; 
 + 
 + import im . actor . core . AndroidMessenger ; 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . sdk . ActorSDK ; 
 + 
 + / * * 
 + * GCM push implementation for Actor push registration . 
 + * This actor is used for load GCM token and register it on server . 
 + * / 
 + public class AndroidPushActor extends Actor { 
 + 
 + private static final String TAG = " im . actor . core . AndroidPushActor " ; 
 + 
 + private final AndroidMessenger messenger ; 
 + private final Context context ; 
 + private boolean isRegistered ; 
 + 
 + public AndroidPushActor ( Context context , AndroidMessenger messenger ) { 
 + this . messenger = messenger ; 
 + this . context = context ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + super . preStart ( ) ; 
 + 
 + isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; 
 + 
 + if ( ! isRegistered ) { 
 + Log . d ( TAG , " Requesting push token . . . " ) ; 
 + 
 + / / TODO : Add backoff 
 + new Thread ( ) { 
 + @ Override 
 + public void run ( ) { 
 + while ( true ) { 
 + GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 + try { 
 + Log . d ( TAG , " Requesting push token iteration . . . " ) ; 
 + String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; 
 + if ( regId ! = null ) { 
 + Log . d ( TAG , " Token loaded " ) ; 
 + self ( ) . send ( new PushRegistered ( regId ) ) ; 
 + return ; 
 + } else { 
 + Log . d ( TAG , " Unable to load Token " ) ; 
 + } 
 + } catch ( IOException e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + Log . d ( TAG , " Waiting for next attempt " ) ; 
 + try { 
 + Thread . sleep ( 1000 ) ; 
 + } catch ( InterruptedException e1 ) { 
 + e1 . printStackTrace ( ) ; 
 + return ; 
 + } 
 + } 
 + } 
 + } . start ( ) ; 
 + } else { 
 + Log . d ( TAG , " Already registered token " ) ; 
 + } 
 + } 
 + 
 + private void onPushRegistered ( String token ) { 
 + isRegistered = true ; 
 + messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 + messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof PushRegistered ) { 
 + PushRegistered pushRegistered = ( PushRegistered ) message ; 
 + onPushRegistered ( pushRegistered . getToken ( ) ) ; 
 + } else { 
 + drop ( message ) ; 
 + } 
 + } 
 + 
 + public static class PushRegistered { 
 + private String token ; 
 + 
 + public PushRegistered ( String token ) { 
 + this . token = token ; 
 + } 
 + 
 + public String getToken ( ) { 
 + return token ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java 
 new file mode 100644 
 index 0000000 . . 425cfb1 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java 
 @ @ - 0 , 0 + 1 , 35 @ @ 
 + package im . actor . sdk . core ; 
 + 
 + import android . app . Activity ; 
 + import android . content . Context ; 
 + import android . content . Intent ; 
 + import android . os . Bundle ; 
 + import android . support . v4 . content . WakefulBroadcastReceiver ; 
 + 
 + import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 + 
 + import im . actor . runtime . Log ; 
 + import im . actor . sdk . ActorSDK ; 
 + 
 + public class PushReceiver extends WakefulBroadcastReceiver { 
 + 
 + private static final String TAG = " PushReceiver " ; 
 + 
 + @ Override 
 + public void onReceive ( Context context , Intent intent ) { 
 + GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; 
 + Bundle extras = intent . getExtras ( ) ; 
 + String messageType = gcm . getMessageType ( intent ) ; 
 + if ( ! extras . isEmpty ( ) ) { 
 + if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 + if ( extras . containsKey ( " seq " ) ) { 
 + int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; 
 + setResultCode ( Activity . RESULT _ OK ) ; 
 + Log . d ( TAG , " Push received " ) ; 
 + } 
 + } 
 + } 
 + completeWakefulIntent ( intent ) ; 
 + } 
 + }
