BLEU SCORE: 0.46713797772820004

TEST MSG: fix ( android ) : sanitize downloaded file names
GENERATED MSG: fix ( android ) : commit file upload

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > index e272269 . . d959fba 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > @ @ - 13 , 6 + 13 , 7 @ @ import im . actor . runtime . files . FileSystemReference ; < nl > < nl > public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > < nl > + public static final String FILE _ SYSTEM _ SAFE _ RENAME = " \ \ W + " ; < nl > private Random random = new Random ( ) ; < nl > private boolean isFirst = true ; < nl > < nl > @ @ - 58 , 7 + 59 , 8 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > < nl > String baseFileName = fileName ; < nl > if ( fileName . contains ( " . " ) ) { < nl > - String prefix = baseFileName . substring ( baseFileName . lastIndexOf ( ' . ' ) ) ; < nl > + String prefix = baseFileName . substring ( 0 , baseFileName . lastIndexOf ( ' . ' ) ) . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; < nl > + < nl > String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; < nl > < nl > File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; < nl > @ @ - 100 , 7 + 102 , 8 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > if ( ! new File ( sourceFile . getDescriptor ( ) ) . renameTo ( new File ( realFileName ) ) ) { < nl > return null ; < nl > } < nl > - return new AndroidFileSystemReference ( realFileName ) ; < nl > + AndroidFileSystemReference androidFileSystemReference = new AndroidFileSystemReference ( realFileName ) ; < nl > + return androidFileSystemReference ; < nl > } < nl > < nl > @ Override
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > index 275f682 . . e272269 100644 < nl > - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java < nl > @ @ - 57 , 14 + 57 , 14 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { < nl > dest . mkdirs ( ) ; < nl > < nl > String baseFileName = fileName ; < nl > - if ( fileName . contains ( " " ) ) { < nl > + if ( fileName . contains ( " . " ) ) { < nl > String prefix = baseFileName . substring ( baseFileName . lastIndexOf ( ' . ' ) ) ; < nl > String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; < nl > < nl > - File res = new File ( dest , prefix + " _ " + fileId + " " + ext ) ; < nl > + File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; < nl > int index = 0 ; < nl > while ( res . exists ( ) ) { < nl > - res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " " + ext ) ; < nl > + res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " . " + ext ) ; < nl > index + + ; < nl > } < nl > return res . getAbsolutePath ( ) ;

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 index e272269 . . d959fba 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 @ @ - 13 , 6 + 13 , 7 @ @ import im . actor . runtime . files . FileSystemReference ; 
 
 public class AndroidFileSystemProvider implements FileSystemRuntime { 
 
 + public static final String FILE _ SYSTEM _ SAFE _ RENAME = " \ \ W + " ; 
 private Random random = new Random ( ) ; 
 private boolean isFirst = true ; 
 
 @ @ - 58 , 7 + 59 , 8 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 
 String baseFileName = fileName ; 
 if ( fileName . contains ( " . " ) ) { 
 - String prefix = baseFileName . substring ( baseFileName . lastIndexOf ( ' . ' ) ) ; 
 + String prefix = baseFileName . substring ( 0 , baseFileName . lastIndexOf ( ' . ' ) ) . replaceAll ( FILE _ SYSTEM _ SAFE _ RENAME , " " ) ; 
 + 
 String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; 
 
 File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; 
 @ @ - 100 , 7 + 102 , 8 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 if ( ! new File ( sourceFile . getDescriptor ( ) ) . renameTo ( new File ( realFileName ) ) ) { 
 return null ; 
 } 
 - return new AndroidFileSystemReference ( realFileName ) ; 
 + AndroidFileSystemReference androidFileSystemReference = new AndroidFileSystemReference ( realFileName ) ; 
 + return androidFileSystemReference ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 index 275f682 . . e272269 100644 
 - - - a / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 + + + b / actor - sdk / sdk - core / runtime / runtime - android / src / main / java / im / actor / runtime / android / AndroidFileSystemProvider . java 
 @ @ - 57 , 14 + 57 , 14 @ @ public class AndroidFileSystemProvider implements FileSystemRuntime { 
 dest . mkdirs ( ) ; 
 
 String baseFileName = fileName ; 
 - if ( fileName . contains ( " " ) ) { 
 + if ( fileName . contains ( " . " ) ) { 
 String prefix = baseFileName . substring ( baseFileName . lastIndexOf ( ' . ' ) ) ; 
 String ext = baseFileName . substring ( prefix . length ( ) + 1 ) ; 
 
 - File res = new File ( dest , prefix + " _ " + fileId + " " + ext ) ; 
 + File res = new File ( dest , prefix + " _ " + fileId + " . " + ext ) ; 
 int index = 0 ; 
 while ( res . exists ( ) ) { 
 - res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " " + ext ) ; 
 + res = new File ( dest , prefix + " _ " + fileId + " _ " + index + " . " + ext ) ; 
 index + + ; 
 } 
 return res . getAbsolutePath ( ) ;
