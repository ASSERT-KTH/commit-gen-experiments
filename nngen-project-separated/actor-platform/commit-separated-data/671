BLEU SCORE: 0.345720784641941

TEST MSG: chore ( android ) : stickers sync refactor
GENERATED MSG: fix ( android ) : recover push

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java < nl > index 9ab03d7 . . 5bfcdb1 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java < nl > @ @ - 1 , 15 + 1 , 18 @ @ < nl > package im . actor . sdk . view . emoji . stickers ; < nl > < nl > import android . content . Context ; < nl > + import android . graphics . Color ; < nl > import android . support . v7 . widget . GridLayoutManager ; < nl > import android . view . Gravity ; < nl > import android . view . View ; < nl > import android . view . ViewGroup ; < nl > import android . widget . FrameLayout ; < nl > + import android . widget . LinearLayout ; < nl > < nl > import im . actor . core . api . ApiStickerDescriptor ; < nl > import im . actor . core . entity . content . internal . Sticker ; < nl > import im . actor . core . entity . content . internal . StickersPack ; < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . android . view . BindedListAdapter ; < nl > import im . actor . runtime . android . view . BindedViewHolder ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > @ @ - 21 , 12 + 24 , 15 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S < nl > < nl > private Context context ; < nl > private StickersAdapter stickersAdapter ; < nl > + LinearLayout packsSwitchContainer ; < nl > + int selectedPostion = - 1 ; < nl > < nl > - public PacksAdapter ( BindedDisplayList < StickersPack > displayList , Context context , StickersAdapter stickersAdapter ) { < nl > + public PacksAdapter ( BindedDisplayList < StickersPack > displayList , Context context , StickersAdapter stickersAdapter , LinearLayout stickerIndicatorContainer ) { < nl > super ( displayList ) ; < nl > + this . packsSwitchContainer = stickerIndicatorContainer ; < nl > this . context = context ; < nl > this . stickersAdapter = stickersAdapter ; < nl > - < nl > + stickersAdapter . setPacksAdapter ( this ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 37 , 7 + 43 , 7 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S < nl > < nl > @ Override < nl > public void onBindViewHolder ( StickerHolder holder , int index , StickersPack item ) { < nl > - holder . bind ( item ) ; < nl > + holder . bind ( item , index ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 50 , 30 + 56 , 39 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S < nl > private StickerView sv ; < nl > private StickersPack sp ; < nl > private Sticker s ; < nl > + private int position ; < nl > + FrameLayout fl ; < nl > < nl > public StickerHolder ( Context context , FrameLayout fl ) { < nl > super ( fl ) ; < nl > + this . fl = fl ; < nl > sv = new StickerView ( context ) ; < nl > int padding = Screen . dp ( 2 ) ; < nl > sv . setPadding ( padding , padding , padding , padding ) ; < nl > - FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( Screen . dp ( 20 ) , Screen . dp ( 20 ) , Gravity . CENTER ) ; < nl > + FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( packsSwitchContainer . getHeight ( ) , packsSwitchContainer . getHeight ( ) , Gravity . CENTER ) ; < nl > fl . addView ( sv , params ) ; < nl > fl . setOnClickListener ( new View . OnClickListener ( ) { < nl > @ Override < nl > public void onClick ( View v ) { < nl > if ( sp ! = null ) { < nl > - stickersAdapter . scrollToSticker ( new Sticker ( null , 0 , s . getLocalCollectionId ( ) , 0 , true ) ) ; < nl > + selectedPostion = position ; < nl > + stickersAdapter . scrollToSticker ( new Sticker ( null , 0 , sp . getLocalId ( ) , 0 , true ) ) ; < nl > } < nl > } < nl > } ) ; < nl > } < nl > < nl > < nl > - public void bind ( StickersPack sp ) { < nl > + public void bind ( StickersPack sp , int position ) { < nl > + this . position = position ; < nl > this . sp = sp ; < nl > s = sp . getStickers ( ) . get ( 0 ) ; < nl > sv . bind ( s , StickerView . STICKER _ SMALL ) ; < nl > - < nl > + if ( selectedPostion = = position ) { < nl > + fl . setBackgroundColor ( Color . LTGRAY ) ; < nl > + } else { < nl > + fl . setBackgroundColor ( Color . TRANSPARENT ) ; < nl > + } < nl > } < nl > < nl > public void unbind ( ) { < nl > @ @ - 83 , 5 + 98 , 16 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S < nl > < nl > } < nl > < nl > + public void selectPack ( int localPackId ) { < nl > + for ( int i = 0 ; i < getItemCount ( ) ; i + + ) { < nl > + StickersPack p = getItem ( i ) ; < nl > + if ( p . getLocalId ( ) = = localPackId ) { < nl > + selectedPostion = i ; < nl > + notifyDataSetChanged ( ) ; < nl > + break ; < nl > + } < nl > + } < nl > + } < nl > + < nl > < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickerAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickerAdapter . java < nl > deleted file mode 100644 < nl > index edbd349 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickerAdapter . java < nl > + + + / dev / null < nl > @ @ - 1 , 267 + 0 , 0 @ @ < nl > - package im . actor . sdk . view . emoji . stickers ; < nl > - < nl > - import android . content . Context ; < nl > - import android . graphics . Color ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . widget . AbsListView ; < nl > - import android . widget . LinearLayout ; < nl > - < nl > - import java . util . ArrayList ; < nl > - import java . util . HashMap ; < nl > - < nl > - import im . actor . core . entity . content . internal . Sticker ; < nl > - import im . actor . core . entity . content . internal . StickersPack ; < nl > - import im . actor . core . viewmodel . StickerPackVM ; < nl > - import im . actor . runtime . mvvm . MVVMCollection ; < nl > - import im . actor . runtime . mvvm . Value ; < nl > - import im . actor . runtime . mvvm . ValueChangedListener ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . activity . BaseActivity ; < nl > - import im . actor . sdk . util . Screen ; < nl > - import im . actor . sdk . view . adapters . HolderAdapter ; < nl > - import im . actor . sdk . view . adapters . ViewHolder ; < nl > - import im . actor . sdk . view . emoji . keyboard . emoji . EmojiKeyboard ; < nl > - < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - < nl > - class StickerAdapter extends HolderAdapter < StickerLine > { < nl > - private static final int TAG _ KEY = R . id . sticker _ pager ; < nl > - MVVMCollection < StickersPack , StickerPackVM > packs ; < nl > - StickerLine [ ] stickerLines ; < nl > - EmojiKeyboard keyboard ; < nl > - private int stickerInLine ; < nl > - private final int STICKER _ SIZE = Screen . dp ( 80 ) ; < nl > - private final int STICKER _ PADDING = Screen . dp ( 5 ) ; < nl > - private int leftPadding ; < nl > - / / TODO limit cache < nl > - static HashMap < Long , StickerView > stickersCache ; < nl > - private int totalLines = 0 ; < nl > - ScrollTo scrollTo ; < nl > - private LinearLayout stickerIndicatorContainer ; < nl > - private Object position ; < nl > - private Context context ; < nl > - private final int padding ; < nl > - private final HashMap < Integer , Integer > packFirstLineMap ; < nl > - private final LinearLayout . LayoutParams stickerSwitchLp ; < nl > - < nl > - public StickerAdapter ( Context context , EmojiKeyboard keyboard , final ScrollTo scrollTo ) { < nl > - super ( context ) ; < nl > - this . context = context ; < nl > - this . keyboard = keyboard ; < nl > - if ( stickersCache = = null ) { < nl > - stickersCache = new HashMap < Long , StickerView > ( ) ; < nl > - } < nl > - this . scrollTo = scrollTo ; < nl > - < nl > - / / Build sticker lines < nl > - stickerIndicatorContainer = keyboard . getStickerIndicatorContainer ( ) ; < nl > - stickerIndicatorContainer . setTag ( TAG _ KEY , 0 ) ; < nl > - < nl > - stickerInLine = ( Screen . getWidth ( ) / STICKER _ SIZE ) ; < nl > - leftPadding = ( Screen . getWidth ( ) - ( stickerInLine * STICKER _ SIZE ) ) / 2 ; < nl > - < nl > - packFirstLineMap = new HashMap < Integer , Integer > ( ) ; < nl > - < nl > - stickerSwitchLp = new LinearLayout . LayoutParams ( Screen . dp ( 48 ) , Screen . dp ( 48 ) ) ; < nl > - padding = Screen . dp ( 8 ) ; < nl > - < nl > - / / packs = messenger ( ) . getOwnStickerPacks ( ) ; < nl > - / / packs . addCallback ( new MVVMCollection . OnChangedListener ( ) { < nl > - / / @ Override < nl > - / / public void onChanged ( ) { < nl > - / / buildStickerLines ( scrollTo ) ; < nl > - / / notifyDataSetChanged ( ) ; < nl > - / / < nl > - / / } < nl > - / / } ) ; < nl > - < nl > - } < nl > - < nl > - private void buildStickerLines ( final ScrollTo scrollTo ) { < nl > - < nl > - / / BUILD SWITCH < nl > - keyboard . getStickerIndicatorContainer ( ) . removeAllViews ( ) ; < nl > - < nl > - / / Add pack switch buttons < nl > - int packCount = 0 ; < nl > - totalLines = 0 ; < nl > - / / for ( final StickerPackVM pack : packs . getValuesMap ( ) . values ( ) ) { < nl > - / / ( ( BaseActivity ) context ) . bind ( pack . getStickers ( ) , new ValueChangedListener < ArrayList < Sticker > > ( ) { < nl > - / / @ Override < nl > - / / public void onChanged ( ArrayList < Sticker > val , Value < ArrayList < Sticker > > valueModel ) { < nl > - / / buildStickerLines ( scrollTo ) ; < nl > - / / notifyDataSetChanged ( ) ; < nl > - / / } < nl > - / / } , false ) ; < nl > - / / if ( pack . getStickers ( ) . get ( ) . size ( ) < 1 ) { < nl > - / / continue ; < nl > - / / } < nl > - / / / / Count lines < nl > - / / int linesInPack = ( int ) Math . ceil ( ( double ) pack . getStickers ( ) . get ( ) . size ( ) / stickerInLine ) ; < nl > - / / totalLines + = linesInPack ; < nl > - / / < nl > - / / / / Build packs buttons < nl > - / / final StickerView sv = new StickerView ( context ) ; < nl > - / / < nl > - / / sv . bind ( pack . getStickers ( ) . get ( ) . get ( 0 ) , StickerView . STICKER _ SMALL ) ; < nl > - / / sv . setPadding ( padding , padding , padding , padding ) ; < nl > - / / sv . setOnClickListener ( new View . OnClickListener ( ) { < nl > - / / @ Override < nl > - / / public void onClick ( View v ) { < nl > - / / scrollTo . requestScroll ( packFirstLineMap . get ( pack . getId ( ) ) ) ; < nl > - / / selectCurrentPack ( ( Integer ) sv . getTag ( TAG _ KEY ) ) ; < nl > - / / } < nl > - / / } ) ; < nl > - / / sv . setTag ( TAG _ KEY , packCount ) ; < nl > - / / keyboard . getStickerIndicatorContainer ( ) . addView ( sv , stickerSwitchLp ) ; < nl > - / / packCount + + ; < nl > - / / } < nl > - if ( stickerIndicatorContainer . getChildAt ( 0 ) ! = null ) { < nl > - stickerIndicatorContainer . getChildAt ( 0 ) . setBackgroundColor ( context . getResources ( ) . getColor ( R . color . selector _ selected ) ) ; < nl > - } < nl > - < nl > - / / BUILD LINES < nl > - / / All lines stored here < nl > - stickerLines = new StickerLine [ totalLines ] ; < nl > - < nl > - < nl > - / / Fill lines with packs stickers < nl > - int allLinesCount = 0 ; < nl > - int linePackCount = 0 ; < nl > - / / for ( StickerPackVM pack : packs . getValuesMap ( ) . values ( ) ) { < nl > - / / if ( pack . getStickers ( ) . get ( ) . size ( ) < 1 ) { < nl > - / / continue ; < nl > - / / } < nl > - / / int stickerInPack = 0 ; < nl > - / / int linesInPack = ( int ) Math . ceil ( ( double ) pack . getStickers ( ) . get ( ) . size ( ) / stickerInLine ) ; < nl > - / / < nl > - / / / / Loop pack lines < nl > - / / for ( int lineInPackCount = 0 ; lineInPackCount < linesInPack ; lineInPackCount + + , allLinesCount + + ) { < nl > - / / StickerLine line = new StickerLine ( new Sticker [ stickerInLine ] , linePackCount ) ; < nl > - / / / / Remember pack first line position < nl > - / / if ( lineInPackCount = = 0 ) { < nl > - / / packFirstLineMap . put ( pack . getId ( ) , allLinesCount ) ; < nl > - / / } < nl > - / / / / Fill line with stickers < nl > - / / for ( int stickerInLine = 0 ; stickerInLine < this . stickerInLine ; stickerInLine + + , stickerInPack + + ) { < nl > - / / if ( stickerInPack < pack . getStickers ( ) . get ( ) . size ( ) ) { < nl > - / / line . getLine ( ) [ stickerInLine ] = pack . getStickers ( ) . get ( ) . get ( stickerInPack ) ; < nl > - / / } else { < nl > - / / break ; < nl > - / / } < nl > - / / } < nl > - / / stickerLines [ allLinesCount ] = line ; < nl > - / / } < nl > - / / linePackCount + + ; < nl > - / / } < nl > - } < nl > - < nl > - @ Override < nl > - public int getCount ( ) { < nl > - return totalLines ; < nl > - } < nl > - < nl > - @ Override < nl > - public StickerLine getItem ( int position ) { < nl > - return stickerLines [ position ] ; < nl > - } < nl > - < nl > - @ Override < nl > - public long getItemId ( int position ) { < nl > - return 0 ; < nl > - } < nl > - < nl > - @ Override < nl > - protected ViewHolder < StickerLine > createHolder ( StickerLine obj ) { < nl > - return new StickerLineViewHolder ( ) ; < nl > - } < nl > - < nl > - < nl > - class StickerLineViewHolder extends ViewHolder < StickerLine > { < nl > - LinearLayout ll ; < nl > - LinearLayout . LayoutParams stikerlp = new LinearLayout . LayoutParams ( STICKER _ SIZE , STICKER _ SIZE ) ; < nl > - < nl > - < nl > - @ Override < nl > - public View init ( StickerLine data , ViewGroup viewGroup , Context context ) { < nl > - ll = new LinearLayout ( context ) ; < nl > - ll . setLayoutParams ( new AbsListView . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , STICKER _ SIZE ) ) ; < nl > - ll . setPadding ( leftPadding , 0 , 0 , 0 ) ; < nl > - ll . setOrientation ( LinearLayout . HORIZONTAL ) ; < nl > - return ll ; < nl > - } < nl > - < nl > - @ Override < nl > - public void bind ( StickerLine data , int position , Context context ) { < nl > - ll . removeAllViews ( ) ; < nl > - ll . setTag ( TAG _ KEY , data . getPackCount ( ) ) ; < nl > - for ( final Sticker s : data . getLine ( ) ) { < nl > - StickerView sv ; < nl > - if ( s ! = null & & s . getFileReference128 ( ) ! = null ) { < nl > - < nl > - sv = stickersCache . get ( s . getFileReference128 ( ) . getFileId ( ) ) ; < nl > - if ( sv = = null ) { < nl > - sv = new StickerView ( context ) ; < nl > - sv . setPadding ( STICKER _ PADDING , STICKER _ PADDING , STICKER _ PADDING , STICKER _ PADDING ) ; < nl > - sv . bind ( s , StickerView . STICKER _ SMALL ) ; < nl > - stickersCache . put ( s . getFileReference128 ( ) . getFileId ( ) , sv ) ; < nl > - < nl > - } else if ( sv . isLoaded ( ) ) { < nl > - sv . shortenFade ( ) ; < nl > - } < nl > - < nl > - if ( sv . getParent ( ) ! = null ) { < nl > - ( ( LinearLayout ) sv . getParent ( ) ) . removeView ( sv ) ; < nl > - } < nl > - < nl > - final StickerView finalSv = sv ; < nl > - sv . setOnClickListener ( new View . OnClickListener ( ) { < nl > - @ Override < nl > - public void onClick ( View v ) { < nl > - if ( s . getThumb ( ) = = null & & finalSv . isLoaded ( ) ) { < nl > - s . setThumb ( finalSv . getThumb ( ) ) ; < nl > - } < nl > - keyboard . onStickerClicked ( s ) ; < nl > - } < nl > - } ) ; < nl > - ll . addView ( sv , stikerlp ) ; < nl > - } < nl > - } < nl > - < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void unbind ( ) { < nl > - super . unbind ( ) ; < nl > - ll . removeAllViews ( ) ; < nl > - } < nl > - } < nl > - < nl > - public void onScroll ( View view ) { < nl > - if ( view ! = null ) { < nl > - if ( stickerIndicatorContainer . getTag ( TAG _ KEY ) ! = null & & ! stickerIndicatorContainer . getTag ( TAG _ KEY ) . equals ( view . getTag ( TAG _ KEY ) ) ) { < nl > - stickerIndicatorContainer . setTag ( TAG _ KEY , view . getTag ( TAG _ KEY ) ) ; < nl > - position = view . getTag ( TAG _ KEY ) ; < nl > - selectCurrentPack ( ( Integer ) position ) ; < nl > - } < nl > - } < nl > - } < nl > - < nl > - private void selectCurrentPack ( int position ) { < nl > - for ( int i = 0 ; i < stickerIndicatorContainer . getChildCount ( ) ; i + + ) { < nl > - if ( stickerIndicatorContainer . getChildAt ( i ) ! = null ) { < nl > - stickerIndicatorContainer . getChildAt ( i ) . setBackgroundColor ( Color . TRANSPARENT ) ; < nl > - } < nl > - } < nl > - if ( stickerIndicatorContainer . getChildAt ( position ) ! = null ) { < nl > - stickerIndicatorContainer . getChildAt ( position ) . setBackgroundColor ( stickerIndicatorContainer . getContext ( ) . getResources ( ) . getColor ( R . color . selector _ selected ) ) ; < nl > - } < nl > - } < nl > - < nl > - public interface ScrollTo { < nl > - void requestScroll ( int position ) ; < nl > - } < nl > - < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java < nl > index add9950 . . 1fc5880 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java < nl > @ @ - 9 , 6 + 9 , 7 @ @ import android . view . ViewGroup ; < nl > import android . widget . FrameLayout ; < nl > < nl > import im . actor . core . entity . content . internal . Sticker ; < nl > + import im . actor . runtime . Log ; < nl > import im . actor . runtime . android . view . BindedListAdapter ; < nl > import im . actor . runtime . android . view . BindedViewHolder ; < nl > import im . actor . runtime . generic . mvvm . BindedDisplayList ; < nl > @ @ - 22 , 6 + 23 , 8 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . < nl > private EmojiKeyboard keyboard ; < nl > RecyclerView recyclerView ; < nl > BindedDisplayList < Sticker > displayList ; < nl > + int topPack = - 1 ; < nl > + PacksAdapter packsAdapter ; < nl > < nl > public StickersAdapter ( BindedDisplayList < Sticker > displayList , Context context , final RecyclerView recyclerView , EmojiKeyboard keyboard ) { < nl > super ( displayList ) ; < nl > @ @ - 40 , 6 + 43 , 23 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . < nl > } < nl > } < nl > } ) ; < nl > + recyclerView . addOnScrollListener ( new RecyclerView . OnScrollListener ( ) { < nl > + Sticker s ; < nl > + < nl > + @ Override < nl > + public void onScrolled ( RecyclerView recyclerView , int dx , int dy ) { < nl > + super . onScrolled ( recyclerView , dx , dy ) ; < nl > + int firstVisiblePosition = layoutManager . findFirstCompletelyVisibleItemPosition ( ) ; < nl > + s = getItem ( firstVisiblePosition ) ; < nl > + int newTopPack = s . getLocalCollectionId ( ) ; < nl > + if ( newTopPack ! = topPack ) { < nl > + topPack = newTopPack ; < nl > + if ( packsAdapter ! = null ) { < nl > + packsAdapter . selectPack ( newTopPack ) ; < nl > + } < nl > + } < nl > + } < nl > + } ) ; < nl > } < nl > < nl > @ Override < nl > @ @ - 83 , 7 + 103 , 7 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . < nl > int position = displayList . getPosition ( s ) ; < nl > < nl > if ( position ! = - 1 ) { < nl > - recyclerView . scrollToPosition ( position ) ; < nl > + ( ( GridLayoutManager ) recyclerView . getLayoutManager ( ) ) . scrollToPositionWithOffset ( position , 0 ) ; < nl > } else { < nl > displayList . initCenter ( s . getEngineSort ( ) , true ) ; < nl > } < nl > @ @ - 104 , 6 + 124 , 7 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . < nl > @ Override < nl > public void onClick ( View v ) { < nl > if ( s ! = null ) { < nl > + s . setThumb ( sv . getThumb ( ) ) ; < nl > keyboard . onStickerClicked ( s ) ; < nl > } < nl > } < nl > @ @ - 137 , 5 + 158 , 7 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . < nl > } < nl > } < nl > < nl > - < nl > + public void setPacksAdapter ( PacksAdapter packsAdapter ) { < nl > + this . packsAdapter = packsAdapter ; < nl > + } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java < nl > index df452fe . . dc37649 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java < nl > @ @ - 10 , 6 + 10 , 7 @ @ import android . support . v7 . widget . RecyclerView ; < nl > import android . support . v7 . widget . StaggeredGridLayoutManager ; < nl > import android . util . AttributeSet ; < nl > import android . view . View ; < nl > + import android . widget . LinearLayout ; < nl > import android . widget . ListView ; < nl > < nl > import java . util . ArrayList ; < nl > @ @ - 28 , 7 + 29 , 6 @ @ import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > public class StickersView extends RecyclerView { < nl > boolean disableWhileFastScroll = false ; < nl > EmojiKeyboard keyboard ; < nl > - private StickerAdapter adapter ; < nl > < nl > public StickersView ( Context context , EmojiKeyboard keyboard ) { < nl > super ( context ) ; < nl > @ @ - 85 , 15 + 85 , 17 @ @ public class StickersView extends RecyclerView { < nl > GridLayoutManager layoutManager = new GridLayoutManager ( context , Screen . getWidth ( ) / Screen . dp ( 70 ) ) ; < nl > setLayoutManager ( layoutManager ) ; < nl > < nl > + < nl > StickersAdapter stickersAdapter = new StickersAdapter ( messenger ( ) . getStickersDisplayList ( ) , context , this , keyboard ) ; < nl > setAdapter ( stickersAdapter ) ; < nl > < nl > RecyclerView packSwitch = new RecyclerView ( context ) ; < nl > - packSwitch . setLayoutManager ( new LinearLayoutManager ( context , HORIZONTAL , false ) ) ; < nl > - PacksAdapter packsAdapter = new PacksAdapter ( messenger ( ) . getStickersPacksDisplayList ( ) , context , stickersAdapter ) ; < nl > + LinearLayoutManager linearLayoutManager = new LinearLayoutManager ( context , HORIZONTAL , false ) ; < nl > + packSwitch . setLayoutManager ( linearLayoutManager ) ; < nl > + PacksAdapter packsAdapter = new PacksAdapter ( messenger ( ) . getStickersPacksDisplayList ( ) , context , stickersAdapter , keyboard . getStickerIndicatorContainer ( ) ) ; < nl > packSwitch . setAdapter ( packsAdapter ) ; < nl > keyboard . getStickerIndicatorContainer ( ) . removeAllViews ( ) ; < nl > - keyboard . getStickerIndicatorContainer ( ) . addView ( packSwitch ) ; < nl > + keyboard . getStickerIndicatorContainer ( ) . addView ( packSwitch , LinearLayout . LayoutParams . MATCH _ PARENT , LinearLayout . LayoutParams . MATCH _ PARENT ) ; < nl > < nl > } < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java < nl > index 5b3a5ae . . fc4f12d 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java < nl > @ @ - 57 , 7 + 57 , 7 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { < nl > this . stickerCollectionId = collectionId ; < nl > this . stickerId = isHeader ? localCollectionId : apiStickerDescriptor . getId ( ) ; < nl > this . localCollectionId = localCollectionId ; < nl > - if ( isHeader ) { < nl > + if ( apiStickerDescriptor = = null ) { < nl > this . apiImageLocation128 = new ApiImageLocation ( ) ; < nl > this . apiImageLocation256 = new ApiImageLocation ( ) ; < nl > this . apiImageLocation512 = new ApiImageLocation ( ) ; < nl > @ @ - 209 , 6 + 209 , 7 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { < nl > < nl > thumb = values . getBytes ( 7 ) ; < nl > localCollectionId = values . getInt ( 8 ) ; < nl > + Log . d ( " StICKER " , " parse , localCollectionId : " + localCollectionId ) ; < nl > isHeader = values . getBool ( 9 , false ) ; < nl > } < nl > < nl > @ @ - 244 , 8 + 245 , 7 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { < nl > } else { < nl > uid = ( ( long ) stickerId & 0xFFFFFFFFL ) + ( ( ( long ) localCollectionId & 0xFFFFFFFFL ) * 10000000000L ) ; < nl > } < nl > - Log . d ( " STICKER " , " ID : " + stickerId + " Collection ID : " + localCollectionId + " Unique id : " + uid ) ; < nl > - return uid ; < nl > + return uid * - 1 ; < nl > } < nl > < nl > @ Override < nl > @ @ - 259 , 11 + 259 , 6 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { < nl > < nl > @ Override < nl > public boolean equals ( Object o ) { < nl > - return o instanceof Sticker & & ( ( Sticker ) o ) . getId ( ) = = stickerId ; < nl > - } < nl > - < nl > - @ Override < nl > - public boolean equals ( Object o ) { < nl > return o instanceof Sticker & & ( ( Sticker ) o ) . getId ( ) = = getId ( ) ; < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java < nl > index 01a928b . . 7ec49ed 100755 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java < nl > @ @ - 16 , 6 + 16 , 8 @ @ import im . actor . core . api . ApiStickerCollection ; < nl > import im . actor . core . api . ApiStickerDescriptor ; < nl > import im . actor . core . entity . WrapperEntity ; < nl > import im . actor . runtime . bser . BserCreator ; < nl > + import im . actor . runtime . bser . BserValues ; < nl > + import im . actor . runtime . bser . BserWriter ; < nl > import im . actor . runtime . storage . KeyValueItem ; < nl > import im . actor . runtime . storage . ListEngineItem ; < nl > < nl > @ @ - 84 , 7 + 86 , 7 @ @ public class StickersPack extends WrapperEntity < ApiStickerCollection > implements < nl > < nl > @ Override < nl > public long getEngineSort ( ) { < nl > - return id ; < nl > + return localId * - 1 ; < nl > } < nl > < nl > @ Override < nl > @ @ - 102 , 6 + 104 , 10 @ @ public class StickersPack extends WrapperEntity < ApiStickerCollection > implements < nl > return id ; < nl > } < nl > < nl > + public int getLocalId ( ) { < nl > + return localId ; < nl > + } < nl > + < nl > public long getAccessHash ( ) { < nl > return accessHash ; < nl > } < nl > @ @ - 110 , 4 + 116 , 18 @ @ public class StickersPack extends WrapperEntity < ApiStickerCollection > implements < nl > public List < Sticker > getStickers ( ) { < nl > return stickers ; < nl > } < nl > + < nl > + @ Override < nl > + public void parse ( BserValues values ) throws IOException { < nl > + super . parse ( values ) ; < nl > + localId = values . getInt ( 9 , 0 ) ; < nl > + < nl > + } < nl > + < nl > + @ Override < nl > + public void serialize ( BserWriter writer ) throws IOException { < nl > + super . serialize ( writer ) ; < nl > + writer . writeInt ( 9 , localId ) ; < nl > + < nl > + } < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java < nl > index 0a6d72c . . a137ac1 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java < nl > + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java < nl > @ @ - 11 , 9 + 11 , 11 @ @ import im . actor . core . entity . content . internal . Sticker ; < nl > import im . actor . core . entity . content . internal . StickersPack ; < nl > import im . actor . core . modules . ModuleContext ; < nl > import im . actor . core . modules . updates . internal . StickersLoaded ; < nl > + import im . actor . core . util . ModuleActor ; < nl > import im . actor . core . network . RpcCallback ; < nl > import im . actor . core . network . RpcException ; < nl > - import im . actor . core . util . ModuleActor ; < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . storage . KeyValueStorage ; < nl > import im . actor . runtime . storage . ListEngine ; < nl > < nl > public class StickersActor extends ModuleActor { < nl > @ @ - 28 , 7 + 30 , 7 @ @ public class StickersActor extends ModuleActor { < nl > public void preStart ( ) { < nl > this . packs = context ( ) . getStickersModule ( ) . getPacksEngine ( ) ; < nl > this . stickers = context ( ) . getStickersModule ( ) . getStickersEngine ( ) ; < nl > - if ( packs . getCount ( ) = = 0 ) { < nl > + if ( ! context ( ) . getPreferences ( ) . getBool ( " stickers _ loaded " , false ) ) { < nl > loadStickers ( ) ; < nl > } < nl > } < nl > @ @ - 40 , 7 + 42 , 8 @ @ public class StickersActor extends ModuleActor { < nl > for ( ApiStickerCollection collection : updated ) { < nl > add . add ( StickersPack . createLocalStickerPack ( collection , getLocalCollectionId ( collection . getId ( ) ) ) ) ; < nl > if ( collection . getStickers ( ) . size ( ) > 0 ) { < nl > - stickers . addOrUpdateItem ( new Sticker ( collection . getStickers ( ) . get ( 0 ) , collection . getId ( ) , getLocalCollectionId ( collection . getId ( ) ) , collection . getAccessHash ( ) , true ) ) ; < nl > + Sticker stickerHeader = new Sticker ( collection . getStickers ( ) . get ( 0 ) , collection . getId ( ) , getLocalCollectionId ( collection . getId ( ) ) , collection . getAccessHash ( ) , true ) ; < nl > + stickers . addOrUpdateItem ( stickerHeader ) ; < nl > } < nl > StickersPack oldPack = packs . getValue ( collection . getId ( ) ) ; < nl > if ( oldPack ! = null ) { < nl > @ @ - 125 , 6 + 128 , 7 @ @ public class StickersActor extends ModuleActor { < nl > request ( new RequestLoadOwnStickers ( ) , new RpcCallback < ResponseLoadOwnStickers > ( ) { < nl > @ Override < nl > public void onResult ( final ResponseLoadOwnStickers response ) { < nl > + context ( ) . getPreferences ( ) . putBool ( " stickers _ loaded " , true ) ; < nl > updates ( ) . onUpdateReceived ( < nl > new StickersLoaded ( response . getOwnStickers ( ) ) < nl > ) ; < nl > @ @ - 140 , 9 + 144 , 10 @ @ public class StickersActor extends ModuleActor { < nl > public int getLocalCollectionId ( int collectionId ) { < nl > int id = context ( ) . getPreferences ( ) . getInt ( " sticker _ packs _ local _ id _ map " + collectionId , - 1 ) ; < nl > if ( id = = - 1 ) { < nl > + < nl > id = context ( ) . getPreferences ( ) . getInt ( " sticker _ packs _ local _ id _ increment " , 0 ) ; < nl > context ( ) . getPreferences ( ) . putInt ( " sticker _ packs _ local _ id _ map " + collectionId , id ) ; < nl > - context ( ) . getPreferences ( ) . putInt ( " sticker _ packs _ local _ id _ increment " , + + id ) ; < nl > + context ( ) . getPreferences ( ) . putInt ( " sticker _ packs _ local _ id _ increment " , id + 1 ) ; < nl > } < nl > return id ; < nl > }
NEAREST DIFF (one line): diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > index 71da5ab . . 8045a74 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java < nl > @ @ - 1 , 11 + 1 , 7 @ @ < nl > package im . actor ; < nl > < nl > - import java . util . ArrayList ; < nl > - < nl > - import im . actor . auth . SignEmailFragment ; < nl > import im . actor . sdk . ActorSDK ; < nl > import im . actor . sdk . BaseActorSDKDelegate ; < nl > - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; < nl > < nl > / * * < nl > * Created by badgr on 16 . 10 . 2015 . < nl > @ @ - 15 , 13 + 11 , 11 @ @ public class Application extends android . app . Application { < nl > public void onCreate ( ) { < nl > super . onCreate ( ) ; < nl > ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; < nl > + ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; < nl > ActorSDK . sharedActor ( ) . createActor ( this ) ; < nl > } < nl > < nl > private class ActorSDKDelegate extends BaseActorSDKDelegate { < nl > - @ Override < nl > - public BaseAuthFragment getSignFragment ( ) { < nl > - return new SignEmailFragment ( ) ; < nl > - } < nl > + < nl > } < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java < nl > deleted file mode 100644 < nl > index 37ce216 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java < nl > + + + / dev / null < nl > @ @ - 1 , 137 + 0 , 0 @ @ < nl > - package im . actor . auth ; < nl > - < nl > - import android . app . AlertDialog ; < nl > - import android . os . Bundle ; < nl > - import android . telephony . PhoneNumberFormattingTextWatcher ; < nl > - import android . text . Editable ; < nl > - import android . text . TextWatcher ; < nl > - import android . view . KeyEvent ; < nl > - import android . view . LayoutInflater ; < nl > - import android . view . View ; < nl > - import android . view . ViewGroup ; < nl > - import android . view . inputmethod . EditorInfo ; < nl > - import android . widget . EditText ; < nl > - import android . widget . TextView ; < nl > - < nl > - import im . actor . sdk . ActorSDK ; < nl > - import im . actor . sdk . R ; < nl > - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; < nl > - import im . actor . sdk . util . Fonts ; < nl > - import im . actor . sdk . util . KeyboardHelper ; < nl > - < nl > - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; < nl > - < nl > - public class SignEmailFragment extends BaseAuthFragment { < nl > - < nl > - private EditText emailEditText ; < nl > - private KeyboardHelper keyboardHelper ; < nl > - < nl > - @ Override < nl > - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { < nl > - View v = inflater . inflate ( R . layout . fragment _ sign _ email , container , false ) ; < nl > - < nl > - ( ( TextView ) v . findViewById ( R . id . button _ continue _ text ) ) . setTypeface ( Fonts . medium ( ) ) ; < nl > - < nl > - keyboardHelper = new KeyboardHelper ( getActivity ( ) ) ; < nl > - < nl > - initView ( v ) ; < nl > - < nl > - return v ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onResume ( ) { < nl > - super . onResume ( ) ; < nl > - < nl > - / / TODO track email auth open < nl > - / / messenger ( ) . trackAuthPhoneOpen ( ) ; < nl > - < nl > - setTitle ( R . string . auth _ email _ title ) ; < nl > - < nl > - focusEmail ( ) ; < nl > - < nl > - keyboardHelper . setImeVisibility ( emailEditText , true ) ; < nl > - } < nl > - < nl > - private void initView ( View v ) { < nl > - < nl > - emailEditText = ( EditText ) v . findViewById ( R . id . tv _ email ) ; < nl > - emailEditText . addTextChangedListener ( new PhoneNumberFormattingTextWatcher ( ) ) ; < nl > - String email = messenger ( ) . getAuthEmail ( ) ; < nl > - if ( email ! = null & & ! email . isEmpty ( ) ) { < nl > - emailEditText . setText ( email ) ; < nl > - } < nl > - emailEditText . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { < nl > - @ Override < nl > - public boolean onEditorAction ( TextView textView , int id , KeyEvent keyEvent ) { < nl > - if ( id = = EditorInfo . IME _ ACTION _ GO ) { < nl > - requestCode ( ) ; < nl > - return true ; < nl > - } < nl > - return false ; < nl > - } < nl > - } ) ; < nl > - emailEditText . addTextChangedListener ( new TextWatcher ( ) { < nl > - @ Override < nl > - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void onTextChanged ( CharSequence s , int start , int before , int count ) { < nl > - < nl > - } < nl > - < nl > - @ Override < nl > - public void afterTextChanged ( Editable s ) { < nl > - / / TODO trackAuthEmailType < nl > - / / messenger ( ) . trackAuthPhoneType ( emailEditText . getText ( ) . toString ( ) ) ; < nl > - } < nl > - } ) ; < nl > - < nl > - onClick ( v , R . id . button _ continue , new View . OnClickListener ( ) { < nl > - @ Override < nl > - public void onClick ( View view ) { < nl > - requestCode ( ) ; < nl > - } < nl > - } ) ; < nl > - } < nl > - < nl > - private void requestCode ( ) { < nl > - final String ACTION = " Request code email " ; < nl > - < nl > - < nl > - if ( emailEditText . getText ( ) . toString ( ) . trim ( ) . length ( ) = = 0 ) { < nl > - String message = getString ( R . string . auth _ error _ empty _ email ) ; < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( R . string . auth _ error _ empty _ email ) < nl > - . setPositiveButton ( R . string . dialog _ ok , null ) < nl > - . show ( ) ; < nl > - return ; < nl > - } < nl > - < nl > - String rawEmail = emailEditText . getText ( ) . toString ( ) ; < nl > - < nl > - if ( rawEmail . length ( ) = = 0 ) { < nl > - String message = getString ( R . string . auth _ error _ empty _ email ) ; < nl > - new AlertDialog . Builder ( getActivity ( ) ) < nl > - . setMessage ( R . string . auth _ error _ empty _ email ) < nl > - . setPositiveButton ( R . string . dialog _ ok , null ) < nl > - . show ( ) ; < nl > - return ; < nl > - } < nl > - < nl > - setAuthId ( rawEmail ) ; < nl > - < nl > - executeAuth ( ActorSDK . sharedActor ( ) . getMessenger ( ) . requestStartEmailAuth ( rawEmail ) , ACTION ) ; < nl > - } < nl > - < nl > - private void focusEmail ( ) { < nl > - focus ( emailEditText ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public String getHintText ( ) { < nl > - return getString ( R . string . auth _ code _ email _ hint ) . replace ( " { 0 } " , " < b > " + getAuthId ( ) + " < / b > " ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java < nl > deleted file mode 100644 < nl > index c74e30f . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java < nl > + + + / dev / null < nl > @ @ - 1 , 100 + 0 , 0 @ @ < nl > - package im . actor . core ; < nl > - < nl > - import android . content . Context ; < nl > - < nl > - import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > - < nl > - import java . io . IOException ; < nl > - < nl > - import im . actor . messenger . app . core . ActorSDK ; < nl > - import im . actor . runtime . Log ; < nl > - import im . actor . runtime . actors . Actor ; < nl > - < nl > - / * * < nl > - * GCM push implementation for Actor push registration . < nl > - * This actor is used for load GCM token and register it on server . < nl > - * / < nl > - public class AndroidPushActor extends Actor { < nl > - < nl > - private static final String TAG = " im . actor . core . AndroidPushActor " ; < nl > - < nl > - private final AndroidMessenger messenger ; < nl > - private final Context context ; < nl > - private boolean isRegistered ; < nl > - < nl > - public AndroidPushActor ( Context context , AndroidMessenger messenger ) { < nl > - this . messenger = messenger ; < nl > - this . context = context ; < nl > - } < nl > - < nl > - @ Override < nl > - public void preStart ( ) { < nl > - super . preStart ( ) ; < nl > - < nl > - isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; < nl > - < nl > - if ( ! isRegistered ) { < nl > - Log . d ( TAG , " Requesting push token . . . " ) ; < nl > - < nl > - / / TODO : Add backoff < nl > - new Thread ( ) { < nl > - @ Override < nl > - public void run ( ) { < nl > - while ( true ) { < nl > - GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > - try { < nl > - Log . d ( TAG , " Requesting push token iteration . . . " ) ; < nl > - String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getGcmProjectId ( ) ) ; < nl > - if ( regId ! = null ) { < nl > - Log . d ( TAG , " Token loaded " ) ; < nl > - self ( ) . send ( new PushRegistered ( regId ) ) ; < nl > - return ; < nl > - } else { < nl > - Log . d ( TAG , " Unable to load Token " ) ; < nl > - } < nl > - } catch ( IOException e ) { < nl > - e . printStackTrace ( ) ; < nl > - } < nl > - Log . d ( TAG , " Waiting for next attempt " ) ; < nl > - try { < nl > - Thread . sleep ( 1000 ) ; < nl > - } catch ( InterruptedException e1 ) { < nl > - e1 . printStackTrace ( ) ; < nl > - return ; < nl > - } < nl > - } < nl > - } < nl > - } . start ( ) ; < nl > - } else { < nl > - Log . d ( TAG , " Already registered token " ) ; < nl > - } < nl > - } < nl > - < nl > - private void onPushRegistered ( String token ) { < nl > - isRegistered = true ; < nl > - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getGcmProjectId ( ) , token ) ; < nl > - } < nl > - < nl > - @ Override < nl > - public void onReceive ( Object message ) { < nl > - if ( message instanceof PushRegistered ) { < nl > - PushRegistered pushRegistered = ( PushRegistered ) message ; < nl > - onPushRegistered ( pushRegistered . getToken ( ) ) ; < nl > - } else { < nl > - drop ( message ) ; < nl > - } < nl > - } < nl > - < nl > - public static class PushRegistered { < nl > - private String token ; < nl > - < nl > - public PushRegistered ( String token ) { < nl > - this . token = token ; < nl > - } < nl > - < nl > - public String getToken ( ) { < nl > - return token ; < nl > - } < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java < nl > deleted file mode 100644 < nl > index 8dbd762 . . 0000000 < nl > - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java < nl > + + + / dev / null < nl > @ @ - 1 , 37 + 0 , 0 @ @ < nl > - package im . actor . messenger ; < nl > - < nl > - import android . app . Activity ; < nl > - import android . content . Context ; < nl > - import android . content . Intent ; < nl > - import android . os . Bundle ; < nl > - import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > - < nl > - import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > - < nl > - import im . actor . runtime . Log ; < nl > - < nl > - < nl > - import static im . actor . messenger . app . core . ActorSDK . messenger ; < nl > - < nl > - public class PushReceiver extends WakefulBroadcastReceiver { < nl > - < nl > - private static final String TAG = " PushReceiver " ; < nl > - < nl > - @ Override < nl > - public void onReceive ( Context context , Intent intent ) { < nl > - GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; < nl > - Bundle extras = intent . getExtras ( ) ; < nl > - String messageType = gcm . getMessageType ( intent ) ; < nl > - if ( ! extras . isEmpty ( ) ) { < nl > - if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > - if ( extras . containsKey ( " seq " ) ) { < nl > - int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > - messenger ( ) . onPushReceived ( seq ) ; < nl > - setResultCode ( Activity . RESULT _ OK ) ; < nl > - Log . d ( TAG , " Push received " ) ; < nl > - } < nl > - } < nl > - } < nl > - completeWakefulIntent ( intent ) ; < nl > - } < nl > - } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > index 5153388 . . 8c04484 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle < nl > @ @ - 75 , 6 + 75 , 10 @ @ dependencies { < nl > compile ' com . android . support : palette - v7 : 23 . 1 . 0 ' < nl > compile ' com . android . support : recyclerview - v7 : 23 . 1 . 0 ' < nl > compile ' com . android . support : design : 23 . 1 . 0 ' < nl > + < nl > + / / GCM < nl > + compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' < nl > + < nl > } < nl > < nl > / / < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > index 1492015 . . ef17a74 100644 < nl > - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java < nl > @ @ - 18 , 14 + 18 , 20 @ @ import im . actor . core . ApiConfiguration ; < nl > import im . actor . core . ConfigurationBuilder ; < nl > import im . actor . core . DeviceCategory ; < nl > import im . actor . core . PlatformType ; < nl > + import im . actor . runtime . actors . ActorCreator ; < nl > + import im . actor . runtime . actors . Props ; < nl > import im . actor . sdk . core . AndroidNotifications ; < nl > import im . actor . sdk . core . AndroidPhoneBook ; < nl > + import im . actor . sdk . core . AndroidPushActor ; < nl > import im . actor . sdk . intents . ActivityManager ; < nl > import im . actor . sdk . services . KeepAliveService ; < nl > import im . actor . sdk . util . Devices ; < nl > import im . actor . sdk . view . emoji . SmileProcessor ; < nl > import im . actor . runtime . android . AndroidContext ; < nl > < nl > + import static im . actor . runtime . actors . ActorSystem . system ; < nl > + < nl > + < nl > public class ActorSDK { < nl > < nl > < nl > @ @ - 61 , 6 + 67 , 11 @ @ public class ActorSDK { < nl > * / < nl > private String apiAppKey = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; < nl > / * * < nl > + * Push Registration Id < nl > + * / < nl > + private long pushId = 0 ; < nl > + < nl > + / * * < nl > * Is Keeping app alive enabled < nl > * / < nl > private boolean isKeepAliveEnabled = false ; < nl > @ @ - 71 , 7 + 82 , 8 @ @ public class ActorSDK { < nl > / * * < nl > * ActivityManager < nl > * / < nl > - private ActivityManager activityManager = new ActivityManager ( ) ; < nl > + private ActivityManager activityManager = new ActivityManager ( ) ; < nl > + < nl > private ActorSDK ( ) { < nl > endpoints . add ( " tls : / / front1 - mtproto - api - rev2 . actor . im " ) ; < nl > endpoints . add ( " tls : / / front2 - mtproto - api - rev2 . actor . im " ) ; < nl > @ @ - 91 , 7 + 103 , 7 @ @ public class ActorSDK { < nl > / / SDK Initialization < nl > / / < nl > < nl > - public void createActor ( Application application ) { < nl > + public void createActor ( final Application application ) { < nl > < nl > this . application = application ; < nl > < nl > @ @ - 135 , 6 + 147 , 19 @ @ public class ActorSDK { < nl > AlarmManager alarm = ( AlarmManager ) application . getSystemService ( Context . ALARM _ SERVICE ) ; < nl > alarm . setRepeating ( AlarmManager . RTC , System . currentTimeMillis ( ) , 30 * 1000 , pendingIntent ) ; < nl > } < nl > + < nl > + / / < nl > + / / GCM < nl > + / / < nl > + if ( pushId ! = 0 ) { < nl > + system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { < nl > + @ Override < nl > + public AndroidPushActor create ( ) { < nl > + return new AndroidPushActor ( application , messenger ) ; < nl > + } < nl > + } ) , " actor / android / push " ) ; < nl > + } < nl > + < nl > } < nl > < nl > public void startMessagingApp ( Activity context ) { < nl > @ @ - 240 , 6 + 265 , 22 @ @ public class ActorSDK { < nl > this . isKeepAliveEnabled = isKeepAliveEnabled ; < nl > } < nl > < nl > + / * * < nl > + * Getting Push Registration Id < nl > + * < nl > + * @ return pushId < nl > + * / < nl > + public long getPushId ( ) { < nl > + return pushId ; < nl > + } < nl > + < nl > + / * * < nl > + * Setting Push Registration Id < nl > + * / < nl > + public void setPushId ( long pushId ) { < nl > + this . pushId = pushId ; < nl > + } < nl > + < nl > public ActorSDKDelegate getDelegate ( ) { < nl > return delegate ; < nl > } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > new file mode 100644 < nl > index 0000000 . . d65a7a8 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java < nl > @ @ - 0 , 0 + 1 , 101 @ @ < nl > + package im . actor . sdk . core ; < nl > + < nl > + import android . content . Context ; < nl > + < nl > + import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > + < nl > + import java . io . IOException ; < nl > + < nl > + import im . actor . core . AndroidMessenger ; < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . runtime . actors . Actor ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + < nl > + / * * < nl > + * GCM push implementation for Actor push registration . < nl > + * This actor is used for load GCM token and register it on server . < nl > + * / < nl > + public class AndroidPushActor extends Actor { < nl > + < nl > + private static final String TAG = " im . actor . core . AndroidPushActor " ; < nl > + < nl > + private final AndroidMessenger messenger ; < nl > + private final Context context ; < nl > + private boolean isRegistered ; < nl > + < nl > + public AndroidPushActor ( Context context , AndroidMessenger messenger ) { < nl > + this . messenger = messenger ; < nl > + this . context = context ; < nl > + } < nl > + < nl > + @ Override < nl > + public void preStart ( ) { < nl > + super . preStart ( ) ; < nl > + < nl > + isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; < nl > + < nl > + if ( ! isRegistered ) { < nl > + Log . d ( TAG , " Requesting push token . . . " ) ; < nl > + < nl > + / / TODO : Add backoff < nl > + new Thread ( ) { < nl > + @ Override < nl > + public void run ( ) { < nl > + while ( true ) { < nl > + GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; < nl > + try { < nl > + Log . d ( TAG , " Requesting push token iteration . . . " ) ; < nl > + String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; < nl > + if ( regId ! = null ) { < nl > + Log . d ( TAG , " Token loaded " ) ; < nl > + self ( ) . send ( new PushRegistered ( regId ) ) ; < nl > + return ; < nl > + } else { < nl > + Log . d ( TAG , " Unable to load Token " ) ; < nl > + } < nl > + } catch ( IOException e ) { < nl > + e . printStackTrace ( ) ; < nl > + } < nl > + Log . d ( TAG , " Waiting for next attempt " ) ; < nl > + try { < nl > + Thread . sleep ( 1000 ) ; < nl > + } catch ( InterruptedException e1 ) { < nl > + e1 . printStackTrace ( ) ; < nl > + return ; < nl > + } < nl > + } < nl > + } < nl > + } . start ( ) ; < nl > + } else { < nl > + Log . d ( TAG , " Already registered token " ) ; < nl > + } < nl > + } < nl > + < nl > + private void onPushRegistered ( String token ) { < nl > + isRegistered = true ; < nl > + messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; < nl > + messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; < nl > + } < nl > + < nl > + @ Override < nl > + public void onReceive ( Object message ) { < nl > + if ( message instanceof PushRegistered ) { < nl > + PushRegistered pushRegistered = ( PushRegistered ) message ; < nl > + onPushRegistered ( pushRegistered . getToken ( ) ) ; < nl > + } else { < nl > + drop ( message ) ; < nl > + } < nl > + } < nl > + < nl > + public static class PushRegistered { < nl > + private String token ; < nl > + < nl > + public PushRegistered ( String token ) { < nl > + this . token = token ; < nl > + } < nl > + < nl > + public String getToken ( ) { < nl > + return token ; < nl > + } < nl > + } < nl > + } < nl > diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java < nl > new file mode 100644 < nl > index 0000000 . . 425cfb1 < nl > - - - / dev / null < nl > + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java < nl > @ @ - 0 , 0 + 1 , 35 @ @ < nl > + package im . actor . sdk . core ; < nl > + < nl > + import android . app . Activity ; < nl > + import android . content . Context ; < nl > + import android . content . Intent ; < nl > + import android . os . Bundle ; < nl > + import android . support . v4 . content . WakefulBroadcastReceiver ; < nl > + < nl > + import com . google . android . gms . gcm . GoogleCloudMessaging ; < nl > + < nl > + import im . actor . runtime . Log ; < nl > + import im . actor . sdk . ActorSDK ; < nl > + < nl > + public class PushReceiver extends WakefulBroadcastReceiver { < nl > + < nl > + private static final String TAG = " PushReceiver " ; < nl > + < nl > + @ Override < nl > + public void onReceive ( Context context , Intent intent ) { < nl > + GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; < nl > + Bundle extras = intent . getExtras ( ) ; < nl > + String messageType = gcm . getMessageType ( intent ) ; < nl > + if ( ! extras . isEmpty ( ) ) { < nl > + if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { < nl > + if ( extras . containsKey ( " seq " ) ) { < nl > + int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; < nl > + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; < nl > + setResultCode ( Activity . RESULT _ OK ) ; < nl > + Log . d ( TAG , " Push received " ) ; < nl > + } < nl > + } < nl > + } < nl > + completeWakefulIntent ( intent ) ; < nl > + } < nl > + }

TEST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java 
 index 9ab03d7 . . 5bfcdb1 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / PacksAdapter . java 
 @ @ - 1 , 15 + 1 , 18 @ @ 
 package im . actor . sdk . view . emoji . stickers ; 
 
 import android . content . Context ; 
 + import android . graphics . Color ; 
 import android . support . v7 . widget . GridLayoutManager ; 
 import android . view . Gravity ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 import android . widget . FrameLayout ; 
 + import android . widget . LinearLayout ; 
 
 import im . actor . core . api . ApiStickerDescriptor ; 
 import im . actor . core . entity . content . internal . Sticker ; 
 import im . actor . core . entity . content . internal . StickersPack ; 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . android . view . BindedListAdapter ; 
 import im . actor . runtime . android . view . BindedViewHolder ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 @ @ - 21 , 12 + 24 , 15 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S 
 
 private Context context ; 
 private StickersAdapter stickersAdapter ; 
 + LinearLayout packsSwitchContainer ; 
 + int selectedPostion = - 1 ; 
 
 - public PacksAdapter ( BindedDisplayList < StickersPack > displayList , Context context , StickersAdapter stickersAdapter ) { 
 + public PacksAdapter ( BindedDisplayList < StickersPack > displayList , Context context , StickersAdapter stickersAdapter , LinearLayout stickerIndicatorContainer ) { 
 super ( displayList ) ; 
 + this . packsSwitchContainer = stickerIndicatorContainer ; 
 this . context = context ; 
 this . stickersAdapter = stickersAdapter ; 
 - 
 + stickersAdapter . setPacksAdapter ( this ) ; 
 } 
 
 @ Override 
 @ @ - 37 , 7 + 43 , 7 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S 
 
 @ Override 
 public void onBindViewHolder ( StickerHolder holder , int index , StickersPack item ) { 
 - holder . bind ( item ) ; 
 + holder . bind ( item , index ) ; 
 } 
 
 @ Override 
 @ @ - 50 , 30 + 56 , 39 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S 
 private StickerView sv ; 
 private StickersPack sp ; 
 private Sticker s ; 
 + private int position ; 
 + FrameLayout fl ; 
 
 public StickerHolder ( Context context , FrameLayout fl ) { 
 super ( fl ) ; 
 + this . fl = fl ; 
 sv = new StickerView ( context ) ; 
 int padding = Screen . dp ( 2 ) ; 
 sv . setPadding ( padding , padding , padding , padding ) ; 
 - FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( Screen . dp ( 20 ) , Screen . dp ( 20 ) , Gravity . CENTER ) ; 
 + FrameLayout . LayoutParams params = new FrameLayout . LayoutParams ( packsSwitchContainer . getHeight ( ) , packsSwitchContainer . getHeight ( ) , Gravity . CENTER ) ; 
 fl . addView ( sv , params ) ; 
 fl . setOnClickListener ( new View . OnClickListener ( ) { 
 @ Override 
 public void onClick ( View v ) { 
 if ( sp ! = null ) { 
 - stickersAdapter . scrollToSticker ( new Sticker ( null , 0 , s . getLocalCollectionId ( ) , 0 , true ) ) ; 
 + selectedPostion = position ; 
 + stickersAdapter . scrollToSticker ( new Sticker ( null , 0 , sp . getLocalId ( ) , 0 , true ) ) ; 
 } 
 } 
 } ) ; 
 } 
 
 
 - public void bind ( StickersPack sp ) { 
 + public void bind ( StickersPack sp , int position ) { 
 + this . position = position ; 
 this . sp = sp ; 
 s = sp . getStickers ( ) . get ( 0 ) ; 
 sv . bind ( s , StickerView . STICKER _ SMALL ) ; 
 - 
 + if ( selectedPostion = = position ) { 
 + fl . setBackgroundColor ( Color . LTGRAY ) ; 
 + } else { 
 + fl . setBackgroundColor ( Color . TRANSPARENT ) ; 
 + } 
 } 
 
 public void unbind ( ) { 
 @ @ - 83 , 5 + 98 , 16 @ @ public class PacksAdapter extends BindedListAdapter < StickersPack , PacksAdapter . S 
 
 } 
 
 + public void selectPack ( int localPackId ) { 
 + for ( int i = 0 ; i < getItemCount ( ) ; i + + ) { 
 + StickersPack p = getItem ( i ) ; 
 + if ( p . getLocalId ( ) = = localPackId ) { 
 + selectedPostion = i ; 
 + notifyDataSetChanged ( ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + 
 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickerAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickerAdapter . java 
 deleted file mode 100644 
 index edbd349 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickerAdapter . java 
 + + + / dev / null 
 @ @ - 1 , 267 + 0 , 0 @ @ 
 - package im . actor . sdk . view . emoji . stickers ; 
 - 
 - import android . content . Context ; 
 - import android . graphics . Color ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . widget . AbsListView ; 
 - import android . widget . LinearLayout ; 
 - 
 - import java . util . ArrayList ; 
 - import java . util . HashMap ; 
 - 
 - import im . actor . core . entity . content . internal . Sticker ; 
 - import im . actor . core . entity . content . internal . StickersPack ; 
 - import im . actor . core . viewmodel . StickerPackVM ; 
 - import im . actor . runtime . mvvm . MVVMCollection ; 
 - import im . actor . runtime . mvvm . Value ; 
 - import im . actor . runtime . mvvm . ValueChangedListener ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . activity . BaseActivity ; 
 - import im . actor . sdk . util . Screen ; 
 - import im . actor . sdk . view . adapters . HolderAdapter ; 
 - import im . actor . sdk . view . adapters . ViewHolder ; 
 - import im . actor . sdk . view . emoji . keyboard . emoji . EmojiKeyboard ; 
 - 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - 
 - class StickerAdapter extends HolderAdapter < StickerLine > { 
 - private static final int TAG _ KEY = R . id . sticker _ pager ; 
 - MVVMCollection < StickersPack , StickerPackVM > packs ; 
 - StickerLine [ ] stickerLines ; 
 - EmojiKeyboard keyboard ; 
 - private int stickerInLine ; 
 - private final int STICKER _ SIZE = Screen . dp ( 80 ) ; 
 - private final int STICKER _ PADDING = Screen . dp ( 5 ) ; 
 - private int leftPadding ; 
 - / / TODO limit cache 
 - static HashMap < Long , StickerView > stickersCache ; 
 - private int totalLines = 0 ; 
 - ScrollTo scrollTo ; 
 - private LinearLayout stickerIndicatorContainer ; 
 - private Object position ; 
 - private Context context ; 
 - private final int padding ; 
 - private final HashMap < Integer , Integer > packFirstLineMap ; 
 - private final LinearLayout . LayoutParams stickerSwitchLp ; 
 - 
 - public StickerAdapter ( Context context , EmojiKeyboard keyboard , final ScrollTo scrollTo ) { 
 - super ( context ) ; 
 - this . context = context ; 
 - this . keyboard = keyboard ; 
 - if ( stickersCache = = null ) { 
 - stickersCache = new HashMap < Long , StickerView > ( ) ; 
 - } 
 - this . scrollTo = scrollTo ; 
 - 
 - / / Build sticker lines 
 - stickerIndicatorContainer = keyboard . getStickerIndicatorContainer ( ) ; 
 - stickerIndicatorContainer . setTag ( TAG _ KEY , 0 ) ; 
 - 
 - stickerInLine = ( Screen . getWidth ( ) / STICKER _ SIZE ) ; 
 - leftPadding = ( Screen . getWidth ( ) - ( stickerInLine * STICKER _ SIZE ) ) / 2 ; 
 - 
 - packFirstLineMap = new HashMap < Integer , Integer > ( ) ; 
 - 
 - stickerSwitchLp = new LinearLayout . LayoutParams ( Screen . dp ( 48 ) , Screen . dp ( 48 ) ) ; 
 - padding = Screen . dp ( 8 ) ; 
 - 
 - / / packs = messenger ( ) . getOwnStickerPacks ( ) ; 
 - / / packs . addCallback ( new MVVMCollection . OnChangedListener ( ) { 
 - / / @ Override 
 - / / public void onChanged ( ) { 
 - / / buildStickerLines ( scrollTo ) ; 
 - / / notifyDataSetChanged ( ) ; 
 - / / 
 - / / } 
 - / / } ) ; 
 - 
 - } 
 - 
 - private void buildStickerLines ( final ScrollTo scrollTo ) { 
 - 
 - / / BUILD SWITCH 
 - keyboard . getStickerIndicatorContainer ( ) . removeAllViews ( ) ; 
 - 
 - / / Add pack switch buttons 
 - int packCount = 0 ; 
 - totalLines = 0 ; 
 - / / for ( final StickerPackVM pack : packs . getValuesMap ( ) . values ( ) ) { 
 - / / ( ( BaseActivity ) context ) . bind ( pack . getStickers ( ) , new ValueChangedListener < ArrayList < Sticker > > ( ) { 
 - / / @ Override 
 - / / public void onChanged ( ArrayList < Sticker > val , Value < ArrayList < Sticker > > valueModel ) { 
 - / / buildStickerLines ( scrollTo ) ; 
 - / / notifyDataSetChanged ( ) ; 
 - / / } 
 - / / } , false ) ; 
 - / / if ( pack . getStickers ( ) . get ( ) . size ( ) < 1 ) { 
 - / / continue ; 
 - / / } 
 - / / / / Count lines 
 - / / int linesInPack = ( int ) Math . ceil ( ( double ) pack . getStickers ( ) . get ( ) . size ( ) / stickerInLine ) ; 
 - / / totalLines + = linesInPack ; 
 - / / 
 - / / / / Build packs buttons 
 - / / final StickerView sv = new StickerView ( context ) ; 
 - / / 
 - / / sv . bind ( pack . getStickers ( ) . get ( ) . get ( 0 ) , StickerView . STICKER _ SMALL ) ; 
 - / / sv . setPadding ( padding , padding , padding , padding ) ; 
 - / / sv . setOnClickListener ( new View . OnClickListener ( ) { 
 - / / @ Override 
 - / / public void onClick ( View v ) { 
 - / / scrollTo . requestScroll ( packFirstLineMap . get ( pack . getId ( ) ) ) ; 
 - / / selectCurrentPack ( ( Integer ) sv . getTag ( TAG _ KEY ) ) ; 
 - / / } 
 - / / } ) ; 
 - / / sv . setTag ( TAG _ KEY , packCount ) ; 
 - / / keyboard . getStickerIndicatorContainer ( ) . addView ( sv , stickerSwitchLp ) ; 
 - / / packCount + + ; 
 - / / } 
 - if ( stickerIndicatorContainer . getChildAt ( 0 ) ! = null ) { 
 - stickerIndicatorContainer . getChildAt ( 0 ) . setBackgroundColor ( context . getResources ( ) . getColor ( R . color . selector _ selected ) ) ; 
 - } 
 - 
 - / / BUILD LINES 
 - / / All lines stored here 
 - stickerLines = new StickerLine [ totalLines ] ; 
 - 
 - 
 - / / Fill lines with packs stickers 
 - int allLinesCount = 0 ; 
 - int linePackCount = 0 ; 
 - / / for ( StickerPackVM pack : packs . getValuesMap ( ) . values ( ) ) { 
 - / / if ( pack . getStickers ( ) . get ( ) . size ( ) < 1 ) { 
 - / / continue ; 
 - / / } 
 - / / int stickerInPack = 0 ; 
 - / / int linesInPack = ( int ) Math . ceil ( ( double ) pack . getStickers ( ) . get ( ) . size ( ) / stickerInLine ) ; 
 - / / 
 - / / / / Loop pack lines 
 - / / for ( int lineInPackCount = 0 ; lineInPackCount < linesInPack ; lineInPackCount + + , allLinesCount + + ) { 
 - / / StickerLine line = new StickerLine ( new Sticker [ stickerInLine ] , linePackCount ) ; 
 - / / / / Remember pack first line position 
 - / / if ( lineInPackCount = = 0 ) { 
 - / / packFirstLineMap . put ( pack . getId ( ) , allLinesCount ) ; 
 - / / } 
 - / / / / Fill line with stickers 
 - / / for ( int stickerInLine = 0 ; stickerInLine < this . stickerInLine ; stickerInLine + + , stickerInPack + + ) { 
 - / / if ( stickerInPack < pack . getStickers ( ) . get ( ) . size ( ) ) { 
 - / / line . getLine ( ) [ stickerInLine ] = pack . getStickers ( ) . get ( ) . get ( stickerInPack ) ; 
 - / / } else { 
 - / / break ; 
 - / / } 
 - / / } 
 - / / stickerLines [ allLinesCount ] = line ; 
 - / / } 
 - / / linePackCount + + ; 
 - / / } 
 - } 
 - 
 - @ Override 
 - public int getCount ( ) { 
 - return totalLines ; 
 - } 
 - 
 - @ Override 
 - public StickerLine getItem ( int position ) { 
 - return stickerLines [ position ] ; 
 - } 
 - 
 - @ Override 
 - public long getItemId ( int position ) { 
 - return 0 ; 
 - } 
 - 
 - @ Override 
 - protected ViewHolder < StickerLine > createHolder ( StickerLine obj ) { 
 - return new StickerLineViewHolder ( ) ; 
 - } 
 - 
 - 
 - class StickerLineViewHolder extends ViewHolder < StickerLine > { 
 - LinearLayout ll ; 
 - LinearLayout . LayoutParams stikerlp = new LinearLayout . LayoutParams ( STICKER _ SIZE , STICKER _ SIZE ) ; 
 - 
 - 
 - @ Override 
 - public View init ( StickerLine data , ViewGroup viewGroup , Context context ) { 
 - ll = new LinearLayout ( context ) ; 
 - ll . setLayoutParams ( new AbsListView . LayoutParams ( ViewGroup . LayoutParams . MATCH _ PARENT , STICKER _ SIZE ) ) ; 
 - ll . setPadding ( leftPadding , 0 , 0 , 0 ) ; 
 - ll . setOrientation ( LinearLayout . HORIZONTAL ) ; 
 - return ll ; 
 - } 
 - 
 - @ Override 
 - public void bind ( StickerLine data , int position , Context context ) { 
 - ll . removeAllViews ( ) ; 
 - ll . setTag ( TAG _ KEY , data . getPackCount ( ) ) ; 
 - for ( final Sticker s : data . getLine ( ) ) { 
 - StickerView sv ; 
 - if ( s ! = null & & s . getFileReference128 ( ) ! = null ) { 
 - 
 - sv = stickersCache . get ( s . getFileReference128 ( ) . getFileId ( ) ) ; 
 - if ( sv = = null ) { 
 - sv = new StickerView ( context ) ; 
 - sv . setPadding ( STICKER _ PADDING , STICKER _ PADDING , STICKER _ PADDING , STICKER _ PADDING ) ; 
 - sv . bind ( s , StickerView . STICKER _ SMALL ) ; 
 - stickersCache . put ( s . getFileReference128 ( ) . getFileId ( ) , sv ) ; 
 - 
 - } else if ( sv . isLoaded ( ) ) { 
 - sv . shortenFade ( ) ; 
 - } 
 - 
 - if ( sv . getParent ( ) ! = null ) { 
 - ( ( LinearLayout ) sv . getParent ( ) ) . removeView ( sv ) ; 
 - } 
 - 
 - final StickerView finalSv = sv ; 
 - sv . setOnClickListener ( new View . OnClickListener ( ) { 
 - @ Override 
 - public void onClick ( View v ) { 
 - if ( s . getThumb ( ) = = null & & finalSv . isLoaded ( ) ) { 
 - s . setThumb ( finalSv . getThumb ( ) ) ; 
 - } 
 - keyboard . onStickerClicked ( s ) ; 
 - } 
 - } ) ; 
 - ll . addView ( sv , stikerlp ) ; 
 - } 
 - } 
 - 
 - 
 - } 
 - 
 - @ Override 
 - public void unbind ( ) { 
 - super . unbind ( ) ; 
 - ll . removeAllViews ( ) ; 
 - } 
 - } 
 - 
 - public void onScroll ( View view ) { 
 - if ( view ! = null ) { 
 - if ( stickerIndicatorContainer . getTag ( TAG _ KEY ) ! = null & & ! stickerIndicatorContainer . getTag ( TAG _ KEY ) . equals ( view . getTag ( TAG _ KEY ) ) ) { 
 - stickerIndicatorContainer . setTag ( TAG _ KEY , view . getTag ( TAG _ KEY ) ) ; 
 - position = view . getTag ( TAG _ KEY ) ; 
 - selectCurrentPack ( ( Integer ) position ) ; 
 - } 
 - } 
 - } 
 - 
 - private void selectCurrentPack ( int position ) { 
 - for ( int i = 0 ; i < stickerIndicatorContainer . getChildCount ( ) ; i + + ) { 
 - if ( stickerIndicatorContainer . getChildAt ( i ) ! = null ) { 
 - stickerIndicatorContainer . getChildAt ( i ) . setBackgroundColor ( Color . TRANSPARENT ) ; 
 - } 
 - } 
 - if ( stickerIndicatorContainer . getChildAt ( position ) ! = null ) { 
 - stickerIndicatorContainer . getChildAt ( position ) . setBackgroundColor ( stickerIndicatorContainer . getContext ( ) . getResources ( ) . getColor ( R . color . selector _ selected ) ) ; 
 - } 
 - } 
 - 
 - public interface ScrollTo { 
 - void requestScroll ( int position ) ; 
 - } 
 - 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java 
 index add9950 . . 1fc5880 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersAdapter . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import android . view . ViewGroup ; 
 import android . widget . FrameLayout ; 
 
 import im . actor . core . entity . content . internal . Sticker ; 
 + import im . actor . runtime . Log ; 
 import im . actor . runtime . android . view . BindedListAdapter ; 
 import im . actor . runtime . android . view . BindedViewHolder ; 
 import im . actor . runtime . generic . mvvm . BindedDisplayList ; 
 @ @ - 22 , 6 + 23 , 8 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . 
 private EmojiKeyboard keyboard ; 
 RecyclerView recyclerView ; 
 BindedDisplayList < Sticker > displayList ; 
 + int topPack = - 1 ; 
 + PacksAdapter packsAdapter ; 
 
 public StickersAdapter ( BindedDisplayList < Sticker > displayList , Context context , final RecyclerView recyclerView , EmojiKeyboard keyboard ) { 
 super ( displayList ) ; 
 @ @ - 40 , 6 + 43 , 23 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . 
 } 
 } 
 } ) ; 
 + recyclerView . addOnScrollListener ( new RecyclerView . OnScrollListener ( ) { 
 + Sticker s ; 
 + 
 + @ Override 
 + public void onScrolled ( RecyclerView recyclerView , int dx , int dy ) { 
 + super . onScrolled ( recyclerView , dx , dy ) ; 
 + int firstVisiblePosition = layoutManager . findFirstCompletelyVisibleItemPosition ( ) ; 
 + s = getItem ( firstVisiblePosition ) ; 
 + int newTopPack = s . getLocalCollectionId ( ) ; 
 + if ( newTopPack ! = topPack ) { 
 + topPack = newTopPack ; 
 + if ( packsAdapter ! = null ) { 
 + packsAdapter . selectPack ( newTopPack ) ; 
 + } 
 + } 
 + } 
 + } ) ; 
 } 
 
 @ Override 
 @ @ - 83 , 7 + 103 , 7 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . 
 int position = displayList . getPosition ( s ) ; 
 
 if ( position ! = - 1 ) { 
 - recyclerView . scrollToPosition ( position ) ; 
 + ( ( GridLayoutManager ) recyclerView . getLayoutManager ( ) ) . scrollToPositionWithOffset ( position , 0 ) ; 
 } else { 
 displayList . initCenter ( s . getEngineSort ( ) , true ) ; 
 } 
 @ @ - 104 , 6 + 124 , 7 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . 
 @ Override 
 public void onClick ( View v ) { 
 if ( s ! = null ) { 
 + s . setThumb ( sv . getThumb ( ) ) ; 
 keyboard . onStickerClicked ( s ) ; 
 } 
 } 
 @ @ - 137 , 5 + 158 , 7 @ @ public class StickersAdapter extends BindedListAdapter < Sticker , StickersAdapter . 
 } 
 } 
 
 - 
 + public void setPacksAdapter ( PacksAdapter packsAdapter ) { 
 + this . packsAdapter = packsAdapter ; 
 + } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java 
 index df452fe . . dc37649 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / view / emoji / stickers / StickersView . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import android . support . v7 . widget . RecyclerView ; 
 import android . support . v7 . widget . StaggeredGridLayoutManager ; 
 import android . util . AttributeSet ; 
 import android . view . View ; 
 + import android . widget . LinearLayout ; 
 import android . widget . ListView ; 
 
 import java . util . ArrayList ; 
 @ @ - 28 , 7 + 29 , 6 @ @ import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 public class StickersView extends RecyclerView { 
 boolean disableWhileFastScroll = false ; 
 EmojiKeyboard keyboard ; 
 - private StickerAdapter adapter ; 
 
 public StickersView ( Context context , EmojiKeyboard keyboard ) { 
 super ( context ) ; 
 @ @ - 85 , 15 + 85 , 17 @ @ public class StickersView extends RecyclerView { 
 GridLayoutManager layoutManager = new GridLayoutManager ( context , Screen . getWidth ( ) / Screen . dp ( 70 ) ) ; 
 setLayoutManager ( layoutManager ) ; 
 
 + 
 StickersAdapter stickersAdapter = new StickersAdapter ( messenger ( ) . getStickersDisplayList ( ) , context , this , keyboard ) ; 
 setAdapter ( stickersAdapter ) ; 
 
 RecyclerView packSwitch = new RecyclerView ( context ) ; 
 - packSwitch . setLayoutManager ( new LinearLayoutManager ( context , HORIZONTAL , false ) ) ; 
 - PacksAdapter packsAdapter = new PacksAdapter ( messenger ( ) . getStickersPacksDisplayList ( ) , context , stickersAdapter ) ; 
 + LinearLayoutManager linearLayoutManager = new LinearLayoutManager ( context , HORIZONTAL , false ) ; 
 + packSwitch . setLayoutManager ( linearLayoutManager ) ; 
 + PacksAdapter packsAdapter = new PacksAdapter ( messenger ( ) . getStickersPacksDisplayList ( ) , context , stickersAdapter , keyboard . getStickerIndicatorContainer ( ) ) ; 
 packSwitch . setAdapter ( packsAdapter ) ; 
 keyboard . getStickerIndicatorContainer ( ) . removeAllViews ( ) ; 
 - keyboard . getStickerIndicatorContainer ( ) . addView ( packSwitch ) ; 
 + keyboard . getStickerIndicatorContainer ( ) . addView ( packSwitch , LinearLayout . LayoutParams . MATCH _ PARENT , LinearLayout . LayoutParams . MATCH _ PARENT ) ; 
 
 } 
 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java 
 index 5b3a5ae . . fc4f12d 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / Sticker . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { 
 this . stickerCollectionId = collectionId ; 
 this . stickerId = isHeader ? localCollectionId : apiStickerDescriptor . getId ( ) ; 
 this . localCollectionId = localCollectionId ; 
 - if ( isHeader ) { 
 + if ( apiStickerDescriptor = = null ) { 
 this . apiImageLocation128 = new ApiImageLocation ( ) ; 
 this . apiImageLocation256 = new ApiImageLocation ( ) ; 
 this . apiImageLocation512 = new ApiImageLocation ( ) ; 
 @ @ - 209 , 6 + 209 , 7 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { 
 
 thumb = values . getBytes ( 7 ) ; 
 localCollectionId = values . getInt ( 8 ) ; 
 + Log . d ( " StICKER " , " parse , localCollectionId : " + localCollectionId ) ; 
 isHeader = values . getBool ( 9 , false ) ; 
 } 
 
 @ @ - 244 , 8 + 245 , 7 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { 
 } else { 
 uid = ( ( long ) stickerId & 0xFFFFFFFFL ) + ( ( ( long ) localCollectionId & 0xFFFFFFFFL ) * 10000000000L ) ; 
 } 
 - Log . d ( " STICKER " , " ID : " + stickerId + " Collection ID : " + localCollectionId + " Unique id : " + uid ) ; 
 - return uid ; 
 + return uid * - 1 ; 
 } 
 
 @ Override 
 @ @ - 259 , 11 + 259 , 6 @ @ public class Sticker extends AbsLocalContent implements ListEngineItem { 
 
 @ Override 
 public boolean equals ( Object o ) { 
 - return o instanceof Sticker & & ( ( Sticker ) o ) . getId ( ) = = stickerId ; 
 - } 
 - 
 - @ Override 
 - public boolean equals ( Object o ) { 
 return o instanceof Sticker & & ( ( Sticker ) o ) . getId ( ) = = getId ( ) ; 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java 
 index 01a928b . . 7ec49ed 100755 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / entity / content / internal / StickersPack . java 
 @ @ - 16 , 6 + 16 , 8 @ @ import im . actor . core . api . ApiStickerCollection ; 
 import im . actor . core . api . ApiStickerDescriptor ; 
 import im . actor . core . entity . WrapperEntity ; 
 import im . actor . runtime . bser . BserCreator ; 
 + import im . actor . runtime . bser . BserValues ; 
 + import im . actor . runtime . bser . BserWriter ; 
 import im . actor . runtime . storage . KeyValueItem ; 
 import im . actor . runtime . storage . ListEngineItem ; 
 
 @ @ - 84 , 7 + 86 , 7 @ @ public class StickersPack extends WrapperEntity < ApiStickerCollection > implements 
 
 @ Override 
 public long getEngineSort ( ) { 
 - return id ; 
 + return localId * - 1 ; 
 } 
 
 @ Override 
 @ @ - 102 , 6 + 104 , 10 @ @ public class StickersPack extends WrapperEntity < ApiStickerCollection > implements 
 return id ; 
 } 
 
 + public int getLocalId ( ) { 
 + return localId ; 
 + } 
 + 
 public long getAccessHash ( ) { 
 return accessHash ; 
 } 
 @ @ - 110 , 4 + 116 , 18 @ @ public class StickersPack extends WrapperEntity < ApiStickerCollection > implements 
 public List < Sticker > getStickers ( ) { 
 return stickers ; 
 } 
 + 
 + @ Override 
 + public void parse ( BserValues values ) throws IOException { 
 + super . parse ( values ) ; 
 + localId = values . getInt ( 9 , 0 ) ; 
 + 
 + } 
 + 
 + @ Override 
 + public void serialize ( BserWriter writer ) throws IOException { 
 + super . serialize ( writer ) ; 
 + writer . writeInt ( 9 , localId ) ; 
 + 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java 
 index 0a6d72c . . a137ac1 100644 
 - - - a / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java 
 + + + b / actor - sdk / sdk - core / core / core - shared / src / main / java / im / actor / core / modules / internal / messages / StickersActor . java 
 @ @ - 11 , 9 + 11 , 11 @ @ import im . actor . core . entity . content . internal . Sticker ; 
 import im . actor . core . entity . content . internal . StickersPack ; 
 import im . actor . core . modules . ModuleContext ; 
 import im . actor . core . modules . updates . internal . StickersLoaded ; 
 + import im . actor . core . util . ModuleActor ; 
 import im . actor . core . network . RpcCallback ; 
 import im . actor . core . network . RpcException ; 
 - import im . actor . core . util . ModuleActor ; 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . storage . KeyValueStorage ; 
 import im . actor . runtime . storage . ListEngine ; 
 
 public class StickersActor extends ModuleActor { 
 @ @ - 28 , 7 + 30 , 7 @ @ public class StickersActor extends ModuleActor { 
 public void preStart ( ) { 
 this . packs = context ( ) . getStickersModule ( ) . getPacksEngine ( ) ; 
 this . stickers = context ( ) . getStickersModule ( ) . getStickersEngine ( ) ; 
 - if ( packs . getCount ( ) = = 0 ) { 
 + if ( ! context ( ) . getPreferences ( ) . getBool ( " stickers _ loaded " , false ) ) { 
 loadStickers ( ) ; 
 } 
 } 
 @ @ - 40 , 7 + 42 , 8 @ @ public class StickersActor extends ModuleActor { 
 for ( ApiStickerCollection collection : updated ) { 
 add . add ( StickersPack . createLocalStickerPack ( collection , getLocalCollectionId ( collection . getId ( ) ) ) ) ; 
 if ( collection . getStickers ( ) . size ( ) > 0 ) { 
 - stickers . addOrUpdateItem ( new Sticker ( collection . getStickers ( ) . get ( 0 ) , collection . getId ( ) , getLocalCollectionId ( collection . getId ( ) ) , collection . getAccessHash ( ) , true ) ) ; 
 + Sticker stickerHeader = new Sticker ( collection . getStickers ( ) . get ( 0 ) , collection . getId ( ) , getLocalCollectionId ( collection . getId ( ) ) , collection . getAccessHash ( ) , true ) ; 
 + stickers . addOrUpdateItem ( stickerHeader ) ; 
 } 
 StickersPack oldPack = packs . getValue ( collection . getId ( ) ) ; 
 if ( oldPack ! = null ) { 
 @ @ - 125 , 6 + 128 , 7 @ @ public class StickersActor extends ModuleActor { 
 request ( new RequestLoadOwnStickers ( ) , new RpcCallback < ResponseLoadOwnStickers > ( ) { 
 @ Override 
 public void onResult ( final ResponseLoadOwnStickers response ) { 
 + context ( ) . getPreferences ( ) . putBool ( " stickers _ loaded " , true ) ; 
 updates ( ) . onUpdateReceived ( 
 new StickersLoaded ( response . getOwnStickers ( ) ) 
 ) ; 
 @ @ - 140 , 9 + 144 , 10 @ @ public class StickersActor extends ModuleActor { 
 public int getLocalCollectionId ( int collectionId ) { 
 int id = context ( ) . getPreferences ( ) . getInt ( " sticker _ packs _ local _ id _ map " + collectionId , - 1 ) ; 
 if ( id = = - 1 ) { 
 + 
 id = context ( ) . getPreferences ( ) . getInt ( " sticker _ packs _ local _ id _ increment " , 0 ) ; 
 context ( ) . getPreferences ( ) . putInt ( " sticker _ packs _ local _ id _ map " + collectionId , id ) ; 
 - context ( ) . getPreferences ( ) . putInt ( " sticker _ packs _ local _ id _ increment " , + + id ) ; 
 + context ( ) . getPreferences ( ) . putInt ( " sticker _ packs _ local _ id _ increment " , id + 1 ) ; 
 } 
 return id ; 
 }

NEAREST DIFF:
diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 index 71da5ab . . 8045a74 100644 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 + + + b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / Application . java 
 @ @ - 1 , 11 + 1 , 7 @ @ 
 package im . actor ; 
 
 - import java . util . ArrayList ; 
 - 
 - import im . actor . auth . SignEmailFragment ; 
 import im . actor . sdk . ActorSDK ; 
 import im . actor . sdk . BaseActorSDKDelegate ; 
 - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; 
 
 / * * 
 * Created by badgr on 16 . 10 . 2015 . 
 @ @ - 15 , 13 + 11 , 11 @ @ public class Application extends android . app . Application { 
 public void onCreate ( ) { 
 super . onCreate ( ) ; 
 ActorSDK . sharedActor ( ) . setDelegate ( new ActorSDKDelegate ( ) ) ; 
 + ActorSDK . sharedActor ( ) . setPushId ( 209133700967L ) ; 
 ActorSDK . sharedActor ( ) . createActor ( this ) ; 
 } 
 
 private class ActorSDKDelegate extends BaseActorSDKDelegate { 
 - @ Override 
 - public BaseAuthFragment getSignFragment ( ) { 
 - return new SignEmailFragment ( ) ; 
 - } 
 + 
 } 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java b / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java 
 deleted file mode 100644 
 index 37ce216 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - app / src / main / java / im / actor / auth / SignEmailFragment . java 
 + + + / dev / null 
 @ @ - 1 , 137 + 0 , 0 @ @ 
 - package im . actor . auth ; 
 - 
 - import android . app . AlertDialog ; 
 - import android . os . Bundle ; 
 - import android . telephony . PhoneNumberFormattingTextWatcher ; 
 - import android . text . Editable ; 
 - import android . text . TextWatcher ; 
 - import android . view . KeyEvent ; 
 - import android . view . LayoutInflater ; 
 - import android . view . View ; 
 - import android . view . ViewGroup ; 
 - import android . view . inputmethod . EditorInfo ; 
 - import android . widget . EditText ; 
 - import android . widget . TextView ; 
 - 
 - import im . actor . sdk . ActorSDK ; 
 - import im . actor . sdk . R ; 
 - import im . actor . sdk . controllers . fragment . auth . BaseAuthFragment ; 
 - import im . actor . sdk . util . Fonts ; 
 - import im . actor . sdk . util . KeyboardHelper ; 
 - 
 - import static im . actor . sdk . util . ActorSDKMessenger . messenger ; 
 - 
 - public class SignEmailFragment extends BaseAuthFragment { 
 - 
 - private EditText emailEditText ; 
 - private KeyboardHelper keyboardHelper ; 
 - 
 - @ Override 
 - public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 - View v = inflater . inflate ( R . layout . fragment _ sign _ email , container , false ) ; 
 - 
 - ( ( TextView ) v . findViewById ( R . id . button _ continue _ text ) ) . setTypeface ( Fonts . medium ( ) ) ; 
 - 
 - keyboardHelper = new KeyboardHelper ( getActivity ( ) ) ; 
 - 
 - initView ( v ) ; 
 - 
 - return v ; 
 - } 
 - 
 - @ Override 
 - public void onResume ( ) { 
 - super . onResume ( ) ; 
 - 
 - / / TODO track email auth open 
 - / / messenger ( ) . trackAuthPhoneOpen ( ) ; 
 - 
 - setTitle ( R . string . auth _ email _ title ) ; 
 - 
 - focusEmail ( ) ; 
 - 
 - keyboardHelper . setImeVisibility ( emailEditText , true ) ; 
 - } 
 - 
 - private void initView ( View v ) { 
 - 
 - emailEditText = ( EditText ) v . findViewById ( R . id . tv _ email ) ; 
 - emailEditText . addTextChangedListener ( new PhoneNumberFormattingTextWatcher ( ) ) ; 
 - String email = messenger ( ) . getAuthEmail ( ) ; 
 - if ( email ! = null & & ! email . isEmpty ( ) ) { 
 - emailEditText . setText ( email ) ; 
 - } 
 - emailEditText . setOnEditorActionListener ( new TextView . OnEditorActionListener ( ) { 
 - @ Override 
 - public boolean onEditorAction ( TextView textView , int id , KeyEvent keyEvent ) { 
 - if ( id = = EditorInfo . IME _ ACTION _ GO ) { 
 - requestCode ( ) ; 
 - return true ; 
 - } 
 - return false ; 
 - } 
 - } ) ; 
 - emailEditText . addTextChangedListener ( new TextWatcher ( ) { 
 - @ Override 
 - public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void onTextChanged ( CharSequence s , int start , int before , int count ) { 
 - 
 - } 
 - 
 - @ Override 
 - public void afterTextChanged ( Editable s ) { 
 - / / TODO trackAuthEmailType 
 - / / messenger ( ) . trackAuthPhoneType ( emailEditText . getText ( ) . toString ( ) ) ; 
 - } 
 - } ) ; 
 - 
 - onClick ( v , R . id . button _ continue , new View . OnClickListener ( ) { 
 - @ Override 
 - public void onClick ( View view ) { 
 - requestCode ( ) ; 
 - } 
 - } ) ; 
 - } 
 - 
 - private void requestCode ( ) { 
 - final String ACTION = " Request code email " ; 
 - 
 - 
 - if ( emailEditText . getText ( ) . toString ( ) . trim ( ) . length ( ) = = 0 ) { 
 - String message = getString ( R . string . auth _ error _ empty _ email ) ; 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( R . string . auth _ error _ empty _ email ) 
 - . setPositiveButton ( R . string . dialog _ ok , null ) 
 - . show ( ) ; 
 - return ; 
 - } 
 - 
 - String rawEmail = emailEditText . getText ( ) . toString ( ) ; 
 - 
 - if ( rawEmail . length ( ) = = 0 ) { 
 - String message = getString ( R . string . auth _ error _ empty _ email ) ; 
 - new AlertDialog . Builder ( getActivity ( ) ) 
 - . setMessage ( R . string . auth _ error _ empty _ email ) 
 - . setPositiveButton ( R . string . dialog _ ok , null ) 
 - . show ( ) ; 
 - return ; 
 - } 
 - 
 - setAuthId ( rawEmail ) ; 
 - 
 - executeAuth ( ActorSDK . sharedActor ( ) . getMessenger ( ) . requestStartEmailAuth ( rawEmail ) , ACTION ) ; 
 - } 
 - 
 - private void focusEmail ( ) { 
 - focus ( emailEditText ) ; 
 - } 
 - 
 - @ Override 
 - public String getHintText ( ) { 
 - return getString ( R . string . auth _ code _ email _ hint ) . replace ( " { 0 } " , " < b > " + getAuthId ( ) + " < / b > " ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java 
 deleted file mode 100644 
 index c74e30f . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / core / AndroidPushActor . java 
 + + + / dev / null 
 @ @ - 1 , 100 + 0 , 0 @ @ 
 - package im . actor . core ; 
 - 
 - import android . content . Context ; 
 - 
 - import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 - 
 - import java . io . IOException ; 
 - 
 - import im . actor . messenger . app . core . ActorSDK ; 
 - import im . actor . runtime . Log ; 
 - import im . actor . runtime . actors . Actor ; 
 - 
 - / * * 
 - * GCM push implementation for Actor push registration . 
 - * This actor is used for load GCM token and register it on server . 
 - * / 
 - public class AndroidPushActor extends Actor { 
 - 
 - private static final String TAG = " im . actor . core . AndroidPushActor " ; 
 - 
 - private final AndroidMessenger messenger ; 
 - private final Context context ; 
 - private boolean isRegistered ; 
 - 
 - public AndroidPushActor ( Context context , AndroidMessenger messenger ) { 
 - this . messenger = messenger ; 
 - this . context = context ; 
 - } 
 - 
 - @ Override 
 - public void preStart ( ) { 
 - super . preStart ( ) ; 
 - 
 - isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; 
 - 
 - if ( ! isRegistered ) { 
 - Log . d ( TAG , " Requesting push token . . . " ) ; 
 - 
 - / / TODO : Add backoff 
 - new Thread ( ) { 
 - @ Override 
 - public void run ( ) { 
 - while ( true ) { 
 - GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 - try { 
 - Log . d ( TAG , " Requesting push token iteration . . . " ) ; 
 - String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getGcmProjectId ( ) ) ; 
 - if ( regId ! = null ) { 
 - Log . d ( TAG , " Token loaded " ) ; 
 - self ( ) . send ( new PushRegistered ( regId ) ) ; 
 - return ; 
 - } else { 
 - Log . d ( TAG , " Unable to load Token " ) ; 
 - } 
 - } catch ( IOException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - Log . d ( TAG , " Waiting for next attempt " ) ; 
 - try { 
 - Thread . sleep ( 1000 ) ; 
 - } catch ( InterruptedException e1 ) { 
 - e1 . printStackTrace ( ) ; 
 - return ; 
 - } 
 - } 
 - } 
 - } . start ( ) ; 
 - } else { 
 - Log . d ( TAG , " Already registered token " ) ; 
 - } 
 - } 
 - 
 - private void onPushRegistered ( String token ) { 
 - isRegistered = true ; 
 - messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 - messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getGcmProjectId ( ) , token ) ; 
 - } 
 - 
 - @ Override 
 - public void onReceive ( Object message ) { 
 - if ( message instanceof PushRegistered ) { 
 - PushRegistered pushRegistered = ( PushRegistered ) message ; 
 - onPushRegistered ( pushRegistered . getToken ( ) ) ; 
 - } else { 
 - drop ( message ) ; 
 - } 
 - } 
 - 
 - public static class PushRegistered { 
 - private String token ; 
 - 
 - public PushRegistered ( String token ) { 
 - this . token = token ; 
 - } 
 - 
 - public String getToken ( ) { 
 - return token ; 
 - } 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java b / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java 
 deleted file mode 100644 
 index 8dbd762 . . 0000000 
 - - - a / actor - sdk / sdk - core - android / android - push - google / src / main / java / im / actor / messenger / PushReceiver . java 
 + + + / dev / null 
 @ @ - 1 , 37 + 0 , 0 @ @ 
 - package im . actor . messenger ; 
 - 
 - import android . app . Activity ; 
 - import android . content . Context ; 
 - import android . content . Intent ; 
 - import android . os . Bundle ; 
 - import android . support . v4 . content . WakefulBroadcastReceiver ; 
 - 
 - import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 - 
 - import im . actor . runtime . Log ; 
 - 
 - 
 - import static im . actor . messenger . app . core . ActorSDK . messenger ; 
 - 
 - public class PushReceiver extends WakefulBroadcastReceiver { 
 - 
 - private static final String TAG = " PushReceiver " ; 
 - 
 - @ Override 
 - public void onReceive ( Context context , Intent intent ) { 
 - GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; 
 - Bundle extras = intent . getExtras ( ) ; 
 - String messageType = gcm . getMessageType ( intent ) ; 
 - if ( ! extras . isEmpty ( ) ) { 
 - if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 - if ( extras . containsKey ( " seq " ) ) { 
 - int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 - messenger ( ) . onPushReceived ( seq ) ; 
 - setResultCode ( Activity . RESULT _ OK ) ; 
 - Log . d ( TAG , " Push received " ) ; 
 - } 
 - } 
 - } 
 - completeWakefulIntent ( intent ) ; 
 - } 
 - } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / build . gradle b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 index 5153388 . . 8c04484 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 + + + b / actor - sdk / sdk - core - android / android - sdk / build . gradle 
 @ @ - 75 , 6 + 75 , 10 @ @ dependencies { 
 compile ' com . android . support : palette - v7 : 23 . 1 . 0 ' 
 compile ' com . android . support : recyclerview - v7 : 23 . 1 . 0 ' 
 compile ' com . android . support : design : 23 . 1 . 0 ' 
 + 
 + / / GCM 
 + compile ' com . google . android . gms : play - services - gcm : 7 . 5 . 0 ' 
 + 
 } 
 
 / / 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 index 1492015 . . ef17a74 100644 
 - - - a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / ActorSDK . java 
 @ @ - 18 , 14 + 18 , 20 @ @ import im . actor . core . ApiConfiguration ; 
 import im . actor . core . ConfigurationBuilder ; 
 import im . actor . core . DeviceCategory ; 
 import im . actor . core . PlatformType ; 
 + import im . actor . runtime . actors . ActorCreator ; 
 + import im . actor . runtime . actors . Props ; 
 import im . actor . sdk . core . AndroidNotifications ; 
 import im . actor . sdk . core . AndroidPhoneBook ; 
 + import im . actor . sdk . core . AndroidPushActor ; 
 import im . actor . sdk . intents . ActivityManager ; 
 import im . actor . sdk . services . KeepAliveService ; 
 import im . actor . sdk . util . Devices ; 
 import im . actor . sdk . view . emoji . SmileProcessor ; 
 import im . actor . runtime . android . AndroidContext ; 
 
 + import static im . actor . runtime . actors . ActorSystem . system ; 
 + 
 + 
 public class ActorSDK { 
 
 
 @ @ - 61 , 6 + 67 , 11 @ @ public class ActorSDK { 
 * / 
 private String apiAppKey = " 4295f9666fad3faf2d04277fe7a0c40ff39a85d313de5348ad8ffa650ad71855 " ; 
 / * * 
 + * Push Registration Id 
 + * / 
 + private long pushId = 0 ; 
 + 
 + / * * 
 * Is Keeping app alive enabled 
 * / 
 private boolean isKeepAliveEnabled = false ; 
 @ @ - 71 , 7 + 82 , 8 @ @ public class ActorSDK { 
 / * * 
 * ActivityManager 
 * / 
 - private ActivityManager activityManager = new ActivityManager ( ) ; 
 + private ActivityManager activityManager = new ActivityManager ( ) ; 
 + 
 private ActorSDK ( ) { 
 endpoints . add ( " tls : / / front1 - mtproto - api - rev2 . actor . im " ) ; 
 endpoints . add ( " tls : / / front2 - mtproto - api - rev2 . actor . im " ) ; 
 @ @ - 91 , 7 + 103 , 7 @ @ public class ActorSDK { 
 / / SDK Initialization 
 / / 
 
 - public void createActor ( Application application ) { 
 + public void createActor ( final Application application ) { 
 
 this . application = application ; 
 
 @ @ - 135 , 6 + 147 , 19 @ @ public class ActorSDK { 
 AlarmManager alarm = ( AlarmManager ) application . getSystemService ( Context . ALARM _ SERVICE ) ; 
 alarm . setRepeating ( AlarmManager . RTC , System . currentTimeMillis ( ) , 30 * 1000 , pendingIntent ) ; 
 } 
 + 
 + / / 
 + / / GCM 
 + / / 
 + if ( pushId ! = 0 ) { 
 + system ( ) . actorOf ( Props . create ( AndroidPushActor . class , new ActorCreator < AndroidPushActor > ( ) { 
 + @ Override 
 + public AndroidPushActor create ( ) { 
 + return new AndroidPushActor ( application , messenger ) ; 
 + } 
 + } ) , " actor / android / push " ) ; 
 + } 
 + 
 } 
 
 public void startMessagingApp ( Activity context ) { 
 @ @ - 240 , 6 + 265 , 22 @ @ public class ActorSDK { 
 this . isKeepAliveEnabled = isKeepAliveEnabled ; 
 } 
 
 + / * * 
 + * Getting Push Registration Id 
 + * 
 + * @ return pushId 
 + * / 
 + public long getPushId ( ) { 
 + return pushId ; 
 + } 
 + 
 + / * * 
 + * Setting Push Registration Id 
 + * / 
 + public void setPushId ( long pushId ) { 
 + this . pushId = pushId ; 
 + } 
 + 
 public ActorSDKDelegate getDelegate ( ) { 
 return delegate ; 
 } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 new file mode 100644 
 index 0000000 . . d65a7a8 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / AndroidPushActor . java 
 @ @ - 0 , 0 + 1 , 101 @ @ 
 + package im . actor . sdk . core ; 
 + 
 + import android . content . Context ; 
 + 
 + import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 + 
 + import java . io . IOException ; 
 + 
 + import im . actor . core . AndroidMessenger ; 
 + import im . actor . runtime . Log ; 
 + import im . actor . runtime . actors . Actor ; 
 + import im . actor . sdk . ActorSDK ; 
 + 
 + / * * 
 + * GCM push implementation for Actor push registration . 
 + * This actor is used for load GCM token and register it on server . 
 + * / 
 + public class AndroidPushActor extends Actor { 
 + 
 + private static final String TAG = " im . actor . core . AndroidPushActor " ; 
 + 
 + private final AndroidMessenger messenger ; 
 + private final Context context ; 
 + private boolean isRegistered ; 
 + 
 + public AndroidPushActor ( Context context , AndroidMessenger messenger ) { 
 + this . messenger = messenger ; 
 + this . context = context ; 
 + } 
 + 
 + @ Override 
 + public void preStart ( ) { 
 + super . preStart ( ) ; 
 + 
 + isRegistered = messenger . getPreferences ( ) . getBool ( " push _ registered " , false ) ; 
 + 
 + if ( ! isRegistered ) { 
 + Log . d ( TAG , " Requesting push token . . . " ) ; 
 + 
 + / / TODO : Add backoff 
 + new Thread ( ) { 
 + @ Override 
 + public void run ( ) { 
 + while ( true ) { 
 + GoogleCloudMessaging cloudMessaging = GoogleCloudMessaging . getInstance ( context ) ; 
 + try { 
 + Log . d ( TAG , " Requesting push token iteration . . . " ) ; 
 + String regId = cloudMessaging . register ( " " + ActorSDK . sharedActor ( ) . getPushId ( ) ) ; 
 + if ( regId ! = null ) { 
 + Log . d ( TAG , " Token loaded " ) ; 
 + self ( ) . send ( new PushRegistered ( regId ) ) ; 
 + return ; 
 + } else { 
 + Log . d ( TAG , " Unable to load Token " ) ; 
 + } 
 + } catch ( IOException e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + Log . d ( TAG , " Waiting for next attempt " ) ; 
 + try { 
 + Thread . sleep ( 1000 ) ; 
 + } catch ( InterruptedException e1 ) { 
 + e1 . printStackTrace ( ) ; 
 + return ; 
 + } 
 + } 
 + } 
 + } . start ( ) ; 
 + } else { 
 + Log . d ( TAG , " Already registered token " ) ; 
 + } 
 + } 
 + 
 + private void onPushRegistered ( String token ) { 
 + isRegistered = true ; 
 + messenger . getPreferences ( ) . putBool ( " push _ registered " , true ) ; 
 + messenger . registerGooglePush ( ActorSDK . sharedActor ( ) . getPushId ( ) , token ) ; 
 + } 
 + 
 + @ Override 
 + public void onReceive ( Object message ) { 
 + if ( message instanceof PushRegistered ) { 
 + PushRegistered pushRegistered = ( PushRegistered ) message ; 
 + onPushRegistered ( pushRegistered . getToken ( ) ) ; 
 + } else { 
 + drop ( message ) ; 
 + } 
 + } 
 + 
 + public static class PushRegistered { 
 + private String token ; 
 + 
 + public PushRegistered ( String token ) { 
 + this . token = token ; 
 + } 
 + 
 + public String getToken ( ) { 
 + return token ; 
 + } 
 + } 
 + } 
 diff - - git a / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java 
 new file mode 100644 
 index 0000000 . . 425cfb1 
 - - - / dev / null 
 + + + b / actor - sdk / sdk - core - android / android - sdk / src / main / java / im / actor / sdk / core / PushReceiver . java 
 @ @ - 0 , 0 + 1 , 35 @ @ 
 + package im . actor . sdk . core ; 
 + 
 + import android . app . Activity ; 
 + import android . content . Context ; 
 + import android . content . Intent ; 
 + import android . os . Bundle ; 
 + import android . support . v4 . content . WakefulBroadcastReceiver ; 
 + 
 + import com . google . android . gms . gcm . GoogleCloudMessaging ; 
 + 
 + import im . actor . runtime . Log ; 
 + import im . actor . sdk . ActorSDK ; 
 + 
 + public class PushReceiver extends WakefulBroadcastReceiver { 
 + 
 + private static final String TAG = " PushReceiver " ; 
 + 
 + @ Override 
 + public void onReceive ( Context context , Intent intent ) { 
 + GoogleCloudMessaging gcm = GoogleCloudMessaging . getInstance ( context ) ; 
 + Bundle extras = intent . getExtras ( ) ; 
 + String messageType = gcm . getMessageType ( intent ) ; 
 + if ( ! extras . isEmpty ( ) ) { 
 + if ( GoogleCloudMessaging . MESSAGE _ TYPE _ MESSAGE . equals ( messageType ) ) { 
 + if ( extras . containsKey ( " seq " ) ) { 
 + int seq = Integer . parseInt ( extras . getString ( " seq " ) ) ; 
 + ActorSDK . sharedActor ( ) . getMessenger ( ) . onPushReceived ( seq ) ; 
 + setResultCode ( Activity . RESULT _ OK ) ; 
 + Log . d ( TAG , " Push received " ) ; 
 + } 
 + } 
 + } 
 + completeWakefulIntent ( intent ) ; 
 + } 
 + }
