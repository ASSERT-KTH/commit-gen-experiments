BLEU SCORE: 0.21142141714303078

TEST MSG: fix ( server : dialogs ) : archive only dialogs with all messages read
GENERATED MSG: fix ( server : messaging ) : don ' t send unnessesary message

TEST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > index fabe68b . . bc9345f 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > @ @ - 172 , 7 + 172 , 7 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) < nl > val toArchive = resp . groups . collect { < nl > case DialogGroup ( DialogGroupType . DirectMessages , ds ) ⇒ ds < nl > case DialogGroup ( DialogGroupType . Groups , ds ) ⇒ ds < nl > - } . flatten filter ( _ . lastMessageDate . isBefore ( Instant . now ( ) . minus ( Period . ofDays ( 5 ) ) ) ) < nl > + } . flatten filter ( d = > d . counter = = 0 & & d . lastMessageDate . isBefore ( Instant . now ( ) . minus ( Period . ofDays ( 5 ) ) ) ) < nl > < nl > toArchive foreach { d ⇒ < nl > log . debug ( " Archiving dialog { } due to inactivity . Last message date : { } " , d . peer , d . lastMessageDate )
NEAREST DIFF (one line): diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > index 6c0d99c . . 939a4da 100644 < nl > - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala < nl > @ @ - 141 , 13 + 141 , 10 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) < nl > persistAllAsync ( events ) ( e ⇒ commit ( e ) ) < nl > < nl > deferAsync ( ( ) ) { _ ⇒ < nl > - sender ( ) ! ( ( ) ) < nl > - < nl > if ( ! isCreated | | ! isShown ) < nl > sendChatGroupsChanged ( ) < nl > } < nl > case None ⇒ < nl > - sender ( ) ! ( ( ) ) < nl > } < nl > case Archive ( Some ( peer ) , clientAuthSid ) ⇒ archive ( peer , clientAuthSid map ( _ . value ) ) < nl > case Unarchive ( Some ( peer ) , clientAuthSid ) ⇒ unarchive ( peer , clientAuthSid map ( _ . value ) )

TEST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 index fabe68b . . bc9345f 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 @ @ - 172 , 7 + 172 , 7 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) 
 val toArchive = resp . groups . collect { 
 case DialogGroup ( DialogGroupType . DirectMessages , ds ) ⇒ ds 
 case DialogGroup ( DialogGroupType . Groups , ds ) ⇒ ds 
 - } . flatten filter ( _ . lastMessageDate . isBefore ( Instant . now ( ) . minus ( Period . ofDays ( 5 ) ) ) ) 
 + } . flatten filter ( d = > d . counter = = 0 & & d . lastMessageDate . isBefore ( Instant . now ( ) . minus ( Period . ofDays ( 5 ) ) ) ) 
 
 toArchive foreach { d ⇒ 
 log . debug ( " Archiving dialog { } due to inactivity . Last message date : { } " , d . peer , d . lastMessageDate )

NEAREST DIFF:
diff - - git a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 index 6c0d99c . . 939a4da 100644 
 - - - a / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 + + + b / actor - server / actor - core / src / main / scala / im / actor / server / dialog / DialogRoot . scala 
 @ @ - 141 , 13 + 141 , 10 @ @ private class DialogRoot ( val userId : Int , extensions : Seq [ ApiExtension ] ) 
 persistAllAsync ( events ) ( e ⇒ commit ( e ) ) 
 
 deferAsync ( ( ) ) { _ ⇒ 
 - sender ( ) ! ( ( ) ) 
 - 
 if ( ! isCreated | | ! isShown ) 
 sendChatGroupsChanged ( ) 
 } 
 case None ⇒ 
 - sender ( ) ! ( ( ) ) 
 } 
 case Archive ( Some ( peer ) , clientAuthSid ) ⇒ archive ( peer , clientAuthSid map ( _ . value ) ) 
 case Unarchive ( Some ( peer ) , clientAuthSid ) ⇒ unarchive ( peer , clientAuthSid map ( _ . value ) )
