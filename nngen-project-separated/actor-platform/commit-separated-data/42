BLEU SCORE: 0.06344849033136085

TEST MSG: fix ( js ) : add missing isChannel flag to content conversion
GENERATED MSG: wip ( * ) : Big project refactoring : Web : Sorting group members

TEST DIFF (one line): diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > index cb2c36e . . a527c95 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java < nl > @ @ - 30 , 6 + 30 , 7 @ @ import im . actor . runtime . crypto . Base64Utils ; < nl > public abstract class JsContent extends JavaScriptObject { < nl > < nl > public static JsContent createContent ( AbsContent src , int sender ) { < nl > + < nl > JsMessenger messenger = JsMessenger . getInstance ( ) ; < nl > JsContent content ; < nl > if ( src instanceof TextContent ) { < nl > @ @ - 58 , 7 + 59 , 7 @ @ public abstract class JsContent extends JavaScriptObject { < nl > content = JsContentText . create ( ( ( TextContent ) src ) . getText ( ) ) ; < nl > } < nl > } else if ( src instanceof ServiceContent ) { < nl > - content = JsContentService . create ( messenger . getFormatter ( ) . formatFullServiceMessage ( sender , ( ServiceContent ) src ) ) ; < nl > + content = JsContentService . create ( messenger . getFormatter ( ) . formatFullServiceMessage ( sender , ( ServiceContent ) src , false ) ) ; < nl > } else if ( src instanceof DocumentContent ) { < nl > DocumentContent doc = ( DocumentContent ) src ; < nl > < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java < nl > index caf0e9a . . 337ee74 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java < nl > @ @ - 8 , 6 + 8 , 8 @ @ import com . google . gwt . core . client . JavaScriptObject ; < nl > < nl > import im . actor . core . entity . ContentType ; < nl > import im . actor . core . entity . Dialog ; < nl > + import im . actor . core . entity . GroupType ; < nl > + import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . js . JsMessenger ; < nl > import im . actor . runtime . js . mvvm . JsEntityConverter ; < nl > @ @ - 22 , 7 + 24 , 8 @ @ public class JsDialog extends JavaScriptObject { < nl > JsMessenger messenger = JsMessenger . getInstance ( ) ; < nl > < nl > boolean showSender = false ; < nl > - if ( src . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { < nl > + Peer peer = src . getPeer ( ) ; < nl > + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > if ( src . getMessageType ( ) ! = ContentType . SERVICE & & src . getMessageType ( ) ! = ContentType . NONE ) { < nl > showSender = src . getSenderId ( ) ! = 0 ; < nl > } < nl > @ @ - 40 , 12 + 43 , 14 @ @ public class JsDialog extends JavaScriptObject { < nl > fileUrl = messenger . getFileUrl ( src . getDialogAvatar ( ) . getSmallImage ( ) . getFileReference ( ) ) ; < nl > } < nl > < nl > + boolean isChannel = peer . getPeerType ( ) = = PeerType . GROUP & & messenger . getGroups ( ) . get ( peer . getPeerId ( ) ) . getGroupType ( ) = = GroupType . CHANNEL ; < nl > + < nl > boolean highlightContent = src . getMessageType ( ) ! = ContentType . TEXT ; < nl > String messageText = messenger . getFormatter ( ) . formatContentText ( src . getSenderId ( ) , < nl > - src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) ) ; < nl > + src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) , false ) ; < nl > < nl > - JsPeerInfo peerInfo = JsPeerInfo . create ( JsPeer . create ( src . getPeer ( ) ) , src . getDialogTitle ( ) , null , fileUrl , < nl > - Placeholders . getPlaceholder ( src . getPeer ( ) . getPeerId ( ) ) , false ) ; < nl > + JsPeerInfo peerInfo = JsPeerInfo . create ( JsPeer . create ( peer ) , src . getDialogTitle ( ) , null , fileUrl , < nl > + Placeholders . getPlaceholder ( peer . getPeerId ( ) ) , isChannel ) ; < nl > < nl > String state = " unknown " ; < nl > if ( messenger . myUid ( ) = = src . getSenderId ( ) ) { < nl > diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > index 4f719e6 . . af087fd 100644 < nl > - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java < nl > @ @ - 10 , 7 + 10 , 9 @ @ import java . util . List ; < nl > < nl > import im . actor . core . Messenger ; < nl > import im . actor . core . entity . Avatar ; < nl > + import im . actor . core . entity . GroupType ; < nl > import im . actor . core . entity . Notification ; < nl > + import im . actor . core . entity . Peer ; < nl > import im . actor . core . entity . PeerType ; < nl > import im . actor . core . js . entity . JsPeer ; < nl > import im . actor . core . js . JsMessenger ; < nl > @ @ - 50 , 15 + 52 , 16 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > Notification notification = topNotifications . get ( 0 ) ; < nl > < nl > / / Peer info < nl > + Peer peer = notification . getPeer ( ) ; < nl > if ( conversationsCount = = 1 ) { < nl > Avatar peerAvatar ; < nl > - JsPeer jsPeer = JsPeer . create ( notification . getPeer ( ) ) ; < nl > - if ( notification . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > - UserVM userVM = messenger . getUser ( notification . getPeer ( ) . getPeerId ( ) ) ; < nl > + JsPeer jsPeer = JsPeer . create ( peer ) ; < nl > + if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { < nl > + UserVM userVM = messenger . getUser ( peer . getPeerId ( ) ) ; < nl > peerTitle = userVM . getName ( ) . get ( ) ; < nl > peerAvatar = userVM . getAvatar ( ) . get ( ) ; < nl > } else { < nl > - GroupVM groupVM = messenger . getGroup ( notification . getPeer ( ) . getPeerId ( ) ) ; < nl > + GroupVM groupVM = messenger . getGroup ( peer . getPeerId ( ) ) ; < nl > peerTitle = groupVM . getName ( ) . get ( ) ; < nl > peerAvatar = groupVM . getAvatar ( ) . get ( ) ; < nl > } < nl > @ @ - 80 , 19 + 83 , 22 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > showCounters = true ; < nl > } < nl > < nl > + boolean isChannel = peer . getPeerType ( ) = = PeerType . GROUP & & messenger . getGroups ( ) . get ( peer . getPeerId ( ) ) . getGroupType ( ) = = GroupType . CHANNEL ; < nl > + < nl > if ( conversationsCount = = 1 ) { < nl > for ( int i = 0 ; i < nCount ; i + + ) { < nl > Notification n = topNotifications . get ( i ) ; < nl > if ( contentMessage . length ( ) > 0 ) { < nl > contentMessage + = " \ n " ; < nl > } < nl > - if ( notification . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { < nl > + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { < nl > contentMessage + = messenger . getUser ( notification . getSender ( ) ) . getName ( ) . get ( ) + " : " ; < nl > } < nl > contentMessage + = messenger . getFormatter ( ) . formatContentText ( n . getSender ( ) , < nl > n . getContentDescription ( ) . getContentType ( ) , < nl > n . getContentDescription ( ) . getText ( ) , < nl > - n . getContentDescription ( ) . getRelatedUser ( ) ) ; < nl > + n . getContentDescription ( ) . getRelatedUser ( ) , < nl > + isChannel ) ; < nl > } < nl > < nl > if ( showCounters ) { < nl > @ @ - 114 , 7 + 120 , 8 @ @ public class JsNotificationsProvider implements NotificationProvider { < nl > contentMessage + = messenger . getFormatter ( ) . formatContentText ( n . getSender ( ) , < nl > n . getContentDescription ( ) . getContentType ( ) , < nl > n . getContentDescription ( ) . getText ( ) , < nl > - n . getContentDescription ( ) . getRelatedUser ( ) ) ; < nl > + n . getContentDescription ( ) . getRelatedUser ( ) , < nl > + isChannel ) ; < nl > } < nl > < nl > if ( showCounters ) {
NEAREST DIFF (one line): diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java < nl > index 4eccfde . . b8a9f30 100644 < nl > - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java < nl > + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java < nl > @ @ - 9 , 6 + 9 , 7 @ @ import com . google . gwt . core . client . JavaScriptObject ; < nl > import im . actor . core . entity . ContentType ; < nl > import im . actor . core . entity . Dialog ; < nl > import im . actor . core . entity . PeerType ; < nl > + import im . actor . core . js . JsMessenger ; < nl > import im . actor . runtime . js . mvvm . JsEntityConverter ; < nl > < nl > public class JsDialog extends JavaScriptObject { < nl > @ @ - 17 , 6 + 18 , 8 @ @ public class JsDialog extends JavaScriptObject { < nl > @ Override < nl > public JsDialog convert ( Dialog src ) { < nl > < nl > + JsMessenger messenger = JsMessenger . getInstance ( ) ; < nl > + < nl > boolean showSender = false ; < nl > if ( src . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { < nl > if ( src . getMessageType ( ) ! = ContentType . SERVICE & & src . getMessageType ( ) ! = ContentType . EMPTY ) { < nl > @ @ - 26 , 20 + 29 , 19 @ @ public class JsDialog extends JavaScriptObject { < nl > < nl > String senderName = null ; < nl > if ( showSender ) { < nl > - senderName = " asd " ; / / messenger . getUsers ( ) . get ( src . getSenderId ( ) ) . getName ( ) . get ( ) ; < nl > + senderName = messenger . getUsers ( ) . get ( src . getSenderId ( ) ) . getName ( ) . get ( ) ; < nl > } < nl > < nl > - String date = " 123 " ; / / messenger . getFormatter ( ) . formatShortDate ( src . getDate ( ) ) ; < nl > + String date = messenger . getFormatter ( ) . formatShortDate ( src . getDate ( ) ) ; < nl > < nl > String fileUrl = null ; < nl > - / / if ( src . getDialogAvatar ( ) ! = null & & src . getDialogAvatar ( ) . getSmallImage ( ) ! = null ) { < nl > - / / fileUrl = messenger . getFileUrl ( src . getDialogAvatar ( ) . getSmallImage ( ) . getFileReference ( ) ) ; < nl > - / / } < nl > + if ( src . getDialogAvatar ( ) ! = null & & src . getDialogAvatar ( ) . getSmallImage ( ) ! = null ) { < nl > + fileUrl = messenger . getFileUrl ( src . getDialogAvatar ( ) . getSmallImage ( ) . getFileReference ( ) ) ; < nl > + } < nl > < nl > boolean highlightContent = src . getMessageType ( ) ! = ContentType . TEXT ; < nl > - / / String messageText = messenger . getFormatter ( ) . formatContentText ( src . getSenderId ( ) , < nl > - / / src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) ) ; < nl > - String messageText = " " ; < nl > + String messageText = messenger . getFormatter ( ) . formatContentText ( src . getSenderId ( ) , < nl > + src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) ) ; < nl > < nl > JsPeerInfo peerInfo = JsPeerInfo . create ( JsPeer . create ( src . getPeer ( ) ) , src . getDialogTitle ( ) , fileUrl , < nl > Placeholders . getPlaceholder ( src . getPeer ( ) . getPeerId ( ) ) ) ; < nl > diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java < nl > index 1be0b66 . . ef125ca 100644 < nl > - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java < nl > + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java < nl > @ @ - 7 , 6 + 7 , 9 @ @ package im . actor . core . js . entity ; < nl > import com . google . gwt . core . client . JavaScriptObject ; < nl > import com . google . gwt . core . client . JsArray ; < nl > < nl > + import java . util . ArrayList ; < nl > + import java . util . Collections ; < nl > + import java . util . Comparator ; < nl > import java . util . HashSet ; < nl > < nl > import im . actor . core . entity . Avatar ; < nl > @ @ - 34 , 19 + 37 , 28 @ @ public class JsGroup extends JavaScriptObject { < nl > } < nl > } < nl > < nl > - JsArray < JsGroupMember > convertedMembers = JsArray . createArray ( ) . cast ( ) ; < nl > + ArrayList < JsGroupMember > convertedMembers = new ArrayList < JsGroupMember > ( ) ; < nl > HashSet < GroupMember > groupMembers = groupVM . getMembers ( ) . get ( ) ; < nl > GroupMember [ ] members = groupMembers . toArray ( new GroupMember [ groupMembers . size ( ) ] ) ; < nl > for ( GroupMember g : members ) { < nl > JsPeerInfo peerInfo = messenger . buildPeerInfo ( Peer . user ( g . getUid ( ) ) ) ; < nl > - convertedMembers . push ( JsGroupMember . create ( peerInfo , < nl > + convertedMembers . add ( JsGroupMember . create ( peerInfo , < nl > g . isAdministrator ( ) , < nl > g . getInviterUid ( ) = = messenger . myUid ( ) | | groupVM . getCreatorId ( ) = = messenger . myUid ( ) ) ) ; < nl > } < nl > - < nl > + Collections . sort ( convertedMembers , new Comparator < JsGroupMember > ( ) { < nl > + @ Override < nl > + public int compare ( JsGroupMember o1 , JsGroupMember o2 ) { < nl > + return o1 . getPeerInfo ( ) . getTitle ( ) . compareToIgnoreCase ( o2 . getPeerInfo ( ) . getTitle ( ) ) ; < nl > + } < nl > + } ) ; < nl > + JsArray < JsGroupMember > jsMembers = JsArray . createArray ( ) . cast ( ) ; < nl > + for ( JsGroupMember member : convertedMembers ) { < nl > + jsMembers . push ( member ) ; < nl > + } < nl > return create ( groupVM . getId ( ) , groupVM . getName ( ) . get ( ) , fileUrl , bigFileUrl , < nl > Placeholders . getPlaceholder ( groupVM . getId ( ) ) , groupVM . getCreatorId ( ) , presence , < nl > - convertedMembers ) ; < nl > + jsMembers ) ; < nl > } < nl > < nl > public static native JsGroup create ( int id , String name , String avatar , String bigAvatar , < nl > diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java < nl > index e4915b7 . . a2c9fe2 100644 < nl > - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java < nl > + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java < nl > @ @ - 14 , 4 + 14 , 8 @ @ public class JsGroupMember extends JavaScriptObject { < nl > protected JsGroupMember ( ) { < nl > < nl > } < nl > + < nl > + public final native JsPeerInfo getPeerInfo ( ) / * - { < nl > + return peerInfo ; < nl > + } - * / ; < nl > } < nl > \ No newline at end of file < nl > diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java < nl > index c16a20d . . d93669b 100644 < nl > - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java < nl > + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java < nl > @ @ - 15 , 4 + 15 , 16 @ @ public class JsPeerInfo extends JavaScriptObject { < nl > protected JsPeerInfo ( ) { < nl > < nl > } < nl > + < nl > + public final native JsPeer getPeer ( ) / * - { < nl > + return peer ; < nl > + } - * / ; < nl > + < nl > + public final native String getTitle ( ) / * - { < nl > + return title ; < nl > + } - * / ; < nl > + < nl > + public final native String getAvatar ( ) / * - { < nl > + return avatar ; < nl > + } - * / ; < nl > } < nl > \ No newline at end of file

TEST DIFF:
diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 index cb2c36e . . a527c95 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsContent . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import im . actor . runtime . crypto . Base64Utils ; 
 public abstract class JsContent extends JavaScriptObject { 
 
 public static JsContent createContent ( AbsContent src , int sender ) { 
 + 
 JsMessenger messenger = JsMessenger . getInstance ( ) ; 
 JsContent content ; 
 if ( src instanceof TextContent ) { 
 @ @ - 58 , 7 + 59 , 7 @ @ public abstract class JsContent extends JavaScriptObject { 
 content = JsContentText . create ( ( ( TextContent ) src ) . getText ( ) ) ; 
 } 
 } else if ( src instanceof ServiceContent ) { 
 - content = JsContentService . create ( messenger . getFormatter ( ) . formatFullServiceMessage ( sender , ( ServiceContent ) src ) ) ; 
 + content = JsContentService . create ( messenger . getFormatter ( ) . formatFullServiceMessage ( sender , ( ServiceContent ) src , false ) ) ; 
 } else if ( src instanceof DocumentContent ) { 
 DocumentContent doc = ( DocumentContent ) src ; 
 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java 
 index caf0e9a . . 337ee74 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java 
 @ @ - 8 , 6 + 8 , 8 @ @ import com . google . gwt . core . client . JavaScriptObject ; 
 
 import im . actor . core . entity . ContentType ; 
 import im . actor . core . entity . Dialog ; 
 + import im . actor . core . entity . GroupType ; 
 + import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . js . JsMessenger ; 
 import im . actor . runtime . js . mvvm . JsEntityConverter ; 
 @ @ - 22 , 7 + 24 , 8 @ @ public class JsDialog extends JavaScriptObject { 
 JsMessenger messenger = JsMessenger . getInstance ( ) ; 
 
 boolean showSender = false ; 
 - if ( src . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { 
 + Peer peer = src . getPeer ( ) ; 
 + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 if ( src . getMessageType ( ) ! = ContentType . SERVICE & & src . getMessageType ( ) ! = ContentType . NONE ) { 
 showSender = src . getSenderId ( ) ! = 0 ; 
 } 
 @ @ - 40 , 12 + 43 , 14 @ @ public class JsDialog extends JavaScriptObject { 
 fileUrl = messenger . getFileUrl ( src . getDialogAvatar ( ) . getSmallImage ( ) . getFileReference ( ) ) ; 
 } 
 
 + boolean isChannel = peer . getPeerType ( ) = = PeerType . GROUP & & messenger . getGroups ( ) . get ( peer . getPeerId ( ) ) . getGroupType ( ) = = GroupType . CHANNEL ; 
 + 
 boolean highlightContent = src . getMessageType ( ) ! = ContentType . TEXT ; 
 String messageText = messenger . getFormatter ( ) . formatContentText ( src . getSenderId ( ) , 
 - src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) ) ; 
 + src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) , false ) ; 
 
 - JsPeerInfo peerInfo = JsPeerInfo . create ( JsPeer . create ( src . getPeer ( ) ) , src . getDialogTitle ( ) , null , fileUrl , 
 - Placeholders . getPlaceholder ( src . getPeer ( ) . getPeerId ( ) ) , false ) ; 
 + JsPeerInfo peerInfo = JsPeerInfo . create ( JsPeer . create ( peer ) , src . getDialogTitle ( ) , null , fileUrl , 
 + Placeholders . getPlaceholder ( peer . getPeerId ( ) ) , isChannel ) ; 
 
 String state = " unknown " ; 
 if ( messenger . myUid ( ) = = src . getSenderId ( ) ) { 
 diff - - git a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 index 4f719e6 . . af087fd 100644 
 - - - a / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 + + + b / actor - sdk / sdk - core / core / core - js / src / main / java / im / actor / core / js / providers / JsNotificationsProvider . java 
 @ @ - 10 , 7 + 10 , 9 @ @ import java . util . List ; 
 
 import im . actor . core . Messenger ; 
 import im . actor . core . entity . Avatar ; 
 + import im . actor . core . entity . GroupType ; 
 import im . actor . core . entity . Notification ; 
 + import im . actor . core . entity . Peer ; 
 import im . actor . core . entity . PeerType ; 
 import im . actor . core . js . entity . JsPeer ; 
 import im . actor . core . js . JsMessenger ; 
 @ @ - 50 , 15 + 52 , 16 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 Notification notification = topNotifications . get ( 0 ) ; 
 
 / / Peer info 
 + Peer peer = notification . getPeer ( ) ; 
 if ( conversationsCount = = 1 ) { 
 Avatar peerAvatar ; 
 - JsPeer jsPeer = JsPeer . create ( notification . getPeer ( ) ) ; 
 - if ( notification . getPeer ( ) . getPeerType ( ) = = PeerType . PRIVATE ) { 
 - UserVM userVM = messenger . getUser ( notification . getPeer ( ) . getPeerId ( ) ) ; 
 + JsPeer jsPeer = JsPeer . create ( peer ) ; 
 + if ( peer . getPeerType ( ) = = PeerType . PRIVATE ) { 
 + UserVM userVM = messenger . getUser ( peer . getPeerId ( ) ) ; 
 peerTitle = userVM . getName ( ) . get ( ) ; 
 peerAvatar = userVM . getAvatar ( ) . get ( ) ; 
 } else { 
 - GroupVM groupVM = messenger . getGroup ( notification . getPeer ( ) . getPeerId ( ) ) ; 
 + GroupVM groupVM = messenger . getGroup ( peer . getPeerId ( ) ) ; 
 peerTitle = groupVM . getName ( ) . get ( ) ; 
 peerAvatar = groupVM . getAvatar ( ) . get ( ) ; 
 } 
 @ @ - 80 , 19 + 83 , 22 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 showCounters = true ; 
 } 
 
 + boolean isChannel = peer . getPeerType ( ) = = PeerType . GROUP & & messenger . getGroups ( ) . get ( peer . getPeerId ( ) ) . getGroupType ( ) = = GroupType . CHANNEL ; 
 + 
 if ( conversationsCount = = 1 ) { 
 for ( int i = 0 ; i < nCount ; i + + ) { 
 Notification n = topNotifications . get ( i ) ; 
 if ( contentMessage . length ( ) > 0 ) { 
 contentMessage + = " \ n " ; 
 } 
 - if ( notification . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { 
 + if ( peer . getPeerType ( ) = = PeerType . GROUP ) { 
 contentMessage + = messenger . getUser ( notification . getSender ( ) ) . getName ( ) . get ( ) + " : " ; 
 } 
 contentMessage + = messenger . getFormatter ( ) . formatContentText ( n . getSender ( ) , 
 n . getContentDescription ( ) . getContentType ( ) , 
 n . getContentDescription ( ) . getText ( ) , 
 - n . getContentDescription ( ) . getRelatedUser ( ) ) ; 
 + n . getContentDescription ( ) . getRelatedUser ( ) , 
 + isChannel ) ; 
 } 
 
 if ( showCounters ) { 
 @ @ - 114 , 7 + 120 , 8 @ @ public class JsNotificationsProvider implements NotificationProvider { 
 contentMessage + = messenger . getFormatter ( ) . formatContentText ( n . getSender ( ) , 
 n . getContentDescription ( ) . getContentType ( ) , 
 n . getContentDescription ( ) . getText ( ) , 
 - n . getContentDescription ( ) . getRelatedUser ( ) ) ; 
 + n . getContentDescription ( ) . getRelatedUser ( ) , 
 + isChannel ) ; 
 } 
 
 if ( showCounters ) {

NEAREST DIFF:
diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java 
 index 4eccfde . . b8a9f30 100644 
 - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java 
 + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsDialog . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import com . google . gwt . core . client . JavaScriptObject ; 
 import im . actor . core . entity . ContentType ; 
 import im . actor . core . entity . Dialog ; 
 import im . actor . core . entity . PeerType ; 
 + import im . actor . core . js . JsMessenger ; 
 import im . actor . runtime . js . mvvm . JsEntityConverter ; 
 
 public class JsDialog extends JavaScriptObject { 
 @ @ - 17 , 6 + 18 , 8 @ @ public class JsDialog extends JavaScriptObject { 
 @ Override 
 public JsDialog convert ( Dialog src ) { 
 
 + JsMessenger messenger = JsMessenger . getInstance ( ) ; 
 + 
 boolean showSender = false ; 
 if ( src . getPeer ( ) . getPeerType ( ) = = PeerType . GROUP ) { 
 if ( src . getMessageType ( ) ! = ContentType . SERVICE & & src . getMessageType ( ) ! = ContentType . EMPTY ) { 
 @ @ - 26 , 20 + 29 , 19 @ @ public class JsDialog extends JavaScriptObject { 
 
 String senderName = null ; 
 if ( showSender ) { 
 - senderName = " asd " ; / / messenger . getUsers ( ) . get ( src . getSenderId ( ) ) . getName ( ) . get ( ) ; 
 + senderName = messenger . getUsers ( ) . get ( src . getSenderId ( ) ) . getName ( ) . get ( ) ; 
 } 
 
 - String date = " 123 " ; / / messenger . getFormatter ( ) . formatShortDate ( src . getDate ( ) ) ; 
 + String date = messenger . getFormatter ( ) . formatShortDate ( src . getDate ( ) ) ; 
 
 String fileUrl = null ; 
 - / / if ( src . getDialogAvatar ( ) ! = null & & src . getDialogAvatar ( ) . getSmallImage ( ) ! = null ) { 
 - / / fileUrl = messenger . getFileUrl ( src . getDialogAvatar ( ) . getSmallImage ( ) . getFileReference ( ) ) ; 
 - / / } 
 + if ( src . getDialogAvatar ( ) ! = null & & src . getDialogAvatar ( ) . getSmallImage ( ) ! = null ) { 
 + fileUrl = messenger . getFileUrl ( src . getDialogAvatar ( ) . getSmallImage ( ) . getFileReference ( ) ) ; 
 + } 
 
 boolean highlightContent = src . getMessageType ( ) ! = ContentType . TEXT ; 
 - / / String messageText = messenger . getFormatter ( ) . formatContentText ( src . getSenderId ( ) , 
 - / / src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) ) ; 
 - String messageText = " " ; 
 + String messageText = messenger . getFormatter ( ) . formatContentText ( src . getSenderId ( ) , 
 + src . getMessageType ( ) , src . getText ( ) , src . getRelatedUid ( ) ) ; 
 
 JsPeerInfo peerInfo = JsPeerInfo . create ( JsPeer . create ( src . getPeer ( ) ) , src . getDialogTitle ( ) , fileUrl , 
 Placeholders . getPlaceholder ( src . getPeer ( ) . getPeerId ( ) ) ) ; 
 diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java 
 index 1be0b66 . . ef125ca 100644 
 - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java 
 + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroup . java 
 @ @ - 7 , 6 + 7 , 9 @ @ package im . actor . core . js . entity ; 
 import com . google . gwt . core . client . JavaScriptObject ; 
 import com . google . gwt . core . client . JsArray ; 
 
 + import java . util . ArrayList ; 
 + import java . util . Collections ; 
 + import java . util . Comparator ; 
 import java . util . HashSet ; 
 
 import im . actor . core . entity . Avatar ; 
 @ @ - 34 , 19 + 37 , 28 @ @ public class JsGroup extends JavaScriptObject { 
 } 
 } 
 
 - JsArray < JsGroupMember > convertedMembers = JsArray . createArray ( ) . cast ( ) ; 
 + ArrayList < JsGroupMember > convertedMembers = new ArrayList < JsGroupMember > ( ) ; 
 HashSet < GroupMember > groupMembers = groupVM . getMembers ( ) . get ( ) ; 
 GroupMember [ ] members = groupMembers . toArray ( new GroupMember [ groupMembers . size ( ) ] ) ; 
 for ( GroupMember g : members ) { 
 JsPeerInfo peerInfo = messenger . buildPeerInfo ( Peer . user ( g . getUid ( ) ) ) ; 
 - convertedMembers . push ( JsGroupMember . create ( peerInfo , 
 + convertedMembers . add ( JsGroupMember . create ( peerInfo , 
 g . isAdministrator ( ) , 
 g . getInviterUid ( ) = = messenger . myUid ( ) | | groupVM . getCreatorId ( ) = = messenger . myUid ( ) ) ) ; 
 } 
 - 
 + Collections . sort ( convertedMembers , new Comparator < JsGroupMember > ( ) { 
 + @ Override 
 + public int compare ( JsGroupMember o1 , JsGroupMember o2 ) { 
 + return o1 . getPeerInfo ( ) . getTitle ( ) . compareToIgnoreCase ( o2 . getPeerInfo ( ) . getTitle ( ) ) ; 
 + } 
 + } ) ; 
 + JsArray < JsGroupMember > jsMembers = JsArray . createArray ( ) . cast ( ) ; 
 + for ( JsGroupMember member : convertedMembers ) { 
 + jsMembers . push ( member ) ; 
 + } 
 return create ( groupVM . getId ( ) , groupVM . getName ( ) . get ( ) , fileUrl , bigFileUrl , 
 Placeholders . getPlaceholder ( groupVM . getId ( ) ) , groupVM . getCreatorId ( ) , presence , 
 - convertedMembers ) ; 
 + jsMembers ) ; 
 } 
 
 public static native JsGroup create ( int id , String name , String avatar , String bigAvatar , 
 diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java 
 index e4915b7 . . a2c9fe2 100644 
 - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java 
 + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsGroupMember . java 
 @ @ - 14 , 4 + 14 , 8 @ @ public class JsGroupMember extends JavaScriptObject { 
 protected JsGroupMember ( ) { 
 
 } 
 + 
 + public final native JsPeerInfo getPeerInfo ( ) / * - { 
 + return peerInfo ; 
 + } - * / ; 
 } 
 \ No newline at end of file 
 diff - - git a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java 
 index c16a20d . . d93669b 100644 
 - - - a / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java 
 + + + b / actor - apps / core - js / src / main / java / im / actor / core / js / entity / JsPeerInfo . java 
 @ @ - 15 , 4 + 15 , 16 @ @ public class JsPeerInfo extends JavaScriptObject { 
 protected JsPeerInfo ( ) { 
 
 } 
 + 
 + public final native JsPeer getPeer ( ) / * - { 
 + return peer ; 
 + } - * / ; 
 + 
 + public final native String getTitle ( ) / * - { 
 + return title ; 
 + } - * / ; 
 + 
 + public final native String getAvatar ( ) / * - { 
 + return avatar ; 
 + } - * / ; 
 } 
 \ No newline at end of file
