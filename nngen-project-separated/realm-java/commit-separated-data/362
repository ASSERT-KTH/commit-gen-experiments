BLEU SCORE: 0.08116697886877475

TEST MSG: fix build error in Javadoc task
GENERATED MSG: Fix wrong method link in javadoc

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> index 891f052 . . 549908b 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> @ @ - 152 , 7 + 152 , 6 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> * < li > < b > Unmanaged RealmLists < / b > : It is possible to add both managed and unmanaged objects . If adding managed <nl> * objects to an unmanaged RealmList they will not be copied to the Realm again if using <nl> * { @ link Realm # copyToRealm ( RealmModel ) } afterwards . < / li > <nl> - * < p > <nl> * < li > < b > Managed RealmLists < / b > : It is possible to add unmanaged objects to a RealmList that is already managed . In <nl> * that case the object will transparently be copied to Realm using { @ link Realm # copyToRealm ( RealmModel ) } <nl> * or { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } if it has a primary key . < / li > <nl> @ @ - 185 , 7 + 184 , 6 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> * < li > < b > Unmanaged RealmLists < / b > : It is possible to add both managed and unmanaged objects . If adding managed <nl> * objects to an unmanaged RealmList they will not be copied to the Realm again if using <nl> * { @ link Realm # copyToRealm ( RealmModel ) } afterwards . < / li > <nl> - * < p > <nl> * < li > < b > Managed RealmLists < / b > : It is possible to add unmanaged objects to a RealmList that is already managed . In <nl> * that case the object will transparently be copied to Realm using { @ link Realm # copyToRealm ( RealmModel ) } <nl> * or { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } if it has a primary key . < / li > <nl> @ @ - 215 , 7 + 213 , 6 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> * < li > < b > Unmanaged RealmLists < / b > : It is possible to add both managed and unmanaged objects . If adding managed <nl> * objects to an unmanaged RealmList they will not be copied to the Realm again if using <nl> * { @ link Realm # copyToRealm ( RealmModel ) } afterwards . < / li > <nl> - * < p > <nl> * < li > < b > Managed RealmLists < / b > : It is possible to add unmanaged objects to a RealmList that is already managed . <nl> * In that case the object will transparently be copied to Realm using { @ link Realm # copyToRealm ( RealmModel ) } or <nl> * { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } if it has a primary key . < / li >
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> index f5f93f9 . . c7d6642 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> @ @ - 927 , 9 + 927 , 9 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple <nl> <nl> / * * <nl> * Adding a new object to the RealmList . If the object is not already manage by Realm it will be transparently <nl> - * copied using { @ link Realm # copyToRealmOrUpdate ( RealmObject ) } <nl> + * copied using { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } <nl> * <nl> - * @ see # add ( RealmObject ) <nl> + * @ see # add ( RealmModel ) <nl> * / <nl> public void add ( E e ) { <nl> realm . checkIfValid ( ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 index 891f052 . . 549908b 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 @ @ - 152 , 7 + 152 , 6 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 * < li > < b > Unmanaged RealmLists < / b > : It is possible to add both managed and unmanaged objects . If adding managed 
 * objects to an unmanaged RealmList they will not be copied to the Realm again if using 
 * { @ link Realm # copyToRealm ( RealmModel ) } afterwards . < / li > 
 - * < p > 
 * < li > < b > Managed RealmLists < / b > : It is possible to add unmanaged objects to a RealmList that is already managed . In 
 * that case the object will transparently be copied to Realm using { @ link Realm # copyToRealm ( RealmModel ) } 
 * or { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } if it has a primary key . < / li > 
 @ @ - 185 , 7 + 184 , 6 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 * < li > < b > Unmanaged RealmLists < / b > : It is possible to add both managed and unmanaged objects . If adding managed 
 * objects to an unmanaged RealmList they will not be copied to the Realm again if using 
 * { @ link Realm # copyToRealm ( RealmModel ) } afterwards . < / li > 
 - * < p > 
 * < li > < b > Managed RealmLists < / b > : It is possible to add unmanaged objects to a RealmList that is already managed . In 
 * that case the object will transparently be copied to Realm using { @ link Realm # copyToRealm ( RealmModel ) } 
 * or { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } if it has a primary key . < / li > 
 @ @ - 215 , 7 + 213 , 6 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 * < li > < b > Unmanaged RealmLists < / b > : It is possible to add both managed and unmanaged objects . If adding managed 
 * objects to an unmanaged RealmList they will not be copied to the Realm again if using 
 * { @ link Realm # copyToRealm ( RealmModel ) } afterwards . < / li > 
 - * < p > 
 * < li > < b > Managed RealmLists < / b > : It is possible to add unmanaged objects to a RealmList that is already managed . 
 * In that case the object will transparently be copied to Realm using { @ link Realm # copyToRealm ( RealmModel ) } or 
 * { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } if it has a primary key . < / li >

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 index f5f93f9 . . c7d6642 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 @ @ - 927 , 9 + 927 , 9 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple 
 
 / * * 
 * Adding a new object to the RealmList . If the object is not already manage by Realm it will be transparently 
 - * copied using { @ link Realm # copyToRealmOrUpdate ( RealmObject ) } 
 + * copied using { @ link Realm # copyToRealmOrUpdate ( RealmModel ) } 
 * 
 - * @ see # add ( RealmObject ) 
 + * @ see # add ( RealmModel ) 
 * / 
 public void add ( E e ) { 
 realm . checkIfValid ( ) ;
