BLEU SCORE: 0.011836187458972374

TEST MSG: Results . contains ( )
GENERATED MSG: add @ Keep annotation to RealmObject in order to keep field names in sub classes .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 766e7a7 . . a07d54d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 31 , 12 + 31 , 17 @ @ import java . util . NoSuchElementException ; <nl> import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . Future ; <nl> <nl> + import io . realm . internal . CheckedRow ; <nl> + import io . realm . internal . InvalidRow ; <nl> + import io . realm . internal . RealmObjectProxy ; <nl> + import io . realm . internal . Row ; <nl> import io . realm . internal . SortDescriptor ; <nl> import io . realm . internal . Table ; <nl> import io . realm . internal . TableOrView ; <nl> import io . realm . internal . TableQuery ; <nl> import io . realm . internal . TableView ; <nl> import io . realm . internal . Collection ; <nl> + import io . realm . internal . UncheckedRow ; <nl> import io . realm . internal . async . BadVersionException ; <nl> import io . realm . log . RealmLog ; <nl> import rx . Observable ; <nl> @ @ - 243 , 27 + 248 , 17 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * / <nl> @ Override <nl> public boolean contains ( Object object ) { <nl> - / * <nl> boolean contains = false ; <nl> if ( isLoaded ( ) & & object instanceof RealmObjectProxy ) { <nl> RealmObjectProxy proxy = ( RealmObjectProxy ) object ; <nl> - if ( nativePtr = = 0 ) { <nl> - if ( realm . getPath ( ) . equals ( proxy . realmGet $ proxyState ( ) . getRealm $ realm ( ) . getPath ( ) ) & & proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ! = InvalidRow . INSTANCE ) { <nl> - contains = ( table . sourceRowIndex ( proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) . getIndex ( ) ) ! = TableOrView . NO _ MATCH ) ; <nl> - } <nl> + Row row = proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ; <nl> + if ( row instanceof InvalidRow ) { <nl> + contains = false ; <nl> } else { <nl> - if ( realm instanceof DynamicRealm ) { <nl> - UncheckedRow row = ( UncheckedRow ) proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ; <nl> - contains = nativeContains ( nativePtr , row . getNativePtr ( ) ) ; <nl> - } else { <nl> - CheckedRow row = ( CheckedRow ) proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ; <nl> - contains = nativeContains ( nativePtr , row . getNativePtr ( ) ) ; <nl> - } <nl> + contains = collection . contains ( ( UncheckedRow ) row ) ; <nl> } <nl> } <nl> return contains ; <nl> - * / <nl> - return false ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index d0cdd46 . . 24bd0b3 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 162 , 6 + 162 , 10 @ @ public class Collection implements NativeObject { <nl> return new Collection ( sharedRealm , query , nativeSort ( nativePtr , sortDescriptor . getNativePtr ( ) ) ) ; <nl> } <nl> <nl> + public boolean contains ( UncheckedRow row ) { <nl> + return nativeContains ( nativePtr , row . getNativePtr ( ) ) ; <nl> + } <nl> + <nl> public void addListener ( Listener listener ) { <nl> if ( ! listeners . contains ( listener ) ) { <nl> listeners . add ( listener ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index 0060187 . . 37692ea 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import java . util . concurrent . Future ; <nl> <nl> import io . realm . annotations . RealmClass ; <nl> import io . realm . internal . InvalidRow ; <nl> + import io . realm . internal . Keep ; <nl> import io . realm . internal . Row ; <nl> import io . realm . internal . Table ; <nl> import io . realm . internal . TableQuery ; <nl> @ @ - 79 , 6 + 80 , 7 @ @ import rx . Observable ; <nl> * / <nl> <nl> @ RealmClass <nl> + @ Keep <nl> public abstract class RealmObject { <nl> <nl> protected Row row ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Keep . java b / realm / realm - library / src / main / java / io / realm / internal / Keep . java <nl> index 45f86dc . . 3ee8fb1 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Keep . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Keep . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> package io . realm . internal ; <nl> <nl> import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Inherited ; <nl> import java . lang . annotation . Retention ; <nl> import java . lang . annotation . RetentionPolicy ; <nl> import java . lang . annotation . Target ; <nl> @ @ - 28 , 5 + 29 , 6 @ @ import java . lang . annotation . Target ; <nl> * / <nl> @ Retention ( RetentionPolicy . CLASS ) <nl> @ Target ( ElementType . TYPE ) <nl> + @ Inherited <nl> public @ interface Keep { <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 766e7a7 . . a07d54d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 31 , 12 + 31 , 17 @ @ import java . util . NoSuchElementException ; 
 import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . Future ; 
 
 + import io . realm . internal . CheckedRow ; 
 + import io . realm . internal . InvalidRow ; 
 + import io . realm . internal . RealmObjectProxy ; 
 + import io . realm . internal . Row ; 
 import io . realm . internal . SortDescriptor ; 
 import io . realm . internal . Table ; 
 import io . realm . internal . TableOrView ; 
 import io . realm . internal . TableQuery ; 
 import io . realm . internal . TableView ; 
 import io . realm . internal . Collection ; 
 + import io . realm . internal . UncheckedRow ; 
 import io . realm . internal . async . BadVersionException ; 
 import io . realm . log . RealmLog ; 
 import rx . Observable ; 
 @ @ - 243 , 27 + 248 , 17 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * / 
 @ Override 
 public boolean contains ( Object object ) { 
 - / * 
 boolean contains = false ; 
 if ( isLoaded ( ) & & object instanceof RealmObjectProxy ) { 
 RealmObjectProxy proxy = ( RealmObjectProxy ) object ; 
 - if ( nativePtr = = 0 ) { 
 - if ( realm . getPath ( ) . equals ( proxy . realmGet $ proxyState ( ) . getRealm $ realm ( ) . getPath ( ) ) & & proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ! = InvalidRow . INSTANCE ) { 
 - contains = ( table . sourceRowIndex ( proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) . getIndex ( ) ) ! = TableOrView . NO _ MATCH ) ; 
 - } 
 + Row row = proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ; 
 + if ( row instanceof InvalidRow ) { 
 + contains = false ; 
 } else { 
 - if ( realm instanceof DynamicRealm ) { 
 - UncheckedRow row = ( UncheckedRow ) proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ; 
 - contains = nativeContains ( nativePtr , row . getNativePtr ( ) ) ; 
 - } else { 
 - CheckedRow row = ( CheckedRow ) proxy . realmGet $ proxyState ( ) . getRow $ realm ( ) ; 
 - contains = nativeContains ( nativePtr , row . getNativePtr ( ) ) ; 
 - } 
 + contains = collection . contains ( ( UncheckedRow ) row ) ; 
 } 
 } 
 return contains ; 
 - * / 
 - return false ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index d0cdd46 . . 24bd0b3 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 162 , 6 + 162 , 10 @ @ public class Collection implements NativeObject { 
 return new Collection ( sharedRealm , query , nativeSort ( nativePtr , sortDescriptor . getNativePtr ( ) ) ) ; 
 } 
 
 + public boolean contains ( UncheckedRow row ) { 
 + return nativeContains ( nativePtr , row . getNativePtr ( ) ) ; 
 + } 
 + 
 public void addListener ( Listener listener ) { 
 if ( ! listeners . contains ( listener ) ) { 
 listeners . add ( listener ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index 0060187 . . 37692ea 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import java . util . concurrent . Future ; 
 
 import io . realm . annotations . RealmClass ; 
 import io . realm . internal . InvalidRow ; 
 + import io . realm . internal . Keep ; 
 import io . realm . internal . Row ; 
 import io . realm . internal . Table ; 
 import io . realm . internal . TableQuery ; 
 @ @ - 79 , 6 + 80 , 7 @ @ import rx . Observable ; 
 * / 
 
 @ RealmClass 
 + @ Keep 
 public abstract class RealmObject { 
 
 protected Row row ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Keep . java b / realm / realm - library / src / main / java / io / realm / internal / Keep . java 
 index 45f86dc . . 3ee8fb1 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Keep . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Keep . java 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 package io . realm . internal ; 
 
 import java . lang . annotation . ElementType ; 
 + import java . lang . annotation . Inherited ; 
 import java . lang . annotation . Retention ; 
 import java . lang . annotation . RetentionPolicy ; 
 import java . lang . annotation . Target ; 
 @ @ - 28 , 5 + 29 , 6 @ @ import java . lang . annotation . Target ; 
 * / 
 @ Retention ( RetentionPolicy . CLASS ) 
 @ Target ( ElementType . TYPE ) 
 + @ Inherited 
 public @ interface Keep { 
 }
