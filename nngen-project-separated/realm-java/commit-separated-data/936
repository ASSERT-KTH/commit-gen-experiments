BLEU SCORE: 0.040583489434387374

TEST MSG: Release 0 . 85 . 0
GENERATED MSG: More publishing related fixes

TEST DIFF (one line): diff - - git a / bintrayAar . gradle b / bintrayAar . gradle <nl> new file mode 100644 <nl> index 0000000 . . 032574b <nl> - - - / dev / null <nl> + + + b / bintrayAar . gradle <nl> @ @ - 0 , 0 + 1 , 126 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> + <nl> + version = currentVersion <nl> + <nl> + def commonPom = { <nl> + version = currentVersion <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + jarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android ' <nl> + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + aarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android - library ' <nl> + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotations ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotationsProcessor ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations - processor ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + gradlePlugin ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - gradle - plugin ' <nl> + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' aarLibrary ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - android - library ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / bintrayAnnotations . gradle b / bintrayAnnotations . gradle <nl> new file mode 100644 <nl> index 0000000 . . 8048d3c <nl> - - - / dev / null <nl> + + + b / bintrayAnnotations . gradle <nl> @ @ - 0 , 0 + 1 , 126 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> + <nl> + version = currentVersion <nl> + <nl> + def commonPom = { <nl> + version = currentVersion <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + jarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android ' <nl> + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + aarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android - library ' <nl> + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotations ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotationsProcessor ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations - processor ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + gradlePlugin ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - gradle - plugin ' <nl> + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' annotations ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - annotations ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / bintrayAnnotationsProcessor . gradle b / bintrayAnnotationsProcessor . gradle <nl> new file mode 100644 <nl> index 0000000 . . 89f8ea5 <nl> - - - / dev / null <nl> + + + b / bintrayAnnotationsProcessor . gradle <nl> @ @ - 0 , 0 + 1 , 126 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> + <nl> + version = currentVersion <nl> + <nl> + def commonPom = { <nl> + version = currentVersion <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + jarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android ' <nl> + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + aarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android - library ' <nl> + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotations ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotationsProcessor ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations - processor ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + gradlePlugin ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - gradle - plugin ' <nl> + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' annotationsProcessor ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - annotations - processor ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / bintrayGradlePlugin . gradle b / bintrayGradlePlugin . gradle <nl> new file mode 100644 <nl> index 0000000 . . 94f023e <nl> - - - / dev / null <nl> + + + b / bintrayGradlePlugin . gradle <nl> @ @ - 0 , 0 + 1 , 131 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> + <nl> + version = currentVersion <nl> + <nl> + def commonPom = { <nl> + version = currentVersion <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + jarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android ' <nl> + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + aarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android - library ' <nl> + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotations ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotationsProcessor ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations - processor ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + gradlePlugin ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - gradle - plugin ' <nl> + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + def dependenciesNode = root . appendNode ( ' dependencies ' ) <nl> + def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) <nl> + dependencyNode . appendNode ( ' groupId ' , ' com . neenbedankt . gradle . plugins ' ) <nl> + dependencyNode . appendNode ( ' artifactId ' , ' android - apt ' ) <nl> + dependencyNode . appendNode ( ' version ' , ' 1 . 8 ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' gradlePlugin ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - gradle - plugin ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / bintrayJar . gradle b / bintrayJar . gradle <nl> new file mode 100644 <nl> index 0000000 . . 0cc11e6 <nl> - - - / dev / null <nl> + + + b / bintrayJar . gradle <nl> @ @ - 0 , 0 + 1 , 126 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> + <nl> + version = currentVersion <nl> + <nl> + def commonPom = { <nl> + version = currentVersion <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + jarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android ' <nl> + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + aarLibrary ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - android - library ' <nl> + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotations ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + annotationsProcessor ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations - processor ' <nl> + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + gradlePlugin ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - gradle - plugin ' <nl> + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' jarLibrary ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - android ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / build . gradle b / build . gradle <nl> index 6e651a4 . . 424601a 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 169 , 7 + 169 , 7 @ @ task distributionPackage ( type : Zip ) { <nl> from ( ' LICENSE ' ) <nl> from ( ' version . txt ' ) <nl> from ( ' realm / realm - annotations - processor / build / libs ' ) { <nl> - include ' realm - android - * . jar ' <nl> + include ' realm - android - $ { currentVersion } . jar ' <nl> into ' eclipse ' <nl> } <nl> from ( ' realm / realm - library / src / main / jniLibs / ' ) { <nl> @ @ - 299 , 8 + 299 , 8 @ @ publishing { <nl> groupId ' io . realm ' <nl> artifactId = ' realm - android ' <nl> artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> pom . withXml { <nl> Node root = asNode ( ) <nl> root . appendNode ( ' name ' , ' realm - android ' ) <nl> @ @ - 313 , 8 + 313 , 8 @ @ publishing { <nl> groupId ' io . realm ' <nl> artifactId = ' realm - android - library ' <nl> artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) <nl> - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) <nl> + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) <nl> pom . withXml { <nl> Node root = asNode ( ) <nl> root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> @ @ - 380 , 7 + 380 , 7 @ @ bintray { <nl> user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> <nl> - dryRun = true <nl> + dryRun = false <nl> publish = false <nl> <nl> publications = [ ' jarLibrary ' , ' aarLibrary ' , ' annotations ' , ' annotationsProcessor ' , ' gradlePlugin ' ] <nl> diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> index 92945ca . . ccc216a 100644 <nl> - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> @ @ - 10 , 7 + 10 , 7 @ @ class Realm implements Plugin < Project > { <nl> void apply ( Project project ) { <nl> project . plugins . apply ( AndroidAptPlugin ) <nl> project . repositories . add ( project . getRepositories ( ) . jcenter ( ) ) ; <nl> - project . dependencies . add ( " compile " , " io . realm : realm - android : $ { Version . VERSION } @ aar " ) ; <nl> + project . dependencies . add ( " compile " , " io . realm : realm - android - library : $ { Version . VERSION } " ) ; <nl> project . dependencies . add ( " compile " , " io . realm : realm - annotations : $ { Version . VERSION } " ) ; <nl> project . dependencies . add ( " apt " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index b89649f . . 554f66a 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 1 , 3 + 1 , 17 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> def currentVersion = new File ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> <nl> task checkEnvironment ( group : ' check ' , description : ' Check the user provided gradle . properties ' ) < < { <nl> @ @ - 71 , 7 + 85 , 7 @ @ task eclipseJar ( type : GradleBuild ) { <nl> task distributionPackage ( type : Zip ) { <nl> dependsOn eclipseJar <nl> dependsOn assembleRealm <nl> - dependsOn javadocs <nl> + dependsOn javadoc <nl> <nl> group = ' Artifact ' <nl> archiveName = ' realm - android . zip ' <nl> @ @ - 204 , 9 + 218 , 9 @ @ bintray { <nl> repo = ' maven ' <nl> name = ' realm - android ' <nl> desc = ' Realm for Android ' <nl> - websiteUrl = siteUrl <nl> - issueTrackerUrl = " $ { siteUrl } / issues " <nl> - vcsUrl = gitUrl <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> licenses = [ ' Apache - 2 . 0 ' ] <nl> labels = [ ' aar ' , ' android ' , ' realm ' ] <nl> publicDownloadNumbers = false <nl> diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index 0e24517 . . 8066ee9 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 6 , 8 + 6 , 6 @ @ buildscript { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> classpath ' de . undercouch : gradle - download - task : 1 . 0 ' <nl> classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' <nl> - classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> classpath ' com . github . dcendents : android - maven - gradle - plugin : 1 . 3 ' <nl> classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' <nl> diff - - git a / realm / realm - annotations / build . gradle b / realm / realm - annotations / build . gradle <nl> index 2149461 . . 0abca91 100644 <nl> - - - a / realm / realm - annotations / build . gradle <nl> + + + b / realm / realm - annotations / build . gradle <nl> @ @ - 1 , 8 + 1 , 6 @ @ <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . artifactory ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> <nl> sourceCompatibility = ' 1 . 6 ' <nl> targetCompatibility = ' 1 . 6 ' <nl> @ @ - 14 , 72 + 12 , 3 @ @ uploadArchives { <nl> } <nl> } <nl> } <nl> - <nl> - def siteUrl = ' https : / / github . com / realm / realm - java ' <nl> - def gitUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - <nl> - publishing { <nl> - publications { <nl> - realmAnnotations ( MavenPublication ) { <nl> - artifactId = ' realm - annotations ' <nl> - <nl> - from components . java <nl> - <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> - root . appendNode ( ' description ' , ' Annotations for Realm : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - <nl> - def issues = root . appendNode ( ' issueManagement ' ) <nl> - issues . appendNode ( ' system ' , ' github ' ) <nl> - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) <nl> - <nl> - def scm = root . appendNode ( ' scm ' ) <nl> - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) <nl> - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - <nl> - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) <nl> - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) <nl> - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) <nl> - license . appendNode ( ' distribution ' , ' repo ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - artifactory { <nl> - contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> - publish { <nl> - repository { <nl> - repoKey = ' oss - snapshot - local ' <nl> - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - defaults { <nl> - publications ' realmAnnotations ' <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = true <nl> - publish = false <nl> - <nl> - publications = [ ' realmAnnotations ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - annotations ' <nl> - desc = ' Annotations for Realm ' <nl> - websiteUrl = siteUrl <nl> - issueTrackerUrl = " $ { siteUrl } / issues " <nl> - vcsUrl = gitUrl <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' jar ' , ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 5883a14 . . 99975b1 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 3 , 8 + 3 , 6 @ @ apply plugin : ' com . android . library ' <nl> apply plugin : ' com . neenbedankt . android - apt ' <nl> apply plugin : ' maven - publish ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> - apply plugin : ' com . jfrog . artifactory ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' checkstyle ' <nl> @ @ - 58 , 170 + 56 , 6 @ @ uploadArchives { <nl> } <nl> } <nl> <nl> - def siteUrl = ' https : / / github . com / realm / realm - java ' <nl> - def gitUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - <nl> - publishing { <nl> - publications { <nl> - realmLibrary ( MavenPublication ) { <nl> - artifactId = ' realm - android ' <nl> - <nl> - artifact file ( " $ { project . buildDir } / outputs / aar / realm - library - release . aar " ) <nl> - artifact sourcesJar <nl> - artifact javadocJar <nl> - <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - <nl> - def issues = root . appendNode ( ' issueManagement ' ) <nl> - issues . appendNode ( ' system ' , ' github ' ) <nl> - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) <nl> - <nl> - def scm = root . appendNode ( ' scm ' ) <nl> - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) <nl> - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - <nl> - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) <nl> - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) <nl> - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) <nl> - license . appendNode ( ' distribution ' , ' repo ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - artifactory { <nl> - contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> - publish { <nl> - repository { <nl> - repoKey = ' oss - snapshot - local ' <nl> - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - defaults { <nl> - publications ' realmLibrary ' <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = true <nl> - publish = false <nl> - <nl> - publications = [ ' realmLibrary ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = siteUrl <nl> - issueTrackerUrl = " $ { siteUrl } / issues " <nl> - vcsUrl = gitUrl <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' aar ' , ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> - <nl> - install { <nl> - repositories . mavenInstaller { <nl> - pom { <nl> - project { <nl> - packaging ' aar ' <nl> - name ' Realm for Android ' <nl> - url siteUrl <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - } <nl> - } <nl> - scm { <nl> - connection gitUrl <nl> - developerConnection gitUrl <nl> - url siteUrl <nl> - <nl> - } <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * <nl> - artifacts { <nl> - archives file ( " build / libs / realm - $ { version } . jar " ) <nl> - archives androidSourcesJar <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - mavenAndroid ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId ' realm - android ' <nl> - version version <nl> - artifact assemble <nl> - artifact androidSourcesJar { <nl> - classifier " sources " <nl> - } <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - <nl> - def issues = root . appendNode ( ' issueManagement ' ) <nl> - issues . appendNode ( ' system ' , ' github ' ) <nl> - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) <nl> - <nl> - def scm = root . appendNode ( ' scm ' ) <nl> - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) <nl> - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - <nl> - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) <nl> - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) <nl> - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) <nl> - license . appendNode ( ' distribution ' , ' repo ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - if ( version . endsWith ( ' - SNAPSHOT ' ) ) { / / Only publish if it ' s a snapshot version <nl> - publishing { <nl> - repositories { <nl> - maven { <nl> - url ' http : / / oss . jfrog . org / artifactory / oss - snapshot - local ' <nl> - credentials { <nl> - / / user and password come from the gradle . properties file in ~ / . gradle <nl> - username project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - } <nl> - } <nl> - } <nl> - } else { <nl> - bintray { <nl> - / / user and key come from the gradle . properties file in ~ / . gradle <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - publications = [ ' mavenAndroid ' ] <nl> - publish = true <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - } <nl> - } <nl> - } <nl> - * / <nl> - <nl> task findbugs ( type : FindBugs ) { <nl> dependsOn assemble <nl> group = ' Test '

TEST DIFF:
diff - - git a / bintrayAar . gradle b / bintrayAar . gradle 
 new file mode 100644 
 index 0000000 . . 032574b 
 - - - / dev / null 
 + + + b / bintrayAar . gradle 
 @ @ - 0 , 0 + 1 , 126 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 + 
 + version = currentVersion 
 + 
 + def commonPom = { 
 + version = currentVersion 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + jarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android ' 
 + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + aarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android - library ' 
 + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android - library ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotations ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations ' ) 
 + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotationsProcessor ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations - processor ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + gradlePlugin ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - gradle - plugin ' 
 + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) 
 + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' aarLibrary ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - android - library ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / bintrayAnnotations . gradle b / bintrayAnnotations . gradle 
 new file mode 100644 
 index 0000000 . . 8048d3c 
 - - - / dev / null 
 + + + b / bintrayAnnotations . gradle 
 @ @ - 0 , 0 + 1 , 126 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 + 
 + version = currentVersion 
 + 
 + def commonPom = { 
 + version = currentVersion 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + jarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android ' 
 + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + aarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android - library ' 
 + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android - library ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotations ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations ' ) 
 + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotationsProcessor ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations - processor ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + gradlePlugin ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - gradle - plugin ' 
 + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) 
 + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' annotations ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - annotations ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / bintrayAnnotationsProcessor . gradle b / bintrayAnnotationsProcessor . gradle 
 new file mode 100644 
 index 0000000 . . 89f8ea5 
 - - - / dev / null 
 + + + b / bintrayAnnotationsProcessor . gradle 
 @ @ - 0 , 0 + 1 , 126 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 + 
 + version = currentVersion 
 + 
 + def commonPom = { 
 + version = currentVersion 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + jarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android ' 
 + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + aarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android - library ' 
 + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android - library ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotations ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations ' ) 
 + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotationsProcessor ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations - processor ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + gradlePlugin ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - gradle - plugin ' 
 + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) 
 + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' annotationsProcessor ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - annotations - processor ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / bintrayGradlePlugin . gradle b / bintrayGradlePlugin . gradle 
 new file mode 100644 
 index 0000000 . . 94f023e 
 - - - / dev / null 
 + + + b / bintrayGradlePlugin . gradle 
 @ @ - 0 , 0 + 1 , 131 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 + 
 + version = currentVersion 
 + 
 + def commonPom = { 
 + version = currentVersion 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + jarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android ' 
 + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + aarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android - library ' 
 + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android - library ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotations ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations ' ) 
 + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotationsProcessor ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations - processor ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + gradlePlugin ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - gradle - plugin ' 
 + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) 
 + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + def dependenciesNode = root . appendNode ( ' dependencies ' ) 
 + def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) 
 + dependencyNode . appendNode ( ' groupId ' , ' com . neenbedankt . gradle . plugins ' ) 
 + dependencyNode . appendNode ( ' artifactId ' , ' android - apt ' ) 
 + dependencyNode . appendNode ( ' version ' , ' 1 . 8 ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' gradlePlugin ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - gradle - plugin ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / bintrayJar . gradle b / bintrayJar . gradle 
 new file mode 100644 
 index 0000000 . . 0cc11e6 
 - - - / dev / null 
 + + + b / bintrayJar . gradle 
 @ @ - 0 , 0 + 1 , 126 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + / / classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 + def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 + 
 + version = currentVersion 
 + 
 + def commonPom = { 
 + version = currentVersion 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + jarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android ' 
 + artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + aarLibrary ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - android - library ' 
 + artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - android - library ' ) 
 + root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotations ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations ' ) 
 + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + annotationsProcessor ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations - processor ' 
 + artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + gradlePlugin ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - gradle - plugin ' 
 + artifact file ( " $ { rootDir } / gradle - plugin / build / libs / gradle - plugin - $ { currentVersion } . jar " ) 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' gradle - realm - plugin ' ) 
 + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' jarLibrary ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - android ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / build . gradle b / build . gradle 
 index 6e651a4 . . 424601a 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 169 , 7 + 169 , 7 @ @ task distributionPackage ( type : Zip ) { 
 from ( ' LICENSE ' ) 
 from ( ' version . txt ' ) 
 from ( ' realm / realm - annotations - processor / build / libs ' ) { 
 - include ' realm - android - * . jar ' 
 + include ' realm - android - $ { currentVersion } . jar ' 
 into ' eclipse ' 
 } 
 from ( ' realm / realm - library / src / main / jniLibs / ' ) { 
 @ @ - 299 , 8 + 299 , 8 @ @ publishing { 
 groupId ' io . realm ' 
 artifactId = ' realm - android ' 
 artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 pom . withXml { 
 Node root = asNode ( ) 
 root . appendNode ( ' name ' , ' realm - android ' ) 
 @ @ - 313 , 8 + 313 , 8 @ @ publishing { 
 groupId ' io . realm ' 
 artifactId = ' realm - android - library ' 
 artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - library - release . aar " ) 
 - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 - artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) 
 + / / artifact file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) 
 pom . withXml { 
 Node root = asNode ( ) 
 root . appendNode ( ' name ' , ' realm - android - library ' ) 
 @ @ - 380 , 7 + 380 , 7 @ @ bintray { 
 user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 
 - dryRun = true 
 + dryRun = false 
 publish = false 
 
 publications = [ ' jarLibrary ' , ' aarLibrary ' , ' annotations ' , ' annotationsProcessor ' , ' gradlePlugin ' ] 
 diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 index 92945ca . . ccc216a 100644 
 - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 @ @ - 10 , 7 + 10 , 7 @ @ class Realm implements Plugin < Project > { 
 void apply ( Project project ) { 
 project . plugins . apply ( AndroidAptPlugin ) 
 project . repositories . add ( project . getRepositories ( ) . jcenter ( ) ) ; 
 - project . dependencies . add ( " compile " , " io . realm : realm - android : $ { Version . VERSION } @ aar " ) ; 
 + project . dependencies . add ( " compile " , " io . realm : realm - android - library : $ { Version . VERSION } " ) ; 
 project . dependencies . add ( " compile " , " io . realm : realm - annotations : $ { Version . VERSION } " ) ; 
 project . dependencies . add ( " apt " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) ; 
 }

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index b89649f . . 554f66a 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 1 , 3 + 1 , 17 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 def currentVersion = new File ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 
 task checkEnvironment ( group : ' check ' , description : ' Check the user provided gradle . properties ' ) < < { 
 @ @ - 71 , 7 + 85 , 7 @ @ task eclipseJar ( type : GradleBuild ) { 
 task distributionPackage ( type : Zip ) { 
 dependsOn eclipseJar 
 dependsOn assembleRealm 
 - dependsOn javadocs 
 + dependsOn javadoc 
 
 group = ' Artifact ' 
 archiveName = ' realm - android . zip ' 
 @ @ - 204 , 9 + 218 , 9 @ @ bintray { 
 repo = ' maven ' 
 name = ' realm - android ' 
 desc = ' Realm for Android ' 
 - websiteUrl = siteUrl 
 - issueTrackerUrl = " $ { siteUrl } / issues " 
 - vcsUrl = gitUrl 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 licenses = [ ' Apache - 2 . 0 ' ] 
 labels = [ ' aar ' , ' android ' , ' realm ' ] 
 publicDownloadNumbers = false 
 diff - - git a / realm / build . gradle b / realm / build . gradle 
 index 0e24517 . . 8066ee9 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 6 , 8 + 6 , 6 @ @ buildscript { 
 classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' 
 classpath ' de . undercouch : gradle - download - task : 1 . 0 ' 
 classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' 
 - classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 classpath ' com . github . dcendents : android - maven - gradle - plugin : 1 . 3 ' 
 classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' 
 diff - - git a / realm / realm - annotations / build . gradle b / realm / realm - annotations / build . gradle 
 index 2149461 . . 0abca91 100644 
 - - - a / realm / realm - annotations / build . gradle 
 + + + b / realm / realm - annotations / build . gradle 
 @ @ - 1 , 8 + 1 , 6 @ @ 
 apply plugin : ' java ' 
 apply plugin : ' maven ' 
 apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . artifactory ' 
 - apply plugin : ' com . jfrog . bintray ' 
 
 sourceCompatibility = ' 1 . 6 ' 
 targetCompatibility = ' 1 . 6 ' 
 @ @ - 14 , 72 + 12 , 3 @ @ uploadArchives { 
 } 
 } 
 } 
 - 
 - def siteUrl = ' https : / / github . com / realm / realm - java ' 
 - def gitUrl = ' https : / / github . com / realm / realm - java . git ' 
 - 
 - publishing { 
 - publications { 
 - realmAnnotations ( MavenPublication ) { 
 - artifactId = ' realm - annotations ' 
 - 
 - from components . java 
 - 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - annotations ' ) 
 - root . appendNode ( ' description ' , ' Annotations for Realm : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - 
 - def issues = root . appendNode ( ' issueManagement ' ) 
 - issues . appendNode ( ' system ' , ' github ' ) 
 - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) 
 - 
 - def scm = root . appendNode ( ' scm ' ) 
 - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) 
 - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - 
 - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) 
 - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) 
 - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) 
 - license . appendNode ( ' distribution ' , ' repo ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - artifactory { 
 - contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 - publish { 
 - repository { 
 - repoKey = ' oss - snapshot - local ' 
 - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - defaults { 
 - publications ' realmAnnotations ' 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = true 
 - publish = false 
 - 
 - publications = [ ' realmAnnotations ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - annotations ' 
 - desc = ' Annotations for Realm ' 
 - websiteUrl = siteUrl 
 - issueTrackerUrl = " $ { siteUrl } / issues " 
 - vcsUrl = gitUrl 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' jar ' , ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 5883a14 . . 99975b1 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 3 , 8 + 3 , 6 @ @ apply plugin : ' com . android . library ' 
 apply plugin : ' com . neenbedankt . android - apt ' 
 apply plugin : ' maven - publish ' 
 apply plugin : ' com . github . dcendents . android - maven ' 
 - apply plugin : ' com . jfrog . artifactory ' 
 - apply plugin : ' com . jfrog . bintray ' 
 apply plugin : ' maven ' 
 apply plugin : ' findbugs ' 
 apply plugin : ' checkstyle ' 
 @ @ - 58 , 170 + 56 , 6 @ @ uploadArchives { 
 } 
 } 
 
 - def siteUrl = ' https : / / github . com / realm / realm - java ' 
 - def gitUrl = ' https : / / github . com / realm / realm - java . git ' 
 - 
 - publishing { 
 - publications { 
 - realmLibrary ( MavenPublication ) { 
 - artifactId = ' realm - android ' 
 - 
 - artifact file ( " $ { project . buildDir } / outputs / aar / realm - library - release . aar " ) 
 - artifact sourcesJar 
 - artifact javadocJar 
 - 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - 
 - def issues = root . appendNode ( ' issueManagement ' ) 
 - issues . appendNode ( ' system ' , ' github ' ) 
 - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) 
 - 
 - def scm = root . appendNode ( ' scm ' ) 
 - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) 
 - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - 
 - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) 
 - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) 
 - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) 
 - license . appendNode ( ' distribution ' , ' repo ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - artifactory { 
 - contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 - publish { 
 - repository { 
 - repoKey = ' oss - snapshot - local ' 
 - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - defaults { 
 - publications ' realmLibrary ' 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = true 
 - publish = false 
 - 
 - publications = [ ' realmLibrary ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = siteUrl 
 - issueTrackerUrl = " $ { siteUrl } / issues " 
 - vcsUrl = gitUrl 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' aar ' , ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 - 
 - install { 
 - repositories . mavenInstaller { 
 - pom { 
 - project { 
 - packaging ' aar ' 
 - name ' Realm for Android ' 
 - url siteUrl 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - } 
 - } 
 - scm { 
 - connection gitUrl 
 - developerConnection gitUrl 
 - url siteUrl 
 - 
 - } 
 - } 
 - } 
 - } 
 - } 
 - 
 - / * 
 - artifacts { 
 - archives file ( " build / libs / realm - $ { version } . jar " ) 
 - archives androidSourcesJar 
 - } 
 - 
 - publishing { 
 - publications { 
 - mavenAndroid ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId ' realm - android ' 
 - version version 
 - artifact assemble 
 - artifact androidSourcesJar { 
 - classifier " sources " 
 - } 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - 
 - def issues = root . appendNode ( ' issueManagement ' ) 
 - issues . appendNode ( ' system ' , ' github ' ) 
 - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) 
 - 
 - def scm = root . appendNode ( ' scm ' ) 
 - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) 
 - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - 
 - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) 
 - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) 
 - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) 
 - license . appendNode ( ' distribution ' , ' repo ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - if ( version . endsWith ( ' - SNAPSHOT ' ) ) { / / Only publish if it ' s a snapshot version 
 - publishing { 
 - repositories { 
 - maven { 
 - url ' http : / / oss . jfrog . org / artifactory / oss - snapshot - local ' 
 - credentials { 
 - / / user and password come from the gradle . properties file in ~ / . gradle 
 - username project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - } 
 - } 
 - } 
 - } else { 
 - bintray { 
 - / / user and key come from the gradle . properties file in ~ / . gradle 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - publications = [ ' mavenAndroid ' ] 
 - publish = true 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - } 
 - } 
 - } 
 - * / 
 - 
 task findbugs ( type : FindBugs ) { 
 dependsOn assemble 
 group = ' Test '
