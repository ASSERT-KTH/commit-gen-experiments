BLEU SCORE: 0.02786973068084291

TEST MSG: Unit test cleanup and parameterization for PrimaryKey
GENERATED MSG: Added tests for reading iOS realms . Added option for custom schemas .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java <nl> index c5d6cc8 . . c5482eb 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java <nl> @ @ - 61 , 24 + 61 , 24 @ @ public class RealmJsonNullPrimaryKeyTests { <nl> @ Parameterized . Parameters <nl> public static Iterable < Object [ ] > data ( ) { <nl> return Arrays . asList ( new Object [ ] [ ] { <nl> - { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedByte . class } <nl> - , { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedShort . class } <nl> - , { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedInteger . class } <nl> - , { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedLong . class } <nl> - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedByte . class } <nl> - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedShort . class } <nl> - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedInteger . class } <nl> - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedLong . class } <nl> - , { " { \ " name \ " : null , \ " id \ " : 4299214 } " , " 4299214 " , PrimaryKeyAsString . class } <nl> - , { " { \ " id \ " : 4299214 } " , " 4299214 " , PrimaryKeyAsString . class } <nl> + { PrimaryKeyAsBoxedByte . class , " OhThisIsNullKey ? ! " , " { \ " id \ " : null , \ " name \ " : \ " OhThisIsNullKey ? ! \ " } " } , <nl> + { PrimaryKeyAsBoxedShort . class , " YouBetItIsNullKey " , " { \ " id \ " : null , \ " name \ " : \ " YouBetItIsNullKey \ " } " } , <nl> + { PrimaryKeyAsBoxedInteger . class , " Gosh Didnt KnowIt " , " { \ " id \ " : null , \ " name \ " : \ " Gosh Didnt KnowIt \ " } " } , <nl> + { PrimaryKeyAsBoxedLong . class , " ? YOUNOWKNOWRIGHT ? " , " { \ " id \ " : null , \ " name \ " : \ " ? YOUNOWKNOWRIGHT ? \ " } " } , <nl> + { PrimaryKeyAsBoxedByte . class , " HaHaHaHaHaHaHaHaH " , " { \ " name \ " : \ " HaHaHaHaHaHaHaHaH \ " } " } , <nl> + { PrimaryKeyAsBoxedShort . class , " KeyValueTestIsFun " , " { \ " name \ " : \ " KeyValueTestIsFun \ " } " } , <nl> + { PrimaryKeyAsBoxedInteger . class , " FunValueTestIsKey " , " { \ " name \ " : \ " FunValueTestIsKey \ " } " } , <nl> + { PrimaryKeyAsBoxedLong . class , " NameAsBoxedLong - ! " , " { \ " name \ " : \ " NameAsBoxedLong - ! \ " } " } , <nl> + { PrimaryKeyAsString . class , " 4299121 " , " { \ " name \ " : null , \ " id \ " : 4299121 } " } , <nl> + { PrimaryKeyAsString . class , " 2429214 " , " { \ " id \ " : 2429214 } " } <nl> } ) ; <nl> } <nl> <nl> - final private String jsonString ; <nl> - final private String secondaryFieldValue ; <nl> final private Class < ? extends RealmObject > clazz ; <nl> + final private String secondaryFieldValue ; <nl> + final private String jsonString ; <nl> <nl> - public RealmJsonNullPrimaryKeyTests ( String jsonString , String secondFieldValue , Class < ? extends RealmObject > clazz ) { <nl> + public RealmJsonNullPrimaryKeyTests ( Class < ? extends RealmObject > clazz , String secondFieldValue , String jsonString ) { <nl> this . jsonString = jsonString ; <nl> this . secondaryFieldValue = secondFieldValue ; <nl> this . clazz = clazz ; <nl> @ @ - 93 , 14 + 93 , 14 @ @ public class RealmJsonNullPrimaryKeyTests { <nl> <nl> / / PrimaryKeyAsString <nl> if ( clazz . equals ( PrimaryKeyAsString . class ) ) { <nl> - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; <nl> + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; <nl> assertEquals ( 1 , results . size ( ) ) ; <nl> assertEquals ( Long . valueOf ( secondaryFieldValue ) . longValue ( ) , results . first ( ) . getId ( ) ) ; <nl> assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> <nl> / / PrimaryKeyAsNumber <nl> } else { <nl> - RealmResults results = realm . allObjects ( clazz ) ; <nl> + RealmResults results = realm . where ( clazz ) . findAll ( ) ; <nl> assertEquals ( 1 , results . size ( ) ) ; <nl> assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> @ @ - 116 , 14 + 116 , 14 @ @ public class RealmJsonNullPrimaryKeyTests { <nl> <nl> / / PrimaryKeyAsString <nl> if ( clazz . equals ( PrimaryKeyAsString . class ) ) { <nl> - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; <nl> + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; <nl> assertEquals ( 1 , results . size ( ) ) ; <nl> assertEquals ( Long . valueOf ( secondaryFieldValue ) . longValue ( ) , results . first ( ) . getId ( ) ) ; <nl> assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> <nl> / / PrimaryKeyAsNumber <nl> } else { <nl> - RealmResults results = realm . allObjects ( clazz ) ; <nl> + RealmResults results = realm . where ( clazz ) . findAll ( ) ; <nl> assertEquals ( 1 , results . size ( ) ) ; <nl> assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> @ @ - 140 , 14 + 140 , 14 @ @ public class RealmJsonNullPrimaryKeyTests { <nl> <nl> / / PrimaryKeyAsString <nl> if ( clazz . equals ( PrimaryKeyAsString . class ) ) { <nl> - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; <nl> + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; <nl> assertEquals ( 1 , results . size ( ) ) ; <nl> assertEquals ( Long . valueOf ( secondaryFieldValue ) . longValue ( ) , results . first ( ) . getId ( ) ) ; <nl> assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> <nl> / / PrimaryKeyAsNumber <nl> } else { <nl> - RealmResults results = realm . allObjects ( clazz ) ; <nl> + RealmResults results = realm . where ( clazz ) . findAll ( ) ; <nl> assertEquals ( 1 , results . size ( ) ) ; <nl> assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmNullPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmNullPrimaryKeyTests . java <nl> new file mode 100644 <nl> index 0000000 . . 91f8540 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmNullPrimaryKeyTests . java <nl> @ @ - 0 , 0 + 1 , 210 @ @ <nl> + / * <nl> + * Copyright 2016 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm ; <nl> + <nl> + import org . junit . After ; <nl> + import org . junit . Before ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . junit . runners . Parameterized ; <nl> + <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import java . util . Arrays ; <nl> + <nl> + import io . realm . entities . PrimaryKeyAsBoxedByte ; <nl> + import io . realm . entities . PrimaryKeyAsBoxedInteger ; <nl> + import io . realm . entities . PrimaryKeyAsBoxedLong ; <nl> + import io . realm . entities . PrimaryKeyAsBoxedShort ; <nl> + import io . realm . entities . PrimaryKeyAsString ; <nl> + import io . realm . exceptions . RealmPrimaryKeyConstraintException ; <nl> + import io . realm . objectid . NullPrimaryKey ; <nl> + import io . realm . rule . TestRealmConfigurationFactory ; <nl> + <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . fail ; <nl> + <nl> + @ RunWith ( Parameterized . class ) <nl> + public class RealmNullPrimaryKeyTests { <nl> + @ Rule <nl> + public final TestRealmConfigurationFactory configFactory = new TestRealmConfigurationFactory ( ) ; <nl> + <nl> + protected Realm realm ; <nl> + <nl> + @ Before <nl> + public void setUp ( ) { <nl> + RealmConfiguration realmConfig = configFactory . createConfiguration ( ) ; <nl> + realm = Realm . getInstance ( realmConfig ) ; <nl> + } <nl> + <nl> + @ After <nl> + public void tearDown ( ) { <nl> + if ( realm ! = null ) { <nl> + realm . close ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Base parameters for testing null - primary key value . The parameters are aligned in an order of <nl> + * 1 ) a test target class , 2 ) a primary key field class , 3 ) a secondary field class , 4 ) a secondary <nl> + * field value , and 5 ) an update value , accommodating { @ interface NullPrimaryKey } to condense unit tests . <nl> + * / <nl> + @ Parameterized . Parameters <nl> + public static Iterable < Object [ ] > data ( ) { <nl> + return Arrays . asList ( new Object [ ] [ ] { <nl> + / / 1 ) Test target class 2 ) PK Class 3 ) 2nd Class 4 ) 2nd field value 5 ) 2nd field value for update <nl> + { PrimaryKeyAsString . class , String . class , long . class , Long . valueOf ( 492412 ) , Long . valueOf ( 991241 ) } , <nl> + { PrimaryKeyAsBoxedByte . class , Byte . class , String . class , " This - Is - Second - One " , " Gosh Didnt KnowIt " } , <nl> + { PrimaryKeyAsBoxedShort . class , Short . class , String . class , " AnyValueIsAccepted " , " ? YOUNOWKNOWRIGHT ? " } , <nl> + { PrimaryKeyAsBoxedInteger . class , Integer . class , String . class , " PlayWithSeondFied ! " , " HaHaHaHaHaHaHaHaH " } , <nl> + { PrimaryKeyAsBoxedLong . class , Long . class , String . class , " Let ' s name a value " , " KeyValueTestIsFun " } <nl> + } ) ; <nl> + } <nl> + <nl> + final private Class < ? extends RealmObject > testClazz ; <nl> + final private Class primaryKeyFieldType ; <nl> + final private Class secondaryFieldType ; <nl> + final private Object secondaryFieldValue ; <nl> + final private Object updatingFieldValue ; <nl> + <nl> + public RealmNullPrimaryKeyTests ( Class < ? extends RealmObject > testClazz , Class primaryKeyFieldType , Class secondaryFieldType , Object secondaryFieldValue , Object updatingFieldValue ) { <nl> + this . testClazz = testClazz ; <nl> + this . primaryKeyFieldType = primaryKeyFieldType ; <nl> + this . secondaryFieldType = secondaryFieldType ; <nl> + this . secondaryFieldValue = secondaryFieldValue ; <nl> + this . updatingFieldValue = updatingFieldValue ; <nl> + } <nl> + <nl> + / / Adds a PrimaryKey object to a realm with values for its PrimaryKey field and secondary field . <nl> + private RealmObject addPrimaryKeyObjectToTestRealm ( Realm testRealm ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { <nl> + RealmObject obj = ( RealmObject ) testClazz . getConstructor ( primaryKeyFieldType , secondaryFieldType ) . newInstance ( null , secondaryFieldValue ) ; <nl> + testRealm . beginTransaction ( ) ; <nl> + testRealm . copyToRealm ( obj ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + return obj ; <nl> + } <nl> + <nl> + / / create a RealmObject with null primarykey <nl> + private void createNullPrimaryKeyObjectFromTestRealm ( Realm testRealm ) { <nl> + testRealm . beginTransaction ( ) ; <nl> + <nl> + RealmObject obj = testRealm . createObject ( testClazz , null ) ; <nl> + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { <nl> + ( ( PrimaryKeyAsString ) obj ) . setId ( ( long ) secondaryFieldValue ) ; <nl> + } else { <nl> + ( ( NullPrimaryKey ) obj ) . setName ( secondaryFieldValue ) ; <nl> + } <nl> + <nl> + testRealm . commitTransaction ( ) ; <nl> + } <nl> + <nl> + / / update existing null PrimaryKey object with a new updating value . <nl> + private void updatePrimaryKeyObject ( Realm testRealm , RealmObject realmObject ) { <nl> + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { <nl> + ( ( PrimaryKeyAsString ) realmObject ) . setId ( ( long ) updatingFieldValue ) ; <nl> + } else { <nl> + ( ( NullPrimaryKey ) realmObject ) . setName ( updatingFieldValue ) ; <nl> + } <nl> + <nl> + testRealm . beginTransaction ( ) ; <nl> + testRealm . copyToRealmOrUpdate ( realmObject ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + } <nl> + <nl> + / / @ PrimaryKey annotation accept null value properly as a primary key value for Realm version 0 . 89 . 1 + <nl> + @ Test <nl> + public void copyToRealm _ primaryKeyIsNull ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { <nl> + addPrimaryKeyObjectToTestRealm ( realm ) ; <nl> + <nl> + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { <nl> + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> + assertEquals ( secondaryFieldValue , results . first ( ) . getId ( ) ) ; <nl> + <nl> + } else { <nl> + RealmResults results = realm . where ( testClazz ) . findAll ( ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> + assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / / @ PrimaryKey annotation accept & update null value properly as a primary key value for Realm version 0 . 89 . 1 + <nl> + @ Test <nl> + public void copyToRealmOrUpdate _ primaryKeyFieldIsNull ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { <nl> + RealmObject obj = addPrimaryKeyObjectToTestRealm ( realm ) ; <nl> + <nl> + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { <nl> + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> + assertEquals ( secondaryFieldValue , results . first ( ) . getId ( ) ) ; <nl> + <nl> + } else { <nl> + RealmResults results = realm . where ( testClazz ) . findAll ( ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> + assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> + <nl> + } <nl> + <nl> + / / commit to the Realm <nl> + updatePrimaryKeyObject ( realm , obj ) ; <nl> + <nl> + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { <nl> + assertEquals ( updatingFieldValue , realm . where ( PrimaryKeyAsString . class ) . findFirst ( ) . getId ( ) ) ; <nl> + } else { <nl> + assertEquals ( updatingFieldValue , ( ( NullPrimaryKey ) realm . where ( testClazz ) . findFirst ( ) ) . getName ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / / @ PrimaryKey annotation creates null value properly as a primary key value for Realm version 0 . 89 . 1 + <nl> + @ Test <nl> + public void createObject _ primaryKeyFieldIsNull ( ) { <nl> + createNullPrimaryKeyObjectFromTestRealm ( realm ) ; <nl> + <nl> + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { <nl> + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> + assertEquals ( secondaryFieldValue , results . first ( ) . getId ( ) ) ; <nl> + <nl> + } else { <nl> + RealmResults results = realm . where ( testClazz ) . findAll ( ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> + assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / / @ PrimaryKey annotation checked duplicated null value properly as a primary key value for Realm version 0 . 89 . 1 + <nl> + @ Test <nl> + public void createObject _ duplicatedNullPrimaryKeyThrows ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { <nl> + addPrimaryKeyObjectToTestRealm ( realm ) ; <nl> + <nl> + realm . beginTransaction ( ) ; <nl> + try { <nl> + realm . createObject ( testClazz , null ) ; <nl> + fail ( " Null value as primary key already exists . " ) ; <nl> + } catch ( RealmPrimaryKeyConstraintException expected ) { <nl> + assertEquals ( " Value already exists : null " , expected . getMessage ( ) ) ; <nl> + } finally { <nl> + realm . cancelTransaction ( ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java <nl> index d642764 . . 155607b 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java <nl> @ @ - 67 , 12 + 67 , 12 @ @ public class RealmPrimaryKeyTests { <nl> @ Parameterized . Parameters <nl> public static Iterable < Object [ ] > data ( ) { <nl> return Arrays . asList ( new Object [ ] [ ] { <nl> - / / 1 ) Test target class 2 ) PK Class 3 ) PK value 4 ) 2nd Class 5 ) 2nd field value <nl> - { PrimaryKeyRequiredAsString . class , String . class , " 424123 " , String . class , " SomeSecondaryValue " } , <nl> - { PrimaryKeyRequiredAsBoxedByte . class , Byte . class , Byte . valueOf ( " 67 " ) , String . class , " This - Is - Second - One " } , <nl> - { PrimaryKeyRequiredAsBoxedShort . class , Short . class , Short . valueOf ( " 1729 " ) , String . class , " AnyValueIsAccepted " } , <nl> - { PrimaryKeyRequiredAsBoxedInteger . class , Integer . class , Integer . valueOf ( " 19 " ) , String . class , " PlayWithSeondFied ! " } , <nl> - { PrimaryKeyRequiredAsBoxedLong . class , Long . class , Long . valueOf ( " 62914 " ) , String . class , " Let ' s name a value " } <nl> + / / 1 ) Test target class 2 ) PK Class 3 ) PK value 4 ) 2nd Class 5 ) 2nd field value <nl> + { PrimaryKeyRequiredAsString . class , String . class , " 424123 " , String . class , " SomeSecondaryValue " } , <nl> + { PrimaryKeyRequiredAsBoxedByte . class , Byte . class , Byte . valueOf ( " 67 " ) , String . class , " This - Is - Second - One " } , <nl> + { PrimaryKeyRequiredAsBoxedShort . class , Short . class , Short . valueOf ( " 1729 " ) , String . class , " AnyValueIsAccepted " } , <nl> + { PrimaryKeyRequiredAsBoxedInteger . class , Integer . class , Integer . valueOf ( " 19 " ) , String . class , " PlayWithSeondFied ! " } , <nl> + { PrimaryKeyRequiredAsBoxedLong . class , Long . class , Long . valueOf ( " 62914 " ) , String . class , " Let ' s name a value " } <nl> } ) ; <nl> } <nl> <nl> @ @ - 107 , 9 + 107 , 10 @ @ public class RealmPrimaryKeyTests { <nl> / / @ PrimaryKey + @ Required annotation does accept null as a primary key value for Realm version 0 . 89 . 1 + <nl> @ Test <nl> public void copyToRealmOrUpdate _ requiredPrimaryKeyThrows ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { <nl> + RealmObject obj = ( RealmObject ) testClazz . getConstructor ( primaryKeyFieldType , secondaryFieldType ) . newInstance ( null , null ) ; <nl> + <nl> + realm . beginTransaction ( ) ; <nl> try { <nl> - RealmObject obj = ( RealmObject ) testClazz . getConstructor ( primaryKeyFieldType , secondaryFieldType ) . newInstance ( null , null ) ; <nl> - realm . beginTransaction ( ) ; <nl> realm . copyToRealmOrUpdate ( obj ) ; <nl> fail ( " @ PrimaryKey + @ Required field cannot be null " ) ; <nl> } catch ( RuntimeException expected ) { <nl> @ @ - 123 , 4 + 124 , 18 @ @ public class RealmPrimaryKeyTests { <nl> realm . cancelTransaction ( ) ; <nl> } <nl> } <nl> + <nl> + / / @ PrimaryKey + @ Required annotation does not accept null as a primary key value for Realm version 0 . 89 . 1 + <nl> + @ Test <nl> + public void createObject _ nullPrimaryKeyValueThrows ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { <nl> + realm . beginTransaction ( ) ; <nl> + try { <nl> + realm . createObject ( testClazz , null ) ; <nl> + fail ( " @ PrimaryKey + @ Required field cannot be null " ) ; <nl> + } catch ( RuntimeException expected ) { <nl> + assertTrue ( expected instanceof IllegalArgumentException ) ; <nl> + } finally { <nl> + realm . cancelTransaction ( ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index b6ba109 . . d9d6947 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 1217 , 35 + 1217 , 6 @ @ public class RealmTests { <nl> } <nl> <nl> @ Test <nl> - public void copyToRealm _ stringPrimaryKeyIsNull ( ) { <nl> - final long SECONDARY _ FIELD _ VALUE = 34992142L ; <nl> - TestHelper . addStringPrimaryKeyObjectToTestRealm ( realm , ( String ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; <nl> - assertEquals ( 1 , results . size ( ) ) ; <nl> - assertEquals ( null , results . first ( ) . getName ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , results . first ( ) . getId ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void copyToRealm _ boxedNumberPrimaryKeyIsNull ( ) { <nl> - final String SECONDARY _ FIELD _ VALUE = " nullNumberPrimaryKeyObj " ; <nl> - final Class [ ] CLASSES = { PrimaryKeyAsBoxedByte . class , PrimaryKeyAsBoxedShort . class , PrimaryKeyAsBoxedInteger . class , PrimaryKeyAsBoxedLong . class } ; <nl> - <nl> - TestHelper . addBytePrimaryKeyObjectToTestRealm ( realm , ( Byte ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - TestHelper . addShortPrimaryKeyObjectToTestRealm ( realm , ( Short ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - TestHelper . addIntegerPrimaryKeyObjectToTestRealm ( realm , ( Integer ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - TestHelper . addLongPrimaryKeyObjectToTestRealm ( realm , ( Long ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - for ( Class clazz : CLASSES ) { <nl> - RealmResults results = realm . allObjects ( clazz ) ; <nl> - assertEquals ( 1 , results . size ( ) ) ; <nl> - assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; <nl> - } <nl> - } <nl> - <nl> - @ Test <nl> public void copyToRealm _ duplicatedNullPrimaryKeyThrows ( ) { <nl> final String [ ] PRIMARY _ KEY _ TYPES = { " String " , " BoxedByte " , " BoxedShort " , " BoxedInteger " , " BoxedLong " } ; <nl> <nl> @ @ - 1360 , 106 + 1331 , 6 @ @ public class RealmTests { <nl> } <nl> <nl> @ Test <nl> - public void copyToRealmOrUpdate _ stringPrimaryKeyFieldIsNull ( ) { <nl> - final long SECONDARY _ FIELD _ VALUE = 2192841L ; <nl> - final long SECONDARY _ FIELD _ UPDATED = 44887612L ; <nl> - PrimaryKeyAsString nullPrimaryKeyObj = TestHelper . addStringPrimaryKeyObjectToTestRealm ( realm , ( String ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - RealmResults < PrimaryKeyAsString > result = realm . allObjects ( PrimaryKeyAsString . class ) ; <nl> - assertEquals ( 1 , result . size ( ) ) ; <nl> - assertEquals ( null , result . first ( ) . getName ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getId ( ) ) ; <nl> - <nl> - / / update objects <nl> - realm . beginTransaction ( ) ; <nl> - nullPrimaryKeyObj . setId ( SECONDARY _ FIELD _ UPDATED ) ; <nl> - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; <nl> - realm . commitTransaction ( ) ; <nl> - <nl> - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsString . class ) . first ( ) . getId ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void copyToRealmOrUpdate _ boxedBytePrimaryKeyFieldIsNull ( ) { <nl> - final String SECONDARY _ FIELD _ VALUE = " nullBytePrimaryKeyObj " ; <nl> - final String SECONDARY _ FIELD _ UPDATED = " nullBytePrimaryKeyObjUpdated " ; <nl> - PrimaryKeyAsBoxedByte nullPrimaryKeyObj = TestHelper . addBytePrimaryKeyObjectToTestRealm ( realm , ( Byte ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - RealmResults < PrimaryKeyAsBoxedByte > result = realm . allObjects ( PrimaryKeyAsBoxedByte . class ) ; <nl> - assertEquals ( 1 , result . size ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; <nl> - assertEquals ( null , result . first ( ) . getId ( ) ) ; <nl> - <nl> - / / update objects <nl> - realm . beginTransaction ( ) ; <nl> - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; <nl> - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; <nl> - realm . commitTransaction ( ) ; <nl> - <nl> - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedByte . class ) . first ( ) . getName ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void copyToRealmOrUpdate _ boxedShortPrimaryKeyFieldIsNull ( ) { <nl> - final String SECONDARY _ FIELD _ VALUE = " nullShortPrimaryKeyObj " ; <nl> - final String SECONDARY _ FIELD _ UPDATED = " nullShortPrimaryKeyObjUpdated " ; <nl> - PrimaryKeyAsBoxedShort nullPrimaryKeyObj = TestHelper . addShortPrimaryKeyObjectToTestRealm ( realm , ( Short ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - RealmResults < PrimaryKeyAsBoxedShort > result = realm . allObjects ( PrimaryKeyAsBoxedShort . class ) ; <nl> - assertEquals ( 1 , result . size ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; <nl> - assertEquals ( null , result . first ( ) . getId ( ) ) ; <nl> - <nl> - / / update objects <nl> - realm . beginTransaction ( ) ; <nl> - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; <nl> - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; <nl> - realm . commitTransaction ( ) ; <nl> - <nl> - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedShort . class ) . first ( ) . getName ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void copyToRealmOrUpdate _ boxedIntegerPrimaryKeyFieldIsNull ( ) { <nl> - final String SECONDARY _ FIELD _ VALUE = " nullIntegerPrimaryKeyObj " ; <nl> - final String SECONDARY _ FIELD _ UPDATED = " nullIntegerPrimaryKeyObjUpdated " ; <nl> - PrimaryKeyAsBoxedInteger nullPrimaryKeyObj = TestHelper . addIntegerPrimaryKeyObjectToTestRealm ( realm , ( Integer ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - RealmResults < PrimaryKeyAsBoxedInteger > result = realm . allObjects ( PrimaryKeyAsBoxedInteger . class ) ; <nl> - assertEquals ( 1 , result . size ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; <nl> - assertEquals ( null , result . first ( ) . getId ( ) ) ; <nl> - <nl> - / / update objects <nl> - realm . beginTransaction ( ) ; <nl> - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; <nl> - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; <nl> - realm . commitTransaction ( ) ; <nl> - <nl> - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedInteger . class ) . first ( ) . getName ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> - public void copyToRealmOrUpdate _ boxedLongPrimaryKeyFieldIsNull ( ) { <nl> - final String SECONDARY _ FIELD _ VALUE = " nullLongPrimaryKeyObj " ; <nl> - final String SECONDARY _ FIELD _ UPDATED = " nullLongPrimaryKeyObjUpdated " ; <nl> - PrimaryKeyAsBoxedLong nullPrimaryKeyObj = TestHelper . addLongPrimaryKeyObjectToTestRealm ( realm , ( Long ) null , SECONDARY _ FIELD _ VALUE ) ; <nl> - <nl> - RealmResults < PrimaryKeyAsBoxedLong > result = realm . allObjects ( PrimaryKeyAsBoxedLong . class ) ; <nl> - assertEquals ( 1 , result . size ( ) ) ; <nl> - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; <nl> - assertEquals ( null , result . first ( ) . getId ( ) ) ; <nl> - <nl> - / / update objects <nl> - realm . beginTransaction ( ) ; <nl> - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; <nl> - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; <nl> - realm . commitTransaction ( ) ; <nl> - <nl> - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedLong . class ) . first ( ) . getName ( ) ) ; <nl> - } <nl> - <nl> - @ Test <nl> public void copyToRealmOrUpdate _ noPrimaryKeyField ( ) { <nl> realm . beginTransaction ( ) ; <nl> thrown . expect ( IllegalArgumentException . class ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java <nl> index dbd8689 . . f244ea1 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java <nl> @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedByte extends RealmObject implements NullPrimaryKey <nl> <nl> private String name ; <nl> <nl> + public PrimaryKeyAsBoxedByte ( ) { } <nl> + public PrimaryKeyAsBoxedByte ( Byte id , String name ) { <nl> + this . id = id ; <nl> + this . name = name ; <nl> + } <nl> + <nl> @ Override <nl> public Byte getId ( ) { <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Byte id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedByte extends RealmObject implements NullPrimaryKey <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java <nl> index 5465f07 . . 34179ca 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java <nl> @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedInteger extends RealmObject implements NullPrimary <nl> <nl> private String name ; <nl> <nl> + public PrimaryKeyAsBoxedInteger ( ) { } <nl> + public PrimaryKeyAsBoxedInteger ( Integer id , String name ) { <nl> + this . id = id ; <nl> + this . name = name ; <nl> + } <nl> + <nl> @ Override <nl> public Integer getId ( ) { <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Integer id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedInteger extends RealmObject implements NullPrimary <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java <nl> index 53a0187 . . 6ad4929 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java <nl> @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedLong extends RealmObject implements NullPrimaryKey <nl> <nl> private String name ; <nl> <nl> + public PrimaryKeyAsBoxedLong ( ) { } <nl> + public PrimaryKeyAsBoxedLong ( Long id , String name ) { <nl> + this . id = id ; <nl> + this . name = name ; <nl> + } <nl> + <nl> @ Override <nl> public Long getId ( ) { <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Long id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedLong extends RealmObject implements NullPrimaryKey <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java <nl> index 402f4b6 . . 14ce765 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java <nl> @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedShort extends RealmObject implements NullPrimaryKe <nl> <nl> private String name ; <nl> <nl> + public PrimaryKeyAsBoxedShort ( ) { } <nl> + public PrimaryKeyAsBoxedShort ( Short id , String name ) { <nl> + this . id = id ; <nl> + this . name = name ; <nl> + } <nl> + <nl> @ Override <nl> public Short getId ( ) { <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Short id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedShort extends RealmObject implements NullPrimaryKe <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java <nl> index c64e964 . . 5e70b43 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ package io . realm . entities ; <nl> <nl> import io . realm . RealmObject ; <nl> import io . realm . annotations . PrimaryKey ; <nl> + import io . realm . objectid . NullPrimaryKey ; <nl> <nl> public class PrimaryKeyAsString extends RealmObject { <nl> <nl> @ @ - 29 , 7 + 30 , 10 @ @ public class PrimaryKeyAsString extends RealmObject { <nl> <nl> private long id ; <nl> <nl> - public PrimaryKeyAsString ( ) { <nl> + public PrimaryKeyAsString ( ) { } <nl> + public PrimaryKeyAsString ( String name , long id ) { <nl> + this . name = name ; <nl> + this . id = id ; <nl> } <nl> <nl> public PrimaryKeyAsString ( String name ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java <nl> index 20979c2 . . 88e1e72 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedByte extends RealmObject implements NullPr <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Byte id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedByte extends RealmObject implements NullPr <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java <nl> index bb8ecfb . . 7f3756e 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedInteger extends RealmObject implements Nul <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Integer id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedInteger extends RealmObject implements Nul <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java <nl> index fe526e1 . . 52092b7 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedLong extends RealmObject implements NullPr <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Long id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedLong extends RealmObject implements NullPr <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java <nl> index 3c14549 . . 7c31a29 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedShort extends RealmObject implements NullP <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( Short id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedShort extends RealmObject implements NullP <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java <nl> index 4daa2d8 . . dc4aadd 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java <nl> @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsString extends RealmObject implements NullPrima <nl> return id ; <nl> } <nl> <nl> + @ Override <nl> public void setId ( String id ) { <nl> this . id = id ; <nl> } <nl> @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsString extends RealmObject implements NullPrima <nl> return name ; <nl> } <nl> <nl> + @ Override <nl> public void setName ( String name ) { <nl> this . name = name ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java b / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java <nl> index 527825c . . 3ed5672 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java <nl> @ @ - 20 , 5 + 20 , 9 @ @ public interface NullPrimaryKey < P , S > { <nl> <nl> public P getId ( ) ; <nl> <nl> + public void setId ( P id ) ; <nl> + <nl> public S getName ( ) ; <nl> + <nl> + public void setName ( S name ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm <nl> new file mode 100644 <nl> index 0000000 . . d049e3b <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm <nl> new file mode 100644 <nl> index 0000000 . . 0660c84 <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm <nl> new file mode 100644 <nl> index 0000000 . . 1002549 <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm <nl> new file mode 100644 <nl> index 0000000 . . 3f32700 <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / README b / realm / src / androidTest / assets / ios / README <nl> new file mode 100644 <nl> index 0000000 . . 0f30efc <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / assets / ios / README <nl> @ @ - 0 , 0 + 1 , 149 @ @ <nl> + This folder contains various Realm databases created on iOS and can be used to test interop with <nl> + Realm - Android . <nl> + <nl> + The databases are generated using the following iOS code : <nl> + <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / <nl> + / / Copyright 2014 Realm Inc . <nl> + / / <nl> + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + / / you may not use this file except in compliance with the License . <nl> + / / You may obtain a copy of the License at <nl> + / / <nl> + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + / / <nl> + / / Unless required by applicable law or agreed to in writing , software <nl> + / / distributed under the License is distributed on an " AS IS " BASIS , <nl> + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + / / See the License for the specific language governing permissions and <nl> + / / limitations under the License . <nl> + / / <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + # import " AppDelegate . h " <nl> + # import < Realm / Realm . h > <nl> + <nl> + @ interface IOSChild : RLMObject <nl> + @ property NSString * name ; <nl> + @ end <nl> + RLM _ ARRAY _ TYPE ( IOSChild ) <nl> + <nl> + @ implementation IOSChild <nl> + @ end <nl> + <nl> + @ interface IOSAllTypes : RLMObject <nl> + @ property bool boolCol ; <nl> + @ property short shortCol ; <nl> + @ property int intCol ; <nl> + @ property long longCol ; <nl> + @ property float floatCol ; <nl> + @ property double doubleCol ; <nl> + @ property NSData * byteCol ; <nl> + @ property NSString * stringCol ; <nl> + @ property NSDate * dateCol ; <nl> + @ property IOSChild * child ; <nl> + @ property RLMArray < IOSChild > * children ; <nl> + @ end <nl> + RLM _ ARRAY _ TYPE ( AllTypes ) <nl> + <nl> + @ implementation IOSAllTypes <nl> + / / + ( NSString * ) primaryKey { <nl> + / / return @ " longCol " ; <nl> + / / } <nl> + @ end <nl> + <nl> + @ implementation AppDelegate <nl> + <nl> + - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions <nl> + { <nl> + self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; <nl> + self . window . rootViewController = [ [ UIViewController alloc ] init ] ; <nl> + [ self . window makeKeyAndVisible ] ; <nl> + <nl> + const unsigned char no _ bytes [ ] = { } ; <nl> + const unsigned char bytes [ ] = { 1 , 2 , 3 } ; <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes . realm " ] ; <nl> + RLMRealm * realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = TRUE ; <nl> + obj . shortCol = 1 + i ; <nl> + obj . intCol = 10 + i ; <nl> + obj . longCol = 100 + i ; <nl> + obj . floatCol = 1 . 23 + i ; <nl> + obj . doubleCol = 1 . 234 + i ; <nl> + obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; <nl> + obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; <nl> + <nl> + obj . child = [ [ IOSChild alloc ] init ] ; <nl> + obj . child . name = @ " Foo " ; <nl> + for ( int j = 0 ; j < 10 ; j + + ) { <nl> + IOSChild * c = [ [ IOSChild alloc ] init ] ; <nl> + c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; <nl> + [ obj . children addObject : c ] ; <nl> + } <nl> + [ realm addObject : obj ] ; <nl> + } <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - default . realm " ] ; <nl> + realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - min . realm " ] ; <nl> + realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = FALSE ; <nl> + obj . shortCol = SHRT _ MIN ; <nl> + obj . intCol = INT _ MIN ; <nl> + obj . longCol = LONG _ MIN ; <nl> + obj . floatCol = FLT _ MIN ; <nl> + obj . doubleCol = DBL _ MIN ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - max . realm " ] ; <nl> + realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = TRUE ; <nl> + obj . shortCol = SHRT _ MAX ; <nl> + obj . intCol = INT _ MAX ; <nl> + obj . longCol = LONG _ MAX ; <nl> + obj . floatCol = FLT _ MAX ; <nl> + obj . doubleCol = DBL _ MAX ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : LONG _ MAX ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + NSLog ( @ " Done " ) ; <nl> + return YES ; <nl> + } <nl> + <nl> + + ( void ) setDefaultRealm : ( NSString * ) realmName <nl> + { <nl> + NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; <nl> + NSString * allTypesRealm = [ documentsDirectory stringByAppendingPathComponent : realmName ] ; <nl> + [ RLMRealm setDefaultRealmPath : allTypesRealm ] ; <nl> + [ [ NSFileManager defaultManager ] removeItemAtPath : [ RLMRealm defaultRealmPath ] error : nil ] ; <nl> + } <nl> + @ end <nl> diff - - git a / realm / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / src / androidTest / java / io / realm / IOSRealmTests . java <nl> new file mode 100644 <nl> index 0000000 . . c89aa0d <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / java / io / realm / IOSRealmTests . java <nl> @ @ - 0 , 0 + 1 , 99 @ @ <nl> + package io . realm ; <nl> + <nl> + import android . test . AndroidTestCase ; <nl> + <nl> + import java . io . IOException ; <nl> + import java . util . Date ; <nl> + <nl> + import io . realm . entities . IOSAllTypes ; <nl> + import io . realm . entities . IOSChild ; <nl> + <nl> + import static io . realm . internal . test . ExtraTests . assertArrayEquals ; <nl> + <nl> + / * * <nl> + * This class test interoperability with Realms created on iOS . <nl> + * / <nl> + public class IOSRealmTests extends AndroidTestCase { <nl> + <nl> + private static final String REALM _ NAME = " alltypes . realm " ; <nl> + private Realm realm ; <nl> + <nl> + @ Override <nl> + protected void setUp ( ) throws Exception { <nl> + super . setUp ( ) ; <nl> + Realm . setSchema ( IOSAllTypes . class , IOSChild . class ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void tearDown ( ) throws Exception { <nl> + super . tearDown ( ) ; <nl> + Realm . setSchema ( null ) ; <nl> + if ( realm ! = null ) { <nl> + realm . close ( ) ; <nl> + } <nl> + } <nl> + <nl> + / / Test relationships and that data in general can be retrieved from an iOS realm <nl> + public void testIOSDatatypes ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + RealmResults < IOSAllTypes > result = realm . allObjectsSorted ( IOSAllTypes . class , " longCol " , RealmResults . SORT _ ORDER _ ASCENDING ) ; <nl> + <nl> + IOSAllTypes obj = result . get ( 1 ) ; <nl> + assertTrue ( obj . isBoolCol ( ) ) ; <nl> + assertEquals ( 2 , obj . getShortCol ( ) ) ; <nl> + assertEquals ( 11 , obj . getIntCol ( ) ) ; <nl> + assertEquals ( 101L , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 2 . 23F , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( 2 . 234D , obj . getDoubleCol ( ) ) ; <nl> + assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " String 1 " , obj . getStringCol ( ) ) ; <nl> + assertEquals ( new Date ( 1001 * 1000 ) , obj . getDateCol ( ) ) ; <nl> + assertEquals ( " Foo " , result . get ( 1 ) . getChild ( ) . getName ( ) ) ; <nl> + assertEquals ( 10 , result . size ( ) ) ; <nl> + assertEquals ( 10 , result . get ( 1 ) . getChildren ( ) . size ( ) ) ; <nl> + assertEquals ( " Name : 1 " , result . get ( 1 ) . getChildren ( ) . get ( 1 ) . getName ( ) ) ; <nl> + } <nl> + <nl> + public void testIOSDatatypesDefaultValues ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - default . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertFalse ( obj . isBoolCol ( ) ) ; <nl> + assertEquals ( 0 , obj . getShortCol ( ) ) ; <nl> + assertEquals ( 0 , obj . getIntCol ( ) ) ; <nl> + assertEquals ( 0L , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 0 . 0F , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( 0 . 0D , obj . getDoubleCol ( ) ) ; <nl> + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " " , obj . getStringCol ( ) ) ; <nl> + assertEquals ( new Date ( 0 ) , obj . getDateCol ( ) ) ; <nl> + assertNull ( obj . getChild ( ) ) ; <nl> + assertEquals ( 0 , obj . getChildren ( ) . size ( ) ) ; <nl> + } <nl> + <nl> + public void testIOSDatatypesMinimumValues ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - min . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertEquals ( Short . MIN _ VALUE , obj . getShortCol ( ) ) ; <nl> + assertEquals ( Integer . MIN _ VALUE , obj . getIntCol ( ) ) ; <nl> + assertEquals ( Long . MIN _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Float . MIN _ NORMAL , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( Double . MIN _ NORMAL , obj . getDoubleCol ( ) ) ; <nl> + } <nl> + <nl> + public void testIOSDatatypesMaximumValues ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - max . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertEquals ( Short . MAX _ VALUE , obj . getShortCol ( ) ) ; <nl> + assertEquals ( Integer . MAX _ VALUE , obj . getIntCol ( ) ) ; <nl> + assertEquals ( Long . MAX _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Float . MAX _ VALUE , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( Double . MAX _ VALUE , obj . getDoubleCol ( ) ) ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> index c798a35 . . 680965a 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> @ @ - 1 , 37 + 1 , 18 @ @ <nl> package io . realm ; <nl> <nl> - import android . content . res . AssetManager ; <nl> import android . test . AndroidTestCase ; <nl> <nl> - import java . io . File ; <nl> - import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> <nl> import io . realm . entities . AllTypes ; <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> <nl> public class RealmMigrationTests extends AndroidTestCase { <nl> <nl> - / / Copies a Realm file from assets to app files dir <nl> - private void copyRealmFromAssets ( String fileName ) throws IOException { <nl> - AssetManager assetManager = getContext ( ) . getAssets ( ) ; <nl> - InputStream is = assetManager . open ( fileName ) ; <nl> - File file = new File ( getContext ( ) . getFilesDir ( ) , fileName ) ; <nl> - FileOutputStream outputStream = new FileOutputStream ( file ) ; <nl> - byte [ ] buf = new byte [ 1024 ] ; <nl> - int bytesRead ; <nl> - while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { <nl> - outputStream . write ( buf , 0 , bytesRead ) ; <nl> - } <nl> - outputStream . close ( ) ; <nl> - is . close ( ) ; <nl> - } <nl> - <nl> public void testRealmClosedAfterMigrationException ( ) throws IOException { <nl> String REALM _ NAME = " default0 . realm " ; <nl> Realm . deleteRealmFile ( getContext ( ) , REALM _ NAME ) ; <nl> - copyRealmFromAssets ( REALM _ NAME ) ; <nl> + TestHelper . copyRealmFromAssets ( getContext ( ) , REALM _ NAME , REALM _ NAME ) ; <nl> try { <nl> Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> fail ( " A migration should be triggered " ) ; <nl> diff - - git a / realm / src / androidTest / java / io / realm / TestHelper . java b / realm / src / androidTest / java / io / realm / TestHelper . java <nl> index fb2bd93 . . 5d1d27a 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 16 , 6 + 16 , 14 @ @ <nl> <nl> package io . realm ; <nl> <nl> + import android . content . Context ; <nl> + import android . content . res . AssetManager ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . FileOutputStream ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + <nl> import io . realm . entities . AllTypes ; <nl> <nl> public class TestHelper { <nl> @ @ - 35 , 4 + 43 , 25 @ @ public class TestHelper { <nl> object3 . setColumnString ( " Adam " ) ; <nl> testRealm . commitTransaction ( ) ; <nl> } <nl> + <nl> + / / Copies a Realm file from assets to app files dir <nl> + public static void copyRealmFromAssets ( Context context , String realmPath , String newName ) throws IOException { <nl> + AssetManager assetManager = context . getAssets ( ) ; <nl> + InputStream is = assetManager . open ( realmPath ) ; <nl> + File file = new File ( context . getFilesDir ( ) , newName ) ; <nl> + FileOutputStream outputStream = new FileOutputStream ( file ) ; <nl> + byte [ ] buf = new byte [ 1024 ] ; <nl> + int bytesRead ; <nl> + while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { <nl> + outputStream . write ( buf , 0 , bytesRead ) ; <nl> + } <nl> + outputStream . close ( ) ; <nl> + is . close ( ) ; <nl> + } <nl> + <nl> + / / Deletes the old database and copies a new one into its place <nl> + public static void prepareDatabaseFromAssets ( Context context , String realmPath , String newName ) throws IOException { <nl> + Realm . deleteRealmFile ( context , newName ) ; <nl> + TestHelper . copyRealmFromAssets ( context , realmPath , newName ) ; <nl> + } <nl> } <nl> diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> new file mode 100644 <nl> index 0000000 . . 14fb439 <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> @ @ - 0 , 0 + 1 , 109 @ @ <nl> + package io . realm . entities ; <nl> + <nl> + import java . util . Date ; <nl> + <nl> + import io . realm . RealmList ; <nl> + import io . realm . RealmObject ; <nl> + <nl> + public class IOSAllTypes extends RealmObject { <nl> + <nl> + private boolean boolCol ; <nl> + private short shortCol ; <nl> + private int intCol ; <nl> + private long longCol ; <nl> + private float floatCol ; <nl> + private double doubleCol ; <nl> + private byte [ ] byteCol ; <nl> + private String stringCol ; <nl> + private Date dateCol ; <nl> + private IOSChild child ; <nl> + private RealmList < IOSChild > children ; <nl> + <nl> + public boolean isBoolCol ( ) { <nl> + return boolCol ; <nl> + } <nl> + <nl> + public void setBoolCol ( boolean boolCol ) { <nl> + this . boolCol = boolCol ; <nl> + } <nl> + <nl> + public short getShortCol ( ) { <nl> + return shortCol ; <nl> + } <nl> + <nl> + public void setShortCol ( short shortCol ) { <nl> + this . shortCol = shortCol ; <nl> + } <nl> + <nl> + public int getIntCol ( ) { <nl> + return intCol ; <nl> + } <nl> + <nl> + public void setIntCol ( int intCol ) { <nl> + this . intCol = intCol ; <nl> + } <nl> + <nl> + public long getLongCol ( ) { <nl> + return longCol ; <nl> + } <nl> + <nl> + public void setLongCol ( long longCol ) { <nl> + this . longCol = longCol ; <nl> + } <nl> + <nl> + public float getFloatCol ( ) { <nl> + return floatCol ; <nl> + } <nl> + <nl> + public void setFloatCol ( float floatCol ) { <nl> + this . floatCol = floatCol ; <nl> + } <nl> + <nl> + public double getDoubleCol ( ) { <nl> + return doubleCol ; <nl> + } <nl> + <nl> + public void setDoubleCol ( double doubleCol ) { <nl> + this . doubleCol = doubleCol ; <nl> + } <nl> + <nl> + public byte [ ] getByteCol ( ) { <nl> + return byteCol ; <nl> + } <nl> + <nl> + public void setByteCol ( byte [ ] byteCol ) { <nl> + this . byteCol = byteCol ; <nl> + } <nl> + <nl> + public String getStringCol ( ) { <nl> + return stringCol ; <nl> + } <nl> + <nl> + public void setStringCol ( String stringCol ) { <nl> + this . stringCol = stringCol ; <nl> + } <nl> + <nl> + public Date getDateCol ( ) { <nl> + return dateCol ; <nl> + } <nl> + <nl> + public void setDateCol ( Date dateCol ) { <nl> + this . dateCol = dateCol ; <nl> + } <nl> + <nl> + public IOSChild getChild ( ) { <nl> + return child ; <nl> + } <nl> + <nl> + public void setChild ( IOSChild child ) { <nl> + this . child = child ; <nl> + } <nl> + <nl> + public RealmList < IOSChild > getChildren ( ) { <nl> + return children ; <nl> + } <nl> + <nl> + public void setChildren ( RealmList < IOSChild > children ) { <nl> + this . children = children ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSChild . java b / realm / src / androidTest / java / io / realm / entities / IOSChild . java <nl> new file mode 100644 <nl> index 0000000 . . f041de1 <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / java / io / realm / entities / IOSChild . java <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + package io . realm . entities ; <nl> + <nl> + import io . realm . RealmObject ; <nl> + <nl> + public class IOSChild extends RealmObject { <nl> + private String name ; <nl> + <nl> + public String getName ( ) { <nl> + return name ; <nl> + } <nl> + <nl> + public void setName ( String name ) { <nl> + this . name = name ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 389e5c8 . . ffd4696 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 40 , 8 + 40 , 10 @ @ import java . lang . reflect . Method ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> import java . util . UUID ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> @ @ - 164 , 6 + 166 , 7 @ @ public final class Realm implements Closeable { <nl> private final Map < Class < ? > , Constructor > generatedConstructors = new HashMap < Class < ? > , Constructor > ( ) ; <nl> private final List < RealmChangeListener > changeListeners = new ArrayList < RealmChangeListener > ( ) ; <nl> private final Map < Class < ? > , Table > tables = new HashMap < Class < ? > , Table > ( ) ; <nl> + private static final Set < Class < ? extends RealmObject > > customSchema = new HashSet < Class < ? extends RealmObject > > ( ) ; <nl> private static final long UNVERSIONED = - 1 ; <nl> <nl> / / Package protected to be reachable by proxy classes <nl> @ @ - 539 , 6 + 542 , 14 @ @ public final class Realm implements Closeable { <nl> throw new RealmException ( " An exception was thrown in the getProxyClasses method in the ValidationList class : " + APT _ NOT _ EXECUTED _ MESSAGE ) ; <nl> } <nl> <nl> + / / Custom schema overrides any schema already defined <nl> + if ( customSchema . size ( ) > 0 ) { <nl> + proxyClasses = new ArrayList < String > ( ) ; <nl> + for ( Class < ? extends RealmObject > clazz : customSchema ) { <nl> + proxyClasses . add ( clazz . getName ( ) ) ; <nl> + } <nl> + } <nl> + <nl> long version = realm . getVersion ( ) ; <nl> boolean commitNeeded = false ; <nl> try { <nl> @ @ - 1538 , 6 + 1549 , 25 @ @ public final class Realm implements Closeable { <nl> return path ; <nl> } <nl> <nl> + <nl> + / * * <nl> + * Override the standard behavior of all classes extended RealmObject being part of the schema . <nl> + * Use this method to define the schema as only the classes given here . <nl> + * <nl> + * This class must be called before calling { @ link # getInstance ( android . content . Context ) } <nl> + * <nl> + * If { @ code null } is given as parameter , the Schema is reset to use all known classes . <nl> + * <nl> + * / <nl> + public static void setSchema ( Class < ? extends RealmObject > . . . schemaClass ) { <nl> + customSchema . clear ( ) ; <nl> + if ( schemaClass ! = null ) { <nl> + for ( int i = 0 ; i < schemaClass . length ; i + + ) { <nl> + customSchema . add ( schemaClass [ i ] ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> / * * <nl> * Encapsulates a Realm transaction . <nl> * <nl> diff - - git a / settings . gradle b / settings . gradle <nl> index d0eb928 . . 698a425 100644 <nl> - - - a / settings . gradle <nl> + + + b / settings . gradle <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / / Realm projects <nl> - include ' realm ' <nl> + include ' realm ' , ' : realm - annotations - processor ' <nl> <nl> / / Example projects <nl> include ' : introExample ' ,

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java 
 index c5d6cc8 . . c5482eb 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java 
 @ @ - 61 , 24 + 61 , 24 @ @ public class RealmJsonNullPrimaryKeyTests { 
 @ Parameterized . Parameters 
 public static Iterable < Object [ ] > data ( ) { 
 return Arrays . asList ( new Object [ ] [ ] { 
 - { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedByte . class } 
 - , { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedShort . class } 
 - , { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedInteger . class } 
 - , { " { \ " id \ " : null , \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedLong . class } 
 - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedByte . class } 
 - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedShort . class } 
 - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedInteger . class } 
 - , { " { \ " name \ " : \ " nullPrimaryKeyObj \ " } " , " nullPrimaryKeyObj " , PrimaryKeyAsBoxedLong . class } 
 - , { " { \ " name \ " : null , \ " id \ " : 4299214 } " , " 4299214 " , PrimaryKeyAsString . class } 
 - , { " { \ " id \ " : 4299214 } " , " 4299214 " , PrimaryKeyAsString . class } 
 + { PrimaryKeyAsBoxedByte . class , " OhThisIsNullKey ? ! " , " { \ " id \ " : null , \ " name \ " : \ " OhThisIsNullKey ? ! \ " } " } , 
 + { PrimaryKeyAsBoxedShort . class , " YouBetItIsNullKey " , " { \ " id \ " : null , \ " name \ " : \ " YouBetItIsNullKey \ " } " } , 
 + { PrimaryKeyAsBoxedInteger . class , " Gosh Didnt KnowIt " , " { \ " id \ " : null , \ " name \ " : \ " Gosh Didnt KnowIt \ " } " } , 
 + { PrimaryKeyAsBoxedLong . class , " ? YOUNOWKNOWRIGHT ? " , " { \ " id \ " : null , \ " name \ " : \ " ? YOUNOWKNOWRIGHT ? \ " } " } , 
 + { PrimaryKeyAsBoxedByte . class , " HaHaHaHaHaHaHaHaH " , " { \ " name \ " : \ " HaHaHaHaHaHaHaHaH \ " } " } , 
 + { PrimaryKeyAsBoxedShort . class , " KeyValueTestIsFun " , " { \ " name \ " : \ " KeyValueTestIsFun \ " } " } , 
 + { PrimaryKeyAsBoxedInteger . class , " FunValueTestIsKey " , " { \ " name \ " : \ " FunValueTestIsKey \ " } " } , 
 + { PrimaryKeyAsBoxedLong . class , " NameAsBoxedLong - ! " , " { \ " name \ " : \ " NameAsBoxedLong - ! \ " } " } , 
 + { PrimaryKeyAsString . class , " 4299121 " , " { \ " name \ " : null , \ " id \ " : 4299121 } " } , 
 + { PrimaryKeyAsString . class , " 2429214 " , " { \ " id \ " : 2429214 } " } 
 } ) ; 
 } 
 
 - final private String jsonString ; 
 - final private String secondaryFieldValue ; 
 final private Class < ? extends RealmObject > clazz ; 
 + final private String secondaryFieldValue ; 
 + final private String jsonString ; 
 
 - public RealmJsonNullPrimaryKeyTests ( String jsonString , String secondFieldValue , Class < ? extends RealmObject > clazz ) { 
 + public RealmJsonNullPrimaryKeyTests ( Class < ? extends RealmObject > clazz , String secondFieldValue , String jsonString ) { 
 this . jsonString = jsonString ; 
 this . secondaryFieldValue = secondFieldValue ; 
 this . clazz = clazz ; 
 @ @ - 93 , 14 + 93 , 14 @ @ public class RealmJsonNullPrimaryKeyTests { 
 
 / / PrimaryKeyAsString 
 if ( clazz . equals ( PrimaryKeyAsString . class ) ) { 
 - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; 
 + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; 
 assertEquals ( 1 , results . size ( ) ) ; 
 assertEquals ( Long . valueOf ( secondaryFieldValue ) . longValue ( ) , results . first ( ) . getId ( ) ) ; 
 assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 
 / / PrimaryKeyAsNumber 
 } else { 
 - RealmResults results = realm . allObjects ( clazz ) ; 
 + RealmResults results = realm . where ( clazz ) . findAll ( ) ; 
 assertEquals ( 1 , results . size ( ) ) ; 
 assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 @ @ - 116 , 14 + 116 , 14 @ @ public class RealmJsonNullPrimaryKeyTests { 
 
 / / PrimaryKeyAsString 
 if ( clazz . equals ( PrimaryKeyAsString . class ) ) { 
 - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; 
 + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; 
 assertEquals ( 1 , results . size ( ) ) ; 
 assertEquals ( Long . valueOf ( secondaryFieldValue ) . longValue ( ) , results . first ( ) . getId ( ) ) ; 
 assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 
 / / PrimaryKeyAsNumber 
 } else { 
 - RealmResults results = realm . allObjects ( clazz ) ; 
 + RealmResults results = realm . where ( clazz ) . findAll ( ) ; 
 assertEquals ( 1 , results . size ( ) ) ; 
 assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 @ @ - 140 , 14 + 140 , 14 @ @ public class RealmJsonNullPrimaryKeyTests { 
 
 / / PrimaryKeyAsString 
 if ( clazz . equals ( PrimaryKeyAsString . class ) ) { 
 - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; 
 + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; 
 assertEquals ( 1 , results . size ( ) ) ; 
 assertEquals ( Long . valueOf ( secondaryFieldValue ) . longValue ( ) , results . first ( ) . getId ( ) ) ; 
 assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 
 / / PrimaryKeyAsNumber 
 } else { 
 - RealmResults results = realm . allObjects ( clazz ) ; 
 + RealmResults results = realm . where ( clazz ) . findAll ( ) ; 
 assertEquals ( 1 , results . size ( ) ) ; 
 assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmNullPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmNullPrimaryKeyTests . java 
 new file mode 100644 
 index 0000000 . . 91f8540 
 - - - / dev / null 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmNullPrimaryKeyTests . java 
 @ @ - 0 , 0 + 1 , 210 @ @ 
 + / * 
 + * Copyright 2016 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm ; 
 + 
 + import org . junit . After ; 
 + import org . junit . Before ; 
 + import org . junit . Rule ; 
 + import org . junit . Test ; 
 + import org . junit . runner . RunWith ; 
 + import org . junit . runners . Parameterized ; 
 + 
 + import java . lang . reflect . InvocationTargetException ; 
 + import java . util . Arrays ; 
 + 
 + import io . realm . entities . PrimaryKeyAsBoxedByte ; 
 + import io . realm . entities . PrimaryKeyAsBoxedInteger ; 
 + import io . realm . entities . PrimaryKeyAsBoxedLong ; 
 + import io . realm . entities . PrimaryKeyAsBoxedShort ; 
 + import io . realm . entities . PrimaryKeyAsString ; 
 + import io . realm . exceptions . RealmPrimaryKeyConstraintException ; 
 + import io . realm . objectid . NullPrimaryKey ; 
 + import io . realm . rule . TestRealmConfigurationFactory ; 
 + 
 + import static org . junit . Assert . assertEquals ; 
 + import static org . junit . Assert . fail ; 
 + 
 + @ RunWith ( Parameterized . class ) 
 + public class RealmNullPrimaryKeyTests { 
 + @ Rule 
 + public final TestRealmConfigurationFactory configFactory = new TestRealmConfigurationFactory ( ) ; 
 + 
 + protected Realm realm ; 
 + 
 + @ Before 
 + public void setUp ( ) { 
 + RealmConfiguration realmConfig = configFactory . createConfiguration ( ) ; 
 + realm = Realm . getInstance ( realmConfig ) ; 
 + } 
 + 
 + @ After 
 + public void tearDown ( ) { 
 + if ( realm ! = null ) { 
 + realm . close ( ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Base parameters for testing null - primary key value . The parameters are aligned in an order of 
 + * 1 ) a test target class , 2 ) a primary key field class , 3 ) a secondary field class , 4 ) a secondary 
 + * field value , and 5 ) an update value , accommodating { @ interface NullPrimaryKey } to condense unit tests . 
 + * / 
 + @ Parameterized . Parameters 
 + public static Iterable < Object [ ] > data ( ) { 
 + return Arrays . asList ( new Object [ ] [ ] { 
 + / / 1 ) Test target class 2 ) PK Class 3 ) 2nd Class 4 ) 2nd field value 5 ) 2nd field value for update 
 + { PrimaryKeyAsString . class , String . class , long . class , Long . valueOf ( 492412 ) , Long . valueOf ( 991241 ) } , 
 + { PrimaryKeyAsBoxedByte . class , Byte . class , String . class , " This - Is - Second - One " , " Gosh Didnt KnowIt " } , 
 + { PrimaryKeyAsBoxedShort . class , Short . class , String . class , " AnyValueIsAccepted " , " ? YOUNOWKNOWRIGHT ? " } , 
 + { PrimaryKeyAsBoxedInteger . class , Integer . class , String . class , " PlayWithSeondFied ! " , " HaHaHaHaHaHaHaHaH " } , 
 + { PrimaryKeyAsBoxedLong . class , Long . class , String . class , " Let ' s name a value " , " KeyValueTestIsFun " } 
 + } ) ; 
 + } 
 + 
 + final private Class < ? extends RealmObject > testClazz ; 
 + final private Class primaryKeyFieldType ; 
 + final private Class secondaryFieldType ; 
 + final private Object secondaryFieldValue ; 
 + final private Object updatingFieldValue ; 
 + 
 + public RealmNullPrimaryKeyTests ( Class < ? extends RealmObject > testClazz , Class primaryKeyFieldType , Class secondaryFieldType , Object secondaryFieldValue , Object updatingFieldValue ) { 
 + this . testClazz = testClazz ; 
 + this . primaryKeyFieldType = primaryKeyFieldType ; 
 + this . secondaryFieldType = secondaryFieldType ; 
 + this . secondaryFieldValue = secondaryFieldValue ; 
 + this . updatingFieldValue = updatingFieldValue ; 
 + } 
 + 
 + / / Adds a PrimaryKey object to a realm with values for its PrimaryKey field and secondary field . 
 + private RealmObject addPrimaryKeyObjectToTestRealm ( Realm testRealm ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { 
 + RealmObject obj = ( RealmObject ) testClazz . getConstructor ( primaryKeyFieldType , secondaryFieldType ) . newInstance ( null , secondaryFieldValue ) ; 
 + testRealm . beginTransaction ( ) ; 
 + testRealm . copyToRealm ( obj ) ; 
 + testRealm . commitTransaction ( ) ; 
 + return obj ; 
 + } 
 + 
 + / / create a RealmObject with null primarykey 
 + private void createNullPrimaryKeyObjectFromTestRealm ( Realm testRealm ) { 
 + testRealm . beginTransaction ( ) ; 
 + 
 + RealmObject obj = testRealm . createObject ( testClazz , null ) ; 
 + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { 
 + ( ( PrimaryKeyAsString ) obj ) . setId ( ( long ) secondaryFieldValue ) ; 
 + } else { 
 + ( ( NullPrimaryKey ) obj ) . setName ( secondaryFieldValue ) ; 
 + } 
 + 
 + testRealm . commitTransaction ( ) ; 
 + } 
 + 
 + / / update existing null PrimaryKey object with a new updating value . 
 + private void updatePrimaryKeyObject ( Realm testRealm , RealmObject realmObject ) { 
 + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { 
 + ( ( PrimaryKeyAsString ) realmObject ) . setId ( ( long ) updatingFieldValue ) ; 
 + } else { 
 + ( ( NullPrimaryKey ) realmObject ) . setName ( updatingFieldValue ) ; 
 + } 
 + 
 + testRealm . beginTransaction ( ) ; 
 + testRealm . copyToRealmOrUpdate ( realmObject ) ; 
 + testRealm . commitTransaction ( ) ; 
 + } 
 + 
 + / / @ PrimaryKey annotation accept null value properly as a primary key value for Realm version 0 . 89 . 1 + 
 + @ Test 
 + public void copyToRealm _ primaryKeyIsNull ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { 
 + addPrimaryKeyObjectToTestRealm ( realm ) ; 
 + 
 + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { 
 + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 + assertEquals ( secondaryFieldValue , results . first ( ) . getId ( ) ) ; 
 + 
 + } else { 
 + RealmResults results = realm . where ( testClazz ) . findAll ( ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 + assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 + } 
 + } 
 + 
 + / / @ PrimaryKey annotation accept & update null value properly as a primary key value for Realm version 0 . 89 . 1 + 
 + @ Test 
 + public void copyToRealmOrUpdate _ primaryKeyFieldIsNull ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { 
 + RealmObject obj = addPrimaryKeyObjectToTestRealm ( realm ) ; 
 + 
 + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { 
 + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 + assertEquals ( secondaryFieldValue , results . first ( ) . getId ( ) ) ; 
 + 
 + } else { 
 + RealmResults results = realm . where ( testClazz ) . findAll ( ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 + assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 + 
 + } 
 + 
 + / / commit to the Realm 
 + updatePrimaryKeyObject ( realm , obj ) ; 
 + 
 + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { 
 + assertEquals ( updatingFieldValue , realm . where ( PrimaryKeyAsString . class ) . findFirst ( ) . getId ( ) ) ; 
 + } else { 
 + assertEquals ( updatingFieldValue , ( ( NullPrimaryKey ) realm . where ( testClazz ) . findFirst ( ) ) . getName ( ) ) ; 
 + } 
 + } 
 + 
 + / / @ PrimaryKey annotation creates null value properly as a primary key value for Realm version 0 . 89 . 1 + 
 + @ Test 
 + public void createObject _ primaryKeyFieldIsNull ( ) { 
 + createNullPrimaryKeyObjectFromTestRealm ( realm ) ; 
 + 
 + if ( testClazz . equals ( PrimaryKeyAsString . class ) ) { 
 + RealmResults < PrimaryKeyAsString > results = realm . where ( PrimaryKeyAsString . class ) . findAll ( ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 + assertEquals ( secondaryFieldValue , results . first ( ) . getId ( ) ) ; 
 + 
 + } else { 
 + RealmResults results = realm . where ( testClazz ) . findAll ( ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 + assertEquals ( secondaryFieldValue , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 + } 
 + } 
 + 
 + / / @ PrimaryKey annotation checked duplicated null value properly as a primary key value for Realm version 0 . 89 . 1 + 
 + @ Test 
 + public void createObject _ duplicatedNullPrimaryKeyThrows ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { 
 + addPrimaryKeyObjectToTestRealm ( realm ) ; 
 + 
 + realm . beginTransaction ( ) ; 
 + try { 
 + realm . createObject ( testClazz , null ) ; 
 + fail ( " Null value as primary key already exists . " ) ; 
 + } catch ( RealmPrimaryKeyConstraintException expected ) { 
 + assertEquals ( " Value already exists : null " , expected . getMessage ( ) ) ; 
 + } finally { 
 + realm . cancelTransaction ( ) ; 
 + } 
 + } 
 + } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java 
 index d642764 . . 155607b 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmPrimaryKeyTests . java 
 @ @ - 67 , 12 + 67 , 12 @ @ public class RealmPrimaryKeyTests { 
 @ Parameterized . Parameters 
 public static Iterable < Object [ ] > data ( ) { 
 return Arrays . asList ( new Object [ ] [ ] { 
 - / / 1 ) Test target class 2 ) PK Class 3 ) PK value 4 ) 2nd Class 5 ) 2nd field value 
 - { PrimaryKeyRequiredAsString . class , String . class , " 424123 " , String . class , " SomeSecondaryValue " } , 
 - { PrimaryKeyRequiredAsBoxedByte . class , Byte . class , Byte . valueOf ( " 67 " ) , String . class , " This - Is - Second - One " } , 
 - { PrimaryKeyRequiredAsBoxedShort . class , Short . class , Short . valueOf ( " 1729 " ) , String . class , " AnyValueIsAccepted " } , 
 - { PrimaryKeyRequiredAsBoxedInteger . class , Integer . class , Integer . valueOf ( " 19 " ) , String . class , " PlayWithSeondFied ! " } , 
 - { PrimaryKeyRequiredAsBoxedLong . class , Long . class , Long . valueOf ( " 62914 " ) , String . class , " Let ' s name a value " } 
 + / / 1 ) Test target class 2 ) PK Class 3 ) PK value 4 ) 2nd Class 5 ) 2nd field value 
 + { PrimaryKeyRequiredAsString . class , String . class , " 424123 " , String . class , " SomeSecondaryValue " } , 
 + { PrimaryKeyRequiredAsBoxedByte . class , Byte . class , Byte . valueOf ( " 67 " ) , String . class , " This - Is - Second - One " } , 
 + { PrimaryKeyRequiredAsBoxedShort . class , Short . class , Short . valueOf ( " 1729 " ) , String . class , " AnyValueIsAccepted " } , 
 + { PrimaryKeyRequiredAsBoxedInteger . class , Integer . class , Integer . valueOf ( " 19 " ) , String . class , " PlayWithSeondFied ! " } , 
 + { PrimaryKeyRequiredAsBoxedLong . class , Long . class , Long . valueOf ( " 62914 " ) , String . class , " Let ' s name a value " } 
 } ) ; 
 } 
 
 @ @ - 107 , 9 + 107 , 10 @ @ public class RealmPrimaryKeyTests { 
 / / @ PrimaryKey + @ Required annotation does accept null as a primary key value for Realm version 0 . 89 . 1 + 
 @ Test 
 public void copyToRealmOrUpdate _ requiredPrimaryKeyThrows ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { 
 + RealmObject obj = ( RealmObject ) testClazz . getConstructor ( primaryKeyFieldType , secondaryFieldType ) . newInstance ( null , null ) ; 
 + 
 + realm . beginTransaction ( ) ; 
 try { 
 - RealmObject obj = ( RealmObject ) testClazz . getConstructor ( primaryKeyFieldType , secondaryFieldType ) . newInstance ( null , null ) ; 
 - realm . beginTransaction ( ) ; 
 realm . copyToRealmOrUpdate ( obj ) ; 
 fail ( " @ PrimaryKey + @ Required field cannot be null " ) ; 
 } catch ( RuntimeException expected ) { 
 @ @ - 123 , 4 + 124 , 18 @ @ public class RealmPrimaryKeyTests { 
 realm . cancelTransaction ( ) ; 
 } 
 } 
 + 
 + / / @ PrimaryKey + @ Required annotation does not accept null as a primary key value for Realm version 0 . 89 . 1 + 
 + @ Test 
 + public void createObject _ nullPrimaryKeyValueThrows ( ) throws NoSuchMethodException , InstantiationException , IllegalAccessException , InvocationTargetException { 
 + realm . beginTransaction ( ) ; 
 + try { 
 + realm . createObject ( testClazz , null ) ; 
 + fail ( " @ PrimaryKey + @ Required field cannot be null " ) ; 
 + } catch ( RuntimeException expected ) { 
 + assertTrue ( expected instanceof IllegalArgumentException ) ; 
 + } finally { 
 + realm . cancelTransaction ( ) ; 
 + } 
 + } 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index b6ba109 . . d9d6947 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 1217 , 35 + 1217 , 6 @ @ public class RealmTests { 
 } 
 
 @ Test 
 - public void copyToRealm _ stringPrimaryKeyIsNull ( ) { 
 - final long SECONDARY _ FIELD _ VALUE = 34992142L ; 
 - TestHelper . addStringPrimaryKeyObjectToTestRealm ( realm , ( String ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - RealmResults < PrimaryKeyAsString > results = realm . allObjects ( PrimaryKeyAsString . class ) ; 
 - assertEquals ( 1 , results . size ( ) ) ; 
 - assertEquals ( null , results . first ( ) . getName ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , results . first ( ) . getId ( ) ) ; 
 - } 
 - 
 - @ Test 
 - public void copyToRealm _ boxedNumberPrimaryKeyIsNull ( ) { 
 - final String SECONDARY _ FIELD _ VALUE = " nullNumberPrimaryKeyObj " ; 
 - final Class [ ] CLASSES = { PrimaryKeyAsBoxedByte . class , PrimaryKeyAsBoxedShort . class , PrimaryKeyAsBoxedInteger . class , PrimaryKeyAsBoxedLong . class } ; 
 - 
 - TestHelper . addBytePrimaryKeyObjectToTestRealm ( realm , ( Byte ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - TestHelper . addShortPrimaryKeyObjectToTestRealm ( realm , ( Short ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - TestHelper . addIntegerPrimaryKeyObjectToTestRealm ( realm , ( Integer ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - TestHelper . addLongPrimaryKeyObjectToTestRealm ( realm , ( Long ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - for ( Class clazz : CLASSES ) { 
 - RealmResults results = realm . allObjects ( clazz ) ; 
 - assertEquals ( 1 , results . size ( ) ) ; 
 - assertEquals ( null , ( ( NullPrimaryKey ) results . first ( ) ) . getId ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , ( ( NullPrimaryKey ) results . first ( ) ) . getName ( ) ) ; 
 - } 
 - } 
 - 
 - @ Test 
 public void copyToRealm _ duplicatedNullPrimaryKeyThrows ( ) { 
 final String [ ] PRIMARY _ KEY _ TYPES = { " String " , " BoxedByte " , " BoxedShort " , " BoxedInteger " , " BoxedLong " } ; 
 
 @ @ - 1360 , 106 + 1331 , 6 @ @ public class RealmTests { 
 } 
 
 @ Test 
 - public void copyToRealmOrUpdate _ stringPrimaryKeyFieldIsNull ( ) { 
 - final long SECONDARY _ FIELD _ VALUE = 2192841L ; 
 - final long SECONDARY _ FIELD _ UPDATED = 44887612L ; 
 - PrimaryKeyAsString nullPrimaryKeyObj = TestHelper . addStringPrimaryKeyObjectToTestRealm ( realm , ( String ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - RealmResults < PrimaryKeyAsString > result = realm . allObjects ( PrimaryKeyAsString . class ) ; 
 - assertEquals ( 1 , result . size ( ) ) ; 
 - assertEquals ( null , result . first ( ) . getName ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getId ( ) ) ; 
 - 
 - / / update objects 
 - realm . beginTransaction ( ) ; 
 - nullPrimaryKeyObj . setId ( SECONDARY _ FIELD _ UPDATED ) ; 
 - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; 
 - realm . commitTransaction ( ) ; 
 - 
 - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsString . class ) . first ( ) . getId ( ) ) ; 
 - } 
 - 
 - @ Test 
 - public void copyToRealmOrUpdate _ boxedBytePrimaryKeyFieldIsNull ( ) { 
 - final String SECONDARY _ FIELD _ VALUE = " nullBytePrimaryKeyObj " ; 
 - final String SECONDARY _ FIELD _ UPDATED = " nullBytePrimaryKeyObjUpdated " ; 
 - PrimaryKeyAsBoxedByte nullPrimaryKeyObj = TestHelper . addBytePrimaryKeyObjectToTestRealm ( realm , ( Byte ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - RealmResults < PrimaryKeyAsBoxedByte > result = realm . allObjects ( PrimaryKeyAsBoxedByte . class ) ; 
 - assertEquals ( 1 , result . size ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; 
 - assertEquals ( null , result . first ( ) . getId ( ) ) ; 
 - 
 - / / update objects 
 - realm . beginTransaction ( ) ; 
 - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; 
 - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; 
 - realm . commitTransaction ( ) ; 
 - 
 - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedByte . class ) . first ( ) . getName ( ) ) ; 
 - } 
 - 
 - @ Test 
 - public void copyToRealmOrUpdate _ boxedShortPrimaryKeyFieldIsNull ( ) { 
 - final String SECONDARY _ FIELD _ VALUE = " nullShortPrimaryKeyObj " ; 
 - final String SECONDARY _ FIELD _ UPDATED = " nullShortPrimaryKeyObjUpdated " ; 
 - PrimaryKeyAsBoxedShort nullPrimaryKeyObj = TestHelper . addShortPrimaryKeyObjectToTestRealm ( realm , ( Short ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - RealmResults < PrimaryKeyAsBoxedShort > result = realm . allObjects ( PrimaryKeyAsBoxedShort . class ) ; 
 - assertEquals ( 1 , result . size ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; 
 - assertEquals ( null , result . first ( ) . getId ( ) ) ; 
 - 
 - / / update objects 
 - realm . beginTransaction ( ) ; 
 - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; 
 - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; 
 - realm . commitTransaction ( ) ; 
 - 
 - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedShort . class ) . first ( ) . getName ( ) ) ; 
 - } 
 - 
 - @ Test 
 - public void copyToRealmOrUpdate _ boxedIntegerPrimaryKeyFieldIsNull ( ) { 
 - final String SECONDARY _ FIELD _ VALUE = " nullIntegerPrimaryKeyObj " ; 
 - final String SECONDARY _ FIELD _ UPDATED = " nullIntegerPrimaryKeyObjUpdated " ; 
 - PrimaryKeyAsBoxedInteger nullPrimaryKeyObj = TestHelper . addIntegerPrimaryKeyObjectToTestRealm ( realm , ( Integer ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - RealmResults < PrimaryKeyAsBoxedInteger > result = realm . allObjects ( PrimaryKeyAsBoxedInteger . class ) ; 
 - assertEquals ( 1 , result . size ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; 
 - assertEquals ( null , result . first ( ) . getId ( ) ) ; 
 - 
 - / / update objects 
 - realm . beginTransaction ( ) ; 
 - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; 
 - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; 
 - realm . commitTransaction ( ) ; 
 - 
 - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedInteger . class ) . first ( ) . getName ( ) ) ; 
 - } 
 - 
 - @ Test 
 - public void copyToRealmOrUpdate _ boxedLongPrimaryKeyFieldIsNull ( ) { 
 - final String SECONDARY _ FIELD _ VALUE = " nullLongPrimaryKeyObj " ; 
 - final String SECONDARY _ FIELD _ UPDATED = " nullLongPrimaryKeyObjUpdated " ; 
 - PrimaryKeyAsBoxedLong nullPrimaryKeyObj = TestHelper . addLongPrimaryKeyObjectToTestRealm ( realm , ( Long ) null , SECONDARY _ FIELD _ VALUE ) ; 
 - 
 - RealmResults < PrimaryKeyAsBoxedLong > result = realm . allObjects ( PrimaryKeyAsBoxedLong . class ) ; 
 - assertEquals ( 1 , result . size ( ) ) ; 
 - assertEquals ( SECONDARY _ FIELD _ VALUE , result . first ( ) . getName ( ) ) ; 
 - assertEquals ( null , result . first ( ) . getId ( ) ) ; 
 - 
 - / / update objects 
 - realm . beginTransaction ( ) ; 
 - nullPrimaryKeyObj . setName ( SECONDARY _ FIELD _ UPDATED ) ; 
 - realm . copyToRealmOrUpdate ( nullPrimaryKeyObj ) ; 
 - realm . commitTransaction ( ) ; 
 - 
 - assertEquals ( SECONDARY _ FIELD _ UPDATED , realm . allObjects ( PrimaryKeyAsBoxedLong . class ) . first ( ) . getName ( ) ) ; 
 - } 
 - 
 - @ Test 
 public void copyToRealmOrUpdate _ noPrimaryKeyField ( ) { 
 realm . beginTransaction ( ) ; 
 thrown . expect ( IllegalArgumentException . class ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java 
 index dbd8689 . . f244ea1 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedByte . java 
 @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedByte extends RealmObject implements NullPrimaryKey 
 
 private String name ; 
 
 + public PrimaryKeyAsBoxedByte ( ) { } 
 + public PrimaryKeyAsBoxedByte ( Byte id , String name ) { 
 + this . id = id ; 
 + this . name = name ; 
 + } 
 + 
 @ Override 
 public Byte getId ( ) { 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Byte id ) { 
 this . id = id ; 
 } 
 @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedByte extends RealmObject implements NullPrimaryKey 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java 
 index 5465f07 . . 34179ca 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedInteger . java 
 @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedInteger extends RealmObject implements NullPrimary 
 
 private String name ; 
 
 + public PrimaryKeyAsBoxedInteger ( ) { } 
 + public PrimaryKeyAsBoxedInteger ( Integer id , String name ) { 
 + this . id = id ; 
 + this . name = name ; 
 + } 
 + 
 @ Override 
 public Integer getId ( ) { 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Integer id ) { 
 this . id = id ; 
 } 
 @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedInteger extends RealmObject implements NullPrimary 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java 
 index 53a0187 . . 6ad4929 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedLong . java 
 @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedLong extends RealmObject implements NullPrimaryKey 
 
 private String name ; 
 
 + public PrimaryKeyAsBoxedLong ( ) { } 
 + public PrimaryKeyAsBoxedLong ( Long id , String name ) { 
 + this . id = id ; 
 + this . name = name ; 
 + } 
 + 
 @ Override 
 public Long getId ( ) { 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Long id ) { 
 this . id = id ; 
 } 
 @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedLong extends RealmObject implements NullPrimaryKey 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java 
 index 402f4b6 . . 14ce765 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsBoxedShort . java 
 @ @ - 30 , 11 + 30 , 18 @ @ public class PrimaryKeyAsBoxedShort extends RealmObject implements NullPrimaryKe 
 
 private String name ; 
 
 + public PrimaryKeyAsBoxedShort ( ) { } 
 + public PrimaryKeyAsBoxedShort ( Short id , String name ) { 
 + this . id = id ; 
 + this . name = name ; 
 + } 
 + 
 @ Override 
 public Short getId ( ) { 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Short id ) { 
 this . id = id ; 
 } 
 @ @ - 44 , 6 + 51 , 7 @ @ public class PrimaryKeyAsBoxedShort extends RealmObject implements NullPrimaryKe 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java 
 index c64e964 . . 5e70b43 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyAsString . java 
 @ @ - 18 , 6 + 18 , 7 @ @ package io . realm . entities ; 
 
 import io . realm . RealmObject ; 
 import io . realm . annotations . PrimaryKey ; 
 + import io . realm . objectid . NullPrimaryKey ; 
 
 public class PrimaryKeyAsString extends RealmObject { 
 
 @ @ - 29 , 7 + 30 , 10 @ @ public class PrimaryKeyAsString extends RealmObject { 
 
 private long id ; 
 
 - public PrimaryKeyAsString ( ) { 
 + public PrimaryKeyAsString ( ) { } 
 + public PrimaryKeyAsString ( String name , long id ) { 
 + this . name = name ; 
 + this . id = id ; 
 } 
 
 public PrimaryKeyAsString ( String name ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java 
 index 20979c2 . . 88e1e72 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedByte . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedByte extends RealmObject implements NullPr 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Byte id ) { 
 this . id = id ; 
 } 
 @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedByte extends RealmObject implements NullPr 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java 
 index bb8ecfb . . 7f3756e 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedInteger . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedInteger extends RealmObject implements Nul 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Integer id ) { 
 this . id = id ; 
 } 
 @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedInteger extends RealmObject implements Nul 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java 
 index fe526e1 . . 52092b7 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedLong . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedLong extends RealmObject implements NullPr 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Long id ) { 
 this . id = id ; 
 } 
 @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedLong extends RealmObject implements NullPr 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java 
 index 3c14549 . . 7c31a29 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsBoxedShort . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsBoxedShort extends RealmObject implements NullP 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( Short id ) { 
 this . id = id ; 
 } 
 @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsBoxedShort extends RealmObject implements NullP 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java 
 index 4daa2d8 . . dc4aadd 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / PrimaryKeyRequiredAsString . java 
 @ @ - 40 , 6 + 40 , 7 @ @ public class PrimaryKeyRequiredAsString extends RealmObject implements NullPrima 
 return id ; 
 } 
 
 + @ Override 
 public void setId ( String id ) { 
 this . id = id ; 
 } 
 @ @ - 49 , 6 + 50 , 7 @ @ public class PrimaryKeyRequiredAsString extends RealmObject implements NullPrima 
 return name ; 
 } 
 
 + @ Override 
 public void setName ( String name ) { 
 this . name = name ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java b / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java 
 index 527825c . . 3ed5672 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / objectid / NullPrimaryKey . java 
 @ @ - 20 , 5 + 20 , 9 @ @ public interface NullPrimaryKey < P , S > { 
 
 public P getId ( ) ; 
 
 + public void setId ( P id ) ; 
 + 
 public S getName ( ) ; 
 + 
 + public void setName ( S name ) ; 
 }

NEAREST DIFF:
diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm 
 new file mode 100644 
 index 0000000 . . d049e3b 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm 
 new file mode 100644 
 index 0000000 . . 0660c84 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm 
 new file mode 100644 
 index 0000000 . . 1002549 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm 
 new file mode 100644 
 index 0000000 . . 3f32700 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / README b / realm / src / androidTest / assets / ios / README 
 new file mode 100644 
 index 0000000 . . 0f30efc 
 - - - / dev / null 
 + + + b / realm / src / androidTest / assets / ios / README 
 @ @ - 0 , 0 + 1 , 149 @ @ 
 + This folder contains various Realm databases created on iOS and can be used to test interop with 
 + Realm - Android . 
 + 
 + The databases are generated using the following iOS code : 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / 
 + / / Copyright 2014 Realm Inc . 
 + / / 
 + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + / / you may not use this file except in compliance with the License . 
 + / / You may obtain a copy of the License at 
 + / / 
 + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + / / 
 + / / Unless required by applicable law or agreed to in writing , software 
 + / / distributed under the License is distributed on an " AS IS " BASIS , 
 + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + / / See the License for the specific language governing permissions and 
 + / / limitations under the License . 
 + / / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + # import " AppDelegate . h " 
 + # import < Realm / Realm . h > 
 + 
 + @ interface IOSChild : RLMObject 
 + @ property NSString * name ; 
 + @ end 
 + RLM _ ARRAY _ TYPE ( IOSChild ) 
 + 
 + @ implementation IOSChild 
 + @ end 
 + 
 + @ interface IOSAllTypes : RLMObject 
 + @ property bool boolCol ; 
 + @ property short shortCol ; 
 + @ property int intCol ; 
 + @ property long longCol ; 
 + @ property float floatCol ; 
 + @ property double doubleCol ; 
 + @ property NSData * byteCol ; 
 + @ property NSString * stringCol ; 
 + @ property NSDate * dateCol ; 
 + @ property IOSChild * child ; 
 + @ property RLMArray < IOSChild > * children ; 
 + @ end 
 + RLM _ ARRAY _ TYPE ( AllTypes ) 
 + 
 + @ implementation IOSAllTypes 
 + / / + ( NSString * ) primaryKey { 
 + / / return @ " longCol " ; 
 + / / } 
 + @ end 
 + 
 + @ implementation AppDelegate 
 + 
 + - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions 
 + { 
 + self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; 
 + self . window . rootViewController = [ [ UIViewController alloc ] init ] ; 
 + [ self . window makeKeyAndVisible ] ; 
 + 
 + const unsigned char no _ bytes [ ] = { } ; 
 + const unsigned char bytes [ ] = { 1 , 2 , 3 } ; 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes . realm " ] ; 
 + RLMRealm * realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + for ( int i = 0 ; i < 10 ; i + + ) { 
 + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = TRUE ; 
 + obj . shortCol = 1 + i ; 
 + obj . intCol = 10 + i ; 
 + obj . longCol = 100 + i ; 
 + obj . floatCol = 1 . 23 + i ; 
 + obj . doubleCol = 1 . 234 + i ; 
 + obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; 
 + obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; 
 + 
 + obj . child = [ [ IOSChild alloc ] init ] ; 
 + obj . child . name = @ " Foo " ; 
 + for ( int j = 0 ; j < 10 ; j + + ) { 
 + IOSChild * c = [ [ IOSChild alloc ] init ] ; 
 + c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; 
 + [ obj . children addObject : c ] ; 
 + } 
 + [ realm addObject : obj ] ; 
 + } 
 + [ realm commitWriteTransaction ] ; 
 + 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - default . realm " ] ; 
 + realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - min . realm " ] ; 
 + realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = FALSE ; 
 + obj . shortCol = SHRT _ MIN ; 
 + obj . intCol = INT _ MIN ; 
 + obj . longCol = LONG _ MIN ; 
 + obj . floatCol = FLT _ MIN ; 
 + obj . doubleCol = DBL _ MIN ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - max . realm " ] ; 
 + realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = TRUE ; 
 + obj . shortCol = SHRT _ MAX ; 
 + obj . intCol = INT _ MAX ; 
 + obj . longCol = LONG _ MAX ; 
 + obj . floatCol = FLT _ MAX ; 
 + obj . doubleCol = DBL _ MAX ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : LONG _ MAX ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + NSLog ( @ " Done " ) ; 
 + return YES ; 
 + } 
 + 
 + + ( void ) setDefaultRealm : ( NSString * ) realmName 
 + { 
 + NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; 
 + NSString * allTypesRealm = [ documentsDirectory stringByAppendingPathComponent : realmName ] ; 
 + [ RLMRealm setDefaultRealmPath : allTypesRealm ] ; 
 + [ [ NSFileManager defaultManager ] removeItemAtPath : [ RLMRealm defaultRealmPath ] error : nil ] ; 
 + } 
 + @ end 
 diff - - git a / realm / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / src / androidTest / java / io / realm / IOSRealmTests . java 
 new file mode 100644 
 index 0000000 . . c89aa0d 
 - - - / dev / null 
 + + + b / realm / src / androidTest / java / io / realm / IOSRealmTests . java 
 @ @ - 0 , 0 + 1 , 99 @ @ 
 + package io . realm ; 
 + 
 + import android . test . AndroidTestCase ; 
 + 
 + import java . io . IOException ; 
 + import java . util . Date ; 
 + 
 + import io . realm . entities . IOSAllTypes ; 
 + import io . realm . entities . IOSChild ; 
 + 
 + import static io . realm . internal . test . ExtraTests . assertArrayEquals ; 
 + 
 + / * * 
 + * This class test interoperability with Realms created on iOS . 
 + * / 
 + public class IOSRealmTests extends AndroidTestCase { 
 + 
 + private static final String REALM _ NAME = " alltypes . realm " ; 
 + private Realm realm ; 
 + 
 + @ Override 
 + protected void setUp ( ) throws Exception { 
 + super . setUp ( ) ; 
 + Realm . setSchema ( IOSAllTypes . class , IOSChild . class ) ; 
 + } 
 + 
 + @ Override 
 + protected void tearDown ( ) throws Exception { 
 + super . tearDown ( ) ; 
 + Realm . setSchema ( null ) ; 
 + if ( realm ! = null ) { 
 + realm . close ( ) ; 
 + } 
 + } 
 + 
 + / / Test relationships and that data in general can be retrieved from an iOS realm 
 + public void testIOSDatatypes ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + RealmResults < IOSAllTypes > result = realm . allObjectsSorted ( IOSAllTypes . class , " longCol " , RealmResults . SORT _ ORDER _ ASCENDING ) ; 
 + 
 + IOSAllTypes obj = result . get ( 1 ) ; 
 + assertTrue ( obj . isBoolCol ( ) ) ; 
 + assertEquals ( 2 , obj . getShortCol ( ) ) ; 
 + assertEquals ( 11 , obj . getIntCol ( ) ) ; 
 + assertEquals ( 101L , obj . getLongCol ( ) ) ; 
 + assertEquals ( 2 . 23F , obj . getFloatCol ( ) ) ; 
 + assertEquals ( 2 . 234D , obj . getDoubleCol ( ) ) ; 
 + assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; 
 + assertEquals ( " String 1 " , obj . getStringCol ( ) ) ; 
 + assertEquals ( new Date ( 1001 * 1000 ) , obj . getDateCol ( ) ) ; 
 + assertEquals ( " Foo " , result . get ( 1 ) . getChild ( ) . getName ( ) ) ; 
 + assertEquals ( 10 , result . size ( ) ) ; 
 + assertEquals ( 10 , result . get ( 1 ) . getChildren ( ) . size ( ) ) ; 
 + assertEquals ( " Name : 1 " , result . get ( 1 ) . getChildren ( ) . get ( 1 ) . getName ( ) ) ; 
 + } 
 + 
 + public void testIOSDatatypesDefaultValues ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - default . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertFalse ( obj . isBoolCol ( ) ) ; 
 + assertEquals ( 0 , obj . getShortCol ( ) ) ; 
 + assertEquals ( 0 , obj . getIntCol ( ) ) ; 
 + assertEquals ( 0L , obj . getLongCol ( ) ) ; 
 + assertEquals ( 0 . 0F , obj . getFloatCol ( ) ) ; 
 + assertEquals ( 0 . 0D , obj . getDoubleCol ( ) ) ; 
 + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; 
 + assertEquals ( " " , obj . getStringCol ( ) ) ; 
 + assertEquals ( new Date ( 0 ) , obj . getDateCol ( ) ) ; 
 + assertNull ( obj . getChild ( ) ) ; 
 + assertEquals ( 0 , obj . getChildren ( ) . size ( ) ) ; 
 + } 
 + 
 + public void testIOSDatatypesMinimumValues ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - min . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertEquals ( Short . MIN _ VALUE , obj . getShortCol ( ) ) ; 
 + assertEquals ( Integer . MIN _ VALUE , obj . getIntCol ( ) ) ; 
 + assertEquals ( Long . MIN _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Float . MIN _ NORMAL , obj . getFloatCol ( ) ) ; 
 + assertEquals ( Double . MIN _ NORMAL , obj . getDoubleCol ( ) ) ; 
 + } 
 + 
 + public void testIOSDatatypesMaximumValues ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - max . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertEquals ( Short . MAX _ VALUE , obj . getShortCol ( ) ) ; 
 + assertEquals ( Integer . MAX _ VALUE , obj . getIntCol ( ) ) ; 
 + assertEquals ( Long . MAX _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Float . MAX _ VALUE , obj . getFloatCol ( ) ) ; 
 + assertEquals ( Double . MAX _ VALUE , obj . getDoubleCol ( ) ) ; 
 + } 
 + } 
 diff - - git a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 index c798a35 . . 680965a 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 @ @ - 1 , 37 + 1 , 18 @ @ 
 package io . realm ; 
 
 - import android . content . res . AssetManager ; 
 import android . test . AndroidTestCase ; 
 
 - import java . io . File ; 
 - import java . io . FileOutputStream ; 
 import java . io . IOException ; 
 - import java . io . InputStream ; 
 
 import io . realm . entities . AllTypes ; 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 
 public class RealmMigrationTests extends AndroidTestCase { 
 
 - / / Copies a Realm file from assets to app files dir 
 - private void copyRealmFromAssets ( String fileName ) throws IOException { 
 - AssetManager assetManager = getContext ( ) . getAssets ( ) ; 
 - InputStream is = assetManager . open ( fileName ) ; 
 - File file = new File ( getContext ( ) . getFilesDir ( ) , fileName ) ; 
 - FileOutputStream outputStream = new FileOutputStream ( file ) ; 
 - byte [ ] buf = new byte [ 1024 ] ; 
 - int bytesRead ; 
 - while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { 
 - outputStream . write ( buf , 0 , bytesRead ) ; 
 - } 
 - outputStream . close ( ) ; 
 - is . close ( ) ; 
 - } 
 - 
 public void testRealmClosedAfterMigrationException ( ) throws IOException { 
 String REALM _ NAME = " default0 . realm " ; 
 Realm . deleteRealmFile ( getContext ( ) , REALM _ NAME ) ; 
 - copyRealmFromAssets ( REALM _ NAME ) ; 
 + TestHelper . copyRealmFromAssets ( getContext ( ) , REALM _ NAME , REALM _ NAME ) ; 
 try { 
 Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 fail ( " A migration should be triggered " ) ; 
 diff - - git a / realm / src / androidTest / java / io / realm / TestHelper . java b / realm / src / androidTest / java / io / realm / TestHelper . java 
 index fb2bd93 . . 5d1d27a 100644 
 - - - a / realm / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 16 , 6 + 16 , 14 @ @ 
 
 package io . realm ; 
 
 + import android . content . Context ; 
 + import android . content . res . AssetManager ; 
 + 
 + import java . io . File ; 
 + import java . io . FileOutputStream ; 
 + import java . io . IOException ; 
 + import java . io . InputStream ; 
 + 
 import io . realm . entities . AllTypes ; 
 
 public class TestHelper { 
 @ @ - 35 , 4 + 43 , 25 @ @ public class TestHelper { 
 object3 . setColumnString ( " Adam " ) ; 
 testRealm . commitTransaction ( ) ; 
 } 
 + 
 + / / Copies a Realm file from assets to app files dir 
 + public static void copyRealmFromAssets ( Context context , String realmPath , String newName ) throws IOException { 
 + AssetManager assetManager = context . getAssets ( ) ; 
 + InputStream is = assetManager . open ( realmPath ) ; 
 + File file = new File ( context . getFilesDir ( ) , newName ) ; 
 + FileOutputStream outputStream = new FileOutputStream ( file ) ; 
 + byte [ ] buf = new byte [ 1024 ] ; 
 + int bytesRead ; 
 + while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { 
 + outputStream . write ( buf , 0 , bytesRead ) ; 
 + } 
 + outputStream . close ( ) ; 
 + is . close ( ) ; 
 + } 
 + 
 + / / Deletes the old database and copies a new one into its place 
 + public static void prepareDatabaseFromAssets ( Context context , String realmPath , String newName ) throws IOException { 
 + Realm . deleteRealmFile ( context , newName ) ; 
 + TestHelper . copyRealmFromAssets ( context , realmPath , newName ) ; 
 + } 
 } 
 diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 new file mode 100644 
 index 0000000 . . 14fb439 
 - - - / dev / null 
 + + + b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package io . realm . entities ; 
 + 
 + import java . util . Date ; 
 + 
 + import io . realm . RealmList ; 
 + import io . realm . RealmObject ; 
 + 
 + public class IOSAllTypes extends RealmObject { 
 + 
 + private boolean boolCol ; 
 + private short shortCol ; 
 + private int intCol ; 
 + private long longCol ; 
 + private float floatCol ; 
 + private double doubleCol ; 
 + private byte [ ] byteCol ; 
 + private String stringCol ; 
 + private Date dateCol ; 
 + private IOSChild child ; 
 + private RealmList < IOSChild > children ; 
 + 
 + public boolean isBoolCol ( ) { 
 + return boolCol ; 
 + } 
 + 
 + public void setBoolCol ( boolean boolCol ) { 
 + this . boolCol = boolCol ; 
 + } 
 + 
 + public short getShortCol ( ) { 
 + return shortCol ; 
 + } 
 + 
 + public void setShortCol ( short shortCol ) { 
 + this . shortCol = shortCol ; 
 + } 
 + 
 + public int getIntCol ( ) { 
 + return intCol ; 
 + } 
 + 
 + public void setIntCol ( int intCol ) { 
 + this . intCol = intCol ; 
 + } 
 + 
 + public long getLongCol ( ) { 
 + return longCol ; 
 + } 
 + 
 + public void setLongCol ( long longCol ) { 
 + this . longCol = longCol ; 
 + } 
 + 
 + public float getFloatCol ( ) { 
 + return floatCol ; 
 + } 
 + 
 + public void setFloatCol ( float floatCol ) { 
 + this . floatCol = floatCol ; 
 + } 
 + 
 + public double getDoubleCol ( ) { 
 + return doubleCol ; 
 + } 
 + 
 + public void setDoubleCol ( double doubleCol ) { 
 + this . doubleCol = doubleCol ; 
 + } 
 + 
 + public byte [ ] getByteCol ( ) { 
 + return byteCol ; 
 + } 
 + 
 + public void setByteCol ( byte [ ] byteCol ) { 
 + this . byteCol = byteCol ; 
 + } 
 + 
 + public String getStringCol ( ) { 
 + return stringCol ; 
 + } 
 + 
 + public void setStringCol ( String stringCol ) { 
 + this . stringCol = stringCol ; 
 + } 
 + 
 + public Date getDateCol ( ) { 
 + return dateCol ; 
 + } 
 + 
 + public void setDateCol ( Date dateCol ) { 
 + this . dateCol = dateCol ; 
 + } 
 + 
 + public IOSChild getChild ( ) { 
 + return child ; 
 + } 
 + 
 + public void setChild ( IOSChild child ) { 
 + this . child = child ; 
 + } 
 + 
 + public RealmList < IOSChild > getChildren ( ) { 
 + return children ; 
 + } 
 + 
 + public void setChildren ( RealmList < IOSChild > children ) { 
 + this . children = children ; 
 + } 
 + } 
 diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSChild . java b / realm / src / androidTest / java / io / realm / entities / IOSChild . java 
 new file mode 100644 
 index 0000000 . . f041de1 
 - - - / dev / null 
 + + + b / realm / src / androidTest / java / io / realm / entities / IOSChild . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package io . realm . entities ; 
 + 
 + import io . realm . RealmObject ; 
 + 
 + public class IOSChild extends RealmObject { 
 + private String name ; 
 + 
 + public String getName ( ) { 
 + return name ; 
 + } 
 + 
 + public void setName ( String name ) { 
 + this . name = name ; 
 + } 
 + } 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 389e5c8 . . ffd4696 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 40 , 8 + 40 , 10 @ @ import java . lang . reflect . Method ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 import java . util . UUID ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 @ @ - 164 , 6 + 166 , 7 @ @ public final class Realm implements Closeable { 
 private final Map < Class < ? > , Constructor > generatedConstructors = new HashMap < Class < ? > , Constructor > ( ) ; 
 private final List < RealmChangeListener > changeListeners = new ArrayList < RealmChangeListener > ( ) ; 
 private final Map < Class < ? > , Table > tables = new HashMap < Class < ? > , Table > ( ) ; 
 + private static final Set < Class < ? extends RealmObject > > customSchema = new HashSet < Class < ? extends RealmObject > > ( ) ; 
 private static final long UNVERSIONED = - 1 ; 
 
 / / Package protected to be reachable by proxy classes 
 @ @ - 539 , 6 + 542 , 14 @ @ public final class Realm implements Closeable { 
 throw new RealmException ( " An exception was thrown in the getProxyClasses method in the ValidationList class : " + APT _ NOT _ EXECUTED _ MESSAGE ) ; 
 } 
 
 + / / Custom schema overrides any schema already defined 
 + if ( customSchema . size ( ) > 0 ) { 
 + proxyClasses = new ArrayList < String > ( ) ; 
 + for ( Class < ? extends RealmObject > clazz : customSchema ) { 
 + proxyClasses . add ( clazz . getName ( ) ) ; 
 + } 
 + } 
 + 
 long version = realm . getVersion ( ) ; 
 boolean commitNeeded = false ; 
 try { 
 @ @ - 1538 , 6 + 1549 , 25 @ @ public final class Realm implements Closeable { 
 return path ; 
 } 
 
 + 
 + / * * 
 + * Override the standard behavior of all classes extended RealmObject being part of the schema . 
 + * Use this method to define the schema as only the classes given here . 
 + * 
 + * This class must be called before calling { @ link # getInstance ( android . content . Context ) } 
 + * 
 + * If { @ code null } is given as parameter , the Schema is reset to use all known classes . 
 + * 
 + * / 
 + public static void setSchema ( Class < ? extends RealmObject > . . . schemaClass ) { 
 + customSchema . clear ( ) ; 
 + if ( schemaClass ! = null ) { 
 + for ( int i = 0 ; i < schemaClass . length ; i + + ) { 
 + customSchema . add ( schemaClass [ i ] ) ; 
 + } 
 + } 
 + } 
 + 
 / * * 
 * Encapsulates a Realm transaction . 
 * 
 diff - - git a / settings . gradle b / settings . gradle 
 index d0eb928 . . 698a425 100644 
 - - - a / settings . gradle 
 + + + b / settings . gradle 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 / / Realm projects 
 - include ' realm ' 
 + include ' realm ' , ' : realm - annotations - processor ' 
 
 / / Example projects 
 include ' : introExample ' ,
