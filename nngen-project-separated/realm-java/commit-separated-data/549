BLEU SCORE: 0.035802380724744266

TEST MSG: Add ANDROID _ NDK back
GENERATED MSG: Allow CI builds not running as root

TEST DIFF (one line): diff - - git a / Dockerfile b / Dockerfile <nl> index a632ba6 . . 3fa5aac 100644 <nl> - - - a / Dockerfile <nl> + + + b / Dockerfile <nl> @ @ - 11 , 6 + 11 , 7 @ @ ENV JAVA _ HOME / usr / lib / jvm / java - 8 - openjdk - amd64 <nl> ENV ANDROID _ HOME / opt / android - sdk - linux <nl> # Need by cmake <nl> ENV ANDROID _ NDK _ HOME / opt / android - ndk <nl> + ENV ANDROID _ NDK / opt / android - ndk <nl> ENV PATH $ { PATH } : $ { ANDROID _ HOME } / tools : $ { ANDROID _ HOME } / platform - tools <nl> ENV PATH $ { PATH } : $ { NDK _ HOME } <nl> ENV NDK _ CCACHE / usr / bin / ccache
NEAREST DIFF (one line): diff - - git a / Dockerfile b / Dockerfile <nl> index 0029aae . . 3c0cc94 100644 <nl> - - - a / Dockerfile <nl> + + + b / Dockerfile <nl> @ @ - 26 , 9 + 26 , 10 @ @ RUN DEBIAN _ FRONTEND = noninteractive dpkg - - add - architecture i386 \ <nl> & & apt - get clean <nl> <nl> # Install the Android SDK <nl> - RUN cd / opt & & wget - q https : / / dl . google . com / android / android - sdk _ r24 . 4 . 1 - linux . tgz - O android - sdk . tgz <nl> - RUN cd / opt & & tar - xvzf android - sdk . tgz <nl> - RUN cd / opt & & rm - f android - sdk . tgz <nl> + RUN cd / opt & & \ <nl> + wget - q https : / / dl . google . com / android / android - sdk _ r24 . 4 . 1 - linux . tgz - O android - sdk . tgz & & \ <nl> + tar - xvzf android - sdk . tgz & & \ <nl> + rm - f android - sdk . tgz <nl> <nl> # Grab what ' s needed in the SDK <nl> # ↓ updates tools to at least 25 . 1 . 7 , but that prints ' Nothing was installed ' ( so I don ' t check the outputs ) . <nl> @ @ - 39 , 8 + 40 , 14 @ @ RUN echo y | android update sdk - - no - ui - - all - - filter extra - android - m2repositor <nl> RUN echo y | android update sdk - - no - ui - - all - - filter android - 24 | grep ' package installed ' <nl> <nl> # Install the NDK <nl> - RUN mkdir / opt / android - ndk - tmp <nl> - RUN cd / opt / android - ndk - tmp & & wget - q http : / / dl . google . com / android / ndk / android - ndk - r10e - linux - x86 _ 64 . bin - O android - ndk . bin <nl> - RUN cd / opt / android - ndk - tmp & & chmod a + x . / android - ndk . bin & & . / android - ndk . bin <nl> - RUN cd / opt / android - ndk - tmp & & mv . / android - ndk - r10e / opt / android - ndk <nl> - RUN rm - rf / opt / android - ndk - tmp <nl> + RUN mkdir / opt / android - ndk - tmp & & \ <nl> + cd / opt / android - ndk - tmp & & \ <nl> + wget - q http : / / dl . google . com / android / ndk / android - ndk - r10e - linux - x86 _ 64 . bin - O android - ndk . bin & & \ <nl> + chmod a + x . / android - ndk . bin & & \ <nl> + . / android - ndk . bin & & \ <nl> + mv android - ndk - r10e / opt / android - ndk & & \ <nl> + rm - rf / opt / android - ndk - tmp & & \ <nl> + chmod - R a + rX / opt / android - ndk <nl> + <nl> + # Make the SDK universally readable <nl> + RUN chmod - R a + rX / opt / android - sdk - linux <nl> diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index be329c0 . . 291c183 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 14 , 7 + 14 , 7 @ @ try { <nl> <nl> stage ' Docker build ' <nl> def buildEnv = docker . build ' realm - java : snapshot ' <nl> - buildEnv . inside ( " - - privileged - v / dev / bus / usb : / dev / bus / usb - v $ { env . HOME } / gradle - cache : / root / . gradle - v / root / adbkeys : / root / . android " ) { <nl> + buildEnv . inside ( " - e HOME = / tmp - e _ JAVA _ OPTIONS = - Duser . home = / tmp - - privileged - v / dev / bus / usb : / dev / bus / usb - v $ { env . HOME } / gradle - cache : / tmp / . gradle - v $ { env . HOME } / . android : / tmp / . android " ) { <nl> stage ' JVM tests ' <nl> try { <nl> gradle ' assemble check javadoc ' <nl> diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle <nl> index b7d0fc5 . . 78bb438 100644 <nl> - - - a / realm / realm - jni / build . gradle <nl> + + + b / realm / realm - jni / build . gradle <nl> @ @ - 122 , 27 + 122 , 29 @ @ def getNdk ( ) { <nl> if ( ! System . env . NDK _ HOME ) { <nl> throw new GradleException ( ' The NDK _ HOME environment variable is not set . ' ) <nl> } <nl> - def ndkDir = file ( System . env . NDK _ HOME ) <nl> + def ndkDir = new File ( System . env . NDK _ HOME ) <nl> if ( ! ndkDir . directory ) { <nl> throw new GradleException ( ' The path provided in the NDK _ HOME environment variable is not a folder . ' ) <nl> } <nl> def detectedNdkVersion <nl> - if ( file ( " $ { ndkDir } / RELEASE . TXT " ) . file ) { <nl> - detectedNdkVersion = file ( " $ { ndkDir } / RELEASE . TXT " ) . text . trim ( ) . split ( ) [ 0 ] . split ( ' - ' ) [ 0 ] <nl> - } else if ( file ( " $ { ndkDir } / source . properties " ) . file ) { <nl> - def reader = file ( " $ { ndkDir } / source . properties " ) . newReader ( ) <nl> + def releaseFile = new File ( ndkDir , ' RELEASE . TXT ' ) <nl> + def propertyFile = new File ( ndkDir , ' source . properties ' ) <nl> + if ( releaseFile . isFile ( ) ) { <nl> + detectedNdkVersion = releaseFile . text . trim ( ) . split ( ) [ 0 ] . split ( ' - ' ) [ 0 ] <nl> + } else if ( propertyFile . isFile ( ) ) { <nl> + def reader = propertyFile . newReader ( ) <nl> try { <nl> def props = new Properties ( ) <nl> props . load ( reader ) <nl> detectedNdkVersion = props . get ( ' Pkg . Revision ' ) <nl> if ( detectedNdkVersion = = null ) { <nl> - throw new GradleException ( " failed to obtain ndk version information from $ { ndkDir } / source . properties " ) <nl> + throw new GradleException ( " Failed to obtain the NDK version information from $ { ndkDir } / source . properties " ) <nl> } <nl> } finally { <nl> reader . close ( ) <nl> } <nl> } else { <nl> - throw new GradleException ( ' The path provided in the NDK _ HOME environment variable does not seem to be an Android NDK . ' ) <nl> + throw new GradleException ( " Neither $ { releaseFile . getAbsolutePath ( ) } nor $ { propertyFile . getAbsolutePath ( ) } is a file . " ) <nl> } <nl> / / noinspection GroovyVariableNotAssigned <nl> if ( detectedNdkVersion ! = ndkVersion ) {

TEST DIFF:
diff - - git a / Dockerfile b / Dockerfile 
 index a632ba6 . . 3fa5aac 100644 
 - - - a / Dockerfile 
 + + + b / Dockerfile 
 @ @ - 11 , 6 + 11 , 7 @ @ ENV JAVA _ HOME / usr / lib / jvm / java - 8 - openjdk - amd64 
 ENV ANDROID _ HOME / opt / android - sdk - linux 
 # Need by cmake 
 ENV ANDROID _ NDK _ HOME / opt / android - ndk 
 + ENV ANDROID _ NDK / opt / android - ndk 
 ENV PATH $ { PATH } : $ { ANDROID _ HOME } / tools : $ { ANDROID _ HOME } / platform - tools 
 ENV PATH $ { PATH } : $ { NDK _ HOME } 
 ENV NDK _ CCACHE / usr / bin / ccache

NEAREST DIFF:
diff - - git a / Dockerfile b / Dockerfile 
 index 0029aae . . 3c0cc94 100644 
 - - - a / Dockerfile 
 + + + b / Dockerfile 
 @ @ - 26 , 9 + 26 , 10 @ @ RUN DEBIAN _ FRONTEND = noninteractive dpkg - - add - architecture i386 \ 
 & & apt - get clean 
 
 # Install the Android SDK 
 - RUN cd / opt & & wget - q https : / / dl . google . com / android / android - sdk _ r24 . 4 . 1 - linux . tgz - O android - sdk . tgz 
 - RUN cd / opt & & tar - xvzf android - sdk . tgz 
 - RUN cd / opt & & rm - f android - sdk . tgz 
 + RUN cd / opt & & \ 
 + wget - q https : / / dl . google . com / android / android - sdk _ r24 . 4 . 1 - linux . tgz - O android - sdk . tgz & & \ 
 + tar - xvzf android - sdk . tgz & & \ 
 + rm - f android - sdk . tgz 
 
 # Grab what ' s needed in the SDK 
 # ↓ updates tools to at least 25 . 1 . 7 , but that prints ' Nothing was installed ' ( so I don ' t check the outputs ) . 
 @ @ - 39 , 8 + 40 , 14 @ @ RUN echo y | android update sdk - - no - ui - - all - - filter extra - android - m2repositor 
 RUN echo y | android update sdk - - no - ui - - all - - filter android - 24 | grep ' package installed ' 
 
 # Install the NDK 
 - RUN mkdir / opt / android - ndk - tmp 
 - RUN cd / opt / android - ndk - tmp & & wget - q http : / / dl . google . com / android / ndk / android - ndk - r10e - linux - x86 _ 64 . bin - O android - ndk . bin 
 - RUN cd / opt / android - ndk - tmp & & chmod a + x . / android - ndk . bin & & . / android - ndk . bin 
 - RUN cd / opt / android - ndk - tmp & & mv . / android - ndk - r10e / opt / android - ndk 
 - RUN rm - rf / opt / android - ndk - tmp 
 + RUN mkdir / opt / android - ndk - tmp & & \ 
 + cd / opt / android - ndk - tmp & & \ 
 + wget - q http : / / dl . google . com / android / ndk / android - ndk - r10e - linux - x86 _ 64 . bin - O android - ndk . bin & & \ 
 + chmod a + x . / android - ndk . bin & & \ 
 + . / android - ndk . bin & & \ 
 + mv android - ndk - r10e / opt / android - ndk & & \ 
 + rm - rf / opt / android - ndk - tmp & & \ 
 + chmod - R a + rX / opt / android - ndk 
 + 
 + # Make the SDK universally readable 
 + RUN chmod - R a + rX / opt / android - sdk - linux 
 diff - - git a / Jenkinsfile b / Jenkinsfile 
 index be329c0 . . 291c183 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 14 , 7 + 14 , 7 @ @ try { 
 
 stage ' Docker build ' 
 def buildEnv = docker . build ' realm - java : snapshot ' 
 - buildEnv . inside ( " - - privileged - v / dev / bus / usb : / dev / bus / usb - v $ { env . HOME } / gradle - cache : / root / . gradle - v / root / adbkeys : / root / . android " ) { 
 + buildEnv . inside ( " - e HOME = / tmp - e _ JAVA _ OPTIONS = - Duser . home = / tmp - - privileged - v / dev / bus / usb : / dev / bus / usb - v $ { env . HOME } / gradle - cache : / tmp / . gradle - v $ { env . HOME } / . android : / tmp / . android " ) { 
 stage ' JVM tests ' 
 try { 
 gradle ' assemble check javadoc ' 
 diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle 
 index b7d0fc5 . . 78bb438 100644 
 - - - a / realm / realm - jni / build . gradle 
 + + + b / realm / realm - jni / build . gradle 
 @ @ - 122 , 27 + 122 , 29 @ @ def getNdk ( ) { 
 if ( ! System . env . NDK _ HOME ) { 
 throw new GradleException ( ' The NDK _ HOME environment variable is not set . ' ) 
 } 
 - def ndkDir = file ( System . env . NDK _ HOME ) 
 + def ndkDir = new File ( System . env . NDK _ HOME ) 
 if ( ! ndkDir . directory ) { 
 throw new GradleException ( ' The path provided in the NDK _ HOME environment variable is not a folder . ' ) 
 } 
 def detectedNdkVersion 
 - if ( file ( " $ { ndkDir } / RELEASE . TXT " ) . file ) { 
 - detectedNdkVersion = file ( " $ { ndkDir } / RELEASE . TXT " ) . text . trim ( ) . split ( ) [ 0 ] . split ( ' - ' ) [ 0 ] 
 - } else if ( file ( " $ { ndkDir } / source . properties " ) . file ) { 
 - def reader = file ( " $ { ndkDir } / source . properties " ) . newReader ( ) 
 + def releaseFile = new File ( ndkDir , ' RELEASE . TXT ' ) 
 + def propertyFile = new File ( ndkDir , ' source . properties ' ) 
 + if ( releaseFile . isFile ( ) ) { 
 + detectedNdkVersion = releaseFile . text . trim ( ) . split ( ) [ 0 ] . split ( ' - ' ) [ 0 ] 
 + } else if ( propertyFile . isFile ( ) ) { 
 + def reader = propertyFile . newReader ( ) 
 try { 
 def props = new Properties ( ) 
 props . load ( reader ) 
 detectedNdkVersion = props . get ( ' Pkg . Revision ' ) 
 if ( detectedNdkVersion = = null ) { 
 - throw new GradleException ( " failed to obtain ndk version information from $ { ndkDir } / source . properties " ) 
 + throw new GradleException ( " Failed to obtain the NDK version information from $ { ndkDir } / source . properties " ) 
 } 
 } finally { 
 reader . close ( ) 
 } 
 } else { 
 - throw new GradleException ( ' The path provided in the NDK _ HOME environment variable does not seem to be an Android NDK . ' ) 
 + throw new GradleException ( " Neither $ { releaseFile . getAbsolutePath ( ) } nor $ { propertyFile . getAbsolutePath ( ) } is a file . " ) 
 } 
 / / noinspection GroovyVariableNotAssigned 
 if ( detectedNdkVersion ! = ndkVersion ) {
