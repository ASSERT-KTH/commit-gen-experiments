BLEU SCORE: 0.16186478197091597

TEST MSG: Better nullability docs
GENERATED MSG: Javadoc for Required annotation

TEST DIFF (one line): diff - - git a / realm - annotations / src / main / java / io / realm / annotations / Required . java b / realm - annotations / src / main / java / io / realm / annotations / Required . java <nl> index 16750ab . . 7f2c4aa 100644 <nl> - - - a / realm - annotations / src / main / java / io / realm / annotations / Required . java <nl> + + + b / realm - annotations / src / main / java / io / realm / annotations / Required . java <nl> @ @ - 21 , 23 + 21 , 25 @ @ import java . lang . annotation . RetentionPolicy ; <nl> import java . lang . annotation . Target ; <nl> <nl> / * * <nl> - * This annotation will mark the field or the element of a primitive { @ link io . realm . RealmList } as not nullable . <nl> + * This annotation will mark the field or the element in { @ link io . realm . RealmList } as not nullable . <nl> * < p > <nl> * When a field of type { @ code Boolean , Byte , Short , Integer , Long , Float , Double , String , byte [ ] , Date } is annotated <nl> - * with { @ link Required } , it cannot be set to { @ code null } . <nl> + * with { @ link Required } , it cannot be set to { @ code null } and Realm will throw an exception if it happens . <nl> * < p > <nl> - * Fields with primitive types are implicitly required . <nl> + * Fields with primitive types are implicitly required . Note , { @ code String } is not a primitive type , so in Java <nl> + * it is default nullable unless it is marked { @ code \ @ Required } . In Kotlin the reverse is true , so a { @ code String } is <nl> + * non - null . To specify a nullable String in Kotlin you should use { @ code String ? } . <nl> * < p > <nl> - * When a primitive { @ link io . realm . RealmList } ( { @ code RealmList < String > , RealmList < byte [ ] > , RealmList < Boolean > , <nl> - * RealmList < Byte > , RealmList < Short > , RealmList < Integer > , RealmList < Long > , RealmList < Float > , RealmList < Double > , <nl> - * RealmList < Date > } ) is annotated with { @ link Required } , it cannot contain { @ code null } values . <nl> + * If this annotation is used on a { @ code RealmList } , the annotation is applied to the elements inside <nl> + * the list and not the list itself . The list itself is always non - null . This means that a list marked with this <nl> + * annotation are never allowed to hold { @ code null } values even if the datatype would otherwise allow it . <nl> + * Realm will throw an exception if you attempt to store null values into a list marked { @ code \ @ Required } . <nl> * < p > <nl> - * The { @ link io . realm . RealmList } field itself is required always . <nl> - * < p > <nl> - * Compiling will fail when fields with other types have { @ link Required } annotation . <nl> + * Compiling will fail if the { @ link Required } annotation is put an a { @ link io . realm . RealmList } containing references to other <nl> + * Realm objects . <nl> * / <nl> @ Retention ( RetentionPolicy . RUNTIME ) <nl> @ Target ( ElementType . FIELD ) <nl> public @ interface Required { <nl> <nl> - } <nl> \ No newline at end of file <nl> + }
NEAREST DIFF (one line): diff - - git a / realm - annotations / src / main / java / io / realm / annotations / Required . java b / realm - annotations / src / main / java / io / realm / annotations / Required . java <nl> index 2950b0e . . 16750ab 100644 <nl> - - - a / realm - annotations / src / main / java / io / realm / annotations / Required . java <nl> + + + b / realm - annotations / src / main / java / io / realm / annotations / Required . java <nl> @ @ - 21 , 13 + 21 , 20 @ @ import java . lang . annotation . RetentionPolicy ; <nl> import java . lang . annotation . Target ; <nl> <nl> / * * <nl> - * This annotation will mark the field as not nullable . When the field is { @ link Required } , <nl> - * it cannot be set to { @ code null } . <nl> + * This annotation will mark the field or the element of a primitive { @ link io . realm . RealmList } as not nullable . <nl> * < p > <nl> - * Only { @ code Boolean , Byte , Short , Integer , Long , Float , Double , String , byte [ ] , Date } can be annotated <nl> - * with { @ link Required } . Compiling will fail when fields with other types have { @ link Required } annotation . <nl> - * Fields with primitive types and the { @ link io . realm . RealmList } type are required implicitly . <nl> - * Fields with { @ link io . realm . RealmObject } type are always nullable . <nl> + * When a field of type { @ code Boolean , Byte , Short , Integer , Long , Float , Double , String , byte [ ] , Date } is annotated <nl> + * with { @ link Required } , it cannot be set to { @ code null } . <nl> + * < p > <nl> + * Fields with primitive types are implicitly required . <nl> + * < p > <nl> + * When a primitive { @ link io . realm . RealmList } ( { @ code RealmList < String > , RealmList < byte [ ] > , RealmList < Boolean > , <nl> + * RealmList < Byte > , RealmList < Short > , RealmList < Integer > , RealmList < Long > , RealmList < Float > , RealmList < Double > , <nl> + * RealmList < Date > } ) is annotated with { @ link Required } , it cannot contain { @ code null } values . <nl> + * < p > <nl> + * The { @ link io . realm . RealmList } field itself is required always . <nl> + * < p > <nl> + * Compiling will fail when fields with other types have { @ link Required } annotation . <nl> * / <nl> @ Retention ( RetentionPolicy . RUNTIME ) <nl> @ Target ( ElementType . FIELD )

TEST DIFF:
diff - - git a / realm - annotations / src / main / java / io / realm / annotations / Required . java b / realm - annotations / src / main / java / io / realm / annotations / Required . java 
 index 16750ab . . 7f2c4aa 100644 
 - - - a / realm - annotations / src / main / java / io / realm / annotations / Required . java 
 + + + b / realm - annotations / src / main / java / io / realm / annotations / Required . java 
 @ @ - 21 , 23 + 21 , 25 @ @ import java . lang . annotation . RetentionPolicy ; 
 import java . lang . annotation . Target ; 
 
 / * * 
 - * This annotation will mark the field or the element of a primitive { @ link io . realm . RealmList } as not nullable . 
 + * This annotation will mark the field or the element in { @ link io . realm . RealmList } as not nullable . 
 * < p > 
 * When a field of type { @ code Boolean , Byte , Short , Integer , Long , Float , Double , String , byte [ ] , Date } is annotated 
 - * with { @ link Required } , it cannot be set to { @ code null } . 
 + * with { @ link Required } , it cannot be set to { @ code null } and Realm will throw an exception if it happens . 
 * < p > 
 - * Fields with primitive types are implicitly required . 
 + * Fields with primitive types are implicitly required . Note , { @ code String } is not a primitive type , so in Java 
 + * it is default nullable unless it is marked { @ code \ @ Required } . In Kotlin the reverse is true , so a { @ code String } is 
 + * non - null . To specify a nullable String in Kotlin you should use { @ code String ? } . 
 * < p > 
 - * When a primitive { @ link io . realm . RealmList } ( { @ code RealmList < String > , RealmList < byte [ ] > , RealmList < Boolean > , 
 - * RealmList < Byte > , RealmList < Short > , RealmList < Integer > , RealmList < Long > , RealmList < Float > , RealmList < Double > , 
 - * RealmList < Date > } ) is annotated with { @ link Required } , it cannot contain { @ code null } values . 
 + * If this annotation is used on a { @ code RealmList } , the annotation is applied to the elements inside 
 + * the list and not the list itself . The list itself is always non - null . This means that a list marked with this 
 + * annotation are never allowed to hold { @ code null } values even if the datatype would otherwise allow it . 
 + * Realm will throw an exception if you attempt to store null values into a list marked { @ code \ @ Required } . 
 * < p > 
 - * The { @ link io . realm . RealmList } field itself is required always . 
 - * < p > 
 - * Compiling will fail when fields with other types have { @ link Required } annotation . 
 + * Compiling will fail if the { @ link Required } annotation is put an a { @ link io . realm . RealmList } containing references to other 
 + * Realm objects . 
 * / 
 @ Retention ( RetentionPolicy . RUNTIME ) 
 @ Target ( ElementType . FIELD ) 
 public @ interface Required { 
 
 - } 
 \ No newline at end of file 
 + }

NEAREST DIFF:
diff - - git a / realm - annotations / src / main / java / io / realm / annotations / Required . java b / realm - annotations / src / main / java / io / realm / annotations / Required . java 
 index 2950b0e . . 16750ab 100644 
 - - - a / realm - annotations / src / main / java / io / realm / annotations / Required . java 
 + + + b / realm - annotations / src / main / java / io / realm / annotations / Required . java 
 @ @ - 21 , 13 + 21 , 20 @ @ import java . lang . annotation . RetentionPolicy ; 
 import java . lang . annotation . Target ; 
 
 / * * 
 - * This annotation will mark the field as not nullable . When the field is { @ link Required } , 
 - * it cannot be set to { @ code null } . 
 + * This annotation will mark the field or the element of a primitive { @ link io . realm . RealmList } as not nullable . 
 * < p > 
 - * Only { @ code Boolean , Byte , Short , Integer , Long , Float , Double , String , byte [ ] , Date } can be annotated 
 - * with { @ link Required } . Compiling will fail when fields with other types have { @ link Required } annotation . 
 - * Fields with primitive types and the { @ link io . realm . RealmList } type are required implicitly . 
 - * Fields with { @ link io . realm . RealmObject } type are always nullable . 
 + * When a field of type { @ code Boolean , Byte , Short , Integer , Long , Float , Double , String , byte [ ] , Date } is annotated 
 + * with { @ link Required } , it cannot be set to { @ code null } . 
 + * < p > 
 + * Fields with primitive types are implicitly required . 
 + * < p > 
 + * When a primitive { @ link io . realm . RealmList } ( { @ code RealmList < String > , RealmList < byte [ ] > , RealmList < Boolean > , 
 + * RealmList < Byte > , RealmList < Short > , RealmList < Integer > , RealmList < Long > , RealmList < Float > , RealmList < Double > , 
 + * RealmList < Date > } ) is annotated with { @ link Required } , it cannot contain { @ code null } values . 
 + * < p > 
 + * The { @ link io . realm . RealmList } field itself is required always . 
 + * < p > 
 + * Compiling will fail when fields with other types have { @ link Required } annotation . 
 * / 
 @ Retention ( RetentionPolicy . RUNTIME ) 
 @ Target ( ElementType . FIELD )
