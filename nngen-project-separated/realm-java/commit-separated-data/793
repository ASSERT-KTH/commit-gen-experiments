BLEU SCORE: 0.06542540885608186

TEST MSG: Add unit tests for compatibility with iOS NSDate
GENERATED MSG: Added tests for reading iOS realms . Added option for custom schemas .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default - encrypted . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default - encrypted . realm <nl> deleted file mode 100644 <nl> index dfc4bfd . . 0000000 <nl> Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default - encrypted . realm and / dev / null differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default . realm <nl> deleted file mode 100644 <nl> index 3705ef7 . . 0000000 <nl> Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default . realm and / dev / null differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - max . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - max . realm <nl> deleted file mode 100644 <nl> index d68968f . . 0000000 <nl> Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - max . realm and / dev / null differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - min . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - min . realm <nl> deleted file mode 100644 <nl> index dc6b239 . . 0000000 <nl> Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - min . realm and / dev / null differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes . realm <nl> deleted file mode 100644 <nl> index 2b62349 . . 0000000 <nl> Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes . realm and / dev / null differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default - encrypted . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default - encrypted . realm <nl> new file mode 100644 <nl> index 0000000 . . 6ef6a6e <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default - encrypted . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default . realm <nl> new file mode 100644 <nl> index 0000000 . . 300c912 <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - max . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - max . realm <nl> new file mode 100644 <nl> index 0000000 . . e798f85 <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - max . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - min . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - min . realm <nl> new file mode 100644 <nl> index 0000000 . . 0bb0cb6 <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - min . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - null - value . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - null - value . realm <nl> new file mode 100644 <nl> index 0000000 . . 1cac2ca <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - null - value . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes . realm <nl> new file mode 100644 <nl> index 0000000 . . 1c8b35f <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / README b / realm / realm - library / src / androidTest / assets / ios / README <nl> deleted file mode 100644 <nl> index 8513154 . . 0000000 <nl> - - - a / realm / realm - library / src / androidTest / assets / ios / README <nl> + + + / dev / null <nl> @ @ - 1 , 167 + 0 , 0 @ @ <nl> - This folder contains various Realm databases created on iOS and can be used to test interop with <nl> - Realm - Android . <nl> - <nl> - The databases are generated using the following iOS code : <nl> - <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / <nl> - / / Copyright 2015 Realm Inc . <nl> - / / <nl> - / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - / / you may not use this file except in compliance with the License . <nl> - / / You may obtain a copy of the License at <nl> - / / <nl> - / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - / / <nl> - / / Unless required by applicable law or agreed to in writing , software <nl> - / / distributed under the License is distributed on an " AS IS " BASIS , <nl> - / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - / / See the License for the specific language governing permissions and <nl> - / / limitations under the License . <nl> - / / <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - <nl> - # import " AppDelegate . h " <nl> - # import < Realm / Realm . h > <nl> - <nl> - @ interface IOSChild : RLMObject <nl> - @ property NSString * name ; <nl> - @ end <nl> - RLM _ ARRAY _ TYPE ( IOSChild ) <nl> - <nl> - @ implementation IOSChild <nl> - @ end <nl> - <nl> - @ interface IOSAllTypes : RLMObject <nl> - @ property long id ; <nl> - @ property bool boolCol ; <nl> - @ property short shortCol ; <nl> - @ property int intCol ; <nl> - @ property long longCol ; <nl> - @ property float floatCol ; <nl> - @ property double doubleCol ; <nl> - @ property NSData * byteCol ; <nl> - @ property NSString * stringCol ; <nl> - @ property NSDate * dateCol ; <nl> - @ property IOSChild * child ; <nl> - @ property RLMArray < IOSChild > * children ; <nl> - @ end <nl> - RLM _ ARRAY _ TYPE ( AllTypes ) <nl> - <nl> - @ implementation IOSAllTypes <nl> - + ( NSString * ) primaryKey { <nl> - return @ " id " ; <nl> - } <nl> - @ end <nl> - <nl> - @ implementation AppDelegate <nl> - <nl> - - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions <nl> - { <nl> - self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; <nl> - self . window . rootViewController = [ [ UIViewController alloc ] init ] ; <nl> - [ self . window makeKeyAndVisible ] ; <nl> - <nl> - NSLog ( @ " Documents Directory : % @ " , [ [ [ NSFileManager defaultManager ] URLsForDirectory : NSDocumentDirectory inDomains : NSUserDomainMask ] lastObject ] ) ; <nl> - <nl> - const NSString * version = @ " 0 . 96 . 2 " ; <nl> - const unsigned char no _ bytes [ ] = { } ; <nl> - const unsigned char bytes [ ] = { 1 , 2 , 3 } ; <nl> - <nl> - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes . realm " , version ] ] ; <nl> - RLMRealm * realm = [ RLMRealm defaultRealm ] ; <nl> - [ realm beginWriteTransaction ] ; <nl> - for ( int i = 0 ; i < 10 ; i + + ) { <nl> - IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> - obj . id = i + 1 ; <nl> - obj . boolCol = TRUE ; <nl> - obj . shortCol = 1 + i ; <nl> - obj . intCol = 10 + i ; <nl> - obj . longCol = 100 + i ; <nl> - obj . floatCol = 1 . 23 + i ; <nl> - obj . doubleCol = 1 . 234 + i ; <nl> - obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; <nl> - obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; <nl> - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; <nl> - <nl> - obj . child = [ [ IOSChild alloc ] init ] ; <nl> - obj . child . name = @ " Foo " ; <nl> - for ( int j = 0 ; j < 10 ; j + + ) { <nl> - IOSChild * c = [ [ IOSChild alloc ] init ] ; <nl> - c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; <nl> - [ obj . children addObject : c ] ; <nl> - } <nl> - [ realm addObject : obj ] ; <nl> - } <nl> - [ realm commitWriteTransaction ] ; <nl> - <nl> - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - default . realm " , version ] ] ; <nl> - realm = [ RLMRealm defaultRealm ] ; <nl> - [ realm beginWriteTransaction ] ; <nl> - IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> - obj . stringCol = @ " " ; <nl> - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> - [ realm addObject : obj ] ; <nl> - [ realm commitWriteTransaction ] ; <nl> - <nl> - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] ] ; <nl> - realm = [ RLMRealm defaultRealm ] ; <nl> - [ realm beginWriteTransaction ] ; <nl> - obj = [ [ IOSAllTypes alloc ] init ] ; <nl> - obj . boolCol = FALSE ; <nl> - obj . shortCol = SHRT _ MIN ; <nl> - obj . intCol = INT _ MIN ; <nl> - obj . longCol = LONG _ MIN ; <nl> - obj . floatCol = FLT _ MIN ; <nl> - obj . doubleCol = DBL _ MIN ; <nl> - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> - obj . stringCol = @ " " ; <nl> - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> - [ realm addObject : obj ] ; <nl> - [ realm commitWriteTransaction ] ; <nl> - <nl> - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] ] ; <nl> - realm = [ RLMRealm defaultRealm ] ; <nl> - [ realm beginWriteTransaction ] ; <nl> - obj = [ [ IOSAllTypes alloc ] init ] ; <nl> - obj . boolCol = TRUE ; <nl> - obj . shortCol = SHRT _ MAX ; <nl> - obj . intCol = INT _ MAX ; <nl> - obj . longCol = LONG _ MAX ; <nl> - obj . floatCol = FLT _ MAX ; <nl> - obj . doubleCol = DBL _ MAX ; <nl> - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> - obj . stringCol = @ " " ; <nl> - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : LONG _ MAX ] ; <nl> - [ realm addObject : obj ] ; <nl> - [ realm commitWriteTransaction ] ; <nl> - <nl> - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - default - encrypted . realm " , version ] ] ; <nl> - uint8 _ t buffer [ 64 ] ; <nl> - for ( int i = 0 ; i < sizeof ( buffer ) ; i + + ) { <nl> - buffer [ i ] = 1 ; <nl> - } <nl> - NSData * keyData = [ [ NSData alloc ] initWithBytes : buffer length : sizeof ( buffer ) ] ; / / Zerofilled byte array <nl> - NSError * error ; <nl> - realm = [ RLMRealm realmWithPath : [ RLMRealm defaultRealmPath ] encryptionKey : keyData readOnly : NO error : & error ] ; <nl> - [ realm beginWriteTransaction ] ; <nl> - obj = [ [ IOSAllTypes alloc ] init ] ; <nl> - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> - obj . stringCol = @ " " ; <nl> - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> - [ realm addObject : obj ] ; <nl> - [ realm commitWriteTransaction ] ; <nl> - <nl> - NSLog ( @ " Done " ) ; <nl> - return YES ; <nl> - } <nl> - <nl> - + ( void ) setDefaultRealm : ( NSString * ) realmName <nl> - { <nl> - NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; <nl> - NSString * allTypesRealm = [ documentsDirectory stringByAppendingPathComponent : realmName ] ; <nl> - [ RLMRealm setDefaultRealmPath : allTypesRealm ] ; <nl> - [ [ NSFileManager defaultManager ] removeItemAtPath : [ RLMRealm defaultRealmPath ] error : nil ] ; <nl> - } <nl> - @ end <nl> diff - - git a / realm / realm - library / src / androidTest / assets / ios / README . md b / realm / realm - library / src / androidTest / assets / ios / README . md <nl> new file mode 100644 <nl> index 0000000 . . b385f78 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / androidTest / assets / ios / README . md <nl> @ @ - 0 , 0 + 1 , 215 @ @ <nl> + This folder contains various Realm databases created on iOS and can be used to test interop with <nl> + Realm - Android . The databases are generated using the below iOS code . <nl> + <nl> + ( 02 / 18 - 2016 ) Note that we should match the core version ( 0 . 96 . 0 ) used in Cocoa ( 0 . 98 . 0 ) for Java ( 0 . 87 . 4 ) . <nl> + <nl> + # # # HOWTO <nl> + <nl> + 1 . Checkout realm - cocoa . <nl> + 2 . Open ~ / realm - cocoa / RealmExamples . xcodeproj in Xcode . <nl> + 3 . Rename ` / Simple / AppDelegate . m ` to ` / Simple / AppDelegate . mm ` and replace the content with the below code . <nl> + 4 . Run Simple project . <nl> + 5 . Copy / paste output Realm files into Java unit tests asset directory . <nl> + <nl> + # # # DISABLE DEBUGGING : <nl> + <nl> + 1 . Click on spinner that chooses which Example to run . <nl> + 2 . At the bottom should be a button called " Edit Scheme " . <nl> + 3 . Choose " Run " if not selected already . <nl> + 4 . Remove check in " Debug executable " . <nl> + 5 . Save and run . <nl> + <nl> + See the Log for where the output files are located . <nl> + <nl> + ` ` ` objective - c <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / <nl> + / / Copyright 2016 Realm Inc . <nl> + / / <nl> + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + / / you may not use this file except in compliance with the License . <nl> + / / You may obtain a copy of the License at <nl> + / / <nl> + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + / / <nl> + / / Unless required by applicable law or agreed to in writing , software <nl> + / / distributed under the License is distributed on an " AS IS " BASIS , <nl> + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + / / See the License for the specific language governing permissions and <nl> + / / limitations under the License . <nl> + / / <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + # import " AppDelegate . h " <nl> + # import < Realm / Realm . h > <nl> + # include < limits > <nl> + using namespace std ; <nl> + <nl> + @ interface IOSChild : RLMObject <nl> + @ property NSString * name ; <nl> + @ end <nl> + RLM _ ARRAY _ TYPE ( IOSChild ) <nl> + <nl> + @ implementation IOSChild <nl> + @ end <nl> + <nl> + @ interface IOSAllTypes : RLMObject <nl> + @ property long id ; <nl> + @ property bool boolCol ; <nl> + @ property short shortCol ; <nl> + @ property int intCol ; <nl> + @ property long longCol ; <nl> + @ property int64 _ t longLongCol ; <nl> + @ property float floatCol ; <nl> + @ property double doubleCol ; <nl> + @ property NSData * byteCol ; <nl> + @ property NSString * stringCol ; <nl> + @ property NSDate * dateCol ; <nl> + @ property IOSChild * child ; <nl> + @ property RLMArray < IOSChild > * children ; <nl> + @ end <nl> + RLM _ ARRAY _ TYPE ( AllTypes ) <nl> + <nl> + @ implementation IOSAllTypes <nl> + + ( NSString * ) primaryKey { <nl> + return @ " id " ; <nl> + } <nl> + @ end <nl> + <nl> + @ implementation AppDelegate <nl> + <nl> + + ( int64 _ t ) realm _ from _ nsdate : ( NSDate * ) nsdate { <nl> + return static _ cast < int64 _ t > ( [ nsdate timeIntervalSince1970 ] ) ; <nl> + } <nl> + <nl> + + ( NSString * ) getRealmFilePath : ( NSString * ) realmName { <nl> + NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; <nl> + return [ documentsDirectory stringByAppendingPathComponent : realmName ] ; <nl> + } <nl> + <nl> + + ( RLMRealm * ) appDefaultRealm : ( NSString * ) realmName { <nl> + NSString * allTypesRealm = [ AppDelegate getRealmFilePath : realmName ] ; <nl> + [ [ NSFileManager defaultManager ] removeItemAtPath : allTypesRealm error : nil ] ; <nl> + RLMRealm * realm = [ RLMRealm realmWithPath : allTypesRealm ] ; <nl> + return realm ; <nl> + } <nl> + <nl> + - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions { <nl> + <nl> + self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; <nl> + self . window . rootViewController = [ [ UIViewController alloc ] init ] ; <nl> + [ self . window makeKeyAndVisible ] ; <nl> + <nl> + NSLog ( @ " Documents Directory : % @ " , [ [ [ NSFileManager defaultManager ] URLsForDirectory : NSDocumentDirectory inDomains : NSUserDomainMask ] lastObject ] ) ; <nl> + <nl> + const NSString * version = @ " 0 . 98 . 0 " ; <nl> + const unsigned char no _ bytes [ ] = { } ; <nl> + const unsigned char bytes [ ] = { 1 , 2 , 3 } ; <nl> + <nl> + RLMRealm * realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes . realm " , version ] ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . id = i + 1 ; <nl> + obj . boolCol = TRUE ; <nl> + obj . shortCol = 1 + i ; <nl> + obj . intCol = 10 + i ; <nl> + obj . longCol = 100 + i ; <nl> + obj . longLongCol = 100000000 + i ; <nl> + obj . floatCol = 1 . 23 + i ; <nl> + obj . doubleCol = 1 . 234 + i ; <nl> + obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; <nl> + obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; <nl> + <nl> + obj . child = [ [ IOSChild alloc ] init ] ; <nl> + obj . child . name = @ " Foo " ; <nl> + for ( int j = 0 ; j < 10 ; j + + ) { <nl> + IOSChild * c = [ [ IOSChild alloc ] init ] ; <nl> + c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; <nl> + [ obj . children addObject : c ] ; <nl> + } <nl> + [ realm addObject : obj ] ; <nl> + } <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - default . realm " , version ] ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - null - value . realm " , version ] ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . byteCol = nil ; <nl> + obj . stringCol = nil ; <nl> + obj . dateCol = nil ; <nl> + obj . child = nil ; <nl> + obj . children = nil ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = FALSE ; <nl> + obj . shortCol = SHRT _ MIN ; <nl> + obj . intCol = INT _ MIN ; <nl> + obj . longCol = LONG _ MIN ; <nl> + obj . longLongCol = std : : numeric _ limits < int64 _ t > : : min ( ) ; <nl> + obj . floatCol = - FLT _ MAX ; <nl> + obj . doubleCol = - DBL _ MAX ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSinceReferenceDate : - DBL _ MAX ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + NSLog ( @ " % @ , obj . longLongCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] , obj . longLongCol ) ; <nl> + NSLog ( @ " % @ , obj . dateCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] , [ AppDelegate realm _ from _ nsdate : obj . dateCol ] ) ; <nl> + <nl> + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = TRUE ; <nl> + obj . shortCol = SHRT _ MAX ; <nl> + obj . intCol = INT _ MAX ; <nl> + obj . longCol = LONG _ MAX ; <nl> + obj . longLongCol = std : : numeric _ limits < int64 _ t > : : max ( ) ; <nl> + obj . floatCol = FLT _ MAX ; <nl> + obj . doubleCol = DBL _ MAX ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSinceReferenceDate : DBL _ MAX ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + NSLog ( @ " % @ , obj . longLongCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] , obj . longLongCol ) ; <nl> + NSLog ( @ " % @ , obj . dateCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] , [ AppDelegate realm _ from _ nsdate : obj . dateCol ] ) ; <nl> + <nl> + uint8 _ t buffer [ 64 ] ; <nl> + for ( int i = 0 ; i < sizeof ( buffer ) ; i + + ) { <nl> + buffer [ i ] = 1 ; <nl> + } <nl> + NSData * keyData = [ [ NSData alloc ] initWithBytes : buffer length : sizeof ( buffer ) ] ; / / Zerofilled byte array <nl> + NSError * error ; <nl> + RLMRealmConfiguration * config = [ RLMRealmConfiguration defaultConfiguration ] ; <nl> + config . path = [ AppDelegate getRealmFilePath : [ NSString stringWithFormat : @ " % @ - alltypes - default - encrypted . realm " , version ] ] ; <nl> + config . encryptionKey = keyData ; <nl> + config . readOnly = NO ; <nl> + realm = [ RLMRealm realmWithConfiguration : config error : & error ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + NSLog ( @ " Done " ) ; <nl> + return YES ; <nl> + } <nl> + @ end <nl> + ` ` ` <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java <nl> index 48b9347 . . b1521fa 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java <nl> @ @ - 39 , 7 + 39 , 6 @ @ import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertNull ; <nl> <nl> - <nl> import static io . realm . internal . test . ExtraTests . assertArrayEquals ; <nl> <nl> / * * <nl> @ @ - 51 , 7 + 50 , 7 @ @ public class IOSRealmTests { <nl> @ Rule <nl> public final TestRealmConfigurationFactory configFactory = new TestRealmConfigurationFactory ( ) ; <nl> <nl> - private static final String [ ] IOS _ VERSIONS = new String [ ] { " 0 . 96 . 2 " } ; <nl> + private static final String [ ] IOS _ VERSIONS = new String [ ] { " 0 . 98 . 0 " } ; <nl> private static final String REALM _ NAME = " alltypes . realm " ; <nl> private Realm realm ; <nl> private Context context ; <nl> @ @ - 61 , 6 + 60 , 7 @ @ public class IOSRealmTests { <nl> RealmConfiguration defaultConfiguration = configFactory . createConfigurationBuilder ( ) <nl> . name ( REALM _ NAME ) <nl> . schema ( IOSAllTypes . class , IOSChild . class ) <nl> + . deleteRealmIfMigrationNeeded ( ) <nl> . build ( ) ; <nl> Realm . setDefaultConfiguration ( defaultConfiguration ) ; <nl> context = InstrumentationRegistry . getInstrumentation ( ) . getContext ( ) ; <nl> @ @ - 74 , 7 + 74 , 6 @ @ public class IOSRealmTests { <nl> } <nl> } <nl> <nl> - / / Test relationships and that data in general can be retrieved from an iOS realm <nl> @ Test <nl> public void iOSDataTypes ( ) throws IOException { <nl> for ( String iosVersion : IOS _ VERSIONS ) { <nl> @ @ - 82 , 31 + 81 , 34 @ @ public class IOSRealmTests { <nl> " ios / " + iosVersion + " - alltypes . realm " , REALM _ NAME ) ; <nl> realm = Realm . getDefaultInstance ( ) ; <nl> RealmResults < IOSAllTypes > result = realm . allObjectsSorted ( IOSAllTypes . class , " id " , Sort . ASCENDING ) ; <nl> - <nl> / / Verify metadata <nl> Table table = realm . getTable ( IOSAllTypes . class ) ; <nl> assertTrue ( table . hasPrimaryKey ( ) ) ; <nl> assertTrue ( table . hasSearchIndex ( table . getColumnIndex ( " id " ) ) ) ; <nl> - <nl> - IOSAllTypes obj = result . get ( 1 ) ; <nl> - assertTrue ( obj . isBoolCol ( ) ) ; <nl> - assertEquals ( 2 , obj . getShortCol ( ) ) ; <nl> - assertEquals ( 11 , obj . getIntCol ( ) ) ; <nl> - assertEquals ( 101L , obj . getLongCol ( ) ) ; <nl> - assertEquals ( 2 . 23F , obj . getFloatCol ( ) , 0F ) ; <nl> - assertEquals ( 2 . 234D , obj . getDoubleCol ( ) , 0D ) ; <nl> - assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; <nl> - assertEquals ( " String 1 " , obj . getStringCol ( ) ) ; <nl> - assertEquals ( new Date ( 1001 * 1000 ) , obj . getDateCol ( ) ) ; <nl> - assertEquals ( " Foo " , result . get ( 1 ) . getChild ( ) . getName ( ) ) ; <nl> - assertEquals ( 10 , result . size ( ) ) ; <nl> - assertEquals ( 10 , result . get ( 1 ) . getChildren ( ) . size ( ) ) ; <nl> - assertEquals ( " Name : 1 " , result . get ( 1 ) . getChildren ( ) . get ( 1 ) . getName ( ) ) ; <nl> + / / iterative check <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + IOSAllTypes obj = result . get ( i ) ; <nl> + assertTrue ( obj . isBoolCol ( ) ) ; <nl> + assertEquals ( i + 1 , obj . getShortCol ( ) ) ; <nl> + assertEquals ( 10 + i , obj . getIntCol ( ) ) ; <nl> + assertEquals ( 100 + i , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 100000000L + ( long ) i , obj . getLongLongCol ( ) ) ; <nl> + assertEquals ( 1 . 23F + ( float ) i , obj . getFloatCol ( ) , 0F ) ; <nl> + assertEquals ( 1 . 234D + ( double ) i , obj . getDoubleCol ( ) , 0D ) ; <nl> + assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " String " + Integer . toString ( i ) , obj . getStringCol ( ) ) ; <nl> + assertEquals ( new Date ( ( 1000 + i ) * 1000 ) , obj . getDateCol ( ) ) ; <nl> + assertEquals ( " Foo " , result . get ( i ) . getChild ( ) . getName ( ) ) ; <nl> + assertEquals ( 10 , result . get ( i ) . getChildren ( ) . size ( ) ) ; <nl> + for ( int j = 0 ; j < 10 ; j + + ) { <nl> + assertEquals ( " Name : " + Integer . toString ( i ) , result . get ( i ) . getChildren ( ) . get ( j ) . getName ( ) ) ; <nl> + } <nl> + } <nl> } <nl> } <nl> <nl> @ Test <nl> - public void sOSDataTypesDefaultValues ( ) throws IOException { <nl> + public void iOSDataTypesDefaultValues ( ) throws IOException { <nl> for ( String iosVersion : IOS _ VERSIONS ) { <nl> configFactory . copyRealmFromAssets ( context , <nl> " ios / " + iosVersion + " - alltypes - default . realm " , REALM _ NAME ) ; <nl> @ @ - 116 , 7 + 118 , 8 @ @ public class IOSRealmTests { <nl> assertFalse ( obj . isBoolCol ( ) ) ; <nl> assertEquals ( 0 , obj . getShortCol ( ) ) ; <nl> assertEquals ( 0 , obj . getIntCol ( ) ) ; <nl> - assertEquals ( 0L , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 0 , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 0L , obj . getLongLongCol ( ) ) ; <nl> assertEquals ( 0 . 0F , obj . getFloatCol ( ) , 0F ) ; <nl> assertEquals ( 0 . 0D , obj . getDoubleCol ( ) , 0D ) ; <nl> assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; <nl> @ @ - 128 , 6 + 131 , 22 @ @ public class IOSRealmTests { <nl> } <nl> <nl> @ Test <nl> + public void iOSDataTypesNullValues ( ) throws IOException { <nl> + for ( String iosVersion : IOS _ VERSIONS ) { <nl> + configFactory . copyRealmFromAssets ( context , <nl> + " ios / " + iosVersion + " - alltypes - null - value . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getDefaultInstance ( ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertEquals ( null , obj . getByteCol ( ) ) ; <nl> + assertEquals ( null , obj . getStringCol ( ) ) ; <nl> + assertEquals ( null , obj . getDateCol ( ) ) ; <nl> + assertEquals ( null , obj . getChild ( ) ) ; <nl> + assertEquals ( new RealmList < IOSChild > ( ) , obj . getChildren ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Test <nl> public void iOSDataTypesMinimumValues ( ) throws IOException { <nl> for ( String iosVersion : IOS _ VERSIONS ) { <nl> configFactory . copyRealmFromAssets ( context , <nl> @ @ - 135 , 11 + 154 , 16 @ @ public class IOSRealmTests { <nl> realm = Realm . getDefaultInstance ( ) ; <nl> <nl> IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertFalse ( obj . isBoolCol ( ) ) ; <nl> assertEquals ( Short . MIN _ VALUE , obj . getShortCol ( ) ) ; <nl> assertEquals ( Integer . MIN _ VALUE , obj . getIntCol ( ) ) ; <nl> - assertEquals ( Long . MIN _ VALUE , obj . getLongCol ( ) ) ; <nl> - assertEquals ( Float . MIN _ NORMAL , obj . getFloatCol ( ) , 0F ) ; <nl> - assertEquals ( Double . MIN _ NORMAL , obj . getDoubleCol ( ) , 0D ) ; <nl> + assertEquals ( Integer . MIN _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Long . MIN _ VALUE , obj . getLongLongCol ( ) ) ; <nl> + assertEquals ( - Float . MAX _ VALUE , obj . getFloatCol ( ) , 0F ) ; <nl> + assertEquals ( - Double . MAX _ VALUE , obj . getDoubleCol ( ) , 0D ) ; <nl> + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " " , obj . getStringCol ( ) ) ; <nl> + assertEquals ( 0x8000000000000000L * 1000L , obj . getDateCol ( ) . getTime ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 153 , 9 + 177 , 13 @ @ public class IOSRealmTests { <nl> IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> assertEquals ( Short . MAX _ VALUE , obj . getShortCol ( ) ) ; <nl> assertEquals ( Integer . MAX _ VALUE , obj . getIntCol ( ) ) ; <nl> - assertEquals ( Long . MAX _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Integer . MAX _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Long . MAX _ VALUE , obj . getLongLongCol ( ) ) ; <nl> assertEquals ( Float . MAX _ VALUE , obj . getFloatCol ( ) , 0F ) ; <nl> assertEquals ( Double . MAX _ VALUE , obj . getDoubleCol ( ) , 0D ) ; <nl> + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " " , obj . getStringCol ( ) ) ; <nl> + assertEquals ( 0x8000000000000000L * 1000L , obj . getDateCol ( ) . getTime ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> index d1392b2 . . f3c15b7 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> @ @ - 31 , 14 + 31 , 12 @ @ public class IOSAllTypes extends RealmObject { <nl> private boolean boolCol ; <nl> private short shortCol ; <nl> private int intCol ; <nl> - private long longCol ; <nl> + private int longCol ; <nl> + private long longLongCol ; <nl> private float floatCol ; <nl> private double doubleCol ; <nl> - @ Required <nl> private byte [ ] byteCol = new byte [ 0 ] ; <nl> - @ Required <nl> private String stringCol = " " ; <nl> - @ Required <nl> private Date dateCol = new Date ( 0 ) ; <nl> private IOSChild child ; <nl> private RealmList < IOSChild > children ; <nl> @ @ - 75 , 14 + 73 , 22 @ @ public class IOSAllTypes extends RealmObject { <nl> this . intCol = intCol ; <nl> } <nl> <nl> - public long getLongCol ( ) { <nl> + public int getLongCol ( ) { <nl> return longCol ; <nl> } <nl> <nl> - public void setLongCol ( long longCol ) { <nl> + public void setLongCol ( int longCol ) { <nl> this . longCol = longCol ; <nl> } <nl> <nl> + public long getLongLongCol ( ) { <nl> + return longLongCol ; <nl> + } <nl> + <nl> + public void setLongLongCol ( long longLongCol ) { <nl> + this . longLongCol = longCol ; <nl> + } <nl> + <nl> public float getFloatCol ( ) { <nl> return floatCol ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java <nl> index 9370e7a . . 4e21616 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ import io . realm . RealmObject ; <nl> import io . realm . annotations . Required ; <nl> <nl> public class IOSChild extends RealmObject { <nl> - @ Required <nl> + <nl> private String name ; <nl> <nl> public String getName ( ) {
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm <nl> new file mode 100644 <nl> index 0000000 . . d049e3b <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm <nl> new file mode 100644 <nl> index 0000000 . . 0660c84 <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm <nl> new file mode 100644 <nl> index 0000000 . . 1002549 <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm <nl> new file mode 100644 <nl> index 0000000 . . 3f32700 <nl> Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm differ <nl> diff - - git a / realm / src / androidTest / assets / ios / README b / realm / src / androidTest / assets / ios / README <nl> new file mode 100644 <nl> index 0000000 . . 0f30efc <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / assets / ios / README <nl> @ @ - 0 , 0 + 1 , 149 @ @ <nl> + This folder contains various Realm databases created on iOS and can be used to test interop with <nl> + Realm - Android . <nl> + <nl> + The databases are generated using the following iOS code : <nl> + <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / <nl> + / / Copyright 2014 Realm Inc . <nl> + / / <nl> + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + / / you may not use this file except in compliance with the License . <nl> + / / You may obtain a copy of the License at <nl> + / / <nl> + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + / / <nl> + / / Unless required by applicable law or agreed to in writing , software <nl> + / / distributed under the License is distributed on an " AS IS " BASIS , <nl> + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + / / See the License for the specific language governing permissions and <nl> + / / limitations under the License . <nl> + / / <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + <nl> + # import " AppDelegate . h " <nl> + # import < Realm / Realm . h > <nl> + <nl> + @ interface IOSChild : RLMObject <nl> + @ property NSString * name ; <nl> + @ end <nl> + RLM _ ARRAY _ TYPE ( IOSChild ) <nl> + <nl> + @ implementation IOSChild <nl> + @ end <nl> + <nl> + @ interface IOSAllTypes : RLMObject <nl> + @ property bool boolCol ; <nl> + @ property short shortCol ; <nl> + @ property int intCol ; <nl> + @ property long longCol ; <nl> + @ property float floatCol ; <nl> + @ property double doubleCol ; <nl> + @ property NSData * byteCol ; <nl> + @ property NSString * stringCol ; <nl> + @ property NSDate * dateCol ; <nl> + @ property IOSChild * child ; <nl> + @ property RLMArray < IOSChild > * children ; <nl> + @ end <nl> + RLM _ ARRAY _ TYPE ( AllTypes ) <nl> + <nl> + @ implementation IOSAllTypes <nl> + / / + ( NSString * ) primaryKey { <nl> + / / return @ " longCol " ; <nl> + / / } <nl> + @ end <nl> + <nl> + @ implementation AppDelegate <nl> + <nl> + - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions <nl> + { <nl> + self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; <nl> + self . window . rootViewController = [ [ UIViewController alloc ] init ] ; <nl> + [ self . window makeKeyAndVisible ] ; <nl> + <nl> + const unsigned char no _ bytes [ ] = { } ; <nl> + const unsigned char bytes [ ] = { 1 , 2 , 3 } ; <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes . realm " ] ; <nl> + RLMRealm * realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = TRUE ; <nl> + obj . shortCol = 1 + i ; <nl> + obj . intCol = 10 + i ; <nl> + obj . longCol = 100 + i ; <nl> + obj . floatCol = 1 . 23 + i ; <nl> + obj . doubleCol = 1 . 234 + i ; <nl> + obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; <nl> + obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; <nl> + <nl> + obj . child = [ [ IOSChild alloc ] init ] ; <nl> + obj . child . name = @ " Foo " ; <nl> + for ( int j = 0 ; j < 10 ; j + + ) { <nl> + IOSChild * c = [ [ IOSChild alloc ] init ] ; <nl> + c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; <nl> + [ obj . children addObject : c ] ; <nl> + } <nl> + [ realm addObject : obj ] ; <nl> + } <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - default . realm " ] ; <nl> + realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - min . realm " ] ; <nl> + realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = FALSE ; <nl> + obj . shortCol = SHRT _ MIN ; <nl> + obj . intCol = INT _ MIN ; <nl> + obj . longCol = LONG _ MIN ; <nl> + obj . floatCol = FLT _ MIN ; <nl> + obj . doubleCol = DBL _ MIN ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + <nl> + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - max . realm " ] ; <nl> + realm = [ RLMRealm defaultRealm ] ; <nl> + [ realm beginWriteTransaction ] ; <nl> + obj = [ [ IOSAllTypes alloc ] init ] ; <nl> + obj . boolCol = TRUE ; <nl> + obj . shortCol = SHRT _ MAX ; <nl> + obj . intCol = INT _ MAX ; <nl> + obj . longCol = LONG _ MAX ; <nl> + obj . floatCol = FLT _ MAX ; <nl> + obj . doubleCol = DBL _ MAX ; <nl> + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; <nl> + obj . stringCol = @ " " ; <nl> + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : LONG _ MAX ] ; <nl> + [ realm addObject : obj ] ; <nl> + [ realm commitWriteTransaction ] ; <nl> + <nl> + NSLog ( @ " Done " ) ; <nl> + return YES ; <nl> + } <nl> + <nl> + + ( void ) setDefaultRealm : ( NSString * ) realmName <nl> + { <nl> + NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; <nl> + NSString * allTypesRealm = [ documentsDirectory stringByAppendingPathComponent : realmName ] ; <nl> + [ RLMRealm setDefaultRealmPath : allTypesRealm ] ; <nl> + [ [ NSFileManager defaultManager ] removeItemAtPath : [ RLMRealm defaultRealmPath ] error : nil ] ; <nl> + } <nl> + @ end <nl> diff - - git a / realm / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / src / androidTest / java / io / realm / IOSRealmTests . java <nl> new file mode 100644 <nl> index 0000000 . . c89aa0d <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / java / io / realm / IOSRealmTests . java <nl> @ @ - 0 , 0 + 1 , 99 @ @ <nl> + package io . realm ; <nl> + <nl> + import android . test . AndroidTestCase ; <nl> + <nl> + import java . io . IOException ; <nl> + import java . util . Date ; <nl> + <nl> + import io . realm . entities . IOSAllTypes ; <nl> + import io . realm . entities . IOSChild ; <nl> + <nl> + import static io . realm . internal . test . ExtraTests . assertArrayEquals ; <nl> + <nl> + / * * <nl> + * This class test interoperability with Realms created on iOS . <nl> + * / <nl> + public class IOSRealmTests extends AndroidTestCase { <nl> + <nl> + private static final String REALM _ NAME = " alltypes . realm " ; <nl> + private Realm realm ; <nl> + <nl> + @ Override <nl> + protected void setUp ( ) throws Exception { <nl> + super . setUp ( ) ; <nl> + Realm . setSchema ( IOSAllTypes . class , IOSChild . class ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void tearDown ( ) throws Exception { <nl> + super . tearDown ( ) ; <nl> + Realm . setSchema ( null ) ; <nl> + if ( realm ! = null ) { <nl> + realm . close ( ) ; <nl> + } <nl> + } <nl> + <nl> + / / Test relationships and that data in general can be retrieved from an iOS realm <nl> + public void testIOSDatatypes ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + RealmResults < IOSAllTypes > result = realm . allObjectsSorted ( IOSAllTypes . class , " longCol " , RealmResults . SORT _ ORDER _ ASCENDING ) ; <nl> + <nl> + IOSAllTypes obj = result . get ( 1 ) ; <nl> + assertTrue ( obj . isBoolCol ( ) ) ; <nl> + assertEquals ( 2 , obj . getShortCol ( ) ) ; <nl> + assertEquals ( 11 , obj . getIntCol ( ) ) ; <nl> + assertEquals ( 101L , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 2 . 23F , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( 2 . 234D , obj . getDoubleCol ( ) ) ; <nl> + assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " String 1 " , obj . getStringCol ( ) ) ; <nl> + assertEquals ( new Date ( 1001 * 1000 ) , obj . getDateCol ( ) ) ; <nl> + assertEquals ( " Foo " , result . get ( 1 ) . getChild ( ) . getName ( ) ) ; <nl> + assertEquals ( 10 , result . size ( ) ) ; <nl> + assertEquals ( 10 , result . get ( 1 ) . getChildren ( ) . size ( ) ) ; <nl> + assertEquals ( " Name : 1 " , result . get ( 1 ) . getChildren ( ) . get ( 1 ) . getName ( ) ) ; <nl> + } <nl> + <nl> + public void testIOSDatatypesDefaultValues ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - default . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertFalse ( obj . isBoolCol ( ) ) ; <nl> + assertEquals ( 0 , obj . getShortCol ( ) ) ; <nl> + assertEquals ( 0 , obj . getIntCol ( ) ) ; <nl> + assertEquals ( 0L , obj . getLongCol ( ) ) ; <nl> + assertEquals ( 0 . 0F , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( 0 . 0D , obj . getDoubleCol ( ) ) ; <nl> + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; <nl> + assertEquals ( " " , obj . getStringCol ( ) ) ; <nl> + assertEquals ( new Date ( 0 ) , obj . getDateCol ( ) ) ; <nl> + assertNull ( obj . getChild ( ) ) ; <nl> + assertEquals ( 0 , obj . getChildren ( ) . size ( ) ) ; <nl> + } <nl> + <nl> + public void testIOSDatatypesMinimumValues ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - min . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertEquals ( Short . MIN _ VALUE , obj . getShortCol ( ) ) ; <nl> + assertEquals ( Integer . MIN _ VALUE , obj . getIntCol ( ) ) ; <nl> + assertEquals ( Long . MIN _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Float . MIN _ NORMAL , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( Double . MIN _ NORMAL , obj . getDoubleCol ( ) ) ; <nl> + } <nl> + <nl> + public void testIOSDatatypesMaximumValues ( ) throws IOException { <nl> + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - max . realm " , REALM _ NAME ) ; <nl> + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> + <nl> + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; <nl> + assertEquals ( Short . MAX _ VALUE , obj . getShortCol ( ) ) ; <nl> + assertEquals ( Integer . MAX _ VALUE , obj . getIntCol ( ) ) ; <nl> + assertEquals ( Long . MAX _ VALUE , obj . getLongCol ( ) ) ; <nl> + assertEquals ( Float . MAX _ VALUE , obj . getFloatCol ( ) ) ; <nl> + assertEquals ( Double . MAX _ VALUE , obj . getDoubleCol ( ) ) ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> index c798a35 . . 680965a 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> @ @ - 1 , 37 + 1 , 18 @ @ <nl> package io . realm ; <nl> <nl> - import android . content . res . AssetManager ; <nl> import android . test . AndroidTestCase ; <nl> <nl> - import java . io . File ; <nl> - import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> <nl> import io . realm . entities . AllTypes ; <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> <nl> public class RealmMigrationTests extends AndroidTestCase { <nl> <nl> - / / Copies a Realm file from assets to app files dir <nl> - private void copyRealmFromAssets ( String fileName ) throws IOException { <nl> - AssetManager assetManager = getContext ( ) . getAssets ( ) ; <nl> - InputStream is = assetManager . open ( fileName ) ; <nl> - File file = new File ( getContext ( ) . getFilesDir ( ) , fileName ) ; <nl> - FileOutputStream outputStream = new FileOutputStream ( file ) ; <nl> - byte [ ] buf = new byte [ 1024 ] ; <nl> - int bytesRead ; <nl> - while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { <nl> - outputStream . write ( buf , 0 , bytesRead ) ; <nl> - } <nl> - outputStream . close ( ) ; <nl> - is . close ( ) ; <nl> - } <nl> - <nl> public void testRealmClosedAfterMigrationException ( ) throws IOException { <nl> String REALM _ NAME = " default0 . realm " ; <nl> Realm . deleteRealmFile ( getContext ( ) , REALM _ NAME ) ; <nl> - copyRealmFromAssets ( REALM _ NAME ) ; <nl> + TestHelper . copyRealmFromAssets ( getContext ( ) , REALM _ NAME , REALM _ NAME ) ; <nl> try { <nl> Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; <nl> fail ( " A migration should be triggered " ) ; <nl> diff - - git a / realm / src / androidTest / java / io / realm / TestHelper . java b / realm / src / androidTest / java / io / realm / TestHelper . java <nl> index fb2bd93 . . 5d1d27a 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 16 , 6 + 16 , 14 @ @ <nl> <nl> package io . realm ; <nl> <nl> + import android . content . Context ; <nl> + import android . content . res . AssetManager ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . FileOutputStream ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + <nl> import io . realm . entities . AllTypes ; <nl> <nl> public class TestHelper { <nl> @ @ - 35 , 4 + 43 , 25 @ @ public class TestHelper { <nl> object3 . setColumnString ( " Adam " ) ; <nl> testRealm . commitTransaction ( ) ; <nl> } <nl> + <nl> + / / Copies a Realm file from assets to app files dir <nl> + public static void copyRealmFromAssets ( Context context , String realmPath , String newName ) throws IOException { <nl> + AssetManager assetManager = context . getAssets ( ) ; <nl> + InputStream is = assetManager . open ( realmPath ) ; <nl> + File file = new File ( context . getFilesDir ( ) , newName ) ; <nl> + FileOutputStream outputStream = new FileOutputStream ( file ) ; <nl> + byte [ ] buf = new byte [ 1024 ] ; <nl> + int bytesRead ; <nl> + while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { <nl> + outputStream . write ( buf , 0 , bytesRead ) ; <nl> + } <nl> + outputStream . close ( ) ; <nl> + is . close ( ) ; <nl> + } <nl> + <nl> + / / Deletes the old database and copies a new one into its place <nl> + public static void prepareDatabaseFromAssets ( Context context , String realmPath , String newName ) throws IOException { <nl> + Realm . deleteRealmFile ( context , newName ) ; <nl> + TestHelper . copyRealmFromAssets ( context , realmPath , newName ) ; <nl> + } <nl> } <nl> diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> new file mode 100644 <nl> index 0000000 . . 14fb439 <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java <nl> @ @ - 0 , 0 + 1 , 109 @ @ <nl> + package io . realm . entities ; <nl> + <nl> + import java . util . Date ; <nl> + <nl> + import io . realm . RealmList ; <nl> + import io . realm . RealmObject ; <nl> + <nl> + public class IOSAllTypes extends RealmObject { <nl> + <nl> + private boolean boolCol ; <nl> + private short shortCol ; <nl> + private int intCol ; <nl> + private long longCol ; <nl> + private float floatCol ; <nl> + private double doubleCol ; <nl> + private byte [ ] byteCol ; <nl> + private String stringCol ; <nl> + private Date dateCol ; <nl> + private IOSChild child ; <nl> + private RealmList < IOSChild > children ; <nl> + <nl> + public boolean isBoolCol ( ) { <nl> + return boolCol ; <nl> + } <nl> + <nl> + public void setBoolCol ( boolean boolCol ) { <nl> + this . boolCol = boolCol ; <nl> + } <nl> + <nl> + public short getShortCol ( ) { <nl> + return shortCol ; <nl> + } <nl> + <nl> + public void setShortCol ( short shortCol ) { <nl> + this . shortCol = shortCol ; <nl> + } <nl> + <nl> + public int getIntCol ( ) { <nl> + return intCol ; <nl> + } <nl> + <nl> + public void setIntCol ( int intCol ) { <nl> + this . intCol = intCol ; <nl> + } <nl> + <nl> + public long getLongCol ( ) { <nl> + return longCol ; <nl> + } <nl> + <nl> + public void setLongCol ( long longCol ) { <nl> + this . longCol = longCol ; <nl> + } <nl> + <nl> + public float getFloatCol ( ) { <nl> + return floatCol ; <nl> + } <nl> + <nl> + public void setFloatCol ( float floatCol ) { <nl> + this . floatCol = floatCol ; <nl> + } <nl> + <nl> + public double getDoubleCol ( ) { <nl> + return doubleCol ; <nl> + } <nl> + <nl> + public void setDoubleCol ( double doubleCol ) { <nl> + this . doubleCol = doubleCol ; <nl> + } <nl> + <nl> + public byte [ ] getByteCol ( ) { <nl> + return byteCol ; <nl> + } <nl> + <nl> + public void setByteCol ( byte [ ] byteCol ) { <nl> + this . byteCol = byteCol ; <nl> + } <nl> + <nl> + public String getStringCol ( ) { <nl> + return stringCol ; <nl> + } <nl> + <nl> + public void setStringCol ( String stringCol ) { <nl> + this . stringCol = stringCol ; <nl> + } <nl> + <nl> + public Date getDateCol ( ) { <nl> + return dateCol ; <nl> + } <nl> + <nl> + public void setDateCol ( Date dateCol ) { <nl> + this . dateCol = dateCol ; <nl> + } <nl> + <nl> + public IOSChild getChild ( ) { <nl> + return child ; <nl> + } <nl> + <nl> + public void setChild ( IOSChild child ) { <nl> + this . child = child ; <nl> + } <nl> + <nl> + public RealmList < IOSChild > getChildren ( ) { <nl> + return children ; <nl> + } <nl> + <nl> + public void setChildren ( RealmList < IOSChild > children ) { <nl> + this . children = children ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSChild . java b / realm / src / androidTest / java / io / realm / entities / IOSChild . java <nl> new file mode 100644 <nl> index 0000000 . . f041de1 <nl> - - - / dev / null <nl> + + + b / realm / src / androidTest / java / io / realm / entities / IOSChild . java <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + package io . realm . entities ; <nl> + <nl> + import io . realm . RealmObject ; <nl> + <nl> + public class IOSChild extends RealmObject { <nl> + private String name ; <nl> + <nl> + public String getName ( ) { <nl> + return name ; <nl> + } <nl> + <nl> + public void setName ( String name ) { <nl> + this . name = name ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 389e5c8 . . ffd4696 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 40 , 8 + 40 , 10 @ @ import java . lang . reflect . Method ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> import java . util . UUID ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> @ @ - 164 , 6 + 166 , 7 @ @ public final class Realm implements Closeable { <nl> private final Map < Class < ? > , Constructor > generatedConstructors = new HashMap < Class < ? > , Constructor > ( ) ; <nl> private final List < RealmChangeListener > changeListeners = new ArrayList < RealmChangeListener > ( ) ; <nl> private final Map < Class < ? > , Table > tables = new HashMap < Class < ? > , Table > ( ) ; <nl> + private static final Set < Class < ? extends RealmObject > > customSchema = new HashSet < Class < ? extends RealmObject > > ( ) ; <nl> private static final long UNVERSIONED = - 1 ; <nl> <nl> / / Package protected to be reachable by proxy classes <nl> @ @ - 539 , 6 + 542 , 14 @ @ public final class Realm implements Closeable { <nl> throw new RealmException ( " An exception was thrown in the getProxyClasses method in the ValidationList class : " + APT _ NOT _ EXECUTED _ MESSAGE ) ; <nl> } <nl> <nl> + / / Custom schema overrides any schema already defined <nl> + if ( customSchema . size ( ) > 0 ) { <nl> + proxyClasses = new ArrayList < String > ( ) ; <nl> + for ( Class < ? extends RealmObject > clazz : customSchema ) { <nl> + proxyClasses . add ( clazz . getName ( ) ) ; <nl> + } <nl> + } <nl> + <nl> long version = realm . getVersion ( ) ; <nl> boolean commitNeeded = false ; <nl> try { <nl> @ @ - 1538 , 6 + 1549 , 25 @ @ public final class Realm implements Closeable { <nl> return path ; <nl> } <nl> <nl> + <nl> + / * * <nl> + * Override the standard behavior of all classes extended RealmObject being part of the schema . <nl> + * Use this method to define the schema as only the classes given here . <nl> + * <nl> + * This class must be called before calling { @ link # getInstance ( android . content . Context ) } <nl> + * <nl> + * If { @ code null } is given as parameter , the Schema is reset to use all known classes . <nl> + * <nl> + * / <nl> + public static void setSchema ( Class < ? extends RealmObject > . . . schemaClass ) { <nl> + customSchema . clear ( ) ; <nl> + if ( schemaClass ! = null ) { <nl> + for ( int i = 0 ; i < schemaClass . length ; i + + ) { <nl> + customSchema . add ( schemaClass [ i ] ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> / * * <nl> * Encapsulates a Realm transaction . <nl> * <nl> diff - - git a / settings . gradle b / settings . gradle <nl> index d0eb928 . . 698a425 100644 <nl> - - - a / settings . gradle <nl> + + + b / settings . gradle <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / / Realm projects <nl> - include ' realm ' <nl> + include ' realm ' , ' : realm - annotations - processor ' <nl> <nl> / / Example projects <nl> include ' : introExample ' ,

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default - encrypted . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default - encrypted . realm 
 deleted file mode 100644 
 index dfc4bfd . . 0000000 
 Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default - encrypted . realm and / dev / null differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default . realm 
 deleted file mode 100644 
 index 3705ef7 . . 0000000 
 Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - default . realm and / dev / null differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - max . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - max . realm 
 deleted file mode 100644 
 index d68968f . . 0000000 
 Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - max . realm and / dev / null differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - min . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - min . realm 
 deleted file mode 100644 
 index dc6b239 . . 0000000 
 Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes - min . realm and / dev / null differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes . realm 
 deleted file mode 100644 
 index 2b62349 . . 0000000 
 Binary files a / realm / realm - library / src / androidTest / assets / ios / 0 . 96 . 2 - alltypes . realm and / dev / null differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default - encrypted . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default - encrypted . realm 
 new file mode 100644 
 index 0000000 . . 6ef6a6e 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default - encrypted . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default . realm 
 new file mode 100644 
 index 0000000 . . 300c912 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - default . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - max . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - max . realm 
 new file mode 100644 
 index 0000000 . . e798f85 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - max . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - min . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - min . realm 
 new file mode 100644 
 index 0000000 . . 0bb0cb6 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - min . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - null - value . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - null - value . realm 
 new file mode 100644 
 index 0000000 . . 1cac2ca 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes - null - value . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes . realm b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes . realm 
 new file mode 100644 
 index 0000000 . . 1c8b35f 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / ios / 0 . 98 . 0 - alltypes . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / README b / realm / realm - library / src / androidTest / assets / ios / README 
 deleted file mode 100644 
 index 8513154 . . 0000000 
 - - - a / realm / realm - library / src / androidTest / assets / ios / README 
 + + + / dev / null 
 @ @ - 1 , 167 + 0 , 0 @ @ 
 - This folder contains various Realm databases created on iOS and can be used to test interop with 
 - Realm - Android . 
 - 
 - The databases are generated using the following iOS code : 
 - 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - / / 
 - / / Copyright 2015 Realm Inc . 
 - / / 
 - / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - / / you may not use this file except in compliance with the License . 
 - / / You may obtain a copy of the License at 
 - / / 
 - / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - / / 
 - / / Unless required by applicable law or agreed to in writing , software 
 - / / distributed under the License is distributed on an " AS IS " BASIS , 
 - / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - / / See the License for the specific language governing permissions and 
 - / / limitations under the License . 
 - / / 
 - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 - 
 - # import " AppDelegate . h " 
 - # import < Realm / Realm . h > 
 - 
 - @ interface IOSChild : RLMObject 
 - @ property NSString * name ; 
 - @ end 
 - RLM _ ARRAY _ TYPE ( IOSChild ) 
 - 
 - @ implementation IOSChild 
 - @ end 
 - 
 - @ interface IOSAllTypes : RLMObject 
 - @ property long id ; 
 - @ property bool boolCol ; 
 - @ property short shortCol ; 
 - @ property int intCol ; 
 - @ property long longCol ; 
 - @ property float floatCol ; 
 - @ property double doubleCol ; 
 - @ property NSData * byteCol ; 
 - @ property NSString * stringCol ; 
 - @ property NSDate * dateCol ; 
 - @ property IOSChild * child ; 
 - @ property RLMArray < IOSChild > * children ; 
 - @ end 
 - RLM _ ARRAY _ TYPE ( AllTypes ) 
 - 
 - @ implementation IOSAllTypes 
 - + ( NSString * ) primaryKey { 
 - return @ " id " ; 
 - } 
 - @ end 
 - 
 - @ implementation AppDelegate 
 - 
 - - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions 
 - { 
 - self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; 
 - self . window . rootViewController = [ [ UIViewController alloc ] init ] ; 
 - [ self . window makeKeyAndVisible ] ; 
 - 
 - NSLog ( @ " Documents Directory : % @ " , [ [ [ NSFileManager defaultManager ] URLsForDirectory : NSDocumentDirectory inDomains : NSUserDomainMask ] lastObject ] ) ; 
 - 
 - const NSString * version = @ " 0 . 96 . 2 " ; 
 - const unsigned char no _ bytes [ ] = { } ; 
 - const unsigned char bytes [ ] = { 1 , 2 , 3 } ; 
 - 
 - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes . realm " , version ] ] ; 
 - RLMRealm * realm = [ RLMRealm defaultRealm ] ; 
 - [ realm beginWriteTransaction ] ; 
 - for ( int i = 0 ; i < 10 ; i + + ) { 
 - IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 - obj . id = i + 1 ; 
 - obj . boolCol = TRUE ; 
 - obj . shortCol = 1 + i ; 
 - obj . intCol = 10 + i ; 
 - obj . longCol = 100 + i ; 
 - obj . floatCol = 1 . 23 + i ; 
 - obj . doubleCol = 1 . 234 + i ; 
 - obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; 
 - obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; 
 - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; 
 - 
 - obj . child = [ [ IOSChild alloc ] init ] ; 
 - obj . child . name = @ " Foo " ; 
 - for ( int j = 0 ; j < 10 ; j + + ) { 
 - IOSChild * c = [ [ IOSChild alloc ] init ] ; 
 - c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; 
 - [ obj . children addObject : c ] ; 
 - } 
 - [ realm addObject : obj ] ; 
 - } 
 - [ realm commitWriteTransaction ] ; 
 - 
 - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - default . realm " , version ] ] ; 
 - realm = [ RLMRealm defaultRealm ] ; 
 - [ realm beginWriteTransaction ] ; 
 - IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 - obj . stringCol = @ " " ; 
 - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 - [ realm addObject : obj ] ; 
 - [ realm commitWriteTransaction ] ; 
 - 
 - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] ] ; 
 - realm = [ RLMRealm defaultRealm ] ; 
 - [ realm beginWriteTransaction ] ; 
 - obj = [ [ IOSAllTypes alloc ] init ] ; 
 - obj . boolCol = FALSE ; 
 - obj . shortCol = SHRT _ MIN ; 
 - obj . intCol = INT _ MIN ; 
 - obj . longCol = LONG _ MIN ; 
 - obj . floatCol = FLT _ MIN ; 
 - obj . doubleCol = DBL _ MIN ; 
 - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 - obj . stringCol = @ " " ; 
 - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 - [ realm addObject : obj ] ; 
 - [ realm commitWriteTransaction ] ; 
 - 
 - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] ] ; 
 - realm = [ RLMRealm defaultRealm ] ; 
 - [ realm beginWriteTransaction ] ; 
 - obj = [ [ IOSAllTypes alloc ] init ] ; 
 - obj . boolCol = TRUE ; 
 - obj . shortCol = SHRT _ MAX ; 
 - obj . intCol = INT _ MAX ; 
 - obj . longCol = LONG _ MAX ; 
 - obj . floatCol = FLT _ MAX ; 
 - obj . doubleCol = DBL _ MAX ; 
 - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 - obj . stringCol = @ " " ; 
 - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : LONG _ MAX ] ; 
 - [ realm addObject : obj ] ; 
 - [ realm commitWriteTransaction ] ; 
 - 
 - [ AppDelegate setDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - default - encrypted . realm " , version ] ] ; 
 - uint8 _ t buffer [ 64 ] ; 
 - for ( int i = 0 ; i < sizeof ( buffer ) ; i + + ) { 
 - buffer [ i ] = 1 ; 
 - } 
 - NSData * keyData = [ [ NSData alloc ] initWithBytes : buffer length : sizeof ( buffer ) ] ; / / Zerofilled byte array 
 - NSError * error ; 
 - realm = [ RLMRealm realmWithPath : [ RLMRealm defaultRealmPath ] encryptionKey : keyData readOnly : NO error : & error ] ; 
 - [ realm beginWriteTransaction ] ; 
 - obj = [ [ IOSAllTypes alloc ] init ] ; 
 - obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 - obj . stringCol = @ " " ; 
 - obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 - [ realm addObject : obj ] ; 
 - [ realm commitWriteTransaction ] ; 
 - 
 - NSLog ( @ " Done " ) ; 
 - return YES ; 
 - } 
 - 
 - + ( void ) setDefaultRealm : ( NSString * ) realmName 
 - { 
 - NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; 
 - NSString * allTypesRealm = [ documentsDirectory stringByAppendingPathComponent : realmName ] ; 
 - [ RLMRealm setDefaultRealmPath : allTypesRealm ] ; 
 - [ [ NSFileManager defaultManager ] removeItemAtPath : [ RLMRealm defaultRealmPath ] error : nil ] ; 
 - } 
 - @ end 
 diff - - git a / realm / realm - library / src / androidTest / assets / ios / README . md b / realm / realm - library / src / androidTest / assets / ios / README . md 
 new file mode 100644 
 index 0000000 . . b385f78 
 - - - / dev / null 
 + + + b / realm / realm - library / src / androidTest / assets / ios / README . md 
 @ @ - 0 , 0 + 1 , 215 @ @ 
 + This folder contains various Realm databases created on iOS and can be used to test interop with 
 + Realm - Android . The databases are generated using the below iOS code . 
 + 
 + ( 02 / 18 - 2016 ) Note that we should match the core version ( 0 . 96 . 0 ) used in Cocoa ( 0 . 98 . 0 ) for Java ( 0 . 87 . 4 ) . 
 + 
 + # # # HOWTO 
 + 
 + 1 . Checkout realm - cocoa . 
 + 2 . Open ~ / realm - cocoa / RealmExamples . xcodeproj in Xcode . 
 + 3 . Rename ` / Simple / AppDelegate . m ` to ` / Simple / AppDelegate . mm ` and replace the content with the below code . 
 + 4 . Run Simple project . 
 + 5 . Copy / paste output Realm files into Java unit tests asset directory . 
 + 
 + # # # DISABLE DEBUGGING : 
 + 
 + 1 . Click on spinner that chooses which Example to run . 
 + 2 . At the bottom should be a button called " Edit Scheme " . 
 + 3 . Choose " Run " if not selected already . 
 + 4 . Remove check in " Debug executable " . 
 + 5 . Save and run . 
 + 
 + See the Log for where the output files are located . 
 + 
 + ` ` ` objective - c 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / 
 + / / Copyright 2016 Realm Inc . 
 + / / 
 + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + / / you may not use this file except in compliance with the License . 
 + / / You may obtain a copy of the License at 
 + / / 
 + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + / / 
 + / / Unless required by applicable law or agreed to in writing , software 
 + / / distributed under the License is distributed on an " AS IS " BASIS , 
 + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + / / See the License for the specific language governing permissions and 
 + / / limitations under the License . 
 + / / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + # import " AppDelegate . h " 
 + # import < Realm / Realm . h > 
 + # include < limits > 
 + using namespace std ; 
 + 
 + @ interface IOSChild : RLMObject 
 + @ property NSString * name ; 
 + @ end 
 + RLM _ ARRAY _ TYPE ( IOSChild ) 
 + 
 + @ implementation IOSChild 
 + @ end 
 + 
 + @ interface IOSAllTypes : RLMObject 
 + @ property long id ; 
 + @ property bool boolCol ; 
 + @ property short shortCol ; 
 + @ property int intCol ; 
 + @ property long longCol ; 
 + @ property int64 _ t longLongCol ; 
 + @ property float floatCol ; 
 + @ property double doubleCol ; 
 + @ property NSData * byteCol ; 
 + @ property NSString * stringCol ; 
 + @ property NSDate * dateCol ; 
 + @ property IOSChild * child ; 
 + @ property RLMArray < IOSChild > * children ; 
 + @ end 
 + RLM _ ARRAY _ TYPE ( AllTypes ) 
 + 
 + @ implementation IOSAllTypes 
 + + ( NSString * ) primaryKey { 
 + return @ " id " ; 
 + } 
 + @ end 
 + 
 + @ implementation AppDelegate 
 + 
 + + ( int64 _ t ) realm _ from _ nsdate : ( NSDate * ) nsdate { 
 + return static _ cast < int64 _ t > ( [ nsdate timeIntervalSince1970 ] ) ; 
 + } 
 + 
 + + ( NSString * ) getRealmFilePath : ( NSString * ) realmName { 
 + NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; 
 + return [ documentsDirectory stringByAppendingPathComponent : realmName ] ; 
 + } 
 + 
 + + ( RLMRealm * ) appDefaultRealm : ( NSString * ) realmName { 
 + NSString * allTypesRealm = [ AppDelegate getRealmFilePath : realmName ] ; 
 + [ [ NSFileManager defaultManager ] removeItemAtPath : allTypesRealm error : nil ] ; 
 + RLMRealm * realm = [ RLMRealm realmWithPath : allTypesRealm ] ; 
 + return realm ; 
 + } 
 + 
 + - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions { 
 + 
 + self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; 
 + self . window . rootViewController = [ [ UIViewController alloc ] init ] ; 
 + [ self . window makeKeyAndVisible ] ; 
 + 
 + NSLog ( @ " Documents Directory : % @ " , [ [ [ NSFileManager defaultManager ] URLsForDirectory : NSDocumentDirectory inDomains : NSUserDomainMask ] lastObject ] ) ; 
 + 
 + const NSString * version = @ " 0 . 98 . 0 " ; 
 + const unsigned char no _ bytes [ ] = { } ; 
 + const unsigned char bytes [ ] = { 1 , 2 , 3 } ; 
 + 
 + RLMRealm * realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes . realm " , version ] ] ; 
 + [ realm beginWriteTransaction ] ; 
 + for ( int i = 0 ; i < 10 ; i + + ) { 
 + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . id = i + 1 ; 
 + obj . boolCol = TRUE ; 
 + obj . shortCol = 1 + i ; 
 + obj . intCol = 10 + i ; 
 + obj . longCol = 100 + i ; 
 + obj . longLongCol = 100000000 + i ; 
 + obj . floatCol = 1 . 23 + i ; 
 + obj . doubleCol = 1 . 234 + i ; 
 + obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; 
 + obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; 
 + 
 + obj . child = [ [ IOSChild alloc ] init ] ; 
 + obj . child . name = @ " Foo " ; 
 + for ( int j = 0 ; j < 10 ; j + + ) { 
 + IOSChild * c = [ [ IOSChild alloc ] init ] ; 
 + c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; 
 + [ obj . children addObject : c ] ; 
 + } 
 + [ realm addObject : obj ] ; 
 + } 
 + [ realm commitWriteTransaction ] ; 
 + 
 + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - default . realm " , version ] ] ; 
 + [ realm beginWriteTransaction ] ; 
 + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - null - value . realm " , version ] ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . byteCol = nil ; 
 + obj . stringCol = nil ; 
 + obj . dateCol = nil ; 
 + obj . child = nil ; 
 + obj . children = nil ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = FALSE ; 
 + obj . shortCol = SHRT _ MIN ; 
 + obj . intCol = INT _ MIN ; 
 + obj . longCol = LONG _ MIN ; 
 + obj . longLongCol = std : : numeric _ limits < int64 _ t > : : min ( ) ; 
 + obj . floatCol = - FLT _ MAX ; 
 + obj . doubleCol = - DBL _ MAX ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSinceReferenceDate : - DBL _ MAX ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + NSLog ( @ " % @ , obj . longLongCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] , obj . longLongCol ) ; 
 + NSLog ( @ " % @ , obj . dateCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - min . realm " , version ] , [ AppDelegate realm _ from _ nsdate : obj . dateCol ] ) ; 
 + 
 + realm = [ AppDelegate appDefaultRealm : [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = TRUE ; 
 + obj . shortCol = SHRT _ MAX ; 
 + obj . intCol = INT _ MAX ; 
 + obj . longCol = LONG _ MAX ; 
 + obj . longLongCol = std : : numeric _ limits < int64 _ t > : : max ( ) ; 
 + obj . floatCol = FLT _ MAX ; 
 + obj . doubleCol = DBL _ MAX ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSinceReferenceDate : DBL _ MAX ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + NSLog ( @ " % @ , obj . longLongCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] , obj . longLongCol ) ; 
 + NSLog ( @ " % @ , obj . dateCol : 0x % llx \ n " , [ NSString stringWithFormat : @ " % @ - alltypes - max . realm " , version ] , [ AppDelegate realm _ from _ nsdate : obj . dateCol ] ) ; 
 + 
 + uint8 _ t buffer [ 64 ] ; 
 + for ( int i = 0 ; i < sizeof ( buffer ) ; i + + ) { 
 + buffer [ i ] = 1 ; 
 + } 
 + NSData * keyData = [ [ NSData alloc ] initWithBytes : buffer length : sizeof ( buffer ) ] ; / / Zerofilled byte array 
 + NSError * error ; 
 + RLMRealmConfiguration * config = [ RLMRealmConfiguration defaultConfiguration ] ; 
 + config . path = [ AppDelegate getRealmFilePath : [ NSString stringWithFormat : @ " % @ - alltypes - default - encrypted . realm " , version ] ] ; 
 + config . encryptionKey = keyData ; 
 + config . readOnly = NO ; 
 + realm = [ RLMRealm realmWithConfiguration : config error : & error ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + NSLog ( @ " Done " ) ; 
 + return YES ; 
 + } 
 + @ end 
 + ` ` ` 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java 
 index 48b9347 . . b1521fa 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java 
 @ @ - 39 , 7 + 39 , 6 @ @ import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertNull ; 
 
 - 
 import static io . realm . internal . test . ExtraTests . assertArrayEquals ; 
 
 / * * 
 @ @ - 51 , 7 + 50 , 7 @ @ public class IOSRealmTests { 
 @ Rule 
 public final TestRealmConfigurationFactory configFactory = new TestRealmConfigurationFactory ( ) ; 
 
 - private static final String [ ] IOS _ VERSIONS = new String [ ] { " 0 . 96 . 2 " } ; 
 + private static final String [ ] IOS _ VERSIONS = new String [ ] { " 0 . 98 . 0 " } ; 
 private static final String REALM _ NAME = " alltypes . realm " ; 
 private Realm realm ; 
 private Context context ; 
 @ @ - 61 , 6 + 60 , 7 @ @ public class IOSRealmTests { 
 RealmConfiguration defaultConfiguration = configFactory . createConfigurationBuilder ( ) 
 . name ( REALM _ NAME ) 
 . schema ( IOSAllTypes . class , IOSChild . class ) 
 + . deleteRealmIfMigrationNeeded ( ) 
 . build ( ) ; 
 Realm . setDefaultConfiguration ( defaultConfiguration ) ; 
 context = InstrumentationRegistry . getInstrumentation ( ) . getContext ( ) ; 
 @ @ - 74 , 7 + 74 , 6 @ @ public class IOSRealmTests { 
 } 
 } 
 
 - / / Test relationships and that data in general can be retrieved from an iOS realm 
 @ Test 
 public void iOSDataTypes ( ) throws IOException { 
 for ( String iosVersion : IOS _ VERSIONS ) { 
 @ @ - 82 , 31 + 81 , 34 @ @ public class IOSRealmTests { 
 " ios / " + iosVersion + " - alltypes . realm " , REALM _ NAME ) ; 
 realm = Realm . getDefaultInstance ( ) ; 
 RealmResults < IOSAllTypes > result = realm . allObjectsSorted ( IOSAllTypes . class , " id " , Sort . ASCENDING ) ; 
 - 
 / / Verify metadata 
 Table table = realm . getTable ( IOSAllTypes . class ) ; 
 assertTrue ( table . hasPrimaryKey ( ) ) ; 
 assertTrue ( table . hasSearchIndex ( table . getColumnIndex ( " id " ) ) ) ; 
 - 
 - IOSAllTypes obj = result . get ( 1 ) ; 
 - assertTrue ( obj . isBoolCol ( ) ) ; 
 - assertEquals ( 2 , obj . getShortCol ( ) ) ; 
 - assertEquals ( 11 , obj . getIntCol ( ) ) ; 
 - assertEquals ( 101L , obj . getLongCol ( ) ) ; 
 - assertEquals ( 2 . 23F , obj . getFloatCol ( ) , 0F ) ; 
 - assertEquals ( 2 . 234D , obj . getDoubleCol ( ) , 0D ) ; 
 - assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; 
 - assertEquals ( " String 1 " , obj . getStringCol ( ) ) ; 
 - assertEquals ( new Date ( 1001 * 1000 ) , obj . getDateCol ( ) ) ; 
 - assertEquals ( " Foo " , result . get ( 1 ) . getChild ( ) . getName ( ) ) ; 
 - assertEquals ( 10 , result . size ( ) ) ; 
 - assertEquals ( 10 , result . get ( 1 ) . getChildren ( ) . size ( ) ) ; 
 - assertEquals ( " Name : 1 " , result . get ( 1 ) . getChildren ( ) . get ( 1 ) . getName ( ) ) ; 
 + / / iterative check 
 + for ( int i = 0 ; i < 10 ; i + + ) { 
 + IOSAllTypes obj = result . get ( i ) ; 
 + assertTrue ( obj . isBoolCol ( ) ) ; 
 + assertEquals ( i + 1 , obj . getShortCol ( ) ) ; 
 + assertEquals ( 10 + i , obj . getIntCol ( ) ) ; 
 + assertEquals ( 100 + i , obj . getLongCol ( ) ) ; 
 + assertEquals ( 100000000L + ( long ) i , obj . getLongLongCol ( ) ) ; 
 + assertEquals ( 1 . 23F + ( float ) i , obj . getFloatCol ( ) , 0F ) ; 
 + assertEquals ( 1 . 234D + ( double ) i , obj . getDoubleCol ( ) , 0D ) ; 
 + assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; 
 + assertEquals ( " String " + Integer . toString ( i ) , obj . getStringCol ( ) ) ; 
 + assertEquals ( new Date ( ( 1000 + i ) * 1000 ) , obj . getDateCol ( ) ) ; 
 + assertEquals ( " Foo " , result . get ( i ) . getChild ( ) . getName ( ) ) ; 
 + assertEquals ( 10 , result . get ( i ) . getChildren ( ) . size ( ) ) ; 
 + for ( int j = 0 ; j < 10 ; j + + ) { 
 + assertEquals ( " Name : " + Integer . toString ( i ) , result . get ( i ) . getChildren ( ) . get ( j ) . getName ( ) ) ; 
 + } 
 + } 
 } 
 } 
 
 @ Test 
 - public void sOSDataTypesDefaultValues ( ) throws IOException { 
 + public void iOSDataTypesDefaultValues ( ) throws IOException { 
 for ( String iosVersion : IOS _ VERSIONS ) { 
 configFactory . copyRealmFromAssets ( context , 
 " ios / " + iosVersion + " - alltypes - default . realm " , REALM _ NAME ) ; 
 @ @ - 116 , 7 + 118 , 8 @ @ public class IOSRealmTests { 
 assertFalse ( obj . isBoolCol ( ) ) ; 
 assertEquals ( 0 , obj . getShortCol ( ) ) ; 
 assertEquals ( 0 , obj . getIntCol ( ) ) ; 
 - assertEquals ( 0L , obj . getLongCol ( ) ) ; 
 + assertEquals ( 0 , obj . getLongCol ( ) ) ; 
 + assertEquals ( 0L , obj . getLongLongCol ( ) ) ; 
 assertEquals ( 0 . 0F , obj . getFloatCol ( ) , 0F ) ; 
 assertEquals ( 0 . 0D , obj . getDoubleCol ( ) , 0D ) ; 
 assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; 
 @ @ - 128 , 6 + 131 , 22 @ @ public class IOSRealmTests { 
 } 
 
 @ Test 
 + public void iOSDataTypesNullValues ( ) throws IOException { 
 + for ( String iosVersion : IOS _ VERSIONS ) { 
 + configFactory . copyRealmFromAssets ( context , 
 + " ios / " + iosVersion + " - alltypes - null - value . realm " , REALM _ NAME ) ; 
 + realm = Realm . getDefaultInstance ( ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertEquals ( null , obj . getByteCol ( ) ) ; 
 + assertEquals ( null , obj . getStringCol ( ) ) ; 
 + assertEquals ( null , obj . getDateCol ( ) ) ; 
 + assertEquals ( null , obj . getChild ( ) ) ; 
 + assertEquals ( new RealmList < IOSChild > ( ) , obj . getChildren ( ) ) ; 
 + } 
 + } 
 + 
 + @ Test 
 public void iOSDataTypesMinimumValues ( ) throws IOException { 
 for ( String iosVersion : IOS _ VERSIONS ) { 
 configFactory . copyRealmFromAssets ( context , 
 @ @ - 135 , 11 + 154 , 16 @ @ public class IOSRealmTests { 
 realm = Realm . getDefaultInstance ( ) ; 
 
 IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertFalse ( obj . isBoolCol ( ) ) ; 
 assertEquals ( Short . MIN _ VALUE , obj . getShortCol ( ) ) ; 
 assertEquals ( Integer . MIN _ VALUE , obj . getIntCol ( ) ) ; 
 - assertEquals ( Long . MIN _ VALUE , obj . getLongCol ( ) ) ; 
 - assertEquals ( Float . MIN _ NORMAL , obj . getFloatCol ( ) , 0F ) ; 
 - assertEquals ( Double . MIN _ NORMAL , obj . getDoubleCol ( ) , 0D ) ; 
 + assertEquals ( Integer . MIN _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Long . MIN _ VALUE , obj . getLongLongCol ( ) ) ; 
 + assertEquals ( - Float . MAX _ VALUE , obj . getFloatCol ( ) , 0F ) ; 
 + assertEquals ( - Double . MAX _ VALUE , obj . getDoubleCol ( ) , 0D ) ; 
 + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; 
 + assertEquals ( " " , obj . getStringCol ( ) ) ; 
 + assertEquals ( 0x8000000000000000L * 1000L , obj . getDateCol ( ) . getTime ( ) ) ; 
 } 
 } 
 
 @ @ - 153 , 9 + 177 , 13 @ @ public class IOSRealmTests { 
 IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 assertEquals ( Short . MAX _ VALUE , obj . getShortCol ( ) ) ; 
 assertEquals ( Integer . MAX _ VALUE , obj . getIntCol ( ) ) ; 
 - assertEquals ( Long . MAX _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Integer . MAX _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Long . MAX _ VALUE , obj . getLongLongCol ( ) ) ; 
 assertEquals ( Float . MAX _ VALUE , obj . getFloatCol ( ) , 0F ) ; 
 assertEquals ( Double . MAX _ VALUE , obj . getDoubleCol ( ) , 0D ) ; 
 + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; 
 + assertEquals ( " " , obj . getStringCol ( ) ) ; 
 + assertEquals ( 0x8000000000000000L * 1000L , obj . getDateCol ( ) . getTime ( ) ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 index d1392b2 . . f3c15b7 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 @ @ - 31 , 14 + 31 , 12 @ @ public class IOSAllTypes extends RealmObject { 
 private boolean boolCol ; 
 private short shortCol ; 
 private int intCol ; 
 - private long longCol ; 
 + private int longCol ; 
 + private long longLongCol ; 
 private float floatCol ; 
 private double doubleCol ; 
 - @ Required 
 private byte [ ] byteCol = new byte [ 0 ] ; 
 - @ Required 
 private String stringCol = " " ; 
 - @ Required 
 private Date dateCol = new Date ( 0 ) ; 
 private IOSChild child ; 
 private RealmList < IOSChild > children ; 
 @ @ - 75 , 14 + 73 , 22 @ @ public class IOSAllTypes extends RealmObject { 
 this . intCol = intCol ; 
 } 
 
 - public long getLongCol ( ) { 
 + public int getLongCol ( ) { 
 return longCol ; 
 } 
 
 - public void setLongCol ( long longCol ) { 
 + public void setLongCol ( int longCol ) { 
 this . longCol = longCol ; 
 } 
 
 + public long getLongLongCol ( ) { 
 + return longLongCol ; 
 + } 
 + 
 + public void setLongLongCol ( long longLongCol ) { 
 + this . longLongCol = longCol ; 
 + } 
 + 
 public float getFloatCol ( ) { 
 return floatCol ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java 
 index 9370e7a . . 4e21616 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / IOSChild . java 
 @ @ - 20 , 7 + 20 , 7 @ @ import io . realm . RealmObject ; 
 import io . realm . annotations . Required ; 
 
 public class IOSChild extends RealmObject { 
 - @ Required 
 + 
 private String name ; 
 
 public String getName ( ) {

NEAREST DIFF:
diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm 
 new file mode 100644 
 index 0000000 . . d049e3b 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - default . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm 
 new file mode 100644 
 index 0000000 . . 0660c84 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - max . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm 
 new file mode 100644 
 index 0000000 . . 1002549 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes - min . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm 
 new file mode 100644 
 index 0000000 . . 3f32700 
 Binary files / dev / null and b / realm / src / androidTest / assets / ios / 0 . 90 . 4 - alltypes . realm differ 
 diff - - git a / realm / src / androidTest / assets / ios / README b / realm / src / androidTest / assets / ios / README 
 new file mode 100644 
 index 0000000 . . 0f30efc 
 - - - / dev / null 
 + + + b / realm / src / androidTest / assets / ios / README 
 @ @ - 0 , 0 + 1 , 149 @ @ 
 + This folder contains various Realm databases created on iOS and can be used to test interop with 
 + Realm - Android . 
 + 
 + The databases are generated using the following iOS code : 
 + 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + / / 
 + / / Copyright 2014 Realm Inc . 
 + / / 
 + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + / / you may not use this file except in compliance with the License . 
 + / / You may obtain a copy of the License at 
 + / / 
 + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + / / 
 + / / Unless required by applicable law or agreed to in writing , software 
 + / / distributed under the License is distributed on an " AS IS " BASIS , 
 + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + / / See the License for the specific language governing permissions and 
 + / / limitations under the License . 
 + / / 
 + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / 
 + 
 + # import " AppDelegate . h " 
 + # import < Realm / Realm . h > 
 + 
 + @ interface IOSChild : RLMObject 
 + @ property NSString * name ; 
 + @ end 
 + RLM _ ARRAY _ TYPE ( IOSChild ) 
 + 
 + @ implementation IOSChild 
 + @ end 
 + 
 + @ interface IOSAllTypes : RLMObject 
 + @ property bool boolCol ; 
 + @ property short shortCol ; 
 + @ property int intCol ; 
 + @ property long longCol ; 
 + @ property float floatCol ; 
 + @ property double doubleCol ; 
 + @ property NSData * byteCol ; 
 + @ property NSString * stringCol ; 
 + @ property NSDate * dateCol ; 
 + @ property IOSChild * child ; 
 + @ property RLMArray < IOSChild > * children ; 
 + @ end 
 + RLM _ ARRAY _ TYPE ( AllTypes ) 
 + 
 + @ implementation IOSAllTypes 
 + / / + ( NSString * ) primaryKey { 
 + / / return @ " longCol " ; 
 + / / } 
 + @ end 
 + 
 + @ implementation AppDelegate 
 + 
 + - ( BOOL ) application : ( UIApplication * ) application didFinishLaunchingWithOptions : ( NSDictionary * ) launchOptions 
 + { 
 + self . window = [ [ UIWindow alloc ] initWithFrame : [ [ UIScreen mainScreen ] bounds ] ] ; 
 + self . window . rootViewController = [ [ UIViewController alloc ] init ] ; 
 + [ self . window makeKeyAndVisible ] ; 
 + 
 + const unsigned char no _ bytes [ ] = { } ; 
 + const unsigned char bytes [ ] = { 1 , 2 , 3 } ; 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes . realm " ] ; 
 + RLMRealm * realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + for ( int i = 0 ; i < 10 ; i + + ) { 
 + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = TRUE ; 
 + obj . shortCol = 1 + i ; 
 + obj . intCol = 10 + i ; 
 + obj . longCol = 100 + i ; 
 + obj . floatCol = 1 . 23 + i ; 
 + obj . doubleCol = 1 . 234 + i ; 
 + obj . byteCol = [ NSData dataWithBytes : bytes length : sizeof ( bytes ) ] ; 
 + obj . stringCol = [ NSString stringWithFormat : @ " % @ % d " , @ " String " , i ] ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : ( 1000 + i ) ] ; 
 + 
 + obj . child = [ [ IOSChild alloc ] init ] ; 
 + obj . child . name = @ " Foo " ; 
 + for ( int j = 0 ; j < 10 ; j + + ) { 
 + IOSChild * c = [ [ IOSChild alloc ] init ] ; 
 + c . name = [ NSString stringWithFormat : @ " Name : % d " , i ] ; 
 + [ obj . children addObject : c ] ; 
 + } 
 + [ realm addObject : obj ] ; 
 + } 
 + [ realm commitWriteTransaction ] ; 
 + 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - default . realm " ] ; 
 + realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + IOSAllTypes * obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - min . realm " ] ; 
 + realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = FALSE ; 
 + obj . shortCol = SHRT _ MIN ; 
 + obj . intCol = INT _ MIN ; 
 + obj . longCol = LONG _ MIN ; 
 + obj . floatCol = FLT _ MIN ; 
 + obj . doubleCol = DBL _ MIN ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : 0 ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + 
 + [ AppDelegate setDefaultRealm : @ " 0 . 90 . 4 - alltypes - max . realm " ] ; 
 + realm = [ RLMRealm defaultRealm ] ; 
 + [ realm beginWriteTransaction ] ; 
 + obj = [ [ IOSAllTypes alloc ] init ] ; 
 + obj . boolCol = TRUE ; 
 + obj . shortCol = SHRT _ MAX ; 
 + obj . intCol = INT _ MAX ; 
 + obj . longCol = LONG _ MAX ; 
 + obj . floatCol = FLT _ MAX ; 
 + obj . doubleCol = DBL _ MAX ; 
 + obj . byteCol = [ NSData dataWithBytes : no _ bytes length : sizeof ( no _ bytes ) ] ; 
 + obj . stringCol = @ " " ; 
 + obj . dateCol = [ NSDate dateWithTimeIntervalSince1970 : LONG _ MAX ] ; 
 + [ realm addObject : obj ] ; 
 + [ realm commitWriteTransaction ] ; 
 + 
 + NSLog ( @ " Done " ) ; 
 + return YES ; 
 + } 
 + 
 + + ( void ) setDefaultRealm : ( NSString * ) realmName 
 + { 
 + NSString * documentsDirectory = [ NSSearchPathForDirectoriesInDomains ( NSDocumentDirectory , NSUserDomainMask , YES ) objectAtIndex : 0 ] ; 
 + NSString * allTypesRealm = [ documentsDirectory stringByAppendingPathComponent : realmName ] ; 
 + [ RLMRealm setDefaultRealmPath : allTypesRealm ] ; 
 + [ [ NSFileManager defaultManager ] removeItemAtPath : [ RLMRealm defaultRealmPath ] error : nil ] ; 
 + } 
 + @ end 
 diff - - git a / realm / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / src / androidTest / java / io / realm / IOSRealmTests . java 
 new file mode 100644 
 index 0000000 . . c89aa0d 
 - - - / dev / null 
 + + + b / realm / src / androidTest / java / io / realm / IOSRealmTests . java 
 @ @ - 0 , 0 + 1 , 99 @ @ 
 + package io . realm ; 
 + 
 + import android . test . AndroidTestCase ; 
 + 
 + import java . io . IOException ; 
 + import java . util . Date ; 
 + 
 + import io . realm . entities . IOSAllTypes ; 
 + import io . realm . entities . IOSChild ; 
 + 
 + import static io . realm . internal . test . ExtraTests . assertArrayEquals ; 
 + 
 + / * * 
 + * This class test interoperability with Realms created on iOS . 
 + * / 
 + public class IOSRealmTests extends AndroidTestCase { 
 + 
 + private static final String REALM _ NAME = " alltypes . realm " ; 
 + private Realm realm ; 
 + 
 + @ Override 
 + protected void setUp ( ) throws Exception { 
 + super . setUp ( ) ; 
 + Realm . setSchema ( IOSAllTypes . class , IOSChild . class ) ; 
 + } 
 + 
 + @ Override 
 + protected void tearDown ( ) throws Exception { 
 + super . tearDown ( ) ; 
 + Realm . setSchema ( null ) ; 
 + if ( realm ! = null ) { 
 + realm . close ( ) ; 
 + } 
 + } 
 + 
 + / / Test relationships and that data in general can be retrieved from an iOS realm 
 + public void testIOSDatatypes ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + RealmResults < IOSAllTypes > result = realm . allObjectsSorted ( IOSAllTypes . class , " longCol " , RealmResults . SORT _ ORDER _ ASCENDING ) ; 
 + 
 + IOSAllTypes obj = result . get ( 1 ) ; 
 + assertTrue ( obj . isBoolCol ( ) ) ; 
 + assertEquals ( 2 , obj . getShortCol ( ) ) ; 
 + assertEquals ( 11 , obj . getIntCol ( ) ) ; 
 + assertEquals ( 101L , obj . getLongCol ( ) ) ; 
 + assertEquals ( 2 . 23F , obj . getFloatCol ( ) ) ; 
 + assertEquals ( 2 . 234D , obj . getDoubleCol ( ) ) ; 
 + assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getByteCol ( ) ) ; 
 + assertEquals ( " String 1 " , obj . getStringCol ( ) ) ; 
 + assertEquals ( new Date ( 1001 * 1000 ) , obj . getDateCol ( ) ) ; 
 + assertEquals ( " Foo " , result . get ( 1 ) . getChild ( ) . getName ( ) ) ; 
 + assertEquals ( 10 , result . size ( ) ) ; 
 + assertEquals ( 10 , result . get ( 1 ) . getChildren ( ) . size ( ) ) ; 
 + assertEquals ( " Name : 1 " , result . get ( 1 ) . getChildren ( ) . get ( 1 ) . getName ( ) ) ; 
 + } 
 + 
 + public void testIOSDatatypesDefaultValues ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - default . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertFalse ( obj . isBoolCol ( ) ) ; 
 + assertEquals ( 0 , obj . getShortCol ( ) ) ; 
 + assertEquals ( 0 , obj . getIntCol ( ) ) ; 
 + assertEquals ( 0L , obj . getLongCol ( ) ) ; 
 + assertEquals ( 0 . 0F , obj . getFloatCol ( ) ) ; 
 + assertEquals ( 0 . 0D , obj . getDoubleCol ( ) ) ; 
 + assertArrayEquals ( new byte [ 0 ] , obj . getByteCol ( ) ) ; 
 + assertEquals ( " " , obj . getStringCol ( ) ) ; 
 + assertEquals ( new Date ( 0 ) , obj . getDateCol ( ) ) ; 
 + assertNull ( obj . getChild ( ) ) ; 
 + assertEquals ( 0 , obj . getChildren ( ) . size ( ) ) ; 
 + } 
 + 
 + public void testIOSDatatypesMinimumValues ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - min . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertEquals ( Short . MIN _ VALUE , obj . getShortCol ( ) ) ; 
 + assertEquals ( Integer . MIN _ VALUE , obj . getIntCol ( ) ) ; 
 + assertEquals ( Long . MIN _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Float . MIN _ NORMAL , obj . getFloatCol ( ) ) ; 
 + assertEquals ( Double . MIN _ NORMAL , obj . getDoubleCol ( ) ) ; 
 + } 
 + 
 + public void testIOSDatatypesMaximumValues ( ) throws IOException { 
 + TestHelper . prepareDatabaseFromAssets ( getContext ( ) , " ios / 0 . 90 . 4 - alltypes - max . realm " , REALM _ NAME ) ; 
 + realm = Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 + 
 + IOSAllTypes obj = realm . allObjects ( IOSAllTypes . class ) . first ( ) ; 
 + assertEquals ( Short . MAX _ VALUE , obj . getShortCol ( ) ) ; 
 + assertEquals ( Integer . MAX _ VALUE , obj . getIntCol ( ) ) ; 
 + assertEquals ( Long . MAX _ VALUE , obj . getLongCol ( ) ) ; 
 + assertEquals ( Float . MAX _ VALUE , obj . getFloatCol ( ) ) ; 
 + assertEquals ( Double . MAX _ VALUE , obj . getDoubleCol ( ) ) ; 
 + } 
 + } 
 diff - - git a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 index c798a35 . . 680965a 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 @ @ - 1 , 37 + 1 , 18 @ @ 
 package io . realm ; 
 
 - import android . content . res . AssetManager ; 
 import android . test . AndroidTestCase ; 
 
 - import java . io . File ; 
 - import java . io . FileOutputStream ; 
 import java . io . IOException ; 
 - import java . io . InputStream ; 
 
 import io . realm . entities . AllTypes ; 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 
 public class RealmMigrationTests extends AndroidTestCase { 
 
 - / / Copies a Realm file from assets to app files dir 
 - private void copyRealmFromAssets ( String fileName ) throws IOException { 
 - AssetManager assetManager = getContext ( ) . getAssets ( ) ; 
 - InputStream is = assetManager . open ( fileName ) ; 
 - File file = new File ( getContext ( ) . getFilesDir ( ) , fileName ) ; 
 - FileOutputStream outputStream = new FileOutputStream ( file ) ; 
 - byte [ ] buf = new byte [ 1024 ] ; 
 - int bytesRead ; 
 - while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { 
 - outputStream . write ( buf , 0 , bytesRead ) ; 
 - } 
 - outputStream . close ( ) ; 
 - is . close ( ) ; 
 - } 
 - 
 public void testRealmClosedAfterMigrationException ( ) throws IOException { 
 String REALM _ NAME = " default0 . realm " ; 
 Realm . deleteRealmFile ( getContext ( ) , REALM _ NAME ) ; 
 - copyRealmFromAssets ( REALM _ NAME ) ; 
 + TestHelper . copyRealmFromAssets ( getContext ( ) , REALM _ NAME , REALM _ NAME ) ; 
 try { 
 Realm . getInstance ( getContext ( ) , REALM _ NAME ) ; 
 fail ( " A migration should be triggered " ) ; 
 diff - - git a / realm / src / androidTest / java / io / realm / TestHelper . java b / realm / src / androidTest / java / io / realm / TestHelper . java 
 index fb2bd93 . . 5d1d27a 100644 
 - - - a / realm / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 16 , 6 + 16 , 14 @ @ 
 
 package io . realm ; 
 
 + import android . content . Context ; 
 + import android . content . res . AssetManager ; 
 + 
 + import java . io . File ; 
 + import java . io . FileOutputStream ; 
 + import java . io . IOException ; 
 + import java . io . InputStream ; 
 + 
 import io . realm . entities . AllTypes ; 
 
 public class TestHelper { 
 @ @ - 35 , 4 + 43 , 25 @ @ public class TestHelper { 
 object3 . setColumnString ( " Adam " ) ; 
 testRealm . commitTransaction ( ) ; 
 } 
 + 
 + / / Copies a Realm file from assets to app files dir 
 + public static void copyRealmFromAssets ( Context context , String realmPath , String newName ) throws IOException { 
 + AssetManager assetManager = context . getAssets ( ) ; 
 + InputStream is = assetManager . open ( realmPath ) ; 
 + File file = new File ( context . getFilesDir ( ) , newName ) ; 
 + FileOutputStream outputStream = new FileOutputStream ( file ) ; 
 + byte [ ] buf = new byte [ 1024 ] ; 
 + int bytesRead ; 
 + while ( ( bytesRead = is . read ( buf ) ) > - 1 ) { 
 + outputStream . write ( buf , 0 , bytesRead ) ; 
 + } 
 + outputStream . close ( ) ; 
 + is . close ( ) ; 
 + } 
 + 
 + / / Deletes the old database and copies a new one into its place 
 + public static void prepareDatabaseFromAssets ( Context context , String realmPath , String newName ) throws IOException { 
 + Realm . deleteRealmFile ( context , newName ) ; 
 + TestHelper . copyRealmFromAssets ( context , realmPath , newName ) ; 
 + } 
 } 
 diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 new file mode 100644 
 index 0000000 . . 14fb439 
 - - - / dev / null 
 + + + b / realm / src / androidTest / java / io / realm / entities / IOSAllTypes . java 
 @ @ - 0 , 0 + 1 , 109 @ @ 
 + package io . realm . entities ; 
 + 
 + import java . util . Date ; 
 + 
 + import io . realm . RealmList ; 
 + import io . realm . RealmObject ; 
 + 
 + public class IOSAllTypes extends RealmObject { 
 + 
 + private boolean boolCol ; 
 + private short shortCol ; 
 + private int intCol ; 
 + private long longCol ; 
 + private float floatCol ; 
 + private double doubleCol ; 
 + private byte [ ] byteCol ; 
 + private String stringCol ; 
 + private Date dateCol ; 
 + private IOSChild child ; 
 + private RealmList < IOSChild > children ; 
 + 
 + public boolean isBoolCol ( ) { 
 + return boolCol ; 
 + } 
 + 
 + public void setBoolCol ( boolean boolCol ) { 
 + this . boolCol = boolCol ; 
 + } 
 + 
 + public short getShortCol ( ) { 
 + return shortCol ; 
 + } 
 + 
 + public void setShortCol ( short shortCol ) { 
 + this . shortCol = shortCol ; 
 + } 
 + 
 + public int getIntCol ( ) { 
 + return intCol ; 
 + } 
 + 
 + public void setIntCol ( int intCol ) { 
 + this . intCol = intCol ; 
 + } 
 + 
 + public long getLongCol ( ) { 
 + return longCol ; 
 + } 
 + 
 + public void setLongCol ( long longCol ) { 
 + this . longCol = longCol ; 
 + } 
 + 
 + public float getFloatCol ( ) { 
 + return floatCol ; 
 + } 
 + 
 + public void setFloatCol ( float floatCol ) { 
 + this . floatCol = floatCol ; 
 + } 
 + 
 + public double getDoubleCol ( ) { 
 + return doubleCol ; 
 + } 
 + 
 + public void setDoubleCol ( double doubleCol ) { 
 + this . doubleCol = doubleCol ; 
 + } 
 + 
 + public byte [ ] getByteCol ( ) { 
 + return byteCol ; 
 + } 
 + 
 + public void setByteCol ( byte [ ] byteCol ) { 
 + this . byteCol = byteCol ; 
 + } 
 + 
 + public String getStringCol ( ) { 
 + return stringCol ; 
 + } 
 + 
 + public void setStringCol ( String stringCol ) { 
 + this . stringCol = stringCol ; 
 + } 
 + 
 + public Date getDateCol ( ) { 
 + return dateCol ; 
 + } 
 + 
 + public void setDateCol ( Date dateCol ) { 
 + this . dateCol = dateCol ; 
 + } 
 + 
 + public IOSChild getChild ( ) { 
 + return child ; 
 + } 
 + 
 + public void setChild ( IOSChild child ) { 
 + this . child = child ; 
 + } 
 + 
 + public RealmList < IOSChild > getChildren ( ) { 
 + return children ; 
 + } 
 + 
 + public void setChildren ( RealmList < IOSChild > children ) { 
 + this . children = children ; 
 + } 
 + } 
 diff - - git a / realm / src / androidTest / java / io / realm / entities / IOSChild . java b / realm / src / androidTest / java / io / realm / entities / IOSChild . java 
 new file mode 100644 
 index 0000000 . . f041de1 
 - - - / dev / null 
 + + + b / realm / src / androidTest / java / io / realm / entities / IOSChild . java 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + package io . realm . entities ; 
 + 
 + import io . realm . RealmObject ; 
 + 
 + public class IOSChild extends RealmObject { 
 + private String name ; 
 + 
 + public String getName ( ) { 
 + return name ; 
 + } 
 + 
 + public void setName ( String name ) { 
 + this . name = name ; 
 + } 
 + } 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 389e5c8 . . ffd4696 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 40 , 8 + 40 , 10 @ @ import java . lang . reflect . Method ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 import java . util . UUID ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 @ @ - 164 , 6 + 166 , 7 @ @ public final class Realm implements Closeable { 
 private final Map < Class < ? > , Constructor > generatedConstructors = new HashMap < Class < ? > , Constructor > ( ) ; 
 private final List < RealmChangeListener > changeListeners = new ArrayList < RealmChangeListener > ( ) ; 
 private final Map < Class < ? > , Table > tables = new HashMap < Class < ? > , Table > ( ) ; 
 + private static final Set < Class < ? extends RealmObject > > customSchema = new HashSet < Class < ? extends RealmObject > > ( ) ; 
 private static final long UNVERSIONED = - 1 ; 
 
 / / Package protected to be reachable by proxy classes 
 @ @ - 539 , 6 + 542 , 14 @ @ public final class Realm implements Closeable { 
 throw new RealmException ( " An exception was thrown in the getProxyClasses method in the ValidationList class : " + APT _ NOT _ EXECUTED _ MESSAGE ) ; 
 } 
 
 + / / Custom schema overrides any schema already defined 
 + if ( customSchema . size ( ) > 0 ) { 
 + proxyClasses = new ArrayList < String > ( ) ; 
 + for ( Class < ? extends RealmObject > clazz : customSchema ) { 
 + proxyClasses . add ( clazz . getName ( ) ) ; 
 + } 
 + } 
 + 
 long version = realm . getVersion ( ) ; 
 boolean commitNeeded = false ; 
 try { 
 @ @ - 1538 , 6 + 1549 , 25 @ @ public final class Realm implements Closeable { 
 return path ; 
 } 
 
 + 
 + / * * 
 + * Override the standard behavior of all classes extended RealmObject being part of the schema . 
 + * Use this method to define the schema as only the classes given here . 
 + * 
 + * This class must be called before calling { @ link # getInstance ( android . content . Context ) } 
 + * 
 + * If { @ code null } is given as parameter , the Schema is reset to use all known classes . 
 + * 
 + * / 
 + public static void setSchema ( Class < ? extends RealmObject > . . . schemaClass ) { 
 + customSchema . clear ( ) ; 
 + if ( schemaClass ! = null ) { 
 + for ( int i = 0 ; i < schemaClass . length ; i + + ) { 
 + customSchema . add ( schemaClass [ i ] ) ; 
 + } 
 + } 
 + } 
 + 
 / * * 
 * Encapsulates a Realm transaction . 
 * 
 diff - - git a / settings . gradle b / settings . gradle 
 index d0eb928 . . 698a425 100644 
 - - - a / settings . gradle 
 + + + b / settings . gradle 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 / / Realm projects 
 - include ' realm ' 
 + include ' realm ' , ' : realm - annotations - processor ' 
 
 / / Example projects 
 include ' : introExample ' ,
