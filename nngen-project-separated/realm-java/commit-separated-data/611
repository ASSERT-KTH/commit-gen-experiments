BLEU SCORE: 0.034353182138500235

TEST MSG: Disallow changing PK after object created
GENERATED MSG: Better exception message when using custom migrations

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 5d51538 . . 8f800ae 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 15 , 7 + 15 , 8 @ @ <nl> * ` RealmConfiguration . Builder . assetFile ( Context , String ) ` has been renamed to ` RealmConfiguration . Builder . assetFile ( String ) ` . <nl> * Object with primary key is now required to define it when the object is created . This means that ` Realm . createObject ( Class < E > ) ` and ` DynamicRealm . createObject ( String ) ` now throws ` RealmException ` if they are used to create an object with a primary key field . Use ` Realm . createObject ( Class < E > , Object ) ` or ` DynamicRealm . createObject ( String , Object ) ` instead . <nl> * Importing from JSON without the primary key field defined in the JSON object now throws ` IllegalArgumentException ` . <nl> - * Now ` Realm . beginTransaction ( ) ` , ` Realm . executeTransaction ( ) ` and ` Realm . waitForChange ( ) ` throw ` RealmMigrationNeededException ` if a remote process introduces an incompatible schema changes ( # 3409 ) . <nl> + * Now ` Realm . beginTransaction ( ) ` , ` Realm . executeTransaction ( ) ` and ` Realm . waitForChange ( ) ` throw ` RealmMigrationNeededException ` if a remote process introduces incompatible schema changes
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 9defefb . . 70a178c 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 32 , 6 + 32 , 7 @ @ <nl> * ` RealmObjectSchema . getPrimaryKey ( ) ` . ( # 2636 ) <nl> * ` Realm . createObject ( Class , Object ) ` for creating objects with a primary key directly . <nl> * Unit tests in Android library projects now detect Realm model classes . <nl> + * Better error message if ` equals ( ) ` and ` hashCode ( ) ` are not properly overridden in custom Migration classes . <nl> * Expanding the precision of ` Date ` fields to cover full range ( # 833 ) . <nl> * ` Realm . waitForChange ( ) ` / ` stopWaitForChange ( ) ` and ` DynamicRealm . waitForChange ( ) ` / ` stopWaitForChange ( ) `

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 5d51538 . . 8f800ae 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 15 , 7 + 15 , 8 @ @ 
 * ` RealmConfiguration . Builder . assetFile ( Context , String ) ` has been renamed to ` RealmConfiguration . Builder . assetFile ( String ) ` . 
 * Object with primary key is now required to define it when the object is created . This means that ` Realm . createObject ( Class < E > ) ` and ` DynamicRealm . createObject ( String ) ` now throws ` RealmException ` if they are used to create an object with a primary key field . Use ` Realm . createObject ( Class < E > , Object ) ` or ` DynamicRealm . createObject ( String , Object ) ` instead . 
 * Importing from JSON without the primary key field defined in the JSON object now throws ` IllegalArgumentException ` . 
 - * Now ` Realm . beginTransaction ( ) ` , ` Realm . executeTransaction ( ) ` and ` Realm . waitForChange ( ) ` throw ` RealmMigrationNeededException ` if a remote process introduces an incompatible schema changes ( # 3409 ) . 
 + * Now ` Realm . beginTransaction ( ) ` , ` Realm . executeTransaction ( ) ` and ` Realm . waitForChange ( ) ` throw ` RealmMigrationNeededException ` if a remote process introduces incompatible schema changes

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 9defefb . . 70a178c 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 32 , 6 + 32 , 7 @ @ 
 * ` RealmObjectSchema . getPrimaryKey ( ) ` . ( # 2636 ) 
 * ` Realm . createObject ( Class , Object ) ` for creating objects with a primary key directly . 
 * Unit tests in Android library projects now detect Realm model classes . 
 + * Better error message if ` equals ( ) ` and ` hashCode ( ) ` are not properly overridden in custom Migration classes . 
 * Expanding the precision of ` Date ` fields to cover full range ( # 833 ) . 
 * ` Realm . waitForChange ( ) ` / ` stopWaitForChange ( ) ` and ` DynamicRealm . waitForChange ( ) ` / ` stopWaitForChange ( ) `
