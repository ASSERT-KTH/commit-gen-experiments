BLEU SCORE: 0.1597357760615681

TEST MSG: Make ObjectServerExample more accessible
GENERATED MSG: Update ObjectServerExample

TEST DIFF (one line): diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle <nl> index f7520d4 . . 1dbf552 100644 <nl> - - - a / examples / objectServerExample / build . gradle <nl> + + + b / examples / objectServerExample / build . gradle <nl> @ @ - 1 , 26 + 1 , 6 @ @ <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' realm - android ' <nl> <nl> - / / Credit : http : / / jeremie - martinez . com / 2015 / 05 / 05 / inject - host - gradle / <nl> - def getIP ( ) { <nl> - InetAddress result = null <nl> - Enumeration < NetworkInterface > interfaces = NetworkInterface . getNetworkInterfaces ( ) <nl> - while ( interfaces . hasMoreElements ( ) ) { <nl> - Enumeration < InetAddress > addresses = interfaces . nextElement ( ) . getInetAddresses ( ) <nl> - while ( addresses . hasMoreElements ( ) ) { <nl> - InetAddress address = addresses . nextElement ( ) <nl> - if ( ! address . isLoopbackAddress ( ) ) { <nl> - if ( address . isSiteLocalAddress ( ) ) { <nl> - return address . getHostAddress ( ) <nl> - } else if ( result = = null ) { <nl> - result = address <nl> - } <nl> - } <nl> - } <nl> - } <nl> - return ( result ! = null ? result : InetAddress . getLocalHost ( ) ) . getHostAddress ( ) <nl> - } <nl> - <nl> android { <nl> compileSdkVersion rootProject . sdkVersion <nl> buildToolsVersion rootProject . buildTools <nl> @ @ - 34 , 18 + 14 , 23 @ @ android { <nl> } <nl> <nl> buildTypes { <nl> - / / This will automatically try to detect the IP address of the machine <nl> - / / building the example . It is assumed that this machine is also running <nl> - / / the Object Server . If not , replace ' host ' with the IP of the machine <nl> - / / hosting the server . In some cases the wrong IP address will also <nl> - / / be detected . In that case also insert the IP address manually . <nl> - def host = getIP ( ) <nl> + / / Go to https : / / cloud . realm . io and copy the URL to your instance . Insert it below . <nl> + / / It will look something like " https : / / test . us1 . cloud . realm . io " <nl> + / / <nl> + / / If you ' re running a self - hosted version , use the hostname / IP address of the Realm Object <nl> + / / Server , e . g " http : / / 127 . 0 . 0 . 1 : 9080 " . <nl> + def rosUrl = " < INSERT _ REALM _ OBJECT _ SERVER _ URL > " <nl> + def realmAuthUrl = " \ " $ { rosUrl } / auth \ " " <nl> + def realmUrl = " \ " $ { rosUrl . replace ( " http " , " realm " ) } / default \ " " <nl> + <nl> debug { <nl> - buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> + buildConfigField " String " , " REALM _ AUTH _ URL " , " $ { realmAuthUrl } " <nl> + buildConfigField " String " , " REALM _ URL " , " $ { realmUrl } " <nl> minifyEnabled true <nl> } <nl> release { <nl> - buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> + buildConfigField " String " , " REALM _ AUTH _ URL " , " $ { realmAuthUrl } " <nl> + buildConfigField " String " , " REALM _ URL " , " $ { realmUrl } " <nl> minifyEnabled true <nl> signingConfig signingConfigs . debug <nl> } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> index ce6b051 . . 26d129c 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> @ @ - 34 , 11 + 34 , 13 @ @ import javax . annotation . Nonnull ; <nl> import butterknife . BindView ; <nl> import butterknife . ButterKnife ; <nl> import butterknife . OnClick ; <nl> + import io . realm . OrderedCollectionChangeSet ; <nl> + import io . realm . OrderedRealmCollectionChangeListener ; <nl> import io . realm . Progress ; <nl> import io . realm . ProgressListener ; <nl> import io . realm . ProgressMode ; <nl> import io . realm . Realm ; <nl> - import io . realm . RealmChangeListener ; <nl> + import io . realm . RealmResults ; <nl> import io . realm . SyncConfiguration ; <nl> import io . realm . SyncManager ; <nl> import io . realm . SyncSession ; <nl> @ @ - 47 , 7 + 49 , 6 @ @ import io . realm . examples . objectserver . model . CRDTCounter ; <nl> import me . zhanghai . android . materialprogressbar . MaterialProgressBar ; <nl> <nl> public class CounterActivity extends AppCompatActivity { <nl> - private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; <nl> <nl> private final ProgressListener downloadListener = new ProgressListener ( ) { <nl> @ Override <nl> @ @ - 79 , 7 + 80 , 7 @ @ public class CounterActivity extends AppCompatActivity { <nl> <nl> @ BindView ( R . id . text _ counter ) TextView counterView ; <nl> @ BindView ( R . id . progressbar ) MaterialProgressBar progressBar ; <nl> - private CRDTCounter counter ; / / Keep strong reference to counter to keep change listeners alive . <nl> + private RealmResults < CRDTCounter > counters ; / / Keep strong reference to counter to keep change listeners alive . <nl> <nl> @ Override <nl> protected void onCreate ( Bundle savedInstanceState ) { <nl> @ @ - 95 , 7 + 96 , 7 @ @ public class CounterActivity extends AppCompatActivity { <nl> if ( user = = null ) { return ; } <nl> <nl> / / Create a RealmConfiguration for our user <nl> - SyncConfiguration config = user . createConfiguration ( REALM _ URL ) <nl> + SyncConfiguration config = user . createConfiguration ( BuildConfig . REALM _ URL ) <nl> . initialData ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( @ Nonnull Realm realm ) { <nl> @ @ - 108 , 11 + 109 , 16 @ @ public class CounterActivity extends AppCompatActivity { <nl> realm = Realm . getInstance ( config ) ; <nl> <nl> counterView . setText ( " - " ) ; <nl> - counter = realm . where ( CRDTCounter . class ) . equalTo ( " name " , user . getIdentity ( ) ) . findFirstAsync ( ) ; <nl> - counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> + counters = realm . where ( CRDTCounter . class ) . equalTo ( " name " , user . getIdentity ( ) ) . findAllAsync ( ) ; <nl> + counters . addChangeListener ( new OrderedRealmCollectionChangeListener < RealmResults < CRDTCounter > > ( ) { <nl> @ Override <nl> - public void onChange ( @ Nonnull CRDTCounter counter ) { <nl> - counterView . setText ( ( ! counter . isValid ( ) ) ? " - " : String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> + public void onChange ( RealmResults < CRDTCounter > counters , OrderedCollectionChangeSet changeSet ) { <nl> + if ( counters . isValid ( ) & & ! counters . isEmpty ( ) ) { <nl> + CRDTCounter counter = counters . first ( ) ; <nl> + counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> + } else { <nl> + counterView . setText ( " - " ) ; <nl> + } <nl> } <nl> } ) ; <nl> <nl> @ @ - 132 , 7 + 138 , 7 @ @ public class CounterActivity extends AppCompatActivity { <nl> } <nl> closeRealm ( ) ; <nl> user = null ; <nl> - counter = null ; <nl> + counters = null ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> index 2f87b3a . . d16b593 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> @ @ - 34 , 8 + 34 , 6 @ @ import io . realm . SyncUser ; <nl> <nl> <nl> public class LoginActivity extends AppCompatActivity { <nl> - private static final String REALM _ AUTH _ URL = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; <nl> - <nl> @ BindView ( R . id . input _ username ) EditText username ; <nl> @ BindView ( R . id . input _ password ) EditText password ; <nl> @ BindView ( R . id . button _ login ) Button loginButton ; <nl> @ @ - 103 , 7 + 101 , 7 @ @ public class LoginActivity extends AppCompatActivity { <nl> } <nl> } ; <nl> <nl> - SyncUser . logInAsync ( creds , REALM _ AUTH _ URL , callback ) ; <nl> + SyncUser . logInAsync ( creds , BuildConfig . REALM _ AUTH _ URL , callback ) ; <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): diff - - git a / examples / objectServerExample / README . md b / examples / objectServerExample / README . md <nl> new file mode 100644 <nl> index 0000000 . . f9ec43a <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / README . md <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + # Using this example <nl> + <nl> + This example shows a minimal example on how to connect to and use the <nl> + Realm Object Server to synchronize changes between devices . <nl> + <nl> + The example will assume that the Object Server is running on the machine <nl> + building the example and the IP address will automatically be injected <nl> + into the build configuration . <nl> + <nl> + If this for some reasons does not work , please insert the IP Address into <nl> + the ` build . gradle ` accordingly . <nl> + <nl> + To read more about the Realm Object Server and how to deploy it , see <nl> + https : / / realm . io / news / introducing - realm - mobile - platform / <nl> diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle <nl> index 51de41a . . dd0e37e 100644 <nl> - - - a / examples / objectServerExample / build . gradle <nl> + + + b / examples / objectServerExample / build . gradle <nl> @ @ - 2 , 6 + 2 , 26 @ @ apply plugin : ' com . android . application ' <nl> apply plugin : ' android - command ' <nl> apply plugin : ' realm - android ' <nl> <nl> + / / Credit : http : / / jeremie - martinez . com / 2015 / 05 / 05 / inject - host - gradle / <nl> + def getIP ( ) { <nl> + InetAddress result = null ; <nl> + Enumeration < NetworkInterface > interfaces = NetworkInterface . getNetworkInterfaces ( ) ; <nl> + while ( interfaces . hasMoreElements ( ) ) { <nl> + Enumeration < InetAddress > addresses = interfaces . nextElement ( ) . getInetAddresses ( ) ; <nl> + while ( addresses . hasMoreElements ( ) ) { <nl> + InetAddress address = addresses . nextElement ( ) ; <nl> + if ( ! address . isLoopbackAddress ( ) ) { <nl> + if ( address . isSiteLocalAddress ( ) ) { <nl> + return address . getHostAddress ( ) ; <nl> + } else if ( result = = null ) { <nl> + result = address ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + return ( result ! = null ? result : InetAddress . getLocalHost ( ) ) . getHostAddress ( ) ; <nl> + } <nl> + <nl> android { <nl> compileSdkVersion rootProject . sdkVersion <nl> buildToolsVersion rootProject . buildTools <nl> @ @ - 15 , 11 + 35 , 18 @ @ android { <nl> } <nl> <nl> buildTypes { <nl> - release { <nl> - minifyEnabled false <nl> - } <nl> + / / This will automatically try to detect the IP address of the machine <nl> + / / building the example . It is assumed that this machine is also running <nl> + / / the Object Server . If not , replace ' host ' with the IP of the machine <nl> + / / hosting the server . In some cases the wrong IP address will also <nl> + / / be detected . In that case also insert the IP address manually . <nl> + def host = getIP ( ) <nl> debug { <nl> + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> + } <nl> + release { <nl> minifyEnabled false <nl> + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> } <nl> } <nl> <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> index 5537ca1 . . accbf13 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> @ @ - 23 , 24 + 23 , 23 @ @ import android . view . Menu ; <nl> import android . view . MenuItem ; <nl> import android . widget . TextView ; <nl> <nl> + import java . util . Locale ; <nl> + <nl> import butterknife . BindView ; <nl> import butterknife . ButterKnife ; <nl> import butterknife . OnClick ; <nl> import io . realm . Realm ; <nl> import io . realm . RealmChangeListener ; <nl> - import io . realm . RealmResults ; <nl> - import io . realm . examples . objectserver . model . CRDTCounter ; <nl> - import io . realm . examples . objectserver . model . CounterOperation ; <nl> import io . realm . SyncConfiguration ; <nl> - import io . realm . SyncManager ; <nl> import io . realm . User ; <nl> + import io . realm . examples . objectserver . model . CRDTCounter ; <nl> <nl> public class CounterActivity extends AppCompatActivity { <nl> <nl> - private static final String REALM _ URL = " realm : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 7800 / ~ / default " ; <nl> + private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; <nl> <nl> private Realm realm ; <nl> - private RealmResults < CounterOperation > counter ; <nl> + private CRDTCounter counter ; <nl> private User user ; <nl> <nl> @ BindView ( R . id . text _ counter ) TextView counterView ; <nl> @ @ - 67 , 10 + 66 , 7 @ @ public class CounterActivity extends AppCompatActivity { <nl> . initialData ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> - / / Workaround for initialData right now https : / / github . com / realm / realm - java - private / issues / 164 <nl> - if ( realm . isEmpty ( ) ) { <nl> - realm . createObject ( CRDTCounter . class , 1 ) ; <nl> - } <nl> + realm . createObject ( CRDTCounter . class , 1 ) ; <nl> } <nl> } ) <nl> . build ( ) ; <nl> @ @ - 78 , 30 + 74 , 14 @ @ public class CounterActivity extends AppCompatActivity { <nl> / / This will automatically sync all changes in the background for as long as the Realm is open <nl> realm = Realm . getInstance ( config ) ; <nl> <nl> - / / FIXME Looks like PrimaryKey and lists are not working correctly yet <nl> - / / FIXME Also need support for the ` setDefault ` instruction for this to make sense . <nl> - / / counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; <nl> - / / counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> - / / @ Override <nl> - / / public void onChange ( CRDTCounter counter ) { <nl> - / / if ( counter . isValid ( ) ) { <nl> - / / counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> - / / } else { <nl> - / / counterView . setText ( " - " ) ; <nl> - / / } <nl> - / / } <nl> - / / } ) ; <nl> - <nl> - counter = realm . where ( CounterOperation . class ) . findAllAsync ( ) ; <nl> - counter . addChangeListener ( new RealmChangeListener < RealmResults < CounterOperation > > ( ) { <nl> + counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; <nl> + counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> @ Override <nl> - public void onChange ( RealmResults < CounterOperation > result ) { <nl> - / / FIXME Why isn ' t this triggered when the DB is opened ? <nl> - Number sum = result . sum ( " adjustment " ) ; <nl> - if ( sum ! = null ) { <nl> - counterView . setText ( Long . toString ( sum . longValue ( ) ) ) ; <nl> + public void onChange ( CRDTCounter counter ) { <nl> + if ( counter . isValid ( ) ) { <nl> + counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> } else { <nl> - counterView . setText ( " 0 " ) ; <nl> + counterView . setText ( " - " ) ; <nl> } <nl> } <nl> } ) ; <nl> @ @ - 144 , 21 + 124 , 22 @ @ public class CounterActivity extends AppCompatActivity { <nl> <nl> @ OnClick ( R . id . upper ) <nl> public void incrementCounter ( ) { <nl> - adjustCounter ( new CounterOperation ( 1 ) ) ; <nl> + adjustCounter ( 1 ) ; <nl> } <nl> <nl> @ OnClick ( R . id . lower ) <nl> public void decrementCounter ( ) { <nl> - adjustCounter ( new CounterOperation ( - 1 ) ) ; <nl> + adjustCounter ( - 1 ) ; <nl> } <nl> <nl> - private void adjustCounter ( final CounterOperation ops ) { <nl> + private void adjustCounter ( final int adjustment ) { <nl> / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI <nl> / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . <nl> realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> - realm . copyToRealm ( ops ) ; <nl> + CRDTCounter counter = realm . where ( CRDTCounter . class ) . findFirst ( ) ; <nl> + counter . add ( adjustment ) ; <nl> } <nl> } ) ; <nl> } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> index bd02d2d . . 7018e8b 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class LoginActivity extends AppCompatActivity { <nl> String password = this . password . getText ( ) . toString ( ) ; <nl> <nl> Credentials creds = Credentials . usernamePassword ( username , password , createUser ) ; <nl> - String authUrl = " http : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 8080 / auth " ; <nl> + String authUrl = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; <nl> User . Callback callback = new User . Callback ( ) { <nl> @ Override <nl> public void onSuccess ( User user ) { <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> index 05d7567 . . 45050d8 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import io . realm . log . RealmLog ; <nl> <nl> public class MyApplication extends Application { <nl> <nl> - public static final String OBJECT _ SERVER _ IP = " 192 . 168 . 104 . 22 " ; <nl> @ Override <nl> public void onCreate ( ) { <nl> super . onCreate ( ) ;

TEST DIFF:
diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle 
 index f7520d4 . . 1dbf552 100644 
 - - - a / examples / objectServerExample / build . gradle 
 + + + b / examples / objectServerExample / build . gradle 
 @ @ - 1 , 26 + 1 , 6 @ @ 
 apply plugin : ' com . android . application ' 
 apply plugin : ' realm - android ' 
 
 - / / Credit : http : / / jeremie - martinez . com / 2015 / 05 / 05 / inject - host - gradle / 
 - def getIP ( ) { 
 - InetAddress result = null 
 - Enumeration < NetworkInterface > interfaces = NetworkInterface . getNetworkInterfaces ( ) 
 - while ( interfaces . hasMoreElements ( ) ) { 
 - Enumeration < InetAddress > addresses = interfaces . nextElement ( ) . getInetAddresses ( ) 
 - while ( addresses . hasMoreElements ( ) ) { 
 - InetAddress address = addresses . nextElement ( ) 
 - if ( ! address . isLoopbackAddress ( ) ) { 
 - if ( address . isSiteLocalAddress ( ) ) { 
 - return address . getHostAddress ( ) 
 - } else if ( result = = null ) { 
 - result = address 
 - } 
 - } 
 - } 
 - } 
 - return ( result ! = null ? result : InetAddress . getLocalHost ( ) ) . getHostAddress ( ) 
 - } 
 - 
 android { 
 compileSdkVersion rootProject . sdkVersion 
 buildToolsVersion rootProject . buildTools 
 @ @ - 34 , 18 + 14 , 23 @ @ android { 
 } 
 
 buildTypes { 
 - / / This will automatically try to detect the IP address of the machine 
 - / / building the example . It is assumed that this machine is also running 
 - / / the Object Server . If not , replace ' host ' with the IP of the machine 
 - / / hosting the server . In some cases the wrong IP address will also 
 - / / be detected . In that case also insert the IP address manually . 
 - def host = getIP ( ) 
 + / / Go to https : / / cloud . realm . io and copy the URL to your instance . Insert it below . 
 + / / It will look something like " https : / / test . us1 . cloud . realm . io " 
 + / / 
 + / / If you ' re running a self - hosted version , use the hostname / IP address of the Realm Object 
 + / / Server , e . g " http : / / 127 . 0 . 0 . 1 : 9080 " . 
 + def rosUrl = " < INSERT _ REALM _ OBJECT _ SERVER _ URL > " 
 + def realmAuthUrl = " \ " $ { rosUrl } / auth \ " " 
 + def realmUrl = " \ " $ { rosUrl . replace ( " http " , " realm " ) } / default \ " " 
 + 
 debug { 
 - buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 + buildConfigField " String " , " REALM _ AUTH _ URL " , " $ { realmAuthUrl } " 
 + buildConfigField " String " , " REALM _ URL " , " $ { realmUrl } " 
 minifyEnabled true 
 } 
 release { 
 - buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 + buildConfigField " String " , " REALM _ AUTH _ URL " , " $ { realmAuthUrl } " 
 + buildConfigField " String " , " REALM _ URL " , " $ { realmUrl } " 
 minifyEnabled true 
 signingConfig signingConfigs . debug 
 } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 index ce6b051 . . 26d129c 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 @ @ - 34 , 11 + 34 , 13 @ @ import javax . annotation . Nonnull ; 
 import butterknife . BindView ; 
 import butterknife . ButterKnife ; 
 import butterknife . OnClick ; 
 + import io . realm . OrderedCollectionChangeSet ; 
 + import io . realm . OrderedRealmCollectionChangeListener ; 
 import io . realm . Progress ; 
 import io . realm . ProgressListener ; 
 import io . realm . ProgressMode ; 
 import io . realm . Realm ; 
 - import io . realm . RealmChangeListener ; 
 + import io . realm . RealmResults ; 
 import io . realm . SyncConfiguration ; 
 import io . realm . SyncManager ; 
 import io . realm . SyncSession ; 
 @ @ - 47 , 7 + 49 , 6 @ @ import io . realm . examples . objectserver . model . CRDTCounter ; 
 import me . zhanghai . android . materialprogressbar . MaterialProgressBar ; 
 
 public class CounterActivity extends AppCompatActivity { 
 - private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; 
 
 private final ProgressListener downloadListener = new ProgressListener ( ) { 
 @ Override 
 @ @ - 79 , 7 + 80 , 7 @ @ public class CounterActivity extends AppCompatActivity { 
 
 @ BindView ( R . id . text _ counter ) TextView counterView ; 
 @ BindView ( R . id . progressbar ) MaterialProgressBar progressBar ; 
 - private CRDTCounter counter ; / / Keep strong reference to counter to keep change listeners alive . 
 + private RealmResults < CRDTCounter > counters ; / / Keep strong reference to counter to keep change listeners alive . 
 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 @ @ - 95 , 7 + 96 , 7 @ @ public class CounterActivity extends AppCompatActivity { 
 if ( user = = null ) { return ; } 
 
 / / Create a RealmConfiguration for our user 
 - SyncConfiguration config = user . createConfiguration ( REALM _ URL ) 
 + SyncConfiguration config = user . createConfiguration ( BuildConfig . REALM _ URL ) 
 . initialData ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( @ Nonnull Realm realm ) { 
 @ @ - 108 , 11 + 109 , 16 @ @ public class CounterActivity extends AppCompatActivity { 
 realm = Realm . getInstance ( config ) ; 
 
 counterView . setText ( " - " ) ; 
 - counter = realm . where ( CRDTCounter . class ) . equalTo ( " name " , user . getIdentity ( ) ) . findFirstAsync ( ) ; 
 - counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 + counters = realm . where ( CRDTCounter . class ) . equalTo ( " name " , user . getIdentity ( ) ) . findAllAsync ( ) ; 
 + counters . addChangeListener ( new OrderedRealmCollectionChangeListener < RealmResults < CRDTCounter > > ( ) { 
 @ Override 
 - public void onChange ( @ Nonnull CRDTCounter counter ) { 
 - counterView . setText ( ( ! counter . isValid ( ) ) ? " - " : String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 + public void onChange ( RealmResults < CRDTCounter > counters , OrderedCollectionChangeSet changeSet ) { 
 + if ( counters . isValid ( ) & & ! counters . isEmpty ( ) ) { 
 + CRDTCounter counter = counters . first ( ) ; 
 + counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 + } else { 
 + counterView . setText ( " - " ) ; 
 + } 
 } 
 } ) ; 
 
 @ @ - 132 , 7 + 138 , 7 @ @ public class CounterActivity extends AppCompatActivity { 
 } 
 closeRealm ( ) ; 
 user = null ; 
 - counter = null ; 
 + counters = null ; 
 } 
 
 @ Override 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 index 2f87b3a . . d16b593 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 @ @ - 34 , 8 + 34 , 6 @ @ import io . realm . SyncUser ; 
 
 
 public class LoginActivity extends AppCompatActivity { 
 - private static final String REALM _ AUTH _ URL = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; 
 - 
 @ BindView ( R . id . input _ username ) EditText username ; 
 @ BindView ( R . id . input _ password ) EditText password ; 
 @ BindView ( R . id . button _ login ) Button loginButton ; 
 @ @ - 103 , 7 + 101 , 7 @ @ public class LoginActivity extends AppCompatActivity { 
 } 
 } ; 
 
 - SyncUser . logInAsync ( creds , REALM _ AUTH _ URL , callback ) ; 
 + SyncUser . logInAsync ( creds , BuildConfig . REALM _ AUTH _ URL , callback ) ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / examples / objectServerExample / README . md b / examples / objectServerExample / README . md 
 new file mode 100644 
 index 0000000 . . f9ec43a 
 - - - / dev / null 
 + + + b / examples / objectServerExample / README . md 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + # Using this example 
 + 
 + This example shows a minimal example on how to connect to and use the 
 + Realm Object Server to synchronize changes between devices . 
 + 
 + The example will assume that the Object Server is running on the machine 
 + building the example and the IP address will automatically be injected 
 + into the build configuration . 
 + 
 + If this for some reasons does not work , please insert the IP Address into 
 + the ` build . gradle ` accordingly . 
 + 
 + To read more about the Realm Object Server and how to deploy it , see 
 + https : / / realm . io / news / introducing - realm - mobile - platform / 
 diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle 
 index 51de41a . . dd0e37e 100644 
 - - - a / examples / objectServerExample / build . gradle 
 + + + b / examples / objectServerExample / build . gradle 
 @ @ - 2 , 6 + 2 , 26 @ @ apply plugin : ' com . android . application ' 
 apply plugin : ' android - command ' 
 apply plugin : ' realm - android ' 
 
 + / / Credit : http : / / jeremie - martinez . com / 2015 / 05 / 05 / inject - host - gradle / 
 + def getIP ( ) { 
 + InetAddress result = null ; 
 + Enumeration < NetworkInterface > interfaces = NetworkInterface . getNetworkInterfaces ( ) ; 
 + while ( interfaces . hasMoreElements ( ) ) { 
 + Enumeration < InetAddress > addresses = interfaces . nextElement ( ) . getInetAddresses ( ) ; 
 + while ( addresses . hasMoreElements ( ) ) { 
 + InetAddress address = addresses . nextElement ( ) ; 
 + if ( ! address . isLoopbackAddress ( ) ) { 
 + if ( address . isSiteLocalAddress ( ) ) { 
 + return address . getHostAddress ( ) ; 
 + } else if ( result = = null ) { 
 + result = address ; 
 + } 
 + } 
 + } 
 + } 
 + return ( result ! = null ? result : InetAddress . getLocalHost ( ) ) . getHostAddress ( ) ; 
 + } 
 + 
 android { 
 compileSdkVersion rootProject . sdkVersion 
 buildToolsVersion rootProject . buildTools 
 @ @ - 15 , 11 + 35 , 18 @ @ android { 
 } 
 
 buildTypes { 
 - release { 
 - minifyEnabled false 
 - } 
 + / / This will automatically try to detect the IP address of the machine 
 + / / building the example . It is assumed that this machine is also running 
 + / / the Object Server . If not , replace ' host ' with the IP of the machine 
 + / / hosting the server . In some cases the wrong IP address will also 
 + / / be detected . In that case also insert the IP address manually . 
 + def host = getIP ( ) 
 debug { 
 + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 + } 
 + release { 
 minifyEnabled false 
 + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 } 
 } 
 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 index 5537ca1 . . accbf13 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 @ @ - 23 , 24 + 23 , 23 @ @ import android . view . Menu ; 
 import android . view . MenuItem ; 
 import android . widget . TextView ; 
 
 + import java . util . Locale ; 
 + 
 import butterknife . BindView ; 
 import butterknife . ButterKnife ; 
 import butterknife . OnClick ; 
 import io . realm . Realm ; 
 import io . realm . RealmChangeListener ; 
 - import io . realm . RealmResults ; 
 - import io . realm . examples . objectserver . model . CRDTCounter ; 
 - import io . realm . examples . objectserver . model . CounterOperation ; 
 import io . realm . SyncConfiguration ; 
 - import io . realm . SyncManager ; 
 import io . realm . User ; 
 + import io . realm . examples . objectserver . model . CRDTCounter ; 
 
 public class CounterActivity extends AppCompatActivity { 
 
 - private static final String REALM _ URL = " realm : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 7800 / ~ / default " ; 
 + private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; 
 
 private Realm realm ; 
 - private RealmResults < CounterOperation > counter ; 
 + private CRDTCounter counter ; 
 private User user ; 
 
 @ BindView ( R . id . text _ counter ) TextView counterView ; 
 @ @ - 67 , 10 + 66 , 7 @ @ public class CounterActivity extends AppCompatActivity { 
 . initialData ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 - / / Workaround for initialData right now https : / / github . com / realm / realm - java - private / issues / 164 
 - if ( realm . isEmpty ( ) ) { 
 - realm . createObject ( CRDTCounter . class , 1 ) ; 
 - } 
 + realm . createObject ( CRDTCounter . class , 1 ) ; 
 } 
 } ) 
 . build ( ) ; 
 @ @ - 78 , 30 + 74 , 14 @ @ public class CounterActivity extends AppCompatActivity { 
 / / This will automatically sync all changes in the background for as long as the Realm is open 
 realm = Realm . getInstance ( config ) ; 
 
 - / / FIXME Looks like PrimaryKey and lists are not working correctly yet 
 - / / FIXME Also need support for the ` setDefault ` instruction for this to make sense . 
 - / / counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; 
 - / / counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 - / / @ Override 
 - / / public void onChange ( CRDTCounter counter ) { 
 - / / if ( counter . isValid ( ) ) { 
 - / / counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 - / / } else { 
 - / / counterView . setText ( " - " ) ; 
 - / / } 
 - / / } 
 - / / } ) ; 
 - 
 - counter = realm . where ( CounterOperation . class ) . findAllAsync ( ) ; 
 - counter . addChangeListener ( new RealmChangeListener < RealmResults < CounterOperation > > ( ) { 
 + counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; 
 + counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 @ Override 
 - public void onChange ( RealmResults < CounterOperation > result ) { 
 - / / FIXME Why isn ' t this triggered when the DB is opened ? 
 - Number sum = result . sum ( " adjustment " ) ; 
 - if ( sum ! = null ) { 
 - counterView . setText ( Long . toString ( sum . longValue ( ) ) ) ; 
 + public void onChange ( CRDTCounter counter ) { 
 + if ( counter . isValid ( ) ) { 
 + counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 } else { 
 - counterView . setText ( " 0 " ) ; 
 + counterView . setText ( " - " ) ; 
 } 
 } 
 } ) ; 
 @ @ - 144 , 21 + 124 , 22 @ @ public class CounterActivity extends AppCompatActivity { 
 
 @ OnClick ( R . id . upper ) 
 public void incrementCounter ( ) { 
 - adjustCounter ( new CounterOperation ( 1 ) ) ; 
 + adjustCounter ( 1 ) ; 
 } 
 
 @ OnClick ( R . id . lower ) 
 public void decrementCounter ( ) { 
 - adjustCounter ( new CounterOperation ( - 1 ) ) ; 
 + adjustCounter ( - 1 ) ; 
 } 
 
 - private void adjustCounter ( final CounterOperation ops ) { 
 + private void adjustCounter ( final int adjustment ) { 
 / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI 
 / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . 
 realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 - realm . copyToRealm ( ops ) ; 
 + CRDTCounter counter = realm . where ( CRDTCounter . class ) . findFirst ( ) ; 
 + counter . add ( adjustment ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 index bd02d2d . . 7018e8b 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 @ @ - 77 , 7 + 77 , 7 @ @ public class LoginActivity extends AppCompatActivity { 
 String password = this . password . getText ( ) . toString ( ) ; 
 
 Credentials creds = Credentials . usernamePassword ( username , password , createUser ) ; 
 - String authUrl = " http : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 8080 / auth " ; 
 + String authUrl = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; 
 User . Callback callback = new User . Callback ( ) { 
 @ Override 
 public void onSuccess ( User user ) { 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 index 05d7567 . . 45050d8 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import io . realm . log . RealmLog ; 
 
 public class MyApplication extends Application { 
 
 - public static final String OBJECT _ SERVER _ IP = " 192 . 168 . 104 . 22 " ; 
 @ Override 
 public void onCreate ( ) { 
 super . onCreate ( ) ;
