BLEU SCORE: 0.02383853510228548

TEST MSG: Remove Realm . getTable ( ) from public API
GENERATED MSG: Minor javadoc update + remove a constructor

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 895ff3b . . b48382d 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 4 , 6 + 4 , 7 @ @ <nl> <nl> * RealmResults . clear ( ) now throws UnsupportedOperationException . Use RealmResults . deleteAllFromRealm ( ) instead . <nl> * RealmResults . remove ( int ) now throws UnsupportedOperationException . Use RealmResults . deleteFromRealm ( ) instead . <nl> + * Removed deprecated methods Realm . getTable ( ) from public API . <nl> <nl> # # # Deprecated <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 99cad44 . . 23886f9 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 1512 , 8 + 1512 , 7 @ @ public final class Realm extends BaseRealm { <nl> } <nl> } <nl> <nl> - @ Deprecated <nl> - public Table getTable ( Class < ? extends RealmObject > clazz ) { <nl> + Table getTable ( Class < ? extends RealmObject > clazz ) { <nl> Table table = classToTable . get ( clazz ) ; <nl> if ( table = = null ) { <nl> clazz = Util . getOriginalModelClass ( clazz ) ;
NEAREST DIFF (one line): diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 5883ceb . . 3c1fe00 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 106 , 6 + 106 , 9 @ @ public class Realm { <nl> / / defaultDurability = durability ; <nl> / / } <nl> <nl> + / * * <nl> + * @ hide <nl> + * / <nl> Table getTable ( Class < ? > clazz ) { <nl> String simpleClassName = simpleClassNames . get ( clazz ) ; <nl> if ( simpleClassName = = null ) { <nl> @ @ - 116 , 7 + 119 , 7 @ @ public class Realm { <nl> } <nl> <nl> / * * <nl> - * Realm static constructor <nl> + * Realm static constructor for the default realm " default . realm " <nl> * @ param context an Android context <nl> * @ return an instance of the Realm class <nl> * / <nl> @ @ - 137 , 15 + 140 , 6 @ @ public class Realm { <nl> / * * <nl> * Realm static constructor <nl> * @ param writableFolder absolute path to a writable directory <nl> - * @ return an instance of the Realm class <nl> - * / <nl> - public static Realm getInstance ( File writableFolder ) { <nl> - return Realm . create ( writableFolder , DEFAULT _ REALM _ NAME , null ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Realm static constructor <nl> - * @ param writableFolder absolute path to a writable directory <nl> * @ param filename the name of the file to save the Realm to <nl> * @ param key a 32 - byte encryption key <nl> * @ return an instance of the Realm class <nl> diff - - git a / realm / src / main / java / io / realm / RealmResults . java b / realm / src / main / java / io / realm / RealmResults . java <nl> index 402aaa8 . . d900d82 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / src / main / java / io / realm / RealmResults . java <nl> @ @ - 50 , 6 + 50 , 9 @ @ public class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> return realm ; <nl> } <nl> <nl> + / * * <nl> + * @ hide <nl> + * / <nl> TableOrView getTable ( ) { <nl> if ( table = = null ) { <nl> return realm . getTable ( classSpec ) ; <nl> @ @ - 60 , 7 + 63 , 12 @ @ public class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> <nl> Map < String , Class < ? > > cache = new HashMap < String , Class < ? > > ( ) ; <nl> <nl> - <nl> + / * * <nl> + * Returns a typed RealmQuery , which can be used to query for specific objects of this type <nl> + * <nl> + * @ return A typed RealmQuery <nl> + * @ see io . realm . RealmQuery <nl> + * / <nl> public RealmQuery < E > where ( ) { <nl> return new RealmQuery < E > ( this , classSpec ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 895ff3b . . b48382d 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 4 , 6 + 4 , 7 @ @ 
 
 * RealmResults . clear ( ) now throws UnsupportedOperationException . Use RealmResults . deleteAllFromRealm ( ) instead . 
 * RealmResults . remove ( int ) now throws UnsupportedOperationException . Use RealmResults . deleteFromRealm ( ) instead . 
 + * Removed deprecated methods Realm . getTable ( ) from public API . 
 
 # # # Deprecated 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 99cad44 . . 23886f9 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 1512 , 8 + 1512 , 7 @ @ public final class Realm extends BaseRealm { 
 } 
 } 
 
 - @ Deprecated 
 - public Table getTable ( Class < ? extends RealmObject > clazz ) { 
 + Table getTable ( Class < ? extends RealmObject > clazz ) { 
 Table table = classToTable . get ( clazz ) ; 
 if ( table = = null ) { 
 clazz = Util . getOriginalModelClass ( clazz ) ;

NEAREST DIFF:
diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 5883ceb . . 3c1fe00 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 106 , 6 + 106 , 9 @ @ public class Realm { 
 / / defaultDurability = durability ; 
 / / } 
 
 + / * * 
 + * @ hide 
 + * / 
 Table getTable ( Class < ? > clazz ) { 
 String simpleClassName = simpleClassNames . get ( clazz ) ; 
 if ( simpleClassName = = null ) { 
 @ @ - 116 , 7 + 119 , 7 @ @ public class Realm { 
 } 
 
 / * * 
 - * Realm static constructor 
 + * Realm static constructor for the default realm " default . realm " 
 * @ param context an Android context 
 * @ return an instance of the Realm class 
 * / 
 @ @ - 137 , 15 + 140 , 6 @ @ public class Realm { 
 / * * 
 * Realm static constructor 
 * @ param writableFolder absolute path to a writable directory 
 - * @ return an instance of the Realm class 
 - * / 
 - public static Realm getInstance ( File writableFolder ) { 
 - return Realm . create ( writableFolder , DEFAULT _ REALM _ NAME , null ) ; 
 - } 
 - 
 - / * * 
 - * Realm static constructor 
 - * @ param writableFolder absolute path to a writable directory 
 * @ param filename the name of the file to save the Realm to 
 * @ param key a 32 - byte encryption key 
 * @ return an instance of the Realm class 
 diff - - git a / realm / src / main / java / io / realm / RealmResults . java b / realm / src / main / java / io / realm / RealmResults . java 
 index 402aaa8 . . d900d82 100644 
 - - - a / realm / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / src / main / java / io / realm / RealmResults . java 
 @ @ - 50 , 6 + 50 , 9 @ @ public class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 return realm ; 
 } 
 
 + / * * 
 + * @ hide 
 + * / 
 TableOrView getTable ( ) { 
 if ( table = = null ) { 
 return realm . getTable ( classSpec ) ; 
 @ @ - 60 , 7 + 63 , 12 @ @ public class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 
 Map < String , Class < ? > > cache = new HashMap < String , Class < ? > > ( ) ; 
 
 - 
 + / * * 
 + * Returns a typed RealmQuery , which can be used to query for specific objects of this type 
 + * 
 + * @ return A typed RealmQuery 
 + * @ see io . realm . RealmQuery 
 + * / 
 public RealmQuery < E > where ( ) { 
 return new RealmQuery < E > ( this , classSpec ) ; 
 }
