BLEU SCORE: 0.02931251013275449

TEST MSG: Added whitespace check for try
GENERATED MSG: Re - enable single line in a test

TEST DIFF (one line): diff - - git a / realm / config / checkstyle / checkstyle . xml b / realm / config / checkstyle / checkstyle . xml <nl> index 861b591 . . b390372 100644 <nl> - - - a / realm / config / checkstyle / checkstyle . xml <nl> + + + b / realm / config / checkstyle / checkstyle . xml <nl> @ @ - 24 , 9 + 24 , 9 @ @ <nl> < property name = " message " value = " Line has trailing spaces . " / > <nl> < / module > - - > <nl> <nl> - < ! - - Space after ' for ' , ' if ' , ' while ' - - > <nl> + < ! - - Space after ' for ' , ' if ' , ' while ' , ' try ' - - > <nl> < module name = " RegexpSingleline " > <nl> - < property name = " format " value = " ^ \ s * ( for | if | while ) [ ^ ] " / > <nl> + < property name = " format " value = " ^ \ s * ( for | if | while | try ) [ ^ ] " / > <nl> < property name = " message " value = " Space needed before opening parenthesis . " / > <nl> < / module > <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> index 1368699 . . c60aa55 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> @ @ - 2010 , 7 + 2010 , 7 @ @ public class RealmQueryTests { <nl> final long numberOfObjects = 10 ; / / must be greater than 1 <nl> populateForDistinct ( realm , numberOfBlocks , numberOfObjects , false ) ; <nl> <nl> - try { <nl> + try { <nl> realm . where ( AnnotationIndexTypes . class ) . distinct ( " doesNotExist " ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> @ @ - 2063 , 7 + 2063 , 7 @ @ public class RealmQueryTests { <nl> public void distinct _ invalidTypesLinkedFields ( ) { <nl> populateForDistinctInvalidTypesLinked ( realm ) ; <nl> <nl> - try { <nl> + try { <nl> realm . where ( AllJavaTypes . class ) . distinct ( AllJavaTypes . FIELD _ OBJECT + " . " + AllJavaTypes . FIELD _ BINARY ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> @ @ - 2239 , 7 + 2239 , 7 @ @ public class RealmQueryTests { <nl> final long numberOfObjects = 10 ; <nl> populateForDistinct ( realm , numberOfBlocks , numberOfObjects , false ) ; <nl> <nl> - try { <nl> + try { <nl> realm . where ( AnnotationIndexTypes . class ) . distinctAsync ( " doesNotExist " ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> @ @ - 2276 , 7 + 2276 , 7 @ @ public class RealmQueryTests { <nl> public void distinctAsync _ notIndexedLinkedFields ( ) { <nl> populateForDistinctInvalidTypesLinked ( realm ) ; <nl> <nl> - try { <nl> + try { <nl> realm . where ( AllJavaTypes . class ) . distinctAsync ( AllJavaTypes . FIELD _ OBJECT + " . " + AllJavaTypes . FIELD _ BINARY ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java <nl> index a75adbe . . a798ecb 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java <nl> @ @ - 166 , 15 + 166 , 15 @ @ public class JNICloseTest extends AndroidTestCase { <nl> trans . commit ( ) ; <nl> <nl> / / methods below should throw exception , as table is invalid after commit <nl> - try { view . size ( ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getBinaryByteArray ( 0 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getBoolean ( 1 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getDate ( 2 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getDouble ( 3 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getFloat ( 4 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getLong ( 5 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getMixed ( 6 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getString ( 7 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . size ( ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getBinaryByteArray ( 0 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getBoolean ( 1 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getDate ( 2 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getDouble ( 3 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getFloat ( 4 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getLong ( 5 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getMixed ( 6 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getString ( 7 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> / / TODO : Add more methods <nl> <nl> db . close ( ) ;
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java b / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java <nl> index d6a0a08 . . 9e5759b 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java <nl> @ @ - 121 , 20 + 121 , 24 @ @ public class JNICloseTest extends AndroidTestCase { <nl> view . getDouble ( 3 , 0 ) ; <nl> view . getFloat ( 4 , 0 ) ; <nl> view . getLong ( 5 , 0 ) ; <nl> - / / view . getMixed ( 6 , 0 ) ; / / TODO : re - enable <nl> + view . getMixed ( 6 , 0 ) ; <nl> view . getString ( 7 , 0 ) ; <nl> <nl> / / TODO - add all methods from view <nl> } <nl> <nl> - <nl> + / / TODO : this test is crashing <nl> / * public void testShouldThrowWhenAccessingViewAfterTableIsDetached ( ) { <nl> final String testFile = " closetest . realm " ; <nl> SharedGroup db ; <nl> - File f = new File ( testFile ) ; <nl> - if ( f . exists ( ) ) <nl> - f . delete ( ) ; <nl> - db = new SharedGroup ( testFile ) ; <nl> + File f = new File ( this . getContext ( ) . getFilesDir ( ) , testFile ) ; <nl> + if ( f . exists ( ) ) { <nl> + boolean result = f . delete ( ) ; <nl> + if ( ! result ) { <nl> + fail ( " Could not delete test file " ) ; <nl> + } <nl> + } <nl> + db = new SharedGroup ( f . toString ( ) ) ; <nl> <nl> WriteTransaction trans = db . beginWrite ( ) ; <nl> Table tbl = trans . getTable ( " EmployeeTable " ) ; <nl> @ @ - 145 , 19 + 149 , 22 @ @ public class JNICloseTest extends AndroidTestCase { <nl> trans . commit ( ) ; <nl> <nl> / / methods below should throw exception , as table is invalid after commit <nl> - try { view . size ( ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getBinaryByteArray ( 0 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getBoolean ( 1 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getDate ( 2 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getDouble ( 3 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getFloat ( 4 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getLong ( 5 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getMixed ( 6 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - try { view . getString ( 7 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } <nl> - / / TODO : Add more methods <nl> + try { view . size ( ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getBinaryByteArray ( 0 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getBoolean ( 1 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getDate ( 2 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getDouble ( 3 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getFloat ( 4 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getLong ( 5 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getMixed ( 6 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + try { view . getString ( 7 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } <nl> + / / TODO : Add more methods <nl> <nl> db . close ( ) ; <nl> - f . delete ( ) ; <nl> + boolean result = f . delete ( ) ; <nl> + if ( ! result ) { <nl> + fail ( " Could not delete test file " ) ; <nl> + } <nl> } * / <nl> <nl> }

TEST DIFF:
diff - - git a / realm / config / checkstyle / checkstyle . xml b / realm / config / checkstyle / checkstyle . xml 
 index 861b591 . . b390372 100644 
 - - - a / realm / config / checkstyle / checkstyle . xml 
 + + + b / realm / config / checkstyle / checkstyle . xml 
 @ @ - 24 , 9 + 24 , 9 @ @ 
 < property name = " message " value = " Line has trailing spaces . " / > 
 < / module > - - > 
 
 - < ! - - Space after ' for ' , ' if ' , ' while ' - - > 
 + < ! - - Space after ' for ' , ' if ' , ' while ' , ' try ' - - > 
 < module name = " RegexpSingleline " > 
 - < property name = " format " value = " ^ \ s * ( for | if | while ) [ ^ ] " / > 
 + < property name = " format " value = " ^ \ s * ( for | if | while | try ) [ ^ ] " / > 
 < property name = " message " value = " Space needed before opening parenthesis . " / > 
 < / module > 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 index 1368699 . . c60aa55 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 @ @ - 2010 , 7 + 2010 , 7 @ @ public class RealmQueryTests { 
 final long numberOfObjects = 10 ; / / must be greater than 1 
 populateForDistinct ( realm , numberOfBlocks , numberOfObjects , false ) ; 
 
 - try { 
 + try { 
 realm . where ( AnnotationIndexTypes . class ) . distinct ( " doesNotExist " ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 @ @ - 2063 , 7 + 2063 , 7 @ @ public class RealmQueryTests { 
 public void distinct _ invalidTypesLinkedFields ( ) { 
 populateForDistinctInvalidTypesLinked ( realm ) ; 
 
 - try { 
 + try { 
 realm . where ( AllJavaTypes . class ) . distinct ( AllJavaTypes . FIELD _ OBJECT + " . " + AllJavaTypes . FIELD _ BINARY ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 @ @ - 2239 , 7 + 2239 , 7 @ @ public class RealmQueryTests { 
 final long numberOfObjects = 10 ; 
 populateForDistinct ( realm , numberOfBlocks , numberOfObjects , false ) ; 
 
 - try { 
 + try { 
 realm . where ( AnnotationIndexTypes . class ) . distinctAsync ( " doesNotExist " ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 @ @ - 2276 , 7 + 2276 , 7 @ @ public class RealmQueryTests { 
 public void distinctAsync _ notIndexedLinkedFields ( ) { 
 populateForDistinctInvalidTypesLinked ( realm ) ; 
 
 - try { 
 + try { 
 realm . where ( AllJavaTypes . class ) . distinctAsync ( AllJavaTypes . FIELD _ OBJECT + " . " + AllJavaTypes . FIELD _ BINARY ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java 
 index a75adbe . . a798ecb 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNICloseTest . java 
 @ @ - 166 , 15 + 166 , 15 @ @ public class JNICloseTest extends AndroidTestCase { 
 trans . commit ( ) ; 
 
 / / methods below should throw exception , as table is invalid after commit 
 - try { view . size ( ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getBinaryByteArray ( 0 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getBoolean ( 1 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getDate ( 2 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getDouble ( 3 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getFloat ( 4 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getLong ( 5 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getMixed ( 6 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getString ( 7 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . size ( ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getBinaryByteArray ( 0 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getBoolean ( 1 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getDate ( 2 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getDouble ( 3 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getFloat ( 4 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getLong ( 5 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getMixed ( 6 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getString ( 7 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 / / TODO : Add more methods 
 
 db . close ( ) ;

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java b / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java 
 index d6a0a08 . . 9e5759b 100644 
 - - - a / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java 
 + + + b / realm / src / androidTest / java / io / realm / internal / JNICloseTest . java 
 @ @ - 121 , 20 + 121 , 24 @ @ public class JNICloseTest extends AndroidTestCase { 
 view . getDouble ( 3 , 0 ) ; 
 view . getFloat ( 4 , 0 ) ; 
 view . getLong ( 5 , 0 ) ; 
 - / / view . getMixed ( 6 , 0 ) ; / / TODO : re - enable 
 + view . getMixed ( 6 , 0 ) ; 
 view . getString ( 7 , 0 ) ; 
 
 / / TODO - add all methods from view 
 } 
 
 - 
 + / / TODO : this test is crashing 
 / * public void testShouldThrowWhenAccessingViewAfterTableIsDetached ( ) { 
 final String testFile = " closetest . realm " ; 
 SharedGroup db ; 
 - File f = new File ( testFile ) ; 
 - if ( f . exists ( ) ) 
 - f . delete ( ) ; 
 - db = new SharedGroup ( testFile ) ; 
 + File f = new File ( this . getContext ( ) . getFilesDir ( ) , testFile ) ; 
 + if ( f . exists ( ) ) { 
 + boolean result = f . delete ( ) ; 
 + if ( ! result ) { 
 + fail ( " Could not delete test file " ) ; 
 + } 
 + } 
 + db = new SharedGroup ( f . toString ( ) ) ; 
 
 WriteTransaction trans = db . beginWrite ( ) ; 
 Table tbl = trans . getTable ( " EmployeeTable " ) ; 
 @ @ - 145 , 19 + 149 , 22 @ @ public class JNICloseTest extends AndroidTestCase { 
 trans . commit ( ) ; 
 
 / / methods below should throw exception , as table is invalid after commit 
 - try { view . size ( ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getBinaryByteArray ( 0 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getBoolean ( 1 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getDate ( 2 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getDouble ( 3 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getFloat ( 4 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getLong ( 5 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getMixed ( 6 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - try { view . getString ( 7 , 0 ) ; assert ( false ) ; } catch ( IllegalStateException e ) { } 
 - / / TODO : Add more methods 
 + try { view . size ( ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getBinaryByteArray ( 0 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getBoolean ( 1 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getDate ( 2 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getDouble ( 3 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getFloat ( 4 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getLong ( 5 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getMixed ( 6 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + try { view . getString ( 7 , 0 ) ; fail ( ) ; } catch ( IllegalStateException e ) { } 
 + / / TODO : Add more methods 
 
 db . close ( ) ; 
 - f . delete ( ) ; 
 + boolean result = f . delete ( ) ; 
 + if ( ! result ) { 
 + fail ( " Could not delete test file " ) ; 
 + } 
 } * / 
 
 }
