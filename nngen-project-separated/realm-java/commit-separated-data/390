BLEU SCORE: 0.03029704891446693

TEST MSG: Fix documentation for . directory ( ) method
GENERATED MSG: fix Javadoc documentation about encryption key length ( 64 bit - > 64 bytes )

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> index 0a006b5 . . cb6bddc 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 429 , 7 + 429 , 7 @ @ public class RealmConfiguration { <nl> } <nl> <nl> / * * <nl> - * Specifies the directory where the Realm file will be saved . The default value is { @ code context . getFiles ( ) } . <nl> + * Specifies the directory where the Realm file will be saved . The default value is { @ code context . getFilesDir ( ) } . <nl> * If the directory does not exist , it will be created . <nl> * <nl> * @ param directory the directory to save the Realm file in . Directory must be writable .
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> index 4f7a8c0 . . 10523e6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 443 , 7 + 443 , 7 @ @ public final class RealmConfiguration { <nl> } <nl> <nl> / * * <nl> - * Sets the 64 bit key used to encrypt and decrypt the Realm file . <nl> + * Sets the { @ value io . realm . RealmConfiguration # KEY _ LENGTH } bytes key used to encrypt and decrypt the Realm file . <nl> * / <nl> public Builder encryptionKey ( byte [ ] key ) { <nl> if ( key = = null ) {

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 index 0a006b5 . . cb6bddc 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 429 , 7 + 429 , 7 @ @ public class RealmConfiguration { 
 } 
 
 / * * 
 - * Specifies the directory where the Realm file will be saved . The default value is { @ code context . getFiles ( ) } . 
 + * Specifies the directory where the Realm file will be saved . The default value is { @ code context . getFilesDir ( ) } . 
 * If the directory does not exist , it will be created . 
 * 
 * @ param directory the directory to save the Realm file in . Directory must be writable .

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 index 4f7a8c0 . . 10523e6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 443 , 7 + 443 , 7 @ @ public final class RealmConfiguration { 
 } 
 
 / * * 
 - * Sets the 64 bit key used to encrypt and decrypt the Realm file . 
 + * Sets the { @ value io . realm . RealmConfiguration # KEY _ LENGTH } bytes key used to encrypt and decrypt the Realm file . 
 * / 
 public Builder encryptionKey ( byte [ ] key ) { 
 if ( key = = null ) {
