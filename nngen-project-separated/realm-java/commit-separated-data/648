BLEU SCORE: 0.014199193612838947

TEST MSG: Don ' t rely on dir ( ) in docker containers in the Jenkinsfile
GENERATED MSG: Upload to Sonartype

TEST DIFF (one line): diff - - git a / Dockerfile b / Dockerfile <nl> index 80421d0 . . 0029aae 100644 <nl> - - - a / Dockerfile <nl> + + + b / Dockerfile <nl> @ @ - 19 , 6 + 19 , 7 @ @ ENV PATH $ { PATH } : $ { NDK _ HOME } <nl> RUN DEBIAN _ FRONTEND = noninteractive dpkg - - add - architecture i386 \ <nl> & & apt - get update - qq \ <nl> & & apt - get install - y file git curl wget zip unzip \ <nl> + bsdmainutils \ <nl> build - essential \ <nl> openjdk - 8 - jdk - headless \ <nl> libc6 : i386 libstdc + + 6 : i386 libgcc1 : i386 libncurses5 : i386 libz1 : i386 \ <nl> @ @ - 31 , 7 + 32 , 7 @ @ RUN cd / opt & & rm - f android - sdk . tgz <nl> <nl> # Grab what ' s needed in the SDK <nl> # ↓ updates tools to at least 25 . 1 . 7 , but that prints ' Nothing was installed ' ( so I don ' t check the outputs ) . <nl> - RUN echo y | android update sdk - - no - ui - - all - - filter tools > / dev / null <nl> + RUN echo y | android update sdk - - no - ui - - all - - filter tools > / dev / null <nl> RUN echo y | android update sdk - - no - ui - - all - - filter platform - tools | grep ' package installed ' <nl> RUN echo y | android update sdk - - no - ui - - all - - filter build - tools - 24 . 0 . 0 | grep ' package installed ' <nl> RUN echo y | android update sdk - - no - ui - - all - - filter extra - android - m2repository | grep ' package installed ' <nl> diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index 3995f47 . . 5a74dd6 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 129 , 23 + 129 , 22 @ @ def storeJunitResults ( String path ) { <nl> } <nl> <nl> def collectAarMetrics ( ) { <nl> - dir ( ' realm / realm - library / build / outputs / aar ' ) { <nl> - sh ' ' ' set - xe <nl> - unzip realm - android - library - release . aar - d unzipped <nl> - find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx <nl> - $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar <nl> - cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods <nl> - ' ' ' <nl> - sendMetrics ( ' methods ' , readFile ( ' methods ' ) ) <nl> - <nl> - sendMetrics ( ' aar _ size ' , new File ( ' realm - android - library - release . aar ' ) . length ( ) ) <nl> - <nl> - def rootFolder = new File ( ' unzipped / jni ' ) <nl> - rootFolder . traverse ( type : DIRECTORIES ) { folder - > <nl> - def abiName = folder . name ( ) <nl> - def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String <nl> - sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) <nl> - } <nl> + sh ' ' ' set - xe <nl> + cd realm / realm - library / build / outputs / aar <nl> + unzip realm - android - library - release . aar - d unzipped <nl> + find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx <nl> + $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar <nl> + cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods <nl> + ' ' ' <nl> + sendMetrics ( ' methods ' , readFile ( ' realm / realm - library / build / outputs / aar / methods ' ) ) <nl> + <nl> + sendMetrics ( ' aar _ size ' , new File ( ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) . length ( ) ) <nl> + <nl> + def rootFolder = new File ( ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) <nl> + rootFolder . traverse ( type : DIRECTORIES ) { folder - > <nl> + def abiName = folder . name ( ) <nl> + def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String <nl> + sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / . gitignore b / . gitignore <nl> index e3b8989 . . 4352c2b 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 8 , 6 + 8 , 7 @ @ realm - jni / build <nl> <nl> # Gradle local properties <nl> local . properties <nl> + gradle . properties <nl> <nl> # Core <nl> core <nl> @ @ - 40 , 4 + 41 , 4 @ @ realm * . jar <nl> realm * . aar <nl> distribution / * / realm <nl> distribution / javadoc <nl> - distribution / version . txt <nl> \ No newline at end of file <nl> + distribution / version . txt <nl> diff - - git a / build . gradle b / build . gradle <nl> index 9391e70 . . c0d6337 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 1 , 3 + 1 , 6 @ @ <nl> + apply plugin : ' maven ' <nl> + apply plugin : ' signing ' <nl> + <nl> buildscript { <nl> repositories { <nl> mavenCentral ( ) <nl> @ @ - 16 , 3 + 19 , 66 @ @ allprojects { <nl> mavenCentral ( ) <nl> } <nl> } <nl> + <nl> + <nl> + task distribution { <nl> + javadoc = file ( ' realm / build / libs / realm - $ { version } - javadoc . jar ' ) <nl> + realmclasses = file ( ' realm / build / outputs / aar / realm - $ { version } . aar ' ) <nl> + annotation = file ( ' realm - annotations - processor / build / libs / realm - annotations - processor - $ { version } . jar ' ) <nl> + } <nl> + <nl> + artifacts { <nl> + archives file : distribution . javadoc , name : ' realm - $ { version } - javadoc ' , type : ' jar ' , builtBy : distribution <nl> + archives file : distribution . realmclasses , name : ' realm - $ { version } ' , type : ' aar ' , builtBy : distribution <nl> + archives file : distribution . annotation , name : ' realm - annotations - process - $ { version } ' , type : ' jar ' , builtBy : distribution <nl> + } <nl> + <nl> + signing { <nl> + sign configurations . archives <nl> + } <nl> + <nl> + <nl> + uploadArchives { <nl> + repositories { <nl> + mavenDeployer { <nl> + beforeDeployment { MavenDeployment deployment - > signing . signPom ( deployment ) } <nl> + <nl> + repository ( url : " https : / / oss . sonatype . org / service / local / staging / deploy / maven2 / " ) { <nl> + authentication ( userName : ossrhUsername , password : ossrhPassword ) <nl> + } <nl> + <nl> + snapshotRepository ( url : " https : / / oss . sonatype . org / content / repositories / snapshots / " ) { <nl> + authentication ( userName : ossrhUsername , password : ossrhPassword ) <nl> + } <nl> + <nl> + pom . project { <nl> + name ' Realm ' <nl> + packaging ' jar ' <nl> + / / optionally artifactId can be defined here <nl> + description ' Realm is a fast , embedded database . ' <nl> + url ' http : / / realm . io ' <nl> + <nl> + scm { <nl> + connection ' scm : git : https : / / github . com / Realm / realm - java . git ' <nl> + developerConnection ' scm : git : https : / / github . com / Realm / realm - java . git ' <nl> + url ' https : / / github . com / Realm / realm - java . git ' <nl> + } <nl> + <nl> + licenses { <nl> + license { <nl> + name ' The Apache License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + } <nl> + } <nl> + <nl> + developers { <nl> + developer { <nl> + id ' kneth ' <nl> + name ' Kenneth Geisshirt ' <nl> + email ' kg @ realm . io ' <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / Dockerfile b / Dockerfile 
 index 80421d0 . . 0029aae 100644 
 - - - a / Dockerfile 
 + + + b / Dockerfile 
 @ @ - 19 , 6 + 19 , 7 @ @ ENV PATH $ { PATH } : $ { NDK _ HOME } 
 RUN DEBIAN _ FRONTEND = noninteractive dpkg - - add - architecture i386 \ 
 & & apt - get update - qq \ 
 & & apt - get install - y file git curl wget zip unzip \ 
 + bsdmainutils \ 
 build - essential \ 
 openjdk - 8 - jdk - headless \ 
 libc6 : i386 libstdc + + 6 : i386 libgcc1 : i386 libncurses5 : i386 libz1 : i386 \ 
 @ @ - 31 , 7 + 32 , 7 @ @ RUN cd / opt & & rm - f android - sdk . tgz 
 
 # Grab what ' s needed in the SDK 
 # ↓ updates tools to at least 25 . 1 . 7 , but that prints ' Nothing was installed ' ( so I don ' t check the outputs ) . 
 - RUN echo y | android update sdk - - no - ui - - all - - filter tools > / dev / null 
 + RUN echo y | android update sdk - - no - ui - - all - - filter tools > / dev / null 
 RUN echo y | android update sdk - - no - ui - - all - - filter platform - tools | grep ' package installed ' 
 RUN echo y | android update sdk - - no - ui - - all - - filter build - tools - 24 . 0 . 0 | grep ' package installed ' 
 RUN echo y | android update sdk - - no - ui - - all - - filter extra - android - m2repository | grep ' package installed ' 
 diff - - git a / Jenkinsfile b / Jenkinsfile 
 index 3995f47 . . 5a74dd6 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 129 , 23 + 129 , 22 @ @ def storeJunitResults ( String path ) { 
 } 
 
 def collectAarMetrics ( ) { 
 - dir ( ' realm / realm - library / build / outputs / aar ' ) { 
 - sh ' ' ' set - xe 
 - unzip realm - android - library - release . aar - d unzipped 
 - find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx 
 - $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar 
 - cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods 
 - ' ' ' 
 - sendMetrics ( ' methods ' , readFile ( ' methods ' ) ) 
 - 
 - sendMetrics ( ' aar _ size ' , new File ( ' realm - android - library - release . aar ' ) . length ( ) ) 
 - 
 - def rootFolder = new File ( ' unzipped / jni ' ) 
 - rootFolder . traverse ( type : DIRECTORIES ) { folder - > 
 - def abiName = folder . name ( ) 
 - def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String 
 - sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) 
 - } 
 + sh ' ' ' set - xe 
 + cd realm / realm - library / build / outputs / aar 
 + unzip realm - android - library - release . aar - d unzipped 
 + find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx 
 + $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar 
 + cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods 
 + ' ' ' 
 + sendMetrics ( ' methods ' , readFile ( ' realm / realm - library / build / outputs / aar / methods ' ) ) 
 + 
 + sendMetrics ( ' aar _ size ' , new File ( ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) . length ( ) ) 
 + 
 + def rootFolder = new File ( ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) 
 + rootFolder . traverse ( type : DIRECTORIES ) { folder - > 
 + def abiName = folder . name ( ) 
 + def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String 
 + sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) 
 } 
 } 


NEAREST DIFF:
diff - - git a / . gitignore b / . gitignore 
 index e3b8989 . . 4352c2b 100644 
 - - - a / . gitignore 
 + + + b / . gitignore 
 @ @ - 8 , 6 + 8 , 7 @ @ realm - jni / build 
 
 # Gradle local properties 
 local . properties 
 + gradle . properties 
 
 # Core 
 core 
 @ @ - 40 , 4 + 41 , 4 @ @ realm * . jar 
 realm * . aar 
 distribution / * / realm 
 distribution / javadoc 
 - distribution / version . txt 
 \ No newline at end of file 
 + distribution / version . txt 
 diff - - git a / build . gradle b / build . gradle 
 index 9391e70 . . c0d6337 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 1 , 3 + 1 , 6 @ @ 
 + apply plugin : ' maven ' 
 + apply plugin : ' signing ' 
 + 
 buildscript { 
 repositories { 
 mavenCentral ( ) 
 @ @ - 16 , 3 + 19 , 66 @ @ allprojects { 
 mavenCentral ( ) 
 } 
 } 
 + 
 + 
 + task distribution { 
 + javadoc = file ( ' realm / build / libs / realm - $ { version } - javadoc . jar ' ) 
 + realmclasses = file ( ' realm / build / outputs / aar / realm - $ { version } . aar ' ) 
 + annotation = file ( ' realm - annotations - processor / build / libs / realm - annotations - processor - $ { version } . jar ' ) 
 + } 
 + 
 + artifacts { 
 + archives file : distribution . javadoc , name : ' realm - $ { version } - javadoc ' , type : ' jar ' , builtBy : distribution 
 + archives file : distribution . realmclasses , name : ' realm - $ { version } ' , type : ' aar ' , builtBy : distribution 
 + archives file : distribution . annotation , name : ' realm - annotations - process - $ { version } ' , type : ' jar ' , builtBy : distribution 
 + } 
 + 
 + signing { 
 + sign configurations . archives 
 + } 
 + 
 + 
 + uploadArchives { 
 + repositories { 
 + mavenDeployer { 
 + beforeDeployment { MavenDeployment deployment - > signing . signPom ( deployment ) } 
 + 
 + repository ( url : " https : / / oss . sonatype . org / service / local / staging / deploy / maven2 / " ) { 
 + authentication ( userName : ossrhUsername , password : ossrhPassword ) 
 + } 
 + 
 + snapshotRepository ( url : " https : / / oss . sonatype . org / content / repositories / snapshots / " ) { 
 + authentication ( userName : ossrhUsername , password : ossrhPassword ) 
 + } 
 + 
 + pom . project { 
 + name ' Realm ' 
 + packaging ' jar ' 
 + / / optionally artifactId can be defined here 
 + description ' Realm is a fast , embedded database . ' 
 + url ' http : / / realm . io ' 
 + 
 + scm { 
 + connection ' scm : git : https : / / github . com / Realm / realm - java . git ' 
 + developerConnection ' scm : git : https : / / github . com / Realm / realm - java . git ' 
 + url ' https : / / github . com / Realm / realm - java . git ' 
 + } 
 + 
 + licenses { 
 + license { 
 + name ' The Apache License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + } 
 + } 
 + 
 + developers { 
 + developer { 
 + id ' kneth ' 
 + name ' Kenneth Geisshirt ' 
 + email ' kg @ realm . io ' 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file
