BLEU SCORE: 0.05954672553679791

TEST MSG: Fix findbugs issue
GENERATED MSG: Experiment of Results . get ( )

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java b / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java <nl> index 3e5548e . . b3d3d2d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java <nl> @ @ - 64 , 6 + 64 , 16 @ @ public class ObserverPairList < T extends ObserverPairList . ObserverPair > { <nl> } <nl> return false ; <nl> } <nl> + <nl> + @ Override <nl> + public int hashCode ( ) { <nl> + T observer = observerRef . get ( ) ; <nl> + <nl> + int result = 17 ; <nl> + result = 31 * result + ( ( observer ! = null ) ? observer . hashCode ( ) : 0 ) ; <nl> + result = 31 * result + ( ( listener ! = null ) ? listener . hashCode ( ) : 0 ) ; <nl> + return result ; <nl> + } <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java b / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java <nl> index e936e6b . . 9b641e2 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java <nl> @ @ - 49 , 6 + 49 , 10 @ @ public class PendingRow implements Row { <nl> return ; <nl> } <nl> <nl> + if ( pendingCollection = = null ) { <nl> + / / Should not happen , but make findbugs happy . <nl> + return ; <nl> + } <nl> if ( pendingCollection . isValid ( ) ) { <nl> / / PendingRow will always get the first Row of the query since we only support findFirst . <nl> UncheckedRow uncheckedRow = pendingCollection . firstUncheckedRow ( ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index c61b2ce . . 6e5dc1c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 505 , 6 + 505 , 18 @ @ abstract class BaseRealm implements Closeable { <nl> return schema ; <nl> } <nl> <nl> + / / FIXME : Testing code <nl> + < E extends RealmModel > E get ( Class < E > clazz , long rowPtr ) { <nl> + Table table = schema . getTable ( clazz ) ; <nl> + UncheckedRow row = UncheckedRow . getByRowPointer ( table , rowPtr ) ; <nl> + <nl> + E result = configuration . getSchemaMediator ( ) . newInstance ( clazz , this , row , schema . getColumnInfo ( clazz ) , <nl> + false , Collections . < String > emptyList ( ) ) ; <nl> + RealmObjectProxy proxy = ( RealmObjectProxy ) result ; <nl> + proxy . realmGet $ proxyState ( ) . setTableVersion $ realm ( ) ; <nl> + return result ; <nl> + } <nl> + <nl> < E extends RealmModel > E get ( Class < E > clazz , long rowIndex , boolean acceptDefaultValue , List < String > excludeFields ) { <nl> Table table = schema . getTable ( clazz ) ; <nl> UncheckedRow row = table . getUncheckedRow ( rowIndex ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 2870276 . . c0e0f70 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 268 , 14 + 268 , 16 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> public E get ( int location ) { <nl> E obj ; <nl> realm . checkIfValid ( ) ; <nl> + / * <nl> TableOrView table = getTableOrView ( ) ; <nl> if ( table instanceof TableView ) { <nl> obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> } else { <nl> obj = realm . get ( classSpec , className , location ) ; <nl> } <nl> - <nl> - return obj ; <nl> + * / <nl> + long rowPtr = nativeGetRow ( nativePtr , location ) ; <nl> + return realm . get ( classSpec , rowPtr ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index 88ba67d . . dd84818 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class Table implements TableOrView , TableSchema { <nl> private static final long NO _ PRIMARY _ KEY = - 2 ; <nl> <nl> long nativePtr ; <nl> - private final Context context ; <nl> + final Context context ; <nl> private final SharedRealm sharedRealm ; <nl> private long cachedPrimaryKeyColumnIndex = NO _ MATCH ; <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java <nl> index 6e4bb8e . . 523b3fb 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java <nl> @ @ - 71 , 6 + 71 , 13 @ @ public class UncheckedRow extends NativeObject implements Row { <nl> return row ; <nl> } <nl> <nl> + / / FIXME : Testing code <nl> + public static UncheckedRow getByRowPointer ( Table table , long nativeRowPointer ) { <nl> + UncheckedRow row = new UncheckedRow ( table . context , table , nativeRowPointer ) ; <nl> + table . context . addReference ( NativeObjectReference . TYPE _ ROW , row ) ; <nl> + return row ; <nl> + } <nl> + <nl> / * * <nl> * Gets the row object associated to an index in a LinkView . <nl> *

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java b / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java 
 index 3e5548e . . b3d3d2d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / ObserverPairList . java 
 @ @ - 64 , 6 + 64 , 16 @ @ public class ObserverPairList < T extends ObserverPairList . ObserverPair > { 
 } 
 return false ; 
 } 
 + 
 + @ Override 
 + public int hashCode ( ) { 
 + T observer = observerRef . get ( ) ; 
 + 
 + int result = 17 ; 
 + result = 31 * result + ( ( observer ! = null ) ? observer . hashCode ( ) : 0 ) ; 
 + result = 31 * result + ( ( listener ! = null ) ? listener . hashCode ( ) : 0 ) ; 
 + return result ; 
 + } 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java b / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java 
 index e936e6b . . 9b641e2 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / PendingRow . java 
 @ @ - 49 , 6 + 49 , 10 @ @ public class PendingRow implements Row { 
 return ; 
 } 
 
 + if ( pendingCollection = = null ) { 
 + / / Should not happen , but make findbugs happy . 
 + return ; 
 + } 
 if ( pendingCollection . isValid ( ) ) { 
 / / PendingRow will always get the first Row of the query since we only support findFirst . 
 UncheckedRow uncheckedRow = pendingCollection . firstUncheckedRow ( ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index c61b2ce . . 6e5dc1c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 505 , 6 + 505 , 18 @ @ abstract class BaseRealm implements Closeable { 
 return schema ; 
 } 
 
 + / / FIXME : Testing code 
 + < E extends RealmModel > E get ( Class < E > clazz , long rowPtr ) { 
 + Table table = schema . getTable ( clazz ) ; 
 + UncheckedRow row = UncheckedRow . getByRowPointer ( table , rowPtr ) ; 
 + 
 + E result = configuration . getSchemaMediator ( ) . newInstance ( clazz , this , row , schema . getColumnInfo ( clazz ) , 
 + false , Collections . < String > emptyList ( ) ) ; 
 + RealmObjectProxy proxy = ( RealmObjectProxy ) result ; 
 + proxy . realmGet $ proxyState ( ) . setTableVersion $ realm ( ) ; 
 + return result ; 
 + } 
 + 
 < E extends RealmModel > E get ( Class < E > clazz , long rowIndex , boolean acceptDefaultValue , List < String > excludeFields ) { 
 Table table = schema . getTable ( clazz ) ; 
 UncheckedRow row = table . getUncheckedRow ( rowIndex ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 2870276 . . c0e0f70 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 268 , 14 + 268 , 16 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 public E get ( int location ) { 
 E obj ; 
 realm . checkIfValid ( ) ; 
 + / * 
 TableOrView table = getTableOrView ( ) ; 
 if ( table instanceof TableView ) { 
 obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 } else { 
 obj = realm . get ( classSpec , className , location ) ; 
 } 
 - 
 - return obj ; 
 + * / 
 + long rowPtr = nativeGetRow ( nativePtr , location ) ; 
 + return realm . get ( classSpec , rowPtr ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index 88ba67d . . dd84818 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class Table implements TableOrView , TableSchema { 
 private static final long NO _ PRIMARY _ KEY = - 2 ; 
 
 long nativePtr ; 
 - private final Context context ; 
 + final Context context ; 
 private final SharedRealm sharedRealm ; 
 private long cachedPrimaryKeyColumnIndex = NO _ MATCH ; 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java 
 index 6e4bb8e . . 523b3fb 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java 
 @ @ - 71 , 6 + 71 , 13 @ @ public class UncheckedRow extends NativeObject implements Row { 
 return row ; 
 } 
 
 + / / FIXME : Testing code 
 + public static UncheckedRow getByRowPointer ( Table table , long nativeRowPointer ) { 
 + UncheckedRow row = new UncheckedRow ( table . context , table , nativeRowPointer ) ; 
 + table . context . addReference ( NativeObjectReference . TYPE _ ROW , row ) ; 
 + return row ; 
 + } 
 + 
 / * * 
 * Gets the row object associated to an index in a LinkView . 
 *
