BLEU SCORE: 0.05522397783539471

TEST MSG: Move the publishing logic to the respective project
GENERATED MSG: More publishing related fixes

TEST DIFF (one line): diff - - git a / bintrayAar . gradle b / bintrayAar . gradle <nl> deleted file mode 100644 <nl> index 7ea7fe0 . . 0000000 <nl> - - - a / bintrayAar . gradle <nl> + + + / dev / null <nl> @ @ - 1 , 90 + 0 , 0 @ @ <nl> - buildscript { <nl> - repositories { <nl> - jcenter ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> - } <nl> - } <nl> - <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> - <nl> - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> - <nl> - version = currentVersion <nl> - <nl> - def commonPom = { <nl> - version = currentVersion <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - aarLibrary ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - android - library ' <nl> - artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - android - library - release . aar " ) <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - sources . jar " ) ) { <nl> - classifier = ' sources ' <nl> - } <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - javadoc . jar " ) ) { <nl> - classifier = ' javadoc ' <nl> - } <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - <nl> - def repositoriesNode = root . appendNode ( ' repositories ' ) <nl> - def repositoryNode = repositoriesNode . appendNode ( ' repository ' ) <nl> - repositoryNode . appendNode ( ' id ' , ' jitpack . io ' ) <nl> - repositoryNode . appendNode ( ' url ' , ' https : / / jitpack . io ' ) <nl> - <nl> - def dependenciesNode = root . appendNode ( ' dependencies ' ) <nl> - def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) <nl> - dependencyNode . appendNode ( ' groupId ' , ' com . github . KeepSafe ' ) <nl> - dependencyNode . appendNode ( ' artifactId ' , ' ReLinker ' ) <nl> - dependencyNode . appendNode ( ' version ' , ' 1 . 1 ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - publications = [ ' aarLibrary ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android - library ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> diff - - git a / bintrayAnnotations . gradle b / bintrayAnnotations . gradle <nl> deleted file mode 100644 <nl> index 6362b65 . . 0000000 <nl> - - - a / bintrayAnnotations . gradle <nl> + + + / dev / null <nl> @ @ - 1 , 73 + 0 , 0 @ @ <nl> - buildscript { <nl> - repositories { <nl> - jcenter ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> - } <nl> - } <nl> - <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> - <nl> - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> - <nl> - version = currentVersion <nl> - <nl> - def commonPom = { <nl> - version = currentVersion <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - annotations ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - annotations ' <nl> - artifact file ( " $ { rootDir } / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> - root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - publications = [ ' annotations ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - annotations ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / bintrayAnnotationsProcessor . gradle b / bintrayAnnotationsProcessor . gradle <nl> deleted file mode 100644 <nl> index 515ca66 . . 0000000 <nl> - - - a / bintrayAnnotationsProcessor . gradle <nl> + + + / dev / null <nl> @ @ - 1 , 78 + 0 , 0 @ @ <nl> - buildscript { <nl> - repositories { <nl> - jcenter ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> - } <nl> - } <nl> - <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> - <nl> - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> - <nl> - version = currentVersion <nl> - <nl> - def commonPom = { <nl> - version = currentVersion <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - annotationsProcessor ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - annotations - processor ' <nl> - artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> - root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - def dependenciesNode = root . appendNode ( ' dependencies ' ) <nl> - def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) <nl> - dependencyNode . appendNode ( ' groupId ' , ' com . squareup ' ) <nl> - dependencyNode . appendNode ( ' artifactId ' , ' javawriter ' ) <nl> - dependencyNode . appendNode ( ' version ' , ' 2 . 5 . 0 ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - publications = [ ' annotationsProcessor ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - annotations - processor ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / bintrayGradlePlugin . gradle b / bintrayGradlePlugin . gradle <nl> deleted file mode 100644 <nl> index 786ab57 . . 0000000 <nl> - - - a / bintrayGradlePlugin . gradle <nl> + + + / dev / null <nl> @ @ - 1 , 78 + 0 , 0 @ @ <nl> - buildscript { <nl> - repositories { <nl> - jcenter ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> - } <nl> - } <nl> - <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> - <nl> - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> - <nl> - version = currentVersion <nl> - <nl> - def commonPom = { <nl> - version = currentVersion <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - gradlePlugin ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - gradle - plugin ' <nl> - artifact file ( " $ { rootDir } / gradle - plugin / build / libs / realm - gradle - plugin - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - gradle - plugin ' ) <nl> - root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - def dependenciesNode = root . appendNode ( ' dependencies ' ) <nl> - def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) <nl> - dependencyNode . appendNode ( ' groupId ' , ' com . neenbedankt . gradle . plugins ' ) <nl> - dependencyNode . appendNode ( ' artifactId ' , ' android - apt ' ) <nl> - dependencyNode . appendNode ( ' version ' , ' 1 . 8 ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - publications = [ ' gradlePlugin ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - gradle - plugin ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / bintrayJar . gradle b / bintrayJar . gradle <nl> deleted file mode 100644 <nl> index c01d6f4 . . 0000000 <nl> - - - a / bintrayJar . gradle <nl> + + + / dev / null <nl> @ @ - 1 , 79 + 0 , 0 @ @ <nl> - buildscript { <nl> - repositories { <nl> - jcenter ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> - } <nl> - } <nl> - <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> - <nl> - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> - <nl> - version = currentVersion <nl> - <nl> - def commonPom = { <nl> - version = currentVersion <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - jarLibrary ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - android ' <nl> - artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - sources . jar " ) ) { <nl> - classifier = ' sources ' <nl> - } <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - javadoc . jar " ) ) { <nl> - classifier = ' javadoc ' <nl> - } <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - publications = [ ' jarLibrary ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / bintrayTransformer . gradle b / bintrayTransformer . gradle <nl> deleted file mode 100644 <nl> index 0ae1bbd . . 0000000 <nl> - - - a / bintrayTransformer . gradle <nl> + + + / dev / null <nl> @ @ - 1 , 73 + 0 , 0 @ @ <nl> - buildscript { <nl> - repositories { <nl> - jcenter ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> - } <nl> - } <nl> - <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> - <nl> - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> - <nl> - version = currentVersion <nl> - <nl> - def commonPom = { <nl> - version = currentVersion <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - annotations ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - transformer ' <nl> - artifact file ( " $ { rootDir } / realm - transformer / build / libs / realm - transformer - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - transformer ' ) <nl> - root . appendNode ( ' description ' , ' Gradle Android transformer for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - publications = [ ' annotations ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - annotations ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> diff - - git a / build . gradle b / build . gradle <nl> index a069355 . . 654c317 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 3 , 13 + 3 , 10 @ @ buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> classpath ' ch . netzwerg : gradle - release - plugin : 1 . 2 . 0 ' <nl> } <nl> } <nl> <nl> - apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . artifactory ' <nl> apply plugin : ' ch . netzwerg . release ' <nl> <nl> def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> @ @ - 254 , 199 + 251 , 83 @ @ task distribute { <nl> dependsOn uploadUpdateVersion <nl> } <nl> <nl> - / / This is a work - around for a bug in the publish plugin that prevents publishing the same artifact twice in two <nl> - / / different publications <nl> - task duplicateSourcesAndJavadoc ( type : Copy ) { <nl> - description = ' Prepare source and javadoc jars for publishing . ' <nl> + task bintrayRealm ( type : GradleBuild ) { <nl> + description = ' Publish the Realm AAR and AP to Bintray ' <nl> group = ' Publishing ' <nl> - dependsOn sourcesJar <nl> - dependsOn javadoc <nl> - from ( " $ { rootDir } / realm / realm - library / build / libs / " ) { <nl> - include ' * . jar ' <nl> - rename ' realm - android - library - ( . * ? ) ' , ' realm - android - $ 1 ' <nl> - } <nl> - into " $ { rootDir } / realm / realm - library / build / libs / " <nl> - } <nl> - <nl> - task bintrayAar ( type : GradleBuild ) { <nl> - description = ' Publish the Realm AAR to Bintray ' <nl> - group = ' Distribute ' <nl> - dependsOn duplicateSourcesAndJavadoc <nl> - buildFile = file ( ' bintrayAar . gradle ' ) <nl> + buildFile = file ( ' realm / build . gradle ' ) <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> task bintrayAnnotations ( type : GradleBuild ) { <nl> description = ' Publish the Realm Annotations to Bintray ' <nl> - group = ' Distribute ' <nl> - buildFile = file ( ' bintrayAnnotations . gradle ' ) <nl> - tasks = [ ' bintrayUpload ' ] <nl> - } <nl> - <nl> - task bintrayAnnotationsProcessor ( type : GradleBuild ) { <nl> - description = ' Publish the Realm AP to Bintray ' <nl> - group = ' Distribute ' <nl> - buildFile = file ( ' bintrayAnnotationsProcessor . gradle ' ) <nl> + group = ' Publishing ' <nl> + buildFile = file ( ' realm - annotations / build . gradle ' ) <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> task bintrayGradlePlugin ( type : GradleBuild ) { <nl> description = ' Publish the Realm Gradle Plugin to Bintray ' <nl> - group = ' Distribute ' <nl> - buildFile = file ( ' bintrayGradlePlugin . gradle ' ) <nl> + group = ' Publishing ' <nl> + buildFile = file ( ' gradle - plugin / build . gradle ' ) <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> task bintrayTransformer ( type : GradleBuild ) { <nl> description = ' Publish the Realm Transformer to Bintray ' <nl> - group = ' Distribute ' <nl> - buildFile = file ( ' bintrayTransformer . gradle ' ) <nl> + group = ' Publishing ' <nl> + buildFile = file ( ' realm - transformer / build . gradle ' ) <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> task bintrayUpload { <nl> description = ' Publish all the Realm artifacts to Bintray ' <nl> - group = ' Distribute ' <nl> - dependsOn bintrayAar <nl> + group = ' Publishing ' <nl> + dependsOn bintrayRealm <nl> dependsOn bintrayAnnotations <nl> - dependsOn bintrayAnnotationsProcessor <nl> dependsOn bintrayGradlePlugin <nl> dependsOn bintrayTransformer <nl> } <nl> <nl> - task ojoUpload { <nl> - description = ' Publish all the Realm SNAPSHOT artifacts to OJO ' <nl> + task ojoRealm ( type : GradleBuild ) { <nl> + description = ' Publish the Realm AAR and AP SNAPSHOT to Bintray ' <nl> group = ' Publishing ' <nl> - dependsOn duplicateSourcesAndJavadoc <nl> - dependsOn artifactoryPublish <nl> - artifactoryPublish . dependsOn duplicateSourcesAndJavadoc <nl> + buildFile = file ( ' realm / build . gradle ' ) <nl> + tasks = [ ' artifactoryPublish ' ] <nl> } <nl> <nl> - / / This is just a placeholder for the release plugin <nl> - task build { } <nl> + task ojoAnnotations ( type : GradleBuild ) { <nl> + description = ' Publish the Realm Annotations SNAPSHOT to Bintray ' <nl> + group = ' Publishing ' <nl> + buildFile = file ( ' realm - annotations / build . gradle ' ) <nl> + tasks = [ ' artifactoryPublish ' ] <nl> + } <nl> <nl> - def commonPom = { <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - distribution ' repo ' <nl> - } <nl> - } <nl> - issueManagement { <nl> - system ' github ' <nl> - url ' https : / / github . com / realm / realm - java / issues ' <nl> - } <nl> - scm { <nl> - url ' scm : https : / / github . com / realm / realm - java ' <nl> - connection ' scm : git @ github . com : realm / realm - java . git ' <nl> - developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> - } <nl> + task ojoGradlePlugin ( type : GradleBuild ) { <nl> + description = ' Publish the Realm Gradle Plugin SNAPSHOT to Bintray ' <nl> + group = ' Publishing ' <nl> + buildFile = file ( ' gradle - plugin / build . gradle ' ) <nl> + tasks = [ ' artifactoryPublish ' ] <nl> } <nl> <nl> - publishing { <nl> - publications { <nl> - jarLibrary ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - android ' <nl> - artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) ) { <nl> - classifier = ' sources ' <nl> - } <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) ) { <nl> - classifier = ' javadoc ' <nl> - } <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - aarLibrary ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - android - library ' <nl> - artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - android - library - release . aar " ) <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - sources . jar " ) ) { <nl> - classifier = ' sources ' <nl> - } <nl> - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - javadoc . jar " ) ) { <nl> - classifier = ' javadoc ' <nl> - } <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android - library ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - annotations ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - annotations ' <nl> - artifact file ( " $ { rootDir } / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> - root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - annotationsProcessor ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - annotations - processor ' <nl> - artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - annotations - processor ' ) <nl> - root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - gradlePlugin ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - gradle - plugin ' <nl> - artifact file ( " $ { rootDir } / gradle - plugin / build / libs / realm - gradle - plugin - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - realm - plugin ' ) <nl> - root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - transformer ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId = ' realm - transformer ' <nl> - artifact file ( " $ { rootDir } / realm - transformer / build / libs / realm - transformer - $ { currentVersion } . jar " ) <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - transformer ' ) <nl> - root . appendNode ( ' description ' , ' Gradle Android transformer for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - root . children ( ) . last ( ) + commonPom <nl> - } <nl> - } <nl> - } <nl> + task ojoTransformer ( type : GradleBuild ) { <nl> + description = ' Publish the Realm Transformer SNAPSHOT to Bintray ' <nl> + group = ' Publishing ' <nl> + buildFile = file ( ' realm - transformer / build . gradle ' ) <nl> + tasks = [ ' artifactoryPublish ' ] <nl> } <nl> <nl> - artifactory { <nl> - contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> - publish { <nl> - repository { <nl> - repoKey = ' oss - snapshot - local ' <nl> - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - defaults { <nl> - publications ( ' jarLibrary ' , ' aarLibrary ' , ' annotations ' , ' annotationsProcessor ' , ' gradlePlugin ' , ' transformer ' ) <nl> - } <nl> - } <nl> + task ojoUpload { <nl> + description = ' Publish all the Realm SNAPSHOT artifacts to OJO ' <nl> + group = ' Publishing ' <nl> + dependsOn ojoRealm <nl> + dependsOn ojoAnnotations <nl> + dependsOn ojoGradlePlugin <nl> + dependsOn ojoTransformer <nl> } <nl> <nl> + / / This is just a placeholder for the release plugin <nl> + task build { } <nl> + <nl> release { <nl> push = false <nl> versionSuffix = ' - SNAPSHOT ' <nl> diff - - git a / gradle - plugin / build . gradle b / gradle - plugin / build . gradle <nl> index 82990b8 . . 15f1acd 100644 <nl> - - - a / gradle - plugin / build . gradle <nl> + + + b / gradle - plugin / build . gradle <nl> @ @ - 1 , 5 + 1 , 18 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> apply plugin : ' groovy ' <nl> apply plugin : ' maven ' <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> <nl> def props = new Properties ( ) <nl> props . load ( new FileInputStream ( " $ { rootDir } / . . / realm . properties " ) ) <nl> @ @ - 53 , 3 + 66 , 74 @ @ compileJava . dependsOn generateVersionClass <nl> task wrapper ( type : Wrapper ) { <nl> gradleVersion = project . gradleVersion <nl> } <nl> + <nl> + def commonPom = { <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + realmPubblication ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - gradle - plugin ' <nl> + from components . java <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - gradle - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' realmPubblication ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - gradle - plugin ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> + <nl> + artifactory { <nl> + contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> + publish { <nl> + repository { <nl> + repoKey = ' oss - snapshot - local ' <nl> + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + } <nl> + defaults { <nl> + publications ( ' realmPubblication ' ) <nl> + } <nl> + } <nl> + } <nl> diff - - git a / realm - annotations / build . gradle b / realm - annotations / build . gradle <nl> index e62f71b . . a9e220c 100644 <nl> - - - a / realm - annotations / build . gradle <nl> + + + b / realm - annotations / build . gradle <nl> @ @ - 1 , 9 + 1 , 92 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> <nl> sourceCompatibility = ' 1 . 6 ' <nl> targetCompatibility = ' 1 . 6 ' <nl> <nl> group = ' io . realm ' <nl> version = file ( " $ { projectDir } / . . / version . txt " ) . text . trim ( ) ; <nl> + <nl> + def commonPom = { <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + realmPubblication ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations ' <nl> + from components . java <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' realmPubblication ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - annotations ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> + <nl> + artifactory { <nl> + contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> + publish { <nl> + repository { <nl> + repoKey = ' oss - snapshot - local ' <nl> + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + } <nl> + defaults { <nl> + publications ( ' realmPubblication ' ) <nl> + } <nl> + } <nl> + } <nl> diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle <nl> index 3df34f8 . . 49df167 100644 <nl> - - - a / realm - transformer / build . gradle <nl> + + + b / realm - transformer / build . gradle <nl> @ @ - 1 , 6 + 1 , 18 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> apply plugin : ' groovy ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> <nl> group = ' io . realm ' <nl> version = file ( " $ { projectDir } / . . / version . txt " ) . text . trim ( ) ; <nl> @ @ - 25 , 3 + 37 , 74 @ @ dependencies { <nl> exclude module : ' groovy - all ' <nl> } <nl> } <nl> + <nl> + def commonPom = { <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + realmPubblication ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - transformer ' <nl> + from components . java <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - transformer ' ) <nl> + root . appendNode ( ' description ' , ' Android Gradle Transformer for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' realmPubblication ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - transformer ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> + <nl> + artifactory { <nl> + contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> + publish { <nl> + repository { <nl> + repoKey = ' oss - snapshot - local ' <nl> + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + } <nl> + defaults { <nl> + publications ( ' realmPubblication ' ) <nl> + } <nl> + } <nl> + } <nl> diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index 7438e64 . . bf77e6c 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 12 , 9 + 12 , 8 @ @ buildscript { <nl> classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' <nl> classpath ' com . github . skhatri : gradle - s3 - plugin : 1 . 0 . 2 ' <nl> - classpath ' com . github . rholder : gradle - one - jar : 1 . 0 . 4 ' <nl> - classpath ' com . github . jengelman . gradle . plugins : shadow : 1 . 2 . 2 ' <nl> - classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 3 . 0 . 3 ' <nl> + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 4 . 0 . 1 ' <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " <nl> } <nl> } <nl> diff - - git a / realm / realm - annotations - processor / build . gradle b / realm / realm - annotations - processor / build . gradle <nl> index ccc4adc . . 577dfba 100644 <nl> - - - a / realm / realm - annotations - processor / build . gradle <nl> + + + b / realm / realm - annotations - processor / build . gradle <nl> @ @ - 1 , 5 + 1 , 8 @ @ <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> <nl> sourceCompatibility = ' 1 . 6 ' <nl> targetCompatibility = ' 1 . 6 ' <nl> @ @ - 7 , 6 + 10 , 7 @ @ targetCompatibility = ' 1 . 6 ' <nl> dependencies { <nl> compile group : ' com . squareup ' , name : ' javawriter ' , version : ' 2 . 5 . 0 ' <nl> compile " io . realm : realm - annotations : $ { version } " <nl> + <nl> testCompile files ( ' . . / realm - library / build / intermediates / bundles / release / classes . jar ' ) / / Java projects cannot depend on AAR files <nl> testCompile files ( " $ { System . properties [ ' java . home ' ] } / . . / lib / tools . jar " ) / / This is needed otherwise compile - testing won ' t be able to find it <nl> testCompile group : ' junit ' , name : ' junit ' , version : ' 4 . 11 ' <nl> @ @ - 35 , 3 + 39 , 74 @ @ sourceSets { <nl> <nl> compileJava . dependsOn generateVersionClass <nl> compileTestJava . dependsOn ' : realm - library : assemble ' <nl> + <nl> + def commonPom = { <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + <nl> + publishing { <nl> + publications { <nl> + realmPubblication ( MavenPublication ) { <nl> + groupId ' io . realm ' <nl> + artifactId = ' realm - annotations - processor ' <nl> + from components . java <nl> + pom . withXml { <nl> + Node root = asNode ( ) <nl> + root . appendNode ( ' name ' , ' realm - gradle - plugin ' ) <nl> + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) <nl> + root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> + root . children ( ) . last ( ) + commonPom <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + publications = [ ' realmPubblication ' ] <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - annotations - processor ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> + <nl> + artifactory { <nl> + contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> + publish { <nl> + repository { <nl> + repoKey = ' oss - snapshot - local ' <nl> + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + } <nl> + defaults { <nl> + publications ( ' realmPubblication ' ) <nl> + } <nl> + } <nl> + } <nl> diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 57ae399 . . 6d5ac06 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 1 , 9 + 1 , 9 @ @ <nl> apply plugin : ' android - sdk - manager ' <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . neenbedankt . android - apt ' <nl> - apply plugin : ' maven - publish ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> - apply plugin : ' maven ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' pmd ' <nl> apply plugin : ' checkstyle ' <nl> @ @ - 136 , 3 + 136 , 80 @ @ task checkstyle ( type : Checkstyle ) { <nl> / / empty classpath <nl> classpath = files ( ) <nl> } <nl> + <nl> + install { <nl> + repositories . mavenInstaller { <nl> + pom { <nl> + project { <nl> + packaging ' aar ' <nl> + <nl> + / / Add your description here <nl> + name ' realm - library ' <nl> + description ' Realm is a mobile database : a replacement for SQLite & ORMs . ' <nl> + url ' http : / / realm . io ' <nl> + <nl> + / / Set your license <nl> + licenses { <nl> + license { <nl> + name ' The Apache Software License , Version 2 . 0 ' <nl> + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / realm / realm - java / issues ' <nl> + } <nl> + scm { <nl> + url ' scm : https : / / github . com / realm / realm - java ' <nl> + connection ' scm : git @ github . com : realm / realm - java . git ' <nl> + developerConnection ' scm : git @ github . com : realm / realm - java . git ' <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + bintray { <nl> + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + <nl> + dryRun = false <nl> + publish = false <nl> + <nl> + configurations = [ ' archives ' ] <nl> + <nl> + pkg { <nl> + repo = ' maven ' <nl> + name = ' realm - annotations - processor ' <nl> + desc = ' Realm for Android ' <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> + licenses = [ ' Apache - 2 . 0 ' ] <nl> + labels = [ ' android ' , ' realm ' ] <nl> + publicDownloadNumbers = false <nl> + } <nl> + } <nl> + <nl> + artifactory { <nl> + contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> + publish { <nl> + repository { <nl> + repoKey = ' oss - snapshot - local ' <nl> + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> + maven = true <nl> + } <nl> + defaults { <nl> + publishConfigs ( ' archives ' ) <nl> + publishPom = true <nl> + publishIvy = false <nl> + } <nl> + } <nl> + } <nl> + <nl> + artifacts { <nl> + archives javadocJar <nl> + archives sourcesJar <nl> + }
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index b89649f . . 554f66a 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 1 , 3 + 1 , 17 @ @ <nl> + buildscript { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " <nl> + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> + } <nl> + } <nl> + <nl> + apply plugin : ' maven - publish ' <nl> + apply plugin : ' com . jfrog . artifactory ' <nl> + apply plugin : ' com . jfrog . bintray ' <nl> + <nl> def currentVersion = new File ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; <nl> <nl> task checkEnvironment ( group : ' check ' , description : ' Check the user provided gradle . properties ' ) < < { <nl> @ @ - 71 , 7 + 85 , 7 @ @ task eclipseJar ( type : GradleBuild ) { <nl> task distributionPackage ( type : Zip ) { <nl> dependsOn eclipseJar <nl> dependsOn assembleRealm <nl> - dependsOn javadocs <nl> + dependsOn javadoc <nl> <nl> group = ' Artifact ' <nl> archiveName = ' realm - android . zip ' <nl> @ @ - 204 , 9 + 218 , 9 @ @ bintray { <nl> repo = ' maven ' <nl> name = ' realm - android ' <nl> desc = ' Realm for Android ' <nl> - websiteUrl = siteUrl <nl> - issueTrackerUrl = " $ { siteUrl } / issues " <nl> - vcsUrl = gitUrl <nl> + websiteUrl = ' http : / / realm . io ' <nl> + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> + vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> licenses = [ ' Apache - 2 . 0 ' ] <nl> labels = [ ' aar ' , ' android ' , ' realm ' ] <nl> publicDownloadNumbers = false <nl> diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index 0e24517 . . 8066ee9 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 6 , 8 + 6 , 6 @ @ buildscript { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> classpath ' de . undercouch : gradle - download - task : 1 . 0 ' <nl> classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' <nl> - classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " <nl> - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' <nl> classpath ' com . github . dcendents : android - maven - gradle - plugin : 1 . 3 ' <nl> classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' <nl> diff - - git a / realm / realm - annotations / build . gradle b / realm / realm - annotations / build . gradle <nl> index 2149461 . . 0abca91 100644 <nl> - - - a / realm / realm - annotations / build . gradle <nl> + + + b / realm / realm - annotations / build . gradle <nl> @ @ - 1 , 8 + 1 , 6 @ @ <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' maven - publish ' <nl> - apply plugin : ' com . jfrog . artifactory ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> <nl> sourceCompatibility = ' 1 . 6 ' <nl> targetCompatibility = ' 1 . 6 ' <nl> @ @ - 14 , 72 + 12 , 3 @ @ uploadArchives { <nl> } <nl> } <nl> } <nl> - <nl> - def siteUrl = ' https : / / github . com / realm / realm - java ' <nl> - def gitUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - <nl> - publishing { <nl> - publications { <nl> - realmAnnotations ( MavenPublication ) { <nl> - artifactId = ' realm - annotations ' <nl> - <nl> - from components . java <nl> - <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - annotations ' ) <nl> - root . appendNode ( ' description ' , ' Annotations for Realm : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - <nl> - def issues = root . appendNode ( ' issueManagement ' ) <nl> - issues . appendNode ( ' system ' , ' github ' ) <nl> - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) <nl> - <nl> - def scm = root . appendNode ( ' scm ' ) <nl> - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) <nl> - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - <nl> - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) <nl> - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) <nl> - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) <nl> - license . appendNode ( ' distribution ' , ' repo ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - artifactory { <nl> - contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> - publish { <nl> - repository { <nl> - repoKey = ' oss - snapshot - local ' <nl> - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - defaults { <nl> - publications ' realmAnnotations ' <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = true <nl> - publish = false <nl> - <nl> - publications = [ ' realmAnnotations ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - annotations ' <nl> - desc = ' Annotations for Realm ' <nl> - websiteUrl = siteUrl <nl> - issueTrackerUrl = " $ { siteUrl } / issues " <nl> - vcsUrl = gitUrl <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' jar ' , ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 5883a14 . . 99975b1 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 3 , 8 + 3 , 6 @ @ apply plugin : ' com . android . library ' <nl> apply plugin : ' com . neenbedankt . android - apt ' <nl> apply plugin : ' maven - publish ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> - apply plugin : ' com . jfrog . artifactory ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' checkstyle ' <nl> @ @ - 58 , 170 + 56 , 6 @ @ uploadArchives { <nl> } <nl> } <nl> <nl> - def siteUrl = ' https : / / github . com / realm / realm - java ' <nl> - def gitUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - <nl> - publishing { <nl> - publications { <nl> - realmLibrary ( MavenPublication ) { <nl> - artifactId = ' realm - android ' <nl> - <nl> - artifact file ( " $ { project . buildDir } / outputs / aar / realm - library - release . aar " ) <nl> - artifact sourcesJar <nl> - artifact javadocJar <nl> - <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - <nl> - def issues = root . appendNode ( ' issueManagement ' ) <nl> - issues . appendNode ( ' system ' , ' github ' ) <nl> - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) <nl> - <nl> - def scm = root . appendNode ( ' scm ' ) <nl> - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) <nl> - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - <nl> - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) <nl> - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) <nl> - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) <nl> - license . appendNode ( ' distribution ' , ' repo ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - artifactory { <nl> - contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> - publish { <nl> - repository { <nl> - repoKey = ' oss - snapshot - local ' <nl> - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - defaults { <nl> - publications ' realmLibrary ' <nl> - } <nl> - } <nl> - } <nl> - <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = true <nl> - publish = false <nl> - <nl> - publications = [ ' realmLibrary ' ] <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = siteUrl <nl> - issueTrackerUrl = " $ { siteUrl } / issues " <nl> - vcsUrl = gitUrl <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' aar ' , ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> - <nl> - install { <nl> - repositories . mavenInstaller { <nl> - pom { <nl> - project { <nl> - packaging ' aar ' <nl> - name ' Realm for Android ' <nl> - url siteUrl <nl> - licenses { <nl> - license { <nl> - name ' The Apache Software License , Version 2 . 0 ' <nl> - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' <nl> - } <nl> - } <nl> - scm { <nl> - connection gitUrl <nl> - developerConnection gitUrl <nl> - url siteUrl <nl> - <nl> - } <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * <nl> - artifacts { <nl> - archives file ( " build / libs / realm - $ { version } . jar " ) <nl> - archives androidSourcesJar <nl> - } <nl> - <nl> - publishing { <nl> - publications { <nl> - mavenAndroid ( MavenPublication ) { <nl> - groupId ' io . realm ' <nl> - artifactId ' realm - android ' <nl> - version version <nl> - artifact assemble <nl> - artifact androidSourcesJar { <nl> - classifier " sources " <nl> - } <nl> - pom . withXml { <nl> - Node root = asNode ( ) <nl> - root . appendNode ( ' name ' , ' realm - android ' ) <nl> - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) <nl> - root . appendNode ( ' url ' , ' http : / / realm . io ' ) <nl> - <nl> - def issues = root . appendNode ( ' issueManagement ' ) <nl> - issues . appendNode ( ' system ' , ' github ' ) <nl> - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) <nl> - <nl> - def scm = root . appendNode ( ' scm ' ) <nl> - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) <nl> - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) <nl> - <nl> - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) <nl> - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) <nl> - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) <nl> - license . appendNode ( ' distribution ' , ' repo ' ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - if ( version . endsWith ( ' - SNAPSHOT ' ) ) { / / Only publish if it ' s a snapshot version <nl> - publishing { <nl> - repositories { <nl> - maven { <nl> - url ' http : / / oss . jfrog . org / artifactory / oss - snapshot - local ' <nl> - credentials { <nl> - / / user and password come from the gradle . properties file in ~ / . gradle <nl> - username project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - password project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - } <nl> - } <nl> - } <nl> - } <nl> - } else { <nl> - bintray { <nl> - / / user and key come from the gradle . properties file in ~ / . gradle <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - publications = [ ' mavenAndroid ' ] <nl> - publish = true <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - } <nl> - } <nl> - } <nl> - * / <nl> - <nl> task findbugs ( type : FindBugs ) { <nl> dependsOn assemble <nl> group = ' Test '

TEST DIFF:
diff - - git a / bintrayAar . gradle b / bintrayAar . gradle 
 deleted file mode 100644 
 index 7ea7fe0 . . 0000000 
 - - - a / bintrayAar . gradle 
 + + + / dev / null 
 @ @ - 1 , 90 + 0 , 0 @ @ 
 - buildscript { 
 - repositories { 
 - jcenter ( ) 
 - } 
 - dependencies { 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 - } 
 - } 
 - 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . bintray ' 
 - 
 - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 - 
 - version = currentVersion 
 - 
 - def commonPom = { 
 - version = currentVersion 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 - } 
 - 
 - publishing { 
 - publications { 
 - aarLibrary ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - android - library ' 
 - artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - android - library - release . aar " ) 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - sources . jar " ) ) { 
 - classifier = ' sources ' 
 - } 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - javadoc . jar " ) ) { 
 - classifier = ' javadoc ' 
 - } 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android - library ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - 
 - def repositoriesNode = root . appendNode ( ' repositories ' ) 
 - def repositoryNode = repositoriesNode . appendNode ( ' repository ' ) 
 - repositoryNode . appendNode ( ' id ' , ' jitpack . io ' ) 
 - repositoryNode . appendNode ( ' url ' , ' https : / / jitpack . io ' ) 
 - 
 - def dependenciesNode = root . appendNode ( ' dependencies ' ) 
 - def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) 
 - dependencyNode . appendNode ( ' groupId ' , ' com . github . KeepSafe ' ) 
 - dependencyNode . appendNode ( ' artifactId ' , ' ReLinker ' ) 
 - dependencyNode . appendNode ( ' version ' , ' 1 . 1 ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - publications = [ ' aarLibrary ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android - library ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 diff - - git a / bintrayAnnotations . gradle b / bintrayAnnotations . gradle 
 deleted file mode 100644 
 index 6362b65 . . 0000000 
 - - - a / bintrayAnnotations . gradle 
 + + + / dev / null 
 @ @ - 1 , 73 + 0 , 0 @ @ 
 - buildscript { 
 - repositories { 
 - jcenter ( ) 
 - } 
 - dependencies { 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 - } 
 - } 
 - 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . bintray ' 
 - 
 - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 - 
 - version = currentVersion 
 - 
 - def commonPom = { 
 - version = currentVersion 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 - } 
 - 
 - publishing { 
 - publications { 
 - annotations ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - annotations ' 
 - artifact file ( " $ { rootDir } / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - annotations ' ) 
 - root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - publications = [ ' annotations ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - annotations ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / bintrayAnnotationsProcessor . gradle b / bintrayAnnotationsProcessor . gradle 
 deleted file mode 100644 
 index 515ca66 . . 0000000 
 - - - a / bintrayAnnotationsProcessor . gradle 
 + + + / dev / null 
 @ @ - 1 , 78 + 0 , 0 @ @ 
 - buildscript { 
 - repositories { 
 - jcenter ( ) 
 - } 
 - dependencies { 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 - } 
 - } 
 - 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . bintray ' 
 - 
 - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 - 
 - version = currentVersion 
 - 
 - def commonPom = { 
 - version = currentVersion 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 - } 
 - 
 - publishing { 
 - publications { 
 - annotationsProcessor ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - annotations - processor ' 
 - artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 - root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - def dependenciesNode = root . appendNode ( ' dependencies ' ) 
 - def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) 
 - dependencyNode . appendNode ( ' groupId ' , ' com . squareup ' ) 
 - dependencyNode . appendNode ( ' artifactId ' , ' javawriter ' ) 
 - dependencyNode . appendNode ( ' version ' , ' 2 . 5 . 0 ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - publications = [ ' annotationsProcessor ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - annotations - processor ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / bintrayGradlePlugin . gradle b / bintrayGradlePlugin . gradle 
 deleted file mode 100644 
 index 786ab57 . . 0000000 
 - - - a / bintrayGradlePlugin . gradle 
 + + + / dev / null 
 @ @ - 1 , 78 + 0 , 0 @ @ 
 - buildscript { 
 - repositories { 
 - jcenter ( ) 
 - } 
 - dependencies { 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 - } 
 - } 
 - 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . bintray ' 
 - 
 - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 - 
 - version = currentVersion 
 - 
 - def commonPom = { 
 - version = currentVersion 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 - } 
 - 
 - publishing { 
 - publications { 
 - gradlePlugin ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - gradle - plugin ' 
 - artifact file ( " $ { rootDir } / gradle - plugin / build / libs / realm - gradle - plugin - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - gradle - plugin ' ) 
 - root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - def dependenciesNode = root . appendNode ( ' dependencies ' ) 
 - def dependencyNode = dependenciesNode . appendNode ( ' dependency ' ) 
 - dependencyNode . appendNode ( ' groupId ' , ' com . neenbedankt . gradle . plugins ' ) 
 - dependencyNode . appendNode ( ' artifactId ' , ' android - apt ' ) 
 - dependencyNode . appendNode ( ' version ' , ' 1 . 8 ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - publications = [ ' gradlePlugin ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - gradle - plugin ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / bintrayJar . gradle b / bintrayJar . gradle 
 deleted file mode 100644 
 index c01d6f4 . . 0000000 
 - - - a / bintrayJar . gradle 
 + + + / dev / null 
 @ @ - 1 , 79 + 0 , 0 @ @ 
 - buildscript { 
 - repositories { 
 - jcenter ( ) 
 - } 
 - dependencies { 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 - } 
 - } 
 - 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . bintray ' 
 - 
 - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 - 
 - version = currentVersion 
 - 
 - def commonPom = { 
 - version = currentVersion 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 - } 
 - 
 - publishing { 
 - publications { 
 - jarLibrary ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - android ' 
 - artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - sources . jar " ) ) { 
 - classifier = ' sources ' 
 - } 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - javadoc . jar " ) ) { 
 - classifier = ' javadoc ' 
 - } 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - publications = [ ' jarLibrary ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / bintrayTransformer . gradle b / bintrayTransformer . gradle 
 deleted file mode 100644 
 index 0ae1bbd . . 0000000 
 - - - a / bintrayTransformer . gradle 
 + + + / dev / null 
 @ @ - 1 , 73 + 0 , 0 @ @ 
 - buildscript { 
 - repositories { 
 - jcenter ( ) 
 - } 
 - dependencies { 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 - } 
 - } 
 - 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . bintray ' 
 - 
 - def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 - 
 - version = currentVersion 
 - 
 - def commonPom = { 
 - version = currentVersion 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 - } 
 - 
 - publishing { 
 - publications { 
 - annotations ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - transformer ' 
 - artifact file ( " $ { rootDir } / realm - transformer / build / libs / realm - transformer - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - transformer ' ) 
 - root . appendNode ( ' description ' , ' Gradle Android transformer for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - publications = [ ' annotations ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - annotations ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 diff - - git a / build . gradle b / build . gradle 
 index a069355 . . 654c317 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 3 , 13 + 3 , 10 @ @ buildscript { 
 jcenter ( ) 
 } 
 dependencies { 
 - classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 classpath ' ch . netzwerg : gradle - release - plugin : 1 . 2 . 0 ' 
 } 
 } 
 
 - apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . artifactory ' 
 apply plugin : ' ch . netzwerg . release ' 
 
 def currentVersion = file ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 @ @ - 254 , 199 + 251 , 83 @ @ task distribute { 
 dependsOn uploadUpdateVersion 
 } 
 
 - / / This is a work - around for a bug in the publish plugin that prevents publishing the same artifact twice in two 
 - / / different publications 
 - task duplicateSourcesAndJavadoc ( type : Copy ) { 
 - description = ' Prepare source and javadoc jars for publishing . ' 
 + task bintrayRealm ( type : GradleBuild ) { 
 + description = ' Publish the Realm AAR and AP to Bintray ' 
 group = ' Publishing ' 
 - dependsOn sourcesJar 
 - dependsOn javadoc 
 - from ( " $ { rootDir } / realm / realm - library / build / libs / " ) { 
 - include ' * . jar ' 
 - rename ' realm - android - library - ( . * ? ) ' , ' realm - android - $ 1 ' 
 - } 
 - into " $ { rootDir } / realm / realm - library / build / libs / " 
 - } 
 - 
 - task bintrayAar ( type : GradleBuild ) { 
 - description = ' Publish the Realm AAR to Bintray ' 
 - group = ' Distribute ' 
 - dependsOn duplicateSourcesAndJavadoc 
 - buildFile = file ( ' bintrayAar . gradle ' ) 
 + buildFile = file ( ' realm / build . gradle ' ) 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 task bintrayAnnotations ( type : GradleBuild ) { 
 description = ' Publish the Realm Annotations to Bintray ' 
 - group = ' Distribute ' 
 - buildFile = file ( ' bintrayAnnotations . gradle ' ) 
 - tasks = [ ' bintrayUpload ' ] 
 - } 
 - 
 - task bintrayAnnotationsProcessor ( type : GradleBuild ) { 
 - description = ' Publish the Realm AP to Bintray ' 
 - group = ' Distribute ' 
 - buildFile = file ( ' bintrayAnnotationsProcessor . gradle ' ) 
 + group = ' Publishing ' 
 + buildFile = file ( ' realm - annotations / build . gradle ' ) 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 task bintrayGradlePlugin ( type : GradleBuild ) { 
 description = ' Publish the Realm Gradle Plugin to Bintray ' 
 - group = ' Distribute ' 
 - buildFile = file ( ' bintrayGradlePlugin . gradle ' ) 
 + group = ' Publishing ' 
 + buildFile = file ( ' gradle - plugin / build . gradle ' ) 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 task bintrayTransformer ( type : GradleBuild ) { 
 description = ' Publish the Realm Transformer to Bintray ' 
 - group = ' Distribute ' 
 - buildFile = file ( ' bintrayTransformer . gradle ' ) 
 + group = ' Publishing ' 
 + buildFile = file ( ' realm - transformer / build . gradle ' ) 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 task bintrayUpload { 
 description = ' Publish all the Realm artifacts to Bintray ' 
 - group = ' Distribute ' 
 - dependsOn bintrayAar 
 + group = ' Publishing ' 
 + dependsOn bintrayRealm 
 dependsOn bintrayAnnotations 
 - dependsOn bintrayAnnotationsProcessor 
 dependsOn bintrayGradlePlugin 
 dependsOn bintrayTransformer 
 } 
 
 - task ojoUpload { 
 - description = ' Publish all the Realm SNAPSHOT artifacts to OJO ' 
 + task ojoRealm ( type : GradleBuild ) { 
 + description = ' Publish the Realm AAR and AP SNAPSHOT to Bintray ' 
 group = ' Publishing ' 
 - dependsOn duplicateSourcesAndJavadoc 
 - dependsOn artifactoryPublish 
 - artifactoryPublish . dependsOn duplicateSourcesAndJavadoc 
 + buildFile = file ( ' realm / build . gradle ' ) 
 + tasks = [ ' artifactoryPublish ' ] 
 } 
 
 - / / This is just a placeholder for the release plugin 
 - task build { } 
 + task ojoAnnotations ( type : GradleBuild ) { 
 + description = ' Publish the Realm Annotations SNAPSHOT to Bintray ' 
 + group = ' Publishing ' 
 + buildFile = file ( ' realm - annotations / build . gradle ' ) 
 + tasks = [ ' artifactoryPublish ' ] 
 + } 
 
 - def commonPom = { 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - distribution ' repo ' 
 - } 
 - } 
 - issueManagement { 
 - system ' github ' 
 - url ' https : / / github . com / realm / realm - java / issues ' 
 - } 
 - scm { 
 - url ' scm : https : / / github . com / realm / realm - java ' 
 - connection ' scm : git @ github . com : realm / realm - java . git ' 
 - developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 - } 
 + task ojoGradlePlugin ( type : GradleBuild ) { 
 + description = ' Publish the Realm Gradle Plugin SNAPSHOT to Bintray ' 
 + group = ' Publishing ' 
 + buildFile = file ( ' gradle - plugin / build . gradle ' ) 
 + tasks = [ ' artifactoryPublish ' ] 
 } 
 
 - publishing { 
 - publications { 
 - jarLibrary ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - android ' 
 - artifact file ( " $ { buildDir } / outputs / gradle / realm - android - $ { currentVersion } . jar " ) 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - sources . jar " ) ) { 
 - classifier = ' sources ' 
 - } 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - $ { currentVersion } - javadoc . jar " ) ) { 
 - classifier = ' javadoc ' 
 - } 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - aarLibrary ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - android - library ' 
 - artifact file ( " $ { rootDir } / realm / realm - library / build / outputs / aar / realm - android - library - release . aar " ) 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - sources . jar " ) ) { 
 - classifier = ' sources ' 
 - } 
 - artifact ( file ( " $ { rootDir } / realm / realm - library / build / libs / realm - android - library - $ { currentVersion } - javadoc . jar " ) ) { 
 - classifier = ' javadoc ' 
 - } 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android - library ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - annotations ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - annotations ' 
 - artifact file ( " $ { rootDir } / realm - annotations / build / libs / realm - annotations - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - annotations ' ) 
 - root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - annotationsProcessor ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - annotations - processor ' 
 - artifact file ( " $ { rootDir } / realm / realm - annotations - processor / build / libs / realm - annotations - processor - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - annotations - processor ' ) 
 - root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - gradlePlugin ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - gradle - plugin ' 
 - artifact file ( " $ { rootDir } / gradle - plugin / build / libs / realm - gradle - plugin - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - realm - plugin ' ) 
 - root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - transformer ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId = ' realm - transformer ' 
 - artifact file ( " $ { rootDir } / realm - transformer / build / libs / realm - transformer - $ { currentVersion } . jar " ) 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - transformer ' ) 
 - root . appendNode ( ' description ' , ' Gradle Android transformer for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - root . children ( ) . last ( ) + commonPom 
 - } 
 - } 
 - } 
 + task ojoTransformer ( type : GradleBuild ) { 
 + description = ' Publish the Realm Transformer SNAPSHOT to Bintray ' 
 + group = ' Publishing ' 
 + buildFile = file ( ' realm - transformer / build . gradle ' ) 
 + tasks = [ ' artifactoryPublish ' ] 
 } 
 
 - artifactory { 
 - contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 - publish { 
 - repository { 
 - repoKey = ' oss - snapshot - local ' 
 - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - defaults { 
 - publications ( ' jarLibrary ' , ' aarLibrary ' , ' annotations ' , ' annotationsProcessor ' , ' gradlePlugin ' , ' transformer ' ) 
 - } 
 - } 
 + task ojoUpload { 
 + description = ' Publish all the Realm SNAPSHOT artifacts to OJO ' 
 + group = ' Publishing ' 
 + dependsOn ojoRealm 
 + dependsOn ojoAnnotations 
 + dependsOn ojoGradlePlugin 
 + dependsOn ojoTransformer 
 } 
 
 + / / This is just a placeholder for the release plugin 
 + task build { } 
 + 
 release { 
 push = false 
 versionSuffix = ' - SNAPSHOT ' 
 diff - - git a / gradle - plugin / build . gradle b / gradle - plugin / build . gradle 
 index 82990b8 . . 15f1acd 100644 
 - - - a / gradle - plugin / build . gradle 
 + + + b / gradle - plugin / build . gradle 
 @ @ - 1 , 5 + 1 , 18 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 apply plugin : ' groovy ' 
 apply plugin : ' maven ' 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 
 def props = new Properties ( ) 
 props . load ( new FileInputStream ( " $ { rootDir } / . . / realm . properties " ) ) 
 @ @ - 53 , 3 + 66 , 74 @ @ compileJava . dependsOn generateVersionClass 
 task wrapper ( type : Wrapper ) { 
 gradleVersion = project . gradleVersion 
 } 
 + 
 + def commonPom = { 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + realmPubblication ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - gradle - plugin ' 
 + from components . java 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - gradle - plugin ' ) 
 + root . appendNode ( ' description ' , ' Gradle plugin for Realm . Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' realmPubblication ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - gradle - plugin ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 + 
 + artifactory { 
 + contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 + publish { 
 + repository { 
 + repoKey = ' oss - snapshot - local ' 
 + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + } 
 + defaults { 
 + publications ( ' realmPubblication ' ) 
 + } 
 + } 
 + } 
 diff - - git a / realm - annotations / build . gradle b / realm - annotations / build . gradle 
 index e62f71b . . a9e220c 100644 
 - - - a / realm - annotations / build . gradle 
 + + + b / realm - annotations / build . gradle 
 @ @ - 1 , 9 + 1 , 92 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 apply plugin : ' java ' 
 apply plugin : ' maven ' 
 apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 
 sourceCompatibility = ' 1 . 6 ' 
 targetCompatibility = ' 1 . 6 ' 
 
 group = ' io . realm ' 
 version = file ( " $ { projectDir } / . . / version . txt " ) . text . trim ( ) ; 
 + 
 + def commonPom = { 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + realmPubblication ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations ' 
 + from components . java 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - annotations ' ) 
 + root . appendNode ( ' description ' , ' Annotations for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' realmPubblication ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - annotations ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 + 
 + artifactory { 
 + contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 + publish { 
 + repository { 
 + repoKey = ' oss - snapshot - local ' 
 + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + } 
 + defaults { 
 + publications ( ' realmPubblication ' ) 
 + } 
 + } 
 + } 
 diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle 
 index 3df34f8 . . 49df167 100644 
 - - - a / realm - transformer / build . gradle 
 + + + b / realm - transformer / build . gradle 
 @ @ - 1 , 6 + 1 , 18 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 apply plugin : ' groovy ' 
 apply plugin : ' maven ' 
 apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 
 group = ' io . realm ' 
 version = file ( " $ { projectDir } / . . / version . txt " ) . text . trim ( ) ; 
 @ @ - 25 , 3 + 37 , 74 @ @ dependencies { 
 exclude module : ' groovy - all ' 
 } 
 } 
 + 
 + def commonPom = { 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + realmPubblication ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - transformer ' 
 + from components . java 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - transformer ' ) 
 + root . appendNode ( ' description ' , ' Android Gradle Transformer for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' realmPubblication ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - transformer ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 + 
 + artifactory { 
 + contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 + publish { 
 + repository { 
 + repoKey = ' oss - snapshot - local ' 
 + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + } 
 + defaults { 
 + publications ( ' realmPubblication ' ) 
 + } 
 + } 
 + } 
 diff - - git a / realm / build . gradle b / realm / build . gradle 
 index 7438e64 . . bf77e6c 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 12 , 9 + 12 , 8 @ @ buildscript { 
 classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' 
 classpath ' com . github . skhatri : gradle - s3 - plugin : 1 . 0 . 2 ' 
 - classpath ' com . github . rholder : gradle - one - jar : 1 . 0 . 4 ' 
 - classpath ' com . github . jengelman . gradle . plugins : shadow : 1 . 2 . 2 ' 
 - classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 3 . 0 . 3 ' 
 + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 4 . 0 . 1 ' 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " 
 } 
 } 
 diff - - git a / realm / realm - annotations - processor / build . gradle b / realm / realm - annotations - processor / build . gradle 
 index ccc4adc . . 577dfba 100644 
 - - - a / realm / realm - annotations - processor / build . gradle 
 + + + b / realm / realm - annotations - processor / build . gradle 
 @ @ - 1 , 5 + 1 , 8 @ @ 
 apply plugin : ' java ' 
 apply plugin : ' maven ' 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 
 sourceCompatibility = ' 1 . 6 ' 
 targetCompatibility = ' 1 . 6 ' 
 @ @ - 7 , 6 + 10 , 7 @ @ targetCompatibility = ' 1 . 6 ' 
 dependencies { 
 compile group : ' com . squareup ' , name : ' javawriter ' , version : ' 2 . 5 . 0 ' 
 compile " io . realm : realm - annotations : $ { version } " 
 + 
 testCompile files ( ' . . / realm - library / build / intermediates / bundles / release / classes . jar ' ) / / Java projects cannot depend on AAR files 
 testCompile files ( " $ { System . properties [ ' java . home ' ] } / . . / lib / tools . jar " ) / / This is needed otherwise compile - testing won ' t be able to find it 
 testCompile group : ' junit ' , name : ' junit ' , version : ' 4 . 11 ' 
 @ @ - 35 , 3 + 39 , 74 @ @ sourceSets { 
 
 compileJava . dependsOn generateVersionClass 
 compileTestJava . dependsOn ' : realm - library : assemble ' 
 + 
 + def commonPom = { 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + 
 + publishing { 
 + publications { 
 + realmPubblication ( MavenPublication ) { 
 + groupId ' io . realm ' 
 + artifactId = ' realm - annotations - processor ' 
 + from components . java 
 + pom . withXml { 
 + Node root = asNode ( ) 
 + root . appendNode ( ' name ' , ' realm - gradle - plugin ' ) 
 + root . appendNode ( ' description ' , ' Annotation Processor for Realm . Realm is a mobile database : a replacement for SQLite & ORMs ' ) 
 + root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 + root . children ( ) . last ( ) + commonPom 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + publications = [ ' realmPubblication ' ] 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - annotations - processor ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 + 
 + artifactory { 
 + contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 + publish { 
 + repository { 
 + repoKey = ' oss - snapshot - local ' 
 + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + } 
 + defaults { 
 + publications ( ' realmPubblication ' ) 
 + } 
 + } 
 + } 
 diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 57ae399 . . 6d5ac06 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 1 , 9 + 1 , 9 @ @ 
 apply plugin : ' android - sdk - manager ' 
 apply plugin : ' com . android . library ' 
 apply plugin : ' com . neenbedankt . android - apt ' 
 - apply plugin : ' maven - publish ' 
 apply plugin : ' com . github . dcendents . android - maven ' 
 - apply plugin : ' maven ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 apply plugin : ' findbugs ' 
 apply plugin : ' pmd ' 
 apply plugin : ' checkstyle ' 
 @ @ - 136 , 3 + 136 , 80 @ @ task checkstyle ( type : Checkstyle ) { 
 / / empty classpath 
 classpath = files ( ) 
 } 
 + 
 + install { 
 + repositories . mavenInstaller { 
 + pom { 
 + project { 
 + packaging ' aar ' 
 + 
 + / / Add your description here 
 + name ' realm - library ' 
 + description ' Realm is a mobile database : a replacement for SQLite & ORMs . ' 
 + url ' http : / / realm . io ' 
 + 
 + / / Set your license 
 + licenses { 
 + license { 
 + name ' The Apache Software License , Version 2 . 0 ' 
 + url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / realm / realm - java / issues ' 
 + } 
 + scm { 
 + url ' scm : https : / / github . com / realm / realm - java ' 
 + connection ' scm : git @ github . com : realm / realm - java . git ' 
 + developerConnection ' scm : git @ github . com : realm / realm - java . git ' 
 + } 
 + } 
 + } 
 + } 
 + } 
 + 
 + bintray { 
 + user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + 
 + dryRun = false 
 + publish = false 
 + 
 + configurations = [ ' archives ' ] 
 + 
 + pkg { 
 + repo = ' maven ' 
 + name = ' realm - annotations - processor ' 
 + desc = ' Realm for Android ' 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 + licenses = [ ' Apache - 2 . 0 ' ] 
 + labels = [ ' android ' , ' realm ' ] 
 + publicDownloadNumbers = false 
 + } 
 + } 
 + 
 + artifactory { 
 + contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 + publish { 
 + repository { 
 + repoKey = ' oss - snapshot - local ' 
 + username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 + password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 + maven = true 
 + } 
 + defaults { 
 + publishConfigs ( ' archives ' ) 
 + publishPom = true 
 + publishIvy = false 
 + } 
 + } 
 + } 
 + 
 + artifacts { 
 + archives javadocJar 
 + archives sourcesJar 
 + }

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index b89649f . . 554f66a 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 1 , 3 + 1 , 17 @ @ 
 + buildscript { 
 + repositories { 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " 
 + classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 + } 
 + } 
 + 
 + apply plugin : ' maven - publish ' 
 + apply plugin : ' com . jfrog . artifactory ' 
 + apply plugin : ' com . jfrog . bintray ' 
 + 
 def currentVersion = new File ( " $ { projectDir } / version . txt " ) . text . trim ( ) ; 
 
 task checkEnvironment ( group : ' check ' , description : ' Check the user provided gradle . properties ' ) < < { 
 @ @ - 71 , 7 + 85 , 7 @ @ task eclipseJar ( type : GradleBuild ) { 
 task distributionPackage ( type : Zip ) { 
 dependsOn eclipseJar 
 dependsOn assembleRealm 
 - dependsOn javadocs 
 + dependsOn javadoc 
 
 group = ' Artifact ' 
 archiveName = ' realm - android . zip ' 
 @ @ - 204 , 9 + 218 , 9 @ @ bintray { 
 repo = ' maven ' 
 name = ' realm - android ' 
 desc = ' Realm for Android ' 
 - websiteUrl = siteUrl 
 - issueTrackerUrl = " $ { siteUrl } / issues " 
 - vcsUrl = gitUrl 
 + websiteUrl = ' http : / / realm . io ' 
 + issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 + vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 licenses = [ ' Apache - 2 . 0 ' ] 
 labels = [ ' aar ' , ' android ' , ' realm ' ] 
 publicDownloadNumbers = false 
 diff - - git a / realm / build . gradle b / realm / build . gradle 
 index 0e24517 . . 8066ee9 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 6 , 8 + 6 , 6 @ @ buildscript { 
 classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' 
 classpath ' de . undercouch : gradle - download - task : 1 . 0 ' 
 classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' 
 - classpath " org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 " 
 - classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 2 ' 
 classpath ' com . github . dcendents : android - maven - gradle - plugin : 1 . 3 ' 
 classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' 
 diff - - git a / realm / realm - annotations / build . gradle b / realm / realm - annotations / build . gradle 
 index 2149461 . . 0abca91 100644 
 - - - a / realm / realm - annotations / build . gradle 
 + + + b / realm / realm - annotations / build . gradle 
 @ @ - 1 , 8 + 1 , 6 @ @ 
 apply plugin : ' java ' 
 apply plugin : ' maven ' 
 apply plugin : ' maven - publish ' 
 - apply plugin : ' com . jfrog . artifactory ' 
 - apply plugin : ' com . jfrog . bintray ' 
 
 sourceCompatibility = ' 1 . 6 ' 
 targetCompatibility = ' 1 . 6 ' 
 @ @ - 14 , 72 + 12 , 3 @ @ uploadArchives { 
 } 
 } 
 } 
 - 
 - def siteUrl = ' https : / / github . com / realm / realm - java ' 
 - def gitUrl = ' https : / / github . com / realm / realm - java . git ' 
 - 
 - publishing { 
 - publications { 
 - realmAnnotations ( MavenPublication ) { 
 - artifactId = ' realm - annotations ' 
 - 
 - from components . java 
 - 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - annotations ' ) 
 - root . appendNode ( ' description ' , ' Annotations for Realm : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - 
 - def issues = root . appendNode ( ' issueManagement ' ) 
 - issues . appendNode ( ' system ' , ' github ' ) 
 - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) 
 - 
 - def scm = root . appendNode ( ' scm ' ) 
 - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) 
 - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - 
 - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) 
 - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) 
 - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) 
 - license . appendNode ( ' distribution ' , ' repo ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - artifactory { 
 - contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 - publish { 
 - repository { 
 - repoKey = ' oss - snapshot - local ' 
 - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - defaults { 
 - publications ' realmAnnotations ' 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = true 
 - publish = false 
 - 
 - publications = [ ' realmAnnotations ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - annotations ' 
 - desc = ' Annotations for Realm ' 
 - websiteUrl = siteUrl 
 - issueTrackerUrl = " $ { siteUrl } / issues " 
 - vcsUrl = gitUrl 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' jar ' , ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 5883a14 . . 99975b1 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 3 , 8 + 3 , 6 @ @ apply plugin : ' com . android . library ' 
 apply plugin : ' com . neenbedankt . android - apt ' 
 apply plugin : ' maven - publish ' 
 apply plugin : ' com . github . dcendents . android - maven ' 
 - apply plugin : ' com . jfrog . artifactory ' 
 - apply plugin : ' com . jfrog . bintray ' 
 apply plugin : ' maven ' 
 apply plugin : ' findbugs ' 
 apply plugin : ' checkstyle ' 
 @ @ - 58 , 170 + 56 , 6 @ @ uploadArchives { 
 } 
 } 
 
 - def siteUrl = ' https : / / github . com / realm / realm - java ' 
 - def gitUrl = ' https : / / github . com / realm / realm - java . git ' 
 - 
 - publishing { 
 - publications { 
 - realmLibrary ( MavenPublication ) { 
 - artifactId = ' realm - android ' 
 - 
 - artifact file ( " $ { project . buildDir } / outputs / aar / realm - library - release . aar " ) 
 - artifact sourcesJar 
 - artifact javadocJar 
 - 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - 
 - def issues = root . appendNode ( ' issueManagement ' ) 
 - issues . appendNode ( ' system ' , ' github ' ) 
 - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) 
 - 
 - def scm = root . appendNode ( ' scm ' ) 
 - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) 
 - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - 
 - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) 
 - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) 
 - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) 
 - license . appendNode ( ' distribution ' , ' repo ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - artifactory { 
 - contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 - publish { 
 - repository { 
 - repoKey = ' oss - snapshot - local ' 
 - username = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - defaults { 
 - publications ' realmLibrary ' 
 - } 
 - } 
 - } 
 - 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = true 
 - publish = false 
 - 
 - publications = [ ' realmLibrary ' ] 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = siteUrl 
 - issueTrackerUrl = " $ { siteUrl } / issues " 
 - vcsUrl = gitUrl 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' aar ' , ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 - 
 - install { 
 - repositories . mavenInstaller { 
 - pom { 
 - project { 
 - packaging ' aar ' 
 - name ' Realm for Android ' 
 - url siteUrl 
 - licenses { 
 - license { 
 - name ' The Apache Software License , Version 2 . 0 ' 
 - url ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' 
 - } 
 - } 
 - scm { 
 - connection gitUrl 
 - developerConnection gitUrl 
 - url siteUrl 
 - 
 - } 
 - } 
 - } 
 - } 
 - } 
 - 
 - / * 
 - artifacts { 
 - archives file ( " build / libs / realm - $ { version } . jar " ) 
 - archives androidSourcesJar 
 - } 
 - 
 - publishing { 
 - publications { 
 - mavenAndroid ( MavenPublication ) { 
 - groupId ' io . realm ' 
 - artifactId ' realm - android ' 
 - version version 
 - artifact assemble 
 - artifact androidSourcesJar { 
 - classifier " sources " 
 - } 
 - pom . withXml { 
 - Node root = asNode ( ) 
 - root . appendNode ( ' name ' , ' realm - android ' ) 
 - root . appendNode ( ' description ' , ' Realm is a mobile database : a replacement for SQLite & ORMs . ' ) 
 - root . appendNode ( ' url ' , ' http : / / realm . io ' ) 
 - 
 - def issues = root . appendNode ( ' issueManagement ' ) 
 - issues . appendNode ( ' system ' , ' github ' ) 
 - issues . appendNode ( ' url ' , ' https : / / github . com / realm / realm - java / issues ' ) 
 - 
 - def scm = root . appendNode ( ' scm ' ) 
 - scm . appendNode ( ' url ' , ' scm : https : / / github . com / realm / realm - java ' ) 
 - scm . appendNode ( ' connection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - scm . appendNode ( ' developerConnection ' , ' scm : git @ github . com : realm / realm - java . git ' ) 
 - 
 - def license = root . appendNode ( ' licenses ' ) . appendNode ( ' license ' ) 
 - license . appendNode ( ' name ' , ' The Apache Software License , Version 2 . 0 ' ) 
 - license . appendNode ( ' url ' , ' http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt ' ) 
 - license . appendNode ( ' distribution ' , ' repo ' ) 
 - } 
 - } 
 - } 
 - } 
 - 
 - if ( version . endsWith ( ' - SNAPSHOT ' ) ) { / / Only publish if it ' s a snapshot version 
 - publishing { 
 - repositories { 
 - maven { 
 - url ' http : / / oss . jfrog . org / artifactory / oss - snapshot - local ' 
 - credentials { 
 - / / user and password come from the gradle . properties file in ~ / . gradle 
 - username project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - password project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - } 
 - } 
 - } 
 - } 
 - } else { 
 - bintray { 
 - / / user and key come from the gradle . properties file in ~ / . gradle 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - publications = [ ' mavenAndroid ' ] 
 - publish = true 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - } 
 - } 
 - } 
 - * / 
 - 
 task findbugs ( type : FindBugs ) { 
 dependsOn assemble 
 group = ' Test '
