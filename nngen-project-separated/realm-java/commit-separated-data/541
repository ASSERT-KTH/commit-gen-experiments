BLEU SCORE: 0.2259005009024612

TEST MSG: Minor grammar fixes
GENERATED MSG: Remove outdated example

TEST DIFF (one line): diff - - git a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java <nl> index ba58b50 . . faa6b1e 100644 <nl> - - - a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java <nl> + + + b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java <nl> @ @ - 144 , 7 + 144 , 7 @ @ public class IntroExampleActivity extends Activity { <nl> private String complexReadWrite ( ) { <nl> String status = " \ nPerforming complex Read / Write operation . . . " ; <nl> <nl> - / / Open the default realm . All threads must use it ' s own reference to the realm . <nl> + / / Open the default realm . All threads must use its own reference to the realm . <nl> / / Those can not be transferred across threads . <nl> Realm realm = Realm . getDefaultInstance ( ) ; <nl> <nl> diff - - git a / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt b / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt <nl> index 8b4112f . . d903e5a 100644 <nl> - - - a / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt <nl> + + + b / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt <nl> @ @ - 131 , 7 + 131 , 7 @ @ class KotlinExampleActivity : Activity ( ) { <nl> private fun complexReadWrite ( ) : String { <nl> var status = " \ nPerforming complex Read / Write operation . . . " <nl> <nl> - / / Open the default realm . All threads must use it ' s own reference to the realm . <nl> + / / Open the default realm . All threads must use its own reference to the realm . <nl> / / Those can not be transferred across threads . <nl> val realm = Realm . getDefaultInstance ( ) <nl> <nl> diff - - git a / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java b / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java <nl> index 15a7921 . . 6a5c279 100644 <nl> - - - a / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java <nl> + + + b / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java <nl> @ @ - 75 , 7 + 75 , 7 @ @ public class ThrottleSearchActivity extends Activity { <nl> @ Override <nl> public Boolean call ( RealmResults < Person > persons ) { <nl> / / Only continue once data is actually loaded <nl> - / / RealmObservables will emit the unloaded ( empty ) list as it ' s first item <nl> + / / RealmObservables will emit the unloaded ( empty ) list as its first item <nl> return persons . isLoaded ( ) ; <nl> } <nl> } ) <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> index 7d10954 . . e969452 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import io . realm . RealmFieldType ; <nl> * / <nl> public class CheckedRow extends UncheckedRow { <nl> <nl> - / / Used if created from other row . This keeps a strong reference to avoid GC ' ing the original object , and it ' s <nl> + / / Used if created from other row . This keeps a strong reference to avoid GC ' ing the original object , and its <nl> / / underlying native data . <nl> @ SuppressWarnings ( " unused " ) <nl> private UncheckedRow originalRow ; <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> index 44ba36f . . 8f221bf 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> @ @ - 32 , 7 + 32 , 7 @ @ import io . realm . internal . android . crypto . CipherClient ; <nl> / * * <nl> * Encrypt and decrypt the token ( { @ link SyncUser } ) using Android built in KeyStore capabilities . <nl> * According to the Android API this picks the right algorithm to perfom the operations . <nl> - * Prior to API 18 there were no AndroidKeyStore API , but the UNIX deamon existed to it ' s possible <nl> + * Prior to API 18 there were no AndroidKeyStore API , but the UNIX deamon existed so it ' s possible <nl> * with the help of this code : https : / / github . com / nelenkov / android - keystore . <nl> * <nl> * On API & gt ; = 18 , we generate an AES key to encrypt we then generate and uses the RSA key inside the KeyStore
NEAREST DIFF (one line): diff - - git a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java <nl> index e0531af . . 2326a93 100644 <nl> - - - a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java <nl> + + + b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java <nl> @ @ - 182 , 22 + 182 , 11 @ @ public class IntroExampleActivity extends Activity { <nl> dogName = pers . getDog ( ) . getName ( ) ; <nl> } <nl> status + = " \ n " + pers . getName ( ) + " : " + pers . getAge ( ) + " : " + dogName + " : " + pers . getCats ( ) . size ( ) ; <nl> - <nl> - / / The field tempReference is annotated with @ Ignore <nl> - / / Though we initially set its value to 42 , it has <nl> - / / not been saved as part of the Person RealmObject : <nl> - if ( BuildConfig . DEBUG & & pers . getTempReference ( ) ! = 0 ) { <nl> - throw new AssertionError ( ) ; <nl> - } <nl> } <nl> <nl> / / Sorting <nl> RealmResults < Person > sortedPersons = realm . allObjects ( Person . class ) ; <nl> sortedPersons . sort ( " age " , Sort . DESCENDING ) ; <nl> - if ( BuildConfig . DEBUG & & <nl> - ! realm . allObjects ( Person . class ) . last ( ) . getName ( ) . equals ( sortedPersons . first ( ) . getName ( ) ) ) { <nl> - throw new AssertionError ( ) ; <nl> - } <nl> status + = " \ nSorting " + sortedPersons . last ( ) . getName ( ) + " = = " <nl> + realm . allObjects ( Person . class ) . first ( ) . getName ( ) ; <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index bd3ec92 . . cdfea82 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 81 , 14 + 81 , 13 @ @ import rx . Observable ; <nl> * < pre > <nl> * public class RealmApplication extends Application { <nl> * <nl> - * private static RealmConfiguration defaultRealmConfig ; <nl> - * <nl> * \ @ Override <nl> * public void onCreate ( ) { <nl> * super . onCreate ( ) ; <nl> + * <nl> * / / The Realm file will be located in package ' s " files " directory . <nl> - * defaultRealmConfig = new RealmConfiguration . Builder ( this ) . build ( ) ; <nl> - * Realm . setDefaultConfiguration ( defaultRealmConfig ) ; <nl> + * RealmConfiguration realmConfig = new RealmConfiguration . Builder ( this ) . build ( ) ; <nl> + * Realm . setDefaultConfiguration ( realmConfig ) ; <nl> * } <nl> * } <nl> * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java b / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java <nl> index ba398c0 . . d1093d6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java <nl> @ @ - 39 , 14 + 39 , 6 @ @ public class RealmMigrationNeededException extends RuntimeException { <nl> * Returns the canonical path to the Realm file that needs to be migrated . <nl> * <nl> * This can be used for easy reference during a migration : <nl> - * FIXME : This example doesn ' t make too much sense anymore . <nl> - * < pre > <nl> - * try { <nl> - * Realm . getDefaultInstance ( ) ; <nl> - * } catch ( RealmMigrationNeededException e ) { <nl> - * Realm . migrateRealmAtPath ( e . getRealmPath ( ) , new CustomMigration ( ) ) ; <nl> - * } <nl> - * < / pre > <nl> * <nl> * @ return Canonical path to the Realm file . <nl> * @ see File # getCanonicalPath ( )

TEST DIFF:
diff - - git a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java 
 index ba58b50 . . faa6b1e 100644 
 - - - a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java 
 + + + b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java 
 @ @ - 144 , 7 + 144 , 7 @ @ public class IntroExampleActivity extends Activity { 
 private String complexReadWrite ( ) { 
 String status = " \ nPerforming complex Read / Write operation . . . " ; 
 
 - / / Open the default realm . All threads must use it ' s own reference to the realm . 
 + / / Open the default realm . All threads must use its own reference to the realm . 
 / / Those can not be transferred across threads . 
 Realm realm = Realm . getDefaultInstance ( ) ; 
 
 diff - - git a / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt b / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt 
 index 8b4112f . . d903e5a 100644 
 - - - a / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt 
 + + + b / examples / kotlinExample / src / main / kotlin / io / realm / examples / kotlin / KotlinExampleActivity . kt 
 @ @ - 131 , 7 + 131 , 7 @ @ class KotlinExampleActivity : Activity ( ) { 
 private fun complexReadWrite ( ) : String { 
 var status = " \ nPerforming complex Read / Write operation . . . " 
 
 - / / Open the default realm . All threads must use it ' s own reference to the realm . 
 + / / Open the default realm . All threads must use its own reference to the realm . 
 / / Those can not be transferred across threads . 
 val realm = Realm . getDefaultInstance ( ) 
 
 diff - - git a / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java b / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java 
 index 15a7921 . . 6a5c279 100644 
 - - - a / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java 
 + + + b / examples / rxJavaExample / src / main / java / io / realm / examples / rxjava / throttle / ThrottleSearchActivity . java 
 @ @ - 75 , 7 + 75 , 7 @ @ public class ThrottleSearchActivity extends Activity { 
 @ Override 
 public Boolean call ( RealmResults < Person > persons ) { 
 / / Only continue once data is actually loaded 
 - / / RealmObservables will emit the unloaded ( empty ) list as it ' s first item 
 + / / RealmObservables will emit the unloaded ( empty ) list as its first item 
 return persons . isLoaded ( ) ; 
 } 
 } ) 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 index 7d10954 . . e969452 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import io . realm . RealmFieldType ; 
 * / 
 public class CheckedRow extends UncheckedRow { 
 
 - / / Used if created from other row . This keeps a strong reference to avoid GC ' ing the original object , and it ' s 
 + / / Used if created from other row . This keeps a strong reference to avoid GC ' ing the original object , and its 
 / / underlying native data . 
 @ SuppressWarnings ( " unused " ) 
 private UncheckedRow originalRow ; 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 index 44ba36f . . 8f221bf 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 @ @ - 32 , 7 + 32 , 7 @ @ import io . realm . internal . android . crypto . CipherClient ; 
 / * * 
 * Encrypt and decrypt the token ( { @ link SyncUser } ) using Android built in KeyStore capabilities . 
 * According to the Android API this picks the right algorithm to perfom the operations . 
 - * Prior to API 18 there were no AndroidKeyStore API , but the UNIX deamon existed to it ' s possible 
 + * Prior to API 18 there were no AndroidKeyStore API , but the UNIX deamon existed so it ' s possible 
 * with the help of this code : https : / / github . com / nelenkov / android - keystore . 
 * 
 * On API & gt ; = 18 , we generate an AES key to encrypt we then generate and uses the RSA key inside the KeyStore

NEAREST DIFF:
diff - - git a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java 
 index e0531af . . 2326a93 100644 
 - - - a / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java 
 + + + b / examples / introExample / src / main / java / io / realm / examples / intro / IntroExampleActivity . java 
 @ @ - 182 , 22 + 182 , 11 @ @ public class IntroExampleActivity extends Activity { 
 dogName = pers . getDog ( ) . getName ( ) ; 
 } 
 status + = " \ n " + pers . getName ( ) + " : " + pers . getAge ( ) + " : " + dogName + " : " + pers . getCats ( ) . size ( ) ; 
 - 
 - / / The field tempReference is annotated with @ Ignore 
 - / / Though we initially set its value to 42 , it has 
 - / / not been saved as part of the Person RealmObject : 
 - if ( BuildConfig . DEBUG & & pers . getTempReference ( ) ! = 0 ) { 
 - throw new AssertionError ( ) ; 
 - } 
 } 
 
 / / Sorting 
 RealmResults < Person > sortedPersons = realm . allObjects ( Person . class ) ; 
 sortedPersons . sort ( " age " , Sort . DESCENDING ) ; 
 - if ( BuildConfig . DEBUG & & 
 - ! realm . allObjects ( Person . class ) . last ( ) . getName ( ) . equals ( sortedPersons . first ( ) . getName ( ) ) ) { 
 - throw new AssertionError ( ) ; 
 - } 
 status + = " \ nSorting " + sortedPersons . last ( ) . getName ( ) + " = = " 
 + realm . allObjects ( Person . class ) . first ( ) . getName ( ) ; 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index bd3ec92 . . cdfea82 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 81 , 14 + 81 , 13 @ @ import rx . Observable ; 
 * < pre > 
 * public class RealmApplication extends Application { 
 * 
 - * private static RealmConfiguration defaultRealmConfig ; 
 - * 
 * \ @ Override 
 * public void onCreate ( ) { 
 * super . onCreate ( ) ; 
 + * 
 * / / The Realm file will be located in package ' s " files " directory . 
 - * defaultRealmConfig = new RealmConfiguration . Builder ( this ) . build ( ) ; 
 - * Realm . setDefaultConfiguration ( defaultRealmConfig ) ; 
 + * RealmConfiguration realmConfig = new RealmConfiguration . Builder ( this ) . build ( ) ; 
 + * Realm . setDefaultConfiguration ( realmConfig ) ; 
 * } 
 * } 
 * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java b / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java 
 index ba398c0 . . d1093d6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java 
 + + + b / realm / realm - library / src / main / java / io / realm / exceptions / RealmMigrationNeededException . java 
 @ @ - 39 , 14 + 39 , 6 @ @ public class RealmMigrationNeededException extends RuntimeException { 
 * Returns the canonical path to the Realm file that needs to be migrated . 
 * 
 * This can be used for easy reference during a migration : 
 - * FIXME : This example doesn ' t make too much sense anymore . 
 - * < pre > 
 - * try { 
 - * Realm . getDefaultInstance ( ) ; 
 - * } catch ( RealmMigrationNeededException e ) { 
 - * Realm . migrateRealmAtPath ( e . getRealmPath ( ) , new CustomMigration ( ) ) ; 
 - * } 
 - * < / pre > 
 * 
 * @ return Canonical path to the Realm file . 
 * @ see File # getCanonicalPath ( )
