BLEU SCORE: 0.027611988917697356

TEST MSG: Throw correct exception for multiple logged in users
GENERATED MSG: Adds User . all ( )

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java <nl> index 48b1a8e . . 18a8eb9 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java <nl> @ @ - 24 , 11 + 24 , 18 @ @ import org . junit . BeforeClass ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> + import org . mockito . Mockito ; <nl> + import org . mockito . invocation . InvocationOnMock ; <nl> + import org . mockito . stubbing . Answer ; <nl> <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> + import java . net . URL ; <nl> import java . util . Collection ; <nl> + import java . util . UUID ; <nl> <nl> + import io . realm . internal . network . AuthenticateResponse ; <nl> + import io . realm . internal . network . AuthenticationServer ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . util . SyncTestUtils ; <nl> <nl> @ @ - 37 , 6 + 44 , 9 @ @ import static junit . framework . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotNull ; <nl> import static org . junit . Assert . assertNull ; <nl> import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . fail ; <nl> + import static org . mockito . Matchers . any ; <nl> + import static org . mockito . Mockito . when ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class SyncUserTests { <nl> @ @ - 74 , 6 + 84 , 40 @ @ public class SyncUserTests { <nl> assertNull ( SyncUser . currentUser ( ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void currentUser _ throwsIfMultipleUsersLoggedIn ( ) { <nl> + AuthenticationServer originalAuthServer = SyncManager . getAuthServer ( ) ; <nl> + AuthenticationServer authServer = Mockito . mock ( AuthenticationServer . class ) ; <nl> + SyncManager . setAuthServerImpl ( authServer ) ; <nl> + try { <nl> + / / 1 . Login two random users <nl> + when ( authServer . loginUser ( any ( SyncCredentials . class ) , any ( URL . class ) ) ) . thenAnswer ( new Answer < AuthenticateResponse > ( ) { <nl> + @ Override <nl> + public AuthenticateResponse answer ( InvocationOnMock invocationOnMock ) throws Throwable { <nl> + return getNewRandomUser ( ) ; <nl> + } <nl> + } ) ; <nl> + SyncUser . login ( SyncCredentials . facebook ( " foo " ) , " http : / test . realm . io / auth " ) ; <nl> + SyncUser . login ( SyncCredentials . facebook ( " foo " ) , " http : / test . realm . io / auth " ) ; <nl> + <nl> + / / 2 . Verify currentUser ( ) now throws <nl> + try { <nl> + SyncUser . currentUser ( ) ; <nl> + fail ( ) ; <nl> + } catch ( IllegalStateException ignore ) { <nl> + } <nl> + } finally { <nl> + SyncManager . setAuthServerImpl ( originalAuthServer ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> + private AuthenticateResponse getNewRandomUser ( ) { <nl> + String identity = UUID . randomUUID ( ) . toString ( ) ; <nl> + String userTokenValue = UUID . randomUUID ( ) . toString ( ) ; <nl> + return SyncTestUtils . createLoginResponse ( userTokenValue , identity , Long . MAX _ VALUE ) ; <nl> + } <nl> + <nl> / / Test that current user is cleared if it is logged out <nl> @ Test <nl> public void currentUser _ clearedOnLogout ( ) { <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java <nl> index bd067ab . . ef3ead5 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java <nl> @ @ - 35 , 21 + 35 , 25 @ @ public class SyncTestUtils { <nl> public static String REALM _ TOKEN = UUID . randomUUID ( ) . toString ( ) ; <nl> public static String DEFAULT _ AUTH _ URL = " http : / / objectserver . realm . io / auth " ; <nl> <nl> + public static SyncUser createRandomTestUser ( ) { <nl> + return createTestUser ( UUID . randomUUID ( ) . toString ( ) , UUID . randomUUID ( ) . toString ( ) , DEFAULT _ AUTH _ URL , Long . MAX _ VALUE ) ; <nl> + } <nl> + <nl> public static SyncUser createTestUser ( ) { <nl> - return createTestUser ( DEFAULT _ AUTH _ URL , Long . MAX _ VALUE ) ; <nl> + return createTestUser ( USER _ TOKEN , REALM _ TOKEN , DEFAULT _ AUTH _ URL , Long . MAX _ VALUE ) ; <nl> } <nl> <nl> public static SyncUser createTestUser ( long expires ) { <nl> - return createTestUser ( DEFAULT _ AUTH _ URL , expires ) ; <nl> + return createTestUser ( USER _ TOKEN , REALM _ TOKEN , DEFAULT _ AUTH _ URL , expires ) ; <nl> } <nl> <nl> public static SyncUser createTestUser ( String authUrl ) { <nl> - return createTestUser ( authUrl , Long . MAX _ VALUE ) ; <nl> + return createTestUser ( USER _ TOKEN , REALM _ TOKEN , authUrl , Long . MAX _ VALUE ) ; <nl> } <nl> <nl> - public static SyncUser createTestUser ( String authUrl , long expires ) { <nl> - Token userToken = new Token ( USER _ TOKEN , " JohnDoe " , null , expires , null ) ; <nl> - Token accessToken = new Token ( REALM _ TOKEN , " JohnDoe " , " / foo " , expires , new Token . Permission [ ] { Token . Permission . DOWNLOAD } ) ; <nl> + public static SyncUser createTestUser ( String userTokenValue , String realmTokenValue , String authUrl , long expires ) { <nl> + Token userToken = new Token ( userTokenValue , " JohnDoe " , null , expires , null ) ; <nl> + Token accessToken = new Token ( realmTokenValue , " JohnDoe " , " / foo " , expires , new Token . Permission [ ] { Token . Permission . DOWNLOAD } ) ; <nl> ObjectServerUser . AccessDescription desc = new ObjectServerUser . AccessDescription ( accessToken , " / data / data / myapp / files / default " , false ) ; <nl> <nl> JSONObject obj = new JSONObject ( ) ; <nl> @ @ - 70 , 8 + 74 , 12 @ @ public class SyncTestUtils { <nl> } <nl> <nl> public static AuthenticateResponse createLoginResponse ( long expires ) { <nl> + return createLoginResponse ( USER _ TOKEN , " JohnDoe " , expires ) ; <nl> + } <nl> + <nl> + public static AuthenticateResponse createLoginResponse ( String userTokenValue , String userIdentity , long expires ) { <nl> try { <nl> - Token userToken = new Token ( USER _ TOKEN , " JohnDoe " , null , expires , null ) ; <nl> + Token userToken = new Token ( userTokenValue , userIdentity , null , expires , null ) ; <nl> JSONObject response = new JSONObject ( ) ; <nl> response . put ( " refresh _ token " , userToken . toJson ( ) ) ; <nl> return AuthenticateResponse . from ( response . toString ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> index 87600fa . . 8c86146 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> @ @ - 31 , 7 + 31 , 6 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeGetCurrentUser ( JNIEnv * env , jclass ) <nl> { <nl> TR _ ENTER ( ) <nl> try { <nl> - <nl> const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; <nl> if ( user ) { <nl> return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / cpp / util . cpp b / realm / realm - library / src / main / cpp / util . cpp <nl> index 570bfa9 . . 5379e48 100644 <nl> - - - a / realm / realm - library / src / main / cpp / util . cpp <nl> + + + b / realm / realm - library / src / main / cpp / util . cpp <nl> @ @ - 79 , 6 + 79 , 9 @ @ void ConvertException ( JNIEnv * env , const char * file , int line ) <nl> ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> ThrowException ( env , IllegalArgument , ss . str ( ) ) ; <nl> } <nl> + catch ( std : : logic _ error e ) { <nl> + ThrowException ( env , IllegalState , e . what ( ) ) ; <nl> + } <nl> catch ( exception & e ) { <nl> ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> ThrowException ( env , FatalError , ss . str ( ) ) ; <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> index a892c98 . . 6486bf3 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> @ @ - 70 , 11 + 70 , 12 @ @ public class SyncUser { <nl> } <nl> <nl> / * * <nl> - * Returns the last user that has logged in and who is still valid . <nl> - * A user is invalidated when he / she logs out or the user ' s access token expire . <nl> + * Returns the current user that is logged in and still valid . <nl> + * A user is invalidated when he / she logs out or the user ' s access token expires . <nl> * <nl> - * @ return last { @ link SyncUser } that has logged in and who is still valid . { @ code null } if no current user or user has <nl> - * been invalidated . <nl> + * @ return current { @ link SyncUser } that has logged in and is still valid . { @ code null } if no user is logged in or the user has <nl> + * expired . <nl> + * @ throws IllegalStateException if multiple users are logged in . <nl> * / <nl> public static SyncUser currentUser ( ) { <nl> SyncUser user = SyncManager . getUserStore ( ) . get ( ) ;
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index af4b613 . . 69e7bb1 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> # # # Enhancement <nl> <nl> * ` Realm . compactRealm ( ) ` works for encrypted Realms . <nl> + * Added ` User . all ( ) ` that returns all known Realm Object Server users . <nl> <nl> # # 2 . 0 . 3 <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> index 1deaf9b . . 566228e 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> @ @ - 71 , 6 + 71 , 10 @ @ public class SyncManagerTests { <nl> public Collection < User > allUsers ( ) { <nl> return null ; <nl> } <nl> + <nl> + @ Override <nl> + public void clear ( ) { <nl> + } <nl> } ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> index 4cf3601 . . 0f90fe6 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> @ @ - 19 , 29 + 19 , 21 @ @ package io . realm ; <nl> import android . support . test . InstrumentationRegistry ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> + import org . junit . Before ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> - import org . mockito . Mockito ; <nl> - import org . mockito . invocation . InvocationOnMock ; <nl> - import org . mockito . stubbing . Answer ; <nl> <nl> - import java . net . URL ; <nl> - import java . util . concurrent . TimeUnit ; <nl> + import java . util . Collection ; <nl> <nl> import io . realm . android . SharedPrefsUserStore ; <nl> - import io . realm . internal . network . AuthenticateResponse ; <nl> - import io . realm . internal . network . AuthenticationServer ; <nl> - import io . realm . internal . objectserver . Token ; <nl> import io . realm . rule . RunInLooperThread ; <nl> - import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . util . SyncTestUtils ; <nl> <nl> import static io . realm . util . SyncTestUtils . createTestUser ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNull ; <nl> - import static org . mockito . Matchers . any ; <nl> - import static org . mockito . Mockito . when ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class UserTests { <nl> @ @ - 49 , 6 + 41 , 12 @ @ public class UserTests { <nl> @ Rule <nl> public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> <nl> + @ Before <nl> + public void setUp ( ) { <nl> + Realm . init ( InstrumentationRegistry . getTargetContext ( ) ) ; <nl> + SyncManager . getUserStore ( ) . clear ( ) ; <nl> + } <nl> + <nl> @ Test <nl> public void toAndFromJson ( ) { <nl> User user1 = createTestUser ( ) ; <nl> @ @ - 68 , 6 + 66 , 27 @ @ public class UserTests { <nl> assertNull ( User . currentUser ( ) ) ; <nl> } <nl> <nl> + / / ` all ( ) ` returns an empty list if no users are logged in <nl> + @ Test <nl> + public void all _ empty ( ) { <nl> + Collection < User > users = User . all ( ) ; <nl> + assertTrue ( users . isEmpty ( ) ) ; <nl> + } <nl> + <nl> + / / ` all ( ) ` returns only valid users . Invalid users are filtered . <nl> + @ Test <nl> + public void all _ validUsers ( ) { <nl> + / / Add 1 expired user and 1 valid user to the user store <nl> + UserStore userStore = new SharedPrefsUserStore ( InstrumentationRegistry . getContext ( ) ) ; <nl> + SyncManager . setUserStore ( userStore ) ; <nl> + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MIN _ VALUE ) ) ; <nl> + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MAX _ VALUE ) ) ; <nl> + <nl> + Collection < User > users = User . all ( ) ; <nl> + assertEquals ( 1 , users . size ( ) ) ; <nl> + assertTrue ( users . iterator ( ) . next ( ) . isValid ( ) ) ; <nl> + } <nl> + <nl> / / Tests that the user store returns the last user to login <nl> / * FIXME : This test fails because of wrong JSON string . <nl> @ Test <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> index cab8285 . . 1798b42 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> @ @ - 28 , 7 + 28 , 9 @ @ import java . net . MalformedURLException ; <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> import java . net . URL ; <nl> + import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> + import java . util . List ; <nl> import java . util . concurrent . Future ; <nl> import java . util . concurrent . ThreadPoolExecutor ; <nl> <nl> @ @ - 80 , 6 + 82 , 24 @ @ public class User { <nl> } <nl> <nl> / * * <nl> + * Returns all valid users known by this device . <nl> + * A user is invalidated when he / she logs out or the user ' s access token expires . <nl> + * <nl> + * @ return a list of all known valid users . <nl> + * / <nl> + public static Collection < User > all ( ) { <nl> + UserStore userStore = SyncManager . getUserStore ( ) ; <nl> + Collection < User > storedUsers = userStore . allUsers ( ) ; <nl> + List < User > result = new ArrayList < User > ( storedUsers . size ( ) ) ; <nl> + for ( User user : storedUsers ) { <nl> + if ( user . isValid ( ) ) { <nl> + result . add ( user ) ; <nl> + } <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Loads a user that has previously been serialized using { @ link # toJson ( ) } . <nl> * <nl> * @ param user JSON string representing the user . <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> index 140d013 . . 4ec9f35 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> @ @ - 67 , 4 + 67 , 10 @ @ public interface UserStore { <nl> * @ return Collection of all users . If no users exist , an empty collection is returned . <nl> * / <nl> Collection < User > allUsers ( ) ; <nl> + <nl> + <nl> + / * * <nl> + * Removes all saved users . <nl> + * / <nl> + void clear ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> index 7aedf01 . . 5a73075 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import java . security . KeyStoreException ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> <nl> import io . realm . User ; <nl> import io . realm . UserStore ; <nl> @ @ - 159 , 4 + 160 , 14 @ @ public class SecureUserStore implements UserStore { <nl> } <nl> return users ; <nl> } <nl> + <nl> + @ Override <nl> + public void clear ( ) { <nl> + Set < String > all = sp . getAll ( ) . keySet ( ) ; <nl> + SharedPreferences . Editor editor = sp . edit ( ) ; <nl> + for ( String key : all ) { <nl> + editor . remove ( key ) ; <nl> + } <nl> + editor . apply ( ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> index eab709c . . 4773cb6 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import android . content . SharedPreferences ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> <nl> import io . realm . User ; <nl> import io . realm . UserStore ; <nl> @ @ - 114 , 4 + 115 , 17 @ @ public class SharedPrefsUserStore implements UserStore { <nl> } <nl> return users ; <nl> } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + @ Override <nl> + public void clear ( ) { <nl> + Set < String > all = sp . getAll ( ) . keySet ( ) ; <nl> + SharedPreferences . Editor editor = sp . edit ( ) ; <nl> + for ( String key : all ) { <nl> + editor . remove ( key ) ; <nl> + } <nl> + editor . apply ( ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java 
 index 48b1a8e . . 18a8eb9 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java 
 @ @ - 24 , 11 + 24 , 18 @ @ import org . junit . BeforeClass ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 + import org . mockito . Mockito ; 
 + import org . mockito . invocation . InvocationOnMock ; 
 + import org . mockito . stubbing . Answer ; 
 
 import java . net . URI ; 
 import java . net . URISyntaxException ; 
 + import java . net . URL ; 
 import java . util . Collection ; 
 + import java . util . UUID ; 
 
 + import io . realm . internal . network . AuthenticateResponse ; 
 + import io . realm . internal . network . AuthenticationServer ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . util . SyncTestUtils ; 
 
 @ @ - 37 , 6 + 44 , 9 @ @ import static junit . framework . Assert . assertEquals ; 
 import static org . junit . Assert . assertNotNull ; 
 import static org . junit . Assert . assertNull ; 
 import static org . junit . Assert . assertTrue ; 
 + import static org . junit . Assert . fail ; 
 + import static org . mockito . Matchers . any ; 
 + import static org . mockito . Mockito . when ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class SyncUserTests { 
 @ @ - 74 , 6 + 84 , 40 @ @ public class SyncUserTests { 
 assertNull ( SyncUser . currentUser ( ) ) ; 
 } 
 
 + @ Test 
 + public void currentUser _ throwsIfMultipleUsersLoggedIn ( ) { 
 + AuthenticationServer originalAuthServer = SyncManager . getAuthServer ( ) ; 
 + AuthenticationServer authServer = Mockito . mock ( AuthenticationServer . class ) ; 
 + SyncManager . setAuthServerImpl ( authServer ) ; 
 + try { 
 + / / 1 . Login two random users 
 + when ( authServer . loginUser ( any ( SyncCredentials . class ) , any ( URL . class ) ) ) . thenAnswer ( new Answer < AuthenticateResponse > ( ) { 
 + @ Override 
 + public AuthenticateResponse answer ( InvocationOnMock invocationOnMock ) throws Throwable { 
 + return getNewRandomUser ( ) ; 
 + } 
 + } ) ; 
 + SyncUser . login ( SyncCredentials . facebook ( " foo " ) , " http : / test . realm . io / auth " ) ; 
 + SyncUser . login ( SyncCredentials . facebook ( " foo " ) , " http : / test . realm . io / auth " ) ; 
 + 
 + / / 2 . Verify currentUser ( ) now throws 
 + try { 
 + SyncUser . currentUser ( ) ; 
 + fail ( ) ; 
 + } catch ( IllegalStateException ignore ) { 
 + } 
 + } finally { 
 + SyncManager . setAuthServerImpl ( originalAuthServer ) ; 
 + } 
 + 
 + } 
 + 
 + private AuthenticateResponse getNewRandomUser ( ) { 
 + String identity = UUID . randomUUID ( ) . toString ( ) ; 
 + String userTokenValue = UUID . randomUUID ( ) . toString ( ) ; 
 + return SyncTestUtils . createLoginResponse ( userTokenValue , identity , Long . MAX _ VALUE ) ; 
 + } 
 + 
 / / Test that current user is cleared if it is logged out 
 @ Test 
 public void currentUser _ clearedOnLogout ( ) { 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java 
 index bd067ab . . ef3ead5 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java 
 @ @ - 35 , 21 + 35 , 25 @ @ public class SyncTestUtils { 
 public static String REALM _ TOKEN = UUID . randomUUID ( ) . toString ( ) ; 
 public static String DEFAULT _ AUTH _ URL = " http : / / objectserver . realm . io / auth " ; 
 
 + public static SyncUser createRandomTestUser ( ) { 
 + return createTestUser ( UUID . randomUUID ( ) . toString ( ) , UUID . randomUUID ( ) . toString ( ) , DEFAULT _ AUTH _ URL , Long . MAX _ VALUE ) ; 
 + } 
 + 
 public static SyncUser createTestUser ( ) { 
 - return createTestUser ( DEFAULT _ AUTH _ URL , Long . MAX _ VALUE ) ; 
 + return createTestUser ( USER _ TOKEN , REALM _ TOKEN , DEFAULT _ AUTH _ URL , Long . MAX _ VALUE ) ; 
 } 
 
 public static SyncUser createTestUser ( long expires ) { 
 - return createTestUser ( DEFAULT _ AUTH _ URL , expires ) ; 
 + return createTestUser ( USER _ TOKEN , REALM _ TOKEN , DEFAULT _ AUTH _ URL , expires ) ; 
 } 
 
 public static SyncUser createTestUser ( String authUrl ) { 
 - return createTestUser ( authUrl , Long . MAX _ VALUE ) ; 
 + return createTestUser ( USER _ TOKEN , REALM _ TOKEN , authUrl , Long . MAX _ VALUE ) ; 
 } 
 
 - public static SyncUser createTestUser ( String authUrl , long expires ) { 
 - Token userToken = new Token ( USER _ TOKEN , " JohnDoe " , null , expires , null ) ; 
 - Token accessToken = new Token ( REALM _ TOKEN , " JohnDoe " , " / foo " , expires , new Token . Permission [ ] { Token . Permission . DOWNLOAD } ) ; 
 + public static SyncUser createTestUser ( String userTokenValue , String realmTokenValue , String authUrl , long expires ) { 
 + Token userToken = new Token ( userTokenValue , " JohnDoe " , null , expires , null ) ; 
 + Token accessToken = new Token ( realmTokenValue , " JohnDoe " , " / foo " , expires , new Token . Permission [ ] { Token . Permission . DOWNLOAD } ) ; 
 ObjectServerUser . AccessDescription desc = new ObjectServerUser . AccessDescription ( accessToken , " / data / data / myapp / files / default " , false ) ; 
 
 JSONObject obj = new JSONObject ( ) ; 
 @ @ - 70 , 8 + 74 , 12 @ @ public class SyncTestUtils { 
 } 
 
 public static AuthenticateResponse createLoginResponse ( long expires ) { 
 + return createLoginResponse ( USER _ TOKEN , " JohnDoe " , expires ) ; 
 + } 
 + 
 + public static AuthenticateResponse createLoginResponse ( String userTokenValue , String userIdentity , long expires ) { 
 try { 
 - Token userToken = new Token ( USER _ TOKEN , " JohnDoe " , null , expires , null ) ; 
 + Token userToken = new Token ( userTokenValue , userIdentity , null , expires , null ) ; 
 JSONObject response = new JSONObject ( ) ; 
 response . put ( " refresh _ token " , userToken . toJson ( ) ) ; 
 return AuthenticateResponse . from ( response . toString ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 index 87600fa . . 8c86146 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 @ @ - 31 , 7 + 31 , 6 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeGetCurrentUser ( JNIEnv * env , jclass ) 
 { 
 TR _ ENTER ( ) 
 try { 
 - 
 const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; 
 if ( user ) { 
 return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / cpp / util . cpp b / realm / realm - library / src / main / cpp / util . cpp 
 index 570bfa9 . . 5379e48 100644 
 - - - a / realm / realm - library / src / main / cpp / util . cpp 
 + + + b / realm / realm - library / src / main / cpp / util . cpp 
 @ @ - 79 , 6 + 79 , 9 @ @ void ConvertException ( JNIEnv * env , const char * file , int line ) 
 ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 ThrowException ( env , IllegalArgument , ss . str ( ) ) ; 
 } 
 + catch ( std : : logic _ error e ) { 
 + ThrowException ( env , IllegalState , e . what ( ) ) ; 
 + } 
 catch ( exception & e ) { 
 ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 ThrowException ( env , FatalError , ss . str ( ) ) ; 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 index a892c98 . . 6486bf3 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 @ @ - 70 , 11 + 70 , 12 @ @ public class SyncUser { 
 } 
 
 / * * 
 - * Returns the last user that has logged in and who is still valid . 
 - * A user is invalidated when he / she logs out or the user ' s access token expire . 
 + * Returns the current user that is logged in and still valid . 
 + * A user is invalidated when he / she logs out or the user ' s access token expires . 
 * 
 - * @ return last { @ link SyncUser } that has logged in and who is still valid . { @ code null } if no current user or user has 
 - * been invalidated . 
 + * @ return current { @ link SyncUser } that has logged in and is still valid . { @ code null } if no user is logged in or the user has 
 + * expired . 
 + * @ throws IllegalStateException if multiple users are logged in . 
 * / 
 public static SyncUser currentUser ( ) { 
 SyncUser user = SyncManager . getUserStore ( ) . get ( ) ;

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index af4b613 . . 69e7bb1 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 # # # Enhancement 
 
 * ` Realm . compactRealm ( ) ` works for encrypted Realms . 
 + * Added ` User . all ( ) ` that returns all known Realm Object Server users . 
 
 # # 2 . 0 . 3 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 index 1deaf9b . . 566228e 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 @ @ - 71 , 6 + 71 , 10 @ @ public class SyncManagerTests { 
 public Collection < User > allUsers ( ) { 
 return null ; 
 } 
 + 
 + @ Override 
 + public void clear ( ) { 
 + } 
 } ; 
 } 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 index 4cf3601 . . 0f90fe6 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 @ @ - 19 , 29 + 19 , 21 @ @ package io . realm ; 
 import android . support . test . InstrumentationRegistry ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 + import org . junit . Before ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 - import org . mockito . Mockito ; 
 - import org . mockito . invocation . InvocationOnMock ; 
 - import org . mockito . stubbing . Answer ; 
 
 - import java . net . URL ; 
 - import java . util . concurrent . TimeUnit ; 
 + import java . util . Collection ; 
 
 import io . realm . android . SharedPrefsUserStore ; 
 - import io . realm . internal . network . AuthenticateResponse ; 
 - import io . realm . internal . network . AuthenticationServer ; 
 - import io . realm . internal . objectserver . Token ; 
 import io . realm . rule . RunInLooperThread ; 
 - import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . util . SyncTestUtils ; 
 
 import static io . realm . util . SyncTestUtils . createTestUser ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNull ; 
 - import static org . mockito . Matchers . any ; 
 - import static org . mockito . Mockito . when ; 
 + import static org . junit . Assert . assertTrue ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class UserTests { 
 @ @ - 49 , 6 + 41 , 12 @ @ public class UserTests { 
 @ Rule 
 public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 
 + @ Before 
 + public void setUp ( ) { 
 + Realm . init ( InstrumentationRegistry . getTargetContext ( ) ) ; 
 + SyncManager . getUserStore ( ) . clear ( ) ; 
 + } 
 + 
 @ Test 
 public void toAndFromJson ( ) { 
 User user1 = createTestUser ( ) ; 
 @ @ - 68 , 6 + 66 , 27 @ @ public class UserTests { 
 assertNull ( User . currentUser ( ) ) ; 
 } 
 
 + / / ` all ( ) ` returns an empty list if no users are logged in 
 + @ Test 
 + public void all _ empty ( ) { 
 + Collection < User > users = User . all ( ) ; 
 + assertTrue ( users . isEmpty ( ) ) ; 
 + } 
 + 
 + / / ` all ( ) ` returns only valid users . Invalid users are filtered . 
 + @ Test 
 + public void all _ validUsers ( ) { 
 + / / Add 1 expired user and 1 valid user to the user store 
 + UserStore userStore = new SharedPrefsUserStore ( InstrumentationRegistry . getContext ( ) ) ; 
 + SyncManager . setUserStore ( userStore ) ; 
 + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MIN _ VALUE ) ) ; 
 + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MAX _ VALUE ) ) ; 
 + 
 + Collection < User > users = User . all ( ) ; 
 + assertEquals ( 1 , users . size ( ) ) ; 
 + assertTrue ( users . iterator ( ) . next ( ) . isValid ( ) ) ; 
 + } 
 + 
 / / Tests that the user store returns the last user to login 
 / * FIXME : This test fails because of wrong JSON string . 
 @ Test 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 index cab8285 . . 1798b42 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 @ @ - 28 , 7 + 28 , 9 @ @ import java . net . MalformedURLException ; 
 import java . net . URI ; 
 import java . net . URISyntaxException ; 
 import java . net . URL ; 
 + import java . util . ArrayList ; 
 import java . util . Collection ; 
 + import java . util . List ; 
 import java . util . concurrent . Future ; 
 import java . util . concurrent . ThreadPoolExecutor ; 
 
 @ @ - 80 , 6 + 82 , 24 @ @ public class User { 
 } 
 
 / * * 
 + * Returns all valid users known by this device . 
 + * A user is invalidated when he / she logs out or the user ' s access token expires . 
 + * 
 + * @ return a list of all known valid users . 
 + * / 
 + public static Collection < User > all ( ) { 
 + UserStore userStore = SyncManager . getUserStore ( ) ; 
 + Collection < User > storedUsers = userStore . allUsers ( ) ; 
 + List < User > result = new ArrayList < User > ( storedUsers . size ( ) ) ; 
 + for ( User user : storedUsers ) { 
 + if ( user . isValid ( ) ) { 
 + result . add ( user ) ; 
 + } 
 + } 
 + return result ; 
 + } 
 + 
 + / * * 
 * Loads a user that has previously been serialized using { @ link # toJson ( ) } . 
 * 
 * @ param user JSON string representing the user . 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 index 140d013 . . 4ec9f35 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 @ @ - 67 , 4 + 67 , 10 @ @ public interface UserStore { 
 * @ return Collection of all users . If no users exist , an empty collection is returned . 
 * / 
 Collection < User > allUsers ( ) ; 
 + 
 + 
 + / * * 
 + * Removes all saved users . 
 + * / 
 + void clear ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 index 7aedf01 . . 5a73075 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import java . security . KeyStoreException ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 
 import io . realm . User ; 
 import io . realm . UserStore ; 
 @ @ - 159 , 4 + 160 , 14 @ @ public class SecureUserStore implements UserStore { 
 } 
 return users ; 
 } 
 + 
 + @ Override 
 + public void clear ( ) { 
 + Set < String > all = sp . getAll ( ) . keySet ( ) ; 
 + SharedPreferences . Editor editor = sp . edit ( ) ; 
 + for ( String key : all ) { 
 + editor . remove ( key ) ; 
 + } 
 + editor . apply ( ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 index eab709c . . 4773cb6 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import android . content . SharedPreferences ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 
 import io . realm . User ; 
 import io . realm . UserStore ; 
 @ @ - 114 , 4 + 115 , 17 @ @ public class SharedPrefsUserStore implements UserStore { 
 } 
 return users ; 
 } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + @ Override 
 + public void clear ( ) { 
 + Set < String > all = sp . getAll ( ) . keySet ( ) ; 
 + SharedPreferences . Editor editor = sp . edit ( ) ; 
 + for ( String key : all ) { 
 + editor . remove ( key ) ; 
 + } 
 + editor . apply ( ) ; 
 + } 
 }
