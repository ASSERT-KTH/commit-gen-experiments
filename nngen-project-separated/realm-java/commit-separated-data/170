BLEU SCORE: 0.09688464563433238

TEST MSG: Build core from source
GENERATED MSG: Fix merge from f6343b to master

TEST DIFF (one line): diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 03b3296 . . 4bd455d 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 61 , 6 + 61 , 7 @ @ android { <nl> " - DENABLE _ DEBUG _ CORE = $ project . enableDebugCore " <nl> if ( project . ccachePath ) arguments " - DNDK _ CCACHE = $ project . ccachePath " <nl> if ( project . lcachePath ) arguments " - DNDK _ LCACHE = $ project . lcachePath " <nl> + if ( project . coreSourcePath ) arguments " - DCORE _ SOURCE _ PATH = $ project . coreSourcePath " <nl> if ( project . hasProperty ( ' buildTargetABIs ' ) & & ! project . getProperty ( ' buildTargetABIs ' ) . trim ( ) . isEmpty ( ) ) { <nl> abiFilters ( * project . getProperty ( ' buildTargetABIs ' ) . trim ( ) . split ( ' \ \ s * , \ \ s * ' ) ) <nl> } else { <nl> @ @ - 120 , 7 + 121 , 7 @ @ android { <nl> abortOnError false <nl> } <nl> <nl> - flavorDimensions ' api ' <nl> + flavorDimensions ' api ' <nl> <nl> productFlavors { <nl> base { <nl> @ @ - 496 , 35 + 497 , 9 @ @ task downloadCore ( ) { <nl> } <nl> } <nl> <nl> - task compileCore ( group : ' build setup ' , description : ' Compile the core library from source code ' ) { <nl> - / / Build the library from core source code <nl> - doFirst { <nl> - if ( ! coreSourcePath ) { <nl> - throw new GradleException ( ' The coreSourcePath is not set . ' ) <nl> - } <nl> - exec { <nl> - workingDir = coreSourcePath <nl> - commandLine = [ <nl> - " bash " , <nl> - " build . sh " , <nl> - " build - android " <nl> - ] <nl> - } <nl> - } <nl> - <nl> - / / Copy the core tar ball <nl> - doLast { <nl> - copy { <nl> - from " $ { coreSourcePath } / realm - core - android - $ { coreVersion } . tar . gz " <nl> - into project . coreArchiveFile . parent <nl> - rename " realm - core - android - $ { coreVersion } . tar . gz " , " realm - sync - android - $ { coreVersion } . tar . gz " <nl> - } <nl> - } <nl> - } <nl> - <nl> task deployCore ( group : ' build setup ' , description : ' Deploy the latest version of Realm Core ' ) { <nl> dependsOn { <nl> - coreSourcePath ? compileCore : downloadCore <nl> + downloadCore <nl> } <nl> <nl> / / Build with the output from core source dir . No need to deploy anything . <nl> diff - - git a / realm / realm - library / src / main / cpp / CMake / RealmCore . cmake b / realm / realm - library / src / main / cpp / CMake / RealmCore . cmake <nl> new file mode 100644 <nl> index 0000000 . . bedbba6 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / main / cpp / CMake / RealmCore . cmake <nl> @ @ - 0 , 0 + 1 , 125 @ @ <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # <nl> + # Copyright 2017 Realm Inc . <nl> + # <nl> + # Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + # you may not use this file except in compliance with the License . <nl> + # You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + include ( ExternalProject ) <nl> + <nl> + function ( build _ existing _ realm _ core core _ source _ path ) <nl> + if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " ) <nl> + set ( debug _ lib _ suffix " - dbg " ) <nl> + add _ compile _ options ( - DREALM _ DEBUG ) <nl> + else ( ) <nl> + add _ compile _ options ( - DNDEBUG ) <nl> + endif ( ) <nl> + <nl> + ExternalProject _ Add ( realm - core <nl> + SOURCE _ DIR $ { core _ source _ path } <nl> + PREFIX $ { core _ source _ path } / build - android - $ { ANDROID _ ABI } - $ { CMAKE _ BUILD _ TYPE } <nl> + CMAKE _ ARGS - DCMAKE _ TOOLCHAIN _ FILE = $ { CMAKE _ TOOLCHAIN _ FILE } <nl> + - DANDROID _ ABI = $ { ANDROID _ ABI } <nl> + - DCMAKE _ BUILD _ TYPE = $ { CMAKE _ BUILD _ TYPE } <nl> + - DREALM _ BUILD _ LIB _ ONLY = YES <nl> + - DREALM _ ENABLE _ ENCRYPTION = 1 <nl> + INSTALL _ COMMAND " " <nl> + LOG _ CONFIGURE 1 <nl> + LOG _ BUILD 1 <nl> + ) <nl> + <nl> + ExternalProject _ Get _ Property ( realm - core SOURCE _ DIR ) <nl> + ExternalProject _ Get _ Property ( realm - core BINARY _ DIR ) <nl> + <nl> + # Create directories that are included in INTERFACE _ INCLUDE _ DIRECTORIES , as CMake requires they exist at <nl> + # configure time , when they ' d otherwise not be created until we download and extract core . <nl> + file ( MAKE _ DIRECTORY " $ { BINARY _ DIR } / src " ) <nl> + <nl> + set ( core _ lib _ file " $ { BINARY _ DIR } / src / realm / librealm $ { debug _ lib _ suffix } . a " ) <nl> + add _ library ( lib _ realm _ core STATIC IMPORTED ) <nl> + set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ file } <nl> + IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic <nl> + INTERFACE _ INCLUDE _ DIRECTORIES " $ { SOURCE _ DIR } / src ; $ { BINARY _ DIR } / src " ) <nl> + <nl> + ExternalProject _ Add _ Step ( realm - core ensure - libraries <nl> + DEPENDEES build <nl> + BYPRODUCTS $ { core _ lib _ file } <nl> + ) <nl> + <nl> + add _ dependencies ( lib _ realm _ core realm - core ) <nl> + endfunction ( ) <nl> + <nl> + # Add the sync released as the library . <nl> + function ( use _ sync _ release enable _ sync sync _ dist _ path ) <nl> + # Link to core / sync debug lib for debug build if it is debug build and linking with debug core is enabled . <nl> + if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " AND $ { ENABLE _ DEBUG _ CORE } ) <nl> + set ( debug _ lib _ suffix " - dbg " ) <nl> + add _ compile _ options ( - DREALM _ DEBUG ) <nl> + else ( ) <nl> + add _ compile _ options ( - DNDEBUG ) <nl> + endif ( ) <nl> + <nl> + # Configure import realm core lib <nl> + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - $ { ANDROID _ ABI } $ { debug _ lib _ suffix } . a ) <nl> + if ( NOT EXISTS $ { core _ lib _ path } ) <nl> + if ( ARMEABI ) <nl> + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - arm $ { debug _ lib _ suffix } . a ) <nl> + elseif ( ARMEABI _ V7A ) <nl> + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - arm - v7a $ { debug _ lib _ suffix } . a ) <nl> + elseif ( ARM64 _ V8A ) <nl> + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - arm64 $ { debug _ lib _ suffix } . a ) <nl> + else ( ) <nl> + message ( FATAL _ ERROR " Cannot find core lib file : $ { core _ lib _ path } " ) <nl> + endif ( ) <nl> + endif ( ) <nl> + <nl> + add _ library ( lib _ realm _ core STATIC IMPORTED ) <nl> + <nl> + # - latomic is not set by default for mips and armv5 . <nl> + # See https : / / code . google . com / p / android / issues / detail ? id = 182094 <nl> + set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ path } <nl> + IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic <nl> + INTERFACE _ INCLUDE _ DIRECTORIES " $ { sync _ dist _ path } / include " ) <nl> + <nl> + if ( enable _ sync ) <nl> + # Sync static library <nl> + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - $ { ANDROID _ ABI } $ { debug _ lib _ suffix } . a ) <nl> + # Workaround for old core ' s funny ABI nicknames <nl> + if ( NOT EXISTS $ { sync _ lib _ path } ) <nl> + if ( ARMEABI ) <nl> + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - arm $ { debug _ lib _ suffix } . a ) <nl> + elseif ( ARMEABI _ V7A ) <nl> + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - arm - v7a $ { debug _ lib _ suffix } . a ) <nl> + elseif ( ARM64 _ V8A ) <nl> + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - arm64 $ { debug _ lib _ suffix } . a ) <nl> + else ( ) <nl> + message ( FATAL _ ERROR " Cannot find sync lib file : $ { sync _ lib _ path } " ) <nl> + endif ( ) <nl> + endif ( ) <nl> + add _ library ( lib _ realm _ sync STATIC IMPORTED ) <nl> + set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ path } <nl> + IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) <nl> + endif ( ) <nl> + <nl> + set ( REALM _ CORE _ INCLUDE _ DIR " $ { sync _ dist _ path } / include " ) <nl> + endfunction ( ) <nl> + <nl> + # Add core / sync libraries . Set the core _ source _ path to build core from source . <nl> + # FIXME : Build from sync source is not supported yet . <nl> + function ( use _ realm _ core enable _ sync sync _ dist _ path core _ source _ path ) <nl> + if ( core _ source _ path ) <nl> + build _ existing _ realm _ core ( $ { core _ source _ path } ) <nl> + else ( ) <nl> + use _ sync _ release ( $ { enable _ sync } $ { sync _ dist _ path } ) <nl> + endif ( ) <nl> + endfunction ( ) <nl> diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> index 5948d3b . . a33fb11 100644 <nl> - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> @ @ - 1 , 5 + 1 , 24 @ @ <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # <nl> + # Copyright 2017 Realm Inc . <nl> + # <nl> + # Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + # you may not use this file except in compliance with the License . <nl> + # You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> cmake _ minimum _ required ( VERSION 3 . 6 . 0 ) <nl> <nl> + list ( APPEND CMAKE _ MODULE _ PATH " $ { CMAKE _ CURRENT _ SOURCE _ DIR } / CMake " ) <nl> + <nl> # find javah <nl> find _ package ( Java COMPONENTS Development ) <nl> if ( NOT Java _ Development _ FOUND ) <nl> @ @ - 63 , 56 + 82 , 9 @ @ create _ javah ( TARGET jni _ headers <nl> DEPENDS $ { classes _ PATH } <nl> ) <nl> <nl> - # Link to core / sync debug lib for debug build if it is debug build and linking with debug core is enabled . <nl> - # FIXME : Ideally we should linking to debug core on CI for testing , but the assertions slow down the CI a lot . <nl> - if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " AND $ { ENABLE _ DEBUG _ CORE } ) <nl> - set ( debug _ lib _ SUFFIX " - dbg " ) <nl> - set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DREALM _ DEBUG " ) <nl> - else ( ) <nl> - set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DNDEBUG " ) <nl> - endif ( ) <nl> - <nl> - # Configure import realm core lib <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) <nl> - # Workaround for old core ' s funny ABI nicknames <nl> - if ( NOT EXISTS $ { core _ lib _ PATH } ) <nl> - if ( ARMEABI ) <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm $ { debug _ lib _ SUFFIX } . a ) <nl> - elseif ( ARMEABI _ V7A ) <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) <nl> - elseif ( ARM64 _ V8A ) <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm64 $ { debug _ lib _ SUFFIX } . a ) <nl> - else ( ) <nl> - message ( FATAL _ ERROR " Cannot find core lib file : $ { core _ lib _ PATH } " ) <nl> - endif ( ) <nl> - endif ( ) <nl> - <nl> - add _ library ( lib _ realm _ core STATIC IMPORTED ) <nl> - <nl> - # - latomic is not set by default for mips and armv5 . <nl> - # See https : / / code . google . com / p / android / issues / detail ? id = 182094 <nl> - set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PATH } <nl> - IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic ) <nl> + include ( RealmCore ) <nl> <nl> - if ( build _ SYNC ) <nl> - # Sync static library <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) <nl> - # Workaround for old core ' s funny ABI nicknames <nl> - if ( NOT EXISTS $ { sync _ lib _ PATH } ) <nl> - if ( ARMEABI ) <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm $ { debug _ lib _ SUFFIX } . a ) <nl> - elseif ( ARMEABI _ V7A ) <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) <nl> - elseif ( ARM64 _ V8A ) <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm64 $ { debug _ lib _ SUFFIX } . a ) <nl> - else ( ) <nl> - message ( FATAL _ ERROR " Cannot find sync lib file : $ { sync _ lib _ PATH } " ) <nl> - endif ( ) <nl> - endif ( ) <nl> - add _ library ( lib _ realm _ sync STATIC IMPORTED ) <nl> - set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ PATH } <nl> - IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) <nl> - endif ( ) <nl> + use _ realm _ core ( $ { build _ SYNC } " $ { REALM _ CORE _ DIST _ DIR } " " $ { CORE _ SOURCE _ PATH } " ) <nl> <nl> # Download openssl lib <nl> # string ( TOLOWER " $ { CMAKE _ BUILD _ TYPE } " openssl _ build _ TYPE ) <nl> @ @ - 136 , 7 + 108 , 7 @ @ get _ target _ property ( crypto _ LIB crypto IMPORTED _ LOCATION ) <nl> get _ target _ property ( ssl _ LIB ssl IMPORTED _ LOCATION ) <nl> <nl> # build application ' s shared lib <nl> - include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include <nl> + include _ directories ( <nl> $ { CMAKE _ SOURCE _ DIR } <nl> $ { jni _ headers _ PATH } <nl> $ { CMAKE _ SOURCE _ DIR } / object - store / src )
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> index dadf564 . . 5b84b34 100644 <nl> - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> @ @ - 77 , 7 + 77 , 11 @ @ if ( NOT EXISTS $ { core _ lib _ PATH } ) <nl> endif ( ) <nl> <nl> add _ library ( lib _ realm _ core STATIC IMPORTED ) <nl> - set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PATH } ) <nl> + <nl> + # - latomic is not set by default for mips and armv5 . <nl> + # See https : / / code . google . com / p / android / issues / detail ? id = 182094 <nl> + set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PATH } <nl> + IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic ) <nl> <nl> # Sync static library <nl> set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } . a ) <nl> @ @ - 94 , 7 + 98 , 8 @ @ if ( NOT EXISTS $ { sync _ lib _ PATH } ) <nl> endif ( ) <nl> endif ( ) <nl> add _ library ( lib _ realm _ sync STATIC IMPORTED ) <nl> - set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ PATH } ) <nl> + set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ PATH } <nl> + IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) <nl> <nl> # build application ' s shared lib <nl> include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include <nl> @ @ - 172 , 12 + 177 , 11 @ @ endif ( ) <nl> <nl> add _ library ( realm - jni SHARED $ { jni _ SRC } $ { objectstore _ SRC } $ { objectstore _ sync _ SRC } ) <nl> add _ dependencies ( realm - jni jni _ headers ) <nl> - # - latomic is not set by default for mips . See https : / / code . google . com / p / android / issues / detail ? id = 182094 <nl> + <nl> if ( build _ SYNC ) <nl> - # FIXME : The order matters ! lib _ realm _ sync needs to be in front of lib _ realm _ core ! ! Find out why ! ! <nl> - target _ link _ libraries ( realm - jni log android atomic lib _ realm _ sync lib _ realm _ core ) <nl> + target _ link _ libraries ( realm - jni log android lib _ realm _ sync ) <nl> else ( ) <nl> - target _ link _ libraries ( realm - jni log android atomic lib _ realm _ core ) <nl> + target _ link _ libraries ( realm - jni log android lib _ realm _ core ) <nl> endif ( ) <nl> <nl> # Strip the release so files and backup the unstripped versions <nl> diff - - git a / version . txt b / version . txt <nl> index 1097648 . . 855ff95 100644 <nl> - - - a / version . txt <nl> + + + b / version . txt <nl> @ @ - 1 , 2 + 1 @ @ <nl> - <nl> - 2 . 4 . 0 - SNAPSHOT <nl> + 2 . 4 . 0 - SNAPSHOT <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 03b3296 . . 4bd455d 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 61 , 6 + 61 , 7 @ @ android { 
 " - DENABLE _ DEBUG _ CORE = $ project . enableDebugCore " 
 if ( project . ccachePath ) arguments " - DNDK _ CCACHE = $ project . ccachePath " 
 if ( project . lcachePath ) arguments " - DNDK _ LCACHE = $ project . lcachePath " 
 + if ( project . coreSourcePath ) arguments " - DCORE _ SOURCE _ PATH = $ project . coreSourcePath " 
 if ( project . hasProperty ( ' buildTargetABIs ' ) & & ! project . getProperty ( ' buildTargetABIs ' ) . trim ( ) . isEmpty ( ) ) { 
 abiFilters ( * project . getProperty ( ' buildTargetABIs ' ) . trim ( ) . split ( ' \ \ s * , \ \ s * ' ) ) 
 } else { 
 @ @ - 120 , 7 + 121 , 7 @ @ android { 
 abortOnError false 
 } 
 
 - flavorDimensions ' api ' 
 + flavorDimensions ' api ' 
 
 productFlavors { 
 base { 
 @ @ - 496 , 35 + 497 , 9 @ @ task downloadCore ( ) { 
 } 
 } 
 
 - task compileCore ( group : ' build setup ' , description : ' Compile the core library from source code ' ) { 
 - / / Build the library from core source code 
 - doFirst { 
 - if ( ! coreSourcePath ) { 
 - throw new GradleException ( ' The coreSourcePath is not set . ' ) 
 - } 
 - exec { 
 - workingDir = coreSourcePath 
 - commandLine = [ 
 - " bash " , 
 - " build . sh " , 
 - " build - android " 
 - ] 
 - } 
 - } 
 - 
 - / / Copy the core tar ball 
 - doLast { 
 - copy { 
 - from " $ { coreSourcePath } / realm - core - android - $ { coreVersion } . tar . gz " 
 - into project . coreArchiveFile . parent 
 - rename " realm - core - android - $ { coreVersion } . tar . gz " , " realm - sync - android - $ { coreVersion } . tar . gz " 
 - } 
 - } 
 - } 
 - 
 task deployCore ( group : ' build setup ' , description : ' Deploy the latest version of Realm Core ' ) { 
 dependsOn { 
 - coreSourcePath ? compileCore : downloadCore 
 + downloadCore 
 } 
 
 / / Build with the output from core source dir . No need to deploy anything . 
 diff - - git a / realm / realm - library / src / main / cpp / CMake / RealmCore . cmake b / realm / realm - library / src / main / cpp / CMake / RealmCore . cmake 
 new file mode 100644 
 index 0000000 . . bedbba6 
 - - - / dev / null 
 + + + b / realm / realm - library / src / main / cpp / CMake / RealmCore . cmake 
 @ @ - 0 , 0 + 1 , 125 @ @ 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # 
 + # Copyright 2017 Realm Inc . 
 + # 
 + # Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + # you may not use this file except in compliance with the License . 
 + # You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + include ( ExternalProject ) 
 + 
 + function ( build _ existing _ realm _ core core _ source _ path ) 
 + if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " ) 
 + set ( debug _ lib _ suffix " - dbg " ) 
 + add _ compile _ options ( - DREALM _ DEBUG ) 
 + else ( ) 
 + add _ compile _ options ( - DNDEBUG ) 
 + endif ( ) 
 + 
 + ExternalProject _ Add ( realm - core 
 + SOURCE _ DIR $ { core _ source _ path } 
 + PREFIX $ { core _ source _ path } / build - android - $ { ANDROID _ ABI } - $ { CMAKE _ BUILD _ TYPE } 
 + CMAKE _ ARGS - DCMAKE _ TOOLCHAIN _ FILE = $ { CMAKE _ TOOLCHAIN _ FILE } 
 + - DANDROID _ ABI = $ { ANDROID _ ABI } 
 + - DCMAKE _ BUILD _ TYPE = $ { CMAKE _ BUILD _ TYPE } 
 + - DREALM _ BUILD _ LIB _ ONLY = YES 
 + - DREALM _ ENABLE _ ENCRYPTION = 1 
 + INSTALL _ COMMAND " " 
 + LOG _ CONFIGURE 1 
 + LOG _ BUILD 1 
 + ) 
 + 
 + ExternalProject _ Get _ Property ( realm - core SOURCE _ DIR ) 
 + ExternalProject _ Get _ Property ( realm - core BINARY _ DIR ) 
 + 
 + # Create directories that are included in INTERFACE _ INCLUDE _ DIRECTORIES , as CMake requires they exist at 
 + # configure time , when they ' d otherwise not be created until we download and extract core . 
 + file ( MAKE _ DIRECTORY " $ { BINARY _ DIR } / src " ) 
 + 
 + set ( core _ lib _ file " $ { BINARY _ DIR } / src / realm / librealm $ { debug _ lib _ suffix } . a " ) 
 + add _ library ( lib _ realm _ core STATIC IMPORTED ) 
 + set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ file } 
 + IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic 
 + INTERFACE _ INCLUDE _ DIRECTORIES " $ { SOURCE _ DIR } / src ; $ { BINARY _ DIR } / src " ) 
 + 
 + ExternalProject _ Add _ Step ( realm - core ensure - libraries 
 + DEPENDEES build 
 + BYPRODUCTS $ { core _ lib _ file } 
 + ) 
 + 
 + add _ dependencies ( lib _ realm _ core realm - core ) 
 + endfunction ( ) 
 + 
 + # Add the sync released as the library . 
 + function ( use _ sync _ release enable _ sync sync _ dist _ path ) 
 + # Link to core / sync debug lib for debug build if it is debug build and linking with debug core is enabled . 
 + if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " AND $ { ENABLE _ DEBUG _ CORE } ) 
 + set ( debug _ lib _ suffix " - dbg " ) 
 + add _ compile _ options ( - DREALM _ DEBUG ) 
 + else ( ) 
 + add _ compile _ options ( - DNDEBUG ) 
 + endif ( ) 
 + 
 + # Configure import realm core lib 
 + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - $ { ANDROID _ ABI } $ { debug _ lib _ suffix } . a ) 
 + if ( NOT EXISTS $ { core _ lib _ path } ) 
 + if ( ARMEABI ) 
 + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - arm $ { debug _ lib _ suffix } . a ) 
 + elseif ( ARMEABI _ V7A ) 
 + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - arm - v7a $ { debug _ lib _ suffix } . a ) 
 + elseif ( ARM64 _ V8A ) 
 + set ( core _ lib _ path $ { sync _ dist _ path } / librealm - android - arm64 $ { debug _ lib _ suffix } . a ) 
 + else ( ) 
 + message ( FATAL _ ERROR " Cannot find core lib file : $ { core _ lib _ path } " ) 
 + endif ( ) 
 + endif ( ) 
 + 
 + add _ library ( lib _ realm _ core STATIC IMPORTED ) 
 + 
 + # - latomic is not set by default for mips and armv5 . 
 + # See https : / / code . google . com / p / android / issues / detail ? id = 182094 
 + set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ path } 
 + IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic 
 + INTERFACE _ INCLUDE _ DIRECTORIES " $ { sync _ dist _ path } / include " ) 
 + 
 + if ( enable _ sync ) 
 + # Sync static library 
 + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - $ { ANDROID _ ABI } $ { debug _ lib _ suffix } . a ) 
 + # Workaround for old core ' s funny ABI nicknames 
 + if ( NOT EXISTS $ { sync _ lib _ path } ) 
 + if ( ARMEABI ) 
 + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - arm $ { debug _ lib _ suffix } . a ) 
 + elseif ( ARMEABI _ V7A ) 
 + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - arm - v7a $ { debug _ lib _ suffix } . a ) 
 + elseif ( ARM64 _ V8A ) 
 + set ( sync _ lib _ path $ { sync _ dist _ path } / librealm - sync - android - arm64 $ { debug _ lib _ suffix } . a ) 
 + else ( ) 
 + message ( FATAL _ ERROR " Cannot find sync lib file : $ { sync _ lib _ path } " ) 
 + endif ( ) 
 + endif ( ) 
 + add _ library ( lib _ realm _ sync STATIC IMPORTED ) 
 + set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ path } 
 + IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) 
 + endif ( ) 
 + 
 + set ( REALM _ CORE _ INCLUDE _ DIR " $ { sync _ dist _ path } / include " ) 
 + endfunction ( ) 
 + 
 + # Add core / sync libraries . Set the core _ source _ path to build core from source . 
 + # FIXME : Build from sync source is not supported yet . 
 + function ( use _ realm _ core enable _ sync sync _ dist _ path core _ source _ path ) 
 + if ( core _ source _ path ) 
 + build _ existing _ realm _ core ( $ { core _ source _ path } ) 
 + else ( ) 
 + use _ sync _ release ( $ { enable _ sync } $ { sync _ dist _ path } ) 
 + endif ( ) 
 + endfunction ( ) 
 diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 index 5948d3b . . a33fb11 100644 
 - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt 
 + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 @ @ - 1 , 5 + 1 , 24 @ @ 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # 
 + # Copyright 2017 Realm Inc . 
 + # 
 + # Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + # you may not use this file except in compliance with the License . 
 + # You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 cmake _ minimum _ required ( VERSION 3 . 6 . 0 ) 
 
 + list ( APPEND CMAKE _ MODULE _ PATH " $ { CMAKE _ CURRENT _ SOURCE _ DIR } / CMake " ) 
 + 
 # find javah 
 find _ package ( Java COMPONENTS Development ) 
 if ( NOT Java _ Development _ FOUND ) 
 @ @ - 63 , 56 + 82 , 9 @ @ create _ javah ( TARGET jni _ headers 
 DEPENDS $ { classes _ PATH } 
 ) 
 
 - # Link to core / sync debug lib for debug build if it is debug build and linking with debug core is enabled . 
 - # FIXME : Ideally we should linking to debug core on CI for testing , but the assertions slow down the CI a lot . 
 - if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " AND $ { ENABLE _ DEBUG _ CORE } ) 
 - set ( debug _ lib _ SUFFIX " - dbg " ) 
 - set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DREALM _ DEBUG " ) 
 - else ( ) 
 - set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DNDEBUG " ) 
 - endif ( ) 
 - 
 - # Configure import realm core lib 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) 
 - # Workaround for old core ' s funny ABI nicknames 
 - if ( NOT EXISTS $ { core _ lib _ PATH } ) 
 - if ( ARMEABI ) 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm $ { debug _ lib _ SUFFIX } . a ) 
 - elseif ( ARMEABI _ V7A ) 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) 
 - elseif ( ARM64 _ V8A ) 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm64 $ { debug _ lib _ SUFFIX } . a ) 
 - else ( ) 
 - message ( FATAL _ ERROR " Cannot find core lib file : $ { core _ lib _ PATH } " ) 
 - endif ( ) 
 - endif ( ) 
 - 
 - add _ library ( lib _ realm _ core STATIC IMPORTED ) 
 - 
 - # - latomic is not set by default for mips and armv5 . 
 - # See https : / / code . google . com / p / android / issues / detail ? id = 182094 
 - set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PATH } 
 - IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic ) 
 + include ( RealmCore ) 
 
 - if ( build _ SYNC ) 
 - # Sync static library 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) 
 - # Workaround for old core ' s funny ABI nicknames 
 - if ( NOT EXISTS $ { sync _ lib _ PATH } ) 
 - if ( ARMEABI ) 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm $ { debug _ lib _ SUFFIX } . a ) 
 - elseif ( ARMEABI _ V7A ) 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) 
 - elseif ( ARM64 _ V8A ) 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm64 $ { debug _ lib _ SUFFIX } . a ) 
 - else ( ) 
 - message ( FATAL _ ERROR " Cannot find sync lib file : $ { sync _ lib _ PATH } " ) 
 - endif ( ) 
 - endif ( ) 
 - add _ library ( lib _ realm _ sync STATIC IMPORTED ) 
 - set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ PATH } 
 - IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) 
 - endif ( ) 
 + use _ realm _ core ( $ { build _ SYNC } " $ { REALM _ CORE _ DIST _ DIR } " " $ { CORE _ SOURCE _ PATH } " ) 
 
 # Download openssl lib 
 # string ( TOLOWER " $ { CMAKE _ BUILD _ TYPE } " openssl _ build _ TYPE ) 
 @ @ - 136 , 7 + 108 , 7 @ @ get _ target _ property ( crypto _ LIB crypto IMPORTED _ LOCATION ) 
 get _ target _ property ( ssl _ LIB ssl IMPORTED _ LOCATION ) 
 
 # build application ' s shared lib 
 - include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include 
 + include _ directories ( 
 $ { CMAKE _ SOURCE _ DIR } 
 $ { jni _ headers _ PATH } 
 $ { CMAKE _ SOURCE _ DIR } / object - store / src )

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 index dadf564 . . 5b84b34 100644 
 - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt 
 + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 @ @ - 77 , 7 + 77 , 11 @ @ if ( NOT EXISTS $ { core _ lib _ PATH } ) 
 endif ( ) 
 
 add _ library ( lib _ realm _ core STATIC IMPORTED ) 
 - set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PATH } ) 
 + 
 + # - latomic is not set by default for mips and armv5 . 
 + # See https : / / code . google . com / p / android / issues / detail ? id = 182094 
 + set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PATH } 
 + IMPORTED _ LINK _ INTERFACE _ LIBRARIES atomic ) 
 
 # Sync static library 
 set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } . a ) 
 @ @ - 94 , 7 + 98 , 8 @ @ if ( NOT EXISTS $ { sync _ lib _ PATH } ) 
 endif ( ) 
 endif ( ) 
 add _ library ( lib _ realm _ sync STATIC IMPORTED ) 
 - set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ PATH } ) 
 + set _ target _ properties ( lib _ realm _ sync PROPERTIES IMPORTED _ LOCATION $ { sync _ lib _ PATH } 
 + IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) 
 
 # build application ' s shared lib 
 include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include 
 @ @ - 172 , 12 + 177 , 11 @ @ endif ( ) 
 
 add _ library ( realm - jni SHARED $ { jni _ SRC } $ { objectstore _ SRC } $ { objectstore _ sync _ SRC } ) 
 add _ dependencies ( realm - jni jni _ headers ) 
 - # - latomic is not set by default for mips . See https : / / code . google . com / p / android / issues / detail ? id = 182094 
 + 
 if ( build _ SYNC ) 
 - # FIXME : The order matters ! lib _ realm _ sync needs to be in front of lib _ realm _ core ! ! Find out why ! ! 
 - target _ link _ libraries ( realm - jni log android atomic lib _ realm _ sync lib _ realm _ core ) 
 + target _ link _ libraries ( realm - jni log android lib _ realm _ sync ) 
 else ( ) 
 - target _ link _ libraries ( realm - jni log android atomic lib _ realm _ core ) 
 + target _ link _ libraries ( realm - jni log android lib _ realm _ core ) 
 endif ( ) 
 
 # Strip the release so files and backup the unstripped versions 
 diff - - git a / version . txt b / version . txt 
 index 1097648 . . 855ff95 100644 
 - - - a / version . txt 
 + + + b / version . txt 
 @ @ - 1 , 2 + 1 @ @ 
 - 
 - 2 . 4 . 0 - SNAPSHOT 
 + 2 . 4 . 0 - SNAPSHOT 
 \ No newline at end of file
