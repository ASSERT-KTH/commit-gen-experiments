BLEU SCORE: 0.08116697886877475

TEST MSG: Fix warning message in test case
GENERATED MSG: fix unstable test

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> index 69bba49 . . c0502c6 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> @ @ - 243 , 7 + 243 , 7 @ @ public class RealmAsyncQueryTests { <nl> public void onError ( Throwable error ) { <nl> / / Ensure we are giving developers quality messages in the logs . <nl> assertTrue ( testLogger . message . contains ( <nl> - " Exception has been throw : Can ' t commit a non - existing write transaction " ) ) ; <nl> + " Exception has been thrown : Can ' t commit a non - existing write transaction " ) ) ; <nl> assertTrue ( error instanceof IllegalStateException ) ; <nl> RealmLog . remove ( testLogger ) ; <nl> looperThread . testComplete ( ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> index 1c6b78e . . e61a93c 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> @ @ - 1125 , 7 + 1125 , 7 @ @ public class RealmAsyncQueryTests { <nl> public boolean onInterceptInMessage ( int what ) { <nl> switch ( what ) { <nl> case HandlerControllerConstants . COMPLETED _ ASYNC _ REALM _ RESULTS : { <nl> - if ( numberOfIntercept . incrementAndGet ( ) = = 1 ) { <nl> + if ( numberOfIntercept . incrementAndGet ( ) = = 2 / * 2 queries are both completed * / ) { <nl> / / 6 . The first time the async queries complete we start an update from <nl> / / another background thread . This will cause queries to rerun when the <nl> / / background thread notifies this thread .

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 index 69bba49 . . c0502c6 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 @ @ - 243 , 7 + 243 , 7 @ @ public class RealmAsyncQueryTests { 
 public void onError ( Throwable error ) { 
 / / Ensure we are giving developers quality messages in the logs . 
 assertTrue ( testLogger . message . contains ( 
 - " Exception has been throw : Can ' t commit a non - existing write transaction " ) ) ; 
 + " Exception has been thrown : Can ' t commit a non - existing write transaction " ) ) ; 
 assertTrue ( error instanceof IllegalStateException ) ; 
 RealmLog . remove ( testLogger ) ; 
 looperThread . testComplete ( ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 index 1c6b78e . . e61a93c 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 @ @ - 1125 , 7 + 1125 , 7 @ @ public class RealmAsyncQueryTests { 
 public boolean onInterceptInMessage ( int what ) { 
 switch ( what ) { 
 case HandlerControllerConstants . COMPLETED _ ASYNC _ REALM _ RESULTS : { 
 - if ( numberOfIntercept . incrementAndGet ( ) = = 1 ) { 
 + if ( numberOfIntercept . incrementAndGet ( ) = = 2 / * 2 queries are both completed * / ) { 
 / / 6 . The first time the async queries complete we start an update from 
 / / another background thread . This will cause queries to rerun when the 
 / / background thread notifies this thread .
