BLEU SCORE: 0.02132081946882163

TEST MSG: Core updated to 0 . 95 . 0
GENERATED MSG: Checking to see if a transaction is currently in progress for sync and async transaction pathways .

TEST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 853a1cf . . 2f98372 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 11 + 1 , 14 @ @ <nl> 0 . 85 . 0 <nl> + * BREAKING CHANGE : Removed RealmEncryptionNotSupportedException since the encryption implementation changed in Realms underlying storage engine . Encryption is now supported on all devices . <nl> * BREAKING CHANGE : Realm . executeTransaction ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # 1682 ) . <nl> + * BREAKING CHANGE : RealmQuery . isNull ( ) and RealmQuery . isNotNull ( ) now throw IllegalArgumentException instead of RealmError if the fieldname is a linked field and the last element is a link ( # 1693 ) . <nl> * Added Realm . isEmpty ( ) . <nl> - * RealmQuery . isNull ( ) and RealmQuery . isNotNull ( ) now throw IllegalArgumentException instead of RealmError if the fieldname is a linked field and the last element is a link ( # 1693 ) . <nl> * Setters in managed object for RealmObject and RealmList now throw IllegalArgumentException if the value contains an invalid ( standalone , removed , closed , from different Realm ) object ( # 1749 ) . <nl> * Attempting to refresh a Realm while a transaction is in process will now throw an IllegalStateException ( # 1712 ) . <nl> * The Realm AAR now also contains the ProGuard configuration ( # 1767 ) . ( Thank you @ skyisle ) <nl> - <nl> + * Updated Realm Core to 0 . 95 <nl> + - Removed reliance on POSIX signals when using encryption . <nl> + <nl> 0 . 84 . 2 <nl> * Fixed a bug making it impossible to convert a field to become required during a migration ( # 1695 ) . <nl> * Fixed a bug making it impossible to read Realms created using primary keys and created by iOS
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 9a678d1 . . 853a1cf 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 8 + 1 , 9 @ @ <nl> 0 . 85 . 0 <nl> + * BREAKING CHANGE : Realm . executeTransaction ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # 1682 ) . <nl> * Added Realm . isEmpty ( ) . <nl> * RealmQuery . isNull ( ) and RealmQuery . isNotNull ( ) now throw IllegalArgumentException instead of RealmError if the fieldname is a linked field and the last element is a link ( # 1693 ) . <nl> * Setters in managed object for RealmObject and RealmList now throw IllegalArgumentException if the value contains an invalid ( standalone , removed , closed , from different Realm ) object ( # 1749 ) . <nl> - * Attempting to refresh a Realm while a transaction is in process will now throw an IllegalStateException ( # 1712 ) <nl> + * Attempting to refresh a Realm while a transaction is in process will now throw an IllegalStateException ( # 1712 ) . <nl> * The Realm AAR now also contains the ProGuard configuration

TEST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 853a1cf . . 2f98372 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 11 + 1 , 14 @ @ 
 0 . 85 . 0 
 + * BREAKING CHANGE : Removed RealmEncryptionNotSupportedException since the encryption implementation changed in Realms underlying storage engine . Encryption is now supported on all devices . 
 * BREAKING CHANGE : Realm . executeTransaction ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # 1682 ) . 
 + * BREAKING CHANGE : RealmQuery . isNull ( ) and RealmQuery . isNotNull ( ) now throw IllegalArgumentException instead of RealmError if the fieldname is a linked field and the last element is a link ( # 1693 ) . 
 * Added Realm . isEmpty ( ) . 
 - * RealmQuery . isNull ( ) and RealmQuery . isNotNull ( ) now throw IllegalArgumentException instead of RealmError if the fieldname is a linked field and the last element is a link ( # 1693 ) . 
 * Setters in managed object for RealmObject and RealmList now throw IllegalArgumentException if the value contains an invalid ( standalone , removed , closed , from different Realm ) object ( # 1749 ) . 
 * Attempting to refresh a Realm while a transaction is in process will now throw an IllegalStateException ( # 1712 ) . 
 * The Realm AAR now also contains the ProGuard configuration ( # 1767 ) . ( Thank you @ skyisle ) 
 - 
 + * Updated Realm Core to 0 . 95 
 + - Removed reliance on POSIX signals when using encryption . 
 + 
 0 . 84 . 2 
 * Fixed a bug making it impossible to convert a field to become required during a migration ( # 1695 ) . 
 * Fixed a bug making it impossible to read Realms created using primary keys and created by iOS

NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 9a678d1 . . 853a1cf 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 8 + 1 , 9 @ @ 
 0 . 85 . 0 
 + * BREAKING CHANGE : Realm . executeTransaction ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # 1682 ) . 
 * Added Realm . isEmpty ( ) . 
 * RealmQuery . isNull ( ) and RealmQuery . isNotNull ( ) now throw IllegalArgumentException instead of RealmError if the fieldname is a linked field and the last element is a link ( # 1693 ) . 
 * Setters in managed object for RealmObject and RealmList now throw IllegalArgumentException if the value contains an invalid ( standalone , removed , closed , from different Realm ) object ( # 1749 ) . 
 - * Attempting to refresh a Realm while a transaction is in process will now throw an IllegalStateException ( # 1712 ) 
 + * Attempting to refresh a Realm while a transaction is in process will now throw an IllegalStateException ( # 1712 ) . 
 * The Realm AAR now also contains the ProGuard configuration
