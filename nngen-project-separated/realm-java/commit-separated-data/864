BLEU SCORE: 0.037477767366779206

TEST MSG: Applying code review recommendations and adding removed from Realm tests .
GENERATED MSG: Remove generic parameter from RealmObject

TEST DIFF (one line): diff - - git a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> index e25cdd0 . . 6349e14 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> @ @ - 178 , 15 + 178 , 15 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsAttached <nl> } <nl> <nl> JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeFind <nl> - ( JNIEnv * env , jobject , jlong nativeLinkViewPtr , jlong rowIndex ) <nl> + ( JNIEnv * env , jobject , jlong nativeLinkViewPtr , jlong targetRowIndex ) <nl> { <nl> TR _ ENTER _ PTR ( nativeLinkViewPtr ) <nl> try { <nl> LinkView * lv = LV ( nativeLinkViewPtr ) ; <nl> - if ( ! ROW _ INDEX _ VALID ( env , lv , rowIndex ) ) { <nl> + if ( ! ROW _ INDEX _ VALID ( env , & lv - > get _ target _ table ( ) , targetRowIndex ) ) { <nl> return - 1 ; <nl> } <nl> - size _ t ndx = lv - > find ( rowIndex ) ; <nl> + size _ t ndx = lv - > find ( targetRowIndex ) ; <nl> return to _ jlong _ or _ not _ found ( ndx ) ; <nl> } CATCH _ STD ( ) <nl> return - 1 ; <nl> diff - - git a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp <nl> index 9853b48 . . 71e7f5c 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp <nl> @ @ - 1017 , 14 + 1017 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeSync ( <nl> } <nl> <nl> JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeFindBySourceNdx <nl> - ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong rowIndex ) <nl> + ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong sourceIndex ) <nl> { <nl> TR _ ENTER _ PTR ( nativeViewPtr ) ; <nl> try { <nl> - if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! ROW _ INDEX _ VALID ( env , & ( TV ( nativeViewPtr ) - > get _ parent ( ) ) , rowIndex ) ) <nl> + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! ROW _ INDEX _ VALID ( env , & ( TV ( nativeViewPtr ) - > get _ parent ( ) ) , sourceIndex ) ) <nl> return - 1 ; <nl> <nl> - size _ t ndx = TV ( nativeViewPtr ) - > find _ by _ source _ ndx ( rowIndex ) ; <nl> + size _ t ndx = TV ( nativeViewPtr ) - > find _ by _ source _ ndx ( sourceIndex ) ; <nl> return to _ jlong _ or _ not _ found ( ndx ) ; <nl> } CATCH _ STD ( ) <nl> return - 1 ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java <nl> index 093d580 . . 2432a66 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java <nl> @ @ - 141 , 7 + 141 , 7 @ @ public class RealmListTest extends AndroidTestCase { <nl> public void testAddManagedObject _ nonManagedMode ( ) { <nl> RealmList < AllTypes > list = new RealmList < AllTypes > ( ) ; <nl> testRealm . beginTransaction ( ) ; <nl> - AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; <nl> + AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; <nl> testRealm . commitTransaction ( ) ; <nl> list . add ( managedAllTypes ) ; <nl> <nl> @ @ - 751 , 7 + 751 , 8 @ @ public class RealmListTest extends AndroidTestCase { <nl> } <nl> <nl> / * * <nl> - * This test requires an additional Realm to test against . <nl> + * Test that the { @ link Realm # contains ( Class ) } method of one Realm will not contain a <nl> + * { @ link RealmObject } from another Realm . <nl> * / <nl> public void testContainsDoesNotContainAnItem ( ) { <nl> RealmConfiguration realmConfig = TestHelper . createConfiguration ( getContext ( ) , " contains _ test . realm " ) ; <nl> @ @ - 778 , 12 + 779 , 22 @ @ public class RealmListTest extends AndroidTestCase { <nl> assertFalse ( " Should not be able to find one object in another Realm via contains " , <nl> owner1 . getDogs ( ) . contains ( dog2 ) ) ; <nl> } finally { <nl> - if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { <nl> + if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { <nl> testRealmTwo . close ( ) ; <nl> } <nl> } <nl> } <nl> <nl> + public void testRealmShouldNotContainDeletedRealmObject ( ) { <nl> + Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; <nl> + RealmList < Dog > dogs = owner . getDogs ( ) ; <nl> + Dog dog1 = dogs . get ( 0 ) ; <nl> + testRealm . beginTransaction ( ) ; <nl> + dog1 . removeFromRealm ( ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + assertFalse ( " Should not contain a deleted RealmObject " , dogs . contains ( dog1 ) ) ; <nl> + } <nl> + <nl> / / Test that all methods that require a transaction ( ie . any function that mutates Realm data ) <nl> public void testMutableMethodsOutsideTransactions ( ) { <nl> testRealm . beginTransaction ( ) ; <nl> @ @ - 837 , 7 + 848 , 7 @ @ public class RealmListTest extends AndroidTestCase { <nl> break ; <nl> case METHOD _ MOVE : <nl> list . add ( new Dog ( ) ) ; <nl> - list . move ( 0 , 1 ) ; <nl> + list . move ( 0 , 1 ) ; <nl> break ; <nl> case METHOD _ REMOVE : <nl> list . remove ( 0 ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java <nl> index d74d6f1 . . bfb8e20 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java <nl> @ @ - 91 , 7 + 91 , 7 @ @ public class RealmResultsTest extends AndroidTestCase { <nl> } <nl> <nl> <nl> - private void populatePartialNullRowsForNumericTesting ( ) { <nl> + private void populatePartialNullRowsForNumericTesting ( ) { <nl> NullTypes nullTypes1 = new NullTypes ( ) ; <nl> nullTypes1 . setId ( 1 ) ; <nl> nullTypes1 . setFieldIntegerNull ( 1 ) ; <nl> @ @ - 879 , 6 + 879 , 15 @ @ public class RealmResultsTest extends AndroidTestCase { <nl> assertFalse ( " Should not contain a null item . " , query . findAll ( ) . contains ( null ) ) ; <nl> } <nl> <nl> + public void testShouldNotContainRemovedItem ( ) { <nl> + RealmQuery < AllTypes > query = testRealm . where ( AllTypes . class ) . findAll ( ) . where ( ) ; <nl> + AllTypes item = testRealm . where ( AllTypes . class ) . findFirst ( ) ; <nl> + testRealm . beginTransaction ( ) ; <nl> + item . removeFromRealm ( ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + assertFalse ( " Should not contain a removed item . " , query . findAll ( ) . contains ( item ) ) ; <nl> + } <nl> + <nl> / * * <nl> * Test to see if a particular item that does exist in the same Realm does not <nl> * exist in the result set of another query . <nl> @ @ - 924 , 9 + 933 , 9 @ @ public class RealmResultsTest extends AndroidTestCase { <nl> <nl> assertFalse ( " Should not be able to find one object in another Realm via RealmResults # contains " , <nl> testRealm . where ( AllTypes . class ) . findAll ( ) . contains ( item ) ) ; <nl> - <nl> + <nl> } finally { <nl> - if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { <nl> + if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { <nl> testRealmTwo . close ( ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> index 638aec5 . . 3d59d7d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> import io . realm . exceptions . RealmException ; <nl> + import io . realm . internal . InvalidRow ; <nl> import io . realm . internal . LinkView ; <nl> <nl> / * * <nl> @ @ - 382 , 14 + 383 , 14 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { <nl> } <nl> <nl> / * * <nl> - * Returns true if the list contains the specified element , when attached to a Realm . This <nl> + * Returns true if the list contains the specified element when attached to a Realm . This <nl> * method will query the native Realm core engine to quickly find the specified element . <nl> * <nl> - * If this list is not attached to a Realm , the default { @ link List # contains ( Object ) } <nl> - * operation will occur . <nl> + * If this list is not attached to a Realm the default { @ link List # contains ( Object ) } <nl> + * implementation will occur . <nl> * <nl> - * @ param object The element whose presence in this list is to be tested . <nl> - * @ return { @ code true } if this list contains the specified element , otherwise { @ code false } . <nl> + * @ param object the element whose presence in this list is to be tested . <nl> + * @ return { @ code true } if this list contains the specified element otherwise { @ code false } . <nl> * / <nl> @ Override <nl> public boolean contains ( Object object ) { <nl> @ @ - 397 , 9 + 398 , 7 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { <nl> if ( managedMode ) { <nl> if ( object instanceof RealmObject ) { <nl> RealmObject realmObject = ( RealmObject ) object ; <nl> - if ( realmObject . row = = null | | ! realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) ) { <nl> - contains = false ; <nl> - } else { <nl> + if ( realmObject . row ! = null & & realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) & & realmObject . row ! = InvalidRow . INSTANCE ) { <nl> contains = view . contains ( realmObject . row . getIndex ( ) ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 5df7df3 . . 75af14a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . Future ; <nl> <nl> import io . realm . exceptions . RealmException ; <nl> + import io . realm . internal . InvalidRow ; <nl> import io . realm . internal . TableOrView ; <nl> import io . realm . internal . TableQuery ; <nl> import io . realm . internal . TableView ; <nl> @ @ - 155 , 19 + 156 , 17 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> / * * <nl> * Searches this { @ link RealmResults } for the specified object . <nl> * <nl> - * @ param object The object to search for . <nl> + * @ param object the object to search for . <nl> * @ return { @ code true } if { @ code object } is an element of this { @ code RealmResults } , <nl> * { @ code false } otherwise <nl> * / <nl> @ Override <nl> public boolean contains ( Object object ) { <nl> boolean contains = false ; <nl> - if ( isLoaded ( ) ) { <nl> + if ( isLoaded ( ) ) { <nl> if ( object instanceof RealmObject ) { <nl> RealmObject realmObject = ( RealmObject ) object ; <nl> - if ( realmObject . row = = null | | ! realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) ) { <nl> - contains = false ; <nl> - } else { <nl> + if ( realmObject . row ! = null & & realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) & & realmObject . row ! = InvalidRow . INSTANCE ) { <nl> contains = ( table . sourceRowIndex ( realmObject . row . getIndex ( ) ) ! = TableOrView . NO _ MATCH ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / LinkView . java b / realm / realm - library / src / main / java / io / realm / internal / LinkView . java <nl> index ee274d4 . . fb7322b 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / LinkView . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / LinkView . java <nl> @ @ - 164 , 5 + 164 , 5 @ @ public class LinkView extends NativeObject { <nl> private native boolean nativeIsEmpty ( long nativeLinkViewPtr ) ; <nl> protected native long nativeWhere ( long nativeLinkViewPtr ) ; <nl> private native boolean nativeIsAttached ( long nativeLinkViewPtr ) ; <nl> - private native long nativeFind ( long nativeLinkViewPtr , long rowIndex ) ; <nl> + private native long nativeFind ( long nativeLinkViewPtr , long targetRowIndex ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index 008e918 . . 7987364 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 1144 , 7 + 1144 , 7 @ @ public class Table implements TableOrView , TableSchema , Closeable { <nl> * This interface method allows for contains ( ) usage in the { @ link TableView } class . <nl> * See { @ link TableView # sourceRowIndex ( long ) } for more information . <nl> * <nl> - * @ param rowIndex The index of the row . <nl> + * @ param rowIndex the index of the row . <nl> * @ return the row index . <nl> * / <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java b / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java <nl> index 925f30e . . 2dc6ce7 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java <nl> @ @ - 344 , 8 + 344 , 8 @ @ public interface TableOrView { <nl> / * * <nl> * Find a row with in the table or view with the given index . <nl> * <nl> - * @ param rowIndex The index of the row . <nl> - * @ return The index if found , or - 1 for not found . <nl> + * @ param rowIndex the index of the row . <nl> + * @ return the index if found , or - 1 for not found . <nl> * / <nl> long sourceRowIndex ( long rowIndex ) ; <nl>
NEAREST DIFF (one line): diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md <nl> index 3f33bfa . . ea203c2 100644 <nl> - - - a / examples / rxJavaExample / README . md <nl> + + + b / examples / rxJavaExample / README . md <nl> @ @ - 5 , 13 + 5 , 17 @ @ <nl> - Observables might have a default Scheduler they operate on that is <nl> different than the one the RealmObject was created on . <nl> <nl> - - RealmObjects auto - update . Observables that operate on multiple " versions " <nl> + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " <nl> will most likely not work as expected . <nl> <nl> - Retrofit automatically offload to a worker thread . <nl> <nl> - Use Realm async API instead of subscribeOn to offload Realm work . <nl> <nl> + - You can use Realm . copyFromRealm to make a copy of Realm data <nl> + <nl> + <nl> + <nl> <nl> # # Resources ( TODO ) <nl> - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> index 12a0c4a . . ff099ad 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> realm . commitTransaction ( ) ; <nl> <nl> final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> assertTrue ( rxObject = = obj ) ; <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> final AllTypes obj = realm . createObject ( AllTypes . class ) ; <nl> realm . commitTransaction ( ) ; <nl> <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> subscriberCalled . addAndGet ( 1 ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index a3e5103 . . 4e420ec 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; <nl> import java . lang . ref . WeakReference ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> - import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> - import java . util . Set ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> - import java . util . concurrent . CopyOnWriteArraySet ; <nl> <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> import io . realm . internal . SharedGroupManager ; <nl> @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; <nl> import io . realm . internal . android . ReleaseAndroidLogger ; <nl> import io . realm . internal . async . RealmThreadPoolExecutor ; <nl> import io . realm . internal . log . RealmLog ; <nl> - import io . realm . rx . RxObservableFactory ; <nl> import rx . Observable ; <nl> <nl> / * * <nl> @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; <nl> * @ see io . realm . Realm <nl> * @ see io . realm . DynamicRealm <nl> * / <nl> - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { <nl> protected static final long UNVERSIONED = - 1 ; <nl> private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; <nl> private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; <nl> @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> + public Observable < T > observable ( ) { <nl> + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index f979667 . . 627ac4a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; <nl> * @ see Realm <nl> * @ see RealmSchema <nl> * / <nl> - public final class DynamicRealm extends BaseRealm { <nl> + public final class DynamicRealm extends BaseRealm < DynamicRealm > { <nl> <nl> private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { <nl> super ( configuration , autoRefresh ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 40ad05a . . 318e9e9 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; <nl> * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . <nl> * Using a DynamicRealmObject is slower than using the regular RealmObject class . <nl> * / <nl> - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { <nl> + public final class DynamicRealmObject extends RealmObject { <nl> <nl> / * * <nl> * Creates a dynamic Realm object based on an existing object . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> index 5283cb5 . . 24824b6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { <nl> * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . <nl> * @ return the { @ link Realm } or { @ link DynamicRealm } instance . <nl> * / <nl> - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> Class < E > realmClass ) { <nl> boolean isCacheInMap = true ; <nl> RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index 3978bfc . . 34960d0 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; <nl> * / <nl> <nl> @ RealmClass <nl> - public abstract class RealmObject < E extends RealmObject > { <nl> + public abstract class RealmObject { <nl> <nl> protected Row row ; <nl> protected BaseRealm realm ; <nl> @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { <nl> + if ( ! this . getClass ( ) . isInstance ( type ) ) { <nl> + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; <nl> + } <nl> return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index 89274ba . . fde3390 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { <nl> * @ return the object found or { @ code null } if no object matches the query conditions . <nl> * @ see io . realm . RealmObject <nl> * / <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E findFirst ( ) { <nl> checkQueryIsNotReused ( ) ; <nl> long rowIndex = this . query . find ( ) ; <nl> if ( rowIndex > = 0 ) { <nl> - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> } else { <nl> return null ; <nl> } <nl> } <nl> <nl> - / / FIXME Replace with Schema when it is available <nl> - private static class DynamicColumnMap implements Map < String , Long > { <nl> - private final Table table ; <nl> - <nl> - public DynamicColumnMap ( Table table ) { <nl> - this . table = table ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long get ( Object key ) { <nl> - return table . getColumnIndex ( ( String ) key ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void clear ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsKey ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsValue ( Object value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < Entry < String , Long > > entrySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean isEmpty ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < String > keySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long put ( String key , Long value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void putAll ( Map < ? extends String , ? extends Long > map ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long remove ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int size ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Collection < Long > values ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - } <nl> - <nl> / * * <nl> * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread <nl> * This method is only available from a Looper thread . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index db09759 . . 3629486 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . <nl> * / <nl> @ Override <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E get ( int location ) { <nl> E obj ; <nl> realm . checkIfValid ( ) ; <nl> TableOrView table = getTable ( ) ; <nl> if ( table instanceof TableView ) { <nl> - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> } else { <nl> - obj = ( E ) realm . get ( classSpec , className , location ) ; <nl> + obj = realm . get ( classSpec , className , location ) ; <nl> } <nl> <nl> return obj ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> index 718e705 . . 940f217 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { <nl> @ Override <nl> @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> checkRxJavaAvailable ( ) ; <nl> throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { <nl> + public < E extends RealmObject > Observable < E > from ( final E object ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < E > ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> index 0984f85 . . 14fd548 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { <nl> * @ param results RealmResults to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> <nl> / * * <nl> * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each <nl> @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { <nl> * @ param list RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> <nl> <nl> / * * <nl> @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { <nl> * @ param object RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < E > from ( E object ) ; <nl> + < E extends RealmObject > Observable < E > from ( E object ) ; <nl> }

TEST DIFF:
diff - - git a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 index e25cdd0 . . 6349e14 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 @ @ - 178 , 15 + 178 , 15 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsAttached 
 } 
 
 JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeFind 
 - ( JNIEnv * env , jobject , jlong nativeLinkViewPtr , jlong rowIndex ) 
 + ( JNIEnv * env , jobject , jlong nativeLinkViewPtr , jlong targetRowIndex ) 
 { 
 TR _ ENTER _ PTR ( nativeLinkViewPtr ) 
 try { 
 LinkView * lv = LV ( nativeLinkViewPtr ) ; 
 - if ( ! ROW _ INDEX _ VALID ( env , lv , rowIndex ) ) { 
 + if ( ! ROW _ INDEX _ VALID ( env , & lv - > get _ target _ table ( ) , targetRowIndex ) ) { 
 return - 1 ; 
 } 
 - size _ t ndx = lv - > find ( rowIndex ) ; 
 + size _ t ndx = lv - > find ( targetRowIndex ) ; 
 return to _ jlong _ or _ not _ found ( ndx ) ; 
 } CATCH _ STD ( ) 
 return - 1 ; 
 diff - - git a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp 
 index 9853b48 . . 71e7f5c 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp 
 @ @ - 1017 , 14 + 1017 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeSync ( 
 } 
 
 JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeFindBySourceNdx 
 - ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong rowIndex ) 
 + ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong sourceIndex ) 
 { 
 TR _ ENTER _ PTR ( nativeViewPtr ) ; 
 try { 
 - if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! ROW _ INDEX _ VALID ( env , & ( TV ( nativeViewPtr ) - > get _ parent ( ) ) , rowIndex ) ) 
 + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! ROW _ INDEX _ VALID ( env , & ( TV ( nativeViewPtr ) - > get _ parent ( ) ) , sourceIndex ) ) 
 return - 1 ; 
 
 - size _ t ndx = TV ( nativeViewPtr ) - > find _ by _ source _ ndx ( rowIndex ) ; 
 + size _ t ndx = TV ( nativeViewPtr ) - > find _ by _ source _ ndx ( sourceIndex ) ; 
 return to _ jlong _ or _ not _ found ( ndx ) ; 
 } CATCH _ STD ( ) 
 return - 1 ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java 
 index 093d580 . . 2432a66 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTest . java 
 @ @ - 141 , 7 + 141 , 7 @ @ public class RealmListTest extends AndroidTestCase { 
 public void testAddManagedObject _ nonManagedMode ( ) { 
 RealmList < AllTypes > list = new RealmList < AllTypes > ( ) ; 
 testRealm . beginTransaction ( ) ; 
 - AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; 
 + AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; 
 testRealm . commitTransaction ( ) ; 
 list . add ( managedAllTypes ) ; 
 
 @ @ - 751 , 7 + 751 , 8 @ @ public class RealmListTest extends AndroidTestCase { 
 } 
 
 / * * 
 - * This test requires an additional Realm to test against . 
 + * Test that the { @ link Realm # contains ( Class ) } method of one Realm will not contain a 
 + * { @ link RealmObject } from another Realm . 
 * / 
 public void testContainsDoesNotContainAnItem ( ) { 
 RealmConfiguration realmConfig = TestHelper . createConfiguration ( getContext ( ) , " contains _ test . realm " ) ; 
 @ @ - 778 , 12 + 779 , 22 @ @ public class RealmListTest extends AndroidTestCase { 
 assertFalse ( " Should not be able to find one object in another Realm via contains " , 
 owner1 . getDogs ( ) . contains ( dog2 ) ) ; 
 } finally { 
 - if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { 
 + if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { 
 testRealmTwo . close ( ) ; 
 } 
 } 
 } 
 
 + public void testRealmShouldNotContainDeletedRealmObject ( ) { 
 + Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; 
 + RealmList < Dog > dogs = owner . getDogs ( ) ; 
 + Dog dog1 = dogs . get ( 0 ) ; 
 + testRealm . beginTransaction ( ) ; 
 + dog1 . removeFromRealm ( ) ; 
 + testRealm . commitTransaction ( ) ; 
 + assertFalse ( " Should not contain a deleted RealmObject " , dogs . contains ( dog1 ) ) ; 
 + } 
 + 
 / / Test that all methods that require a transaction ( ie . any function that mutates Realm data ) 
 public void testMutableMethodsOutsideTransactions ( ) { 
 testRealm . beginTransaction ( ) ; 
 @ @ - 837 , 7 + 848 , 7 @ @ public class RealmListTest extends AndroidTestCase { 
 break ; 
 case METHOD _ MOVE : 
 list . add ( new Dog ( ) ) ; 
 - list . move ( 0 , 1 ) ; 
 + list . move ( 0 , 1 ) ; 
 break ; 
 case METHOD _ REMOVE : 
 list . remove ( 0 ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java 
 index d74d6f1 . . bfb8e20 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java 
 @ @ - 91 , 7 + 91 , 7 @ @ public class RealmResultsTest extends AndroidTestCase { 
 } 
 
 
 - private void populatePartialNullRowsForNumericTesting ( ) { 
 + private void populatePartialNullRowsForNumericTesting ( ) { 
 NullTypes nullTypes1 = new NullTypes ( ) ; 
 nullTypes1 . setId ( 1 ) ; 
 nullTypes1 . setFieldIntegerNull ( 1 ) ; 
 @ @ - 879 , 6 + 879 , 15 @ @ public class RealmResultsTest extends AndroidTestCase { 
 assertFalse ( " Should not contain a null item . " , query . findAll ( ) . contains ( null ) ) ; 
 } 
 
 + public void testShouldNotContainRemovedItem ( ) { 
 + RealmQuery < AllTypes > query = testRealm . where ( AllTypes . class ) . findAll ( ) . where ( ) ; 
 + AllTypes item = testRealm . where ( AllTypes . class ) . findFirst ( ) ; 
 + testRealm . beginTransaction ( ) ; 
 + item . removeFromRealm ( ) ; 
 + testRealm . commitTransaction ( ) ; 
 + assertFalse ( " Should not contain a removed item . " , query . findAll ( ) . contains ( item ) ) ; 
 + } 
 + 
 / * * 
 * Test to see if a particular item that does exist in the same Realm does not 
 * exist in the result set of another query . 
 @ @ - 924 , 9 + 933 , 9 @ @ public class RealmResultsTest extends AndroidTestCase { 
 
 assertFalse ( " Should not be able to find one object in another Realm via RealmResults # contains " , 
 testRealm . where ( AllTypes . class ) . findAll ( ) . contains ( item ) ) ; 
 - 
 + 
 } finally { 
 - if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { 
 + if ( testRealmTwo ! = null & & ! testRealmTwo . isClosed ( ) ) { 
 testRealmTwo . close ( ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 index 638aec5 . . 3d59d7d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import java . util . Collections ; 
 import java . util . List ; 
 
 import io . realm . exceptions . RealmException ; 
 + import io . realm . internal . InvalidRow ; 
 import io . realm . internal . LinkView ; 
 
 / * * 
 @ @ - 382 , 14 + 383 , 14 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { 
 } 
 
 / * * 
 - * Returns true if the list contains the specified element , when attached to a Realm . This 
 + * Returns true if the list contains the specified element when attached to a Realm . This 
 * method will query the native Realm core engine to quickly find the specified element . 
 * 
 - * If this list is not attached to a Realm , the default { @ link List # contains ( Object ) } 
 - * operation will occur . 
 + * If this list is not attached to a Realm the default { @ link List # contains ( Object ) } 
 + * implementation will occur . 
 * 
 - * @ param object The element whose presence in this list is to be tested . 
 - * @ return { @ code true } if this list contains the specified element , otherwise { @ code false } . 
 + * @ param object the element whose presence in this list is to be tested . 
 + * @ return { @ code true } if this list contains the specified element otherwise { @ code false } . 
 * / 
 @ Override 
 public boolean contains ( Object object ) { 
 @ @ - 397 , 9 + 398 , 7 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { 
 if ( managedMode ) { 
 if ( object instanceof RealmObject ) { 
 RealmObject realmObject = ( RealmObject ) object ; 
 - if ( realmObject . row = = null | | ! realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) ) { 
 - contains = false ; 
 - } else { 
 + if ( realmObject . row ! = null & & realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) & & realmObject . row ! = InvalidRow . INSTANCE ) { 
 contains = view . contains ( realmObject . row . getIndex ( ) ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 5df7df3 . . 75af14a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . Future ; 
 
 import io . realm . exceptions . RealmException ; 
 + import io . realm . internal . InvalidRow ; 
 import io . realm . internal . TableOrView ; 
 import io . realm . internal . TableQuery ; 
 import io . realm . internal . TableView ; 
 @ @ - 155 , 19 + 156 , 17 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 / * * 
 * Searches this { @ link RealmResults } for the specified object . 
 * 
 - * @ param object The object to search for . 
 + * @ param object the object to search for . 
 * @ return { @ code true } if { @ code object } is an element of this { @ code RealmResults } , 
 * { @ code false } otherwise 
 * / 
 @ Override 
 public boolean contains ( Object object ) { 
 boolean contains = false ; 
 - if ( isLoaded ( ) ) { 
 + if ( isLoaded ( ) ) { 
 if ( object instanceof RealmObject ) { 
 RealmObject realmObject = ( RealmObject ) object ; 
 - if ( realmObject . row = = null | | ! realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) ) { 
 - contains = false ; 
 - } else { 
 + if ( realmObject . row ! = null & & realm . getPath ( ) . equals ( realmObject . realm . getPath ( ) ) & & realmObject . row ! = InvalidRow . INSTANCE ) { 
 contains = ( table . sourceRowIndex ( realmObject . row . getIndex ( ) ) ! = TableOrView . NO _ MATCH ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / LinkView . java b / realm / realm - library / src / main / java / io / realm / internal / LinkView . java 
 index ee274d4 . . fb7322b 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / LinkView . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / LinkView . java 
 @ @ - 164 , 5 + 164 , 5 @ @ public class LinkView extends NativeObject { 
 private native boolean nativeIsEmpty ( long nativeLinkViewPtr ) ; 
 protected native long nativeWhere ( long nativeLinkViewPtr ) ; 
 private native boolean nativeIsAttached ( long nativeLinkViewPtr ) ; 
 - private native long nativeFind ( long nativeLinkViewPtr , long rowIndex ) ; 
 + private native long nativeFind ( long nativeLinkViewPtr , long targetRowIndex ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index 008e918 . . 7987364 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 1144 , 7 + 1144 , 7 @ @ public class Table implements TableOrView , TableSchema , Closeable { 
 * This interface method allows for contains ( ) usage in the { @ link TableView } class . 
 * See { @ link TableView # sourceRowIndex ( long ) } for more information . 
 * 
 - * @ param rowIndex The index of the row . 
 + * @ param rowIndex the index of the row . 
 * @ return the row index . 
 * / 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java b / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java 
 index 925f30e . . 2dc6ce7 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / TableOrView . java 
 @ @ - 344 , 8 + 344 , 8 @ @ public interface TableOrView { 
 / * * 
 * Find a row with in the table or view with the given index . 
 * 
 - * @ param rowIndex The index of the row . 
 - * @ return The index if found , or - 1 for not found . 
 + * @ param rowIndex the index of the row . 
 + * @ return the index if found , or - 1 for not found . 
 * / 
 long sourceRowIndex ( long rowIndex ) ; 


NEAREST DIFF:
diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md 
 index 3f33bfa . . ea203c2 100644 
 - - - a / examples / rxJavaExample / README . md 
 + + + b / examples / rxJavaExample / README . md 
 @ @ - 5 , 13 + 5 , 17 @ @ 
 - Observables might have a default Scheduler they operate on that is 
 different than the one the RealmObject was created on . 
 
 - - RealmObjects auto - update . Observables that operate on multiple " versions " 
 + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " 
 will most likely not work as expected . 
 
 - Retrofit automatically offload to a worker thread . 
 
 - Use Realm async API instead of subscribeOn to offload Realm work . 
 
 + - You can use Realm . copyFromRealm to make a copy of Realm data 
 + 
 + 
 + 
 
 # # Resources ( TODO ) 
 - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 index 12a0c4a . . ff099ad 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 realm . commitTransaction ( ) ; 
 
 final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 assertTrue ( rxObject = = obj ) ; 
 @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 final AllTypes obj = realm . createObject ( AllTypes . class ) ; 
 realm . commitTransaction ( ) ; 
 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 subscriberCalled . addAndGet ( 1 ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index a3e5103 . . 4e420ec 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; 
 import java . lang . ref . WeakReference ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 - import java . util . HashMap ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 - import java . util . Set ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 - import java . util . concurrent . CopyOnWriteArraySet ; 
 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 import io . realm . internal . SharedGroupManager ; 
 @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; 
 import io . realm . internal . android . ReleaseAndroidLogger ; 
 import io . realm . internal . async . RealmThreadPoolExecutor ; 
 import io . realm . internal . log . RealmLog ; 
 - import io . realm . rx . RxObservableFactory ; 
 import rx . Observable ; 
 
 / * * 
 @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; 
 * @ see io . realm . Realm 
 * @ see io . realm . DynamicRealm 
 * / 
 - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { 
 protected static final long UNVERSIONED = - 1 ; 
 private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; 
 private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; 
 @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; 
 + public Observable < T > observable ( ) { 
 + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index f979667 . . 627ac4a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; 
 * @ see Realm 
 * @ see RealmSchema 
 * / 
 - public final class DynamicRealm extends BaseRealm { 
 + public final class DynamicRealm extends BaseRealm < DynamicRealm > { 
 
 private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { 
 super ( configuration , autoRefresh ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 40ad05a . . 318e9e9 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; 
 * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . 
 * Using a DynamicRealmObject is slower than using the regular RealmObject class . 
 * / 
 - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { 
 + public final class DynamicRealmObject extends RealmObject { 
 
 / * * 
 * Creates a dynamic Realm object based on an existing object . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 index 5283cb5 . . 24824b6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { 
 * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . 
 * @ return the { @ link Realm } or { @ link DynamicRealm } instance . 
 * / 
 - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 Class < E > realmClass ) { 
 boolean isCacheInMap = true ; 
 RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index 3978bfc . . 34960d0 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; 
 * / 
 
 @ RealmClass 
 - public abstract class RealmObject < E extends RealmObject > { 
 + public abstract class RealmObject { 
 
 protected Row row ; 
 protected BaseRealm realm ; 
 @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { 
 + if ( ! this . getClass ( ) . isInstance ( type ) ) { 
 + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; 
 + } 
 return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index 89274ba . . fde3390 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { 
 * @ return the object found or { @ code null } if no object matches the query conditions . 
 * @ see io . realm . RealmObject 
 * / 
 - @ SuppressWarnings ( " unchecked " ) 
 public E findFirst ( ) { 
 checkQueryIsNotReused ( ) ; 
 long rowIndex = this . query . find ( ) ; 
 if ( rowIndex > = 0 ) { 
 - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 } else { 
 return null ; 
 } 
 } 
 
 - / / FIXME Replace with Schema when it is available 
 - private static class DynamicColumnMap implements Map < String , Long > { 
 - private final Table table ; 
 - 
 - public DynamicColumnMap ( Table table ) { 
 - this . table = table ; 
 - } 
 - 
 - @ Override 
 - public Long get ( Object key ) { 
 - return table . getColumnIndex ( ( String ) key ) ; 
 - } 
 - 
 - @ Override 
 - public void clear ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsKey ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsValue ( Object value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < Entry < String , Long > > entrySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean isEmpty ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < String > keySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long put ( String key , Long value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public void putAll ( Map < ? extends String , ? extends Long > map ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long remove ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public int size ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Collection < Long > values ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - } 
 - 
 / * * 
 * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread 
 * This method is only available from a Looper thread . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index db09759 . . 3629486 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . 
 * / 
 @ Override 
 - @ SuppressWarnings ( " unchecked " ) 
 public E get ( int location ) { 
 E obj ; 
 realm . checkIfValid ( ) ; 
 TableOrView table = getTable ( ) ; 
 if ( table instanceof TableView ) { 
 - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 } else { 
 - obj = ( E ) realm . get ( classSpec , className , location ) ; 
 + obj = realm . get ( classSpec , className , location ) ; 
 } 
 
 return obj ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 index 718e705 . . 940f217 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { 
 @ Override 
 @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 checkRxJavaAvailable ( ) ; 
 throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { 
 + public < E extends RealmObject > Observable < E > from ( final E object ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < E > ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 index 0984f85 . . 14fd548 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { 
 * @ param results RealmResults to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 
 / * * 
 * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each 
 @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { 
 * @ param list RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 
 
 / * * 
 @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { 
 * @ param object RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < E > from ( E object ) ; 
 + < E extends RealmObject > Observable < E > from ( E object ) ; 
 }
