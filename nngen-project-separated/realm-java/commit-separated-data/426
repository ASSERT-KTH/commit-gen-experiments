BLEU SCORE: 0.029381754016308166

TEST MSG: Fix various minor issues
GENERATED MSG: reattach when BindingContext : : before _ notify

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java <nl> index d2a64b2 . . 8e28585 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java <nl> @ @ - 39 , 22 + 39 , 6 @ @ public class TableIndexAndDistinctTest extends TestCase { <nl> assertEquals ( 7 , table . size ( ) ) ; <nl> } <nl> <nl> - / / FIXME : Check or delete this . <nl> - / / TODO : parametric test <nl> - / * * / / * * <nl> - * Should throw exception if trying to get distinct on columns where index has not been set <nl> - * @ param index <nl> - * / / * <nl> - <nl> - @ Test ( expectedExceptions = UnsupportedOperationException . class , dataProvider = " columnIndex " ) <nl> - public void shouldTestDistinctErrorWhenNoIndex ( Long index ) { <nl> - <nl> - / / Get a table with all available column types <nl> - Table t = TestHelper . getTableWithAllColumnTypes ( ) ; <nl> - <nl> - TableView view = table . getDistinctView ( 1 ) ; <nl> - } * / <nl> - <nl> / * * <nl> * Check that Index can be set on multiple columns , with the String <nl> * @ param <nl> diff - - git a / realm / realm - library / src / main / cpp / util . hpp b / realm / realm - library / src / main / cpp / util . hpp <nl> index 38d7c11 . . e437ee3 100644 <nl> - - - a / realm / realm - library / src / main / cpp / util . hpp <nl> + + + b / realm / realm - library / src / main / cpp / util . hpp <nl> @ @ - 556 , 9 + 556 , 9 @ @ public : <nl> JniArrayOfArrays ( JNIEnv * env , jobjectArray javaArray ) <nl> : m _ env ( env ) <nl> , m _ javaArray ( javaArray ) <nl> - , m _ arrayLength ( javaArray = = NULL ? 0 : env - > GetArrayLength ( javaArray ) ) <nl> + , m _ arrayLength ( javaArray = = nullptr ? 0 : env - > GetArrayLength ( javaArray ) ) <nl> { <nl> - for ( int i = 0 ; i < m _ arrayLength ; i + + ) { <nl> + for ( int i = 0 ; i < m _ arrayLength ; + + i ) { <nl> / / No type checking . Internal use only . <nl> J j _ array = static _ cast < J > ( env - > GetObjectArrayElement ( m _ javaArray , i ) ) ; <nl> m _ array . push _ back ( T ( env , j _ array ) ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index 49ebc4b . . 0f17d8f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 245 , 8 + 245 , 6 @ @ abstract class BaseRealm implements Closeable { <nl> if ( hasChanged ) { <nl> / / Since this Realm instance has been waiting for change , advance realm & refresh realm . <nl> sharedRealm . refresh ( ) ; <nl> - / / FIXME : CHECK THIS ! ! ! Maybe call OS SharedRealm . refresh ( ) ? <nl> - / / handlerController . refreshSynchronousTableViews ( ) ; <nl> } <nl> return hasChanged ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index 6e54703 . . 0212edc 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import java . util . List ; <nl> import io . realm . RealmChangeListener ; <nl> <nl> / * * <nl> - * Java wrapper of OS Results class . <nl> + * Java wrapper of Object Store Results class . <nl> * It is the backend of binding ' s query results , link list and back links . <nl> * / <nl> @ Keep <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java b / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java <nl> index 739b26d . . 41218e6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java <nl> @ @ - 56 , 7 + 56 , 6 @ @ public class TableQuery implements NativeObject { <nl> return nativeFinalizerPtr ; <nl> } <nl> <nl> - / / FIXME : Hide this ? <nl> public Table getTable ( ) { <nl> return table ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java <nl> index 14d10c0 . . 48b9bae 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java <nl> @ @ - 31 , 7 + 31 , 6 @ @ import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> <nl> - import static junit . framework . Assert . assertTrue ; <nl> import static junit . framework . Assert . fail ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> @ @ - 107 , 6 + 106 , 7 @ @ public class RealmNotifierTests { <nl> / / Need a flag in java . <nl> / / assertTrue ( sharedRealm . isInTransaction ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> + sharedRealm . close ( ) ; <nl> } <nl> } ) ; <nl> sharedRealm . beginTransaction ( ) ; <nl> @ @ - 121 , 6 + 121 , 7 @ @ public class RealmNotifierTests { <nl> @ Override <nl> public void onChange ( SharedRealm sharedRealm ) { <nl> looperThread . testComplete ( ) ; <nl> + sharedRealm . close ( ) ; <nl> } <nl> } ) ; <nl> new Thread ( new Runnable ( ) { <nl> diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp <nl> index 7e7d387 . . b68db66 100644 <nl> - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp <nl> + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp <nl> @ @ - 56 , 7 + 56 , 7 @ @ std : : vector < BindingContext : : ObserverState > JavaBindingContext : : get _ observed _ rows <nl> return state _ list ; <nl> } <nl> <nl> - void JavaBindingContext : : changes _ available ( ) <nl> + void JavaBindingContext : : before _ notify ( ) <nl> { <nl> if ( m _ java _ notifier ) { <nl> m _ java _ notifier . call _ with _ local _ ref ( [ & ] ( JNIEnv * env , jobject notifier _ obj ) { <nl> diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp <nl> index aaed72b . . 18535fc 100644 <nl> - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp <nl> + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp <nl> @ @ - 46 , 7 + 46 , 7 @ @ private : <nl> public : <nl> virtual ~ JavaBindingContext ( ) { } ; <nl> virtual std : : vector < ObserverState > get _ observed _ rows ( ) ; <nl> - virtual void changes _ available ( ) ; <nl> + virtual void before _ notify ( ) ; <nl> virtual void did _ change ( std : : vector < ObserverState > const & observers , <nl> std : : vector < void * > const & invalidated , <nl> bool version _ changed = true ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index 8cbc460 . . fee2390 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 223 , 13 + 223 , 6 @ @ public class Collection implements NativeObject { <nl> @ KeepMember <nl> @ SuppressWarnings ( " unused " ) <nl> private void notifyChangeListeners ( boolean emptyChanges ) { <nl> - / / For the stable iteration . <nl> - / / It is needed when the local commit triggered async query updates . And this is called in the next event loop <nl> - / / by OS Realm : : notify ( ) . <nl> - if ( ! emptyChanges ) { <nl> - this . disableSnapshot ( ) ; <nl> - } <nl> - <nl> if ( emptyChanges & & isDetached ( ) ) return ; <nl> observerPairs . foreach ( onChangeCallback ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> index 5a7703e . . 93c9d57 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> @ @ - 91 , 6 + 91 , 7 @ @ public abstract class RealmNotifier implements Closeable { <nl> @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp <nl> / / Package protected to avoid finding class by name in JNI . <nl> void changesAvailable ( ) { <nl> + / / For the stable iteration . <nl> sharedRealm . disableCollectionSnapshot ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java 
 index d2a64b2 . . 8e28585 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / TableIndexAndDistinctTest . java 
 @ @ - 39 , 22 + 39 , 6 @ @ public class TableIndexAndDistinctTest extends TestCase { 
 assertEquals ( 7 , table . size ( ) ) ; 
 } 
 
 - / / FIXME : Check or delete this . 
 - / / TODO : parametric test 
 - / * * / / * * 
 - * Should throw exception if trying to get distinct on columns where index has not been set 
 - * @ param index 
 - * / / * 
 - 
 - @ Test ( expectedExceptions = UnsupportedOperationException . class , dataProvider = " columnIndex " ) 
 - public void shouldTestDistinctErrorWhenNoIndex ( Long index ) { 
 - 
 - / / Get a table with all available column types 
 - Table t = TestHelper . getTableWithAllColumnTypes ( ) ; 
 - 
 - TableView view = table . getDistinctView ( 1 ) ; 
 - } * / 
 - 
 / * * 
 * Check that Index can be set on multiple columns , with the String 
 * @ param 
 diff - - git a / realm / realm - library / src / main / cpp / util . hpp b / realm / realm - library / src / main / cpp / util . hpp 
 index 38d7c11 . . e437ee3 100644 
 - - - a / realm / realm - library / src / main / cpp / util . hpp 
 + + + b / realm / realm - library / src / main / cpp / util . hpp 
 @ @ - 556 , 9 + 556 , 9 @ @ public : 
 JniArrayOfArrays ( JNIEnv * env , jobjectArray javaArray ) 
 : m _ env ( env ) 
 , m _ javaArray ( javaArray ) 
 - , m _ arrayLength ( javaArray = = NULL ? 0 : env - > GetArrayLength ( javaArray ) ) 
 + , m _ arrayLength ( javaArray = = nullptr ? 0 : env - > GetArrayLength ( javaArray ) ) 
 { 
 - for ( int i = 0 ; i < m _ arrayLength ; i + + ) { 
 + for ( int i = 0 ; i < m _ arrayLength ; + + i ) { 
 / / No type checking . Internal use only . 
 J j _ array = static _ cast < J > ( env - > GetObjectArrayElement ( m _ javaArray , i ) ) ; 
 m _ array . push _ back ( T ( env , j _ array ) ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index 49ebc4b . . 0f17d8f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 245 , 8 + 245 , 6 @ @ abstract class BaseRealm implements Closeable { 
 if ( hasChanged ) { 
 / / Since this Realm instance has been waiting for change , advance realm & refresh realm . 
 sharedRealm . refresh ( ) ; 
 - / / FIXME : CHECK THIS ! ! ! Maybe call OS SharedRealm . refresh ( ) ? 
 - / / handlerController . refreshSynchronousTableViews ( ) ; 
 } 
 return hasChanged ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index 6e54703 . . 0212edc 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import java . util . List ; 
 import io . realm . RealmChangeListener ; 
 
 / * * 
 - * Java wrapper of OS Results class . 
 + * Java wrapper of Object Store Results class . 
 * It is the backend of binding ' s query results , link list and back links . 
 * / 
 @ Keep 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java b / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java 
 index 739b26d . . 41218e6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / TableQuery . java 
 @ @ - 56 , 7 + 56 , 6 @ @ public class TableQuery implements NativeObject { 
 return nativeFinalizerPtr ; 
 } 
 
 - / / FIXME : Hide this ? 
 public Table getTable ( ) { 
 return table ; 
 }

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java 
 index 14d10c0 . . 48b9bae 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java 
 @ @ - 31 , 7 + 31 , 6 @ @ import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 
 - import static junit . framework . Assert . assertTrue ; 
 import static junit . framework . Assert . fail ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 @ @ - 107 , 6 + 106 , 7 @ @ public class RealmNotifierTests { 
 / / Need a flag in java . 
 / / assertTrue ( sharedRealm . isInTransaction ( ) ) ; 
 looperThread . testComplete ( ) ; 
 + sharedRealm . close ( ) ; 
 } 
 } ) ; 
 sharedRealm . beginTransaction ( ) ; 
 @ @ - 121 , 6 + 121 , 7 @ @ public class RealmNotifierTests { 
 @ Override 
 public void onChange ( SharedRealm sharedRealm ) { 
 looperThread . testComplete ( ) ; 
 + sharedRealm . close ( ) ; 
 } 
 } ) ; 
 new Thread ( new Runnable ( ) { 
 diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp 
 index 7e7d387 . . b68db66 100644 
 - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp 
 + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp 
 @ @ - 56 , 7 + 56 , 7 @ @ std : : vector < BindingContext : : ObserverState > JavaBindingContext : : get _ observed _ rows 
 return state _ list ; 
 } 
 
 - void JavaBindingContext : : changes _ available ( ) 
 + void JavaBindingContext : : before _ notify ( ) 
 { 
 if ( m _ java _ notifier ) { 
 m _ java _ notifier . call _ with _ local _ ref ( [ & ] ( JNIEnv * env , jobject notifier _ obj ) { 
 diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp 
 index aaed72b . . 18535fc 100644 
 - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp 
 + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp 
 @ @ - 46 , 7 + 46 , 7 @ @ private : 
 public : 
 virtual ~ JavaBindingContext ( ) { } ; 
 virtual std : : vector < ObserverState > get _ observed _ rows ( ) ; 
 - virtual void changes _ available ( ) ; 
 + virtual void before _ notify ( ) ; 
 virtual void did _ change ( std : : vector < ObserverState > const & observers , 
 std : : vector < void * > const & invalidated , 
 bool version _ changed = true ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index 8cbc460 . . fee2390 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 223 , 13 + 223 , 6 @ @ public class Collection implements NativeObject { 
 @ KeepMember 
 @ SuppressWarnings ( " unused " ) 
 private void notifyChangeListeners ( boolean emptyChanges ) { 
 - / / For the stable iteration . 
 - / / It is needed when the local commit triggered async query updates . And this is called in the next event loop 
 - / / by OS Realm : : notify ( ) . 
 - if ( ! emptyChanges ) { 
 - this . disableSnapshot ( ) ; 
 - } 
 - 
 if ( emptyChanges & & isDetached ( ) ) return ; 
 observerPairs . foreach ( onChangeCallback ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 index 5a7703e . . 93c9d57 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 @ @ - 91 , 6 + 91 , 7 @ @ public abstract class RealmNotifier implements Closeable { 
 @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp 
 / / Package protected to avoid finding class by name in JNI . 
 void changesAvailable ( ) { 
 + / / For the stable iteration . 
 sharedRealm . disableCollectionSnapshot ( ) ; 
 } 

