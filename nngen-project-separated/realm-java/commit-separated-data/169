BLEU SCORE: 0.05431360807863859

TEST MSG: Update Sync to 2 . 0 . 0 - rc26 and ROS 2 . 0 . 0 - alpha . 42
GENERATED MSG: Clean up pre - null related tests created in 0 . 83 . 0

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 218a261 . . 9dcb1a9 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 18 , 6 + 18 , 9 @ @ <nl> <nl> # # Internal <nl> <nl> + * Upgraded to Realm Sync 2 . 0 . 0 - rc25 . <nl> + * Upgraded to Realm Core 4 . 0 . 0 . <nl> + <nl> # # Credits <nl> <nl> <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index 1bc28f3 . . 50a7554 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 1 , 8 + 1 , 9 @ @ <nl> # Realm Sync Core release used by Realm Java <nl> # https : / / github . com / realm / realm - sync / releases <nl> - REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc21 <nl> - REALM _ SYNC _ SHA256 = 5e09e54e68e78683e006898f5a703f80e0ee49492fb0f9dc2384fcbbb9f02f70 <nl> + REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc26 <nl> + REALM _ SYNC _ SHA256 = 98f44f67051df80bae5d51d8b17912e1fcd076f390fa4c50dfc7a6eddb2d2205 <nl> <nl> # Object Server Release used by Integration tests . Installed using NPM . <nl> # Use ` npm view realm - object - server versions ` to get a list of available versions . <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 39 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 42 <nl> + <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java <nl> index 7b38283 . . 8d61753 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java <nl> @ @ - 84 , 14 + 84 , 16 @ @ public abstract class CollectionTests { <nl> protected void populateRealm ( Realm realm , int objects ) { <nl> realm . beginTransaction ( ) ; <nl> realm . delete ( AllJavaTypes . class ) ; <nl> - realm . delete ( NonLatinFieldNames . class ) ; <nl> + / / realm . delete ( NonLatinFieldNames . class ) ; FIXME Disabled until https : / / github . com / realm / realm - java / issues / 5354 is fixed <nl> if ( objects > 0 ) { <nl> for ( int i = 0 ; i < objects ; i + + ) { <nl> AllJavaTypes obj = realm . createObject ( AllJavaTypes . class , i ) ; <nl> fillObject ( i , objects , obj ) ; <nl> + / * * FIXME Disabled until https : / / github . com / realm / realm - java / issues / 5354 is fixed <nl> NonLatinFieldNames nonLatinFieldNames = realm . createObject ( NonLatinFieldNames . class ) ; <nl> nonLatinFieldNames . set 델 타 ( i ) ; <nl> nonLatinFieldNames . set Δ έ λ τ α ( i ) ; <nl> + * / <nl> / / Sets the linked object to itself . <nl> obj . setFieldObject ( obj ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> index 341b181 . . 6a9443e 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package io . realm ; <nl> import org . hamcrest . CoreMatchers ; <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . rules . ExpectedException ; <nl> @ @ - 480 , 6 + 481 , 7 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) <nl> public void sum _ nonLatinColumnNames ( ) { <nl> OrderedRealmCollection < NonLatinFieldNames > resultList = createNonLatinCollection ( realm , collectionClass ) ; <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> index 1222343 . . e0868a7 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ import android . os . SystemClock ; <nl> import android . support . test . rule . UiThreadTestRule ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . rules . ExpectedException ; <nl> @ @ - 498 , 6 + 499 , 7 @ @ public class RealmAsyncQueryTests { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) <nl> public void accessingRealmListOnUnloadedRealmObjectShouldThrow ( ) { <nl> Realm realm = looperThread . getRealm ( ) ; <nl> populateTestRealm ( realm , 10 ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> index dedb61e . . ce9a07c 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package io . realm ; <nl> import org . hamcrest . CoreMatchers ; <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . rules . ExpectedException ; <nl> @ @ - 32 , 6 + 33 , 7 @ @ import java . util . Set ; <nl> <nl> import io . realm . entities . AllJavaTypes ; <nl> import io . realm . entities . Dog ; <nl> + import io . realm . entities . NonLatinFieldNames ; <nl> import io . realm . internal . Table ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> <nl> @ @ - 1107 , 6 + 1109 , 13 @ @ public class RealmObjectSchemaTests { <nl> dynamicRealm . close ( ) ; <nl> } <nl> <nl> + @ Test <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) <nl> + public void getFieldType _ nonLatinName ( ) { <nl> + RealmObjectSchema objSchema = realm . getSchema ( ) . get ( NonLatinFieldNames . class . getSimpleName ( ) ) ; <nl> + assertEquals ( RealmFieldType . INTEGER , objSchema . getFieldType ( NonLatinFieldNames . FIELD _ LONG _ GREEK _ CHAR ) ) ; <nl> + } <nl> + <nl> private interface FieldRunnable { <nl> void run ( String fieldName ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java <nl> index e8b8221 . . 8844cfc 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import android . support . test . runner . AndroidJUnit4 ; <nl> import org . hamcrest . CoreMatchers ; <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . rules . ExpectedException ; <nl> @ @ - 48 , 6 + 49 , 7 @ @ import io . realm . entities . ConflictingFieldName ; <nl> import io . realm . entities . CustomMethods ; <nl> import io . realm . entities . CyclicType ; <nl> import io . realm . entities . Dog ; <nl> + import io . realm . entities . NonLatinFieldNames ; <nl> import io . realm . entities . NullTypes ; <nl> import io . realm . entities . StringAndInt ; <nl> import io . realm . entities . pojo . AllTypesRealmModel ; <nl> @ @ - 2120 , 4 + 2122 , 14 @ @ public class RealmObjectTests { <nl> assertThat ( expected . getMessage ( ) , CoreMatchers . containsString ( " which exceeds the max string length " ) ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) <nl> + public void setter _ nonLatinFieldName ( ) { <nl> + / / Reproduces https : / / github . com / realm / realm - java / pull / 5346 <nl> + realm . beginTransaction ( ) ; <nl> + NonLatinFieldNames obj = realm . createObject ( NonLatinFieldNames . class ) ; <nl> + obj . set Δ έ λ τ α ( 42 ) ; <nl> + realm . commitTransaction ( ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp <nl> index 099e984 . . 567aae9 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp <nl> @ @ - 299 , 7 + 299 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ OsRealmConfig _ nativeCreateAndSetSy <nl> if ( access _ token _ string ) { <nl> / / reusing cached valid token <nl> JStringAccessor access _ token ( env , access _ token _ string ) ; <nl> - session - > refresh _ access _ token ( access _ token , realm : : util : : Optional < std : : string > ( syncConfig . realm _ url ) ) ; <nl> + session - > refresh _ access _ token ( access _ token , realm : : util : : Optional < std : : string > ( syncConfig . realm _ url ( ) ) ) ; <nl> } <nl> } ; <nl> <nl> diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store <nl> index 317dc9b . . 0d0615c 160000 <nl> - - - a / realm / realm - library / src / main / cpp / object - store <nl> + + + b / realm / realm - library / src / main / cpp / object - store <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit 317dc9b3d9ef1b5de5ace72e05ac6d58e443bef5 <nl> + Subproject commit 0d0615caaf0df6dbccca3f86a05303892c3a7a2e
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / assets / default - before - migration . realm b / realm / realm - library / src / androidTest / assets / default - before - migration . realm <nl> deleted file mode 100644 <nl> index 7a9ae60 . . 0000000 <nl> Binary files a / realm / realm - library / src / androidTest / assets / default - before - migration . realm and / dev / null differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / string - only - pre - null - 0 . 82 . 2 . realm b / realm / realm - library / src / androidTest / assets / string - only - pre - null - 0 . 82 . 2 . realm <nl> new file mode 100644 <nl> index 0000000 . . 9995d00 <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / string - only - pre - null - 0 . 82 . 2 . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / assets / string - only - required - pre - null - 0 . 82 . 2 . realm b / realm / realm - library / src / androidTest / assets / string - only - required - pre - null - 0 . 82 . 2 . realm <nl> new file mode 100644 <nl> index 0000000 . . dbeb9e4 <nl> Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / string - only - required - pre - null - 0 . 82 . 2 . realm differ <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> index cd779ac . . 45feac7 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> @ @ - 36 , 6 + 36 , 8 @ @ import java . util . concurrent . atomic . AtomicBoolean ; <nl> <nl> import io . realm . entities . AllTypes ; <nl> import io . realm . entities . AnnotationTypes ; <nl> + import io . realm . entities . CatOwner ; <nl> + import io . realm . entities . Dog ; <nl> import io . realm . entities . FieldOrder ; <nl> import io . realm . entities . NullTypes ; <nl> import io . realm . entities . PrimaryKeyAsBoxedByte ; <nl> @ @ - 48 , 6 + 50 , 7 @ @ import io . realm . entities . PrimaryKeyAsLong ; <nl> import io . realm . entities . PrimaryKeyAsShort ; <nl> import io . realm . entities . PrimaryKeyAsString ; <nl> import io . realm . entities . StringOnly ; <nl> + import io . realm . entities . StringOnlyRequired ; <nl> import io . realm . entities . Thread ; <nl> import io . realm . entities . migration . MigrationClassRenamed ; <nl> import io . realm . entities . migration . MigrationFieldRenameAndAdd ; <nl> @ @ - 64 , 6 + 67 , 7 @ @ import io . realm . rule . TestRealmConfigurationFactory ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertNotNull ; <nl> import static org . junit . Assert . assertNull ; <nl> import static org . junit . Assert . assertThat ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 797 , 16 + 801 , 29 @ @ public class RealmMigrationTests { <nl> } <nl> } <nl> <nl> - / / In default - before - migration . realm , CatOwner has a RealmList < Dog > field . <nl> - / / This is changed to RealmList < Cat > and getInstance ( ) must throw an exception . <nl> + / / Check if the RealmList type change can trigger a RealmMigrationNeededException . <nl> @ Test <nl> public void migrationException _ realmListChanged ( ) throws IOException { <nl> - configFactory . copyRealmFromAssets ( context , <nl> - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> + RealmConfiguration config = configFactory . createConfiguration ( ) ; <nl> + / / Initialize the schema with RealmList < Cat > <nl> + Realm . getInstance ( configFactory . createConfiguration ( ) ) . close ( ) ; <nl> + <nl> + DynamicRealm dynamicRealm = DynamicRealm . getInstance ( config ) ; <nl> + dynamicRealm . beginTransaction ( ) ; <nl> + / / Change the RealmList type to RealmList < Dog > <nl> + RealmObjectSchema dogSchema = dynamicRealm . getSchema ( ) . get ( Dog . CLASS _ NAME ) ; <nl> + RealmObjectSchema ownerSchema = dynamicRealm . getSchema ( ) . get ( CatOwner . CLASS _ NAME ) ; <nl> + ownerSchema . removeField ( CatOwner . FIELD _ CATS ) ; <nl> + ownerSchema . addRealmListField ( CatOwner . FIELD _ CATS , dogSchema ) ; <nl> + dynamicRealm . commitTransaction ( ) ; <nl> + dynamicRealm . close ( ) ; <nl> + <nl> try { <nl> - realm = Realm . getInstance ( configFactory . createConfiguration ( ) ) ; <nl> + realm = Realm . getInstance ( config ) ; <nl> fail ( ) ; <nl> } catch ( RealmMigrationNeededException ignored ) { <nl> + assertThat ( ignored . getMessage ( ) , <nl> + CoreMatchers . containsString ( " Invalid RealmList type for field ' cats ' : ' class _ Dog ' expected " ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 816 , 7 + 833 , 7 @ @ public class RealmMigrationTests { <nl> @ Test <nl> public void openPreNullRealmRequiredMissing ( ) throws IOException { <nl> configFactory . copyRealmFromAssets ( context , <nl> - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> + " string - only - pre - null - 0 . 82 . 2 . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> RealmMigration realmMigration = new RealmMigration ( ) { <nl> @ Override <nl> public void migrate ( DynamicRealm realm , long oldVersion , long newVersion ) { <nl> @ @ - 844 , 13 + 861 , 15 @ @ public class RealmMigrationTests { <nl> / / old class ( without @ Required ) can be used , <nl> @ Test <nl> public void migratePreNull ( ) throws IOException { <nl> + final AtomicBoolean migrationCalled = new AtomicBoolean ( false ) ; <nl> configFactory . copyRealmFromAssets ( context , <nl> - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> + " string - only - pre - null - 0 . 82 . 2 . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> RealmMigration migration = new RealmMigration ( ) { <nl> @ Override <nl> public void migrate ( DynamicRealm realm , long oldVersion , long newVersion ) { <nl> RealmObjectSchema objectSchema = realm . getSchema ( ) . get ( StringOnly . CLASS _ NAME ) ; <nl> objectSchema . setRequired ( StringOnly . FIELD _ CHARS , false ) ; <nl> + migrationCalled . set ( true ) ; <nl> } <nl> } ; <nl> <nl> @ @ - 860 , 8 + 879 , 13 @ @ public class RealmMigrationTests { <nl> . migration ( migration ) <nl> . build ( ) ; <nl> Realm realm = Realm . getInstance ( realmConfig ) ; <nl> + assertTrue ( migrationCalled . get ( ) ) ; <nl> + <nl> + StringOnly stringOnly = realm . where ( StringOnly . class ) . findFirst ( ) ; <nl> + assertNotNull ( stringOnly ) ; <nl> + / / This object was created with 0 . 82 . 2 <nl> + assertEquals ( " String _ set _ with _ 0 . 82 . 2 " , stringOnly . getChars ( ) ) ; <nl> realm . beginTransaction ( ) ; <nl> - StringOnly stringOnly = realm . createObject ( StringOnly . class ) ; <nl> stringOnly . setChars ( null ) ; <nl> realm . commitTransaction ( ) ; <nl> realm . close ( ) ; <nl> @ @ - 873 , 19 + 897 , 25 @ @ public class RealmMigrationTests { <nl> @ Test <nl> public void openPreNullWithRequired ( ) throws IOException { <nl> configFactory . copyRealmFromAssets ( context , <nl> - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> + " string - only - required - pre - null - 0 . 82 . 2 . realm " , Realm . DEFAULT _ REALM _ NAME ) ; <nl> RealmConfiguration realmConfig = configFactory . createConfigurationBuilder ( ) <nl> . schemaVersion ( 0 ) <nl> - . schema ( AllTypes . class ) <nl> + . schema ( StringOnlyRequired . class ) <nl> . build ( ) ; <nl> Realm realm = Realm . getInstance ( realmConfig ) ; <nl> <nl> + StringOnlyRequired stringOnlyRequired = realm . where ( StringOnlyRequired . class ) . findFirst ( ) ; <nl> + assertNotNull ( stringOnlyRequired ) ; <nl> + / / This object was created with 0 . 82 . 2 <nl> + assertEquals ( " String _ set _ with _ 0 . 82 . 2 " , stringOnlyRequired . getChars ( ) ) ; <nl> + <nl> realm . beginTransaction ( ) ; <nl> try { <nl> - AllTypes allTypes = realm . createObject ( AllTypes . class ) ; <nl> - allTypes . setColumnString ( null ) ; <nl> + stringOnlyRequired . setChars ( null ) ; <nl> fail ( ) ; <nl> - } catch ( IllegalArgumentException ignored ) { <nl> + } catch ( IllegalArgumentException expected ) { <nl> + assertThat ( expected . getMessage ( ) , <nl> + CoreMatchers . containsString ( " Trying to set non - nullable field ' chars ' to null . " ) ) ; <nl> } <nl> realm . cancelTransaction ( ) ; <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java b / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java <nl> index 477ee23 . . 577525d 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java <nl> @ @ - 21 , 6 + 21 , 10 @ @ import io . realm . RealmObject ; <nl> import io . realm . annotations . Required ; <nl> <nl> public class CatOwner extends RealmObject { <nl> + public static final String CLASS _ NAME = " CatOwner " ; <nl> + public static final String FIELD _ NAME = " name " ; <nl> + public static final String FIELD _ CATS = " cats " ; <nl> + <nl> @ Required <nl> private String name ; <nl> private RealmList < Cat > cats ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / StringOnlyRequired . java b / realm / realm - library / src / androidTest / java / io / realm / entities / StringOnlyRequired . java <nl> new file mode 100644 <nl> index 0000000 . . df6200f <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / StringOnlyRequired . java <nl> @ @ - 0 , 0 + 1 , 35 @ @ <nl> + / * <nl> + * Copyright 2017 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . entities ; <nl> + <nl> + import io . realm . RealmObject ; <nl> + import io . realm . annotations . Required ; <nl> + <nl> + / / This class is used for the pre - null testing . Before 0 . 83 . 0 , without nullable support , String is required by default . <nl> + / / To use the Realm file created before 0 . 83 . 0 without migration , @ Required has to be added to the String field . <nl> + public class StringOnlyRequired extends RealmObject { <nl> + @ Required <nl> + private String chars ; <nl> + <nl> + public String getChars ( ) { <nl> + return chars ; <nl> + } <nl> + <nl> + public void setChars ( String chars ) { <nl> + this . chars = chars ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 218a261 . . 9dcb1a9 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 18 , 6 + 18 , 9 @ @ 
 
 # # Internal 
 
 + * Upgraded to Realm Sync 2 . 0 . 0 - rc25 . 
 + * Upgraded to Realm Core 4 . 0 . 0 . 
 + 
 # # Credits 
 
 
 diff - - git a / dependencies . list b / dependencies . list 
 index 1bc28f3 . . 50a7554 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 1 , 8 + 1 , 9 @ @ 
 # Realm Sync Core release used by Realm Java 
 # https : / / github . com / realm / realm - sync / releases 
 - REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc21 
 - REALM _ SYNC _ SHA256 = 5e09e54e68e78683e006898f5a703f80e0ee49492fb0f9dc2384fcbbb9f02f70 
 + REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc26 
 + REALM _ SYNC _ SHA256 = 98f44f67051df80bae5d51d8b17912e1fcd076f390fa4c50dfc7a6eddb2d2205 
 
 # Object Server Release used by Integration tests . Installed using NPM . 
 # Use ` npm view realm - object - server versions ` to get a list of available versions . 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 39 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 42 
 + 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java 
 index 7b38283 . . 8d61753 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java 
 @ @ - 84 , 14 + 84 , 16 @ @ public abstract class CollectionTests { 
 protected void populateRealm ( Realm realm , int objects ) { 
 realm . beginTransaction ( ) ; 
 realm . delete ( AllJavaTypes . class ) ; 
 - realm . delete ( NonLatinFieldNames . class ) ; 
 + / / realm . delete ( NonLatinFieldNames . class ) ; FIXME Disabled until https : / / github . com / realm / realm - java / issues / 5354 is fixed 
 if ( objects > 0 ) { 
 for ( int i = 0 ; i < objects ; i + + ) { 
 AllJavaTypes obj = realm . createObject ( AllJavaTypes . class , i ) ; 
 fillObject ( i , objects , obj ) ; 
 + / * * FIXME Disabled until https : / / github . com / realm / realm - java / issues / 5354 is fixed 
 NonLatinFieldNames nonLatinFieldNames = realm . createObject ( NonLatinFieldNames . class ) ; 
 nonLatinFieldNames . set 델 타 ( i ) ; 
 nonLatinFieldNames . set Δ έ λ τ α ( i ) ; 
 + * / 
 / / Sets the linked object to itself . 
 obj . setFieldObject ( obj ) ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 index 341b181 . . 6a9443e 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package io . realm ; 
 import org . hamcrest . CoreMatchers ; 
 import org . junit . After ; 
 import org . junit . Before ; 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . rules . ExpectedException ; 
 @ @ - 480 , 6 + 481 , 7 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 } 
 
 @ Test 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) 
 public void sum _ nonLatinColumnNames ( ) { 
 OrderedRealmCollection < NonLatinFieldNames > resultList = createNonLatinCollection ( realm , collectionClass ) ; 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 index 1222343 . . e0868a7 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 @ @ - 20 , 6 + 20 , 7 @ @ import android . os . SystemClock ; 
 import android . support . test . rule . UiThreadTestRule ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . rules . ExpectedException ; 
 @ @ - 498 , 6 + 499 , 7 @ @ public class RealmAsyncQueryTests { 
 
 @ Test 
 @ RunTestInLooperThread 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) 
 public void accessingRealmListOnUnloadedRealmObjectShouldThrow ( ) { 
 Realm realm = looperThread . getRealm ( ) ; 
 populateTestRealm ( realm , 10 ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 index dedb61e . . ce9a07c 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package io . realm ; 
 import org . hamcrest . CoreMatchers ; 
 import org . junit . After ; 
 import org . junit . Before ; 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . rules . ExpectedException ; 
 @ @ - 32 , 6 + 33 , 7 @ @ import java . util . Set ; 
 
 import io . realm . entities . AllJavaTypes ; 
 import io . realm . entities . Dog ; 
 + import io . realm . entities . NonLatinFieldNames ; 
 import io . realm . internal . Table ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 
 @ @ - 1107 , 6 + 1109 , 13 @ @ public class RealmObjectSchemaTests { 
 dynamicRealm . close ( ) ; 
 } 
 
 + @ Test 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) 
 + public void getFieldType _ nonLatinName ( ) { 
 + RealmObjectSchema objSchema = realm . getSchema ( ) . get ( NonLatinFieldNames . class . getSimpleName ( ) ) ; 
 + assertEquals ( RealmFieldType . INTEGER , objSchema . getFieldType ( NonLatinFieldNames . FIELD _ LONG _ GREEK _ CHAR ) ) ; 
 + } 
 + 
 private interface FieldRunnable { 
 void run ( String fieldName ) ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java 
 index e8b8221 . . 8844cfc 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import android . support . test . runner . AndroidJUnit4 ; 
 import org . hamcrest . CoreMatchers ; 
 import org . junit . After ; 
 import org . junit . Before ; 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . rules . ExpectedException ; 
 @ @ - 48 , 6 + 49 , 7 @ @ import io . realm . entities . ConflictingFieldName ; 
 import io . realm . entities . CustomMethods ; 
 import io . realm . entities . CyclicType ; 
 import io . realm . entities . Dog ; 
 + import io . realm . entities . NonLatinFieldNames ; 
 import io . realm . entities . NullTypes ; 
 import io . realm . entities . StringAndInt ; 
 import io . realm . entities . pojo . AllTypesRealmModel ; 
 @ @ - 2120 , 4 + 2122 , 14 @ @ public class RealmObjectTests { 
 assertThat ( expected . getMessage ( ) , CoreMatchers . containsString ( " which exceeds the max string length " ) ) ; 
 } 
 } 
 + 
 + @ Test 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5354 " ) 
 + public void setter _ nonLatinFieldName ( ) { 
 + / / Reproduces https : / / github . com / realm / realm - java / pull / 5346 
 + realm . beginTransaction ( ) ; 
 + NonLatinFieldNames obj = realm . createObject ( NonLatinFieldNames . class ) ; 
 + obj . set Δ έ λ τ α ( 42 ) ; 
 + realm . commitTransaction ( ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp 
 index 099e984 . . 567aae9 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsRealmConfig . cpp 
 @ @ - 299 , 7 + 299 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ OsRealmConfig _ nativeCreateAndSetSy 
 if ( access _ token _ string ) { 
 / / reusing cached valid token 
 JStringAccessor access _ token ( env , access _ token _ string ) ; 
 - session - > refresh _ access _ token ( access _ token , realm : : util : : Optional < std : : string > ( syncConfig . realm _ url ) ) ; 
 + session - > refresh _ access _ token ( access _ token , realm : : util : : Optional < std : : string > ( syncConfig . realm _ url ( ) ) ) ; 
 } 
 } ; 
 
 diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store 
 index 317dc9b . . 0d0615c 160000 
 - - - a / realm / realm - library / src / main / cpp / object - store 
 + + + b / realm / realm - library / src / main / cpp / object - store 
 @ @ - 1 + 1 @ @ 
 - Subproject commit 317dc9b3d9ef1b5de5ace72e05ac6d58e443bef5 
 + Subproject commit 0d0615caaf0df6dbccca3f86a05303892c3a7a2e

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / assets / default - before - migration . realm b / realm / realm - library / src / androidTest / assets / default - before - migration . realm 
 deleted file mode 100644 
 index 7a9ae60 . . 0000000 
 Binary files a / realm / realm - library / src / androidTest / assets / default - before - migration . realm and / dev / null differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / string - only - pre - null - 0 . 82 . 2 . realm b / realm / realm - library / src / androidTest / assets / string - only - pre - null - 0 . 82 . 2 . realm 
 new file mode 100644 
 index 0000000 . . 9995d00 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / string - only - pre - null - 0 . 82 . 2 . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / assets / string - only - required - pre - null - 0 . 82 . 2 . realm b / realm / realm - library / src / androidTest / assets / string - only - required - pre - null - 0 . 82 . 2 . realm 
 new file mode 100644 
 index 0000000 . . dbeb9e4 
 Binary files / dev / null and b / realm / realm - library / src / androidTest / assets / string - only - required - pre - null - 0 . 82 . 2 . realm differ 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java 
 index cd779ac . . 45feac7 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmMigrationTests . java 
 @ @ - 36 , 6 + 36 , 8 @ @ import java . util . concurrent . atomic . AtomicBoolean ; 
 
 import io . realm . entities . AllTypes ; 
 import io . realm . entities . AnnotationTypes ; 
 + import io . realm . entities . CatOwner ; 
 + import io . realm . entities . Dog ; 
 import io . realm . entities . FieldOrder ; 
 import io . realm . entities . NullTypes ; 
 import io . realm . entities . PrimaryKeyAsBoxedByte ; 
 @ @ - 48 , 6 + 50 , 7 @ @ import io . realm . entities . PrimaryKeyAsLong ; 
 import io . realm . entities . PrimaryKeyAsShort ; 
 import io . realm . entities . PrimaryKeyAsString ; 
 import io . realm . entities . StringOnly ; 
 + import io . realm . entities . StringOnlyRequired ; 
 import io . realm . entities . Thread ; 
 import io . realm . entities . migration . MigrationClassRenamed ; 
 import io . realm . entities . migration . MigrationFieldRenameAndAdd ; 
 @ @ - 64 , 6 + 67 , 7 @ @ import io . realm . rule . TestRealmConfigurationFactory ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 + import static org . junit . Assert . assertNotNull ; 
 import static org . junit . Assert . assertNull ; 
 import static org . junit . Assert . assertThat ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 797 , 16 + 801 , 29 @ @ public class RealmMigrationTests { 
 } 
 } 
 
 - / / In default - before - migration . realm , CatOwner has a RealmList < Dog > field . 
 - / / This is changed to RealmList < Cat > and getInstance ( ) must throw an exception . 
 + / / Check if the RealmList type change can trigger a RealmMigrationNeededException . 
 @ Test 
 public void migrationException _ realmListChanged ( ) throws IOException { 
 - configFactory . copyRealmFromAssets ( context , 
 - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 + RealmConfiguration config = configFactory . createConfiguration ( ) ; 
 + / / Initialize the schema with RealmList < Cat > 
 + Realm . getInstance ( configFactory . createConfiguration ( ) ) . close ( ) ; 
 + 
 + DynamicRealm dynamicRealm = DynamicRealm . getInstance ( config ) ; 
 + dynamicRealm . beginTransaction ( ) ; 
 + / / Change the RealmList type to RealmList < Dog > 
 + RealmObjectSchema dogSchema = dynamicRealm . getSchema ( ) . get ( Dog . CLASS _ NAME ) ; 
 + RealmObjectSchema ownerSchema = dynamicRealm . getSchema ( ) . get ( CatOwner . CLASS _ NAME ) ; 
 + ownerSchema . removeField ( CatOwner . FIELD _ CATS ) ; 
 + ownerSchema . addRealmListField ( CatOwner . FIELD _ CATS , dogSchema ) ; 
 + dynamicRealm . commitTransaction ( ) ; 
 + dynamicRealm . close ( ) ; 
 + 
 try { 
 - realm = Realm . getInstance ( configFactory . createConfiguration ( ) ) ; 
 + realm = Realm . getInstance ( config ) ; 
 fail ( ) ; 
 } catch ( RealmMigrationNeededException ignored ) { 
 + assertThat ( ignored . getMessage ( ) , 
 + CoreMatchers . containsString ( " Invalid RealmList type for field ' cats ' : ' class _ Dog ' expected " ) ) ; 
 } 
 } 
 
 @ @ - 816 , 7 + 833 , 7 @ @ public class RealmMigrationTests { 
 @ Test 
 public void openPreNullRealmRequiredMissing ( ) throws IOException { 
 configFactory . copyRealmFromAssets ( context , 
 - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 + " string - only - pre - null - 0 . 82 . 2 . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 RealmMigration realmMigration = new RealmMigration ( ) { 
 @ Override 
 public void migrate ( DynamicRealm realm , long oldVersion , long newVersion ) { 
 @ @ - 844 , 13 + 861 , 15 @ @ public class RealmMigrationTests { 
 / / old class ( without @ Required ) can be used , 
 @ Test 
 public void migratePreNull ( ) throws IOException { 
 + final AtomicBoolean migrationCalled = new AtomicBoolean ( false ) ; 
 configFactory . copyRealmFromAssets ( context , 
 - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 + " string - only - pre - null - 0 . 82 . 2 . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 RealmMigration migration = new RealmMigration ( ) { 
 @ Override 
 public void migrate ( DynamicRealm realm , long oldVersion , long newVersion ) { 
 RealmObjectSchema objectSchema = realm . getSchema ( ) . get ( StringOnly . CLASS _ NAME ) ; 
 objectSchema . setRequired ( StringOnly . FIELD _ CHARS , false ) ; 
 + migrationCalled . set ( true ) ; 
 } 
 } ; 
 
 @ @ - 860 , 8 + 879 , 13 @ @ public class RealmMigrationTests { 
 . migration ( migration ) 
 . build ( ) ; 
 Realm realm = Realm . getInstance ( realmConfig ) ; 
 + assertTrue ( migrationCalled . get ( ) ) ; 
 + 
 + StringOnly stringOnly = realm . where ( StringOnly . class ) . findFirst ( ) ; 
 + assertNotNull ( stringOnly ) ; 
 + / / This object was created with 0 . 82 . 2 
 + assertEquals ( " String _ set _ with _ 0 . 82 . 2 " , stringOnly . getChars ( ) ) ; 
 realm . beginTransaction ( ) ; 
 - StringOnly stringOnly = realm . createObject ( StringOnly . class ) ; 
 stringOnly . setChars ( null ) ; 
 realm . commitTransaction ( ) ; 
 realm . close ( ) ; 
 @ @ - 873 , 19 + 897 , 25 @ @ public class RealmMigrationTests { 
 @ Test 
 public void openPreNullWithRequired ( ) throws IOException { 
 configFactory . copyRealmFromAssets ( context , 
 - " default - before - migration . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 + " string - only - required - pre - null - 0 . 82 . 2 . realm " , Realm . DEFAULT _ REALM _ NAME ) ; 
 RealmConfiguration realmConfig = configFactory . createConfigurationBuilder ( ) 
 . schemaVersion ( 0 ) 
 - . schema ( AllTypes . class ) 
 + . schema ( StringOnlyRequired . class ) 
 . build ( ) ; 
 Realm realm = Realm . getInstance ( realmConfig ) ; 
 
 + StringOnlyRequired stringOnlyRequired = realm . where ( StringOnlyRequired . class ) . findFirst ( ) ; 
 + assertNotNull ( stringOnlyRequired ) ; 
 + / / This object was created with 0 . 82 . 2 
 + assertEquals ( " String _ set _ with _ 0 . 82 . 2 " , stringOnlyRequired . getChars ( ) ) ; 
 + 
 realm . beginTransaction ( ) ; 
 try { 
 - AllTypes allTypes = realm . createObject ( AllTypes . class ) ; 
 - allTypes . setColumnString ( null ) ; 
 + stringOnlyRequired . setChars ( null ) ; 
 fail ( ) ; 
 - } catch ( IllegalArgumentException ignored ) { 
 + } catch ( IllegalArgumentException expected ) { 
 + assertThat ( expected . getMessage ( ) , 
 + CoreMatchers . containsString ( " Trying to set non - nullable field ' chars ' to null . " ) ) ; 
 } 
 realm . cancelTransaction ( ) ; 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java b / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java 
 index 477ee23 . . 577525d 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / CatOwner . java 
 @ @ - 21 , 6 + 21 , 10 @ @ import io . realm . RealmObject ; 
 import io . realm . annotations . Required ; 
 
 public class CatOwner extends RealmObject { 
 + public static final String CLASS _ NAME = " CatOwner " ; 
 + public static final String FIELD _ NAME = " name " ; 
 + public static final String FIELD _ CATS = " cats " ; 
 + 
 @ Required 
 private String name ; 
 private RealmList < Cat > cats ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / StringOnlyRequired . java b / realm / realm - library / src / androidTest / java / io / realm / entities / StringOnlyRequired . java 
 new file mode 100644 
 index 0000000 . . df6200f 
 - - - / dev / null 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / StringOnlyRequired . java 
 @ @ - 0 , 0 + 1 , 35 @ @ 
 + / * 
 + * Copyright 2017 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . entities ; 
 + 
 + import io . realm . RealmObject ; 
 + import io . realm . annotations . Required ; 
 + 
 + / / This class is used for the pre - null testing . Before 0 . 83 . 0 , without nullable support , String is required by default . 
 + / / To use the Realm file created before 0 . 83 . 0 without migration , @ Required has to be added to the String field . 
 + public class StringOnlyRequired extends RealmObject { 
 + @ Required 
 + private String chars ; 
 + 
 + public String getChars ( ) { 
 + return chars ; 
 + } 
 + 
 + public void setChars ( String chars ) { 
 + this . chars = chars ; 
 + } 
 + }
