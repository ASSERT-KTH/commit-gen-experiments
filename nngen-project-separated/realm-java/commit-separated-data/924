BLEU SCORE: 0.03300809119141885

TEST MSG: Deprecate RealmConfiguration . getSchemaMediator ( ) and add RealmConfiguration . getRealmObjectClasses ( ) which returns the unmodifiable set of model classes that make up the schema .
GENERATED MSG: Realm . createOrUpdateObjectFromJson ( ) now works correctly if the RealmObject class contains a primary key

TEST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 84dee31 . . f17b6e6 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 4 , 6 + 4 , 7 @ @ <nl> * BREAKING CHANGE : RealmQuery . CASE _ SENSITIVE and RealmQuery . CASE _ INSENSITIVE constants have been replaced by Case . SENSITIVE and Case . INSENSITIVE enums . <nl> * BREAKING CHANGE : Realm . addChangeListener , RealmObject . addChangeListener and RealmResults . addChangeListener hold a strong reference to the listener , you should unregister the listener to avoid memory leaks . <nl> * BREAKING CHANGE : Removed deprecated methods RealmQuery . minimum { Int , Float , Double } , RealmQuery . maximum { Int , Float , Double } , RealmQuery . sum { Int , Float , Double } and RealmQuery . average { Int , Float , Double } . Use RealmQuery . min ( ) , RealmQuery . max ( ) , RealmQuery . sum ( ) and RealmQuery . average ( ) instead . <nl> + * BREAKING CHANGE : Removed RealmConfiguration . getSchemaMediator ( ) which is public by mistake . And RealmConfiguration . getRealmObjectClasses ( ) is added as an alternative in order to obtain the set of model classes ( # 1797 ) . <nl> * Added new Dynamic API using DynamicRealm and DynamicRealmObject . <nl> * Added Realm . getSchema ( ) and DynamicRealm . getSchema ( ) . <nl> * Realm . createOrUpdateObjectFromJson ( ) now works correctly if the RealmObject class contains a primary key
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 16ccfae . . c3c8954 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 4 + 1 , 3 @ @ <nl> - <nl> 0 . 86 . 0 <nl> * BREAKING CHANGE : The Migration API has been replaced with a new API . <nl> * BREAKING CHANGE : RealmResults . SORT _ ORDER _ ASCENDING and RealmResults . SORT _ ORDER _ DESCENDING constants have been replaced by Sort . ASCENDING and Sort . DESCENDING enums . <nl> @ @ - 7 , 6 + 6 , 7 @ @ <nl> * BREAKING CHANGE : Removed deprecated methods RealmQuery . minimum { Int , Float , Double } , RealmQuery . maximum { Int , Float , Double } , RealmQuery . sum { Int , Float , Double } and RealmQuery . average { Int , Float , Double } . Use RealmQuery . min ( ) , RealmQuery . max ( ) , RealmQuery . sum ( ) and RealmQuery . average ( ) instead . <nl> * Added new Dynamic API using DynamicRealm and DynamicRealmObject . <nl> * Added Realm . getSchema ( ) and DynamicRealm . getSchema ( ) . <nl> + * Realm . createOrUpdateObjectFromJson ( ) now works correctly if the RealmObject class contains a primary key ( # 1777 ) . <nl> <nl> 0 . 85 . 1 <nl> * Fixed a bug which could corrupt primary key information when updating from a Realm version < = 0 . 84 . 1

TEST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 84dee31 . . f17b6e6 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 4 , 6 + 4 , 7 @ @ 
 * BREAKING CHANGE : RealmQuery . CASE _ SENSITIVE and RealmQuery . CASE _ INSENSITIVE constants have been replaced by Case . SENSITIVE and Case . INSENSITIVE enums . 
 * BREAKING CHANGE : Realm . addChangeListener , RealmObject . addChangeListener and RealmResults . addChangeListener hold a strong reference to the listener , you should unregister the listener to avoid memory leaks . 
 * BREAKING CHANGE : Removed deprecated methods RealmQuery . minimum { Int , Float , Double } , RealmQuery . maximum { Int , Float , Double } , RealmQuery . sum { Int , Float , Double } and RealmQuery . average { Int , Float , Double } . Use RealmQuery . min ( ) , RealmQuery . max ( ) , RealmQuery . sum ( ) and RealmQuery . average ( ) instead . 
 + * BREAKING CHANGE : Removed RealmConfiguration . getSchemaMediator ( ) which is public by mistake . And RealmConfiguration . getRealmObjectClasses ( ) is added as an alternative in order to obtain the set of model classes ( # 1797 ) . 
 * Added new Dynamic API using DynamicRealm and DynamicRealmObject . 
 * Added Realm . getSchema ( ) and DynamicRealm . getSchema ( ) . 
 * Realm . createOrUpdateObjectFromJson ( ) now works correctly if the RealmObject class contains a primary key

NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 16ccfae . . c3c8954 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 4 + 1 , 3 @ @ 
 - 
 0 . 86 . 0 
 * BREAKING CHANGE : The Migration API has been replaced with a new API . 
 * BREAKING CHANGE : RealmResults . SORT _ ORDER _ ASCENDING and RealmResults . SORT _ ORDER _ DESCENDING constants have been replaced by Sort . ASCENDING and Sort . DESCENDING enums . 
 @ @ - 7 , 6 + 6 , 7 @ @ 
 * BREAKING CHANGE : Removed deprecated methods RealmQuery . minimum { Int , Float , Double } , RealmQuery . maximum { Int , Float , Double } , RealmQuery . sum { Int , Float , Double } and RealmQuery . average { Int , Float , Double } . Use RealmQuery . min ( ) , RealmQuery . max ( ) , RealmQuery . sum ( ) and RealmQuery . average ( ) instead . 
 * Added new Dynamic API using DynamicRealm and DynamicRealmObject . 
 * Added Realm . getSchema ( ) and DynamicRealm . getSchema ( ) . 
 + * Realm . createOrUpdateObjectFromJson ( ) now works correctly if the RealmObject class contains a primary key ( # 1777 ) . 
 
 0 . 85 . 1 
 * Fixed a bug which could corrupt primary key information when updating from a Realm version < = 0 . 84 . 1
