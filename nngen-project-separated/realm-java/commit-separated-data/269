BLEU SCORE: 0.027611988917697356

TEST MSG: Fix flaky tests caused by half inited ROS
GENERATED MSG: Upgrade to Sync BETA - 3 . 2

TEST DIFF (one line): diff - - git a / tools / sync _ test _ server / Dockerfile b / tools / sync _ test _ server / Dockerfile <nl> index 6404a0e . . 829ecf5 100644 <nl> - - - a / tools / sync _ test _ server / Dockerfile <nl> + + + b / tools / sync _ test _ server / Dockerfile <nl> @ @ - 12 , 12 + 12 , 12 @ @ RUN apt - get update - qq \ <nl> RUN npm init - y <nl> RUN npm install winston temp httpdispatcher @ 1 . 0 . 0 <nl> <nl> - COPY keys / public . pem keys / private . pem keys / 127 _ 0 _ 0 _ 1 - server . key . pem keys / 127 _ 0 _ 0 _ 1 - chain . crt . pem configuration . yml / <nl> - COPY ros - testing - server . js / usr / bin / <nl> - <nl> # Install realm object server <nl> RUN apt - get update - qq \ <nl> & & apt - get install - y realm - object - server - developer = $ ROS _ DE _ VERSION \ <nl> & & apt - get clean <nl> <nl> + COPY keys / public . pem keys / private . pem keys / 127 _ 0 _ 0 _ 1 - server . key . pem keys / 127 _ 0 _ 0 _ 1 - chain . crt . pem configuration . yml / <nl> + COPY ros - testing - server . js / usr / bin / <nl> + <nl> CMD / usr / bin / ros - testing - server . js / tmp / ros - testing - server . log <nl> diff - - git a / tools / sync _ test _ server / configuration . yml b / tools / sync _ test _ server / configuration . yml <nl> index d9a350f . . e3440d0 100644 <nl> - - - a / tools / sync _ test _ server / configuration . yml <nl> + + + b / tools / sync _ test _ server / configuration . yml <nl> @ @ - 154 , 7 + 154 , 7 @ @ proxy : <nl> # # The address / interface on which the HTTP proxy module should listen . This defaults <nl> # # to 127 . 0 . 0 . 1 . If you wish to listen on all available interfaces , <nl> # # uncomment the following line . <nl> - listen _ address : ' : : ' <nl> + listen _ address : ' 0 . 0 . 0 . 0 ' <nl> <nl> # # The port that the HTTP proxy module should bind to . <nl> # listen _ port : 9080 <nl> @ @ - 175 , 7 + 175 , 7 @ @ proxy : <nl> # # The address / interface on which the HTTPS proxy module should listen . This defaults <nl> # # to 127 . 0 . 0 . 1 . If you wish to listen on all available interfaces , <nl> # # uncomment the following line . <nl> - listen _ address : ' : : ' <nl> + listen _ address : ' 0 . 0 . 0 . 0 ' <nl> <nl> # # The port that the HTTPS proxy module should bind to . <nl> listen _ port : 9443 <nl> diff - - git a / tools / sync _ test _ server / ros - testing - server . js b / tools / sync _ test _ server / ros - testing - server . js <nl> index ae43a84 . . ca7163c 100755 <nl> - - - a / tools / sync _ test _ server / ros - testing - server . js <nl> + + + b / tools / sync _ test _ server / ros - testing - server . js <nl> @ @ - 33 , 7 + 33 , 13 @ @ function handleRequest ( request , response ) { <nl> <nl> var syncServerChildProcess = null ; <nl> <nl> - function startRealmObjectServer ( ) { <nl> + function startRealmObjectServer ( done ) { <nl> + / / Hack for checking the ROS is fully initialized . <nl> + / / Consider the ROS is initialized fully only if log below shows twice <nl> + / / " client : Closing Realm file : / tmp / ros117521 - 7 - 1eiqt7a / internal _ data / permission / _ _ auth . realm " <nl> + / / https : / / github . com / realm / realm - object - server / issues / 1297 <nl> + var logFindingCounter = 2 <nl> + <nl> stopRealmObjectServer ( ) ; <nl> temp . mkdir ( ' ros ' , function ( err , path ) { <nl> if ( ! err ) { <nl> @ @ - 44 , 9 + 50 , 15 @ @ function startRealmObjectServer ( ) { <nl> syncServerChildProcess = spawn ( ' realm - object - server ' , <nl> [ ' - - root ' , path , <nl> ' - - configuration ' , ' / configuration . yml ' ] , <nl> - { env : env } ) ; <nl> + { env : env } ) ; <nl> / / local config : <nl> syncServerChildProcess . stdout . on ( ' data ' , ( data ) = > { <nl> + if ( logFindingCounter ! = 0 & & / client : Closing Realm file : . * _ _ auth . realm / . test ( data ) ) { <nl> + if ( logFindingCounter = = 1 ) { <nl> + done ( ) <nl> + } <nl> + logFindingCounter - - <nl> + } <nl> winston . info ( ` stdout : $ { data } ` ) ; <nl> } ) ; <nl> <nl> @ @ - 75 , 11 + 87 , 13 @ @ function stopRealmObjectServer ( ) { <nl> } <nl> } <nl> <nl> + <nl> / / start sync server <nl> dispatcher . onGet ( " / start " , function ( req , res ) { <nl> - startRealmObjectServer ( ) ; <nl> - res . writeHead ( 200 , { ' Content - Type ' : ' text / plain ' } ) ; <nl> - res . end ( ' Starting a server ' ) ; <nl> + startRealmObjectServer ( ( ) = > { <nl> + res . writeHead ( 200 , { ' Content - Type ' : ' text / plain ' } ) ; <nl> + res . end ( ' Starting a server ' ) ; <nl> + } ) <nl> } ) ; <nl> <nl> / / stop a previously started sync server
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 05a9d88 . . bd2372d 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 29 , 7 + 29 , 7 @ @ <nl> # # # Internal <nl> <nl> * Upgraded Realm Core to 2 . 1 . 3 <nl> - * Upgraded Realm Sync to 1 . 0 . 0 - BETA - 3 . 1 <nl> + * Upgraded Realm Sync to 1 . 0 . 0 - BETA - 3 . 2 <nl> <nl> # # # Credits <nl> <nl> diff - - git a / README . md b / README . md <nl> index eb77162 . . e552001 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 164 , 19 + 164 , 30 @ @ The ` . / examples ` folder contain a number of example projects showing how Realm c <nl> <nl> Standalone examples can be [ downloaded from website ] ( https : / / realm . io / docs / java / latest / # getting - started ) . <nl> <nl> - # # Running testing Realm Object Server <nl> + # # Running Tests Using The Realm Object Server <nl> <nl> - Tests in ` syncIntegrationTest ` require a running testing server to work . <nl> - A docker image can be built from ` tools / sync _ test _ server / Dockerfile ` to run a testing server . ` tools / sync _ test _ server / start _ server . sh ` will build the docker image automatically . <nl> + Tests in ` realm / realm - library / src / syncIntegrationTest ` require a running testing server to work . <nl> + A docker image can be built from ` tools / sync _ test _ server / Dockerfile ` to run the test server . <nl> + ` tools / sync _ test _ server / start _ server . sh ` will build the docker image automatically . <nl> <nl> To run a testing server locally : <nl> - a ) Install docker . <nl> - b ) run the ` tools / sync _ test _ server / start _ server . sh ` : <nl> + <nl> + 1 . Install docker . <nl> + <nl> + 2 . Run ` tools / sync _ test _ server / start _ server . sh ` : <nl> + <nl> ` ` ` sh <nl> cd tools / sync _ test _ server <nl> . / start _ server . sh <nl> ` ` ` <nl> <nl> + 3 . Run instrumentation tests : <nl> + <nl> + ` ` ` sh <nl> + cd realm <nl> + . / gradlew connectedObjectServerDebugAndroidTest <nl> + ` ` ` <nl> + <nl> # # Contributing <nl> <nl> See [ CONTRIBUTING . md ] ( CONTRIBUTING . md ) for more details ! <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index 441b3ce . . de35027 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 1 , 8 + 1 , 8 @ @ <nl> # Realm Sync Core release used by Realm Java <nl> # https : / / github . com / realm / realm - sync / releases <nl> - REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 3 . 1 <nl> - REALM _ SYNC _ SHA256 = 43f65bde124589eff9f06ec548816776644fb80498b9aded1fc3b2fd2b9aff5f <nl> + REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 3 . 2 <nl> + REALM _ SYNC _ SHA256 = 999f4fabe9f377ab03ced221e82317d6e02361da67e0a9928c66ddb56798e58e <nl> <nl> # Object Server Release used by Integration tests <nl> # https : / / packagecloud . io / realm / realm ? filter = debs <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 1 . 0 . 0 - BETA - 2 . 1 - 271 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 1 . 0 . 0 - BETA - 2 . 3 - 310 <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> index d4601a4 . . ccf997a 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class AuthTests { <nl> SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> fail ( ) ; <nl> } catch ( ObjectServerError expected ) { <nl> - assertEquals ( ErrorCode . UNKNOWN _ ACCOUNT , expected . getErrorCode ( ) ) ; <nl> + assertEquals ( ErrorCode . INVALID _ CREDENTIALS , expected . getErrorCode ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class AuthTests { <nl> <nl> @ Override <nl> public void onError ( ObjectServerError error ) { <nl> - assertEquals ( ErrorCode . UNKNOWN _ ACCOUNT , error . getErrorCode ( ) ) ; <nl> + assertEquals ( ErrorCode . INVALID _ CREDENTIALS , error . getErrorCode ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> } <nl> } ) ;

TEST DIFF:
diff - - git a / tools / sync _ test _ server / Dockerfile b / tools / sync _ test _ server / Dockerfile 
 index 6404a0e . . 829ecf5 100644 
 - - - a / tools / sync _ test _ server / Dockerfile 
 + + + b / tools / sync _ test _ server / Dockerfile 
 @ @ - 12 , 12 + 12 , 12 @ @ RUN apt - get update - qq \ 
 RUN npm init - y 
 RUN npm install winston temp httpdispatcher @ 1 . 0 . 0 
 
 - COPY keys / public . pem keys / private . pem keys / 127 _ 0 _ 0 _ 1 - server . key . pem keys / 127 _ 0 _ 0 _ 1 - chain . crt . pem configuration . yml / 
 - COPY ros - testing - server . js / usr / bin / 
 - 
 # Install realm object server 
 RUN apt - get update - qq \ 
 & & apt - get install - y realm - object - server - developer = $ ROS _ DE _ VERSION \ 
 & & apt - get clean 
 
 + COPY keys / public . pem keys / private . pem keys / 127 _ 0 _ 0 _ 1 - server . key . pem keys / 127 _ 0 _ 0 _ 1 - chain . crt . pem configuration . yml / 
 + COPY ros - testing - server . js / usr / bin / 
 + 
 CMD / usr / bin / ros - testing - server . js / tmp / ros - testing - server . log 
 diff - - git a / tools / sync _ test _ server / configuration . yml b / tools / sync _ test _ server / configuration . yml 
 index d9a350f . . e3440d0 100644 
 - - - a / tools / sync _ test _ server / configuration . yml 
 + + + b / tools / sync _ test _ server / configuration . yml 
 @ @ - 154 , 7 + 154 , 7 @ @ proxy : 
 # # The address / interface on which the HTTP proxy module should listen . This defaults 
 # # to 127 . 0 . 0 . 1 . If you wish to listen on all available interfaces , 
 # # uncomment the following line . 
 - listen _ address : ' : : ' 
 + listen _ address : ' 0 . 0 . 0 . 0 ' 
 
 # # The port that the HTTP proxy module should bind to . 
 # listen _ port : 9080 
 @ @ - 175 , 7 + 175 , 7 @ @ proxy : 
 # # The address / interface on which the HTTPS proxy module should listen . This defaults 
 # # to 127 . 0 . 0 . 1 . If you wish to listen on all available interfaces , 
 # # uncomment the following line . 
 - listen _ address : ' : : ' 
 + listen _ address : ' 0 . 0 . 0 . 0 ' 
 
 # # The port that the HTTPS proxy module should bind to . 
 listen _ port : 9443 
 diff - - git a / tools / sync _ test _ server / ros - testing - server . js b / tools / sync _ test _ server / ros - testing - server . js 
 index ae43a84 . . ca7163c 100755 
 - - - a / tools / sync _ test _ server / ros - testing - server . js 
 + + + b / tools / sync _ test _ server / ros - testing - server . js 
 @ @ - 33 , 7 + 33 , 13 @ @ function handleRequest ( request , response ) { 
 
 var syncServerChildProcess = null ; 
 
 - function startRealmObjectServer ( ) { 
 + function startRealmObjectServer ( done ) { 
 + / / Hack for checking the ROS is fully initialized . 
 + / / Consider the ROS is initialized fully only if log below shows twice 
 + / / " client : Closing Realm file : / tmp / ros117521 - 7 - 1eiqt7a / internal _ data / permission / _ _ auth . realm " 
 + / / https : / / github . com / realm / realm - object - server / issues / 1297 
 + var logFindingCounter = 2 
 + 
 stopRealmObjectServer ( ) ; 
 temp . mkdir ( ' ros ' , function ( err , path ) { 
 if ( ! err ) { 
 @ @ - 44 , 9 + 50 , 15 @ @ function startRealmObjectServer ( ) { 
 syncServerChildProcess = spawn ( ' realm - object - server ' , 
 [ ' - - root ' , path , 
 ' - - configuration ' , ' / configuration . yml ' ] , 
 - { env : env } ) ; 
 + { env : env } ) ; 
 / / local config : 
 syncServerChildProcess . stdout . on ( ' data ' , ( data ) = > { 
 + if ( logFindingCounter ! = 0 & & / client : Closing Realm file : . * _ _ auth . realm / . test ( data ) ) { 
 + if ( logFindingCounter = = 1 ) { 
 + done ( ) 
 + } 
 + logFindingCounter - - 
 + } 
 winston . info ( ` stdout : $ { data } ` ) ; 
 } ) ; 
 
 @ @ - 75 , 11 + 87 , 13 @ @ function stopRealmObjectServer ( ) { 
 } 
 } 
 
 + 
 / / start sync server 
 dispatcher . onGet ( " / start " , function ( req , res ) { 
 - startRealmObjectServer ( ) ; 
 - res . writeHead ( 200 , { ' Content - Type ' : ' text / plain ' } ) ; 
 - res . end ( ' Starting a server ' ) ; 
 + startRealmObjectServer ( ( ) = > { 
 + res . writeHead ( 200 , { ' Content - Type ' : ' text / plain ' } ) ; 
 + res . end ( ' Starting a server ' ) ; 
 + } ) 
 } ) ; 
 
 / / stop a previously started sync server

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 05a9d88 . . bd2372d 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 29 , 7 + 29 , 7 @ @ 
 # # # Internal 
 
 * Upgraded Realm Core to 2 . 1 . 3 
 - * Upgraded Realm Sync to 1 . 0 . 0 - BETA - 3 . 1 
 + * Upgraded Realm Sync to 1 . 0 . 0 - BETA - 3 . 2 
 
 # # # Credits 
 
 diff - - git a / README . md b / README . md 
 index eb77162 . . e552001 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 164 , 19 + 164 , 30 @ @ The ` . / examples ` folder contain a number of example projects showing how Realm c 
 
 Standalone examples can be [ downloaded from website ] ( https : / / realm . io / docs / java / latest / # getting - started ) . 
 
 - # # Running testing Realm Object Server 
 + # # Running Tests Using The Realm Object Server 
 
 - Tests in ` syncIntegrationTest ` require a running testing server to work . 
 - A docker image can be built from ` tools / sync _ test _ server / Dockerfile ` to run a testing server . ` tools / sync _ test _ server / start _ server . sh ` will build the docker image automatically . 
 + Tests in ` realm / realm - library / src / syncIntegrationTest ` require a running testing server to work . 
 + A docker image can be built from ` tools / sync _ test _ server / Dockerfile ` to run the test server . 
 + ` tools / sync _ test _ server / start _ server . sh ` will build the docker image automatically . 
 
 To run a testing server locally : 
 - a ) Install docker . 
 - b ) run the ` tools / sync _ test _ server / start _ server . sh ` : 
 + 
 + 1 . Install docker . 
 + 
 + 2 . Run ` tools / sync _ test _ server / start _ server . sh ` : 
 + 
 ` ` ` sh 
 cd tools / sync _ test _ server 
 . / start _ server . sh 
 ` ` ` 
 
 + 3 . Run instrumentation tests : 
 + 
 + ` ` ` sh 
 + cd realm 
 + . / gradlew connectedObjectServerDebugAndroidTest 
 + ` ` ` 
 + 
 # # Contributing 
 
 See [ CONTRIBUTING . md ] ( CONTRIBUTING . md ) for more details ! 
 diff - - git a / dependencies . list b / dependencies . list 
 index 441b3ce . . de35027 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 1 , 8 + 1 , 8 @ @ 
 # Realm Sync Core release used by Realm Java 
 # https : / / github . com / realm / realm - sync / releases 
 - REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 3 . 1 
 - REALM _ SYNC _ SHA256 = 43f65bde124589eff9f06ec548816776644fb80498b9aded1fc3b2fd2b9aff5f 
 + REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 3 . 2 
 + REALM _ SYNC _ SHA256 = 999f4fabe9f377ab03ced221e82317d6e02361da67e0a9928c66ddb56798e58e 
 
 # Object Server Release used by Integration tests 
 # https : / / packagecloud . io / realm / realm ? filter = debs 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 1 . 0 . 0 - BETA - 2 . 1 - 271 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 1 . 0 . 0 - BETA - 2 . 3 - 310 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 index d4601a4 . . ccf997a 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public class AuthTests { 
 SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 fail ( ) ; 
 } catch ( ObjectServerError expected ) { 
 - assertEquals ( ErrorCode . UNKNOWN _ ACCOUNT , expected . getErrorCode ( ) ) ; 
 + assertEquals ( ErrorCode . INVALID _ CREDENTIALS , expected . getErrorCode ( ) ) ; 
 } 
 } 
 
 @ @ - 61 , 7 + 61 , 7 @ @ public class AuthTests { 
 
 @ Override 
 public void onError ( ObjectServerError error ) { 
 - assertEquals ( ErrorCode . UNKNOWN _ ACCOUNT , error . getErrorCode ( ) ) ; 
 + assertEquals ( ErrorCode . INVALID _ CREDENTIALS , error . getErrorCode ( ) ) ; 
 looperThread . testComplete ( ) ; 
 } 
 } ) ;
