BLEU SCORE: 0.10682175159905853

TEST MSG: Cleanup + add UIThread annotations
GENERATED MSG: Cleanup the code

TEST DIFF (one line): diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> index 02bb7bb . . a317ebe 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> @ @ - 65 , 6 + 65 , 7 @ @ public class Repository implements Closeable { <nl> * <nl> * @ return { @ code true } if the network is currently being used , { @ code false } otherwise . <nl> * / <nl> + @ UiThread <nl> public Observable < Boolean > networkInUse ( ) { <nl> return networkLoading . asObservable ( ) ; <nl> } <nl> @ @ - 72 , 6 + 73 , 7 @ @ public class Repository implements Closeable { <nl> / * * <nl> * Loads the news feed as well as all future updates . <nl> * / <nl> + @ UiThread <nl> public Observable < RealmResults < NYTimesStory > > loadNewsFeed ( @ NonNull String sectionKey , boolean forceReload ) { <nl> / / Start loading data from the network if needed <nl> / / It will put all data into Realm <nl> @ @ - 102 , 6 + 104 , 7 @ @ public class Repository implements Closeable { <nl> * @ param storyId story to update <nl> * @ param read { @ code true } if the story has been read , { @ code false } otherwise . <nl> * / <nl> + @ UiThread <nl> public void updateStoryReadState ( final String storyId , final boolean read ) { <nl> realm . executeTransaction ( new Realm . Transaction ( ) { <nl> @ Override <nl> @ @ - 119 , 6 + 122 , 7 @ @ public class Repository implements Closeable { <nl> / * * <nl> * Returns story details <nl> * / <nl> + @ UiThread <nl> public Observable < NYTimesStory > loadStory ( final String storyId ) { <nl> return realm . where ( NYTimesStory . class ) . equalTo ( NYTimesStory . URL , storyId ) . findFirstAsync ( ) <nl> . < NYTimesStory > asObservable ( ) <nl> @ @ - 133 , 6 + 137 , 7 @ @ public class Repository implements Closeable { <nl> / * * <nl> * Closes all underlying resources used by the Repository . <nl> * / <nl> + @ UiThread <nl> public void close ( ) { <nl> realm . close ( ) ; <nl> } <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java <nl> index 303bb1c . . 03bfeb1 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java <nl> @ @ - 40 , 8 + 40 , 7 @ @ public class RealmListNYTimesMultimediumDeserializer extends JsonDeserializer < Li <nl> } <nl> <nl> @ Override <nl> - public List < NYTimesMultimedium > deserialize ( JsonParser jp , DeserializationContext ctxt ) <nl> - throws IOException , JsonProcessingException { <nl> + public List < NYTimesMultimedium > deserialize ( JsonParser jp , DeserializationContext ctxt ) throws IOException { <nl> RealmList < NYTimesMultimedium > list = new RealmList < > ( ) ; <nl> <nl> TreeNode treeNode = jp . getCodec ( ) . readTree ( jp ) ;
NEAREST DIFF (one line): diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java <nl> index ff3c373 . . ab163af 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java <nl> @ @ - 33 , 6 + 33 , 7 @ @ import io . realm . examples . concurrency . services . TransactionService ; <nl> <nl> public class RealmExampleActivity extends Activity implements View . OnClickListener { <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public static final String TAG = RealmExampleActivity . class . getName ( ) ; <nl> <nl> private Realm realm = null ; <nl> @ @ - 82 , 7 + 83 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen <nl> Integer parseAge = 0 ; <nl> try { <nl> parseAge = Integer . parseInt ( personAge ) ; <nl> - } catch ( NumberFormatException e ) { <nl> + } catch ( NumberFormatException ignored ) { <nl> <nl> } <nl> <nl> @ @ - 136 , 6 + 137 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen <nl> this . stopService ( serviceIntent ) ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> private void restartTests ( ) { <nl> stopTransactionTests ( ) ; <nl> startTransactionTests ( ) ; <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java <nl> index f73f826 . . 8d502ce 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java <nl> @ @ - 34 , 8 + 34 , 6 @ @ public class SpawningService extends Service { <nl> public static final String REALM _ INSERTCOUNT _ EXTRA = " RealmInsertCountExtra " ; <nl> public static final String REALM _ READCOUNT _ EXTRA = " RealmReadCountExtra " ; <nl> <nl> - private Boolean mQuitting = false ; <nl> - <nl> private List < KillableThread > allThreads = null ; <nl> <nl> public void onCreate ( ) { <nl> @ @ - 78 , 7 + 76 , 6 @ @ public class SpawningService extends Service { <nl> } <nl> <nl> private void quit ( ) { <nl> - this . mQuitting = true ; <nl> for ( KillableThread t : allThreads ) { <nl> t . terminate ( ) ; <nl> } <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java <nl> index d353119 . . bca153d 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java <nl> @ @ - 36 , 15 + 36 , 9 @ @ public class TransactionService extends IntentService { <nl> public static final String ITERATION _ COUNT = " TestIterationCount " ; <nl> <nl> public enum TestType { <nl> - MANY _ INSERTS _ ONE _ TRANSACTION ( 1 ) , <nl> - MANY _ TRANSACTIONS ( 2 ) ; <nl> - <nl> - private int value = 1 ; <nl> - <nl> - TestType ( int value ) { <nl> - this . value = value ; <nl> - } <nl> - } ; <nl> + MANY _ INSERTS _ ONE _ TRANSACTION , <nl> + MANY _ TRANSACTIONS <nl> + } <nl> <nl> private Realm realm = null ; <nl> <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java <nl> index 34155e9 . . 24530cd 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java <nl> @ @ - 26 , 7 + 26 , 6 @ @ public class RealmReader extends Thread implements KillableThread { <nl> <nl> public static final String TAG = RealmReader . class . getName ( ) ; <nl> <nl> - private Realm realm = null ; <nl> private Context context = null ; <nl> <nl> private boolean mRunning = true ; <nl> @ @ - 38 , 7 + 37 , 7 @ @ public class RealmReader extends Thread implements KillableThread { <nl> } <nl> <nl> public void run ( ) { <nl> - realm = Realm . getInstance ( context ) ; <nl> + Realm realm = Realm . getInstance ( context ) ; <nl> <nl> int loopCount = 0 ; <nl> <nl> @ @ - 59 , 6 + 58 , 7 @ @ public class RealmReader extends Thread implements KillableThread { <nl> mRunning = false ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public int getReadCount ( ) { <nl> return mReadCount ; <nl> } <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java <nl> index 6f82e7d . . c140209 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java <nl> @ @ - 27 , 7 + 27 , 6 @ @ public class RealmWriter extends Thread implements KillableThread { <nl> <nl> public static final String TAG = RealmWriter . class . getName ( ) ; <nl> <nl> - private Realm realm = null ; <nl> private Context context = null ; <nl> <nl> private boolean mRunning = true ; <nl> @ @ - 39 , 11 + 38 , 11 @ @ public class RealmWriter extends Thread implements KillableThread { <nl> } <nl> <nl> public void run ( ) { <nl> - realm = Realm . getInstance ( context ) ; <nl> + Realm realm = Realm . getInstance ( context ) ; <nl> <nl> int iterCount = 0 ; <nl> <nl> - while ( iterCount < mInsertCount & & mRunning = = true ) { <nl> + while ( iterCount < mInsertCount & & mRunning ) { <nl> realm . beginTransaction ( ) ; <nl> <nl> Person person = realm . createObject ( Person . class ) ; <nl> @ @ - 71 , 6 + 70 , 7 @ @ public class RealmWriter extends Thread implements KillableThread { <nl> mRunning = false ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public int getInsertCount ( ) { <nl> return mInsertCount ; <nl> }

TEST DIFF:
diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 index 02bb7bb . . a317ebe 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 @ @ - 65 , 6 + 65 , 7 @ @ public class Repository implements Closeable { 
 * 
 * @ return { @ code true } if the network is currently being used , { @ code false } otherwise . 
 * / 
 + @ UiThread 
 public Observable < Boolean > networkInUse ( ) { 
 return networkLoading . asObservable ( ) ; 
 } 
 @ @ - 72 , 6 + 73 , 7 @ @ public class Repository implements Closeable { 
 / * * 
 * Loads the news feed as well as all future updates . 
 * / 
 + @ UiThread 
 public Observable < RealmResults < NYTimesStory > > loadNewsFeed ( @ NonNull String sectionKey , boolean forceReload ) { 
 / / Start loading data from the network if needed 
 / / It will put all data into Realm 
 @ @ - 102 , 6 + 104 , 7 @ @ public class Repository implements Closeable { 
 * @ param storyId story to update 
 * @ param read { @ code true } if the story has been read , { @ code false } otherwise . 
 * / 
 + @ UiThread 
 public void updateStoryReadState ( final String storyId , final boolean read ) { 
 realm . executeTransaction ( new Realm . Transaction ( ) { 
 @ Override 
 @ @ - 119 , 6 + 122 , 7 @ @ public class Repository implements Closeable { 
 / * * 
 * Returns story details 
 * / 
 + @ UiThread 
 public Observable < NYTimesStory > loadStory ( final String storyId ) { 
 return realm . where ( NYTimesStory . class ) . equalTo ( NYTimesStory . URL , storyId ) . findFirstAsync ( ) 
 . < NYTimesStory > asObservable ( ) 
 @ @ - 133 , 6 + 137 , 7 @ @ public class Repository implements Closeable { 
 / * * 
 * Closes all underlying resources used by the Repository . 
 * / 
 + @ UiThread 
 public void close ( ) { 
 realm . close ( ) ; 
 } 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java 
 index 303bb1c . . 03bfeb1 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / RealmListNYTimesMultimediumDeserializer . java 
 @ @ - 40 , 8 + 40 , 7 @ @ public class RealmListNYTimesMultimediumDeserializer extends JsonDeserializer < Li 
 } 
 
 @ Override 
 - public List < NYTimesMultimedium > deserialize ( JsonParser jp , DeserializationContext ctxt ) 
 - throws IOException , JsonProcessingException { 
 + public List < NYTimesMultimedium > deserialize ( JsonParser jp , DeserializationContext ctxt ) throws IOException { 
 RealmList < NYTimesMultimedium > list = new RealmList < > ( ) ; 
 
 TreeNode treeNode = jp . getCodec ( ) . readTree ( jp ) ;

NEAREST DIFF:
diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java 
 index ff3c373 . . ab163af 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java 
 @ @ - 33 , 6 + 33 , 7 @ @ import io . realm . examples . concurrency . services . TransactionService ; 
 
 public class RealmExampleActivity extends Activity implements View . OnClickListener { 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 public static final String TAG = RealmExampleActivity . class . getName ( ) ; 
 
 private Realm realm = null ; 
 @ @ - 82 , 7 + 83 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen 
 Integer parseAge = 0 ; 
 try { 
 parseAge = Integer . parseInt ( personAge ) ; 
 - } catch ( NumberFormatException e ) { 
 + } catch ( NumberFormatException ignored ) { 
 
 } 
 
 @ @ - 136 , 6 + 137 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen 
 this . stopService ( serviceIntent ) ; 
 } 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 private void restartTests ( ) { 
 stopTransactionTests ( ) ; 
 startTransactionTests ( ) ; 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java 
 index f73f826 . . 8d502ce 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java 
 @ @ - 34 , 8 + 34 , 6 @ @ public class SpawningService extends Service { 
 public static final String REALM _ INSERTCOUNT _ EXTRA = " RealmInsertCountExtra " ; 
 public static final String REALM _ READCOUNT _ EXTRA = " RealmReadCountExtra " ; 
 
 - private Boolean mQuitting = false ; 
 - 
 private List < KillableThread > allThreads = null ; 
 
 public void onCreate ( ) { 
 @ @ - 78 , 7 + 76 , 6 @ @ public class SpawningService extends Service { 
 } 
 
 private void quit ( ) { 
 - this . mQuitting = true ; 
 for ( KillableThread t : allThreads ) { 
 t . terminate ( ) ; 
 } 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java 
 index d353119 . . bca153d 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java 
 @ @ - 36 , 15 + 36 , 9 @ @ public class TransactionService extends IntentService { 
 public static final String ITERATION _ COUNT = " TestIterationCount " ; 
 
 public enum TestType { 
 - MANY _ INSERTS _ ONE _ TRANSACTION ( 1 ) , 
 - MANY _ TRANSACTIONS ( 2 ) ; 
 - 
 - private int value = 1 ; 
 - 
 - TestType ( int value ) { 
 - this . value = value ; 
 - } 
 - } ; 
 + MANY _ INSERTS _ ONE _ TRANSACTION , 
 + MANY _ TRANSACTIONS 
 + } 
 
 private Realm realm = null ; 
 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java 
 index 34155e9 . . 24530cd 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java 
 @ @ - 26 , 7 + 26 , 6 @ @ public class RealmReader extends Thread implements KillableThread { 
 
 public static final String TAG = RealmReader . class . getName ( ) ; 
 
 - private Realm realm = null ; 
 private Context context = null ; 
 
 private boolean mRunning = true ; 
 @ @ - 38 , 7 + 37 , 7 @ @ public class RealmReader extends Thread implements KillableThread { 
 } 
 
 public void run ( ) { 
 - realm = Realm . getInstance ( context ) ; 
 + Realm realm = Realm . getInstance ( context ) ; 
 
 int loopCount = 0 ; 
 
 @ @ - 59 , 6 + 58 , 7 @ @ public class RealmReader extends Thread implements KillableThread { 
 mRunning = false ; 
 } 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 public int getReadCount ( ) { 
 return mReadCount ; 
 } 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java 
 index 6f82e7d . . c140209 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java 
 @ @ - 27 , 7 + 27 , 6 @ @ public class RealmWriter extends Thread implements KillableThread { 
 
 public static final String TAG = RealmWriter . class . getName ( ) ; 
 
 - private Realm realm = null ; 
 private Context context = null ; 
 
 private boolean mRunning = true ; 
 @ @ - 39 , 11 + 38 , 11 @ @ public class RealmWriter extends Thread implements KillableThread { 
 } 
 
 public void run ( ) { 
 - realm = Realm . getInstance ( context ) ; 
 + Realm realm = Realm . getInstance ( context ) ; 
 
 int iterCount = 0 ; 
 
 - while ( iterCount < mInsertCount & & mRunning = = true ) { 
 + while ( iterCount < mInsertCount & & mRunning ) { 
 realm . beginTransaction ( ) ; 
 
 Person person = realm . createObject ( Person . class ) ; 
 @ @ - 71 , 6 + 70 , 7 @ @ public class RealmWriter extends Thread implements KillableThread { 
 mRunning = false ; 
 } 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 public int getInsertCount ( ) { 
 return mInsertCount ; 
 }
