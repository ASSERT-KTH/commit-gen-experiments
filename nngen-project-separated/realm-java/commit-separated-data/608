BLEU SCORE: 0.022882533035912193

TEST MSG: Object Server Example App
GENERATED MSG: Added new example showing how background threads work .

TEST DIFF (one line): diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . 81259e4 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / build . gradle <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + apply plugin : ' com . android . application ' <nl> + apply plugin : ' android - command ' <nl> + apply plugin : ' realm - android ' <nl> + <nl> + android { <nl> + compileSdkVersion rootProject . sdkVersion <nl> + buildToolsVersion rootProject . buildTools <nl> + <nl> + defaultConfig { <nl> + applicationId ' io . realm . examples . objectserver ' <nl> + targetSdkVersion rootProject . sdkVersion <nl> + minSdkVersion 15 <nl> + versionCode 1 <nl> + versionName " 1 . 0 " <nl> + } <nl> + <nl> + buildTypes { <nl> + release { <nl> + minifyEnabled false <nl> + } <nl> + debug { <nl> + minifyEnabled false <nl> + } <nl> + } <nl> + <nl> + command { <nl> + events 2000 <nl> + } <nl> + } <nl> + <nl> + dependencies { <nl> + compile ' com . android . support : support - v4 : 24 . 2 . 0 ' <nl> + compile ' com . android . support : design : 24 . 2 . 0 ' <nl> + compile ' com . jakewharton : butterknife : 8 . 3 . 0 ' <nl> + apt ' com . jakewharton : butterknife - compiler : 8 . 3 . 0 ' <nl> + } <nl> diff - - git a / examples / objectServerExample / lint . xml b / examples / objectServerExample / lint . xml <nl> new file mode 100644 <nl> index 0000000 . . 6a9810c <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / lint . xml <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < lint > <nl> + < ! - - Disable the given check in this project - - > <nl> + < issue id = " AllowBackup " severity = " ignore " / > <nl> + < issue id = " IconLauncherShape " severity = " ignore " / > <nl> + < issue id = " IconMissingDensityFolder " severity = " ignore " / > <nl> + < issue id = " GoogleAppIndexingWarning " severity = " ignore " / > <nl> + < issue id = " LogNotTimber " severity = " ignore " / > <nl> + < issue id = " InvalidPackage " severity = " ignore " / > <nl> + < / lint > <nl> diff - - git a / examples / objectServerExample / src / main / AndroidManifest . xml b / examples / objectServerExample / src / main / AndroidManifest . xml <nl> new file mode 100644 <nl> index 0000000 . . 45e5d52 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / AndroidManifest . xml <nl> @ @ - 0 , 0 + 1 , 24 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + package = " io . realm . examples . objectserver " > <nl> + <nl> + < application <nl> + android : icon = " @ mipmap / ic _ launcher " <nl> + android : label = " @ string / app _ name " <nl> + android : name = " io . realm . examples . objectserver . MyApplication " <nl> + android : theme = " @ style / AppTheme " > <nl> + < activity <nl> + android : name = " io . realm . examples . objectserver . CounterActivity " <nl> + android : label = " @ string / app _ name " > <nl> + < intent - filter > <nl> + < action android : name = " android . intent . action . MAIN " / > <nl> + < category android : name = " android . intent . category . LAUNCHER " / > <nl> + < / intent - filter > <nl> + < / activity > <nl> + < activity <nl> + android : name = " io . realm . examples . objectserver . LoginActivity " <nl> + android : label = " Login " > <nl> + < / activity > <nl> + < / application > <nl> + <nl> + < / manifest > <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> new file mode 100644 <nl> index 0000000 . . cc1595f <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> @ @ - 0 , 0 + 1 , 163 @ @ <nl> + / * <nl> + * Copyright 2016 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . objectserver ; <nl> + <nl> + import android . content . Intent ; <nl> + import android . os . Bundle ; <nl> + import android . support . v7 . app . AppCompatActivity ; <nl> + import android . view . Menu ; <nl> + import android . view . MenuItem ; <nl> + import android . widget . TextView ; <nl> + <nl> + import butterknife . BindView ; <nl> + import butterknife . ButterKnife ; <nl> + import butterknife . OnClick ; <nl> + import io . realm . Realm ; <nl> + import io . realm . RealmChangeListener ; <nl> + import io . realm . RealmResults ; <nl> + import io . realm . examples . objectserver . model . CRDTCounter ; <nl> + import io . realm . examples . objectserver . model . CounterOperation ; <nl> + import io . realm . objectserver . SyncConfiguration ; <nl> + import io . realm . objectserver . User ; <nl> + <nl> + public class CounterActivity extends AppCompatActivity { <nl> + <nl> + private Realm realm ; <nl> + private RealmResults < CounterOperation > counter ; <nl> + <nl> + @ BindView ( R . id . text _ counter ) TextView counterView ; <nl> + <nl> + @ Override <nl> + protected void onCreate ( Bundle savedInstanceState ) { <nl> + super . onCreate ( savedInstanceState ) ; <nl> + setContentView ( R . layout . activity _ counter ) ; <nl> + ButterKnife . bind ( this ) ; <nl> + <nl> + / / Check if we have a valid user , otherwise redirect to login <nl> + User user = MyApplication . CURRENT _ USER ; <nl> + if ( user = = null ) { <nl> + gotoLoginActivity ( ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + protected void onStart ( ) { <nl> + super . onStart ( ) ; <nl> + if ( MyApplication . CURRENT _ USER ! = null ) { <nl> + / / Create a RealmConfiguration for our user <nl> + SyncConfiguration config = new SyncConfiguration . Builder ( this ) <nl> + . initialData ( new Realm . Transaction ( ) { <nl> + @ Override <nl> + public void execute ( Realm realm ) { <nl> + realm . createObject ( CRDTCounter . class , 1 ) ; <nl> + } <nl> + } ) <nl> + . user ( MyApplication . CURRENT _ USER ) <nl> + . serverUrl ( " realm : / / " + MyApplication . OBJECT _ SERVER _ IP + " / ~ / default " ) <nl> + . build ( ) ; <nl> + <nl> + / / This will automatically sync all changes in the background for as long as the Realm is open <nl> + realm = Realm . getInstance ( config ) ; <nl> + <nl> + / / FIXME Looks like PrimaryKey and lists are not working correctly yet <nl> + / / counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; <nl> + / / counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> + / / @ Override <nl> + / / public void onChange ( CRDTCounter counter ) { <nl> + / / if ( counter . isValid ( ) ) { <nl> + / / counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> + / / } else { <nl> + / / counterView . setText ( " - " ) ; <nl> + / / } <nl> + / / } <nl> + / / } ) ; <nl> + <nl> + counter = realm . where ( CounterOperation . class ) . findAllAsync ( ) ; <nl> + counter . addChangeListener ( new RealmChangeListener < RealmResults < CounterOperation > > ( ) { <nl> + @ Override <nl> + public void onChange ( RealmResults < CounterOperation > result ) { <nl> + / / FIXME Why isn ' t this triggered when the DB is opened ? <nl> + Number sum = result . sum ( " adjustment " ) ; <nl> + if ( sum ! = null ) { <nl> + counterView . setText ( Long . toString ( sum . longValue ( ) ) ) ; <nl> + } else { <nl> + counterView . setText ( " 0 " ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + counterView . setText ( " 0 " ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + protected void onStop ( ) { <nl> + super . onStop ( ) ; <nl> + closeRealm ( ) ; <nl> + } <nl> + <nl> + private void closeRealm ( ) { <nl> + if ( realm ! = null & & ! realm . isClosed ( ) ) { <nl> + realm . close ( ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public boolean onCreateOptionsMenu ( Menu menu ) { <nl> + getMenuInflater ( ) . inflate ( R . menu . menu _ counter , menu ) ; <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean onOptionsItemSelected ( MenuItem item ) { <nl> + switch ( item . getItemId ( ) ) { <nl> + case R . id . action _ logout : <nl> + MyApplication . CURRENT _ USER . logout ( ) ; <nl> + closeRealm ( ) ; <nl> + gotoLoginActivity ( ) ; <nl> + return true ; <nl> + <nl> + default : <nl> + return super . onOptionsItemSelected ( item ) ; <nl> + } <nl> + } <nl> + <nl> + @ OnClick ( R . id . upper ) <nl> + public void incrementCounter ( ) { <nl> + adjustCounter ( new CounterOperation ( 1 ) ) ; <nl> + } <nl> + <nl> + @ OnClick ( R . id . lower ) <nl> + public void decrementCounter ( ) { <nl> + adjustCounter ( new CounterOperation ( - 1 ) ) ; <nl> + } <nl> + <nl> + private void adjustCounter ( final CounterOperation ops ) { <nl> + / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI <nl> + / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . <nl> + realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> + @ Override <nl> + public void execute ( Realm realm ) { <nl> + realm . copyToRealm ( ops ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + private void gotoLoginActivity ( ) { <nl> + Intent intent = new Intent ( this , LoginActivity . class ) ; <nl> + startActivity ( intent ) ; <nl> + } <nl> + } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> new file mode 100644 <nl> index 0000000 . . adbc6fa <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> @ @ - 0 , 0 + 1 , 144 @ @ <nl> + / * <nl> + * Copyright 2016 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . objectserver ; <nl> + <nl> + import android . app . ProgressDialog ; <nl> + import android . os . Bundle ; <nl> + import android . support . v7 . app . AppCompatActivity ; <nl> + import android . view . View ; <nl> + import android . widget . Button ; <nl> + import android . widget . EditText ; <nl> + import android . widget . Toast ; <nl> + <nl> + import butterknife . BindView ; <nl> + import butterknife . ButterKnife ; <nl> + import io . realm . objectserver . Credentials ; <nl> + import io . realm . objectserver . ObjectServerError ; <nl> + import io . realm . objectserver . User ; <nl> + import io . realm . objectserver . UserStore ; <nl> + <nl> + public class LoginActivity extends AppCompatActivity { <nl> + <nl> + private UserStore userStore = MyApplication . USER _ STORE ; <nl> + <nl> + @ BindView ( R . id . input _ username ) EditText username ; <nl> + @ BindView ( R . id . input _ password ) EditText password ; <nl> + @ BindView ( R . id . button _ login ) Button loginButton ; <nl> + @ BindView ( R . id . button _ create ) Button createUserButton ; <nl> + <nl> + @ Override <nl> + public void onCreate ( Bundle savedInstanceState ) { <nl> + super . onCreate ( savedInstanceState ) ; <nl> + setContentView ( R . layout . activity _ login ) ; <nl> + ButterKnife . bind ( this ) ; <nl> + loginButton . setOnClickListener ( new View . OnClickListener ( ) { <nl> + @ Override <nl> + public void onClick ( View v ) { <nl> + login ( false ) ; <nl> + } <nl> + } ) ; <nl> + createUserButton . setOnClickListener ( new View . OnClickListener ( ) { <nl> + @ Override <nl> + public void onClick ( View v ) { <nl> + login ( true ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + public void login ( boolean createUser ) { <nl> + if ( ! validate ( ) ) { <nl> + onLoginFailed ( " Invalid username or password " ) ; <nl> + return ; <nl> + } <nl> + <nl> + createUserButton . setEnabled ( false ) ; <nl> + loginButton . setEnabled ( false ) ; <nl> + <nl> + final ProgressDialog progressDialog = new ProgressDialog ( LoginActivity . this ) ; <nl> + progressDialog . setIndeterminate ( true ) ; <nl> + progressDialog . setMessage ( " Authenticating . . . " ) ; <nl> + progressDialog . show ( ) ; <nl> + <nl> + String username = this . username . getText ( ) . toString ( ) ; <nl> + String password = this . password . getText ( ) . toString ( ) ; <nl> + <nl> + Credentials creds = Credentials . fromUsernamePassword ( username , password , createUser ) ; <nl> + String authUrl = " http : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 8080 / auth " ; <nl> + User . Callback callback = new User . Callback ( ) { <nl> + @ Override <nl> + public void onSuccess ( User user ) { <nl> + progressDialog . dismiss ( ) ; <nl> + userStore . saveAsync ( MyApplication . APP _ USER _ KEY , user ) ; / / TODO Use Async <nl> + MyApplication . CURRENT _ USER = user ; <nl> + onLoginSuccess ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onError ( ObjectServerError error ) { <nl> + progressDialog . dismiss ( ) ; <nl> + String errorMsg ; <nl> + switch ( error . errorCode ( ) ) { <nl> + case UNKNOWN _ ACCOUNT : <nl> + errorMsg = " Account does not exists . " ; <nl> + break ; <nl> + case INVALID _ CREDENTIALS : <nl> + errorMsg = " User name and password does not match " ; <nl> + break ; <nl> + default : <nl> + errorMsg = error . toString ( ) ; <nl> + } <nl> + onLoginFailed ( errorMsg ) ; <nl> + } <nl> + } ; <nl> + <nl> + User . loginAsync ( creds , authUrl , callback ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onBackPressed ( ) { <nl> + / / Disable going back to the MainActivity <nl> + moveTaskToBack ( true ) ; <nl> + } <nl> + <nl> + public void onLoginSuccess ( ) { <nl> + loginButton . setEnabled ( true ) ; <nl> + createUserButton . setEnabled ( true ) ; <nl> + finish ( ) ; <nl> + } <nl> + <nl> + public void onLoginFailed ( String errorMsg ) { <nl> + loginButton . setEnabled ( true ) ; <nl> + createUserButton . setEnabled ( true ) ; <nl> + Toast . makeText ( getBaseContext ( ) , errorMsg , Toast . LENGTH _ LONG ) . show ( ) ; <nl> + } <nl> + <nl> + public boolean validate ( ) { <nl> + boolean valid = true ; <nl> + String email = username . getText ( ) . toString ( ) ; <nl> + String password = this . password . getText ( ) . toString ( ) ; <nl> + <nl> + if ( email . isEmpty ( ) ) { <nl> + valid = false ; <nl> + } <nl> + <nl> + if ( password . isEmpty ( ) ) { <nl> + valid = false ; <nl> + } <nl> + <nl> + return valid ; <nl> + } <nl> + } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> new file mode 100644 <nl> index 0000000 . . 008ca06 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> @ @ - 0 , 0 + 1 , 37 @ @ <nl> + / * <nl> + * Copyright 2016 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . objectserver ; <nl> + <nl> + import android . app . Application ; <nl> + <nl> + import io . realm . objectserver . User ; <nl> + import io . realm . objectserver . UserStore ; <nl> + import io . realm . objectserver . android . SharedPrefsUserStore ; <nl> + <nl> + public class MyApplication extends Application { <nl> + <nl> + public static final String OBJECT _ SERVER _ IP = " 192 . 168 . 104 . 22 " ; <nl> + public static final String APP _ USER _ KEY = " defaultAppUser " ; <nl> + public static UserStore USER _ STORE ; <nl> + public static User CURRENT _ USER = null ; <nl> + <nl> + @ Override <nl> + public void onCreate ( ) { <nl> + super . onCreate ( ) ; <nl> + USER _ STORE = new SharedPrefsUserStore ( this ) ; <nl> + } <nl> + } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java <nl> new file mode 100644 <nl> index 0000000 . . 93096e3 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java <nl> @ @ - 0 , 0 + 1 , 50 @ @ <nl> + / * <nl> + * Copyright 2016 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . objectserver . model ; <nl> + <nl> + import io . realm . RealmList ; <nl> + import io . realm . RealmObject ; <nl> + import io . realm . annotations . PrimaryKey ; <nl> + <nl> + / * * <nl> + * Counter class that is eventually consistent . Two devices can simultaneous increment this and eventually reach <nl> + * the same value . <nl> + * <nl> + * @ see < href ref = " https : / / en . wikipedia . org / wiki / Conflict - free _ replicated _ data _ type " > Conflict Free Replicated Data Structures < / href > <nl> + * / <nl> + public class CRDTCounter extends RealmObject { <nl> + <nl> + @ PrimaryKey <nl> + private long id ; <nl> + private RealmList < CounterOperation > operations ; <nl> + <nl> + public CRDTCounter ( ) { <nl> + / / Required by Realm <nl> + } <nl> + <nl> + public CRDTCounter ( long id ) { <nl> + this . id = id ; <nl> + } <nl> + <nl> + public long getCount ( ) { <nl> + return operations . where ( ) . sum ( " adjustment " ) . longValue ( ) ; <nl> + } <nl> + <nl> + public void add ( long val ) { <nl> + operations . add ( new CounterOperation ( val ) ) ; <nl> + } <nl> + } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java <nl> new file mode 100644 <nl> index 0000000 . . 53342f6 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + / * <nl> + * Copyright 2016 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . objectserver . model ; <nl> + <nl> + import io . realm . RealmObject ; <nl> + <nl> + public class CounterOperation extends RealmObject { <nl> + public long adjustment ; <nl> + public CounterOperation ( ) { } ; <nl> + public CounterOperation ( long adjustment ) { <nl> + this . adjustment = adjustment ; <nl> + } <nl> + } <nl> diff - - git a / examples / objectServerExample / src / main / res / drawable - xxhdpi / ic _ exit _ to _ app _ white _ 24dp . png b / examples / objectServerExample / src / main / res / drawable - xxhdpi / ic _ exit _ to _ app _ white _ 24dp . png <nl> new file mode 100644 <nl> index 0000000 . . c04fe6e <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / drawable - xxhdpi / ic _ exit _ to _ app _ white _ 24dp . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / drawable - xxxhdpi / ic _ exit _ to _ app _ white _ 24dp . png b / examples / objectServerExample / src / main / res / drawable - xxxhdpi / ic _ exit _ to _ app _ white _ 24dp . png <nl> new file mode 100644 <nl> index 0000000 . . 27a9d7b <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / drawable - xxxhdpi / ic _ exit _ to _ app _ white _ 24dp . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / drawable / button _ counter . xml b / examples / objectServerExample / src / main / res / drawable / button _ counter . xml <nl> new file mode 100644 <nl> index 0000000 . . 0d8fd82 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / drawable / button _ counter . xml <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < selector xmlns : android = " http : / / schemas . android . com / apk / res / android " > <nl> + < item android : drawable = " @ color / touch _ area _ pressed " android : state _ pressed = " true " / > <nl> + < item android : drawable = " @ color / touch _ area _ pressed " android : state _ focused = " true " / > <nl> + < item android : drawable = " @ android : color / background _ light " / > <nl> + < / selector > <nl> diff - - git a / examples / objectServerExample / src / main / res / drawable / logo . png b / examples / objectServerExample / src / main / res / drawable / logo . png <nl> new file mode 100755 <nl> index 0000000 . . 91826a7 <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / drawable / logo . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ counter . xml b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml <nl> new file mode 100644 <nl> index 0000000 . . 62127ec <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml <nl> @ @ - 0 , 0 + 1 , 37 @ @ <nl> + < RelativeLayout <nl> + xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " > <nl> + <nl> + < LinearLayout <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " <nl> + android : orientation = " vertical " <nl> + android : weightSum = " 1 . 0 " > <nl> + <nl> + < View <nl> + android : id = " @ + id / upper " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " 0dp " <nl> + android : layout _ weight = " 0 . 5 " <nl> + android : background = " @ drawable / button _ counter " > <nl> + < / View > <nl> + <nl> + < View <nl> + android : id = " @ + id / lower " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " 0dp " <nl> + android : layout _ weight = " 0 . 5 " <nl> + android : background = " @ drawable / button _ counter " > <nl> + < / View > <nl> + < / LinearLayout > <nl> + <nl> + < TextView <nl> + android : id = " @ + id / text _ counter " <nl> + android : layout _ width = " wrap _ content " <nl> + android : layout _ height = " wrap _ content " <nl> + android : layout _ centerInParent = " true " <nl> + android : fontFamily = " sans - serif - light " <nl> + android : textSize = " 160sp " / > <nl> + <nl> + < / RelativeLayout > <nl> diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ login . xml b / examples / objectServerExample / src / main / res / layout / activity _ login . xml <nl> new file mode 100644 <nl> index 0000000 . . 142ad53 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / layout / activity _ login . xml <nl> @ @ - 0 , 0 + 1 , 67 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < ScrollView xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + android : layout _ width = " fill _ parent " <nl> + android : layout _ height = " fill _ parent " <nl> + android : fitsSystemWindows = " true " > <nl> + <nl> + < LinearLayout <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : orientation = " vertical " <nl> + android : paddingLeft = " 24dp " <nl> + android : paddingRight = " 24dp " <nl> + android : paddingTop = " 56dp " > <nl> + <nl> + < ImageView <nl> + android : layout _ width = " wrap _ content " <nl> + android : layout _ height = " 72dp " <nl> + android : layout _ gravity = " center _ horizontal " <nl> + android : layout _ marginBottom = " 24dp " <nl> + android : src = " @ drawable / logo " / > <nl> + <nl> + < android . support . design . widget . TextInputLayout <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : layout _ marginBottom = " 8dp " <nl> + android : layout _ marginTop = " 8dp " > <nl> + <nl> + < EditText <nl> + android : id = " @ + id / input _ username " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : hint = " Username " <nl> + android : inputType = " text " / > <nl> + < / android . support . design . widget . TextInputLayout > <nl> + <nl> + < android . support . design . widget . TextInputLayout <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : layout _ marginBottom = " 8dp " <nl> + android : layout _ marginTop = " 8dp " > <nl> + <nl> + < EditText <nl> + android : id = " @ + id / input _ password " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : hint = " Password " <nl> + android : inputType = " textPassword " / > <nl> + < / android . support . design . widget . TextInputLayout > <nl> + <nl> + < android . support . v7 . widget . AppCompatButton <nl> + android : id = " @ + id / button _ login " <nl> + android : layout _ width = " fill _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : layout _ marginBottom = " 12dp " <nl> + android : layout _ marginTop = " 24dp " <nl> + android : padding = " 12dp " <nl> + android : text = " Login " / > <nl> + <nl> + < android . support . v7 . widget . AppCompatButton <nl> + android : id = " @ + id / button _ create " <nl> + android : layout _ width = " fill _ parent " <nl> + android : layout _ height = " wrap _ content " <nl> + android : layout _ marginBottom = " 24dp " <nl> + android : padding = " 12dp " <nl> + android : text = " Create account and login " / > <nl> + < / LinearLayout > <nl> + < / ScrollView > <nl> \ No newline at end of file <nl> diff - - git a / examples / objectServerExample / src / main / res / menu / menu _ counter . xml b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml <nl> new file mode 100644 <nl> index 0000000 . . 858fd2e <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + < menu xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : app = " http : / / schemas . android . com / apk / res - auto " <nl> + xmlns : tools = " http : / / schemas . android . com / tools " <nl> + tools : context = " . CounterActivity " > <nl> + < item <nl> + android : id = " @ + id / action _ logout " <nl> + android : orderInCategory = " 100 " <nl> + android : title = " Logout " <nl> + android : icon = " @ drawable / ic _ exit _ to _ app _ white _ 24dp " <nl> + app : showAsAction = " always " / > <nl> + < / menu > <nl> diff - - git a / examples / objectServerExample / src / main / res / mipmap - hdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - hdpi / ic _ launcher . png <nl> new file mode 100755 <nl> index 0000000 . . 58303af <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - hdpi / ic _ launcher . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / mipmap - mdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - mdpi / ic _ launcher . png <nl> new file mode 100755 <nl> index 0000000 . . 9b29cae <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - mdpi / ic _ launcher . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / mipmap - xhdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - xhdpi / ic _ launcher . png <nl> new file mode 100755 <nl> index 0000000 . . 15527b1 <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - xhdpi / ic _ launcher . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / mipmap - xxhdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - xxhdpi / ic _ launcher . png <nl> new file mode 100755 <nl> index 0000000 . . eb9ece0 <nl> Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - xxhdpi / ic _ launcher . png differ <nl> diff - - git a / examples / objectServerExample / src / main / res / values - w820dp / dimens . xml b / examples / objectServerExample / src / main / res / values - w820dp / dimens . xml <nl> new file mode 100644 <nl> index 0000000 . . 63fc816 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / values - w820dp / dimens . xml <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + < resources > <nl> + < ! - - Example customization of dimensions originally defined in res / values / dimens . xml <nl> + ( such as screen margins ) for screens with more than 820dp of available width . This <nl> + would include 7 " and 10 " devices in landscape ( ~ 960dp and ~ 1280dp respectively ) . - - > <nl> + < dimen name = " activity _ horizontal _ margin " > 64dp < / dimen > <nl> + < / resources > <nl> diff - - git a / examples / objectServerExample / src / main / res / values / dimens . xml b / examples / objectServerExample / src / main / res / values / dimens . xml <nl> new file mode 100644 <nl> index 0000000 . . 47c8224 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / values / dimens . xml <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + < resources > <nl> + < ! - - Default screen margins , per the Android Design guidelines . - - > <nl> + < dimen name = " activity _ horizontal _ margin " > 16dp < / dimen > <nl> + < dimen name = " activity _ vertical _ margin " > 16dp < / dimen > <nl> + < / resources > <nl> diff - - git a / examples / objectServerExample / src / main / res / values / realm _ colors . xml b / examples / objectServerExample / src / main / res / values / realm _ colors . xml <nl> new file mode 100644 <nl> index 0000000 . . aada8ea <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / values / realm _ colors . xml <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < resources > <nl> + / / Grays <nl> + < color name = " charcoal " > # 1C233F < / color > <nl> + < color name = " elephant " > # 9A9BA5 < / color > <nl> + < color name = " elephant _ half " > # b1b3bf < / color > <nl> + < color name = " dove " > # EBEBF2 < / color > <nl> + <nl> + / / Orb colors <nl> + < color name = " ultramarine " > # 39477F < / color > <nl> + < color name = " indigo " > # 59569E < / color > <nl> + < color name = " grape _ jelly " > # 9A59A5 < / color > <nl> + < color name = " mulberry " > # D34CA3 < / color > <nl> + < color name = " flamingo " > # F25192 < / color > <nl> + < color name = " sexy _ salmon " > # F77C88 < / color > <nl> + < color name = " peach " > # FC9F95 < / color > <nl> + < color name = " melon " > # FCC397 < / color > <nl> + <nl> + / / Material adjustments <nl> + < color name = " flamingo _ darker " > # d64881 < / color > <nl> + < color name = " touch _ area _ pressed " > # dadada < / color > <nl> + <nl> + < / resources > <nl> \ No newline at end of file <nl> diff - - git a / examples / objectServerExample / src / main / res / values / strings . xml b / examples / objectServerExample / src / main / res / values / strings . xml <nl> new file mode 100644 <nl> index 0000000 . . 10e43bd <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / values / strings . xml <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < resources > <nl> + < string name = " app _ name " > Object Server Example < / string > <nl> + < / resources > <nl> diff - - git a / examples / objectServerExample / src / main / res / values / styles . xml b / examples / objectServerExample / src / main / res / values / styles . xml <nl> new file mode 100644 <nl> index 0000000 . . 333a494 <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / src / main / res / values / styles . xml <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < resources > <nl> + <nl> + < ! - - Base application theme . - - > <nl> + < style name = " AppTheme " parent = " Theme . AppCompat . Light . DarkActionBar " > <nl> + < item name = " colorPrimary " > @ color / flamingo < / item > <nl> + < item name = " colorPrimaryDark " > @ color / flamingo _ darker < / item > <nl> + < item name = " colorAccent " > @ color / ultramarine < / item > <nl> + < / style > <nl> + < / resources > <nl> + <nl> diff - - git a / examples / settings . gradle b / examples / settings . gradle <nl> index 9b18f1e . . d9922ed 100644 <nl> - - - a / examples / settings . gradle <nl> + + + b / examples / settings . gradle <nl> @ @ - 11 , 6 + 11 , 7 @ @ include ' threadExample ' <nl> include ' unitTestExample ' <nl> include ' newsreaderExample ' <nl> include ' rxJavaExample ' <nl> + include ' objectServerExample ' <nl> <nl> rootProject . name = ' realm - examples ' <nl>
NEAREST DIFF (one line): diff - - git a / examples / threadexample / . gitignore b / examples / threadexample / . gitignore <nl> new file mode 100644 <nl> index 0000000 . . 796b96d <nl> - - - / dev / null <nl> + + + b / examples / threadexample / . gitignore <nl> @ @ - 0 , 0 + 1 @ @ <nl> + / build <nl> diff - - git a / examples / threadexample / build . gradle b / examples / threadexample / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . 1b6d599 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / build . gradle <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + apply plugin : ' com . android . application ' <nl> + <nl> + android { <nl> + compileSdkVersion 21 <nl> + buildToolsVersion " 21 . 1 . 1 " <nl> + <nl> + defaultConfig { <nl> + applicationId " io . realm . examples . threads " <nl> + minSdkVersion 15 <nl> + targetSdkVersion 21 <nl> + versionCode 1 <nl> + versionName " 1 . 0 " <nl> + } <nl> + buildTypes { <nl> + release { <nl> + minifyEnabled false <nl> + proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> + } <nl> + } <nl> + } <nl> + <nl> + tasks . preBuild { <nl> + dependsOn " : realm : androidJar " <nl> + } <nl> + <nl> + dependencies { <nl> + compile ' com . android . support : appcompat - v7 : 21 . 0 . + ' <nl> + compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) <nl> + } <nl> diff - - git a / examples / threadexample / proguard - rules . pro b / examples / threadexample / proguard - rules . pro <nl> new file mode 100644 <nl> index 0000000 . . a965f92 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / proguard - rules . pro <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + # Add project specific ProGuard rules here . <nl> + # By default , the flags in this file are appended to flags specified <nl> + # in / usr / local / opt / android - sdk / tools / proguard / proguard - android . txt <nl> + # You can edit the include path and order by changing the proguardFiles <nl> + # directive in build . gradle . <nl> + # <nl> + # For more details , see <nl> + # http : / / developer . android . com / guide / developing / tools / proguard . html <nl> + <nl> + # Add any project specific keep options here : <nl> + <nl> + # If your project uses WebView with JS , uncomment the following <nl> + # and specify the fully qualified class name to the JavaScript interface <nl> + # class : <nl> + # - keepclassmembers class fqcn . of . javascript . interface . for . webview { <nl> + # public * ; <nl> + # } <nl> diff - - git a / examples / threadexample / src / main / AndroidManifest . xml b / examples / threadexample / src / main / AndroidManifest . xml <nl> new file mode 100644 <nl> index 0000000 . . f966b2e <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / AndroidManifest . xml <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + package = " io . realm . myapplication " > <nl> + <nl> + < application <nl> + android : allowBackup = " true " <nl> + android : icon = " @ drawable / ic _ launcher " <nl> + android : label = " @ string / app _ name " <nl> + android : theme = " @ style / AppTheme " > <nl> + < activity <nl> + android : name = " io . realm . threadexample . ThreadExampleActivity " <nl> + android : label = " @ string / app _ name " > <nl> + < intent - filter > <nl> + < action android : name = " android . intent . action . MAIN " / > <nl> + <nl> + < category android : name = " android . intent . category . LAUNCHER " / > <nl> + < / intent - filter > <nl> + < / activity > <nl> + < / application > <nl> + <nl> + < / manifest > <nl> diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / AsyncTaskFragment . java b / examples / threadexample / src / main / java / io / realm / threadexample / AsyncTaskFragment . java <nl> new file mode 100644 <nl> index 0000000 . . 8a894dd <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / java / io / realm / threadexample / AsyncTaskFragment . java <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . threadexample ; <nl> + <nl> + import android . os . Bundle ; <nl> + import android . support . v4 . app . Fragment ; <nl> + import android . view . LayoutInflater ; <nl> + import android . view . View ; <nl> + import android . view . ViewGroup ; <nl> + <nl> + import io . realm . myapplication . R ; <nl> + <nl> + / * * <nl> + * This fragment demonstrates how Realm can work with AsyncTasks . <nl> + * / <nl> + public class AsyncTaskFragment extends Fragment { <nl> + <nl> + public static AsyncTaskFragment newInstance ( int sectionNumber ) { <nl> + AsyncTaskFragment fragment = new AsyncTaskFragment ( ) ; <nl> + Bundle args = new Bundle ( ) ; <nl> + args . putInt ( ThreadExampleActivity . ARG _ SECTION _ NUMBER , sectionNumber ) ; <nl> + fragment . setArguments ( args ) ; <nl> + return fragment ; <nl> + } <nl> + <nl> + <nl> + @ Override <nl> + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { <nl> + View rootView = inflater . inflate ( R . layout . fragment _ asynctask , container , false ) ; <nl> + return rootView ; <nl> + } <nl> + } <nl> diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / ThreadExampleActivity . java b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadExampleActivity . java <nl> new file mode 100644 <nl> index 0000000 . . 03fcd1c <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadExampleActivity . java <nl> @ @ - 0 , 0 + 1 , 118 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . threadexample ; <nl> + <nl> + import android . os . Bundle ; <nl> + import android . support . v4 . app . Fragment ; <nl> + import android . support . v4 . app . FragmentManager ; <nl> + import android . support . v4 . app . FragmentPagerAdapter ; <nl> + import android . support . v4 . app . FragmentTransaction ; <nl> + import android . support . v4 . view . ViewPager ; <nl> + import android . support . v7 . app . ActionBar ; <nl> + import android . support . v7 . app . ActionBarActivity ; <nl> + <nl> + import java . util . Locale ; <nl> + <nl> + import io . realm . myapplication . R ; <nl> + <nl> + <nl> + public class ThreadExampleActivity extends ActionBarActivity implements android . support . v7 . app . ActionBar . TabListener { <nl> + <nl> + public static final String ARG _ SECTION _ NUMBER = " arg . section _ number " ; <nl> + <nl> + private SectionsPagerAdapter pageAdapter ; <nl> + private ViewPager viewPager ; <nl> + <nl> + @ Override <nl> + protected void onCreate ( Bundle savedInstanceState ) { <nl> + super . onCreate ( savedInstanceState ) ; <nl> + setContentView ( R . layout . activity _ main ) ; <nl> + <nl> + / / Set up the action bar . <nl> + final android . support . v7 . app . ActionBar actionBar = getSupportActionBar ( ) ; <nl> + actionBar . setNavigationMode ( android . support . v7 . app . ActionBar . NAVIGATION _ MODE _ TABS ) ; <nl> + <nl> + pageAdapter = new SectionsPagerAdapter ( getSupportFragmentManager ( ) ) ; <nl> + viewPager = ( ViewPager ) findViewById ( R . id . pager ) ; <nl> + viewPager . setAdapter ( pageAdapter ) ; <nl> + <nl> + viewPager . setOnPageChangeListener ( new ViewPager . SimpleOnPageChangeListener ( ) { <nl> + @ Override <nl> + public void onPageSelected ( int position ) { <nl> + actionBar . setSelectedNavigationItem ( position ) ; <nl> + } <nl> + } ) ; <nl> + <nl> + for ( int i = 0 ; i < pageAdapter . getCount ( ) ; i + + ) { <nl> + getSupportActionBar ( ) . addTab ( getSupportActionBar ( ) . newTab ( ) <nl> + . setText ( pageAdapter . getPageTitle ( i ) ) <nl> + . setTabListener ( this ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + protected void onDestroy ( ) { <nl> + super . onDestroy ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onTabSelected ( ActionBar . Tab tab , FragmentTransaction fragmentTransaction ) { <nl> + viewPager . setCurrentItem ( tab . getPosition ( ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onTabUnselected ( ActionBar . Tab tab , FragmentTransaction fragmentTransaction ) { <nl> + <nl> + } <nl> + <nl> + @ Override <nl> + public void onTabReselected ( ActionBar . Tab tab , FragmentTransaction fragmentTransaction ) { <nl> + <nl> + } <nl> + <nl> + <nl> + public class SectionsPagerAdapter extends FragmentPagerAdapter { <nl> + <nl> + public SectionsPagerAdapter ( FragmentManager fm ) { <nl> + super ( fm ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public Fragment getItem ( int position ) { <nl> + switch ( position ) { <nl> + case 0 : return new ThreadFragment ( ) ; <nl> + case 1 : return new AsyncTaskFragment ( ) ; <nl> + default : return null ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public int getCount ( ) { <nl> + return 2 ; <nl> + } <nl> + <nl> + @ Override <nl> + public CharSequence getPageTitle ( int position ) { <nl> + Locale l = Locale . getDefault ( ) ; <nl> + switch ( position ) { <nl> + case 0 : return getString ( R . string . title _ section1 ) . toUpperCase ( l ) ; <nl> + case 1 : return getString ( R . string . title _ section2 ) . toUpperCase ( l ) ; <nl> + default : return null ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / ThreadFragment . java b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadFragment . java <nl> new file mode 100644 <nl> index 0000000 . . e579fe6 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadFragment . java <nl> @ @ - 0 , 0 + 1 , 165 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . threadexample ; <nl> + <nl> + import android . app . Activity ; <nl> + import android . os . Bundle ; <nl> + import android . support . v4 . app . Fragment ; <nl> + import android . view . LayoutInflater ; <nl> + import android . view . Menu ; <nl> + import android . view . MenuInflater ; <nl> + import android . view . MenuItem ; <nl> + import android . view . View ; <nl> + import android . view . ViewGroup ; <nl> + <nl> + import java . util . Random ; <nl> + <nl> + import io . realm . Realm ; <nl> + import io . realm . RealmChangeListener ; <nl> + import io . realm . myapplication . R ; <nl> + import io . realm . threadexample . models . Point ; <nl> + import io . realm . threadexample . widgets . DotsView ; <nl> + <nl> + / * * <nl> + * This fragment demonstrates how Realm can interact with a background thread . <nl> + * / <nl> + public class ThreadFragment extends Fragment { <nl> + <nl> + private Realm realm ; <nl> + private Random random = new Random ( ) ; <nl> + private Thread backgroundThread ; <nl> + private DotsView dotsView ; <nl> + <nl> + / / Realm change listener that refreshes the UI when there is changes to Realm . <nl> + private RealmChangeListener realmListener = new RealmChangeListener ( ) { <nl> + @ Override <nl> + public void onChange ( ) { <nl> + dotsView . invalidate ( ) ; <nl> + } <nl> + } ; <nl> + <nl> + @ Override <nl> + public void onCreate ( Bundle savedInstanceState ) { <nl> + super . onCreate ( savedInstanceState ) ; <nl> + setHasOptionsMenu ( true ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onAttach ( Activity activity ) { <nl> + super . onAttach ( activity ) ; <nl> + realm = Realm . getInstance ( getActivity ( ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { <nl> + View rootView = inflater . inflate ( R . layout . fragment _ thread , container , false ) ; <nl> + dotsView = ( DotsView ) rootView . findViewById ( R . id . dots ) ; <nl> + <nl> + / / Create a RealmQuery on the UI thread and send the results to the custom view . The <nl> + / / RealmResults will automatically be updated whenever new data is either added or removed . <nl> + / / We still need to invalidate the UI to show the changes however . See the RealmChangeListener . <nl> + / / <nl> + / / Note also that currently the query gets updated by rerunning it on the thread it was <nl> + / / created . This can negatively effect framerates if it is a complicated query or a very <nl> + / / large dataset . <nl> + dotsView . setRealmResults ( realm . allObjects ( Point . class ) ) ; <nl> + <nl> + return rootView ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { <nl> + super . onCreateOptionsMenu ( menu , inflater ) ; <nl> + inflater . inflate ( R . menu . menu _ backgroundthread , menu ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean onOptionsItemSelected ( MenuItem item ) { <nl> + <nl> + switch ( item . getItemId ( ) ) { <nl> + case R . id . action _ add _ dot : <nl> + realm . beginTransaction ( ) ; <nl> + Point point = realm . createObject ( Point . class ) ; <nl> + point . setX ( random . nextInt ( 100 ) ) ; <nl> + point . setY ( random . nextInt ( 100 ) ) ; <nl> + point . setColor ( getResources ( ) . getColor ( R . color . realm _ blue ) ) ; <nl> + realm . commitTransaction ( ) ; <nl> + return true ; <nl> + <nl> + case R . id . action _ clear : <nl> + realm . beginTransaction ( ) ; <nl> + realm . clear ( Point . class ) ; <nl> + realm . commitTransaction ( ) ; <nl> + return true ; <nl> + <nl> + default : <nl> + return super . onOptionsItemSelected ( item ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public void onResume ( ) { <nl> + super . onResume ( ) ; <nl> + <nl> + / / Enable UI refresh while the fragment is active . <nl> + realm . addChangeListener ( realmListener ) ; <nl> + <nl> + / / Create background thread that add new dots every 0 . 5 second . <nl> + backgroundThread = new Thread ( new Runnable ( ) { <nl> + <nl> + @ Override <nl> + public void run ( ) { <nl> + / / Realm instances cannot be shared between threads , so we need to create a new <nl> + / / instance on the background thread . <nl> + Realm realm = Realm . getInstance ( getActivity ( ) , false ) ; <nl> + while ( ! backgroundThread . isInterrupted ( ) ) { <nl> + try { <nl> + realm . beginTransaction ( ) ; <nl> + Point point = realm . createObject ( Point . class ) ; <nl> + point . setX ( random . nextInt ( 100 ) ) ; <nl> + point . setY ( random . nextInt ( 100 ) ) ; <nl> + point . setColor ( getResources ( ) . getColor ( R . color . realm _ red ) ) ; <nl> + realm . commitTransaction ( ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + } catch ( InterruptedException e ) { <nl> + e . printStackTrace ( ) ; <nl> + } <nl> + } <nl> + <nl> + realm . close ( ) ; <nl> + } <nl> + } ) ; <nl> + backgroundThread . start ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onPause ( ) { <nl> + super . onPause ( ) ; <nl> + <nl> + / / Disable UI refresh while the fragment is no longer active . <nl> + realm . addChangeListener ( realmListener ) ; <nl> + backgroundThread . interrupt ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onDestroy ( ) { <nl> + super . onDestroy ( ) ; <nl> + / / Remember to close the Realm instance when done with it . <nl> + realm . close ( ) ; <nl> + } <nl> + } <nl> diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / models / Point . java b / examples / threadexample / src / main / java / io / realm / threadexample / models / Point . java <nl> new file mode 100644 <nl> index 0000000 . . 48fe132 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / java / io / realm / threadexample / models / Point . java <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + package io . realm . threadexample . models ; <nl> + <nl> + import io . realm . RealmObject ; <nl> + <nl> + public class Point extends RealmObject { <nl> + <nl> + private int x ; <nl> + private int y ; <nl> + private int color ; <nl> + private long timestamp ; <nl> + <nl> + public int getX ( ) { <nl> + return x ; <nl> + } <nl> + <nl> + public void setX ( int x ) { <nl> + this . x = x ; <nl> + } <nl> + <nl> + public int getY ( ) { <nl> + return y ; <nl> + } <nl> + <nl> + public void setY ( int y ) { <nl> + this . y = y ; <nl> + } <nl> + <nl> + public int getColor ( ) { <nl> + return color ; <nl> + } <nl> + <nl> + public void setColor ( int color ) { <nl> + this . color = color ; <nl> + } <nl> + <nl> + public long getTimestamp ( ) { <nl> + return timestamp ; <nl> + } <nl> + <nl> + public void setTimestamp ( long timestamp ) { <nl> + this . timestamp = timestamp ; <nl> + } <nl> + } <nl> diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / widgets / DotsView . java b / examples / threadexample / src / main / java / io / realm / threadexample / widgets / DotsView . java <nl> new file mode 100644 <nl> index 0000000 . . 6a48a9f <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / java / io / realm / threadexample / widgets / DotsView . java <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + package io . realm . threadexample . widgets ; <nl> + <nl> + import android . content . Context ; <nl> + import android . graphics . Canvas ; <nl> + import android . graphics . Color ; <nl> + import android . graphics . Paint ; <nl> + import android . util . AttributeSet ; <nl> + import android . view . View ; <nl> + <nl> + import io . realm . RealmResults ; <nl> + import io . realm . threadexample . models . Point ; <nl> + <nl> + / * * <nl> + * Custom view that plot ( x , y ) coordinates from a RealmQuery <nl> + * / <nl> + public class DotsView extends View { <nl> + <nl> + / / RealmResults will automatically be up to date . <nl> + private RealmResults < Point > results ; <nl> + <nl> + private Paint circlePaint ; <nl> + private float circleRadius ; <nl> + private float pixelsPrWidth ; <nl> + private float pixelsPrHeight ; <nl> + <nl> + <nl> + public DotsView ( Context context ) { <nl> + super ( context ) ; <nl> + init ( ) ; <nl> + } <nl> + <nl> + public DotsView ( Context context , AttributeSet attrs ) { <nl> + super ( context , attrs ) ; <nl> + init ( ) ; <nl> + } <nl> + <nl> + public DotsView ( Context context , AttributeSet attrs , int defStyleAttr ) { <nl> + super ( context , attrs , defStyleAttr ) ; <nl> + init ( ) ; <nl> + } <nl> + <nl> + private void init ( ) { <nl> + circlePaint = new Paint ( Paint . ANTI _ ALIAS _ FLAG ) ; <nl> + circlePaint . setStyle ( Paint . Style . FILL ) ; <nl> + circlePaint . setColor ( Color . RED ) ; <nl> + circleRadius = 10 ; <nl> + } <nl> + <nl> + public void setRealmResults ( RealmResults results ) { <nl> + this . results = results ; <nl> + invalidate ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { <nl> + super . onSizeChanged ( w , h , oldw , oldh ) ; <nl> + pixelsPrWidth = w / 100f ; <nl> + pixelsPrHeight = h / 100f ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void onDraw ( Canvas canvas ) { <nl> + super . onDraw ( canvas ) ; <nl> + canvas . drawColor ( Color . TRANSPARENT ) ; <nl> + for ( Point point : results ) { <nl> + circlePaint . setColor ( point . getColor ( ) ) ; <nl> + canvas . drawCircle ( point . getX ( ) * pixelsPrWidth , point . getY ( ) * pixelsPrHeight , circleRadius , circlePaint ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / examples / threadexample / src / main / res / drawable - xxhdpi / ic _ launcher . png b / examples / threadexample / src / main / res / drawable - xxhdpi / ic _ launcher . png <nl> new file mode 100644 <nl> index 0000000 . . 4330211 <nl> Binary files / dev / null and b / examples / threadexample / src / main / res / drawable - xxhdpi / ic _ launcher . png differ <nl> diff - - git a / examples / threadexample / src / main / res / layout / activity _ main . xml b / examples / threadexample / src / main / res / layout / activity _ main . xml <nl> new file mode 100644 <nl> index 0000000 . . 0cfa754 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / layout / activity _ main . xml <nl> @ @ - 0 , 0 + 1 , 22 @ @ <nl> + < ! - - <nl> + ~ Copyright 2014 Realm Inc . <nl> + ~ <nl> + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + ~ you may not use this file except in compliance with the License . <nl> + ~ You may obtain a copy of the License at <nl> + ~ <nl> + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + ~ <nl> + ~ Unless required by applicable law or agreed to in writing , software <nl> + ~ distributed under the License is distributed on an " AS IS " BASIS , <nl> + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + ~ See the License for the specific language governing permissions and <nl> + ~ limitations under the License . <nl> + - - > <nl> + <nl> + < android . support . v4 . view . ViewPager xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : tools = " http : / / schemas . android . com / tools " <nl> + android : id = " @ + id / pager " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " <nl> + tools : context = " . ThreadExampleActivity " / > <nl> diff - - git a / examples / threadexample / src / main / res / layout / fragment _ asynctask . xml b / examples / threadexample / src / main / res / layout / fragment _ asynctask . xml <nl> new file mode 100644 <nl> index 0000000 . . 5e7ef68 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / layout / fragment _ asynctask . xml <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + < ! - - <nl> + ~ Copyright 2014 Realm Inc . <nl> + ~ <nl> + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + ~ you may not use this file except in compliance with the License . <nl> + ~ You may obtain a copy of the License at <nl> + ~ <nl> + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + ~ <nl> + ~ Unless required by applicable law or agreed to in writing , software <nl> + ~ distributed under the License is distributed on an " AS IS " BASIS , <nl> + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + ~ See the License for the specific language governing permissions and <nl> + ~ limitations under the License . <nl> + - - > <nl> + <nl> + < RelativeLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : tools = " http : / / schemas . android . com / tools " android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " android : paddingLeft = " @ dimen / activity _ horizontal _ margin " <nl> + android : paddingRight = " @ dimen / activity _ horizontal _ margin " <nl> + android : paddingTop = " @ dimen / activity _ vertical _ margin " <nl> + android : paddingBottom = " @ dimen / activity _ vertical _ margin " <nl> + android : background = " @ color / fragment _ background " <nl> + tools : context = " . MainActivity $ PlaceholderFragment " > <nl> + <nl> + < TextView android : id = " @ + id / section _ label " android : layout _ width = " wrap _ content " <nl> + android : layout _ height = " wrap _ content " / > <nl> + <nl> + < / RelativeLayout > <nl> diff - - git a / examples / threadexample / src / main / res / layout / fragment _ thread . xml b / examples / threadexample / src / main / res / layout / fragment _ thread . xml <nl> new file mode 100644 <nl> index 0000000 . . 522ba2c <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / layout / fragment _ thread . xml <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + < ! - - <nl> + ~ Copyright 2014 Realm Inc . <nl> + ~ <nl> + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + ~ you may not use this file except in compliance with the License . <nl> + ~ You may obtain a copy of the License at <nl> + ~ <nl> + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + ~ <nl> + ~ Unless required by applicable law or agreed to in writing , software <nl> + ~ distributed under the License is distributed on an " AS IS " BASIS , <nl> + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + ~ See the License for the specific language governing permissions and <nl> + ~ limitations under the License . <nl> + - - > <nl> + <nl> + < RelativeLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : tools = " http : / / schemas . android . com / tools " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " <nl> + android : background = " @ color / fragment _ background " <nl> + tools : context = " . MainActivity $ PlaceholderFragment " > <nl> + <nl> + < io . realm . threadexample . widgets . DotsView <nl> + android : id = " @ + id / dots " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " / > <nl> + <nl> + < / RelativeLayout > <nl> diff - - git a / examples / threadexample / src / main / res / menu / menu _ backgroundthread . xml b / examples / threadexample / src / main / res / menu / menu _ backgroundthread . xml <nl> new file mode 100644 <nl> index 0000000 . . e3708ee <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / menu / menu _ backgroundthread . xml <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < ! - - <nl> + ~ Copyright 2014 Realm Inc . <nl> + ~ <nl> + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + ~ you may not use this file except in compliance with the License . <nl> + ~ You may obtain a copy of the License at <nl> + ~ <nl> + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + ~ <nl> + ~ Unless required by applicable law or agreed to in writing , software <nl> + ~ distributed under the License is distributed on an " AS IS " BASIS , <nl> + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + ~ See the License for the specific language governing permissions and <nl> + ~ limitations under the License . <nl> + - - > <nl> + <nl> + < menu xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : app = " http : / / schemas . android . com / apk / res - auto " > <nl> + <nl> + < item <nl> + android : id = " @ + id / action _ add _ dot " <nl> + android : title = " @ string / add _ dot " <nl> + android : icon = " @ android : drawable / ic _ menu _ add " <nl> + app : showAsAction = " always " / > <nl> + <nl> + < item <nl> + android : id = " @ + id / action _ clear " <nl> + android : title = " @ string / clear _ dots " <nl> + android : icon = " @ android : drawable / ic _ menu _ delete " <nl> + app : showAsAction = " always " / > <nl> + <nl> + < / menu > <nl> \ No newline at end of file <nl> diff - - git a / examples / threadexample / src / main / res / values - w820dp / dimens . xml b / examples / threadexample / src / main / res / values - w820dp / dimens . xml <nl> new file mode 100644 <nl> index 0000000 . . 63fc816 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / values - w820dp / dimens . xml <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + < resources > <nl> + < ! - - Example customization of dimensions originally defined in res / values / dimens . xml <nl> + ( such as screen margins ) for screens with more than 820dp of available width . This <nl> + would include 7 " and 10 " devices in landscape ( ~ 960dp and ~ 1280dp respectively ) . - - > <nl> + < dimen name = " activity _ horizontal _ margin " > 64dp < / dimen > <nl> + < / resources > <nl> diff - - git a / examples / threadexample / src / main / res / values / colors . xml b / examples / threadexample / src / main / res / values / colors . xml <nl> new file mode 100644 <nl> index 0000000 . . fed8363 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / values / colors . xml <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < resources > <nl> + < color name = " fragment _ background " > # 333333 < / color > <nl> + < color name = " realm _ red " > # f0727d < / color > <nl> + < color name = " realm _ blue " > # 428bca < / color > <nl> + < / resources > <nl> \ No newline at end of file <nl> diff - - git a / examples / threadexample / src / main / res / values / dimens . xml b / examples / threadexample / src / main / res / values / dimens . xml <nl> new file mode 100644 <nl> index 0000000 . . 47c8224 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / values / dimens . xml <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + < resources > <nl> + < ! - - Default screen margins , per the Android Design guidelines . - - > <nl> + < dimen name = " activity _ horizontal _ margin " > 16dp < / dimen > <nl> + < dimen name = " activity _ vertical _ margin " > 16dp < / dimen > <nl> + < / resources > <nl> diff - - git a / examples / threadexample / src / main / res / values / strings . xml b / examples / threadexample / src / main / res / values / strings . xml <nl> new file mode 100644 <nl> index 0000000 . . 21288be <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / values / strings . xml <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < resources > <nl> + <nl> + < string name = " app _ name " > Thread example < / string > <nl> + < string name = " action _ settings " > Settings < / string > <nl> + < string name = " title _ section1 " > Threads < / string > <nl> + < string name = " title _ section2 " > AsyncTask < / string > <nl> + < string name = " add _ dot " > Add dot < / string > <nl> + < string name = " clear _ dots " > Clear dots < / string > <nl> + <nl> + < / resources > <nl> diff - - git a / examples / threadexample / src / main / res / values / styles . xml b / examples / threadexample / src / main / res / values / styles . xml <nl> new file mode 100644 <nl> index 0000000 . . 766ab99 <nl> - - - / dev / null <nl> + + + b / examples / threadexample / src / main / res / values / styles . xml <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + < resources > <nl> + <nl> + < ! - - Base application theme . - - > <nl> + < style name = " AppTheme " parent = " Theme . AppCompat . Light . DarkActionBar " > <nl> + < ! - - Customize your theme here . - - > <nl> + < / style > <nl> + <nl> + < / resources > <nl> diff - - git a / settings . gradle b / settings . gradle <nl> index d7fde45 . . 9a97810 100644 <nl> - - - a / settings . gradle <nl> + + + b / settings . gradle <nl> @ @ - 2 , 7 + 2 , 13 @ @ <nl> include ' realm ' <nl> <nl> / / Example projects <nl> - include ' : introExample ' , ' : gridViewExample ' , ' : concurrencyExample ' , ' : encryptionExample ' , ' : migrationExample ' , ' : adapterExample ' <nl> + include ' : introExample ' , <nl> + ' : gridViewExample ' , <nl> + ' : concurrencyExample ' , <nl> + ' : encryptionExample ' , <nl> + ' : migrationExample ' , <nl> + ' : adapterExample ' , <nl> + ' : threadExample ' <nl> <nl> project ( ' : introExample ' ) . projectDir = new File ( ' examples / introExample ' ) <nl> project ( ' : gridViewExample ' ) . projectDir = new File ( ' examples / gridViewExample ' ) <nl> @ @ - 10 , 6 + 16 , 7 @ @ project ( ' : concurrencyExample ' ) . projectDir = new File ( ' examples / concurrencyExampl <nl> project ( ' : encryptionExample ' ) . projectDir = new File ( ' examples / encryptionExample ' ) <nl> project ( ' : migrationExample ' ) . projectDir = new File ( ' examples / migrationExample ' ) <nl> project ( ' : adapterExample ' ) . projectDir = new File ( ' examples / adapterExample ' ) <nl> + project ( ' : threadExample ' ) . projectDir = new File ( ' examples / threadExample ' ) <nl> <nl> / / Experimental projects <nl> include ' : pathExperiment '

TEST DIFF:
diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle 
 new file mode 100644 
 index 0000000 . . 81259e4 
 - - - / dev / null 
 + + + b / examples / objectServerExample / build . gradle 
 @ @ - 0 , 0 + 1 , 36 @ @ 
 + apply plugin : ' com . android . application ' 
 + apply plugin : ' android - command ' 
 + apply plugin : ' realm - android ' 
 + 
 + android { 
 + compileSdkVersion rootProject . sdkVersion 
 + buildToolsVersion rootProject . buildTools 
 + 
 + defaultConfig { 
 + applicationId ' io . realm . examples . objectserver ' 
 + targetSdkVersion rootProject . sdkVersion 
 + minSdkVersion 15 
 + versionCode 1 
 + versionName " 1 . 0 " 
 + } 
 + 
 + buildTypes { 
 + release { 
 + minifyEnabled false 
 + } 
 + debug { 
 + minifyEnabled false 
 + } 
 + } 
 + 
 + command { 
 + events 2000 
 + } 
 + } 
 + 
 + dependencies { 
 + compile ' com . android . support : support - v4 : 24 . 2 . 0 ' 
 + compile ' com . android . support : design : 24 . 2 . 0 ' 
 + compile ' com . jakewharton : butterknife : 8 . 3 . 0 ' 
 + apt ' com . jakewharton : butterknife - compiler : 8 . 3 . 0 ' 
 + } 
 diff - - git a / examples / objectServerExample / lint . xml b / examples / objectServerExample / lint . xml 
 new file mode 100644 
 index 0000000 . . 6a9810c 
 - - - / dev / null 
 + + + b / examples / objectServerExample / lint . xml 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 + < lint > 
 + < ! - - Disable the given check in this project - - > 
 + < issue id = " AllowBackup " severity = " ignore " / > 
 + < issue id = " IconLauncherShape " severity = " ignore " / > 
 + < issue id = " IconMissingDensityFolder " severity = " ignore " / > 
 + < issue id = " GoogleAppIndexingWarning " severity = " ignore " / > 
 + < issue id = " LogNotTimber " severity = " ignore " / > 
 + < issue id = " InvalidPackage " severity = " ignore " / > 
 + < / lint > 
 diff - - git a / examples / objectServerExample / src / main / AndroidManifest . xml b / examples / objectServerExample / src / main / AndroidManifest . xml 
 new file mode 100644 
 index 0000000 . . 45e5d52 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / AndroidManifest . xml 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + package = " io . realm . examples . objectserver " > 
 + 
 + < application 
 + android : icon = " @ mipmap / ic _ launcher " 
 + android : label = " @ string / app _ name " 
 + android : name = " io . realm . examples . objectserver . MyApplication " 
 + android : theme = " @ style / AppTheme " > 
 + < activity 
 + android : name = " io . realm . examples . objectserver . CounterActivity " 
 + android : label = " @ string / app _ name " > 
 + < intent - filter > 
 + < action android : name = " android . intent . action . MAIN " / > 
 + < category android : name = " android . intent . category . LAUNCHER " / > 
 + < / intent - filter > 
 + < / activity > 
 + < activity 
 + android : name = " io . realm . examples . objectserver . LoginActivity " 
 + android : label = " Login " > 
 + < / activity > 
 + < / application > 
 + 
 + < / manifest > 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 new file mode 100644 
 index 0000000 . . cc1595f 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 @ @ - 0 , 0 + 1 , 163 @ @ 
 + / * 
 + * Copyright 2016 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . objectserver ; 
 + 
 + import android . content . Intent ; 
 + import android . os . Bundle ; 
 + import android . support . v7 . app . AppCompatActivity ; 
 + import android . view . Menu ; 
 + import android . view . MenuItem ; 
 + import android . widget . TextView ; 
 + 
 + import butterknife . BindView ; 
 + import butterknife . ButterKnife ; 
 + import butterknife . OnClick ; 
 + import io . realm . Realm ; 
 + import io . realm . RealmChangeListener ; 
 + import io . realm . RealmResults ; 
 + import io . realm . examples . objectserver . model . CRDTCounter ; 
 + import io . realm . examples . objectserver . model . CounterOperation ; 
 + import io . realm . objectserver . SyncConfiguration ; 
 + import io . realm . objectserver . User ; 
 + 
 + public class CounterActivity extends AppCompatActivity { 
 + 
 + private Realm realm ; 
 + private RealmResults < CounterOperation > counter ; 
 + 
 + @ BindView ( R . id . text _ counter ) TextView counterView ; 
 + 
 + @ Override 
 + protected void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + setContentView ( R . layout . activity _ counter ) ; 
 + ButterKnife . bind ( this ) ; 
 + 
 + / / Check if we have a valid user , otherwise redirect to login 
 + User user = MyApplication . CURRENT _ USER ; 
 + if ( user = = null ) { 
 + gotoLoginActivity ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + protected void onStart ( ) { 
 + super . onStart ( ) ; 
 + if ( MyApplication . CURRENT _ USER ! = null ) { 
 + / / Create a RealmConfiguration for our user 
 + SyncConfiguration config = new SyncConfiguration . Builder ( this ) 
 + . initialData ( new Realm . Transaction ( ) { 
 + @ Override 
 + public void execute ( Realm realm ) { 
 + realm . createObject ( CRDTCounter . class , 1 ) ; 
 + } 
 + } ) 
 + . user ( MyApplication . CURRENT _ USER ) 
 + . serverUrl ( " realm : / / " + MyApplication . OBJECT _ SERVER _ IP + " / ~ / default " ) 
 + . build ( ) ; 
 + 
 + / / This will automatically sync all changes in the background for as long as the Realm is open 
 + realm = Realm . getInstance ( config ) ; 
 + 
 + / / FIXME Looks like PrimaryKey and lists are not working correctly yet 
 + / / counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; 
 + / / counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 + / / @ Override 
 + / / public void onChange ( CRDTCounter counter ) { 
 + / / if ( counter . isValid ( ) ) { 
 + / / counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 + / / } else { 
 + / / counterView . setText ( " - " ) ; 
 + / / } 
 + / / } 
 + / / } ) ; 
 + 
 + counter = realm . where ( CounterOperation . class ) . findAllAsync ( ) ; 
 + counter . addChangeListener ( new RealmChangeListener < RealmResults < CounterOperation > > ( ) { 
 + @ Override 
 + public void onChange ( RealmResults < CounterOperation > result ) { 
 + / / FIXME Why isn ' t this triggered when the DB is opened ? 
 + Number sum = result . sum ( " adjustment " ) ; 
 + if ( sum ! = null ) { 
 + counterView . setText ( Long . toString ( sum . longValue ( ) ) ) ; 
 + } else { 
 + counterView . setText ( " 0 " ) ; 
 + } 
 + } 
 + } ) ; 
 + counterView . setText ( " 0 " ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + protected void onStop ( ) { 
 + super . onStop ( ) ; 
 + closeRealm ( ) ; 
 + } 
 + 
 + private void closeRealm ( ) { 
 + if ( realm ! = null & & ! realm . isClosed ( ) ) { 
 + realm . close ( ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public boolean onCreateOptionsMenu ( Menu menu ) { 
 + getMenuInflater ( ) . inflate ( R . menu . menu _ counter , menu ) ; 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public boolean onOptionsItemSelected ( MenuItem item ) { 
 + switch ( item . getItemId ( ) ) { 
 + case R . id . action _ logout : 
 + MyApplication . CURRENT _ USER . logout ( ) ; 
 + closeRealm ( ) ; 
 + gotoLoginActivity ( ) ; 
 + return true ; 
 + 
 + default : 
 + return super . onOptionsItemSelected ( item ) ; 
 + } 
 + } 
 + 
 + @ OnClick ( R . id . upper ) 
 + public void incrementCounter ( ) { 
 + adjustCounter ( new CounterOperation ( 1 ) ) ; 
 + } 
 + 
 + @ OnClick ( R . id . lower ) 
 + public void decrementCounter ( ) { 
 + adjustCounter ( new CounterOperation ( - 1 ) ) ; 
 + } 
 + 
 + private void adjustCounter ( final CounterOperation ops ) { 
 + / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI 
 + / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . 
 + realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 + @ Override 
 + public void execute ( Realm realm ) { 
 + realm . copyToRealm ( ops ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + private void gotoLoginActivity ( ) { 
 + Intent intent = new Intent ( this , LoginActivity . class ) ; 
 + startActivity ( intent ) ; 
 + } 
 + } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 new file mode 100644 
 index 0000000 . . adbc6fa 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 @ @ - 0 , 0 + 1 , 144 @ @ 
 + / * 
 + * Copyright 2016 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . objectserver ; 
 + 
 + import android . app . ProgressDialog ; 
 + import android . os . Bundle ; 
 + import android . support . v7 . app . AppCompatActivity ; 
 + import android . view . View ; 
 + import android . widget . Button ; 
 + import android . widget . EditText ; 
 + import android . widget . Toast ; 
 + 
 + import butterknife . BindView ; 
 + import butterknife . ButterKnife ; 
 + import io . realm . objectserver . Credentials ; 
 + import io . realm . objectserver . ObjectServerError ; 
 + import io . realm . objectserver . User ; 
 + import io . realm . objectserver . UserStore ; 
 + 
 + public class LoginActivity extends AppCompatActivity { 
 + 
 + private UserStore userStore = MyApplication . USER _ STORE ; 
 + 
 + @ BindView ( R . id . input _ username ) EditText username ; 
 + @ BindView ( R . id . input _ password ) EditText password ; 
 + @ BindView ( R . id . button _ login ) Button loginButton ; 
 + @ BindView ( R . id . button _ create ) Button createUserButton ; 
 + 
 + @ Override 
 + public void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + setContentView ( R . layout . activity _ login ) ; 
 + ButterKnife . bind ( this ) ; 
 + loginButton . setOnClickListener ( new View . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( View v ) { 
 + login ( false ) ; 
 + } 
 + } ) ; 
 + createUserButton . setOnClickListener ( new View . OnClickListener ( ) { 
 + @ Override 
 + public void onClick ( View v ) { 
 + login ( true ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + public void login ( boolean createUser ) { 
 + if ( ! validate ( ) ) { 
 + onLoginFailed ( " Invalid username or password " ) ; 
 + return ; 
 + } 
 + 
 + createUserButton . setEnabled ( false ) ; 
 + loginButton . setEnabled ( false ) ; 
 + 
 + final ProgressDialog progressDialog = new ProgressDialog ( LoginActivity . this ) ; 
 + progressDialog . setIndeterminate ( true ) ; 
 + progressDialog . setMessage ( " Authenticating . . . " ) ; 
 + progressDialog . show ( ) ; 
 + 
 + String username = this . username . getText ( ) . toString ( ) ; 
 + String password = this . password . getText ( ) . toString ( ) ; 
 + 
 + Credentials creds = Credentials . fromUsernamePassword ( username , password , createUser ) ; 
 + String authUrl = " http : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 8080 / auth " ; 
 + User . Callback callback = new User . Callback ( ) { 
 + @ Override 
 + public void onSuccess ( User user ) { 
 + progressDialog . dismiss ( ) ; 
 + userStore . saveAsync ( MyApplication . APP _ USER _ KEY , user ) ; / / TODO Use Async 
 + MyApplication . CURRENT _ USER = user ; 
 + onLoginSuccess ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onError ( ObjectServerError error ) { 
 + progressDialog . dismiss ( ) ; 
 + String errorMsg ; 
 + switch ( error . errorCode ( ) ) { 
 + case UNKNOWN _ ACCOUNT : 
 + errorMsg = " Account does not exists . " ; 
 + break ; 
 + case INVALID _ CREDENTIALS : 
 + errorMsg = " User name and password does not match " ; 
 + break ; 
 + default : 
 + errorMsg = error . toString ( ) ; 
 + } 
 + onLoginFailed ( errorMsg ) ; 
 + } 
 + } ; 
 + 
 + User . loginAsync ( creds , authUrl , callback ) ; 
 + } 
 + 
 + @ Override 
 + public void onBackPressed ( ) { 
 + / / Disable going back to the MainActivity 
 + moveTaskToBack ( true ) ; 
 + } 
 + 
 + public void onLoginSuccess ( ) { 
 + loginButton . setEnabled ( true ) ; 
 + createUserButton . setEnabled ( true ) ; 
 + finish ( ) ; 
 + } 
 + 
 + public void onLoginFailed ( String errorMsg ) { 
 + loginButton . setEnabled ( true ) ; 
 + createUserButton . setEnabled ( true ) ; 
 + Toast . makeText ( getBaseContext ( ) , errorMsg , Toast . LENGTH _ LONG ) . show ( ) ; 
 + } 
 + 
 + public boolean validate ( ) { 
 + boolean valid = true ; 
 + String email = username . getText ( ) . toString ( ) ; 
 + String password = this . password . getText ( ) . toString ( ) ; 
 + 
 + if ( email . isEmpty ( ) ) { 
 + valid = false ; 
 + } 
 + 
 + if ( password . isEmpty ( ) ) { 
 + valid = false ; 
 + } 
 + 
 + return valid ; 
 + } 
 + } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 new file mode 100644 
 index 0000000 . . 008ca06 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 @ @ - 0 , 0 + 1 , 37 @ @ 
 + / * 
 + * Copyright 2016 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . objectserver ; 
 + 
 + import android . app . Application ; 
 + 
 + import io . realm . objectserver . User ; 
 + import io . realm . objectserver . UserStore ; 
 + import io . realm . objectserver . android . SharedPrefsUserStore ; 
 + 
 + public class MyApplication extends Application { 
 + 
 + public static final String OBJECT _ SERVER _ IP = " 192 . 168 . 104 . 22 " ; 
 + public static final String APP _ USER _ KEY = " defaultAppUser " ; 
 + public static UserStore USER _ STORE ; 
 + public static User CURRENT _ USER = null ; 
 + 
 + @ Override 
 + public void onCreate ( ) { 
 + super . onCreate ( ) ; 
 + USER _ STORE = new SharedPrefsUserStore ( this ) ; 
 + } 
 + } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java 
 new file mode 100644 
 index 0000000 . . 93096e3 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java 
 @ @ - 0 , 0 + 1 , 50 @ @ 
 + / * 
 + * Copyright 2016 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . objectserver . model ; 
 + 
 + import io . realm . RealmList ; 
 + import io . realm . RealmObject ; 
 + import io . realm . annotations . PrimaryKey ; 
 + 
 + / * * 
 + * Counter class that is eventually consistent . Two devices can simultaneous increment this and eventually reach 
 + * the same value . 
 + * 
 + * @ see < href ref = " https : / / en . wikipedia . org / wiki / Conflict - free _ replicated _ data _ type " > Conflict Free Replicated Data Structures < / href > 
 + * / 
 + public class CRDTCounter extends RealmObject { 
 + 
 + @ PrimaryKey 
 + private long id ; 
 + private RealmList < CounterOperation > operations ; 
 + 
 + public CRDTCounter ( ) { 
 + / / Required by Realm 
 + } 
 + 
 + public CRDTCounter ( long id ) { 
 + this . id = id ; 
 + } 
 + 
 + public long getCount ( ) { 
 + return operations . where ( ) . sum ( " adjustment " ) . longValue ( ) ; 
 + } 
 + 
 + public void add ( long val ) { 
 + operations . add ( new CounterOperation ( val ) ) ; 
 + } 
 + } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java 
 new file mode 100644 
 index 0000000 . . 53342f6 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + / * 
 + * Copyright 2016 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . objectserver . model ; 
 + 
 + import io . realm . RealmObject ; 
 + 
 + public class CounterOperation extends RealmObject { 
 + public long adjustment ; 
 + public CounterOperation ( ) { } ; 
 + public CounterOperation ( long adjustment ) { 
 + this . adjustment = adjustment ; 
 + } 
 + } 
 diff - - git a / examples / objectServerExample / src / main / res / drawable - xxhdpi / ic _ exit _ to _ app _ white _ 24dp . png b / examples / objectServerExample / src / main / res / drawable - xxhdpi / ic _ exit _ to _ app _ white _ 24dp . png 
 new file mode 100644 
 index 0000000 . . c04fe6e 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / drawable - xxhdpi / ic _ exit _ to _ app _ white _ 24dp . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / drawable - xxxhdpi / ic _ exit _ to _ app _ white _ 24dp . png b / examples / objectServerExample / src / main / res / drawable - xxxhdpi / ic _ exit _ to _ app _ white _ 24dp . png 
 new file mode 100644 
 index 0000000 . . 27a9d7b 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / drawable - xxxhdpi / ic _ exit _ to _ app _ white _ 24dp . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / drawable / button _ counter . xml b / examples / objectServerExample / src / main / res / drawable / button _ counter . xml 
 new file mode 100644 
 index 0000000 . . 0d8fd82 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / drawable / button _ counter . xml 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < selector xmlns : android = " http : / / schemas . android . com / apk / res / android " > 
 + < item android : drawable = " @ color / touch _ area _ pressed " android : state _ pressed = " true " / > 
 + < item android : drawable = " @ color / touch _ area _ pressed " android : state _ focused = " true " / > 
 + < item android : drawable = " @ android : color / background _ light " / > 
 + < / selector > 
 diff - - git a / examples / objectServerExample / src / main / res / drawable / logo . png b / examples / objectServerExample / src / main / res / drawable / logo . png 
 new file mode 100755 
 index 0000000 . . 91826a7 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / drawable / logo . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ counter . xml b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml 
 new file mode 100644 
 index 0000000 . . 62127ec 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml 
 @ @ - 0 , 0 + 1 , 37 @ @ 
 + < RelativeLayout 
 + xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " > 
 + 
 + < LinearLayout 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + android : orientation = " vertical " 
 + android : weightSum = " 1 . 0 " > 
 + 
 + < View 
 + android : id = " @ + id / upper " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " 0dp " 
 + android : layout _ weight = " 0 . 5 " 
 + android : background = " @ drawable / button _ counter " > 
 + < / View > 
 + 
 + < View 
 + android : id = " @ + id / lower " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " 0dp " 
 + android : layout _ weight = " 0 . 5 " 
 + android : background = " @ drawable / button _ counter " > 
 + < / View > 
 + < / LinearLayout > 
 + 
 + < TextView 
 + android : id = " @ + id / text _ counter " 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ centerInParent = " true " 
 + android : fontFamily = " sans - serif - light " 
 + android : textSize = " 160sp " / > 
 + 
 + < / RelativeLayout > 
 diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ login . xml b / examples / objectServerExample / src / main / res / layout / activity _ login . xml 
 new file mode 100644 
 index 0000000 . . 142ad53 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / layout / activity _ login . xml 
 @ @ - 0 , 0 + 1 , 67 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < ScrollView xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + android : layout _ width = " fill _ parent " 
 + android : layout _ height = " fill _ parent " 
 + android : fitsSystemWindows = " true " > 
 + 
 + < LinearLayout 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : orientation = " vertical " 
 + android : paddingLeft = " 24dp " 
 + android : paddingRight = " 24dp " 
 + android : paddingTop = " 56dp " > 
 + 
 + < ImageView 
 + android : layout _ width = " wrap _ content " 
 + android : layout _ height = " 72dp " 
 + android : layout _ gravity = " center _ horizontal " 
 + android : layout _ marginBottom = " 24dp " 
 + android : src = " @ drawable / logo " / > 
 + 
 + < android . support . design . widget . TextInputLayout 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ marginBottom = " 8dp " 
 + android : layout _ marginTop = " 8dp " > 
 + 
 + < EditText 
 + android : id = " @ + id / input _ username " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : hint = " Username " 
 + android : inputType = " text " / > 
 + < / android . support . design . widget . TextInputLayout > 
 + 
 + < android . support . design . widget . TextInputLayout 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ marginBottom = " 8dp " 
 + android : layout _ marginTop = " 8dp " > 
 + 
 + < EditText 
 + android : id = " @ + id / input _ password " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : hint = " Password " 
 + android : inputType = " textPassword " / > 
 + < / android . support . design . widget . TextInputLayout > 
 + 
 + < android . support . v7 . widget . AppCompatButton 
 + android : id = " @ + id / button _ login " 
 + android : layout _ width = " fill _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ marginBottom = " 12dp " 
 + android : layout _ marginTop = " 24dp " 
 + android : padding = " 12dp " 
 + android : text = " Login " / > 
 + 
 + < android . support . v7 . widget . AppCompatButton 
 + android : id = " @ + id / button _ create " 
 + android : layout _ width = " fill _ parent " 
 + android : layout _ height = " wrap _ content " 
 + android : layout _ marginBottom = " 24dp " 
 + android : padding = " 12dp " 
 + android : text = " Create account and login " / > 
 + < / LinearLayout > 
 + < / ScrollView > 
 \ No newline at end of file 
 diff - - git a / examples / objectServerExample / src / main / res / menu / menu _ counter . xml b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml 
 new file mode 100644 
 index 0000000 . . 858fd2e 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + < menu xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : app = " http : / / schemas . android . com / apk / res - auto " 
 + xmlns : tools = " http : / / schemas . android . com / tools " 
 + tools : context = " . CounterActivity " > 
 + < item 
 + android : id = " @ + id / action _ logout " 
 + android : orderInCategory = " 100 " 
 + android : title = " Logout " 
 + android : icon = " @ drawable / ic _ exit _ to _ app _ white _ 24dp " 
 + app : showAsAction = " always " / > 
 + < / menu > 
 diff - - git a / examples / objectServerExample / src / main / res / mipmap - hdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - hdpi / ic _ launcher . png 
 new file mode 100755 
 index 0000000 . . 58303af 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - hdpi / ic _ launcher . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / mipmap - mdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - mdpi / ic _ launcher . png 
 new file mode 100755 
 index 0000000 . . 9b29cae 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - mdpi / ic _ launcher . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / mipmap - xhdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - xhdpi / ic _ launcher . png 
 new file mode 100755 
 index 0000000 . . 15527b1 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - xhdpi / ic _ launcher . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / mipmap - xxhdpi / ic _ launcher . png b / examples / objectServerExample / src / main / res / mipmap - xxhdpi / ic _ launcher . png 
 new file mode 100755 
 index 0000000 . . eb9ece0 
 Binary files / dev / null and b / examples / objectServerExample / src / main / res / mipmap - xxhdpi / ic _ launcher . png differ 
 diff - - git a / examples / objectServerExample / src / main / res / values - w820dp / dimens . xml b / examples / objectServerExample / src / main / res / values - w820dp / dimens . xml 
 new file mode 100644 
 index 0000000 . . 63fc816 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / values - w820dp / dimens . xml 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + < resources > 
 + < ! - - Example customization of dimensions originally defined in res / values / dimens . xml 
 + ( such as screen margins ) for screens with more than 820dp of available width . This 
 + would include 7 " and 10 " devices in landscape ( ~ 960dp and ~ 1280dp respectively ) . - - > 
 + < dimen name = " activity _ horizontal _ margin " > 64dp < / dimen > 
 + < / resources > 
 diff - - git a / examples / objectServerExample / src / main / res / values / dimens . xml b / examples / objectServerExample / src / main / res / values / dimens . xml 
 new file mode 100644 
 index 0000000 . . 47c8224 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / values / dimens . xml 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + < resources > 
 + < ! - - Default screen margins , per the Android Design guidelines . - - > 
 + < dimen name = " activity _ horizontal _ margin " > 16dp < / dimen > 
 + < dimen name = " activity _ vertical _ margin " > 16dp < / dimen > 
 + < / resources > 
 diff - - git a / examples / objectServerExample / src / main / res / values / realm _ colors . xml b / examples / objectServerExample / src / main / res / values / realm _ colors . xml 
 new file mode 100644 
 index 0000000 . . aada8ea 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / values / realm _ colors . xml 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < resources > 
 + / / Grays 
 + < color name = " charcoal " > # 1C233F < / color > 
 + < color name = " elephant " > # 9A9BA5 < / color > 
 + < color name = " elephant _ half " > # b1b3bf < / color > 
 + < color name = " dove " > # EBEBF2 < / color > 
 + 
 + / / Orb colors 
 + < color name = " ultramarine " > # 39477F < / color > 
 + < color name = " indigo " > # 59569E < / color > 
 + < color name = " grape _ jelly " > # 9A59A5 < / color > 
 + < color name = " mulberry " > # D34CA3 < / color > 
 + < color name = " flamingo " > # F25192 < / color > 
 + < color name = " sexy _ salmon " > # F77C88 < / color > 
 + < color name = " peach " > # FC9F95 < / color > 
 + < color name = " melon " > # FCC397 < / color > 
 + 
 + / / Material adjustments 
 + < color name = " flamingo _ darker " > # d64881 < / color > 
 + < color name = " touch _ area _ pressed " > # dadada < / color > 
 + 
 + < / resources > 
 \ No newline at end of file 
 diff - - git a / examples / objectServerExample / src / main / res / values / strings . xml b / examples / objectServerExample / src / main / res / values / strings . xml 
 new file mode 100644 
 index 0000000 . . 10e43bd 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / values / strings . xml 
 @ @ - 0 , 0 + 1 , 4 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < resources > 
 + < string name = " app _ name " > Object Server Example < / string > 
 + < / resources > 
 diff - - git a / examples / objectServerExample / src / main / res / values / styles . xml b / examples / objectServerExample / src / main / res / values / styles . xml 
 new file mode 100644 
 index 0000000 . . 333a494 
 - - - / dev / null 
 + + + b / examples / objectServerExample / src / main / res / values / styles . xml 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < resources > 
 + 
 + < ! - - Base application theme . - - > 
 + < style name = " AppTheme " parent = " Theme . AppCompat . Light . DarkActionBar " > 
 + < item name = " colorPrimary " > @ color / flamingo < / item > 
 + < item name = " colorPrimaryDark " > @ color / flamingo _ darker < / item > 
 + < item name = " colorAccent " > @ color / ultramarine < / item > 
 + < / style > 
 + < / resources > 
 + 
 diff - - git a / examples / settings . gradle b / examples / settings . gradle 
 index 9b18f1e . . d9922ed 100644 
 - - - a / examples / settings . gradle 
 + + + b / examples / settings . gradle 
 @ @ - 11 , 6 + 11 , 7 @ @ include ' threadExample ' 
 include ' unitTestExample ' 
 include ' newsreaderExample ' 
 include ' rxJavaExample ' 
 + include ' objectServerExample ' 
 
 rootProject . name = ' realm - examples ' 


NEAREST DIFF:
diff - - git a / examples / threadexample / . gitignore b / examples / threadexample / . gitignore 
 new file mode 100644 
 index 0000000 . . 796b96d 
 - - - / dev / null 
 + + + b / examples / threadexample / . gitignore 
 @ @ - 0 , 0 + 1 @ @ 
 + / build 
 diff - - git a / examples / threadexample / build . gradle b / examples / threadexample / build . gradle 
 new file mode 100644 
 index 0000000 . . 1b6d599 
 - - - / dev / null 
 + + + b / examples / threadexample / build . gradle 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + apply plugin : ' com . android . application ' 
 + 
 + android { 
 + compileSdkVersion 21 
 + buildToolsVersion " 21 . 1 . 1 " 
 + 
 + defaultConfig { 
 + applicationId " io . realm . examples . threads " 
 + minSdkVersion 15 
 + targetSdkVersion 21 
 + versionCode 1 
 + versionName " 1 . 0 " 
 + } 
 + buildTypes { 
 + release { 
 + minifyEnabled false 
 + proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' 
 + } 
 + } 
 + } 
 + 
 + tasks . preBuild { 
 + dependsOn " : realm : androidJar " 
 + } 
 + 
 + dependencies { 
 + compile ' com . android . support : appcompat - v7 : 21 . 0 . + ' 
 + compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) 
 + } 
 diff - - git a / examples / threadexample / proguard - rules . pro b / examples / threadexample / proguard - rules . pro 
 new file mode 100644 
 index 0000000 . . a965f92 
 - - - / dev / null 
 + + + b / examples / threadexample / proguard - rules . pro 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + # Add project specific ProGuard rules here . 
 + # By default , the flags in this file are appended to flags specified 
 + # in / usr / local / opt / android - sdk / tools / proguard / proguard - android . txt 
 + # You can edit the include path and order by changing the proguardFiles 
 + # directive in build . gradle . 
 + # 
 + # For more details , see 
 + # http : / / developer . android . com / guide / developing / tools / proguard . html 
 + 
 + # Add any project specific keep options here : 
 + 
 + # If your project uses WebView with JS , uncomment the following 
 + # and specify the fully qualified class name to the JavaScript interface 
 + # class : 
 + # - keepclassmembers class fqcn . of . javascript . interface . for . webview { 
 + # public * ; 
 + # } 
 diff - - git a / examples / threadexample / src / main / AndroidManifest . xml b / examples / threadexample / src / main / AndroidManifest . xml 
 new file mode 100644 
 index 0000000 . . f966b2e 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / AndroidManifest . xml 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + package = " io . realm . myapplication " > 
 + 
 + < application 
 + android : allowBackup = " true " 
 + android : icon = " @ drawable / ic _ launcher " 
 + android : label = " @ string / app _ name " 
 + android : theme = " @ style / AppTheme " > 
 + < activity 
 + android : name = " io . realm . threadexample . ThreadExampleActivity " 
 + android : label = " @ string / app _ name " > 
 + < intent - filter > 
 + < action android : name = " android . intent . action . MAIN " / > 
 + 
 + < category android : name = " android . intent . category . LAUNCHER " / > 
 + < / intent - filter > 
 + < / activity > 
 + < / application > 
 + 
 + < / manifest > 
 diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / AsyncTaskFragment . java b / examples / threadexample / src / main / java / io / realm / threadexample / AsyncTaskFragment . java 
 new file mode 100644 
 index 0000000 . . 8a894dd 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / java / io / realm / threadexample / AsyncTaskFragment . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . threadexample ; 
 + 
 + import android . os . Bundle ; 
 + import android . support . v4 . app . Fragment ; 
 + import android . view . LayoutInflater ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + 
 + import io . realm . myapplication . R ; 
 + 
 + / * * 
 + * This fragment demonstrates how Realm can work with AsyncTasks . 
 + * / 
 + public class AsyncTaskFragment extends Fragment { 
 + 
 + public static AsyncTaskFragment newInstance ( int sectionNumber ) { 
 + AsyncTaskFragment fragment = new AsyncTaskFragment ( ) ; 
 + Bundle args = new Bundle ( ) ; 
 + args . putInt ( ThreadExampleActivity . ARG _ SECTION _ NUMBER , sectionNumber ) ; 
 + fragment . setArguments ( args ) ; 
 + return fragment ; 
 + } 
 + 
 + 
 + @ Override 
 + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 + View rootView = inflater . inflate ( R . layout . fragment _ asynctask , container , false ) ; 
 + return rootView ; 
 + } 
 + } 
 diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / ThreadExampleActivity . java b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadExampleActivity . java 
 new file mode 100644 
 index 0000000 . . 03fcd1c 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadExampleActivity . java 
 @ @ - 0 , 0 + 1 , 118 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . threadexample ; 
 + 
 + import android . os . Bundle ; 
 + import android . support . v4 . app . Fragment ; 
 + import android . support . v4 . app . FragmentManager ; 
 + import android . support . v4 . app . FragmentPagerAdapter ; 
 + import android . support . v4 . app . FragmentTransaction ; 
 + import android . support . v4 . view . ViewPager ; 
 + import android . support . v7 . app . ActionBar ; 
 + import android . support . v7 . app . ActionBarActivity ; 
 + 
 + import java . util . Locale ; 
 + 
 + import io . realm . myapplication . R ; 
 + 
 + 
 + public class ThreadExampleActivity extends ActionBarActivity implements android . support . v7 . app . ActionBar . TabListener { 
 + 
 + public static final String ARG _ SECTION _ NUMBER = " arg . section _ number " ; 
 + 
 + private SectionsPagerAdapter pageAdapter ; 
 + private ViewPager viewPager ; 
 + 
 + @ Override 
 + protected void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + setContentView ( R . layout . activity _ main ) ; 
 + 
 + / / Set up the action bar . 
 + final android . support . v7 . app . ActionBar actionBar = getSupportActionBar ( ) ; 
 + actionBar . setNavigationMode ( android . support . v7 . app . ActionBar . NAVIGATION _ MODE _ TABS ) ; 
 + 
 + pageAdapter = new SectionsPagerAdapter ( getSupportFragmentManager ( ) ) ; 
 + viewPager = ( ViewPager ) findViewById ( R . id . pager ) ; 
 + viewPager . setAdapter ( pageAdapter ) ; 
 + 
 + viewPager . setOnPageChangeListener ( new ViewPager . SimpleOnPageChangeListener ( ) { 
 + @ Override 
 + public void onPageSelected ( int position ) { 
 + actionBar . setSelectedNavigationItem ( position ) ; 
 + } 
 + } ) ; 
 + 
 + for ( int i = 0 ; i < pageAdapter . getCount ( ) ; i + + ) { 
 + getSupportActionBar ( ) . addTab ( getSupportActionBar ( ) . newTab ( ) 
 + . setText ( pageAdapter . getPageTitle ( i ) ) 
 + . setTabListener ( this ) ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + protected void onDestroy ( ) { 
 + super . onDestroy ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onTabSelected ( ActionBar . Tab tab , FragmentTransaction fragmentTransaction ) { 
 + viewPager . setCurrentItem ( tab . getPosition ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public void onTabUnselected ( ActionBar . Tab tab , FragmentTransaction fragmentTransaction ) { 
 + 
 + } 
 + 
 + @ Override 
 + public void onTabReselected ( ActionBar . Tab tab , FragmentTransaction fragmentTransaction ) { 
 + 
 + } 
 + 
 + 
 + public class SectionsPagerAdapter extends FragmentPagerAdapter { 
 + 
 + public SectionsPagerAdapter ( FragmentManager fm ) { 
 + super ( fm ) ; 
 + } 
 + 
 + @ Override 
 + public Fragment getItem ( int position ) { 
 + switch ( position ) { 
 + case 0 : return new ThreadFragment ( ) ; 
 + case 1 : return new AsyncTaskFragment ( ) ; 
 + default : return null ; 
 + } 
 + } 
 + 
 + @ Override 
 + public int getCount ( ) { 
 + return 2 ; 
 + } 
 + 
 + @ Override 
 + public CharSequence getPageTitle ( int position ) { 
 + Locale l = Locale . getDefault ( ) ; 
 + switch ( position ) { 
 + case 0 : return getString ( R . string . title _ section1 ) . toUpperCase ( l ) ; 
 + case 1 : return getString ( R . string . title _ section2 ) . toUpperCase ( l ) ; 
 + default : return null ; 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / ThreadFragment . java b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadFragment . java 
 new file mode 100644 
 index 0000000 . . e579fe6 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / java / io / realm / threadexample / ThreadFragment . java 
 @ @ - 0 , 0 + 1 , 165 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . threadexample ; 
 + 
 + import android . app . Activity ; 
 + import android . os . Bundle ; 
 + import android . support . v4 . app . Fragment ; 
 + import android . view . LayoutInflater ; 
 + import android . view . Menu ; 
 + import android . view . MenuInflater ; 
 + import android . view . MenuItem ; 
 + import android . view . View ; 
 + import android . view . ViewGroup ; 
 + 
 + import java . util . Random ; 
 + 
 + import io . realm . Realm ; 
 + import io . realm . RealmChangeListener ; 
 + import io . realm . myapplication . R ; 
 + import io . realm . threadexample . models . Point ; 
 + import io . realm . threadexample . widgets . DotsView ; 
 + 
 + / * * 
 + * This fragment demonstrates how Realm can interact with a background thread . 
 + * / 
 + public class ThreadFragment extends Fragment { 
 + 
 + private Realm realm ; 
 + private Random random = new Random ( ) ; 
 + private Thread backgroundThread ; 
 + private DotsView dotsView ; 
 + 
 + / / Realm change listener that refreshes the UI when there is changes to Realm . 
 + private RealmChangeListener realmListener = new RealmChangeListener ( ) { 
 + @ Override 
 + public void onChange ( ) { 
 + dotsView . invalidate ( ) ; 
 + } 
 + } ; 
 + 
 + @ Override 
 + public void onCreate ( Bundle savedInstanceState ) { 
 + super . onCreate ( savedInstanceState ) ; 
 + setHasOptionsMenu ( true ) ; 
 + } 
 + 
 + @ Override 
 + public void onAttach ( Activity activity ) { 
 + super . onAttach ( activity ) ; 
 + realm = Realm . getInstance ( getActivity ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { 
 + View rootView = inflater . inflate ( R . layout . fragment _ thread , container , false ) ; 
 + dotsView = ( DotsView ) rootView . findViewById ( R . id . dots ) ; 
 + 
 + / / Create a RealmQuery on the UI thread and send the results to the custom view . The 
 + / / RealmResults will automatically be updated whenever new data is either added or removed . 
 + / / We still need to invalidate the UI to show the changes however . See the RealmChangeListener . 
 + / / 
 + / / Note also that currently the query gets updated by rerunning it on the thread it was 
 + / / created . This can negatively effect framerates if it is a complicated query or a very 
 + / / large dataset . 
 + dotsView . setRealmResults ( realm . allObjects ( Point . class ) ) ; 
 + 
 + return rootView ; 
 + } 
 + 
 + @ Override 
 + public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { 
 + super . onCreateOptionsMenu ( menu , inflater ) ; 
 + inflater . inflate ( R . menu . menu _ backgroundthread , menu ) ; 
 + } 
 + 
 + @ Override 
 + public boolean onOptionsItemSelected ( MenuItem item ) { 
 + 
 + switch ( item . getItemId ( ) ) { 
 + case R . id . action _ add _ dot : 
 + realm . beginTransaction ( ) ; 
 + Point point = realm . createObject ( Point . class ) ; 
 + point . setX ( random . nextInt ( 100 ) ) ; 
 + point . setY ( random . nextInt ( 100 ) ) ; 
 + point . setColor ( getResources ( ) . getColor ( R . color . realm _ blue ) ) ; 
 + realm . commitTransaction ( ) ; 
 + return true ; 
 + 
 + case R . id . action _ clear : 
 + realm . beginTransaction ( ) ; 
 + realm . clear ( Point . class ) ; 
 + realm . commitTransaction ( ) ; 
 + return true ; 
 + 
 + default : 
 + return super . onOptionsItemSelected ( item ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void onResume ( ) { 
 + super . onResume ( ) ; 
 + 
 + / / Enable UI refresh while the fragment is active . 
 + realm . addChangeListener ( realmListener ) ; 
 + 
 + / / Create background thread that add new dots every 0 . 5 second . 
 + backgroundThread = new Thread ( new Runnable ( ) { 
 + 
 + @ Override 
 + public void run ( ) { 
 + / / Realm instances cannot be shared between threads , so we need to create a new 
 + / / instance on the background thread . 
 + Realm realm = Realm . getInstance ( getActivity ( ) , false ) ; 
 + while ( ! backgroundThread . isInterrupted ( ) ) { 
 + try { 
 + realm . beginTransaction ( ) ; 
 + Point point = realm . createObject ( Point . class ) ; 
 + point . setX ( random . nextInt ( 100 ) ) ; 
 + point . setY ( random . nextInt ( 100 ) ) ; 
 + point . setColor ( getResources ( ) . getColor ( R . color . realm _ red ) ) ; 
 + realm . commitTransaction ( ) ; 
 + 
 + Thread . sleep ( 500 ) ; 
 + } catch ( InterruptedException e ) { 
 + e . printStackTrace ( ) ; 
 + } 
 + } 
 + 
 + realm . close ( ) ; 
 + } 
 + } ) ; 
 + backgroundThread . start ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onPause ( ) { 
 + super . onPause ( ) ; 
 + 
 + / / Disable UI refresh while the fragment is no longer active . 
 + realm . addChangeListener ( realmListener ) ; 
 + backgroundThread . interrupt ( ) ; 
 + } 
 + 
 + @ Override 
 + public void onDestroy ( ) { 
 + super . onDestroy ( ) ; 
 + / / Remember to close the Realm instance when done with it . 
 + realm . close ( ) ; 
 + } 
 + } 
 diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / models / Point . java b / examples / threadexample / src / main / java / io / realm / threadexample / models / Point . java 
 new file mode 100644 
 index 0000000 . . 48fe132 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / java / io / realm / threadexample / models / Point . java 
 @ @ - 0 , 0 + 1 , 43 @ @ 
 + package io . realm . threadexample . models ; 
 + 
 + import io . realm . RealmObject ; 
 + 
 + public class Point extends RealmObject { 
 + 
 + private int x ; 
 + private int y ; 
 + private int color ; 
 + private long timestamp ; 
 + 
 + public int getX ( ) { 
 + return x ; 
 + } 
 + 
 + public void setX ( int x ) { 
 + this . x = x ; 
 + } 
 + 
 + public int getY ( ) { 
 + return y ; 
 + } 
 + 
 + public void setY ( int y ) { 
 + this . y = y ; 
 + } 
 + 
 + public int getColor ( ) { 
 + return color ; 
 + } 
 + 
 + public void setColor ( int color ) { 
 + this . color = color ; 
 + } 
 + 
 + public long getTimestamp ( ) { 
 + return timestamp ; 
 + } 
 + 
 + public void setTimestamp ( long timestamp ) { 
 + this . timestamp = timestamp ; 
 + } 
 + } 
 diff - - git a / examples / threadexample / src / main / java / io / realm / threadexample / widgets / DotsView . java b / examples / threadexample / src / main / java / io / realm / threadexample / widgets / DotsView . java 
 new file mode 100644 
 index 0000000 . . 6a48a9f 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / java / io / realm / threadexample / widgets / DotsView . java 
 @ @ - 0 , 0 + 1 , 70 @ @ 
 + package io . realm . threadexample . widgets ; 
 + 
 + import android . content . Context ; 
 + import android . graphics . Canvas ; 
 + import android . graphics . Color ; 
 + import android . graphics . Paint ; 
 + import android . util . AttributeSet ; 
 + import android . view . View ; 
 + 
 + import io . realm . RealmResults ; 
 + import io . realm . threadexample . models . Point ; 
 + 
 + / * * 
 + * Custom view that plot ( x , y ) coordinates from a RealmQuery 
 + * / 
 + public class DotsView extends View { 
 + 
 + / / RealmResults will automatically be up to date . 
 + private RealmResults < Point > results ; 
 + 
 + private Paint circlePaint ; 
 + private float circleRadius ; 
 + private float pixelsPrWidth ; 
 + private float pixelsPrHeight ; 
 + 
 + 
 + public DotsView ( Context context ) { 
 + super ( context ) ; 
 + init ( ) ; 
 + } 
 + 
 + public DotsView ( Context context , AttributeSet attrs ) { 
 + super ( context , attrs ) ; 
 + init ( ) ; 
 + } 
 + 
 + public DotsView ( Context context , AttributeSet attrs , int defStyleAttr ) { 
 + super ( context , attrs , defStyleAttr ) ; 
 + init ( ) ; 
 + } 
 + 
 + private void init ( ) { 
 + circlePaint = new Paint ( Paint . ANTI _ ALIAS _ FLAG ) ; 
 + circlePaint . setStyle ( Paint . Style . FILL ) ; 
 + circlePaint . setColor ( Color . RED ) ; 
 + circleRadius = 10 ; 
 + } 
 + 
 + public void setRealmResults ( RealmResults results ) { 
 + this . results = results ; 
 + invalidate ( ) ; 
 + } 
 + 
 + @ Override 
 + protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { 
 + super . onSizeChanged ( w , h , oldw , oldh ) ; 
 + pixelsPrWidth = w / 100f ; 
 + pixelsPrHeight = h / 100f ; 
 + } 
 + 
 + @ Override 
 + protected void onDraw ( Canvas canvas ) { 
 + super . onDraw ( canvas ) ; 
 + canvas . drawColor ( Color . TRANSPARENT ) ; 
 + for ( Point point : results ) { 
 + circlePaint . setColor ( point . getColor ( ) ) ; 
 + canvas . drawCircle ( point . getX ( ) * pixelsPrWidth , point . getY ( ) * pixelsPrHeight , circleRadius , circlePaint ) ; 
 + } 
 + } 
 + } 
 diff - - git a / examples / threadexample / src / main / res / drawable - xxhdpi / ic _ launcher . png b / examples / threadexample / src / main / res / drawable - xxhdpi / ic _ launcher . png 
 new file mode 100644 
 index 0000000 . . 4330211 
 Binary files / dev / null and b / examples / threadexample / src / main / res / drawable - xxhdpi / ic _ launcher . png differ 
 diff - - git a / examples / threadexample / src / main / res / layout / activity _ main . xml b / examples / threadexample / src / main / res / layout / activity _ main . xml 
 new file mode 100644 
 index 0000000 . . 0cfa754 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / layout / activity _ main . xml 
 @ @ - 0 , 0 + 1 , 22 @ @ 
 + < ! - - 
 + ~ Copyright 2014 Realm Inc . 
 + ~ 
 + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + ~ you may not use this file except in compliance with the License . 
 + ~ You may obtain a copy of the License at 
 + ~ 
 + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + ~ 
 + ~ Unless required by applicable law or agreed to in writing , software 
 + ~ distributed under the License is distributed on an " AS IS " BASIS , 
 + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + ~ See the License for the specific language governing permissions and 
 + ~ limitations under the License . 
 + - - > 
 + 
 + < android . support . v4 . view . ViewPager xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : tools = " http : / / schemas . android . com / tools " 
 + android : id = " @ + id / pager " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + tools : context = " . ThreadExampleActivity " / > 
 diff - - git a / examples / threadexample / src / main / res / layout / fragment _ asynctask . xml b / examples / threadexample / src / main / res / layout / fragment _ asynctask . xml 
 new file mode 100644 
 index 0000000 . . 5e7ef68 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / layout / fragment _ asynctask . xml 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + < ! - - 
 + ~ Copyright 2014 Realm Inc . 
 + ~ 
 + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + ~ you may not use this file except in compliance with the License . 
 + ~ You may obtain a copy of the License at 
 + ~ 
 + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + ~ 
 + ~ Unless required by applicable law or agreed to in writing , software 
 + ~ distributed under the License is distributed on an " AS IS " BASIS , 
 + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + ~ See the License for the specific language governing permissions and 
 + ~ limitations under the License . 
 + - - > 
 + 
 + < RelativeLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : tools = " http : / / schemas . android . com / tools " android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " android : paddingLeft = " @ dimen / activity _ horizontal _ margin " 
 + android : paddingRight = " @ dimen / activity _ horizontal _ margin " 
 + android : paddingTop = " @ dimen / activity _ vertical _ margin " 
 + android : paddingBottom = " @ dimen / activity _ vertical _ margin " 
 + android : background = " @ color / fragment _ background " 
 + tools : context = " . MainActivity $ PlaceholderFragment " > 
 + 
 + < TextView android : id = " @ + id / section _ label " android : layout _ width = " wrap _ content " 
 + android : layout _ height = " wrap _ content " / > 
 + 
 + < / RelativeLayout > 
 diff - - git a / examples / threadexample / src / main / res / layout / fragment _ thread . xml b / examples / threadexample / src / main / res / layout / fragment _ thread . xml 
 new file mode 100644 
 index 0000000 . . 522ba2c 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / layout / fragment _ thread . xml 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + < ! - - 
 + ~ Copyright 2014 Realm Inc . 
 + ~ 
 + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + ~ you may not use this file except in compliance with the License . 
 + ~ You may obtain a copy of the License at 
 + ~ 
 + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + ~ 
 + ~ Unless required by applicable law or agreed to in writing , software 
 + ~ distributed under the License is distributed on an " AS IS " BASIS , 
 + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + ~ See the License for the specific language governing permissions and 
 + ~ limitations under the License . 
 + - - > 
 + 
 + < RelativeLayout xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : tools = " http : / / schemas . android . com / tools " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + android : background = " @ color / fragment _ background " 
 + tools : context = " . MainActivity $ PlaceholderFragment " > 
 + 
 + < io . realm . threadexample . widgets . DotsView 
 + android : id = " @ + id / dots " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " / > 
 + 
 + < / RelativeLayout > 
 diff - - git a / examples / threadexample / src / main / res / menu / menu _ backgroundthread . xml b / examples / threadexample / src / main / res / menu / menu _ backgroundthread . xml 
 new file mode 100644 
 index 0000000 . . e3708ee 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / menu / menu _ backgroundthread . xml 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > < ! - - 
 + ~ Copyright 2014 Realm Inc . 
 + ~ 
 + ~ Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + ~ you may not use this file except in compliance with the License . 
 + ~ You may obtain a copy of the License at 
 + ~ 
 + ~ http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + ~ 
 + ~ Unless required by applicable law or agreed to in writing , software 
 + ~ distributed under the License is distributed on an " AS IS " BASIS , 
 + ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + ~ See the License for the specific language governing permissions and 
 + ~ limitations under the License . 
 + - - > 
 + 
 + < menu xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : app = " http : / / schemas . android . com / apk / res - auto " > 
 + 
 + < item 
 + android : id = " @ + id / action _ add _ dot " 
 + android : title = " @ string / add _ dot " 
 + android : icon = " @ android : drawable / ic _ menu _ add " 
 + app : showAsAction = " always " / > 
 + 
 + < item 
 + android : id = " @ + id / action _ clear " 
 + android : title = " @ string / clear _ dots " 
 + android : icon = " @ android : drawable / ic _ menu _ delete " 
 + app : showAsAction = " always " / > 
 + 
 + < / menu > 
 \ No newline at end of file 
 diff - - git a / examples / threadexample / src / main / res / values - w820dp / dimens . xml b / examples / threadexample / src / main / res / values - w820dp / dimens . xml 
 new file mode 100644 
 index 0000000 . . 63fc816 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / values - w820dp / dimens . xml 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + < resources > 
 + < ! - - Example customization of dimensions originally defined in res / values / dimens . xml 
 + ( such as screen margins ) for screens with more than 820dp of available width . This 
 + would include 7 " and 10 " devices in landscape ( ~ 960dp and ~ 1280dp respectively ) . - - > 
 + < dimen name = " activity _ horizontal _ margin " > 64dp < / dimen > 
 + < / resources > 
 diff - - git a / examples / threadexample / src / main / res / values / colors . xml b / examples / threadexample / src / main / res / values / colors . xml 
 new file mode 100644 
 index 0000000 . . fed8363 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / values / colors . xml 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < resources > 
 + < color name = " fragment _ background " > # 333333 < / color > 
 + < color name = " realm _ red " > # f0727d < / color > 
 + < color name = " realm _ blue " > # 428bca < / color > 
 + < / resources > 
 \ No newline at end of file 
 diff - - git a / examples / threadexample / src / main / res / values / dimens . xml b / examples / threadexample / src / main / res / values / dimens . xml 
 new file mode 100644 
 index 0000000 . . 47c8224 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / values / dimens . xml 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + < resources > 
 + < ! - - Default screen margins , per the Android Design guidelines . - - > 
 + < dimen name = " activity _ horizontal _ margin " > 16dp < / dimen > 
 + < dimen name = " activity _ vertical _ margin " > 16dp < / dimen > 
 + < / resources > 
 diff - - git a / examples / threadexample / src / main / res / values / strings . xml b / examples / threadexample / src / main / res / values / strings . xml 
 new file mode 100644 
 index 0000000 . . 21288be 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / values / strings . xml 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < resources > 
 + 
 + < string name = " app _ name " > Thread example < / string > 
 + < string name = " action _ settings " > Settings < / string > 
 + < string name = " title _ section1 " > Threads < / string > 
 + < string name = " title _ section2 " > AsyncTask < / string > 
 + < string name = " add _ dot " > Add dot < / string > 
 + < string name = " clear _ dots " > Clear dots < / string > 
 + 
 + < / resources > 
 diff - - git a / examples / threadexample / src / main / res / values / styles . xml b / examples / threadexample / src / main / res / values / styles . xml 
 new file mode 100644 
 index 0000000 . . 766ab99 
 - - - / dev / null 
 + + + b / examples / threadexample / src / main / res / values / styles . xml 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + < resources > 
 + 
 + < ! - - Base application theme . - - > 
 + < style name = " AppTheme " parent = " Theme . AppCompat . Light . DarkActionBar " > 
 + < ! - - Customize your theme here . - - > 
 + < / style > 
 + 
 + < / resources > 
 diff - - git a / settings . gradle b / settings . gradle 
 index d7fde45 . . 9a97810 100644 
 - - - a / settings . gradle 
 + + + b / settings . gradle 
 @ @ - 2 , 7 + 2 , 13 @ @ 
 include ' realm ' 
 
 / / Example projects 
 - include ' : introExample ' , ' : gridViewExample ' , ' : concurrencyExample ' , ' : encryptionExample ' , ' : migrationExample ' , ' : adapterExample ' 
 + include ' : introExample ' , 
 + ' : gridViewExample ' , 
 + ' : concurrencyExample ' , 
 + ' : encryptionExample ' , 
 + ' : migrationExample ' , 
 + ' : adapterExample ' , 
 + ' : threadExample ' 
 
 project ( ' : introExample ' ) . projectDir = new File ( ' examples / introExample ' ) 
 project ( ' : gridViewExample ' ) . projectDir = new File ( ' examples / gridViewExample ' ) 
 @ @ - 10 , 6 + 16 , 7 @ @ project ( ' : concurrencyExample ' ) . projectDir = new File ( ' examples / concurrencyExampl 
 project ( ' : encryptionExample ' ) . projectDir = new File ( ' examples / encryptionExample ' ) 
 project ( ' : migrationExample ' ) . projectDir = new File ( ' examples / migrationExample ' ) 
 project ( ' : adapterExample ' ) . projectDir = new File ( ' examples / adapterExample ' ) 
 + project ( ' : threadExample ' ) . projectDir = new File ( ' examples / threadExample ' ) 
 
 / / Experimental projects 
 include ' : pathExperiment '
