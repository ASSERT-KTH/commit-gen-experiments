BLEU SCORE: 0.0208362582256928

TEST MSG: refactor internal method name in RealmSchema
GENERATED MSG: Add a check whether transformer was applied or not .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index aaf75da . . f95147a 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 3694 , 7 + 3694 , 7 @ @ public class RealmTests { <nl> <nl> / / get the pre - update index for the " name " column . <nl> CatRealmProxy . CatColumnInfo catColumnInfo <nl> - = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnIndices ( ) . getColumnInfo ( Cat . class ) ; <nl> + = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnInfo ( Cat . class ) ; <nl> final long nameIndex = catColumnInfo . nameIndex ; <nl> <nl> / / Change the index of the column " name " . <nl> @ @ - 3717 , 7 + 3717 , 7 @ @ public class RealmTests { <nl> assertNotEquals ( nameIndex , nameIndexNew ) ; <nl> <nl> / / Verify that the index in the ColumnInfo has been updated . <nl> - catColumnInfo = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnIndices ( ) . getColumnInfo ( Cat . class ) ; <nl> + catColumnInfo = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnInfo ( Cat . class ) ; <nl> assertEquals ( nameIndexNew . get ( ) , catColumnInfo . nameIndex ) ; <nl> assertEquals ( nameIndexNew . get ( ) , ( long ) catColumnInfo . getIndicesMap ( ) . get ( Cat . FIELD _ NAME ) ) ; <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 06302c0 . . 4d87013 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 293 , 7 + 293 , 7 @ @ public class Realm extends BaseRealm { <nl> <nl> if ( columnIndices ! = null ) { <nl> / / Copies global cache as a Realm local indices cache . <nl> - realm . schema . setColumnIndices ( columnIndices ) ; <nl> + realm . schema . setInitialColumnIndices ( columnIndices ) ; <nl> } else { <nl> final boolean syncingConfig = configuration . isSyncConfiguration ( ) ; <nl> <nl> @ @ - 359 , 7 + 359 , 7 @ @ public class Realm extends BaseRealm { <nl> columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; <nl> } <nl> <nl> - realm . getSchema ( ) . setColumnIndices ( <nl> + realm . getSchema ( ) . setInitialColumnIndices ( <nl> ( unversioned ) ? configuration . getSchemaVersion ( ) : currentVersion , <nl> columnInfoMap ) ; <nl> <nl> @ @ - 425 , 7 + 425 , 7 @ @ public class Realm extends BaseRealm { <nl> columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; <nl> } <nl> <nl> - realm . getSchema ( ) . setColumnIndices ( <nl> + realm . getSchema ( ) . setInitialColumnIndices ( <nl> ( unversioned ) ? newVersion : currentVersion , <nl> columnInfoMap ) ; <nl> <nl> @ @ - 1690 , 7 + 1690 , 7 @ @ public class Realm extends BaseRealm { <nl> <nl> cacheForCurrentVersion = createdGlobalCache = new ColumnIndices ( currentSchemaVersion , map ) ; <nl> } <nl> - schema . setColumnIndices ( cacheForCurrentVersion , mediator ) ; <nl> + schema . updateColumnIndices ( cacheForCurrentVersion , mediator ) ; <nl> return createdGlobalCache ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> index 27a63ac . . b4cab8a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> @ @ - 164 , 7 + 164 , 7 @ @ final class RealmCache { <nl> if ( realmClass = = Realm . class & & refAndCount . globalCount = = 0 ) { <nl> final BaseRealm realm = refAndCount . localRealm . get ( ) ; <nl> / / Stores a copy of local ColumnIndices as a global cache . <nl> - RealmCache . storeColumnIndices ( cache . typedColumnIndicesArray , realm . schema . getColumnIndices ( ) ) ; <nl> + RealmCache . storeColumnIndices ( cache . typedColumnIndicesArray , realm . schema . cloneColumnIndices ( ) ) ; <nl> } <nl> / / This is the first instance in current thread , increase the global count . <nl> refAndCount . globalCount + + ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmSchema . java b / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> index e7a42bb . . ea53642 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> @ @ - 89 , 19 + 89 , 35 @ @ public abstract class RealmSchema { <nl> * / <nl> public abstract boolean contains ( String className ) ; <nl> <nl> - final void setColumnIndices ( ColumnIndices columnIndices ) { <nl> + final void setInitialColumnIndices ( ColumnIndices columnIndices ) { <nl> + if ( this . columnIndices ! = null ) { <nl> + throw new IllegalStateException ( " An instance of ColumnIndices is already set . " ) ; <nl> + } <nl> this . columnIndices = columnIndices . clone ( ) ; <nl> } <nl> <nl> - final void setColumnIndices ( long version , Map < Class < ? extends RealmModel > , ColumnInfo > columnInfoMap ) { <nl> + final void setInitialColumnIndices ( long version , Map < Class < ? extends RealmModel > , ColumnInfo > columnInfoMap ) { <nl> + if ( this . columnIndices ! = null ) { <nl> + throw new IllegalStateException ( " An instance of ColumnIndices is already set . " ) ; <nl> + } <nl> columnIndices = new ColumnIndices ( version , columnInfoMap ) ; <nl> } <nl> <nl> - void setColumnIndices ( ColumnIndices cacheForCurrentVersion , RealmProxyMediator mediator ) { <nl> - columnIndices . copyFrom ( cacheForCurrentVersion , mediator ) ; <nl> + / * * <nl> + * Updates all { @ link ColumnInfo } elements in { @ code columnIndices } . <nl> + * <nl> + * < p > <nl> + * The ColumnInfo elements are shared between all { @ link RealmObject } s created by the Realm instance <nl> + * which owns this RealmSchema . Updating them also means updating indices information in those { @ link RealmObject } s . <nl> + * <nl> + * @ param schemaVersion new schema version . <nl> + * @ param mediator mediator for the Realm . <nl> + * / <nl> + void updateColumnIndices ( ColumnIndices schemaVersion , RealmProxyMediator mediator ) { <nl> + columnIndices . copyFrom ( schemaVersion , mediator ) ; <nl> } <nl> <nl> - final ColumnIndices getColumnIndices ( ) { <nl> + final ColumnIndices cloneColumnIndices ( ) { <nl> checkIndices ( ) ; <nl> return columnIndices . clone ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy <nl> index db7909a . . 5953849 100644 <nl> - - - a / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy <nl> + + + b / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy <nl> @ @ - 117 , 4 + 117 , 19 @ @ class BytecodeModifier { <nl> } <nl> } <nl> } <nl> + <nl> + / * * <nl> + * Adds a method to indicate that Realm transformer has been applied . <nl> + * <nl> + * @ param clazz The CtClass to modify . <nl> + * / <nl> + public static void overrideTransformedMarker ( CtClass clazz ) { <nl> + logger . info " Realm : Marking as transformed $ { clazz . simpleName } " <nl> + try { <nl> + clazz . getDeclaredMethod ( " transformerApplied " , new CtClass [ 0 ] ) <nl> + } catch ( NotFoundException ignored ) { <nl> + clazz . addMethod ( CtNewMethod . make ( Modifier . PUBLIC , CtClass . booleanType , " transformerApplied " , <nl> + new CtClass [ 0 ] , new CtClass [ 0 ] , " { return true ; } " , clazz ) ) <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy <nl> index 2ba0216 . . 804523a 100644 <nl> - - - a / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy <nl> + + + b / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy <nl> @ @ - 28 , 6 + 28 , 7 @ @ import org . slf4j . LoggerFactory <nl> <nl> import java . lang . reflect . Modifier <nl> import java . util . jar . JarFile <nl> + import java . util . regex . Pattern <nl> <nl> import static com . android . build . api . transform . QualifiedContent . * <nl> / * * <nl> @ @ - 78 , 6 + 79 , 18 @ @ class RealmTransformer extends Transform { <nl> <nl> logger . info " ClassPool contains Realm classes : $ { classPool . getOrNull ( ' io . realm . RealmList ' ) ! = null } " <nl> <nl> + / / mark as transformed <nl> + def baseProxyMediator = classPool . get ( ' io . realm . internal . RealmProxyMediator ' ) <nl> + def mediatorPattern = Pattern . compile ( ' ^ io \ \ . realm \ \ . [ ^ . ] + Mediator $ ' ) <nl> + def proxyMediatorClasses = classNames <nl> + . findAll { it . matches ( mediatorPattern ) } <nl> + . collect { classPool . getCtClass ( it ) } <nl> + . findAll { it . superclass ? . equals ( baseProxyMediator ) } <nl> + logger . info " Proxy Mediator Classes : $ { proxyMediatorClasses * . name } " <nl> + proxyMediatorClasses . each { <nl> + BytecodeModifier . overrideTransformedMarker ( it ) ; <nl> + } <nl> + <nl> / / Find the model classes <nl> def realmObject = classPool . get ( ' io . realm . RealmObject ' ) <nl> def modelClasses = classNames <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java b / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java <nl> index 8cf5a09 . . 5bc28ca 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java <nl> @ @ - 82 , 4 + 82 , 9 @ @ public class MediatorTest extends AndroidTestCase { <nl> assertFalse ( mediator . getModelClasses ( ) . contains ( Dog . class ) ) ; <nl> assertFalse ( mediator . getModelClasses ( ) . contains ( AllTypes . class ) ) ; <nl> } <nl> + <nl> + public void testDefaultMediatorWasTransformed ( ) { <nl> + final DefaultRealmModuleMediator defaultMediator = new DefaultRealmModuleMediator ( ) ; <nl> + assertTrue ( defaultMediator . transformerApplied ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> index 38f4672 . . 03e237a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 65 , 7 + 65 , 13 @ @ public class RealmConfiguration { <nl> static { <nl> DEFAULT _ MODULE = Realm . getDefaultModule ( ) ; <nl> if ( DEFAULT _ MODULE ! = null ) { <nl> - DEFAULT _ MODULE _ MEDIATOR = getModuleMediator ( DEFAULT _ MODULE . getClass ( ) . getCanonicalName ( ) ) ; <nl> + final RealmProxyMediator mediator = getModuleMediator ( DEFAULT _ MODULE . getClass ( ) . getCanonicalName ( ) ) ; <nl> + if ( ! mediator . transformerApplied ( ) ) { <nl> + throw new ExceptionInInitializerError ( " RealmTransformer doesn ' t seem to be applied . " + <nl> + " Please update the project configuration to use the Realm Gradle plugin . " + <nl> + " See https : / / realm . io / news / android - installation - change / " ) ; <nl> + } <nl> + DEFAULT _ MODULE _ MEDIATOR = mediator ; <nl> } else { <nl> DEFAULT _ MODULE _ MEDIATOR = null ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java <nl> index 893ceef . . 636d45e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java <nl> @ @ - 138 , 6 + 138 , 17 @ @ public abstract class RealmProxyMediator { <nl> * / <nl> public abstract < E extends RealmObject > E createDetachedCopy ( E realmObject , int maxDepth , Map < RealmObject , RealmObjectProxy . CacheData < RealmObject > > cache ) ; <nl> <nl> + / * * <nl> + * Returns whether Realm transformer has been applied or not . Subclasses of this class are <nl> + * created by the annotation processor and the Realm transformer will add an override of <nl> + * this method that always return { @ code true } if the transform was successful . <nl> + * <nl> + * @ return { @ code true } if Realm transformer was applied , { @ code false } otherwise . <nl> + * / <nl> + public boolean transformerApplied ( ) { <nl> + return false ; <nl> + } <nl> + <nl> @ Override <nl> public boolean equals ( Object o ) { <nl> if ( ! ( o instanceof RealmProxyMediator ) ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java <nl> index c5e7284 . . 1c66547 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java <nl> @ @ - 115 , 6 + 115 , 16 @ @ public class CompositeMediator extends RealmProxyMediator { <nl> return mediator . createDetachedCopy ( realmObject , maxDepth , cache ) ; <nl> } <nl> <nl> + @ Override <nl> + public boolean transformerApplied ( ) { <nl> + for ( Map . Entry < Class < ? extends RealmObject > , RealmProxyMediator > entry : mediators . entrySet ( ) ) { <nl> + if ( ! entry . getValue ( ) . transformerApplied ( ) ) { <nl> + return false ; <nl> + } <nl> + } <nl> + return true ; <nl> + } <nl> + <nl> / / Returns the mediator for a given model class ( not RealmProxy ) or throws exception <nl> private RealmProxyMediator getMediator ( Class < ? extends RealmObject > clazz ) { <nl> RealmProxyMediator mediator = mediators . get ( clazz ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java <nl> index 369b1c3 . . c200323 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java <nl> @ @ - 131 , 6 + 131 , 15 @ @ public class FilterableMediator extends RealmProxyMediator { <nl> return originalMediator . createDetachedCopy ( realmObject , maxDepth , cache ) ; <nl> } <nl> <nl> + @ Override <nl> + public boolean transformerApplied ( ) { <nl> + / / noinspection SimplifiableIfStatement <nl> + if ( originalMediator = = null ) { <nl> + return true ; <nl> + } <nl> + return originalMediator . transformerApplied ( ) ; <nl> + } <nl> + <nl> / / Validate if a model class ( not RealmProxy ) is part of this Schema . <nl> private void checkSchemaHasClass ( Class < ? extends RealmObject > clazz ) { <nl> if ( ! allowedClasses . contains ( clazz ) ) {

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index aaf75da . . f95147a 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 3694 , 7 + 3694 , 7 @ @ public class RealmTests { 
 
 / / get the pre - update index for the " name " column . 
 CatRealmProxy . CatColumnInfo catColumnInfo 
 - = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnIndices ( ) . getColumnInfo ( Cat . class ) ; 
 + = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnInfo ( Cat . class ) ; 
 final long nameIndex = catColumnInfo . nameIndex ; 
 
 / / Change the index of the column " name " . 
 @ @ - 3717 , 7 + 3717 , 7 @ @ public class RealmTests { 
 assertNotEquals ( nameIndex , nameIndexNew ) ; 
 
 / / Verify that the index in the ColumnInfo has been updated . 
 - catColumnInfo = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnIndices ( ) . getColumnInfo ( Cat . class ) ; 
 + catColumnInfo = ( CatRealmProxy . CatColumnInfo ) realm . schema . getColumnInfo ( Cat . class ) ; 
 assertEquals ( nameIndexNew . get ( ) , catColumnInfo . nameIndex ) ; 
 assertEquals ( nameIndexNew . get ( ) , ( long ) catColumnInfo . getIndicesMap ( ) . get ( Cat . FIELD _ NAME ) ) ; 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 06302c0 . . 4d87013 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 293 , 7 + 293 , 7 @ @ public class Realm extends BaseRealm { 
 
 if ( columnIndices ! = null ) { 
 / / Copies global cache as a Realm local indices cache . 
 - realm . schema . setColumnIndices ( columnIndices ) ; 
 + realm . schema . setInitialColumnIndices ( columnIndices ) ; 
 } else { 
 final boolean syncingConfig = configuration . isSyncConfiguration ( ) ; 
 
 @ @ - 359 , 7 + 359 , 7 @ @ public class Realm extends BaseRealm { 
 columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; 
 } 
 
 - realm . getSchema ( ) . setColumnIndices ( 
 + realm . getSchema ( ) . setInitialColumnIndices ( 
 ( unversioned ) ? configuration . getSchemaVersion ( ) : currentVersion , 
 columnInfoMap ) ; 
 
 @ @ - 425 , 7 + 425 , 7 @ @ public class Realm extends BaseRealm { 
 columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; 
 } 
 
 - realm . getSchema ( ) . setColumnIndices ( 
 + realm . getSchema ( ) . setInitialColumnIndices ( 
 ( unversioned ) ? newVersion : currentVersion , 
 columnInfoMap ) ; 
 
 @ @ - 1690 , 7 + 1690 , 7 @ @ public class Realm extends BaseRealm { 
 
 cacheForCurrentVersion = createdGlobalCache = new ColumnIndices ( currentSchemaVersion , map ) ; 
 } 
 - schema . setColumnIndices ( cacheForCurrentVersion , mediator ) ; 
 + schema . updateColumnIndices ( cacheForCurrentVersion , mediator ) ; 
 return createdGlobalCache ; 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 index 27a63ac . . b4cab8a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 @ @ - 164 , 7 + 164 , 7 @ @ final class RealmCache { 
 if ( realmClass = = Realm . class & & refAndCount . globalCount = = 0 ) { 
 final BaseRealm realm = refAndCount . localRealm . get ( ) ; 
 / / Stores a copy of local ColumnIndices as a global cache . 
 - RealmCache . storeColumnIndices ( cache . typedColumnIndicesArray , realm . schema . getColumnIndices ( ) ) ; 
 + RealmCache . storeColumnIndices ( cache . typedColumnIndicesArray , realm . schema . cloneColumnIndices ( ) ) ; 
 } 
 / / This is the first instance in current thread , increase the global count . 
 refAndCount . globalCount + + ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmSchema . java b / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 index e7a42bb . . ea53642 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 @ @ - 89 , 19 + 89 , 35 @ @ public abstract class RealmSchema { 
 * / 
 public abstract boolean contains ( String className ) ; 
 
 - final void setColumnIndices ( ColumnIndices columnIndices ) { 
 + final void setInitialColumnIndices ( ColumnIndices columnIndices ) { 
 + if ( this . columnIndices ! = null ) { 
 + throw new IllegalStateException ( " An instance of ColumnIndices is already set . " ) ; 
 + } 
 this . columnIndices = columnIndices . clone ( ) ; 
 } 
 
 - final void setColumnIndices ( long version , Map < Class < ? extends RealmModel > , ColumnInfo > columnInfoMap ) { 
 + final void setInitialColumnIndices ( long version , Map < Class < ? extends RealmModel > , ColumnInfo > columnInfoMap ) { 
 + if ( this . columnIndices ! = null ) { 
 + throw new IllegalStateException ( " An instance of ColumnIndices is already set . " ) ; 
 + } 
 columnIndices = new ColumnIndices ( version , columnInfoMap ) ; 
 } 
 
 - void setColumnIndices ( ColumnIndices cacheForCurrentVersion , RealmProxyMediator mediator ) { 
 - columnIndices . copyFrom ( cacheForCurrentVersion , mediator ) ; 
 + / * * 
 + * Updates all { @ link ColumnInfo } elements in { @ code columnIndices } . 
 + * 
 + * < p > 
 + * The ColumnInfo elements are shared between all { @ link RealmObject } s created by the Realm instance 
 + * which owns this RealmSchema . Updating them also means updating indices information in those { @ link RealmObject } s . 
 + * 
 + * @ param schemaVersion new schema version . 
 + * @ param mediator mediator for the Realm . 
 + * / 
 + void updateColumnIndices ( ColumnIndices schemaVersion , RealmProxyMediator mediator ) { 
 + columnIndices . copyFrom ( schemaVersion , mediator ) ; 
 } 
 
 - final ColumnIndices getColumnIndices ( ) { 
 + final ColumnIndices cloneColumnIndices ( ) { 
 checkIndices ( ) ; 
 return columnIndices . clone ( ) ; 
 }

NEAREST DIFF:
diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy 
 index db7909a . . 5953849 100644 
 - - - a / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy 
 + + + b / realm - transformer / src / main / groovy / io / realm / transformer / BytecodeModifier . groovy 
 @ @ - 117 , 4 + 117 , 19 @ @ class BytecodeModifier { 
 } 
 } 
 } 
 + 
 + / * * 
 + * Adds a method to indicate that Realm transformer has been applied . 
 + * 
 + * @ param clazz The CtClass to modify . 
 + * / 
 + public static void overrideTransformedMarker ( CtClass clazz ) { 
 + logger . info " Realm : Marking as transformed $ { clazz . simpleName } " 
 + try { 
 + clazz . getDeclaredMethod ( " transformerApplied " , new CtClass [ 0 ] ) 
 + } catch ( NotFoundException ignored ) { 
 + clazz . addMethod ( CtNewMethod . make ( Modifier . PUBLIC , CtClass . booleanType , " transformerApplied " , 
 + new CtClass [ 0 ] , new CtClass [ 0 ] , " { return true ; } " , clazz ) ) 
 + } 
 + } 
 } 
 diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy 
 index 2ba0216 . . 804523a 100644 
 - - - a / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy 
 + + + b / realm - transformer / src / main / groovy / io / realm / transformer / RealmTransformer . groovy 
 @ @ - 28 , 6 + 28 , 7 @ @ import org . slf4j . LoggerFactory 
 
 import java . lang . reflect . Modifier 
 import java . util . jar . JarFile 
 + import java . util . regex . Pattern 
 
 import static com . android . build . api . transform . QualifiedContent . * 
 / * * 
 @ @ - 78 , 6 + 79 , 18 @ @ class RealmTransformer extends Transform { 
 
 logger . info " ClassPool contains Realm classes : $ { classPool . getOrNull ( ' io . realm . RealmList ' ) ! = null } " 
 
 + / / mark as transformed 
 + def baseProxyMediator = classPool . get ( ' io . realm . internal . RealmProxyMediator ' ) 
 + def mediatorPattern = Pattern . compile ( ' ^ io \ \ . realm \ \ . [ ^ . ] + Mediator $ ' ) 
 + def proxyMediatorClasses = classNames 
 + . findAll { it . matches ( mediatorPattern ) } 
 + . collect { classPool . getCtClass ( it ) } 
 + . findAll { it . superclass ? . equals ( baseProxyMediator ) } 
 + logger . info " Proxy Mediator Classes : $ { proxyMediatorClasses * . name } " 
 + proxyMediatorClasses . each { 
 + BytecodeModifier . overrideTransformedMarker ( it ) ; 
 + } 
 + 
 / / Find the model classes 
 def realmObject = classPool . get ( ' io . realm . RealmObject ' ) 
 def modelClasses = classNames 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java b / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java 
 index 8cf5a09 . . 5bc28ca 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / MediatorTest . java 
 @ @ - 82 , 4 + 82 , 9 @ @ public class MediatorTest extends AndroidTestCase { 
 assertFalse ( mediator . getModelClasses ( ) . contains ( Dog . class ) ) ; 
 assertFalse ( mediator . getModelClasses ( ) . contains ( AllTypes . class ) ) ; 
 } 
 + 
 + public void testDefaultMediatorWasTransformed ( ) { 
 + final DefaultRealmModuleMediator defaultMediator = new DefaultRealmModuleMediator ( ) ; 
 + assertTrue ( defaultMediator . transformerApplied ( ) ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 index 38f4672 . . 03e237a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 65 , 7 + 65 , 13 @ @ public class RealmConfiguration { 
 static { 
 DEFAULT _ MODULE = Realm . getDefaultModule ( ) ; 
 if ( DEFAULT _ MODULE ! = null ) { 
 - DEFAULT _ MODULE _ MEDIATOR = getModuleMediator ( DEFAULT _ MODULE . getClass ( ) . getCanonicalName ( ) ) ; 
 + final RealmProxyMediator mediator = getModuleMediator ( DEFAULT _ MODULE . getClass ( ) . getCanonicalName ( ) ) ; 
 + if ( ! mediator . transformerApplied ( ) ) { 
 + throw new ExceptionInInitializerError ( " RealmTransformer doesn ' t seem to be applied . " + 
 + " Please update the project configuration to use the Realm Gradle plugin . " + 
 + " See https : / / realm . io / news / android - installation - change / " ) ; 
 + } 
 + DEFAULT _ MODULE _ MEDIATOR = mediator ; 
 } else { 
 DEFAULT _ MODULE _ MEDIATOR = null ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java 
 index 893ceef . . 636d45e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java 
 @ @ - 138 , 6 + 138 , 17 @ @ public abstract class RealmProxyMediator { 
 * / 
 public abstract < E extends RealmObject > E createDetachedCopy ( E realmObject , int maxDepth , Map < RealmObject , RealmObjectProxy . CacheData < RealmObject > > cache ) ; 
 
 + / * * 
 + * Returns whether Realm transformer has been applied or not . Subclasses of this class are 
 + * created by the annotation processor and the Realm transformer will add an override of 
 + * this method that always return { @ code true } if the transform was successful . 
 + * 
 + * @ return { @ code true } if Realm transformer was applied , { @ code false } otherwise . 
 + * / 
 + public boolean transformerApplied ( ) { 
 + return false ; 
 + } 
 + 
 @ Override 
 public boolean equals ( Object o ) { 
 if ( ! ( o instanceof RealmProxyMediator ) ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java 
 index c5e7284 . . 1c66547 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java 
 @ @ - 115 , 6 + 115 , 16 @ @ public class CompositeMediator extends RealmProxyMediator { 
 return mediator . createDetachedCopy ( realmObject , maxDepth , cache ) ; 
 } 
 
 + @ Override 
 + public boolean transformerApplied ( ) { 
 + for ( Map . Entry < Class < ? extends RealmObject > , RealmProxyMediator > entry : mediators . entrySet ( ) ) { 
 + if ( ! entry . getValue ( ) . transformerApplied ( ) ) { 
 + return false ; 
 + } 
 + } 
 + return true ; 
 + } 
 + 
 / / Returns the mediator for a given model class ( not RealmProxy ) or throws exception 
 private RealmProxyMediator getMediator ( Class < ? extends RealmObject > clazz ) { 
 RealmProxyMediator mediator = mediators . get ( clazz ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java 
 index 369b1c3 . . c200323 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java 
 @ @ - 131 , 6 + 131 , 15 @ @ public class FilterableMediator extends RealmProxyMediator { 
 return originalMediator . createDetachedCopy ( realmObject , maxDepth , cache ) ; 
 } 
 
 + @ Override 
 + public boolean transformerApplied ( ) { 
 + / / noinspection SimplifiableIfStatement 
 + if ( originalMediator = = null ) { 
 + return true ; 
 + } 
 + return originalMediator . transformerApplied ( ) ; 
 + } 
 + 
 / / Validate if a model class ( not RealmProxy ) is part of this Schema . 
 private void checkSchemaHasClass ( Class < ? extends RealmObject > clazz ) { 
 if ( ! allowedClasses . contains ( clazz ) ) {
