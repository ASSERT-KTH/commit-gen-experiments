BLEU SCORE: 0.04266709328925954

TEST MSG: Update json example
GENERATED MSG: Updated to fix the GSON failure from TypeReferencing

TEST DIFF (one line): diff - - git a / examples / jsonExample / build . gradle b / examples / jsonExample / build . gradle <nl> index 8f9242e . . f8c3917 100644 <nl> - - - a / examples / jsonExample / build . gradle <nl> + + + b / examples / jsonExample / build . gradle <nl> @ @ - 5 , 6 + 5 , 10 @ @ android { <nl> compileSdkVersion rootProject . sdkVersion <nl> buildToolsVersion rootProject . buildTools <nl> <nl> + compileOptions { <nl> + sourceCompatibility JavaVersion . VERSION _ 1 _ 8 <nl> + targetCompatibility JavaVersion . VERSION _ 1 _ 8 <nl> + } <nl> defaultConfig { <nl> applicationId ' io . realm . examples . json ' <nl> targetSdkVersion rootProject . sdkVersion <nl> @ @ - 27 , 6 + 31 , 7 @ @ android { <nl> } <nl> <nl> dependencies { <nl> - compileOnly ' org . projectlombok : lombok : 1 . 16 . 6 ' <nl> - annotationProcessor ' org . projectlombok : lombok : 1 . 16 . 6 ' <nl> + compileOnly ' org . projectlombok : lombok : 1 . 16 . 18 ' <nl> + compileOnly ' javax . annotation : javax . annotation - api : 1 . 3 . 1 ' <nl> + annotationProcessor ' org . projectlombok : lombok : 1 . 16 . 18 ' <nl> } <nl> diff - - git a / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java b / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java <nl> index 73dbc27 . . 891d861 100644 <nl> - - - a / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java <nl> + + + b / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * <nl> - * Copyright 2014 Realm Inc . <nl> + * Copyright 2018 Realm Inc . <nl> * <nl> * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> * you may not use this file except in compliance with the License . <nl> @ @ - 16 , 50 + 16 , 37 @ @ <nl> <nl> package io . realm . examples . json ; <nl> <nl> - import android . content . Context ; <nl> import android . view . LayoutInflater ; <nl> import android . view . View ; <nl> import android . view . ViewGroup ; <nl> import android . widget . BaseAdapter ; <nl> import android . widget . TextView ; <nl> <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> / / This adapter is strictly to interface with the GridView and doesn ' t <nl> / / particular show much interesting Realm functionality . <nl> - <nl> - / / Alternatively from this example , <nl> - / / a developer could update the getView ( ) to pull items from the Realm . <nl> - <nl> public class CityAdapter extends BaseAdapter { <nl> + public static final String TAG = " CityAdapter " ; <nl> <nl> - public static final String TAG = JsonExampleActivity . class . getName ( ) ; <nl> - <nl> - private LayoutInflater inflater ; <nl> - <nl> - private List < City > cities = null ; <nl> + private List < City > cities = Collections . emptyList ( ) ; <nl> <nl> - public CityAdapter ( Context context ) { <nl> - inflater = ( LayoutInflater ) context . getSystemService ( Context . LAYOUT _ INFLATER _ SERVICE ) ; <nl> + public CityAdapter ( ) { <nl> } <nl> <nl> public void setData ( List < City > details ) { <nl> this . cities = details ; <nl> + notifyDataSetChanged ( ) ; <nl> } <nl> <nl> @ Override <nl> public int getCount ( ) { <nl> - if ( cities = = null ) { <nl> - return 0 ; <nl> - } <nl> - return cities . size ( ) ; <nl> + return cities = = null ? 0 : cities . size ( ) ; <nl> } <nl> <nl> @ Override <nl> - public Object getItem ( int position ) { <nl> - if ( cities = = null | | cities . get ( position ) = = null ) { <nl> - return null ; <nl> - } <nl> + public City getItem ( int position ) { <nl> return cities . get ( position ) ; <nl> } <nl> <nl> @ @ - 68 , 18 + 55 , 36 @ @ public class CityAdapter extends BaseAdapter { <nl> return i ; <nl> } <nl> <nl> + private static class ViewHolder { <nl> + private TextView name ; <nl> + private TextView votes ; <nl> + <nl> + public ViewHolder ( View view ) { <nl> + this . name = view . findViewById ( R . id . name ) ; <nl> + this . votes = view . findViewById ( R . id . votes ) ; <nl> + } <nl> + <nl> + public void bind ( City city ) { <nl> + name . setText ( city . getName ( ) ) ; <nl> + votes . setText ( String . valueOf ( city . getVotes ( ) ) ) ; <nl> + } <nl> + } <nl> + <nl> @ Override <nl> public View getView ( int position , View currentView , ViewGroup parent ) { <nl> + LayoutInflater inflater = LayoutInflater . from ( parent . getContext ( ) ) ; <nl> + ViewHolder viewHolder ; <nl> + <nl> if ( currentView = = null ) { <nl> currentView = inflater . inflate ( R . layout . city _ listitem , parent , false ) ; <nl> + viewHolder = new ViewHolder ( currentView ) ; <nl> + currentView . setTag ( viewHolder ) ; <nl> + } else { <nl> + viewHolder = ( ViewHolder ) currentView . getTag ( ) ; <nl> } <nl> <nl> City city = cities . get ( position ) ; <nl> - <nl> - if ( city ! = null ) { <nl> - ( ( TextView ) currentView . findViewById ( R . id . name ) ) . setText ( city . getName ( ) ) ; <nl> - ( ( TextView ) currentView . findViewById ( R . id . votes ) ) . setText ( String . valueOf ( city . getVotes ( ) ) ) ; <nl> - } <nl> + viewHolder . bind ( city ) ; <nl> <nl> return currentView ; <nl> } <nl> diff - - git a / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java b / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java <nl> index 1e00b55 . . 2910fd7 100644 <nl> - - - a / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java <nl> + + + b / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * <nl> - * Copyright 2014 Realm Inc . <nl> + * Copyright 2018 Realm Inc . <nl> * <nl> * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> * you may not use this file except in compliance with the License . <nl> @ @ - 25 , 11 + 25 , 11 @ @ import org . json . JSONObject ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . util . HashMap ; <nl> - import java . util . List ; <nl> import java . util . Map ; <nl> <nl> import io . realm . Realm ; <nl> - import io . realm . RealmConfiguration ; <nl> + import io . realm . RealmChangeListener ; <nl> + import io . realm . RealmResults ; <nl> <nl> / * * <nl> * This example demonstrates how to import RealmObjects as JSON . Realm supports JSON represented <nl> @ @ - 37 , 76 + 37 , 69 @ @ import io . realm . RealmConfiguration ; <nl> * / <nl> public class JsonExampleActivity extends Activity { <nl> <nl> - private GridView mGridView ; <nl> - private CityAdapter mAdapter ; <nl> + private GridView gridView ; <nl> + private CityAdapter adapter ; <nl> + <nl> private Realm realm ; <nl> + private RealmResults < City > cities ; <nl> + private RealmChangeListener < RealmResults < City > > realmChangeListener = ( cities ) - > { <nl> + adapter . setData ( cities ) ; <nl> + } ; <nl> <nl> @ Override <nl> protected void onCreate ( Bundle savedInstanceState ) { <nl> super . onCreate ( savedInstanceState ) ; <nl> setContentView ( R . layout . activity _ realm _ example ) ; <nl> <nl> - RealmConfiguration realmConfiguration = new RealmConfiguration . Builder ( ) . build ( ) ; <nl> - Realm . deleteRealm ( realmConfiguration ) ; <nl> - realm = Realm . getInstance ( realmConfiguration ) ; <nl> - } <nl> + Realm . deleteRealm ( Realm . getDefaultConfiguration ( ) ) ; <nl> <nl> - @ Override <nl> - public void onResume ( ) { <nl> - super . onResume ( ) ; <nl> + realm = Realm . getDefaultInstance ( ) ; <nl> <nl> - / / Load from file " cities . json " first time <nl> - if ( mAdapter = = null ) { <nl> - List < City > cities = null ; <nl> - try { <nl> - cities = loadCities ( ) ; <nl> - } catch ( IOException e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> + gridView = findViewById ( R . id . cities _ list ) ; <nl> <nl> - / / This is the GridView adapter <nl> - mAdapter = new CityAdapter ( this ) ; <nl> - mAdapter . setData ( cities ) ; <nl> + cities = realm . where ( City . class ) . findAllAsync ( ) ; <nl> + cities . addChangeListener ( realmChangeListener ) ; <nl> <nl> - / / This is the GridView which will display the list of cities <nl> - mGridView = ( GridView ) findViewById ( R . id . cities _ list ) ; <nl> - mGridView . setAdapter ( mAdapter ) ; <nl> - mAdapter . notifyDataSetChanged ( ) ; <nl> - mGridView . invalidate ( ) ; <nl> - } <nl> + adapter = new CityAdapter ( ) ; <nl> + gridView . setAdapter ( adapter ) ; <nl> + <nl> + / / Load from file " cities . json " first time <nl> + loadCities ( ) ; <nl> } <nl> <nl> + <nl> @ Override <nl> protected void onDestroy ( ) { <nl> super . onDestroy ( ) ; <nl> + cities . removeAllChangeListeners ( ) ; <nl> realm . close ( ) ; <nl> } <nl> <nl> - public List < City > loadCities ( ) throws IOException { <nl> - <nl> - loadJsonFromStream ( ) ; <nl> - loadJsonFromJsonObject ( ) ; <nl> - loadJsonFromString ( ) ; <nl> - <nl> - return realm . where ( City . class ) . findAll ( ) ; <nl> + public void loadCities ( ) { <nl> + try { <nl> + loadJsonFromStream ( ) ; <nl> + loadJsonFromJsonObject ( ) ; <nl> + loadJsonFromString ( ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> } <nl> <nl> private void loadJsonFromStream ( ) throws IOException { <nl> / / Use streams if you are worried about the size of the JSON whether it was persisted on disk <nl> / / or received from the network . <nl> - InputStream stream = getAssets ( ) . open ( " cities . json " ) ; <nl> - <nl> - / / Open a transaction to store items into the realm <nl> - realm . beginTransaction ( ) ; <nl> - try { <nl> - realm . createAllFromJson ( City . class , stream ) ; <nl> - realm . commitTransaction ( ) ; <nl> - } catch ( IOException e ) { <nl> - / / Remember to cancel the transaction if anything goes wrong . <nl> - realm . cancelTransaction ( ) ; <nl> - } finally { <nl> - if ( stream ! = null ) { <nl> - stream . close ( ) ; <nl> + try ( InputStream stream = getAssets ( ) . open ( " cities . json " ) ) { <nl> + try { <nl> + / / Open a transaction to store items into the realm <nl> + realm . beginTransaction ( ) ; <nl> + realm . createAllFromJson ( City . class , stream ) ; <nl> + realm . commitTransaction ( ) ; <nl> + } catch ( IOException e ) { <nl> + / / Remember to cancel the transaction if anything goes wrong . <nl> + if ( realm . isInTransaction ( ) ) { <nl> + realm . cancelTransaction ( ) ; <nl> + } <nl> + throw new RuntimeException ( e ) ; <nl> } <nl> } <nl> } <nl> @ @ - 117 , 22 + 110 , 12 @ @ public class JsonExampleActivity extends Activity { <nl> city . put ( " votes " , " 9 " ) ; <nl> final JSONObject json = new JSONObject ( city ) ; <nl> <nl> - realm . executeTransaction ( new Realm . Transaction ( ) { <nl> - @ Override <nl> - public void execute ( Realm realm ) { <nl> - realm . createObjectFromJson ( City . class , json ) ; <nl> - } <nl> - } ) ; <nl> + realm . executeTransaction ( realm - > realm . createObjectFromJson ( City . class , json ) ) ; <nl> } <nl> <nl> private void loadJsonFromString ( ) { <nl> final String json = " { name : \ " Aarhus \ " , votes : 99 } " ; <nl> <nl> - realm . executeTransaction ( new Realm . Transaction ( ) { <nl> - @ Override <nl> - public void execute ( Realm realm ) { <nl> - realm . createObjectFromJson ( City . class , json ) ; <nl> - } <nl> - } ) ; <nl> + realm . executeTransaction ( realm - > realm . createObjectFromJson ( City . class , json ) ) ; <nl> } <nl> } <nl> diff - - git a / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml b / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml <nl> index c0934ad . . 598cebc 100644 <nl> - - - a / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml <nl> + + + b / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml <nl> @ @ - 3 , 23 + 3 , 23 @ @ <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " match _ parent " <nl> android : orientation = " vertical " <nl> - android : paddingBottom = " @ dimen / activity _ vertical _ margin " <nl> android : paddingLeft = " @ dimen / activity _ horizontal _ margin " <nl> android : paddingRight = " @ dimen / activity _ horizontal _ margin " <nl> - android : paddingTop = " @ dimen / activity _ vertical _ margin " <nl> tools : context = " . JsonExampleActivity " > <nl> <nl> < TextView <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " wrap _ content " <nl> android : gravity = " center _ horizontal " <nl> + android : paddingBottom = " @ dimen / activity _ vertical _ margin " <nl> + android : paddingTop = " @ dimen / activity _ vertical _ margin " <nl> android : text = " @ string / label " <nl> android : textSize = " 18sp " / > <nl> <nl> < GridView <nl> android : id = " @ + id / cities _ list " <nl> - android : listSelector = " @ android : color / transparent " <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " wrap _ content " <nl> + android : listSelector = " @ android : color / transparent " <nl> android : numColumns = " 2 " / > <nl> < / LinearLayout >
NEAREST DIFF (one line): diff - - git a / examples / gridViewExample / src / main / AndroidManifest . xml b / examples / gridViewExample / src / main / AndroidManifest . xml <nl> index 8283363 . . 8530d12 100644 <nl> - - - a / examples / gridViewExample / src / main / AndroidManifest . xml <nl> + + + b / examples / gridViewExample / src / main / AndroidManifest . xml <nl> @ @ - 9 , 10 + 9 , 10 @ @ <nl> android : theme = " @ style / AppTheme " > <nl> < activity <nl> android : name = " io . realm . examples . realmgridview . RealmExampleActivity " <nl> + android : configChanges = " keyboard | screenSize | orientation " <nl> android : label = " @ string / app _ name " > <nl> < intent - filter > <nl> < action android : name = " android . intent . action . MAIN " / > <nl> - <nl> < category android : name = " android . intent . category . LAUNCHER " / > <nl> < / intent - filter > <nl> < / activity > <nl> diff - - git a / examples / gridViewExample / src / main / assets / cities . json b / examples / gridViewExample / src / main / assets / cities . json <nl> index 635dec8 . . 8dbbb49 100644 <nl> - - - a / examples / gridViewExample / src / main / assets / cities . json <nl> + + + b / examples / gridViewExample / src / main / assets / cities . json <nl> @ @ - 24 , 5 + 24 , 44 @ @ <nl> " votes " : 11 } , <nl> <nl> { " name " : " Krakow " , <nl> + " votes " : 9 } , <nl> + <nl> + { " name " : " Peoria " , <nl> + " votes " : 72 } , <nl> + <nl> + { " name " : " Springfield " , <nl> + " votes " : 88 } , <nl> + <nl> + { " name " : " Kansas City " , <nl> + " votes " : 100 } , <nl> + <nl> + { " name " : " Tokyo " , <nl> + " votes " : 20 } , <nl> + <nl> + { " name " : " Boise " , <nl> + " votes " : 17 } , <nl> + <nl> + { " name " : " Los Angeles " , <nl> + " votes " : 14 } , <nl> + <nl> + { " name " : " Newark " , <nl> + " votes " : 12 } , <nl> + <nl> + { " name " : " Chicago " , <nl> + " votes " : 11 } , <nl> + <nl> + { " name " : " Detroit " , <nl> + " votes " : 91 } , <nl> + <nl> + { " name " : " Florence " , <nl> + " votes " : 4 } , <nl> + <nl> + { " name " : " Venice " , <nl> + " votes " : 2 } , <nl> + <nl> + { " name " : " Madrid " , <nl> + " votes " : 1 } , <nl> + <nl> + { " name " : " London " , <nl> " votes " : 9 } <nl> ] <nl> \ No newline at end of file <nl> diff - - git a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java <nl> index 2bb0030 . . b9130f8 100644 <nl> - - - a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java <nl> + + + b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java <nl> @ @ - 38 , 4 + 38 , 12 @ @ public class City extends RealmObject { <nl> public void setVotes ( long votes ) { <nl> this . votes = votes ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return " City { " + <nl> + " name = ' " + name + ' \ ' ' + <nl> + " , votes = " + votes + <nl> + ' } ' ; <nl> + } <nl> } <nl> diff - - git a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / CityLoader . java b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / CityLoader . java <nl> deleted file mode 100644 <nl> index 80b3856 . . 0000000 <nl> - - - a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / CityLoader . java <nl> + + + / dev / null <nl> @ @ - 1 , 111 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2014 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . examples . realmgridview ; <nl> - <nl> - import android . content . AsyncTaskLoader ; <nl> - import android . content . Context ; <nl> - import android . os . Bundle ; <nl> - import android . util . Log ; <nl> - <nl> - import com . google . gson . Gson ; <nl> - import com . google . gson . reflect . TypeToken ; <nl> - <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . io . InputStreamReader ; <nl> - import java . util . List ; <nl> - <nl> - import io . realm . Realm ; <nl> - <nl> - public class CityLoader extends AsyncTaskLoader < List < City > > { <nl> - <nl> - public static final String TAG = CityLoader . class . getName ( ) ; <nl> - <nl> - private Context context = null ; <nl> - private Bundle args = null ; <nl> - <nl> - / / Added this field to make Loaders work under support package . <nl> - private boolean dataIsReady = false ; <nl> - <nl> - public CityLoader ( final Context context , Bundle bundle ) { <nl> - super ( context ) ; <nl> - <nl> - this . context = context ; <nl> - this . args = bundle ; <nl> - } <nl> - <nl> - / / Added this method to make loaders from support package work <nl> - @ Override <nl> - public void onStartLoading ( ) { <nl> - if ( dataIsReady ) { <nl> - deliverResult ( null ) ; <nl> - } else { <nl> - forceLoad ( ) ; <nl> - } <nl> - } <nl> - <nl> - @ Override <nl> - public List < City > loadInBackground ( ) throws RuntimeException { <nl> - List < City > items = loadCities ( ) ; <nl> - <nl> - if ( items = = null ) { <nl> - Log . e ( TAG , " No cities found " ) ; <nl> - return null ; <nl> - } <nl> - <nl> - dataIsReady = true ; <nl> - <nl> - / / Delete previous database in case it ' s there from a previous run . <nl> - Realm . deleteRealmFile ( context ) ; <nl> - <nl> - / / Store the retrieved items to the Realm <nl> - Realm realm = Realm . getInstance ( context ) ; <nl> - <nl> - realm . beginTransaction ( ) ; <nl> - for ( City city : items ) { <nl> - City realmCity = realm . createObject ( City . class ) ; <nl> - realmCity . setName ( city . getName ( ) ) ; <nl> - realmCity . setVotes ( city . getVotes ( ) ) ; <nl> - } <nl> - realm . commitTransaction ( ) ; <nl> - <nl> - return items ; <nl> - } <nl> - <nl> - public Gson getGson ( ) { <nl> - return new Gson ( ) ; <nl> - } <nl> - <nl> - public List < City > loadCities ( ) { <nl> - List < City > items = null ; <nl> - <nl> - / / In this case we ' re loading from local assets . <nl> - / / NOTE : could alternatively easily load from network <nl> - <nl> - try { <nl> - InputStream stream = null ; <nl> - stream = context . getAssets ( ) . open ( " cities . json " ) ; <nl> - items = getGson ( ) . fromJson ( new InputStreamReader ( stream ) , new TypeToken < List < City > > ( ) { <nl> - } . getType ( ) ) ; <nl> - } catch ( IOException ioe ) { <nl> - ioe . printStackTrace ( ) ; <nl> - Log . e ( TAG , " Could not load cities information " ) ; <nl> - } <nl> - <nl> - return items ; <nl> - } <nl> - } <nl> diff - - git a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java <nl> index 3da6084 . . d69bd8c 100644 <nl> - - - a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java <nl> + + + b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java <nl> @ @ - 17 , 23 + 17 , 24 @ @ <nl> package io . realm . examples . realmgridview ; <nl> <nl> import android . app . Activity ; <nl> - import android . app . LoaderManager ; <nl> - import android . content . Loader ; <nl> import android . os . Bundle ; <nl> - import android . util . Log ; <nl> - import android . view . Menu ; <nl> - import android . view . MenuItem ; <nl> import android . view . View ; <nl> import android . widget . AdapterView ; <nl> import android . widget . GridView ; <nl> <nl> + import com . google . gson . JsonArray ; <nl> + import com . google . gson . JsonElement ; <nl> + import com . google . gson . JsonParser ; <nl> + <nl> + import java . io . InputStream ; <nl> + import java . io . InputStreamReader ; <nl> + import java . util . ArrayList ; <nl> import java . util . List ; <nl> <nl> import io . realm . Realm ; <nl> - import io . realm . RealmQuery ; <nl> import io . realm . RealmResults ; <nl> <nl> - public class RealmExampleActivity extends Activity implements LoaderManager . LoaderCallbacks < List < City > > , AdapterView . OnItemClickListener { <nl> + public class RealmExampleActivity extends Activity implements AdapterView . OnItemClickListener { <nl> <nl> public static final String TAG = RealmExampleActivity . class . getName ( ) ; <nl> <nl> @ @ - 49 , 80 + 50 , 69 @ @ public class RealmExampleActivity extends Activity implements LoaderManager . Load <nl> @ Override <nl> public void onResume ( ) { <nl> super . onResume ( ) ; <nl> - if ( mAdapter = = null ) { <nl> - getLoaderManager ( ) . restartLoader ( 0 , null , this ) ; <nl> - } <nl> - } <nl> <nl> - / * * <nl> - * Loader Callback Methods * * <nl> - * / <nl> - <nl> - @ Override <nl> - public Loader < List < City > > onCreateLoader ( int id , Bundle args ) { <nl> - return new CityLoader ( this , null ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void onLoadFinished ( Loader < List < City > > loader , List < City > response ) { <nl> - if ( response = = null ) { <nl> - Log . e ( TAG , " Loader did not acquire any useful information " ) ; <nl> - } else { <nl> + if ( mAdapter = = null ) { <nl> + List < City > cities = loadCities ( ) ; <nl> mAdapter = new CityAdapter ( this ) ; <nl> + mAdapter . setData ( cities ) ; <nl> + <nl> mGrid = ( GridView ) findViewById ( R . id . cities _ list ) ; <nl> mGrid . setAdapter ( mAdapter ) ; <nl> mGrid . setOnItemClickListener ( RealmExampleActivity . this ) ; <nl> - <nl> - / / Pull the acquired JSON information from the Realm <nl> - updateCities ( ) ; <nl> + mAdapter . notifyDataSetChanged ( ) ; <nl> + mGrid . invalidate ( ) ; <nl> } <nl> } <nl> <nl> - public void updateCities ( ) { <nl> - Realm realm = Realm . getInstance ( this ) ; <nl> - RealmResults < City > cities = realm . where ( City . class ) . findAll ( ) ; <nl> - mAdapter . setData ( cities ) ; <nl> - <nl> - mAdapter . notifyDataSetChanged ( ) ; <nl> - } <nl> + public List < City > loadCities ( ) { <nl> + List < City > items = new ArrayList < City > ( ) ; <nl> <nl> - @ Override <nl> - public void onLoaderReset ( Loader < List < City > > loader ) { <nl> + / / In this case we ' re loading from local assets . <nl> + / / NOTE : could alternatively easily load from network <nl> + InputStream stream = null ; <nl> + try { <nl> + stream = getAssets ( ) . open ( " cities . json " ) ; <nl> + } catch ( Exception e ) { <nl> + return null ; <nl> + } <nl> <nl> - } <nl> + JsonParser parser = new JsonParser ( ) ; <nl> + JsonArray array = parser . parse ( new InputStreamReader ( stream ) ) . getAsJsonArray ( ) ; <nl> <nl> - / * * <nl> - * Options Menu * * <nl> - * / <nl> + / / Clear the realm from last time <nl> + Realm . deleteRealmFile ( this ) ; <nl> <nl> - @ Override <nl> - public boolean onCreateOptionsMenu ( Menu menu ) { <nl> - getMenuInflater ( ) . inflate ( R . menu . options _ menu , menu ) ; <nl> - return true ; <nl> - } <nl> + / / Store the retrieved items to the Realm <nl> + Realm realm = Realm . getInstance ( this ) ; <nl> <nl> - @ Override <nl> - public boolean onOptionsItemSelected ( MenuItem item ) { <nl> - int id = item . getItemId ( ) ; <nl> - if ( id = = R . id . action _ reload ) { <nl> - getLoaderManager ( ) . restartLoader ( 0 , null , this ) ; <nl> - return true ; <nl> + realm . beginTransaction ( ) ; <nl> + for ( JsonElement e : array ) { <nl> + City realmCity = realm . createObject ( City . class ) ; <nl> + realmCity . setName ( e . getAsJsonObject ( ) . get ( " name " ) . getAsString ( ) ) ; <nl> + realmCity . setVotes ( e . getAsJsonObject ( ) . get ( " votes " ) . getAsInt ( ) ) ; <nl> + items . add ( realmCity ) ; <nl> } <nl> - return super . onOptionsItemSelected ( item ) ; <nl> + realm . commitTransaction ( ) ; <nl> + <nl> + return items ; <nl> } <nl> <nl> - / * * <nl> - * Listeners * * <nl> - * / <nl> + public void updateCities ( ) { <nl> + Realm realm = Realm . getInstance ( this ) ; <nl> + RealmResults < City > cities = realm . where ( City . class ) . findAll ( ) ; <nl> + mAdapter . setData ( cities ) ; <nl> + mAdapter . notifyDataSetChanged ( ) ; <nl> + mGrid . invalidate ( ) ; <nl> + } <nl> <nl> @ Override <nl> public void onItemClick ( AdapterView < ? > parent , View view , int position , long id ) { <nl> - City modifiedCity = ( City ) mAdapter . getItem ( position ) ; <nl> + City modifiedCity = ( City ) mAdapter . getItem ( position ) ; <nl> <nl> / / Update the realm object affected by the user <nl> Realm realm = Realm . getInstance ( this ) ; <nl> - RealmQuery < City > query = realm . where ( City . class ) . beginsWith ( " name " , modifiedCity . getName ( ) ) ; <nl> - City city = query . findFirst ( ) ; <nl> + City city = realm . where ( City . class ) . equalTo ( " name " , modifiedCity . getName ( ) ) . findFirst ( ) ; <nl> + <nl> realm . beginTransaction ( ) ; <nl> city . setVotes ( city . getVotes ( ) + 1 ) ; <nl> realm . commitTransaction ( ) ;

TEST DIFF:
diff - - git a / examples / jsonExample / build . gradle b / examples / jsonExample / build . gradle 
 index 8f9242e . . f8c3917 100644 
 - - - a / examples / jsonExample / build . gradle 
 + + + b / examples / jsonExample / build . gradle 
 @ @ - 5 , 6 + 5 , 10 @ @ android { 
 compileSdkVersion rootProject . sdkVersion 
 buildToolsVersion rootProject . buildTools 
 
 + compileOptions { 
 + sourceCompatibility JavaVersion . VERSION _ 1 _ 8 
 + targetCompatibility JavaVersion . VERSION _ 1 _ 8 
 + } 
 defaultConfig { 
 applicationId ' io . realm . examples . json ' 
 targetSdkVersion rootProject . sdkVersion 
 @ @ - 27 , 6 + 31 , 7 @ @ android { 
 } 
 
 dependencies { 
 - compileOnly ' org . projectlombok : lombok : 1 . 16 . 6 ' 
 - annotationProcessor ' org . projectlombok : lombok : 1 . 16 . 6 ' 
 + compileOnly ' org . projectlombok : lombok : 1 . 16 . 18 ' 
 + compileOnly ' javax . annotation : javax . annotation - api : 1 . 3 . 1 ' 
 + annotationProcessor ' org . projectlombok : lombok : 1 . 16 . 18 ' 
 } 
 diff - - git a / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java b / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java 
 index 73dbc27 . . 891d861 100644 
 - - - a / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java 
 + + + b / examples / jsonExample / src / main / java / io / realm / examples / json / CityAdapter . java 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 / * 
 - * Copyright 2014 Realm Inc . 
 + * Copyright 2018 Realm Inc . 
 * 
 * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 * you may not use this file except in compliance with the License . 
 @ @ - 16 , 50 + 16 , 37 @ @ 
 
 package io . realm . examples . json ; 
 
 - import android . content . Context ; 
 import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 import android . widget . BaseAdapter ; 
 import android . widget . TextView ; 
 
 + import java . util . Collections ; 
 import java . util . List ; 
 
 / / This adapter is strictly to interface with the GridView and doesn ' t 
 / / particular show much interesting Realm functionality . 
 - 
 - / / Alternatively from this example , 
 - / / a developer could update the getView ( ) to pull items from the Realm . 
 - 
 public class CityAdapter extends BaseAdapter { 
 + public static final String TAG = " CityAdapter " ; 
 
 - public static final String TAG = JsonExampleActivity . class . getName ( ) ; 
 - 
 - private LayoutInflater inflater ; 
 - 
 - private List < City > cities = null ; 
 + private List < City > cities = Collections . emptyList ( ) ; 
 
 - public CityAdapter ( Context context ) { 
 - inflater = ( LayoutInflater ) context . getSystemService ( Context . LAYOUT _ INFLATER _ SERVICE ) ; 
 + public CityAdapter ( ) { 
 } 
 
 public void setData ( List < City > details ) { 
 this . cities = details ; 
 + notifyDataSetChanged ( ) ; 
 } 
 
 @ Override 
 public int getCount ( ) { 
 - if ( cities = = null ) { 
 - return 0 ; 
 - } 
 - return cities . size ( ) ; 
 + return cities = = null ? 0 : cities . size ( ) ; 
 } 
 
 @ Override 
 - public Object getItem ( int position ) { 
 - if ( cities = = null | | cities . get ( position ) = = null ) { 
 - return null ; 
 - } 
 + public City getItem ( int position ) { 
 return cities . get ( position ) ; 
 } 
 
 @ @ - 68 , 18 + 55 , 36 @ @ public class CityAdapter extends BaseAdapter { 
 return i ; 
 } 
 
 + private static class ViewHolder { 
 + private TextView name ; 
 + private TextView votes ; 
 + 
 + public ViewHolder ( View view ) { 
 + this . name = view . findViewById ( R . id . name ) ; 
 + this . votes = view . findViewById ( R . id . votes ) ; 
 + } 
 + 
 + public void bind ( City city ) { 
 + name . setText ( city . getName ( ) ) ; 
 + votes . setText ( String . valueOf ( city . getVotes ( ) ) ) ; 
 + } 
 + } 
 + 
 @ Override 
 public View getView ( int position , View currentView , ViewGroup parent ) { 
 + LayoutInflater inflater = LayoutInflater . from ( parent . getContext ( ) ) ; 
 + ViewHolder viewHolder ; 
 + 
 if ( currentView = = null ) { 
 currentView = inflater . inflate ( R . layout . city _ listitem , parent , false ) ; 
 + viewHolder = new ViewHolder ( currentView ) ; 
 + currentView . setTag ( viewHolder ) ; 
 + } else { 
 + viewHolder = ( ViewHolder ) currentView . getTag ( ) ; 
 } 
 
 City city = cities . get ( position ) ; 
 - 
 - if ( city ! = null ) { 
 - ( ( TextView ) currentView . findViewById ( R . id . name ) ) . setText ( city . getName ( ) ) ; 
 - ( ( TextView ) currentView . findViewById ( R . id . votes ) ) . setText ( String . valueOf ( city . getVotes ( ) ) ) ; 
 - } 
 + viewHolder . bind ( city ) ; 
 
 return currentView ; 
 } 
 diff - - git a / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java b / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java 
 index 1e00b55 . . 2910fd7 100644 
 - - - a / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java 
 + + + b / examples / jsonExample / src / main / java / io / realm / examples / json / JsonExampleActivity . java 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 / * 
 - * Copyright 2014 Realm Inc . 
 + * Copyright 2018 Realm Inc . 
 * 
 * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 * you may not use this file except in compliance with the License . 
 @ @ - 25 , 11 + 25 , 11 @ @ import org . json . JSONObject ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 import java . util . HashMap ; 
 - import java . util . List ; 
 import java . util . Map ; 
 
 import io . realm . Realm ; 
 - import io . realm . RealmConfiguration ; 
 + import io . realm . RealmChangeListener ; 
 + import io . realm . RealmResults ; 
 
 / * * 
 * This example demonstrates how to import RealmObjects as JSON . Realm supports JSON represented 
 @ @ - 37 , 76 + 37 , 69 @ @ import io . realm . RealmConfiguration ; 
 * / 
 public class JsonExampleActivity extends Activity { 
 
 - private GridView mGridView ; 
 - private CityAdapter mAdapter ; 
 + private GridView gridView ; 
 + private CityAdapter adapter ; 
 + 
 private Realm realm ; 
 + private RealmResults < City > cities ; 
 + private RealmChangeListener < RealmResults < City > > realmChangeListener = ( cities ) - > { 
 + adapter . setData ( cities ) ; 
 + } ; 
 
 @ Override 
 protected void onCreate ( Bundle savedInstanceState ) { 
 super . onCreate ( savedInstanceState ) ; 
 setContentView ( R . layout . activity _ realm _ example ) ; 
 
 - RealmConfiguration realmConfiguration = new RealmConfiguration . Builder ( ) . build ( ) ; 
 - Realm . deleteRealm ( realmConfiguration ) ; 
 - realm = Realm . getInstance ( realmConfiguration ) ; 
 - } 
 + Realm . deleteRealm ( Realm . getDefaultConfiguration ( ) ) ; 
 
 - @ Override 
 - public void onResume ( ) { 
 - super . onResume ( ) ; 
 + realm = Realm . getDefaultInstance ( ) ; 
 
 - / / Load from file " cities . json " first time 
 - if ( mAdapter = = null ) { 
 - List < City > cities = null ; 
 - try { 
 - cities = loadCities ( ) ; 
 - } catch ( IOException e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 + gridView = findViewById ( R . id . cities _ list ) ; 
 
 - / / This is the GridView adapter 
 - mAdapter = new CityAdapter ( this ) ; 
 - mAdapter . setData ( cities ) ; 
 + cities = realm . where ( City . class ) . findAllAsync ( ) ; 
 + cities . addChangeListener ( realmChangeListener ) ; 
 
 - / / This is the GridView which will display the list of cities 
 - mGridView = ( GridView ) findViewById ( R . id . cities _ list ) ; 
 - mGridView . setAdapter ( mAdapter ) ; 
 - mAdapter . notifyDataSetChanged ( ) ; 
 - mGridView . invalidate ( ) ; 
 - } 
 + adapter = new CityAdapter ( ) ; 
 + gridView . setAdapter ( adapter ) ; 
 + 
 + / / Load from file " cities . json " first time 
 + loadCities ( ) ; 
 } 
 
 + 
 @ Override 
 protected void onDestroy ( ) { 
 super . onDestroy ( ) ; 
 + cities . removeAllChangeListeners ( ) ; 
 realm . close ( ) ; 
 } 
 
 - public List < City > loadCities ( ) throws IOException { 
 - 
 - loadJsonFromStream ( ) ; 
 - loadJsonFromJsonObject ( ) ; 
 - loadJsonFromString ( ) ; 
 - 
 - return realm . where ( City . class ) . findAll ( ) ; 
 + public void loadCities ( ) { 
 + try { 
 + loadJsonFromStream ( ) ; 
 + loadJsonFromJsonObject ( ) ; 
 + loadJsonFromString ( ) ; 
 + } catch ( IOException e ) { 
 + throw new RuntimeException ( e ) ; 
 + } 
 } 
 
 private void loadJsonFromStream ( ) throws IOException { 
 / / Use streams if you are worried about the size of the JSON whether it was persisted on disk 
 / / or received from the network . 
 - InputStream stream = getAssets ( ) . open ( " cities . json " ) ; 
 - 
 - / / Open a transaction to store items into the realm 
 - realm . beginTransaction ( ) ; 
 - try { 
 - realm . createAllFromJson ( City . class , stream ) ; 
 - realm . commitTransaction ( ) ; 
 - } catch ( IOException e ) { 
 - / / Remember to cancel the transaction if anything goes wrong . 
 - realm . cancelTransaction ( ) ; 
 - } finally { 
 - if ( stream ! = null ) { 
 - stream . close ( ) ; 
 + try ( InputStream stream = getAssets ( ) . open ( " cities . json " ) ) { 
 + try { 
 + / / Open a transaction to store items into the realm 
 + realm . beginTransaction ( ) ; 
 + realm . createAllFromJson ( City . class , stream ) ; 
 + realm . commitTransaction ( ) ; 
 + } catch ( IOException e ) { 
 + / / Remember to cancel the transaction if anything goes wrong . 
 + if ( realm . isInTransaction ( ) ) { 
 + realm . cancelTransaction ( ) ; 
 + } 
 + throw new RuntimeException ( e ) ; 
 } 
 } 
 } 
 @ @ - 117 , 22 + 110 , 12 @ @ public class JsonExampleActivity extends Activity { 
 city . put ( " votes " , " 9 " ) ; 
 final JSONObject json = new JSONObject ( city ) ; 
 
 - realm . executeTransaction ( new Realm . Transaction ( ) { 
 - @ Override 
 - public void execute ( Realm realm ) { 
 - realm . createObjectFromJson ( City . class , json ) ; 
 - } 
 - } ) ; 
 + realm . executeTransaction ( realm - > realm . createObjectFromJson ( City . class , json ) ) ; 
 } 
 
 private void loadJsonFromString ( ) { 
 final String json = " { name : \ " Aarhus \ " , votes : 99 } " ; 
 
 - realm . executeTransaction ( new Realm . Transaction ( ) { 
 - @ Override 
 - public void execute ( Realm realm ) { 
 - realm . createObjectFromJson ( City . class , json ) ; 
 - } 
 - } ) ; 
 + realm . executeTransaction ( realm - > realm . createObjectFromJson ( City . class , json ) ) ; 
 } 
 } 
 diff - - git a / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml b / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml 
 index c0934ad . . 598cebc 100644 
 - - - a / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml 
 + + + b / examples / jsonExample / src / main / res / layout / activity _ realm _ example . xml 
 @ @ - 3 , 23 + 3 , 23 @ @ 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " match _ parent " 
 android : orientation = " vertical " 
 - android : paddingBottom = " @ dimen / activity _ vertical _ margin " 
 android : paddingLeft = " @ dimen / activity _ horizontal _ margin " 
 android : paddingRight = " @ dimen / activity _ horizontal _ margin " 
 - android : paddingTop = " @ dimen / activity _ vertical _ margin " 
 tools : context = " . JsonExampleActivity " > 
 
 < TextView 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " wrap _ content " 
 android : gravity = " center _ horizontal " 
 + android : paddingBottom = " @ dimen / activity _ vertical _ margin " 
 + android : paddingTop = " @ dimen / activity _ vertical _ margin " 
 android : text = " @ string / label " 
 android : textSize = " 18sp " / > 
 
 < GridView 
 android : id = " @ + id / cities _ list " 
 - android : listSelector = " @ android : color / transparent " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " wrap _ content " 
 + android : listSelector = " @ android : color / transparent " 
 android : numColumns = " 2 " / > 
 < / LinearLayout >

NEAREST DIFF:
diff - - git a / examples / gridViewExample / src / main / AndroidManifest . xml b / examples / gridViewExample / src / main / AndroidManifest . xml 
 index 8283363 . . 8530d12 100644 
 - - - a / examples / gridViewExample / src / main / AndroidManifest . xml 
 + + + b / examples / gridViewExample / src / main / AndroidManifest . xml 
 @ @ - 9 , 10 + 9 , 10 @ @ 
 android : theme = " @ style / AppTheme " > 
 < activity 
 android : name = " io . realm . examples . realmgridview . RealmExampleActivity " 
 + android : configChanges = " keyboard | screenSize | orientation " 
 android : label = " @ string / app _ name " > 
 < intent - filter > 
 < action android : name = " android . intent . action . MAIN " / > 
 - 
 < category android : name = " android . intent . category . LAUNCHER " / > 
 < / intent - filter > 
 < / activity > 
 diff - - git a / examples / gridViewExample / src / main / assets / cities . json b / examples / gridViewExample / src / main / assets / cities . json 
 index 635dec8 . . 8dbbb49 100644 
 - - - a / examples / gridViewExample / src / main / assets / cities . json 
 + + + b / examples / gridViewExample / src / main / assets / cities . json 
 @ @ - 24 , 5 + 24 , 44 @ @ 
 " votes " : 11 } , 
 
 { " name " : " Krakow " , 
 + " votes " : 9 } , 
 + 
 + { " name " : " Peoria " , 
 + " votes " : 72 } , 
 + 
 + { " name " : " Springfield " , 
 + " votes " : 88 } , 
 + 
 + { " name " : " Kansas City " , 
 + " votes " : 100 } , 
 + 
 + { " name " : " Tokyo " , 
 + " votes " : 20 } , 
 + 
 + { " name " : " Boise " , 
 + " votes " : 17 } , 
 + 
 + { " name " : " Los Angeles " , 
 + " votes " : 14 } , 
 + 
 + { " name " : " Newark " , 
 + " votes " : 12 } , 
 + 
 + { " name " : " Chicago " , 
 + " votes " : 11 } , 
 + 
 + { " name " : " Detroit " , 
 + " votes " : 91 } , 
 + 
 + { " name " : " Florence " , 
 + " votes " : 4 } , 
 + 
 + { " name " : " Venice " , 
 + " votes " : 2 } , 
 + 
 + { " name " : " Madrid " , 
 + " votes " : 1 } , 
 + 
 + { " name " : " London " , 
 " votes " : 9 } 
 ] 
 \ No newline at end of file 
 diff - - git a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java 
 index 2bb0030 . . b9130f8 100644 
 - - - a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java 
 + + + b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / City . java 
 @ @ - 38 , 4 + 38 , 12 @ @ public class City extends RealmObject { 
 public void setVotes ( long votes ) { 
 this . votes = votes ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return " City { " + 
 + " name = ' " + name + ' \ ' ' + 
 + " , votes = " + votes + 
 + ' } ' ; 
 + } 
 } 
 diff - - git a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / CityLoader . java b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / CityLoader . java 
 deleted file mode 100644 
 index 80b3856 . . 0000000 
 - - - a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / CityLoader . java 
 + + + / dev / null 
 @ @ - 1 , 111 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2014 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . examples . realmgridview ; 
 - 
 - import android . content . AsyncTaskLoader ; 
 - import android . content . Context ; 
 - import android . os . Bundle ; 
 - import android . util . Log ; 
 - 
 - import com . google . gson . Gson ; 
 - import com . google . gson . reflect . TypeToken ; 
 - 
 - import java . io . IOException ; 
 - import java . io . InputStream ; 
 - import java . io . InputStreamReader ; 
 - import java . util . List ; 
 - 
 - import io . realm . Realm ; 
 - 
 - public class CityLoader extends AsyncTaskLoader < List < City > > { 
 - 
 - public static final String TAG = CityLoader . class . getName ( ) ; 
 - 
 - private Context context = null ; 
 - private Bundle args = null ; 
 - 
 - / / Added this field to make Loaders work under support package . 
 - private boolean dataIsReady = false ; 
 - 
 - public CityLoader ( final Context context , Bundle bundle ) { 
 - super ( context ) ; 
 - 
 - this . context = context ; 
 - this . args = bundle ; 
 - } 
 - 
 - / / Added this method to make loaders from support package work 
 - @ Override 
 - public void onStartLoading ( ) { 
 - if ( dataIsReady ) { 
 - deliverResult ( null ) ; 
 - } else { 
 - forceLoad ( ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public List < City > loadInBackground ( ) throws RuntimeException { 
 - List < City > items = loadCities ( ) ; 
 - 
 - if ( items = = null ) { 
 - Log . e ( TAG , " No cities found " ) ; 
 - return null ; 
 - } 
 - 
 - dataIsReady = true ; 
 - 
 - / / Delete previous database in case it ' s there from a previous run . 
 - Realm . deleteRealmFile ( context ) ; 
 - 
 - / / Store the retrieved items to the Realm 
 - Realm realm = Realm . getInstance ( context ) ; 
 - 
 - realm . beginTransaction ( ) ; 
 - for ( City city : items ) { 
 - City realmCity = realm . createObject ( City . class ) ; 
 - realmCity . setName ( city . getName ( ) ) ; 
 - realmCity . setVotes ( city . getVotes ( ) ) ; 
 - } 
 - realm . commitTransaction ( ) ; 
 - 
 - return items ; 
 - } 
 - 
 - public Gson getGson ( ) { 
 - return new Gson ( ) ; 
 - } 
 - 
 - public List < City > loadCities ( ) { 
 - List < City > items = null ; 
 - 
 - / / In this case we ' re loading from local assets . 
 - / / NOTE : could alternatively easily load from network 
 - 
 - try { 
 - InputStream stream = null ; 
 - stream = context . getAssets ( ) . open ( " cities . json " ) ; 
 - items = getGson ( ) . fromJson ( new InputStreamReader ( stream ) , new TypeToken < List < City > > ( ) { 
 - } . getType ( ) ) ; 
 - } catch ( IOException ioe ) { 
 - ioe . printStackTrace ( ) ; 
 - Log . e ( TAG , " Could not load cities information " ) ; 
 - } 
 - 
 - return items ; 
 - } 
 - } 
 diff - - git a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java 
 index 3da6084 . . d69bd8c 100644 
 - - - a / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java 
 + + + b / examples / gridViewExample / src / main / java / io / realm / examples / realmgridview / RealmExampleActivity . java 
 @ @ - 17 , 23 + 17 , 24 @ @ 
 package io . realm . examples . realmgridview ; 
 
 import android . app . Activity ; 
 - import android . app . LoaderManager ; 
 - import android . content . Loader ; 
 import android . os . Bundle ; 
 - import android . util . Log ; 
 - import android . view . Menu ; 
 - import android . view . MenuItem ; 
 import android . view . View ; 
 import android . widget . AdapterView ; 
 import android . widget . GridView ; 
 
 + import com . google . gson . JsonArray ; 
 + import com . google . gson . JsonElement ; 
 + import com . google . gson . JsonParser ; 
 + 
 + import java . io . InputStream ; 
 + import java . io . InputStreamReader ; 
 + import java . util . ArrayList ; 
 import java . util . List ; 
 
 import io . realm . Realm ; 
 - import io . realm . RealmQuery ; 
 import io . realm . RealmResults ; 
 
 - public class RealmExampleActivity extends Activity implements LoaderManager . LoaderCallbacks < List < City > > , AdapterView . OnItemClickListener { 
 + public class RealmExampleActivity extends Activity implements AdapterView . OnItemClickListener { 
 
 public static final String TAG = RealmExampleActivity . class . getName ( ) ; 
 
 @ @ - 49 , 80 + 50 , 69 @ @ public class RealmExampleActivity extends Activity implements LoaderManager . Load 
 @ Override 
 public void onResume ( ) { 
 super . onResume ( ) ; 
 - if ( mAdapter = = null ) { 
 - getLoaderManager ( ) . restartLoader ( 0 , null , this ) ; 
 - } 
 - } 
 
 - / * * 
 - * Loader Callback Methods * * 
 - * / 
 - 
 - @ Override 
 - public Loader < List < City > > onCreateLoader ( int id , Bundle args ) { 
 - return new CityLoader ( this , null ) ; 
 - } 
 - 
 - @ Override 
 - public void onLoadFinished ( Loader < List < City > > loader , List < City > response ) { 
 - if ( response = = null ) { 
 - Log . e ( TAG , " Loader did not acquire any useful information " ) ; 
 - } else { 
 + if ( mAdapter = = null ) { 
 + List < City > cities = loadCities ( ) ; 
 mAdapter = new CityAdapter ( this ) ; 
 + mAdapter . setData ( cities ) ; 
 + 
 mGrid = ( GridView ) findViewById ( R . id . cities _ list ) ; 
 mGrid . setAdapter ( mAdapter ) ; 
 mGrid . setOnItemClickListener ( RealmExampleActivity . this ) ; 
 - 
 - / / Pull the acquired JSON information from the Realm 
 - updateCities ( ) ; 
 + mAdapter . notifyDataSetChanged ( ) ; 
 + mGrid . invalidate ( ) ; 
 } 
 } 
 
 - public void updateCities ( ) { 
 - Realm realm = Realm . getInstance ( this ) ; 
 - RealmResults < City > cities = realm . where ( City . class ) . findAll ( ) ; 
 - mAdapter . setData ( cities ) ; 
 - 
 - mAdapter . notifyDataSetChanged ( ) ; 
 - } 
 + public List < City > loadCities ( ) { 
 + List < City > items = new ArrayList < City > ( ) ; 
 
 - @ Override 
 - public void onLoaderReset ( Loader < List < City > > loader ) { 
 + / / In this case we ' re loading from local assets . 
 + / / NOTE : could alternatively easily load from network 
 + InputStream stream = null ; 
 + try { 
 + stream = getAssets ( ) . open ( " cities . json " ) ; 
 + } catch ( Exception e ) { 
 + return null ; 
 + } 
 
 - } 
 + JsonParser parser = new JsonParser ( ) ; 
 + JsonArray array = parser . parse ( new InputStreamReader ( stream ) ) . getAsJsonArray ( ) ; 
 
 - / * * 
 - * Options Menu * * 
 - * / 
 + / / Clear the realm from last time 
 + Realm . deleteRealmFile ( this ) ; 
 
 - @ Override 
 - public boolean onCreateOptionsMenu ( Menu menu ) { 
 - getMenuInflater ( ) . inflate ( R . menu . options _ menu , menu ) ; 
 - return true ; 
 - } 
 + / / Store the retrieved items to the Realm 
 + Realm realm = Realm . getInstance ( this ) ; 
 
 - @ Override 
 - public boolean onOptionsItemSelected ( MenuItem item ) { 
 - int id = item . getItemId ( ) ; 
 - if ( id = = R . id . action _ reload ) { 
 - getLoaderManager ( ) . restartLoader ( 0 , null , this ) ; 
 - return true ; 
 + realm . beginTransaction ( ) ; 
 + for ( JsonElement e : array ) { 
 + City realmCity = realm . createObject ( City . class ) ; 
 + realmCity . setName ( e . getAsJsonObject ( ) . get ( " name " ) . getAsString ( ) ) ; 
 + realmCity . setVotes ( e . getAsJsonObject ( ) . get ( " votes " ) . getAsInt ( ) ) ; 
 + items . add ( realmCity ) ; 
 } 
 - return super . onOptionsItemSelected ( item ) ; 
 + realm . commitTransaction ( ) ; 
 + 
 + return items ; 
 } 
 
 - / * * 
 - * Listeners * * 
 - * / 
 + public void updateCities ( ) { 
 + Realm realm = Realm . getInstance ( this ) ; 
 + RealmResults < City > cities = realm . where ( City . class ) . findAll ( ) ; 
 + mAdapter . setData ( cities ) ; 
 + mAdapter . notifyDataSetChanged ( ) ; 
 + mGrid . invalidate ( ) ; 
 + } 
 
 @ Override 
 public void onItemClick ( AdapterView < ? > parent , View view , int position , long id ) { 
 - City modifiedCity = ( City ) mAdapter . getItem ( position ) ; 
 + City modifiedCity = ( City ) mAdapter . getItem ( position ) ; 
 
 / / Update the realm object affected by the user 
 Realm realm = Realm . getInstance ( this ) ; 
 - RealmQuery < City > query = realm . where ( City . class ) . beginsWith ( " name " , modifiedCity . getName ( ) ) ; 
 - City city = query . findFirst ( ) ; 
 + City city = realm . where ( City . class ) . equalTo ( " name " , modifiedCity . getName ( ) ) . findFirst ( ) ; 
 + 
 realm . beginTransaction ( ) ; 
 city . setVotes ( city . getVotes ( ) + 1 ) ; 
 realm . commitTransaction ( ) ;
