BLEU SCORE: 0.0734705312597788

TEST MSG: Updated changelog ; combined duplicate implementations for both . first and . last
GENERATED MSG: Add ability for first and last methods to return a default

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index fa076d3 . . ccd6b95 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> # # # Enhancement <nl> <nl> * ` Realm . compactRealm ( ) ` works for encrypted Realms . <nl> + * Added ` first ( E defaultValue ) ` and ` last ( E defaultValue ) ` methods to ` RealmList ` and ` RealmResult ` . These methods will return the provided object instead of throwing an ` IndexOutOfBoundsException ` if the list is empty . <nl> <nl> # # 2 . 0 . 1 <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> index cd0570e . . 8bee6af 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> @ @ - 222 , 7 + 222 , 7 @ @ public class OrderedRealmCollectionTests extends CollectionTests { <nl> <nl> @ Test <nl> public void first _ withDefault ( ) { <nl> - AllJavaTypes defaultObject = collection . get ( 0 ) ; <nl> + AllJavaTypes defaultObject = new AllJavaTypes ( ) ; <nl> collection = createEmptyCollection ( realm , collectionClass ) ; <nl> assertEquals ( defaultObject , collection . first ( defaultObject ) ) ; <nl> assertEquals ( null , collection . first ( null ) ) ; / / Null is an acceptable default <nl> @ @ - 245 , 7 + 245 , 7 @ @ public class OrderedRealmCollectionTests extends CollectionTests { <nl> <nl> @ Test <nl> public void last _ withDefault ( ) { <nl> - AllJavaTypes defaultObject = collection . get ( 0 ) ; <nl> + AllJavaTypes defaultObject = new AllJavaTypes ( ) ; <nl> collection = createEmptyCollection ( realm , collectionClass ) ; <nl> assertEquals ( defaultObject , collection . last ( defaultObject ) ) ; <nl> assertEquals ( null , collection . last ( null ) ) ; / / Null is an acceptable default <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java <nl> index 0af9acf . . 724ec56 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java <nl> @ @ - 35 , 11 + 35 , 11 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R <nl> E first ( ) ; <nl> <nl> / * * <nl> - * Gets the first object from the collection . If the collection is empty , the provided default will be used . <nl> + * Gets the first object from the collection . If the collection is empty , the provided default will be used instead . <nl> * <nl> * @ return the first object or the provided default . <nl> * / <nl> - E first ( E defaultObject ) ; <nl> + E first ( E defaultValue ) ; <nl> <nl> / * * <nl> * Gets the last object from the collection . <nl> @ @ - 50 , 11 + 50 , 11 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R <nl> E last ( ) ; <nl> <nl> / * * <nl> - * Gets the last object from the collection . If the collection is empty , the provided default will be used . <nl> + * Gets the last object from the collection . If the collection is empty , the provided default will be used instead . <nl> * <nl> * @ return the last object or the provided default . <nl> * / <nl> - E last ( E defaultObject ) ; <nl> + E last ( E defaultValue ) ; <nl> <nl> / * * <nl> * Sorts a collection based on the provided field in ascending order . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> index 8d9366e . . 3b0f54a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> @ @ - 456 , 60 + 456 , 62 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple <nl> * { @ inheritDoc } <nl> * / <nl> public E first ( ) { <nl> - if ( managedMode ) { <nl> - checkValidView ( ) ; <nl> - if ( ! view . isEmpty ( ) ) { <nl> - return get ( 0 ) ; <nl> - } <nl> - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { <nl> - return unmanagedList . get ( 0 ) ; <nl> - } <nl> - throw new IndexOutOfBoundsException ( " The list is empty . " ) ; <nl> + return firstImpl ( true , null ) ; <nl> } <nl> <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> public E first ( E defaultValue ) { <nl> + return firstImpl ( false , defaultValue ) ; <nl> + } <nl> + <nl> + private E firstImpl ( boolean shouldThrow , E defaultValue ) { <nl> if ( managedMode ) { <nl> checkValidView ( ) ; <nl> if ( ! view . isEmpty ( ) ) { <nl> return get ( 0 ) ; <nl> } <nl> - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { <nl> + } else if ( unmanagedList ! = null & & ! unmanagedList . isEmpty ( ) ) { <nl> return unmanagedList . get ( 0 ) ; <nl> } <nl> - return defaultValue ; <nl> + <nl> + if ( shouldThrow ) { <nl> + throw new IndexOutOfBoundsException ( " The list is empty . " ) ; <nl> + } else { <nl> + return defaultValue ; <nl> + } <nl> } <nl> <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> public E last ( ) { <nl> - if ( managedMode ) { <nl> - checkValidView ( ) ; <nl> - if ( ! view . isEmpty ( ) ) { <nl> - return get ( ( int ) view . size ( ) - 1 ) ; <nl> - } <nl> - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { <nl> - return unmanagedList . get ( unmanagedList . size ( ) - 1 ) ; <nl> - } <nl> - throw new IndexOutOfBoundsException ( " The list is empty . " ) ; <nl> + return lastImpl ( true , null ) ; <nl> } <nl> <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> public E last ( E defaultValue ) { <nl> + return lastImpl ( false , defaultValue ) ; <nl> + } <nl> + <nl> + private E lastImpl ( boolean shouldThrow , E defaultValue ) { <nl> if ( managedMode ) { <nl> checkValidView ( ) ; <nl> if ( ! view . isEmpty ( ) ) { <nl> return get ( ( int ) view . size ( ) - 1 ) ; <nl> } <nl> - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { <nl> + } else if ( unmanagedList ! = null & & ! unmanagedList . isEmpty ( ) ) { <nl> return unmanagedList . get ( unmanagedList . size ( ) - 1 ) ; <nl> } <nl> - return defaultValue ; <nl> + <nl> + if ( shouldThrow ) { <nl> + throw new IndexOutOfBoundsException ( " The list is empty . " ) ; <nl> + } else { <nl> + return defaultValue ; <nl> + } <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index c66d330 . . 7bc4df2 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 225 , 11 + 225 , 7 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * / <nl> @ Override <nl> public E first ( ) { <nl> - if ( size ( ) > 0 ) { <nl> - return get ( 0 ) ; <nl> - } else { <nl> - throw new IndexOutOfBoundsException ( " No results were found . " ) ; <nl> - } <nl> + return firstImpl ( true , null ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 237 , 10 + 233 , 18 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * / <nl> @ Override <nl> public E first ( E defaultValue ) { <nl> - if ( size ( ) > 0 ) { <nl> + return firstImpl ( false , defaultValue ) ; <nl> + } <nl> + <nl> + private E firstImpl ( boolean shouldThrow , E defaultValue ) { <nl> + if ( ! isEmpty ( ) ) { <nl> return get ( 0 ) ; <nl> } else { <nl> - return defaultValue ; <nl> + if ( shouldThrow ) { <nl> + throw new IndexOutOfBoundsException ( " No results were found . " ) ; <nl> + } else { <nl> + return defaultValue ; <nl> + } <nl> } <nl> } <nl> <nl> @ @ - 249 , 12 + 253 , 7 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * / <nl> @ Override <nl> public E last ( ) { <nl> - int size = size ( ) ; <nl> - if ( size > 0 ) { <nl> - return get ( size - 1 ) ; <nl> - } else { <nl> - throw new IndexOutOfBoundsException ( " No results were found . " ) ; <nl> - } <nl> + return lastImpl ( true , null ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 262 , 11 + 261 , 19 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * / <nl> @ Override <nl> public E last ( E defaultValue ) { <nl> - int size = size ( ) ; <nl> - if ( size > 0 ) { <nl> - return get ( size - 1 ) ; <nl> + return lastImpl ( false , defaultValue ) ; <nl> + <nl> + } <nl> + <nl> + private E lastImpl ( boolean shouldThrow , E defaultValue ) { <nl> + if ( ! isEmpty ( ) ) { <nl> + return get ( size ( ) - 1 ) ; <nl> } else { <nl> - return defaultValue ; <nl> + if ( shouldThrow ) { <nl> + throw new IndexOutOfBoundsException ( " No results were found . " ) ; <nl> + } else { <nl> + return defaultValue ; <nl> + } <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> index 4d4665e . . cd0570e 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> @ @ - 221 , 6 + 221 , 14 @ @ public class OrderedRealmCollectionTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + public void first _ withDefault ( ) { <nl> + AllJavaTypes defaultObject = collection . get ( 0 ) ; <nl> + collection = createEmptyCollection ( realm , collectionClass ) ; <nl> + assertEquals ( defaultObject , collection . first ( defaultObject ) ) ; <nl> + assertEquals ( null , collection . first ( null ) ) ; / / Null is an acceptable default <nl> + } <nl> + <nl> + @ Test <nl> public void last ( ) { <nl> assertEquals ( collection . get ( TEST _ SIZE - 1 ) , collection . last ( ) ) ; <nl> } <nl> @ @ - 236 , 6 + 244 , 14 @ @ public class OrderedRealmCollectionTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + public void last _ withDefault ( ) { <nl> + AllJavaTypes defaultObject = collection . get ( 0 ) ; <nl> + collection = createEmptyCollection ( realm , collectionClass ) ; <nl> + assertEquals ( defaultObject , collection . last ( defaultObject ) ) ; <nl> + assertEquals ( null , collection . last ( null ) ) ; / / Null is an acceptable default <nl> + } <nl> + <nl> + @ Test <nl> public void get _ validIndex ( ) { <nl> AllJavaTypes first = collection . get ( 0 ) ; <nl> assertEquals ( 0 , first . getFieldInt ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java <nl> index 29376bf . . 0af9acf 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java <nl> @ @ - 35 , 6 + 35 , 13 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R <nl> E first ( ) ; <nl> <nl> / * * <nl> + * Gets the first object from the collection . If the collection is empty , the provided default will be used . <nl> + * <nl> + * @ return the first object or the provided default . <nl> + * / <nl> + E first ( E defaultObject ) ; <nl> + <nl> + / * * <nl> * Gets the last object from the collection . <nl> * <nl> * @ return the last object . <nl> @ @ - 43 , 6 + 50 , 13 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R <nl> E last ( ) ; <nl> <nl> / * * <nl> + * Gets the last object from the collection . If the collection is empty , the provided default will be used . <nl> + * <nl> + * @ return the last object or the provided default . <nl> + * / <nl> + E last ( E defaultObject ) ; <nl> + <nl> + / * * <nl> * Sorts a collection based on the provided field in ascending order . <nl> * <nl> * @ param fieldName the field name to sort by . Only fields of type boolean , short , int , long , float , double , Date , <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> index 9ba427a . . 8d9366e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> @ @ - 468 , 6 + 468 , 21 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple <nl> } <nl> <nl> / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + public E first ( E defaultValue ) { <nl> + if ( managedMode ) { <nl> + checkValidView ( ) ; <nl> + if ( ! view . isEmpty ( ) ) { <nl> + return get ( 0 ) ; <nl> + } <nl> + } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { <nl> + return unmanagedList . get ( 0 ) ; <nl> + } <nl> + return defaultValue ; <nl> + } <nl> + <nl> + / * * <nl> * { @ inheritDoc } <nl> * / <nl> public E last ( ) { <nl> @ @ - 485 , 6 + 500 , 21 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + public E last ( E defaultValue ) { <nl> + if ( managedMode ) { <nl> + checkValidView ( ) ; <nl> + if ( ! view . isEmpty ( ) ) { <nl> + return get ( ( int ) view . size ( ) - 1 ) ; <nl> + } <nl> + } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { <nl> + return unmanagedList . get ( unmanagedList . size ( ) - 1 ) ; <nl> + } <nl> + return defaultValue ; <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> @ Override <nl> public RealmResults < E > sort ( String fieldName ) { <nl> return this . sort ( fieldName , Sort . ASCENDING ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index ea37900 . . c66d330 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 236 , 6 + 236 , 18 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * { @ inheritDoc } <nl> * / <nl> @ Override <nl> + public E first ( E defaultValue ) { <nl> + if ( size ( ) > 0 ) { <nl> + return get ( 0 ) ; <nl> + } else { <nl> + return defaultValue ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + @ Override <nl> public E last ( ) { <nl> int size = size ( ) ; <nl> if ( size > 0 ) { <nl> @ @ - 249 , 6 + 261 , 19 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> * { @ inheritDoc } <nl> * / <nl> @ Override <nl> + public E last ( E defaultValue ) { <nl> + int size = size ( ) ; <nl> + if ( size > 0 ) { <nl> + return get ( size - 1 ) ; <nl> + } else { <nl> + return defaultValue ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + @ Override <nl> public void deleteFromRealm ( int location ) { <nl> realm . checkIfValid ( ) ; <nl> TableOrView table = getTableOrView ( ) ;

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index fa076d3 . . ccd6b95 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 # # # Enhancement 
 
 * ` Realm . compactRealm ( ) ` works for encrypted Realms . 
 + * Added ` first ( E defaultValue ) ` and ` last ( E defaultValue ) ` methods to ` RealmList ` and ` RealmResult ` . These methods will return the provided object instead of throwing an ` IndexOutOfBoundsException ` if the list is empty . 
 
 # # 2 . 0 . 1 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 index cd0570e . . 8bee6af 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 @ @ - 222 , 7 + 222 , 7 @ @ public class OrderedRealmCollectionTests extends CollectionTests { 
 
 @ Test 
 public void first _ withDefault ( ) { 
 - AllJavaTypes defaultObject = collection . get ( 0 ) ; 
 + AllJavaTypes defaultObject = new AllJavaTypes ( ) ; 
 collection = createEmptyCollection ( realm , collectionClass ) ; 
 assertEquals ( defaultObject , collection . first ( defaultObject ) ) ; 
 assertEquals ( null , collection . first ( null ) ) ; / / Null is an acceptable default 
 @ @ - 245 , 7 + 245 , 7 @ @ public class OrderedRealmCollectionTests extends CollectionTests { 
 
 @ Test 
 public void last _ withDefault ( ) { 
 - AllJavaTypes defaultObject = collection . get ( 0 ) ; 
 + AllJavaTypes defaultObject = new AllJavaTypes ( ) ; 
 collection = createEmptyCollection ( realm , collectionClass ) ; 
 assertEquals ( defaultObject , collection . last ( defaultObject ) ) ; 
 assertEquals ( null , collection . last ( null ) ) ; / / Null is an acceptable default 
 diff - - git a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java 
 index 0af9acf . . 724ec56 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java 
 @ @ - 35 , 11 + 35 , 11 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R 
 E first ( ) ; 
 
 / * * 
 - * Gets the first object from the collection . If the collection is empty , the provided default will be used . 
 + * Gets the first object from the collection . If the collection is empty , the provided default will be used instead . 
 * 
 * @ return the first object or the provided default . 
 * / 
 - E first ( E defaultObject ) ; 
 + E first ( E defaultValue ) ; 
 
 / * * 
 * Gets the last object from the collection . 
 @ @ - 50 , 11 + 50 , 11 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R 
 E last ( ) ; 
 
 / * * 
 - * Gets the last object from the collection . If the collection is empty , the provided default will be used . 
 + * Gets the last object from the collection . If the collection is empty , the provided default will be used instead . 
 * 
 * @ return the last object or the provided default . 
 * / 
 - E last ( E defaultObject ) ; 
 + E last ( E defaultValue ) ; 
 
 / * * 
 * Sorts a collection based on the provided field in ascending order . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 index 8d9366e . . 3b0f54a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 @ @ - 456 , 60 + 456 , 62 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple 
 * { @ inheritDoc } 
 * / 
 public E first ( ) { 
 - if ( managedMode ) { 
 - checkValidView ( ) ; 
 - if ( ! view . isEmpty ( ) ) { 
 - return get ( 0 ) ; 
 - } 
 - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { 
 - return unmanagedList . get ( 0 ) ; 
 - } 
 - throw new IndexOutOfBoundsException ( " The list is empty . " ) ; 
 + return firstImpl ( true , null ) ; 
 } 
 
 / * * 
 * { @ inheritDoc } 
 * / 
 public E first ( E defaultValue ) { 
 + return firstImpl ( false , defaultValue ) ; 
 + } 
 + 
 + private E firstImpl ( boolean shouldThrow , E defaultValue ) { 
 if ( managedMode ) { 
 checkValidView ( ) ; 
 if ( ! view . isEmpty ( ) ) { 
 return get ( 0 ) ; 
 } 
 - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { 
 + } else if ( unmanagedList ! = null & & ! unmanagedList . isEmpty ( ) ) { 
 return unmanagedList . get ( 0 ) ; 
 } 
 - return defaultValue ; 
 + 
 + if ( shouldThrow ) { 
 + throw new IndexOutOfBoundsException ( " The list is empty . " ) ; 
 + } else { 
 + return defaultValue ; 
 + } 
 } 
 
 / * * 
 * { @ inheritDoc } 
 * / 
 public E last ( ) { 
 - if ( managedMode ) { 
 - checkValidView ( ) ; 
 - if ( ! view . isEmpty ( ) ) { 
 - return get ( ( int ) view . size ( ) - 1 ) ; 
 - } 
 - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { 
 - return unmanagedList . get ( unmanagedList . size ( ) - 1 ) ; 
 - } 
 - throw new IndexOutOfBoundsException ( " The list is empty . " ) ; 
 + return lastImpl ( true , null ) ; 
 } 
 
 / * * 
 * { @ inheritDoc } 
 * / 
 public E last ( E defaultValue ) { 
 + return lastImpl ( false , defaultValue ) ; 
 + } 
 + 
 + private E lastImpl ( boolean shouldThrow , E defaultValue ) { 
 if ( managedMode ) { 
 checkValidView ( ) ; 
 if ( ! view . isEmpty ( ) ) { 
 return get ( ( int ) view . size ( ) - 1 ) ; 
 } 
 - } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { 
 + } else if ( unmanagedList ! = null & & ! unmanagedList . isEmpty ( ) ) { 
 return unmanagedList . get ( unmanagedList . size ( ) - 1 ) ; 
 } 
 - return defaultValue ; 
 + 
 + if ( shouldThrow ) { 
 + throw new IndexOutOfBoundsException ( " The list is empty . " ) ; 
 + } else { 
 + return defaultValue ; 
 + } 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index c66d330 . . 7bc4df2 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 225 , 11 + 225 , 7 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * / 
 @ Override 
 public E first ( ) { 
 - if ( size ( ) > 0 ) { 
 - return get ( 0 ) ; 
 - } else { 
 - throw new IndexOutOfBoundsException ( " No results were found . " ) ; 
 - } 
 + return firstImpl ( true , null ) ; 
 } 
 
 / * * 
 @ @ - 237 , 10 + 233 , 18 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * / 
 @ Override 
 public E first ( E defaultValue ) { 
 - if ( size ( ) > 0 ) { 
 + return firstImpl ( false , defaultValue ) ; 
 + } 
 + 
 + private E firstImpl ( boolean shouldThrow , E defaultValue ) { 
 + if ( ! isEmpty ( ) ) { 
 return get ( 0 ) ; 
 } else { 
 - return defaultValue ; 
 + if ( shouldThrow ) { 
 + throw new IndexOutOfBoundsException ( " No results were found . " ) ; 
 + } else { 
 + return defaultValue ; 
 + } 
 } 
 } 
 
 @ @ - 249 , 12 + 253 , 7 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * / 
 @ Override 
 public E last ( ) { 
 - int size = size ( ) ; 
 - if ( size > 0 ) { 
 - return get ( size - 1 ) ; 
 - } else { 
 - throw new IndexOutOfBoundsException ( " No results were found . " ) ; 
 - } 
 + return lastImpl ( true , null ) ; 
 } 
 
 / * * 
 @ @ - 262 , 11 + 261 , 19 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * / 
 @ Override 
 public E last ( E defaultValue ) { 
 - int size = size ( ) ; 
 - if ( size > 0 ) { 
 - return get ( size - 1 ) ; 
 + return lastImpl ( false , defaultValue ) ; 
 + 
 + } 
 + 
 + private E lastImpl ( boolean shouldThrow , E defaultValue ) { 
 + if ( ! isEmpty ( ) ) { 
 + return get ( size ( ) - 1 ) ; 
 } else { 
 - return defaultValue ; 
 + if ( shouldThrow ) { 
 + throw new IndexOutOfBoundsException ( " No results were found . " ) ; 
 + } else { 
 + return defaultValue ; 
 + } 
 } 
 } 


NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 index 4d4665e . . cd0570e 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 @ @ - 221 , 6 + 221 , 14 @ @ public class OrderedRealmCollectionTests extends CollectionTests { 
 } 
 
 @ Test 
 + public void first _ withDefault ( ) { 
 + AllJavaTypes defaultObject = collection . get ( 0 ) ; 
 + collection = createEmptyCollection ( realm , collectionClass ) ; 
 + assertEquals ( defaultObject , collection . first ( defaultObject ) ) ; 
 + assertEquals ( null , collection . first ( null ) ) ; / / Null is an acceptable default 
 + } 
 + 
 + @ Test 
 public void last ( ) { 
 assertEquals ( collection . get ( TEST _ SIZE - 1 ) , collection . last ( ) ) ; 
 } 
 @ @ - 236 , 6 + 244 , 14 @ @ public class OrderedRealmCollectionTests extends CollectionTests { 
 } 
 
 @ Test 
 + public void last _ withDefault ( ) { 
 + AllJavaTypes defaultObject = collection . get ( 0 ) ; 
 + collection = createEmptyCollection ( realm , collectionClass ) ; 
 + assertEquals ( defaultObject , collection . last ( defaultObject ) ) ; 
 + assertEquals ( null , collection . last ( null ) ) ; / / Null is an acceptable default 
 + } 
 + 
 + @ Test 
 public void get _ validIndex ( ) { 
 AllJavaTypes first = collection . get ( 0 ) ; 
 assertEquals ( 0 , first . getFieldInt ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java 
 index 29376bf . . 0af9acf 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / OrderedRealmCollection . java 
 @ @ - 35 , 6 + 35 , 13 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R 
 E first ( ) ; 
 
 / * * 
 + * Gets the first object from the collection . If the collection is empty , the provided default will be used . 
 + * 
 + * @ return the first object or the provided default . 
 + * / 
 + E first ( E defaultObject ) ; 
 + 
 + / * * 
 * Gets the last object from the collection . 
 * 
 * @ return the last object . 
 @ @ - 43 , 6 + 50 , 13 @ @ public interface OrderedRealmCollection < E extends RealmModel > extends List < E > , R 
 E last ( ) ; 
 
 / * * 
 + * Gets the last object from the collection . If the collection is empty , the provided default will be used . 
 + * 
 + * @ return the last object or the provided default . 
 + * / 
 + E last ( E defaultObject ) ; 
 + 
 + / * * 
 * Sorts a collection based on the provided field in ascending order . 
 * 
 * @ param fieldName the field name to sort by . Only fields of type boolean , short , int , long , float , double , Date , 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 index 9ba427a . . 8d9366e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 @ @ - 468 , 6 + 468 , 21 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple 
 } 
 
 / * * 
 + * { @ inheritDoc } 
 + * / 
 + public E first ( E defaultValue ) { 
 + if ( managedMode ) { 
 + checkValidView ( ) ; 
 + if ( ! view . isEmpty ( ) ) { 
 + return get ( 0 ) ; 
 + } 
 + } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { 
 + return unmanagedList . get ( 0 ) ; 
 + } 
 + return defaultValue ; 
 + } 
 + 
 + / * * 
 * { @ inheritDoc } 
 * / 
 public E last ( ) { 
 @ @ - 485 , 6 + 500 , 21 @ @ public final class RealmList < E extends RealmModel > extends AbstractList < E > imple 
 / * * 
 * { @ inheritDoc } 
 * / 
 + public E last ( E defaultValue ) { 
 + if ( managedMode ) { 
 + checkValidView ( ) ; 
 + if ( ! view . isEmpty ( ) ) { 
 + return get ( ( int ) view . size ( ) - 1 ) ; 
 + } 
 + } else if ( unmanagedList ! = null & & unmanagedList . size ( ) > 0 ) { 
 + return unmanagedList . get ( unmanagedList . size ( ) - 1 ) ; 
 + } 
 + return defaultValue ; 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 @ Override 
 public RealmResults < E > sort ( String fieldName ) { 
 return this . sort ( fieldName , Sort . ASCENDING ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index ea37900 . . c66d330 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 236 , 6 + 236 , 18 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * { @ inheritDoc } 
 * / 
 @ Override 
 + public E first ( E defaultValue ) { 
 + if ( size ( ) > 0 ) { 
 + return get ( 0 ) ; 
 + } else { 
 + return defaultValue ; 
 + } 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + @ Override 
 public E last ( ) { 
 int size = size ( ) ; 
 if ( size > 0 ) { 
 @ @ - 249 , 6 + 261 , 19 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 * { @ inheritDoc } 
 * / 
 @ Override 
 + public E last ( E defaultValue ) { 
 + int size = size ( ) ; 
 + if ( size > 0 ) { 
 + return get ( size - 1 ) ; 
 + } else { 
 + return defaultValue ; 
 + } 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + @ Override 
 public void deleteFromRealm ( int location ) { 
 realm . checkIfValid ( ) ; 
 TableOrView table = getTableOrView ( ) ;
