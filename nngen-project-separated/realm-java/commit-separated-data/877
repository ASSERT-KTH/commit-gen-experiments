BLEU SCORE: 0.016932492841722675

TEST MSG: Adding @ throws declarations to javadocs for BaseRealm , Realm and DynamicRealm
GENERATED MSG: Fix JavaDoc generation .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index cbc2a6d . . 2693f06 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ abstract class BaseRealm implements Closeable { <nl> * thread . <nl> * <nl> * @ param autoRefresh { @ code true } will turn auto - refresh on , { @ code false } will turn it off . <nl> + * @ throws IllegalStateException if called from a non - Looper thread . <nl> * / <nl> public void setAutoRefresh ( boolean autoRefresh ) { <nl> checkIfValid ( ) ; <nl> @ @ - 235 , 6 + 236 , 7 @ @ abstract class BaseRealm implements Closeable { <nl> * @ param destination file to save the Realm to . <nl> * @ param key a 64 - byte encryption key . <nl> * @ throws java . io . IOException if any write operation fails . <nl> + * @ throws IllegalArgumentException if destination argument is null . <nl> * / <nl> public void writeEncryptedCopyTo ( File destination , byte [ ] key ) throws java . io . IOException { <nl> if ( destination = = null ) { <nl> @ @ - 247 , 6 + 249 , 8 @ @ abstract class BaseRealm implements Closeable { <nl> / * * <nl> * Refreshes the Realm instance and all the RealmResults and RealmObjects instances coming from it . <nl> * It also calls the listeners associated to the Realm instance . <nl> + * <nl> + * @ throws IllegalStateException if attempting to refresh from within a transaction . <nl> * / <nl> @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public void refresh ( ) { <nl> @ @ - 389 , 6 + 393 , 8 @ @ abstract class BaseRealm implements Closeable { <nl> * < p > <nl> * It ' s important to always remember to close Realm instances when you ' re done with it in order not to leak memory , <nl> * file descriptors or grow the size of Realm file out of measure . <nl> + * <nl> + * @ throws IllegalStateException if attempting to close from another thread . <nl> * / <nl> @ Override <nl> public void close ( ) { <nl> @ @ - 416 , 6 + 422 , 7 @ @ abstract class BaseRealm implements Closeable { <nl> * Checks if the { @ link io . realm . Realm } instance has already been closed . <nl> * <nl> * @ return { @ code true } if closed , { @ code false } otherwise . <nl> + * @ throws IllegalStateException if attempting to close from another thread . <nl> * / <nl> public boolean isClosed ( ) { <nl> if ( this . threadId ! = Thread . currentThread ( ) . getId ( ) ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index d848cc3 . . f910b8a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package io . realm ; <nl> import android . os . Looper ; <nl> <nl> import io . realm . exceptions . RealmException ; <nl> + import io . realm . exceptions . RealmIOException ; <nl> import io . realm . internal . Table ; <nl> import io . realm . internal . TableView ; <nl> import rx . Observable ; <nl> @ @ - 57 , 6 + 58 , 8 @ @ public final class DynamicRealm extends BaseRealm { <nl> * <nl> * @ return the DynamicRealm defined by the configuration . <nl> * @ see RealmConfiguration for details on how to configure a Realm . <nl> + * @ throws RealmIOException if an error happened when accessing the underlying Realm file . <nl> + * @ throws IllegalArgumentException if { @ code configuration } argument is { @ code null } . <nl> * / <nl> public static DynamicRealm getInstance ( RealmConfiguration configuration ) { <nl> if ( configuration = = null ) { <nl> @ @ - 131 , 6 + 134 , 7 @ @ public final class DynamicRealm extends BaseRealm { <nl> * during the transaction { @ link # cancelTransaction ( ) } will be called instead of { @ link # commitTransaction ( ) } . <nl> * <nl> * @ param transaction { @ link io . realm . DynamicRealm . Transaction } to execute . <nl> + * @ throws IllegalArgumentException if the { @ code transaction } is { @ code null } . <nl> * / <nl> public void executeTransaction ( Transaction transaction ) { <nl> if ( transaction = = null ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 89f4b70 . . 274f9ce 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 173 , 6 + 173 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ throws java . lang . NullPointerException if no default configuration has been defined . <nl> * @ throws RealmMigrationNeededException if no migration has been provided by the default configuration and the <nl> * RealmObject classes or version has has changed so a migration is required . <nl> + * @ throws RealmIOException if an error happened when accessing the underlying Realm file . <nl> * / <nl> public static Realm getDefaultInstance ( ) { <nl> if ( defaultConfiguration = = null ) { <nl> @ @ - 188 , 6 + 189 , 8 @ @ public final class Realm extends BaseRealm { <nl> * @ return an instance of the Realm class <nl> * @ throws RealmMigrationNeededException if no migration has been provided by the configuration and the RealmObject <nl> * classes or version has has changed so a migration is required . <nl> + * @ throws RealmIOException if an error happened when accessing the underlying Realm file . <nl> + * @ throws IllegalArgumentException if a null { @ link RealmConfiguration } is provided . <nl> * @ see RealmConfiguration for details on how to configure a Realm . <nl> * / <nl> public static Realm getInstance ( RealmConfiguration configuration ) { <nl> @ @ - 201 , 6 + 204 , 7 @ @ public final class Realm extends BaseRealm { <nl> * Sets the { @ link io . realm . RealmConfiguration } used when calling { @ link # getDefaultInstance ( ) } . <nl> * <nl> * @ param configuration the { @ link io . realm . RealmConfiguration } to use as the default configuration . <nl> + * @ throws IllegalArgumentException if a null { @ link RealmConfiguration } is provided . <nl> * @ see RealmConfiguration for details on how to configure a Realm . <nl> * / <nl> public static void setDefaultConfiguration ( RealmConfiguration configuration ) { <nl> @ @ - 333 , 6 + 337 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ param json array with object data . <nl> * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> + * @ throws RealmException if unable to map JSON . <nl> * @ see # createAllFromJson ( Class , org . json . JSONArray ) <nl> * / <nl> public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , JSONArray json ) { <nl> @ @ - 381 , 6 + 386 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ param json string with an array of JSON objects . <nl> * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> + * @ throws RealmException if unable to create a JSON array from the json string . <nl> * @ see # createAllFromJson ( Class , String ) <nl> * / <nl> public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , String json ) { <nl> @ @ - 435 , 6 + 441 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ param in the InputStream with a list of object data in JSON format . <nl> * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> + * @ throws RealmException if unable to read JSON . <nl> * @ see # createOrUpdateAllFromJson ( Class , java . io . InputStream ) <nl> * / <nl> @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) <nl> @ @ - 495 , 6 + 502 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ return created or updated { @ link io . realm . RealmObject } . <nl> * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> + * @ throws RealmException if JSON data cannot be mapped . <nl> * @ see # createObjectFromJson ( Class , org . json . JSONObject ) <nl> * / <nl> public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , JSONObject json ) { <nl> @ @ - 547 , 6 + 555 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ return created or updated { @ link io . realm . RealmObject } . <nl> * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> + * @ throws RealmException if JSON object cannot be mapped from the string parameter . <nl> * @ see # createObjectFromJson ( Class , String ) <nl> * / <nl> public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , String json ) { <nl> @ @ - 619 , 6 + 628 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ return created or updated { @ link io . realm . RealmObject } . <nl> * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> + * @ throws RealmException if failure to read JSON . <nl> * @ see # createObjectFromJson ( Class , java . io . InputStream ) <nl> * / <nl> @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) <nl> @ @ - 1045 , 6 + 1055 , 7 @ @ public final class Realm extends BaseRealm { <nl> * called instead of { @ link # commitTransaction ( ) } . <nl> * <nl> * @ param transaction the { @ link io . realm . Realm . Transaction } to execute . <nl> + * @ throws IllegalArgumentException if the { @ code transaction } is { @ code null } . <nl> * / <nl> public void executeTransaction ( Transaction transaction ) { <nl> if ( transaction = = null ) { <nl> @ @ - 1071 , 6 + 1082 , 7 @ @ public final class Realm extends BaseRealm { <nl> * @ param transaction { @ link io . realm . Realm . Transaction } to execute . <nl> * @ param callback optional , to receive the result of this query . <nl> * @ return a { @ link RealmAsyncTask } representing a cancellable task . <nl> + * @ throws IllegalArgumentException if the { @ code transaction } is { @ code null } , or if the realm is opened from another thread . <nl> * / <nl> public RealmAsyncTask executeTransaction ( final Transaction transaction , final Transaction . Callback callback ) { <nl> if ( transaction = = null ) <nl> @ @ - 1283 , 6 + 1295 , 7 @ @ public final class Realm extends BaseRealm { <nl> * from library or project dependencies . Realm classes in these should be exposed using their own module . <nl> * <nl> * @ return the default Realm module or null if no default module exists . <nl> + * @ throws RealmException if unable to create an instance of the module . <nl> * @ see io . realm . RealmConfiguration . Builder # setModules ( Object , Object . . . ) <nl> * / <nl> public static Object getDefaultModule ( ) {
NEAREST DIFF (one line): diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index 7bc382f . . ec34def 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 59 , 7 + 59 , 7 @ @ android . libraryVariants . all { variant - > <nl> } <nl> } <nl> <nl> - task androidJar ( type : Jar , dependsOn : ' assemble ' ) { <nl> + task androidJar ( type : Jar , dependsOn : [ ' assemble ' , ' bundleJavadocRelease ' ] ) { <nl> group ' Build ' <nl> description ' Generates a jar file continaining Realm and its annotation processor ' <nl> from zipTree ( ' build / intermediates / bundles / release / classes . jar ' ) <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index c3f576a . . 22baba9 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 686 , 9 + 686 , 9 @ @ public final class Realm implements Closeable { <nl> * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param json Array with object data . <nl> * <nl> - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a <nl> + * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> - * @ see { @ link # createAllFromJson ( Class , org . json . JSONArray ) } . <nl> + * @ see # createAllFromJson ( Class , org . json . JSONArray ) <nl> * / <nl> public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , JSONArray json ) { <nl> if ( clazz = = null | | json = = null ) { <nl> @ @ - 739 , 9 + 739 , 9 @ @ public final class Realm implements Closeable { <nl> * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param json String with an array of JSON objects . <nl> * <nl> - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a <nl> + * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> - * @ see { @ link # createAllFromJson ( Class , String ) } <nl> + * @ see # createAllFromJson ( Class , String ) <nl> * / <nl> public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , String json ) { <nl> if ( clazz = = null | | json = = null | | json . length ( ) = = 0 ) { <nl> @ @ - 797 , 9 + 797 , 9 @ @ public final class Realm implements Closeable { <nl> * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param in InputStream with a list of object data in JSON format . <nl> * <nl> - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a <nl> + * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> - * @ see { @ link # createOrUpdateAllFromJson ( Class , java . io . InputStream ) } <nl> + * @ see # createOrUpdateAllFromJson ( Class , java . io . InputStream ) <nl> * / <nl> @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) <nl> public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , InputStream in ) throws IOException { <nl> @ @ - 832 , 7 + 832 , 7 @ @ public final class Realm implements Closeable { <nl> * @ return Created object or null if no json data was provided . <nl> * <nl> * @ throws RealmException if the mapping from JSON fails . <nl> - * @ see { @ link # createOrUpdateObjectFromJson ( Class , org . json . JSONObject ) } <nl> + * @ see # createOrUpdateObjectFromJson ( Class , org . json . JSONObject ) <nl> * / <nl> public < E extends RealmObject > E createObjectFromJson ( Class < E > clazz , JSONObject json ) { <nl> if ( clazz = = null | | json = = null ) { <nl> @ @ - 856 , 9 + 856 , 9 @ @ public final class Realm implements Closeable { <nl> * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param json { @ link org . json . JSONObject } with object data . <nl> * @ return Created or updated { @ link io . realm . RealmObject } . <nl> - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a <nl> + * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> - * @ see { @ link # createObjectFromJson ( Class , org . json . JSONObject ) } <nl> + * @ see # createObjectFromJson ( Class , org . json . JSONObject ) <nl> * / <nl> public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , JSONObject json ) { <nl> if ( clazz = = null | | json = = null ) { <nl> @ @ - 911 , 9 + 911 , 9 @ @ public final class Realm implements Closeable { <nl> * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param json String with object data in JSON format . <nl> * @ return Created or updated { @ link io . realm . RealmObject } . <nl> - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a <nl> + * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> - * @ see { @ link # createObjectFromJson ( Class , String ) } ) } <nl> + * @ see # createObjectFromJson ( Class , String ) } ) <nl> * / <nl> public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , String json ) { <nl> if ( clazz = = null | | json = = null | | json . length ( ) = = 0 ) { <nl> @ @ - 966 , 9 + 966 , 9 @ @ public final class Realm implements Closeable { <nl> * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param in Inputstream with object data in JSON format . <nl> * @ return Created or updated { @ link io . realm . RealmObject } . <nl> - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a <nl> + * @ throws java . lang . IllegalArgumentException if trying to update a class without a <nl> * { @ link io . realm . annotations . PrimaryKey } . <nl> - * @ see { @ link # createObjectFromJson ( Class , java . io . InputStream ) } <nl> + * @ see # createObjectFromJson ( Class , java . io . InputStream ) <nl> * / <nl> @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) <nl> public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , InputStream in ) throws IOException { <nl> @ @ - 1195 , 7 + 1195 , 7 @ @ public final class Realm implements Closeable { <nl> * @ return The new or updated RealmObject with all its properties backed by the Realm . <nl> * <nl> * @ throws java . lang . IllegalArgumentException if RealmObject is { @ code null } or doesn ' t have a Primary key defined . <nl> - * @ see { @ link # copyToRealm ( RealmObject ) } <nl> + * @ see # copyToRealm ( RealmObject ) <nl> * / <nl> public < E extends RealmObject > E copyToRealmOrUpdate ( E object ) { <nl> checkNotNullObject ( object ) ; <nl> @ @ - 1238 , 7 + 1238 , 7 @ @ public final class Realm implements Closeable { <nl> * @ return A list of all the new or updated RealmObjects . <nl> * <nl> * @ throws java . lang . IllegalArgumentException if RealmObject is { @ code null } or doesn ' t have a Primary key defined . <nl> - * @ see { @ link # copyToRealm ( Iterable ) } <nl> + * @ see # copyToRealm ( Iterable ) <nl> * / <nl> public < E extends RealmObject > List < E > copyToRealmOrUpdate ( Iterable < E > objects ) { <nl> if ( objects = = null ) { <nl> diff - - git a / realm / src / main / java / io / realm / RealmList . java b / realm / src / main / java / io / realm / RealmList . java <nl> index 0829dac . . 429c9d3 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / src / main / java / io / realm / RealmList . java <nl> @ @ - 146 , 8 + 146 , 8 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { <nl> * RealmObjects will be shifted so no null values are introduced . <nl> * <nl> * @ param oldPos Index of RealmObject to move . <nl> - * @ param newPos Target position . If newPos < oldPos the object at the location will be shifted <nl> - * to the right . If oldPos < newPos , indexes > oldPos will be shifted once to the <nl> + * @ param newPos Target position . If newPos & lt ; oldPos the object at the location will be shifted <nl> + * to the right . If oldPos & lt ; newPos , indexes & gt ; oldPos will be shifted once to the <nl> * left . <nl> * <nl> * @ throws java . lang . IndexOutOfBoundsException if any position is outside [ 0 , size ( ) [ . <nl> diff - - git a / realm / src / main / java / io / realm / RealmMigration . java b / realm / src / main / java / io / realm / RealmMigration . java <nl> index f6342b8 . . 5e1843a 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmMigration . java <nl> + + + b / realm / src / main / java / io / realm / RealmMigration . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ package io . realm ; <nl> * <nl> * < pre > <nl> * public class CustomMigration implements RealmMigration { <nl> - * @ Override <nl> + * \ @ Override <nl> * public long execute ( Realm realm , long version ) { <nl> * if ( version = = 0 ) { <nl> * / / Migrate from v0 to v1

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index cbc2a6d . . 2693f06 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 87 , 6 + 87 , 7 @ @ abstract class BaseRealm implements Closeable { 
 * thread . 
 * 
 * @ param autoRefresh { @ code true } will turn auto - refresh on , { @ code false } will turn it off . 
 + * @ throws IllegalStateException if called from a non - Looper thread . 
 * / 
 public void setAutoRefresh ( boolean autoRefresh ) { 
 checkIfValid ( ) ; 
 @ @ - 235 , 6 + 236 , 7 @ @ abstract class BaseRealm implements Closeable { 
 * @ param destination file to save the Realm to . 
 * @ param key a 64 - byte encryption key . 
 * @ throws java . io . IOException if any write operation fails . 
 + * @ throws IllegalArgumentException if destination argument is null . 
 * / 
 public void writeEncryptedCopyTo ( File destination , byte [ ] key ) throws java . io . IOException { 
 if ( destination = = null ) { 
 @ @ - 247 , 6 + 249 , 8 @ @ abstract class BaseRealm implements Closeable { 
 / * * 
 * Refreshes the Realm instance and all the RealmResults and RealmObjects instances coming from it . 
 * It also calls the listeners associated to the Realm instance . 
 + * 
 + * @ throws IllegalStateException if attempting to refresh from within a transaction . 
 * / 
 @ SuppressWarnings ( " UnusedDeclaration " ) 
 public void refresh ( ) { 
 @ @ - 389 , 6 + 393 , 8 @ @ abstract class BaseRealm implements Closeable { 
 * < p > 
 * It ' s important to always remember to close Realm instances when you ' re done with it in order not to leak memory , 
 * file descriptors or grow the size of Realm file out of measure . 
 + * 
 + * @ throws IllegalStateException if attempting to close from another thread . 
 * / 
 @ Override 
 public void close ( ) { 
 @ @ - 416 , 6 + 422 , 7 @ @ abstract class BaseRealm implements Closeable { 
 * Checks if the { @ link io . realm . Realm } instance has already been closed . 
 * 
 * @ return { @ code true } if closed , { @ code false } otherwise . 
 + * @ throws IllegalStateException if attempting to close from another thread . 
 * / 
 public boolean isClosed ( ) { 
 if ( this . threadId ! = Thread . currentThread ( ) . getId ( ) ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index d848cc3 . . f910b8a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package io . realm ; 
 import android . os . Looper ; 
 
 import io . realm . exceptions . RealmException ; 
 + import io . realm . exceptions . RealmIOException ; 
 import io . realm . internal . Table ; 
 import io . realm . internal . TableView ; 
 import rx . Observable ; 
 @ @ - 57 , 6 + 58 , 8 @ @ public final class DynamicRealm extends BaseRealm { 
 * 
 * @ return the DynamicRealm defined by the configuration . 
 * @ see RealmConfiguration for details on how to configure a Realm . 
 + * @ throws RealmIOException if an error happened when accessing the underlying Realm file . 
 + * @ throws IllegalArgumentException if { @ code configuration } argument is { @ code null } . 
 * / 
 public static DynamicRealm getInstance ( RealmConfiguration configuration ) { 
 if ( configuration = = null ) { 
 @ @ - 131 , 6 + 134 , 7 @ @ public final class DynamicRealm extends BaseRealm { 
 * during the transaction { @ link # cancelTransaction ( ) } will be called instead of { @ link # commitTransaction ( ) } . 
 * 
 * @ param transaction { @ link io . realm . DynamicRealm . Transaction } to execute . 
 + * @ throws IllegalArgumentException if the { @ code transaction } is { @ code null } . 
 * / 
 public void executeTransaction ( Transaction transaction ) { 
 if ( transaction = = null ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 89f4b70 . . 274f9ce 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 173 , 6 + 173 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ throws java . lang . NullPointerException if no default configuration has been defined . 
 * @ throws RealmMigrationNeededException if no migration has been provided by the default configuration and the 
 * RealmObject classes or version has has changed so a migration is required . 
 + * @ throws RealmIOException if an error happened when accessing the underlying Realm file . 
 * / 
 public static Realm getDefaultInstance ( ) { 
 if ( defaultConfiguration = = null ) { 
 @ @ - 188 , 6 + 189 , 8 @ @ public final class Realm extends BaseRealm { 
 * @ return an instance of the Realm class 
 * @ throws RealmMigrationNeededException if no migration has been provided by the configuration and the RealmObject 
 * classes or version has has changed so a migration is required . 
 + * @ throws RealmIOException if an error happened when accessing the underlying Realm file . 
 + * @ throws IllegalArgumentException if a null { @ link RealmConfiguration } is provided . 
 * @ see RealmConfiguration for details on how to configure a Realm . 
 * / 
 public static Realm getInstance ( RealmConfiguration configuration ) { 
 @ @ - 201 , 6 + 204 , 7 @ @ public final class Realm extends BaseRealm { 
 * Sets the { @ link io . realm . RealmConfiguration } used when calling { @ link # getDefaultInstance ( ) } . 
 * 
 * @ param configuration the { @ link io . realm . RealmConfiguration } to use as the default configuration . 
 + * @ throws IllegalArgumentException if a null { @ link RealmConfiguration } is provided . 
 * @ see RealmConfiguration for details on how to configure a Realm . 
 * / 
 public static void setDefaultConfiguration ( RealmConfiguration configuration ) { 
 @ @ - 333 , 6 + 337 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ param json array with object data . 
 * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 + * @ throws RealmException if unable to map JSON . 
 * @ see # createAllFromJson ( Class , org . json . JSONArray ) 
 * / 
 public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , JSONArray json ) { 
 @ @ - 381 , 6 + 386 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ param json string with an array of JSON objects . 
 * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 + * @ throws RealmException if unable to create a JSON array from the json string . 
 * @ see # createAllFromJson ( Class , String ) 
 * / 
 public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , String json ) { 
 @ @ - 435 , 6 + 441 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ param in the InputStream with a list of object data in JSON format . 
 * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 + * @ throws RealmException if unable to read JSON . 
 * @ see # createOrUpdateAllFromJson ( Class , java . io . InputStream ) 
 * / 
 @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) 
 @ @ - 495 , 6 + 502 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ return created or updated { @ link io . realm . RealmObject } . 
 * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 + * @ throws RealmException if JSON data cannot be mapped . 
 * @ see # createObjectFromJson ( Class , org . json . JSONObject ) 
 * / 
 public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , JSONObject json ) { 
 @ @ - 547 , 6 + 555 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ return created or updated { @ link io . realm . RealmObject } . 
 * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 + * @ throws RealmException if JSON object cannot be mapped from the string parameter . 
 * @ see # createObjectFromJson ( Class , String ) 
 * / 
 public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , String json ) { 
 @ @ - 619 , 6 + 628 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ return created or updated { @ link io . realm . RealmObject } . 
 * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 + * @ throws RealmException if failure to read JSON . 
 * @ see # createObjectFromJson ( Class , java . io . InputStream ) 
 * / 
 @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) 
 @ @ - 1045 , 6 + 1055 , 7 @ @ public final class Realm extends BaseRealm { 
 * called instead of { @ link # commitTransaction ( ) } . 
 * 
 * @ param transaction the { @ link io . realm . Realm . Transaction } to execute . 
 + * @ throws IllegalArgumentException if the { @ code transaction } is { @ code null } . 
 * / 
 public void executeTransaction ( Transaction transaction ) { 
 if ( transaction = = null ) { 
 @ @ - 1071 , 6 + 1082 , 7 @ @ public final class Realm extends BaseRealm { 
 * @ param transaction { @ link io . realm . Realm . Transaction } to execute . 
 * @ param callback optional , to receive the result of this query . 
 * @ return a { @ link RealmAsyncTask } representing a cancellable task . 
 + * @ throws IllegalArgumentException if the { @ code transaction } is { @ code null } , or if the realm is opened from another thread . 
 * / 
 public RealmAsyncTask executeTransaction ( final Transaction transaction , final Transaction . Callback callback ) { 
 if ( transaction = = null ) 
 @ @ - 1283 , 6 + 1295 , 7 @ @ public final class Realm extends BaseRealm { 
 * from library or project dependencies . Realm classes in these should be exposed using their own module . 
 * 
 * @ return the default Realm module or null if no default module exists . 
 + * @ throws RealmException if unable to create an instance of the module . 
 * @ see io . realm . RealmConfiguration . Builder # setModules ( Object , Object . . . ) 
 * / 
 public static Object getDefaultModule ( ) {

NEAREST DIFF:
diff - - git a / realm / build . gradle b / realm / build . gradle 
 index 7bc382f . . ec34def 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 59 , 7 + 59 , 7 @ @ android . libraryVariants . all { variant - > 
 } 
 } 
 
 - task androidJar ( type : Jar , dependsOn : ' assemble ' ) { 
 + task androidJar ( type : Jar , dependsOn : [ ' assemble ' , ' bundleJavadocRelease ' ] ) { 
 group ' Build ' 
 description ' Generates a jar file continaining Realm and its annotation processor ' 
 from zipTree ( ' build / intermediates / bundles / release / classes . jar ' ) 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index c3f576a . . 22baba9 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 686 , 9 + 686 , 9 @ @ public final class Realm implements Closeable { 
 * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param json Array with object data . 
 * 
 - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a 
 + * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 - * @ see { @ link # createAllFromJson ( Class , org . json . JSONArray ) } . 
 + * @ see # createAllFromJson ( Class , org . json . JSONArray ) 
 * / 
 public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , JSONArray json ) { 
 if ( clazz = = null | | json = = null ) { 
 @ @ - 739 , 9 + 739 , 9 @ @ public final class Realm implements Closeable { 
 * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param json String with an array of JSON objects . 
 * 
 - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a 
 + * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 - * @ see { @ link # createAllFromJson ( Class , String ) } 
 + * @ see # createAllFromJson ( Class , String ) 
 * / 
 public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , String json ) { 
 if ( clazz = = null | | json = = null | | json . length ( ) = = 0 ) { 
 @ @ - 797 , 9 + 797 , 9 @ @ public final class Realm implements Closeable { 
 * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param in InputStream with a list of object data in JSON format . 
 * 
 - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a 
 + * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 - * @ see { @ link # createOrUpdateAllFromJson ( Class , java . io . InputStream ) } 
 + * @ see # createOrUpdateAllFromJson ( Class , java . io . InputStream ) 
 * / 
 @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) 
 public < E extends RealmObject > void createOrUpdateAllFromJson ( Class < E > clazz , InputStream in ) throws IOException { 
 @ @ - 832 , 7 + 832 , 7 @ @ public final class Realm implements Closeable { 
 * @ return Created object or null if no json data was provided . 
 * 
 * @ throws RealmException if the mapping from JSON fails . 
 - * @ see { @ link # createOrUpdateObjectFromJson ( Class , org . json . JSONObject ) } 
 + * @ see # createOrUpdateObjectFromJson ( Class , org . json . JSONObject ) 
 * / 
 public < E extends RealmObject > E createObjectFromJson ( Class < E > clazz , JSONObject json ) { 
 if ( clazz = = null | | json = = null ) { 
 @ @ - 856 , 9 + 856 , 9 @ @ public final class Realm implements Closeable { 
 * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param json { @ link org . json . JSONObject } with object data . 
 * @ return Created or updated { @ link io . realm . RealmObject } . 
 - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a 
 + * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 - * @ see { @ link # createObjectFromJson ( Class , org . json . JSONObject ) } 
 + * @ see # createObjectFromJson ( Class , org . json . JSONObject ) 
 * / 
 public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , JSONObject json ) { 
 if ( clazz = = null | | json = = null ) { 
 @ @ - 911 , 9 + 911 , 9 @ @ public final class Realm implements Closeable { 
 * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param json String with object data in JSON format . 
 * @ return Created or updated { @ link io . realm . RealmObject } . 
 - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a 
 + * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 - * @ see { @ link # createObjectFromJson ( Class , String ) } ) } 
 + * @ see # createObjectFromJson ( Class , String ) } ) 
 * / 
 public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , String json ) { 
 if ( clazz = = null | | json = = null | | json . length ( ) = = 0 ) { 
 @ @ - 966 , 9 + 966 , 9 @ @ public final class Realm implements Closeable { 
 * @ param clazz Type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param in Inputstream with object data in JSON format . 
 * @ return Created or updated { @ link io . realm . RealmObject } . 
 - * @ throws { @ link java . lang . IllegalArgumentException } if trying to update a class without a 
 + * @ throws java . lang . IllegalArgumentException if trying to update a class without a 
 * { @ link io . realm . annotations . PrimaryKey } . 
 - * @ see { @ link # createObjectFromJson ( Class , java . io . InputStream ) } 
 + * @ see # createObjectFromJson ( Class , java . io . InputStream ) 
 * / 
 @ TargetApi ( Build . VERSION _ CODES . HONEYCOMB ) 
 public < E extends RealmObject > E createOrUpdateObjectFromJson ( Class < E > clazz , InputStream in ) throws IOException { 
 @ @ - 1195 , 7 + 1195 , 7 @ @ public final class Realm implements Closeable { 
 * @ return The new or updated RealmObject with all its properties backed by the Realm . 
 * 
 * @ throws java . lang . IllegalArgumentException if RealmObject is { @ code null } or doesn ' t have a Primary key defined . 
 - * @ see { @ link # copyToRealm ( RealmObject ) } 
 + * @ see # copyToRealm ( RealmObject ) 
 * / 
 public < E extends RealmObject > E copyToRealmOrUpdate ( E object ) { 
 checkNotNullObject ( object ) ; 
 @ @ - 1238 , 7 + 1238 , 7 @ @ public final class Realm implements Closeable { 
 * @ return A list of all the new or updated RealmObjects . 
 * 
 * @ throws java . lang . IllegalArgumentException if RealmObject is { @ code null } or doesn ' t have a Primary key defined . 
 - * @ see { @ link # copyToRealm ( Iterable ) } 
 + * @ see # copyToRealm ( Iterable ) 
 * / 
 public < E extends RealmObject > List < E > copyToRealmOrUpdate ( Iterable < E > objects ) { 
 if ( objects = = null ) { 
 diff - - git a / realm / src / main / java / io / realm / RealmList . java b / realm / src / main / java / io / realm / RealmList . java 
 index 0829dac . . 429c9d3 100644 
 - - - a / realm / src / main / java / io / realm / RealmList . java 
 + + + b / realm / src / main / java / io / realm / RealmList . java 
 @ @ - 146 , 8 + 146 , 8 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { 
 * RealmObjects will be shifted so no null values are introduced . 
 * 
 * @ param oldPos Index of RealmObject to move . 
 - * @ param newPos Target position . If newPos < oldPos the object at the location will be shifted 
 - * to the right . If oldPos < newPos , indexes > oldPos will be shifted once to the 
 + * @ param newPos Target position . If newPos & lt ; oldPos the object at the location will be shifted 
 + * to the right . If oldPos & lt ; newPos , indexes & gt ; oldPos will be shifted once to the 
 * left . 
 * 
 * @ throws java . lang . IndexOutOfBoundsException if any position is outside [ 0 , size ( ) [ . 
 diff - - git a / realm / src / main / java / io / realm / RealmMigration . java b / realm / src / main / java / io / realm / RealmMigration . java 
 index f6342b8 . . 5e1843a 100644 
 - - - a / realm / src / main / java / io / realm / RealmMigration . java 
 + + + b / realm / src / main / java / io / realm / RealmMigration . java 
 @ @ - 26 , 7 + 26 , 7 @ @ package io . realm ; 
 * 
 * < pre > 
 * public class CustomMigration implements RealmMigration { 
 - * @ Override 
 + * \ @ Override 
 * public long execute ( Realm realm , long version ) { 
 * if ( version = = 0 ) { 
 * / / Migrate from v0 to v1
