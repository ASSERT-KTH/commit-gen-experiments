BLEU SCORE: 0.05341087579952926

TEST MSG: fix warnings reported by ErrorProne
GENERATED MSG: Improve code formatting .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java <nl> index bb873d1 . . 8e81f62 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java <nl> @ @ - 796 , 6 + 796 , 7 @ @ public class ManagedOrderedRealmCollectionTests extends CollectionTests { <nl> case SORT _ 2FIELDS : <nl> case SORT _ MULTI : <nl> expected = UnsupportedOperationException . class ; <nl> + break ; <nl> default : <nl> break ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> index 809dbdf . . 9cd511e 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> @ @ - 760 , 13 + 760 , 16 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> case REMOVE _ ALL : <nl> case RETAIN _ ALL : <nl> expected = UnsupportedOperationException . class ; <nl> + break ; <nl> + default : <nl> + / / use default exception <nl> } <nl> } <nl> <nl> try { <nl> switch ( method ) { <nl> case DELETE _ ALL : collection . deleteAllFromRealm ( ) ; break ; <nl> - case ADD _ OBJECT : collection . add ( new AllJavaTypes ( ) ) ; <nl> + case ADD _ OBJECT : collection . add ( new AllJavaTypes ( ) ) ; break ; <nl> case ADD _ ALL _ OBJECTS : collection . addAll ( Collections . singletonList ( new AllJavaTypes ( ) ) ) ; break ; <nl> case CLEAR : collection . clear ( ) ; break ; <nl> case REMOVE _ OBJECT : collection . remove ( new AllJavaTypes ( ) ) ; break ; <nl> @ @ - 847 , 6 + 850 , 9 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> case REMOVE _ ALL : <nl> case RETAIN _ ALL : <nl> expected = UnsupportedOperationException . class ; <nl> + break ; <nl> + default : <nl> + / / use default exception <nl> } <nl> } <nl> <nl> @ @ - 854 , 8 + 860 , 8 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> switch ( method ) { <nl> case ADD _ OBJECT : collection . add ( new AllJavaTypes ( ) ) ; break ; <nl> case ADD _ ALL _ OBJECTS : collection . addAll ( Collections . singletonList ( new AllJavaTypes ( ) ) ) ; break ; <nl> - case CLEAR : collection . clear ( ) ; <nl> - case CONTAINS : <nl> + case CLEAR : collection . clear ( ) ; break ; <nl> + case CONTAINS : collection . contains ( tempObject ) ; break ; <nl> case CONTAINS _ ALL : collection . containsAll ( Collections . singletonList ( tempObject ) ) ; break ; <nl> case EQUALS : <nl> / / noinspection ResultOfMethodCallIgnored <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java <nl> index fd7d5d8 . . 8e3f499 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java <nl> @ @ - 564 , 7 + 564 , 8 @ @ public class NotificationsTest { <nl> <nl> / / Starts background looper and let it hang . <nl> ExecutorService executorService = Executors . newSingleThreadExecutor ( ) ; <nl> - executorService . submit ( new Runnable ( ) { <nl> + / / noinspection unused <nl> + final Future < ? > future = executorService . submit ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> Looper . prepare ( ) ; / / Fake background thread with a looper , eg . a IntentService . <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java <nl> index ac34ced . . 534730b 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java <nl> @ @ - 528 , 6 + 528 , 11 @ @ public class OrderedRealmCollectionIteratorTests extends CollectionTests { <nl> <nl> @ Test <nl> public void listIterator _ deleteManagedObjectIndirectly ( ) { <nl> + if ( skipTest ( CollectionClass . REALMRESULTS _ SNAPSHOT _ LIST _ BASE , <nl> + CollectionClass . REALMRESULTS _ SNAPSHOT _ RESULTS _ BASE ) ) { <nl> + return ; <nl> + } <nl> + <nl> realm . beginTransaction ( ) ; <nl> ListIterator < AllJavaTypes > it = collection . listIterator ( ) ; <nl> it . next ( ) ; <nl> @ @ - 542 , 6 + 547 , 9 @ @ public class OrderedRealmCollectionIteratorTests extends CollectionTests { <nl> case UNMANAGED _ REALMLIST : <nl> assertEquals ( TEST _ SIZE , collection . size ( ) ) ; <nl> break ; <nl> + default : <nl> + fail ( ) ; <nl> + return ; <nl> } <nl> it . previous ( ) ; <nl> AllJavaTypes types = it . next ( ) ; / / Iterator can still access the deleted object <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> index d722f02 . . 5a9ef34 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> @ @ - 369 , 9 + 369 , 9 @ @ public class OrderedRealmCollectionTests extends CollectionTests { <nl> case ADD _ ALL _ INDEX : collection . addAll ( 1 , Collections . singleton ( new AllJavaTypes ( ) ) ) ; break ; <nl> case GET _ INDEX : collection . get ( 1 ) ; break ; <nl> case LIST _ ITERATOR _ INDEX : collection . listIterator ( 1 ) ; break ; <nl> - case REMOVE _ INDEX : collection . remove ( 1 ) ; <nl> - case SET : collection . set ( 1 , new AllJavaTypes ( ) ) ; <nl> - case SUBLIST : collection . subList ( 1 , 2 ) ; <nl> + case REMOVE _ INDEX : collection . remove ( 1 ) ; break ; <nl> + case SET : collection . set ( 1 , new AllJavaTypes ( ) ) ; break ; <nl> + case SUBLIST : collection . subList ( 1 , 2 ) ; break ; <nl> <nl> / / Cannot fail with IndexOutOfBounds <nl> case FIRST : <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java <nl> index 99375d1 . . 1085a37 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java <nl> @ @ - 106 , 6 + 106 , 7 @ @ public class RealmCacheTests { <nl> realm . close ( ) ; <nl> try { <nl> Realm . getInstance ( configB ) ; / / Tries to open with key 2 . <nl> + fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; <nl> / / Deletes Realm so key 2 works . This should work as a Realm shouldn ' t be cached <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java <nl> index 718abc0 . . 351024d 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java <nl> @ @ - 37 , 6 + 37 , 7 @ @ import org . junit . runner . RunWith ; <nl> import java . io . ByteArrayInputStream ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . nio . charset . Charset ; <nl> import java . util . Arrays ; <nl> import java . util . Calendar ; <nl> import java . util . Date ; <nl> @ @ - 66 , 6 + 67 , 8 @ @ import static org . junit . Assume . assumeThat ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class RealmJsonTests { <nl> + private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; <nl> + <nl> @ Rule <nl> public final TestRealmConfigurationFactory configFactory = new TestRealmConfigurationFactory ( ) ; <nl> <nl> @ @ - 87 , 7 + 90 , 7 @ @ public class RealmJsonTests { <nl> } <nl> <nl> private InputStream convertJsonObjectToStream ( JSONObject obj ) { <nl> - return new ByteArrayInputStream ( obj . toString ( ) . getBytes ( ) ) ; <nl> + return new ByteArrayInputStream ( obj . toString ( ) . getBytes ( UTF _ 8 ) ) ; <nl> } <nl> <nl> / / Asserts that the list of AllTypesPrimaryKey objects where inserted and updated properly . <nl> @ @ - 198 , 7 + 201 , 7 @ @ public class RealmJsonTests { <nl> json . put ( " columnFloat " , 1 . 23F ) ; <nl> json . put ( " columnDouble " , 1 . 23D ) ; <nl> json . put ( " columnBoolean " , true ) ; <nl> - json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) ) ) ; <nl> + json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) , UTF _ 8 ) ) ; <nl> <nl> realm . beginTransaction ( ) ; <nl> realm . createObjectFromJson ( AllTypes . class , json ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> index cd9d355 . . cd4e057 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> @ @ - 746 , 8 + 746 , 8 @ @ public class RealmListTests extends CollectionTests { <nl> case SORT : results . sort ( CyclicType . FIELD _ NAME ) ; break ; <nl> case SORT _ FIELD : results . sort ( CyclicType . FIELD _ NAME , Sort . ASCENDING ) ; break ; <nl> case SORT _ 2FIELDS : results . sort ( CyclicType . FIELD _ NAME , Sort . ASCENDING , CyclicType . FIELD _ DATE , Sort . DESCENDING ) ; break ; <nl> - case SORT _ MULTI : results . sort ( new String [ ] { CyclicType . FIELD _ NAME , CyclicType . FIELD _ DATE } , new Sort [ ] { Sort . ASCENDING , Sort . DESCENDING } ) ; <nl> - case CREATE _ SNAPSHOT : results . createSnapshot ( ) ; <nl> + case SORT _ MULTI : results . sort ( new String [ ] { CyclicType . FIELD _ NAME , CyclicType . FIELD _ DATE } , new Sort [ ] { Sort . ASCENDING , Sort . DESCENDING } ) ; break ; <nl> + case CREATE _ SNAPSHOT : results . createSnapshot ( ) ; break ; <nl> } <nl> fail ( method + " should have thrown an Exception " ) ; <nl> } catch ( IllegalStateException ignored ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> index a29dbee . . 01745e6 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> @ @ - 111 , 7 + 111 , 7 @ @ public class RealmObjectSchemaTests { <nl> BOOLEAN ( Boolean . class ) , PRIMITIVE _ BOOLEAN ( boolean . class ) , <nl> DATE ( Date . class ) ; <nl> <nl> - Class < ? > clazz ; <nl> + private final Class < ? > clazz ; <nl> <nl> public Class < ? > getType ( ) { <nl> return clazz ; <nl> @ @ - 129 , 7 + 129 , 7 @ @ public class RealmObjectSchemaTests { <nl> OBJECT ( RealmObject . class ) , <nl> LIST ( RealmList . class ) ; <nl> <nl> - Class < ? > clazz ; <nl> + private final Class < ? > clazz ; <nl> <nl> public Class < ? > getType ( ) { <nl> return clazz ; <nl> @ @ - 148 , 7 + 148 , 7 @ @ public class RealmObjectSchemaTests { <nl> LONG ( Long . class ) , PRIMITIVE _ LONG ( long . class ) , <nl> BYTE ( Byte . class ) , PRIMITIVE _ BYTE ( byte . class ) ; <nl> <nl> - Class < ? > clazz ; <nl> + private final Class < ? > clazz ; <nl> <nl> public Class < ? > getType ( ) { <nl> return clazz ; <nl> @ @ - 168 , 7 + 168 , 7 @ @ public class RealmObjectSchemaTests { <nl> OBJECT ( RealmObject . class ) , <nl> LIST ( RealmList . class ) ; <nl> <nl> - Class < ? > clazz ; <nl> + private final Class < ? > clazz ; <nl> <nl> public Class < ? > getType ( ) { <nl> return clazz ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> index c1939d2 . . b10f607 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> @ @ - 99 , 14 + 99 , 14 @ @ public class RealmQueryTests { <nl> allTypes . setColumnBinary ( new byte [ ] { 1 , 2 , 3 } ) ; <nl> allTypes . setColumnDate ( new Date ( DECADE _ MILLIS * ( i - ( dataSize / 2 ) ) ) ) ; <nl> allTypes . setColumnDouble ( 3 . 1415 ) ; <nl> - allTypes . setColumnFloat ( 1 . 234567f + i ) ; <nl> + allTypes . setColumnFloat ( 1 . 2345f + i ) ; <nl> allTypes . setColumnString ( " test data " + i ) ; <nl> allTypes . setColumnLong ( i ) ; <nl> NonLatinFieldNames nonLatinFieldNames = testRealm . createObject ( NonLatinFieldNames . class ) ; <nl> nonLatinFieldNames . set 델 타 ( i ) ; <nl> nonLatinFieldNames . set Δ έ λ τ α ( i ) ; <nl> - nonLatinFieldNames . set 베 타 ( 1 . 234567f + i ) ; <nl> - nonLatinFieldNames . set Β ή τ α ( 1 . 234567f + i ) ; <nl> + nonLatinFieldNames . set 베 타 ( 1 . 2345f + i ) ; <nl> + nonLatinFieldNames . set Β ή τ α ( 1 . 2345f + i ) ; <nl> <nl> Dog dog = testRealm . createObject ( Dog . class ) ; <nl> dog . setAge ( i ) ; <nl> @ @ - 137 , 8 + 137 , 8 @ @ public class RealmQueryTests { <nl> noPrimaryKeyNullTypes . setFieldIntegerNotNull ( i ) ; <nl> noPrimaryKeyNullTypes . setFieldLongNull ( ( i % 3 ) = = 0 ? null : ( long ) i ) ; <nl> noPrimaryKeyNullTypes . setFieldLongNotNull ( ( long ) i ) ; <nl> - noPrimaryKeyNullTypes . setFieldFloatNull ( ( i % 3 ) = = 0 ? null : 1 . 234567f + i ) ; <nl> - noPrimaryKeyNullTypes . setFieldFloatNotNull ( 1 . 234567f + i ) ; <nl> + noPrimaryKeyNullTypes . setFieldFloatNull ( ( i % 3 ) = = 0 ? null : 1 . 2345f + i ) ; <nl> + noPrimaryKeyNullTypes . setFieldFloatNotNull ( 1 . 2345f + i ) ; <nl> noPrimaryKeyNullTypes . setFieldDoubleNull ( ( i % 3 ) = = 0 ? null : 3 . 1415 + i ) ; <nl> noPrimaryKeyNullTypes . setFieldDoubleNotNull ( 3 . 1415 + i ) ; <nl> noPrimaryKeyNullTypes . setFieldDateNull ( ( i % 3 ) = = 0 ? null : new Date ( DECADE _ MILLIS * ( i - ( dataSize / 2 ) ) ) ) ; <nl> @ @ - 467 , 14 + 467 , 14 @ @ public class RealmQueryTests { <nl> populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; <nl> <nl> RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) <nl> - . greaterThan ( AllTypes . FIELD _ FLOAT , 10 . 234567f ) . findAll ( ) ; <nl> + . greaterThan ( AllTypes . FIELD _ FLOAT , 10 . 2345f ) . findAll ( ) ; <nl> assertEquals ( TEST _ OBJECTS _ COUNT - 10 , resultList . size ( ) ) ; <nl> <nl> resultList = realm . where ( AllTypes . class ) . beginsWith ( AllTypes . FIELD _ STRING , " test data 1 " ) <nl> - . greaterThan ( AllTypes . FIELD _ FLOAT , 50 . 234567f ) . findAll ( ) ; <nl> - assertEquals ( TEST _ OBJECTS _ COUNT - 100 , resultList . size ( ) ) ; <nl> + . greaterThan ( AllTypes . FIELD _ FLOAT , 150 . 2345f ) . findAll ( ) ; <nl> + assertEquals ( TEST _ OBJECTS _ COUNT - 150 , resultList . size ( ) ) ; <nl> <nl> - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . greaterThan ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) ; <nl> + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . greaterThan ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) ; <nl> resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 20 ) . findAll ( ) ; <nl> assertEquals ( 10 , resultList . size ( ) ) ; <nl> } <nl> @ @ - 504 , 15 + 504 , 15 @ @ public class RealmQueryTests { <nl> populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; <nl> <nl> RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) <nl> - . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 10 . 234567f ) . findAll ( ) ; <nl> + . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 10 . 2345f ) . findAll ( ) ; <nl> assertEquals ( TEST _ OBJECTS _ COUNT - 9 , resultList . size ( ) ) ; <nl> <nl> resultList = realm . where ( AllTypes . class ) . beginsWith ( AllTypes . FIELD _ STRING , " test data 1 " ) <nl> - . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 50 . 234567f ) . findAll ( ) ; <nl> + . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 50 . 2345f ) . findAll ( ) ; <nl> assertEquals ( TEST _ OBJECTS _ COUNT - 100 , resultList . size ( ) ) ; <nl> <nl> RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) <nl> - . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) ; <nl> + . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) ; <nl> query = query . between ( AllTypes . FIELD _ LONG , 1 , 20 ) ; <nl> <nl> resultList = query . beginsWith ( AllTypes . FIELD _ STRING , " test data 15 " ) . findAll ( ) ; <nl> @ @ - 541 , 7 + 541 , 7 @ @ public class RealmQueryTests { <nl> public void or ( ) { <nl> populateTestRealm ( realm , 200 ) ; <nl> <nl> - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) ; <nl> + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) ; <nl> RealmResults < AllTypes > resultList = query . or ( ) . between ( AllTypes . FIELD _ LONG , 1 , 20 ) . findAll ( ) ; <nl> assertEquals ( 21 , resultList . size ( ) ) ; <nl> <nl> @ @ - 559 , 12 + 559 , 12 @ @ public class RealmQueryTests { <nl> <nl> @ Test ( expected = UnsupportedOperationException . class ) <nl> public void or _ missingFilterBefore ( ) { <nl> - realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; <nl> + realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; <nl> } <nl> <nl> @ Test ( expected = UnsupportedOperationException . class ) <nl> public void or _ missingFilterAfter ( ) { <nl> - realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; <nl> + realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 608 , 11 + 608 , 11 @ @ public class RealmQueryTests { <nl> public void and _ implicit ( ) { <nl> populateTestRealm ( realm , 200 ) ; <nl> <nl> - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) ; <nl> + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) ; <nl> RealmResults < AllTypes > resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 10 ) . findAll ( ) ; <nl> assertEquals ( 0 , resultList . size ( ) ) ; <nl> <nl> - query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 81 . 234567f ) ; <nl> + query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 81 . 2345f ) ; <nl> resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 100 ) . findAll ( ) ; <nl> assertEquals ( 1 , resultList . size ( ) ) ; <nl> } <nl> @ @ - 623 , 9 + 623 , 9 @ @ public class RealmQueryTests { <nl> populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; <nl> <nl> RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) . <nl> - lessThan ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; <nl> + lessThan ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; <nl> assertEquals ( 30 , resultList . size ( ) ) ; <nl> - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . lessThan ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) ; <nl> + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . lessThan ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) ; <nl> resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 10 ) . findAll ( ) ; <nl> assertEquals ( 10 , resultList . size ( ) ) ; <nl> } <nl> @ @ - 654 , 9 + 654 , 9 @ @ public class RealmQueryTests { <nl> populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; <nl> <nl> RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) <nl> - . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; <nl> + . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; <nl> assertEquals ( 31 , resultList . size ( ) ) ; <nl> - resultList = realm . where ( AllTypes . class ) . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) <nl> + resultList = realm . where ( AllTypes . class ) . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) <nl> . between ( AllTypes . FIELD _ LONG , 11 , 20 ) . findAll ( ) ; <nl> assertEquals ( 10 , resultList . size ( ) ) ; <nl> } <nl> @ @ - 684 , 7 + 684 , 7 @ @ public class RealmQueryTests { <nl> populateTestRealm ( realm , 200 ) ; <nl> <nl> RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) <nl> - . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; <nl> + . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; <nl> assertEquals ( 1 , resultList . size ( ) ) ; <nl> resultList = realm . where ( AllTypes . class ) . greaterThan ( AllTypes . FIELD _ FLOAT , 11 . 0f ) <nl> . equalTo ( AllTypes . FIELD _ LONG , 10 ) . findAll ( ) ; <nl> @ @ - 843 , 13 + 843 , 13 @ @ public class RealmQueryTests { <nl> fail ( ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> - RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 234567f + 1 } ) . findAll ( ) ; <nl> + RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 2345f + 1 } ) . findAll ( ) ; <nl> assertEquals ( 1 , resultList . size ( ) ) ; <nl> - resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 234567f + 2 } ) . findAll ( ) ; <nl> + resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 2345f + 2 } ) . findAll ( ) ; <nl> assertEquals ( 1 , resultList . size ( ) ) ; <nl> - resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 234567f + 1 , 1 . 234567f + 2 } ) . findAll ( ) ; <nl> + resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 2345f + 1 , 1 . 2345f + 2 } ) . findAll ( ) ; <nl> assertEquals ( 2 , resultList . size ( ) ) ; <nl> - resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( targetField , new Float [ ] { 1 . 234567f + 1 , 1 . 234567f + 2 } ) . findAll ( ) ; <nl> + resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( targetField , new Float [ ] { 1 . 2345f + 1 , 1 . 2345f + 2 } ) . findAll ( ) ; <nl> assertEquals ( 198 , resultList . size ( ) ) ; <nl> } <nl> <nl> @ @ - 1013 , 7 + 1013 , 7 @ @ public class RealmQueryTests { <nl> public void in _ floatNotNull ( ) { <nl> doTestForInFloat ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NOT _ NULL ) ; <nl> try { <nl> - realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NOT _ NULL , new Float [ ] { 1 . 234567f + 1 , null , 1 . 234567f + 2 } ) . findAll ( ) ; <nl> + realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NOT _ NULL , new Float [ ] { 1 . 2345f + 1 , null , 1 . 2345f + 2 } ) . findAll ( ) ; <nl> fail ( ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> @ @ - 1022 , 7 + 1022 , 7 @ @ public class RealmQueryTests { <nl> @ Test <nl> public void in _ floatNull ( ) { <nl> doTestForInFloat ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NULL ) ; <nl> - RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NULL , new Float [ ] { 1 . 234567f + 1 , null , 1 . 234567f + 2 } ) . findAll ( ) ; <nl> + RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NULL , new Float [ ] { 1 . 2345f + 1 , null , 1 . 2345f + 2 } ) . findAll ( ) ; <nl> assertEquals ( 131 , resultList . size ( ) ) ; <nl> } <nl> <nl> @ @ - 1103 , 11 + 1103 , 11 @ @ public class RealmQueryTests { <nl> . notEqualTo ( AllTypes . FIELD _ LONG , 31 ) . findAll ( ) ; <nl> assertEquals ( TEST _ OBJECTS _ COUNT - 1 , resultList . size ( ) ) ; <nl> <nl> - resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) <nl> + resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) <nl> . equalTo ( AllTypes . FIELD _ LONG , 10 ) . findAll ( ) ; <nl> assertEquals ( 0 , resultList . size ( ) ) ; <nl> <nl> - resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) <nl> + resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) <nl> . equalTo ( AllTypes . FIELD _ LONG , 1 ) . findAll ( ) ; <nl> assertEquals ( 1 , resultList . size ( ) ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> index 7894642 . . 4b4b690 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> @ @ - 128 , 10 + 128 , 10 @ @ public class RealmResultsTests extends CollectionTests { <nl> for ( CollectionMutatorMethod method : CollectionMutatorMethod . values ( ) ) { <nl> try { <nl> switch ( method ) { <nl> - case ADD _ OBJECT : collection . add ( new AllTypes ( ) ) ; <nl> + case ADD _ OBJECT : collection . add ( new AllTypes ( ) ) ; break ; <nl> case ADD _ ALL _ OBJECTS : collection . addAll ( Collections . singletonList ( new AllTypes ( ) ) ) ; break ; <nl> case CLEAR : collection . clear ( ) ; break ; <nl> - case REMOVE _ OBJECT : collection . remove ( new AllTypes ( ) ) ; <nl> + case REMOVE _ OBJECT : collection . remove ( new AllTypes ( ) ) ; break ; <nl> case REMOVE _ ALL : collection . removeAll ( Collections . singletonList ( new AllTypes ( ) ) ) ; break ; <nl> case RETAIN _ ALL : collection . retainAll ( Collections . singletonList ( new AllTypes ( ) ) ) ; break ; <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index a4ddd7f . . 4ce3c83 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 200 , 6 + 200 , 7 @ @ public class RealmTests { <nl> . directory ( folder ) <nl> . name ( REALM _ FILE ) <nl> . build ( ) ) ; <nl> + fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; <nl> } <nl> @ @ - 216 , 6 + 217 , 7 @ @ public class RealmTests { <nl> <nl> try { <nl> Realm . getInstance ( new RealmConfiguration . Builder ( context ) . directory ( folder ) . name ( REALM _ FILE ) . build ( ) ) ; <nl> + fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; <nl> } <nl> @ @ - 3554 , 7 + 3556 , 7 @ @ public class RealmTests { <nl> Realm realm = Realm . getInstance ( realmConfig ) ; <nl> bgRealm . set ( realm ) ; <nl> bgRealmOpened . countDown ( ) ; <nl> - bgRealmWaitResult . set ( new Boolean ( realm . waitForChange ( ) ) ) ; <nl> + bgRealmWaitResult . set ( realm . waitForChange ( ) ) ; <nl> realm . close ( ) ; <nl> bgRealmClosed . countDown ( ) ; <nl> } <nl> @ @ - 3572 , 7 + 3574 , 7 @ @ public class RealmTests { <nl> / / Now we ' ll stop realm from waiting . <nl> bgRealm . get ( ) . stopWaitForChange ( ) ; <nl> TestHelper . awaitOrFail ( bgRealmClosed ) ; <nl> - assertFalse ( bgRealmWaitResult . get ( ) . booleanValue ( ) ) ; <nl> + assertFalse ( bgRealmWaitResult . get ( ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> index c219ab9 . . e3150ac 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> @ @ - 24 , 13 + 24 , 13 @ @ import android . util . Base64 ; <nl> import org . json . JSONException ; <nl> import org . json . JSONObject ; <nl> import org . junit . Before ; <nl> - import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . nio . charset . Charset ; <nl> import java . util . Date ; <nl> import java . util . concurrent . CountDownLatch ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> @ @ - 54 , 6 + 54 , 8 @ @ import static org . junit . Assume . assumeThat ; <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class TypeBasedNotificationsTests { <nl> <nl> + private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; <nl> + <nl> @ Rule <nl> public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> @ Rule <nl> @ @ - 321 , 7 + 323 , 7 @ @ public class TypeBasedNotificationsTests { <nl> json . put ( " columnFloat " , 1 . 23f ) ; <nl> json . put ( " columnDouble " , 1 . 23d ) ; <nl> json . put ( " columnBoolean " , true ) ; <nl> - json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) ) ) ; <nl> + json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) , UTF _ 8 ) ) ; <nl> <nl> realm . beginTransaction ( ) ; <nl> final AllTypes objectFromJson = realm . createObjectFromJson ( AllTypes . class , json ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java <nl> index b812383 . . 704deb9 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import java . util . UUID ; <nl> import java . util . concurrent . CountDownLatch ; <nl> import java . util . concurrent . ExecutorService ; <nl> import java . util . concurrent . Executors ; <nl> + import java . util . concurrent . Future ; <nl> import java . util . concurrent . ThreadFactory ; <nl> <nl> import io . realm . Realm ; <nl> @ @ - 108 , 7 + 109 , 8 @ @ public class RunInLooperThread extends TestRealmConfigurationFactory { <nl> return new Thread ( runnable , threadName ) ; <nl> } <nl> } ) ; <nl> - executorService . submit ( new Runnable ( ) { <nl> + / / noinspection unused <nl> + final Future < ? > submit = executorService . submit ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> Looper . prepare ( ) ; <nl> diff - - git a / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java b / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java <nl> index f8737f2 . . 54e69d4 100644 <nl> - - - a / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java <nl> + + + b / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import com . opencsv . CSVWriter ; <nl> import java . io . File ; <nl> import java . io . FileWriter ; <nl> import java . io . IOException ; <nl> + import java . nio . charset . Charset ; <nl> import java . text . DecimalFormat ; <nl> <nl> import dk . ilios . spanner . model . Trial ; <nl> @ @ - 46 , 7 + 47 , 7 @ @ public class CSVResultProcessor implements ResultProcessor { <nl> this . resultFile = resultFile ; <nl> this . workFile = new File ( resultFile . getPath ( ) + " . tmp " ) ; <nl> try { <nl> - writer = new CSVWriter ( new FileWriter ( resultFile ) ) ; <nl> + writer = new CSVWriter ( Files . newWriter ( resultFile , Charset . forName ( " UTF - 8 " ) ) ) ; <nl> addLabels ( ) ; <nl> } catch ( IOException e ) { <nl> throw new RuntimeException ( e ) ; <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> index eac4715 . . 4b5b836 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> @ @ - 322 , 7 + 322 , 8 @ @ public class SyncUser { <nl> / / Finally revoke server token . The local user is logged out in any case . <nl> final AuthenticationServer server = SyncManager . getAuthServer ( ) ; <nl> ThreadPoolExecutor networkPoolExecutor = SyncManager . NETWORK _ POOL _ EXECUTOR ; <nl> - networkPoolExecutor . submit ( new ExponentialBackoffTask < LogoutResponse > ( ) { <nl> + / / noinspection unused <nl> + final Future < ? > future = networkPoolExecutor . submit ( new ExponentialBackoffTask < LogoutResponse > ( ) { <nl> <nl> @ Override <nl> protected LogoutResponse execute ( ) { <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java <nl> index ce35654 . . 6a0181c 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java <nl> @ @ - 80 , 6 + 80 , 7 @ @ public class LogoutResponse extends AuthServerResponse { <nl> * <nl> * @ return { @ code true } if valid . <nl> * / <nl> + @ Override <nl> public boolean isValid ( ) { <nl> return ( error = = null ) | | ( error . getErrorCode ( ) = = ErrorCode . EXPIRED _ REFRESH _ TOKEN ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java <nl> index d7f426d . . 5f337b1 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java <nl> @ @ - 77 , 6 + 77 , 7 @ @ public class NetworkStateReceiver extends BroadcastReceiver { <nl> } <nl> <nl> <nl> + @ Override <nl> public void onReceive ( Context context , Intent intent ) { <nl> boolean connected = isOnline ( context ) ; <nl> for ( ConnectionListener listener : listeners ) { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> index 68ce590 . . d8e3e14 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import org . junit . runner . RunWith ; <nl> import java . util . concurrent . CountDownLatch ; <nl> import java . util . concurrent . ExecutorService ; <nl> import java . util . concurrent . Executors ; <nl> + import java . util . concurrent . Future ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> import io . realm . ObjectServerError ; <nl> @ @ - 62 , 7 + 63 , 8 @ @ public class ProcessCommitTests extends BaseIntegrationTest { <nl> final Throwable [ ] exception = new Throwable [ 1 ] ; <nl> final CountDownLatch testFinished = new CountDownLatch ( 1 ) ; <nl> ExecutorService service = Executors . newSingleThreadExecutor ( ) ; <nl> - service . submit ( new Runnable ( ) { <nl> + / / noinspection unused <nl> + final Future < ? > future = service . submit ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> try { <nl> @ @ - 122 , 7 + 124 , 8 @ @ public class ProcessCommitTests extends BaseIntegrationTest { <nl> final Throwable [ ] exception = new Throwable [ 1 ] ; <nl> final CountDownLatch testFinished = new CountDownLatch ( 1 ) ; <nl> ExecutorService service = Executors . newSingleThreadExecutor ( ) ; <nl> - service . submit ( new Runnable ( ) { <nl> + / / noinspection unused <nl> + final Future < ? > future = service . submit ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> try {
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java <nl> index 9898a36 . . 8413384 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java <nl> @ @ - 138 , 7 + 138 , 7 @ @ public abstract class CollectionTests { <nl> realm . commitTransaction ( ) ; <nl> <nl> OrderedRealmCollection < CyclicType > result ; <nl> - switch ( collectionClass ) { <nl> + switch ( collectionClass ) { <nl> case MANAGED _ REALMLIST : <nl> result = parent . getObjects ( ) ; <nl> break ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> index c26e039 . . 72ce507 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> @ @ - 556 , 7 + 556 , 7 @ @ public class DynamicRealmTests { <nl> realm . beginTransaction ( ) ; <nl> realm . createObject ( AllTypes . CLASS _ NAME ) ; <nl> DynamicRealmObject cat = realm . createObject ( Cat . CLASS _ NAME ) ; <nl> - DynamicRealmObject owner = realm . createObject ( Owner . CLASS _ NAME ) ; <nl> + DynamicRealmObject owner = realm . createObject ( Owner . CLASS _ NAME ) ; <nl> owner . setObject ( " cat " , cat ) ; <nl> realm . getSchema ( ) . create ( " TestRemoveAll " ) . addField ( " Field1 " , String . class ) ; <nl> realm . createObject ( " TestRemoveAll " ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java <nl> index 1ba7760 . . 507e7f8 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java <nl> @ @ - 19 , 8 + 19 , 6 @ @ package io . realm ; <nl> import android . os . Handler ; <nl> import android . os . Message ; <nl> <nl> - import io . realm . HandlerController ; <nl> - <nl> / * * <nl> * Handler decorator , to help intercept some messages before they are sent and received . <nl> * / <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java <nl> index 2b00894 . . 7e61fb6 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java <nl> @ @ - 181 , 7 + 181 , 7 @ @ public class ManagedOrderedRealmCollectionTests extends CollectionTests { <nl> throw new AssertionError ( " Unknown collection : " + collectionClass ) ; <nl> } <nl> <nl> - @ Test <nl> + @ Test <nl> public void sort _ twoFields ( ) { <nl> OrderedRealmCollection < AllJavaTypes > sortedList = collection . sort ( AllJavaTypes . FIELD _ BOOLEAN , Sort . ASCENDING , AllJavaTypes . FIELD _ LONG , Sort . DESCENDING ) ; <nl> AllJavaTypes obj = sortedList . first ( ) ; <nl> @ @ - 674 , 11 + 674 , 11 @ @ public class ManagedOrderedRealmCollectionTests extends CollectionTests { <nl> @ Test <nl> public void methodsThrowOnWrongThread ( ) throws ExecutionException , InterruptedException { <nl> for ( OrderedRealmCollectionMethod method : OrderedRealmCollectionMethod . values ( ) ) { <nl> - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> } <nl> <nl> for ( ListMethod method : ListMethod . values ( ) ) { <nl> - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> index cd1420b . . 27a206d 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java <nl> @ @ - 152 , 7 + 152 , 7 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> <nl> private OrderedRealmCollection < NullTypes > createAllNullRowsForNumericTesting ( Realm realm , ManagedCollection collectionClass ) { <nl> TestHelper . populateAllNullRowsForNumericTesting ( realm ) ; <nl> - switch ( collectionClass ) { <nl> + switch ( collectionClass ) { <nl> case MANAGED _ REALMLIST : <nl> RealmResults < NullTypes > results = realm . allObjects ( NullTypes . class ) ; <nl> RealmList < NullTypes > list = results . get ( 0 ) . getFieldListNull ( ) ; <nl> @ @ - 398 , 7 + 398 , 7 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> public void sum ( ) { <nl> Number sum = collection . sum ( AllJavaTypes . FIELD _ LONG ) ; <nl> / / Sum of numbers 0 to M - 1 : ( M - 1 ) * M / 2 <nl> - assertEquals ( ( TEST _ SIZE - 1 ) * TEST _ SIZE / 2 , sum . intValue ( ) ) ; <nl> + assertEquals ( ( TEST _ SIZE - 1 ) * TEST _ SIZE / 2 , sum . intValue ( ) ) ; <nl> } <nl> <nl> / / Test sum on nullable rows with all null values <nl> @ @ - 491 , 13 + 491 , 13 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> @ Test <nl> public void maxDate ( ) { <nl> assertEquals ( TEST _ SIZE , collection . size ( ) ) ; <nl> - assertEquals ( new Date ( YEAR _ MILLIS * 20 * ( TEST _ SIZE / 2 - 1 ) ) , collection . maxDate ( AllJavaTypes . FIELD _ DATE ) ) ; <nl> + assertEquals ( new Date ( YEAR _ MILLIS * 20 * ( TEST _ SIZE / 2 - 1 ) ) , collection . maxDate ( AllJavaTypes . FIELD _ DATE ) ) ; <nl> } <nl> <nl> @ Test <nl> public void minDate ( ) { <nl> assertEquals ( TEST _ SIZE , collection . size ( ) ) ; <nl> - assertEquals ( new Date ( - YEAR _ MILLIS * 20 * TEST _ SIZE / 2 ) , collection . minDate ( AllJavaTypes . FIELD _ DATE ) ) ; <nl> + assertEquals ( new Date ( - YEAR _ MILLIS * 20 * TEST _ SIZE / 2 ) , collection . minDate ( AllJavaTypes . FIELD _ DATE ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 693 , 10 + 693 , 10 @ @ public class ManagedRealmCollectionTests extends CollectionTests { <nl> @ Test <nl> public void methodsThrowOnWrongThread ( ) throws ExecutionException , InterruptedException { <nl> for ( RealmCollectionMethod method : RealmCollectionMethod . values ( ) ) { <nl> - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> } <nl> for ( CollectionMethod method : CollectionMethod . values ( ) ) { <nl> - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java <nl> index 0539661 . . fc2bb62 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java <nl> @ @ - 492 , 7 + 492 , 7 @ @ public class OrderedRealmCollectionIteratorTests extends CollectionTests { <nl> <nl> @ Test <nl> public void listIterator _ startIndex ( ) { <nl> - int i = TEST _ SIZE / 2 ; <nl> + int i = TEST _ SIZE / 2 ; <nl> ListIterator < AllJavaTypes > it = collection . listIterator ( i ) ; <nl> <nl> assertTrue ( it . hasPrevious ( ) ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> index e7c7235 . . a0de54b 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java <nl> @ @ - 250 , 7 + 250 , 7 @ @ public class OrderedRealmCollectionTests extends CollectionTests { <nl> for ( Integer index : indexes ) { <nl> try { <nl> collection . get ( index ) ; <nl> - fail ( index + " did not throw the expected Exception . " ) ; <nl> + fail ( index + " did not throw the expected Exception . " ) ; <nl> } catch ( IndexOutOfBoundsException ignored ) { <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> index 5f8f7a1 . . 893aa07 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> @ @ - 1822 , 7 + 1822 , 7 @ @ public class RealmAsyncQueryTests { <nl> @ UiThreadTest <nl> public void badVersion _ findAll ( ) throws NoSuchFieldException , IllegalAccessException { <nl> TestHelper . replaceRealmThreadExectutor ( RealmThreadPoolExecutor . newSingleThreadExecutor ( ) ) ; <nl> - RealmConfiguration config = configFactory . createConfiguration ( ) ; <nl> + RealmConfiguration config = configFactory . createConfiguration ( ) ; <nl> Realm realm = Realm . getInstance ( config ) ; <nl> realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java <nl> index a9a8a11 . . cb720cf 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java <nl> @ @ - 57 , 10 + 57 , 10 @ @ import static org . junit . Assert . assertNotSame ; <nl> import static org . junit . Assert . assertNull ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> - import static org . mockito . Mockito . verify ; <nl> + import static org . mockito . Mockito . mock ; <nl> import static org . mockito . Mockito . never ; <nl> import static org . mockito . Mockito . times ; <nl> - import static org . mockito . Mockito . mock ; <nl> + import static org . mockito . Mockito . verify ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class RealmConfigurationTests { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java <nl> index 81846cd . . c5d6cc8 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java <nl> @ @ - 16 , 9 + 16 , 6 @ @ <nl> <nl> package io . realm ; <nl> <nl> - import android . content . Context ; <nl> - import android . support . test . InstrumentationRegistry ; <nl> - <nl> import org . json . JSONException ; <nl> import org . json . JSONObject ; <nl> import org . junit . After ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java <nl> index 7183dcb . . 6233493 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java <nl> @ @ - 200 , 8 + 200 , 8 @ @ public class RealmJsonTests { <nl> / / Check that all primitive types are imported correctly <nl> assertEquals ( " String " , obj . getColumnString ( ) ) ; <nl> assertEquals ( 1L , obj . getColumnLong ( ) ) ; <nl> - assertEquals ( 1 . 23F , obj . getColumnFloat ( ) , 0F ) ; <nl> - assertEquals ( 1 . 23D , obj . getColumnDouble ( ) , 0D ) ; <nl> + assertEquals ( 1 . 23F , obj . getColumnFloat ( ) , 0F ) ; <nl> + assertEquals ( 1 . 23D , obj . getColumnDouble ( ) , 0D ) ; <nl> assertEquals ( true , obj . isColumnBoolean ( ) ) ; <nl> assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getColumnBinary ( ) ) ; <nl> } <nl> @ @ - 306 , 7 + 306 , 7 @ @ public class RealmJsonTests { <nl> public void createObjectFromJson _ stringSimpleObject ( ) { <nl> realm . beginTransaction ( ) ; <nl> Dog dog = realm . createObjectFromJson ( Dog . class , " { name : \ " Foo \ " } " ) ; <nl> - realm . commitTransaction ( ) ; <nl> + realm . commitTransaction ( ) ; <nl> <nl> assertEquals ( " Foo " , dog . getName ( ) ) ; <nl> assertEquals ( " Foo " , realm . allObjects ( Dog . class ) . first ( ) . getName ( ) ) ; <nl> @ @ - 618 , 7 + 618 , 7 @ @ public class RealmJsonTests { <nl> } <nl> <nl> @ Test <nl> - public void createObjectFromJson _ streamNullJson ( ) throws IOException { <nl> + public void createObjectFromJson _ streamNullJson ( ) throws IOException { <nl> InputStream in = TestHelper . loadJsonFromAssets ( context , " all _ types _ invalid . json " ) ; <nl> realm . beginTransaction ( ) ; <nl> try { <nl> @ @ - 632 , 7 + 632 , 7 @ @ public class RealmJsonTests { <nl> } <nl> <nl> @ Test <nl> - public void createObjectFromJson _ streamNullInputStream ( ) throws IOException { <nl> + public void createObjectFromJson _ streamNullInputStream ( ) throws IOException { <nl> realm . beginTransaction ( ) ; <nl> assertNull ( realm . createObjectFromJson ( AnnotationTypes . class , ( InputStream ) null ) ) ; <nl> realm . commitTransaction ( ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java <nl> index 1f8a178 . . 4aa7600 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java <nl> @ @ - 223 , 8 + 223 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { <nl> <nl> try { <nl> RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " cat . height " , 0 . 2f , 2 . 2f ) . findAll ( ) ; <nl> - } <nl> - catch ( IllegalArgumentException ignored ) { <nl> + } catch ( IllegalArgumentException ignored ) { <nl> } <nl> } <nl> <nl> @ @ - 256 , 8 + 255 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { <nl> try { <nl> RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " cat . weight " , 0 . 2 , 2 . 2 ) . findAll ( ) ; <nl> fail ( ) ; <nl> - } <nl> - catch ( IllegalArgumentException ignored ) { <nl> + } catch ( IllegalArgumentException ignored ) { <nl> } <nl> } <nl> <nl> @ @ - 389 , 8 + 387 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { <nl> try { <nl> RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " dogs . height " , 0 . 2f , 2 . 2f ) . findAll ( ) ; <nl> fail ( ) ; <nl> - } <nl> - catch ( IllegalArgumentException ignored ) { <nl> + } catch ( IllegalArgumentException ignored ) { <nl> } <nl> } <nl> <nl> @ @ - 422 , 8 + 419 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { <nl> try { <nl> RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " dogs . weight " , 0 . 2 , 12 . 2 ) . findAll ( ) ; <nl> fail ( ) ; <nl> - } <nl> - catch ( IllegalArgumentException ignored ) { <nl> + } catch ( IllegalArgumentException ignored ) { <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> index d049d3d . . 940ed4c 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> @ @ - 415 , 7 + 415 , 7 @ @ public class RealmListTests extends CollectionTests { <nl> <nl> / / Test that set correctly uses Realm . copyToRealmOrUpdate ( ) on standalone objects with a primary key . <nl> @ Test <nl> - public void set _ nonManagedPrimaryKeyObjectToManagedList ( ) { <nl> + public void set _ nonManagedPrimaryKeyObjectToManagedList ( ) { <nl> realm . beginTransaction ( ) ; <nl> CyclicTypePrimaryKey parent = realm . copyToRealm ( new CyclicTypePrimaryKey ( 1 , " Parent " ) ) ; <nl> RealmList < CyclicTypePrimaryKey > children = parent . getObjects ( ) ; <nl> @ @ - 876 , 14 + 876 , 14 @ @ public class RealmListTests extends CollectionTests { <nl> } <nl> <nl> try { <nl> - list . add ( 0 , dynDog ) ; <nl> + list . add ( 0 , dynDog ) ; <nl> fail ( ) ; <nl> } catch ( IllegalStateException expected ) { <nl> assertEquals ( expectedMsg , expected . getMessage ( ) ) ; <nl> } <nl> <nl> try { <nl> - list . set ( 0 , dynDog ) ; <nl> + list . set ( 0 , dynDog ) ; <nl> fail ( ) ; <nl> } catch ( IllegalStateException expected ) { <nl> assertEquals ( expectedMsg , expected . getMessage ( ) ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java <nl> index a3ce322 . . 53684ed 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java <nl> @ @ - 33 , 8 + 33 , 8 @ @ import java . util . Date ; <nl> import io . realm . entities . AllTypes ; <nl> import io . realm . entities . pojo . AllTypesRealmModel ; <nl> import io . realm . entities . pojo . InvalidRealmModel ; <nl> - import io . realm . entities . pojo . RealmModelWithRealmListOfRealmModel ; <nl> import io . realm . entities . pojo . PojoWithRealmListOfRealmObject ; <nl> + import io . realm . entities . pojo . RealmModelWithRealmListOfRealmModel ; <nl> import io . realm . entities . pojo . RealmModelWithRealmModelField ; <nl> import io . realm . entities . pojo . RealmObjectWithRealmListOfRealmModel ; <nl> import io . realm . entities . pojo . RealmObjectWithRealmModelField ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> index 6963b7f . . 9ce641c 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java <nl> @ @ - 17 , 8 + 17 , 7 @ @ <nl> package io . realm ; <nl> <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> - import io . realm . entities . AllJavaTypes ; <nl> - import io . realm . rule . TestRealmConfigurationFactory ; <nl> + <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> import org . junit . Rule ; <nl> @ @ - 29 , 6 + 28 , 9 @ @ import org . junit . runner . RunWith ; <nl> import java . util . Date ; <nl> import java . util . Set ; <nl> <nl> + import io . realm . entities . AllJavaTypes ; <nl> + import io . realm . rule . TestRealmConfigurationFactory ; <nl> + <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 180 , 7 + 182 , 7 @ @ public class RealmObjectSchemaTests { <nl> public void addRemoveField ( ) { <nl> for ( FieldType fieldType : FieldType . values ( ) ) { <nl> String fieldName = " foo " ; <nl> - switch ( fieldType ) { <nl> + switch ( fieldType ) { <nl> case OBJECT : <nl> schema . addRealmObjectField ( fieldName , DOG _ SCHEMA ) ; <nl> checkAddedAndRemovable ( fieldName ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java <nl> index 76f4c16 . . 55920f3 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java <nl> @ @ - 144 , 7 + 144 , 7 @ @ public class RealmObjectTests { <nl> @ Test <nl> public void invalidSurrogates ( ) { <nl> String high = " Invalid high surrogate \ uD83C \ uD83C \ uDF51 " ; <nl> - String low = " Invalid low surrogate \ uD83C \ uDF51 \ uDF51 " ; <nl> + String low = " Invalid low surrogate \ uD83C \ uDF51 \ uDF51 " ; <nl> <nl> realm . beginTransaction ( ) ; <nl> realm . delete ( AllTypes . class ) ; <nl> @ @ - 315 , 7 + 315 , 7 @ @ public class RealmObjectTests { <nl> switch ( method ) { <nl> case METHOD _ GETTER : <nl> allTypes . getColumnFloat ( ) ; <nl> - break ; <nl> + break ; <nl> case METHOD _ SETTER : <nl> allTypes . setColumnFloat ( 1 . 0f ) ; <nl> break ; <nl> @ @ - 1137 , 8 + 1137 , 7 @ @ public class RealmObjectTests { <nl> fail ( ) ; <nl> } catch ( IllegalArgumentException ignored ) { <nl> } <nl> - } <nl> - finally { <nl> + } finally { <nl> realm . cancelTransaction ( ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> index 5255240 . . 73b6714 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> @ @ - 2345 , 7 + 2345 , 7 @ @ public class RealmQueryTests { <nl> } <nl> <nl> @ Test <nl> - public void distinctAsync _ withNullValues ( ) throws Throwable { <nl> + public void distinctAsync _ withNullValues ( ) throws Throwable { <nl> final CountDownLatch signalCallbackFinished = new CountDownLatch ( 2 ) ; <nl> final CountDownLatch signalClosedRealm = new CountDownLatch ( 1 ) ; <nl> final Throwable [ ] threadAssertionError = new Throwable [ 1 ] ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> index 3e7c1e8 . . e8c09c7 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> @ @ - 351 , 7 + 351 , 7 @ @ public class RealmResultsTests extends CollectionTests { <nl> realm . executeTransaction ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> - realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ LONG , 0 ) . findFirst ( ) . removeFromRealm ( ) ; <nl> + realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ LONG , 0 ) . findFirst ( ) . removeFromRealm ( ) ; <nl> } <nl> } , new Realm . Transaction . Callback ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java <nl> index bef98fa . . 018f063 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java <nl> @ @ - 31 , 7 + 31 , 6 @ @ import java . util . Set ; <nl> import io . realm . entities . AllJavaTypes ; <nl> import io . realm . entities . Owner ; <nl> import io . realm . entities . PrimaryKeyAsString ; <nl> - import io . realm . internal . Table ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index c7322e0 . . d595be1 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 2151 , 7 + 2151 , 7 @ @ public class RealmTests { <nl> public void createObjectWithPrimaryKey _ null ( ) { <nl> / / Byte <nl> realm . beginTransaction ( ) ; <nl> - PrimaryKeyAsBoxedByte primaryKeyAsBoxedByte = realm . createObject ( PrimaryKeyAsBoxedByte . class , null ) ; <nl> + PrimaryKeyAsBoxedByte primaryKeyAsBoxedByte = realm . createObject ( PrimaryKeyAsBoxedByte . class , null ) ; <nl> realm . commitTransaction ( ) ; <nl> assertEquals ( 1 , realm . where ( PrimaryKeyAsBoxedByte . class ) . count ( ) ) ; <nl> assertNull ( primaryKeyAsBoxedByte . getId ( ) ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / SortTest . java b / realm / realm - library / src / androidTest / java / io / realm / SortTest . java <nl> index 5835953 . . b4a68b4 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / SortTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / SortTest . java <nl> @ @ - 222 , 7 + 222 , 7 @ @ public class SortTest extends AndroidTestCase { <nl> <nl> RealmResults < AllTypes > results4 = testRealm . allObjects ( AllTypes . class ) . sort ( ORDER _ INT _ STRING , ORDER _ ASC _ DES ) ; <nl> checkSortTwoFieldsIntAscendingStringDescending ( results4 ) ; <nl> - } <nl> + } <nl> <nl> <nl> public void testRealmQuerySortTwoFields ( ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> index ce5f00c . . e6865dc 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class TestHelper { <nl> } <nl> } <nl> <nl> - public static RealmFieldType getColumnType ( Object o ) { <nl> + public static RealmFieldType getColumnType ( Object o ) { <nl> if ( o instanceof Boolean ) <nl> return RealmFieldType . BOOLEAN ; <nl> if ( o instanceof String ) <nl> @ @ - 97 , 9 + 97 , 10 @ @ public class TestHelper { <nl> <nl> / * * <nl> * Creates an empty table with 1 column of all our supported column types , currently 9 columns <nl> + * <nl> * @ return <nl> * / <nl> - public static Table getTableWithAllColumnTypes ( ) { <nl> + public static Table getTableWithAllColumnTypes ( ) { <nl> Table t = new Table ( ) ; <nl> <nl> t . addColumn ( RealmFieldType . BINARY , " binary " ) ; <nl> @ @ - 316 , 7 + 317 , 7 @ @ public class TestHelper { <nl> if ( garbageSize = = 0 ) { <nl> long maxMemory = Runtime . getRuntime ( ) . maxMemory ( ) ; <nl> long totalMemory = Runtime . getRuntime ( ) . totalMemory ( ) ; <nl> - garbageSize = ( int ) ( maxMemory - totalMemory ) / 10 * 9 ; <nl> + garbageSize = ( int ) ( maxMemory - totalMemory ) / 10 * 9 ; <nl> } <nl> byte garbage [ ] = new byte [ 0 ] ; <nl> try { <nl> @ @ - 326 , 7 + 327 , 7 @ @ public class TestHelper { <nl> garbage [ garbage . length - 1 ] = 1 ; <nl> } <nl> } catch ( OutOfMemoryError oom ) { <nl> - return allocGarbage ( garbageSize / 10 * 9 ) ; <nl> + return allocGarbage ( garbageSize / 10 * 9 ) ; <nl> } <nl> <nl> return garbage ; <nl> @ @ - 633 , 7 + 634 , 7 @ @ public class TestHelper { <nl> testRealm . commitTransaction ( ) ; <nl> } <nl> <nl> - public static void populateAllNonNullRowsForNumericTesting ( Realm realm ) { <nl> + public static void populateAllNonNullRowsForNumericTesting ( Realm realm ) { <nl> NullTypes nullTypes1 = new NullTypes ( ) ; <nl> nullTypes1 . setId ( 1 ) ; <nl> nullTypes1 . setFieldIntegerNull ( 3 ) ; <nl> @ @ - 668 , 7 + 669 , 7 @ @ public class TestHelper { <nl> realm . commitTransaction ( ) ; <nl> } <nl> <nl> - public static void populatePartialNullRowsForNumericTesting ( Realm realm ) { <nl> + public static void populatePartialNullRowsForNumericTesting ( Realm realm ) { <nl> / / Id values are [ 1 , 2 , 3 ] <nl> / / IntegerNull values are [ 3 , null , 4 ] <nl> / / FloatNull values are [ 4F , null , 5F ] <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> index ce0a655 . . 6f9d836 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> @ @ - 43 , 7 + 43 , 6 @ @ import io . realm . entities . Cat ; <nl> import io . realm . entities . Dog ; <nl> import io . realm . entities . Owner ; <nl> import io . realm . entities . PrimaryKeyAsLong ; <nl> - import io . realm . internal . RealmObjectProxy ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> @ @ - 1138 , 7 + 1137 , 7 @ @ public class TypeBasedNotificationsTests { <nl> realm . handler . post ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> - assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; <nl> + assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> } <nl> } ) ; <nl> @ @ - 1202 , 7 + 1201 , 7 @ @ public class TypeBasedNotificationsTests { <nl> realm . handler . post ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> - assertEquals ( typebasedCommitInvocations . get ( ) , 1 ) ; <nl> + assertEquals ( typebasedCommitInvocations . get ( ) , 1 ) ; <nl> looperThread . testComplete ( ) ; <nl> } <nl> } ) ; <nl> @ @ - 1256 , 7 + 1255 , 7 @ @ public class TypeBasedNotificationsTests { <nl> realm . handler . post ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> - assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; <nl> + assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> } <nl> } ) ; <nl> @ @ - 1478 , 7 + 1477 , 7 @ @ public class TypeBasedNotificationsTests { <nl> @ Override <nl> public void run ( ) { <nl> realm . close ( ) ; <nl> - assertEquals ( 1 , typebasedCommitInvocations . get ( ) ) ; <nl> + assertEquals ( 1 , typebasedCommitInvocations . get ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> } <nl> } ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java b / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java <nl> index cf0da4b . . 2a5308d 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ import io . realm . annotations . Ignore ; <nl> import io . realm . annotations . Index ; <nl> import io . realm . annotations . PrimaryKey ; <nl> <nl> - public class AllJavaTypes extends RealmObject { <nl> + public class AllJavaTypes extends RealmObject { <nl> <nl> public static final String CLASS _ NAME = " AllJavaTypes " ; <nl> public static String FIELD _ IGNORED = " fieldIgnored " ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java b / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java <nl> index 5328afe . . ce08779 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ package io . realm . entities ; <nl> import io . realm . RealmList ; <nl> import io . realm . RealmObject ; <nl> <nl> - public class NonLatinFieldNames extends RealmObject { <nl> + public class NonLatinFieldNames extends RealmObject { <nl> <nl> public final static String FIELD _ LONG _ KOREAN _ CHAR = " 델 타 " ; <nl> public final static String FIELD _ LONG _ GREEK _ CHAR = " Δ έ λ τ α " ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java b / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java <nl> index 71be5a1 . . 6b481e5 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ package io . realm . entities . pojo ; <nl> <nl> import io . realm . RealmObject ; <nl> <nl> - public class RealmObjectWithRealmModelField extends RealmObject { <nl> + public class RealmObjectWithRealmModelField extends RealmObject { <nl> private AllTypesRealmModel allTypesRealmModel ; <nl> <nl> public AllTypesRealmModel getAllTypesRealmModel ( ) {

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java 
 index bb873d1 . . 8e81f62 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java 
 @ @ - 796 , 6 + 796 , 7 @ @ public class ManagedOrderedRealmCollectionTests extends CollectionTests { 
 case SORT _ 2FIELDS : 
 case SORT _ MULTI : 
 expected = UnsupportedOperationException . class ; 
 + break ; 
 default : 
 break ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 index 809dbdf . . 9cd511e 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 @ @ - 760 , 13 + 760 , 16 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 case REMOVE _ ALL : 
 case RETAIN _ ALL : 
 expected = UnsupportedOperationException . class ; 
 + break ; 
 + default : 
 + / / use default exception 
 } 
 } 
 
 try { 
 switch ( method ) { 
 case DELETE _ ALL : collection . deleteAllFromRealm ( ) ; break ; 
 - case ADD _ OBJECT : collection . add ( new AllJavaTypes ( ) ) ; 
 + case ADD _ OBJECT : collection . add ( new AllJavaTypes ( ) ) ; break ; 
 case ADD _ ALL _ OBJECTS : collection . addAll ( Collections . singletonList ( new AllJavaTypes ( ) ) ) ; break ; 
 case CLEAR : collection . clear ( ) ; break ; 
 case REMOVE _ OBJECT : collection . remove ( new AllJavaTypes ( ) ) ; break ; 
 @ @ - 847 , 6 + 850 , 9 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 case REMOVE _ ALL : 
 case RETAIN _ ALL : 
 expected = UnsupportedOperationException . class ; 
 + break ; 
 + default : 
 + / / use default exception 
 } 
 } 
 
 @ @ - 854 , 8 + 860 , 8 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 switch ( method ) { 
 case ADD _ OBJECT : collection . add ( new AllJavaTypes ( ) ) ; break ; 
 case ADD _ ALL _ OBJECTS : collection . addAll ( Collections . singletonList ( new AllJavaTypes ( ) ) ) ; break ; 
 - case CLEAR : collection . clear ( ) ; 
 - case CONTAINS : 
 + case CLEAR : collection . clear ( ) ; break ; 
 + case CONTAINS : collection . contains ( tempObject ) ; break ; 
 case CONTAINS _ ALL : collection . containsAll ( Collections . singletonList ( tempObject ) ) ; break ; 
 case EQUALS : 
 / / noinspection ResultOfMethodCallIgnored 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java 
 index fd7d5d8 . . 8e3f499 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java 
 @ @ - 564 , 7 + 564 , 8 @ @ public class NotificationsTest { 
 
 / / Starts background looper and let it hang . 
 ExecutorService executorService = Executors . newSingleThreadExecutor ( ) ; 
 - executorService . submit ( new Runnable ( ) { 
 + / / noinspection unused 
 + final Future < ? > future = executorService . submit ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 Looper . prepare ( ) ; / / Fake background thread with a looper , eg . a IntentService . 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java 
 index ac34ced . . 534730b 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java 
 @ @ - 528 , 6 + 528 , 11 @ @ public class OrderedRealmCollectionIteratorTests extends CollectionTests { 
 
 @ Test 
 public void listIterator _ deleteManagedObjectIndirectly ( ) { 
 + if ( skipTest ( CollectionClass . REALMRESULTS _ SNAPSHOT _ LIST _ BASE , 
 + CollectionClass . REALMRESULTS _ SNAPSHOT _ RESULTS _ BASE ) ) { 
 + return ; 
 + } 
 + 
 realm . beginTransaction ( ) ; 
 ListIterator < AllJavaTypes > it = collection . listIterator ( ) ; 
 it . next ( ) ; 
 @ @ - 542 , 6 + 547 , 9 @ @ public class OrderedRealmCollectionIteratorTests extends CollectionTests { 
 case UNMANAGED _ REALMLIST : 
 assertEquals ( TEST _ SIZE , collection . size ( ) ) ; 
 break ; 
 + default : 
 + fail ( ) ; 
 + return ; 
 } 
 it . previous ( ) ; 
 AllJavaTypes types = it . next ( ) ; / / Iterator can still access the deleted object 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 index d722f02 . . 5a9ef34 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 @ @ - 369 , 9 + 369 , 9 @ @ public class OrderedRealmCollectionTests extends CollectionTests { 
 case ADD _ ALL _ INDEX : collection . addAll ( 1 , Collections . singleton ( new AllJavaTypes ( ) ) ) ; break ; 
 case GET _ INDEX : collection . get ( 1 ) ; break ; 
 case LIST _ ITERATOR _ INDEX : collection . listIterator ( 1 ) ; break ; 
 - case REMOVE _ INDEX : collection . remove ( 1 ) ; 
 - case SET : collection . set ( 1 , new AllJavaTypes ( ) ) ; 
 - case SUBLIST : collection . subList ( 1 , 2 ) ; 
 + case REMOVE _ INDEX : collection . remove ( 1 ) ; break ; 
 + case SET : collection . set ( 1 , new AllJavaTypes ( ) ) ; break ; 
 + case SUBLIST : collection . subList ( 1 , 2 ) ; break ; 
 
 / / Cannot fail with IndexOutOfBounds 
 case FIRST : 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java 
 index 99375d1 . . 1085a37 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java 
 @ @ - 106 , 6 + 106 , 7 @ @ public class RealmCacheTests { 
 realm . close ( ) ; 
 try { 
 Realm . getInstance ( configB ) ; / / Tries to open with key 2 . 
 + fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; 
 / / Deletes Realm so key 2 works . This should work as a Realm shouldn ' t be cached 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java 
 index 718abc0 . . 351024d 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java 
 @ @ - 37 , 6 + 37 , 7 @ @ import org . junit . runner . RunWith ; 
 import java . io . ByteArrayInputStream ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . nio . charset . Charset ; 
 import java . util . Arrays ; 
 import java . util . Calendar ; 
 import java . util . Date ; 
 @ @ - 66 , 6 + 67 , 8 @ @ import static org . junit . Assume . assumeThat ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class RealmJsonTests { 
 + private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; 
 + 
 @ Rule 
 public final TestRealmConfigurationFactory configFactory = new TestRealmConfigurationFactory ( ) ; 
 
 @ @ - 87 , 7 + 90 , 7 @ @ public class RealmJsonTests { 
 } 
 
 private InputStream convertJsonObjectToStream ( JSONObject obj ) { 
 - return new ByteArrayInputStream ( obj . toString ( ) . getBytes ( ) ) ; 
 + return new ByteArrayInputStream ( obj . toString ( ) . getBytes ( UTF _ 8 ) ) ; 
 } 
 
 / / Asserts that the list of AllTypesPrimaryKey objects where inserted and updated properly . 
 @ @ - 198 , 7 + 201 , 7 @ @ public class RealmJsonTests { 
 json . put ( " columnFloat " , 1 . 23F ) ; 
 json . put ( " columnDouble " , 1 . 23D ) ; 
 json . put ( " columnBoolean " , true ) ; 
 - json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) ) ) ; 
 + json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) , UTF _ 8 ) ) ; 
 
 realm . beginTransaction ( ) ; 
 realm . createObjectFromJson ( AllTypes . class , json ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 index cd9d355 . . cd4e057 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 @ @ - 746 , 8 + 746 , 8 @ @ public class RealmListTests extends CollectionTests { 
 case SORT : results . sort ( CyclicType . FIELD _ NAME ) ; break ; 
 case SORT _ FIELD : results . sort ( CyclicType . FIELD _ NAME , Sort . ASCENDING ) ; break ; 
 case SORT _ 2FIELDS : results . sort ( CyclicType . FIELD _ NAME , Sort . ASCENDING , CyclicType . FIELD _ DATE , Sort . DESCENDING ) ; break ; 
 - case SORT _ MULTI : results . sort ( new String [ ] { CyclicType . FIELD _ NAME , CyclicType . FIELD _ DATE } , new Sort [ ] { Sort . ASCENDING , Sort . DESCENDING } ) ; 
 - case CREATE _ SNAPSHOT : results . createSnapshot ( ) ; 
 + case SORT _ MULTI : results . sort ( new String [ ] { CyclicType . FIELD _ NAME , CyclicType . FIELD _ DATE } , new Sort [ ] { Sort . ASCENDING , Sort . DESCENDING } ) ; break ; 
 + case CREATE _ SNAPSHOT : results . createSnapshot ( ) ; break ; 
 } 
 fail ( method + " should have thrown an Exception " ) ; 
 } catch ( IllegalStateException ignored ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 index a29dbee . . 01745e6 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 @ @ - 111 , 7 + 111 , 7 @ @ public class RealmObjectSchemaTests { 
 BOOLEAN ( Boolean . class ) , PRIMITIVE _ BOOLEAN ( boolean . class ) , 
 DATE ( Date . class ) ; 
 
 - Class < ? > clazz ; 
 + private final Class < ? > clazz ; 
 
 public Class < ? > getType ( ) { 
 return clazz ; 
 @ @ - 129 , 7 + 129 , 7 @ @ public class RealmObjectSchemaTests { 
 OBJECT ( RealmObject . class ) , 
 LIST ( RealmList . class ) ; 
 
 - Class < ? > clazz ; 
 + private final Class < ? > clazz ; 
 
 public Class < ? > getType ( ) { 
 return clazz ; 
 @ @ - 148 , 7 + 148 , 7 @ @ public class RealmObjectSchemaTests { 
 LONG ( Long . class ) , PRIMITIVE _ LONG ( long . class ) , 
 BYTE ( Byte . class ) , PRIMITIVE _ BYTE ( byte . class ) ; 
 
 - Class < ? > clazz ; 
 + private final Class < ? > clazz ; 
 
 public Class < ? > getType ( ) { 
 return clazz ; 
 @ @ - 168 , 7 + 168 , 7 @ @ public class RealmObjectSchemaTests { 
 OBJECT ( RealmObject . class ) , 
 LIST ( RealmList . class ) ; 
 
 - Class < ? > clazz ; 
 + private final Class < ? > clazz ; 
 
 public Class < ? > getType ( ) { 
 return clazz ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 index c1939d2 . . b10f607 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 @ @ - 99 , 14 + 99 , 14 @ @ public class RealmQueryTests { 
 allTypes . setColumnBinary ( new byte [ ] { 1 , 2 , 3 } ) ; 
 allTypes . setColumnDate ( new Date ( DECADE _ MILLIS * ( i - ( dataSize / 2 ) ) ) ) ; 
 allTypes . setColumnDouble ( 3 . 1415 ) ; 
 - allTypes . setColumnFloat ( 1 . 234567f + i ) ; 
 + allTypes . setColumnFloat ( 1 . 2345f + i ) ; 
 allTypes . setColumnString ( " test data " + i ) ; 
 allTypes . setColumnLong ( i ) ; 
 NonLatinFieldNames nonLatinFieldNames = testRealm . createObject ( NonLatinFieldNames . class ) ; 
 nonLatinFieldNames . set 델 타 ( i ) ; 
 nonLatinFieldNames . set Δ έ λ τ α ( i ) ; 
 - nonLatinFieldNames . set 베 타 ( 1 . 234567f + i ) ; 
 - nonLatinFieldNames . set Β ή τ α ( 1 . 234567f + i ) ; 
 + nonLatinFieldNames . set 베 타 ( 1 . 2345f + i ) ; 
 + nonLatinFieldNames . set Β ή τ α ( 1 . 2345f + i ) ; 
 
 Dog dog = testRealm . createObject ( Dog . class ) ; 
 dog . setAge ( i ) ; 
 @ @ - 137 , 8 + 137 , 8 @ @ public class RealmQueryTests { 
 noPrimaryKeyNullTypes . setFieldIntegerNotNull ( i ) ; 
 noPrimaryKeyNullTypes . setFieldLongNull ( ( i % 3 ) = = 0 ? null : ( long ) i ) ; 
 noPrimaryKeyNullTypes . setFieldLongNotNull ( ( long ) i ) ; 
 - noPrimaryKeyNullTypes . setFieldFloatNull ( ( i % 3 ) = = 0 ? null : 1 . 234567f + i ) ; 
 - noPrimaryKeyNullTypes . setFieldFloatNotNull ( 1 . 234567f + i ) ; 
 + noPrimaryKeyNullTypes . setFieldFloatNull ( ( i % 3 ) = = 0 ? null : 1 . 2345f + i ) ; 
 + noPrimaryKeyNullTypes . setFieldFloatNotNull ( 1 . 2345f + i ) ; 
 noPrimaryKeyNullTypes . setFieldDoubleNull ( ( i % 3 ) = = 0 ? null : 3 . 1415 + i ) ; 
 noPrimaryKeyNullTypes . setFieldDoubleNotNull ( 3 . 1415 + i ) ; 
 noPrimaryKeyNullTypes . setFieldDateNull ( ( i % 3 ) = = 0 ? null : new Date ( DECADE _ MILLIS * ( i - ( dataSize / 2 ) ) ) ) ; 
 @ @ - 467 , 14 + 467 , 14 @ @ public class RealmQueryTests { 
 populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; 
 
 RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) 
 - . greaterThan ( AllTypes . FIELD _ FLOAT , 10 . 234567f ) . findAll ( ) ; 
 + . greaterThan ( AllTypes . FIELD _ FLOAT , 10 . 2345f ) . findAll ( ) ; 
 assertEquals ( TEST _ OBJECTS _ COUNT - 10 , resultList . size ( ) ) ; 
 
 resultList = realm . where ( AllTypes . class ) . beginsWith ( AllTypes . FIELD _ STRING , " test data 1 " ) 
 - . greaterThan ( AllTypes . FIELD _ FLOAT , 50 . 234567f ) . findAll ( ) ; 
 - assertEquals ( TEST _ OBJECTS _ COUNT - 100 , resultList . size ( ) ) ; 
 + . greaterThan ( AllTypes . FIELD _ FLOAT , 150 . 2345f ) . findAll ( ) ; 
 + assertEquals ( TEST _ OBJECTS _ COUNT - 150 , resultList . size ( ) ) ; 
 
 - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . greaterThan ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) ; 
 + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . greaterThan ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) ; 
 resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 20 ) . findAll ( ) ; 
 assertEquals ( 10 , resultList . size ( ) ) ; 
 } 
 @ @ - 504 , 15 + 504 , 15 @ @ public class RealmQueryTests { 
 populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; 
 
 RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) 
 - . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 10 . 234567f ) . findAll ( ) ; 
 + . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 10 . 2345f ) . findAll ( ) ; 
 assertEquals ( TEST _ OBJECTS _ COUNT - 9 , resultList . size ( ) ) ; 
 
 resultList = realm . where ( AllTypes . class ) . beginsWith ( AllTypes . FIELD _ STRING , " test data 1 " ) 
 - . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 50 . 234567f ) . findAll ( ) ; 
 + . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 50 . 2345f ) . findAll ( ) ; 
 assertEquals ( TEST _ OBJECTS _ COUNT - 100 , resultList . size ( ) ) ; 
 
 RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) 
 - . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) ; 
 + . greaterThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) ; 
 query = query . between ( AllTypes . FIELD _ LONG , 1 , 20 ) ; 
 
 resultList = query . beginsWith ( AllTypes . FIELD _ STRING , " test data 15 " ) . findAll ( ) ; 
 @ @ - 541 , 7 + 541 , 7 @ @ public class RealmQueryTests { 
 public void or ( ) { 
 populateTestRealm ( realm , 200 ) ; 
 
 - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) ; 
 + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) ; 
 RealmResults < AllTypes > resultList = query . or ( ) . between ( AllTypes . FIELD _ LONG , 1 , 20 ) . findAll ( ) ; 
 assertEquals ( 21 , resultList . size ( ) ) ; 
 
 @ @ - 559 , 12 + 559 , 12 @ @ public class RealmQueryTests { 
 
 @ Test ( expected = UnsupportedOperationException . class ) 
 public void or _ missingFilterBefore ( ) { 
 - realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; 
 + realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; 
 } 
 
 @ Test ( expected = UnsupportedOperationException . class ) 
 public void or _ missingFilterAfter ( ) { 
 - realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; 
 + realm . where ( AllTypes . class ) . or ( ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; 
 } 
 
 @ Test 
 @ @ - 608 , 11 + 608 , 11 @ @ public class RealmQueryTests { 
 public void and _ implicit ( ) { 
 populateTestRealm ( realm , 200 ) ; 
 
 - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) ; 
 + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) ; 
 RealmResults < AllTypes > resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 10 ) . findAll ( ) ; 
 assertEquals ( 0 , resultList . size ( ) ) ; 
 
 - query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 81 . 234567f ) ; 
 + query = realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ FLOAT , 81 . 2345f ) ; 
 resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 100 ) . findAll ( ) ; 
 assertEquals ( 1 , resultList . size ( ) ) ; 
 } 
 @ @ - 623 , 9 + 623 , 9 @ @ public class RealmQueryTests { 
 populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; 
 
 RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) . 
 - lessThan ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; 
 + lessThan ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; 
 assertEquals ( 30 , resultList . size ( ) ) ; 
 - RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . lessThan ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) ; 
 + RealmQuery < AllTypes > query = realm . where ( AllTypes . class ) . lessThan ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) ; 
 resultList = query . between ( AllTypes . FIELD _ LONG , 1 , 10 ) . findAll ( ) ; 
 assertEquals ( 10 , resultList . size ( ) ) ; 
 } 
 @ @ - 654 , 9 + 654 , 9 @ @ public class RealmQueryTests { 
 populateTestRealm ( realm , TEST _ OBJECTS _ COUNT ) ; 
 
 RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) 
 - . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; 
 + . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; 
 assertEquals ( 31 , resultList . size ( ) ) ; 
 - resultList = realm . where ( AllTypes . class ) . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) 
 + resultList = realm . where ( AllTypes . class ) . lessThanOrEqualTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) 
 . between ( AllTypes . FIELD _ LONG , 11 , 20 ) . findAll ( ) ; 
 assertEquals ( 10 , resultList . size ( ) ) ; 
 } 
 @ @ - 684 , 7 + 684 , 7 @ @ public class RealmQueryTests { 
 populateTestRealm ( realm , 200 ) ; 
 
 RealmResults < AllTypes > resultList = realm . where ( AllTypes . class ) 
 - . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 234567f ) . findAll ( ) ; 
 + . equalTo ( AllTypes . FIELD _ FLOAT , 31 . 2345f ) . findAll ( ) ; 
 assertEquals ( 1 , resultList . size ( ) ) ; 
 resultList = realm . where ( AllTypes . class ) . greaterThan ( AllTypes . FIELD _ FLOAT , 11 . 0f ) 
 . equalTo ( AllTypes . FIELD _ LONG , 10 ) . findAll ( ) ; 
 @ @ - 843 , 13 + 843 , 13 @ @ public class RealmQueryTests { 
 fail ( ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 - RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 234567f + 1 } ) . findAll ( ) ; 
 + RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 2345f + 1 } ) . findAll ( ) ; 
 assertEquals ( 1 , resultList . size ( ) ) ; 
 - resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 234567f + 2 } ) . findAll ( ) ; 
 + resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 2345f + 2 } ) . findAll ( ) ; 
 assertEquals ( 1 , resultList . size ( ) ) ; 
 - resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 234567f + 1 , 1 . 234567f + 2 } ) . findAll ( ) ; 
 + resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . in ( targetField , new Float [ ] { 1 . 2345f + 1 , 1 . 2345f + 2 } ) . findAll ( ) ; 
 assertEquals ( 2 , resultList . size ( ) ) ; 
 - resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( targetField , new Float [ ] { 1 . 234567f + 1 , 1 . 234567f + 2 } ) . findAll ( ) ; 
 + resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( targetField , new Float [ ] { 1 . 2345f + 1 , 1 . 2345f + 2 } ) . findAll ( ) ; 
 assertEquals ( 198 , resultList . size ( ) ) ; 
 } 
 
 @ @ - 1013 , 7 + 1013 , 7 @ @ public class RealmQueryTests { 
 public void in _ floatNotNull ( ) { 
 doTestForInFloat ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NOT _ NULL ) ; 
 try { 
 - realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NOT _ NULL , new Float [ ] { 1 . 234567f + 1 , null , 1 . 234567f + 2 } ) . findAll ( ) ; 
 + realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NOT _ NULL , new Float [ ] { 1 . 2345f + 1 , null , 1 . 2345f + 2 } ) . findAll ( ) ; 
 fail ( ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 @ @ - 1022 , 7 + 1022 , 7 @ @ public class RealmQueryTests { 
 @ Test 
 public void in _ floatNull ( ) { 
 doTestForInFloat ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NULL ) ; 
 - RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NULL , new Float [ ] { 1 . 234567f + 1 , null , 1 . 234567f + 2 } ) . findAll ( ) ; 
 + RealmResults < NoPrimaryKeyNullTypes > resultList = realm . where ( NoPrimaryKeyNullTypes . class ) . not ( ) . in ( NoPrimaryKeyNullTypes . FIELD _ FLOAT _ NULL , new Float [ ] { 1 . 2345f + 1 , null , 1 . 2345f + 2 } ) . findAll ( ) ; 
 assertEquals ( 131 , resultList . size ( ) ) ; 
 } 
 
 @ @ - 1103 , 11 + 1103 , 11 @ @ public class RealmQueryTests { 
 . notEqualTo ( AllTypes . FIELD _ LONG , 31 ) . findAll ( ) ; 
 assertEquals ( TEST _ OBJECTS _ COUNT - 1 , resultList . size ( ) ) ; 
 
 - resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) 
 + resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) 
 . equalTo ( AllTypes . FIELD _ LONG , 10 ) . findAll ( ) ; 
 assertEquals ( 0 , resultList . size ( ) ) ; 
 
 - resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 234567f ) 
 + resultList = realm . where ( AllTypes . class ) . notEqualTo ( AllTypes . FIELD _ FLOAT , 11 . 2345f ) 
 . equalTo ( AllTypes . FIELD _ LONG , 1 ) . findAll ( ) ; 
 assertEquals ( 1 , resultList . size ( ) ) ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 index 7894642 . . 4b4b690 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 @ @ - 128 , 10 + 128 , 10 @ @ public class RealmResultsTests extends CollectionTests { 
 for ( CollectionMutatorMethod method : CollectionMutatorMethod . values ( ) ) { 
 try { 
 switch ( method ) { 
 - case ADD _ OBJECT : collection . add ( new AllTypes ( ) ) ; 
 + case ADD _ OBJECT : collection . add ( new AllTypes ( ) ) ; break ; 
 case ADD _ ALL _ OBJECTS : collection . addAll ( Collections . singletonList ( new AllTypes ( ) ) ) ; break ; 
 case CLEAR : collection . clear ( ) ; break ; 
 - case REMOVE _ OBJECT : collection . remove ( new AllTypes ( ) ) ; 
 + case REMOVE _ OBJECT : collection . remove ( new AllTypes ( ) ) ; break ; 
 case REMOVE _ ALL : collection . removeAll ( Collections . singletonList ( new AllTypes ( ) ) ) ; break ; 
 case RETAIN _ ALL : collection . retainAll ( Collections . singletonList ( new AllTypes ( ) ) ) ; break ; 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index a4ddd7f . . 4ce3c83 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 200 , 6 + 200 , 7 @ @ public class RealmTests { 
 . directory ( folder ) 
 . name ( REALM _ FILE ) 
 . build ( ) ) ; 
 + fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; 
 } 
 @ @ - 216 , 6 + 217 , 7 @ @ public class RealmTests { 
 
 try { 
 Realm . getInstance ( new RealmConfiguration . Builder ( context ) . directory ( folder ) . name ( REALM _ FILE ) . build ( ) ) ; 
 + fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; 
 } 
 @ @ - 3554 , 7 + 3556 , 7 @ @ public class RealmTests { 
 Realm realm = Realm . getInstance ( realmConfig ) ; 
 bgRealm . set ( realm ) ; 
 bgRealmOpened . countDown ( ) ; 
 - bgRealmWaitResult . set ( new Boolean ( realm . waitForChange ( ) ) ) ; 
 + bgRealmWaitResult . set ( realm . waitForChange ( ) ) ; 
 realm . close ( ) ; 
 bgRealmClosed . countDown ( ) ; 
 } 
 @ @ - 3572 , 7 + 3574 , 7 @ @ public class RealmTests { 
 / / Now we ' ll stop realm from waiting . 
 bgRealm . get ( ) . stopWaitForChange ( ) ; 
 TestHelper . awaitOrFail ( bgRealmClosed ) ; 
 - assertFalse ( bgRealmWaitResult . get ( ) . booleanValue ( ) ) ; 
 + assertFalse ( bgRealmWaitResult . get ( ) ) ; 
 } 
 
 @ Test 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 index c219ab9 . . e3150ac 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 @ @ - 24 , 13 + 24 , 13 @ @ import android . util . Base64 ; 
 import org . json . JSONException ; 
 import org . json . JSONObject ; 
 import org . junit . Before ; 
 - import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . nio . charset . Charset ; 
 import java . util . Date ; 
 import java . util . concurrent . CountDownLatch ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 @ @ - 54 , 6 + 54 , 8 @ @ import static org . junit . Assume . assumeThat ; 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class TypeBasedNotificationsTests { 
 
 + private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; 
 + 
 @ Rule 
 public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 @ Rule 
 @ @ - 321 , 7 + 323 , 7 @ @ public class TypeBasedNotificationsTests { 
 json . put ( " columnFloat " , 1 . 23f ) ; 
 json . put ( " columnDouble " , 1 . 23d ) ; 
 json . put ( " columnBoolean " , true ) ; 
 - json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) ) ) ; 
 + json . put ( " columnBinary " , new String ( Base64 . encode ( new byte [ ] { 1 , 2 , 3 } , Base64 . DEFAULT ) , UTF _ 8 ) ) ; 
 
 realm . beginTransaction ( ) ; 
 final AllTypes objectFromJson = realm . createObjectFromJson ( AllTypes . class , json ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java 
 index b812383 . . 704deb9 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import java . util . UUID ; 
 import java . util . concurrent . CountDownLatch ; 
 import java . util . concurrent . ExecutorService ; 
 import java . util . concurrent . Executors ; 
 + import java . util . concurrent . Future ; 
 import java . util . concurrent . ThreadFactory ; 
 
 import io . realm . Realm ; 
 @ @ - 108 , 7 + 109 , 8 @ @ public class RunInLooperThread extends TestRealmConfigurationFactory { 
 return new Thread ( runnable , threadName ) ; 
 } 
 } ) ; 
 - executorService . submit ( new Runnable ( ) { 
 + / / noinspection unused 
 + final Future < ? > submit = executorService . submit ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 Looper . prepare ( ) ; 
 diff - - git a / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java b / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java 
 index f8737f2 . . 54e69d4 100644 
 - - - a / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java 
 + + + b / realm / realm - library / src / benchmarks / java / io / realm / benchmarks / config / CSVResultProcessor . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import com . opencsv . CSVWriter ; 
 import java . io . File ; 
 import java . io . FileWriter ; 
 import java . io . IOException ; 
 + import java . nio . charset . Charset ; 
 import java . text . DecimalFormat ; 
 
 import dk . ilios . spanner . model . Trial ; 
 @ @ - 46 , 7 + 47 , 7 @ @ public class CSVResultProcessor implements ResultProcessor { 
 this . resultFile = resultFile ; 
 this . workFile = new File ( resultFile . getPath ( ) + " . tmp " ) ; 
 try { 
 - writer = new CSVWriter ( new FileWriter ( resultFile ) ) ; 
 + writer = new CSVWriter ( Files . newWriter ( resultFile , Charset . forName ( " UTF - 8 " ) ) ) ; 
 addLabels ( ) ; 
 } catch ( IOException e ) { 
 throw new RuntimeException ( e ) ; 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 index eac4715 . . 4b5b836 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 @ @ - 322 , 7 + 322 , 8 @ @ public class SyncUser { 
 / / Finally revoke server token . The local user is logged out in any case . 
 final AuthenticationServer server = SyncManager . getAuthServer ( ) ; 
 ThreadPoolExecutor networkPoolExecutor = SyncManager . NETWORK _ POOL _ EXECUTOR ; 
 - networkPoolExecutor . submit ( new ExponentialBackoffTask < LogoutResponse > ( ) { 
 + / / noinspection unused 
 + final Future < ? > future = networkPoolExecutor . submit ( new ExponentialBackoffTask < LogoutResponse > ( ) { 
 
 @ Override 
 protected LogoutResponse execute ( ) { 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java 
 index ce35654 . . 6a0181c 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LogoutResponse . java 
 @ @ - 80 , 6 + 80 , 7 @ @ public class LogoutResponse extends AuthServerResponse { 
 * 
 * @ return { @ code true } if valid . 
 * / 
 + @ Override 
 public boolean isValid ( ) { 
 return ( error = = null ) | | ( error . getErrorCode ( ) = = ErrorCode . EXPIRED _ REFRESH _ TOKEN ) ; 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java 
 index d7f426d . . 5f337b1 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / NetworkStateReceiver . java 
 @ @ - 77 , 6 + 77 , 7 @ @ public class NetworkStateReceiver extends BroadcastReceiver { 
 } 
 
 
 + @ Override 
 public void onReceive ( Context context , Intent intent ) { 
 boolean connected = isOnline ( context ) ; 
 for ( ConnectionListener listener : listeners ) { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 index 68ce590 . . d8e3e14 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import org . junit . runner . RunWith ; 
 import java . util . concurrent . CountDownLatch ; 
 import java . util . concurrent . ExecutorService ; 
 import java . util . concurrent . Executors ; 
 + import java . util . concurrent . Future ; 
 import java . util . concurrent . TimeUnit ; 
 
 import io . realm . ObjectServerError ; 
 @ @ - 62 , 7 + 63 , 8 @ @ public class ProcessCommitTests extends BaseIntegrationTest { 
 final Throwable [ ] exception = new Throwable [ 1 ] ; 
 final CountDownLatch testFinished = new CountDownLatch ( 1 ) ; 
 ExecutorService service = Executors . newSingleThreadExecutor ( ) ; 
 - service . submit ( new Runnable ( ) { 
 + / / noinspection unused 
 + final Future < ? > future = service . submit ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 try { 
 @ @ - 122 , 7 + 124 , 8 @ @ public class ProcessCommitTests extends BaseIntegrationTest { 
 final Throwable [ ] exception = new Throwable [ 1 ] ; 
 final CountDownLatch testFinished = new CountDownLatch ( 1 ) ; 
 ExecutorService service = Executors . newSingleThreadExecutor ( ) ; 
 - service . submit ( new Runnable ( ) { 
 + / / noinspection unused 
 + final Future < ? > future = service . submit ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 try {

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java 
 index 9898a36 . . 8413384 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / CollectionTests . java 
 @ @ - 138 , 7 + 138 , 7 @ @ public abstract class CollectionTests { 
 realm . commitTransaction ( ) ; 
 
 OrderedRealmCollection < CyclicType > result ; 
 - switch ( collectionClass ) { 
 + switch ( collectionClass ) { 
 case MANAGED _ REALMLIST : 
 result = parent . getObjects ( ) ; 
 break ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 index c26e039 . . 72ce507 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 @ @ - 556 , 7 + 556 , 7 @ @ public class DynamicRealmTests { 
 realm . beginTransaction ( ) ; 
 realm . createObject ( AllTypes . CLASS _ NAME ) ; 
 DynamicRealmObject cat = realm . createObject ( Cat . CLASS _ NAME ) ; 
 - DynamicRealmObject owner = realm . createObject ( Owner . CLASS _ NAME ) ; 
 + DynamicRealmObject owner = realm . createObject ( Owner . CLASS _ NAME ) ; 
 owner . setObject ( " cat " , cat ) ; 
 realm . getSchema ( ) . create ( " TestRemoveAll " ) . addField ( " Field1 " , String . class ) ; 
 realm . createObject ( " TestRemoveAll " ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java 
 index 1ba7760 . . 507e7f8 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java 
 @ @ - 19 , 8 + 19 , 6 @ @ package io . realm ; 
 import android . os . Handler ; 
 import android . os . Message ; 
 
 - import io . realm . HandlerController ; 
 - 
 / * * 
 * Handler decorator , to help intercept some messages before they are sent and received . 
 * / 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java 
 index 2b00894 . . 7e61fb6 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedOrderedRealmCollectionTests . java 
 @ @ - 181 , 7 + 181 , 7 @ @ public class ManagedOrderedRealmCollectionTests extends CollectionTests { 
 throw new AssertionError ( " Unknown collection : " + collectionClass ) ; 
 } 
 
 - @ Test 
 + @ Test 
 public void sort _ twoFields ( ) { 
 OrderedRealmCollection < AllJavaTypes > sortedList = collection . sort ( AllJavaTypes . FIELD _ BOOLEAN , Sort . ASCENDING , AllJavaTypes . FIELD _ LONG , Sort . DESCENDING ) ; 
 AllJavaTypes obj = sortedList . first ( ) ; 
 @ @ - 674 , 11 + 674 , 11 @ @ public class ManagedOrderedRealmCollectionTests extends CollectionTests { 
 @ Test 
 public void methodsThrowOnWrongThread ( ) throws ExecutionException , InterruptedException { 
 for ( OrderedRealmCollectionMethod method : OrderedRealmCollectionMethod . values ( ) ) { 
 - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 } 
 
 for ( ListMethod method : ListMethod . values ( ) ) { 
 - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 index cd1420b . . 27a206d 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / ManagedRealmCollectionTests . java 
 @ @ - 152 , 7 + 152 , 7 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 
 private OrderedRealmCollection < NullTypes > createAllNullRowsForNumericTesting ( Realm realm , ManagedCollection collectionClass ) { 
 TestHelper . populateAllNullRowsForNumericTesting ( realm ) ; 
 - switch ( collectionClass ) { 
 + switch ( collectionClass ) { 
 case MANAGED _ REALMLIST : 
 RealmResults < NullTypes > results = realm . allObjects ( NullTypes . class ) ; 
 RealmList < NullTypes > list = results . get ( 0 ) . getFieldListNull ( ) ; 
 @ @ - 398 , 7 + 398 , 7 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 public void sum ( ) { 
 Number sum = collection . sum ( AllJavaTypes . FIELD _ LONG ) ; 
 / / Sum of numbers 0 to M - 1 : ( M - 1 ) * M / 2 
 - assertEquals ( ( TEST _ SIZE - 1 ) * TEST _ SIZE / 2 , sum . intValue ( ) ) ; 
 + assertEquals ( ( TEST _ SIZE - 1 ) * TEST _ SIZE / 2 , sum . intValue ( ) ) ; 
 } 
 
 / / Test sum on nullable rows with all null values 
 @ @ - 491 , 13 + 491 , 13 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 @ Test 
 public void maxDate ( ) { 
 assertEquals ( TEST _ SIZE , collection . size ( ) ) ; 
 - assertEquals ( new Date ( YEAR _ MILLIS * 20 * ( TEST _ SIZE / 2 - 1 ) ) , collection . maxDate ( AllJavaTypes . FIELD _ DATE ) ) ; 
 + assertEquals ( new Date ( YEAR _ MILLIS * 20 * ( TEST _ SIZE / 2 - 1 ) ) , collection . maxDate ( AllJavaTypes . FIELD _ DATE ) ) ; 
 } 
 
 @ Test 
 public void minDate ( ) { 
 assertEquals ( TEST _ SIZE , collection . size ( ) ) ; 
 - assertEquals ( new Date ( - YEAR _ MILLIS * 20 * TEST _ SIZE / 2 ) , collection . minDate ( AllJavaTypes . FIELD _ DATE ) ) ; 
 + assertEquals ( new Date ( - YEAR _ MILLIS * 20 * TEST _ SIZE / 2 ) , collection . minDate ( AllJavaTypes . FIELD _ DATE ) ) ; 
 } 
 
 @ Test 
 @ @ - 693 , 10 + 693 , 10 @ @ public class ManagedRealmCollectionTests extends CollectionTests { 
 @ Test 
 public void methodsThrowOnWrongThread ( ) throws ExecutionException , InterruptedException { 
 for ( RealmCollectionMethod method : RealmCollectionMethod . values ( ) ) { 
 - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 } 
 for ( CollectionMethod method : CollectionMethod . values ( ) ) { 
 - assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 + assertTrue ( method + " failed " , runMethodOnWrongThread ( method ) ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java 
 index 0539661 . . fc2bb62 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionIteratorTests . java 
 @ @ - 492 , 7 + 492 , 7 @ @ public class OrderedRealmCollectionIteratorTests extends CollectionTests { 
 
 @ Test 
 public void listIterator _ startIndex ( ) { 
 - int i = TEST _ SIZE / 2 ; 
 + int i = TEST _ SIZE / 2 ; 
 ListIterator < AllJavaTypes > it = collection . listIterator ( i ) ; 
 
 assertTrue ( it . hasPrevious ( ) ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 index e7c7235 . . a0de54b 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / OrderedRealmCollectionTests . java 
 @ @ - 250 , 7 + 250 , 7 @ @ public class OrderedRealmCollectionTests extends CollectionTests { 
 for ( Integer index : indexes ) { 
 try { 
 collection . get ( index ) ; 
 - fail ( index + " did not throw the expected Exception . " ) ; 
 + fail ( index + " did not throw the expected Exception . " ) ; 
 } catch ( IndexOutOfBoundsException ignored ) { 
 } 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 index 5f8f7a1 . . 893aa07 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 @ @ - 1822 , 7 + 1822 , 7 @ @ public class RealmAsyncQueryTests { 
 @ UiThreadTest 
 public void badVersion _ findAll ( ) throws NoSuchFieldException , IllegalAccessException { 
 TestHelper . replaceRealmThreadExectutor ( RealmThreadPoolExecutor . newSingleThreadExecutor ( ) ) ; 
 - RealmConfiguration config = configFactory . createConfiguration ( ) ; 
 + RealmConfiguration config = configFactory . createConfiguration ( ) ; 
 Realm realm = Realm . getInstance ( config ) ; 
 realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java 
 index a9a8a11 . . cb720cf 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java 
 @ @ - 57 , 10 + 57 , 10 @ @ import static org . junit . Assert . assertNotSame ; 
 import static org . junit . Assert . assertNull ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 - import static org . mockito . Mockito . verify ; 
 + import static org . mockito . Mockito . mock ; 
 import static org . mockito . Mockito . never ; 
 import static org . mockito . Mockito . times ; 
 - import static org . mockito . Mockito . mock ; 
 + import static org . mockito . Mockito . verify ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class RealmConfigurationTests { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java 
 index 81846cd . . c5d6cc8 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonNullPrimaryKeyTests . java 
 @ @ - 16 , 9 + 16 , 6 @ @ 
 
 package io . realm ; 
 
 - import android . content . Context ; 
 - import android . support . test . InstrumentationRegistry ; 
 - 
 import org . json . JSONException ; 
 import org . json . JSONObject ; 
 import org . junit . After ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java 
 index 7183dcb . . 6233493 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmJsonTests . java 
 @ @ - 200 , 8 + 200 , 8 @ @ public class RealmJsonTests { 
 / / Check that all primitive types are imported correctly 
 assertEquals ( " String " , obj . getColumnString ( ) ) ; 
 assertEquals ( 1L , obj . getColumnLong ( ) ) ; 
 - assertEquals ( 1 . 23F , obj . getColumnFloat ( ) , 0F ) ; 
 - assertEquals ( 1 . 23D , obj . getColumnDouble ( ) , 0D ) ; 
 + assertEquals ( 1 . 23F , obj . getColumnFloat ( ) , 0F ) ; 
 + assertEquals ( 1 . 23D , obj . getColumnDouble ( ) , 0D ) ; 
 assertEquals ( true , obj . isColumnBoolean ( ) ) ; 
 assertArrayEquals ( new byte [ ] { 1 , 2 , 3 } , obj . getColumnBinary ( ) ) ; 
 } 
 @ @ - 306 , 7 + 306 , 7 @ @ public class RealmJsonTests { 
 public void createObjectFromJson _ stringSimpleObject ( ) { 
 realm . beginTransaction ( ) ; 
 Dog dog = realm . createObjectFromJson ( Dog . class , " { name : \ " Foo \ " } " ) ; 
 - realm . commitTransaction ( ) ; 
 + realm . commitTransaction ( ) ; 
 
 assertEquals ( " Foo " , dog . getName ( ) ) ; 
 assertEquals ( " Foo " , realm . allObjects ( Dog . class ) . first ( ) . getName ( ) ) ; 
 @ @ - 618 , 7 + 618 , 7 @ @ public class RealmJsonTests { 
 } 
 
 @ Test 
 - public void createObjectFromJson _ streamNullJson ( ) throws IOException { 
 + public void createObjectFromJson _ streamNullJson ( ) throws IOException { 
 InputStream in = TestHelper . loadJsonFromAssets ( context , " all _ types _ invalid . json " ) ; 
 realm . beginTransaction ( ) ; 
 try { 
 @ @ - 632 , 7 + 632 , 7 @ @ public class RealmJsonTests { 
 } 
 
 @ Test 
 - public void createObjectFromJson _ streamNullInputStream ( ) throws IOException { 
 + public void createObjectFromJson _ streamNullInputStream ( ) throws IOException { 
 realm . beginTransaction ( ) ; 
 assertNull ( realm . createObjectFromJson ( AnnotationTypes . class , ( InputStream ) null ) ) ; 
 realm . commitTransaction ( ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java 
 index 1f8a178 . . 4aa7600 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmLinkTests . java 
 @ @ - 223 , 8 + 223 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { 
 
 try { 
 RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " cat . height " , 0 . 2f , 2 . 2f ) . findAll ( ) ; 
 - } 
 - catch ( IllegalArgumentException ignored ) { 
 + } catch ( IllegalArgumentException ignored ) { 
 } 
 } 
 
 @ @ - 256 , 8 + 255 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { 
 try { 
 RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " cat . weight " , 0 . 2 , 2 . 2 ) . findAll ( ) ; 
 fail ( ) ; 
 - } 
 - catch ( IllegalArgumentException ignored ) { 
 + } catch ( IllegalArgumentException ignored ) { 
 } 
 } 
 
 @ @ - 389 , 8 + 387 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { 
 try { 
 RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " dogs . height " , 0 . 2f , 2 . 2f ) . findAll ( ) ; 
 fail ( ) ; 
 - } 
 - catch ( IllegalArgumentException ignored ) { 
 + } catch ( IllegalArgumentException ignored ) { 
 } 
 } 
 
 @ @ - 422 , 8 + 419 , 7 @ @ public class RealmLinkTests extends AndroidTestCase { 
 try { 
 RealmResults < Owner > owners7 = testRealm . where ( Owner . class ) . between ( " dogs . weight " , 0 . 2 , 12 . 2 ) . findAll ( ) ; 
 fail ( ) ; 
 - } 
 - catch ( IllegalArgumentException ignored ) { 
 + } catch ( IllegalArgumentException ignored ) { 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 index d049d3d . . 940ed4c 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 @ @ - 415 , 7 + 415 , 7 @ @ public class RealmListTests extends CollectionTests { 
 
 / / Test that set correctly uses Realm . copyToRealmOrUpdate ( ) on standalone objects with a primary key . 
 @ Test 
 - public void set _ nonManagedPrimaryKeyObjectToManagedList ( ) { 
 + public void set _ nonManagedPrimaryKeyObjectToManagedList ( ) { 
 realm . beginTransaction ( ) ; 
 CyclicTypePrimaryKey parent = realm . copyToRealm ( new CyclicTypePrimaryKey ( 1 , " Parent " ) ) ; 
 RealmList < CyclicTypePrimaryKey > children = parent . getObjects ( ) ; 
 @ @ - 876 , 14 + 876 , 14 @ @ public class RealmListTests extends CollectionTests { 
 } 
 
 try { 
 - list . add ( 0 , dynDog ) ; 
 + list . add ( 0 , dynDog ) ; 
 fail ( ) ; 
 } catch ( IllegalStateException expected ) { 
 assertEquals ( expectedMsg , expected . getMessage ( ) ) ; 
 } 
 
 try { 
 - list . set ( 0 , dynDog ) ; 
 + list . set ( 0 , dynDog ) ; 
 fail ( ) ; 
 } catch ( IllegalStateException expected ) { 
 assertEquals ( expectedMsg , expected . getMessage ( ) ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java 
 index a3ce322 . . 53684ed 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmModelTests . java 
 @ @ - 33 , 8 + 33 , 8 @ @ import java . util . Date ; 
 import io . realm . entities . AllTypes ; 
 import io . realm . entities . pojo . AllTypesRealmModel ; 
 import io . realm . entities . pojo . InvalidRealmModel ; 
 - import io . realm . entities . pojo . RealmModelWithRealmListOfRealmModel ; 
 import io . realm . entities . pojo . PojoWithRealmListOfRealmObject ; 
 + import io . realm . entities . pojo . RealmModelWithRealmListOfRealmModel ; 
 import io . realm . entities . pojo . RealmModelWithRealmModelField ; 
 import io . realm . entities . pojo . RealmObjectWithRealmListOfRealmModel ; 
 import io . realm . entities . pojo . RealmObjectWithRealmModelField ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 index 6963b7f . . 9ce641c 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectSchemaTests . java 
 @ @ - 17 , 8 + 17 , 7 @ @ 
 package io . realm ; 
 
 import android . support . test . runner . AndroidJUnit4 ; 
 - import io . realm . entities . AllJavaTypes ; 
 - import io . realm . rule . TestRealmConfigurationFactory ; 
 + 
 import org . junit . After ; 
 import org . junit . Before ; 
 import org . junit . Rule ; 
 @ @ - 29 , 6 + 28 , 9 @ @ import org . junit . runner . RunWith ; 
 import java . util . Date ; 
 import java . util . Set ; 
 
 + import io . realm . entities . AllJavaTypes ; 
 + import io . realm . rule . TestRealmConfigurationFactory ; 
 + 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 180 , 7 + 182 , 7 @ @ public class RealmObjectSchemaTests { 
 public void addRemoveField ( ) { 
 for ( FieldType fieldType : FieldType . values ( ) ) { 
 String fieldName = " foo " ; 
 - switch ( fieldType ) { 
 + switch ( fieldType ) { 
 case OBJECT : 
 schema . addRealmObjectField ( fieldName , DOG _ SCHEMA ) ; 
 checkAddedAndRemovable ( fieldName ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java 
 index 76f4c16 . . 55920f3 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmObjectTests . java 
 @ @ - 144 , 7 + 144 , 7 @ @ public class RealmObjectTests { 
 @ Test 
 public void invalidSurrogates ( ) { 
 String high = " Invalid high surrogate \ uD83C \ uD83C \ uDF51 " ; 
 - String low = " Invalid low surrogate \ uD83C \ uDF51 \ uDF51 " ; 
 + String low = " Invalid low surrogate \ uD83C \ uDF51 \ uDF51 " ; 
 
 realm . beginTransaction ( ) ; 
 realm . delete ( AllTypes . class ) ; 
 @ @ - 315 , 7 + 315 , 7 @ @ public class RealmObjectTests { 
 switch ( method ) { 
 case METHOD _ GETTER : 
 allTypes . getColumnFloat ( ) ; 
 - break ; 
 + break ; 
 case METHOD _ SETTER : 
 allTypes . setColumnFloat ( 1 . 0f ) ; 
 break ; 
 @ @ - 1137 , 8 + 1137 , 7 @ @ public class RealmObjectTests { 
 fail ( ) ; 
 } catch ( IllegalArgumentException ignored ) { 
 } 
 - } 
 - finally { 
 + } finally { 
 realm . cancelTransaction ( ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 index 5255240 . . 73b6714 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 @ @ - 2345 , 7 + 2345 , 7 @ @ public class RealmQueryTests { 
 } 
 
 @ Test 
 - public void distinctAsync _ withNullValues ( ) throws Throwable { 
 + public void distinctAsync _ withNullValues ( ) throws Throwable { 
 final CountDownLatch signalCallbackFinished = new CountDownLatch ( 2 ) ; 
 final CountDownLatch signalClosedRealm = new CountDownLatch ( 1 ) ; 
 final Throwable [ ] threadAssertionError = new Throwable [ 1 ] ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 index 3e7c1e8 . . e8c09c7 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 @ @ - 351 , 7 + 351 , 7 @ @ public class RealmResultsTests extends CollectionTests { 
 realm . executeTransaction ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 - realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ LONG , 0 ) . findFirst ( ) . removeFromRealm ( ) ; 
 + realm . where ( AllTypes . class ) . equalTo ( AllTypes . FIELD _ LONG , 0 ) . findFirst ( ) . removeFromRealm ( ) ; 
 } 
 } , new Realm . Transaction . Callback ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java 
 index bef98fa . . 018f063 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmSchemaTests . java 
 @ @ - 31 , 7 + 31 , 6 @ @ import java . util . Set ; 
 import io . realm . entities . AllJavaTypes ; 
 import io . realm . entities . Owner ; 
 import io . realm . entities . PrimaryKeyAsString ; 
 - import io . realm . internal . Table ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 
 import static org . junit . Assert . assertEquals ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index c7322e0 . . d595be1 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 2151 , 7 + 2151 , 7 @ @ public class RealmTests { 
 public void createObjectWithPrimaryKey _ null ( ) { 
 / / Byte 
 realm . beginTransaction ( ) ; 
 - PrimaryKeyAsBoxedByte primaryKeyAsBoxedByte = realm . createObject ( PrimaryKeyAsBoxedByte . class , null ) ; 
 + PrimaryKeyAsBoxedByte primaryKeyAsBoxedByte = realm . createObject ( PrimaryKeyAsBoxedByte . class , null ) ; 
 realm . commitTransaction ( ) ; 
 assertEquals ( 1 , realm . where ( PrimaryKeyAsBoxedByte . class ) . count ( ) ) ; 
 assertNull ( primaryKeyAsBoxedByte . getId ( ) ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / SortTest . java b / realm / realm - library / src / androidTest / java / io / realm / SortTest . java 
 index 5835953 . . b4a68b4 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / SortTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / SortTest . java 
 @ @ - 222 , 7 + 222 , 7 @ @ public class SortTest extends AndroidTestCase { 
 
 RealmResults < AllTypes > results4 = testRealm . allObjects ( AllTypes . class ) . sort ( ORDER _ INT _ STRING , ORDER _ ASC _ DES ) ; 
 checkSortTwoFieldsIntAscendingStringDescending ( results4 ) ; 
 - } 
 + } 
 
 
 public void testRealmQuerySortTwoFields ( ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 index ce5f00c . . e6865dc 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 77 , 7 + 77 , 7 @ @ public class TestHelper { 
 } 
 } 
 
 - public static RealmFieldType getColumnType ( Object o ) { 
 + public static RealmFieldType getColumnType ( Object o ) { 
 if ( o instanceof Boolean ) 
 return RealmFieldType . BOOLEAN ; 
 if ( o instanceof String ) 
 @ @ - 97 , 9 + 97 , 10 @ @ public class TestHelper { 
 
 / * * 
 * Creates an empty table with 1 column of all our supported column types , currently 9 columns 
 + * 
 * @ return 
 * / 
 - public static Table getTableWithAllColumnTypes ( ) { 
 + public static Table getTableWithAllColumnTypes ( ) { 
 Table t = new Table ( ) ; 
 
 t . addColumn ( RealmFieldType . BINARY , " binary " ) ; 
 @ @ - 316 , 7 + 317 , 7 @ @ public class TestHelper { 
 if ( garbageSize = = 0 ) { 
 long maxMemory = Runtime . getRuntime ( ) . maxMemory ( ) ; 
 long totalMemory = Runtime . getRuntime ( ) . totalMemory ( ) ; 
 - garbageSize = ( int ) ( maxMemory - totalMemory ) / 10 * 9 ; 
 + garbageSize = ( int ) ( maxMemory - totalMemory ) / 10 * 9 ; 
 } 
 byte garbage [ ] = new byte [ 0 ] ; 
 try { 
 @ @ - 326 , 7 + 327 , 7 @ @ public class TestHelper { 
 garbage [ garbage . length - 1 ] = 1 ; 
 } 
 } catch ( OutOfMemoryError oom ) { 
 - return allocGarbage ( garbageSize / 10 * 9 ) ; 
 + return allocGarbage ( garbageSize / 10 * 9 ) ; 
 } 
 
 return garbage ; 
 @ @ - 633 , 7 + 634 , 7 @ @ public class TestHelper { 
 testRealm . commitTransaction ( ) ; 
 } 
 
 - public static void populateAllNonNullRowsForNumericTesting ( Realm realm ) { 
 + public static void populateAllNonNullRowsForNumericTesting ( Realm realm ) { 
 NullTypes nullTypes1 = new NullTypes ( ) ; 
 nullTypes1 . setId ( 1 ) ; 
 nullTypes1 . setFieldIntegerNull ( 3 ) ; 
 @ @ - 668 , 7 + 669 , 7 @ @ public class TestHelper { 
 realm . commitTransaction ( ) ; 
 } 
 
 - public static void populatePartialNullRowsForNumericTesting ( Realm realm ) { 
 + public static void populatePartialNullRowsForNumericTesting ( Realm realm ) { 
 / / Id values are [ 1 , 2 , 3 ] 
 / / IntegerNull values are [ 3 , null , 4 ] 
 / / FloatNull values are [ 4F , null , 5F ] 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 index ce0a655 . . 6f9d836 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 @ @ - 43 , 7 + 43 , 6 @ @ import io . realm . entities . Cat ; 
 import io . realm . entities . Dog ; 
 import io . realm . entities . Owner ; 
 import io . realm . entities . PrimaryKeyAsLong ; 
 - import io . realm . internal . RealmObjectProxy ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 @ @ - 1138 , 7 + 1137 , 7 @ @ public class TypeBasedNotificationsTests { 
 realm . handler . post ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; 
 + assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; 
 looperThread . testComplete ( ) ; 
 } 
 } ) ; 
 @ @ - 1202 , 7 + 1201 , 7 @ @ public class TypeBasedNotificationsTests { 
 realm . handler . post ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - assertEquals ( typebasedCommitInvocations . get ( ) , 1 ) ; 
 + assertEquals ( typebasedCommitInvocations . get ( ) , 1 ) ; 
 looperThread . testComplete ( ) ; 
 } 
 } ) ; 
 @ @ - 1256 , 7 + 1255 , 7 @ @ public class TypeBasedNotificationsTests { 
 realm . handler . post ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; 
 + assertEquals ( 2 , typebasedCommitInvocations . get ( ) ) ; 
 looperThread . testComplete ( ) ; 
 } 
 } ) ; 
 @ @ - 1478 , 7 + 1477 , 7 @ @ public class TypeBasedNotificationsTests { 
 @ Override 
 public void run ( ) { 
 realm . close ( ) ; 
 - assertEquals ( 1 , typebasedCommitInvocations . get ( ) ) ; 
 + assertEquals ( 1 , typebasedCommitInvocations . get ( ) ) ; 
 looperThread . testComplete ( ) ; 
 } 
 } ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java b / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java 
 index cf0da4b . . 2a5308d 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / AllJavaTypes . java 
 @ @ - 24 , 7 + 24 , 7 @ @ import io . realm . annotations . Ignore ; 
 import io . realm . annotations . Index ; 
 import io . realm . annotations . PrimaryKey ; 
 
 - public class AllJavaTypes extends RealmObject { 
 + public class AllJavaTypes extends RealmObject { 
 
 public static final String CLASS _ NAME = " AllJavaTypes " ; 
 public static String FIELD _ IGNORED = " fieldIgnored " ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java b / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java 
 index 5328afe . . ce08779 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / NonLatinFieldNames . java 
 @ @ - 19 , 7 + 19 , 7 @ @ package io . realm . entities ; 
 import io . realm . RealmList ; 
 import io . realm . RealmObject ; 
 
 - public class NonLatinFieldNames extends RealmObject { 
 + public class NonLatinFieldNames extends RealmObject { 
 
 public final static String FIELD _ LONG _ KOREAN _ CHAR = " 델 타 " ; 
 public final static String FIELD _ LONG _ GREEK _ CHAR = " Δ έ λ τ α " ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java b / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java 
 index 71be5a1 . . 6b481e5 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / pojo / RealmObjectWithRealmModelField . java 
 @ @ - 18 , 7 + 18 , 7 @ @ package io . realm . entities . pojo ; 
 
 import io . realm . RealmObject ; 
 
 - public class RealmObjectWithRealmModelField extends RealmObject { 
 + public class RealmObjectWithRealmModelField extends RealmObject { 
 private AllTypesRealmModel allTypesRealmModel ; 
 
 public AllTypesRealmModel getAllTypesRealmModel ( ) {
