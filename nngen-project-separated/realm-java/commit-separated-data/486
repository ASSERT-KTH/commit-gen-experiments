BLEU SCORE: 0.040583489434387374

TEST MSG: Create capabilities for every Realm instance
GENERATED MSG: Remove generic parameter from RealmObject

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> index e162fbd . . d658ff5 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> @ @ - 32 , 7 + 32 , 6 @ @ import io . realm . RealmChangeListener ; <nl> import io . realm . RealmConfiguration ; <nl> import io . realm . RealmFieldType ; <nl> import io . realm . TestHelper ; <nl> - import io . realm . internal . android . AndroidRealmNotifier ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> @ @ - 67 , 7 + 66 , 7 @ @ public class CollectionTests { <nl> } <nl> <nl> private SharedRealm getSharedRealm ( ) { <nl> - return SharedRealm . getInstance ( config , new AndroidRealmNotifier ( ) , null ) ; <nl> + return SharedRealm . getInstance ( config , null ) ; <nl> } <nl> <nl> private void populateData ( ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java <nl> index fc93fc0 . . dacbaa6 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java <nl> @ @ - 31 , 7 + 31 , 6 @ @ import io . realm . RealmChangeListener ; <nl> import io . realm . RealmConfiguration ; <nl> import io . realm . RealmFieldType ; <nl> import io . realm . TestHelper ; <nl> - import io . realm . internal . android . AndroidRealmNotifier ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> @ @ - 66 , 7 + 65 , 7 @ @ public class RowNotifierTests { <nl> } <nl> <nl> private SharedRealm getSharedRealm ( ) { <nl> - return SharedRealm . getInstance ( config , new AndroidRealmNotifier ( ) , null ) ; <nl> + return SharedRealm . getInstance ( config , null ) ; <nl> } <nl> <nl> private void populateData ( ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java <nl> index 9dab44e . . f7b0ec9 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java <nl> @ @ - 163 , 7 + 163 , 7 @ @ public class SharedRealmTests { <nl> final AtomicLong schemaVersionFromListener = new AtomicLong ( - 1L ) ; <nl> <nl> sharedRealm . close ( ) ; <nl> - sharedRealm = SharedRealm . getInstance ( config , null , new SharedRealm . SchemaVersionListener ( ) { <nl> + sharedRealm = SharedRealm . getInstance ( config , new SharedRealm . SchemaVersionListener ( ) { <nl> @ Override <nl> public void onSchemaVersionChanged ( long currentVersion ) { <nl> listenerCalled . set ( true ) ; <nl> @ @ - 202 , 7 + 202 , 7 @ @ public class SharedRealmTests { <nl> final AtomicLong schemaVersionFromListener = new AtomicLong ( - 1L ) ; <nl> <nl> sharedRealm . close ( ) ; <nl> - sharedRealm = SharedRealm . getInstance ( config , null , new SharedRealm . SchemaVersionListener ( ) { <nl> + sharedRealm = SharedRealm . getInstance ( config , new SharedRealm . SchemaVersionListener ( ) { <nl> @ Override <nl> public void onSchemaVersionChanged ( long currentVersion ) { <nl> listenerCalled . set ( true ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index b866d2f . . 15b00a1 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 37 , 7 + 37 , 6 @ @ import io . realm . internal . Row ; <nl> import io . realm . internal . Table ; <nl> import io . realm . internal . UncheckedRow ; <nl> import io . realm . internal . Util ; <nl> - import io . realm . internal . android . AndroidRealmNotifier ; <nl> import io . realm . internal . async . RealmThreadPoolExecutor ; <nl> import io . realm . log . RealmLog ; <nl> import rx . Observable ; <nl> @ @ - 76 , 7 + 75 , 7 @ @ abstract class BaseRealm implements Closeable { <nl> this . threadId = Thread . currentThread ( ) . getId ( ) ; <nl> this . configuration = configuration ; <nl> <nl> - this . sharedRealm = SharedRealm . getInstance ( configuration , new AndroidRealmNotifier ( ) , <nl> + this . sharedRealm = SharedRealm . getInstance ( configuration , <nl> ! ( this instanceof Realm ) ? null : <nl> new SharedRealm . SchemaVersionListener ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index bd95936 . . 7462444 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 271 , 7 + 271 , 7 @ @ public abstract class RealmObject implements RealmModel { <nl> RealmObjectProxy proxy = ( RealmObjectProxy ) object ; <nl> BaseRealm realm = proxy . realmGet $ proxyState ( ) . getRealm $ realm ( ) ; <nl> realm . checkIfValid ( ) ; <nl> - SharedRealm . getCapabilities ( ) . checkCanDeliverNotification ( " Listener cannot be added . " ) ; <nl> + realm . sharedRealm . capabilities . checkCanDeliverNotification ( " Listener cannot be added . " ) ; <nl> / / noinspection unchecked <nl> proxy . realmGet $ proxyState ( ) . addChangeListener ( listener ) ; <nl> } else { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java b / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java <nl> index 021fffb . . abfff3d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java <nl> @ @ - 16 , 7 + 16 , 23 @ @ <nl> <nl> package io . realm . internal ; <nl> <nl> + / * * <nl> + * To describe what does the Realm instance can do associated with the thread it is created on . <nl> + * The capabilities are determined when the Realm gets created . This interface could be called from another thread which <nl> + * is different from where the Realm is created on . <nl> + * / <nl> public interface Capabilities { <nl> + / * * <nl> + * Return true if this Realm can be notified by another thread . <nl> + * <nl> + * @ return true if this Realm can be notified from an other thread . <nl> + * / <nl> boolean canDeliverNotification ( ) ; <nl> + <nl> + / * * <nl> + * Throw if this Realm cannot receive notifications . <nl> + * <nl> + * @ param exceptionMessage message which is contained in the exception . <nl> + * / <nl> void checkCanDeliverNotification ( String exceptionMessage ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> index 1846779 . . 3243243 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> @ @ - 17 , 6 + 17 , 8 @ @ <nl> package io . realm . internal ; <nl> <nl> import java . io . Closeable ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> <nl> import io . realm . RealmChangeListener ; <nl> <nl> @ @ - 51 , 6 + 53 , 8 @ @ public abstract class RealmNotifier implements Closeable { <nl> } <nl> } ; <nl> <nl> + private List < Runnable > transactionCallbacks = new ArrayList < Runnable > ( ) ; <nl> + <nl> / / This is called by OS when other thread / process changes the Realm . <nl> / / This is getting called on the same thread which created the Realm . <nl> / / | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - | <nl> @ @ - 70 , 6 + 74 , 10 @ @ public abstract class RealmNotifier implements Closeable { <nl> @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp <nl> protected void didChange ( ) { <nl> realmObserverPairs . foreach ( onChangeCallBack ) ; <nl> + for ( Runnable runnable : transactionCallbacks ) { <nl> + runnable . run ( ) ; <nl> + } <nl> + transactionCallbacks . clear ( ) ; <nl> } <nl> <nl> @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp <nl> @ @ - 103 , 5 + 111 , 11 @ @ public abstract class RealmNotifier implements Closeable { <nl> realmObserverPairs . clear ( ) ; <nl> } <nl> <nl> + public void addTransactionCallback ( Runnable runnable ) { <nl> + transactionCallbacks . add ( runnable ) ; <nl> + } <nl> + <nl> public abstract void postAtFrontOfQueue ( Runnable runnable ) ; <nl> + <nl> + public abstract void post ( Runnable runnable ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> index 3fb19ae . . de6fe56 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . util . concurrent . CopyOnWriteArrayList ; <nl> import io . realm . RealmConfiguration ; <nl> import io . realm . RealmSchema ; <nl> import io . realm . internal . android . AndroidCapabilities ; <nl> + import io . realm . internal . android . AndroidRealmNotifier ; <nl> <nl> public final class SharedRealm implements Closeable { <nl> <nl> @ @ - 36 , 8 + 37 , 6 @ @ public final class SharedRealm implements Closeable { <nl> public static final byte FILE _ EXCEPTION _ KIND _ INCOMPATIBLE _ LOCK _ FILE = 4 ; <nl> public static final byte FILE _ EXCEPTION _ KIND _ FORMAT _ UPGRADE _ REQUIRED = 5 ; <nl> <nl> - private static final Capabilities capabilities = new AndroidCapabilities ( ) ; <nl> - <nl> public static void initialize ( File tempDirectory ) { <nl> if ( SharedRealm . temporaryDirectory ! = null ) { <nl> / / already initialized <nl> @ @ - 110 , 6 + 109 , 8 @ @ public final class SharedRealm implements Closeable { <nl> public final RowNotifier rowNotifier ; <nl> public final ObjectServerFacade objectServerFacade ; <nl> public final List < WeakReference < Collection > > collections = new CopyOnWriteArrayList < WeakReference < Collection > > ( ) ; <nl> + public final Capabilities capabilities ; <nl> + <nl> / / To prevent overflow the message queue . <nl> public boolean disableSnapshotPosted = false ; <nl> <nl> @ @ - 176 , 29 + 177 , 30 @ @ public final class SharedRealm implements Closeable { <nl> private long lastSchemaVersion ; <nl> private final SchemaVersionListener schemaChangeListener ; <nl> <nl> - private SharedRealm ( long nativePtr , RealmConfiguration configuration , RealmNotifier notifier , <nl> - RowNotifier rowNotifier , SchemaVersionListener schemaVersionListener ) { <nl> + private SharedRealm ( long nativePtr , RealmConfiguration configuration , Capabilities capabilities , <nl> + RealmNotifier notifier , RowNotifier rowNotifier , SchemaVersionListener schemaVersionListener ) { <nl> + context = new Context ( ) ; <nl> + <nl> this . nativePtr = nativePtr ; <nl> this . configuration = configuration ; <nl> <nl> - if ( notifier ! = null ) { <nl> - notifier . setSharedRealm ( this ) ; <nl> - } <nl> + this . capabilities = capabilities ; <nl> this . realmNotifier = notifier ; <nl> - <nl> + if ( this . realmNotifier ! = null ) { <nl> + this . realmNotifier . setSharedRealm ( this ) ; <nl> + } <nl> this . rowNotifier = rowNotifier ; <nl> this . schemaChangeListener = schemaVersionListener ; <nl> - context = new Context ( ) ; <nl> this . lastSchemaVersion = schemaVersionListener = = null ? - 1L : getSchemaVersion ( ) ; <nl> objectServerFacade = null ; <nl> nativeSetAutoRefresh ( nativePtr , capabilities . canDeliverNotification ( ) ) ; <nl> } <nl> <nl> public static SharedRealm getInstance ( RealmConfiguration config ) { <nl> - return getInstance ( config , null , null ) ; <nl> + return getInstance ( config , null ) ; <nl> } <nl> <nl> - public static SharedRealm getInstance ( RealmConfiguration config , RealmNotifier realmNotifier , <nl> + public static SharedRealm getInstance ( RealmConfiguration config , <nl> SchemaVersionListener schemaVersionListener ) { <nl> String [ ] userAndServer = ObjectServerFacade . getSyncFacadeIfPossible ( ) . getUserAndServerUrl ( config ) ; <nl> String rosServerUrl = userAndServer [ 0 ] ; <nl> @ @ - 206 , 6 + 208 , 7 @ @ public final class SharedRealm implements Closeable { <nl> boolean enable _ caching = false ; / / Handled in Java currently <nl> boolean disableFormatUpgrade = false ; / / TODO Double negatives : / <nl> boolean autoChangeNotifications = true ; <nl> + <nl> long nativeConfigPtr = nativeCreateConfig ( <nl> config . getPath ( ) , <nl> config . getEncryptionKey ( ) , <nl> @ @ - 216 , 11 + 219 , 15 @ @ public final class SharedRealm implements Closeable { <nl> autoChangeNotifications , <nl> rosServerUrl , <nl> rosUserToken ) ; <nl> + <nl> + Capabilities capabilities = new AndroidCapabilities ( ) ; <nl> + RealmNotifier realmNotifier = new AndroidRealmNotifier ( capabilities ) ; <nl> RowNotifier rowNotifier = new RowNotifier ( ) ; <nl> try { <nl> return new SharedRealm ( <nl> nativeGetSharedRealm ( nativeConfigPtr , realmNotifier , rowNotifier ) , <nl> config , <nl> + capabilities , <nl> realmNotifier , <nl> rowNotifier , <nl> schemaVersionListener ) ; <nl> @ @ - 229 , 8 + 236 , 7 @ @ public final class SharedRealm implements Closeable { <nl> } <nl> } <nl> <nl> - / / FIXME : can it be protected ? <nl> - public long getNativePtr ( ) { <nl> + long getNativePtr ( ) { <nl> return nativePtr ; <nl> } <nl> <nl> @ @ - 359 , 10 + 365 , 6 @ @ public final class SharedRealm implements Closeable { <nl> return nativeIsAutoRefresh ( nativePtr ) ; <nl> } <nl> <nl> - public static Capabilities getCapabilities ( ) { <nl> - return capabilities ; <nl> - } <nl> - <nl> @ Override <nl> public void close ( ) { <nl> if ( realmNotifier ! = null ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java <nl> index 93f00cf . . 1add1cc 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java <nl> @ @ - 19 , 20 + 19 , 31 @ @ import android . os . Looper ; <nl> <nl> import io . realm . internal . Capabilities ; <nl> <nl> + / * * <nl> + * Realm capabilities for Android . <nl> + * / <nl> public class AndroidCapabilities implements Capabilities { <nl> <nl> + private final boolean hasLooper ; <nl> + private final boolean isIntentServiceThread ; <nl> + <nl> + public AndroidCapabilities ( ) { <nl> + hasLooper = Looper . myLooper ( ) ! = null ; <nl> + isIntentServiceThread = isIntentServiceThread ( ) ; <nl> + } <nl> + <nl> @ Override <nl> public boolean canDeliverNotification ( ) { <nl> - return ( Looper . myLooper ( ) ! = null & & ! isIntentServiceThread ( ) ) ; <nl> + return hasLooper & & ! isIntentServiceThread ; <nl> } <nl> <nl> @ Override <nl> public void checkCanDeliverNotification ( String exceptionMessage ) { <nl> - if ( Looper . myLooper ( ) = = null ) { <nl> + if ( ! hasLooper ) { <nl> throw new IllegalStateException ( exceptionMessage = = null ? " " : ( exceptionMessage + " " ) + <nl> " Realm cannot be automatically updated on a thread without a looper . " ) ; <nl> } <nl> - if ( isIntentServiceThread ( ) ) { <nl> + if ( isIntentServiceThread ) { <nl> throw new IllegalStateException ( exceptionMessage = = null ? " " : ( exceptionMessage + " " ) + <nl> " Realm cannot be automatically updated on a IntentService thread . " ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java <nl> index 75e4c04 . . 9ad9fc5 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java <nl> @ @ - 3 , 14 + 3 , 14 @ @ package io . realm . internal . android ; <nl> import android . os . Handler ; <nl> import android . os . Looper ; <nl> <nl> + import io . realm . internal . Capabilities ; <nl> import io . realm . internal . RealmNotifier ; <nl> - import io . realm . internal . SharedRealm ; <nl> <nl> public class AndroidRealmNotifier extends RealmNotifier { <nl> - private final Handler handler ; <nl> + private Handler handler ; <nl> <nl> - public AndroidRealmNotifier ( ) { <nl> - if ( SharedRealm . getCapabilities ( ) . canDeliverNotification ( ) ) { <nl> + public AndroidRealmNotifier ( Capabilities capabilities ) { <nl> + if ( capabilities . canDeliverNotification ( ) ) { <nl> handler = new Handler ( Looper . myLooper ( ) ) ; <nl> } else { <nl> handler = null ; <nl> @ @ - 23 , 4 + 23 , 11 @ @ public class AndroidRealmNotifier extends RealmNotifier { <nl> handler . postAtFrontOfQueue ( runnable ) ; <nl> } <nl> } <nl> + <nl> + @ Override <nl> + public void post ( Runnable runnable ) { <nl> + if ( handler ! = null ) { <nl> + handler . post ( runnable ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md <nl> index 3f33bfa . . ea203c2 100644 <nl> - - - a / examples / rxJavaExample / README . md <nl> + + + b / examples / rxJavaExample / README . md <nl> @ @ - 5 , 13 + 5 , 17 @ @ <nl> - Observables might have a default Scheduler they operate on that is <nl> different than the one the RealmObject was created on . <nl> <nl> - - RealmObjects auto - update . Observables that operate on multiple " versions " <nl> + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " <nl> will most likely not work as expected . <nl> <nl> - Retrofit automatically offload to a worker thread . <nl> <nl> - Use Realm async API instead of subscribeOn to offload Realm work . <nl> <nl> + - You can use Realm . copyFromRealm to make a copy of Realm data <nl> + <nl> + <nl> + <nl> <nl> # # Resources ( TODO ) <nl> - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> index 12a0c4a . . ff099ad 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> realm . commitTransaction ( ) ; <nl> <nl> final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> assertTrue ( rxObject = = obj ) ; <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> final AllTypes obj = realm . createObject ( AllTypes . class ) ; <nl> realm . commitTransaction ( ) ; <nl> <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> subscriberCalled . addAndGet ( 1 ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index a3e5103 . . 4e420ec 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; <nl> import java . lang . ref . WeakReference ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> - import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> - import java . util . Set ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> - import java . util . concurrent . CopyOnWriteArraySet ; <nl> <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> import io . realm . internal . SharedGroupManager ; <nl> @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; <nl> import io . realm . internal . android . ReleaseAndroidLogger ; <nl> import io . realm . internal . async . RealmThreadPoolExecutor ; <nl> import io . realm . internal . log . RealmLog ; <nl> - import io . realm . rx . RxObservableFactory ; <nl> import rx . Observable ; <nl> <nl> / * * <nl> @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; <nl> * @ see io . realm . Realm <nl> * @ see io . realm . DynamicRealm <nl> * / <nl> - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { <nl> protected static final long UNVERSIONED = - 1 ; <nl> private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; <nl> private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; <nl> @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> + public Observable < T > observable ( ) { <nl> + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index f979667 . . 627ac4a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; <nl> * @ see Realm <nl> * @ see RealmSchema <nl> * / <nl> - public final class DynamicRealm extends BaseRealm { <nl> + public final class DynamicRealm extends BaseRealm < DynamicRealm > { <nl> <nl> private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { <nl> super ( configuration , autoRefresh ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 40ad05a . . 318e9e9 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; <nl> * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . <nl> * Using a DynamicRealmObject is slower than using the regular RealmObject class . <nl> * / <nl> - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { <nl> + public final class DynamicRealmObject extends RealmObject { <nl> <nl> / * * <nl> * Creates a dynamic Realm object based on an existing object . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> index 5283cb5 . . 24824b6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { <nl> * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . <nl> * @ return the { @ link Realm } or { @ link DynamicRealm } instance . <nl> * / <nl> - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> Class < E > realmClass ) { <nl> boolean isCacheInMap = true ; <nl> RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index 3978bfc . . 34960d0 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; <nl> * / <nl> <nl> @ RealmClass <nl> - public abstract class RealmObject < E extends RealmObject > { <nl> + public abstract class RealmObject { <nl> <nl> protected Row row ; <nl> protected BaseRealm realm ; <nl> @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { <nl> + if ( ! this . getClass ( ) . isInstance ( type ) ) { <nl> + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; <nl> + } <nl> return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index 89274ba . . fde3390 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { <nl> * @ return the object found or { @ code null } if no object matches the query conditions . <nl> * @ see io . realm . RealmObject <nl> * / <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E findFirst ( ) { <nl> checkQueryIsNotReused ( ) ; <nl> long rowIndex = this . query . find ( ) ; <nl> if ( rowIndex > = 0 ) { <nl> - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> } else { <nl> return null ; <nl> } <nl> } <nl> <nl> - / / FIXME Replace with Schema when it is available <nl> - private static class DynamicColumnMap implements Map < String , Long > { <nl> - private final Table table ; <nl> - <nl> - public DynamicColumnMap ( Table table ) { <nl> - this . table = table ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long get ( Object key ) { <nl> - return table . getColumnIndex ( ( String ) key ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void clear ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsKey ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsValue ( Object value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < Entry < String , Long > > entrySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean isEmpty ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < String > keySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long put ( String key , Long value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void putAll ( Map < ? extends String , ? extends Long > map ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long remove ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int size ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Collection < Long > values ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - } <nl> - <nl> / * * <nl> * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread <nl> * This method is only available from a Looper thread . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index db09759 . . 3629486 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . <nl> * / <nl> @ Override <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E get ( int location ) { <nl> E obj ; <nl> realm . checkIfValid ( ) ; <nl> TableOrView table = getTable ( ) ; <nl> if ( table instanceof TableView ) { <nl> - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> } else { <nl> - obj = ( E ) realm . get ( classSpec , className , location ) ; <nl> + obj = realm . get ( classSpec , className , location ) ; <nl> } <nl> <nl> return obj ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> index 718e705 . . 940f217 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { <nl> @ Override <nl> @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> checkRxJavaAvailable ( ) ; <nl> throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { <nl> + public < E extends RealmObject > Observable < E > from ( final E object ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < E > ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> index 0984f85 . . 14fd548 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { <nl> * @ param results RealmResults to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> <nl> / * * <nl> * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each <nl> @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { <nl> * @ param list RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> <nl> <nl> / * * <nl> @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { <nl> * @ param object RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < E > from ( E object ) ; <nl> + < E extends RealmObject > Observable < E > from ( E object ) ; <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 index e162fbd . . d658ff5 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 @ @ - 32 , 7 + 32 , 6 @ @ import io . realm . RealmChangeListener ; 
 import io . realm . RealmConfiguration ; 
 import io . realm . RealmFieldType ; 
 import io . realm . TestHelper ; 
 - import io . realm . internal . android . AndroidRealmNotifier ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 @ @ - 67 , 7 + 66 , 7 @ @ public class CollectionTests { 
 } 
 
 private SharedRealm getSharedRealm ( ) { 
 - return SharedRealm . getInstance ( config , new AndroidRealmNotifier ( ) , null ) ; 
 + return SharedRealm . getInstance ( config , null ) ; 
 } 
 
 private void populateData ( ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java 
 index fc93fc0 . . dacbaa6 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / RowNotifierTests . java 
 @ @ - 31 , 7 + 31 , 6 @ @ import io . realm . RealmChangeListener ; 
 import io . realm . RealmConfiguration ; 
 import io . realm . RealmFieldType ; 
 import io . realm . TestHelper ; 
 - import io . realm . internal . android . AndroidRealmNotifier ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 @ @ - 66 , 7 + 65 , 7 @ @ public class RowNotifierTests { 
 } 
 
 private SharedRealm getSharedRealm ( ) { 
 - return SharedRealm . getInstance ( config , new AndroidRealmNotifier ( ) , null ) ; 
 + return SharedRealm . getInstance ( config , null ) ; 
 } 
 
 private void populateData ( ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java 
 index 9dab44e . . f7b0ec9 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / SharedRealmTests . java 
 @ @ - 163 , 7 + 163 , 7 @ @ public class SharedRealmTests { 
 final AtomicLong schemaVersionFromListener = new AtomicLong ( - 1L ) ; 
 
 sharedRealm . close ( ) ; 
 - sharedRealm = SharedRealm . getInstance ( config , null , new SharedRealm . SchemaVersionListener ( ) { 
 + sharedRealm = SharedRealm . getInstance ( config , new SharedRealm . SchemaVersionListener ( ) { 
 @ Override 
 public void onSchemaVersionChanged ( long currentVersion ) { 
 listenerCalled . set ( true ) ; 
 @ @ - 202 , 7 + 202 , 7 @ @ public class SharedRealmTests { 
 final AtomicLong schemaVersionFromListener = new AtomicLong ( - 1L ) ; 
 
 sharedRealm . close ( ) ; 
 - sharedRealm = SharedRealm . getInstance ( config , null , new SharedRealm . SchemaVersionListener ( ) { 
 + sharedRealm = SharedRealm . getInstance ( config , new SharedRealm . SchemaVersionListener ( ) { 
 @ Override 
 public void onSchemaVersionChanged ( long currentVersion ) { 
 listenerCalled . set ( true ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index b866d2f . . 15b00a1 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 37 , 7 + 37 , 6 @ @ import io . realm . internal . Row ; 
 import io . realm . internal . Table ; 
 import io . realm . internal . UncheckedRow ; 
 import io . realm . internal . Util ; 
 - import io . realm . internal . android . AndroidRealmNotifier ; 
 import io . realm . internal . async . RealmThreadPoolExecutor ; 
 import io . realm . log . RealmLog ; 
 import rx . Observable ; 
 @ @ - 76 , 7 + 75 , 7 @ @ abstract class BaseRealm implements Closeable { 
 this . threadId = Thread . currentThread ( ) . getId ( ) ; 
 this . configuration = configuration ; 
 
 - this . sharedRealm = SharedRealm . getInstance ( configuration , new AndroidRealmNotifier ( ) , 
 + this . sharedRealm = SharedRealm . getInstance ( configuration , 
 ! ( this instanceof Realm ) ? null : 
 new SharedRealm . SchemaVersionListener ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index bd95936 . . 7462444 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 271 , 7 + 271 , 7 @ @ public abstract class RealmObject implements RealmModel { 
 RealmObjectProxy proxy = ( RealmObjectProxy ) object ; 
 BaseRealm realm = proxy . realmGet $ proxyState ( ) . getRealm $ realm ( ) ; 
 realm . checkIfValid ( ) ; 
 - SharedRealm . getCapabilities ( ) . checkCanDeliverNotification ( " Listener cannot be added . " ) ; 
 + realm . sharedRealm . capabilities . checkCanDeliverNotification ( " Listener cannot be added . " ) ; 
 / / noinspection unchecked 
 proxy . realmGet $ proxyState ( ) . addChangeListener ( listener ) ; 
 } else { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java b / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java 
 index 021fffb . . abfff3d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Capabilities . java 
 @ @ - 16 , 7 + 16 , 23 @ @ 
 
 package io . realm . internal ; 
 
 + / * * 
 + * To describe what does the Realm instance can do associated with the thread it is created on . 
 + * The capabilities are determined when the Realm gets created . This interface could be called from another thread which 
 + * is different from where the Realm is created on . 
 + * / 
 public interface Capabilities { 
 + / * * 
 + * Return true if this Realm can be notified by another thread . 
 + * 
 + * @ return true if this Realm can be notified from an other thread . 
 + * / 
 boolean canDeliverNotification ( ) ; 
 + 
 + / * * 
 + * Throw if this Realm cannot receive notifications . 
 + * 
 + * @ param exceptionMessage message which is contained in the exception . 
 + * / 
 void checkCanDeliverNotification ( String exceptionMessage ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 index 1846779 . . 3243243 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 @ @ - 17 , 6 + 17 , 8 @ @ 
 package io . realm . internal ; 
 
 import java . io . Closeable ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 
 import io . realm . RealmChangeListener ; 
 
 @ @ - 51 , 6 + 53 , 8 @ @ public abstract class RealmNotifier implements Closeable { 
 } 
 } ; 
 
 + private List < Runnable > transactionCallbacks = new ArrayList < Runnable > ( ) ; 
 + 
 / / This is called by OS when other thread / process changes the Realm . 
 / / This is getting called on the same thread which created the Realm . 
 / / | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - | 
 @ @ - 70 , 6 + 74 , 10 @ @ public abstract class RealmNotifier implements Closeable { 
 @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp 
 protected void didChange ( ) { 
 realmObserverPairs . foreach ( onChangeCallBack ) ; 
 + for ( Runnable runnable : transactionCallbacks ) { 
 + runnable . run ( ) ; 
 + } 
 + transactionCallbacks . clear ( ) ; 
 } 
 
 @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp 
 @ @ - 103 , 5 + 111 , 11 @ @ public abstract class RealmNotifier implements Closeable { 
 realmObserverPairs . clear ( ) ; 
 } 
 
 + public void addTransactionCallback ( Runnable runnable ) { 
 + transactionCallbacks . add ( runnable ) ; 
 + } 
 + 
 public abstract void postAtFrontOfQueue ( Runnable runnable ) ; 
 + 
 + public abstract void post ( Runnable runnable ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 index 3fb19ae . . de6fe56 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . util . concurrent . CopyOnWriteArrayList ; 
 import io . realm . RealmConfiguration ; 
 import io . realm . RealmSchema ; 
 import io . realm . internal . android . AndroidCapabilities ; 
 + import io . realm . internal . android . AndroidRealmNotifier ; 
 
 public final class SharedRealm implements Closeable { 
 
 @ @ - 36 , 8 + 37 , 6 @ @ public final class SharedRealm implements Closeable { 
 public static final byte FILE _ EXCEPTION _ KIND _ INCOMPATIBLE _ LOCK _ FILE = 4 ; 
 public static final byte FILE _ EXCEPTION _ KIND _ FORMAT _ UPGRADE _ REQUIRED = 5 ; 
 
 - private static final Capabilities capabilities = new AndroidCapabilities ( ) ; 
 - 
 public static void initialize ( File tempDirectory ) { 
 if ( SharedRealm . temporaryDirectory ! = null ) { 
 / / already initialized 
 @ @ - 110 , 6 + 109 , 8 @ @ public final class SharedRealm implements Closeable { 
 public final RowNotifier rowNotifier ; 
 public final ObjectServerFacade objectServerFacade ; 
 public final List < WeakReference < Collection > > collections = new CopyOnWriteArrayList < WeakReference < Collection > > ( ) ; 
 + public final Capabilities capabilities ; 
 + 
 / / To prevent overflow the message queue . 
 public boolean disableSnapshotPosted = false ; 
 
 @ @ - 176 , 29 + 177 , 30 @ @ public final class SharedRealm implements Closeable { 
 private long lastSchemaVersion ; 
 private final SchemaVersionListener schemaChangeListener ; 
 
 - private SharedRealm ( long nativePtr , RealmConfiguration configuration , RealmNotifier notifier , 
 - RowNotifier rowNotifier , SchemaVersionListener schemaVersionListener ) { 
 + private SharedRealm ( long nativePtr , RealmConfiguration configuration , Capabilities capabilities , 
 + RealmNotifier notifier , RowNotifier rowNotifier , SchemaVersionListener schemaVersionListener ) { 
 + context = new Context ( ) ; 
 + 
 this . nativePtr = nativePtr ; 
 this . configuration = configuration ; 
 
 - if ( notifier ! = null ) { 
 - notifier . setSharedRealm ( this ) ; 
 - } 
 + this . capabilities = capabilities ; 
 this . realmNotifier = notifier ; 
 - 
 + if ( this . realmNotifier ! = null ) { 
 + this . realmNotifier . setSharedRealm ( this ) ; 
 + } 
 this . rowNotifier = rowNotifier ; 
 this . schemaChangeListener = schemaVersionListener ; 
 - context = new Context ( ) ; 
 this . lastSchemaVersion = schemaVersionListener = = null ? - 1L : getSchemaVersion ( ) ; 
 objectServerFacade = null ; 
 nativeSetAutoRefresh ( nativePtr , capabilities . canDeliverNotification ( ) ) ; 
 } 
 
 public static SharedRealm getInstance ( RealmConfiguration config ) { 
 - return getInstance ( config , null , null ) ; 
 + return getInstance ( config , null ) ; 
 } 
 
 - public static SharedRealm getInstance ( RealmConfiguration config , RealmNotifier realmNotifier , 
 + public static SharedRealm getInstance ( RealmConfiguration config , 
 SchemaVersionListener schemaVersionListener ) { 
 String [ ] userAndServer = ObjectServerFacade . getSyncFacadeIfPossible ( ) . getUserAndServerUrl ( config ) ; 
 String rosServerUrl = userAndServer [ 0 ] ; 
 @ @ - 206 , 6 + 208 , 7 @ @ public final class SharedRealm implements Closeable { 
 boolean enable _ caching = false ; / / Handled in Java currently 
 boolean disableFormatUpgrade = false ; / / TODO Double negatives : / 
 boolean autoChangeNotifications = true ; 
 + 
 long nativeConfigPtr = nativeCreateConfig ( 
 config . getPath ( ) , 
 config . getEncryptionKey ( ) , 
 @ @ - 216 , 11 + 219 , 15 @ @ public final class SharedRealm implements Closeable { 
 autoChangeNotifications , 
 rosServerUrl , 
 rosUserToken ) ; 
 + 
 + Capabilities capabilities = new AndroidCapabilities ( ) ; 
 + RealmNotifier realmNotifier = new AndroidRealmNotifier ( capabilities ) ; 
 RowNotifier rowNotifier = new RowNotifier ( ) ; 
 try { 
 return new SharedRealm ( 
 nativeGetSharedRealm ( nativeConfigPtr , realmNotifier , rowNotifier ) , 
 config , 
 + capabilities , 
 realmNotifier , 
 rowNotifier , 
 schemaVersionListener ) ; 
 @ @ - 229 , 8 + 236 , 7 @ @ public final class SharedRealm implements Closeable { 
 } 
 } 
 
 - / / FIXME : can it be protected ? 
 - public long getNativePtr ( ) { 
 + long getNativePtr ( ) { 
 return nativePtr ; 
 } 
 
 @ @ - 359 , 10 + 365 , 6 @ @ public final class SharedRealm implements Closeable { 
 return nativeIsAutoRefresh ( nativePtr ) ; 
 } 
 
 - public static Capabilities getCapabilities ( ) { 
 - return capabilities ; 
 - } 
 - 
 @ Override 
 public void close ( ) { 
 if ( realmNotifier ! = null ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java 
 index 93f00cf . . 1add1cc 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidCapabilities . java 
 @ @ - 19 , 20 + 19 , 31 @ @ import android . os . Looper ; 
 
 import io . realm . internal . Capabilities ; 
 
 + / * * 
 + * Realm capabilities for Android . 
 + * / 
 public class AndroidCapabilities implements Capabilities { 
 
 + private final boolean hasLooper ; 
 + private final boolean isIntentServiceThread ; 
 + 
 + public AndroidCapabilities ( ) { 
 + hasLooper = Looper . myLooper ( ) ! = null ; 
 + isIntentServiceThread = isIntentServiceThread ( ) ; 
 + } 
 + 
 @ Override 
 public boolean canDeliverNotification ( ) { 
 - return ( Looper . myLooper ( ) ! = null & & ! isIntentServiceThread ( ) ) ; 
 + return hasLooper & & ! isIntentServiceThread ; 
 } 
 
 @ Override 
 public void checkCanDeliverNotification ( String exceptionMessage ) { 
 - if ( Looper . myLooper ( ) = = null ) { 
 + if ( ! hasLooper ) { 
 throw new IllegalStateException ( exceptionMessage = = null ? " " : ( exceptionMessage + " " ) + 
 " Realm cannot be automatically updated on a thread without a looper . " ) ; 
 } 
 - if ( isIntentServiceThread ( ) ) { 
 + if ( isIntentServiceThread ) { 
 throw new IllegalStateException ( exceptionMessage = = null ? " " : ( exceptionMessage + " " ) + 
 " Realm cannot be automatically updated on a IntentService thread . " ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java 
 index 75e4c04 . . 9ad9fc5 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java 
 @ @ - 3 , 14 + 3 , 14 @ @ package io . realm . internal . android ; 
 import android . os . Handler ; 
 import android . os . Looper ; 
 
 + import io . realm . internal . Capabilities ; 
 import io . realm . internal . RealmNotifier ; 
 - import io . realm . internal . SharedRealm ; 
 
 public class AndroidRealmNotifier extends RealmNotifier { 
 - private final Handler handler ; 
 + private Handler handler ; 
 
 - public AndroidRealmNotifier ( ) { 
 - if ( SharedRealm . getCapabilities ( ) . canDeliverNotification ( ) ) { 
 + public AndroidRealmNotifier ( Capabilities capabilities ) { 
 + if ( capabilities . canDeliverNotification ( ) ) { 
 handler = new Handler ( Looper . myLooper ( ) ) ; 
 } else { 
 handler = null ; 
 @ @ - 23 , 4 + 23 , 11 @ @ public class AndroidRealmNotifier extends RealmNotifier { 
 handler . postAtFrontOfQueue ( runnable ) ; 
 } 
 } 
 + 
 + @ Override 
 + public void post ( Runnable runnable ) { 
 + if ( handler ! = null ) { 
 + handler . post ( runnable ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md 
 index 3f33bfa . . ea203c2 100644 
 - - - a / examples / rxJavaExample / README . md 
 + + + b / examples / rxJavaExample / README . md 
 @ @ - 5 , 13 + 5 , 17 @ @ 
 - Observables might have a default Scheduler they operate on that is 
 different than the one the RealmObject was created on . 
 
 - - RealmObjects auto - update . Observables that operate on multiple " versions " 
 + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " 
 will most likely not work as expected . 
 
 - Retrofit automatically offload to a worker thread . 
 
 - Use Realm async API instead of subscribeOn to offload Realm work . 
 
 + - You can use Realm . copyFromRealm to make a copy of Realm data 
 + 
 + 
 + 
 
 # # Resources ( TODO ) 
 - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 index 12a0c4a . . ff099ad 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 realm . commitTransaction ( ) ; 
 
 final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 assertTrue ( rxObject = = obj ) ; 
 @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 final AllTypes obj = realm . createObject ( AllTypes . class ) ; 
 realm . commitTransaction ( ) ; 
 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 subscriberCalled . addAndGet ( 1 ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index a3e5103 . . 4e420ec 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; 
 import java . lang . ref . WeakReference ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 - import java . util . HashMap ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 - import java . util . Set ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 - import java . util . concurrent . CopyOnWriteArraySet ; 
 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 import io . realm . internal . SharedGroupManager ; 
 @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; 
 import io . realm . internal . android . ReleaseAndroidLogger ; 
 import io . realm . internal . async . RealmThreadPoolExecutor ; 
 import io . realm . internal . log . RealmLog ; 
 - import io . realm . rx . RxObservableFactory ; 
 import rx . Observable ; 
 
 / * * 
 @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; 
 * @ see io . realm . Realm 
 * @ see io . realm . DynamicRealm 
 * / 
 - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { 
 protected static final long UNVERSIONED = - 1 ; 
 private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; 
 private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; 
 @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; 
 + public Observable < T > observable ( ) { 
 + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index f979667 . . 627ac4a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; 
 * @ see Realm 
 * @ see RealmSchema 
 * / 
 - public final class DynamicRealm extends BaseRealm { 
 + public final class DynamicRealm extends BaseRealm < DynamicRealm > { 
 
 private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { 
 super ( configuration , autoRefresh ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 40ad05a . . 318e9e9 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; 
 * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . 
 * Using a DynamicRealmObject is slower than using the regular RealmObject class . 
 * / 
 - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { 
 + public final class DynamicRealmObject extends RealmObject { 
 
 / * * 
 * Creates a dynamic Realm object based on an existing object . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 index 5283cb5 . . 24824b6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { 
 * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . 
 * @ return the { @ link Realm } or { @ link DynamicRealm } instance . 
 * / 
 - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 Class < E > realmClass ) { 
 boolean isCacheInMap = true ; 
 RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index 3978bfc . . 34960d0 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; 
 * / 
 
 @ RealmClass 
 - public abstract class RealmObject < E extends RealmObject > { 
 + public abstract class RealmObject { 
 
 protected Row row ; 
 protected BaseRealm realm ; 
 @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { 
 + if ( ! this . getClass ( ) . isInstance ( type ) ) { 
 + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; 
 + } 
 return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index 89274ba . . fde3390 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { 
 * @ return the object found or { @ code null } if no object matches the query conditions . 
 * @ see io . realm . RealmObject 
 * / 
 - @ SuppressWarnings ( " unchecked " ) 
 public E findFirst ( ) { 
 checkQueryIsNotReused ( ) ; 
 long rowIndex = this . query . find ( ) ; 
 if ( rowIndex > = 0 ) { 
 - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 } else { 
 return null ; 
 } 
 } 
 
 - / / FIXME Replace with Schema when it is available 
 - private static class DynamicColumnMap implements Map < String , Long > { 
 - private final Table table ; 
 - 
 - public DynamicColumnMap ( Table table ) { 
 - this . table = table ; 
 - } 
 - 
 - @ Override 
 - public Long get ( Object key ) { 
 - return table . getColumnIndex ( ( String ) key ) ; 
 - } 
 - 
 - @ Override 
 - public void clear ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsKey ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsValue ( Object value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < Entry < String , Long > > entrySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean isEmpty ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < String > keySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long put ( String key , Long value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public void putAll ( Map < ? extends String , ? extends Long > map ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long remove ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public int size ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Collection < Long > values ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - } 
 - 
 / * * 
 * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread 
 * This method is only available from a Looper thread . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index db09759 . . 3629486 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . 
 * / 
 @ Override 
 - @ SuppressWarnings ( " unchecked " ) 
 public E get ( int location ) { 
 E obj ; 
 realm . checkIfValid ( ) ; 
 TableOrView table = getTable ( ) ; 
 if ( table instanceof TableView ) { 
 - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 } else { 
 - obj = ( E ) realm . get ( classSpec , className , location ) ; 
 + obj = realm . get ( classSpec , className , location ) ; 
 } 
 
 return obj ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 index 718e705 . . 940f217 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { 
 @ Override 
 @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 checkRxJavaAvailable ( ) ; 
 throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { 
 + public < E extends RealmObject > Observable < E > from ( final E object ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < E > ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 index 0984f85 . . 14fd548 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { 
 * @ param results RealmResults to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 
 / * * 
 * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each 
 @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { 
 * @ param list RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 
 
 / * * 
 @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { 
 * @ param object RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < E > from ( E object ) ; 
 + < E extends RealmObject > Observable < E > from ( E object ) ; 
 }
