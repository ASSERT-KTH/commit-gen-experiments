BLEU SCORE: 3.072106176664105E-6

TEST MSG: Fix findbugs
GENERATED MSG: remove ` loadMediatorClass ( Realm ) ` since ` loadMediatorClass ( Realm ) ` and ` setupColumnIndices ( Realm ) ` are completely the same .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 027a37a . . a51611c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 1623 , 19 + 1623 , 7 @ @ public class Realm extends BaseRealm { <nl> * @ throws FileNotFoundException if the Realm file doesn ' t exist . <nl> * / <nl> public static void migrateRealm ( RealmConfiguration configuration ) throws FileNotFoundException { <nl> - migrateRealm ( configuration , ( RealmMigration ) null ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Called when migration needed in the Realm initialization . <nl> - * <nl> - * @ param configuration { @ link RealmConfiguration } <nl> - * @ param cause which triggers this migration . <nl> - * @ throws FileNotFoundException if the Realm file doesn ' t exist . <nl> - * / <nl> - private static void migrateRealm ( final RealmConfiguration configuration , final RealmMigrationNeededException cause ) <nl> - throws FileNotFoundException { <nl> - BaseRealm . migrateRealm ( configuration , null , cause ) ; <nl> + migrateRealm ( configuration , null ) ; <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index c8d9c9d . . 4c600c3 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 305 , 8 + 305 , 6 @ @ public final class Realm extends BaseRealm { <nl> realm . close ( ) ; <nl> throw e ; <nl> } <nl> - } else { <nl> - loadMediatorClasses ( realm ) ; <nl> } <nl> setupColumnIndices ( realm ) ; <nl> <nl> @ @ - 351 , 13 + 349 , 6 @ @ public final class Realm extends BaseRealm { <nl> } <nl> } <nl> <nl> - private static void loadMediatorClasses ( Realm realm ) { <nl> - RealmProxyMediator mediator = realm . configuration . getSchemaMediator ( ) ; <nl> - for ( Class < ? extends RealmObject > modelClass : mediator . getModelClasses ( ) ) { <nl> - realm . columnIndices . addClass ( modelClass , mediator . getColumnIndices ( modelClass ) ) ; <nl> - } <nl> - } <nl> - <nl> / * * <nl> * Create a Realm object for each object in a JSON array . This must be done within a transaction . <nl> * JSON properties with a null value will map to the default value for the data type in Realm

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 027a37a . . a51611c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 1623 , 19 + 1623 , 7 @ @ public class Realm extends BaseRealm { 
 * @ throws FileNotFoundException if the Realm file doesn ' t exist . 
 * / 
 public static void migrateRealm ( RealmConfiguration configuration ) throws FileNotFoundException { 
 - migrateRealm ( configuration , ( RealmMigration ) null ) ; 
 - } 
 - 
 - / * * 
 - * Called when migration needed in the Realm initialization . 
 - * 
 - * @ param configuration { @ link RealmConfiguration } 
 - * @ param cause which triggers this migration . 
 - * @ throws FileNotFoundException if the Realm file doesn ' t exist . 
 - * / 
 - private static void migrateRealm ( final RealmConfiguration configuration , final RealmMigrationNeededException cause ) 
 - throws FileNotFoundException { 
 - BaseRealm . migrateRealm ( configuration , null , cause ) ; 
 + migrateRealm ( configuration , null ) ; 
 } 
 
 / * *

NEAREST DIFF:
diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index c8d9c9d . . 4c600c3 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 305 , 8 + 305 , 6 @ @ public final class Realm extends BaseRealm { 
 realm . close ( ) ; 
 throw e ; 
 } 
 - } else { 
 - loadMediatorClasses ( realm ) ; 
 } 
 setupColumnIndices ( realm ) ; 
 
 @ @ - 351 , 13 + 349 , 6 @ @ public final class Realm extends BaseRealm { 
 } 
 } 
 
 - private static void loadMediatorClasses ( Realm realm ) { 
 - RealmProxyMediator mediator = realm . configuration . getSchemaMediator ( ) ; 
 - for ( Class < ? extends RealmObject > modelClass : mediator . getModelClasses ( ) ) { 
 - realm . columnIndices . addClass ( modelClass , mediator . getColumnIndices ( modelClass ) ) ; 
 - } 
 - } 
 - 
 / * * 
 * Create a Realm object for each object in a JSON array . This must be done within a transaction . 
 * JSON properties with a null value will map to the default value for the data type in Realm
