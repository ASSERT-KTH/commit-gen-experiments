BLEU SCORE: 0.033864985683445356

TEST MSG: added thread check to Realm # createObject ( Class , Object )
GENERATED MSG: Fixed Realm cache not working .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index e15d495 . . a0e7282 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 521 , 6 + 521 , 7 @ @ public class RealmTests { <nl> METHOD _ DELETE _ TYPE , <nl> METHOD _ DELETE _ ALL , <nl> METHOD _ CREATE _ OBJECT , <nl> + METHOD _ CREATE _ OBJECT _ WITH _ PRIMARY _ KEY , <nl> METHOD _ COPY _ TO _ REALM , <nl> METHOD _ COPY _ TO _ REALM _ OR _ UPDATE , <nl> METHOD _ CREATE _ ALL _ FROM _ JSON , <nl> @ @ - 563 , 6 + 564 , 9 @ @ public class RealmTests { <nl> case METHOD _ CREATE _ OBJECT : <nl> realm . createObject ( AllTypes . class ) ; <nl> break ; <nl> + case METHOD _ CREATE _ OBJECT _ WITH _ PRIMARY _ KEY : <nl> + realm . createObject ( AllJavaTypes . class , 1L ) ; <nl> + break ; <nl> case METHOD _ COPY _ TO _ REALM : <nl> realm . copyToRealm ( new AllTypes ( ) ) ; <nl> break ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index b0bca8a . . 5556515 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 697 , 6 + 697 , 7 @ @ public final class Realm extends BaseRealm { <nl> * expected value . <nl> * / <nl> public < E extends RealmModel > E createObject ( Class < E > clazz , Object primaryKeyValue ) { <nl> + checkIfValid ( ) ; <nl> Table table = schema . getTable ( clazz ) ; <nl> long rowIndex = table . addEmptyRowWithPrimaryKey ( primaryKeyValue ) ; <nl> return get ( clazz , rowIndex ) ;
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index 4de768e . . efdcf8f 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 74 , 9 + 74 , 10 @ @ public class RealmTest extends AndroidTestCase { <nl> private final static int BACKGROUND _ COMMIT _ TEST _ DATA _ SET _ SIZE = 5 ; <nl> <nl> <nl> - / / Test io . realm . Realm API <nl> + public void testRealmCache ( ) { <nl> + assertEquals ( testRealm , Realm . getInstance ( getContext ( ) ) ) ; <nl> + } <nl> <nl> - / / Realm Constructors <nl> public void testShouldCreateRealm ( ) { <nl> Realm realm = Realm . getInstance ( getContext ( ) ) ; <nl> assertNotNull ( " Realm . getInstance unexpectedly returns null " , realm ) ; <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index e2e4d8d . . c9817ae 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 365 , 7 + 365 , 7 @ @ public class Realm { <nl> <nl> private static Realm createAndValidate ( String absolutePath , byte [ ] key , boolean validateSchema , boolean autoRefresh ) { <nl> Map < Integer , Realm > realms = realmsCache . get ( ) ; <nl> - Realm realm = realms . get ( absolutePath ) ; <nl> + Realm realm = realms . get ( absolutePath . hashCode ( ) ) ; <nl> <nl> if ( realm ! = null ) { <nl> return realm ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index e15d495 . . a0e7282 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 521 , 6 + 521 , 7 @ @ public class RealmTests { 
 METHOD _ DELETE _ TYPE , 
 METHOD _ DELETE _ ALL , 
 METHOD _ CREATE _ OBJECT , 
 + METHOD _ CREATE _ OBJECT _ WITH _ PRIMARY _ KEY , 
 METHOD _ COPY _ TO _ REALM , 
 METHOD _ COPY _ TO _ REALM _ OR _ UPDATE , 
 METHOD _ CREATE _ ALL _ FROM _ JSON , 
 @ @ - 563 , 6 + 564 , 9 @ @ public class RealmTests { 
 case METHOD _ CREATE _ OBJECT : 
 realm . createObject ( AllTypes . class ) ; 
 break ; 
 + case METHOD _ CREATE _ OBJECT _ WITH _ PRIMARY _ KEY : 
 + realm . createObject ( AllJavaTypes . class , 1L ) ; 
 + break ; 
 case METHOD _ COPY _ TO _ REALM : 
 realm . copyToRealm ( new AllTypes ( ) ) ; 
 break ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index b0bca8a . . 5556515 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 697 , 6 + 697 , 7 @ @ public final class Realm extends BaseRealm { 
 * expected value . 
 * / 
 public < E extends RealmModel > E createObject ( Class < E > clazz , Object primaryKeyValue ) { 
 + checkIfValid ( ) ; 
 Table table = schema . getTable ( clazz ) ; 
 long rowIndex = table . addEmptyRowWithPrimaryKey ( primaryKeyValue ) ; 
 return get ( clazz , rowIndex ) ;

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index 4de768e . . efdcf8f 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 74 , 9 + 74 , 10 @ @ public class RealmTest extends AndroidTestCase { 
 private final static int BACKGROUND _ COMMIT _ TEST _ DATA _ SET _ SIZE = 5 ; 
 
 
 - / / Test io . realm . Realm API 
 + public void testRealmCache ( ) { 
 + assertEquals ( testRealm , Realm . getInstance ( getContext ( ) ) ) ; 
 + } 
 
 - / / Realm Constructors 
 public void testShouldCreateRealm ( ) { 
 Realm realm = Realm . getInstance ( getContext ( ) ) ; 
 assertNotNull ( " Realm . getInstance unexpectedly returns null " , realm ) ; 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index e2e4d8d . . c9817ae 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 365 , 7 + 365 , 7 @ @ public class Realm { 
 
 private static Realm createAndValidate ( String absolutePath , byte [ ] key , boolean validateSchema , boolean autoRefresh ) { 
 Map < Integer , Realm > realms = realmsCache . get ( ) ; 
 - Realm realm = realms . get ( absolutePath ) ; 
 + Realm realm = realms . get ( absolutePath . hashCode ( ) ) ; 
 
 if ( realm ! = null ) { 
 return realm ;
