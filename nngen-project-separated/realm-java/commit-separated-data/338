BLEU SCORE: 0.08116697886877475

TEST MSG: dispose OsRealmObjectSchema in OsRealmSchema . Creator
GENERATED MSG: protect OsRealmSchema from double free

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java <nl> index 98f738f . . 8383a35 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java <nl> @ @ - 37 , 7 + 37 , 12 @ @ class OsRealmSchema extends RealmSchema { <nl> private final Map < String , OsRealmObjectSchema > schema = new HashMap < > ( ) ; <nl> <nl> @ Override <nl> - public void close ( ) { } <nl> + public void close ( ) { <nl> + for ( Map . Entry < String , OsRealmObjectSchema > entry : schema . entrySet ( ) ) { <nl> + entry . getValue ( ) . close ( ) ; <nl> + } <nl> + schema . clear ( ) ; <nl> + } <nl> <nl> @ Override <nl> public RealmObjectSchema get ( String className ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 6e74779 . . aeb0042 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 396 , 13 + 396 , 18 @ @ public class Realm extends BaseRealm { <nl> final RealmProxyMediator mediator = configuration . getSchemaMediator ( ) ; <nl> final Set < Class < ? extends RealmModel > > modelClasses = mediator . getModelClasses ( ) ; <nl> <nl> - final OsRealmSchema . Creator schemaCreator = new OsRealmSchema . Creator ( ) ; <nl> - for ( Class < ? extends RealmModel > modelClass : modelClasses ) { <nl> - mediator . createRealmObjectSchema ( modelClass , schemaCreator ) ; <nl> - } <nl> + OsRealmSchema . Creator schemaCreator = new OsRealmSchema . Creator ( ) ; <nl> + try { <nl> + for ( Class < ? extends RealmModel > modelClass : modelClasses ) { <nl> + mediator . createRealmObjectSchema ( modelClass , schemaCreator ) ; <nl> + } <nl> <nl> - / / Assumption : When SyncConfiguration then additive schema update mode . <nl> - schema = new OsRealmSchema ( schemaCreator ) ; <nl> + / / Assumption : When SyncConfiguration then additive schema update mode . <nl> + schema = new OsRealmSchema ( schemaCreator ) ; <nl> + } finally { <nl> + schemaCreator . close ( ) ; <nl> + schemaCreator = null ; <nl> + } <nl> long newVersion = configuration . getSchemaVersion ( ) ; <nl> / / ! ! ! FIXME : This appalling kludge is necessitated by current package structure / visiblity constraints . <nl> / / It absolutely breaks encapsulation and needs to be fixed !
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java <nl> index c7908c3 . . 98f738f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java <nl> @ @ - 96 , 7 + 96 , 7 @ @ class OsRealmSchema extends RealmSchema { <nl> <nl> private final Map < String , RealmObjectSchema > dynamicClassToSchema = new HashMap < > ( ) ; <nl> <nl> - private final long nativePtr ; <nl> + private long nativePtr ; <nl> <nl> OsRealmSchema ( Creator creator ) { <nl> Set < OsRealmObjectSchema > realmObjectSchemas = creator . getAll ( ) ; <nl> @ @ - 119 , 7 + 119 , 10 @ @ class OsRealmSchema extends RealmSchema { <nl> for ( RealmObjectSchema schema : schemas ) { <nl> schema . close ( ) ; <nl> } <nl> - nativeClose ( nativePtr ) ; <nl> + if ( nativePtr ! = 0L ) { <nl> + nativeClose ( nativePtr ) ; <nl> + nativePtr = 0L ; <nl> + } <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java 
 index 98f738f . . 8383a35 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java 
 @ @ - 37 , 7 + 37 , 12 @ @ class OsRealmSchema extends RealmSchema { 
 private final Map < String , OsRealmObjectSchema > schema = new HashMap < > ( ) ; 
 
 @ Override 
 - public void close ( ) { } 
 + public void close ( ) { 
 + for ( Map . Entry < String , OsRealmObjectSchema > entry : schema . entrySet ( ) ) { 
 + entry . getValue ( ) . close ( ) ; 
 + } 
 + schema . clear ( ) ; 
 + } 
 
 @ Override 
 public RealmObjectSchema get ( String className ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 6e74779 . . aeb0042 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 396 , 13 + 396 , 18 @ @ public class Realm extends BaseRealm { 
 final RealmProxyMediator mediator = configuration . getSchemaMediator ( ) ; 
 final Set < Class < ? extends RealmModel > > modelClasses = mediator . getModelClasses ( ) ; 
 
 - final OsRealmSchema . Creator schemaCreator = new OsRealmSchema . Creator ( ) ; 
 - for ( Class < ? extends RealmModel > modelClass : modelClasses ) { 
 - mediator . createRealmObjectSchema ( modelClass , schemaCreator ) ; 
 - } 
 + OsRealmSchema . Creator schemaCreator = new OsRealmSchema . Creator ( ) ; 
 + try { 
 + for ( Class < ? extends RealmModel > modelClass : modelClasses ) { 
 + mediator . createRealmObjectSchema ( modelClass , schemaCreator ) ; 
 + } 
 
 - / / Assumption : When SyncConfiguration then additive schema update mode . 
 - schema = new OsRealmSchema ( schemaCreator ) ; 
 + / / Assumption : When SyncConfiguration then additive schema update mode . 
 + schema = new OsRealmSchema ( schemaCreator ) ; 
 + } finally { 
 + schemaCreator . close ( ) ; 
 + schemaCreator = null ; 
 + } 
 long newVersion = configuration . getSchemaVersion ( ) ; 
 / / ! ! ! FIXME : This appalling kludge is necessitated by current package structure / visiblity constraints . 
 / / It absolutely breaks encapsulation and needs to be fixed !

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java 
 index c7908c3 . . 98f738f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / OsRealmSchema . java 
 @ @ - 96 , 7 + 96 , 7 @ @ class OsRealmSchema extends RealmSchema { 
 
 private final Map < String , RealmObjectSchema > dynamicClassToSchema = new HashMap < > ( ) ; 
 
 - private final long nativePtr ; 
 + private long nativePtr ; 
 
 OsRealmSchema ( Creator creator ) { 
 Set < OsRealmObjectSchema > realmObjectSchemas = creator . getAll ( ) ; 
 @ @ - 119 , 7 + 119 , 10 @ @ class OsRealmSchema extends RealmSchema { 
 for ( RealmObjectSchema schema : schemas ) { 
 schema . close ( ) ; 
 } 
 - nativeClose ( nativePtr ) ; 
 + if ( nativePtr ! = 0L ) { 
 + nativeClose ( nativePtr ) ; 
 + nativePtr = 0L ; 
 + } 
 } 
 
 / * *
