BLEU SCORE: 0.026279617104084448

TEST MSG: update javadoc comments of JSON APIs in Realm class to mention available API level .
GENERATED MSG: Updated JavaDoc and error messages .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 5556515 . . 609b4dc 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 409 , 6 + 409 , 8 @ @ public final class Realm extends BaseRealm { <nl> * JSON properties with { @ code null } value will map to the default value for the data type in Realm and unknown properties <nl> * will be ignored . If a { @ link RealmObject } field is not present in the JSON object the { @ link RealmObject } field <nl> * will be set to the default value for that type . <nl> + * < p > <nl> + * This API is only available in API level 11 or later . <nl> * <nl> * @ param clazz type of Realm objects created . <nl> * @ param inputStream the JSON array as a InputStream . All objects in the array must be of the specified class . <nl> @ @ - 439 , 6 + 441 , 8 @ @ public final class Realm extends BaseRealm { <nl> * If updating a { @ link RealmObject } and a field is not found in the JSON object , that field will not be updated . <nl> * If a new { @ link RealmObject } is created and a field is not found in the JSON object , that field will be assigned <nl> * the default value for the field type . <nl> + * < p > <nl> + * This API is only available in API level 11 or later . <nl> * <nl> * @ param clazz type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param in the InputStream with a list of object data in JSON format . <nl> @ @ - 585 , 6 + 589 , 8 @ @ public final class Realm extends BaseRealm { <nl> * properties with { @ code null } value will map to the default value for the data type in Realm and unknown properties will <nl> * be ignored . If a { @ link RealmObject } field is not present in the JSON object the { @ link RealmObject } field will <nl> * be set to the default value for that type . <nl> + * < p > <nl> + * This API is only available in API level 11 or later . <nl> * <nl> * @ param clazz type of Realm object to create . <nl> * @ param inputStream the JSON object data as a InputStream . <nl> @ @ - 632 , 6 + 638 , 8 @ @ public final class Realm extends BaseRealm { <nl> * { @ link RealmObject } and a field is not found in the JSON object , that field will not be updated . If a new <nl> * { @ link RealmObject } is created and a field is not found in the JSON object , that field will be assigned the <nl> * default value for the field type . <nl> + * < p > <nl> + * This API is only available in API level 11 or later . <nl> * <nl> * @ param clazz type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . <nl> * @ param in the { @ link InputStream } with object data in JSON format .
NEAREST DIFF (one line): diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> index 92d716e . . 6d27461 100644 <nl> - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> @ @ - 243 , 7 + 243 , 7 @ @ public class RealmProcessor extends AbstractProcessor { <nl> } <nl> <nl> if ( ! hasDefaultConstructor ) { <nl> - error ( " A no arg default public constructor must also be available if a custom constructor is present " ) ; <nl> + error ( " A default public constructor with no argument must be declared if a custom constructor is declared . " ) ; <nl> } <nl> <nl> for ( String expectedGetter : expectedGetters ) { <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 310a31e . . 7c8e28b 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 905 , 15 + 905 , 14 @ @ public final class Realm implements Closeable { <nl> } <nl> <nl> / * * <nl> - * Converts a RealmObject that has been created using it ' s standard constructors instead of <nl> - * { @ link # createObject ( Class ) } to a RealmObject that is managed by the Realm . <nl> + * Copies a RealmObject to the Realm instance and returns the copy . It is important to notice <nl> + * that any further changes to the original RealmObject will not be reflected in the Realm copy . <nl> * <nl> - * To persist any further changes , the returned object must be be used . <nl> + * @ param object { @ link io . realm . RealmObject } to copy to the Realm . <nl> + * @ return A managed RealmObject with its properties backed by the Realm . <nl> * <nl> - * @ param object RealmObject to copy to the Realm . <nl> - * @ return The converted RealmObject that has all its properties managed by the Realm . <nl> - * <nl> - * @ throws io . realm . exceptions . RealmException if object has already been added to the Realm . <nl> + * @ throws io . realm . exceptions . RealmException if the RealmObject has already been added to the Realm . <nl> + * @ throws java . lang . IllegalArgumentException if RealmObject is { @ code null } . <nl> * / <nl> public < E extends RealmObject > E copyToRealm ( E object ) { <nl> if ( object = = null ) { <nl> @ @ - 941 , 7 + 940 , 7 @ @ public final class Realm implements Closeable { <nl> try { <nl> method = generatedClass . getMethod ( " copyToRealm " , new Class [ ] { Realm . class , objectClass } ) ; <nl> } catch ( NoSuchMethodException e ) { <nl> - throw new RealmException ( " Could not find the copyToRealm ( ) method in generated proxy class : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; <nl> + throw new RealmException ( " Could not find the copyToRealm ( ) method in generated proxy class " + generatedClass . getName ( ) + " : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; <nl> } <nl> copyObjectMethods . put ( generatedClass , method ) ; <nl> } <nl> @ @ - 952 , 19 + 951 , 20 @ @ public final class Realm implements Closeable { <nl> } catch ( IllegalAccessException e ) { <nl> throw new RealmException ( " Could not execute the copyToRealm method : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; <nl> } catch ( InvocationTargetException e ) { <nl> - throw new RealmException ( " An exception was thrown in the copyToRealm method in the proxy class class " + generatedClass . getName ( ) + " : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; <nl> + throw new RealmException ( " An exception was thrown in the copyToRealm method in the proxy class " + generatedClass . getName ( ) + " : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; <nl> } <nl> } <nl> <nl> / * * <nl> - * Converts a list of RealmObjects that has been created using their standard constructors <nl> - * instead of { @ link # createObject ( Class ) } to proper RealmObjects that are persisted inside <nl> - * Realm . <nl> + * Copies a collection of RealmObjects to the Realm instance and returns their copy . It is <nl> + * important to notice that any further changes to the original RealmObjects will not be <nl> + * reflected in the Realm copies . <nl> * <nl> * @ param objects RealmObjects to copy to the Realm . <nl> * @ return A collection of the the converted RealmObjects that all has their properties managed by the Realm . <nl> * <nl> * @ throws io . realm . exceptions . RealmException if any of the objects has already been added to Realm . <nl> + * @ throws java . lang . IllegalArgumentException if any of the elements in the input collection is { @ code null } . <nl> * / <nl> public < E extends RealmObject > Collection < E > copyToRealm ( Iterable < E > objects ) { <nl> if ( objects = = null ) new ArrayList < E > ( ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 5556515 . . 609b4dc 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 409 , 6 + 409 , 8 @ @ public final class Realm extends BaseRealm { 
 * JSON properties with { @ code null } value will map to the default value for the data type in Realm and unknown properties 
 * will be ignored . If a { @ link RealmObject } field is not present in the JSON object the { @ link RealmObject } field 
 * will be set to the default value for that type . 
 + * < p > 
 + * This API is only available in API level 11 or later . 
 * 
 * @ param clazz type of Realm objects created . 
 * @ param inputStream the JSON array as a InputStream . All objects in the array must be of the specified class . 
 @ @ - 439 , 6 + 441 , 8 @ @ public final class Realm extends BaseRealm { 
 * If updating a { @ link RealmObject } and a field is not found in the JSON object , that field will not be updated . 
 * If a new { @ link RealmObject } is created and a field is not found in the JSON object , that field will be assigned 
 * the default value for the field type . 
 + * < p > 
 + * This API is only available in API level 11 or later . 
 * 
 * @ param clazz type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param in the InputStream with a list of object data in JSON format . 
 @ @ - 585 , 6 + 589 , 8 @ @ public final class Realm extends BaseRealm { 
 * properties with { @ code null } value will map to the default value for the data type in Realm and unknown properties will 
 * be ignored . If a { @ link RealmObject } field is not present in the JSON object the { @ link RealmObject } field will 
 * be set to the default value for that type . 
 + * < p > 
 + * This API is only available in API level 11 or later . 
 * 
 * @ param clazz type of Realm object to create . 
 * @ param inputStream the JSON object data as a InputStream . 
 @ @ - 632 , 6 + 638 , 8 @ @ public final class Realm extends BaseRealm { 
 * { @ link RealmObject } and a field is not found in the JSON object , that field will not be updated . If a new 
 * { @ link RealmObject } is created and a field is not found in the JSON object , that field will be assigned the 
 * default value for the field type . 
 + * < p > 
 + * This API is only available in API level 11 or later . 
 * 
 * @ param clazz type of { @ link io . realm . RealmObject } to create or update . It must have a primary key defined . 
 * @ param in the { @ link InputStream } with object data in JSON format .

NEAREST DIFF:
diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 index 92d716e . . 6d27461 100644 
 - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 @ @ - 243 , 7 + 243 , 7 @ @ public class RealmProcessor extends AbstractProcessor { 
 } 
 
 if ( ! hasDefaultConstructor ) { 
 - error ( " A no arg default public constructor must also be available if a custom constructor is present " ) ; 
 + error ( " A default public constructor with no argument must be declared if a custom constructor is declared . " ) ; 
 } 
 
 for ( String expectedGetter : expectedGetters ) { 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 310a31e . . 7c8e28b 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 905 , 15 + 905 , 14 @ @ public final class Realm implements Closeable { 
 } 
 
 / * * 
 - * Converts a RealmObject that has been created using it ' s standard constructors instead of 
 - * { @ link # createObject ( Class ) } to a RealmObject that is managed by the Realm . 
 + * Copies a RealmObject to the Realm instance and returns the copy . It is important to notice 
 + * that any further changes to the original RealmObject will not be reflected in the Realm copy . 
 * 
 - * To persist any further changes , the returned object must be be used . 
 + * @ param object { @ link io . realm . RealmObject } to copy to the Realm . 
 + * @ return A managed RealmObject with its properties backed by the Realm . 
 * 
 - * @ param object RealmObject to copy to the Realm . 
 - * @ return The converted RealmObject that has all its properties managed by the Realm . 
 - * 
 - * @ throws io . realm . exceptions . RealmException if object has already been added to the Realm . 
 + * @ throws io . realm . exceptions . RealmException if the RealmObject has already been added to the Realm . 
 + * @ throws java . lang . IllegalArgumentException if RealmObject is { @ code null } . 
 * / 
 public < E extends RealmObject > E copyToRealm ( E object ) { 
 if ( object = = null ) { 
 @ @ - 941 , 7 + 940 , 7 @ @ public final class Realm implements Closeable { 
 try { 
 method = generatedClass . getMethod ( " copyToRealm " , new Class [ ] { Realm . class , objectClass } ) ; 
 } catch ( NoSuchMethodException e ) { 
 - throw new RealmException ( " Could not find the copyToRealm ( ) method in generated proxy class : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; 
 + throw new RealmException ( " Could not find the copyToRealm ( ) method in generated proxy class " + generatedClass . getName ( ) + " : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; 
 } 
 copyObjectMethods . put ( generatedClass , method ) ; 
 } 
 @ @ - 952 , 19 + 951 , 20 @ @ public final class Realm implements Closeable { 
 } catch ( IllegalAccessException e ) { 
 throw new RealmException ( " Could not execute the copyToRealm method : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; 
 } catch ( InvocationTargetException e ) { 
 - throw new RealmException ( " An exception was thrown in the copyToRealm method in the proxy class class " + generatedClass . getName ( ) + " : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; 
 + throw new RealmException ( " An exception was thrown in the copyToRealm method in the proxy class " + generatedClass . getName ( ) + " : " + APT _ NOT _ EXECUTED _ MESSAGE , e ) ; 
 } 
 } 
 
 / * * 
 - * Converts a list of RealmObjects that has been created using their standard constructors 
 - * instead of { @ link # createObject ( Class ) } to proper RealmObjects that are persisted inside 
 - * Realm . 
 + * Copies a collection of RealmObjects to the Realm instance and returns their copy . It is 
 + * important to notice that any further changes to the original RealmObjects will not be 
 + * reflected in the Realm copies . 
 * 
 * @ param objects RealmObjects to copy to the Realm . 
 * @ return A collection of the the converted RealmObjects that all has their properties managed by the Realm . 
 * 
 * @ throws io . realm . exceptions . RealmException if any of the objects has already been added to Realm . 
 + * @ throws java . lang . IllegalArgumentException if any of the elements in the input collection is { @ code null } . 
 * / 
 public < E extends RealmObject > Collection < E > copyToRealm ( Iterable < E > objects ) { 
 if ( objects = = null ) new ArrayList < E > ( ) ;
