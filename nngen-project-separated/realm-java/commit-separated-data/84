BLEU SCORE: 0.024615130620079664

TEST MSG: Support clearing data using Partial Sync
GENERATED MSG: Removing FIXMEs and create them as Github issues .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java <nl> index 97caaa1 . . 61a1dbd 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java <nl> @ @ - 25 , 7 + 25 , 10 @ @ import java . util . UUID ; <nl> <nl> import io . realm . ErrorCode ; <nl> import io . realm . ObjectServerError ; <nl> + import io . realm . Realm ; <nl> + import io . realm . SyncConfiguration ; <nl> import io . realm . SyncManager ; <nl> + import io . realm . SyncSession ; <nl> import io . realm . SyncUser ; <nl> import io . realm . UserStore ; <nl> import io . realm . internal . network . AuthenticateResponse ; <nl> @ @ - 125 , 4 + 128 , 18 @ @ public class SyncTestUtils { <nl> throw new AssertionError ( e ) ; <nl> } <nl> } <nl> + <nl> + / / Fully synchronize a Realm with the server by making sure that all changes are uploaded <nl> + / / and downloaded again . <nl> + public static void syncRealm ( Realm realm ) { <nl> + SyncConfiguration config = ( SyncConfiguration ) realm . getConfiguration ( ) ; <nl> + SyncSession session = SyncManager . getSession ( config ) ; <nl> + try { <nl> + session . uploadAllLocalChanges ( ) ; <nl> + session . downloadAllServerChanges ( ) ; <nl> + } catch ( InterruptedException e ) { <nl> + throw new AssertionError ( e ) ; <nl> + } <nl> + realm . refresh ( ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp <nl> index 4f79cc4 . . d85ad5e 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp <nl> @ @ - 537 , 13 + 537 , 17 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ Table _ nativeSize ( JNIEnv * env , job <nl> return static _ cast < jlong > ( TBL ( nativeTablePtr ) - > size ( ) ) ; / / noexcept <nl> } <nl> <nl> - JNIEXPORT void JNICALL Java _ io _ realm _ internal _ Table _ nativeClear ( JNIEnv * env , jobject , jlong nativeTablePtr ) <nl> + JNIEXPORT void JNICALL Java _ io _ realm _ internal _ Table _ nativeClear ( JNIEnv * env , jobject , jlong nativeTablePtr , jboolean is _ partial _ realm ) <nl> { <nl> if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) { <nl> return ; <nl> } <nl> try { <nl> - TBL ( nativeTablePtr ) - > clear ( ) ; <nl> + if ( is _ partial _ realm ) { <nl> + TBL ( nativeTablePtr ) - > where ( ) . find _ all ( ) . clear ( RemoveMode : : unordered ) ; <nl> + } else { <nl> + TBL ( nativeTablePtr ) - > clear ( ) ; <nl> + } <nl> } <nl> CATCH _ STD ( ) <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index 96c5e8e . . 176758f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 611 , 8 + 611 , 9 @ @ abstract class BaseRealm implements Closeable { <nl> * / <nl> public void deleteAll ( ) { <nl> checkIfValid ( ) ; <nl> + boolean isPartialRealm = sharedRealm . isPartial ( ) ; <nl> for ( RealmObjectSchema objectSchema : getSchema ( ) . getAll ( ) ) { <nl> - getSchema ( ) . getTable ( objectSchema . getClassName ( ) ) . clear ( ) ; <nl> + getSchema ( ) . getTable ( objectSchema . getClassName ( ) ) . clear ( isPartialRealm ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index c62b526 . . ea52f97 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 227 , 7 + 227 , 7 @ @ public class DynamicRealm extends BaseRealm { <nl> public void delete ( String className ) { <nl> checkIfValid ( ) ; <nl> checkIfInTransaction ( ) ; <nl> - schema . getTable ( className ) . clear ( ) ; <nl> + schema . getTable ( className ) . clear ( sharedRealm . isPartial ( ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index a2d1974 . . 7f5eb30 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 1586 , 7 + 1586 , 7 @ @ public class Realm extends BaseRealm { <nl> * / <nl> public void delete ( Class < ? extends RealmModel > clazz ) { <nl> checkIfValid ( ) ; <nl> - schema . getTable ( clazz ) . clear ( ) ; <nl> + schema . getTable ( clazz ) . clear ( sharedRealm . isPartial ( ) ) ; <nl> } <nl> <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index 8be0dc7 . . 533603d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 261 , 10 + 261 , 12 @ @ public class Table implements NativeObject { <nl> <nl> / * * <nl> * Clears the table i . e . , deleting all rows in the table . <nl> + * <nl> + * If using partial sync , this method will behave similarly to ' findAll ( ) . deleteFromRealm ( ) ' . <nl> * / <nl> - public void clear ( ) { <nl> + public void clear ( boolean partialRealm ) { <nl> checkImmutable ( ) ; <nl> - nativeClear ( nativePtr ) ; <nl> + nativeClear ( nativePtr , partialRealm ) ; <nl> } <nl> <nl> / / Column Information . <nl> @ @ - 724 , 7 + 726 , 7 @ @ public class Table implements NativeObject { <nl> <nl> private native long nativeSize ( long nativeTablePtr ) ; <nl> <nl> - private native void nativeClear ( long nativeTablePtr ) ; <nl> + private native void nativeClear ( long nativeTablePtr , boolean partialRealm ) ; <nl> <nl> private native long nativeGetColumnCount ( long nativeTablePtr ) ; <nl> <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java <nl> index c33f7a1 . . 439cf14 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java <nl> @ @ - 5 , 11 + 5 , 8 @ @ import android . support . test . runner . AndroidJUnit4 ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> <nl> - import java . util . concurrent . atomic . AtomicInteger ; <nl> - <nl> import io . realm . DynamicRealm ; <nl> import io . realm . OrderedCollectionChangeSet ; <nl> - import io . realm . OrderedRealmCollectionChangeListener ; <nl> import io . realm . Realm ; <nl> import io . realm . RealmChangeListener ; <nl> import io . realm . RealmList ; <nl> @ @ - 21 , 18 + 18 , 16 @ @ import io . realm . SyncUser ; <nl> import io . realm . entities . AllJavaTypes ; <nl> import io . realm . entities . AllTypes ; <nl> import io . realm . entities . Dog ; <nl> - import io . realm . exceptions . RealmException ; <nl> - import io . realm . log . RealmLog ; <nl> import io . realm . objectserver . model . PartialSyncModule ; <nl> import io . realm . objectserver . model . PartialSyncObjectA ; <nl> import io . realm . objectserver . model . PartialSyncObjectB ; <nl> import io . realm . objectserver . utils . Constants ; <nl> import io . realm . objectserver . utils . UserFactory ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> + import io . realm . util . SyncTestUtils ; <nl> <nl> import static org . hamcrest . number . OrderingComparison . greaterThan ; <nl> import static org . junit . Assert . assertEquals ; <nl> - import static org . junit . Assert . assertNotNull ; <nl> import static org . junit . Assert . assertThat ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> @ @ - 274 , 6 + 269 , 30 @ @ public class PartialSyncTests extends StandardIntegrationTest { <nl> } ) ; <nl> } <nl> <nl> + @ Test <nl> + @ RunTestInLooperThread <nl> + public void clearTable ( ) throws InterruptedException { <nl> + SyncUser user = UserFactory . createUniqueUser ( Constants . AUTH _ URL ) ; <nl> + Realm realm = getPartialRealm ( user ) ; <nl> + looperThread . closeAfterTest ( realm ) ; <nl> + <nl> + / / Create test data and make sure it is uploaded to the server <nl> + RealmResults < PartialSyncObjectA > result = realm . where ( PartialSyncObjectA . class ) . findAllAsync ( ) ; <nl> + realm . executeTransaction ( r - > { <nl> + r . createObject ( PartialSyncObjectA . class ) . setString ( " ObjectA " ) ; <nl> + } ) ; <nl> + SyncTestUtils . syncRealm ( realm ) ; <nl> + assertEquals ( 1 , result . size ( ) ) ; <nl> + <nl> + / / Delete data and make sure it is accepted by the server <nl> + realm . executeTransaction ( r - > { <nl> + r . delete ( PartialSyncObjectA . class ) ; <nl> + } ) ; <nl> + SyncTestUtils . syncRealm ( realm ) ; <nl> + assertTrue ( result . isEmpty ( ) ) ; <nl> + looperThread . testComplete ( ) ; <nl> + } <nl> + <nl> private Realm getPartialRealm ( SyncUser user ) { <nl> final SyncConfiguration partialSyncConfig = configurationFactory . createSyncConfigurationBuilder ( user , Constants . SYNC _ SERVER _ URL ) <nl> . name ( " partialSync " )
NEAREST DIFF (one line): diff - - git a / realm / config / findbugs / findbugs - filter . xml b / realm / config / findbugs / findbugs - filter . xml <nl> index 2911aec . . e2c1a8b 100644 <nl> - - - a / realm / config / findbugs / findbugs - filter . xml <nl> + + + b / realm / config / findbugs / findbugs - filter . xml <nl> @ @ - 32 , 6 + 32 , 11 @ @ <nl> < Field name = " APP _ ID " / > <nl> < Bug pattern = " MS _ SHOULD _ BE _ FINAL " / > <nl> < / Match > <nl> + < Match > <nl> + < Class name = " io . realm . SyncManager " / > <nl> + < Field name = " APP _ ID " / > <nl> + < Bug pattern = " MS _ CANNOT _ BE _ FINAL " / > <nl> + < / Match > <nl> <nl> < ! - - Unit tests - - > <nl> < Match > <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> index 00c0b93 . . 1792920 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> @ @ - 154 , 8 + 154 , 7 @ @ Java _ io _ realm _ internal _ SharedRealm _ nativeGetVersion ( JNIEnv * env , jclass , jlong s <nl> return static _ cast < jlong > ( ObjectStore : : get _ schema _ version ( shared _ realm - > read _ group ( ) ) ) ; <nl> } CATCH _ STD ( ) <nl> <nl> - / / FIXME : Use constant value <nl> - return - 1 ; <nl> + return static _ cast < jlong > ( ObjectStore : : NotVersioned ) ; <nl> } <nl> <nl> JNIEXPORT void JNICALL <nl> diff - - git a / realm / realm - library / src / main / cpp / objectserver _ shared . hpp b / realm / realm - library / src / main / cpp / objectserver _ shared . hpp <nl> index 7d9d824 . . d066d36 100644 <nl> - - - a / realm / realm - library / src / main / cpp / objectserver _ shared . hpp <nl> + + + b / realm / realm - library / src / main / cpp / objectserver _ shared . hpp <nl> @ @ - 30 , 14 + 30 , 13 @ @ <nl> <nl> <nl> / / Wrapper class for realm : : Session . This allows us to manage the C + + session and callback lifecycle correctly . <nl> - / / TODO Use OS SyncSession instead <nl> + / / TODO Use OS SyncSession instead - https : / / github . com / realm / realm - java - private / issues / 123 <nl> class JniSession { <nl> <nl> public : <nl> JniSession ( ) = delete ; <nl> JniSession ( JNIEnv * env , std : : string local _ realm _ path , jobject java _ session _ obj ) <nl> { <nl> - / / FIXME : This doesn ' t look good . Temp solution before moving to OS sync . <nl> extern std : : unique _ ptr < realm : : sync : : Client > sync _ client ; <nl> / / Get the coordinator for the given path , or null if there is none <nl> m _ sync _ session = new realm : : sync : : Session ( * sync _ client , local _ realm _ path ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java b / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java <nl> index b3f881b . . 8e2ddc2 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java <nl> @ @ - 28 , 7 + 28 , 6 @ @ import io . realm . log . RealmLog ; <nl> / * * <nl> * Implementation of { @ link RealmNotifier } for Android based on { @ link Handler } . <nl> * / <nl> - / / FIXME : Please move me to the io . realm . internal when HandlerController is there . <nl> class AndroidNotifier implements RealmNotifier { <nl> private Handler handler ; <nl> <nl> @ @ - 66 , 7 + 65 , 7 @ @ class AndroidNotifier implements RealmNotifier { <nl> <nl> / / This is called by OS when other thread / process changes the Realm . <nl> / / This is getting called on the same thread which created the Realm . <nl> - / / FIXME : The whole calling routine is twisted and needs to be rewritten in the near future . <nl> + / / https : / / github . com / realm / realm - java - private / issues / 127 <nl> / / | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - | <nl> / / | Thread A | Thread B | Daemon Thread | <nl> / / | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - | <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index 2836c6c . . e4b8fae 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public abstract class BaseRealm implements Closeable { <nl> " Changing Realm data can only be done from inside a transaction . " ; <nl> <nl> / / Thread pool for all async operations ( Query & transaction ) <nl> - public volatile static Context applicationContext ; / / FIXME Make package protected once all sync code moves to io . realm <nl> + public volatile static Context applicationContext ; <nl> <nl> / / Thread pool for all async operations ( Query & transaction ) <nl> static final RealmThreadPoolExecutor asyncTaskExecutor = RealmThreadPoolExecutor . newDefaultExecutor ( ) ; <nl> @ @ - 583 , 7 + 583 , 7 @ @ public abstract class BaseRealm implements Closeable { <nl> * @ return { @ code true } if compaction succeeded , { @ code false } otherwise . <nl> * / <nl> static boolean compactRealm ( final RealmConfiguration configuration ) { <nl> - / / FIXME : Move this check to OS ? <nl> + / / https : / / github . com / realm / realm - java / issues / 1033 <nl> if ( configuration . getEncryptionKey ( ) ! = null ) { <nl> throw new IllegalArgumentException ( " Cannot currently compact an encrypted Realm . " ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java b / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java <nl> index cc2809d . . e2733a7 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java <nl> @ @ - 16 , 7 + 16 , 6 @ @ <nl> <nl> package io . realm ; <nl> <nl> - import java . util . concurrent . ExecutorService ; <nl> import java . util . concurrent . Future ; <nl> import java . util . concurrent . ThreadPoolExecutor ; <nl> <nl> @ @ - 32 , 7 + 31 , 6 @ @ public final class RealmAsyncTask { <nl> private final ThreadPoolExecutor service ; <nl> private volatile boolean isCancelled = false ; <nl> <nl> - / / FIXME This shouldn ' t be public <nl> public RealmAsyncTask ( Future < ? > pendingTask , ThreadPoolExecutor service ) { <nl> this . pendingTask = pendingTask ; <nl> this . service = service ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> index 8c7e6b0 . . 9e92389 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> @ @ - 154 , 7 + 154 , 6 @ @ public final class RealmObjectSchema { <nl> realm . checkNotInSync ( ) ; / / renaming a table is not permitted <nl> checkEmpty ( className ) ; <nl> String internalTableName = Table . TABLE _ PREFIX + className ; <nl> - / / FIXME : when core implements class name length check , please remove . <nl> if ( internalTableName . length ( ) > Table . TABLE _ MAX _ LENGTH ) { <nl> throw new IllegalArgumentException ( " Class name is to long . Limit is 56 characters : \ ' " + className + " \ ' ( " + Integer . toString ( className . length ( ) ) + " ) " ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / SyncManager . java b / realm / realm - library / src / main / java / io / realm / SyncManager . java <nl> index 41d8ca5 . . ca496ef 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / SyncManager . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / SyncManager . java <nl> @ @ - 226 , 7 + 226 , 6 @ @ public final class SyncManager { <nl> * Sets the log level for the underlying <nl> * @ param logLevel <nl> * / <nl> - / / FIXME Remove from the public API . This is controlled by Logger # minimumNativeLogLevel <nl> public static void setLogLevel ( int logLevel ) { <nl> nativeSetSyncClientLogLevel ( logLevel ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> index d1cdd84 . . 3218dc7 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> @ @ - 68 , 12 + 68 , 12 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { <nl> <nl> @ Override <nl> public RefreshResponse refresh ( String token , URL authenticationUrl ) { <nl> - throw new UnsupportedOperationException ( " FIXME " ) ; <nl> + throw new UnsupportedOperationException ( " Not yet implemented " ) ; <nl> } <nl> <nl> @ Override <nl> public LogoutResponse logout ( User user , URL authenticationUrl ) { <nl> - throw new UnsupportedOperationException ( " FIXME " ) ; <nl> + throw new UnsupportedOperationException ( " Not yet implemented " ) ; <nl> } <nl> <nl> private AuthenticateResponse authenticate ( URL authenticationUrl , String requestBody ) throws Exception { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java b / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java <nl> index 0c88d0b . . 2455972 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java <nl> @ @ - 22 , 7 + 22 , 6 @ @ import okhttp3 . Response ; <nl> public class RefreshResponse extends AuthServerResponse { <nl> <nl> public RefreshResponse ( Response response ) { <nl> - / / FIXME Parse refresh result <nl> } <nl> <nl> public Token getRefreshToken ( ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / log / RealmLog . java b / realm / realm - library / src / main / java / io / realm / log / RealmLog . java <nl> index 6389196 . . f831732 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / log / RealmLog . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / log / RealmLog . java <nl> @ @ - 21 , 8 + 21 , 6 @ @ import java . util . List ; <nl> <nl> import io . realm . internal . Keep ; <nl> import io . realm . internal . Util ; <nl> - import io . realm . SyncManager ; <nl> - import io . realm . internal . ObjectServerFacade ; <nl> <nl> / * * <nl> * Global logger used by all Realm components . <nl> @ @ - 59 , 7 + 57 , 6 @ @ public final class RealmLog { <nl> <nl> private static void setMinimumNativeDebugLevel ( int nativeDebugLevel ) { <nl> minimumNativeLogLevel = nativeDebugLevel ; <nl> - / / FIXME : Use same log level setting for normal Realm and Sync Realm . <nl> Util . setDebugLevel ( nativeDebugLevel ) ; / / Log level for Realm Core <nl> } <nl>

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java 
 index 97caaa1 . . 61a1dbd 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / util / SyncTestUtils . java 
 @ @ - 25 , 7 + 25 , 10 @ @ import java . util . UUID ; 
 
 import io . realm . ErrorCode ; 
 import io . realm . ObjectServerError ; 
 + import io . realm . Realm ; 
 + import io . realm . SyncConfiguration ; 
 import io . realm . SyncManager ; 
 + import io . realm . SyncSession ; 
 import io . realm . SyncUser ; 
 import io . realm . UserStore ; 
 import io . realm . internal . network . AuthenticateResponse ; 
 @ @ - 125 , 4 + 128 , 18 @ @ public class SyncTestUtils { 
 throw new AssertionError ( e ) ; 
 } 
 } 
 + 
 + / / Fully synchronize a Realm with the server by making sure that all changes are uploaded 
 + / / and downloaded again . 
 + public static void syncRealm ( Realm realm ) { 
 + SyncConfiguration config = ( SyncConfiguration ) realm . getConfiguration ( ) ; 
 + SyncSession session = SyncManager . getSession ( config ) ; 
 + try { 
 + session . uploadAllLocalChanges ( ) ; 
 + session . downloadAllServerChanges ( ) ; 
 + } catch ( InterruptedException e ) { 
 + throw new AssertionError ( e ) ; 
 + } 
 + realm . refresh ( ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp 
 index 4f79cc4 . . d85ad5e 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Table . cpp 
 @ @ - 537 , 13 + 537 , 17 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ Table _ nativeSize ( JNIEnv * env , job 
 return static _ cast < jlong > ( TBL ( nativeTablePtr ) - > size ( ) ) ; / / noexcept 
 } 
 
 - JNIEXPORT void JNICALL Java _ io _ realm _ internal _ Table _ nativeClear ( JNIEnv * env , jobject , jlong nativeTablePtr ) 
 + JNIEXPORT void JNICALL Java _ io _ realm _ internal _ Table _ nativeClear ( JNIEnv * env , jobject , jlong nativeTablePtr , jboolean is _ partial _ realm ) 
 { 
 if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) { 
 return ; 
 } 
 try { 
 - TBL ( nativeTablePtr ) - > clear ( ) ; 
 + if ( is _ partial _ realm ) { 
 + TBL ( nativeTablePtr ) - > where ( ) . find _ all ( ) . clear ( RemoveMode : : unordered ) ; 
 + } else { 
 + TBL ( nativeTablePtr ) - > clear ( ) ; 
 + } 
 } 
 CATCH _ STD ( ) 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index 96c5e8e . . 176758f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 611 , 8 + 611 , 9 @ @ abstract class BaseRealm implements Closeable { 
 * / 
 public void deleteAll ( ) { 
 checkIfValid ( ) ; 
 + boolean isPartialRealm = sharedRealm . isPartial ( ) ; 
 for ( RealmObjectSchema objectSchema : getSchema ( ) . getAll ( ) ) { 
 - getSchema ( ) . getTable ( objectSchema . getClassName ( ) ) . clear ( ) ; 
 + getSchema ( ) . getTable ( objectSchema . getClassName ( ) ) . clear ( isPartialRealm ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index c62b526 . . ea52f97 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 227 , 7 + 227 , 7 @ @ public class DynamicRealm extends BaseRealm { 
 public void delete ( String className ) { 
 checkIfValid ( ) ; 
 checkIfInTransaction ( ) ; 
 - schema . getTable ( className ) . clear ( ) ; 
 + schema . getTable ( className ) . clear ( sharedRealm . isPartial ( ) ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index a2d1974 . . 7f5eb30 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 1586 , 7 + 1586 , 7 @ @ public class Realm extends BaseRealm { 
 * / 
 public void delete ( Class < ? extends RealmModel > clazz ) { 
 checkIfValid ( ) ; 
 - schema . getTable ( clazz ) . clear ( ) ; 
 + schema . getTable ( clazz ) . clear ( sharedRealm . isPartial ( ) ) ; 
 } 
 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index 8be0dc7 . . 533603d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 261 , 10 + 261 , 12 @ @ public class Table implements NativeObject { 
 
 / * * 
 * Clears the table i . e . , deleting all rows in the table . 
 + * 
 + * If using partial sync , this method will behave similarly to ' findAll ( ) . deleteFromRealm ( ) ' . 
 * / 
 - public void clear ( ) { 
 + public void clear ( boolean partialRealm ) { 
 checkImmutable ( ) ; 
 - nativeClear ( nativePtr ) ; 
 + nativeClear ( nativePtr , partialRealm ) ; 
 } 
 
 / / Column Information . 
 @ @ - 724 , 7 + 726 , 7 @ @ public class Table implements NativeObject { 
 
 private native long nativeSize ( long nativeTablePtr ) ; 
 
 - private native void nativeClear ( long nativeTablePtr ) ; 
 + private native void nativeClear ( long nativeTablePtr , boolean partialRealm ) ; 
 
 private native long nativeGetColumnCount ( long nativeTablePtr ) ; 
 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java 
 index c33f7a1 . . 439cf14 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java 
 @ @ - 5 , 11 + 5 , 8 @ @ import android . support . test . runner . AndroidJUnit4 ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 
 - import java . util . concurrent . atomic . AtomicInteger ; 
 - 
 import io . realm . DynamicRealm ; 
 import io . realm . OrderedCollectionChangeSet ; 
 - import io . realm . OrderedRealmCollectionChangeListener ; 
 import io . realm . Realm ; 
 import io . realm . RealmChangeListener ; 
 import io . realm . RealmList ; 
 @ @ - 21 , 18 + 18 , 16 @ @ import io . realm . SyncUser ; 
 import io . realm . entities . AllJavaTypes ; 
 import io . realm . entities . AllTypes ; 
 import io . realm . entities . Dog ; 
 - import io . realm . exceptions . RealmException ; 
 - import io . realm . log . RealmLog ; 
 import io . realm . objectserver . model . PartialSyncModule ; 
 import io . realm . objectserver . model . PartialSyncObjectA ; 
 import io . realm . objectserver . model . PartialSyncObjectB ; 
 import io . realm . objectserver . utils . Constants ; 
 import io . realm . objectserver . utils . UserFactory ; 
 import io . realm . rule . RunTestInLooperThread ; 
 + import io . realm . util . SyncTestUtils ; 
 
 import static org . hamcrest . number . OrderingComparison . greaterThan ; 
 import static org . junit . Assert . assertEquals ; 
 - import static org . junit . Assert . assertNotNull ; 
 import static org . junit . Assert . assertThat ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 @ @ - 274 , 6 + 269 , 30 @ @ public class PartialSyncTests extends StandardIntegrationTest { 
 } ) ; 
 } 
 
 + @ Test 
 + @ RunTestInLooperThread 
 + public void clearTable ( ) throws InterruptedException { 
 + SyncUser user = UserFactory . createUniqueUser ( Constants . AUTH _ URL ) ; 
 + Realm realm = getPartialRealm ( user ) ; 
 + looperThread . closeAfterTest ( realm ) ; 
 + 
 + / / Create test data and make sure it is uploaded to the server 
 + RealmResults < PartialSyncObjectA > result = realm . where ( PartialSyncObjectA . class ) . findAllAsync ( ) ; 
 + realm . executeTransaction ( r - > { 
 + r . createObject ( PartialSyncObjectA . class ) . setString ( " ObjectA " ) ; 
 + } ) ; 
 + SyncTestUtils . syncRealm ( realm ) ; 
 + assertEquals ( 1 , result . size ( ) ) ; 
 + 
 + / / Delete data and make sure it is accepted by the server 
 + realm . executeTransaction ( r - > { 
 + r . delete ( PartialSyncObjectA . class ) ; 
 + } ) ; 
 + SyncTestUtils . syncRealm ( realm ) ; 
 + assertTrue ( result . isEmpty ( ) ) ; 
 + looperThread . testComplete ( ) ; 
 + } 
 + 
 private Realm getPartialRealm ( SyncUser user ) { 
 final SyncConfiguration partialSyncConfig = configurationFactory . createSyncConfigurationBuilder ( user , Constants . SYNC _ SERVER _ URL ) 
 . name ( " partialSync " )

NEAREST DIFF:
diff - - git a / realm / config / findbugs / findbugs - filter . xml b / realm / config / findbugs / findbugs - filter . xml 
 index 2911aec . . e2c1a8b 100644 
 - - - a / realm / config / findbugs / findbugs - filter . xml 
 + + + b / realm / config / findbugs / findbugs - filter . xml 
 @ @ - 32 , 6 + 32 , 11 @ @ 
 < Field name = " APP _ ID " / > 
 < Bug pattern = " MS _ SHOULD _ BE _ FINAL " / > 
 < / Match > 
 + < Match > 
 + < Class name = " io . realm . SyncManager " / > 
 + < Field name = " APP _ ID " / > 
 + < Bug pattern = " MS _ CANNOT _ BE _ FINAL " / > 
 + < / Match > 
 
 < ! - - Unit tests - - > 
 < Match > 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 index 00c0b93 . . 1792920 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 @ @ - 154 , 8 + 154 , 7 @ @ Java _ io _ realm _ internal _ SharedRealm _ nativeGetVersion ( JNIEnv * env , jclass , jlong s 
 return static _ cast < jlong > ( ObjectStore : : get _ schema _ version ( shared _ realm - > read _ group ( ) ) ) ; 
 } CATCH _ STD ( ) 
 
 - / / FIXME : Use constant value 
 - return - 1 ; 
 + return static _ cast < jlong > ( ObjectStore : : NotVersioned ) ; 
 } 
 
 JNIEXPORT void JNICALL 
 diff - - git a / realm / realm - library / src / main / cpp / objectserver _ shared . hpp b / realm / realm - library / src / main / cpp / objectserver _ shared . hpp 
 index 7d9d824 . . d066d36 100644 
 - - - a / realm / realm - library / src / main / cpp / objectserver _ shared . hpp 
 + + + b / realm / realm - library / src / main / cpp / objectserver _ shared . hpp 
 @ @ - 30 , 14 + 30 , 13 @ @ 
 
 
 / / Wrapper class for realm : : Session . This allows us to manage the C + + session and callback lifecycle correctly . 
 - / / TODO Use OS SyncSession instead 
 + / / TODO Use OS SyncSession instead - https : / / github . com / realm / realm - java - private / issues / 123 
 class JniSession { 
 
 public : 
 JniSession ( ) = delete ; 
 JniSession ( JNIEnv * env , std : : string local _ realm _ path , jobject java _ session _ obj ) 
 { 
 - / / FIXME : This doesn ' t look good . Temp solution before moving to OS sync . 
 extern std : : unique _ ptr < realm : : sync : : Client > sync _ client ; 
 / / Get the coordinator for the given path , or null if there is none 
 m _ sync _ session = new realm : : sync : : Session ( * sync _ client , local _ realm _ path ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java b / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java 
 index b3f881b . . 8e2ddc2 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java 
 + + + b / realm / realm - library / src / main / java / io / realm / AndroidNotifier . java 
 @ @ - 28 , 7 + 28 , 6 @ @ import io . realm . log . RealmLog ; 
 / * * 
 * Implementation of { @ link RealmNotifier } for Android based on { @ link Handler } . 
 * / 
 - / / FIXME : Please move me to the io . realm . internal when HandlerController is there . 
 class AndroidNotifier implements RealmNotifier { 
 private Handler handler ; 
 
 @ @ - 66 , 7 + 65 , 7 @ @ class AndroidNotifier implements RealmNotifier { 
 
 / / This is called by OS when other thread / process changes the Realm . 
 / / This is getting called on the same thread which created the Realm . 
 - / / FIXME : The whole calling routine is twisted and needs to be rewritten in the near future . 
 + / / https : / / github . com / realm / realm - java - private / issues / 127 
 / / | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - | 
 / / | Thread A | Thread B | Daemon Thread | 
 / / | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - | 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index 2836c6c . . e4b8fae 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public abstract class BaseRealm implements Closeable { 
 " Changing Realm data can only be done from inside a transaction . " ; 
 
 / / Thread pool for all async operations ( Query & transaction ) 
 - public volatile static Context applicationContext ; / / FIXME Make package protected once all sync code moves to io . realm 
 + public volatile static Context applicationContext ; 
 
 / / Thread pool for all async operations ( Query & transaction ) 
 static final RealmThreadPoolExecutor asyncTaskExecutor = RealmThreadPoolExecutor . newDefaultExecutor ( ) ; 
 @ @ - 583 , 7 + 583 , 7 @ @ public abstract class BaseRealm implements Closeable { 
 * @ return { @ code true } if compaction succeeded , { @ code false } otherwise . 
 * / 
 static boolean compactRealm ( final RealmConfiguration configuration ) { 
 - / / FIXME : Move this check to OS ? 
 + / / https : / / github . com / realm / realm - java / issues / 1033 
 if ( configuration . getEncryptionKey ( ) ! = null ) { 
 throw new IllegalArgumentException ( " Cannot currently compact an encrypted Realm . " ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java b / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java 
 index cc2809d . . e2733a7 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmAsyncTask . java 
 @ @ - 16 , 7 + 16 , 6 @ @ 
 
 package io . realm ; 
 
 - import java . util . concurrent . ExecutorService ; 
 import java . util . concurrent . Future ; 
 import java . util . concurrent . ThreadPoolExecutor ; 
 
 @ @ - 32 , 7 + 31 , 6 @ @ public final class RealmAsyncTask { 
 private final ThreadPoolExecutor service ; 
 private volatile boolean isCancelled = false ; 
 
 - / / FIXME This shouldn ' t be public 
 public RealmAsyncTask ( Future < ? > pendingTask , ThreadPoolExecutor service ) { 
 this . pendingTask = pendingTask ; 
 this . service = service ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 index 8c7e6b0 . . 9e92389 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 @ @ - 154 , 7 + 154 , 6 @ @ public final class RealmObjectSchema { 
 realm . checkNotInSync ( ) ; / / renaming a table is not permitted 
 checkEmpty ( className ) ; 
 String internalTableName = Table . TABLE _ PREFIX + className ; 
 - / / FIXME : when core implements class name length check , please remove . 
 if ( internalTableName . length ( ) > Table . TABLE _ MAX _ LENGTH ) { 
 throw new IllegalArgumentException ( " Class name is to long . Limit is 56 characters : \ ' " + className + " \ ' ( " + Integer . toString ( className . length ( ) ) + " ) " ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / SyncManager . java b / realm / realm - library / src / main / java / io / realm / SyncManager . java 
 index 41d8ca5 . . ca496ef 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / SyncManager . java 
 + + + b / realm / realm - library / src / main / java / io / realm / SyncManager . java 
 @ @ - 226 , 7 + 226 , 6 @ @ public final class SyncManager { 
 * Sets the log level for the underlying 
 * @ param logLevel 
 * / 
 - / / FIXME Remove from the public API . This is controlled by Logger # minimumNativeLogLevel 
 public static void setLogLevel ( int logLevel ) { 
 nativeSetSyncClientLogLevel ( logLevel ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 index d1cdd84 . . 3218dc7 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 @ @ - 68 , 12 + 68 , 12 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { 
 
 @ Override 
 public RefreshResponse refresh ( String token , URL authenticationUrl ) { 
 - throw new UnsupportedOperationException ( " FIXME " ) ; 
 + throw new UnsupportedOperationException ( " Not yet implemented " ) ; 
 } 
 
 @ Override 
 public LogoutResponse logout ( User user , URL authenticationUrl ) { 
 - throw new UnsupportedOperationException ( " FIXME " ) ; 
 + throw new UnsupportedOperationException ( " Not yet implemented " ) ; 
 } 
 
 private AuthenticateResponse authenticate ( URL authenticationUrl , String requestBody ) throws Exception { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java b / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java 
 index 0c88d0b . . 2455972 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / network / RefreshResponse . java 
 @ @ - 22 , 7 + 22 , 6 @ @ import okhttp3 . Response ; 
 public class RefreshResponse extends AuthServerResponse { 
 
 public RefreshResponse ( Response response ) { 
 - / / FIXME Parse refresh result 
 } 
 
 public Token getRefreshToken ( ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / log / RealmLog . java b / realm / realm - library / src / main / java / io / realm / log / RealmLog . java 
 index 6389196 . . f831732 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / log / RealmLog . java 
 + + + b / realm / realm - library / src / main / java / io / realm / log / RealmLog . java 
 @ @ - 21 , 8 + 21 , 6 @ @ import java . util . List ; 
 
 import io . realm . internal . Keep ; 
 import io . realm . internal . Util ; 
 - import io . realm . SyncManager ; 
 - import io . realm . internal . ObjectServerFacade ; 
 
 / * * 
 * Global logger used by all Realm components . 
 @ @ - 59 , 7 + 57 , 6 @ @ public final class RealmLog { 
 
 private static void setMinimumNativeDebugLevel ( int nativeDebugLevel ) { 
 minimumNativeLogLevel = nativeDebugLevel ; 
 - / / FIXME : Use same log level setting for normal Realm and Sync Realm . 
 Util . setDebugLevel ( nativeDebugLevel ) ; / / Log level for Realm Core 
 } 

