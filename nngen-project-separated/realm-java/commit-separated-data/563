BLEU SCORE: 0.03283637368030199

TEST MSG: Enable OJO upload for AAR flavours .
GENERATED MSG: Perform the publishing to Bintray using curl

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 0085acd . . cd7c5fa 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 350 , 51 + 350 , 11 @ @ task bintrayUpload { <nl> dependsOn bintrayTransformer <nl> } <nl> <nl> - task s3Realm ( type : GradleBuild ) { <nl> - description = ' Publish the Realm AAR and AP to the internal S3 maven repository . ' <nl> - group = ' Publishing ' <nl> - buildFile = file ( ' realm / build . gradle ' ) <nl> - tasks = [ ' publish ' ] <nl> - if ( project . hasProperty ( ' buildTargetABIs ' ) ) { <nl> - startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] <nl> - } <nl> - } <nl> - <nl> - task s3Annotations ( type : GradleBuild ) { <nl> - description = ' Publish the Realm Annotations to the internal S3 maven repository . ' <nl> - group = ' Publishing ' <nl> - buildFile = file ( ' realm - annotations / build . gradle ' ) <nl> - tasks = [ ' publish ' ] <nl> - } <nl> - <nl> - task s3GradlePlugin ( type : GradleBuild ) { <nl> - description = ' Publish the Realm Gradle Plugin to the internal S3 maven repository . ' <nl> - group = ' Publishing ' <nl> - buildFile = file ( ' gradle - plugin / build . gradle ' ) <nl> - tasks = [ ' publish ' ] <nl> - } <nl> - <nl> - task s3Transformer ( type : GradleBuild ) { <nl> - description = ' Publish the Realm Transformer to the internal S3 maven repository . ' <nl> - group = ' Publishing ' <nl> - buildFile = file ( ' realm - transformer / build . gradle ' ) <nl> - tasks = [ ' publish ' ] <nl> - } <nl> - <nl> - task s3Upload { <nl> - description = ' Publish all the Realm artifacts to the internal S3 maven repository . ' <nl> - group = ' Publishing ' <nl> - dependsOn s3Realm <nl> - dependsOn s3Annotations <nl> - dependsOn s3GradlePlugin <nl> - dependsOn s3Transformer <nl> - } <nl> - <nl> task ojoRealm ( type : GradleBuild ) { <nl> description = ' Publish the Realm AAR and AP SNAPSHOT to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm / build . gradle ' ) <nl> - tasks = [ ' artifactoryPublish ' ] <nl> + tasks = [ ' ojoUpload ' ] <nl> startParameter . projectProperties = gradle . startParameter . projectProperties <nl> if ( project . hasProperty ( ' buildTargetABIs ' ) ) { <nl> startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] <nl> diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index 70fd1cd . . 02d42b2 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 13 , 7 + 13 , 7 @ @ buildscript { <nl> classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' <nl> classpath ' com . github . skhatri : gradle - s3 - plugin : 1 . 0 . 2 ' <nl> classpath ' org . kt3k . gradle . plugin : coveralls - gradle - plugin : 2 . 4 . 0 ' <nl> - classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 4 . 0 . 1 ' <nl> + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 4 . 4 . 5 ' <nl> classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 7 ' <nl> classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " <nl> } <nl> diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 4e7d20c . . 09e4c9f 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 546 , 6 + 546 , 8 @ @ android . productFlavors . all { flavor - > <nl> def userName = project . findProperty ( ' bintrayUser ' ) ? : ' noUser ' <nl> def accessKey = project . findProperty ( ' bintrayKey ' ) ? : ' noKey ' <nl> <nl> + / / BINTRAY <nl> + <nl> task ( " bintrayAar $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> dependsOn " assemble $ { flavor . name . capitalize ( ) } " <nl> group = ' Publishing ' <nl> @ @ - 598 , 6 + 600 , 60 @ @ android . productFlavors . all { flavor - > <nl> " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } . pom ? publish = 0 " <nl> } <nl> <nl> + / / OJO <nl> + <nl> + task ( " ojoAar $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn " assemble $ { flavor . name . capitalize ( ) } " <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / outputs / aar / realm - android - library - $ { flavor . name } - release . aar " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } . aar ? publish = 0 " <nl> + } <nl> + <nl> + task ( " ojoSources $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn sourcesJar <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / libs / realm - android - library - $ { project . version } - sources . jar " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } - sources . jar ? publish = 0 " <nl> + } <nl> + <nl> + task ( " ojoJavadoc $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn javadocJar <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / libs / realm - android - library - $ { project . version } - javadoc . jar " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } - javadoc . jar ? publish = 0 " <nl> + } <nl> + <nl> + task ( " ojoPom $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn " publish $ { flavor . name . capitalize ( ) } PublicationPublicationToMavenLocal " <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / publications / $ { flavor . name } Publication / pom - default . xml " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } . pom ? publish = 0 " <nl> + } <nl> + <nl> task ( " bintray $ { flavor . name . capitalize ( ) } " ) { <nl> dependsOn " bintrayAar $ { flavor . name . capitalize ( ) } " <nl> dependsOn " bintraySources $ { flavor . name . capitalize ( ) } " <nl> @ @ - 605 , 6 + 661 , 14 @ @ android . productFlavors . all { flavor - > <nl> dependsOn " bintrayPom $ { flavor . name . capitalize ( ) } " <nl> group = ' Publishing ' <nl> } <nl> + <nl> + task ( " ojo $ { flavor . name . capitalize ( ) } " ) { <nl> + dependsOn " ojoAar $ { flavor . name . capitalize ( ) } " <nl> + dependsOn " ojoSources $ { flavor . name . capitalize ( ) } " <nl> + dependsOn " ojoJavadoc $ { flavor . name . capitalize ( ) } " <nl> + dependsOn " ojoPom $ { flavor . name . capitalize ( ) } " <nl> + group = ' Publishing ' <nl> + } <nl> } <nl> <nl> task bintrayUpload ( ) { <nl> @ @ - 614 , 6 + 678 , 13 @ @ task bintrayUpload ( ) { <nl> group = ' Publishing ' <nl> } <nl> <nl> + task ojoUpload ( ) { <nl> + android . productFlavors . all { flavor - > <nl> + dependsOn " ojo $ { flavor . name . capitalize ( ) } " <nl> + } <nl> + group = ' Publishing ' <nl> + } <nl> + <nl> def checkNdk ( String ndkPath ) { <nl> def detectedNdkVersion <nl> def releaseFile = new File ( ndkPath , ' RELEASE . TXT ' )
NEAREST DIFF (one line): diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 0d3833e . . 2987477 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 5 , 7 + 5 , 6 @ @ apply plugin : ' com . neenbedankt . android - apt ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> apply plugin : ' maven - publish ' <nl> apply plugin : ' com . jfrog . artifactory ' <nl> - apply plugin : ' com . jfrog . bintray ' <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' pmd ' <nl> apply plugin : ' checkstyle ' <nl> @ @ - 344 , 28 + 343 , 6 @ @ publishing { <nl> } <nl> } <nl> <nl> - bintray { <nl> - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' <nl> - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' <nl> - <nl> - dryRun = false <nl> - publish = false <nl> - <nl> - configurations = [ ' basePublication ' , ' objectServerPublication ' ] <nl> - <nl> - pkg { <nl> - repo = ' maven ' <nl> - name = ' realm - android - library ' <nl> - desc = ' Realm for Android ' <nl> - websiteUrl = ' http : / / realm . io ' <nl> - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' <nl> - vcsUrl = ' https : / / github . com / realm / realm - java . git ' <nl> - licenses = [ ' Apache - 2 . 0 ' ] <nl> - labels = [ ' android ' , ' realm ' ] <nl> - publicDownloadNumbers = false <nl> - } <nl> - } <nl> - <nl> artifactory { <nl> contextUrl = ' https : / / oss . jfrog . org / artifactory ' <nl> publish { <nl> @ @ - 559 , 6 + 536 , 79 @ @ task checkNdk ( ) < < { <nl> } <nl> } <nl> <nl> + android . productFlavors . all { flavor - > <nl> + def librarySuffix = flavor . name = = ' base ' ? ' ' : ' - object - server ' <nl> + def userName = project . findProperty ( ' bintrayUser ' ) ? : ' noUser ' <nl> + def accessKey = project . findProperty ( ' bintrayKey ' ) ? : ' noKey ' <nl> + <nl> + task ( " bintrayAar $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn " assemble $ { flavor . name . capitalize ( ) } " <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / outputs / aar / realm - android - library - $ { flavor . name } - release . aar " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } . aar ? publish = 0 " <nl> + } <nl> + <nl> + task ( " bintraySources $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn sourcesJar <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / libs / realm - android - library - $ { project . version } - sources . jar " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - sources . jar ? publish = 0 " <nl> + } <nl> + <nl> + task ( " bintrayJavadoc $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn javadocJar <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / libs / realm - android - library - $ { project . version } - javadoc . jar " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - javadoc . jar ? publish = 0 " <nl> + } <nl> + <nl> + task ( " bintrayPom $ { flavor . name . capitalize ( ) } " , type : Exec ) { <nl> + dependsOn " publish $ { flavor . name . capitalize ( ) } PublicationPublicationToMavenLocal " <nl> + group = ' Publishing ' <nl> + commandLine ' curl ' , <nl> + ' - X ' , <nl> + ' PUT ' , <nl> + ' - T ' , <nl> + " $ { buildDir } / publications / $ { flavor . name } Publication / pom - default . xml " , <nl> + ' - u ' , <nl> + " $ { userName } : $ { accessKey } " , <nl> + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } . pom ? publish = 0 " <nl> + } <nl> + <nl> + task ( " bintray $ { flavor . name . capitalize ( ) } " ) { <nl> + dependsOn " bintrayAar $ { flavor . name . capitalize ( ) } " <nl> + dependsOn " bintraySources $ { flavor . name . capitalize ( ) } " <nl> + dependsOn " bintrayJavadoc $ { flavor . name . capitalize ( ) } " <nl> + dependsOn " bintrayPom $ { flavor . name . capitalize ( ) } " <nl> + group = ' Publishing ' <nl> + } <nl> + } <nl> + <nl> + task bintrayUpload ( ) { <nl> + android . productFlavors . all { flavor - > <nl> + dependsOn " bintray $ { flavor . name . capitalize ( ) } " <nl> + } <nl> + group = ' Publishing ' <nl> + } <nl> + <nl> def checkNdk ( String ndkPath ) { <nl> def detectedNdkVersion <nl> def releaseFile = new File ( ndkPath , ' RELEASE . TXT ' )

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 0085acd . . cd7c5fa 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 350 , 51 + 350 , 11 @ @ task bintrayUpload { 
 dependsOn bintrayTransformer 
 } 
 
 - task s3Realm ( type : GradleBuild ) { 
 - description = ' Publish the Realm AAR and AP to the internal S3 maven repository . ' 
 - group = ' Publishing ' 
 - buildFile = file ( ' realm / build . gradle ' ) 
 - tasks = [ ' publish ' ] 
 - if ( project . hasProperty ( ' buildTargetABIs ' ) ) { 
 - startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] 
 - } 
 - } 
 - 
 - task s3Annotations ( type : GradleBuild ) { 
 - description = ' Publish the Realm Annotations to the internal S3 maven repository . ' 
 - group = ' Publishing ' 
 - buildFile = file ( ' realm - annotations / build . gradle ' ) 
 - tasks = [ ' publish ' ] 
 - } 
 - 
 - task s3GradlePlugin ( type : GradleBuild ) { 
 - description = ' Publish the Realm Gradle Plugin to the internal S3 maven repository . ' 
 - group = ' Publishing ' 
 - buildFile = file ( ' gradle - plugin / build . gradle ' ) 
 - tasks = [ ' publish ' ] 
 - } 
 - 
 - task s3Transformer ( type : GradleBuild ) { 
 - description = ' Publish the Realm Transformer to the internal S3 maven repository . ' 
 - group = ' Publishing ' 
 - buildFile = file ( ' realm - transformer / build . gradle ' ) 
 - tasks = [ ' publish ' ] 
 - } 
 - 
 - task s3Upload { 
 - description = ' Publish all the Realm artifacts to the internal S3 maven repository . ' 
 - group = ' Publishing ' 
 - dependsOn s3Realm 
 - dependsOn s3Annotations 
 - dependsOn s3GradlePlugin 
 - dependsOn s3Transformer 
 - } 
 - 
 task ojoRealm ( type : GradleBuild ) { 
 description = ' Publish the Realm AAR and AP SNAPSHOT to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' realm / build . gradle ' ) 
 - tasks = [ ' artifactoryPublish ' ] 
 + tasks = [ ' ojoUpload ' ] 
 startParameter . projectProperties = gradle . startParameter . projectProperties 
 if ( project . hasProperty ( ' buildTargetABIs ' ) ) { 
 startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] 
 diff - - git a / realm / build . gradle b / realm / build . gradle 
 index 70fd1cd . . 02d42b2 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 13 , 7 + 13 , 7 @ @ buildscript { 
 classpath ' com . novoda : gradle - android - command - plugin : 1 . 3 . 0 ' 
 classpath ' com . github . skhatri : gradle - s3 - plugin : 1 . 0 . 2 ' 
 classpath ' org . kt3k . gradle . plugin : coveralls - gradle - plugin : 2 . 4 . 0 ' 
 - classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 4 . 0 . 1 ' 
 + classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 4 . 4 . 5 ' 
 classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 7 ' 
 classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " 
 } 
 diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 4e7d20c . . 09e4c9f 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 546 , 6 + 546 , 8 @ @ android . productFlavors . all { flavor - > 
 def userName = project . findProperty ( ' bintrayUser ' ) ? : ' noUser ' 
 def accessKey = project . findProperty ( ' bintrayKey ' ) ? : ' noKey ' 
 
 + / / BINTRAY 
 + 
 task ( " bintrayAar $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 dependsOn " assemble $ { flavor . name . capitalize ( ) } " 
 group = ' Publishing ' 
 @ @ - 598 , 6 + 600 , 60 @ @ android . productFlavors . all { flavor - > 
 " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } . pom ? publish = 0 " 
 } 
 
 + / / OJO 
 + 
 + task ( " ojoAar $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn " assemble $ { flavor . name . capitalize ( ) } " 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / outputs / aar / realm - android - library - $ { flavor . name } - release . aar " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } . aar ? publish = 0 " 
 + } 
 + 
 + task ( " ojoSources $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn sourcesJar 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / libs / realm - android - library - $ { project . version } - sources . jar " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } - sources . jar ? publish = 0 " 
 + } 
 + 
 + task ( " ojoJavadoc $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn javadocJar 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / libs / realm - android - library - $ { project . version } - javadoc . jar " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } - javadoc . jar ? publish = 0 " 
 + } 
 + 
 + task ( " ojoPom $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn " publish $ { flavor . name . capitalize ( ) } PublicationPublicationToMavenLocal " 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / publications / $ { flavor . name } Publication / pom - default . xml " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / oss . jfrog . org / artifactory / oss - snapshot - local / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - $ { project . version } . pom ? publish = 0 " 
 + } 
 + 
 task ( " bintray $ { flavor . name . capitalize ( ) } " ) { 
 dependsOn " bintrayAar $ { flavor . name . capitalize ( ) } " 
 dependsOn " bintraySources $ { flavor . name . capitalize ( ) } " 
 @ @ - 605 , 6 + 661 , 14 @ @ android . productFlavors . all { flavor - > 
 dependsOn " bintrayPom $ { flavor . name . capitalize ( ) } " 
 group = ' Publishing ' 
 } 
 + 
 + task ( " ojo $ { flavor . name . capitalize ( ) } " ) { 
 + dependsOn " ojoAar $ { flavor . name . capitalize ( ) } " 
 + dependsOn " ojoSources $ { flavor . name . capitalize ( ) } " 
 + dependsOn " ojoJavadoc $ { flavor . name . capitalize ( ) } " 
 + dependsOn " ojoPom $ { flavor . name . capitalize ( ) } " 
 + group = ' Publishing ' 
 + } 
 } 
 
 task bintrayUpload ( ) { 
 @ @ - 614 , 6 + 678 , 13 @ @ task bintrayUpload ( ) { 
 group = ' Publishing ' 
 } 
 
 + task ojoUpload ( ) { 
 + android . productFlavors . all { flavor - > 
 + dependsOn " ojo $ { flavor . name . capitalize ( ) } " 
 + } 
 + group = ' Publishing ' 
 + } 
 + 
 def checkNdk ( String ndkPath ) { 
 def detectedNdkVersion 
 def releaseFile = new File ( ndkPath , ' RELEASE . TXT ' )

NEAREST DIFF:
diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 0d3833e . . 2987477 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 5 , 7 + 5 , 6 @ @ apply plugin : ' com . neenbedankt . android - apt ' 
 apply plugin : ' com . github . dcendents . android - maven ' 
 apply plugin : ' maven - publish ' 
 apply plugin : ' com . jfrog . artifactory ' 
 - apply plugin : ' com . jfrog . bintray ' 
 apply plugin : ' findbugs ' 
 apply plugin : ' pmd ' 
 apply plugin : ' checkstyle ' 
 @ @ - 344 , 28 + 343 , 6 @ @ publishing { 
 } 
 } 
 
 - bintray { 
 - user = project . hasProperty ( ' bintrayUser ' ) ? bintrayUser : ' noUser ' 
 - key = project . hasProperty ( ' bintrayKey ' ) ? bintrayKey : ' noKey ' 
 - 
 - dryRun = false 
 - publish = false 
 - 
 - configurations = [ ' basePublication ' , ' objectServerPublication ' ] 
 - 
 - pkg { 
 - repo = ' maven ' 
 - name = ' realm - android - library ' 
 - desc = ' Realm for Android ' 
 - websiteUrl = ' http : / / realm . io ' 
 - issueTrackerUrl = ' https : / / github . com / realm / realm - java / issues ' 
 - vcsUrl = ' https : / / github . com / realm / realm - java . git ' 
 - licenses = [ ' Apache - 2 . 0 ' ] 
 - labels = [ ' android ' , ' realm ' ] 
 - publicDownloadNumbers = false 
 - } 
 - } 
 - 
 artifactory { 
 contextUrl = ' https : / / oss . jfrog . org / artifactory ' 
 publish { 
 @ @ - 559 , 6 + 536 , 79 @ @ task checkNdk ( ) < < { 
 } 
 } 
 
 + android . productFlavors . all { flavor - > 
 + def librarySuffix = flavor . name = = ' base ' ? ' ' : ' - object - server ' 
 + def userName = project . findProperty ( ' bintrayUser ' ) ? : ' noUser ' 
 + def accessKey = project . findProperty ( ' bintrayKey ' ) ? : ' noKey ' 
 + 
 + task ( " bintrayAar $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn " assemble $ { flavor . name . capitalize ( ) } " 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / outputs / aar / realm - android - library - $ { flavor . name } - release . aar " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } . aar ? publish = 0 " 
 + } 
 + 
 + task ( " bintraySources $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn sourcesJar 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / libs / realm - android - library - $ { project . version } - sources . jar " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - sources . jar ? publish = 0 " 
 + } 
 + 
 + task ( " bintrayJavadoc $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn javadocJar 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / libs / realm - android - library - $ { project . version } - javadoc . jar " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } - javadoc . jar ? publish = 0 " 
 + } 
 + 
 + task ( " bintrayPom $ { flavor . name . capitalize ( ) } " , type : Exec ) { 
 + dependsOn " publish $ { flavor . name . capitalize ( ) } PublicationPublicationToMavenLocal " 
 + group = ' Publishing ' 
 + commandLine ' curl ' , 
 + ' - X ' , 
 + ' PUT ' , 
 + ' - T ' , 
 + " $ { buildDir } / publications / $ { flavor . name } Publication / pom - default . xml " , 
 + ' - u ' , 
 + " $ { userName } : $ { accessKey } " , 
 + " https : / / api . bintray . com / content / realm / maven / realm - android - library $ { librarySuffix } / $ { project . version } / io / realm / realm - android - library $ { librarySuffix } / $ { project . version } / realm - android - library $ { librarySuffix } . pom ? publish = 0 " 
 + } 
 + 
 + task ( " bintray $ { flavor . name . capitalize ( ) } " ) { 
 + dependsOn " bintrayAar $ { flavor . name . capitalize ( ) } " 
 + dependsOn " bintraySources $ { flavor . name . capitalize ( ) } " 
 + dependsOn " bintrayJavadoc $ { flavor . name . capitalize ( ) } " 
 + dependsOn " bintrayPom $ { flavor . name . capitalize ( ) } " 
 + group = ' Publishing ' 
 + } 
 + } 
 + 
 + task bintrayUpload ( ) { 
 + android . productFlavors . all { flavor - > 
 + dependsOn " bintray $ { flavor . name . capitalize ( ) } " 
 + } 
 + group = ' Publishing ' 
 + } 
 + 
 def checkNdk ( String ndkPath ) { 
 def detectedNdkVersion 
 def releaseFile = new File ( ndkPath , ' RELEASE . TXT ' )
