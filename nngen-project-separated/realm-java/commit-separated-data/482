BLEU SCORE: 0.02383853510228548

TEST MSG: Use SyncManager : : get _ current _ user
GENERATED MSG: Adds User . all ( )

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java <nl> index 1c017f7 . . 48b1a8e 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ public class SyncUserTests { <nl> <nl> @ BeforeClass <nl> public static void initUserStore ( ) { <nl> + Realm . init ( InstrumentationRegistry . getInstrumentation ( ) . getContext ( ) ) ; <nl> UserStore userStore = new RealmFileUserStore ( InstrumentationRegistry . getTargetContext ( ) . getFilesDir ( ) . getPath ( ) ) ; <nl> SyncManager . setUserStore ( userStore ) ; <nl> } <nl> @ @ - 83 , 6 + 84 , 7 @ @ public class SyncUserTests { <nl> <nl> SyncUser savedUser = SyncUser . currentUser ( ) ; <nl> assertEquals ( user , savedUser ) ; <nl> + assertNotNull ( savedUser ) ; <nl> savedUser . logout ( ) ; <nl> assertNull ( SyncUser . currentUser ( ) ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> index 790f08e . . 99a06a5 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> @ @ - 23 , 19 + 23 , 17 @ @ <nl> <nl> using namespace realm ; <nl> <nl> - static const char * ERR _ MULTIPLE _ LOGGED _ IN _ USERS = " Cannot be called if more that one valid , logged in user exists . " ; <nl> static const char * ERR _ NO _ LOGGED _ IN _ USER = " No user logged in yet . " ; <nl> static const char * ERR _ COULD _ NOT _ ALLOCATE _ MEMORY = " Could not allocate memory to return all users . " ; <nl> <nl> - static const std : : shared _ ptr < SyncUser > & currentUserOrThrow ( ) ; <nl> - <nl> JNIEXPORT jstring JNICALL <nl> Java _ io _ realm _ RealmFileUserStore _ nativeGetCurrentUser ( JNIEnv * env , jclass ) <nl> { <nl> TR _ ENTER ( ) <nl> try { <nl> - const std : : shared _ ptr < SyncUser > & user = currentUserOrThrow ( ) ; <nl> - if ( user - > state ( ) = = SyncUser : : State : : Active ) { <nl> + <nl> + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; <nl> + if ( user ) { <nl> return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; <nl> } else { <nl> return nullptr ; <nl> @ @ - 62 , 8 + 60 , 12 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeLogoutCurrentUser ( JNIEnv * env , jclass ) <nl> { <nl> TR _ ENTER ( ) <nl> try { <nl> - const std : : shared _ ptr < SyncUser > & user = currentUserOrThrow ( ) ; <nl> - user - > log _ out ( ) ; <nl> + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; <nl> + if ( user ) { <nl> + user - > log _ out ( ) ; <nl> + } else { <nl> + throw std : : runtime _ error ( ERR _ NO _ LOGGED _ IN _ USER ) ; <nl> + } <nl> } CATCH _ STD ( ) <nl> } <nl> <nl> @ @ - 116 , 14 + 118 , 3 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeResetForTesting ( JNIEnv * , jclass ) <nl> SyncManager : : shared ( ) . reset _ for _ testing ( ) ; <nl> } <nl> <nl> - static const std : : shared _ ptr < SyncUser > & currentUserOrThrow ( ) / / throws <nl> - { <nl> - std : : vector < std : : shared _ ptr < SyncUser > > all _ users = SyncManager : : shared ( ) . all _ logged _ in _ users ( ) ; <nl> - if ( all _ users . size ( ) > 1 ) { <nl> - throw std : : runtime _ error ( ERR _ MULTIPLE _ LOGGED _ IN _ USERS ) ; <nl> - } else if ( all _ users . size ( ) < 1 ) { <nl> - throw std : : runtime _ error ( ERR _ NO _ LOGGED _ IN _ USER ) ; <nl> - } else { <nl> - return all _ users . front ( ) ; <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index af4b613 . . 69e7bb1 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> # # # Enhancement <nl> <nl> * ` Realm . compactRealm ( ) ` works for encrypted Realms . <nl> + * Added ` User . all ( ) ` that returns all known Realm Object Server users . <nl> <nl> # # 2 . 0 . 3 <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> index 1deaf9b . . 566228e 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> @ @ - 71 , 6 + 71 , 10 @ @ public class SyncManagerTests { <nl> public Collection < User > allUsers ( ) { <nl> return null ; <nl> } <nl> + <nl> + @ Override <nl> + public void clear ( ) { <nl> + } <nl> } ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> index 4cf3601 . . 0f90fe6 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> @ @ - 19 , 29 + 19 , 21 @ @ package io . realm ; <nl> import android . support . test . InstrumentationRegistry ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> + import org . junit . Before ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> - import org . mockito . Mockito ; <nl> - import org . mockito . invocation . InvocationOnMock ; <nl> - import org . mockito . stubbing . Answer ; <nl> <nl> - import java . net . URL ; <nl> - import java . util . concurrent . TimeUnit ; <nl> + import java . util . Collection ; <nl> <nl> import io . realm . android . SharedPrefsUserStore ; <nl> - import io . realm . internal . network . AuthenticateResponse ; <nl> - import io . realm . internal . network . AuthenticationServer ; <nl> - import io . realm . internal . objectserver . Token ; <nl> import io . realm . rule . RunInLooperThread ; <nl> - import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . util . SyncTestUtils ; <nl> <nl> import static io . realm . util . SyncTestUtils . createTestUser ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNull ; <nl> - import static org . mockito . Matchers . any ; <nl> - import static org . mockito . Mockito . when ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class UserTests { <nl> @ @ - 49 , 6 + 41 , 12 @ @ public class UserTests { <nl> @ Rule <nl> public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> <nl> + @ Before <nl> + public void setUp ( ) { <nl> + Realm . init ( InstrumentationRegistry . getTargetContext ( ) ) ; <nl> + SyncManager . getUserStore ( ) . clear ( ) ; <nl> + } <nl> + <nl> @ Test <nl> public void toAndFromJson ( ) { <nl> User user1 = createTestUser ( ) ; <nl> @ @ - 68 , 6 + 66 , 27 @ @ public class UserTests { <nl> assertNull ( User . currentUser ( ) ) ; <nl> } <nl> <nl> + / / ` all ( ) ` returns an empty list if no users are logged in <nl> + @ Test <nl> + public void all _ empty ( ) { <nl> + Collection < User > users = User . all ( ) ; <nl> + assertTrue ( users . isEmpty ( ) ) ; <nl> + } <nl> + <nl> + / / ` all ( ) ` returns only valid users . Invalid users are filtered . <nl> + @ Test <nl> + public void all _ validUsers ( ) { <nl> + / / Add 1 expired user and 1 valid user to the user store <nl> + UserStore userStore = new SharedPrefsUserStore ( InstrumentationRegistry . getContext ( ) ) ; <nl> + SyncManager . setUserStore ( userStore ) ; <nl> + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MIN _ VALUE ) ) ; <nl> + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MAX _ VALUE ) ) ; <nl> + <nl> + Collection < User > users = User . all ( ) ; <nl> + assertEquals ( 1 , users . size ( ) ) ; <nl> + assertTrue ( users . iterator ( ) . next ( ) . isValid ( ) ) ; <nl> + } <nl> + <nl> / / Tests that the user store returns the last user to login <nl> / * FIXME : This test fails because of wrong JSON string . <nl> @ Test <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> index cab8285 . . 1798b42 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> @ @ - 28 , 7 + 28 , 9 @ @ import java . net . MalformedURLException ; <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> import java . net . URL ; <nl> + import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> + import java . util . List ; <nl> import java . util . concurrent . Future ; <nl> import java . util . concurrent . ThreadPoolExecutor ; <nl> <nl> @ @ - 80 , 6 + 82 , 24 @ @ public class User { <nl> } <nl> <nl> / * * <nl> + * Returns all valid users known by this device . <nl> + * A user is invalidated when he / she logs out or the user ' s access token expires . <nl> + * <nl> + * @ return a list of all known valid users . <nl> + * / <nl> + public static Collection < User > all ( ) { <nl> + UserStore userStore = SyncManager . getUserStore ( ) ; <nl> + Collection < User > storedUsers = userStore . allUsers ( ) ; <nl> + List < User > result = new ArrayList < User > ( storedUsers . size ( ) ) ; <nl> + for ( User user : storedUsers ) { <nl> + if ( user . isValid ( ) ) { <nl> + result . add ( user ) ; <nl> + } <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Loads a user that has previously been serialized using { @ link # toJson ( ) } . <nl> * <nl> * @ param user JSON string representing the user . <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> index 140d013 . . 4ec9f35 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> @ @ - 67 , 4 + 67 , 10 @ @ public interface UserStore { <nl> * @ return Collection of all users . If no users exist , an empty collection is returned . <nl> * / <nl> Collection < User > allUsers ( ) ; <nl> + <nl> + <nl> + / * * <nl> + * Removes all saved users . <nl> + * / <nl> + void clear ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> index 7aedf01 . . 5a73075 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import java . security . KeyStoreException ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> <nl> import io . realm . User ; <nl> import io . realm . UserStore ; <nl> @ @ - 159 , 4 + 160 , 14 @ @ public class SecureUserStore implements UserStore { <nl> } <nl> return users ; <nl> } <nl> + <nl> + @ Override <nl> + public void clear ( ) { <nl> + Set < String > all = sp . getAll ( ) . keySet ( ) ; <nl> + SharedPreferences . Editor editor = sp . edit ( ) ; <nl> + for ( String key : all ) { <nl> + editor . remove ( key ) ; <nl> + } <nl> + editor . apply ( ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> index eab709c . . 4773cb6 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import android . content . SharedPreferences ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> <nl> import io . realm . User ; <nl> import io . realm . UserStore ; <nl> @ @ - 114 , 4 + 115 , 17 @ @ public class SharedPrefsUserStore implements UserStore { <nl> } <nl> return users ; <nl> } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + @ Override <nl> + public void clear ( ) { <nl> + Set < String > all = sp . getAll ( ) . keySet ( ) ; <nl> + SharedPreferences . Editor editor = sp . edit ( ) ; <nl> + for ( String key : all ) { <nl> + editor . remove ( key ) ; <nl> + } <nl> + editor . apply ( ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java 
 index 1c017f7 . . 48b1a8e 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncUserTests . java 
 @ @ - 46 , 6 + 46 , 7 @ @ public class SyncUserTests { 
 
 @ BeforeClass 
 public static void initUserStore ( ) { 
 + Realm . init ( InstrumentationRegistry . getInstrumentation ( ) . getContext ( ) ) ; 
 UserStore userStore = new RealmFileUserStore ( InstrumentationRegistry . getTargetContext ( ) . getFilesDir ( ) . getPath ( ) ) ; 
 SyncManager . setUserStore ( userStore ) ; 
 } 
 @ @ - 83 , 6 + 84 , 7 @ @ public class SyncUserTests { 
 
 SyncUser savedUser = SyncUser . currentUser ( ) ; 
 assertEquals ( user , savedUser ) ; 
 + assertNotNull ( savedUser ) ; 
 savedUser . logout ( ) ; 
 assertNull ( SyncUser . currentUser ( ) ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 index 790f08e . . 99a06a5 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 @ @ - 23 , 19 + 23 , 17 @ @ 
 
 using namespace realm ; 
 
 - static const char * ERR _ MULTIPLE _ LOGGED _ IN _ USERS = " Cannot be called if more that one valid , logged in user exists . " ; 
 static const char * ERR _ NO _ LOGGED _ IN _ USER = " No user logged in yet . " ; 
 static const char * ERR _ COULD _ NOT _ ALLOCATE _ MEMORY = " Could not allocate memory to return all users . " ; 
 
 - static const std : : shared _ ptr < SyncUser > & currentUserOrThrow ( ) ; 
 - 
 JNIEXPORT jstring JNICALL 
 Java _ io _ realm _ RealmFileUserStore _ nativeGetCurrentUser ( JNIEnv * env , jclass ) 
 { 
 TR _ ENTER ( ) 
 try { 
 - const std : : shared _ ptr < SyncUser > & user = currentUserOrThrow ( ) ; 
 - if ( user - > state ( ) = = SyncUser : : State : : Active ) { 
 + 
 + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; 
 + if ( user ) { 
 return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; 
 } else { 
 return nullptr ; 
 @ @ - 62 , 8 + 60 , 12 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeLogoutCurrentUser ( JNIEnv * env , jclass ) 
 { 
 TR _ ENTER ( ) 
 try { 
 - const std : : shared _ ptr < SyncUser > & user = currentUserOrThrow ( ) ; 
 - user - > log _ out ( ) ; 
 + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; 
 + if ( user ) { 
 + user - > log _ out ( ) ; 
 + } else { 
 + throw std : : runtime _ error ( ERR _ NO _ LOGGED _ IN _ USER ) ; 
 + } 
 } CATCH _ STD ( ) 
 } 
 
 @ @ - 116 , 14 + 118 , 3 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeResetForTesting ( JNIEnv * , jclass ) 
 SyncManager : : shared ( ) . reset _ for _ testing ( ) ; 
 } 
 
 - static const std : : shared _ ptr < SyncUser > & currentUserOrThrow ( ) / / throws 
 - { 
 - std : : vector < std : : shared _ ptr < SyncUser > > all _ users = SyncManager : : shared ( ) . all _ logged _ in _ users ( ) ; 
 - if ( all _ users . size ( ) > 1 ) { 
 - throw std : : runtime _ error ( ERR _ MULTIPLE _ LOGGED _ IN _ USERS ) ; 
 - } else if ( all _ users . size ( ) < 1 ) { 
 - throw std : : runtime _ error ( ERR _ NO _ LOGGED _ IN _ USER ) ; 
 - } else { 
 - return all _ users . front ( ) ; 
 - } 
 - }

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index af4b613 . . 69e7bb1 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 # # # Enhancement 
 
 * ` Realm . compactRealm ( ) ` works for encrypted Realms . 
 + * Added ` User . all ( ) ` that returns all known Realm Object Server users . 
 
 # # 2 . 0 . 3 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 index 1deaf9b . . 566228e 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 @ @ - 71 , 6 + 71 , 10 @ @ public class SyncManagerTests { 
 public Collection < User > allUsers ( ) { 
 return null ; 
 } 
 + 
 + @ Override 
 + public void clear ( ) { 
 + } 
 } ; 
 } 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 index 4cf3601 . . 0f90fe6 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 @ @ - 19 , 29 + 19 , 21 @ @ package io . realm ; 
 import android . support . test . InstrumentationRegistry ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 + import org . junit . Before ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 - import org . mockito . Mockito ; 
 - import org . mockito . invocation . InvocationOnMock ; 
 - import org . mockito . stubbing . Answer ; 
 
 - import java . net . URL ; 
 - import java . util . concurrent . TimeUnit ; 
 + import java . util . Collection ; 
 
 import io . realm . android . SharedPrefsUserStore ; 
 - import io . realm . internal . network . AuthenticateResponse ; 
 - import io . realm . internal . network . AuthenticationServer ; 
 - import io . realm . internal . objectserver . Token ; 
 import io . realm . rule . RunInLooperThread ; 
 - import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . util . SyncTestUtils ; 
 
 import static io . realm . util . SyncTestUtils . createTestUser ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNull ; 
 - import static org . mockito . Matchers . any ; 
 - import static org . mockito . Mockito . when ; 
 + import static org . junit . Assert . assertTrue ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class UserTests { 
 @ @ - 49 , 6 + 41 , 12 @ @ public class UserTests { 
 @ Rule 
 public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 
 + @ Before 
 + public void setUp ( ) { 
 + Realm . init ( InstrumentationRegistry . getTargetContext ( ) ) ; 
 + SyncManager . getUserStore ( ) . clear ( ) ; 
 + } 
 + 
 @ Test 
 public void toAndFromJson ( ) { 
 User user1 = createTestUser ( ) ; 
 @ @ - 68 , 6 + 66 , 27 @ @ public class UserTests { 
 assertNull ( User . currentUser ( ) ) ; 
 } 
 
 + / / ` all ( ) ` returns an empty list if no users are logged in 
 + @ Test 
 + public void all _ empty ( ) { 
 + Collection < User > users = User . all ( ) ; 
 + assertTrue ( users . isEmpty ( ) ) ; 
 + } 
 + 
 + / / ` all ( ) ` returns only valid users . Invalid users are filtered . 
 + @ Test 
 + public void all _ validUsers ( ) { 
 + / / Add 1 expired user and 1 valid user to the user store 
 + UserStore userStore = new SharedPrefsUserStore ( InstrumentationRegistry . getContext ( ) ) ; 
 + SyncManager . setUserStore ( userStore ) ; 
 + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MIN _ VALUE ) ) ; 
 + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MAX _ VALUE ) ) ; 
 + 
 + Collection < User > users = User . all ( ) ; 
 + assertEquals ( 1 , users . size ( ) ) ; 
 + assertTrue ( users . iterator ( ) . next ( ) . isValid ( ) ) ; 
 + } 
 + 
 / / Tests that the user store returns the last user to login 
 / * FIXME : This test fails because of wrong JSON string . 
 @ Test 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 index cab8285 . . 1798b42 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 @ @ - 28 , 7 + 28 , 9 @ @ import java . net . MalformedURLException ; 
 import java . net . URI ; 
 import java . net . URISyntaxException ; 
 import java . net . URL ; 
 + import java . util . ArrayList ; 
 import java . util . Collection ; 
 + import java . util . List ; 
 import java . util . concurrent . Future ; 
 import java . util . concurrent . ThreadPoolExecutor ; 
 
 @ @ - 80 , 6 + 82 , 24 @ @ public class User { 
 } 
 
 / * * 
 + * Returns all valid users known by this device . 
 + * A user is invalidated when he / she logs out or the user ' s access token expires . 
 + * 
 + * @ return a list of all known valid users . 
 + * / 
 + public static Collection < User > all ( ) { 
 + UserStore userStore = SyncManager . getUserStore ( ) ; 
 + Collection < User > storedUsers = userStore . allUsers ( ) ; 
 + List < User > result = new ArrayList < User > ( storedUsers . size ( ) ) ; 
 + for ( User user : storedUsers ) { 
 + if ( user . isValid ( ) ) { 
 + result . add ( user ) ; 
 + } 
 + } 
 + return result ; 
 + } 
 + 
 + / * * 
 * Loads a user that has previously been serialized using { @ link # toJson ( ) } . 
 * 
 * @ param user JSON string representing the user . 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 index 140d013 . . 4ec9f35 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 @ @ - 67 , 4 + 67 , 10 @ @ public interface UserStore { 
 * @ return Collection of all users . If no users exist , an empty collection is returned . 
 * / 
 Collection < User > allUsers ( ) ; 
 + 
 + 
 + / * * 
 + * Removes all saved users . 
 + * / 
 + void clear ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 index 7aedf01 . . 5a73075 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import java . security . KeyStoreException ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 
 import io . realm . User ; 
 import io . realm . UserStore ; 
 @ @ - 159 , 4 + 160 , 14 @ @ public class SecureUserStore implements UserStore { 
 } 
 return users ; 
 } 
 + 
 + @ Override 
 + public void clear ( ) { 
 + Set < String > all = sp . getAll ( ) . keySet ( ) ; 
 + SharedPreferences . Editor editor = sp . edit ( ) ; 
 + for ( String key : all ) { 
 + editor . remove ( key ) ; 
 + } 
 + editor . apply ( ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 index eab709c . . 4773cb6 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import android . content . SharedPreferences ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 
 import io . realm . User ; 
 import io . realm . UserStore ; 
 @ @ - 114 , 4 + 115 , 17 @ @ public class SharedPrefsUserStore implements UserStore { 
 } 
 return users ; 
 } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + @ Override 
 + public void clear ( ) { 
 + Set < String > all = sp . getAll ( ) . keySet ( ) ; 
 + SharedPreferences . Editor editor = sp . edit ( ) ; 
 + for ( String key : all ) { 
 + editor . remove ( key ) ; 
 + } 
 + editor . apply ( ) ; 
 + } 
 }
