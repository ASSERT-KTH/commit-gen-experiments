BLEU SCORE: 0.018160849415439315

TEST MSG: Fix warnings from error prone plugin https : / / github . com / tbroyer / gradle - errorprone - plugin
GENERATED MSG: Remove generic parameter from RealmObject

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> index 44ee9dd . . e0208b4 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> @ @ - 1241 , 7 + 1241 , 7 @ @ public class DynamicRealmObjectTests { <nl> assertTrue ( str . contains ( NullTypes . FIELD _ LIST _ NULL + " : RealmList < NullTypes > [ 0 ] " ) ) ; <nl> } <nl> <nl> - <nl> + @ Test <nl> public void testExceptionMessage ( ) { <nl> / / Tests for https : / / github . com / realm / realm - java / issues / 2141 <nl> realm . beginTransaction ( ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> index 92059c9 . . 5485151 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 68 , 6 + 68 , 8 @ @ import static junit . framework . Assert . fail ; <nl> <nl> public class TestHelper { <nl> <nl> + private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; <nl> + <nl> public static class ExpectedCountCallback implements RealmCache . Callback { <nl> <nl> private int expectedCount ; <nl> @ @ - 124 , 7 + 126 , 7 @ @ public class TestHelper { <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> String line ; <nl> try { <nl> - br = new BufferedReader ( new InputStreamReader ( in ) ) ; <nl> + br = new BufferedReader ( new InputStreamReader ( in , UTF _ 8 ) ) ; <nl> while ( ( line = br . readLine ( ) ) ! = null ) { <nl> sb . append ( line ) ; <nl> } <nl> @ @ - 138 , 7 + 140 , 7 @ @ public class TestHelper { <nl> } <nl> <nl> public static InputStream stringToStream ( String str ) { <nl> - return new ByteArrayInputStream ( str . getBytes ( Charset . forName ( " UTF - 8 " ) ) ) ; <nl> + return new ByteArrayInputStream ( str . getBytes ( UTF _ 8 ) ) ; <nl> } <nl> <nl> / / Creates a simple migration step in order to support null . <nl> @ @ - 256 , 12 + 258 , 10 @ @ public class TestHelper { <nl> public static byte [ ] SHA512 ( String str ) { <nl> try { <nl> MessageDigest md = MessageDigest . getInstance ( " SHA - 512 " ) ; <nl> - md . update ( str . getBytes ( " UTF - 8 " ) , 0 , str . length ( ) ) ; <nl> + md . update ( str . getBytes ( UTF _ 8 ) , 0 , str . length ( ) ) ; <nl> return md . digest ( ) ; <nl> } catch ( NoSuchAlgorithmException e ) { <nl> throw new RuntimeException ( e ) ; <nl> - } catch ( UnsupportedEncodingException e ) { <nl> - throw new RuntimeException ( e ) ; <nl> } <nl> } <nl> <nl> @ @ - 368 , 10 + 368 , 10 @ @ public class TestHelper { <nl> userObj . setId ( primaryFieldValue ) ; <nl> userObj . setName ( secondaryFieldValue ) ; <nl> testRealm . copyToRealm ( userObj ) ; <nl> - byte idValue = ( byte ) iteratorBeginValue ; <nl> + byte idValue = ( byte ) iteratorBeginValue ; <nl> for ( int i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { <nl> PrimaryKeyAsBoxedByte obj = new PrimaryKeyAsBoxedByte ( ) ; <nl> - obj . setId ( new Byte ( idValue ) ) ; <nl> + obj . setId ( idValue ) ; <nl> obj . setName ( String . valueOf ( idValue ) ) ; <nl> testRealm . copyToRealm ( obj ) ; <nl> } <nl> @ @ - 404 , 7 + 404 , 7 @ @ public class TestHelper { <nl> short idValue = ( short ) iteratorBeginValue ; <nl> for ( int i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { <nl> PrimaryKeyAsBoxedShort obj = new PrimaryKeyAsBoxedShort ( ) ; <nl> - obj . setId ( new Short ( idValue ) ) ; <nl> + obj . setId ( idValue ) ; <nl> obj . setName ( String . valueOf ( idValue ) ) ; <nl> testRealm . copyToRealm ( obj ) ; <nl> } <nl> @ @ - 437 , 7 + 437 , 7 @ @ public class TestHelper { <nl> int idValue = iteratorBeginValue ; <nl> for ( int i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { <nl> PrimaryKeyAsBoxedInteger obj = new PrimaryKeyAsBoxedInteger ( ) ; <nl> - obj . setId ( new Integer ( idValue ) ) ; <nl> + obj . setId ( idValue ) ; <nl> obj . setName ( String . valueOf ( idValue ) ) ; <nl> testRealm . copyToRealm ( obj ) ; <nl> } <nl> @ @ - 470 , 7 + 470 , 7 @ @ public class TestHelper { <nl> long idValue = iteratorBeginValue ; <nl> for ( long i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { <nl> PrimaryKeyAsBoxedLong obj = new PrimaryKeyAsBoxedLong ( ) ; <nl> - obj . setId ( new Long ( idValue ) ) ; <nl> + obj . setId ( idValue ) ; <nl> obj . setName ( String . valueOf ( idValue ) ) ; <nl> testRealm . copyToRealm ( obj ) ; <nl> } <nl> @ @ - 1047 , 7 + 1047 , 7 @ @ public class TestHelper { <nl> try { <nl> final Process process = new ProcessBuilder ( " / system / bin / getenforce " ) . start ( ) ; <nl> try { <nl> - final BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) ) ) ; <nl> + final BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) , UTF _ 8 ) ) ; <nl> / / noinspection TryFinallyCanBeTryWithResources <nl> try { <nl> return reader . readLine ( ) . toLowerCase ( Locale . ENGLISH ) . equals ( " enforcing " ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java <nl> index 3a422ea . . 427b30a 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java <nl> @ @ - 45 , 6 + 45 , 7 @ @ public class ExtraTests { <nl> } <nl> <nl> private static class ExactComparisonCriteria extends ComparisonCriteria { <nl> + @ Override <nl> protected void assertElementsEqual ( Object expected , Object actual ) <nl> { <nl> assertEquals ( expected , actual ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCollection . java b / realm / realm - library / src / main / java / io / realm / RealmCollection . java <nl> index 722d125 . . 120103c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmCollection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmCollection . java <nl> @ @ - 172 , 5 + 172 , 6 @ @ public interface RealmCollection < E extends RealmModel > extends Collection < E > { <nl> * @ throws NullPointerException if the object to look for is { @ code null } and this { @ code Collection } doesn ' t <nl> * support { @ code null } elements . <nl> * / <nl> + @ Override <nl> boolean contains ( Object object ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> index d3ede7d . . 04b06fb 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java <nl> @ @ - 119 , 6 + 119 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public boolean isValid ( ) { <nl> if ( realm = = null ) { <nl> return true ; <nl> @ @ - 133 , 6 + 134 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public boolean isManaged ( ) { <nl> return realm ! = null ; <nl> } <nl> @ @ - 459 , 6 + 461 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public E first ( ) { <nl> return firstImpl ( true , null ) ; <nl> } <nl> @ @ - 466 , 6 + 469 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public E first ( E defaultValue ) { <nl> return firstImpl ( false , defaultValue ) ; <nl> } <nl> @ @ - 490 , 6 + 494 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public E last ( ) { <nl> return lastImpl ( true , null ) ; <nl> } <nl> @ @ - 497 , 6 + 502 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public E last ( E defaultValue ) { <nl> return lastImpl ( false , defaultValue ) ; <nl> } <nl> @ @ - 596 , 6 + 602 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> * @ throws IllegalStateException if Realm instance has been closed or parent object has been removed . <nl> * @ see io . realm . RealmQuery <nl> * / <nl> + @ Override <nl> public RealmQuery < E > where ( ) { <nl> if ( isManaged ( ) ) { <nl> checkValidView ( ) ; <nl> @ @ - 977 , 6 + 984 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public boolean hasNext ( ) { <nl> realm . checkIfValid ( ) ; <nl> checkConcurrentModification ( ) ; <nl> @ @ - 986 , 6 + 994 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public E next ( ) { <nl> realm . checkIfValid ( ) ; <nl> checkConcurrentModification ( ) ; <nl> @ @ - 1004 , 6 + 1013 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public void remove ( ) { <nl> realm . checkIfValid ( ) ; <nl> if ( lastRet < 0 ) { <nl> @ @ - 1049 , 6 + 1059 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public boolean hasPrevious ( ) { <nl> return cursor ! = 0 ; <nl> } <nl> @ @ - 1056 , 6 + 1067 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public E previous ( ) { <nl> checkConcurrentModification ( ) ; <nl> int i = cursor - 1 ; <nl> @ @ - 1072 , 6 + 1084 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public int nextIndex ( ) { <nl> return cursor ; <nl> } <nl> @ @ - 1079 , 6 + 1092 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public int previousIndex ( ) { <nl> return cursor - 1 ; <nl> } <nl> @ @ - 1086 , 6 + 1100 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public void set ( E e ) { <nl> realm . checkIfValid ( ) ; <nl> if ( lastRet < 0 ) { <nl> @ @ - 1107 , 6 + 1122 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> * <nl> * @ see # add ( RealmModel ) <nl> * / <nl> + @ Override <nl> public void add ( E e ) { <nl> realm . checkIfValid ( ) ; <nl> checkConcurrentModification ( ) ; <nl> @ @ - 1121 , 5 + 1137 , 4 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements <nl> } <nl> } <nl> } <nl> - <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index e6a55ab . . 4697178 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 84 , 6 + 84 , 7 @ @ public class RealmResults < E extends RealmModel > extends OrderedRealmCollectionIm <nl> * @ return { @ code true } if the query has completed and the data is available , { @ code false } if the query is still <nl> * running in the background . <nl> * / <nl> + @ Override <nl> public boolean isLoaded ( ) { <nl> realm . checkIfValid ( ) ; <nl> return collection . isLoaded ( ) ; <nl> @ @ - 95 , 6 + 96 , 7 @ @ public class RealmResults < E extends RealmModel > extends OrderedRealmCollectionIm <nl> * <nl> * @ return { @ code true } if it successfully completed the query , { @ code false } otherwise . <nl> * / <nl> + @ Override <nl> public boolean load ( ) { <nl> / / The Collection doesn ' t have to be loaded before accessing it if the query has not returned . <nl> / / Instead , accessing the Collection will just trigger the execution of query if needed . We add this flag is <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> index 9e0e762 . . ca458a4 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> @ @ - 107 , 27 + 107 , 50 @ @ public class CheckedRow extends UncheckedRow { <nl> } <nl> } <nl> <nl> + @ Override <nl> protected native long nativeGetColumnCount ( long nativeTablePtr ) ; <nl> + @ Override <nl> protected native String nativeGetColumnName ( long nativeTablePtr , long columnIndex ) ; <nl> + @ Override <nl> protected native long nativeGetColumnIndex ( long nativeTablePtr , String columnName ) ; <nl> + @ Override <nl> protected native int nativeGetColumnType ( long nativeTablePtr , long columnIndex ) ; <nl> + @ Override <nl> protected native long nativeGetLong ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native boolean nativeGetBoolean ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native float nativeGetFloat ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native double nativeGetDouble ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native long nativeGetTimestamp ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native String nativeGetString ( long nativePtr , long columnIndex ) ; <nl> + @ Override <nl> protected native boolean nativeIsNullLink ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native byte [ ] nativeGetByteArray ( long nativePtr , long columnIndex ) ; <nl> + @ Override <nl> protected native long nativeGetLinkView ( long nativePtr , long columnIndex ) ; <nl> + @ Override <nl> protected native void nativeSetLong ( long nativeRowPtr , long columnIndex , long value ) ; <nl> + @ Override <nl> protected native void nativeSetBoolean ( long nativeRowPtr , long columnIndex , boolean value ) ; <nl> + @ Override <nl> protected native void nativeSetFloat ( long nativeRowPtr , long columnIndex , float value ) ; <nl> + @ Override <nl> protected native long nativeGetLink ( long nativeRowPtr , long columnIndex ) ; <nl> + @ Override <nl> protected native void nativeSetDouble ( long nativeRowPtr , long columnIndex , double value ) ; <nl> + @ Override <nl> protected native void nativeSetTimestamp ( long nativeRowPtr , long columnIndex , long dateTimeValue ) ; <nl> + @ Override <nl> protected native void nativeSetString ( long nativeRowPtr , long columnIndex , String value ) ; <nl> + @ Override <nl> protected native void nativeSetByteArray ( long nativePtr , long columnIndex , byte [ ] data ) ; <nl> + @ Override <nl> protected native void nativeSetLink ( long nativeRowPtr , long columnIndex , long value ) ; <nl> + @ Override <nl> protected native void nativeNullifyLink ( long nativeRowPtr , long columnIndex ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index 704e8cb . . 21282b7 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ import io . realm . RealmChangeListener ; <nl> @ Keep <nl> public class Collection implements NativeObject { <nl> <nl> - private class CollectionObserverPair < T > extends ObserverPairList . ObserverPair < T , Object > { <nl> + private static class CollectionObserverPair < T > extends ObserverPairList . ObserverPair < T , Object > { <nl> public CollectionObserverPair ( T observer , Object listener ) { <nl> super ( observer , listener ) ; <nl> } <nl> @ @ - 135 , 6 + 135 , 7 @ @ public class Collection implements NativeObject { <nl> * <nl> * @ throws UnsupportedOperationException <nl> * / <nl> + @ Override <nl> @ Deprecated <nl> public void remove ( ) { <nl> throw new UnsupportedOperationException ( " remove ( ) is not supported by RealmResults iterators . " ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java <nl> index 651562b . . cdf5b9b 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ package io . realm . internal ; <nl> <nl> import android . content . Context ; <nl> <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + <nl> import io . realm . RealmConfiguration ; <nl> import io . realm . exceptions . RealmException ; <nl> <nl> @ @ - 34 , 12 + 36 , 17 @ @ public class ObjectServerFacade { <nl> / / noinspection TryWithIdenticalCatches <nl> try { <nl> Class syncFacadeClass = Class . forName ( " io . realm . internal . objectserver . SyncObjectServerFacade " ) ; <nl> - syncFacade = ( ObjectServerFacade ) syncFacadeClass . newInstance ( ) ; <nl> + / / noinspection unchecked <nl> + syncFacade = ( ObjectServerFacade ) syncFacadeClass . getDeclaredConstructor ( ) . newInstance ( ) ; <nl> } catch ( ClassNotFoundException ignored ) { <nl> } catch ( InstantiationException e ) { <nl> throw new RealmException ( " Failed to init SyncObjectServerFacade " , e ) ; <nl> } catch ( IllegalAccessException e ) { <nl> throw new RealmException ( " Failed to init SyncObjectServerFacade " , e ) ; <nl> + } catch ( NoSuchMethodException e ) { <nl> + throw new RealmException ( " Failed to init SyncObjectServerFacade " , e ) ; <nl> + } catch ( InvocationTargetException e ) { <nl> + throw new RealmException ( " Failed to init SyncObjectServerFacade " , e . getTargetException ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index a5b0b5c . . 15c0610 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 1101 , 6 + 1101 , 7 @ @ public class Table implements TableSchema , NativeObject { <nl> return nativeToJson ( nativePtr ) ; <nl> } <nl> <nl> + @ Override <nl> public String toString ( ) { <nl> long columnCount = getColumnCount ( ) ; <nl> String name = getName ( ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java b / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java <nl> index d523c9a . . 4427f98 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ public final class RealmAsyncTaskImpl implements RealmAsyncTask { <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public void cancel ( ) { <nl> pendingTask . cancel ( true ) ; <nl> isCancelled = true ; <nl> @ @ - 53 , 6 + 54 , 7 @ @ public final class RealmAsyncTaskImpl implements RealmAsyncTask { <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> + @ Override <nl> public boolean isCancelled ( ) { <nl> return isCancelled ; <nl> }
NEAREST DIFF (one line): diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md <nl> index 3f33bfa . . ea203c2 100644 <nl> - - - a / examples / rxJavaExample / README . md <nl> + + + b / examples / rxJavaExample / README . md <nl> @ @ - 5 , 13 + 5 , 17 @ @ <nl> - Observables might have a default Scheduler they operate on that is <nl> different than the one the RealmObject was created on . <nl> <nl> - - RealmObjects auto - update . Observables that operate on multiple " versions " <nl> + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " <nl> will most likely not work as expected . <nl> <nl> - Retrofit automatically offload to a worker thread . <nl> <nl> - Use Realm async API instead of subscribeOn to offload Realm work . <nl> <nl> + - You can use Realm . copyFromRealm to make a copy of Realm data <nl> + <nl> + <nl> + <nl> <nl> # # Resources ( TODO ) <nl> - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> index 12a0c4a . . ff099ad 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> realm . commitTransaction ( ) ; <nl> <nl> final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> assertTrue ( rxObject = = obj ) ; <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> final AllTypes obj = realm . createObject ( AllTypes . class ) ; <nl> realm . commitTransaction ( ) ; <nl> <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> subscriberCalled . addAndGet ( 1 ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index a3e5103 . . 4e420ec 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; <nl> import java . lang . ref . WeakReference ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> - import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> - import java . util . Set ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> - import java . util . concurrent . CopyOnWriteArraySet ; <nl> <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> import io . realm . internal . SharedGroupManager ; <nl> @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; <nl> import io . realm . internal . android . ReleaseAndroidLogger ; <nl> import io . realm . internal . async . RealmThreadPoolExecutor ; <nl> import io . realm . internal . log . RealmLog ; <nl> - import io . realm . rx . RxObservableFactory ; <nl> import rx . Observable ; <nl> <nl> / * * <nl> @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; <nl> * @ see io . realm . Realm <nl> * @ see io . realm . DynamicRealm <nl> * / <nl> - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { <nl> protected static final long UNVERSIONED = - 1 ; <nl> private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; <nl> private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; <nl> @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> + public Observable < T > observable ( ) { <nl> + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index f979667 . . 627ac4a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; <nl> * @ see Realm <nl> * @ see RealmSchema <nl> * / <nl> - public final class DynamicRealm extends BaseRealm { <nl> + public final class DynamicRealm extends BaseRealm < DynamicRealm > { <nl> <nl> private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { <nl> super ( configuration , autoRefresh ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 40ad05a . . 318e9e9 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; <nl> * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . <nl> * Using a DynamicRealmObject is slower than using the regular RealmObject class . <nl> * / <nl> - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { <nl> + public final class DynamicRealmObject extends RealmObject { <nl> <nl> / * * <nl> * Creates a dynamic Realm object based on an existing object . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> index 5283cb5 . . 24824b6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { <nl> * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . <nl> * @ return the { @ link Realm } or { @ link DynamicRealm } instance . <nl> * / <nl> - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> Class < E > realmClass ) { <nl> boolean isCacheInMap = true ; <nl> RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index 3978bfc . . 34960d0 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; <nl> * / <nl> <nl> @ RealmClass <nl> - public abstract class RealmObject < E extends RealmObject > { <nl> + public abstract class RealmObject { <nl> <nl> protected Row row ; <nl> protected BaseRealm realm ; <nl> @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { <nl> + if ( ! this . getClass ( ) . isInstance ( type ) ) { <nl> + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; <nl> + } <nl> return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index 89274ba . . fde3390 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { <nl> * @ return the object found or { @ code null } if no object matches the query conditions . <nl> * @ see io . realm . RealmObject <nl> * / <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E findFirst ( ) { <nl> checkQueryIsNotReused ( ) ; <nl> long rowIndex = this . query . find ( ) ; <nl> if ( rowIndex > = 0 ) { <nl> - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> } else { <nl> return null ; <nl> } <nl> } <nl> <nl> - / / FIXME Replace with Schema when it is available <nl> - private static class DynamicColumnMap implements Map < String , Long > { <nl> - private final Table table ; <nl> - <nl> - public DynamicColumnMap ( Table table ) { <nl> - this . table = table ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long get ( Object key ) { <nl> - return table . getColumnIndex ( ( String ) key ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void clear ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsKey ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsValue ( Object value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < Entry < String , Long > > entrySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean isEmpty ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < String > keySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long put ( String key , Long value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void putAll ( Map < ? extends String , ? extends Long > map ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long remove ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int size ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Collection < Long > values ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - } <nl> - <nl> / * * <nl> * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread <nl> * This method is only available from a Looper thread . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index db09759 . . 3629486 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . <nl> * / <nl> @ Override <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E get ( int location ) { <nl> E obj ; <nl> realm . checkIfValid ( ) ; <nl> TableOrView table = getTable ( ) ; <nl> if ( table instanceof TableView ) { <nl> - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> } else { <nl> - obj = ( E ) realm . get ( classSpec , className , location ) ; <nl> + obj = realm . get ( classSpec , className , location ) ; <nl> } <nl> <nl> return obj ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> index 718e705 . . 940f217 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { <nl> @ Override <nl> @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> checkRxJavaAvailable ( ) ; <nl> throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { <nl> + public < E extends RealmObject > Observable < E > from ( final E object ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < E > ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> index 0984f85 . . 14fd548 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { <nl> * @ param results RealmResults to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> <nl> / * * <nl> * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each <nl> @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { <nl> * @ param list RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> <nl> <nl> / * * <nl> @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { <nl> * @ param object RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < E > from ( E object ) ; <nl> + < E extends RealmObject > Observable < E > from ( E object ) ; <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 index 44ee9dd . . e0208b4 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 @ @ - 1241 , 7 + 1241 , 7 @ @ public class DynamicRealmObjectTests { 
 assertTrue ( str . contains ( NullTypes . FIELD _ LIST _ NULL + " : RealmList < NullTypes > [ 0 ] " ) ) ; 
 } 
 
 - 
 + @ Test 
 public void testExceptionMessage ( ) { 
 / / Tests for https : / / github . com / realm / realm - java / issues / 2141 
 realm . beginTransaction ( ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 index 92059c9 . . 5485151 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 68 , 6 + 68 , 8 @ @ import static junit . framework . Assert . fail ; 
 
 public class TestHelper { 
 
 + private static final Charset UTF _ 8 = Charset . forName ( " UTF - 8 " ) ; 
 + 
 public static class ExpectedCountCallback implements RealmCache . Callback { 
 
 private int expectedCount ; 
 @ @ - 124 , 7 + 126 , 7 @ @ public class TestHelper { 
 StringBuilder sb = new StringBuilder ( ) ; 
 String line ; 
 try { 
 - br = new BufferedReader ( new InputStreamReader ( in ) ) ; 
 + br = new BufferedReader ( new InputStreamReader ( in , UTF _ 8 ) ) ; 
 while ( ( line = br . readLine ( ) ) ! = null ) { 
 sb . append ( line ) ; 
 } 
 @ @ - 138 , 7 + 140 , 7 @ @ public class TestHelper { 
 } 
 
 public static InputStream stringToStream ( String str ) { 
 - return new ByteArrayInputStream ( str . getBytes ( Charset . forName ( " UTF - 8 " ) ) ) ; 
 + return new ByteArrayInputStream ( str . getBytes ( UTF _ 8 ) ) ; 
 } 
 
 / / Creates a simple migration step in order to support null . 
 @ @ - 256 , 12 + 258 , 10 @ @ public class TestHelper { 
 public static byte [ ] SHA512 ( String str ) { 
 try { 
 MessageDigest md = MessageDigest . getInstance ( " SHA - 512 " ) ; 
 - md . update ( str . getBytes ( " UTF - 8 " ) , 0 , str . length ( ) ) ; 
 + md . update ( str . getBytes ( UTF _ 8 ) , 0 , str . length ( ) ) ; 
 return md . digest ( ) ; 
 } catch ( NoSuchAlgorithmException e ) { 
 throw new RuntimeException ( e ) ; 
 - } catch ( UnsupportedEncodingException e ) { 
 - throw new RuntimeException ( e ) ; 
 } 
 } 
 
 @ @ - 368 , 10 + 368 , 10 @ @ public class TestHelper { 
 userObj . setId ( primaryFieldValue ) ; 
 userObj . setName ( secondaryFieldValue ) ; 
 testRealm . copyToRealm ( userObj ) ; 
 - byte idValue = ( byte ) iteratorBeginValue ; 
 + byte idValue = ( byte ) iteratorBeginValue ; 
 for ( int i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { 
 PrimaryKeyAsBoxedByte obj = new PrimaryKeyAsBoxedByte ( ) ; 
 - obj . setId ( new Byte ( idValue ) ) ; 
 + obj . setId ( idValue ) ; 
 obj . setName ( String . valueOf ( idValue ) ) ; 
 testRealm . copyToRealm ( obj ) ; 
 } 
 @ @ - 404 , 7 + 404 , 7 @ @ public class TestHelper { 
 short idValue = ( short ) iteratorBeginValue ; 
 for ( int i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { 
 PrimaryKeyAsBoxedShort obj = new PrimaryKeyAsBoxedShort ( ) ; 
 - obj . setId ( new Short ( idValue ) ) ; 
 + obj . setId ( idValue ) ; 
 obj . setName ( String . valueOf ( idValue ) ) ; 
 testRealm . copyToRealm ( obj ) ; 
 } 
 @ @ - 437 , 7 + 437 , 7 @ @ public class TestHelper { 
 int idValue = iteratorBeginValue ; 
 for ( int i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { 
 PrimaryKeyAsBoxedInteger obj = new PrimaryKeyAsBoxedInteger ( ) ; 
 - obj . setId ( new Integer ( idValue ) ) ; 
 + obj . setId ( idValue ) ; 
 obj . setName ( String . valueOf ( idValue ) ) ; 
 testRealm . copyToRealm ( obj ) ; 
 } 
 @ @ - 470 , 7 + 470 , 7 @ @ public class TestHelper { 
 long idValue = iteratorBeginValue ; 
 for ( long i = 0 ; i < numberOfPopulation - 1 ; + + i , + + idValue ) { 
 PrimaryKeyAsBoxedLong obj = new PrimaryKeyAsBoxedLong ( ) ; 
 - obj . setId ( new Long ( idValue ) ) ; 
 + obj . setId ( idValue ) ; 
 obj . setName ( String . valueOf ( idValue ) ) ; 
 testRealm . copyToRealm ( obj ) ; 
 } 
 @ @ - 1047 , 7 + 1047 , 7 @ @ public class TestHelper { 
 try { 
 final Process process = new ProcessBuilder ( " / system / bin / getenforce " ) . start ( ) ; 
 try { 
 - final BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) ) ) ; 
 + final BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) , UTF _ 8 ) ) ; 
 / / noinspection TryFinallyCanBeTryWithResources 
 try { 
 return reader . readLine ( ) . toLowerCase ( Locale . ENGLISH ) . equals ( " enforcing " ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java 
 index 3a422ea . . 427b30a 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / test / ExtraTests . java 
 @ @ - 45 , 6 + 45 , 7 @ @ public class ExtraTests { 
 } 
 
 private static class ExactComparisonCriteria extends ComparisonCriteria { 
 + @ Override 
 protected void assertElementsEqual ( Object expected , Object actual ) 
 { 
 assertEquals ( expected , actual ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCollection . java b / realm / realm - library / src / main / java / io / realm / RealmCollection . java 
 index 722d125 . . 120103c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmCollection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmCollection . java 
 @ @ - 172 , 5 + 172 , 6 @ @ public interface RealmCollection < E extends RealmModel > extends Collection < E > { 
 * @ throws NullPointerException if the object to look for is { @ code null } and this { @ code Collection } doesn ' t 
 * support { @ code null } elements . 
 * / 
 + @ Override 
 boolean contains ( Object object ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmList . java b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 index d3ede7d . . 04b06fb 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmList . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmList . java 
 @ @ - 119 , 6 + 119 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public boolean isValid ( ) { 
 if ( realm = = null ) { 
 return true ; 
 @ @ - 133 , 6 + 134 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public boolean isManaged ( ) { 
 return realm ! = null ; 
 } 
 @ @ - 459 , 6 + 461 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public E first ( ) { 
 return firstImpl ( true , null ) ; 
 } 
 @ @ - 466 , 6 + 469 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public E first ( E defaultValue ) { 
 return firstImpl ( false , defaultValue ) ; 
 } 
 @ @ - 490 , 6 + 494 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public E last ( ) { 
 return lastImpl ( true , null ) ; 
 } 
 @ @ - 497 , 6 + 502 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public E last ( E defaultValue ) { 
 return lastImpl ( false , defaultValue ) ; 
 } 
 @ @ - 596 , 6 + 602 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 * @ throws IllegalStateException if Realm instance has been closed or parent object has been removed . 
 * @ see io . realm . RealmQuery 
 * / 
 + @ Override 
 public RealmQuery < E > where ( ) { 
 if ( isManaged ( ) ) { 
 checkValidView ( ) ; 
 @ @ - 977 , 6 + 984 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public boolean hasNext ( ) { 
 realm . checkIfValid ( ) ; 
 checkConcurrentModification ( ) ; 
 @ @ - 986 , 6 + 994 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public E next ( ) { 
 realm . checkIfValid ( ) ; 
 checkConcurrentModification ( ) ; 
 @ @ - 1004 , 6 + 1013 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public void remove ( ) { 
 realm . checkIfValid ( ) ; 
 if ( lastRet < 0 ) { 
 @ @ - 1049 , 6 + 1059 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public boolean hasPrevious ( ) { 
 return cursor ! = 0 ; 
 } 
 @ @ - 1056 , 6 + 1067 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public E previous ( ) { 
 checkConcurrentModification ( ) ; 
 int i = cursor - 1 ; 
 @ @ - 1072 , 6 + 1084 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public int nextIndex ( ) { 
 return cursor ; 
 } 
 @ @ - 1079 , 6 + 1092 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public int previousIndex ( ) { 
 return cursor - 1 ; 
 } 
 @ @ - 1086 , 6 + 1100 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public void set ( E e ) { 
 realm . checkIfValid ( ) ; 
 if ( lastRet < 0 ) { 
 @ @ - 1107 , 6 + 1122 , 7 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 * 
 * @ see # add ( RealmModel ) 
 * / 
 + @ Override 
 public void add ( E e ) { 
 realm . checkIfValid ( ) ; 
 checkConcurrentModification ( ) ; 
 @ @ - 1121 , 5 + 1137 , 4 @ @ public class RealmList < E extends RealmModel > extends AbstractList < E > implements 
 } 
 } 
 } 
 - 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index e6a55ab . . 4697178 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 84 , 6 + 84 , 7 @ @ public class RealmResults < E extends RealmModel > extends OrderedRealmCollectionIm 
 * @ return { @ code true } if the query has completed and the data is available , { @ code false } if the query is still 
 * running in the background . 
 * / 
 + @ Override 
 public boolean isLoaded ( ) { 
 realm . checkIfValid ( ) ; 
 return collection . isLoaded ( ) ; 
 @ @ - 95 , 6 + 96 , 7 @ @ public class RealmResults < E extends RealmModel > extends OrderedRealmCollectionIm 
 * 
 * @ return { @ code true } if it successfully completed the query , { @ code false } otherwise . 
 * / 
 + @ Override 
 public boolean load ( ) { 
 / / The Collection doesn ' t have to be loaded before accessing it if the query has not returned . 
 / / Instead , accessing the Collection will just trigger the execution of query if needed . We add this flag is 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 index 9e0e762 . . ca458a4 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 @ @ - 107 , 27 + 107 , 50 @ @ public class CheckedRow extends UncheckedRow { 
 } 
 } 
 
 + @ Override 
 protected native long nativeGetColumnCount ( long nativeTablePtr ) ; 
 + @ Override 
 protected native String nativeGetColumnName ( long nativeTablePtr , long columnIndex ) ; 
 + @ Override 
 protected native long nativeGetColumnIndex ( long nativeTablePtr , String columnName ) ; 
 + @ Override 
 protected native int nativeGetColumnType ( long nativeTablePtr , long columnIndex ) ; 
 + @ Override 
 protected native long nativeGetLong ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native boolean nativeGetBoolean ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native float nativeGetFloat ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native double nativeGetDouble ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native long nativeGetTimestamp ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native String nativeGetString ( long nativePtr , long columnIndex ) ; 
 + @ Override 
 protected native boolean nativeIsNullLink ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native byte [ ] nativeGetByteArray ( long nativePtr , long columnIndex ) ; 
 + @ Override 
 protected native long nativeGetLinkView ( long nativePtr , long columnIndex ) ; 
 + @ Override 
 protected native void nativeSetLong ( long nativeRowPtr , long columnIndex , long value ) ; 
 + @ Override 
 protected native void nativeSetBoolean ( long nativeRowPtr , long columnIndex , boolean value ) ; 
 + @ Override 
 protected native void nativeSetFloat ( long nativeRowPtr , long columnIndex , float value ) ; 
 + @ Override 
 protected native long nativeGetLink ( long nativeRowPtr , long columnIndex ) ; 
 + @ Override 
 protected native void nativeSetDouble ( long nativeRowPtr , long columnIndex , double value ) ; 
 + @ Override 
 protected native void nativeSetTimestamp ( long nativeRowPtr , long columnIndex , long dateTimeValue ) ; 
 + @ Override 
 protected native void nativeSetString ( long nativeRowPtr , long columnIndex , String value ) ; 
 + @ Override 
 protected native void nativeSetByteArray ( long nativePtr , long columnIndex , byte [ ] data ) ; 
 + @ Override 
 protected native void nativeSetLink ( long nativeRowPtr , long columnIndex , long value ) ; 
 + @ Override 
 protected native void nativeNullifyLink ( long nativeRowPtr , long columnIndex ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index 704e8cb . . 21282b7 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 31 , 7 + 31 , 7 @ @ import io . realm . RealmChangeListener ; 
 @ Keep 
 public class Collection implements NativeObject { 
 
 - private class CollectionObserverPair < T > extends ObserverPairList . ObserverPair < T , Object > { 
 + private static class CollectionObserverPair < T > extends ObserverPairList . ObserverPair < T , Object > { 
 public CollectionObserverPair ( T observer , Object listener ) { 
 super ( observer , listener ) ; 
 } 
 @ @ - 135 , 6 + 135 , 7 @ @ public class Collection implements NativeObject { 
 * 
 * @ throws UnsupportedOperationException 
 * / 
 + @ Override 
 @ Deprecated 
 public void remove ( ) { 
 throw new UnsupportedOperationException ( " remove ( ) is not supported by RealmResults iterators . " ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java 
 index 651562b . . cdf5b9b 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java 
 @ @ - 18 , 6 + 18 , 8 @ @ package io . realm . internal ; 
 
 import android . content . Context ; 
 
 + import java . lang . reflect . InvocationTargetException ; 
 + 
 import io . realm . RealmConfiguration ; 
 import io . realm . exceptions . RealmException ; 
 
 @ @ - 34 , 12 + 36 , 17 @ @ public class ObjectServerFacade { 
 / / noinspection TryWithIdenticalCatches 
 try { 
 Class syncFacadeClass = Class . forName ( " io . realm . internal . objectserver . SyncObjectServerFacade " ) ; 
 - syncFacade = ( ObjectServerFacade ) syncFacadeClass . newInstance ( ) ; 
 + / / noinspection unchecked 
 + syncFacade = ( ObjectServerFacade ) syncFacadeClass . getDeclaredConstructor ( ) . newInstance ( ) ; 
 } catch ( ClassNotFoundException ignored ) { 
 } catch ( InstantiationException e ) { 
 throw new RealmException ( " Failed to init SyncObjectServerFacade " , e ) ; 
 } catch ( IllegalAccessException e ) { 
 throw new RealmException ( " Failed to init SyncObjectServerFacade " , e ) ; 
 + } catch ( NoSuchMethodException e ) { 
 + throw new RealmException ( " Failed to init SyncObjectServerFacade " , e ) ; 
 + } catch ( InvocationTargetException e ) { 
 + throw new RealmException ( " Failed to init SyncObjectServerFacade " , e . getTargetException ( ) ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index a5b0b5c . . 15c0610 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 1101 , 6 + 1101 , 7 @ @ public class Table implements TableSchema , NativeObject { 
 return nativeToJson ( nativePtr ) ; 
 } 
 
 + @ Override 
 public String toString ( ) { 
 long columnCount = getColumnCount ( ) ; 
 String name = getName ( ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java b / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java 
 index d523c9a . . 4427f98 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / async / RealmAsyncTaskImpl . java 
 @ @ - 34 , 6 + 34 , 7 @ @ public final class RealmAsyncTaskImpl implements RealmAsyncTask { 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public void cancel ( ) { 
 pendingTask . cancel ( true ) ; 
 isCancelled = true ; 
 @ @ - 53 , 6 + 54 , 7 @ @ public final class RealmAsyncTaskImpl implements RealmAsyncTask { 
 / * * 
 * { @ inheritDoc } 
 * / 
 + @ Override 
 public boolean isCancelled ( ) { 
 return isCancelled ; 
 }

NEAREST DIFF:
diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md 
 index 3f33bfa . . ea203c2 100644 
 - - - a / examples / rxJavaExample / README . md 
 + + + b / examples / rxJavaExample / README . md 
 @ @ - 5 , 13 + 5 , 17 @ @ 
 - Observables might have a default Scheduler they operate on that is 
 different than the one the RealmObject was created on . 
 
 - - RealmObjects auto - update . Observables that operate on multiple " versions " 
 + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " 
 will most likely not work as expected . 
 
 - Retrofit automatically offload to a worker thread . 
 
 - Use Realm async API instead of subscribeOn to offload Realm work . 
 
 + - You can use Realm . copyFromRealm to make a copy of Realm data 
 + 
 + 
 + 
 
 # # Resources ( TODO ) 
 - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 index 12a0c4a . . ff099ad 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 realm . commitTransaction ( ) ; 
 
 final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 assertTrue ( rxObject = = obj ) ; 
 @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 final AllTypes obj = realm . createObject ( AllTypes . class ) ; 
 realm . commitTransaction ( ) ; 
 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 subscriberCalled . addAndGet ( 1 ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index a3e5103 . . 4e420ec 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; 
 import java . lang . ref . WeakReference ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 - import java . util . HashMap ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 - import java . util . Set ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 - import java . util . concurrent . CopyOnWriteArraySet ; 
 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 import io . realm . internal . SharedGroupManager ; 
 @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; 
 import io . realm . internal . android . ReleaseAndroidLogger ; 
 import io . realm . internal . async . RealmThreadPoolExecutor ; 
 import io . realm . internal . log . RealmLog ; 
 - import io . realm . rx . RxObservableFactory ; 
 import rx . Observable ; 
 
 / * * 
 @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; 
 * @ see io . realm . Realm 
 * @ see io . realm . DynamicRealm 
 * / 
 - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { 
 protected static final long UNVERSIONED = - 1 ; 
 private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; 
 private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; 
 @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; 
 + public Observable < T > observable ( ) { 
 + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index f979667 . . 627ac4a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; 
 * @ see Realm 
 * @ see RealmSchema 
 * / 
 - public final class DynamicRealm extends BaseRealm { 
 + public final class DynamicRealm extends BaseRealm < DynamicRealm > { 
 
 private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { 
 super ( configuration , autoRefresh ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 40ad05a . . 318e9e9 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; 
 * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . 
 * Using a DynamicRealmObject is slower than using the regular RealmObject class . 
 * / 
 - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { 
 + public final class DynamicRealmObject extends RealmObject { 
 
 / * * 
 * Creates a dynamic Realm object based on an existing object . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 index 5283cb5 . . 24824b6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { 
 * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . 
 * @ return the { @ link Realm } or { @ link DynamicRealm } instance . 
 * / 
 - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 Class < E > realmClass ) { 
 boolean isCacheInMap = true ; 
 RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index 3978bfc . . 34960d0 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; 
 * / 
 
 @ RealmClass 
 - public abstract class RealmObject < E extends RealmObject > { 
 + public abstract class RealmObject { 
 
 protected Row row ; 
 protected BaseRealm realm ; 
 @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { 
 + if ( ! this . getClass ( ) . isInstance ( type ) ) { 
 + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; 
 + } 
 return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index 89274ba . . fde3390 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { 
 * @ return the object found or { @ code null } if no object matches the query conditions . 
 * @ see io . realm . RealmObject 
 * / 
 - @ SuppressWarnings ( " unchecked " ) 
 public E findFirst ( ) { 
 checkQueryIsNotReused ( ) ; 
 long rowIndex = this . query . find ( ) ; 
 if ( rowIndex > = 0 ) { 
 - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 } else { 
 return null ; 
 } 
 } 
 
 - / / FIXME Replace with Schema when it is available 
 - private static class DynamicColumnMap implements Map < String , Long > { 
 - private final Table table ; 
 - 
 - public DynamicColumnMap ( Table table ) { 
 - this . table = table ; 
 - } 
 - 
 - @ Override 
 - public Long get ( Object key ) { 
 - return table . getColumnIndex ( ( String ) key ) ; 
 - } 
 - 
 - @ Override 
 - public void clear ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsKey ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsValue ( Object value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < Entry < String , Long > > entrySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean isEmpty ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < String > keySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long put ( String key , Long value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public void putAll ( Map < ? extends String , ? extends Long > map ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long remove ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public int size ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Collection < Long > values ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - } 
 - 
 / * * 
 * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread 
 * This method is only available from a Looper thread . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index db09759 . . 3629486 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . 
 * / 
 @ Override 
 - @ SuppressWarnings ( " unchecked " ) 
 public E get ( int location ) { 
 E obj ; 
 realm . checkIfValid ( ) ; 
 TableOrView table = getTable ( ) ; 
 if ( table instanceof TableView ) { 
 - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 } else { 
 - obj = ( E ) realm . get ( classSpec , className , location ) ; 
 + obj = realm . get ( classSpec , className , location ) ; 
 } 
 
 return obj ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 index 718e705 . . 940f217 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { 
 @ Override 
 @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 checkRxJavaAvailable ( ) ; 
 throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { 
 + public < E extends RealmObject > Observable < E > from ( final E object ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < E > ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 index 0984f85 . . 14fd548 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { 
 * @ param results RealmResults to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 
 / * * 
 * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each 
 @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { 
 * @ param list RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 
 
 / * * 
 @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { 
 * @ param object RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < E > from ( E object ) ; 
 + < E extends RealmObject > Observable < E > from ( E object ) ; 
 }
