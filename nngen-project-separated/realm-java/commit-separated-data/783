BLEU SCORE: 0.05954672553679791

TEST MSG: follow lint warnings
GENERATED MSG: Comply with the most basic PMD ruleset

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index 07fd305 . . 16a567f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 500 , 12 + 500 , 6 @ @ abstract class BaseRealm implements Closeable { <nl> } <nl> } <nl> <nl> - protected void checkNotNullFieldName ( String fieldName ) { <nl> - if ( fieldName = = null ) { <nl> - throw new IllegalArgumentException ( " fieldName must be provided . " ) ; <nl> - } <nl> - } <nl> - <nl> / / Return all handlers registered for this Realm <nl> static Map < Handler , String > getHandlers ( ) { <nl> return handlers ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index d95f33f . . 3b2acde 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 79 , 8 + 79 , 7 @ @ public final class DynamicRealm extends BaseRealm { <nl> checkIfValid ( ) ; <nl> Table table = schema . getTable ( className ) ; <nl> long rowIndex = table . addEmptyRow ( ) ; <nl> - DynamicRealmObject dynamicRealmObject = get ( DynamicRealmObject . class , className , rowIndex ) ; <nl> - return dynamicRealmObject ; <nl> + return get ( DynamicRealmObject . class , className , rowIndex ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 0f4c8f0 . . 635e5c9 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ package io . realm ; <nl> <nl> import java . util . Arrays ; <nl> import java . util . Date ; <nl> + import java . util . Locale ; <nl> <nl> import io . realm . internal . CheckedRow ; <nl> import io . realm . internal . LinkView ; <nl> @ @ - 275 , 7 + 276 , 6 @ @ public final class DynamicRealmObject extends RealmObject { <nl> / * * <nl> * Checks if the value of a given field is { @ code null } . <nl> * <nl> - * @ param fieldName name of field . <nl> * @ param fieldName the name of the field . <nl> * @ return { @ code true } if field value is null , { @ code false } otherwise . <nl> * @ throws IllegalArgumentException if field name doesn ' t exists . <nl> @ @ - 592 , 7 + 592 , 8 @ @ public final class DynamicRealmObject extends RealmObject { <nl> if ( ! typeValidated ) { <nl> String elementType = obj . row . getTable ( ) . getName ( ) ; <nl> if ( ! tableName . equals ( elementType ) ) { <nl> - throw new IllegalArgumentException ( String . format ( " Element at index % d is not the proper type . " + <nl> + throw new IllegalArgumentException ( String . format ( Locale . ENGLISH , <nl> + " Element at index % d is not the proper type . " + <nl> " Was % s expected % s . " , i , elementType , tableName ) ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 0ec2ca7 . . a3ec1e8 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 510 , 8 + 510 , 7 @ @ public final class Realm extends BaseRealm { <nl> } <nl> <nl> try { <nl> - E realmObject = configuration . getSchemaMediator ( ) . createOrUpdateUsingJsonObject ( clazz , this , json , false ) ; <nl> - return realmObject ; <nl> + return configuration . getSchemaMediator ( ) . createOrUpdateUsingJsonObject ( clazz , this , json , false ) ; <nl> } catch ( Exception e ) { <nl> throw new RealmException ( " Could not map Json " , e ) ; <nl> } <nl> @ @ - 701 , 8 + 700 , 7 @ @ public final class Realm extends BaseRealm { <nl> checkIfValid ( ) ; <nl> Table table = getTable ( clazz ) ; <nl> long rowIndex = table . addEmptyRow ( ) ; <nl> - E object = get ( clazz , rowIndex ) ; <nl> - return object ; <nl> + return get ( clazz , rowIndex ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 739 , 8 + 737 , 7 @ @ public final class Realm extends BaseRealm { <nl> * / <nl> public < E extends RealmObject > E copyToRealm ( E object ) { <nl> checkNotNullObject ( object ) ; <nl> - E realmObject = copyOrUpdate ( object , false ) ; <nl> - return realmObject ; <nl> + return copyOrUpdate ( object , false ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 759 , 8 + 756 , 7 @ @ public final class Realm extends BaseRealm { <nl> public < E extends RealmObject > E copyToRealmOrUpdate ( E object ) { <nl> checkNotNullObject ( object ) ; <nl> checkHasPrimaryKey ( object . getClass ( ) ) ; <nl> - E realmObject = copyOrUpdate ( object , true ) ; <nl> - return realmObject ; <nl> + return copyOrUpdate ( object , true ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 1513 , 6 + 1509 , 7 @ @ public final class Realm extends BaseRealm { <nl> public static Object getDefaultModule ( ) { <nl> String moduleName = " io . realm . DefaultRealmModule " ; <nl> Class < ? > clazz ; <nl> + / / noinspection TryWithIdenticalCatches <nl> try { <nl> clazz = Class . forName ( moduleName ) ; <nl> Constructor < ? > constructor = clazz . getDeclaredConstructors ( ) [ 0 ] ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> index c2a208e . . acc981c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 223 , 6 + 223 , 7 @ @ public class RealmConfiguration { <nl> String moduleSimpleName = moduleNameParts [ moduleNameParts . length - 1 ] ; <nl> String mediatorName = String . format ( " io . realm . % s % s " , moduleSimpleName , " Mediator " ) ; <nl> Class < ? > clazz ; <nl> + / / noinspection TryWithIdenticalCatches <nl> try { <nl> clazz = Class . forName ( mediatorName ) ; <nl> Constructor < ? > constructor = clazz . getDeclaredConstructors ( ) [ 0 ] ; <nl> @ @ - 241 , 25 + 242 , 25 @ @ public class RealmConfiguration { <nl> <nl> @ Override <nl> public String toString ( ) { <nl> - StringBuilder stringBuilder = new StringBuilder ( " " ) ; <nl> - stringBuilder . append ( " realmFolder : " ) ; stringBuilder . append ( realmFolder . toString ( ) ) ; <nl> + / / noinspection StringBufferReplaceableByString <nl> + StringBuilder stringBuilder = new StringBuilder ( ) ; <nl> + stringBuilder . append ( " realmFolder : " ) . append ( realmFolder . toString ( ) ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " realmFileName : " ) ; stringBuilder . append ( realmFileName ) ; <nl> + stringBuilder . append ( " realmFileName : " ) . append ( realmFileName ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " canonicalPath : " ) ; stringBuilder . append ( canonicalPath ) ; <nl> + stringBuilder . append ( " canonicalPath : " ) . append ( canonicalPath ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " key : " ) ; <nl> - stringBuilder . append ( " [ length : " + Integer . toString ( key = = null ? 0 : KEY _ LENGTH ) + " ] " ) ; <nl> + stringBuilder . append ( " key : " ) . append ( " [ length : " ) . append ( key = = null ? 0 : KEY _ LENGTH ) . append ( " ] " ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " schemaVersion : " ) ; stringBuilder . append ( Long . toString ( schemaVersion ) ) ; <nl> + stringBuilder . append ( " schemaVersion : " ) . append ( Long . toString ( schemaVersion ) ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " migration : " ) ; stringBuilder . append ( migration ) ; <nl> + stringBuilder . append ( " migration : " ) . append ( migration ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " deleteRealmIfMigrationNeeded : " ) ; stringBuilder . append ( deleteRealmIfMigrationNeeded ) ; <nl> + stringBuilder . append ( " deleteRealmIfMigrationNeeded : " ) . append ( deleteRealmIfMigrationNeeded ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " durability : " ) ; stringBuilder . append ( durability ) ; <nl> + stringBuilder . append ( " durability : " ) . append ( durability ) ; <nl> stringBuilder . append ( " \ n " ) ; <nl> - stringBuilder . append ( " schemaMediator : " ) ; stringBuilder . append ( schemaMediator ) ; <nl> + stringBuilder . append ( " schemaMediator : " ) . append ( schemaMediator ) ; <nl> <nl> return stringBuilder . toString ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index 1d18fb7 . . c0f567c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 164 , 6 + 164 , 7 @ @ public abstract class RealmObject { <nl> * @ return { @ code true } if it successfully completed the query , { @ code false } otherwise . <nl> * / <nl> public final boolean load ( ) { <nl> + / / noinspection SimplifiableIfStatement <nl> if ( isLoaded ( ) ) { <nl> return true ; <nl> } else { <nl> @ @ - 308 , 7 + 309 , 7 @ @ public abstract class RealmObject { <nl> * Notifies all registered listeners . <nl> * / <nl> void notifyChangeListeners ( ) { <nl> - if ( listeners ! = null & & ! listeners . isEmpty ( ) ) { <nl> + if ( ! listeners . isEmpty ( ) ) { <nl> boolean notify = false ; <nl> <nl> Table table = row . getTable ( ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index f0bfbc6 . . 11a461a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import java . lang . ref . WeakReference ; <nl> import java . util . ArrayList ; <nl> import java . util . Date ; <nl> import java . util . List ; <nl> + import java . util . Locale ; <nl> import java . util . concurrent . Callable ; <nl> import java . util . concurrent . Future ; <nl> <nl> @ @ - 1111 , 7 + 1112 , 8 @ @ public class RealmQuery < E extends RealmObject > { <nl> <nl> RealmResults < E > realmResults ; <nl> if ( isDynamicQuery ( ) ) { <nl> - realmResults = ( RealmResults < E > ) RealmResults . createFromDynamicTableOrView ( realm , tableView , className ) ; <nl> + / / noinspection unchecked <nl> + realmResults = ( RealmResults < E > ) RealmResults . createFromDynamicTableOrView ( realm , tableView , className ) ; <nl> } else { <nl> realmResults = RealmResults . createFromTableOrView ( realm , tableView , clazz ) ; <nl> } <nl> @ @ - 1247 , 6 + 1249 , 7 @ @ public class RealmQuery < E extends RealmObject > { <nl> <nl> RealmResults < E > realmResults ; <nl> if ( isDynamicQuery ( ) ) { <nl> + / / noinspection unchecked <nl> realmResults = ( RealmResults < E > ) RealmResults . createFromDynamicTableOrView ( realm , tableView , className ) ; <nl> } else { <nl> realmResults = RealmResults . createFromTableOrView ( realm , tableView , clazz ) ; <nl> @ @ - 1259 , 12 + 1262 , 12 @ @ public class RealmQuery < E extends RealmObject > { <nl> List < Long > columnIndexes = new ArrayList < Long > ( ) ; <nl> / / find the first index <nl> long firstIndex = getAndValidateDistinctColumnIndex ( firstFieldName , table ) ; <nl> - columnIndexes . add ( Long . valueOf ( firstIndex ) ) ; <nl> + columnIndexes . add ( firstIndex ) ; <nl> / / add remaining of indexes <nl> if ( remainingFieldNames ! = null & & 0 < remainingFieldNames . length ) { <nl> for ( String field : remainingFieldNames ) { <nl> long index = getAndValidateDistinctColumnIndex ( field , table ) ; <nl> - columnIndexes . add ( Long . valueOf ( index ) ) ; <nl> + columnIndexes . add ( index ) ; <nl> } <nl> } <nl> return columnIndexes ; <nl> @ @ - 1673 , 6 + 1676 , 7 @ @ public class RealmQuery < E extends RealmObject > { <nl> } else { <nl> TableView tableView = query . findAll ( ) ; <nl> List < Long > columnIndices = new ArrayList < Long > ( ) ; <nl> + / / noinspection ForLoopReplaceableByForEach <nl> for ( int i = 0 ; i < fieldNames . length ; i + + ) { <nl> String fieldName = fieldNames [ i ] ; <nl> long columnIndex = getColumnIndexForSort ( fieldName ) ; <nl> @ @ - 1979 , 7 + 1983 , 9 @ @ public class RealmQuery < E extends RealmObject > { <nl> } else if ( fieldNames . length = = 0 ) { <nl> throw new IllegalArgumentException ( " At least one field name must be specified . " ) ; <nl> } else if ( fieldNames . length ! = sortOrders . length ) { <nl> - throw new IllegalArgumentException ( String . format ( " Number of field names ( % d ) and sort orders ( % d ) does not match . " , fieldNames . length , sortOrders . length ) ) ; <nl> + throw new IllegalArgumentException ( String . format ( Locale . ENGLISH , <nl> + " Number of field names ( % d ) and sort orders ( % d ) does not match . " , <nl> + fieldNames . length , sortOrders . length ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 1b7590a . . 6741c43 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 844 , 11 + 844 , 12 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * @ return { @ code true } if it successfully completed the query , { @ code false } otherwise . <nl> * / <nl> public boolean load ( ) { <nl> + / / noinspection SimplifiableIfStatement <nl> if ( isLoaded ( ) ) { <nl> return true ; <nl> } else { <nl> - / / doesn ' t guarantee to import correctly the result ( because the user may have advanced ) <nl> - / / in this case the Realm # handler will be responsible of retrying <nl> + / / doesn ' t guarantee to import correctly the result ( because the user may have advanced ) <nl> + / / in this case the Realm # handler will be responsible of retrying <nl> return onCompleted ( ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java <nl> index c90e4ea . . af103c0 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java <nl> @ @ - 248 , 7 + 248 , 7 @ @ public class Mixed { <nl> case UNSUPPORTED _ MIXED : <nl> break ; / / error <nl> } <nl> - } catch ( Exception e ) { <nl> + } catch ( Exception ignored ) { <nl> } <nl> return " ERROR " ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> index c56228c . . 78deddf 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ <nl> package io . realm . internal ; <nl> <nl> import android . content . Context ; <nl> - import android . util . Log ; <nl> <nl> import com . getkeepsafe . relinker . ReLinker ; <nl> <nl> @ @ - 122 , 7 + 121 , 7 @ @ public class RealmCore { <nl> try { <nl> System . loadLibrary ( libraryCandidateName ) ; <nl> return libraryCandidateName ; <nl> - } catch ( Throwable e ) { <nl> + } catch ( Throwable ignored ) { <nl> } <nl> } <nl> return null ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java <nl> index 68be565 . . 1cb24fe 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java <nl> @ @ - 281 , 11 + 281 , 7 @ @ public class SharedGroup implements Closeable { <nl> if ( ! super . equals ( object ) ) return false ; <nl> <nl> VersionID versionID = ( VersionID ) object ; <nl> - <nl> - if ( version ! = versionID . version ) return false ; <nl> - if ( index ! = versionID . index ) return false ; <nl> - <nl> - return true ; <nl> + return ( version = = versionID . version & & index = = versionID . index ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java b / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java <nl> index a69fc5c . . dda38d3 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java <nl> @ @ - 16 , 7 + 16 , 6 @ @ <nl> <nl> package io . realm . internal ; <nl> <nl> - <nl> import io . realm . RealmFieldType ; <nl> <nl> public class SubtableSchema implements TableSchema { <nl> @ @ - 31 , 11 + 30 , 9 @ @ public class SubtableSchema implements TableSchema { <nl> <nl> @ Override <nl> public SubtableSchema getSubtableSchema ( long columnIndex ) { <nl> - long [ ] newPath = new long [ this . path . length + 1 ] ; <nl> - for ( int i = 0 ; i < this . path . length ; i + + ) { <nl> - newPath [ i ] = path [ i ] ; <nl> - } <nl> - newPath [ this . path . length ] = columnIndex ; <nl> + long [ ] newPath = new long [ path . length + 1 ] ; <nl> + System . arraycopy ( path , 0 , newPath , 0 , path . length ) ; <nl> + newPath [ path . length ] = columnIndex ; <nl> return new SubtableSchema ( this . parentNativePtr , newPath ) ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / TableView . java b / realm / realm - library / src / main / java / io / realm / internal / TableView . java <nl> index 8d6fe20 . . 1c0aed2 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / TableView . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / TableView . java <nl> @ @ - 818 , 7 + 818 , 7 @ @ public class TableView implements TableOrView , Closeable { <nl> this . context . executeDelayedDisposal ( ) ; <nl> long [ ] indexes = new long [ columnIndexes . size ( ) ] ; <nl> for ( int i = 0 ; i < columnIndexes . size ( ) ; i + + ) { <nl> - indexes [ i ] = columnIndexes . get ( i ) . longValue ( ) ; <nl> + indexes [ i ] = columnIndexes . get ( i ) ; <nl> } <nl> nativeDistinctMulti ( nativePtr , indexes ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Version . java b / realm / realm - library / src / main / java / io / realm / internal / Version . java <nl> index 9464a48 . . fa47bb3 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Version . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Version . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class Version { <nl> } <nl> <nl> public static boolean coreLibVersionCompatible ( boolean throwIfNot ) { <nl> - String errTxt = " " ; <nl> + String errTxt ; <nl> boolean compatible = nativeIsAtLeast ( CORE _ MIN _ MAJOR , CORE _ MIN _ MINOR , CORE _ MIN _ PATCH ) ; <nl> if ( ! compatible ) { <nl> errTxt = " Version mismatch between realm . jar ( " <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java <nl> index 348ebda . . 4509b04 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java <nl> @ @ - 62 , 7 + 62 , 8 @ @ public class ISO8601Utils { <nl> * @ throws ParseException if the date is not in the appropriate format <nl> * / <nl> public static Date parse ( String date , ParsePosition pos ) throws ParseException { <nl> - Exception fail = null ; <nl> + Exception fail ; <nl> + / / noinspection TryWithIdenticalCatches <nl> try { <nl> int offset = pos . getIndex ( ) ; <nl> <nl> @ @ - 142 , 7 + 143 , 7 @ @ public class ISO8601Utils { <nl> throw new IllegalArgumentException ( " No time zone indicator " ) ; <nl> } <nl> <nl> - TimeZone timezone = null ; <nl> + TimeZone timezone ; <nl> char timezoneIndicator = date . charAt ( offset ) ; <nl> <nl> if ( timezoneIndicator = = ' Z ' ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java <nl> index 74dd709 . . b8ee350 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java <nl> @ @ - 75 , 7 + 75 , 7 @ @ public class QueryUpdateTask implements Runnable { <nl> realmConfiguration . getEncryptionKey ( ) ) ; <nl> <nl> Result result ; <nl> - boolean updateSuccessful = false ; <nl> + boolean updateSuccessful ; <nl> if ( updateMode = = MODE _ UPDATE _ REALM _ RESULTS ) { <nl> result = Result . newRealmResultsResponse ( ) ; <nl> AlignedQueriesParameters alignedParameters = prepareQueriesParameters ( ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index a787458 . . 6532295 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 5 , 6 + 5 , 7 @ @ apply plugin : ' maven - publish ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' findbugs ' <nl> + apply plugin : ' pmd ' <nl> apply plugin : ' checkstyle ' <nl> <nl> android { <nl> @ @ - 62 , 8 + 63 , 8 @ @ task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> preBuild . dependsOn ' : realm - jni : buildAndroidJni ' <nl> <nl> task findbugs ( type : FindBugs ) { <nl> - dependsOn assemble <nl> - group = ' Test ' <nl> + dependsOn assembleDebug <nl> + group = ' Verification ' <nl> <nl> ignoreFailures = false <nl> effort = " default " <nl> @ @ - 84 , 8 + 85 , 23 @ @ task findbugs ( type : FindBugs ) { <nl> } <nl> } <nl> <nl> + task pmd ( type : Pmd ) { <nl> + description ' Run pmd ' <nl> + group ' verification ' <nl> + <nl> + dependsOn assembleDebug <nl> + <nl> + ruleSets = [ " java - basic " ] <nl> + source = fileTree ( ' src / main / java ' ) <nl> + <nl> + reports { <nl> + xml . enabled = false <nl> + html . enabled = true <nl> + } <nl> + } <nl> + <nl> task checkstyle ( type : Checkstyle ) { <nl> - group = ' Test ' <nl> + group = ' Verification ' <nl> <nl> source ' src ' <nl> include ' * * / * . java ' <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index cbc2a6d . . 9047e47 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 315 , 11 + 315 , 10 @ @ abstract class BaseRealm implements Closeable { <nl> realmPath . equals ( configuration . getPath ( ) ) / / It ' s the right realm <nl> & & ! handler . hasMessages ( HandlerController . REALM _ CHANGED ) / / The right message <nl> & & handler . getLooper ( ) . getThread ( ) . isAlive ( ) / / The receiving thread is alive <nl> - ) { <nl> - if ( ! handler . sendEmptyMessage ( HandlerController . REALM _ CHANGED ) ) { <nl> - RealmLog . w ( " Cannot update Looper threads when the Looper has quit . Use realm . setAutoRefresh ( false ) " + <nl> - " to prevent this . " ) ; <nl> - } <nl> + & & ! handler . sendEmptyMessage ( HandlerController . REALM _ CHANGED ) ) { <nl> + RealmLog . w ( " Cannot update Looper threads when the Looper has quit . Use realm . setAutoRefresh ( false ) " + <nl> + " to prevent this . " ) ; <nl> + <nl> } <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 427f479 . . c7eeaab 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ public final class DynamicRealmObject extends RealmObject { <nl> <nl> DynamicRealmObject ( BaseRealm realm , Row row ) { <nl> this . realm = realm ; <nl> - this . row = ( row instanceof CheckedRow ) ? ( CheckedRow ) row : ( ( UncheckedRow ) row ) . convertToChecked ( ) ; <nl> + this . row = row instanceof CheckedRow ? ( CheckedRow ) row : ( ( UncheckedRow ) row ) . convertToChecked ( ) ; <nl> } <nl> <nl> DynamicRealmObject ( String className ) { <nl> @ @ - 342 , 7 + 342 , 7 @ @ public final class DynamicRealmObject extends RealmObject { <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void set ( String fieldName , Object value ) { <nl> - boolean isString = ( value instanceof String ) ; <nl> + boolean isString = value instanceof String ; <nl> String strValue = isString ? ( String ) value : null ; <nl> <nl> / / Do implicit conversion if needed <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java b / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java <nl> index 0d579c8 . . d119d60 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public abstract class RealmBaseAdapter < T extends RealmObject > extends BaseAdapte <nl> this . context = context ; <nl> this . realmResults = realmResults ; <nl> this . inflater = LayoutInflater . from ( context ) ; <nl> - this . listener = ( ! automaticUpdate ) ? null : new RealmChangeListener ( ) { <nl> + this . listener = ! automaticUpdate ? null : new RealmChangeListener ( ) { <nl> @ Override <nl> public void onChange ( ) { <nl> notifyDataSetChanged ( ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java <nl> index b5b4df2 . . 008c290 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java <nl> @ @ - 76 , 22 + 76 , 22 @ @ public enum RealmFieldType { <nl> * / <nl> public boolean isValid ( Object obj ) { <nl> switch ( nativeValue ) { <nl> - case 0 : return ( obj instanceof Long | | obj instanceof Integer | | obj instanceof Short | | obj instanceof Byte ) ; <nl> - case 1 : return ( obj instanceof Boolean ) ; <nl> - case 2 : return ( obj instanceof String ) ; <nl> - case 4 : return ( obj instanceof byte [ ] | | obj instanceof ByteBuffer ) ; <nl> - case 5 : return ( obj = = null | | obj instanceof Object [ ] [ ] ) ; <nl> - case 6 : return ( obj instanceof Mixed | | <nl> + case 0 : return obj instanceof Long | | obj instanceof Integer | | obj instanceof Short | | obj instanceof Byte ; <nl> + case 1 : return obj instanceof Boolean ; <nl> + case 2 : return obj instanceof String ; <nl> + case 4 : return obj instanceof byte [ ] | | obj instanceof ByteBuffer ; <nl> + case 5 : return obj = = null | | obj instanceof Object [ ] [ ] ; <nl> + case 6 : return obj instanceof Mixed | | <nl> obj instanceof Long | | obj instanceof Integer | | <nl> obj instanceof Short | | obj instanceof Byte | | obj instanceof Boolean | | <nl> obj instanceof Float | | obj instanceof Double | | <nl> obj instanceof String | | <nl> obj instanceof byte [ ] | | obj instanceof ByteBuffer | | <nl> obj = = null | | obj instanceof Object [ ] [ ] | | <nl> - obj instanceof java . util . Date ) ; <nl> - case 7 : return ( obj instanceof java . util . Date ) ; <nl> - case 9 : return ( obj instanceof Float ) ; <nl> - case 10 : return ( obj instanceof Double ) ; <nl> + obj instanceof java . util . Date ; <nl> + case 7 : return obj instanceof java . util . Date ; <nl> + case 9 : return obj instanceof Float ; <nl> + case 10 : return obj instanceof Double ; <nl> case 12 : return false ; <nl> case 13 : return false ; <nl> case 14 : return false ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> index e01d9be . . d9e0e1b 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java <nl> @ @ - 94 , 11 + 94 , 6 @ @ public class CheckedRow extends UncheckedRow { <nl> } <nl> <nl> @ Override <nl> - public boolean isNull ( long columnIndex ) { <nl> - return super . isNull ( columnIndex ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void setNull ( long columnIndex ) { <nl> RealmFieldType columnType = getColumnType ( columnIndex ) ; <nl> if ( columnType = = RealmFieldType . STRING ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Group . java b / realm / realm - library / src / main / java / io / realm / internal / Group . java <nl> index d329d53 . . 669c2b8 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Group . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Group . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ public class Group implements Closeable { <nl> } <nl> <nl> public Group ( String filepath , int mode ) { <nl> - this . immutable = ( mode = = MODE _ READONLY ) ; <nl> + this . immutable = mode = = MODE _ READONLY ; <nl> this . context = new Context ( ) ; <nl> this . nativePtr = createNative ( filepath , mode ) ; <nl> checkNativePtrNotZero ( ) ; <nl> @ @ - 193 , 11 + 193 , 9 @ @ public class Group implements Closeable { <nl> if ( name = = null | | name . isEmpty ( ) ) { <nl> throw new IllegalArgumentException ( " Invalid name . Name must be a non - empty String . " ) ; <nl> } <nl> - if ( immutable ) { <nl> - if ( ! hasTable ( name ) ) { <nl> - throw new IllegalStateException ( " Requested table is not in this Realm . " + <nl> - " Creating it requires a transaction : " + name ) ; <nl> - } <nl> + if ( immutable & & ! hasTable ( name ) ) { <nl> + throw new IllegalStateException ( " Requested table is not in this Realm . " + <nl> + " Creating it requires a transaction : " + name ) ; <nl> } <nl> <nl> / / Execute the disposal of abandoned realm objects each time a new realm object is created <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java <nl> index c90e4ea . . d6f2827 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java <nl> @ @ - 54 , 22 + 54 , 22 @ @ public class Mixed { <nl> } <nl> <nl> public Mixed ( Date value ) { <nl> - assert ( value ! = null ) ; <nl> + assert value ! = null ; <nl> this . value = value ; <nl> } <nl> <nl> public Mixed ( String value ) { <nl> - assert ( value ! = null ) ; <nl> + assert value ! = null ; <nl> this . value = value ; <nl> } <nl> <nl> public Mixed ( ByteBuffer value ) { <nl> - assert ( value ! = null ) ; <nl> + assert value ! = null ; <nl> this . value = value ; <nl> } <nl> <nl> public Mixed ( byte [ ] value ) { <nl> - assert ( value ! = null ) ; <nl> + assert value ! = null ; <nl> this . value = value ; <nl> } <nl> <nl> @ @ - 121 , 7 + 121 , 7 @ @ public class Mixed { <nl> return RealmFieldType . DATE ; <nl> else if ( value instanceof Boolean ) <nl> return RealmFieldType . BOOLEAN ; <nl> - else if ( value instanceof ByteBuffer | | ( value instanceof byte [ ] ) ) { <nl> + else if ( value instanceof ByteBuffer | | value instanceof byte [ ] ) { <nl> return RealmFieldType . BINARY ; <nl> } <nl> <nl> @ @ - 246 , 9 + 246 , 10 @ @ public class Mixed { <nl> case UNSUPPORTED _ TABLE : <nl> return " Subtable " ; <nl> case UNSUPPORTED _ MIXED : <nl> - break ; / / error <nl> + return " ERROR " ; <nl> } <nl> } catch ( Exception e ) { <nl> + return " ERROR " ; <nl> } <nl> return " ERROR " ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> index 28907bd . . cdd443d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class RealmCore { <nl> public static boolean osIsWindows ( ) <nl> { <nl> String os = System . getProperty ( " os . name " ) . toLowerCase ( Locale . getDefault ( ) ) ; <nl> - return ( os . contains ( " win " ) ) ; <nl> + return os . contains ( " win " ) ; <nl> } <nl> <nl> public static byte [ ] serialize ( Serializable value ) { <nl> @ @ - 122 , 15 + 122 , 14 @ @ public class RealmCore { <nl> } <nl> <nl> private static String loadLibraryWindows ( ) { <nl> - / / / * <nl> try { <nl> addNativeLibraryPath ( BINARIES _ PATH ) ; <nl> resetLibraryPath ( ) ; <nl> - } <nl> - catch ( Throwable e ) { <nl> + } catch ( Throwable e ) { <nl> / / Above can ' t be used on Android . <nl> + System . out . println ( " Failed to add native library path \ n " ) ; <nl> } <nl> - / / * / <nl> + <nl> / / Load debug library first - if available <nl> String jnilib ; <nl> jnilib = loadCorrectLibrary ( " realm _ jni32d " , " realm _ jni64d " ) ; <nl> @ @ - 154 , 6 + 153 , 7 @ @ public class RealmCore { <nl> System . loadLibrary ( libraryCandidateName ) ; <nl> return libraryCandidateName ; <nl> } catch ( Throwable e ) { <nl> + System . out . println ( " Failed to load native library path \ n " ) ; <nl> } <nl> } <nl> return null ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index 9052cd9 . . d2f80bf 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 119 , 7 + 119 , 7 @ @ public class Table implements TableOrView , TableSchema , Closeable { <nl> protected void finalize ( ) { <nl> synchronized ( context ) { <nl> if ( nativePtr ! = 0 ) { <nl> - boolean isRoot = ( parent = = null ) ; <nl> + boolean isRoot = parent = = null ; <nl> context . asyncDisposeTable ( nativePtr , isRoot ) ; <nl> nativePtr = 0 ; / / Set to 0 if finalize is called before close ( ) for some reason <nl> } <nl> @ @ - 1349 , 7 + 1349 , 7 @ @ public class Table implements TableOrView , TableSchema , Closeable { <nl> * Checks if a given table name is a meta - table , i . e . a table used by Realm to track its internal state . <nl> * / <nl> public static boolean isMetaTable ( String tableName ) { <nl> - return ( tableName . equals ( METADATA _ TABLE _ NAME ) | | tableName . equals ( PRIMARY _ KEY _ TABLE _ NAME ) ) ; <nl> + return tableName . equals ( METADATA _ TABLE _ NAME ) | | tableName . equals ( PRIMARY _ KEY _ TABLE _ NAME ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Version . java b / realm / realm - library / src / main / java / io / realm / internal / Version . java <nl> index 9464a48 . . 871fd5f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Version . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Version . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class Version { <nl> return false ; <nl> } <nl> <nl> - compatible = ( nativeGetAPIVersion ( ) = = REQUIRED _ JNI _ VERSION ) ; <nl> + compatible = nativeGetAPIVersion ( ) = = REQUIRED _ JNI _ VERSION ; <nl> if ( ! compatible ) { <nl> errTxt = " Native lib API is version " + nativeGetAPIVersion ( ) <nl> + " ! = " + REQUIRED _ JNI _ VERSION + " which is expected by the jar . " ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java <nl> index 348ebda . . 9d7038d 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class ISO8601Utils { <nl> / / if the value has no time component ( and no time zone ) , we are done <nl> boolean hasT = checkOffset ( date , offset , ' T ' ) ; <nl> <nl> - if ( ! hasT & & ( date . length ( ) < = offset ) ) { <nl> + if ( ! hasT & & date . length ( ) < = offset ) { <nl> Calendar calendar = new GregorianCalendar ( year , month - 1 , day ) ; <nl> <nl> pos . setIndex ( offset ) ; <nl> @ @ - 203 , 7 + 203 , 7 @ @ public class ISO8601Utils { <nl> } catch ( IllegalArgumentException e ) { <nl> fail = e ; <nl> } <nl> - String input = ( date = = null ) ? null : ( ' " ' + date + " ' " ) ; <nl> + String input = date = = null ? null : " ' " + date + " ' " ; <nl> String msg = fail . getMessage ( ) ; <nl> if ( msg = = null | | msg . isEmpty ( ) ) { <nl> msg = " ( " + fail . getClass ( ) . getName ( ) + " ) " ; <nl> @ @ - 223 , 7 + 223 , 7 @ @ public class ISO8601Utils { <nl> * @ return true if the expected character exist at the given offset <nl> * / <nl> private static boolean checkOffset ( String value , int offset , char expected ) { <nl> - return ( offset < value . length ( ) ) & & ( value . charAt ( offset ) = = expected ) ; <nl> + return offset < value . length ( ) & & value . charAt ( offset ) = = expected ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java <nl> index 74dd709 . . a31c3cc 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java <nl> @ @ - 140 , 7 + 140 , 7 @ @ public class QueryUpdateTask implements Runnable { <nl> queriesParameters [ i ] [ 2 ] = Table . INFINITE ; <nl> queriesParameters [ i ] [ 3 ] = Table . INFINITE ; <nl> queriesParameters [ i ] [ 4 ] = queryEntry . queryArguments . columnIndex ; <nl> - queriesParameters [ i ] [ 5 ] = ( queryEntry . queryArguments . sortOrder . getValue ( ) ) ? 1 : 0 ; <nl> + queriesParameters [ i ] [ 5 ] = queryEntry . queryArguments . sortOrder . getValue ( ) ? 1 : 0 ; <nl> break ; <nl> } <nl> case ArgumentsHolder . TYPE _ FIND _ ALL _ MULTI _ SORTED : <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> index 77fc789 . . be4c7fa 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> @ @ - 222 , 4 + 222 , 9 @ @ public class RealmObservableFactory implements RxObservableFactory { <nl> return o instanceof RealmObservableFactory ; <nl> } <nl> <nl> + @ Override <nl> + public int hashCode ( ) { <nl> + return 37 ; <nl> + } <nl> + <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index 07fd305 . . 16a567f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 500 , 12 + 500 , 6 @ @ abstract class BaseRealm implements Closeable { 
 } 
 } 
 
 - protected void checkNotNullFieldName ( String fieldName ) { 
 - if ( fieldName = = null ) { 
 - throw new IllegalArgumentException ( " fieldName must be provided . " ) ; 
 - } 
 - } 
 - 
 / / Return all handlers registered for this Realm 
 static Map < Handler , String > getHandlers ( ) { 
 return handlers ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index d95f33f . . 3b2acde 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 79 , 8 + 79 , 7 @ @ public final class DynamicRealm extends BaseRealm { 
 checkIfValid ( ) ; 
 Table table = schema . getTable ( className ) ; 
 long rowIndex = table . addEmptyRow ( ) ; 
 - DynamicRealmObject dynamicRealmObject = get ( DynamicRealmObject . class , className , rowIndex ) ; 
 - return dynamicRealmObject ; 
 + return get ( DynamicRealmObject . class , className , rowIndex ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 0f4c8f0 . . 635e5c9 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 17 , 6 + 17 , 7 @ @ package io . realm ; 
 
 import java . util . Arrays ; 
 import java . util . Date ; 
 + import java . util . Locale ; 
 
 import io . realm . internal . CheckedRow ; 
 import io . realm . internal . LinkView ; 
 @ @ - 275 , 7 + 276 , 6 @ @ public final class DynamicRealmObject extends RealmObject { 
 / * * 
 * Checks if the value of a given field is { @ code null } . 
 * 
 - * @ param fieldName name of field . 
 * @ param fieldName the name of the field . 
 * @ return { @ code true } if field value is null , { @ code false } otherwise . 
 * @ throws IllegalArgumentException if field name doesn ' t exists . 
 @ @ - 592 , 7 + 592 , 8 @ @ public final class DynamicRealmObject extends RealmObject { 
 if ( ! typeValidated ) { 
 String elementType = obj . row . getTable ( ) . getName ( ) ; 
 if ( ! tableName . equals ( elementType ) ) { 
 - throw new IllegalArgumentException ( String . format ( " Element at index % d is not the proper type . " + 
 + throw new IllegalArgumentException ( String . format ( Locale . ENGLISH , 
 + " Element at index % d is not the proper type . " + 
 " Was % s expected % s . " , i , elementType , tableName ) ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 0ec2ca7 . . a3ec1e8 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 510 , 8 + 510 , 7 @ @ public final class Realm extends BaseRealm { 
 } 
 
 try { 
 - E realmObject = configuration . getSchemaMediator ( ) . createOrUpdateUsingJsonObject ( clazz , this , json , false ) ; 
 - return realmObject ; 
 + return configuration . getSchemaMediator ( ) . createOrUpdateUsingJsonObject ( clazz , this , json , false ) ; 
 } catch ( Exception e ) { 
 throw new RealmException ( " Could not map Json " , e ) ; 
 } 
 @ @ - 701 , 8 + 700 , 7 @ @ public final class Realm extends BaseRealm { 
 checkIfValid ( ) ; 
 Table table = getTable ( clazz ) ; 
 long rowIndex = table . addEmptyRow ( ) ; 
 - E object = get ( clazz , rowIndex ) ; 
 - return object ; 
 + return get ( clazz , rowIndex ) ; 
 } 
 
 / * * 
 @ @ - 739 , 8 + 737 , 7 @ @ public final class Realm extends BaseRealm { 
 * / 
 public < E extends RealmObject > E copyToRealm ( E object ) { 
 checkNotNullObject ( object ) ; 
 - E realmObject = copyOrUpdate ( object , false ) ; 
 - return realmObject ; 
 + return copyOrUpdate ( object , false ) ; 
 } 
 
 / * * 
 @ @ - 759 , 8 + 756 , 7 @ @ public final class Realm extends BaseRealm { 
 public < E extends RealmObject > E copyToRealmOrUpdate ( E object ) { 
 checkNotNullObject ( object ) ; 
 checkHasPrimaryKey ( object . getClass ( ) ) ; 
 - E realmObject = copyOrUpdate ( object , true ) ; 
 - return realmObject ; 
 + return copyOrUpdate ( object , true ) ; 
 } 
 
 / * * 
 @ @ - 1513 , 6 + 1509 , 7 @ @ public final class Realm extends BaseRealm { 
 public static Object getDefaultModule ( ) { 
 String moduleName = " io . realm . DefaultRealmModule " ; 
 Class < ? > clazz ; 
 + / / noinspection TryWithIdenticalCatches 
 try { 
 clazz = Class . forName ( moduleName ) ; 
 Constructor < ? > constructor = clazz . getDeclaredConstructors ( ) [ 0 ] ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 index c2a208e . . acc981c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 223 , 6 + 223 , 7 @ @ public class RealmConfiguration { 
 String moduleSimpleName = moduleNameParts [ moduleNameParts . length - 1 ] ; 
 String mediatorName = String . format ( " io . realm . % s % s " , moduleSimpleName , " Mediator " ) ; 
 Class < ? > clazz ; 
 + / / noinspection TryWithIdenticalCatches 
 try { 
 clazz = Class . forName ( mediatorName ) ; 
 Constructor < ? > constructor = clazz . getDeclaredConstructors ( ) [ 0 ] ; 
 @ @ - 241 , 25 + 242 , 25 @ @ public class RealmConfiguration { 
 
 @ Override 
 public String toString ( ) { 
 - StringBuilder stringBuilder = new StringBuilder ( " " ) ; 
 - stringBuilder . append ( " realmFolder : " ) ; stringBuilder . append ( realmFolder . toString ( ) ) ; 
 + / / noinspection StringBufferReplaceableByString 
 + StringBuilder stringBuilder = new StringBuilder ( ) ; 
 + stringBuilder . append ( " realmFolder : " ) . append ( realmFolder . toString ( ) ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " realmFileName : " ) ; stringBuilder . append ( realmFileName ) ; 
 + stringBuilder . append ( " realmFileName : " ) . append ( realmFileName ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " canonicalPath : " ) ; stringBuilder . append ( canonicalPath ) ; 
 + stringBuilder . append ( " canonicalPath : " ) . append ( canonicalPath ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " key : " ) ; 
 - stringBuilder . append ( " [ length : " + Integer . toString ( key = = null ? 0 : KEY _ LENGTH ) + " ] " ) ; 
 + stringBuilder . append ( " key : " ) . append ( " [ length : " ) . append ( key = = null ? 0 : KEY _ LENGTH ) . append ( " ] " ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " schemaVersion : " ) ; stringBuilder . append ( Long . toString ( schemaVersion ) ) ; 
 + stringBuilder . append ( " schemaVersion : " ) . append ( Long . toString ( schemaVersion ) ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " migration : " ) ; stringBuilder . append ( migration ) ; 
 + stringBuilder . append ( " migration : " ) . append ( migration ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " deleteRealmIfMigrationNeeded : " ) ; stringBuilder . append ( deleteRealmIfMigrationNeeded ) ; 
 + stringBuilder . append ( " deleteRealmIfMigrationNeeded : " ) . append ( deleteRealmIfMigrationNeeded ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " durability : " ) ; stringBuilder . append ( durability ) ; 
 + stringBuilder . append ( " durability : " ) . append ( durability ) ; 
 stringBuilder . append ( " \ n " ) ; 
 - stringBuilder . append ( " schemaMediator : " ) ; stringBuilder . append ( schemaMediator ) ; 
 + stringBuilder . append ( " schemaMediator : " ) . append ( schemaMediator ) ; 
 
 return stringBuilder . toString ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index 1d18fb7 . . c0f567c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 164 , 6 + 164 , 7 @ @ public abstract class RealmObject { 
 * @ return { @ code true } if it successfully completed the query , { @ code false } otherwise . 
 * / 
 public final boolean load ( ) { 
 + / / noinspection SimplifiableIfStatement 
 if ( isLoaded ( ) ) { 
 return true ; 
 } else { 
 @ @ - 308 , 7 + 309 , 7 @ @ public abstract class RealmObject { 
 * Notifies all registered listeners . 
 * / 
 void notifyChangeListeners ( ) { 
 - if ( listeners ! = null & & ! listeners . isEmpty ( ) ) { 
 + if ( ! listeners . isEmpty ( ) ) { 
 boolean notify = false ; 
 
 Table table = row . getTable ( ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index f0bfbc6 . . 11a461a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import java . lang . ref . WeakReference ; 
 import java . util . ArrayList ; 
 import java . util . Date ; 
 import java . util . List ; 
 + import java . util . Locale ; 
 import java . util . concurrent . Callable ; 
 import java . util . concurrent . Future ; 
 
 @ @ - 1111 , 7 + 1112 , 8 @ @ public class RealmQuery < E extends RealmObject > { 
 
 RealmResults < E > realmResults ; 
 if ( isDynamicQuery ( ) ) { 
 - realmResults = ( RealmResults < E > ) RealmResults . createFromDynamicTableOrView ( realm , tableView , className ) ; 
 + / / noinspection unchecked 
 + realmResults = ( RealmResults < E > ) RealmResults . createFromDynamicTableOrView ( realm , tableView , className ) ; 
 } else { 
 realmResults = RealmResults . createFromTableOrView ( realm , tableView , clazz ) ; 
 } 
 @ @ - 1247 , 6 + 1249 , 7 @ @ public class RealmQuery < E extends RealmObject > { 
 
 RealmResults < E > realmResults ; 
 if ( isDynamicQuery ( ) ) { 
 + / / noinspection unchecked 
 realmResults = ( RealmResults < E > ) RealmResults . createFromDynamicTableOrView ( realm , tableView , className ) ; 
 } else { 
 realmResults = RealmResults . createFromTableOrView ( realm , tableView , clazz ) ; 
 @ @ - 1259 , 12 + 1262 , 12 @ @ public class RealmQuery < E extends RealmObject > { 
 List < Long > columnIndexes = new ArrayList < Long > ( ) ; 
 / / find the first index 
 long firstIndex = getAndValidateDistinctColumnIndex ( firstFieldName , table ) ; 
 - columnIndexes . add ( Long . valueOf ( firstIndex ) ) ; 
 + columnIndexes . add ( firstIndex ) ; 
 / / add remaining of indexes 
 if ( remainingFieldNames ! = null & & 0 < remainingFieldNames . length ) { 
 for ( String field : remainingFieldNames ) { 
 long index = getAndValidateDistinctColumnIndex ( field , table ) ; 
 - columnIndexes . add ( Long . valueOf ( index ) ) ; 
 + columnIndexes . add ( index ) ; 
 } 
 } 
 return columnIndexes ; 
 @ @ - 1673 , 6 + 1676 , 7 @ @ public class RealmQuery < E extends RealmObject > { 
 } else { 
 TableView tableView = query . findAll ( ) ; 
 List < Long > columnIndices = new ArrayList < Long > ( ) ; 
 + / / noinspection ForLoopReplaceableByForEach 
 for ( int i = 0 ; i < fieldNames . length ; i + + ) { 
 String fieldName = fieldNames [ i ] ; 
 long columnIndex = getColumnIndexForSort ( fieldName ) ; 
 @ @ - 1979 , 7 + 1983 , 9 @ @ public class RealmQuery < E extends RealmObject > { 
 } else if ( fieldNames . length = = 0 ) { 
 throw new IllegalArgumentException ( " At least one field name must be specified . " ) ; 
 } else if ( fieldNames . length ! = sortOrders . length ) { 
 - throw new IllegalArgumentException ( String . format ( " Number of field names ( % d ) and sort orders ( % d ) does not match . " , fieldNames . length , sortOrders . length ) ) ; 
 + throw new IllegalArgumentException ( String . format ( Locale . ENGLISH , 
 + " Number of field names ( % d ) and sort orders ( % d ) does not match . " , 
 + fieldNames . length , sortOrders . length ) ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 1b7590a . . 6741c43 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 844 , 11 + 844 , 12 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * @ return { @ code true } if it successfully completed the query , { @ code false } otherwise . 
 * / 
 public boolean load ( ) { 
 + / / noinspection SimplifiableIfStatement 
 if ( isLoaded ( ) ) { 
 return true ; 
 } else { 
 - / / doesn ' t guarantee to import correctly the result ( because the user may have advanced ) 
 - / / in this case the Realm # handler will be responsible of retrying 
 + / / doesn ' t guarantee to import correctly the result ( because the user may have advanced ) 
 + / / in this case the Realm # handler will be responsible of retrying 
 return onCompleted ( ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java 
 index c90e4ea . . af103c0 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java 
 @ @ - 248 , 7 + 248 , 7 @ @ public class Mixed { 
 case UNSUPPORTED _ MIXED : 
 break ; / / error 
 } 
 - } catch ( Exception e ) { 
 + } catch ( Exception ignored ) { 
 } 
 return " ERROR " ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 index c56228c . . 78deddf 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 @ @ - 17 , 7 + 17 , 6 @ @ 
 package io . realm . internal ; 
 
 import android . content . Context ; 
 - import android . util . Log ; 
 
 import com . getkeepsafe . relinker . ReLinker ; 
 
 @ @ - 122 , 7 + 121 , 7 @ @ public class RealmCore { 
 try { 
 System . loadLibrary ( libraryCandidateName ) ; 
 return libraryCandidateName ; 
 - } catch ( Throwable e ) { 
 + } catch ( Throwable ignored ) { 
 } 
 } 
 return null ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java 
 index 68be565 . . 1cb24fe 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java 
 @ @ - 281 , 11 + 281 , 7 @ @ public class SharedGroup implements Closeable { 
 if ( ! super . equals ( object ) ) return false ; 
 
 VersionID versionID = ( VersionID ) object ; 
 - 
 - if ( version ! = versionID . version ) return false ; 
 - if ( index ! = versionID . index ) return false ; 
 - 
 - return true ; 
 + return ( version = = versionID . version & & index = = versionID . index ) ; 
 } 
 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java b / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java 
 index a69fc5c . . dda38d3 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SubtableSchema . java 
 @ @ - 16 , 7 + 16 , 6 @ @ 
 
 package io . realm . internal ; 
 
 - 
 import io . realm . RealmFieldType ; 
 
 public class SubtableSchema implements TableSchema { 
 @ @ - 31 , 11 + 30 , 9 @ @ public class SubtableSchema implements TableSchema { 
 
 @ Override 
 public SubtableSchema getSubtableSchema ( long columnIndex ) { 
 - long [ ] newPath = new long [ this . path . length + 1 ] ; 
 - for ( int i = 0 ; i < this . path . length ; i + + ) { 
 - newPath [ i ] = path [ i ] ; 
 - } 
 - newPath [ this . path . length ] = columnIndex ; 
 + long [ ] newPath = new long [ path . length + 1 ] ; 
 + System . arraycopy ( path , 0 , newPath , 0 , path . length ) ; 
 + newPath [ path . length ] = columnIndex ; 
 return new SubtableSchema ( this . parentNativePtr , newPath ) ; 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / TableView . java b / realm / realm - library / src / main / java / io / realm / internal / TableView . java 
 index 8d6fe20 . . 1c0aed2 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / TableView . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / TableView . java 
 @ @ - 818 , 7 + 818 , 7 @ @ public class TableView implements TableOrView , Closeable { 
 this . context . executeDelayedDisposal ( ) ; 
 long [ ] indexes = new long [ columnIndexes . size ( ) ] ; 
 for ( int i = 0 ; i < columnIndexes . size ( ) ; i + + ) { 
 - indexes [ i ] = columnIndexes . get ( i ) . longValue ( ) ; 
 + indexes [ i ] = columnIndexes . get ( i ) ; 
 } 
 nativeDistinctMulti ( nativePtr , indexes ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Version . java b / realm / realm - library / src / main / java / io / realm / internal / Version . java 
 index 9464a48 . . fa47bb3 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Version . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Version . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class Version { 
 } 
 
 public static boolean coreLibVersionCompatible ( boolean throwIfNot ) { 
 - String errTxt = " " ; 
 + String errTxt ; 
 boolean compatible = nativeIsAtLeast ( CORE _ MIN _ MAJOR , CORE _ MIN _ MINOR , CORE _ MIN _ PATCH ) ; 
 if ( ! compatible ) { 
 errTxt = " Version mismatch between realm . jar ( " 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java 
 index 348ebda . . 4509b04 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java 
 @ @ - 62 , 7 + 62 , 8 @ @ public class ISO8601Utils { 
 * @ throws ParseException if the date is not in the appropriate format 
 * / 
 public static Date parse ( String date , ParsePosition pos ) throws ParseException { 
 - Exception fail = null ; 
 + Exception fail ; 
 + / / noinspection TryWithIdenticalCatches 
 try { 
 int offset = pos . getIndex ( ) ; 
 
 @ @ - 142 , 7 + 143 , 7 @ @ public class ISO8601Utils { 
 throw new IllegalArgumentException ( " No time zone indicator " ) ; 
 } 
 
 - TimeZone timezone = null ; 
 + TimeZone timezone ; 
 char timezoneIndicator = date . charAt ( offset ) ; 
 
 if ( timezoneIndicator = = ' Z ' ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java 
 index 74dd709 . . b8ee350 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java 
 @ @ - 75 , 7 + 75 , 7 @ @ public class QueryUpdateTask implements Runnable { 
 realmConfiguration . getEncryptionKey ( ) ) ; 
 
 Result result ; 
 - boolean updateSuccessful = false ; 
 + boolean updateSuccessful ; 
 if ( updateMode = = MODE _ UPDATE _ REALM _ RESULTS ) { 
 result = Result . newRealmResultsResponse ( ) ; 
 AlignedQueriesParameters alignedParameters = prepareQueriesParameters ( ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index a787458 . . 6532295 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 5 , 6 + 5 , 7 @ @ apply plugin : ' maven - publish ' 
 apply plugin : ' com . github . dcendents . android - maven ' 
 apply plugin : ' maven ' 
 apply plugin : ' findbugs ' 
 + apply plugin : ' pmd ' 
 apply plugin : ' checkstyle ' 
 
 android { 
 @ @ - 62 , 8 + 63 , 8 @ @ task javadocJar ( type : Jar , dependsOn : javadoc ) { 
 preBuild . dependsOn ' : realm - jni : buildAndroidJni ' 
 
 task findbugs ( type : FindBugs ) { 
 - dependsOn assemble 
 - group = ' Test ' 
 + dependsOn assembleDebug 
 + group = ' Verification ' 
 
 ignoreFailures = false 
 effort = " default " 
 @ @ - 84 , 8 + 85 , 23 @ @ task findbugs ( type : FindBugs ) { 
 } 
 } 
 
 + task pmd ( type : Pmd ) { 
 + description ' Run pmd ' 
 + group ' verification ' 
 + 
 + dependsOn assembleDebug 
 + 
 + ruleSets = [ " java - basic " ] 
 + source = fileTree ( ' src / main / java ' ) 
 + 
 + reports { 
 + xml . enabled = false 
 + html . enabled = true 
 + } 
 + } 
 + 
 task checkstyle ( type : Checkstyle ) { 
 - group = ' Test ' 
 + group = ' Verification ' 
 
 source ' src ' 
 include ' * * / * . java ' 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index cbc2a6d . . 9047e47 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 315 , 11 + 315 , 10 @ @ abstract class BaseRealm implements Closeable { 
 realmPath . equals ( configuration . getPath ( ) ) / / It ' s the right realm 
 & & ! handler . hasMessages ( HandlerController . REALM _ CHANGED ) / / The right message 
 & & handler . getLooper ( ) . getThread ( ) . isAlive ( ) / / The receiving thread is alive 
 - ) { 
 - if ( ! handler . sendEmptyMessage ( HandlerController . REALM _ CHANGED ) ) { 
 - RealmLog . w ( " Cannot update Looper threads when the Looper has quit . Use realm . setAutoRefresh ( false ) " + 
 - " to prevent this . " ) ; 
 - } 
 + & & ! handler . sendEmptyMessage ( HandlerController . REALM _ CHANGED ) ) { 
 + RealmLog . w ( " Cannot update Looper threads when the Looper has quit . Use realm . setAutoRefresh ( false ) " + 
 + " to prevent this . " ) ; 
 + 
 } 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 427f479 . . c7eeaab 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 62 , 7 + 62 , 7 @ @ public final class DynamicRealmObject extends RealmObject { 
 
 DynamicRealmObject ( BaseRealm realm , Row row ) { 
 this . realm = realm ; 
 - this . row = ( row instanceof CheckedRow ) ? ( CheckedRow ) row : ( ( UncheckedRow ) row ) . convertToChecked ( ) ; 
 + this . row = row instanceof CheckedRow ? ( CheckedRow ) row : ( ( UncheckedRow ) row ) . convertToChecked ( ) ; 
 } 
 
 DynamicRealmObject ( String className ) { 
 @ @ - 342 , 7 + 342 , 7 @ @ public final class DynamicRealmObject extends RealmObject { 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 public void set ( String fieldName , Object value ) { 
 - boolean isString = ( value instanceof String ) ; 
 + boolean isString = value instanceof String ; 
 String strValue = isString ? ( String ) value : null ; 
 
 / / Do implicit conversion if needed 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java b / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java 
 index 0d579c8 . . d119d60 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmBaseAdapter . java 
 @ @ - 45 , 7 + 45 , 7 @ @ public abstract class RealmBaseAdapter < T extends RealmObject > extends BaseAdapte 
 this . context = context ; 
 this . realmResults = realmResults ; 
 this . inflater = LayoutInflater . from ( context ) ; 
 - this . listener = ( ! automaticUpdate ) ? null : new RealmChangeListener ( ) { 
 + this . listener = ! automaticUpdate ? null : new RealmChangeListener ( ) { 
 @ Override 
 public void onChange ( ) { 
 notifyDataSetChanged ( ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java 
 index b5b4df2 . . 008c290 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java 
 @ @ - 76 , 22 + 76 , 22 @ @ public enum RealmFieldType { 
 * / 
 public boolean isValid ( Object obj ) { 
 switch ( nativeValue ) { 
 - case 0 : return ( obj instanceof Long | | obj instanceof Integer | | obj instanceof Short | | obj instanceof Byte ) ; 
 - case 1 : return ( obj instanceof Boolean ) ; 
 - case 2 : return ( obj instanceof String ) ; 
 - case 4 : return ( obj instanceof byte [ ] | | obj instanceof ByteBuffer ) ; 
 - case 5 : return ( obj = = null | | obj instanceof Object [ ] [ ] ) ; 
 - case 6 : return ( obj instanceof Mixed | | 
 + case 0 : return obj instanceof Long | | obj instanceof Integer | | obj instanceof Short | | obj instanceof Byte ; 
 + case 1 : return obj instanceof Boolean ; 
 + case 2 : return obj instanceof String ; 
 + case 4 : return obj instanceof byte [ ] | | obj instanceof ByteBuffer ; 
 + case 5 : return obj = = null | | obj instanceof Object [ ] [ ] ; 
 + case 6 : return obj instanceof Mixed | | 
 obj instanceof Long | | obj instanceof Integer | | 
 obj instanceof Short | | obj instanceof Byte | | obj instanceof Boolean | | 
 obj instanceof Float | | obj instanceof Double | | 
 obj instanceof String | | 
 obj instanceof byte [ ] | | obj instanceof ByteBuffer | | 
 obj = = null | | obj instanceof Object [ ] [ ] | | 
 - obj instanceof java . util . Date ) ; 
 - case 7 : return ( obj instanceof java . util . Date ) ; 
 - case 9 : return ( obj instanceof Float ) ; 
 - case 10 : return ( obj instanceof Double ) ; 
 + obj instanceof java . util . Date ; 
 + case 7 : return obj instanceof java . util . Date ; 
 + case 9 : return obj instanceof Float ; 
 + case 10 : return obj instanceof Double ; 
 case 12 : return false ; 
 case 13 : return false ; 
 case 14 : return false ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 index e01d9be . . d9e0e1b 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / CheckedRow . java 
 @ @ - 94 , 11 + 94 , 6 @ @ public class CheckedRow extends UncheckedRow { 
 } 
 
 @ Override 
 - public boolean isNull ( long columnIndex ) { 
 - return super . isNull ( columnIndex ) ; 
 - } 
 - 
 - @ Override 
 public void setNull ( long columnIndex ) { 
 RealmFieldType columnType = getColumnType ( columnIndex ) ; 
 if ( columnType = = RealmFieldType . STRING ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Group . java b / realm / realm - library / src / main / java / io / realm / internal / Group . java 
 index d329d53 . . 669c2b8 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Group . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Group . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public class Group implements Closeable { 
 } 
 
 public Group ( String filepath , int mode ) { 
 - this . immutable = ( mode = = MODE _ READONLY ) ; 
 + this . immutable = mode = = MODE _ READONLY ; 
 this . context = new Context ( ) ; 
 this . nativePtr = createNative ( filepath , mode ) ; 
 checkNativePtrNotZero ( ) ; 
 @ @ - 193 , 11 + 193 , 9 @ @ public class Group implements Closeable { 
 if ( name = = null | | name . isEmpty ( ) ) { 
 throw new IllegalArgumentException ( " Invalid name . Name must be a non - empty String . " ) ; 
 } 
 - if ( immutable ) { 
 - if ( ! hasTable ( name ) ) { 
 - throw new IllegalStateException ( " Requested table is not in this Realm . " + 
 - " Creating it requires a transaction : " + name ) ; 
 - } 
 + if ( immutable & & ! hasTable ( name ) ) { 
 + throw new IllegalStateException ( " Requested table is not in this Realm . " + 
 + " Creating it requires a transaction : " + name ) ; 
 } 
 
 / / Execute the disposal of abandoned realm objects each time a new realm object is created 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java 
 index c90e4ea . . d6f2827 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Mixed . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Mixed . java 
 @ @ - 54 , 22 + 54 , 22 @ @ public class Mixed { 
 } 
 
 public Mixed ( Date value ) { 
 - assert ( value ! = null ) ; 
 + assert value ! = null ; 
 this . value = value ; 
 } 
 
 public Mixed ( String value ) { 
 - assert ( value ! = null ) ; 
 + assert value ! = null ; 
 this . value = value ; 
 } 
 
 public Mixed ( ByteBuffer value ) { 
 - assert ( value ! = null ) ; 
 + assert value ! = null ; 
 this . value = value ; 
 } 
 
 public Mixed ( byte [ ] value ) { 
 - assert ( value ! = null ) ; 
 + assert value ! = null ; 
 this . value = value ; 
 } 
 
 @ @ - 121 , 7 + 121 , 7 @ @ public class Mixed { 
 return RealmFieldType . DATE ; 
 else if ( value instanceof Boolean ) 
 return RealmFieldType . BOOLEAN ; 
 - else if ( value instanceof ByteBuffer | | ( value instanceof byte [ ] ) ) { 
 + else if ( value instanceof ByteBuffer | | value instanceof byte [ ] ) { 
 return RealmFieldType . BINARY ; 
 } 
 
 @ @ - 246 , 9 + 246 , 10 @ @ public class Mixed { 
 case UNSUPPORTED _ TABLE : 
 return " Subtable " ; 
 case UNSUPPORTED _ MIXED : 
 - break ; / / error 
 + return " ERROR " ; 
 } 
 } catch ( Exception e ) { 
 + return " ERROR " ; 
 } 
 return " ERROR " ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 index 28907bd . . cdd443d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class RealmCore { 
 public static boolean osIsWindows ( ) 
 { 
 String os = System . getProperty ( " os . name " ) . toLowerCase ( Locale . getDefault ( ) ) ; 
 - return ( os . contains ( " win " ) ) ; 
 + return os . contains ( " win " ) ; 
 } 
 
 public static byte [ ] serialize ( Serializable value ) { 
 @ @ - 122 , 15 + 122 , 14 @ @ public class RealmCore { 
 } 
 
 private static String loadLibraryWindows ( ) { 
 - / / / * 
 try { 
 addNativeLibraryPath ( BINARIES _ PATH ) ; 
 resetLibraryPath ( ) ; 
 - } 
 - catch ( Throwable e ) { 
 + } catch ( Throwable e ) { 
 / / Above can ' t be used on Android . 
 + System . out . println ( " Failed to add native library path \ n " ) ; 
 } 
 - / / * / 
 + 
 / / Load debug library first - if available 
 String jnilib ; 
 jnilib = loadCorrectLibrary ( " realm _ jni32d " , " realm _ jni64d " ) ; 
 @ @ - 154 , 6 + 153 , 7 @ @ public class RealmCore { 
 System . loadLibrary ( libraryCandidateName ) ; 
 return libraryCandidateName ; 
 } catch ( Throwable e ) { 
 + System . out . println ( " Failed to load native library path \ n " ) ; 
 } 
 } 
 return null ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index 9052cd9 . . d2f80bf 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 119 , 7 + 119 , 7 @ @ public class Table implements TableOrView , TableSchema , Closeable { 
 protected void finalize ( ) { 
 synchronized ( context ) { 
 if ( nativePtr ! = 0 ) { 
 - boolean isRoot = ( parent = = null ) ; 
 + boolean isRoot = parent = = null ; 
 context . asyncDisposeTable ( nativePtr , isRoot ) ; 
 nativePtr = 0 ; / / Set to 0 if finalize is called before close ( ) for some reason 
 } 
 @ @ - 1349 , 7 + 1349 , 7 @ @ public class Table implements TableOrView , TableSchema , Closeable { 
 * Checks if a given table name is a meta - table , i . e . a table used by Realm to track its internal state . 
 * / 
 public static boolean isMetaTable ( String tableName ) { 
 - return ( tableName . equals ( METADATA _ TABLE _ NAME ) | | tableName . equals ( PRIMARY _ KEY _ TABLE _ NAME ) ) ; 
 + return tableName . equals ( METADATA _ TABLE _ NAME ) | | tableName . equals ( PRIMARY _ KEY _ TABLE _ NAME ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Version . java b / realm / realm - library / src / main / java / io / realm / internal / Version . java 
 index 9464a48 . . 871fd5f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Version . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Version . java 
 @ @ - 61 , 7 + 61 , 7 @ @ public class Version { 
 return false ; 
 } 
 
 - compatible = ( nativeGetAPIVersion ( ) = = REQUIRED _ JNI _ VERSION ) ; 
 + compatible = nativeGetAPIVersion ( ) = = REQUIRED _ JNI _ VERSION ; 
 if ( ! compatible ) { 
 errTxt = " Native lib API is version " + nativeGetAPIVersion ( ) 
 + " ! = " + REQUIRED _ JNI _ VERSION + " which is expected by the jar . " ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java 
 index 348ebda . . 9d7038d 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / android / ISO8601Utils . java 
 @ @ - 89 , 7 + 89 , 7 @ @ public class ISO8601Utils { 
 / / if the value has no time component ( and no time zone ) , we are done 
 boolean hasT = checkOffset ( date , offset , ' T ' ) ; 
 
 - if ( ! hasT & & ( date . length ( ) < = offset ) ) { 
 + if ( ! hasT & & date . length ( ) < = offset ) { 
 Calendar calendar = new GregorianCalendar ( year , month - 1 , day ) ; 
 
 pos . setIndex ( offset ) ; 
 @ @ - 203 , 7 + 203 , 7 @ @ public class ISO8601Utils { 
 } catch ( IllegalArgumentException e ) { 
 fail = e ; 
 } 
 - String input = ( date = = null ) ? null : ( ' " ' + date + " ' " ) ; 
 + String input = date = = null ? null : " ' " + date + " ' " ; 
 String msg = fail . getMessage ( ) ; 
 if ( msg = = null | | msg . isEmpty ( ) ) { 
 msg = " ( " + fail . getClass ( ) . getName ( ) + " ) " ; 
 @ @ - 223 , 7 + 223 , 7 @ @ public class ISO8601Utils { 
 * @ return true if the expected character exist at the given offset 
 * / 
 private static boolean checkOffset ( String value , int offset , char expected ) { 
 - return ( offset < value . length ( ) ) & & ( value . charAt ( offset ) = = expected ) ; 
 + return offset < value . length ( ) & & value . charAt ( offset ) = = expected ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java 
 index 74dd709 . . a31c3cc 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / async / QueryUpdateTask . java 
 @ @ - 140 , 7 + 140 , 7 @ @ public class QueryUpdateTask implements Runnable { 
 queriesParameters [ i ] [ 2 ] = Table . INFINITE ; 
 queriesParameters [ i ] [ 3 ] = Table . INFINITE ; 
 queriesParameters [ i ] [ 4 ] = queryEntry . queryArguments . columnIndex ; 
 - queriesParameters [ i ] [ 5 ] = ( queryEntry . queryArguments . sortOrder . getValue ( ) ) ? 1 : 0 ; 
 + queriesParameters [ i ] [ 5 ] = queryEntry . queryArguments . sortOrder . getValue ( ) ? 1 : 0 ; 
 break ; 
 } 
 case ArgumentsHolder . TYPE _ FIND _ ALL _ MULTI _ SORTED : 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 index 77fc789 . . be4c7fa 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 @ @ - 222 , 4 + 222 , 9 @ @ public class RealmObservableFactory implements RxObservableFactory { 
 return o instanceof RealmObservableFactory ; 
 } 
 
 + @ Override 
 + public int hashCode ( ) { 
 + return 37 ; 
 + } 
 + 
 }
