BLEU SCORE: 0.05693025330278466

TEST MSG: Adapt core fix for the delete RealmList
GENERATED MSG: Update core to v0 . 89 . 8

TEST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 652cbc4 . . f3493e8 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 3 + 1 , 8 @ @ <nl> + 0 . 87 . 5 <nl> + * Updated Realm Core to 0 . 96 . 1 <nl> + - IllegalStateException won ' t be thrown anymore in RealmResults . where ( ) if the RealmList which the RealmResults is created on has been deleted . Instead , the RealmResults will be treated as empty forever . <nl> + <nl> + <nl> 0 . 87 . 4 <nl> * Updated Realm Core to 0 . 96 . 0 <nl> - Fixed bug causing BadVersionException or crashing core when running async queries . <nl> diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle <nl> index cb27557 . . de2303a 100644 <nl> - - - a / realm / realm - jni / build . gradle <nl> + + + b / realm / realm - jni / build . gradle <nl> @ @ - 1 , 8 + 1 , 8 @ @ <nl> import java . security . MessageDigest <nl> <nl> - ext . coreVersion = ' 0 . 96 . 0 ' <nl> + ext . coreVersion = ' 0 . 96 . 1 ' <nl> / / empty or comment out this to disable hash checking <nl> - ext . coreSha256Hash = ' 3163e03ece2fce7084076abc43b978c2a9978b53dfcbf7240ce5accbd2047990 ' <nl> + ext . coreSha256Hash = ' eb32531428f5bc2cd7fe54f9e4905398d5506141d2cebe04c6c80a17ed33df5d ' <nl> ext . forceDownloadCore = <nl> project . hasProperty ( ' forceDownloadCore ' ) ? project . getProperty ( ' forceDownloadCore ' ) . toBoolean ( ) : false <nl> / / gcc is default for the NDK . It also produces smaller binaries <nl> diff - - git a / realm / realm - jni / src / io _ realm _ internal _ Util . cpp b / realm / realm - jni / src / io _ realm _ internal _ Util . cpp <nl> index 0d6144d . . 03d298a 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ Util . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ Util . cpp <nl> @ @ - 169 , 11 + 169 , 7 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeTestcase ( <nl> if ( dotest ) <nl> ThrowException ( env , BadVersion , " parm1 " , " parm2 " ) ; <nl> break ; <nl> - case DeletedLinkViewException : <nl> - expect = " io . realm . internal . DeletedRealmListException : parm1 " ; <nl> - if ( dotest ) <nl> - ThrowException ( env , DeletedLinkViewException , " parm1 " , " parm2 " ) ; <nl> - break ; <nl> + <nl> } <nl> if ( dotest ) { <nl> return NULL ; <nl> diff - - git a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp <nl> index 3e1a612 . . 248d180 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp <nl> @ @ - 24 , 36 + 24 , 22 @ @ <nl> <nl> using namespace realm ; <nl> <nl> - / / The validation will try to sync the table view as well . <nl> - / / if you disable the validation , please remember to call sync _ if _ needed ( ) <nl> - # define VIEW _ VALID _ AND _ IN _ SYNC ( env , ptr ) ( is _ view _ valid ( env , ptr ) & & sync _ table _ view ( env , ptr ) ) <nl> - <nl> - inline bool is _ view _ valid ( JNIEnv * env , jlong nativeViewPtr ) { <nl> - if ( TV ( nativeViewPtr ) = = NULL ) { <nl> - / / Should never get here <nl> - ThrowException ( env , FatalError , " Null pointer of table view . " ) ; <nl> - return false ; <nl> - } <nl> - if ( ! TV ( nativeViewPtr ) - > is _ attached ( ) ) { <nl> - ThrowException ( env , TableInvalid , " The Realm has been closed and is no longer accessible . " ) ; <nl> - return false ; <nl> - } <nl> - return true ; <nl> - } <nl> + / / if you disable the validation , please remember to call sync _ in _ needed ( ) <nl> + # define VIEW _ VALID _ AND _ IN _ SYNC ( env , ptr ) view _ valid _ and _ in _ sync ( env , ptr ) <nl> <nl> - / / Sync the TableView and return false if sync failed . <nl> - inline bool sync _ table _ view ( JNIEnv * / * env * / , jlong nativeViewPtr ) { <nl> - try { <nl> + inline bool view _ valid _ and _ in _ sync ( JNIEnv * env , jlong nativeViewPtr ) { <nl> + bool valid = ( TV ( nativeViewPtr ) ! = NULL ) ; <nl> + if ( valid ) { <nl> + if ( ! TV ( nativeViewPtr ) - > is _ attached ( ) ) { <nl> + ThrowException ( env , TableInvalid , " The Realm has been closed and is no longer accessible . " ) ; <nl> + return false ; <nl> + } <nl> TV ( nativeViewPtr ) - > sync _ if _ needed ( ) ; <nl> - } catch ( realm : : DeletedLinkView & ) { <nl> - / / FIXME : Temp fix for https : / / github . com / realm / realm - core / pull / 1434 <nl> - / / Better solution would be core only throw the exception when really necessary , methods like size <nl> - / / should just return 0 . <nl> - return false ; <nl> } <nl> - return true ; <nl> + return valid ; <nl> } <nl> <nl> + <nl> JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ createNativeTableView ( <nl> JNIEnv * env , jobject , jobject , jlong ) <nl> { <nl> @ @ - 119 , 14 + 105 , 8 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetSourceRowIndex <nl> ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong rowIndex ) <nl> { <nl> try { <nl> - if ( ! is _ view _ valid ( env , nativeViewPtr ) ) { <nl> + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) <nl> return npos ; <nl> - } <nl> - if ( ! sync _ table _ view ( env , nativeViewPtr ) ) { <nl> - TR _ ERR ( " The source LinkView created this TableView has been deleted . " ) ; <nl> - / / Let it fall through . Since the size will return 0 , an ArrayIndexOutOfBoundsException <nl> - / / will be thrown in ROW _ INDEX _ VALID check . <nl> - } <nl> if ( ! ROW _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , rowIndex ) ) <nl> return npos ; <nl> } CATCH _ STD ( ) <nl> @ @ - 137 , 8 + 117 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnCount <nl> ( JNIEnv * env , jobject , jlong nativeViewPtr ) <nl> { <nl> try { <nl> - / / No need to sync here . <nl> - if ( ! is _ view _ valid ( env , nativeViewPtr ) ) <nl> + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) <nl> return 0 ; <nl> } CATCH _ STD ( ) <nl> return TV ( nativeViewPtr ) - > get _ column _ count ( ) ; <nl> @ @ - 148 , 8 + 127 , 7 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnName <nl> ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong columnIndex ) <nl> { <nl> try { <nl> - / / No need to sync here . <nl> - if ( ! is _ view _ valid ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) <nl> + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) <nl> return NULL ; <nl> return to _ jstring ( env , TV ( nativeViewPtr ) - > get _ column _ name ( S ( columnIndex ) ) ) ; <nl> } CATCH _ STD ( ) <nl> @ @ - 160 , 9 + 138 , 8 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnIndex <nl> ( JNIEnv * env , jobject , jlong nativeViewPtr , jstring columnName ) <nl> { <nl> try { <nl> - / / No need to sync here . <nl> - if ( ! is _ view _ valid ( env , nativeViewPtr ) ) <nl> - return 0 ; <nl> + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) <nl> + return 0 ; <nl> <nl> JStringAccessor columnName2 ( env , columnName ) ; / / throws <nl> return to _ jlong _ or _ not _ found ( TV ( nativeViewPtr ) - > get _ column _ index ( columnName2 ) ) ; / / noexcept <nl> @ @ - 174 , 8 + 151 , 7 @ @ JNIEXPORT jint JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnType <nl> ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong columnIndex ) <nl> { <nl> try { <nl> - / / No need to sync here . <nl> - if ( ! is _ view _ valid ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) <nl> + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) <nl> return 0 ; <nl> } CATCH _ STD ( ) <nl> return static _ cast < int > ( TV ( nativeViewPtr ) - > get _ column _ type ( S ( columnIndex ) ) ) ; <nl> diff - - git a / realm / realm - jni / src / util . cpp b / realm / realm - jni / src / util . cpp <nl> index 291036a . . a32dde5 100644 <nl> - - - a / realm / realm - jni / src / util . cpp <nl> + + + b / realm / realm - jni / src / util . cpp <nl> @ @ - 53 , 10 + 53 , 6 @ @ void ConvertException ( JNIEnv * env , const char * file , int line ) <nl> ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> ThrowException ( env , BadVersion , ss . str ( ) ) ; <nl> } <nl> - catch ( realm : : DeletedLinkView & e ) { <nl> - ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> - ThrowException ( env , DeletedLinkViewException , ss . str ( ) ) ; <nl> - } <nl> catch ( std : : exception & e ) { <nl> ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> ThrowException ( env , FatalError , ss . str ( ) ) ; <nl> @ @ - 156 , 11 + 152 , 6 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , const std : : string & cla <nl> jExceptionClass = env - > FindClass ( " io / realm / internal / async / BadVersionException " ) ; <nl> message = classStr ; <nl> break ; <nl> - <nl> - case DeletedLinkViewException : <nl> - jExceptionClass = env - > FindClass ( " io / realm / internal / DeletedRealmListException " ) ; <nl> - message = classStr ; <nl> - break ; <nl> } <nl> if ( jExceptionClass ! = NULL ) { <nl> env - > ThrowNew ( jExceptionClass , message . c _ str ( ) ) ; <nl> diff - - git a / realm / realm - jni / src / util . hpp b / realm / realm - jni / src / util . hpp <nl> index 18c31ce . . e976306 100644 <nl> - - - a / realm / realm - jni / src / util . hpp <nl> + + + b / realm / realm - jni / src / util . hpp <nl> @ @ - 121 , 8 + 121 , 7 @ @ enum ExceptionKind { <nl> RuntimeError = 12 , <nl> RowInvalid = 13 , <nl> CrossTableLink = 15 , <nl> - BadVersion = 16 , <nl> - DeletedLinkViewException = 17 <nl> + BadVersion = 16 <nl> / / NOTE ! ! ! ! : Please also add test cases to Util . java when introducing a new exception kind . <nl> } ; <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java <nl> index 57be8fe . . 41ea159 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java <nl> @ @ - 1168 , 8 + 1168 , 9 @ @ public class RealmResultsTest extends AndroidTestCase { <nl> return dogs ; <nl> } <nl> <nl> + / / It will still be treated as valid table view in core , just always be empty . <nl> public void testisValidResultsBuiltOnDeletedLinkView ( ) { <nl> - assertEquals ( false , populateRealmResultsOnDeletedLinkView ( ) . isValid ( ) ) ; <nl> + assertEquals ( true , populateRealmResultsOnDeletedLinkView ( ) . isValid ( ) ) ; <nl> } <nl> <nl> public void testSizeResultsBuiltOnDeletedLinkView ( ) { <nl> @ @ - 1235 , 11 + 1236 , 6 @ @ public class RealmResultsTest extends AndroidTestCase { <nl> } <nl> <nl> public void testWhereResultsBuiltOnDeletedLinkView ( ) { <nl> - try { <nl> - populateRealmResultsOnDeletedLinkView ( ) . where ( ) ; <nl> - fail ( ) ; <nl> - } catch ( IllegalStateException e ) { <nl> - assertEquals ( " The RealmList which this RealmResults is created on has been deleted . " , e . getMessage ( ) ) ; <nl> - } <nl> + assertEquals ( 0 , populateRealmResultsOnDeletedLinkView ( ) . where ( ) . findAll ( ) . size ( ) ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java <nl> index 60da724 . . ac88614 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java <nl> @ @ - 1912 , 7 + 1912 , 7 @ @ public class TypeBasedNotificationsTest extends AndroidTestCase { <nl> @ Override <nl> public void onChange ( ) { <nl> if ( typebasedCommitInvocations . getAndIncrement ( ) = = 0 ) { <nl> - assertFalse ( dogs . isValid ( ) ) ; <nl> + assertTrue ( dogs . isValid ( ) ) ; <nl> assertEquals ( 0 , dogs . size ( ) ) ; <nl> } else { <nl> fail ( " This listener should only be called once . " ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 25802e4 . . 10f6e39 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 29 , 7 + 29 , 6 @ @ import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . Future ; <nl> <nl> import io . realm . exceptions . RealmException ; <nl> - import io . realm . internal . DeletedRealmListException ; <nl> import io . realm . internal . TableOrView ; <nl> import io . realm . internal . TableQuery ; <nl> import io . realm . internal . TableView ; <nl> @ @ - 53 , 9 + 52 , 8 @ @ import rx . Observable ; <nl> * Notice that a RealmResults is never { @ code null } not even in the case where it contains no objects . You should always <nl> * use the size ( ) method to check if a RealmResults is empty or not . <nl> * < p > <nl> - * If a RealmResults is built on RealmList through { @ link RealmList # where ( ) } , it will become invalid when the source <nl> - * RealmList gets deleted . When that happens , the RealmResults will behave like a empty RealmResults , but calling <nl> - * { @ link # where ( ) } will throw an { @ link IllegalStateException } . Use { @ link # isValid } to detect this situation . <nl> + * If a RealmResults is built on RealmList through { @ link RealmList # where ( ) } , it will become empty when the source <nl> + * RealmList gets deleted . <nl> * <nl> * @ param < E > The class of objects in this list . <nl> * @ see RealmQuery # findAll ( ) <nl> @ @ - 71 , 7 + 69 , 6 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> <nl> private static final String TYPE _ MISMATCH = " Field ' % s ' : type mismatch - % s expected . " ; <nl> private static final long TABLE _ VIEW _ VERSION _ NONE = - 1 ; <nl> - private static final long TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED = - 2 ; <nl> private long currentTableViewVersion = TABLE _ VIEW _ VERSION _ NONE ; <nl> <nl> private final TableQuery query ; <nl> @ @ - 145 , 11 + 142 , 7 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * @ return { @ code true } if still valid to use , { @ code false } otherwise . <nl> * / <nl> public boolean isValid ( ) { <nl> - if ( realm = = null | | realm . isClosed ( ) ) { <nl> - return false ; <nl> - } <nl> - <nl> - return syncToCheckIfValid ( " Calling isValid on RealmResults whose parent RealmList has been deleted already . " ) ; <nl> + return realm ! = null & & ! realm . isClosed ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 157 , 14 + 150 , 11 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * <nl> * @ return a typed RealmQuery . <nl> * @ see io . realm . RealmQuery <nl> - * @ throws IllegalStateException if the RealmList which this RealmResults is created on has been deleted . <nl> + * @ throws IllegalStateException if the corresponding Realm is closed or in an incorrect thread . <nl> * / <nl> public RealmQuery < E > where ( ) { <nl> realm . checkIfValid ( ) ; <nl> <nl> - if ( ! syncToCheckIfValid ( " Calling where on RealmResults whose parent RealmList has been deleted already . " ) ) { <nl> - throw new IllegalStateException ( " The RealmList which this RealmResults is created on has been deleted . " ) ; <nl> - } <nl> return RealmQuery . createQueryFromResult ( this ) ; <nl> } <nl> <nl> @ @ - 869 , 48 + 859 , 13 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> / / but we have already registered listeners for it ) <nl> if ( pendingQuery ! = null & & ! isCompleted ) return ; <nl> <nl> - / / FIXME : still waiting for Core to provide a fix <nl> - / / for crash when calling _ sync _ if _ needed on a cleared View . <nl> - / / https : / / github . com / realm / realm - core / pull / 1390 <nl> - long version ; <nl> - try { <nl> - version = table . sync ( ) ; <nl> - } catch ( DeletedRealmListException e ) { <nl> - / / Although this RealmResults won ' t be updated anymore , it is good to give user a chance to do update . <nl> - / / When the onChange called this time , user can use isValid to check if the RealmList has been deleted . <nl> - version = TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED ; <nl> - RealmLog . d ( " The parent RealmList has been deleted already . " ) ; <nl> - } <nl> + long version = table . sync ( ) ; <nl> if ( currentTableViewVersion ! = version ) { <nl> currentTableViewVersion = version ; <nl> for ( RealmChangeListener listener : listeners ) { <nl> listener . onChange ( ) ; <nl> } <nl> } <nl> - <nl> - / / Since the parent RealmList has been removed , this RealmResults won ' t be updated anymore . <nl> - / / We just remove the change listeners from this to avoid unnecessary callings in the future . <nl> - if ( version = = TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED ) { <nl> - listeners . clear ( ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / / FIXME : This is a temp fix , see https : / / github . com / realm / realm - core / pull / 1434 <nl> - private boolean syncToCheckIfValid ( String warningMessage ) { <nl> - if ( currentTableViewVersion = = TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED ) { <nl> - RealmLog . d ( warningMessage ) ; <nl> - return false ; <nl> - } <nl> - TableOrView tableOrView = getTable ( ) ; <nl> - if ( tableOrView instanceof TableView ) { <nl> - try { <nl> - tableOrView . sync ( ) ; <nl> - } catch ( DeletedRealmListException e ) { <nl> - RealmLog . d ( warningMessage ) ; <nl> - return false ; <nl> - } <nl> } <nl> - return true ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / DeletedRealmListException . java b / realm / realm - library / src / main / java / io / realm / internal / DeletedRealmListException . java <nl> deleted file mode 100644 <nl> index 308dfbc . . 0000000 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / DeletedRealmListException . java <nl> + + + / dev / null <nl> @ @ - 1 , 28 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2016 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package io . realm . internal ; <nl> - <nl> - import io . realm . exceptions . RealmException ; <nl> - <nl> - / * * <nl> - * Triggered from JNI level when accessing a RealmResults whose parent RealmList has been deleted already . <nl> - * / <nl> - @ Keep <nl> - public class DeletedRealmListException extends RealmException { <nl> - public DeletedRealmListException ( String detailMessage ) { <nl> - super ( detailMessage ) ; <nl> - } <nl> - } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Util . java b / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> index 632a9f6 . . 1f409e1 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> @ @ - 64 , 8 + 64 , 7 @ @ public class Util { <nl> Exception _ RowInvalid ( 13 ) , <nl> Exception _ EncryptionNotSupported ( 14 ) , <nl> Exception _ CrossTableLink ( 15 ) , <nl> - Exception _ BadVersion ( 16 ) , <nl> - Exception _ DeletedLinkView ( 17 ) ; <nl> + Exception _ BadVersion ( 16 ) ; <nl> <nl> private final int nativeTestcase ; <nl> Testcase ( int nativeValue ) {
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 6bda332 . . b023e5c 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 3 , 10 + 3 , 11 @ @ <nl> * Fixed a bug which might cause failure when loading the native library . <nl> * Fixed a bug which might trigger a timeout in Context . finalize ( ) . <nl> * Fixed a bug which might cause RealmObject . isValid ( ) to throw an exception if the object is deleted . <nl> - * Updated Realm core to version 0 . 89 . 7 <nl> - - fixed a potential stack overflow issue which might cause a crash when encryption was used . <nl> - - embedded crypto functions from OpenSSL into Realm dynamic lib to avoid random issues on some devices . <nl> * Fixed an issue preventing the call of listeners on refresh ( ) . <nl> + * Updated Realm core to version 0 . 89 . 8 <nl> + - Fixed a potential stack overflow issue which might cause a crash when encryption was used . <nl> + - Embedded crypto functions into Realm dynamic lib to avoid random issues on some devices . <nl> + - Throw RealmEncryptionNotSupportedException if the device doesn ' t support Realm encryption . At least one device type ( HTX One X ) contains system bugs that prevents Realm ' s encryption from functioning properly . This is now detected , and an exception is thrown when trying to open / create an encrypted Realm file . It ' s up to the application to catch this and decide if it ' s OK to proceed without encryption instead . <nl> <nl> 0 . 82 . 1 <nl> * Fixed a bug where using the wrong encryption key first caused the right key to be seen as invalid . <nl> diff - - git a / realm - jni / build . gradle b / realm - jni / build . gradle <nl> index 065ba0b . . 46de5eb 100644 <nl> - - - a / realm - jni / build . gradle <nl> + + + b / realm - jni / build . gradle <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - ext . coreVersion = ' 0 . 89 . 7 ' <nl> + ext . coreVersion = ' 0 . 89 . 8 ' <nl> ext . clang = false / / gcc is default for the NDK . It also produces smaller binaries <nl> <nl> def commonCflags = [ ' - std = c + + 11 ' , ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ Util . cpp b / realm - jni / src / io _ realm _ internal _ Util . cpp <nl> index 77e1ce5 . . aac1a54 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ Util . cpp <nl> + + + b / realm - jni / src / io _ realm _ internal _ Util . cpp <nl> @ @ - 102 , 7 + 102 , 6 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeTestcase ( <nl> if ( dotest ) <nl> ThrowException ( env , UnsupportedOperation , " parm1 " , " parm2 " ) ; <nl> break ; <nl> - ThrowException ( env , OutOfMemory , " parm1 " , " parm2 " ) ; <nl> case OutOfMemory : <nl> expect = " io . realm . internal . OutOfMemoryError : parm1 parm2 " ; <nl> if ( dotest ) <nl> @ @ - 121 , 7 + 120 , 12 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeTestcase ( <nl> case RowInvalid : <nl> expect = " java . lang . IllegalStateException : Illegal State : parm1 " ; <nl> if ( dotest ) <nl> - ThrowException ( env , TableInvalid , " parm1 " , " parm2 " ) ; <nl> + ThrowException ( env , RowInvalid , " parm1 " , " parm2 " ) ; <nl> + break ; <nl> + case EncryptionNotSupported : <nl> + expect = " io . realm . exceptions . RealmEncryptionNotSupportedException : parm1 " ; <nl> + if ( dotest ) <nl> + ThrowException ( env , EncryptionNotSupported , " parm1 " , " parm2 " ) ; <nl> break ; <nl> } <nl> if ( dotest ) { <nl> diff - - git a / realm - jni / src / util . cpp b / realm - jni / src / util . cpp <nl> index 70b22e9 . . 3028e57 100644 <nl> - - - a / realm - jni / src / util . cpp <nl> + + + b / realm - jni / src / util . cpp <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> # include < stdexcept > <nl> <nl> # include < realm / util / assert . hpp > <nl> + # include < realm / util / encryption _ not _ supported _ exception . hpp > <nl> # include " utf8 . hpp " <nl> <nl> # include " util . hpp " <nl> @ @ - 33 , 6 + 34 , 10 @ @ void ConvertException ( JNIEnv * env , const char * file , int line ) <nl> try { <nl> throw ; <nl> } <nl> + catch ( realm : : util : : EncryptionNotSupportedOnThisDevice & e ) { <nl> + ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> + ThrowException ( env , EncryptionNotSupported , ss . str ( ) ) ; <nl> + } <nl> catch ( std : : bad _ alloc & e ) { <nl> ss < < e . what ( ) < < " in " < < file < < " line " < < line ; <nl> ThrowException ( env , OutOfMemory , ss . str ( ) ) ; <nl> @ @ - 126 , 6 + 131 , 11 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , const std : : string & cla <nl> jExceptionClass = env - > FindClass ( " java / lang / IllegalStateException " ) ; <nl> message = " Illegal State : " + classStr ; <nl> break ; <nl> + <nl> + case EncryptionNotSupported : <nl> + jExceptionClass = env - > FindClass ( " io / realm / exceptions / RealmEncryptionNotSupportedException " ) ; <nl> + message = classStr ; <nl> + break ; <nl> } <nl> if ( jExceptionClass ! = NULL ) { <nl> env - > ThrowNew ( jExceptionClass , message . c _ str ( ) ) ; <nl> diff - - git a / realm - jni / src / util . hpp b / realm - jni / src / util . hpp <nl> index 9023b72 . . 22dfb3f 100644 <nl> - - - a / realm - jni / src / util . hpp <nl> + + + b / realm - jni / src / util . hpp <nl> @ @ - 102 , 7 + 102 , 6 @ @ std : : string num _ to _ string ( T pNumber ) <nl> # define ROW ( x ) reinterpret _ cast < realm : : Row * > ( x ) <nl> <nl> / / Exception handling <nl> - <nl> enum ExceptionKind { <nl> ClassNotFound = 0 , <nl> NoSuchField = 1 , <nl> @ @ - 118 , 7 + 117 , 9 @ @ enum ExceptionKind { <nl> OutOfMemory = 10 , <nl> FatalError = 11 , <nl> RuntimeError = 12 , <nl> - RowInvalid = 13 <nl> + RowInvalid = 13 , <nl> + EncryptionNotSupported = 14 <nl> + / / NOTE ! ! ! ! : Please also add test cases to Util . java when introducing a new exception kind . <nl> } ; <nl> <nl> void ConvertException ( JNIEnv * env , const char * file , int line ) ; <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 8284a1c . . 22b34d9 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 50 , 6 + 50 , 7 @ @ import java . util . concurrent . atomic . AtomicInteger ; <nl> import io . realm . exceptions . RealmException ; <nl> import io . realm . exceptions . RealmIOException ; <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> + import io . realm . exceptions . RealmEncryptionNotSupportedException ; <nl> import io . realm . internal . ColumnIndices ; <nl> import io . realm . internal . ColumnType ; <nl> import io . realm . internal . ImplicitTransaction ; <nl> @ @ - 198 , 6 + 199 , 7 @ @ public final class Realm implements Closeable { <nl> * @ param configuration Configuration used to open the Realm . <nl> * @ param autoRefresh { @ code true } if Realm should auto - refresh . { @ code false } otherwise . <nl> * @ throws IllegalArgumentException if trying to open an encrypted Realm with the wrong key . <nl> + * @ throws RealmEncryptionNotSupportedException if the device doesn ' t support Realm encryption . <nl> * / <nl> private Realm ( RealmConfiguration configuration , boolean autoRefresh ) { <nl> this . threadId = Thread . currentThread ( ) . getId ( ) ; <nl> @ @ - 375 , 6 + 377 , 7 @ @ public final class Realm implements Closeable { <nl> * <nl> * @ throws RealmMigrationNeededException If no migration has been provided by the configuration and the <nl> * model classes or version has has changed so a migration is required . <nl> + * @ throws RealmEncryptionNotSupportedException if the device doesn ' t support Realm encryption . <nl> * @ see RealmConfiguration for details on how to configure a Realm . <nl> * / <nl> public static Realm getInstance ( RealmConfiguration configuration ) { <nl> diff - - git a / realm / src / main / java / io / realm / RealmConfiguration . java b / realm / src / main / java / io / realm / RealmConfiguration . java <nl> index 4e530e2 . . fcf0b67 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 281 , 6 + 281 , 10 @ @ public class RealmConfiguration { <nl> <nl> / * * <nl> * Sets the 64 bit key used to encrypt and decrypt the Realm file . <nl> + * < p > <nl> + * Note that a few older devices do not support the encryption used by Realm . These devices will instead throw a <nl> + * { @ link io . realm . exceptions . RealmEncryptionNotSupportedException } when the Realm is opened . See <nl> + * { @ link io . realm . exceptions . RealmEncryptionNotSupportedException } for further details . <nl> * / <nl> public Builder encryptionKey ( byte [ ] key ) { <nl> if ( key = = null ) { <nl> diff - - git a / realm / src / main / java / io / realm / exceptions / RealmEncryptionNotSupportedException . java b / realm / src / main / java / io / realm / exceptions / RealmEncryptionNotSupportedException . java <nl> new file mode 100644 <nl> index 0000000 . . 97393d1 <nl> - - - / dev / null <nl> + + + b / realm / src / main / java / io / realm / exceptions / RealmEncryptionNotSupportedException . java <nl> @ @ - 0 , 0 + 1 , 31 @ @ <nl> + / * <nl> + * Copyright 2015 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . exceptions ; <nl> + <nl> + / * * <nl> + * On some devices ( HTC One X for example ) , for some reason , the system doesn ' t pass the right <nl> + * parameter ( siginfo _ t . si _ addr ) to the segfault signal handler which our encryption mechanism <nl> + * relies on . Realm will try to detect if this problem exists on the device when an encrypted <nl> + * Realm is being created / opened . A RealmEncryptionNotSupportedException will be thrown if this <nl> + * problem exists which means that encryption cannot be used on this device . <nl> + * / <nl> + @ SuppressWarnings ( " unused " ) / / Thrown by JNI <nl> + public class RealmEncryptionNotSupportedException extends RuntimeException { <nl> + public RealmEncryptionNotSupportedException ( String message ) { <nl> + super ( message ) ; <nl> + } <nl> + } <nl> diff - - git a / realm / src / main / java / io / realm / internal / Util . java b / realm / src / main / java / io / realm / internal / Util . java <nl> index 17037ad . . 0b0e611 100644 <nl> - - - a / realm / src / main / java / io / realm / internal / Util . java <nl> + + + b / realm / src / main / java / io / realm / internal / Util . java <nl> @ @ - 56 , 7 + 56 , 8 @ @ public class Util { <nl> Exception _ OutOfMemory ( 10 ) , <nl> Exception _ FatalError ( 11 ) , <nl> Exception _ RuntimeError ( 12 ) , <nl> - Exception _ RowInvalid ( 13 ) ; <nl> + Exception _ RowInvalid ( 13 ) , <nl> + Exception _ EncryptionNotSupported ( 14 ) ; <nl> <nl> private final int nativeTestcase ; <nl> Testcase ( int nativeValue ) {

TEST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 652cbc4 . . f3493e8 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 3 + 1 , 8 @ @ 
 + 0 . 87 . 5 
 + * Updated Realm Core to 0 . 96 . 1 
 + - IllegalStateException won ' t be thrown anymore in RealmResults . where ( ) if the RealmList which the RealmResults is created on has been deleted . Instead , the RealmResults will be treated as empty forever . 
 + 
 + 
 0 . 87 . 4 
 * Updated Realm Core to 0 . 96 . 0 
 - Fixed bug causing BadVersionException or crashing core when running async queries . 
 diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle 
 index cb27557 . . de2303a 100644 
 - - - a / realm / realm - jni / build . gradle 
 + + + b / realm / realm - jni / build . gradle 
 @ @ - 1 , 8 + 1 , 8 @ @ 
 import java . security . MessageDigest 
 
 - ext . coreVersion = ' 0 . 96 . 0 ' 
 + ext . coreVersion = ' 0 . 96 . 1 ' 
 / / empty or comment out this to disable hash checking 
 - ext . coreSha256Hash = ' 3163e03ece2fce7084076abc43b978c2a9978b53dfcbf7240ce5accbd2047990 ' 
 + ext . coreSha256Hash = ' eb32531428f5bc2cd7fe54f9e4905398d5506141d2cebe04c6c80a17ed33df5d ' 
 ext . forceDownloadCore = 
 project . hasProperty ( ' forceDownloadCore ' ) ? project . getProperty ( ' forceDownloadCore ' ) . toBoolean ( ) : false 
 / / gcc is default for the NDK . It also produces smaller binaries 
 diff - - git a / realm / realm - jni / src / io _ realm _ internal _ Util . cpp b / realm / realm - jni / src / io _ realm _ internal _ Util . cpp 
 index 0d6144d . . 03d298a 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ Util . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ Util . cpp 
 @ @ - 169 , 11 + 169 , 7 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeTestcase ( 
 if ( dotest ) 
 ThrowException ( env , BadVersion , " parm1 " , " parm2 " ) ; 
 break ; 
 - case DeletedLinkViewException : 
 - expect = " io . realm . internal . DeletedRealmListException : parm1 " ; 
 - if ( dotest ) 
 - ThrowException ( env , DeletedLinkViewException , " parm1 " , " parm2 " ) ; 
 - break ; 
 + 
 } 
 if ( dotest ) { 
 return NULL ; 
 diff - - git a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp 
 index 3e1a612 . . 248d180 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ tableview . cpp 
 @ @ - 24 , 36 + 24 , 22 @ @ 
 
 using namespace realm ; 
 
 - / / The validation will try to sync the table view as well . 
 - / / if you disable the validation , please remember to call sync _ if _ needed ( ) 
 - # define VIEW _ VALID _ AND _ IN _ SYNC ( env , ptr ) ( is _ view _ valid ( env , ptr ) & & sync _ table _ view ( env , ptr ) ) 
 - 
 - inline bool is _ view _ valid ( JNIEnv * env , jlong nativeViewPtr ) { 
 - if ( TV ( nativeViewPtr ) = = NULL ) { 
 - / / Should never get here 
 - ThrowException ( env , FatalError , " Null pointer of table view . " ) ; 
 - return false ; 
 - } 
 - if ( ! TV ( nativeViewPtr ) - > is _ attached ( ) ) { 
 - ThrowException ( env , TableInvalid , " The Realm has been closed and is no longer accessible . " ) ; 
 - return false ; 
 - } 
 - return true ; 
 - } 
 + / / if you disable the validation , please remember to call sync _ in _ needed ( ) 
 + # define VIEW _ VALID _ AND _ IN _ SYNC ( env , ptr ) view _ valid _ and _ in _ sync ( env , ptr ) 
 
 - / / Sync the TableView and return false if sync failed . 
 - inline bool sync _ table _ view ( JNIEnv * / * env * / , jlong nativeViewPtr ) { 
 - try { 
 + inline bool view _ valid _ and _ in _ sync ( JNIEnv * env , jlong nativeViewPtr ) { 
 + bool valid = ( TV ( nativeViewPtr ) ! = NULL ) ; 
 + if ( valid ) { 
 + if ( ! TV ( nativeViewPtr ) - > is _ attached ( ) ) { 
 + ThrowException ( env , TableInvalid , " The Realm has been closed and is no longer accessible . " ) ; 
 + return false ; 
 + } 
 TV ( nativeViewPtr ) - > sync _ if _ needed ( ) ; 
 - } catch ( realm : : DeletedLinkView & ) { 
 - / / FIXME : Temp fix for https : / / github . com / realm / realm - core / pull / 1434 
 - / / Better solution would be core only throw the exception when really necessary , methods like size 
 - / / should just return 0 . 
 - return false ; 
 } 
 - return true ; 
 + return valid ; 
 } 
 
 + 
 JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ createNativeTableView ( 
 JNIEnv * env , jobject , jobject , jlong ) 
 { 
 @ @ - 119 , 14 + 105 , 8 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetSourceRowIndex 
 ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong rowIndex ) 
 { 
 try { 
 - if ( ! is _ view _ valid ( env , nativeViewPtr ) ) { 
 + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) 
 return npos ; 
 - } 
 - if ( ! sync _ table _ view ( env , nativeViewPtr ) ) { 
 - TR _ ERR ( " The source LinkView created this TableView has been deleted . " ) ; 
 - / / Let it fall through . Since the size will return 0 , an ArrayIndexOutOfBoundsException 
 - / / will be thrown in ROW _ INDEX _ VALID check . 
 - } 
 if ( ! ROW _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , rowIndex ) ) 
 return npos ; 
 } CATCH _ STD ( ) 
 @ @ - 137 , 8 + 117 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnCount 
 ( JNIEnv * env , jobject , jlong nativeViewPtr ) 
 { 
 try { 
 - / / No need to sync here . 
 - if ( ! is _ view _ valid ( env , nativeViewPtr ) ) 
 + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) 
 return 0 ; 
 } CATCH _ STD ( ) 
 return TV ( nativeViewPtr ) - > get _ column _ count ( ) ; 
 @ @ - 148 , 8 + 127 , 7 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnName 
 ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong columnIndex ) 
 { 
 try { 
 - / / No need to sync here . 
 - if ( ! is _ view _ valid ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) 
 + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) 
 return NULL ; 
 return to _ jstring ( env , TV ( nativeViewPtr ) - > get _ column _ name ( S ( columnIndex ) ) ) ; 
 } CATCH _ STD ( ) 
 @ @ - 160 , 9 + 138 , 8 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnIndex 
 ( JNIEnv * env , jobject , jlong nativeViewPtr , jstring columnName ) 
 { 
 try { 
 - / / No need to sync here . 
 - if ( ! is _ view _ valid ( env , nativeViewPtr ) ) 
 - return 0 ; 
 + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) 
 + return 0 ; 
 
 JStringAccessor columnName2 ( env , columnName ) ; / / throws 
 return to _ jlong _ or _ not _ found ( TV ( nativeViewPtr ) - > get _ column _ index ( columnName2 ) ) ; / / noexcept 
 @ @ - 174 , 8 + 151 , 7 @ @ JNIEXPORT jint JNICALL Java _ io _ realm _ internal _ TableView _ nativeGetColumnType 
 ( JNIEnv * env , jobject , jlong nativeViewPtr , jlong columnIndex ) 
 { 
 try { 
 - / / No need to sync here . 
 - if ( ! is _ view _ valid ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) 
 + if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) | | ! COL _ INDEX _ VALID ( env , TV ( nativeViewPtr ) , columnIndex ) ) 
 return 0 ; 
 } CATCH _ STD ( ) 
 return static _ cast < int > ( TV ( nativeViewPtr ) - > get _ column _ type ( S ( columnIndex ) ) ) ; 
 diff - - git a / realm / realm - jni / src / util . cpp b / realm / realm - jni / src / util . cpp 
 index 291036a . . a32dde5 100644 
 - - - a / realm / realm - jni / src / util . cpp 
 + + + b / realm / realm - jni / src / util . cpp 
 @ @ - 53 , 10 + 53 , 6 @ @ void ConvertException ( JNIEnv * env , const char * file , int line ) 
 ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 ThrowException ( env , BadVersion , ss . str ( ) ) ; 
 } 
 - catch ( realm : : DeletedLinkView & e ) { 
 - ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 - ThrowException ( env , DeletedLinkViewException , ss . str ( ) ) ; 
 - } 
 catch ( std : : exception & e ) { 
 ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 ThrowException ( env , FatalError , ss . str ( ) ) ; 
 @ @ - 156 , 11 + 152 , 6 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , const std : : string & cla 
 jExceptionClass = env - > FindClass ( " io / realm / internal / async / BadVersionException " ) ; 
 message = classStr ; 
 break ; 
 - 
 - case DeletedLinkViewException : 
 - jExceptionClass = env - > FindClass ( " io / realm / internal / DeletedRealmListException " ) ; 
 - message = classStr ; 
 - break ; 
 } 
 if ( jExceptionClass ! = NULL ) { 
 env - > ThrowNew ( jExceptionClass , message . c _ str ( ) ) ; 
 diff - - git a / realm / realm - jni / src / util . hpp b / realm / realm - jni / src / util . hpp 
 index 18c31ce . . e976306 100644 
 - - - a / realm / realm - jni / src / util . hpp 
 + + + b / realm / realm - jni / src / util . hpp 
 @ @ - 121 , 8 + 121 , 7 @ @ enum ExceptionKind { 
 RuntimeError = 12 , 
 RowInvalid = 13 , 
 CrossTableLink = 15 , 
 - BadVersion = 16 , 
 - DeletedLinkViewException = 17 
 + BadVersion = 16 
 / / NOTE ! ! ! ! : Please also add test cases to Util . java when introducing a new exception kind . 
 } ; 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java 
 index 57be8fe . . 41ea159 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTest . java 
 @ @ - 1168 , 8 + 1168 , 9 @ @ public class RealmResultsTest extends AndroidTestCase { 
 return dogs ; 
 } 
 
 + / / It will still be treated as valid table view in core , just always be empty . 
 public void testisValidResultsBuiltOnDeletedLinkView ( ) { 
 - assertEquals ( false , populateRealmResultsOnDeletedLinkView ( ) . isValid ( ) ) ; 
 + assertEquals ( true , populateRealmResultsOnDeletedLinkView ( ) . isValid ( ) ) ; 
 } 
 
 public void testSizeResultsBuiltOnDeletedLinkView ( ) { 
 @ @ - 1235 , 11 + 1236 , 6 @ @ public class RealmResultsTest extends AndroidTestCase { 
 } 
 
 public void testWhereResultsBuiltOnDeletedLinkView ( ) { 
 - try { 
 - populateRealmResultsOnDeletedLinkView ( ) . where ( ) ; 
 - fail ( ) ; 
 - } catch ( IllegalStateException e ) { 
 - assertEquals ( " The RealmList which this RealmResults is created on has been deleted . " , e . getMessage ( ) ) ; 
 - } 
 + assertEquals ( 0 , populateRealmResultsOnDeletedLinkView ( ) . where ( ) . findAll ( ) . size ( ) ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java 
 index 60da724 . . ac88614 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTest . java 
 @ @ - 1912 , 7 + 1912 , 7 @ @ public class TypeBasedNotificationsTest extends AndroidTestCase { 
 @ Override 
 public void onChange ( ) { 
 if ( typebasedCommitInvocations . getAndIncrement ( ) = = 0 ) { 
 - assertFalse ( dogs . isValid ( ) ) ; 
 + assertTrue ( dogs . isValid ( ) ) ; 
 assertEquals ( 0 , dogs . size ( ) ) ; 
 } else { 
 fail ( " This listener should only be called once . " ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 25802e4 . . 10f6e39 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 29 , 7 + 29 , 6 @ @ import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . Future ; 
 
 import io . realm . exceptions . RealmException ; 
 - import io . realm . internal . DeletedRealmListException ; 
 import io . realm . internal . TableOrView ; 
 import io . realm . internal . TableQuery ; 
 import io . realm . internal . TableView ; 
 @ @ - 53 , 9 + 52 , 8 @ @ import rx . Observable ; 
 * Notice that a RealmResults is never { @ code null } not even in the case where it contains no objects . You should always 
 * use the size ( ) method to check if a RealmResults is empty or not . 
 * < p > 
 - * If a RealmResults is built on RealmList through { @ link RealmList # where ( ) } , it will become invalid when the source 
 - * RealmList gets deleted . When that happens , the RealmResults will behave like a empty RealmResults , but calling 
 - * { @ link # where ( ) } will throw an { @ link IllegalStateException } . Use { @ link # isValid } to detect this situation . 
 + * If a RealmResults is built on RealmList through { @ link RealmList # where ( ) } , it will become empty when the source 
 + * RealmList gets deleted . 
 * 
 * @ param < E > The class of objects in this list . 
 * @ see RealmQuery # findAll ( ) 
 @ @ - 71 , 7 + 69 , 6 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 
 private static final String TYPE _ MISMATCH = " Field ' % s ' : type mismatch - % s expected . " ; 
 private static final long TABLE _ VIEW _ VERSION _ NONE = - 1 ; 
 - private static final long TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED = - 2 ; 
 private long currentTableViewVersion = TABLE _ VIEW _ VERSION _ NONE ; 
 
 private final TableQuery query ; 
 @ @ - 145 , 11 + 142 , 7 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * @ return { @ code true } if still valid to use , { @ code false } otherwise . 
 * / 
 public boolean isValid ( ) { 
 - if ( realm = = null | | realm . isClosed ( ) ) { 
 - return false ; 
 - } 
 - 
 - return syncToCheckIfValid ( " Calling isValid on RealmResults whose parent RealmList has been deleted already . " ) ; 
 + return realm ! = null & & ! realm . isClosed ( ) ; 
 } 
 
 / * * 
 @ @ - 157 , 14 + 150 , 11 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * 
 * @ return a typed RealmQuery . 
 * @ see io . realm . RealmQuery 
 - * @ throws IllegalStateException if the RealmList which this RealmResults is created on has been deleted . 
 + * @ throws IllegalStateException if the corresponding Realm is closed or in an incorrect thread . 
 * / 
 public RealmQuery < E > where ( ) { 
 realm . checkIfValid ( ) ; 
 
 - if ( ! syncToCheckIfValid ( " Calling where on RealmResults whose parent RealmList has been deleted already . " ) ) { 
 - throw new IllegalStateException ( " The RealmList which this RealmResults is created on has been deleted . " ) ; 
 - } 
 return RealmQuery . createQueryFromResult ( this ) ; 
 } 
 
 @ @ - 869 , 48 + 859 , 13 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 / / but we have already registered listeners for it ) 
 if ( pendingQuery ! = null & & ! isCompleted ) return ; 
 
 - / / FIXME : still waiting for Core to provide a fix 
 - / / for crash when calling _ sync _ if _ needed on a cleared View . 
 - / / https : / / github . com / realm / realm - core / pull / 1390 
 - long version ; 
 - try { 
 - version = table . sync ( ) ; 
 - } catch ( DeletedRealmListException e ) { 
 - / / Although this RealmResults won ' t be updated anymore , it is good to give user a chance to do update . 
 - / / When the onChange called this time , user can use isValid to check if the RealmList has been deleted . 
 - version = TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED ; 
 - RealmLog . d ( " The parent RealmList has been deleted already . " ) ; 
 - } 
 + long version = table . sync ( ) ; 
 if ( currentTableViewVersion ! = version ) { 
 currentTableViewVersion = version ; 
 for ( RealmChangeListener listener : listeners ) { 
 listener . onChange ( ) ; 
 } 
 } 
 - 
 - / / Since the parent RealmList has been removed , this RealmResults won ' t be updated anymore . 
 - / / We just remove the change listeners from this to avoid unnecessary callings in the future . 
 - if ( version = = TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED ) { 
 - listeners . clear ( ) ; 
 - } 
 - } 
 - } 
 - 
 - / / FIXME : This is a temp fix , see https : / / github . com / realm / realm - core / pull / 1434 
 - private boolean syncToCheckIfValid ( String warningMessage ) { 
 - if ( currentTableViewVersion = = TABLE _ VIEW _ VERSION _ REALM _ LIST _ DELETED ) { 
 - RealmLog . d ( warningMessage ) ; 
 - return false ; 
 - } 
 - TableOrView tableOrView = getTable ( ) ; 
 - if ( tableOrView instanceof TableView ) { 
 - try { 
 - tableOrView . sync ( ) ; 
 - } catch ( DeletedRealmListException e ) { 
 - RealmLog . d ( warningMessage ) ; 
 - return false ; 
 - } 
 } 
 - return true ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / DeletedRealmListException . java b / realm / realm - library / src / main / java / io / realm / internal / DeletedRealmListException . java 
 deleted file mode 100644 
 index 308dfbc . . 0000000 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / DeletedRealmListException . java 
 + + + / dev / null 
 @ @ - 1 , 28 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2016 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package io . realm . internal ; 
 - 
 - import io . realm . exceptions . RealmException ; 
 - 
 - / * * 
 - * Triggered from JNI level when accessing a RealmResults whose parent RealmList has been deleted already . 
 - * / 
 - @ Keep 
 - public class DeletedRealmListException extends RealmException { 
 - public DeletedRealmListException ( String detailMessage ) { 
 - super ( detailMessage ) ; 
 - } 
 - } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Util . java b / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 index 632a9f6 . . 1f409e1 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 @ @ - 64 , 8 + 64 , 7 @ @ public class Util { 
 Exception _ RowInvalid ( 13 ) , 
 Exception _ EncryptionNotSupported ( 14 ) , 
 Exception _ CrossTableLink ( 15 ) , 
 - Exception _ BadVersion ( 16 ) , 
 - Exception _ DeletedLinkView ( 17 ) ; 
 + Exception _ BadVersion ( 16 ) ; 
 
 private final int nativeTestcase ; 
 Testcase ( int nativeValue ) {

NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 6bda332 . . b023e5c 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 3 , 10 + 3 , 11 @ @ 
 * Fixed a bug which might cause failure when loading the native library . 
 * Fixed a bug which might trigger a timeout in Context . finalize ( ) . 
 * Fixed a bug which might cause RealmObject . isValid ( ) to throw an exception if the object is deleted . 
 - * Updated Realm core to version 0 . 89 . 7 
 - - fixed a potential stack overflow issue which might cause a crash when encryption was used . 
 - - embedded crypto functions from OpenSSL into Realm dynamic lib to avoid random issues on some devices . 
 * Fixed an issue preventing the call of listeners on refresh ( ) . 
 + * Updated Realm core to version 0 . 89 . 8 
 + - Fixed a potential stack overflow issue which might cause a crash when encryption was used . 
 + - Embedded crypto functions into Realm dynamic lib to avoid random issues on some devices . 
 + - Throw RealmEncryptionNotSupportedException if the device doesn ' t support Realm encryption . At least one device type ( HTX One X ) contains system bugs that prevents Realm ' s encryption from functioning properly . This is now detected , and an exception is thrown when trying to open / create an encrypted Realm file . It ' s up to the application to catch this and decide if it ' s OK to proceed without encryption instead . 
 
 0 . 82 . 1 
 * Fixed a bug where using the wrong encryption key first caused the right key to be seen as invalid . 
 diff - - git a / realm - jni / build . gradle b / realm - jni / build . gradle 
 index 065ba0b . . 46de5eb 100644 
 - - - a / realm - jni / build . gradle 
 + + + b / realm - jni / build . gradle 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - ext . coreVersion = ' 0 . 89 . 7 ' 
 + ext . coreVersion = ' 0 . 89 . 8 ' 
 ext . clang = false / / gcc is default for the NDK . It also produces smaller binaries 
 
 def commonCflags = [ ' - std = c + + 11 ' , ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] 
 diff - - git a / realm - jni / src / io _ realm _ internal _ Util . cpp b / realm - jni / src / io _ realm _ internal _ Util . cpp 
 index 77e1ce5 . . aac1a54 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ Util . cpp 
 + + + b / realm - jni / src / io _ realm _ internal _ Util . cpp 
 @ @ - 102 , 7 + 102 , 6 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeTestcase ( 
 if ( dotest ) 
 ThrowException ( env , UnsupportedOperation , " parm1 " , " parm2 " ) ; 
 break ; 
 - ThrowException ( env , OutOfMemory , " parm1 " , " parm2 " ) ; 
 case OutOfMemory : 
 expect = " io . realm . internal . OutOfMemoryError : parm1 parm2 " ; 
 if ( dotest ) 
 @ @ - 121 , 7 + 120 , 12 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeTestcase ( 
 case RowInvalid : 
 expect = " java . lang . IllegalStateException : Illegal State : parm1 " ; 
 if ( dotest ) 
 - ThrowException ( env , TableInvalid , " parm1 " , " parm2 " ) ; 
 + ThrowException ( env , RowInvalid , " parm1 " , " parm2 " ) ; 
 + break ; 
 + case EncryptionNotSupported : 
 + expect = " io . realm . exceptions . RealmEncryptionNotSupportedException : parm1 " ; 
 + if ( dotest ) 
 + ThrowException ( env , EncryptionNotSupported , " parm1 " , " parm2 " ) ; 
 break ; 
 } 
 if ( dotest ) { 
 diff - - git a / realm - jni / src / util . cpp b / realm - jni / src / util . cpp 
 index 70b22e9 . . 3028e57 100644 
 - - - a / realm - jni / src / util . cpp 
 + + + b / realm - jni / src / util . cpp 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 # include < stdexcept > 
 
 # include < realm / util / assert . hpp > 
 + # include < realm / util / encryption _ not _ supported _ exception . hpp > 
 # include " utf8 . hpp " 
 
 # include " util . hpp " 
 @ @ - 33 , 6 + 34 , 10 @ @ void ConvertException ( JNIEnv * env , const char * file , int line ) 
 try { 
 throw ; 
 } 
 + catch ( realm : : util : : EncryptionNotSupportedOnThisDevice & e ) { 
 + ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 + ThrowException ( env , EncryptionNotSupported , ss . str ( ) ) ; 
 + } 
 catch ( std : : bad _ alloc & e ) { 
 ss < < e . what ( ) < < " in " < < file < < " line " < < line ; 
 ThrowException ( env , OutOfMemory , ss . str ( ) ) ; 
 @ @ - 126 , 6 + 131 , 11 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , const std : : string & cla 
 jExceptionClass = env - > FindClass ( " java / lang / IllegalStateException " ) ; 
 message = " Illegal State : " + classStr ; 
 break ; 
 + 
 + case EncryptionNotSupported : 
 + jExceptionClass = env - > FindClass ( " io / realm / exceptions / RealmEncryptionNotSupportedException " ) ; 
 + message = classStr ; 
 + break ; 
 } 
 if ( jExceptionClass ! = NULL ) { 
 env - > ThrowNew ( jExceptionClass , message . c _ str ( ) ) ; 
 diff - - git a / realm - jni / src / util . hpp b / realm - jni / src / util . hpp 
 index 9023b72 . . 22dfb3f 100644 
 - - - a / realm - jni / src / util . hpp 
 + + + b / realm - jni / src / util . hpp 
 @ @ - 102 , 7 + 102 , 6 @ @ std : : string num _ to _ string ( T pNumber ) 
 # define ROW ( x ) reinterpret _ cast < realm : : Row * > ( x ) 
 
 / / Exception handling 
 - 
 enum ExceptionKind { 
 ClassNotFound = 0 , 
 NoSuchField = 1 , 
 @ @ - 118 , 7 + 117 , 9 @ @ enum ExceptionKind { 
 OutOfMemory = 10 , 
 FatalError = 11 , 
 RuntimeError = 12 , 
 - RowInvalid = 13 
 + RowInvalid = 13 , 
 + EncryptionNotSupported = 14 
 + / / NOTE ! ! ! ! : Please also add test cases to Util . java when introducing a new exception kind . 
 } ; 
 
 void ConvertException ( JNIEnv * env , const char * file , int line ) ; 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 8284a1c . . 22b34d9 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 50 , 6 + 50 , 7 @ @ import java . util . concurrent . atomic . AtomicInteger ; 
 import io . realm . exceptions . RealmException ; 
 import io . realm . exceptions . RealmIOException ; 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 + import io . realm . exceptions . RealmEncryptionNotSupportedException ; 
 import io . realm . internal . ColumnIndices ; 
 import io . realm . internal . ColumnType ; 
 import io . realm . internal . ImplicitTransaction ; 
 @ @ - 198 , 6 + 199 , 7 @ @ public final class Realm implements Closeable { 
 * @ param configuration Configuration used to open the Realm . 
 * @ param autoRefresh { @ code true } if Realm should auto - refresh . { @ code false } otherwise . 
 * @ throws IllegalArgumentException if trying to open an encrypted Realm with the wrong key . 
 + * @ throws RealmEncryptionNotSupportedException if the device doesn ' t support Realm encryption . 
 * / 
 private Realm ( RealmConfiguration configuration , boolean autoRefresh ) { 
 this . threadId = Thread . currentThread ( ) . getId ( ) ; 
 @ @ - 375 , 6 + 377 , 7 @ @ public final class Realm implements Closeable { 
 * 
 * @ throws RealmMigrationNeededException If no migration has been provided by the configuration and the 
 * model classes or version has has changed so a migration is required . 
 + * @ throws RealmEncryptionNotSupportedException if the device doesn ' t support Realm encryption . 
 * @ see RealmConfiguration for details on how to configure a Realm . 
 * / 
 public static Realm getInstance ( RealmConfiguration configuration ) { 
 diff - - git a / realm / src / main / java / io / realm / RealmConfiguration . java b / realm / src / main / java / io / realm / RealmConfiguration . java 
 index 4e530e2 . . fcf0b67 100644 
 - - - a / realm / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 281 , 6 + 281 , 10 @ @ public class RealmConfiguration { 
 
 / * * 
 * Sets the 64 bit key used to encrypt and decrypt the Realm file . 
 + * < p > 
 + * Note that a few older devices do not support the encryption used by Realm . These devices will instead throw a 
 + * { @ link io . realm . exceptions . RealmEncryptionNotSupportedException } when the Realm is opened . See 
 + * { @ link io . realm . exceptions . RealmEncryptionNotSupportedException } for further details . 
 * / 
 public Builder encryptionKey ( byte [ ] key ) { 
 if ( key = = null ) { 
 diff - - git a / realm / src / main / java / io / realm / exceptions / RealmEncryptionNotSupportedException . java b / realm / src / main / java / io / realm / exceptions / RealmEncryptionNotSupportedException . java 
 new file mode 100644 
 index 0000000 . . 97393d1 
 - - - / dev / null 
 + + + b / realm / src / main / java / io / realm / exceptions / RealmEncryptionNotSupportedException . java 
 @ @ - 0 , 0 + 1 , 31 @ @ 
 + / * 
 + * Copyright 2015 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . exceptions ; 
 + 
 + / * * 
 + * On some devices ( HTC One X for example ) , for some reason , the system doesn ' t pass the right 
 + * parameter ( siginfo _ t . si _ addr ) to the segfault signal handler which our encryption mechanism 
 + * relies on . Realm will try to detect if this problem exists on the device when an encrypted 
 + * Realm is being created / opened . A RealmEncryptionNotSupportedException will be thrown if this 
 + * problem exists which means that encryption cannot be used on this device . 
 + * / 
 + @ SuppressWarnings ( " unused " ) / / Thrown by JNI 
 + public class RealmEncryptionNotSupportedException extends RuntimeException { 
 + public RealmEncryptionNotSupportedException ( String message ) { 
 + super ( message ) ; 
 + } 
 + } 
 diff - - git a / realm / src / main / java / io / realm / internal / Util . java b / realm / src / main / java / io / realm / internal / Util . java 
 index 17037ad . . 0b0e611 100644 
 - - - a / realm / src / main / java / io / realm / internal / Util . java 
 + + + b / realm / src / main / java / io / realm / internal / Util . java 
 @ @ - 56 , 7 + 56 , 8 @ @ public class Util { 
 Exception _ OutOfMemory ( 10 ) , 
 Exception _ FatalError ( 11 ) , 
 Exception _ RuntimeError ( 12 ) , 
 - Exception _ RowInvalid ( 13 ) ; 
 + Exception _ RowInvalid ( 13 ) , 
 + Exception _ EncryptionNotSupported ( 14 ) ; 
 
 private final int nativeTestcase ; 
 Testcase ( int nativeValue ) {
