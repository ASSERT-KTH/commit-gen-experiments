BLEU SCORE: 0.02383853510228548

TEST MSG: Use the motherboard identifier instead of the BIOS one
GENERATED MSG: Refactor on function containsDot

TEST DIFF (one line): diff - - git a / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java b / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java <nl> index a151800 . . aa32099 100644 <nl> - - - a / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java <nl> + + + b / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java <nl> @ @ - 94 , 7 + 94 , 7 @ @ public class ComputerIdentifierGenerator { <nl> <nl> private static String getWindowsIdentifier ( ) throws IOException , NoSuchAlgorithmException { <nl> Runtime runtime = Runtime . getRuntime ( ) ; <nl> - Process process = runtime . exec ( new String [ ] { " wmic " , " bios " , " get " , " serialnumber " } ) ; <nl> + Process process = runtime . exec ( new String [ ] { " wmic " , " csproduct " , " get " , " UUID " } ) ; <nl> <nl> String result = null ; <nl> InputStream is = process . getInputStream ( ) ; <nl> @ @ - 102 , 7 + 102 , 7 @ @ public class ComputerIdentifierGenerator { <nl> try { <nl> while ( sc . hasNext ( ) ) { <nl> String next = sc . next ( ) ; <nl> - if ( " SerialNumber " . equals ( next ) ) { <nl> + if ( next . contains ( " UUID " ) ) { <nl> result = sc . next ( ) . trim ( ) ; <nl> break ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm / src / main / java / io / realm / RealmQuery . java b / realm / src / main / java / io / realm / RealmQuery . java <nl> index d66942a . . 25d4e6f 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 91 , 17 + 91 , 7 @ @ public class RealmQuery < E extends RealmObject > { <nl> } <nl> <nl> private boolean containsDot ( String s ) { <nl> - int i ; <nl> - int n ; <nl> - <nl> - i = 0 ; <nl> - n = s . length ( ) ; <nl> - while ( i < n ) { <nl> - if ( s . charAt ( i ) = = ' . ' ) <nl> - return true ; <nl> - i + + ; <nl> - } <nl> - return false ; <nl> + return s . indexOf ( ' . ' ) ! = - 1 ; <nl> } <nl> <nl> private String [ ] splitString ( String s ) {

TEST DIFF:
diff - - git a / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java b / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java 
 index a151800 . . aa32099 100644 
 - - - a / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java 
 + + + b / realm - transformer / src / main / java / io / realm / transformer / ComputerIdentifierGenerator . java 
 @ @ - 94 , 7 + 94 , 7 @ @ public class ComputerIdentifierGenerator { 
 
 private static String getWindowsIdentifier ( ) throws IOException , NoSuchAlgorithmException { 
 Runtime runtime = Runtime . getRuntime ( ) ; 
 - Process process = runtime . exec ( new String [ ] { " wmic " , " bios " , " get " , " serialnumber " } ) ; 
 + Process process = runtime . exec ( new String [ ] { " wmic " , " csproduct " , " get " , " UUID " } ) ; 
 
 String result = null ; 
 InputStream is = process . getInputStream ( ) ; 
 @ @ - 102 , 7 + 102 , 7 @ @ public class ComputerIdentifierGenerator { 
 try { 
 while ( sc . hasNext ( ) ) { 
 String next = sc . next ( ) ; 
 - if ( " SerialNumber " . equals ( next ) ) { 
 + if ( next . contains ( " UUID " ) ) { 
 result = sc . next ( ) . trim ( ) ; 
 break ; 
 }

NEAREST DIFF:
diff - - git a / realm / src / main / java / io / realm / RealmQuery . java b / realm / src / main / java / io / realm / RealmQuery . java 
 index d66942a . . 25d4e6f 100644 
 - - - a / realm / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / src / main / java / io / realm / RealmQuery . java 
 @ @ - 91 , 17 + 91 , 7 @ @ public class RealmQuery < E extends RealmObject > { 
 } 
 
 private boolean containsDot ( String s ) { 
 - int i ; 
 - int n ; 
 - 
 - i = 0 ; 
 - n = s . length ( ) ; 
 - while ( i < n ) { 
 - if ( s . charAt ( i ) = = ' . ' ) 
 - return true ; 
 - i + + ; 
 - } 
 - return false ; 
 + return s . indexOf ( ' . ' ) ! = - 1 ; 
 } 
 
 private String [ ] splitString ( String s ) {
