BLEU SCORE: 0.06870636427700047

TEST MSG: add dontCleanJniFiles option to clean task
GENERATED MSG: delete jni . so files on clean

TEST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 15d86df . . 381383d 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 100 , 6 + 100 , 7 @ @ That command will generate : <nl> * ` . / gradlew javadoc ` will generate the Javadocs <nl> * ` . / gradlew monkeyExamples ` will run the monkey tests on all the examples <nl> * ` . / gradlew installRealmJava ` will install the Realm library and plugin to mavenLocal ( ) <nl> + * ` . / gradlew clean - PdontCleanJniFiles ` will remove all generated files except for JNI related files . This saves recompilation time a lot . <nl> <nl> Generating the Javadoc using the command above will report a large number of warnings . The Javadoc is generated , and we will fix the issue in the near future . <nl> <nl> diff - - git a / build . gradle b / build . gradle <nl> index 4f756b4 . . d6942de 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 176 , 6 + 176 , 9 @ @ task cleanRealm ( type : GradleBuild ) { <nl> group = ' Clean ' <nl> buildFile = file ( ' realm / build . gradle ' ) <nl> tasks = [ ' clean ' ] <nl> + if ( project . hasProperty ( ' dontCleanJniFiles ' ) ) { <nl> + startParameter . projectProperties = [ dontCleanJniFiles : " " ] <nl> + } <nl> } <nl> <nl> task cleanGradlePlugin ( type : GradleBuild ) { <nl> diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle <nl> index f3c7310 . . 8a9ed1f 100644 <nl> - - - a / realm / realm - jni / build . gradle <nl> + + + b / realm / realm - jni / build . gradle <nl> @ @ - 316 , 6 + 316 , 10 @ @ task buildAndroidJni ( group : ' build ' , description : ' Build the Android JNI shared <nl> } <nl> <nl> task clean ( type : Delete ) { <nl> + outputs . upToDateWhen { <nl> + project . hasProperty ( ' dontCleanJniFiles ' ) <nl> + } <nl> + <nl> delete project . buildDir <nl> <nl> delete fileTree ( dir : " $ { projectDir } / . . / realm - library / src / main / jniLibs / " , include : ' * * / librealm - jni * . so ' )
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 0ca1d69 . . a92bbf4 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 22 , 3 + 22 , 7 @ @ allprojects { <nl> jcenter ( ) <nl> } <nl> } <nl> + <nl> + task clean ( type : Delete ) { <nl> + delete rootProject . buildDir <nl> + } <nl> diff - - git a / realm - jni / build . gradle b / realm - jni / build . gradle <nl> index 9bcd5df . . c3ec47d 100644 <nl> - - - a / realm - jni / build . gradle <nl> + + + b / realm - jni / build . gradle <nl> @ @ - 261 , 23 + 261 , 23 @ @ task buildAndroidJni ( group : ' build ' , description : ' Build the Android JNI shared <nl> } <nl> } <nl> <nl> - task clean ( group : ' build ' , description : ' Clean the make artifacts ' ) < < { <nl> - targets . each { target - > <nl> - exec { <nl> - commandLine = [ <nl> - ' make ' , <nl> - ' - C ' , " $ { projectDir } / src " , <nl> - " BASE _ DENOM = $ { target . name } " , <nl> - ' LIB _ SUFFIX _ SHARED = . so ' , <nl> - ' clean ' <nl> - ] <nl> + task clean ( type : Delete ) { <nl> + delete project . buildDir <nl> + <nl> + delete fileTree ( dir : " $ { projectDir } / . . / realm / src / main / jniLibs / " , include : ' * * / librealm - jni * . so ' ) <nl> + delete fileTree ( dir : " $ { projectDir } / . . / build / output / jniLibs - unstripped / " , include : ' * * / librealm - jni * . so ' ) <nl> + <nl> + doLast { <nl> + targets . each { target - > <nl> + exec { <nl> + commandLine = [ <nl> + ' make ' , <nl> + ' - C ' , " $ { projectDir } / src " , <nl> + " BASE _ DENOM = $ { target . name } " , <nl> + ' LIB _ SUFFIX _ SHARED = . so ' , <nl> + ' clean ' <nl> + ] <nl> + } <nl> } <nl> } <nl> - exec { <nl> - commandLine = [ <nl> - ' rm ' , <nl> - ' - rf ' , <nl> - " $ { projectDir } / build / * " <nl> - ] <nl> - } <nl> }

TEST DIFF:
diff - - git a / README . md b / README . md 
 index 15d86df . . 381383d 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 100 , 6 + 100 , 7 @ @ That command will generate : 
 * ` . / gradlew javadoc ` will generate the Javadocs 
 * ` . / gradlew monkeyExamples ` will run the monkey tests on all the examples 
 * ` . / gradlew installRealmJava ` will install the Realm library and plugin to mavenLocal ( ) 
 + * ` . / gradlew clean - PdontCleanJniFiles ` will remove all generated files except for JNI related files . This saves recompilation time a lot . 
 
 Generating the Javadoc using the command above will report a large number of warnings . The Javadoc is generated , and we will fix the issue in the near future . 
 
 diff - - git a / build . gradle b / build . gradle 
 index 4f756b4 . . d6942de 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 176 , 6 + 176 , 9 @ @ task cleanRealm ( type : GradleBuild ) { 
 group = ' Clean ' 
 buildFile = file ( ' realm / build . gradle ' ) 
 tasks = [ ' clean ' ] 
 + if ( project . hasProperty ( ' dontCleanJniFiles ' ) ) { 
 + startParameter . projectProperties = [ dontCleanJniFiles : " " ] 
 + } 
 } 
 
 task cleanGradlePlugin ( type : GradleBuild ) { 
 diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle 
 index f3c7310 . . 8a9ed1f 100644 
 - - - a / realm / realm - jni / build . gradle 
 + + + b / realm / realm - jni / build . gradle 
 @ @ - 316 , 6 + 316 , 10 @ @ task buildAndroidJni ( group : ' build ' , description : ' Build the Android JNI shared 
 } 
 
 task clean ( type : Delete ) { 
 + outputs . upToDateWhen { 
 + project . hasProperty ( ' dontCleanJniFiles ' ) 
 + } 
 + 
 delete project . buildDir 
 
 delete fileTree ( dir : " $ { projectDir } / . . / realm - library / src / main / jniLibs / " , include : ' * * / librealm - jni * . so ' )

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 0ca1d69 . . a92bbf4 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 22 , 3 + 22 , 7 @ @ allprojects { 
 jcenter ( ) 
 } 
 } 
 + 
 + task clean ( type : Delete ) { 
 + delete rootProject . buildDir 
 + } 
 diff - - git a / realm - jni / build . gradle b / realm - jni / build . gradle 
 index 9bcd5df . . c3ec47d 100644 
 - - - a / realm - jni / build . gradle 
 + + + b / realm - jni / build . gradle 
 @ @ - 261 , 23 + 261 , 23 @ @ task buildAndroidJni ( group : ' build ' , description : ' Build the Android JNI shared 
 } 
 } 
 
 - task clean ( group : ' build ' , description : ' Clean the make artifacts ' ) < < { 
 - targets . each { target - > 
 - exec { 
 - commandLine = [ 
 - ' make ' , 
 - ' - C ' , " $ { projectDir } / src " , 
 - " BASE _ DENOM = $ { target . name } " , 
 - ' LIB _ SUFFIX _ SHARED = . so ' , 
 - ' clean ' 
 - ] 
 + task clean ( type : Delete ) { 
 + delete project . buildDir 
 + 
 + delete fileTree ( dir : " $ { projectDir } / . . / realm / src / main / jniLibs / " , include : ' * * / librealm - jni * . so ' ) 
 + delete fileTree ( dir : " $ { projectDir } / . . / build / output / jniLibs - unstripped / " , include : ' * * / librealm - jni * . so ' ) 
 + 
 + doLast { 
 + targets . each { target - > 
 + exec { 
 + commandLine = [ 
 + ' make ' , 
 + ' - C ' , " $ { projectDir } / src " , 
 + " BASE _ DENOM = $ { target . name } " , 
 + ' LIB _ SUFFIX _ SHARED = . so ' , 
 + ' clean ' 
 + ] 
 + } 
 } 
 } 
 - exec { 
 - commandLine = [ 
 - ' rm ' , 
 - ' - rf ' , 
 - " $ { projectDir } / build / * " 
 - ] 
 - } 
 }
