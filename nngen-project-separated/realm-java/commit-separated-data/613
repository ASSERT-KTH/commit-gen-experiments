BLEU SCORE: 0.06220117374063391

TEST MSG: Ignore callingOrdersOfListeners for now
GENERATED MSG: Fix race condition in test

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java <nl> index ac29db2 . . 90625fc 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import junit . framework . AssertionFailedError ; <nl> <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> @ @ - 954 , 6 + 955 , 7 @ @ public class NotificationsTest { <nl> } ) ; <nl> } <nl> <nl> + / / FIXME check if the SharedRealm Changed in handleAsyncTransactionCompleted and reenable this test . <nl> / / We precisely depend on the order of triggering change listeners right now . <nl> / / So it should be : <nl> / / 1 . Synced object listener <nl> @ @ - 964 , 6 + 966 , 7 @ @ public class NotificationsTest { <nl> / / If this case fails on your code , think twice before changing the test ! <nl> / / https : / / github . com / realm / realm - java / issues / 2408 is related to this test ! <nl> @ Test <nl> + @ Ignore ( " Listener on Realm might be trigger more times , ignore for now " ) <nl> @ RunTestInLooperThread <nl> public void callingOrdersOfListeners ( ) { <nl> final Realm realm = looperThread . realm ;
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / NotificationsTest . java b / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> index 0229713 . . cfd3461 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> @ @ - 494 , 6 + 494 , 7 @ @ public class NotificationsTest extends AndroidTestCase { <nl> Realm . deleteRealm ( realmConfiguration ) ; <nl> <nl> final CountDownLatch handlerNotified = new CountDownLatch ( 1 ) ; <nl> + final CountDownLatch backgroundThreadClosed = new CountDownLatch ( 1 ) ; <nl> <nl> / / Create Handler on Thread1 by opening a Realm instance <nl> new Thread ( " thread1 " ) { <nl> @ @ - 533 , 12 + 534 , 14 @ @ public class NotificationsTest extends AndroidTestCase { <nl> } ; <nl> realm . addChangeListener ( listener ) ; <nl> realm . close ( ) ; <nl> + backgroundThreadClosed . countDown ( ) ; <nl> Looper . loop ( ) ; <nl> } <nl> <nl> } . start ( ) ; <nl> <nl> / / Any REALM _ CHANGED message should now only reach the open Handler on Thread1 <nl> + backgroundThreadClosed . await ( ) ; <nl> Realm realm = Realm . getInstance ( realmConfiguration ) ; <nl> realm . beginTransaction ( ) ; <nl> realm . commitTransaction ( ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java 
 index ac29db2 . . 90625fc 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / NotificationsTest . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import junit . framework . AssertionFailedError ; 
 
 import org . junit . After ; 
 import org . junit . Before ; 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 @ @ - 954 , 6 + 955 , 7 @ @ public class NotificationsTest { 
 } ) ; 
 } 
 
 + / / FIXME check if the SharedRealm Changed in handleAsyncTransactionCompleted and reenable this test . 
 / / We precisely depend on the order of triggering change listeners right now . 
 / / So it should be : 
 / / 1 . Synced object listener 
 @ @ - 964 , 6 + 966 , 7 @ @ public class NotificationsTest { 
 / / If this case fails on your code , think twice before changing the test ! 
 / / https : / / github . com / realm / realm - java / issues / 2408 is related to this test ! 
 @ Test 
 + @ Ignore ( " Listener on Realm might be trigger more times , ignore for now " ) 
 @ RunTestInLooperThread 
 public void callingOrdersOfListeners ( ) { 
 final Realm realm = looperThread . realm ;

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / NotificationsTest . java b / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 index 0229713 . . cfd3461 100644 
 - - - a / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 + + + b / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 @ @ - 494 , 6 + 494 , 7 @ @ public class NotificationsTest extends AndroidTestCase { 
 Realm . deleteRealm ( realmConfiguration ) ; 
 
 final CountDownLatch handlerNotified = new CountDownLatch ( 1 ) ; 
 + final CountDownLatch backgroundThreadClosed = new CountDownLatch ( 1 ) ; 
 
 / / Create Handler on Thread1 by opening a Realm instance 
 new Thread ( " thread1 " ) { 
 @ @ - 533 , 12 + 534 , 14 @ @ public class NotificationsTest extends AndroidTestCase { 
 } ; 
 realm . addChangeListener ( listener ) ; 
 realm . close ( ) ; 
 + backgroundThreadClosed . countDown ( ) ; 
 Looper . loop ( ) ; 
 } 
 
 } . start ( ) ; 
 
 / / Any REALM _ CHANGED message should now only reach the open Handler on Thread1 
 + backgroundThreadClosed . await ( ) ; 
 Realm realm = Realm . getInstance ( realmConfiguration ) ; 
 realm . beginTransaction ( ) ; 
 realm . commitTransaction ( ) ;
