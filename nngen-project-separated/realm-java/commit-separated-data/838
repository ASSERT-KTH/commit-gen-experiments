BLEU SCORE: 0.11598118436136108

TEST MSG: Use proper release
GENERATED MSG: Removing LTO from debugging builds

TEST DIFF (one line): diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle <nl> index 0ab40e9 . . 195f8dc 100644 <nl> - - - a / realm / realm - jni / build . gradle <nl> + + + b / realm / realm - jni / build . gradle <nl> @ @ - 2 , 7 + 2 , 7 @ @ import java . security . MessageDigest <nl> <nl> ext . coreVersion = ' 0 . 95 . 7 ' <nl> / / empty or comment out this to disable hash checking <nl> - / / ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' <nl> + ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' <nl> ext . forceDownloadCore = <nl> project . hasProperty ( ' forceDownloadCore ' ) ? project . getProperty ( ' forceDownloadCore ' ) . toBoolean ( ) : false <nl> / / gcc is default for the NDK . It also produces smaller binaries <nl> @ @ - 18 , 7 + 18 , 7 @ @ ext . coreSourcePath = project . hasProperty ( ' coreSourcePath ' ) ? project . getProperty <nl> def commonCflags = [ ' - Os ' , ' - std = c + + 11 ' ] <nl> / / LTO and debugging don ' t play well together <nl> if ( ! ext . debugBuild ) { <nl> - commonCflags + = [ ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] <nl> + commonCflags + = [ ' - fvisibility = hidden ' , ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] <nl> } <nl> <nl> enum Compiler {
NEAREST DIFF (one line): diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle <nl> index 93e83ca . . 0ab40e9 100644 <nl> - - - a / realm / realm - jni / build . gradle <nl> + + + b / realm / realm - jni / build . gradle <nl> @ @ - 2 , 7 + 2 , 7 @ @ import java . security . MessageDigest <nl> <nl> ext . coreVersion = ' 0 . 95 . 7 ' <nl> / / empty or comment out this to disable hash checking <nl> - ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' <nl> + / / ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' <nl> ext . forceDownloadCore = <nl> project . hasProperty ( ' forceDownloadCore ' ) ? project . getProperty ( ' forceDownloadCore ' ) . toBoolean ( ) : false <nl> / / gcc is default for the NDK . It also produces smaller binaries <nl> @ @ - 15 , 7 + 15 , 11 @ @ ext . stripSymbols = project . hasProperty ( ' stripSymbols ' ) ? project . getProperty ( ' st <nl> / / core source code . <nl> ext . coreSourcePath = project . hasProperty ( ' coreSourcePath ' ) ? project . getProperty ( ' coreSourcePath ' ) : null <nl> <nl> - def commonCflags = [ ' - Os ' , ' - std = c + + 11 ' , ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] <nl> + def commonCflags = [ ' - Os ' , ' - std = c + + 11 ' ] <nl> + / / LTO and debugging don ' t play well together <nl> + if ( ! ext . debugBuild ) { <nl> + commonCflags + = [ ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] <nl> + } <nl> <nl> enum Compiler { <nl> GCC , CLANG <nl> diff - - git a / realm / realm - jni / project . mk b / realm / realm - jni / project . mk <nl> index 1f770c3 . . cf9b0e6 100644 <nl> - - - a / realm / realm - jni / project . mk <nl> + + + b / realm / realm - jni / project . mk <nl> @ @ - 52 , 7 + 52 , 7 @ @ ifeq ( $ ( REALM _ ANDROID ) , ) <nl> endif <nl> endif <nl> else <nl> - PROJECT _ CFLAGS + = - fvisibility = hidden - DANDROID - ffunction - sections - fdata - sections - flto <nl> + PROJECT _ CFLAGS + = - DANDROID <nl> CFLAGS _ OPTIM = - Os - DNDEBUG <nl> endif <nl>

TEST DIFF:
diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle 
 index 0ab40e9 . . 195f8dc 100644 
 - - - a / realm / realm - jni / build . gradle 
 + + + b / realm / realm - jni / build . gradle 
 @ @ - 2 , 7 + 2 , 7 @ @ import java . security . MessageDigest 
 
 ext . coreVersion = ' 0 . 95 . 7 ' 
 / / empty or comment out this to disable hash checking 
 - / / ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' 
 + ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' 
 ext . forceDownloadCore = 
 project . hasProperty ( ' forceDownloadCore ' ) ? project . getProperty ( ' forceDownloadCore ' ) . toBoolean ( ) : false 
 / / gcc is default for the NDK . It also produces smaller binaries 
 @ @ - 18 , 7 + 18 , 7 @ @ ext . coreSourcePath = project . hasProperty ( ' coreSourcePath ' ) ? project . getProperty 
 def commonCflags = [ ' - Os ' , ' - std = c + + 11 ' ] 
 / / LTO and debugging don ' t play well together 
 if ( ! ext . debugBuild ) { 
 - commonCflags + = [ ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] 
 + commonCflags + = [ ' - fvisibility = hidden ' , ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] 
 } 
 
 enum Compiler {

NEAREST DIFF:
diff - - git a / realm / realm - jni / build . gradle b / realm / realm - jni / build . gradle 
 index 93e83ca . . 0ab40e9 100644 
 - - - a / realm / realm - jni / build . gradle 
 + + + b / realm / realm - jni / build . gradle 
 @ @ - 2 , 7 + 2 , 7 @ @ import java . security . MessageDigest 
 
 ext . coreVersion = ' 0 . 95 . 7 ' 
 / / empty or comment out this to disable hash checking 
 - ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' 
 + / / ext . coreSha256Hash = ' 11c82f5da9b43b62fbf55fbd3aa61dc6956bc3483bbaa5f69262018144c8cc3c ' 
 ext . forceDownloadCore = 
 project . hasProperty ( ' forceDownloadCore ' ) ? project . getProperty ( ' forceDownloadCore ' ) . toBoolean ( ) : false 
 / / gcc is default for the NDK . It also produces smaller binaries 
 @ @ - 15 , 7 + 15 , 11 @ @ ext . stripSymbols = project . hasProperty ( ' stripSymbols ' ) ? project . getProperty ( ' st 
 / / core source code . 
 ext . coreSourcePath = project . hasProperty ( ' coreSourcePath ' ) ? project . getProperty ( ' coreSourcePath ' ) : null 
 
 - def commonCflags = [ ' - Os ' , ' - std = c + + 11 ' , ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] 
 + def commonCflags = [ ' - Os ' , ' - std = c + + 11 ' ] 
 + / / LTO and debugging don ' t play well together 
 + if ( ! ext . debugBuild ) { 
 + commonCflags + = [ ' - ffunction - sections ' , ' - fdata - sections ' , ' - flto ' ] 
 + } 
 
 enum Compiler { 
 GCC , CLANG 
 diff - - git a / realm / realm - jni / project . mk b / realm / realm - jni / project . mk 
 index 1f770c3 . . cf9b0e6 100644 
 - - - a / realm / realm - jni / project . mk 
 + + + b / realm / realm - jni / project . mk 
 @ @ - 52 , 7 + 52 , 7 @ @ ifeq ( $ ( REALM _ ANDROID ) , ) 
 endif 
 endif 
 else 
 - PROJECT _ CFLAGS + = - fvisibility = hidden - DANDROID - ffunction - sections - fdata - sections - flto 
 + PROJECT _ CFLAGS + = - DANDROID 
 CFLAGS _ OPTIM = - Os - DNDEBUG 
 endif 

