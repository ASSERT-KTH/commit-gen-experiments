BLEU SCORE: 0.014301724971930801

TEST MSG: Removed io . realm . internal . Util # javaPrint ( String )
GENERATED MSG: Still working on script to build a complete distribution package including all language bindings

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp <nl> index ab772f4 . . 2c26299 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp <nl> @ @ - 22 , 7 + 22 , 6 @ @ <nl> # include < realm / string _ data . hpp > <nl> # include < realm / unicode . hpp > <nl> <nl> - # include " mem _ usage . hpp " <nl> # include " util . hpp " <nl> <nl> using std : : string ; <nl> @ @ - 78 , 12 + 77 , 6 @ @ JNIEXPORT void JNI _ OnUnload ( JavaVM * vm , void * ) <nl> } <nl> } <nl> <nl> - <nl> - JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ Util _ nativeGetMemUsage ( JNIEnv * , jclass ) <nl> - { <nl> - return static _ cast < jlong > ( GetMemUsage ( ) ) ; <nl> - } <nl> - <nl> JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeGetTablePrefix ( JNIEnv * env , jclass ) <nl> { <nl> realm : : StringData sd ( TABLE _ PREFIX ) ; <nl> diff - - git a / realm / realm - library / src / main / cpp / mem _ usage . cpp b / realm / realm - library / src / main / cpp / mem _ usage . cpp <nl> deleted file mode 100644 <nl> index 21a81ef . . 0000000 <nl> - - - a / realm / realm - library / src / main / cpp / mem _ usage . cpp <nl> + + + / dev / null <nl> @ @ - 1 , 167 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2014 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - # include " mem _ usage . hpp " <nl> - <nl> - # ifndef REALM _ ENABLE _ MEM _ USAGE <nl> - <nl> - size _ t GetMemUsage ( ) <nl> - { <nl> - return 0 ; <nl> - } <nl> - <nl> - # elif defined ( _ MSC _ VER ) / / Microsoft Windows <nl> - <nl> - <nl> - # include < windows . h > <nl> - # include < psapi . h > <nl> - <nl> - namespace { <nl> - <nl> - / / Pre - declarations <nl> - DWORD CalculateWSPrivate ( DWORD processID ) ; <nl> - <nl> - / / Calculate Private Working Set <nl> - / / Source : http : / / www . codeproject . com / KB / cpp / XPWSPrivate . aspx <nl> - <nl> - int Compare ( const void * Val1 , const void * Val2 ) <nl> - { <nl> - if ( * ( PDWORD ) Val1 = = * ( PDWORD ) Val2 ) <nl> - return 0 ; <nl> - <nl> - return * ( PDWORD ) Val1 > * ( PDWORD ) Val2 ? 1 : - 1 ; <nl> - } <nl> - <nl> - DWORD dWorkingSetPages [ 1024 * 128 ] ; / / hold the working set <nl> - / / information get from QueryWorkingSet ( ) <nl> - DWORD dPageSize = 0x1000 ; <nl> - <nl> - DWORD CalculateWSPrivate ( DWORD processID ) <nl> - { <nl> - DWORD dSharedPages = 0 ; <nl> - DWORD dPrivatePages = 0 ; <nl> - DWORD dPageTablePages = 0 ; <nl> - <nl> - HANDLE hProcess = OpenProcess ( PROCESS _ QUERY _ INFORMATION | PROCESS _ VM _ READ , FALSE , processID ) ; <nl> - <nl> - if ( ! hProcess ) <nl> - return 0 ; <nl> - <nl> - _ _ try { <nl> - if ( ! QueryWorkingSet ( hProcess , dWorkingSetPages , sizeof ( dWorkingSetPages ) ) ) <nl> - _ _ leave ; <nl> - <nl> - DWORD dPages = dWorkingSetPages [ 0 ] ; <nl> - <nl> - qsort ( & dWorkingSetPages [ 1 ] , dPages , sizeof ( DWORD ) , Compare ) ; <nl> - <nl> - for ( DWORD i = 1 ; i < = dPages ; i + + ) { <nl> - DWORD dCurrentPageStatus = 0 ; <nl> - DWORD dCurrentPageAddress ; <nl> - DWORD dNextPageAddress ; <nl> - DWORD dNextPageFlags ; <nl> - DWORD dPageAddress = dWorkingSetPages [ i ] & 0xFFFFF000 ; <nl> - DWORD dPageFlags = dWorkingSetPages [ i ] & 0x00000FFF ; <nl> - <nl> - while ( i < = dPages ) / / iterate all pages <nl> - { <nl> - dCurrentPageStatus + + ; <nl> - <nl> - if ( i = = dPages ) / / if last page <nl> - break ; <nl> - <nl> - dCurrentPageAddress = dWorkingSetPages [ i ] & 0xFFFFF000 ; <nl> - dNextPageAddress = dWorkingSetPages [ i + 1 ] & 0xFFFFF000 ; <nl> - dNextPageFlags = dWorkingSetPages [ i + 1 ] & 0x00000FFF ; <nl> - <nl> - / / decide whether iterate further or exit <nl> - / / ( this is non - contiguous page or have different flags ) <nl> - if ( ( dNextPageAddress = = ( dCurrentPageAddress + dPageSize ) ) & & ( dNextPageFlags = = dPageFlags ) ) { <nl> - i + + ; <nl> - } <nl> - else <nl> - break ; <nl> - } <nl> - <nl> - if ( ( dPageAddress < 0xC0000000 ) | | ( dPageAddress > 0xE0000000 ) ) { <nl> - if ( dPageFlags & 0x100 ) / / this is shared one <nl> - dSharedPages + = dCurrentPageStatus ; <nl> - <nl> - else / / private one <nl> - dPrivatePages + = dCurrentPageStatus ; <nl> - } <nl> - else <nl> - dPageTablePages + = dCurrentPageStatus ; / / page table region <nl> - } <nl> - <nl> - DWORD dTotal = dPages * 4 ; <nl> - DWORD dShared = dSharedPages * 4 ; <nl> - DWORD WSPrivate = dTotal - dShared ; <nl> - <nl> - return WSPrivate ; <nl> - } <nl> - _ _ finally { <nl> - CloseHandle ( hProcess ) ; <nl> - } <nl> - return - 1 ; <nl> - } <nl> - <nl> - } / / anonymous namespace <nl> - <nl> - size _ t GetMemUsage ( ) <nl> - { <nl> - return CalculateWSPrivate ( GetCurrentProcessId ( ) ) ; <nl> - } <nl> - <nl> - <nl> - # elif defined ( _ _ APPLE _ _ ) / / Mac / Darwin <nl> - <nl> - <nl> - # include < mach / mach . h > <nl> - <nl> - size _ t GetMemUsage ( ) <nl> - { <nl> - struct task _ basic _ info t _ info ; <nl> - <nl> - mach _ msg _ type _ number _ t t _ info _ count = TASK _ BASIC _ INFO _ COUNT ; <nl> - <nl> - if ( KERN _ SUCCESS ! = task _ info ( mach _ task _ self ( ) , TASK _ BASIC _ INFO , ( task _ info _ t ) & t _ info , & t _ info _ count ) ) <nl> - return - 1 ; <nl> - <nl> - / / resident size is in t _ info . resident _ size ; <nl> - / / virtual size is in t _ info . virtual _ size ; <nl> - return t _ info . resident _ size ; <nl> - } <nl> - <nl> - <nl> - # else / / POSIX <nl> - <nl> - <nl> - # include < cstdio > <nl> - / / Debian package : libproc - dev <nl> - / / Linker flag : - lproc <nl> - / / Documentation : / usr / include / proc / readproc . h <nl> - # include < proc / readproc . h > <nl> - <nl> - size _ t GetMemUsage ( ) <nl> - { <nl> - struct proc _ t usage ; <nl> - look _ up _ our _ self ( & usage ) ; <nl> - return usage . vsize ; <nl> - } <nl> - <nl> - <nl> - # endif <nl> diff - - git a / realm / realm - library / src / main / cpp / mem _ usage . hpp b / realm / realm - library / src / main / cpp / mem _ usage . hpp <nl> deleted file mode 100644 <nl> index e3935c6 . . 0000000 <nl> - - - a / realm / realm - library / src / main / cpp / mem _ usage . hpp <nl> + + + / dev / null <nl> @ @ - 1 , 26 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2014 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - # ifndef _ _ SUPPORT _ MEM _ _ <nl> - # define _ _ SUPPORT _ MEM _ _ <nl> - <nl> - # include < cstdlib > / / size _ t <nl> - <nl> - / / / This function requires that REALM _ ENABLE _ MEM _ USAGE is specified <nl> - / / / during building . Otherwise it always returns zero . <nl> - size _ t GetMemUsage ( ) ; <nl> - <nl> - # endif / / _ _ SUPPORT _ MEM _ _ <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Util . java b / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> index 1e89b70 . . 2fc7778 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> @ @ - 32 , 17 + 32 , 6 @ @ import io . realm . log . RealmLog ; <nl> <nl> public class Util { <nl> <nl> - public static long getNativeMemUsage ( ) { <nl> - return nativeGetMemUsage ( ) ; <nl> - } <nl> - <nl> - static native long nativeGetMemUsage ( ) ; <nl> - <nl> - / / Called by JNI . Do not remove . <nl> - static void javaPrint ( String txt ) { <nl> - System . out . print ( txt ) ; <nl> - } <nl> - <nl> public static String getTablePrefix ( ) { <nl> return nativeGetTablePrefix ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / build . sh b / build . sh <nl> index e7fd438 . . 1f9fdbc 100644 <nl> - - - a / build . sh <nl> + + + b / build . sh <nl> @ @ - 4 , 7 + 4 , 7 @ @ TIGHTDB _ JAVA _ HOME = " $ ( pwd ) " <nl> MAKE = " make - j8 " <nl> <nl> # Setup OS specific stuff <nl> - OS = " $ ( uname - o ) " | | exit 1 <nl> + OS = " $ ( uname - s ) " | | exit 1 <nl> if [ " $ OS " = " Darwin " ] ; then <nl> MAKE = " $ MAKE CC = gcc " <nl> fi <nl> diff - - git a / tightdb _ jni / src / TableSpecUtil . cpp b / tightdb _ jni / src / TableSpecUtil . cpp <nl> index b0fa752 . . e0e295a 100644 <nl> - - - a / tightdb _ jni / src / TableSpecUtil . cpp <nl> + + + b / tightdb _ jni / src / TableSpecUtil . cpp <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> # include " util . h " <nl> - # include " tablespecutil . h " <nl> + # include " TableSpecUtil . h " <nl> # include " columntypeutil . h " <nl> <nl> using namespace tightdb ; <nl> @ @ - 107 , 4 + 107 , 4 @ @ void UpdateJTableSpecFromSpec ( JNIEnv * env , const Spec & spec , jobject jTableSpec ) <nl> 	 	 	 env - > CallVoidMethod ( jTableSpec , jAddColumnMethodId , static _ cast < jint > ( colType ) , env - > NewStringUTF ( colName ) ) ; <nl> 	 	 } <nl> 	 } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / tightdb _ jni / src / columntypeutil . cpp b / tightdb _ jni / src / columntypeutil . cpp <nl> index e4b399d . . b735568 100644 <nl> - - - a / tightdb _ jni / src / columntypeutil . cpp <nl> + + + b / tightdb _ jni / src / columntypeutil . cpp <nl> @ @ - 28 , 21 + 28 , 21 @ @ ColumnType GetColumnTypeFromJColumnType ( JNIEnv * env , jobject jColumnType ) <nl> <nl> jobject GetJColumnTypeFromColumnType ( JNIEnv * env , ColumnType columnType ) <nl> { <nl> - TR ( " jni : Enter GetJColumnTypeFromColumnType ( % d ) \ n " , columnType ) ; <nl> + TR ( ( env , " jni : Enter GetJColumnTypeFromColumnType ( % d ) \ n " , columnType ) ) ; <nl> 	 static jclass jColumnTypeClass = GetClass ( env , " com / tightdb / ColumnType " ) ; <nl> <nl> 	 if ( jColumnTypeClass = = NULL ) { <nl> - 	 TR ( " - - class is NULL \ n " ) ; <nl> + 	 TR ( ( env , " - - class is NULL \ n " ) ) ; <nl> return NULL ; <nl> } <nl> - TR ( " - - - 2 \ n " ) ; <nl> + TR ( ( env , " - - - 2 \ n " ) ) ; <nl> <nl> / / Couldn ' t figure out how to create a new enum on Java side and return as object . . . <nl> / / A workaround in java to not check for the correct ColumnTypeTable works . <nl> / * <nl> 	 jmethodID jColumnTypeConsId2 = env - > GetMethodID ( jColumnTypeClass , " < init > " , " ( ) V " ) ; <nl> if ( jColumnTypeConsId2 ) { <nl> - TR ( " - GOT INIT \ n " ) ; <nl> + TR ( ( env , " - GOT INIT \ n " ) ) ; <nl> return NULL ; <nl> } <nl> * / <nl> @ @ - 50 , 25 + 50 , 25 @ @ jobject GetJColumnTypeFromColumnType ( JNIEnv * env , ColumnType columnType ) <nl> / * <nl> jfieldID subtable _ id = env - > GetStaticFieldID ( jColumnTypeClass , " ColumnTypeTable " , " LColumnType ; " ) ; <nl> 	 if ( ! subtable _ id ) { <nl> - TR ( " - - subtable _ id is NULL \ n " ) ; <nl> + TR ( ( env , " - - subtable _ id is NULL \ n " ) ) ; <nl> return NULL ; <nl> } <nl> <nl> jobject jColumnTypeConsId = env - > GetStaticObjectField ( jColumnTypeClass , subtable _ id ) ; <nl> if ( jColumnTypeConsId = = NULL ) { <nl> - TR ( " - - - 2 . 5 " ) ; <nl> + TR ( ( env , " - - - 2 . 5 " ) ) ; <nl> ThrowException ( env , NoSuchMethod , " ColumnType " , " < init > " ) ; <nl> 	 return NULL ; <nl> 	 } <nl> return jColumnTypeConsId ; <nl> * / <nl> - TR ( " - - - 3 \ n " ) ; <nl> + TR ( ( env , " - - - 3 \ n " ) ) ; <nl> return NULL ; <nl> 	 / / jobject jColumnType = env - > NewObject ( jColumnTypeClass , jColumnTypeConsId , <nl> / / static _ cast < jint > ( columnType ) ) ; <nl> / / jobject jColumnType = env - > NewObject ( jColumnTypeClass , jColumnTypeConsId ) ; <nl> <nl> - / / TR ( " jni : New ColumnType % d . \ n " , columnType ) ; <nl> + / / TR ( ( env , " jni : New ColumnType % d . \ n " , columnType ) ) ; <nl> 	 / / return jColumnType ; <nl> <nl> } <nl> diff - - git a / tightdb _ jni / src / com _ tightdb _ Group . cpp b / tightdb _ jni / src / com _ tightdb _ Group . cpp <nl> index 71ff785 . . 1c8ad2a 100644 <nl> - - - a / tightdb _ jni / src / com _ tightdb _ Group . cpp <nl> + + + b / tightdb _ jni / src / com _ tightdb _ Group . cpp <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> # include " util . h " <nl> - # include " com _ tightdb _ group . h " <nl> + # include " com _ tightdb _ Group . h " <nl> <nl> using namespace tightdb ; <nl> <nl> @ @ - 7 , 7 + 7 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ ( <nl> 	 JNIEnv * env , jobject jGroup ) <nl> { 	 <nl> 	 Group * ptr = new Group ( ) ; <nl> - TR ( " Group : : createNative ( ) : % x . \ n " , ptr ) ; <nl> + TR ( ( env , " Group : : createNative ( ) : % x . \ n " , ptr ) ) ; <nl> return reinterpret _ cast < jlong > ( ptr ) ; <nl> } <nl> <nl> @ @ - 35 , 7 + 35 , 7 @ @ inline bool groupIsValid ( JNIEnv * env , Group * pGroup ) { <nl> JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ Ljava _ lang _ String _ 2Z ( <nl> 	 JNIEnv * env , jobject jGroup , jstring jFileName , jboolean readOnly ) <nl> { 	 <nl> - TR ( " Group : : createNative ( file ) : " ) ; <nl> + TR ( ( env , " Group : : createNative ( file ) : " ) ) ; <nl> 	 const char * fileNameCharPtr = env - > GetStringUTFChars ( jFileName , NULL ) ; <nl> 	 if ( fileNameCharPtr = = NULL ) <nl> 	 	 return 0 ; / / Exception is thrown by GetStringUTFChars ( ) <nl> @ @ - 43 , 47 + 43 , 47 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ Ljava _ lang _ String _ 2 <nl> 	 Group * pGroup = new Group ( fileNameCharPtr , readOnly ! = 0 ? GROUP _ READONLY : GROUP _ DEFAULT ) ; <nl> 	 if ( ! groupIsValid ( env , pGroup ) ) <nl> return 0 ; <nl> - TR ( " % x \ n " , pGroup ) ; <nl> + TR ( ( env , " % x \ n " , pGroup ) ) ; <nl> 	 return reinterpret _ cast < jlong > ( pGroup ) ; <nl> } <nl> <nl> JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ _ 3B ( <nl> 	 JNIEnv * env , jobject jGroup , jbyteArray jData ) <nl> { 	 <nl> - TR ( " Group : : createNative ( byteArray ) : " ) ; <nl> + TR ( ( env , " Group : : createNative ( byteArray ) : " ) ) ; <nl> 	 jbyte * jbytePtr = env - > GetByteArrayElements ( jData , NULL ) ; <nl> 	 if ( jbytePtr = = NULL ) { <nl> 	 	 ThrowException ( env , IllegalArgument , " Unable to fetch the buffer " ) ; <nl> 	 	 return 0 ; <nl> 	 } <nl> 	 jlong byteArrayLength = env - > GetArrayLength ( jData ) ; / / CHECK , FIXME : Does this return a long ? <nl> - TR ( " % d bytes . " , byteArrayLength ) ; <nl> + TR ( ( env , " % d bytes . " , byteArrayLength ) ) ; <nl> Group * pGroup = new Group ( ( const char * ) jbytePtr , S ( byteArrayLength ) ) ; <nl> 	 if ( ! groupIsValid ( env , pGroup ) ) <nl> return 0 ; <nl> - TR ( " % x \ n " , pGroup ) ; <nl> + TR ( ( env , " % x \ n " , pGroup ) ) ; <nl> 	 return reinterpret _ cast < jlong > ( pGroup ) ; <nl> } <nl> <nl> JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ Ljava _ nio _ ByteBuffer _ 2 ( <nl> 	 JNIEnv * env , jobject jTableBase , jobject jByteBuffer ) <nl> { 	 <nl> - TR ( " Group : : createNative ( binaryData ) : " ) ; <nl> + TR ( ( env , " Group : : createNative ( binaryData ) : " ) ) ; <nl> BinaryData data ; <nl> if ( ! GetBinaryData ( env , jByteBuffer , data ) ) <nl> return 0 ; <nl> - TR ( " % d bytes . " , data . len ) ; <nl> + TR ( ( env , " % d bytes . " , data . len ) ) ; <nl> 	 Group * pGroup = new Group ( data . pointer , data . len ) ; <nl> if ( ! groupIsValid ( env , pGroup ) ) <nl> return 0 ; <nl> - TR ( " % x \ n " , pGroup ) ; <nl> + TR ( ( env , " % x \ n " , pGroup ) ) ; <nl> 	 return reinterpret _ cast < jlong > ( pGroup ) ; <nl> } <nl> <nl> JNIEXPORT void JNICALL Java _ com _ tightdb _ Group _ nativeClose ( <nl> 	 JNIEnv * env , jobject jGroup , jlong nativeGroupPtr ) <nl> { 	 <nl> - TR ( " Group : : nativeClose ( % x ) \ n " , nativeGroupPtr ) ; <nl> + TR ( ( env , " Group : : nativeClose ( % x ) \ n " , nativeGroupPtr ) ) ; <nl> 	 delete G ( nativeGroupPtr ) ; <nl> } <nl> <nl> @ @ - 148 , 7 + 148 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ Group _ nativeWriteToFile ( <nl> JNIEXPORT jbyteArray JNICALL Java _ com _ tightdb _ Group _ nativeWriteToMem ( <nl> 	 JNIEnv * env , jobject jGroup , jlong nativeGroupPtr ) <nl> { 	 <nl> - TR ( " nativeWriteToMem ( % x ) \ n " , nativeGroupPtr ) ; <nl> + TR ( ( env , " nativeWriteToMem ( % x ) \ n " , nativeGroupPtr ) ) ; <nl> 	 size _ t len ; <nl> 	 char * memBuf = G ( nativeGroupPtr ) - > write _ to _ mem ( len ) ; <nl> jbyteArray jArray = NULL ; <nl> @ @ - 168 , 7 + 168 , 7 @ @ JNIEXPORT jbyteArray JNICALL Java _ com _ tightdb _ Group _ nativeWriteToMem ( <nl> JNIEXPORT jobject JNICALL Java _ com _ tightdb _ Group _ nativeWriteToByteBuffer ( <nl> 	 JNIEnv * env , jobject jGroup , jlong nativeGroupPtr ) <nl> { 	 <nl> - TR ( " nativeWriteToByteBuffer ( % x ) \ n " , nativeGroupPtr ) ; <nl> + TR ( ( env , " nativeWriteToByteBuffer ( % x ) \ n " , nativeGroupPtr ) ) ; <nl> 	 size _ t len ; <nl> 	 char * memValue = G ( nativeGroupPtr ) - > write _ to _ mem ( len ) ; <nl> 	 if ( len < = MAX _ JLONG ) { <nl> diff - - git a / tightdb _ jni / src / com _ tightdb _ TableBase . cpp b / tightdb _ jni / src / com _ tightdb _ TableBase . cpp <nl> index bfcb833 . . 255591d 100644 <nl> - - - a / tightdb _ jni / src / com _ tightdb _ TableBase . cpp <nl> + + + b / tightdb _ jni / src / com _ tightdb _ TableBase . cpp <nl> @ @ - 1 , 9 + 1 , 9 @ @ <nl> # include " util . h " <nl> # include " mixedutil . h " <nl> - # include " com _ tightdb _ tableBase . h " <nl> + # include " com _ tightdb _ TableBase . h " <nl> # include " columntypeutil . h " <nl> - # include " tablespecutil . h " <nl> - # include " java _ lang _ list _ util . h " <nl> + # include " TableSpecUtil . h " <nl> + # include " java _ lang _ List _ Util . h " <nl> # include " mixedutil . h " <nl> # include " tablebase _ tpl . hpp " <nl> <nl> @ @ - 16 , 7 + 16 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableBase _ nativeUpdateFromSpec ( <nl> if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) return ; <nl> <nl> 	 Table * pTable = TBL ( nativeTablePtr ) ; <nl> - TR ( " nativeUpdateFromSpec ( tblPtr % x , spec % x ) \ n " , pTable , jTableSpec ) ; <nl> + TR ( ( env , " nativeUpdateFromSpec ( tblPtr % x , spec % x ) \ n " , pTable , jTableSpec ) ) ; <nl> Spec & spec = pTable - > get _ spec ( ) ; <nl> 	 updateSpecFromJSpec ( env , spec , jTableSpec ) ; <nl> 	 pTable - > update _ from _ spec ( ) ; <nl> @ @ - 56 , 7 + 56 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ tightdb _ TableBase _ nativeGetTableSpec ( <nl> { <nl> if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) return 0 ; <nl> <nl> - TR ( " nativeGetTableSpec ( table % x ) \ n " , nativeTablePtr ) ; <nl> + TR ( ( env , " nativeGetTableSpec ( table % x ) \ n " , nativeTablePtr ) ) ; <nl> 	 static jmethodID jTableSpecConsId = GetTableSpecMethodID ( env , " < init > " , " ( ) V " ) ; <nl> 	 if ( jTableSpecConsId ) { <nl> / / Create a new TableSpec object in Java <nl> @ @ - 161 , 8 + 161 , 8 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableBase _ nativeInsertSubTable ( <nl> { <nl> 	 if ( ! INDEX _ INSERT _ VALID ( env , TBL ( nativeTablePtr ) , columnIndex , rowIndex ) ) return ; <nl> <nl> - TR ( " nativeInsertSubTable ( jTable : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) \ n " , <nl> - jTable , nativeTablePtr , columnIndex , rowIndex ) ; <nl> + TR ( ( env , " nativeInsertSubTable ( jTable : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) \ n " , <nl> + jTable , nativeTablePtr , columnIndex , rowIndex ) ) ; <nl> 	 TBL ( nativeTablePtr ) - > insert _ subtable ( S ( columnIndex ) , S ( rowIndex ) ) ; <nl> } <nl> <nl> @ @ - 250 , 8 + 250 , 8 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ TableBase _ nativeGetSubTable ( <nl> <nl> 	 Table * pSubTable = static _ cast < Table * > ( LangBindHelper : : get _ subtable _ ptr ( TBL ( nativeTablePtr ) , <nl> S ( columnIndex ) , S ( rowIndex ) ) ) ; <nl> - TR ( " nativeGetSubTable ( jTableBase : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) : % x \ n " , <nl> - jTableBase , nativeTablePtr , columnIndex , rowIndex , pSubTable ) ; <nl> + TR ( ( env , " nativeGetSubTable ( jTableBase : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) : % x \ n " , <nl> + jTableBase , nativeTablePtr , columnIndex , rowIndex , pSubTable ) ) ; <nl> return ( jlong ) pSubTable ; <nl> } <nl> <nl> @ @ - 496 , 13 + 496 , 13 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableBase _ nativeClose ( <nl> { <nl> if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) return ; <nl> <nl> - TR ( " nativeClose ( jTable : % x , nativeTablePtr : % x ) \ n " , jTable , nativeTablePtr ) ; <nl> + TR ( ( env , " nativeClose ( jTable : % x , nativeTablePtr : % x ) \ n " , jTable , nativeTablePtr ) ) ; <nl> LangBindHelper : : unbind _ table _ ref ( TBL ( nativeTablePtr ) ) ; <nl> } <nl> <nl> JNIEXPORT jlong JNICALL Java _ com _ tightdb _ TableBase _ createNative ( JNIEnv * env , jobject jTable ) <nl> { <nl> - TR ( " CreateNative ( jTable : % x ) \ n " , jTable ) ; <nl> + TR ( ( env , " CreateNative ( jTable : % x ) \ n " , jTable ) ) ; <nl> return reinterpret _ cast < jlong > ( LangBindHelper : : new _ table ( ) ) ; <nl> } <nl> <nl> diff - - git a / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp b / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp <nl> index c13a1ab . . 39785dc 100644 <nl> - - - a / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp <nl> + + + b / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> # include " util . h " <nl> - # include " com _ tightdb _ tablequery . h " <nl> + # include " com _ tightdb _ TableQuery . h " <nl> <nl> using namespace tightdb ; <nl> <nl> diff - - git a / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp b / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp <nl> index 3ad5b0d . . c354bdc 100644 <nl> - - - a / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp <nl> + + + b / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> # include " util . h " <nl> - # include " com _ tightdb _ tableviewbase . h " <nl> + # include " com _ tightdb _ TableViewBase . h " <nl> # include " mixedutil . h " <nl> # include " tablebase _ tpl . hpp " <nl> <nl> @ @ - 255 , 10 + 255 , 10 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ TableViewBase _ nativeFindAllString ( <nl> 	 const char * valueCharPtr = env - > GetStringUTFChars ( value , NULL ) ; <nl> if ( ! valueCharPtr ) <nl> return 0 ; <nl> - TR ( " nativeFindAllString ( col % d , string ' % s ' ) " , columnIndex , valueCharPtr ) ; <nl> + TR ( ( env , " nativeFindAllString ( col % d , string ' % s ' ) " , columnIndex , valueCharPtr ) ) ; <nl> <nl> 	 TableView * pResultView = new TableView ( TV ( nativeViewPtr ) - > find _ all _ string ( S ( columnIndex ) , valueCharPtr ) ) ; <nl> - 	 TR ( " - - resultview size = % lld . \ n " , pResultView - > size ( ) ) ; <nl> + 	 TR ( ( env , " - - resultview size = % lld . \ n " , pResultView - > size ( ) ) ) ; <nl> env - > ReleaseStringUTFChars ( value , valueCharPtr ) ; <nl> 	 return reinterpret _ cast < jlong > ( pResultView ) ; <nl> } <nl> @ @ - 307 , 4 + 307 , 4 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableViewBase _ nativeClose ( <nl> 	 delete TV ( nativeTableViewPtr ) ; <nl> } <nl> <nl> - / / FIXME : Add support for Count , Average , Remove <nl> \ No newline at end of file <nl> + / / FIXME : Add support for Count , Average , Remove <nl> diff - - git a / tightdb _ jni / src / java _ lang _ List _ Util . cpp b / tightdb _ jni / src / java _ lang _ List _ Util . cpp <nl> index 062f0c0 . . 6849cfb 100644 <nl> - - - a / tightdb _ jni / src / java _ lang _ List _ Util . cpp <nl> + + + b / tightdb _ jni / src / java _ lang _ List _ Util . cpp <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> # include " util . h " <nl> - # include " java _ lang _ list _ util . h " <nl> + # include " java _ lang _ List _ Util . h " <nl> <nl> jint java _ lang _ List _ size ( JNIEnv * env , jobject jList ) <nl> { <nl> @ @ - 27 , 4 + 27 , 4 @ @ jobject java _ lang _ List _ get ( JNIEnv * env , jobject jList , jint index ) <nl> return NULL ; <nl> 	 } <nl> return env - > CallObjectMethod ( jList , jListGetMethodId , index ) ; <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / tightdb _ jni / src / mixedutil . cpp b / tightdb _ jni / src / mixedutil . cpp <nl> index 19163d0 . . ea4cb1b 100644 <nl> - - - a / tightdb _ jni / src / mixedutil . cpp <nl> + + + b / tightdb _ jni / src / mixedutil . cpp <nl> @ @ - 42 , 7 + 42 , 7 @ @ jobject CreateJMixedFromMixed ( JNIEnv * env , Mixed & mixed ) <nl> if ( jMixedClass = = NULL ) <nl> return NULL ; <nl> <nl> - TR ( " CreateJMixedFromMixed ( type % d ) \ n " , mixed . get _ type ( ) ) ; <nl> + TR ( ( env , " CreateJMixedFromMixed ( type % d ) \ n " , mixed . get _ type ( ) ) ) ; <nl> 	 switch ( mixed . get _ type ( ) ) { <nl> 	 case COLUMN _ TYPE _ INT : <nl> 	 { <nl> @ @ - 92 , 7 + 92 , 7 @ @ jobject CreateJMixedFromMixed ( JNIEnv * env , Mixed & mixed ) <nl> case COLUMN _ TYPE _ TABLE : <nl> { <nl> / / param input : Table * t . <nl> - TR ( " - - Mixed ( COLUMN _ TYPE _ TABLE ) \ n " ) ; <nl> + TR ( ( env , " - - Mixed ( COLUMN _ TYPE _ TABLE ) \ n " ) ) ; <nl> jmethodID consId = GetMixedMethodID ( env , " < init > " , " ( Lcom / tightdb / ColumnType ; ) V " ) ; <nl> <nl> jobject jColumnType = NULL ; / / GetJColumnTypeFromColumnType ( env , COLUMN _ TYPE _ TABLE ) ; <nl> @ @ - 102 , 7 + 102 , 7 @ @ jobject CreateJMixedFromMixed ( JNIEnv * env , Mixed & mixed ) <nl> 	 default : <nl> 	 	 { <nl> 	 ThrowException ( env , IllegalArgument , " Invalid Mixed type . " ) ; <nl> - TR ( " \ n \ nERROR : Mixed type is not supported : % d . \ n \ n " , mixed . get _ type ( ) ) ; <nl> + TR ( ( env , " \ n \ nERROR : Mixed type is not supported : % d . \ n \ n " , mixed . get _ type ( ) ) ) ; <nl> 	 	 } <nl> 	 } <nl> <nl> @ @ - 170 , 4 + 170 , 4 @ @ jint GetMixedBinaryType ( JNIEnv * env , jobject jMixed ) <nl> 	 if ( jGetBinaryTypeMethodId ) <nl> 	 return env - > CallIntMethod ( jMixed , jGetBinaryTypeMethodId ) ; <nl> return 0 ; <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / tightdb _ jni / src / tablebase _ tpl . hpp b / tightdb _ jni / src / tablebase _ tpl . hpp <nl> index b41dad4 . . a010ea6 100644 <nl> - - - a / tightdb _ jni / src / tablebase _ tpl . hpp <nl> + + + b / tightdb _ jni / src / tablebase _ tpl . hpp <nl> @ @ - 113 , 10 + 113 , 10 @ @ void tbl _ nativeDoMixed ( M doMixed , T * pTable , JNIEnv * env , jlong columnIndex , jlo <nl> } <nl> default : <nl> { <nl> - TR _ ERR ( " ERROR : This type of mixed is not supported yet : % d . " , valueType ) ; <nl> + TR _ ERR ( ( env , " ERROR : This type of mixed is not supported yet : % d . " , valueType ) ) ; <nl> } <nl> } <nl> - TR _ ERR ( " \ nERROR : nativeSetMixed ( ) failed . \ n " ) ; <nl> + TR _ ERR ( ( env , " \ nERROR : nativeSetMixed ( ) failed . \ n " ) ) ; <nl> ThrowException ( env , IllegalArgument , " nativeSetMixed ( ) " ) ; <nl> } <nl> <nl> diff - - git a / tightdb _ jni / src / util . cpp b / tightdb _ jni / src / util . cpp <nl> index 0d38f97 . . 41287f2 100644 <nl> - - - a / tightdb _ jni / src / util . cpp <nl> + + + b / tightdb _ jni / src / util . cpp <nl> @ @ - 8 , 7 + 8 , 7 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , std : : string classStr , <nl> std : : string message ; <nl> jclass jExceptionClass = NULL ; <nl> <nl> - TR _ ERR ( " \ njni : ThrowingException % d , % s , % s . \ n " , exception , classStr . c _ str ( ) , itemStr . c _ str ( ) ) ; <nl> + TR _ ERR ( ( env , " \ njni : ThrowingException % d , % s , % s . \ n " , exception , classStr . c _ str ( ) , itemStr . c _ str ( ) ) ) ; <nl> <nl> switch ( exception ) { <nl> case ClassNotFound : <nl> @ @ - 54 , 7 + 54 , 7 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , std : : string classStr , <nl> if ( jExceptionClass ! = NULL ) <nl> env - > ThrowNew ( jExceptionClass , message . c _ str ( ) ) ; <nl> else { <nl> - TR _ ERR ( " \ nERROR : Couldn ' t throw exception . \ n " ) ; <nl> + TR _ ERR ( ( env , " \ nERROR : Couldn ' t throw exception . \ n " ) ) ; <nl> } <nl> <nl> env - > DeleteLocalRef ( jExceptionClass ) ; <nl> @ @ - 90 , 7 + 90 , 7 @ @ void jprintf ( JNIEnv * env , const char * format , . . . ) { <nl> char buf [ 200 ] ; <nl> va _ start ( argptr , format ) ; <nl> / / vfprintf ( stderr , format , argptr ) ; <nl> - vsnprintf _ s ( buf , 200 , format , argptr ) ; <nl> + vsnprintf ( buf , 200 , format , argptr ) ; <nl> jprint ( env , buf ) ; <nl> va _ end ( argptr ) ; <nl> } <nl> diff - - git a / tightdb _ jni / src / util . h b / tightdb _ jni / src / util . h <nl> index fc506cb . . 48b7389 100644 <nl> - - - a / tightdb _ jni / src / util . h <nl> + + + b / tightdb _ jni / src / util . h <nl> @ @ - 60 , 11 + 60 , 11 @ @ extern jclass GetClass ( JNIEnv * env , char * classStr ) ; <nl> extern int trace _ level ; <nl> <nl> # if TRACE <nl> - # define TR ( fmt , . . . ) if ( trace _ level > = 2 ) { jprintf ( env , fmt , # # _ _ VA _ ARGS _ _ ) ; } else { } <nl> - # define TR _ ERR ( fmt , . . . ) if ( trace _ level > = 1 ) { jprintf ( env , fmt , # # _ _ VA _ ARGS _ _ ) ; } else { } <nl> + # define TR ( args ) if ( trace _ level > = 2 ) { jprintf args ; } else { } <nl> + # define TR _ ERR ( args ) if ( trace _ level > = 1 ) { jprintf args ; } else { } <nl> # else <nl> - # define TR ( fmt , . . . ) <nl> - # define TR _ ERR ( fmt , . . . ) <nl> + # define TR ( args ) <nl> + # define TR _ ERR ( args ) <nl> # endif <nl> <nl> extern void jprintf ( JNIEnv * env , const char * fmt , . . . ) ; <nl> @ @ - 100 , 7 + 100 , 7 @ @ inline bool TableIsValid ( JNIEnv * env , Table * pTable ) <nl> if ( valid ) <nl> valid = pTable - > is _ valid ( ) ; <nl> if ( ! valid ) { <nl> - TR _ ERR ( " Table % x is invalid ! " , pTable ) ; <nl> + TR _ ERR ( ( env , " Table % x is invalid ! " , pTable ) ) ; <nl> ThrowException ( env , IllegalArgument , " Table is invalid . " ) ; <nl> } <nl> return valid ; <nl> @ @ - 116 , 7 + 116 , 7 @ @ inline bool RowIndexValid ( JNIEnv * env , T * pTable , jlong rowIndex ) <nl> <nl> bool rowErr = ( rowIndex < 0 ) | | ( S ( rowIndex ) > = pTable - > size ( ) ) ; <nl> if ( rowErr ) { <nl> - TR _ ERR ( " rowIndex % lld > % lld - invalid ! " , S ( rowIndex ) , pTable - > size ( ) ) ; <nl> + TR _ ERR ( ( env , " rowIndex % lld > % lld - invalid ! " , S ( rowIndex ) , pTable - > size ( ) ) ) ; <nl> ThrowException ( env , IndexOutOfBounds , " rowIndex > available rows . " ) ; <nl> } <nl> return ! rowErr ; <nl> @ @ - 132 , 7 + 132 , 7 @ @ inline bool ColIndexValid ( JNIEnv * env , T * pTable , jlong columnIndex ) <nl> <nl> bool colErr = ( S ( columnIndex ) > = pTable - > get _ column _ count ( ) ) | | ( columnIndex < 0 ) ; <nl> if ( colErr ) { <nl> - TR _ ERR ( " columnIndex % lld > % lld - invalid ! " , S ( columnIndex ) , pTable - > get _ column _ count ( ) ) ; <nl> + TR _ ERR ( ( env , " columnIndex % lld > % lld - invalid ! " , S ( columnIndex ) , pTable - > get _ column _ count ( ) ) ) ; <nl> ThrowException ( env , IndexOutOfBounds , " columnIndex > available columns . " ) ; <nl> } <nl> return ! colErr ; <nl> @ @ - 151 , 7 + 151 , 7 @ @ inline bool IndexInsertValid ( JNIEnv * env , T * pTable , jlong columnIndex , jlong ro <nl> return false ; <nl> bool rowErr = ( rowIndex < 0 ) | | ( S ( rowIndex ) > pTable - > size ( ) + 1 ) ; <nl> if ( rowErr ) { <nl> - TR _ ERR ( " rowIndex % lld > % lld - invalid ! " , rowIndex , pTable - > size ( ) ) ; <nl> + TR _ ERR ( ( env , " rowIndex % lld > % lld - invalid ! " , rowIndex , pTable - > size ( ) ) ) ; <nl> ThrowException ( env , IndexOutOfBounds , " rowIndex > available rows . " ) ; <nl> } <nl> return ! rowErr ; <nl> @ @ - 169 , 7 + 169 , 7 @ @ inline bool IndexAndTypeValid ( JNIEnv * env , T * pTable , jlong columnIndex , jlong r <nl> colType = pTable - > get _ mixed _ type ( col , row ) ; <nl> <nl> if ( colType ! = expectColType ) { <nl> - TR _ ERR ( " Expected columnType % d , but got % d . " , expectColType , pTable - > get _ column _ type ( col ) ) ; <nl> + TR _ ERR ( ( env , " Expected columnType % d , but got % d . " , expectColType , pTable - > get _ column _ type ( col ) ) ) ; <nl> 	 ThrowException ( env , IllegalArgument , " column type ! = ColumnTypeTable . " ) ; <nl> return false ; <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp 
 index ab772f4 . . 2c26299 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Util . cpp 
 @ @ - 22 , 7 + 22 , 6 @ @ 
 # include < realm / string _ data . hpp > 
 # include < realm / unicode . hpp > 
 
 - # include " mem _ usage . hpp " 
 # include " util . hpp " 
 
 using std : : string ; 
 @ @ - 78 , 12 + 77 , 6 @ @ JNIEXPORT void JNI _ OnUnload ( JavaVM * vm , void * ) 
 } 
 } 
 
 - 
 - JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ Util _ nativeGetMemUsage ( JNIEnv * , jclass ) 
 - { 
 - return static _ cast < jlong > ( GetMemUsage ( ) ) ; 
 - } 
 - 
 JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ Util _ nativeGetTablePrefix ( JNIEnv * env , jclass ) 
 { 
 realm : : StringData sd ( TABLE _ PREFIX ) ; 
 diff - - git a / realm / realm - library / src / main / cpp / mem _ usage . cpp b / realm / realm - library / src / main / cpp / mem _ usage . cpp 
 deleted file mode 100644 
 index 21a81ef . . 0000000 
 - - - a / realm / realm - library / src / main / cpp / mem _ usage . cpp 
 + + + / dev / null 
 @ @ - 1 , 167 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2014 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - # include " mem _ usage . hpp " 
 - 
 - # ifndef REALM _ ENABLE _ MEM _ USAGE 
 - 
 - size _ t GetMemUsage ( ) 
 - { 
 - return 0 ; 
 - } 
 - 
 - # elif defined ( _ MSC _ VER ) / / Microsoft Windows 
 - 
 - 
 - # include < windows . h > 
 - # include < psapi . h > 
 - 
 - namespace { 
 - 
 - / / Pre - declarations 
 - DWORD CalculateWSPrivate ( DWORD processID ) ; 
 - 
 - / / Calculate Private Working Set 
 - / / Source : http : / / www . codeproject . com / KB / cpp / XPWSPrivate . aspx 
 - 
 - int Compare ( const void * Val1 , const void * Val2 ) 
 - { 
 - if ( * ( PDWORD ) Val1 = = * ( PDWORD ) Val2 ) 
 - return 0 ; 
 - 
 - return * ( PDWORD ) Val1 > * ( PDWORD ) Val2 ? 1 : - 1 ; 
 - } 
 - 
 - DWORD dWorkingSetPages [ 1024 * 128 ] ; / / hold the working set 
 - / / information get from QueryWorkingSet ( ) 
 - DWORD dPageSize = 0x1000 ; 
 - 
 - DWORD CalculateWSPrivate ( DWORD processID ) 
 - { 
 - DWORD dSharedPages = 0 ; 
 - DWORD dPrivatePages = 0 ; 
 - DWORD dPageTablePages = 0 ; 
 - 
 - HANDLE hProcess = OpenProcess ( PROCESS _ QUERY _ INFORMATION | PROCESS _ VM _ READ , FALSE , processID ) ; 
 - 
 - if ( ! hProcess ) 
 - return 0 ; 
 - 
 - _ _ try { 
 - if ( ! QueryWorkingSet ( hProcess , dWorkingSetPages , sizeof ( dWorkingSetPages ) ) ) 
 - _ _ leave ; 
 - 
 - DWORD dPages = dWorkingSetPages [ 0 ] ; 
 - 
 - qsort ( & dWorkingSetPages [ 1 ] , dPages , sizeof ( DWORD ) , Compare ) ; 
 - 
 - for ( DWORD i = 1 ; i < = dPages ; i + + ) { 
 - DWORD dCurrentPageStatus = 0 ; 
 - DWORD dCurrentPageAddress ; 
 - DWORD dNextPageAddress ; 
 - DWORD dNextPageFlags ; 
 - DWORD dPageAddress = dWorkingSetPages [ i ] & 0xFFFFF000 ; 
 - DWORD dPageFlags = dWorkingSetPages [ i ] & 0x00000FFF ; 
 - 
 - while ( i < = dPages ) / / iterate all pages 
 - { 
 - dCurrentPageStatus + + ; 
 - 
 - if ( i = = dPages ) / / if last page 
 - break ; 
 - 
 - dCurrentPageAddress = dWorkingSetPages [ i ] & 0xFFFFF000 ; 
 - dNextPageAddress = dWorkingSetPages [ i + 1 ] & 0xFFFFF000 ; 
 - dNextPageFlags = dWorkingSetPages [ i + 1 ] & 0x00000FFF ; 
 - 
 - / / decide whether iterate further or exit 
 - / / ( this is non - contiguous page or have different flags ) 
 - if ( ( dNextPageAddress = = ( dCurrentPageAddress + dPageSize ) ) & & ( dNextPageFlags = = dPageFlags ) ) { 
 - i + + ; 
 - } 
 - else 
 - break ; 
 - } 
 - 
 - if ( ( dPageAddress < 0xC0000000 ) | | ( dPageAddress > 0xE0000000 ) ) { 
 - if ( dPageFlags & 0x100 ) / / this is shared one 
 - dSharedPages + = dCurrentPageStatus ; 
 - 
 - else / / private one 
 - dPrivatePages + = dCurrentPageStatus ; 
 - } 
 - else 
 - dPageTablePages + = dCurrentPageStatus ; / / page table region 
 - } 
 - 
 - DWORD dTotal = dPages * 4 ; 
 - DWORD dShared = dSharedPages * 4 ; 
 - DWORD WSPrivate = dTotal - dShared ; 
 - 
 - return WSPrivate ; 
 - } 
 - _ _ finally { 
 - CloseHandle ( hProcess ) ; 
 - } 
 - return - 1 ; 
 - } 
 - 
 - } / / anonymous namespace 
 - 
 - size _ t GetMemUsage ( ) 
 - { 
 - return CalculateWSPrivate ( GetCurrentProcessId ( ) ) ; 
 - } 
 - 
 - 
 - # elif defined ( _ _ APPLE _ _ ) / / Mac / Darwin 
 - 
 - 
 - # include < mach / mach . h > 
 - 
 - size _ t GetMemUsage ( ) 
 - { 
 - struct task _ basic _ info t _ info ; 
 - 
 - mach _ msg _ type _ number _ t t _ info _ count = TASK _ BASIC _ INFO _ COUNT ; 
 - 
 - if ( KERN _ SUCCESS ! = task _ info ( mach _ task _ self ( ) , TASK _ BASIC _ INFO , ( task _ info _ t ) & t _ info , & t _ info _ count ) ) 
 - return - 1 ; 
 - 
 - / / resident size is in t _ info . resident _ size ; 
 - / / virtual size is in t _ info . virtual _ size ; 
 - return t _ info . resident _ size ; 
 - } 
 - 
 - 
 - # else / / POSIX 
 - 
 - 
 - # include < cstdio > 
 - / / Debian package : libproc - dev 
 - / / Linker flag : - lproc 
 - / / Documentation : / usr / include / proc / readproc . h 
 - # include < proc / readproc . h > 
 - 
 - size _ t GetMemUsage ( ) 
 - { 
 - struct proc _ t usage ; 
 - look _ up _ our _ self ( & usage ) ; 
 - return usage . vsize ; 
 - } 
 - 
 - 
 - # endif 
 diff - - git a / realm / realm - library / src / main / cpp / mem _ usage . hpp b / realm / realm - library / src / main / cpp / mem _ usage . hpp 
 deleted file mode 100644 
 index e3935c6 . . 0000000 
 - - - a / realm / realm - library / src / main / cpp / mem _ usage . hpp 
 + + + / dev / null 
 @ @ - 1 , 26 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2014 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - # ifndef _ _ SUPPORT _ MEM _ _ 
 - # define _ _ SUPPORT _ MEM _ _ 
 - 
 - # include < cstdlib > / / size _ t 
 - 
 - / / / This function requires that REALM _ ENABLE _ MEM _ USAGE is specified 
 - / / / during building . Otherwise it always returns zero . 
 - size _ t GetMemUsage ( ) ; 
 - 
 - # endif / / _ _ SUPPORT _ MEM _ _ 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Util . java b / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 index 1e89b70 . . 2fc7778 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 @ @ - 32 , 17 + 32 , 6 @ @ import io . realm . log . RealmLog ; 
 
 public class Util { 
 
 - public static long getNativeMemUsage ( ) { 
 - return nativeGetMemUsage ( ) ; 
 - } 
 - 
 - static native long nativeGetMemUsage ( ) ; 
 - 
 - / / Called by JNI . Do not remove . 
 - static void javaPrint ( String txt ) { 
 - System . out . print ( txt ) ; 
 - } 
 - 
 public static String getTablePrefix ( ) { 
 return nativeGetTablePrefix ( ) ; 
 }

NEAREST DIFF:
diff - - git a / build . sh b / build . sh 
 index e7fd438 . . 1f9fdbc 100644 
 - - - a / build . sh 
 + + + b / build . sh 
 @ @ - 4 , 7 + 4 , 7 @ @ TIGHTDB _ JAVA _ HOME = " $ ( pwd ) " 
 MAKE = " make - j8 " 
 
 # Setup OS specific stuff 
 - OS = " $ ( uname - o ) " | | exit 1 
 + OS = " $ ( uname - s ) " | | exit 1 
 if [ " $ OS " = " Darwin " ] ; then 
 MAKE = " $ MAKE CC = gcc " 
 fi 
 diff - - git a / tightdb _ jni / src / TableSpecUtil . cpp b / tightdb _ jni / src / TableSpecUtil . cpp 
 index b0fa752 . . e0e295a 100644 
 - - - a / tightdb _ jni / src / TableSpecUtil . cpp 
 + + + b / tightdb _ jni / src / TableSpecUtil . cpp 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 # include " util . h " 
 - # include " tablespecutil . h " 
 + # include " TableSpecUtil . h " 
 # include " columntypeutil . h " 
 
 using namespace tightdb ; 
 @ @ - 107 , 4 + 107 , 4 @ @ void UpdateJTableSpecFromSpec ( JNIEnv * env , const Spec & spec , jobject jTableSpec ) 
 	 	 	 env - > CallVoidMethod ( jTableSpec , jAddColumnMethodId , static _ cast < jint > ( colType ) , env - > NewStringUTF ( colName ) ) ; 
 	 	 } 
 	 } 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / tightdb _ jni / src / columntypeutil . cpp b / tightdb _ jni / src / columntypeutil . cpp 
 index e4b399d . . b735568 100644 
 - - - a / tightdb _ jni / src / columntypeutil . cpp 
 + + + b / tightdb _ jni / src / columntypeutil . cpp 
 @ @ - 28 , 21 + 28 , 21 @ @ ColumnType GetColumnTypeFromJColumnType ( JNIEnv * env , jobject jColumnType ) 
 
 jobject GetJColumnTypeFromColumnType ( JNIEnv * env , ColumnType columnType ) 
 { 
 - TR ( " jni : Enter GetJColumnTypeFromColumnType ( % d ) \ n " , columnType ) ; 
 + TR ( ( env , " jni : Enter GetJColumnTypeFromColumnType ( % d ) \ n " , columnType ) ) ; 
 	 static jclass jColumnTypeClass = GetClass ( env , " com / tightdb / ColumnType " ) ; 
 
 	 if ( jColumnTypeClass = = NULL ) { 
 - 	 TR ( " - - class is NULL \ n " ) ; 
 + 	 TR ( ( env , " - - class is NULL \ n " ) ) ; 
 return NULL ; 
 } 
 - TR ( " - - - 2 \ n " ) ; 
 + TR ( ( env , " - - - 2 \ n " ) ) ; 
 
 / / Couldn ' t figure out how to create a new enum on Java side and return as object . . . 
 / / A workaround in java to not check for the correct ColumnTypeTable works . 
 / * 
 	 jmethodID jColumnTypeConsId2 = env - > GetMethodID ( jColumnTypeClass , " < init > " , " ( ) V " ) ; 
 if ( jColumnTypeConsId2 ) { 
 - TR ( " - GOT INIT \ n " ) ; 
 + TR ( ( env , " - GOT INIT \ n " ) ) ; 
 return NULL ; 
 } 
 * / 
 @ @ - 50 , 25 + 50 , 25 @ @ jobject GetJColumnTypeFromColumnType ( JNIEnv * env , ColumnType columnType ) 
 / * 
 jfieldID subtable _ id = env - > GetStaticFieldID ( jColumnTypeClass , " ColumnTypeTable " , " LColumnType ; " ) ; 
 	 if ( ! subtable _ id ) { 
 - TR ( " - - subtable _ id is NULL \ n " ) ; 
 + TR ( ( env , " - - subtable _ id is NULL \ n " ) ) ; 
 return NULL ; 
 } 
 
 jobject jColumnTypeConsId = env - > GetStaticObjectField ( jColumnTypeClass , subtable _ id ) ; 
 if ( jColumnTypeConsId = = NULL ) { 
 - TR ( " - - - 2 . 5 " ) ; 
 + TR ( ( env , " - - - 2 . 5 " ) ) ; 
 ThrowException ( env , NoSuchMethod , " ColumnType " , " < init > " ) ; 
 	 return NULL ; 
 	 } 
 return jColumnTypeConsId ; 
 * / 
 - TR ( " - - - 3 \ n " ) ; 
 + TR ( ( env , " - - - 3 \ n " ) ) ; 
 return NULL ; 
 	 / / jobject jColumnType = env - > NewObject ( jColumnTypeClass , jColumnTypeConsId , 
 / / static _ cast < jint > ( columnType ) ) ; 
 / / jobject jColumnType = env - > NewObject ( jColumnTypeClass , jColumnTypeConsId ) ; 
 
 - / / TR ( " jni : New ColumnType % d . \ n " , columnType ) ; 
 + / / TR ( ( env , " jni : New ColumnType % d . \ n " , columnType ) ) ; 
 	 / / return jColumnType ; 
 
 } 
 diff - - git a / tightdb _ jni / src / com _ tightdb _ Group . cpp b / tightdb _ jni / src / com _ tightdb _ Group . cpp 
 index 71ff785 . . 1c8ad2a 100644 
 - - - a / tightdb _ jni / src / com _ tightdb _ Group . cpp 
 + + + b / tightdb _ jni / src / com _ tightdb _ Group . cpp 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 # include " util . h " 
 - # include " com _ tightdb _ group . h " 
 + # include " com _ tightdb _ Group . h " 
 
 using namespace tightdb ; 
 
 @ @ - 7 , 7 + 7 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ ( 
 	 JNIEnv * env , jobject jGroup ) 
 { 	 
 	 Group * ptr = new Group ( ) ; 
 - TR ( " Group : : createNative ( ) : % x . \ n " , ptr ) ; 
 + TR ( ( env , " Group : : createNative ( ) : % x . \ n " , ptr ) ) ; 
 return reinterpret _ cast < jlong > ( ptr ) ; 
 } 
 
 @ @ - 35 , 7 + 35 , 7 @ @ inline bool groupIsValid ( JNIEnv * env , Group * pGroup ) { 
 JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ Ljava _ lang _ String _ 2Z ( 
 	 JNIEnv * env , jobject jGroup , jstring jFileName , jboolean readOnly ) 
 { 	 
 - TR ( " Group : : createNative ( file ) : " ) ; 
 + TR ( ( env , " Group : : createNative ( file ) : " ) ) ; 
 	 const char * fileNameCharPtr = env - > GetStringUTFChars ( jFileName , NULL ) ; 
 	 if ( fileNameCharPtr = = NULL ) 
 	 	 return 0 ; / / Exception is thrown by GetStringUTFChars ( ) 
 @ @ - 43 , 47 + 43 , 47 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ Ljava _ lang _ String _ 2 
 	 Group * pGroup = new Group ( fileNameCharPtr , readOnly ! = 0 ? GROUP _ READONLY : GROUP _ DEFAULT ) ; 
 	 if ( ! groupIsValid ( env , pGroup ) ) 
 return 0 ; 
 - TR ( " % x \ n " , pGroup ) ; 
 + TR ( ( env , " % x \ n " , pGroup ) ) ; 
 	 return reinterpret _ cast < jlong > ( pGroup ) ; 
 } 
 
 JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ _ 3B ( 
 	 JNIEnv * env , jobject jGroup , jbyteArray jData ) 
 { 	 
 - TR ( " Group : : createNative ( byteArray ) : " ) ; 
 + TR ( ( env , " Group : : createNative ( byteArray ) : " ) ) ; 
 	 jbyte * jbytePtr = env - > GetByteArrayElements ( jData , NULL ) ; 
 	 if ( jbytePtr = = NULL ) { 
 	 	 ThrowException ( env , IllegalArgument , " Unable to fetch the buffer " ) ; 
 	 	 return 0 ; 
 	 } 
 	 jlong byteArrayLength = env - > GetArrayLength ( jData ) ; / / CHECK , FIXME : Does this return a long ? 
 - TR ( " % d bytes . " , byteArrayLength ) ; 
 + TR ( ( env , " % d bytes . " , byteArrayLength ) ) ; 
 Group * pGroup = new Group ( ( const char * ) jbytePtr , S ( byteArrayLength ) ) ; 
 	 if ( ! groupIsValid ( env , pGroup ) ) 
 return 0 ; 
 - TR ( " % x \ n " , pGroup ) ; 
 + TR ( ( env , " % x \ n " , pGroup ) ) ; 
 	 return reinterpret _ cast < jlong > ( pGroup ) ; 
 } 
 
 JNIEXPORT jlong JNICALL Java _ com _ tightdb _ Group _ createNative _ _ Ljava _ nio _ ByteBuffer _ 2 ( 
 	 JNIEnv * env , jobject jTableBase , jobject jByteBuffer ) 
 { 	 
 - TR ( " Group : : createNative ( binaryData ) : " ) ; 
 + TR ( ( env , " Group : : createNative ( binaryData ) : " ) ) ; 
 BinaryData data ; 
 if ( ! GetBinaryData ( env , jByteBuffer , data ) ) 
 return 0 ; 
 - TR ( " % d bytes . " , data . len ) ; 
 + TR ( ( env , " % d bytes . " , data . len ) ) ; 
 	 Group * pGroup = new Group ( data . pointer , data . len ) ; 
 if ( ! groupIsValid ( env , pGroup ) ) 
 return 0 ; 
 - TR ( " % x \ n " , pGroup ) ; 
 + TR ( ( env , " % x \ n " , pGroup ) ) ; 
 	 return reinterpret _ cast < jlong > ( pGroup ) ; 
 } 
 
 JNIEXPORT void JNICALL Java _ com _ tightdb _ Group _ nativeClose ( 
 	 JNIEnv * env , jobject jGroup , jlong nativeGroupPtr ) 
 { 	 
 - TR ( " Group : : nativeClose ( % x ) \ n " , nativeGroupPtr ) ; 
 + TR ( ( env , " Group : : nativeClose ( % x ) \ n " , nativeGroupPtr ) ) ; 
 	 delete G ( nativeGroupPtr ) ; 
 } 
 
 @ @ - 148 , 7 + 148 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ Group _ nativeWriteToFile ( 
 JNIEXPORT jbyteArray JNICALL Java _ com _ tightdb _ Group _ nativeWriteToMem ( 
 	 JNIEnv * env , jobject jGroup , jlong nativeGroupPtr ) 
 { 	 
 - TR ( " nativeWriteToMem ( % x ) \ n " , nativeGroupPtr ) ; 
 + TR ( ( env , " nativeWriteToMem ( % x ) \ n " , nativeGroupPtr ) ) ; 
 	 size _ t len ; 
 	 char * memBuf = G ( nativeGroupPtr ) - > write _ to _ mem ( len ) ; 
 jbyteArray jArray = NULL ; 
 @ @ - 168 , 7 + 168 , 7 @ @ JNIEXPORT jbyteArray JNICALL Java _ com _ tightdb _ Group _ nativeWriteToMem ( 
 JNIEXPORT jobject JNICALL Java _ com _ tightdb _ Group _ nativeWriteToByteBuffer ( 
 	 JNIEnv * env , jobject jGroup , jlong nativeGroupPtr ) 
 { 	 
 - TR ( " nativeWriteToByteBuffer ( % x ) \ n " , nativeGroupPtr ) ; 
 + TR ( ( env , " nativeWriteToByteBuffer ( % x ) \ n " , nativeGroupPtr ) ) ; 
 	 size _ t len ; 
 	 char * memValue = G ( nativeGroupPtr ) - > write _ to _ mem ( len ) ; 
 	 if ( len < = MAX _ JLONG ) { 
 diff - - git a / tightdb _ jni / src / com _ tightdb _ TableBase . cpp b / tightdb _ jni / src / com _ tightdb _ TableBase . cpp 
 index bfcb833 . . 255591d 100644 
 - - - a / tightdb _ jni / src / com _ tightdb _ TableBase . cpp 
 + + + b / tightdb _ jni / src / com _ tightdb _ TableBase . cpp 
 @ @ - 1 , 9 + 1 , 9 @ @ 
 # include " util . h " 
 # include " mixedutil . h " 
 - # include " com _ tightdb _ tableBase . h " 
 + # include " com _ tightdb _ TableBase . h " 
 # include " columntypeutil . h " 
 - # include " tablespecutil . h " 
 - # include " java _ lang _ list _ util . h " 
 + # include " TableSpecUtil . h " 
 + # include " java _ lang _ List _ Util . h " 
 # include " mixedutil . h " 
 # include " tablebase _ tpl . hpp " 
 
 @ @ - 16 , 7 + 16 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableBase _ nativeUpdateFromSpec ( 
 if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) return ; 
 
 	 Table * pTable = TBL ( nativeTablePtr ) ; 
 - TR ( " nativeUpdateFromSpec ( tblPtr % x , spec % x ) \ n " , pTable , jTableSpec ) ; 
 + TR ( ( env , " nativeUpdateFromSpec ( tblPtr % x , spec % x ) \ n " , pTable , jTableSpec ) ) ; 
 Spec & spec = pTable - > get _ spec ( ) ; 
 	 updateSpecFromJSpec ( env , spec , jTableSpec ) ; 
 	 pTable - > update _ from _ spec ( ) ; 
 @ @ - 56 , 7 + 56 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ tightdb _ TableBase _ nativeGetTableSpec ( 
 { 
 if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) return 0 ; 
 
 - TR ( " nativeGetTableSpec ( table % x ) \ n " , nativeTablePtr ) ; 
 + TR ( ( env , " nativeGetTableSpec ( table % x ) \ n " , nativeTablePtr ) ) ; 
 	 static jmethodID jTableSpecConsId = GetTableSpecMethodID ( env , " < init > " , " ( ) V " ) ; 
 	 if ( jTableSpecConsId ) { 
 / / Create a new TableSpec object in Java 
 @ @ - 161 , 8 + 161 , 8 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableBase _ nativeInsertSubTable ( 
 { 
 	 if ( ! INDEX _ INSERT _ VALID ( env , TBL ( nativeTablePtr ) , columnIndex , rowIndex ) ) return ; 
 
 - TR ( " nativeInsertSubTable ( jTable : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) \ n " , 
 - jTable , nativeTablePtr , columnIndex , rowIndex ) ; 
 + TR ( ( env , " nativeInsertSubTable ( jTable : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) \ n " , 
 + jTable , nativeTablePtr , columnIndex , rowIndex ) ) ; 
 	 TBL ( nativeTablePtr ) - > insert _ subtable ( S ( columnIndex ) , S ( rowIndex ) ) ; 
 } 
 
 @ @ - 250 , 8 + 250 , 8 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ TableBase _ nativeGetSubTable ( 
 
 	 Table * pSubTable = static _ cast < Table * > ( LangBindHelper : : get _ subtable _ ptr ( TBL ( nativeTablePtr ) , 
 S ( columnIndex ) , S ( rowIndex ) ) ) ; 
 - TR ( " nativeGetSubTable ( jTableBase : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) : % x \ n " , 
 - jTableBase , nativeTablePtr , columnIndex , rowIndex , pSubTable ) ; 
 + TR ( ( env , " nativeGetSubTable ( jTableBase : % x , nativeTablePtr : % x , colIdx : % lld , rowIdx : % lld ) : % x \ n " , 
 + jTableBase , nativeTablePtr , columnIndex , rowIndex , pSubTable ) ) ; 
 return ( jlong ) pSubTable ; 
 } 
 
 @ @ - 496 , 13 + 496 , 13 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableBase _ nativeClose ( 
 { 
 if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) return ; 
 
 - TR ( " nativeClose ( jTable : % x , nativeTablePtr : % x ) \ n " , jTable , nativeTablePtr ) ; 
 + TR ( ( env , " nativeClose ( jTable : % x , nativeTablePtr : % x ) \ n " , jTable , nativeTablePtr ) ) ; 
 LangBindHelper : : unbind _ table _ ref ( TBL ( nativeTablePtr ) ) ; 
 } 
 
 JNIEXPORT jlong JNICALL Java _ com _ tightdb _ TableBase _ createNative ( JNIEnv * env , jobject jTable ) 
 { 
 - TR ( " CreateNative ( jTable : % x ) \ n " , jTable ) ; 
 + TR ( ( env , " CreateNative ( jTable : % x ) \ n " , jTable ) ) ; 
 return reinterpret _ cast < jlong > ( LangBindHelper : : new _ table ( ) ) ; 
 } 
 
 diff - - git a / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp b / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp 
 index c13a1ab . . 39785dc 100644 
 - - - a / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp 
 + + + b / tightdb _ jni / src / com _ tightdb _ TableQuery . cpp 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 # include " util . h " 
 - # include " com _ tightdb _ tablequery . h " 
 + # include " com _ tightdb _ TableQuery . h " 
 
 using namespace tightdb ; 
 
 diff - - git a / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp b / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp 
 index 3ad5b0d . . c354bdc 100644 
 - - - a / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp 
 + + + b / tightdb _ jni / src / com _ tightdb _ TableViewBase . cpp 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 # include " util . h " 
 - # include " com _ tightdb _ tableviewbase . h " 
 + # include " com _ tightdb _ TableViewBase . h " 
 # include " mixedutil . h " 
 # include " tablebase _ tpl . hpp " 
 
 @ @ - 255 , 10 + 255 , 10 @ @ JNIEXPORT jlong JNICALL Java _ com _ tightdb _ TableViewBase _ nativeFindAllString ( 
 	 const char * valueCharPtr = env - > GetStringUTFChars ( value , NULL ) ; 
 if ( ! valueCharPtr ) 
 return 0 ; 
 - TR ( " nativeFindAllString ( col % d , string ' % s ' ) " , columnIndex , valueCharPtr ) ; 
 + TR ( ( env , " nativeFindAllString ( col % d , string ' % s ' ) " , columnIndex , valueCharPtr ) ) ; 
 
 	 TableView * pResultView = new TableView ( TV ( nativeViewPtr ) - > find _ all _ string ( S ( columnIndex ) , valueCharPtr ) ) ; 
 - 	 TR ( " - - resultview size = % lld . \ n " , pResultView - > size ( ) ) ; 
 + 	 TR ( ( env , " - - resultview size = % lld . \ n " , pResultView - > size ( ) ) ) ; 
 env - > ReleaseStringUTFChars ( value , valueCharPtr ) ; 
 	 return reinterpret _ cast < jlong > ( pResultView ) ; 
 } 
 @ @ - 307 , 4 + 307 , 4 @ @ JNIEXPORT void JNICALL Java _ com _ tightdb _ TableViewBase _ nativeClose ( 
 	 delete TV ( nativeTableViewPtr ) ; 
 } 
 
 - / / FIXME : Add support for Count , Average , Remove 
 \ No newline at end of file 
 + / / FIXME : Add support for Count , Average , Remove 
 diff - - git a / tightdb _ jni / src / java _ lang _ List _ Util . cpp b / tightdb _ jni / src / java _ lang _ List _ Util . cpp 
 index 062f0c0 . . 6849cfb 100644 
 - - - a / tightdb _ jni / src / java _ lang _ List _ Util . cpp 
 + + + b / tightdb _ jni / src / java _ lang _ List _ Util . cpp 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 # include " util . h " 
 - # include " java _ lang _ list _ util . h " 
 + # include " java _ lang _ List _ Util . h " 
 
 jint java _ lang _ List _ size ( JNIEnv * env , jobject jList ) 
 { 
 @ @ - 27 , 4 + 27 , 4 @ @ jobject java _ lang _ List _ get ( JNIEnv * env , jobject jList , jint index ) 
 return NULL ; 
 	 } 
 return env - > CallObjectMethod ( jList , jListGetMethodId , index ) ; 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / tightdb _ jni / src / mixedutil . cpp b / tightdb _ jni / src / mixedutil . cpp 
 index 19163d0 . . ea4cb1b 100644 
 - - - a / tightdb _ jni / src / mixedutil . cpp 
 + + + b / tightdb _ jni / src / mixedutil . cpp 
 @ @ - 42 , 7 + 42 , 7 @ @ jobject CreateJMixedFromMixed ( JNIEnv * env , Mixed & mixed ) 
 if ( jMixedClass = = NULL ) 
 return NULL ; 
 
 - TR ( " CreateJMixedFromMixed ( type % d ) \ n " , mixed . get _ type ( ) ) ; 
 + TR ( ( env , " CreateJMixedFromMixed ( type % d ) \ n " , mixed . get _ type ( ) ) ) ; 
 	 switch ( mixed . get _ type ( ) ) { 
 	 case COLUMN _ TYPE _ INT : 
 	 { 
 @ @ - 92 , 7 + 92 , 7 @ @ jobject CreateJMixedFromMixed ( JNIEnv * env , Mixed & mixed ) 
 case COLUMN _ TYPE _ TABLE : 
 { 
 / / param input : Table * t . 
 - TR ( " - - Mixed ( COLUMN _ TYPE _ TABLE ) \ n " ) ; 
 + TR ( ( env , " - - Mixed ( COLUMN _ TYPE _ TABLE ) \ n " ) ) ; 
 jmethodID consId = GetMixedMethodID ( env , " < init > " , " ( Lcom / tightdb / ColumnType ; ) V " ) ; 
 
 jobject jColumnType = NULL ; / / GetJColumnTypeFromColumnType ( env , COLUMN _ TYPE _ TABLE ) ; 
 @ @ - 102 , 7 + 102 , 7 @ @ jobject CreateJMixedFromMixed ( JNIEnv * env , Mixed & mixed ) 
 	 default : 
 	 	 { 
 	 ThrowException ( env , IllegalArgument , " Invalid Mixed type . " ) ; 
 - TR ( " \ n \ nERROR : Mixed type is not supported : % d . \ n \ n " , mixed . get _ type ( ) ) ; 
 + TR ( ( env , " \ n \ nERROR : Mixed type is not supported : % d . \ n \ n " , mixed . get _ type ( ) ) ) ; 
 	 	 } 
 	 } 
 
 @ @ - 170 , 4 + 170 , 4 @ @ jint GetMixedBinaryType ( JNIEnv * env , jobject jMixed ) 
 	 if ( jGetBinaryTypeMethodId ) 
 	 return env - > CallIntMethod ( jMixed , jGetBinaryTypeMethodId ) ; 
 return 0 ; 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / tightdb _ jni / src / tablebase _ tpl . hpp b / tightdb _ jni / src / tablebase _ tpl . hpp 
 index b41dad4 . . a010ea6 100644 
 - - - a / tightdb _ jni / src / tablebase _ tpl . hpp 
 + + + b / tightdb _ jni / src / tablebase _ tpl . hpp 
 @ @ - 113 , 10 + 113 , 10 @ @ void tbl _ nativeDoMixed ( M doMixed , T * pTable , JNIEnv * env , jlong columnIndex , jlo 
 } 
 default : 
 { 
 - TR _ ERR ( " ERROR : This type of mixed is not supported yet : % d . " , valueType ) ; 
 + TR _ ERR ( ( env , " ERROR : This type of mixed is not supported yet : % d . " , valueType ) ) ; 
 } 
 } 
 - TR _ ERR ( " \ nERROR : nativeSetMixed ( ) failed . \ n " ) ; 
 + TR _ ERR ( ( env , " \ nERROR : nativeSetMixed ( ) failed . \ n " ) ) ; 
 ThrowException ( env , IllegalArgument , " nativeSetMixed ( ) " ) ; 
 } 
 
 diff - - git a / tightdb _ jni / src / util . cpp b / tightdb _ jni / src / util . cpp 
 index 0d38f97 . . 41287f2 100644 
 - - - a / tightdb _ jni / src / util . cpp 
 + + + b / tightdb _ jni / src / util . cpp 
 @ @ - 8 , 7 + 8 , 7 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , std : : string classStr , 
 std : : string message ; 
 jclass jExceptionClass = NULL ; 
 
 - TR _ ERR ( " \ njni : ThrowingException % d , % s , % s . \ n " , exception , classStr . c _ str ( ) , itemStr . c _ str ( ) ) ; 
 + TR _ ERR ( ( env , " \ njni : ThrowingException % d , % s , % s . \ n " , exception , classStr . c _ str ( ) , itemStr . c _ str ( ) ) ) ; 
 
 switch ( exception ) { 
 case ClassNotFound : 
 @ @ - 54 , 7 + 54 , 7 @ @ void ThrowException ( JNIEnv * env , ExceptionKind exception , std : : string classStr , 
 if ( jExceptionClass ! = NULL ) 
 env - > ThrowNew ( jExceptionClass , message . c _ str ( ) ) ; 
 else { 
 - TR _ ERR ( " \ nERROR : Couldn ' t throw exception . \ n " ) ; 
 + TR _ ERR ( ( env , " \ nERROR : Couldn ' t throw exception . \ n " ) ) ; 
 } 
 
 env - > DeleteLocalRef ( jExceptionClass ) ; 
 @ @ - 90 , 7 + 90 , 7 @ @ void jprintf ( JNIEnv * env , const char * format , . . . ) { 
 char buf [ 200 ] ; 
 va _ start ( argptr , format ) ; 
 / / vfprintf ( stderr , format , argptr ) ; 
 - vsnprintf _ s ( buf , 200 , format , argptr ) ; 
 + vsnprintf ( buf , 200 , format , argptr ) ; 
 jprint ( env , buf ) ; 
 va _ end ( argptr ) ; 
 } 
 diff - - git a / tightdb _ jni / src / util . h b / tightdb _ jni / src / util . h 
 index fc506cb . . 48b7389 100644 
 - - - a / tightdb _ jni / src / util . h 
 + + + b / tightdb _ jni / src / util . h 
 @ @ - 60 , 11 + 60 , 11 @ @ extern jclass GetClass ( JNIEnv * env , char * classStr ) ; 
 extern int trace _ level ; 
 
 # if TRACE 
 - # define TR ( fmt , . . . ) if ( trace _ level > = 2 ) { jprintf ( env , fmt , # # _ _ VA _ ARGS _ _ ) ; } else { } 
 - # define TR _ ERR ( fmt , . . . ) if ( trace _ level > = 1 ) { jprintf ( env , fmt , # # _ _ VA _ ARGS _ _ ) ; } else { } 
 + # define TR ( args ) if ( trace _ level > = 2 ) { jprintf args ; } else { } 
 + # define TR _ ERR ( args ) if ( trace _ level > = 1 ) { jprintf args ; } else { } 
 # else 
 - # define TR ( fmt , . . . ) 
 - # define TR _ ERR ( fmt , . . . ) 
 + # define TR ( args ) 
 + # define TR _ ERR ( args ) 
 # endif 
 
 extern void jprintf ( JNIEnv * env , const char * fmt , . . . ) ; 
 @ @ - 100 , 7 + 100 , 7 @ @ inline bool TableIsValid ( JNIEnv * env , Table * pTable ) 
 if ( valid ) 
 valid = pTable - > is _ valid ( ) ; 
 if ( ! valid ) { 
 - TR _ ERR ( " Table % x is invalid ! " , pTable ) ; 
 + TR _ ERR ( ( env , " Table % x is invalid ! " , pTable ) ) ; 
 ThrowException ( env , IllegalArgument , " Table is invalid . " ) ; 
 } 
 return valid ; 
 @ @ - 116 , 7 + 116 , 7 @ @ inline bool RowIndexValid ( JNIEnv * env , T * pTable , jlong rowIndex ) 
 
 bool rowErr = ( rowIndex < 0 ) | | ( S ( rowIndex ) > = pTable - > size ( ) ) ; 
 if ( rowErr ) { 
 - TR _ ERR ( " rowIndex % lld > % lld - invalid ! " , S ( rowIndex ) , pTable - > size ( ) ) ; 
 + TR _ ERR ( ( env , " rowIndex % lld > % lld - invalid ! " , S ( rowIndex ) , pTable - > size ( ) ) ) ; 
 ThrowException ( env , IndexOutOfBounds , " rowIndex > available rows . " ) ; 
 } 
 return ! rowErr ; 
 @ @ - 132 , 7 + 132 , 7 @ @ inline bool ColIndexValid ( JNIEnv * env , T * pTable , jlong columnIndex ) 
 
 bool colErr = ( S ( columnIndex ) > = pTable - > get _ column _ count ( ) ) | | ( columnIndex < 0 ) ; 
 if ( colErr ) { 
 - TR _ ERR ( " columnIndex % lld > % lld - invalid ! " , S ( columnIndex ) , pTable - > get _ column _ count ( ) ) ; 
 + TR _ ERR ( ( env , " columnIndex % lld > % lld - invalid ! " , S ( columnIndex ) , pTable - > get _ column _ count ( ) ) ) ; 
 ThrowException ( env , IndexOutOfBounds , " columnIndex > available columns . " ) ; 
 } 
 return ! colErr ; 
 @ @ - 151 , 7 + 151 , 7 @ @ inline bool IndexInsertValid ( JNIEnv * env , T * pTable , jlong columnIndex , jlong ro 
 return false ; 
 bool rowErr = ( rowIndex < 0 ) | | ( S ( rowIndex ) > pTable - > size ( ) + 1 ) ; 
 if ( rowErr ) { 
 - TR _ ERR ( " rowIndex % lld > % lld - invalid ! " , rowIndex , pTable - > size ( ) ) ; 
 + TR _ ERR ( ( env , " rowIndex % lld > % lld - invalid ! " , rowIndex , pTable - > size ( ) ) ) ; 
 ThrowException ( env , IndexOutOfBounds , " rowIndex > available rows . " ) ; 
 } 
 return ! rowErr ; 
 @ @ - 169 , 7 + 169 , 7 @ @ inline bool IndexAndTypeValid ( JNIEnv * env , T * pTable , jlong columnIndex , jlong r 
 colType = pTable - > get _ mixed _ type ( col , row ) ; 
 
 if ( colType ! = expectColType ) { 
 - TR _ ERR ( " Expected columnType % d , but got % d . " , expectColType , pTable - > get _ column _ type ( col ) ) ; 
 + TR _ ERR ( ( env , " Expected columnType % d , but got % d . " , expectColType , pTable - > get _ column _ type ( col ) ) ) ; 
 	 ThrowException ( env , IllegalArgument , " column type ! = ColumnTypeTable . " ) ; 
 return false ; 
 }
