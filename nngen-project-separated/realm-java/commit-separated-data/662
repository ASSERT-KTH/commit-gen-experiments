BLEU SCORE: 0.037477767366779206

TEST MSG: Remove redundant calls to ` std : : move ` .
GENERATED MSG: Adding where ( ) to RealmList

TEST DIFF (one line): diff - - git a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> index a13588b . . 930565c 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> @ @ - 177 , 7 + 177 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere <nl> try { <nl> LinkViewRef * lv = LV ( nativeLinkViewPtr ) ; <nl> LinkViewRef lvr = * lv ; <nl> - Query * queryPtr = new Query ( std : : move ( lvr - > get _ target _ table ( ) . where ( LinkViewRef ( lvr ) ) ) ) ; <nl> + Query * queryPtr = new Query ( lvr - > get _ target _ table ( ) . where ( LinkViewRef ( lvr ) ) ) ; <nl> return reinterpret _ cast < jlong > ( queryPtr ) ; <nl> } CATCH _ STD ( ) <nl> return 0 ; <nl> diff - - git a / realm / realm - jni / src / io _ realm _ internal _ Table . cpp b / realm / realm - jni / src / io _ realm _ internal _ Table . cpp <nl> index 25bcdab . . 08160e7 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ Table . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ Table . cpp <nl> @ @ - 1065 , 7 + 1065 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ Table _ nativeWhere ( <nl> if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) <nl> return 0 ; <nl> try { <nl> - Query * queryPtr = new Query ( std : : move ( TBL ( nativeTablePtr ) - > where ( ) ) ) ; <nl> + Query * queryPtr = new Query ( TBL ( nativeTablePtr ) - > where ( ) ) ; <nl> return reinterpret _ cast < jlong > ( queryPtr ) ; <nl> } CATCH _ STD ( ) <nl> return 0 ; <nl> diff - - git a / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp b / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp <nl> index 22f69ff . . 9805be7 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp <nl> @ @ - 1135 , 12 + 1135 , 12 @ @ JNIEXPORT jlongArray JNICALL Java _ io _ realm _ internal _ TableQuery _ nativeBatchUpdate <nl> std : : vector < std : : unique _ ptr < Query > > queries ( number _ of _ queries ) ; <nl> <nl> / / import the first query <nl> - queries [ 0 ] = std : : move ( sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ) ; <nl> + queries [ 0 ] = sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ; <nl> <nl> / / import the rest of the queries <nl> for ( size _ t i = 1 ; i < number _ of _ queries ; + + i ) { <nl> std : : unique _ ptr < SharedGroup : : Handover < Query > > handoverQuery ( HO ( Query , handover _ queries _ pointer _ array [ i ] ) ) ; <nl> - queries [ i ] = std : : move ( sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ) ; <nl> + queries [ i ] = sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ; <nl> } <nl> <nl> / / Step2 : Bring the queries into the latest shared group version <nl> diff - - git a / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp b / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp <nl> index 8015292 . . a20ddca 100644 <nl> - - - a / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp <nl> + + + b / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp <nl> @ @ - 999 , 7 + 999 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeWhere ( <nl> if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) <nl> return 0 ; <nl> <nl> - Query * queryPtr = new Query ( std : : move ( TV ( nativeViewPtr ) - > get _ parent ( ) . where ( TV ( nativeViewPtr ) ) ) ) ; <nl> + Query * queryPtr = new Query ( TV ( nativeViewPtr ) - > get _ parent ( ) . where ( TV ( nativeViewPtr ) ) ) ; <nl> return reinterpret _ cast < jlong > ( queryPtr ) ; <nl> } CATCH _ STD ( ) <nl> return 0 ;
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 666bd17 . . 3d708b9 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> 0 . 74 . 0 ( ? ? ) <nl> * Adding case sensitive versions of string comparison operators equalTo and notEqualTo <nl> - <nl> + * Adding where ( ) to RealmList to initiate queries <nl> <nl> 0 . 73 . 1 ( 05 Nov 2014 ) <nl> * Fixed a bug that would send infinite notifications in some instances <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> index 80e946b . . 3dd3468 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> + + + b / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> @ @ - 15 , 6 + 15 , 7 @ @ <nl> * / <nl> <nl> # include " io _ realm _ internal _ LinkView . h " <nl> + # include " tablequery . hpp " <nl> # include " util . hpp " <nl> <nl> using namespace tightdb ; <nl> @ @ - 119 , 3 + 120 , 15 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty <nl> } CATCH _ STD ( ) <nl> return 0 ; <nl> } <nl> + <nl> + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere <nl> + ( JNIEnv * env , jobject , jlong nativeLinkViewPtr ) <nl> + { <nl> + try { <nl> + LinkView * lv = LV ( nativeLinkViewPtr ) ; <nl> + Query query = lv - > get _ origin _ table ( ) . where ( lv ) ; <nl> + TableQuery * queryPtr = new TableQuery ( query ) ; <nl> + return reinterpret _ cast < jlong > ( queryPtr ) ; <nl> + } CATCH _ STD ( ) <nl> + return 0 ; <nl> + } <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . h b / realm - jni / src / io _ realm _ internal _ LinkView . h <nl> index f639794 . . 0b5f810 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ LinkView . h <nl> + + + b / realm - jni / src / io _ realm _ internal _ LinkView . h <nl> @ @ - 95 , 6 + 95 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeSize <nl> JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty <nl> ( JNIEnv * , jobject , jlong ) ; <nl> <nl> + / * <nl> + * Class : io _ realm _ internal _ LinkView <nl> + * Method : nativeWhere <nl> + * Signature : ( J ) J <nl> + * / <nl> + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere <nl> + ( JNIEnv * , jobject , jlong ) ; <nl> + <nl> # ifdef _ _ cplusplus <nl> } <nl> # endif <nl> diff - - git a / realm / src / main / java / io / realm / RealmList . java b / realm / src / main / java / io / realm / RealmList . java <nl> index 8162400 . . 43ea5c6 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / src / main / java / io / realm / RealmList . java <nl> @ @ - 136 , 6 + 136 , 8 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { <nl> * @ see io . realm . RealmQuery <nl> * / <nl> public RealmQuery < E > where ( ) { <nl> + <nl> + <nl> return null ; <nl> } <nl> } <nl> diff - - git a / realm / src / main / java / io / realm / internal / LinkView . java b / realm / src / main / java / io / realm / internal / LinkView . java <nl> index 1ffb0ce . . 4b45a04 100644 <nl> - - - a / realm / src / main / java / io / realm / internal / LinkView . java <nl> + + + b / realm / src / main / java / io / realm / internal / LinkView . java <nl> @ @ - 82 , 4 + 82 , 18 @ @ public class LinkView { <nl> return nativeIsEmpty ( nativeLinkViewPtr ) ; <nl> } <nl> private native boolean nativeIsEmpty ( long nativeLinkViewPtr ) ; <nl> + <nl> + public TableQuery where ( ) { <nl> + / / Execute the disposal of abandoned realm objects each time a new realm object is created <nl> + this . context . executeDelayedDisposal ( ) ; <nl> + long nativeQueryPtr = nativeWhere ( nativeLinkViewPtr ) ; <nl> + try { <nl> + return new TableQuery ( this . context , this . parent , nativeQueryPtr ) ; <nl> + } catch ( RuntimeException e ) { <nl> + TableQuery . nativeClose ( nativeQueryPtr ) ; <nl> + throw e ; <nl> + } <nl> + } <nl> + <nl> + protected native long nativeWhere ( long nativeLinkViewPtr ) ; <nl> }

TEST DIFF:
diff - - git a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 index a13588b . . 930565c 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 @ @ - 177 , 7 + 177 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere 
 try { 
 LinkViewRef * lv = LV ( nativeLinkViewPtr ) ; 
 LinkViewRef lvr = * lv ; 
 - Query * queryPtr = new Query ( std : : move ( lvr - > get _ target _ table ( ) . where ( LinkViewRef ( lvr ) ) ) ) ; 
 + Query * queryPtr = new Query ( lvr - > get _ target _ table ( ) . where ( LinkViewRef ( lvr ) ) ) ; 
 return reinterpret _ cast < jlong > ( queryPtr ) ; 
 } CATCH _ STD ( ) 
 return 0 ; 
 diff - - git a / realm / realm - jni / src / io _ realm _ internal _ Table . cpp b / realm / realm - jni / src / io _ realm _ internal _ Table . cpp 
 index 25bcdab . . 08160e7 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ Table . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ Table . cpp 
 @ @ - 1065 , 7 + 1065 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ Table _ nativeWhere ( 
 if ( ! TABLE _ VALID ( env , TBL ( nativeTablePtr ) ) ) 
 return 0 ; 
 try { 
 - Query * queryPtr = new Query ( std : : move ( TBL ( nativeTablePtr ) - > where ( ) ) ) ; 
 + Query * queryPtr = new Query ( TBL ( nativeTablePtr ) - > where ( ) ) ; 
 return reinterpret _ cast < jlong > ( queryPtr ) ; 
 } CATCH _ STD ( ) 
 return 0 ; 
 diff - - git a / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp b / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp 
 index 22f69ff . . 9805be7 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ TableQuery . cpp 
 @ @ - 1135 , 12 + 1135 , 12 @ @ JNIEXPORT jlongArray JNICALL Java _ io _ realm _ internal _ TableQuery _ nativeBatchUpdate 
 std : : vector < std : : unique _ ptr < Query > > queries ( number _ of _ queries ) ; 
 
 / / import the first query 
 - queries [ 0 ] = std : : move ( sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ) ; 
 + queries [ 0 ] = sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ; 
 
 / / import the rest of the queries 
 for ( size _ t i = 1 ; i < number _ of _ queries ; + + i ) { 
 std : : unique _ ptr < SharedGroup : : Handover < Query > > handoverQuery ( HO ( Query , handover _ queries _ pointer _ array [ i ] ) ) ; 
 - queries [ i ] = std : : move ( sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ) ; 
 + queries [ i ] = sg - > import _ from _ handover ( std : : move ( handoverQuery ) ) ; 
 } 
 
 / / Step2 : Bring the queries into the latest shared group version 
 diff - - git a / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp b / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp 
 index 8015292 . . a20ddca 100644 
 - - - a / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp 
 + + + b / realm / realm - jni / src / io _ realm _ internal _ TableView . cpp 
 @ @ - 999 , 7 + 999 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableView _ nativeWhere ( 
 if ( ! VIEW _ VALID _ AND _ IN _ SYNC ( env , nativeViewPtr ) ) 
 return 0 ; 
 
 - Query * queryPtr = new Query ( std : : move ( TV ( nativeViewPtr ) - > get _ parent ( ) . where ( TV ( nativeViewPtr ) ) ) ) ; 
 + Query * queryPtr = new Query ( TV ( nativeViewPtr ) - > get _ parent ( ) . where ( TV ( nativeViewPtr ) ) ) ; 
 return reinterpret _ cast < jlong > ( queryPtr ) ; 
 } CATCH _ STD ( ) 
 return 0 ;

NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 666bd17 . . 3d708b9 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 0 . 74 . 0 ( ? ? ) 
 * Adding case sensitive versions of string comparison operators equalTo and notEqualTo 
 - 
 + * Adding where ( ) to RealmList to initiate queries 
 
 0 . 73 . 1 ( 05 Nov 2014 ) 
 * Fixed a bug that would send infinite notifications in some instances 
 diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 index 80e946b . . 3dd3468 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 + + + b / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 @ @ - 15 , 6 + 15 , 7 @ @ 
 * / 
 
 # include " io _ realm _ internal _ LinkView . h " 
 + # include " tablequery . hpp " 
 # include " util . hpp " 
 
 using namespace tightdb ; 
 @ @ - 119 , 3 + 120 , 15 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty 
 } CATCH _ STD ( ) 
 return 0 ; 
 } 
 + 
 + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere 
 + ( JNIEnv * env , jobject , jlong nativeLinkViewPtr ) 
 + { 
 + try { 
 + LinkView * lv = LV ( nativeLinkViewPtr ) ; 
 + Query query = lv - > get _ origin _ table ( ) . where ( lv ) ; 
 + TableQuery * queryPtr = new TableQuery ( query ) ; 
 + return reinterpret _ cast < jlong > ( queryPtr ) ; 
 + } CATCH _ STD ( ) 
 + return 0 ; 
 + } 
 diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . h b / realm - jni / src / io _ realm _ internal _ LinkView . h 
 index f639794 . . 0b5f810 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ LinkView . h 
 + + + b / realm - jni / src / io _ realm _ internal _ LinkView . h 
 @ @ - 95 , 6 + 95 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeSize 
 JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty 
 ( JNIEnv * , jobject , jlong ) ; 
 
 + / * 
 + * Class : io _ realm _ internal _ LinkView 
 + * Method : nativeWhere 
 + * Signature : ( J ) J 
 + * / 
 + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere 
 + ( JNIEnv * , jobject , jlong ) ; 
 + 
 # ifdef _ _ cplusplus 
 } 
 # endif 
 diff - - git a / realm / src / main / java / io / realm / RealmList . java b / realm / src / main / java / io / realm / RealmList . java 
 index 8162400 . . 43ea5c6 100644 
 - - - a / realm / src / main / java / io / realm / RealmList . java 
 + + + b / realm / src / main / java / io / realm / RealmList . java 
 @ @ - 136 , 6 + 136 , 8 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { 
 * @ see io . realm . RealmQuery 
 * / 
 public RealmQuery < E > where ( ) { 
 + 
 + 
 return null ; 
 } 
 } 
 diff - - git a / realm / src / main / java / io / realm / internal / LinkView . java b / realm / src / main / java / io / realm / internal / LinkView . java 
 index 1ffb0ce . . 4b45a04 100644 
 - - - a / realm / src / main / java / io / realm / internal / LinkView . java 
 + + + b / realm / src / main / java / io / realm / internal / LinkView . java 
 @ @ - 82 , 4 + 82 , 18 @ @ public class LinkView { 
 return nativeIsEmpty ( nativeLinkViewPtr ) ; 
 } 
 private native boolean nativeIsEmpty ( long nativeLinkViewPtr ) ; 
 + 
 + public TableQuery where ( ) { 
 + / / Execute the disposal of abandoned realm objects each time a new realm object is created 
 + this . context . executeDelayedDisposal ( ) ; 
 + long nativeQueryPtr = nativeWhere ( nativeLinkViewPtr ) ; 
 + try { 
 + return new TableQuery ( this . context , this . parent , nativeQueryPtr ) ; 
 + } catch ( RuntimeException e ) { 
 + TableQuery . nativeClose ( nativeQueryPtr ) ; 
 + throw e ; 
 + } 
 + } 
 + 
 + protected native long nativeWhere ( long nativeLinkViewPtr ) ; 
 }
