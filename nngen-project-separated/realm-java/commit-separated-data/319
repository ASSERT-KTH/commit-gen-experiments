BLEU SCORE: 0.018738883683389617

TEST MSG: Add manualClean task , which works without requiring any dependency artifacts
GENERATED MSG: delete jni . so files on clean

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index ddc7ff1 . . 3eac28d 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 267 , 6 + 267 , 37 @ @ task clean { <nl> dependsOn cleanLocalMavenRepos <nl> } <nl> <nl> + task manualClean { <nl> + description = ' Clean build files without using clean tasks defined in sub projects ' <nl> + group = ' Clean ' <nl> + <nl> + doLast { <nl> + / / clean ' build ' directories <nl> + exec { <nl> + workingDir " $ { rootDir } " <nl> + commandLine ' find ' , ' . ' , ' - type ' , ' d ' , ' - name ' , ' build ' , ' - print ' , ' - exec ' , ' rm ' , ' - rf ' , ' { } ' , ' ; ' , ' - prune ' <nl> + } <nl> + <nl> + / / clean ' . externalNativeBuild ' directories <nl> + exec { <nl> + workingDir " $ { rootDir } " <nl> + commandLine ' find ' , ' . ' , ' - type ' , ' d ' , ' - name ' , ' . externalNativeBuild ' , ' - print ' , ' - exec ' , ' rm ' , ' - rf ' , ' { } ' , ' ; ' , ' - prune ' <nl> + } <nl> + <nl> + / / clean ' . gradle ' directories except one in the root <nl> + exec { <nl> + workingDir " $ { rootDir } " <nl> + commandLine ' find ' , ' . ' , ' - mindepth ' , ' 2 ' , ' - type ' , ' d ' , ' - name ' , ' . gradle ' , ' - print ' , ' - exec ' , ' rm ' , ' - rf ' , ' { } ' , ' ; ' , ' - prune ' <nl> + } <nl> + <nl> + / / clean $ { System . env . HOME } / . m2 / repository / io / realm <nl> + exec { <nl> + workingDir " $ { rootDir } " <nl> + commandLine ' sh ' , ' - c ' , " echo \ " $ { System . env . HOME } / . m2 / repository / io / realm \ " & & rm - rf \ " $ { System . env . HOME } / . m2 / repository / io / realm \ " " <nl> + } <nl> + } <nl> + } <nl> + <nl> task uploadDistributionPackage { <nl> group = ' Release ' <nl> description = ' Upload the distribution package to S3 '
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 0ca1d69 . . a92bbf4 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 22 , 3 + 22 , 7 @ @ allprojects { <nl> jcenter ( ) <nl> } <nl> } <nl> + <nl> + task clean ( type : Delete ) { <nl> + delete rootProject . buildDir <nl> + } <nl> diff - - git a / realm - jni / build . gradle b / realm - jni / build . gradle <nl> index 9bcd5df . . c3ec47d 100644 <nl> - - - a / realm - jni / build . gradle <nl> + + + b / realm - jni / build . gradle <nl> @ @ - 261 , 23 + 261 , 23 @ @ task buildAndroidJni ( group : ' build ' , description : ' Build the Android JNI shared <nl> } <nl> } <nl> <nl> - task clean ( group : ' build ' , description : ' Clean the make artifacts ' ) < < { <nl> - targets . each { target - > <nl> - exec { <nl> - commandLine = [ <nl> - ' make ' , <nl> - ' - C ' , " $ { projectDir } / src " , <nl> - " BASE _ DENOM = $ { target . name } " , <nl> - ' LIB _ SUFFIX _ SHARED = . so ' , <nl> - ' clean ' <nl> - ] <nl> + task clean ( type : Delete ) { <nl> + delete project . buildDir <nl> + <nl> + delete fileTree ( dir : " $ { projectDir } / . . / realm / src / main / jniLibs / " , include : ' * * / librealm - jni * . so ' ) <nl> + delete fileTree ( dir : " $ { projectDir } / . . / build / output / jniLibs - unstripped / " , include : ' * * / librealm - jni * . so ' ) <nl> + <nl> + doLast { <nl> + targets . each { target - > <nl> + exec { <nl> + commandLine = [ <nl> + ' make ' , <nl> + ' - C ' , " $ { projectDir } / src " , <nl> + " BASE _ DENOM = $ { target . name } " , <nl> + ' LIB _ SUFFIX _ SHARED = . so ' , <nl> + ' clean ' <nl> + ] <nl> + } <nl> } <nl> } <nl> - exec { <nl> - commandLine = [ <nl> - ' rm ' , <nl> - ' - rf ' , <nl> - " $ { projectDir } / build / * " <nl> - ] <nl> - } <nl> }

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index ddc7ff1 . . 3eac28d 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 267 , 6 + 267 , 37 @ @ task clean { 
 dependsOn cleanLocalMavenRepos 
 } 
 
 + task manualClean { 
 + description = ' Clean build files without using clean tasks defined in sub projects ' 
 + group = ' Clean ' 
 + 
 + doLast { 
 + / / clean ' build ' directories 
 + exec { 
 + workingDir " $ { rootDir } " 
 + commandLine ' find ' , ' . ' , ' - type ' , ' d ' , ' - name ' , ' build ' , ' - print ' , ' - exec ' , ' rm ' , ' - rf ' , ' { } ' , ' ; ' , ' - prune ' 
 + } 
 + 
 + / / clean ' . externalNativeBuild ' directories 
 + exec { 
 + workingDir " $ { rootDir } " 
 + commandLine ' find ' , ' . ' , ' - type ' , ' d ' , ' - name ' , ' . externalNativeBuild ' , ' - print ' , ' - exec ' , ' rm ' , ' - rf ' , ' { } ' , ' ; ' , ' - prune ' 
 + } 
 + 
 + / / clean ' . gradle ' directories except one in the root 
 + exec { 
 + workingDir " $ { rootDir } " 
 + commandLine ' find ' , ' . ' , ' - mindepth ' , ' 2 ' , ' - type ' , ' d ' , ' - name ' , ' . gradle ' , ' - print ' , ' - exec ' , ' rm ' , ' - rf ' , ' { } ' , ' ; ' , ' - prune ' 
 + } 
 + 
 + / / clean $ { System . env . HOME } / . m2 / repository / io / realm 
 + exec { 
 + workingDir " $ { rootDir } " 
 + commandLine ' sh ' , ' - c ' , " echo \ " $ { System . env . HOME } / . m2 / repository / io / realm \ " & & rm - rf \ " $ { System . env . HOME } / . m2 / repository / io / realm \ " " 
 + } 
 + } 
 + } 
 + 
 task uploadDistributionPackage { 
 group = ' Release ' 
 description = ' Upload the distribution package to S3 '

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 0ca1d69 . . a92bbf4 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 22 , 3 + 22 , 7 @ @ allprojects { 
 jcenter ( ) 
 } 
 } 
 + 
 + task clean ( type : Delete ) { 
 + delete rootProject . buildDir 
 + } 
 diff - - git a / realm - jni / build . gradle b / realm - jni / build . gradle 
 index 9bcd5df . . c3ec47d 100644 
 - - - a / realm - jni / build . gradle 
 + + + b / realm - jni / build . gradle 
 @ @ - 261 , 23 + 261 , 23 @ @ task buildAndroidJni ( group : ' build ' , description : ' Build the Android JNI shared 
 } 
 } 
 
 - task clean ( group : ' build ' , description : ' Clean the make artifacts ' ) < < { 
 - targets . each { target - > 
 - exec { 
 - commandLine = [ 
 - ' make ' , 
 - ' - C ' , " $ { projectDir } / src " , 
 - " BASE _ DENOM = $ { target . name } " , 
 - ' LIB _ SUFFIX _ SHARED = . so ' , 
 - ' clean ' 
 - ] 
 + task clean ( type : Delete ) { 
 + delete project . buildDir 
 + 
 + delete fileTree ( dir : " $ { projectDir } / . . / realm / src / main / jniLibs / " , include : ' * * / librealm - jni * . so ' ) 
 + delete fileTree ( dir : " $ { projectDir } / . . / build / output / jniLibs - unstripped / " , include : ' * * / librealm - jni * . so ' ) 
 + 
 + doLast { 
 + targets . each { target - > 
 + exec { 
 + commandLine = [ 
 + ' make ' , 
 + ' - C ' , " $ { projectDir } / src " , 
 + " BASE _ DENOM = $ { target . name } " , 
 + ' LIB _ SUFFIX _ SHARED = . so ' , 
 + ' clean ' 
 + ] 
 + } 
 } 
 } 
 - exec { 
 - commandLine = [ 
 - ' rm ' , 
 - ' - rf ' , 
 - " $ { projectDir } / build / * " 
 - ] 
 - } 
 }
