BLEU SCORE: 0.034353182138500235

TEST MSG: Re - enable some deactivated tests
GENERATED MSG: Add support for alpha . 38 changes

TEST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index a5b2845 . . f511eb1 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 87 , 15 + 87 , 13 @ @ try { <nl> <nl> stage ( ' Run instrumented tests ' ) { <nl> lock ( " $ { env . NODE _ NAME } - android " ) { <nl> - boolean archiveLog = true <nl> String backgroundPid <nl> try { <nl> backgroundPid = startLogCatCollector ( ) <nl> forwardAdbPorts ( ) <nl> gradle ( ' realm ' , " $ { instrumentationTestTarget } " ) <nl> - archiveLog = false ; <nl> } finally { <nl> - stopLogCatCollector ( backgroundPid , archiveLog ) <nl> + stopLogCatCollector ( backgroundPid ) <nl> storeJunitResults ' realm / realm - library / build / outputs / androidTest - results / connected / * * / TEST - * . xml ' <nl> } <nl> } <nl> @ @ - 162 , 15 + 160 , 13 @ @ def String startLogCatCollector ( ) { <nl> return readFile ( " pid " ) . trim ( ) <nl> } <nl> <nl> - def stopLogCatCollector ( String backgroundPid , boolean archiveLog ) { <nl> + def stopLogCatCollector ( String backgroundPid ) { <nl> sh " kill $ { backgroundPid } " <nl> - if ( archiveLog ) { <nl> - zip ( [ <nl> - 	 ' zipFile ' : ' logcat . zip ' , <nl> - 	 ' archive ' : true , <nl> - 	 ' glob ' : ' logcat . txt ' <nl> - 	 ] ) <nl> - } <nl> + zip ( [ <nl> + ' zipFile ' : ' logcat . zip ' , <nl> + ' archive ' : true , <nl> + ' glob ' : ' logcat . txt ' <nl> + ] ) <nl> sh ' rm logcat . txt ' <nl> } <nl> <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index de1b76a . . 35394be 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 5 , 5 + 5 , 5 @ @ REALM _ SYNC _ SHA256 = 6d32ef44acbf4a63b654ceeaadce036feeefd04a4ca649a95a22a0e7d56df8 <nl> <nl> # Object Server Release used by Integration tests . Installed using NPM . <nl> # Use ` npm view realm - object - server versions ` to get a list of available versions . <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 6 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 18 <nl> <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java <nl> index dce0526 . . 84c2788 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java <nl> @ @ - 106 , 7 + 106 , 6 @ @ public class PermissionManagerTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread ( emulateMainThread = true ) <nl> - @ Ignore <nl> public void getPermissions _ updatedWithNewRealms ( ) { <nl> final PermissionManager pm = user . getPermissionManager ( ) ; <nl> looperThread . closeAfterTest ( pm ) ; <nl> @ @ - 153 , 7 + 152 , 6 @ @ public class PermissionManagerTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread ( emulateMainThread = true ) <nl> - @ Ignore <nl> public void getPermissions _ updatedWithNewRealms _ stressTest ( ) { <nl> final int TEST _ SIZE = 10 ; <nl> final PermissionManager pm = user . getPermissionManager ( ) ; <nl> @ @ - 289 , 7 + 287 , 7 @ @ public class PermissionManagerTests extends StandardIntegrationTest { <nl> } ) ; <nl> } <nl> <nl> - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5143 " ) <nl> + @ Ignore ( " The PermissionManager can only be opened from the main thread " ) <nl> @ Test <nl> public void clientResetOnMultipleThreads ( ) { <nl> <nl> @ @ - 901 , 7 + 899 , 7 @ @ public class PermissionManagerTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread ( emulateMainThread = true ) <nl> - @ Ignore <nl> + @ Ignore ( " The offer is randomly accepted mostly on docker - 02 SHIELD K1 " ) <nl> public void acceptOffer _ expiredThrows ( ) { <nl> / / Trying to guess how long CI is to process this . The offer cannot be created if it <nl> / / already expired . <nl> @ @ - 1181 , 6 + 1179 , 7 @ @ public class PermissionManagerTests extends StandardIntegrationTest { <nl> private String createRemoteRealm ( SyncUser user , String realmName ) { <nl> String url = Constants . AUTH _ SERVER _ URL + " ~ / " + realmName ; <nl> SyncConfiguration config = new SyncConfiguration . Builder ( user , url ) <nl> + . name ( realmName ) <nl> . sessionStopPolicy ( OsRealmConfig . SyncSessionStopPolicy . IMMEDIATELY ) <nl> . build ( ) ; <nl> <nl> @ @ - 1205 , 18 + 1204 , 12 @ @ public class PermissionManagerTests extends StandardIntegrationTest { <nl> * states and fail if neither of these can be verified . <nl> * / <nl> private void assertInitialPermissions ( RealmResults < Permission > permissions ) { <nl> - assertGreaterThan ( " Unexpected count ( ) for _ _ permission Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 0 , permissions . where ( ) . endsWith ( " path " , " _ _ permission " ) . count ( ) ) ; <nl> - assertGreaterThan ( " Unexpected count ( ) for _ _ management Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 0 , permissions . where ( ) . endsWith ( " path " , " _ _ management " ) . count ( ) ) ; <nl> - / / FIXME : Enable these again when https : / / github . com / realm / ros / issues / 549 is fixed <nl> - / / assertEquals ( " Unexpected count ( ) for _ _ permission Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ permission " ) . count ( ) ) ; <nl> - / / assertEquals ( " Unexpected count ( ) for _ _ management Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ management " ) . count ( ) ) ; <nl> + assertEquals ( " Unexpected count ( ) for _ _ permission Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ permission " ) . count ( ) ) ; <nl> + assertEquals ( " Unexpected count ( ) for _ _ management Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ management " ) . count ( ) ) ; <nl> } <nl> <nl> private void assertInitialDefaultPermissions ( RealmResults < Permission > permissions ) { <nl> - assertGreaterThan ( " Unexpected count ( ) for _ _ wildcardpermissions Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 0 , permissions . where ( ) . endsWith ( " path " , " _ _ wildcardpermissions " ) . count ( ) ) ; <nl> - <nl> - / / FIXME : Enable these again when https : / / github . com / realm / ros / issues / 549 is fixed <nl> - / / assertEquals ( " Unexpected count ( ) for _ _ wildcardpermissions Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ wildcardpermissions " ) . count ( ) ) ; <nl> + assertEquals ( " Unexpected count ( ) for _ _ wildcardpermissions Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ wildcardpermissions " ) . count ( ) ) ; <nl> } <nl> <nl> private void assertGreaterThan ( String error , int base , long count ) { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java <nl> index ab943c1 . . d7ba354 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ import static org . junit . Assert . fail ; <nl> public class SSLConfigurationTests extends StandardIntegrationTest { <nl> <nl> @ Rule <nl> - public Timeout globalTimeout = Timeout . seconds ( 10 ) ; <nl> + public Timeout globalTimeout = Timeout . seconds ( 120 ) ; <nl> <nl> @ Test <nl> public void trustedRootCA ( ) throws InterruptedException { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> index 7fce3b7 . . 55aab7e 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> @ @ - 116 , 7 + 116 , 6 @ @ public class SyncSessionTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> - @ Ignore ( ) <nl> public void interruptWaits ( ) throws InterruptedException { <nl> final SyncUser user = UserFactory . createUniqueUser ( Constants . AUTH _ URL ) ; <nl> SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; <nl> @ @ - 309 , 7 + 308 , 6 @ @ public class SyncSessionTests extends StandardIntegrationTest { <nl> / / A Realm that was opened before a user logged out should be able to resume uploading if the user logs back in . <nl> / / this test validate the behaviour of SyncSessionStopPolicy : : AfterChangesUploaded <nl> @ Test <nl> - @ Ignore ( ) <nl> public void uploadChangesWhenRealmOutOfScope ( ) throws InterruptedException { <nl> final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , true ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> index 7e581f6 . . 7eaa41f 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> @ @ - 124 , 7 + 124 , 8 @ @ public class SyncedRealmTests extends StandardIntegrationTest { <nl> / / We cannot do much better since we cannot control the order of events internally in Realm which would be <nl> / / needed to correctly test all error paths . <nl> @ Test <nl> - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5177 " ) <nl> + @ Ignore ( " Sync somehow keeps a Realm alive , causing the Realm . deleteRealm to throw " + <nl> + " https : / / github . com / realm / realm - java / issues / 5416 " ) <nl> public void waitForInitialData _ resilientInCaseOfRetries ( ) throws InterruptedException { <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , " password " , true ) ; <nl> SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> @ @ - 166 , 6 + 167 , 8 @ @ public class SyncedRealmTests extends StandardIntegrationTest { <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , " password " , true ) ; <nl> SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> final SyncConfiguration config = new SyncConfiguration . Builder ( user , Constants . USER _ REALM ) <nl> + . sessionStopPolicy ( OsRealmConfig . SyncSessionStopPolicy . IMMEDIATELY ) <nl> + . directory ( configurationFactory . getRoot ( ) ) <nl> . waitForInitialRemoteData ( ) <nl> . build ( ) ; <nl> Random randomizer = new Random ( ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> index e4847f1 . . b477f33 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> @ @ - 20 , 7 + 20 , 6 @ @ import android . os . Looper ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> import org . junit . Before ; <nl> - import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> @ @ - 104 , 7 + 103 , 6 @ @ public class ProcessCommitTests extends StandardIntegrationTest { <nl> @ Test <nl> @ RunTestInLooperThread <nl> @ RunTestWithRemoteService ( remoteService = SimpleCommitRemoteService . class , onLooperThread = true ) <nl> - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5376 " ) <nl> public void expectSimpleCommit ( ) { <nl> looperThread . runAfterTest ( remoteService . afterRunnable ) ; <nl> remoteService . createHandler ( Looper . myLooper ( ) ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> index cc3fcd9 . . dc0ae46 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> @ @ - 17 , 18 + 17 , 12 @ @ <nl> package io . realm . objectserver . utils ; <nl> <nl> import android . os . SystemClock ; <nl> - import android . util . Log ; <nl> <nl> import java . io . IOException ; <nl> - import java . net . SocketTimeoutException ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> - import io . realm . log . RealmLog ; <nl> - import okhttp3 . Headers ; <nl> - import okhttp3 . MediaType ; <nl> import okhttp3 . OkHttpClient ; <nl> import okhttp3 . Request ; <nl> - import okhttp3 . RequestBody ; <nl> import okhttp3 . Response ; <nl> <nl> / * * <nl> @ @ - 40 , 8 + 34 , 9 @ @ import okhttp3 . Response ; <nl> public class HttpUtils { <nl> / / TODO If the timeouts are longer than the test timeout you risk getting <nl> / / " Realm could not be deleted errors " . <nl> + / / FIXME re - adjust timeout after https : / / github . com / realm / realm - object - server - private / issues / 697 is fixed <nl> private final static OkHttpClient client = new OkHttpClient . Builder ( ) <nl> - . retryOnConnectionFailure ( true ) <nl> + . connectTimeout ( 2 , TimeUnit . MINUTES ) <nl> . build ( ) ; <nl> <nl> / / adb reverse tcp : 8888 tcp : 8888 <nl> diff - - git a / tools / sync _ test _ server / Dockerfile b / tools / sync _ test _ server / Dockerfile <nl> index c4f792b . . 8a9a766 100644 <nl> - - - a / tools / sync _ test _ server / Dockerfile <nl> + + + b / tools / sync _ test _ server / Dockerfile <nl> @ @ - 1 , 5 + 1 , 9 @ @ <nl> FROM node : 6 . 11 . 4 <nl> <nl> + # set timezone to Copenhagen ( by default it ' s using UTC ) to match Android ' s device time . <nl> + RUN cp / usr / share / zoneinfo / Europe / Copenhagen / etc / localtime <nl> + RUN echo " Europe / Copenhagen " > / etc / timezone <nl> + <nl> ARG ROS _ DE _ VERSION <nl> <nl> # Install realm object server <nl> diff - - git a / tools / sync _ test _ server / ros - testing - server . js b / tools / sync _ test _ server / ros - testing - server . js <nl> index 2f841d4 . . e183378 100755 <nl> - - - a / tools / sync _ test _ server / ros - testing - server . js <nl> + + + b / tools / sync _ test _ server / ros - testing - server . js <nl> @ @ - 43 , 7 + 43 , 7 @ @ function handleRequest ( request , response ) { <nl> var syncServerChildProcess = null ; <nl> <nl> / / Waits for ROS to be fully initialized . <nl> - function waitForRosToInitialize ( attempts , onSuccess , onError ) { <nl> + function waitForRosToInitialize ( attempts , onSuccess , onError , startSequence ) { <nl> if ( attempts = = 0 ) { <nl> onError ( " Could not get ROS to start . See Docker log . " ) ; <nl> return ; <nl> @ @ - 51 , 16 + 51 , 16 @ @ function waitForRosToInitialize ( attempts , onSuccess , onError ) { <nl> http . get ( " http : / / 0 . 0 . 0 . 0 : 9080 / health " , function ( res ) { <nl> if ( res . statusCode ! = 200 ) { <nl> winston . info ( " ROS / health / returned : " + res . statusCode ) <nl> - waitForRosToInitialize ( attempts - 1 , onSuccess , onError ) <nl> + waitForRosToInitialize ( attempts - 1 , onSuccess , onError , startSequence ) <nl> } else { <nl> - onSuccess ( ) ; <nl> + onSuccess ( startSequence ) ; <nl> } <nl> } ) . on ( ' error ' , function ( err ) { <nl> / / ROS not accepting any connections yet . <nl> / / Errors like ECONNREFUSED 0 . 0 . 0 . 0 : 9080 will be reported here . <nl> / / Wait a little before trying again ( common startup is ~ 1 second ) . <nl> setTimeout ( function ( ) { <nl> - waitForRosToInitialize ( attempts - 1 , onSuccess , onError ) ; <nl> + waitForRosToInitialize ( attempts - 1 , onSuccess , onError , startSequence ) ; <nl> } , 200 ) ; <nl> } ) ; <nl> } <nl> @ @ - 112 , 7 + 112 , 7 @ @ function doStartRealmObjectServer ( onSuccess , onError ) { <nl> winston . info ( ` $ { data } ` ) ; <nl> } ) ; <nl> <nl> - waitForRosToInitialize ( 20 , onSuccess , onError ) ; <nl> + waitForRosToInitialize ( 100 , onSuccess , onError , Date . now ( ) ) ; <nl> } <nl> } ) ; <nl> } <nl> @ @ - 121 , 24 + 121 , 28 @ @ function stopRealmObjectServer ( onSuccess , onError ) { <nl> if ( syncServerChildProcess = = null | | syncServerChildProcess . killed ) { <nl> onSuccess ( " No ROS process found or the process has been killed before " ) ; <nl> } <nl> + if ( syncServerChildProcess ) { <nl> + syncServerChildProcess . on ( ' exit ' , function ( code ) { <nl> + winston . info ( " ROS server stopped due to process being killed . Exit code : " + code ) ; <nl> + syncServerChildProcess . removeAllListeners ( ' exit ' ) ; <nl> + syncServerChildProcess = null ; <nl> + onSuccess ( ) ; <nl> + } ) ; <nl> <nl> - syncServerChildProcess . on ( ' exit ' , function ( code ) { <nl> - winston . info ( " ROS server stopped due to process being killed . Exit code : " + code ) ; <nl> - syncServerChildProcess . removeAllListeners ( ' exit ' ) ; <nl> - syncServerChildProcess = null ; <nl> - onSuccess ( ) ; <nl> - } ) ; <nl> - <nl> - syncServerChildProcess . kill ( ' SIGKILL ' ) ; <nl> + syncServerChildProcess . kill ( ' SIGKILL ' ) ; <nl> + } <nl> } <nl> <nl> / / start sync server <nl> dispatcher . onGet ( " / start " , function ( req , res ) { <nl> winston . info ( " Attempting to start ROS " ) ; <nl> - startRealmObjectServer ( ( ) = > { <nl> + startRealmObjectServer ( ( startSequence ) = > { <nl> res . writeHead ( 200 , { ' Content - Type ' : ' text / plain ' } ) ; <nl> - res . end ( ' ROS started ' ) ; <nl> + let response = ` ROS started after $ { Date . now ( ) - startSequence } ms ` ; <nl> + winston . info ( response ) ; <nl> + res . end ( response ) ; <nl> } , function ( err ) { <nl> + winston . error ( ' Starting ROS failed : ' + err ) ; <nl> res . writeHead ( 500 , { ' Content - Type ' : ' text / plain ' } ) ; <nl> res . end ( ' Starting ROS failed : ' + err ) ; <nl> } ) ;
NEAREST DIFF (one line): diff - - git a / dependencies . list b / dependencies . list <nl> index 0025e7c . . f0cdeba 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 5 , 4 + 5 , 4 @ @ REALM _ SYNC _ SHA256 = 5e09e54e68e78683e006898f5a703f80e0ee49492fb0f9dc2384fcbbb9f02f <nl> <nl> # Object Server Release used by Integration tests . Installed using NPM . <nl> # Use ` npm view realm - object - server versions ` to get a list of available versions . <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 35 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 38 <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> index 0a69915 . . 7d0a5a2 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> @ @ - 447 , 10 + 447 , 11 @ @ public class SyncUser { <nl> AuthenticationServer authServer = SyncManager . getAuthServer ( ) ; <nl> LookupUserIdResponse response = authServer . retrieveUser ( refreshToken , provider , providerUserIdentity , getAuthenticationUrl ( ) ) ; <nl> if ( ! response . isValid ( ) ) { <nl> - / / Right now errors are very inconsistent . See https : / / github . com / realm / ros / issues / 310 <nl> - / / Treat them all as " User not existing " . This is too broad , and should be revisited <nl> - / / once # 310 is fixed . <nl> - return null ; <nl> + if ( response . getError ( ) . getErrorCode ( ) = = ErrorCode . UNKNOWN _ ACCOUNT ) { <nl> + return null ; <nl> + } else { <nl> + throw response . getError ( ) ; <nl> + } <nl> } else { <nl> return SyncUserInfo . fromLookupUserIdResponse ( response ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java <nl> index f14fe20 . . a9a1369 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java <nl> @ @ - 30 , 15 + 30 , 17 @ @ public class SyncUserInfo { <nl> private final String identity ; <nl> private final boolean isAdmin ; <nl> private final Map < String , String > metadata ; <nl> + private final Map < String , String > accounts ; <nl> <nl> - private SyncUserInfo ( String identity , boolean isAdmin , Map < String , String > metadata ) { <nl> + private SyncUserInfo ( String identity , boolean isAdmin , Map < String , String > metadata , Map < String , String > accounts ) { <nl> this . identity = identity ; <nl> this . isAdmin = isAdmin ; <nl> this . metadata = Collections . unmodifiableMap ( metadata ) ; <nl> + this . accounts = Collections . unmodifiableMap ( accounts ) ; <nl> } <nl> <nl> static SyncUserInfo fromLookupUserIdResponse ( LookupUserIdResponse response ) { <nl> - return new SyncUserInfo ( response . getUserId ( ) , response . isAdmin ( ) , response . getMetadata ( ) ) ; <nl> + return new SyncUserInfo ( response . getUserId ( ) , response . isAdmin ( ) , response . getMetadata ( ) , response . getAccounts ( ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 65 , 6 + 67 , 19 @ @ public class SyncUserInfo { <nl> return metadata ; <nl> } <nl> <nl> + / * * <nl> + * Returns the accounts associated with this user . The map returned is a map of { @ link SyncCredentials . IdentityProvider } <nl> + * and the providerId used in that provider . <nl> + * < p > <nl> + * Example being { @ code ( " password " , " my @ email . com " ) } , if the user created an account using the standard account creation <nl> + * supported by the Realm Object Server . <nl> + * < p > <nl> + * A user can have multiple accounts associated with it . <nl> + * <nl> + * @ return the accounts associated with the user . <nl> + * / <nl> + public Map < String , String > getAccounts ( ) { return accounts ; } <nl> + <nl> @ Override <nl> public boolean equals ( Object o ) { <nl> if ( this = = o ) return true ; <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java <nl> index 827ec07 . . b3ee747 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java <nl> @ @ - 56 , 10 + 56 , 12 @ @ public class ChangePasswordRequest { <nl> public String toJson ( ) { <nl> try { <nl> JSONObject request = new JSONObject ( ) ; <nl> - request . put ( " new _ password " , newPassword ) ; <nl> if ( userID ! = null ) { <nl> request . put ( " user _ id " , userID ) ; <nl> } <nl> + JSONObject data = new JSONObject ( ) ; <nl> + data . put ( " new _ password " , newPassword ) ; <nl> + request . put ( " data " , data ) ; <nl> return request . toString ( ) ; <nl> } catch ( JSONException e ) { <nl> throw new RuntimeException ( e ) ; <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java <nl> index a9d93d7 . . 810b4ee 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java <nl> @ @ - 15 , 12 + 15 , 12 @ @ <nl> * / <nl> package io . realm . internal . network ; <nl> <nl> + import org . json . JSONArray ; <nl> import org . json . JSONException ; <nl> import org . json . JSONObject ; <nl> <nl> import java . io . IOException ; <nl> import java . util . HashMap ; <nl> - import java . util . Iterator ; <nl> import java . util . Locale ; <nl> import java . util . Map ; <nl> <nl> @ @ - 36 , 12 + 36 , 13 @ @ public class LookupUserIdResponse extends AuthServerResponse { <nl> <nl> private static final String JSON _ FIELD _ USER _ ID = " user _ id " ; <nl> private static final String JSON _ FIELD _ USER _ IS _ ADMIN = " is _ admin " ; <nl> - private static final String JSON _ FIELD _ METADATA = " metadata " ; <nl> + private static final String JSON _ FIELD _ METADATA = " metadata " ; <nl> + private static final String JSON _ FIELD _ ACCOUNTS = " accounts " ; <nl> <nl> private final String userId ; <nl> private final Boolean isAdmin ; <nl> private final Map < String , String > metadata ; <nl> - <nl> + private final Map < String , String > accounts ; <nl> / * * <nl> * Helper method for creating the proper lookup user response . This method will set the appropriate error <nl> * depending on any HTTP response codes or I / O errors . <nl> @ @ - 85 , 6 + 86 , 7 @ @ public class LookupUserIdResponse extends AuthServerResponse { <nl> this . userId = null ; <nl> this . isAdmin = null ; <nl> this . metadata = new HashMap < > ( ) ; <nl> + this . accounts = new HashMap < > ( ) ; <nl> } <nl> <nl> private LookupUserIdResponse ( String serverResponse ) { <nl> @ @ - 93 , 11 + 95 , 13 @ @ public class LookupUserIdResponse extends AuthServerResponse { <nl> Boolean isAdmin ; <nl> String message ; <nl> Map < String , String > metadata ; <nl> + Map < String , String > accounts ; <nl> try { <nl> JSONObject obj = new JSONObject ( serverResponse ) ; <nl> userId = obj . getString ( JSON _ FIELD _ USER _ ID ) ; <nl> isAdmin = obj . getBoolean ( JSON _ FIELD _ USER _ IS _ ADMIN ) ; <nl> - metadata = jsonToMap ( obj . getJSONObject ( JSON _ FIELD _ METADATA ) ) ; <nl> + metadata = jsonToMap ( obj . getJSONArray ( JSON _ FIELD _ METADATA ) , " key " , " value " ) ; <nl> + accounts = jsonToMap ( obj . getJSONArray ( JSON _ FIELD _ ACCOUNTS ) , " provider " , " provider _ id " ) ; <nl> error = null ; <nl> <nl> message = String . format ( Locale . US , " Identity % s ; Path % b " , userId , isAdmin ) ; <nl> @ @ - 106 , 6 + 110 , 7 @ @ public class LookupUserIdResponse extends AuthServerResponse { <nl> userId = null ; <nl> isAdmin = null ; <nl> metadata = new HashMap < > ( ) ; <nl> + accounts = new HashMap < > ( ) ; <nl> error = new ObjectServerError ( ErrorCode . JSON _ EXCEPTION , e ) ; <nl> message = String . format ( Locale . US , " Error % s " , error . getErrorMessage ( ) ) ; <nl> } <nl> @ @ - 115 , 6 + 120 , 7 @ @ public class LookupUserIdResponse extends AuthServerResponse { <nl> this . userId = userId ; <nl> this . isAdmin = isAdmin ; <nl> this . metadata = metadata ; <nl> + this . accounts = accounts ; <nl> } <nl> <nl> public String getUserId ( ) { <nl> @ @ - 127 , 21 + 133 , 21 @ @ public class LookupUserIdResponse extends AuthServerResponse { <nl> <nl> public Map < String , String > getMetadata ( ) { return metadata ; } <nl> <nl> - private static Map < String , String > jsonToMap ( JSONObject json ) throws JSONException { <nl> - Map < String , String > map = new HashMap < > ( ) ; <nl> - if ( json ! = JSONObject . NULL ) { <nl> - map = toMap ( json ) ; <nl> - } <nl> - return map ; <nl> - } <nl> + public Map < String , String > getAccounts ( ) { return accounts ; } <nl> <nl> - private static Map < String , String > toMap ( JSONObject object ) throws JSONException { <nl> + / / Assume arrays of key / value irrespectively of what they are named . <nl> + / / Throws if this is not the case <nl> + private static Map < String , String > jsonToMap ( JSONArray array , String keyName , String valueName ) throws JSONException { <nl> Map < String , String > map = new HashMap < > ( ) ; <nl> - Iterator < String > keysItr = object . keys ( ) ; <nl> - while ( keysItr . hasNext ( ) ) { <nl> - String key = keysItr . next ( ) ; <nl> - String value = object . getString ( key ) ; <nl> - map . put ( key , value ) ; <nl> + if ( array = = null ) { <nl> + return map ; <nl> + } <nl> + for ( int i = 0 ; i < array . length ( ) ; i + + ) { <nl> + JSONObject obj = array . getJSONObject ( i ) ; <nl> + if ( obj . length ( ) ! = 2 ) { <nl> + throw new IllegalStateException ( " Array object not a key / value object . Has " + obj . length ( ) + " fields " ) ; <nl> + } <nl> + map . put ( obj . getString ( keyName ) , obj . getString ( valueName ) ) ; <nl> } <nl> return map ; <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> index 88a6fcf . . e3b5db8 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { <nl> public static final MediaType JSON = MediaType . parse ( " application / json ; charset = utf - 8 " ) ; <nl> private static final String ACTION _ LOGOUT = " revoke " ; / / Auth end point for logging out users <nl> private static final String ACTION _ CHANGE _ PASSWORD = " password " ; / / Auth end point for changing passwords <nl> - private static final String ACTION _ LOOKUP _ USER _ ID = " / users / : provider : / : providerId : " ; / / Auth end point for looking up user id <nl> + private static final String ACTION _ LOOKUP _ USER _ ID = " users / : provider : / : providerId : " ; / / Auth end point for looking up user id <nl> <nl> private final OkHttpClient client = new OkHttpClient . Builder ( ) <nl> . connectTimeout ( 10 , TimeUnit . SECONDS ) <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> index bd53f92 . . c938515 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> @ @ - 44 , 7 + 44 , 6 @ @ import static org . junit . Assert . fail ; <nl> * Catch all class for tests that not naturally fit anywhere else . <nl> * / <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5177 . All waitForInitialRemoteData tests seem to fail . Must be fixed " ) <nl> public class SyncedRealmTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> index fddc2c5 . . 8f31327 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> @ @ - 186 , 7 + 186 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) <nl> public void changePassword ( ) { <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> String originalPassword = " password " ; <nl> @ @ - 198 , 15 + 197 , 23 @ @ public class AuthTests extends StandardIntegrationTest { <nl> String newPassword = " new - password " ; <nl> userOld . changePassword ( newPassword ) ; <nl> userOld . logout ( ) ; <nl> + <nl> + / / Make sure old password doesn ' t work <nl> + try { <nl> + SyncUser . login ( SyncCredentials . usernamePassword ( username , originalPassword , false ) , Constants . AUTH _ URL ) ; <nl> + fail ( ) ; <nl> + } catch ( ObjectServerError e ) { <nl> + assertEquals ( ErrorCode . INVALID _ CREDENTIALS , e . getErrorCode ( ) ) ; <nl> + } <nl> + <nl> + / / Then login with new password <nl> credentials = SyncCredentials . usernamePassword ( username , newPassword , false ) ; <nl> SyncUser userNew = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> - <nl> assertTrue ( userNew . isValid ( ) ) ; <nl> assertEquals ( userOld . getIdentity ( ) , userNew . getIdentity ( ) ) ; <nl> } <nl> <nl> @ Test <nl> - @ Ignore ( " See https : / / github . com / realm / ros / issues / 335 " ) <nl> public void changePassword _ using _ admin ( ) { <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> String originalPassword = " password " ; <nl> @ @ - 234 , 7 + 241 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) <nl> public void changePassword _ using _ admin _ async ( ) { <nl> final String username = UUID . randomUUID ( ) . toString ( ) ; <nl> final String originalPassword = " password " ; <nl> @ @ - 274 , 7 + 280 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> - @ Ignore ( " Wait until https : / / github . com / realm / ros / issues / 309 is resolved " ) <nl> public void changePassword _ throwWhenUserIsLoggedOut ( ) { <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> String password = " password " ; <nl> @ @ - 492 , 6 + 497 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> + @ Ignore ( " See https : / / github . com / realm / ros / issues / 360 " ) <nl> public void revokedRefreshTokenIsNotSameAfterLogin ( ) throws InterruptedException { <nl> final CountDownLatch userLoggedInAgain = new CountDownLatch ( 1 ) ; <nl> final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; <nl> @ @ - 508 , 7 + 514 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> <nl> @ Override <nl> public void loggedOut ( SyncUser user ) { <nl> - SystemClock . sleep ( 1000 ) ; / / Remove once https : / / github . com / realm / ros / issues / 304 is fixed <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , false ) ; <nl> SyncUser loggedInUser = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> <nl> @ @ - 600 , 7 + 605 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve ( ) { <nl> final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; <nl> <nl> @ @ - 618 , 13 + 622 , 13 @ @ public class AuthTests extends StandardIntegrationTest { <nl> assertEquals ( identity , userInfo . getIdentity ( ) ) ; <nl> assertFalse ( userInfo . isAdmin ( ) ) ; <nl> assertTrue ( userInfo . getMetadata ( ) . isEmpty ( ) ) ; <nl> + assertEquals ( username , userInfo . getAccounts ( ) . get ( SyncCredentials . IdentityProvider . USERNAME _ PASSWORD ) ) ; <nl> } <nl> <nl> <nl> / / retrieving a logged out user <nl> @ Test <nl> @ RunTestInLooperThread <nl> - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve _ logout ( ) { <nl> final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; <nl> <nl> @ @ - 661 , 6 + 665 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> assertEquals ( identity , userInfo . getIdentity ( ) ) ; <nl> assertFalse ( userInfo . isAdmin ( ) ) ; <nl> assertTrue ( userInfo . getMetadata ( ) . isEmpty ( ) ) ; <nl> + assertEquals ( username , userInfo . getAccounts ( ) . get ( SyncCredentials . IdentityProvider . USERNAME _ PASSWORD ) ) ; <nl> <nl> looperThread . testComplete ( ) ; <nl> } <nl> @ @ - 692 , 7 + 697 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve _ notAdmin ( ) { <nl> final String username1 = UUID . randomUUID ( ) . toString ( ) ; <nl> final String password1 = " password " ; <nl> @ @ - 716 , 7 + 720 , 6 @ @ public class AuthTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve _ async ( ) { <nl> final String username = UUID . randomUUID ( ) . toString ( ) ; <nl> final String password = " password " ; <nl> @ @ - 737 , 6 + 740 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> assertEquals ( identity , userInfo . getIdentity ( ) ) ; <nl> assertFalse ( userInfo . isAdmin ( ) ) ; <nl> assertTrue ( userInfo . getMetadata ( ) . isEmpty ( ) ) ; <nl> + assertEquals ( username , userInfo . getAccounts ( ) . get ( SyncCredentials . IdentityProvider . USERNAME _ PASSWORD ) ) ; <nl> <nl> looperThread . testComplete ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> index aba3c0e . . 9c4d388 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ <nl> <nl> package io . realm . objectserver . utils ; <nl> <nl> + import android . os . SystemClock ; <nl> import android . util . Log ; <nl> <nl> import java . io . IOException ; <nl> @ @ - 56 , 6 + 57 , 10 @ @ public class HttpUtils { <nl> <nl> Response response = client . newCall ( request ) . execute ( ) ; <nl> if ( ! response . isSuccessful ( ) ) throw new IOException ( " Unexpected code " + response ) ; <nl> + <nl> + / / Work around race condition between starting ROS and logging in first user <nl> + / / See https : / / github . com / realm / ros / issues / 389 <nl> + SystemClock . sleep ( 2000 ) ; <nl> } <nl> <nl> public static void stopSyncServer ( ) throws Exception { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java <nl> index a669b7d . . 2434567 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java <nl> @ @ - 149 , 8 + 149 , 6 @ @ public class UserFactory { <nl> for ( SyncUser user : users . values ( ) ) { <nl> user . logout ( ) ; <nl> } <nl> - / / FIXME https : / / github . com / realm / ros / issues / 338 <nl> - SystemClock . sleep ( 2000 ) ; <nl> allUsersLoggedOut . countDown ( ) ; <nl> <nl> }

TEST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index a5b2845 . . f511eb1 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 87 , 15 + 87 , 13 @ @ try { 
 
 stage ( ' Run instrumented tests ' ) { 
 lock ( " $ { env . NODE _ NAME } - android " ) { 
 - boolean archiveLog = true 
 String backgroundPid 
 try { 
 backgroundPid = startLogCatCollector ( ) 
 forwardAdbPorts ( ) 
 gradle ( ' realm ' , " $ { instrumentationTestTarget } " ) 
 - archiveLog = false ; 
 } finally { 
 - stopLogCatCollector ( backgroundPid , archiveLog ) 
 + stopLogCatCollector ( backgroundPid ) 
 storeJunitResults ' realm / realm - library / build / outputs / androidTest - results / connected / * * / TEST - * . xml ' 
 } 
 } 
 @ @ - 162 , 15 + 160 , 13 @ @ def String startLogCatCollector ( ) { 
 return readFile ( " pid " ) . trim ( ) 
 } 
 
 - def stopLogCatCollector ( String backgroundPid , boolean archiveLog ) { 
 + def stopLogCatCollector ( String backgroundPid ) { 
 sh " kill $ { backgroundPid } " 
 - if ( archiveLog ) { 
 - zip ( [ 
 - 	 ' zipFile ' : ' logcat . zip ' , 
 - 	 ' archive ' : true , 
 - 	 ' glob ' : ' logcat . txt ' 
 - 	 ] ) 
 - } 
 + zip ( [ 
 + ' zipFile ' : ' logcat . zip ' , 
 + ' archive ' : true , 
 + ' glob ' : ' logcat . txt ' 
 + ] ) 
 sh ' rm logcat . txt ' 
 } 
 
 diff - - git a / dependencies . list b / dependencies . list 
 index de1b76a . . 35394be 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 5 , 5 + 5 , 5 @ @ REALM _ SYNC _ SHA256 = 6d32ef44acbf4a63b654ceeaadce036feeefd04a4ca649a95a22a0e7d56df8 
 
 # Object Server Release used by Integration tests . Installed using NPM . 
 # Use ` npm view realm - object - server versions ` to get a list of available versions . 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 6 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 18 
 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java 
 index dce0526 . . 84c2788 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / PermissionManagerTests . java 
 @ @ - 106 , 7 + 106 , 6 @ @ public class PermissionManagerTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread ( emulateMainThread = true ) 
 - @ Ignore 
 public void getPermissions _ updatedWithNewRealms ( ) { 
 final PermissionManager pm = user . getPermissionManager ( ) ; 
 looperThread . closeAfterTest ( pm ) ; 
 @ @ - 153 , 7 + 152 , 6 @ @ public class PermissionManagerTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread ( emulateMainThread = true ) 
 - @ Ignore 
 public void getPermissions _ updatedWithNewRealms _ stressTest ( ) { 
 final int TEST _ SIZE = 10 ; 
 final PermissionManager pm = user . getPermissionManager ( ) ; 
 @ @ - 289 , 7 + 287 , 7 @ @ public class PermissionManagerTests extends StandardIntegrationTest { 
 } ) ; 
 } 
 
 - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5143 " ) 
 + @ Ignore ( " The PermissionManager can only be opened from the main thread " ) 
 @ Test 
 public void clientResetOnMultipleThreads ( ) { 
 
 @ @ - 901 , 7 + 899 , 7 @ @ public class PermissionManagerTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread ( emulateMainThread = true ) 
 - @ Ignore 
 + @ Ignore ( " The offer is randomly accepted mostly on docker - 02 SHIELD K1 " ) 
 public void acceptOffer _ expiredThrows ( ) { 
 / / Trying to guess how long CI is to process this . The offer cannot be created if it 
 / / already expired . 
 @ @ - 1181 , 6 + 1179 , 7 @ @ public class PermissionManagerTests extends StandardIntegrationTest { 
 private String createRemoteRealm ( SyncUser user , String realmName ) { 
 String url = Constants . AUTH _ SERVER _ URL + " ~ / " + realmName ; 
 SyncConfiguration config = new SyncConfiguration . Builder ( user , url ) 
 + . name ( realmName ) 
 . sessionStopPolicy ( OsRealmConfig . SyncSessionStopPolicy . IMMEDIATELY ) 
 . build ( ) ; 
 
 @ @ - 1205 , 18 + 1204 , 12 @ @ public class PermissionManagerTests extends StandardIntegrationTest { 
 * states and fail if neither of these can be verified . 
 * / 
 private void assertInitialPermissions ( RealmResults < Permission > permissions ) { 
 - assertGreaterThan ( " Unexpected count ( ) for _ _ permission Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 0 , permissions . where ( ) . endsWith ( " path " , " _ _ permission " ) . count ( ) ) ; 
 - assertGreaterThan ( " Unexpected count ( ) for _ _ management Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 0 , permissions . where ( ) . endsWith ( " path " , " _ _ management " ) . count ( ) ) ; 
 - / / FIXME : Enable these again when https : / / github . com / realm / ros / issues / 549 is fixed 
 - / / assertEquals ( " Unexpected count ( ) for _ _ permission Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ permission " ) . count ( ) ) ; 
 - / / assertEquals ( " Unexpected count ( ) for _ _ management Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ management " ) . count ( ) ) ; 
 + assertEquals ( " Unexpected count ( ) for _ _ permission Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ permission " ) . count ( ) ) ; 
 + assertEquals ( " Unexpected count ( ) for _ _ management Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ management " ) . count ( ) ) ; 
 } 
 
 private void assertInitialDefaultPermissions ( RealmResults < Permission > permissions ) { 
 - assertGreaterThan ( " Unexpected count ( ) for _ _ wildcardpermissions Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 0 , permissions . where ( ) . endsWith ( " path " , " _ _ wildcardpermissions " ) . count ( ) ) ; 
 - 
 - / / FIXME : Enable these again when https : / / github . com / realm / ros / issues / 549 is fixed 
 - / / assertEquals ( " Unexpected count ( ) for _ _ wildcardpermissions Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ wildcardpermissions " ) . count ( ) ) ; 
 + assertEquals ( " Unexpected count ( ) for _ _ wildcardpermissions Realm : " + Arrays . toString ( permissions . toArray ( ) ) , 1 , permissions . where ( ) . endsWith ( " path " , " _ _ wildcardpermissions " ) . count ( ) ) ; 
 } 
 
 private void assertGreaterThan ( String error , int base , long count ) { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java 
 index ab943c1 . . d7ba354 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java 
 @ @ - 42 , 7 + 42 , 7 @ @ import static org . junit . Assert . fail ; 
 public class SSLConfigurationTests extends StandardIntegrationTest { 
 
 @ Rule 
 - public Timeout globalTimeout = Timeout . seconds ( 10 ) ; 
 + public Timeout globalTimeout = Timeout . seconds ( 120 ) ; 
 
 @ Test 
 public void trustedRootCA ( ) throws InterruptedException { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 index 7fce3b7 . . 55aab7e 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 @ @ - 116 , 7 + 116 , 6 @ @ public class SyncSessionTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 - @ Ignore ( ) 
 public void interruptWaits ( ) throws InterruptedException { 
 final SyncUser user = UserFactory . createUniqueUser ( Constants . AUTH _ URL ) ; 
 SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; 
 @ @ - 309 , 7 + 308 , 6 @ @ public class SyncSessionTests extends StandardIntegrationTest { 
 / / A Realm that was opened before a user logged out should be able to resume uploading if the user logs back in . 
 / / this test validate the behaviour of SyncSessionStopPolicy : : AfterChangesUploaded 
 @ Test 
 - @ Ignore ( ) 
 public void uploadChangesWhenRealmOutOfScope ( ) throws InterruptedException { 
 final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , true ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 index 7e581f6 . . 7eaa41f 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 @ @ - 124 , 7 + 124 , 8 @ @ public class SyncedRealmTests extends StandardIntegrationTest { 
 / / We cannot do much better since we cannot control the order of events internally in Realm which would be 
 / / needed to correctly test all error paths . 
 @ Test 
 - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5177 " ) 
 + @ Ignore ( " Sync somehow keeps a Realm alive , causing the Realm . deleteRealm to throw " + 
 + " https : / / github . com / realm / realm - java / issues / 5416 " ) 
 public void waitForInitialData _ resilientInCaseOfRetries ( ) throws InterruptedException { 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , " password " , true ) ; 
 SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 @ @ - 166 , 6 + 167 , 8 @ @ public class SyncedRealmTests extends StandardIntegrationTest { 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , " password " , true ) ; 
 SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 final SyncConfiguration config = new SyncConfiguration . Builder ( user , Constants . USER _ REALM ) 
 + . sessionStopPolicy ( OsRealmConfig . SyncSessionStopPolicy . IMMEDIATELY ) 
 + . directory ( configurationFactory . getRoot ( ) ) 
 . waitForInitialRemoteData ( ) 
 . build ( ) ; 
 Random randomizer = new Random ( ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 index e4847f1 . . b477f33 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 @ @ - 20 , 7 + 20 , 6 @ @ import android . os . Looper ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 import org . junit . Before ; 
 - import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 @ @ - 104 , 7 + 103 , 6 @ @ public class ProcessCommitTests extends StandardIntegrationTest { 
 @ Test 
 @ RunTestInLooperThread 
 @ RunTestWithRemoteService ( remoteService = SimpleCommitRemoteService . class , onLooperThread = true ) 
 - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5376 " ) 
 public void expectSimpleCommit ( ) { 
 looperThread . runAfterTest ( remoteService . afterRunnable ) ; 
 remoteService . createHandler ( Looper . myLooper ( ) ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 index cc3fcd9 . . dc0ae46 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 @ @ - 17 , 18 + 17 , 12 @ @ 
 package io . realm . objectserver . utils ; 
 
 import android . os . SystemClock ; 
 - import android . util . Log ; 
 
 import java . io . IOException ; 
 - import java . net . SocketTimeoutException ; 
 import java . util . concurrent . TimeUnit ; 
 
 - import io . realm . log . RealmLog ; 
 - import okhttp3 . Headers ; 
 - import okhttp3 . MediaType ; 
 import okhttp3 . OkHttpClient ; 
 import okhttp3 . Request ; 
 - import okhttp3 . RequestBody ; 
 import okhttp3 . Response ; 
 
 / * * 
 @ @ - 40 , 8 + 34 , 9 @ @ import okhttp3 . Response ; 
 public class HttpUtils { 
 / / TODO If the timeouts are longer than the test timeout you risk getting 
 / / " Realm could not be deleted errors " . 
 + / / FIXME re - adjust timeout after https : / / github . com / realm / realm - object - server - private / issues / 697 is fixed 
 private final static OkHttpClient client = new OkHttpClient . Builder ( ) 
 - . retryOnConnectionFailure ( true ) 
 + . connectTimeout ( 2 , TimeUnit . MINUTES ) 
 . build ( ) ; 
 
 / / adb reverse tcp : 8888 tcp : 8888 
 diff - - git a / tools / sync _ test _ server / Dockerfile b / tools / sync _ test _ server / Dockerfile 
 index c4f792b . . 8a9a766 100644 
 - - - a / tools / sync _ test _ server / Dockerfile 
 + + + b / tools / sync _ test _ server / Dockerfile 
 @ @ - 1 , 5 + 1 , 9 @ @ 
 FROM node : 6 . 11 . 4 
 
 + # set timezone to Copenhagen ( by default it ' s using UTC ) to match Android ' s device time . 
 + RUN cp / usr / share / zoneinfo / Europe / Copenhagen / etc / localtime 
 + RUN echo " Europe / Copenhagen " > / etc / timezone 
 + 
 ARG ROS _ DE _ VERSION 
 
 # Install realm object server 
 diff - - git a / tools / sync _ test _ server / ros - testing - server . js b / tools / sync _ test _ server / ros - testing - server . js 
 index 2f841d4 . . e183378 100755 
 - - - a / tools / sync _ test _ server / ros - testing - server . js 
 + + + b / tools / sync _ test _ server / ros - testing - server . js 
 @ @ - 43 , 7 + 43 , 7 @ @ function handleRequest ( request , response ) { 
 var syncServerChildProcess = null ; 
 
 / / Waits for ROS to be fully initialized . 
 - function waitForRosToInitialize ( attempts , onSuccess , onError ) { 
 + function waitForRosToInitialize ( attempts , onSuccess , onError , startSequence ) { 
 if ( attempts = = 0 ) { 
 onError ( " Could not get ROS to start . See Docker log . " ) ; 
 return ; 
 @ @ - 51 , 16 + 51 , 16 @ @ function waitForRosToInitialize ( attempts , onSuccess , onError ) { 
 http . get ( " http : / / 0 . 0 . 0 . 0 : 9080 / health " , function ( res ) { 
 if ( res . statusCode ! = 200 ) { 
 winston . info ( " ROS / health / returned : " + res . statusCode ) 
 - waitForRosToInitialize ( attempts - 1 , onSuccess , onError ) 
 + waitForRosToInitialize ( attempts - 1 , onSuccess , onError , startSequence ) 
 } else { 
 - onSuccess ( ) ; 
 + onSuccess ( startSequence ) ; 
 } 
 } ) . on ( ' error ' , function ( err ) { 
 / / ROS not accepting any connections yet . 
 / / Errors like ECONNREFUSED 0 . 0 . 0 . 0 : 9080 will be reported here . 
 / / Wait a little before trying again ( common startup is ~ 1 second ) . 
 setTimeout ( function ( ) { 
 - waitForRosToInitialize ( attempts - 1 , onSuccess , onError ) ; 
 + waitForRosToInitialize ( attempts - 1 , onSuccess , onError , startSequence ) ; 
 } , 200 ) ; 
 } ) ; 
 } 
 @ @ - 112 , 7 + 112 , 7 @ @ function doStartRealmObjectServer ( onSuccess , onError ) { 
 winston . info ( ` $ { data } ` ) ; 
 } ) ; 
 
 - waitForRosToInitialize ( 20 , onSuccess , onError ) ; 
 + waitForRosToInitialize ( 100 , onSuccess , onError , Date . now ( ) ) ; 
 } 
 } ) ; 
 } 
 @ @ - 121 , 24 + 121 , 28 @ @ function stopRealmObjectServer ( onSuccess , onError ) { 
 if ( syncServerChildProcess = = null | | syncServerChildProcess . killed ) { 
 onSuccess ( " No ROS process found or the process has been killed before " ) ; 
 } 
 + if ( syncServerChildProcess ) { 
 + syncServerChildProcess . on ( ' exit ' , function ( code ) { 
 + winston . info ( " ROS server stopped due to process being killed . Exit code : " + code ) ; 
 + syncServerChildProcess . removeAllListeners ( ' exit ' ) ; 
 + syncServerChildProcess = null ; 
 + onSuccess ( ) ; 
 + } ) ; 
 
 - syncServerChildProcess . on ( ' exit ' , function ( code ) { 
 - winston . info ( " ROS server stopped due to process being killed . Exit code : " + code ) ; 
 - syncServerChildProcess . removeAllListeners ( ' exit ' ) ; 
 - syncServerChildProcess = null ; 
 - onSuccess ( ) ; 
 - } ) ; 
 - 
 - syncServerChildProcess . kill ( ' SIGKILL ' ) ; 
 + syncServerChildProcess . kill ( ' SIGKILL ' ) ; 
 + } 
 } 
 
 / / start sync server 
 dispatcher . onGet ( " / start " , function ( req , res ) { 
 winston . info ( " Attempting to start ROS " ) ; 
 - startRealmObjectServer ( ( ) = > { 
 + startRealmObjectServer ( ( startSequence ) = > { 
 res . writeHead ( 200 , { ' Content - Type ' : ' text / plain ' } ) ; 
 - res . end ( ' ROS started ' ) ; 
 + let response = ` ROS started after $ { Date . now ( ) - startSequence } ms ` ; 
 + winston . info ( response ) ; 
 + res . end ( response ) ; 
 } , function ( err ) { 
 + winston . error ( ' Starting ROS failed : ' + err ) ; 
 res . writeHead ( 500 , { ' Content - Type ' : ' text / plain ' } ) ; 
 res . end ( ' Starting ROS failed : ' + err ) ; 
 } ) ;

NEAREST DIFF:
diff - - git a / dependencies . list b / dependencies . list 
 index 0025e7c . . f0cdeba 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 5 , 4 + 5 , 4 @ @ REALM _ SYNC _ SHA256 = 5e09e54e68e78683e006898f5a703f80e0ee49492fb0f9dc2384fcbbb9f02f 
 
 # Object Server Release used by Integration tests . Installed using NPM . 
 # Use ` npm view realm - object - server versions ` to get a list of available versions . 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 35 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 38 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 index 0a69915 . . 7d0a5a2 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 @ @ - 447 , 10 + 447 , 11 @ @ public class SyncUser { 
 AuthenticationServer authServer = SyncManager . getAuthServer ( ) ; 
 LookupUserIdResponse response = authServer . retrieveUser ( refreshToken , provider , providerUserIdentity , getAuthenticationUrl ( ) ) ; 
 if ( ! response . isValid ( ) ) { 
 - / / Right now errors are very inconsistent . See https : / / github . com / realm / ros / issues / 310 
 - / / Treat them all as " User not existing " . This is too broad , and should be revisited 
 - / / once # 310 is fixed . 
 - return null ; 
 + if ( response . getError ( ) . getErrorCode ( ) = = ErrorCode . UNKNOWN _ ACCOUNT ) { 
 + return null ; 
 + } else { 
 + throw response . getError ( ) ; 
 + } 
 } else { 
 return SyncUserInfo . fromLookupUserIdResponse ( response ) ; 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java 
 index f14fe20 . . a9a1369 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUserInfo . java 
 @ @ - 30 , 15 + 30 , 17 @ @ public class SyncUserInfo { 
 private final String identity ; 
 private final boolean isAdmin ; 
 private final Map < String , String > metadata ; 
 + private final Map < String , String > accounts ; 
 
 - private SyncUserInfo ( String identity , boolean isAdmin , Map < String , String > metadata ) { 
 + private SyncUserInfo ( String identity , boolean isAdmin , Map < String , String > metadata , Map < String , String > accounts ) { 
 this . identity = identity ; 
 this . isAdmin = isAdmin ; 
 this . metadata = Collections . unmodifiableMap ( metadata ) ; 
 + this . accounts = Collections . unmodifiableMap ( accounts ) ; 
 } 
 
 static SyncUserInfo fromLookupUserIdResponse ( LookupUserIdResponse response ) { 
 - return new SyncUserInfo ( response . getUserId ( ) , response . isAdmin ( ) , response . getMetadata ( ) ) ; 
 + return new SyncUserInfo ( response . getUserId ( ) , response . isAdmin ( ) , response . getMetadata ( ) , response . getAccounts ( ) ) ; 
 } 
 
 / * * 
 @ @ - 65 , 6 + 67 , 19 @ @ public class SyncUserInfo { 
 return metadata ; 
 } 
 
 + / * * 
 + * Returns the accounts associated with this user . The map returned is a map of { @ link SyncCredentials . IdentityProvider } 
 + * and the providerId used in that provider . 
 + * < p > 
 + * Example being { @ code ( " password " , " my @ email . com " ) } , if the user created an account using the standard account creation 
 + * supported by the Realm Object Server . 
 + * < p > 
 + * A user can have multiple accounts associated with it . 
 + * 
 + * @ return the accounts associated with the user . 
 + * / 
 + public Map < String , String > getAccounts ( ) { return accounts ; } 
 + 
 @ Override 
 public boolean equals ( Object o ) { 
 if ( this = = o ) return true ; 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java 
 index 827ec07 . . b3ee747 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java 
 @ @ - 56 , 10 + 56 , 12 @ @ public class ChangePasswordRequest { 
 public String toJson ( ) { 
 try { 
 JSONObject request = new JSONObject ( ) ; 
 - request . put ( " new _ password " , newPassword ) ; 
 if ( userID ! = null ) { 
 request . put ( " user _ id " , userID ) ; 
 } 
 + JSONObject data = new JSONObject ( ) ; 
 + data . put ( " new _ password " , newPassword ) ; 
 + request . put ( " data " , data ) ; 
 return request . toString ( ) ; 
 } catch ( JSONException e ) { 
 throw new RuntimeException ( e ) ; 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java 
 index a9d93d7 . . 810b4ee 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java 
 @ @ - 15 , 12 + 15 , 12 @ @ 
 * / 
 package io . realm . internal . network ; 
 
 + import org . json . JSONArray ; 
 import org . json . JSONException ; 
 import org . json . JSONObject ; 
 
 import java . io . IOException ; 
 import java . util . HashMap ; 
 - import java . util . Iterator ; 
 import java . util . Locale ; 
 import java . util . Map ; 
 
 @ @ - 36 , 12 + 36 , 13 @ @ public class LookupUserIdResponse extends AuthServerResponse { 
 
 private static final String JSON _ FIELD _ USER _ ID = " user _ id " ; 
 private static final String JSON _ FIELD _ USER _ IS _ ADMIN = " is _ admin " ; 
 - private static final String JSON _ FIELD _ METADATA = " metadata " ; 
 + private static final String JSON _ FIELD _ METADATA = " metadata " ; 
 + private static final String JSON _ FIELD _ ACCOUNTS = " accounts " ; 
 
 private final String userId ; 
 private final Boolean isAdmin ; 
 private final Map < String , String > metadata ; 
 - 
 + private final Map < String , String > accounts ; 
 / * * 
 * Helper method for creating the proper lookup user response . This method will set the appropriate error 
 * depending on any HTTP response codes or I / O errors . 
 @ @ - 85 , 6 + 86 , 7 @ @ public class LookupUserIdResponse extends AuthServerResponse { 
 this . userId = null ; 
 this . isAdmin = null ; 
 this . metadata = new HashMap < > ( ) ; 
 + this . accounts = new HashMap < > ( ) ; 
 } 
 
 private LookupUserIdResponse ( String serverResponse ) { 
 @ @ - 93 , 11 + 95 , 13 @ @ public class LookupUserIdResponse extends AuthServerResponse { 
 Boolean isAdmin ; 
 String message ; 
 Map < String , String > metadata ; 
 + Map < String , String > accounts ; 
 try { 
 JSONObject obj = new JSONObject ( serverResponse ) ; 
 userId = obj . getString ( JSON _ FIELD _ USER _ ID ) ; 
 isAdmin = obj . getBoolean ( JSON _ FIELD _ USER _ IS _ ADMIN ) ; 
 - metadata = jsonToMap ( obj . getJSONObject ( JSON _ FIELD _ METADATA ) ) ; 
 + metadata = jsonToMap ( obj . getJSONArray ( JSON _ FIELD _ METADATA ) , " key " , " value " ) ; 
 + accounts = jsonToMap ( obj . getJSONArray ( JSON _ FIELD _ ACCOUNTS ) , " provider " , " provider _ id " ) ; 
 error = null ; 
 
 message = String . format ( Locale . US , " Identity % s ; Path % b " , userId , isAdmin ) ; 
 @ @ - 106 , 6 + 110 , 7 @ @ public class LookupUserIdResponse extends AuthServerResponse { 
 userId = null ; 
 isAdmin = null ; 
 metadata = new HashMap < > ( ) ; 
 + accounts = new HashMap < > ( ) ; 
 error = new ObjectServerError ( ErrorCode . JSON _ EXCEPTION , e ) ; 
 message = String . format ( Locale . US , " Error % s " , error . getErrorMessage ( ) ) ; 
 } 
 @ @ - 115 , 6 + 120 , 7 @ @ public class LookupUserIdResponse extends AuthServerResponse { 
 this . userId = userId ; 
 this . isAdmin = isAdmin ; 
 this . metadata = metadata ; 
 + this . accounts = accounts ; 
 } 
 
 public String getUserId ( ) { 
 @ @ - 127 , 21 + 133 , 21 @ @ public class LookupUserIdResponse extends AuthServerResponse { 
 
 public Map < String , String > getMetadata ( ) { return metadata ; } 
 
 - private static Map < String , String > jsonToMap ( JSONObject json ) throws JSONException { 
 - Map < String , String > map = new HashMap < > ( ) ; 
 - if ( json ! = JSONObject . NULL ) { 
 - map = toMap ( json ) ; 
 - } 
 - return map ; 
 - } 
 + public Map < String , String > getAccounts ( ) { return accounts ; } 
 
 - private static Map < String , String > toMap ( JSONObject object ) throws JSONException { 
 + / / Assume arrays of key / value irrespectively of what they are named . 
 + / / Throws if this is not the case 
 + private static Map < String , String > jsonToMap ( JSONArray array , String keyName , String valueName ) throws JSONException { 
 Map < String , String > map = new HashMap < > ( ) ; 
 - Iterator < String > keysItr = object . keys ( ) ; 
 - while ( keysItr . hasNext ( ) ) { 
 - String key = keysItr . next ( ) ; 
 - String value = object . getString ( key ) ; 
 - map . put ( key , value ) ; 
 + if ( array = = null ) { 
 + return map ; 
 + } 
 + for ( int i = 0 ; i < array . length ( ) ; i + + ) { 
 + JSONObject obj = array . getJSONObject ( i ) ; 
 + if ( obj . length ( ) ! = 2 ) { 
 + throw new IllegalStateException ( " Array object not a key / value object . Has " + obj . length ( ) + " fields " ) ; 
 + } 
 + map . put ( obj . getString ( keyName ) , obj . getString ( valueName ) ) ; 
 } 
 return map ; 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 index 88a6fcf . . e3b5db8 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 @ @ - 38 , 7 + 38 , 7 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { 
 public static final MediaType JSON = MediaType . parse ( " application / json ; charset = utf - 8 " ) ; 
 private static final String ACTION _ LOGOUT = " revoke " ; / / Auth end point for logging out users 
 private static final String ACTION _ CHANGE _ PASSWORD = " password " ; / / Auth end point for changing passwords 
 - private static final String ACTION _ LOOKUP _ USER _ ID = " / users / : provider : / : providerId : " ; / / Auth end point for looking up user id 
 + private static final String ACTION _ LOOKUP _ USER _ ID = " users / : provider : / : providerId : " ; / / Auth end point for looking up user id 
 
 private final OkHttpClient client = new OkHttpClient . Builder ( ) 
 . connectTimeout ( 10 , TimeUnit . SECONDS ) 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 index bd53f92 . . c938515 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 @ @ - 44 , 7 + 44 , 6 @ @ import static org . junit . Assert . fail ; 
 * Catch all class for tests that not naturally fit anywhere else . 
 * / 
 @ RunWith ( AndroidJUnit4 . class ) 
 - @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5177 . All waitForInitialRemoteData tests seem to fail . Must be fixed " ) 
 public class SyncedRealmTests extends StandardIntegrationTest { 
 
 @ Test 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 index fddc2c5 . . 8f31327 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 @ @ - 186 , 7 + 186 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) 
 public void changePassword ( ) { 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 String originalPassword = " password " ; 
 @ @ - 198 , 15 + 197 , 23 @ @ public class AuthTests extends StandardIntegrationTest { 
 String newPassword = " new - password " ; 
 userOld . changePassword ( newPassword ) ; 
 userOld . logout ( ) ; 
 + 
 + / / Make sure old password doesn ' t work 
 + try { 
 + SyncUser . login ( SyncCredentials . usernamePassword ( username , originalPassword , false ) , Constants . AUTH _ URL ) ; 
 + fail ( ) ; 
 + } catch ( ObjectServerError e ) { 
 + assertEquals ( ErrorCode . INVALID _ CREDENTIALS , e . getErrorCode ( ) ) ; 
 + } 
 + 
 + / / Then login with new password 
 credentials = SyncCredentials . usernamePassword ( username , newPassword , false ) ; 
 SyncUser userNew = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 - 
 assertTrue ( userNew . isValid ( ) ) ; 
 assertEquals ( userOld . getIdentity ( ) , userNew . getIdentity ( ) ) ; 
 } 
 
 @ Test 
 - @ Ignore ( " See https : / / github . com / realm / ros / issues / 335 " ) 
 public void changePassword _ using _ admin ( ) { 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 String originalPassword = " password " ; 
 @ @ - 234 , 7 + 241 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread 
 - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) 
 public void changePassword _ using _ admin _ async ( ) { 
 final String username = UUID . randomUUID ( ) . toString ( ) ; 
 final String originalPassword = " password " ; 
 @ @ - 274 , 7 + 280 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread 
 - @ Ignore ( " Wait until https : / / github . com / realm / ros / issues / 309 is resolved " ) 
 public void changePassword _ throwWhenUserIsLoggedOut ( ) { 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 String password = " password " ; 
 @ @ - 492 , 6 + 497 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 + @ Ignore ( " See https : / / github . com / realm / ros / issues / 360 " ) 
 public void revokedRefreshTokenIsNotSameAfterLogin ( ) throws InterruptedException { 
 final CountDownLatch userLoggedInAgain = new CountDownLatch ( 1 ) ; 
 final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; 
 @ @ - 508 , 7 + 514 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 
 @ Override 
 public void loggedOut ( SyncUser user ) { 
 - SystemClock . sleep ( 1000 ) ; / / Remove once https : / / github . com / realm / ros / issues / 304 is fixed 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , false ) ; 
 SyncUser loggedInUser = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 
 @ @ - 600 , 7 + 605 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve ( ) { 
 final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; 
 
 @ @ - 618 , 13 + 622 , 13 @ @ public class AuthTests extends StandardIntegrationTest { 
 assertEquals ( identity , userInfo . getIdentity ( ) ) ; 
 assertFalse ( userInfo . isAdmin ( ) ) ; 
 assertTrue ( userInfo . getMetadata ( ) . isEmpty ( ) ) ; 
 + assertEquals ( username , userInfo . getAccounts ( ) . get ( SyncCredentials . IdentityProvider . USERNAME _ PASSWORD ) ) ; 
 } 
 
 
 / / retrieving a logged out user 
 @ Test 
 @ RunTestInLooperThread 
 - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve _ logout ( ) { 
 final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; 
 
 @ @ - 661 , 6 + 665 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 assertEquals ( identity , userInfo . getIdentity ( ) ) ; 
 assertFalse ( userInfo . isAdmin ( ) ) ; 
 assertTrue ( userInfo . getMetadata ( ) . isEmpty ( ) ) ; 
 + assertEquals ( username , userInfo . getAccounts ( ) . get ( SyncCredentials . IdentityProvider . USERNAME _ PASSWORD ) ) ; 
 
 looperThread . testComplete ( ) ; 
 } 
 @ @ - 692 , 7 + 697 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve _ notAdmin ( ) { 
 final String username1 = UUID . randomUUID ( ) . toString ( ) ; 
 final String password1 = " password " ; 
 @ @ - 716 , 7 + 720 , 6 @ @ public class AuthTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread 
 - @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve _ async ( ) { 
 final String username = UUID . randomUUID ( ) . toString ( ) ; 
 final String password = " password " ; 
 @ @ - 737 , 6 + 740 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 assertEquals ( identity , userInfo . getIdentity ( ) ) ; 
 assertFalse ( userInfo . isAdmin ( ) ) ; 
 assertTrue ( userInfo . getMetadata ( ) . isEmpty ( ) ) ; 
 + assertEquals ( username , userInfo . getAccounts ( ) . get ( SyncCredentials . IdentityProvider . USERNAME _ PASSWORD ) ) ; 
 
 looperThread . testComplete ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 index aba3c0e . . 9c4d388 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 
 package io . realm . objectserver . utils ; 
 
 + import android . os . SystemClock ; 
 import android . util . Log ; 
 
 import java . io . IOException ; 
 @ @ - 56 , 6 + 57 , 10 @ @ public class HttpUtils { 
 
 Response response = client . newCall ( request ) . execute ( ) ; 
 if ( ! response . isSuccessful ( ) ) throw new IOException ( " Unexpected code " + response ) ; 
 + 
 + / / Work around race condition between starting ROS and logging in first user 
 + / / See https : / / github . com / realm / ros / issues / 389 
 + SystemClock . sleep ( 2000 ) ; 
 } 
 
 public static void stopSyncServer ( ) throws Exception { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java 
 index a669b7d . . 2434567 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java 
 @ @ - 149 , 8 + 149 , 6 @ @ public class UserFactory { 
 for ( SyncUser user : users . values ( ) ) { 
 user . logout ( ) ; 
 } 
 - / / FIXME https : / / github . com / realm / ros / issues / 338 
 - SystemClock . sleep ( 2000 ) ; 
 allUsersLoggedOut . countDown ( ) ; 
 
 }
