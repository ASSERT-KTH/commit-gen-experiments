BLEU SCORE: 0.049900497019368314

TEST MSG: Setting the server port if not specified by user .
GENERATED MSG: Fixed Realm cache not working .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java b / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java <nl> index 00d690d . . 457637c 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java <nl> @ @ - 173 , 8 + 173 , 8 @ @ public class SyncConfigurationTests { <nl> @ Test <nl> public void serverUrl _ port ( ) { <nl> Map < String , Integer > urlPort = new HashMap < String , Integer > ( ) ; <nl> - urlPort . put ( " realm : / / objectserver . realm . io / ~ / default " , 80 ) ; <nl> - urlPort . put ( " realms : / / objectserver . realm . io / ~ / default " , 443 ) ; <nl> + urlPort . put ( " realm : / / objectserver . realm . io / ~ / default " , SyncConfiguration . PORT _ REALM ) ; <nl> + urlPort . put ( " realms : / / objectserver . realm . io / ~ / default " , SyncConfiguration . PORT _ REALMS ) ; <nl> urlPort . put ( " realm : / / objectserver . realm . io : 8080 / ~ / default " , 8080 ) ; <nl> urlPort . put ( " realms : / / objectserver . realm . io : 2443 / ~ / default " , 2443 ) ; <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java b / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java <nl> index 957f09e . . e8cb2b0 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java <nl> @ @ - 69 , 6 + 69 , 9 @ @ import io . realm . rx . RxObservableFactory ; <nl> * / <nl> public final class SyncConfiguration extends RealmConfiguration { <nl> <nl> + public static final int PORT _ REALM = 80 ; <nl> + public static final int PORT _ REALMS = 443 ; <nl> + <nl> / / The FAT file system has limitations of length . Also , not all characters are permitted . <nl> / / https : / / msdn . microsoft . com / en - us / library / aa365247 ( VS . 85 ) . aspx <nl> public static final int MAX _ FULL _ PATH _ LENGTH = 256 ; <nl> @ @ - 428 , 7 + 431 , 7 @ @ public final class SyncConfiguration extends RealmConfiguration { <nl> int port ; <nl> int currentPort = serverUrl . getPort ( ) ; <nl> if ( currentPort = = - 1 ) { <nl> - port = scheme . equals ( " realm " ) ? 80 : 443 ; <nl> + port = scheme . equals ( " realm " ) ? PORT _ REALM : PORT _ REALMS ; <nl> } else { <nl> port = currentPort ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index 4de768e . . efdcf8f 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 74 , 9 + 74 , 10 @ @ public class RealmTest extends AndroidTestCase { <nl> private final static int BACKGROUND _ COMMIT _ TEST _ DATA _ SET _ SIZE = 5 ; <nl> <nl> <nl> - / / Test io . realm . Realm API <nl> + public void testRealmCache ( ) { <nl> + assertEquals ( testRealm , Realm . getInstance ( getContext ( ) ) ) ; <nl> + } <nl> <nl> - / / Realm Constructors <nl> public void testShouldCreateRealm ( ) { <nl> Realm realm = Realm . getInstance ( getContext ( ) ) ; <nl> assertNotNull ( " Realm . getInstance unexpectedly returns null " , realm ) ; <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index e2e4d8d . . c9817ae 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 365 , 7 + 365 , 7 @ @ public class Realm { <nl> <nl> private static Realm createAndValidate ( String absolutePath , byte [ ] key , boolean validateSchema , boolean autoRefresh ) { <nl> Map < Integer , Realm > realms = realmsCache . get ( ) ; <nl> - Realm realm = realms . get ( absolutePath ) ; <nl> + Realm realm = realms . get ( absolutePath . hashCode ( ) ) ; <nl> <nl> if ( realm ! = null ) { <nl> return realm ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java b / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java 
 index 00d690d . . 457637c 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / SyncConfigurationTests . java 
 @ @ - 173 , 8 + 173 , 8 @ @ public class SyncConfigurationTests { 
 @ Test 
 public void serverUrl _ port ( ) { 
 Map < String , Integer > urlPort = new HashMap < String , Integer > ( ) ; 
 - urlPort . put ( " realm : / / objectserver . realm . io / ~ / default " , 80 ) ; 
 - urlPort . put ( " realms : / / objectserver . realm . io / ~ / default " , 443 ) ; 
 + urlPort . put ( " realm : / / objectserver . realm . io / ~ / default " , SyncConfiguration . PORT _ REALM ) ; 
 + urlPort . put ( " realms : / / objectserver . realm . io / ~ / default " , SyncConfiguration . PORT _ REALMS ) ; 
 urlPort . put ( " realm : / / objectserver . realm . io : 8080 / ~ / default " , 8080 ) ; 
 urlPort . put ( " realms : / / objectserver . realm . io : 2443 / ~ / default " , 2443 ) ; 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java b / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java 
 index 957f09e . . e8cb2b0 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / SyncConfiguration . java 
 @ @ - 69 , 6 + 69 , 9 @ @ import io . realm . rx . RxObservableFactory ; 
 * / 
 public final class SyncConfiguration extends RealmConfiguration { 
 
 + public static final int PORT _ REALM = 80 ; 
 + public static final int PORT _ REALMS = 443 ; 
 + 
 / / The FAT file system has limitations of length . Also , not all characters are permitted . 
 / / https : / / msdn . microsoft . com / en - us / library / aa365247 ( VS . 85 ) . aspx 
 public static final int MAX _ FULL _ PATH _ LENGTH = 256 ; 
 @ @ - 428 , 7 + 431 , 7 @ @ public final class SyncConfiguration extends RealmConfiguration { 
 int port ; 
 int currentPort = serverUrl . getPort ( ) ; 
 if ( currentPort = = - 1 ) { 
 - port = scheme . equals ( " realm " ) ? 80 : 443 ; 
 + port = scheme . equals ( " realm " ) ? PORT _ REALM : PORT _ REALMS ; 
 } else { 
 port = currentPort ; 
 }

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index 4de768e . . efdcf8f 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 74 , 9 + 74 , 10 @ @ public class RealmTest extends AndroidTestCase { 
 private final static int BACKGROUND _ COMMIT _ TEST _ DATA _ SET _ SIZE = 5 ; 
 
 
 - / / Test io . realm . Realm API 
 + public void testRealmCache ( ) { 
 + assertEquals ( testRealm , Realm . getInstance ( getContext ( ) ) ) ; 
 + } 
 
 - / / Realm Constructors 
 public void testShouldCreateRealm ( ) { 
 Realm realm = Realm . getInstance ( getContext ( ) ) ; 
 assertNotNull ( " Realm . getInstance unexpectedly returns null " , realm ) ; 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index e2e4d8d . . c9817ae 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 365 , 7 + 365 , 7 @ @ public class Realm { 
 
 private static Realm createAndValidate ( String absolutePath , byte [ ] key , boolean validateSchema , boolean autoRefresh ) { 
 Map < Integer , Realm > realms = realmsCache . get ( ) ; 
 - Realm realm = realms . get ( absolutePath ) ; 
 + Realm realm = realms . get ( absolutePath . hashCode ( ) ) ; 
 
 if ( realm ! = null ) { 
 return realm ;
