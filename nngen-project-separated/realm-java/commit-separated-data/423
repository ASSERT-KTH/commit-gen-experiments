BLEU SCORE: 0.024615130620079664

TEST MSG: Add multiple users support to UserStore
GENERATED MSG: Improving . so loading by using the ReLinker library

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 7dc20ef . . e91c155 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 2 , 9 + 2 , 10 @ @ <nl> <nl> # # # Object Server API Changes ( In Beta ) <nl> <nl> - * Add a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . <nl> - * Change the order of arguments to SyncCredentials . custom to match iOS : token , provider , userInfo <nl> - * ` SyncUser . all ( ) ` now returns Map instead of List . <nl> + * Added a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . <nl> + * Added multi - user support to ` UserStore ` . Added ` get ( String ) ` and ` remove ( String ) ` , removed ` remove ( ) ` and renamed ` get ( ) ` to ` getCurrent ( ) ` . <nl> + * Changed the order of arguments to ` SyncCredentials . custom ( ) ` to match iOS : token , provider , userInfo . <nl> + * ` SyncUser . all ( ) ` now returns ` Map ` instead of ` List ` . <nl> <nl> # # # Enhancements <nl> <nl> @ @ - 27 , 7 + 28 , 7 @ @ <nl> # # # Internal <nl> <nl> * Updated Realm Sync to 1 . 0 . 0 - BETA - 7 . 2 . <nl> - * Add a Realm backup when receiving a Sync client reset message from the server . <nl> + * Added a Realm backup when receiving a Sync client reset message from the server . <nl> <nl> # # 2 . 2 . 2 <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> index 510bfca . . 47fb8dd 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> @ @ - 51 , 12 + 51 , 17 @ @ public class SyncManagerTests { <nl> public void put ( SyncUser user ) { } <nl> <nl> @ Override <nl> - public SyncUser get ( ) { <nl> + public SyncUser getCurrent ( ) { <nl> return null ; <nl> } <nl> <nl> @ Override <nl> - public void remove ( ) { } <nl> + public SyncUser get ( String identity ) { <nl> + return null ; <nl> + } <nl> + <nl> + @ Override <nl> + public void remove ( String identity ) { } <nl> <nl> @ Override <nl> public Collection < SyncUser > allUsers ( ) { <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> index a3f98fc . . e4a0a4a 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp <nl> @ @ - 23 , 20 + 23 , 37 @ @ <nl> <nl> using namespace realm ; <nl> <nl> - static const char * ERR _ NO _ LOGGED _ IN _ USER = " No user logged in yet . " ; <nl> static const char * ERR _ COULD _ NOT _ ALLOCATE _ MEMORY = " Could not allocate memory to return all users . " ; <nl> <nl> + static jstring <nl> + to _ user _ string _ or _ null ( JNIEnv * env , const std : : shared _ ptr < SyncUser > & user ) <nl> + { <nl> + if ( user ) { <nl> + return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; <nl> + } else { <nl> + return nullptr ; <nl> + } <nl> + } <nl> + <nl> JNIEXPORT jstring JNICALL <nl> Java _ io _ realm _ RealmFileUserStore _ nativeGetCurrentUser ( JNIEnv * env , jclass ) <nl> { <nl> TR _ ENTER ( ) <nl> try { <nl> - const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; <nl> - if ( user ) { <nl> - return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; <nl> - } else { <nl> - return nullptr ; <nl> - } <nl> + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; <nl> + return to _ user _ string _ or _ null ( env , user ) ; <nl> + } CATCH _ STD ( ) <nl> + return nullptr ; <nl> + } <nl> + <nl> + JNIEXPORT jstring JNICALL <nl> + Java _ io _ realm _ RealmFileUserStore _ nativeGetUser ( JNIEnv * env , jclass , jstring identity ) <nl> + { <nl> + TR _ ENTER ( ) <nl> + try { <nl> + JStringAccessor id ( env , identity ) ; / / throws <nl> + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ existing _ logged _ in _ user ( id ) ; <nl> + return to _ user _ string _ or _ null ( env , user ) ; <nl> } CATCH _ STD ( ) <nl> return nullptr ; <nl> } <nl> @ @ - 55 , 15 + 72 , 14 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeUpdateOrCreateUser ( JNIEnv * env , jclass , <nl> } <nl> <nl> JNIEXPORT void JNICALL <nl> - Java _ io _ realm _ RealmFileUserStore _ nativeLogoutCurrentUser ( JNIEnv * env , jclass ) <nl> + Java _ io _ realm _ RealmFileUserStore _ nativeLogoutUser ( JNIEnv * env , jclass , jstring identity ) <nl> { <nl> TR _ ENTER ( ) <nl> try { <nl> - const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; <nl> + JStringAccessor id ( env , identity ) ; / / throws <nl> + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ existing _ logged _ in _ user ( id ) ; <nl> if ( user ) { <nl> user - > log _ out ( ) ; <nl> - } else { <nl> - throw std : : runtime _ error ( ERR _ NO _ LOGGED _ IN _ USER ) ; <nl> } <nl> } CATCH _ STD ( ) <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java <nl> index 0d89455 . . 9ba14bf 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java <nl> @ @ - 42 , 20 + 42 , 26 @ @ public class RealmFileUserStore implements UserStore { <nl> * { @ inheritDoc } <nl> * / <nl> @ Override <nl> - public SyncUser get ( ) { <nl> + public SyncUser getCurrent ( ) { <nl> String userJson = nativeGetCurrentUser ( ) ; <nl> - if ( userJson ! = null ) { <nl> - return SyncUser . fromJson ( userJson ) ; <nl> - } <nl> - return null ; <nl> + return toSyncUserOrNull ( userJson ) ; <nl> } <nl> <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> @ Override <nl> - public void remove ( ) { <nl> - nativeLogoutCurrentUser ( ) ; <nl> + public SyncUser get ( String identity ) { <nl> + String userJson = nativeGetUser ( identity ) ; <nl> + return toSyncUserOrNull ( userJson ) ; <nl> + } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + @ Override <nl> + public void remove ( String identity ) { <nl> + nativeLogoutUser ( identity ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 74 , 17 + 80 , 27 @ @ public class RealmFileUserStore implements UserStore { <nl> return Collections . emptyList ( ) ; <nl> } <nl> <nl> + private static SyncUser toSyncUserOrNull ( String userJson ) { <nl> + if ( userJson = = null ) { <nl> + return null ; <nl> + } <nl> + return SyncUser . fromJson ( userJson ) ; <nl> + } <nl> + <nl> / / init and load the Metadata Realm containing SyncUsers <nl> protected static native void nativeConfigureMetaDataSystem ( String baseFile ) ; <nl> <nl> - / / return json data ( token ) of the current logged in user <nl> + / / returns json data ( token ) of the current logged in user <nl> protected static native String nativeGetCurrentUser ( ) ; <nl> <nl> + / / returns json data ( token ) of the specified user <nl> + protected static native String nativeGetUser ( String identity ) ; <nl> + <nl> protected static native String [ ] nativeGetAllUsers ( ) ; <nl> <nl> protected static native void nativeUpdateOrCreateUser ( String identity , String jsonToken , String url ) ; <nl> <nl> - protected static native void nativeLogoutCurrentUser ( ) ; <nl> + protected static native void nativeLogoutUser ( String identity ) ; <nl> <nl> / / Should only be called for tests <nl> static native void nativeResetForTesting ( ) ; <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> index 8d64d7d . . 91f85f7 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java <nl> @ @ - 96 , 7 + 96 , 7 @ @ public class SyncUser { <nl> * @ throws IllegalStateException if multiple users are logged in . <nl> * / <nl> public static SyncUser currentUser ( ) { <nl> - SyncUser user = SyncManager . getUserStore ( ) . get ( ) ; <nl> + SyncUser user = SyncManager . getUserStore ( ) . getCurrent ( ) ; <nl> if ( user ! = null & & user . isValid ( ) ) { <nl> return user ; <nl> } <nl> @ @ - 299 , 7 + 299 , 7 @ @ public class SyncUser { <nl> / / FIXME We still need to cache the user token so it can be revoked . <nl> syncUser . clearTokens ( ) ; <nl> <nl> - SyncManager . getUserStore ( ) . remove ( ) ; <nl> + SyncManager . getUserStore ( ) . remove ( syncUser . getIdentity ( ) ) ; <nl> <nl> / / Delete all Realms if needed . <nl> for ( ObjectServerUser . AccessDescription desc : syncUser . getRealms ( ) ) { <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> index 052f375 . . 7e566b3 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> @ @ - 43 , 22 + 43 , 28 @ @ public interface UserStore { <nl> <nl> / * * <nl> * Retrieves the current { @ link SyncUser } . <nl> + * < p > <nl> + * This method will throw an exception if more than one valid , logged in users exist . <nl> + * @ return { @ link SyncUser } object or { @ code null } if not found . <nl> + * / <nl> + SyncUser getCurrent ( ) ; <nl> + <nl> + / * * <nl> + * Retrieves specified { @ link SyncUser } . <nl> * <nl> - * For now , current User cannot be called if more that one valid , logged in user <nl> - * exists , it will throw an exception . <nl> + * @ param identity identity of the user . <nl> + * @ return { @ link SyncUser } object or { @ code null } if not found . <nl> * / <nl> - / / TODO when ObjectStore integration of SyncManager is completed & multiple <nl> - / / users are allowed , consider passing the User identity to lookup apply <nl> - / / the operation to a particular user . <nl> - SyncUser get ( ) ; <nl> + SyncUser get ( String identity ) ; <nl> <nl> / * * <nl> - * Removes the current user from the store . <nl> + * Removes the user from the store . <nl> + * < p > <nl> + * If the user is not found , this method does nothing . <nl> + * <nl> + * @ param identity identity of the user . <nl> * / <nl> - / / TODO when ObjectStore integration of SyncManager is completed & multiple <nl> - / / users are allowed , consider passing the User identity to lookup apply <nl> - / / the operation to a particular user . <nl> - void remove ( ) ; <nl> + void remove ( String identity ) ; <nl> <nl> / * * <nl> * Returns a collection of all users saved in the User store .
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java <nl> index 50ac578 . . 9d68b63 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java <nl> @ @ - 37 , 6 + 37 , 4 @ @ public class JNIBinaryTypeTest extends TestCase { <nl> / / table . close ( ) ; <nl> table = null ; <nl> } <nl> - <nl> - <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java <nl> index cacebc9 . . 2efa610 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import static io . realm . internal . ColumnType . * ; <nl> <nl> public class JNITableTest extends AndroidTestCase { <nl> <nl> - Table t = new Table ( ) ; <nl> + Table t ; <nl> <nl> Table createTestTable ( ) { <nl> Table t = new Table ( ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java <nl> index 1ea8d3f . . fc4b53c 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java <nl> @ @ - 22 , 61 + 22 , 62 @ @ import io . realm . internal . TableOrView . PivotType ; <nl> <nl> public class PivotTest extends TestCase { <nl> <nl> - Table t = new Table ( ) ; <nl> + Table t ; <nl> long colIndexSex ; <nl> long colIndexAge ; <nl> long colIndexHired ; <nl> - <nl> + <nl> @ Override <nl> - public void setUp ( ) { <nl> + public void setUp ( ) { <nl> + t = new Table ( ) ; <nl> colIndexSex = t . addColumn ( ColumnType . STRING , " sex " ) ; <nl> colIndexAge = t . addColumn ( ColumnType . INTEGER , " age " ) ; <nl> colIndexHired = t . addColumn ( ColumnType . BOOLEAN , " hired " ) ; <nl> - <nl> + <nl> for ( long i = 0 ; i < 50000 ; i + + ) { <nl> String sex = i % 2 = = 0 ? " Male " : " Female " ; <nl> t . add ( sex , 20 + ( i % 20 ) , true ) ; <nl> } <nl> } <nl> - <nl> + <nl> public void testPivotTable ( ) { <nl> - <nl> + <nl> Table resultCount = t . pivot ( colIndexSex , colIndexAge , PivotType . COUNT ) ; <nl> assertEquals ( 2 , resultCount . size ( ) ) ; <nl> assertEquals ( 25000 , resultCount . getLong ( 1 , 0 ) ) ; <nl> assertEquals ( 25000 , resultCount . getLong ( 1 , 1 ) ) ; <nl> - <nl> + <nl> Table resultMin = t . pivot ( colIndexSex , colIndexAge , PivotType . MIN ) ; <nl> assertEquals ( 20 , resultMin . getLong ( 1 , 0 ) ) ; <nl> assertEquals ( 21 , resultMin . getLong ( 1 , 1 ) ) ; <nl> - <nl> + <nl> Table resultMax = t . pivot ( colIndexSex , colIndexAge , PivotType . MAX ) ; <nl> assertEquals ( 38 , resultMax . getLong ( 1 , 0 ) ) ; <nl> assertEquals ( 39 , resultMax . getLong ( 1 , 1 ) ) ; <nl> - <nl> + <nl> try { t . pivot ( colIndexHired , colIndexAge , PivotType . SUM ) ; fail ( " Group by not a String column " ) ; } catch ( UnsupportedOperationException e ) { } <nl> try { t . pivot ( colIndexSex , colIndexHired , PivotType . SUM ) ; fail ( " Aggregation not an int column " ) ; } catch ( UnsupportedOperationException e ) { } <nl> } <nl> - <nl> - <nl> + <nl> + <nl> public void testPivotTableView ( ) { <nl> - <nl> + <nl> TableView view = t . getSortedView ( colIndexAge ) ; <nl> - <nl> + <nl> Table resultCount = view . pivot ( colIndexSex , colIndexAge , PivotType . COUNT ) ; <nl> assertEquals ( 2 , resultCount . size ( ) ) ; <nl> assertEquals ( 25000 , resultCount . getLong ( 1 , 0 ) ) ; <nl> assertEquals ( 25000 , resultCount . getLong ( 1 , 1 ) ) ; <nl> - <nl> + <nl> Table resultMin = view . pivot ( colIndexSex , colIndexAge , PivotType . MIN ) ; <nl> assertEquals ( 20 , resultMin . getLong ( 1 , 0 ) ) ; <nl> assertEquals ( 21 , resultMin . getLong ( 1 , 1 ) ) ; <nl> - <nl> + <nl> Table resultMax = view . pivot ( colIndexSex , colIndexAge , PivotType . MAX ) ; <nl> assertEquals ( 38 , resultMax . getLong ( 1 , 0 ) ) ; <nl> assertEquals ( 39 , resultMax . getLong ( 1 , 1 ) ) ; <nl> - <nl> - <nl> + <nl> + <nl> try { view . pivot ( colIndexHired , colIndexAge , PivotType . SUM ) ; fail ( " Group by not a String column " ) ; } catch ( UnsupportedOperationException e ) { } <nl> try { view . pivot ( colIndexSex , colIndexHired , PivotType . SUM ) ; fail ( " Aggregation not an int column " ) ; } catch ( UnsupportedOperationException e ) { } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / com / getkeepsafe / relinker / ReLinker . java b / realm / realm - library / src / main / java / com / getkeepsafe / relinker / ReLinker . java <nl> new file mode 100644 <nl> index 0000000 . . d99a77a <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / main / java / com / getkeepsafe / relinker / ReLinker . java <nl> @ @ - 0 , 0 + 1 , 219 @ @ <nl> + / * * <nl> + * Copyright 2015 KeepSafe Software , Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package com . getkeepsafe . relinker ; <nl> + <nl> + import android . content . Context ; <nl> + import android . content . pm . ApplicationInfo ; <nl> + import android . os . Build ; <nl> + import android . text . TextUtils ; <nl> + <nl> + import java . io . Closeable ; <nl> + import java . io . File ; <nl> + import java . io . FileNotFoundException ; <nl> + import java . io . FileOutputStream ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import java . io . OutputStream ; <nl> + import java . util . zip . ZipEntry ; <nl> + import java . util . zip . ZipFile ; <nl> + <nl> + / * * <nl> + * ReLinker is a small library to help alleviate { @ link UnsatisfiedLinkError } exceptions thrown due <nl> + * to Android ' s inability to properly install / load native libraries for Android versions before <nl> + * API 21 <nl> + * / <nl> + @ SuppressWarnings ( " deprecation " ) <nl> + public class ReLinker { <nl> + private static final String LIB _ DIR = " lib " ; <nl> + private static final int MAX _ TRIES = 5 ; <nl> + private static final int COPY _ BUFFER _ SIZE = 4096 ; <nl> + <nl> + private ReLinker ( ) { <nl> + / / No instances <nl> + } <nl> + <nl> + / * * <nl> + * Utilizes the regular system call to attempt to load a native library . If a failure occurs , <nl> + * then the function extracts native . so library out of the app ' s APK and attempts to load it . <nl> + * < p > <nl> + * < strong > Note : This is a synchronous operation < / strong > <nl> + * / <nl> + public static void loadLibrary ( final Context context , final String library ) { <nl> + if ( context = = null ) { <nl> + throw new IllegalArgumentException ( " Given context is null " ) ; <nl> + } <nl> + <nl> + if ( TextUtils . isEmpty ( library ) ) { <nl> + throw new IllegalArgumentException ( " Given library is either null or empty " ) ; <nl> + } <nl> + <nl> + try { <nl> + System . loadLibrary ( library ) ; <nl> + return ; <nl> + } catch ( final UnsatisfiedLinkError ignored ) { <nl> + / / : - ( <nl> + } <nl> + <nl> + final File workaroundFile = getWorkaroundLibFile ( context , library ) ; <nl> + if ( ! workaroundFile . exists ( ) ) { <nl> + unpackLibrary ( context , library ) ; <nl> + } <nl> + <nl> + System . load ( workaroundFile . getAbsolutePath ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ param context { @ link Context } to describe the location of it ' s private directories <nl> + * @ return A { @ link File } locating the directory that can store extracted libraries <nl> + * for later use <nl> + * / <nl> + private static File getWorkaroundLibDir ( final Context context ) { <nl> + return context . getDir ( LIB _ DIR , Context . MODE _ PRIVATE ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ param context { @ link Context } to retrieve the workaround directory from <nl> + * @ param library The name of the library to load <nl> + * @ return A { @ link File } locating the workaround library file to load <nl> + * / <nl> + private static File getWorkaroundLibFile ( final Context context , final String library ) { <nl> + final String libName = System . mapLibraryName ( library ) ; <nl> + return new File ( getWorkaroundLibDir ( context ) , libName ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Attempts to unpack the given library to the workaround directory . Implements retry logic for <nl> + * IO operations to ensure they succeed . <nl> + * <nl> + * @ param context { @ link Context } to describe the location of the installed APK file <nl> + * @ param library The name of the library to load <nl> + * / <nl> + @ SuppressWarnings ( " ResultOfMethodCallIgnored " ) <nl> + private static void unpackLibrary ( final Context context , final String library ) { <nl> + ZipFile zipFile = null ; <nl> + try { <nl> + final ApplicationInfo appInfo = context . getApplicationInfo ( ) ; <nl> + int tries = 0 ; <nl> + while ( tries + + < MAX _ TRIES ) { <nl> + try { <nl> + zipFile = new ZipFile ( new File ( appInfo . sourceDir ) , ZipFile . OPEN _ READ ) ; <nl> + break ; <nl> + } catch ( IOException ignored ) { } <nl> + } <nl> + <nl> + if ( zipFile = = null ) { <nl> + return ; <nl> + } <nl> + <nl> + tries = 0 ; <nl> + while ( tries + + < MAX _ TRIES ) { <nl> + String jniNameInApk ; <nl> + ZipEntry libraryEntry = null ; <nl> + <nl> + if ( Build . VERSION . SDK _ INT > = 21 ) { <nl> + for ( final String ABI : Build . SUPPORTED _ ABIS ) { <nl> + jniNameInApk = " lib / " + ABI + " / " + System . mapLibraryName ( library ) ; <nl> + libraryEntry = zipFile . getEntry ( jniNameInApk ) ; <nl> + <nl> + if ( libraryEntry ! = null ) { <nl> + break ; <nl> + } <nl> + } <nl> + } else { <nl> + / / noinspection deprecation <nl> + jniNameInApk = " lib / " + Build . CPU _ ABI + " / " + System . mapLibraryName ( library ) ; <nl> + libraryEntry = zipFile . getEntry ( jniNameInApk ) ; <nl> + } <nl> + <nl> + if ( libraryEntry = = null ) { <nl> + / / Does not exist in the APK <nl> + break ; <nl> + } <nl> + <nl> + final File outputFile = getWorkaroundLibFile ( context , library ) ; <nl> + outputFile . delete ( ) ; / / Remove any old file that might exist <nl> + <nl> + try { <nl> + if ( ! outputFile . createNewFile ( ) ) { <nl> + continue ; <nl> + } <nl> + } catch ( IOException ignored ) { <nl> + / / Try again <nl> + continue ; <nl> + } <nl> + <nl> + InputStream inputStream = null ; <nl> + FileOutputStream fileOut = null ; <nl> + try { <nl> + inputStream = zipFile . getInputStream ( libraryEntry ) ; <nl> + fileOut = new FileOutputStream ( outputFile ) ; <nl> + copy ( inputStream , fileOut ) ; <nl> + } catch ( FileNotFoundException e ) { <nl> + / / Try again <nl> + continue ; <nl> + } catch ( IOException e ) { <nl> + / / Try again <nl> + continue ; <nl> + } finally { <nl> + closeSilently ( inputStream ) ; <nl> + closeSilently ( fileOut ) ; <nl> + } <nl> + <nl> + / / Change permission to rwxr - xr - x <nl> + outputFile . setReadable ( true , false ) ; <nl> + outputFile . setExecutable ( true , false ) ; <nl> + outputFile . setWritable ( true ) ; <nl> + break ; <nl> + } <nl> + } finally { <nl> + try { <nl> + if ( zipFile ! = null ) { <nl> + zipFile . close ( ) ; <nl> + } <nl> + } catch ( IOException ignored ) { } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Copies all data from an { @ link InputStream } to an { @ link OutputStream } . <nl> + * <nl> + * @ param in The stream to read from . <nl> + * @ param out The stream to write to . <nl> + * @ throws IOException when a stream operation fails . <nl> + * / <nl> + private static void copy ( InputStream in , OutputStream out ) throws IOException { <nl> + byte [ ] buf = new byte [ COPY _ BUFFER _ SIZE ] ; <nl> + while ( true ) { <nl> + int read = in . read ( buf ) ; <nl> + if ( read = = - 1 ) { <nl> + break ; <nl> + } <nl> + out . write ( buf , 0 , read ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Closes a { @ link Closeable } silently ( without throwing or handling any exceptions ) <nl> + * @ param closeable { @ link Closeable } to close <nl> + * / <nl> + private static void closeSilently ( final Closeable closeable ) { <nl> + try { <nl> + if ( closeable ! = null ) { <nl> + closeable . close ( ) ; <nl> + } <nl> + } catch ( IOException ignored ) { } <nl> + } <nl> + } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> index d3a66b3 . . 93d798e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ package io . realm ; <nl> <nl> import android . content . Context ; <nl> <nl> + import com . getkeepsafe . relinker . ReLinker ; <nl> + <nl> import java . io . File ; <nl> import java . lang . reflect . Constructor ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> @ @ - 244 , 6 + 246 , 8 @ @ public class RealmConfiguration { <nl> throw new IllegalArgumentException ( " A non - null Context must be provided " ) ; <nl> } <nl> initializeBuilder ( context . getFilesDir ( ) ) ; <nl> + / / FIXME : Using ReLinker to load . so file adds a string Android dependency <nl> + ReLinker . loadLibrary ( context , " realm - jni " ) ; <nl> } <nl> <nl> / / Setup builder in its initial state <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Group . java b / realm / realm - library / src / main / java / io / realm / internal / Group . java <nl> index c740f01 . . 98be587 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Group . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Group . java <nl> @ @ - 35 , 10 + 35 , 6 @ @ public class Group implements Closeable { <nl> protected boolean immutable ; <nl> private final Context context ; <nl> <nl> - static { <nl> - RealmCore . loadLibrary ( ) ; <nl> - } <nl> - <nl> private void checkNativePtrNotZero ( ) { <nl> if ( this . nativePtr = = 0 ) <nl> / / FIXME : It is wrong to assume that a null pointer means ' out <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java <nl> index 61c93ab . . 586899b 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java <nl> @ @ - 38 , 10 + 38 , 6 @ @ public class SharedGroup implements Closeable { <nl> private boolean activeTransaction ; <nl> private final Context context ; <nl> <nl> - static { <nl> - RealmCore . loadLibrary ( ) ; <nl> - } <nl> - <nl> public enum Durability { <nl> FULL ( 0 ) , <nl> MEM _ ONLY ( 1 ) ; <nl> @ @ - 249 , 7 + 245 , 7 @ @ public class SharedGroup implements Closeable { <nl> return new VersionID ( versionId [ 0 ] , versionId [ 1 ] ) ; <nl> <nl> } <nl> - <nl> + <nl> public static class VersionID implements Comparable < VersionID > { <nl> final long version ; <nl> final long index ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Util . java b / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> index 85cf216 . . 698d645 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Util . java <nl> @ @ - 20 , 10 + 20 , 6 @ @ import io . realm . RealmObject ; <nl> <nl> public class Util { <nl> <nl> - static { <nl> - RealmCore . loadLibrary ( ) ; <nl> - } <nl> - <nl> public static long getNativeMemUsage ( ) { <nl> return nativeGetMemUsage ( ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 7dc20ef . . e91c155 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 2 , 9 + 2 , 10 @ @ 
 
 # # # Object Server API Changes ( In Beta ) 
 
 - * Add a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . 
 - * Change the order of arguments to SyncCredentials . custom to match iOS : token , provider , userInfo 
 - * ` SyncUser . all ( ) ` now returns Map instead of List . 
 + * Added a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . 
 + * Added multi - user support to ` UserStore ` . Added ` get ( String ) ` and ` remove ( String ) ` , removed ` remove ( ) ` and renamed ` get ( ) ` to ` getCurrent ( ) ` . 
 + * Changed the order of arguments to ` SyncCredentials . custom ( ) ` to match iOS : token , provider , userInfo . 
 + * ` SyncUser . all ( ) ` now returns ` Map ` instead of ` List ` . 
 
 # # # Enhancements 
 
 @ @ - 27 , 7 + 28 , 7 @ @ 
 # # # Internal 
 
 * Updated Realm Sync to 1 . 0 . 0 - BETA - 7 . 2 . 
 - * Add a Realm backup when receiving a Sync client reset message from the server . 
 + * Added a Realm backup when receiving a Sync client reset message from the server . 
 
 # # 2 . 2 . 2 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 index 510bfca . . 47fb8dd 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 @ @ - 51 , 12 + 51 , 17 @ @ public class SyncManagerTests { 
 public void put ( SyncUser user ) { } 
 
 @ Override 
 - public SyncUser get ( ) { 
 + public SyncUser getCurrent ( ) { 
 return null ; 
 } 
 
 @ Override 
 - public void remove ( ) { } 
 + public SyncUser get ( String identity ) { 
 + return null ; 
 + } 
 + 
 + @ Override 
 + public void remove ( String identity ) { } 
 
 @ Override 
 public Collection < SyncUser > allUsers ( ) { 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 index a3f98fc . . e4a0a4a 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ RealmFileUserStore . cpp 
 @ @ - 23 , 20 + 23 , 37 @ @ 
 
 using namespace realm ; 
 
 - static const char * ERR _ NO _ LOGGED _ IN _ USER = " No user logged in yet . " ; 
 static const char * ERR _ COULD _ NOT _ ALLOCATE _ MEMORY = " Could not allocate memory to return all users . " ; 
 
 + static jstring 
 + to _ user _ string _ or _ null ( JNIEnv * env , const std : : shared _ ptr < SyncUser > & user ) 
 + { 
 + if ( user ) { 
 + return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; 
 + } else { 
 + return nullptr ; 
 + } 
 + } 
 + 
 JNIEXPORT jstring JNICALL 
 Java _ io _ realm _ RealmFileUserStore _ nativeGetCurrentUser ( JNIEnv * env , jclass ) 
 { 
 TR _ ENTER ( ) 
 try { 
 - const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; 
 - if ( user ) { 
 - return to _ jstring ( env , user - > refresh _ token ( ) . data ( ) ) ; 
 - } else { 
 - return nullptr ; 
 - } 
 + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; 
 + return to _ user _ string _ or _ null ( env , user ) ; 
 + } CATCH _ STD ( ) 
 + return nullptr ; 
 + } 
 + 
 + JNIEXPORT jstring JNICALL 
 + Java _ io _ realm _ RealmFileUserStore _ nativeGetUser ( JNIEnv * env , jclass , jstring identity ) 
 + { 
 + TR _ ENTER ( ) 
 + try { 
 + JStringAccessor id ( env , identity ) ; / / throws 
 + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ existing _ logged _ in _ user ( id ) ; 
 + return to _ user _ string _ or _ null ( env , user ) ; 
 } CATCH _ STD ( ) 
 return nullptr ; 
 } 
 @ @ - 55 , 15 + 72 , 14 @ @ Java _ io _ realm _ RealmFileUserStore _ nativeUpdateOrCreateUser ( JNIEnv * env , jclass , 
 } 
 
 JNIEXPORT void JNICALL 
 - Java _ io _ realm _ RealmFileUserStore _ nativeLogoutCurrentUser ( JNIEnv * env , jclass ) 
 + Java _ io _ realm _ RealmFileUserStore _ nativeLogoutUser ( JNIEnv * env , jclass , jstring identity ) 
 { 
 TR _ ENTER ( ) 
 try { 
 - const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ current _ user ( ) ; 
 + JStringAccessor id ( env , identity ) ; / / throws 
 + const std : : shared _ ptr < SyncUser > & user = SyncManager : : shared ( ) . get _ existing _ logged _ in _ user ( id ) ; 
 if ( user ) { 
 user - > log _ out ( ) ; 
 - } else { 
 - throw std : : runtime _ error ( ERR _ NO _ LOGGED _ IN _ USER ) ; 
 } 
 } CATCH _ STD ( ) 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java 
 index 0d89455 . . 9ba14bf 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / RealmFileUserStore . java 
 @ @ - 42 , 20 + 42 , 26 @ @ public class RealmFileUserStore implements UserStore { 
 * { @ inheritDoc } 
 * / 
 @ Override 
 - public SyncUser get ( ) { 
 + public SyncUser getCurrent ( ) { 
 String userJson = nativeGetCurrentUser ( ) ; 
 - if ( userJson ! = null ) { 
 - return SyncUser . fromJson ( userJson ) ; 
 - } 
 - return null ; 
 + return toSyncUserOrNull ( userJson ) ; 
 } 
 
 / * * 
 * { @ inheritDoc } 
 * / 
 @ Override 
 - public void remove ( ) { 
 - nativeLogoutCurrentUser ( ) ; 
 + public SyncUser get ( String identity ) { 
 + String userJson = nativeGetUser ( identity ) ; 
 + return toSyncUserOrNull ( userJson ) ; 
 + } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + @ Override 
 + public void remove ( String identity ) { 
 + nativeLogoutUser ( identity ) ; 
 } 
 
 / * * 
 @ @ - 74 , 17 + 80 , 27 @ @ public class RealmFileUserStore implements UserStore { 
 return Collections . emptyList ( ) ; 
 } 
 
 + private static SyncUser toSyncUserOrNull ( String userJson ) { 
 + if ( userJson = = null ) { 
 + return null ; 
 + } 
 + return SyncUser . fromJson ( userJson ) ; 
 + } 
 + 
 / / init and load the Metadata Realm containing SyncUsers 
 protected static native void nativeConfigureMetaDataSystem ( String baseFile ) ; 
 
 - / / return json data ( token ) of the current logged in user 
 + / / returns json data ( token ) of the current logged in user 
 protected static native String nativeGetCurrentUser ( ) ; 
 
 + / / returns json data ( token ) of the specified user 
 + protected static native String nativeGetUser ( String identity ) ; 
 + 
 protected static native String [ ] nativeGetAllUsers ( ) ; 
 
 protected static native void nativeUpdateOrCreateUser ( String identity , String jsonToken , String url ) ; 
 
 - protected static native void nativeLogoutCurrentUser ( ) ; 
 + protected static native void nativeLogoutUser ( String identity ) ; 
 
 / / Should only be called for tests 
 static native void nativeResetForTesting ( ) ; 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 index 8d64d7d . . 91f85f7 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / SyncUser . java 
 @ @ - 96 , 7 + 96 , 7 @ @ public class SyncUser { 
 * @ throws IllegalStateException if multiple users are logged in . 
 * / 
 public static SyncUser currentUser ( ) { 
 - SyncUser user = SyncManager . getUserStore ( ) . get ( ) ; 
 + SyncUser user = SyncManager . getUserStore ( ) . getCurrent ( ) ; 
 if ( user ! = null & & user . isValid ( ) ) { 
 return user ; 
 } 
 @ @ - 299 , 7 + 299 , 7 @ @ public class SyncUser { 
 / / FIXME We still need to cache the user token so it can be revoked . 
 syncUser . clearTokens ( ) ; 
 
 - SyncManager . getUserStore ( ) . remove ( ) ; 
 + SyncManager . getUserStore ( ) . remove ( syncUser . getIdentity ( ) ) ; 
 
 / / Delete all Realms if needed . 
 for ( ObjectServerUser . AccessDescription desc : syncUser . getRealms ( ) ) { 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 index 052f375 . . 7e566b3 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 @ @ - 43 , 22 + 43 , 28 @ @ public interface UserStore { 
 
 / * * 
 * Retrieves the current { @ link SyncUser } . 
 + * < p > 
 + * This method will throw an exception if more than one valid , logged in users exist . 
 + * @ return { @ link SyncUser } object or { @ code null } if not found . 
 + * / 
 + SyncUser getCurrent ( ) ; 
 + 
 + / * * 
 + * Retrieves specified { @ link SyncUser } . 
 * 
 - * For now , current User cannot be called if more that one valid , logged in user 
 - * exists , it will throw an exception . 
 + * @ param identity identity of the user . 
 + * @ return { @ link SyncUser } object or { @ code null } if not found . 
 * / 
 - / / TODO when ObjectStore integration of SyncManager is completed & multiple 
 - / / users are allowed , consider passing the User identity to lookup apply 
 - / / the operation to a particular user . 
 - SyncUser get ( ) ; 
 + SyncUser get ( String identity ) ; 
 
 / * * 
 - * Removes the current user from the store . 
 + * Removes the user from the store . 
 + * < p > 
 + * If the user is not found , this method does nothing . 
 + * 
 + * @ param identity identity of the user . 
 * / 
 - / / TODO when ObjectStore integration of SyncManager is completed & multiple 
 - / / users are allowed , consider passing the User identity to lookup apply 
 - / / the operation to a particular user . 
 - void remove ( ) ; 
 + void remove ( String identity ) ; 
 
 / * * 
 * Returns a collection of all users saved in the User store .

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java 
 index 50ac578 . . 9d68b63 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIBinaryTypeTest . java 
 @ @ - 37 , 6 + 37 , 4 @ @ public class JNIBinaryTypeTest extends TestCase { 
 / / table . close ( ) ; 
 table = null ; 
 } 
 - 
 - 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java 
 index cacebc9 . . 2efa610 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNITableTest . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import static io . realm . internal . ColumnType . * ; 
 
 public class JNITableTest extends AndroidTestCase { 
 
 - Table t = new Table ( ) ; 
 + Table t ; 
 
 Table createTestTable ( ) { 
 Table t = new Table ( ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java 
 index 1ea8d3f . . fc4b53c 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / PivotTest . java 
 @ @ - 22 , 61 + 22 , 62 @ @ import io . realm . internal . TableOrView . PivotType ; 
 
 public class PivotTest extends TestCase { 
 
 - Table t = new Table ( ) ; 
 + Table t ; 
 long colIndexSex ; 
 long colIndexAge ; 
 long colIndexHired ; 
 - 
 + 
 @ Override 
 - public void setUp ( ) { 
 + public void setUp ( ) { 
 + t = new Table ( ) ; 
 colIndexSex = t . addColumn ( ColumnType . STRING , " sex " ) ; 
 colIndexAge = t . addColumn ( ColumnType . INTEGER , " age " ) ; 
 colIndexHired = t . addColumn ( ColumnType . BOOLEAN , " hired " ) ; 
 - 
 + 
 for ( long i = 0 ; i < 50000 ; i + + ) { 
 String sex = i % 2 = = 0 ? " Male " : " Female " ; 
 t . add ( sex , 20 + ( i % 20 ) , true ) ; 
 } 
 } 
 - 
 + 
 public void testPivotTable ( ) { 
 - 
 + 
 Table resultCount = t . pivot ( colIndexSex , colIndexAge , PivotType . COUNT ) ; 
 assertEquals ( 2 , resultCount . size ( ) ) ; 
 assertEquals ( 25000 , resultCount . getLong ( 1 , 0 ) ) ; 
 assertEquals ( 25000 , resultCount . getLong ( 1 , 1 ) ) ; 
 - 
 + 
 Table resultMin = t . pivot ( colIndexSex , colIndexAge , PivotType . MIN ) ; 
 assertEquals ( 20 , resultMin . getLong ( 1 , 0 ) ) ; 
 assertEquals ( 21 , resultMin . getLong ( 1 , 1 ) ) ; 
 - 
 + 
 Table resultMax = t . pivot ( colIndexSex , colIndexAge , PivotType . MAX ) ; 
 assertEquals ( 38 , resultMax . getLong ( 1 , 0 ) ) ; 
 assertEquals ( 39 , resultMax . getLong ( 1 , 1 ) ) ; 
 - 
 + 
 try { t . pivot ( colIndexHired , colIndexAge , PivotType . SUM ) ; fail ( " Group by not a String column " ) ; } catch ( UnsupportedOperationException e ) { } 
 try { t . pivot ( colIndexSex , colIndexHired , PivotType . SUM ) ; fail ( " Aggregation not an int column " ) ; } catch ( UnsupportedOperationException e ) { } 
 } 
 - 
 - 
 + 
 + 
 public void testPivotTableView ( ) { 
 - 
 + 
 TableView view = t . getSortedView ( colIndexAge ) ; 
 - 
 + 
 Table resultCount = view . pivot ( colIndexSex , colIndexAge , PivotType . COUNT ) ; 
 assertEquals ( 2 , resultCount . size ( ) ) ; 
 assertEquals ( 25000 , resultCount . getLong ( 1 , 0 ) ) ; 
 assertEquals ( 25000 , resultCount . getLong ( 1 , 1 ) ) ; 
 - 
 + 
 Table resultMin = view . pivot ( colIndexSex , colIndexAge , PivotType . MIN ) ; 
 assertEquals ( 20 , resultMin . getLong ( 1 , 0 ) ) ; 
 assertEquals ( 21 , resultMin . getLong ( 1 , 1 ) ) ; 
 - 
 + 
 Table resultMax = view . pivot ( colIndexSex , colIndexAge , PivotType . MAX ) ; 
 assertEquals ( 38 , resultMax . getLong ( 1 , 0 ) ) ; 
 assertEquals ( 39 , resultMax . getLong ( 1 , 1 ) ) ; 
 - 
 - 
 + 
 + 
 try { view . pivot ( colIndexHired , colIndexAge , PivotType . SUM ) ; fail ( " Group by not a String column " ) ; } catch ( UnsupportedOperationException e ) { } 
 try { view . pivot ( colIndexSex , colIndexHired , PivotType . SUM ) ; fail ( " Aggregation not an int column " ) ; } catch ( UnsupportedOperationException e ) { } 
 } 
 diff - - git a / realm / realm - library / src / main / java / com / getkeepsafe / relinker / ReLinker . java b / realm / realm - library / src / main / java / com / getkeepsafe / relinker / ReLinker . java 
 new file mode 100644 
 index 0000000 . . d99a77a 
 - - - / dev / null 
 + + + b / realm / realm - library / src / main / java / com / getkeepsafe / relinker / ReLinker . java 
 @ @ - 0 , 0 + 1 , 219 @ @ 
 + / * * 
 + * Copyright 2015 KeepSafe Software , Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package com . getkeepsafe . relinker ; 
 + 
 + import android . content . Context ; 
 + import android . content . pm . ApplicationInfo ; 
 + import android . os . Build ; 
 + import android . text . TextUtils ; 
 + 
 + import java . io . Closeable ; 
 + import java . io . File ; 
 + import java . io . FileNotFoundException ; 
 + import java . io . FileOutputStream ; 
 + import java . io . IOException ; 
 + import java . io . InputStream ; 
 + import java . io . OutputStream ; 
 + import java . util . zip . ZipEntry ; 
 + import java . util . zip . ZipFile ; 
 + 
 + / * * 
 + * ReLinker is a small library to help alleviate { @ link UnsatisfiedLinkError } exceptions thrown due 
 + * to Android ' s inability to properly install / load native libraries for Android versions before 
 + * API 21 
 + * / 
 + @ SuppressWarnings ( " deprecation " ) 
 + public class ReLinker { 
 + private static final String LIB _ DIR = " lib " ; 
 + private static final int MAX _ TRIES = 5 ; 
 + private static final int COPY _ BUFFER _ SIZE = 4096 ; 
 + 
 + private ReLinker ( ) { 
 + / / No instances 
 + } 
 + 
 + / * * 
 + * Utilizes the regular system call to attempt to load a native library . If a failure occurs , 
 + * then the function extracts native . so library out of the app ' s APK and attempts to load it . 
 + * < p > 
 + * < strong > Note : This is a synchronous operation < / strong > 
 + * / 
 + public static void loadLibrary ( final Context context , final String library ) { 
 + if ( context = = null ) { 
 + throw new IllegalArgumentException ( " Given context is null " ) ; 
 + } 
 + 
 + if ( TextUtils . isEmpty ( library ) ) { 
 + throw new IllegalArgumentException ( " Given library is either null or empty " ) ; 
 + } 
 + 
 + try { 
 + System . loadLibrary ( library ) ; 
 + return ; 
 + } catch ( final UnsatisfiedLinkError ignored ) { 
 + / / : - ( 
 + } 
 + 
 + final File workaroundFile = getWorkaroundLibFile ( context , library ) ; 
 + if ( ! workaroundFile . exists ( ) ) { 
 + unpackLibrary ( context , library ) ; 
 + } 
 + 
 + System . load ( workaroundFile . getAbsolutePath ( ) ) ; 
 + } 
 + 
 + / * * 
 + * @ param context { @ link Context } to describe the location of it ' s private directories 
 + * @ return A { @ link File } locating the directory that can store extracted libraries 
 + * for later use 
 + * / 
 + private static File getWorkaroundLibDir ( final Context context ) { 
 + return context . getDir ( LIB _ DIR , Context . MODE _ PRIVATE ) ; 
 + } 
 + 
 + / * * 
 + * @ param context { @ link Context } to retrieve the workaround directory from 
 + * @ param library The name of the library to load 
 + * @ return A { @ link File } locating the workaround library file to load 
 + * / 
 + private static File getWorkaroundLibFile ( final Context context , final String library ) { 
 + final String libName = System . mapLibraryName ( library ) ; 
 + return new File ( getWorkaroundLibDir ( context ) , libName ) ; 
 + } 
 + 
 + / * * 
 + * Attempts to unpack the given library to the workaround directory . Implements retry logic for 
 + * IO operations to ensure they succeed . 
 + * 
 + * @ param context { @ link Context } to describe the location of the installed APK file 
 + * @ param library The name of the library to load 
 + * / 
 + @ SuppressWarnings ( " ResultOfMethodCallIgnored " ) 
 + private static void unpackLibrary ( final Context context , final String library ) { 
 + ZipFile zipFile = null ; 
 + try { 
 + final ApplicationInfo appInfo = context . getApplicationInfo ( ) ; 
 + int tries = 0 ; 
 + while ( tries + + < MAX _ TRIES ) { 
 + try { 
 + zipFile = new ZipFile ( new File ( appInfo . sourceDir ) , ZipFile . OPEN _ READ ) ; 
 + break ; 
 + } catch ( IOException ignored ) { } 
 + } 
 + 
 + if ( zipFile = = null ) { 
 + return ; 
 + } 
 + 
 + tries = 0 ; 
 + while ( tries + + < MAX _ TRIES ) { 
 + String jniNameInApk ; 
 + ZipEntry libraryEntry = null ; 
 + 
 + if ( Build . VERSION . SDK _ INT > = 21 ) { 
 + for ( final String ABI : Build . SUPPORTED _ ABIS ) { 
 + jniNameInApk = " lib / " + ABI + " / " + System . mapLibraryName ( library ) ; 
 + libraryEntry = zipFile . getEntry ( jniNameInApk ) ; 
 + 
 + if ( libraryEntry ! = null ) { 
 + break ; 
 + } 
 + } 
 + } else { 
 + / / noinspection deprecation 
 + jniNameInApk = " lib / " + Build . CPU _ ABI + " / " + System . mapLibraryName ( library ) ; 
 + libraryEntry = zipFile . getEntry ( jniNameInApk ) ; 
 + } 
 + 
 + if ( libraryEntry = = null ) { 
 + / / Does not exist in the APK 
 + break ; 
 + } 
 + 
 + final File outputFile = getWorkaroundLibFile ( context , library ) ; 
 + outputFile . delete ( ) ; / / Remove any old file that might exist 
 + 
 + try { 
 + if ( ! outputFile . createNewFile ( ) ) { 
 + continue ; 
 + } 
 + } catch ( IOException ignored ) { 
 + / / Try again 
 + continue ; 
 + } 
 + 
 + InputStream inputStream = null ; 
 + FileOutputStream fileOut = null ; 
 + try { 
 + inputStream = zipFile . getInputStream ( libraryEntry ) ; 
 + fileOut = new FileOutputStream ( outputFile ) ; 
 + copy ( inputStream , fileOut ) ; 
 + } catch ( FileNotFoundException e ) { 
 + / / Try again 
 + continue ; 
 + } catch ( IOException e ) { 
 + / / Try again 
 + continue ; 
 + } finally { 
 + closeSilently ( inputStream ) ; 
 + closeSilently ( fileOut ) ; 
 + } 
 + 
 + / / Change permission to rwxr - xr - x 
 + outputFile . setReadable ( true , false ) ; 
 + outputFile . setExecutable ( true , false ) ; 
 + outputFile . setWritable ( true ) ; 
 + break ; 
 + } 
 + } finally { 
 + try { 
 + if ( zipFile ! = null ) { 
 + zipFile . close ( ) ; 
 + } 
 + } catch ( IOException ignored ) { } 
 + } 
 + } 
 + 
 + / * * 
 + * Copies all data from an { @ link InputStream } to an { @ link OutputStream } . 
 + * 
 + * @ param in The stream to read from . 
 + * @ param out The stream to write to . 
 + * @ throws IOException when a stream operation fails . 
 + * / 
 + private static void copy ( InputStream in , OutputStream out ) throws IOException { 
 + byte [ ] buf = new byte [ COPY _ BUFFER _ SIZE ] ; 
 + while ( true ) { 
 + int read = in . read ( buf ) ; 
 + if ( read = = - 1 ) { 
 + break ; 
 + } 
 + out . write ( buf , 0 , read ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Closes a { @ link Closeable } silently ( without throwing or handling any exceptions ) 
 + * @ param closeable { @ link Closeable } to close 
 + * / 
 + private static void closeSilently ( final Closeable closeable ) { 
 + try { 
 + if ( closeable ! = null ) { 
 + closeable . close ( ) ; 
 + } 
 + } catch ( IOException ignored ) { } 
 + } 
 + } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 index d3a66b3 . . 93d798e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 18 , 6 + 18 , 8 @ @ package io . realm ; 
 
 import android . content . Context ; 
 
 + import com . getkeepsafe . relinker . ReLinker ; 
 + 
 import java . io . File ; 
 import java . lang . reflect . Constructor ; 
 import java . lang . reflect . InvocationTargetException ; 
 @ @ - 244 , 6 + 246 , 8 @ @ public class RealmConfiguration { 
 throw new IllegalArgumentException ( " A non - null Context must be provided " ) ; 
 } 
 initializeBuilder ( context . getFilesDir ( ) ) ; 
 + / / FIXME : Using ReLinker to load . so file adds a string Android dependency 
 + ReLinker . loadLibrary ( context , " realm - jni " ) ; 
 } 
 
 / / Setup builder in its initial state 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Group . java b / realm / realm - library / src / main / java / io / realm / internal / Group . java 
 index c740f01 . . 98be587 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Group . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Group . java 
 @ @ - 35 , 10 + 35 , 6 @ @ public class Group implements Closeable { 
 protected boolean immutable ; 
 private final Context context ; 
 
 - static { 
 - RealmCore . loadLibrary ( ) ; 
 - } 
 - 
 private void checkNativePtrNotZero ( ) { 
 if ( this . nativePtr = = 0 ) 
 / / FIXME : It is wrong to assume that a null pointer means ' out 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java 
 index 61c93ab . . 586899b 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedGroup . java 
 @ @ - 38 , 10 + 38 , 6 @ @ public class SharedGroup implements Closeable { 
 private boolean activeTransaction ; 
 private final Context context ; 
 
 - static { 
 - RealmCore . loadLibrary ( ) ; 
 - } 
 - 
 public enum Durability { 
 FULL ( 0 ) , 
 MEM _ ONLY ( 1 ) ; 
 @ @ - 249 , 7 + 245 , 7 @ @ public class SharedGroup implements Closeable { 
 return new VersionID ( versionId [ 0 ] , versionId [ 1 ] ) ; 
 
 } 
 - 
 + 
 public static class VersionID implements Comparable < VersionID > { 
 final long version ; 
 final long index ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Util . java b / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 index 85cf216 . . 698d645 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Util . java 
 @ @ - 20 , 10 + 20 , 6 @ @ import io . realm . RealmObject ; 
 
 public class Util { 
 
 - static { 
 - RealmCore . loadLibrary ( ) ; 
 - } 
 - 
 public static long getNativeMemUsage ( ) { 
 return nativeGetMemUsage ( ) ; 
 }
