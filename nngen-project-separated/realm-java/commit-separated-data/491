BLEU SCORE: 0.5

TEST MSG: Fix DynamicRealmTests
GENERATED MSG: Remove accessingDynamicRealmObjectBeforeAsyncQueryCompleted

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> index cdd8648 . . 4699a1a 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> @ @ - 342 , 21 + 342 , 20 @ @ public class DynamicRealmTests { <nl> <nl> @ Test <nl> public void findFirst ( ) { <nl> + populateTestRealm ( realm , 10 ) ; <nl> final DynamicRealmObject allTypes = realm . where ( AllTypes . CLASS _ NAME ) <nl> . between ( AllTypes . FIELD _ LONG , 4 , 9 ) <nl> . findFirst ( ) ; <nl> - populateTestRealm ( realm , 10 ) ; <nl> assertEquals ( " test data 4 " , allTypes . getString ( AllTypes . FIELD _ STRING ) ) ; <nl> } <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> - public void findFirst _ async ( ) { <nl> + public void findFirstAsync ( ) { <nl> final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; <nl> final DynamicRealmObject allTypes = dynamicRealm . where ( AllTypes . CLASS _ NAME ) <nl> . between ( AllTypes . FIELD _ LONG , 4 , 9 ) <nl> - . findFirst ( ) ; <nl> - assertTrue ( allTypes . realmGet $ proxyState ( ) . getRow $ realm ( ) instanceof PendingRow ) ; <nl> + . findFirstAsync ( ) ; <nl> looperThread . keepStrongReference . add ( allTypes ) ; <nl> allTypes . addChangeListener ( new RealmChangeListener < DynamicRealmObject > ( ) { <nl> @ Override <nl> @ @ - 370 , 14 + 369 , 11 @ @ public class DynamicRealmTests { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> - public void findAllAsync ( ) { <nl> + public void findAll _ async ( ) { <nl> final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; <nl> final RealmResults < DynamicRealmObject > allTypes = dynamicRealm . where ( AllTypes . CLASS _ NAME ) <nl> . between ( AllTypes . FIELD _ LONG , 4 , 9 ) <nl> - . findAllAsync ( ) ; <nl> - <nl> - assertFalse ( allTypes . isLoaded ( ) ) ; <nl> - assertEquals ( 0 , allTypes . size ( ) ) ; <nl> + . findAll ( ) ; <nl> <nl> allTypes . addChangeListener ( new RealmChangeListener < RealmResults < DynamicRealmObject > > ( ) { <nl> @ Override <nl> @ @ - 395 , 13 + 391 , 11 @ @ public class DynamicRealmTests { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> - public void findAllSortedAsync ( ) { <nl> + public void findAllSorted _ async ( ) { <nl> final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; <nl> final RealmResults < DynamicRealmObject > allTypes = dynamicRealm . where ( AllTypes . CLASS _ NAME ) <nl> . between ( AllTypes . FIELD _ LONG , 0 , 4 ) <nl> - . findAllSortedAsync ( AllTypes . FIELD _ STRING , Sort . DESCENDING ) ; <nl> - assertFalse ( allTypes . isLoaded ( ) ) ; <nl> - assertEquals ( 0 , allTypes . size ( ) ) ; <nl> + . findAllSorted ( AllTypes . FIELD _ STRING , Sort . DESCENDING ) ; <nl> <nl> allTypes . addChangeListener ( new RealmChangeListener < RealmResults < DynamicRealmObject > > ( ) { <nl> @ Override
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> index bad48a2 . . cdd8648 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> @ @ - 537 , 49 + 537 , 6 @ @ public class DynamicRealmTests { <nl> } <nl> <nl> @ Test <nl> - @ RunTestInLooperThread <nl> - public void accessingDynamicRealmObjectBeforeAsyncQueryCompleted ( ) { <nl> - / * <nl> - final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; <nl> - final DynamicRealmObject [ ] dynamicRealmObject = new DynamicRealmObject [ 1 ] ; <nl> - <nl> - / / Intercept completion of the async DynamicRealmObject query <nl> - Handler handler = new HandlerProxy ( dynamicRealm . handlerController ) { <nl> - @ Override <nl> - public boolean onInterceptInMessage ( int what ) { <nl> - switch ( what ) { <nl> - case HandlerControllerConstants . COMPLETED _ ASYNC _ REALM _ OBJECT : { <nl> - post ( new Runnable ( ) { <nl> - @ Override <nl> - public void run ( ) { <nl> - assertFalse ( dynamicRealmObject [ 0 ] . isLoaded ( ) ) ; <nl> - assertFalse ( dynamicRealmObject [ 0 ] . isValid ( ) ) ; <nl> - try { <nl> - dynamicRealmObject [ 0 ] . getObject ( AllTypes . FIELD _ BINARY ) ; <nl> - fail ( " trying to access a DynamicRealmObject property should throw " ) ; <nl> - } catch ( IllegalStateException ignored ) { <nl> - <nl> - } finally { <nl> - dynamicRealm . close ( ) ; <nl> - looperThread . testComplete ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - return true ; <nl> - } <nl> - } <nl> - return false ; <nl> - } <nl> - } ; <nl> - <nl> - / / dynamicRealm . setHandler ( handler ) ; <nl> - dynamicRealmObject [ 0 ] = dynamicRealm . where ( AllTypes . CLASS _ NAME ) <nl> - . between ( AllTypes . FIELD _ LONG , 4 , 9 ) <nl> - . findFirstAsync ( ) ; <nl> - * / <nl> - } <nl> - <nl> - @ Test <nl> public void deleteAll ( ) { <nl> realm . beginTransaction ( ) ; <nl> realm . createObject ( AllTypes . CLASS _ NAME ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 index cdd8648 . . 4699a1a 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 @ @ - 342 , 21 + 342 , 20 @ @ public class DynamicRealmTests { 
 
 @ Test 
 public void findFirst ( ) { 
 + populateTestRealm ( realm , 10 ) ; 
 final DynamicRealmObject allTypes = realm . where ( AllTypes . CLASS _ NAME ) 
 . between ( AllTypes . FIELD _ LONG , 4 , 9 ) 
 . findFirst ( ) ; 
 - populateTestRealm ( realm , 10 ) ; 
 assertEquals ( " test data 4 " , allTypes . getString ( AllTypes . FIELD _ STRING ) ) ; 
 } 
 
 @ Test 
 @ RunTestInLooperThread 
 - public void findFirst _ async ( ) { 
 + public void findFirstAsync ( ) { 
 final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; 
 final DynamicRealmObject allTypes = dynamicRealm . where ( AllTypes . CLASS _ NAME ) 
 . between ( AllTypes . FIELD _ LONG , 4 , 9 ) 
 - . findFirst ( ) ; 
 - assertTrue ( allTypes . realmGet $ proxyState ( ) . getRow $ realm ( ) instanceof PendingRow ) ; 
 + . findFirstAsync ( ) ; 
 looperThread . keepStrongReference . add ( allTypes ) ; 
 allTypes . addChangeListener ( new RealmChangeListener < DynamicRealmObject > ( ) { 
 @ Override 
 @ @ - 370 , 14 + 369 , 11 @ @ public class DynamicRealmTests { 
 
 @ Test 
 @ RunTestInLooperThread 
 - public void findAllAsync ( ) { 
 + public void findAll _ async ( ) { 
 final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; 
 final RealmResults < DynamicRealmObject > allTypes = dynamicRealm . where ( AllTypes . CLASS _ NAME ) 
 . between ( AllTypes . FIELD _ LONG , 4 , 9 ) 
 - . findAllAsync ( ) ; 
 - 
 - assertFalse ( allTypes . isLoaded ( ) ) ; 
 - assertEquals ( 0 , allTypes . size ( ) ) ; 
 + . findAll ( ) ; 
 
 allTypes . addChangeListener ( new RealmChangeListener < RealmResults < DynamicRealmObject > > ( ) { 
 @ Override 
 @ @ - 395 , 13 + 391 , 11 @ @ public class DynamicRealmTests { 
 
 @ Test 
 @ RunTestInLooperThread 
 - public void findAllSortedAsync ( ) { 
 + public void findAllSorted _ async ( ) { 
 final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; 
 final RealmResults < DynamicRealmObject > allTypes = dynamicRealm . where ( AllTypes . CLASS _ NAME ) 
 . between ( AllTypes . FIELD _ LONG , 0 , 4 ) 
 - . findAllSortedAsync ( AllTypes . FIELD _ STRING , Sort . DESCENDING ) ; 
 - assertFalse ( allTypes . isLoaded ( ) ) ; 
 - assertEquals ( 0 , allTypes . size ( ) ) ; 
 + . findAllSorted ( AllTypes . FIELD _ STRING , Sort . DESCENDING ) ; 
 
 allTypes . addChangeListener ( new RealmChangeListener < RealmResults < DynamicRealmObject > > ( ) { 
 @ Override

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 index bad48a2 . . cdd8648 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 @ @ - 537 , 49 + 537 , 6 @ @ public class DynamicRealmTests { 
 } 
 
 @ Test 
 - @ RunTestInLooperThread 
 - public void accessingDynamicRealmObjectBeforeAsyncQueryCompleted ( ) { 
 - / * 
 - final DynamicRealm dynamicRealm = initializeDynamicRealm ( ) ; 
 - final DynamicRealmObject [ ] dynamicRealmObject = new DynamicRealmObject [ 1 ] ; 
 - 
 - / / Intercept completion of the async DynamicRealmObject query 
 - Handler handler = new HandlerProxy ( dynamicRealm . handlerController ) { 
 - @ Override 
 - public boolean onInterceptInMessage ( int what ) { 
 - switch ( what ) { 
 - case HandlerControllerConstants . COMPLETED _ ASYNC _ REALM _ OBJECT : { 
 - post ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - assertFalse ( dynamicRealmObject [ 0 ] . isLoaded ( ) ) ; 
 - assertFalse ( dynamicRealmObject [ 0 ] . isValid ( ) ) ; 
 - try { 
 - dynamicRealmObject [ 0 ] . getObject ( AllTypes . FIELD _ BINARY ) ; 
 - fail ( " trying to access a DynamicRealmObject property should throw " ) ; 
 - } catch ( IllegalStateException ignored ) { 
 - 
 - } finally { 
 - dynamicRealm . close ( ) ; 
 - looperThread . testComplete ( ) ; 
 - } 
 - } 
 - } ) ; 
 - return true ; 
 - } 
 - } 
 - return false ; 
 - } 
 - } ; 
 - 
 - / / dynamicRealm . setHandler ( handler ) ; 
 - dynamicRealmObject [ 0 ] = dynamicRealm . where ( AllTypes . CLASS _ NAME ) 
 - . between ( AllTypes . FIELD _ LONG , 4 , 9 ) 
 - . findFirstAsync ( ) ; 
 - * / 
 - } 
 - 
 - @ Test 
 public void deleteAll ( ) { 
 realm . beginTransaction ( ) ; 
 realm . createObject ( AllTypes . CLASS _ NAME ) ;
