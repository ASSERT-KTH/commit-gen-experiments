BLEU SCORE: 0.024675789207681903

TEST MSG: Add support for latest version of Sync
GENERATED MSG: Update sync 2 . 0 . 0 - rc12

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index fb6e30f . . bde269a 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 24 , 6 + 24 , 7 @ @ This release also contains all changes in 5 . 8 . 0 - BETA1 and 5 . 8 . 0 - BETA2 . <nl> * [ ObjectServer ] Added ` Realm . getSubscriptions ( ) ` , ` Realm . getSubscriptions ( String pattern ) ` and ` Realm . getSubscription ` to make it easier to find existing subscriptions . These API ' s are in beta . [ # 6231 ] ( https : / / github . com / realm / realm - java / pull / 6231 ) . <nl> * [ ObjectServer ] Added ` RealmQuery . subscribe ( ) ` and ` RealmQuery . subscribe ( String name ) ` to subscribe immediately inside a transaction . These API ' s are in beta . [ # 6231 ] ( https : / / github . com / realm / realm - java / pull / 6231 ) . <nl> * [ ObjectServer ] Added support for subscribing directly inside ` SyncConfiguration . initialData ( ) ` . This can be coupled with ` SyncConfiguration . waitForInitialRemoteData ( ) ` in order to block a Realm from opening until the initial subscriptions are ready and have downloaded data . This API are in beta . [ # 6231 ] ( https : / / github . com / realm / realm - java / pull / 6231 ) . <nl> + * [ ObjectServer ] Improved performance when merging changes from the server . <nl> * Added support for ` ImportFlag ` s to ` Realm . copyToRealm ( ) ` and ` Realm . copyToRealmOrUpdate ( ) ` . This makes it possible to choose a mode so only fields that actually changed are written to disk . This improves notifications and Object Server performance . [ # 6224 ] ( https : / / github . com / realm / realm - java / pull / 6224 ) . <nl> <nl> # # # Fixed <nl> @ @ - 35 , 7 + 36 , 9 @ @ This release also contains all changes in 5 . 8 . 0 - BETA1 and 5 . 8 . 0 - BETA2 . <nl> * APIs are backwards compatible with all previous release of realm - java in the 5 . x . y series . <nl> <nl> # # # Internal <nl> - * Updated to Object Store commit : 1f91c82eb34cf4eaa2900794a9268390876f19f1 <nl> + * Updated to Object Store commit : f0dfe6c03be49194bc40777901059eaf55e7bff6 <nl> + * Updated Realm Sync to 3 . 13 . 1 <nl> + * Updated Realm Core to 5 . 12 . 0 <nl> <nl> <nl> # # 5 . 8 . 0 - BETA2 ( 2018 - 10 - 19 ) <nl> @ @ - 80 , 9 + 83 , 6 @ @ This release also contains all changes in 5 . 8 . 0 - BETA1 and 5 . 8 . 0 - BETA2 . <nl> * File format : Generates Realms with format v9 ( Reads and upgrades all previous formats ) <nl> * APIs are backwards compatible with all previous release of realm - java in the 5 . x . y series . <nl> <nl> - # # # Internal <nl> - * None <nl> - <nl> <nl> # # 5 . 7 . 1 ( 2018 - 10 - 22 ) <nl> <nl> diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index 444e84d . . e65e707 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 62 , 7 + 62 , 7 @ @ try { <nl> stage ( ' JVM tests ' ) { <nl> try { <nl> withCredentials ( [ [ $ class : ' FileBinding ' , credentialsId : ' c0cc8f9e - c3f1 - 4e22 - b22f - 6568392e26ae ' , variable : ' S3CFG ' ] ] ) { <nl> - sh " chmod + x gradlew & & . / gradlew assemble check javadoc - Ps3cfg = $ { env . S3CFG } $ { abiFilter } " <nl> + sh " chmod + x gradlew & & . / gradlew assemble check javadoc - Ps3cfg = $ { env . S3CFG } $ { abiFilter } - - stacktrace " <nl> } <nl> } finally { <nl> storeJunitResults ' realm / realm - annotations - processor / build / test - results / test / TEST - * . xml ' <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index d3e23b5 . . fe31846 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 1 , 11 + 1 , 11 @ @ <nl> # Realm Sync Core release used by Realm Java <nl> # https : / / github . com / realm / realm - sync / releases <nl> - REALM _ SYNC _ VERSION = 3 . 10 . 1 <nl> - REALM _ SYNC _ SHA256 = df8fb8506a318faf83e027a442e5ad0a38f458ec44567146e64d5a1c60b424ae <nl> + REALM _ SYNC _ VERSION = 3 . 13 . 1 <nl> + REALM _ SYNC _ SHA256 = 4d21d7eb3cff254261da835dd88ab8dd8c2c376d7e81e111206f27225a55cf07 <nl> <nl> # Object Server Release used by Integration tests . Installed using NPM . <nl> # Use ` npm view realm - object - server versions ` to get a list of available versions . <nl> - REALM _ OBJECT _ SERVER _ VERSION = 3 . 11 . 1 <nl> + REALM _ OBJECT _ SERVER _ VERSION = 3 . 12 . 4 <nl> <nl> # Common Android settings across projects <nl> GRADLE _ BUILD _ TOOLS = 3 . 1 . 4 <nl> diff - - git a / examples / unitTestExample / build . gradle b / examples / unitTestExample / build . gradle <nl> index 059d77e . . 9b6bb2c 100644 <nl> - - - a / examples / unitTestExample / build . gradle <nl> + + + b / examples / unitTestExample / build . gradle <nl> @ @ - 56 , 9 + 56 , 9 @ @ dependencies { <nl> testImplementation " org . powermock : powermock - classloading - xstream : 1 . 6 . 5 " <nl> <nl> <nl> - androidTestImplementation ' com . android . support . test : runner : 1 . 0 . 2 ' <nl> + androidTestImplementation ' com . android . support . test : runner : 1 . 0 . 1 ' <nl> / / Set this dependency to use JUnit 4 rules <nl> - androidTestImplementation ' com . android . support . test : rules : 1 . 0 . 2 ' <nl> + androidTestImplementation ' com . android . support . test : rules : 1 . 0 . 1 ' <nl> / / Set this dependency to build and run Espresso tests <nl> - androidTestImplementation ' com . android . support . test . espresso : espresso - core : 3 . 0 . 2 ' <nl> + androidTestImplementation ' com . android . support . test . espresso : espresso - core : 2 . 2 . 2 ' <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp b / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp <nl> index d34e026 . . bab28af 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp <nl> @ @ - 97 , 7 + 97 , 8 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ SyncManager _ nativeInitializeSyncManager ( JNI <nl> TR _ ENTER ( ) <nl> try { <nl> JStringAccessor base _ file _ path ( env , sync _ base _ dir ) ; / / throws <nl> - SyncManager : : shared ( ) . configure _ file _ system ( base _ file _ path , SyncManager : : MetadataMode : : NoEncryption ) ; <nl> + std : : string user _ agent _ info ( " " ) ; / / TODO Add support for this <nl> + SyncManager : : shared ( ) . configure ( base _ file _ path , SyncManager : : MetadataMode : : NoEncryption , user _ agent _ info ) ; <nl> <nl> static AndroidClientListener client _ thread _ listener ( env ) ; <nl> / / Register Sync Client thread start / stop callback <nl> diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store <nl> index 1f91c82 . . f0dfe6c 160000 <nl> - - - a / realm / realm - library / src / main / cpp / object - store <nl> + + + b / realm / realm - library / src / main / cpp / object - store <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit 1f91c82eb34cf4eaa2900794a9268390876f19f1 <nl> + Subproject commit f0dfe6c03be49194bc40777901059eaf55e7bff6 <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java <nl> index e6b3ba9 . . 0469153 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java <nl> @ @ - 33 , 12 + 33 , 12 @ @ import static org . junit . Assert . fail ; <nl> public class EncryptedSynchronizedRealmTests extends StandardIntegrationTest { <nl> <nl> @ Rule <nl> - public Timeout globalTimeout = Timeout . seconds ( 10 ) ; <nl> + public Timeout globalTimeout = Timeout . seconds ( 30 ) ; <nl> <nl> / / Make sure the encryption is local , i . e after deleting a synced Realm <nl> / / re - open it again with no ( or different ) key , should be possible . <nl> @ Test <nl> - public void setEncryptionKey _ canReOpenRealmWithoutKey ( ) { <nl> + public void setEncryptionKey _ canReOpenRealmWithoutKey ( ) throws InterruptedException { <nl> <nl> / / STEP 1 : open a synced Realm using a local encryption key <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class EncryptedSynchronizedRealmTests extends StandardIntegrationTest { <nl> realm . commitTransaction ( ) ; <nl> <nl> / / STEP 2 : make sure the changes gets to the server <nl> - SystemClock . sleep ( TimeUnit . SECONDS . toMillis ( 2 ) ) ; / / FIXME : Replace with Sync Progress Notifications once available . <nl> + SyncManager . getSession ( configWithEncryption ) . uploadAllLocalChanges ( ) ; <nl> realm . close ( ) ; <nl> user . logOut ( ) ; <nl> <nl> @ @ - 222 , 7 + 222 , 7 @ @ public class EncryptedSynchronizedRealmTests extends StandardIntegrationTest { <nl> / / STEP 4 : client A can see changes from client B ( although they ' re using different encryption keys ) <nl> realm = Realm . getInstance ( configWithEncryption ) ; <nl> SyncManager . getSession ( configWithEncryption ) . downloadAllServerChanges ( ) ; / / force download latest commits from ROS <nl> - realm . refresh ( ) ; <nl> + realm . refresh ( ) ; / / Not calling refresh will still point to the previous version of the Realm without the latest admin commit " Hi Bob " <nl> assertEquals ( 2 , realm . where ( StringOnly . class ) . count ( ) ) ; <nl> <nl> adminRealm = Realm . getInstance ( adminConfigWithEncryption ) ;
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index ddac276 . . 41daf3c 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 14 , 7 + 14 , 8 @ @ <nl> <nl> # # # Internal <nl> <nl> - * Upgraded to Realm Sync 2 . 0 . 0 - rc9 <nl> + * Upgraded to Realm Sync 2 . 0 . 0 - rc12 . <nl> + * Upgraded to Realm Core 3 . 0 . 0 - rc3 . <nl> <nl> # # # Credits <nl> <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index 6de8b3a . . 0087f43 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> # Realm Sync Core release used by Realm Java <nl> # https : / / github . com / realm / realm - sync / releases <nl> - REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc9 <nl> - REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2eb <nl> + REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc12 <nl> + REALM _ SYNC _ SHA256 = 5f111903159ee2d74c5418560c72977e91a10e291e23e6a7d9999aa856858ca4 <nl> <nl> # Object Server Release used by Integration tests <nl> # Stable releases : https : / / packagecloud . io / realm / realm ? filter = debs <nl> @ @ - 10 , 4 + 10 , 4 @ @ REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2 <nl> # / tools / sync _ test _ server / Dockerfile specify which repo ( apt ) we should <nl> # install / use between ' realm ' , ' realm - beta ' and ' realm - testing ' , the version below should <nl> # correspond to an existing version on the * specified * repo . <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha9 - 176 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - rc2 - 285 <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> index 0a72ea5 . . 2998dae 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> @ @ - 2935 , 10 + 2935 , 7 @ @ public class RealmQueryTests extends QueryTests { <nl> RealmResults < IndexedFields > results = realm . where ( IndexedFields . class ) <nl> . equalTo ( IndexedFields . FIELD _ INDEXED _ STRING , " rover " , Case . INSENSITIVE ) <nl> . findAll ( ) ; <nl> - / / FIXME : This bug has not been fixed by the core on the master - 4 . 0 right now . <nl> - / / This test will failed when core gets updated . <nl> - / / assertEquals ( 2 , results . size ( ) ) ; <nl> - assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( 2 , results . size ( ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> index 3d7e315 . . 356f583 100644 <nl> - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> @ @ - 111 , 6 + 111 , 31 @ @ if ( build _ SYNC ) <nl> IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) <nl> endif ( ) <nl> <nl> + # Download openssl lib <nl> + # FIXME sync packed openssl with librealm - sync - android - xxx . a . <nl> + # Remove this check after https : / / github . com / realm / realm - sync / issues / 1469 fixed . <nl> + if ( NOT build _ SYNC ) <nl> + # string ( TOLOWER " $ { CMAKE _ BUILD _ TYPE } " openssl _ build _ TYPE ) <nl> + set ( openssl _ build _ TYPE " release " ) <nl> + # FIXME Read the openssl version from core when the core / sync release has that information . <nl> + set ( openssl _ VERSION " 1 . 0 . 2k " ) <nl> + set ( openssl _ FILENAME " openssl - $ { openssl _ build _ TYPE } - $ { openssl _ VERSION } - Android - $ { ANDROID _ ABI } " ) <nl> + set ( openssl _ URL " http : / / static . realm . io / downloads / openssl / $ { openssl _ VERSION } / Android / $ { ANDROID _ ABI } / $ { openssl _ FILENAME } . tar . gz " ) <nl> + <nl> + message ( STATUS " Downloading OpenSSL . . . " ) <nl> + file ( DOWNLOAD " $ { openssl _ URL } " " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " ) <nl> + <nl> + message ( STATUS " Uncompressing OpenSSL . . . " ) <nl> + execute _ process ( COMMAND $ { CMAKE _ COMMAND } - E tar xfz " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " <nl> + WORKING _ DIRECTORY " $ { PROJECT _ BINARY _ DIR } " ) <nl> + <nl> + message ( STATUS " Importing OpenSSL . . . " ) <nl> + include ( $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } / openssl . cmake ) <nl> + get _ target _ property ( openssl _ include _ DIR crypto INTERFACE _ INCLUDE _ DIRECTORIES ) <nl> + get _ target _ property ( crypto _ LIB crypto IMPORTED _ LOCATION ) <nl> + get _ target _ property ( ssl _ LIB ssl IMPORTED _ LOCATION ) <nl> + endif ( ) <nl> + <nl> # build application ' s shared lib <nl> include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include <nl> $ { CMAKE _ SOURCE _ DIR } <nl> @ @ - 200 , 7 + 225 , 7 @ @ add _ dependencies ( realm - jni jni _ headers ) <nl> if ( build _ SYNC ) <nl> target _ link _ libraries ( realm - jni log android lib _ realm _ sync ) <nl> else ( ) <nl> - target _ link _ libraries ( realm - jni log android lib _ realm _ core ) <nl> + target _ link _ libraries ( realm - jni log android lib _ realm _ core crypto ) <nl> endif ( ) <nl> <nl> # Strip the release so files and backup the unstripped versions <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp <nl> index ca620e9 . . 7c15806 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp <nl> @ @ - 17 , 6 + 17 , 9 @ @ <nl> # include " io _ realm _ internal _ OsObject . h " <nl> <nl> # include < realm / row . hpp > <nl> + # if REALM _ ENABLE _ SYNC <nl> + # include < realm / sync / object . hpp > <nl> + # endif <nl> # include < object _ schema . hpp > <nl> # include < object . hpp > <nl> # include < shared _ realm . hpp > <nl> @ @ - 382 , 3 + 385 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ OsObject _ nativeCreateRowWithStrin <nl> <nl> return realm : : npos ; <nl> } <nl> + <nl> + JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ OsObject _ nativeGetObjectIdColumName ( JNIEnv * env , jclass ) <nl> + { <nl> + / / TODO : Remove the macro and get the name from core when core has stable ID support . <nl> + # if REALM _ ENABLE _ SYNC <nl> + const char * object _ id _ column _ name = sync : : object _ id _ column _ name ; <nl> + # else <nl> + const char * object _ id _ column _ name = " ! OID " ; <nl> + # endif <nl> + return to _ jstring ( env , object _ id _ column _ name ) ; <nl> + } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> index ed08e0b . . 3657d87 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . util . Set ; <nl> <nl> import io . realm . annotations . Required ; <nl> import io . realm . internal . ColumnInfo ; <nl> + import io . realm . internal . OsObject ; <nl> import io . realm . internal . Table ; <nl> import io . realm . internal . fields . FieldDescriptor ; <nl> <nl> @ @ - 516 , 7 + 517 , 7 @ @ public class RealmObjectSchema { <nl> Set < String > columnNames = new LinkedHashSet < > ( columnCount ) ; <nl> for ( int i = 0 ; i < columnCount ; i + + ) { <nl> String name = table . getColumnName ( i ) ; <nl> - if ( ! name . equals ( Table . OBJECT _ ID _ COLUMN _ NAME ) ) { / / Filter out stable ID column <nl> + if ( ! OsObject . isObjectIdColumn ( name ) ) { <nl> columnNames . add ( name ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java <nl> index 56a4676 . . 4f8b0b8 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java <nl> @ @ - 29 , 6 + 29 , 8 @ @ import io . realm . exceptions . RealmException ; <nl> @ KeepMember <nl> public class OsObject implements NativeObject { <nl> <nl> + private static final String OBJECT _ ID _ COLUMN _ NAME = nativeGetObjectIdColumName ( ) ; <nl> + <nl> private static class OsObjectChangeSet implements ObjectChangeSet { <nl> final String [ ] changedFields ; <nl> final boolean deleted ; <nl> @ @ - 237 , 6 + 239 , 10 @ @ public class OsObject implements NativeObject { <nl> } <nl> } <nl> <nl> + public static boolean isObjectIdColumn ( String columnName ) { <nl> + return OBJECT _ ID _ COLUMN _ NAME . equals ( columnName ) ; <nl> + } <nl> + <nl> / / Called by JNI <nl> @ SuppressWarnings ( " unused " ) <nl> @ KeepMember <nl> @ @ - 276 , 4 + 282 , 7 @ @ public class OsObject implements NativeObject { <nl> private static native long nativeCreateRowWithStringPrimaryKey ( long sharedRealmPtr , <nl> long tablePtr , long pk _ column _ index , <nl> String primaryKeyValue ) ; <nl> + <nl> + / / Return sync : : object _ id _ column _ name <nl> + private static native String nativeGetObjectIdColumName ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index b2e5fd5 . . 8a2bb38 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 43 , 7 + 43 , 6 @ @ public class Table implements TableSchema , NativeObject { <nl> private static final String PRIMARY _ KEY _ FIELD _ COLUMN _ NAME = " pk _ property " ; <nl> private static final long PRIMARY _ KEY _ FIELD _ COLUMN _ INDEX = 1 ; <nl> public static final long NO _ PRIMARY _ KEY = - 2 ; <nl> - public static final String OBJECT _ ID _ COLUMN _ NAME = " _ _ OID " ; / / Column for stable ID <nl> <nl> private static final long nativeFinalizerPtr = nativeGetFinalizerPtr ( ) ; <nl>

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index fb6e30f . . bde269a 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 24 , 6 + 24 , 7 @ @ This release also contains all changes in 5 . 8 . 0 - BETA1 and 5 . 8 . 0 - BETA2 . 
 * [ ObjectServer ] Added ` Realm . getSubscriptions ( ) ` , ` Realm . getSubscriptions ( String pattern ) ` and ` Realm . getSubscription ` to make it easier to find existing subscriptions . These API ' s are in beta . [ # 6231 ] ( https : / / github . com / realm / realm - java / pull / 6231 ) . 
 * [ ObjectServer ] Added ` RealmQuery . subscribe ( ) ` and ` RealmQuery . subscribe ( String name ) ` to subscribe immediately inside a transaction . These API ' s are in beta . [ # 6231 ] ( https : / / github . com / realm / realm - java / pull / 6231 ) . 
 * [ ObjectServer ] Added support for subscribing directly inside ` SyncConfiguration . initialData ( ) ` . This can be coupled with ` SyncConfiguration . waitForInitialRemoteData ( ) ` in order to block a Realm from opening until the initial subscriptions are ready and have downloaded data . This API are in beta . [ # 6231 ] ( https : / / github . com / realm / realm - java / pull / 6231 ) . 
 + * [ ObjectServer ] Improved performance when merging changes from the server . 
 * Added support for ` ImportFlag ` s to ` Realm . copyToRealm ( ) ` and ` Realm . copyToRealmOrUpdate ( ) ` . This makes it possible to choose a mode so only fields that actually changed are written to disk . This improves notifications and Object Server performance . [ # 6224 ] ( https : / / github . com / realm / realm - java / pull / 6224 ) . 
 
 # # # Fixed 
 @ @ - 35 , 7 + 36 , 9 @ @ This release also contains all changes in 5 . 8 . 0 - BETA1 and 5 . 8 . 0 - BETA2 . 
 * APIs are backwards compatible with all previous release of realm - java in the 5 . x . y series . 
 
 # # # Internal 
 - * Updated to Object Store commit : 1f91c82eb34cf4eaa2900794a9268390876f19f1 
 + * Updated to Object Store commit : f0dfe6c03be49194bc40777901059eaf55e7bff6 
 + * Updated Realm Sync to 3 . 13 . 1 
 + * Updated Realm Core to 5 . 12 . 0 
 
 
 # # 5 . 8 . 0 - BETA2 ( 2018 - 10 - 19 ) 
 @ @ - 80 , 9 + 83 , 6 @ @ This release also contains all changes in 5 . 8 . 0 - BETA1 and 5 . 8 . 0 - BETA2 . 
 * File format : Generates Realms with format v9 ( Reads and upgrades all previous formats ) 
 * APIs are backwards compatible with all previous release of realm - java in the 5 . x . y series . 
 
 - # # # Internal 
 - * None 
 - 
 
 # # 5 . 7 . 1 ( 2018 - 10 - 22 ) 
 
 diff - - git a / Jenkinsfile b / Jenkinsfile 
 index 444e84d . . e65e707 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 62 , 7 + 62 , 7 @ @ try { 
 stage ( ' JVM tests ' ) { 
 try { 
 withCredentials ( [ [ $ class : ' FileBinding ' , credentialsId : ' c0cc8f9e - c3f1 - 4e22 - b22f - 6568392e26ae ' , variable : ' S3CFG ' ] ] ) { 
 - sh " chmod + x gradlew & & . / gradlew assemble check javadoc - Ps3cfg = $ { env . S3CFG } $ { abiFilter } " 
 + sh " chmod + x gradlew & & . / gradlew assemble check javadoc - Ps3cfg = $ { env . S3CFG } $ { abiFilter } - - stacktrace " 
 } 
 } finally { 
 storeJunitResults ' realm / realm - annotations - processor / build / test - results / test / TEST - * . xml ' 
 diff - - git a / dependencies . list b / dependencies . list 
 index d3e23b5 . . fe31846 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 1 , 11 + 1 , 11 @ @ 
 # Realm Sync Core release used by Realm Java 
 # https : / / github . com / realm / realm - sync / releases 
 - REALM _ SYNC _ VERSION = 3 . 10 . 1 
 - REALM _ SYNC _ SHA256 = df8fb8506a318faf83e027a442e5ad0a38f458ec44567146e64d5a1c60b424ae 
 + REALM _ SYNC _ VERSION = 3 . 13 . 1 
 + REALM _ SYNC _ SHA256 = 4d21d7eb3cff254261da835dd88ab8dd8c2c376d7e81e111206f27225a55cf07 
 
 # Object Server Release used by Integration tests . Installed using NPM . 
 # Use ` npm view realm - object - server versions ` to get a list of available versions . 
 - REALM _ OBJECT _ SERVER _ VERSION = 3 . 11 . 1 
 + REALM _ OBJECT _ SERVER _ VERSION = 3 . 12 . 4 
 
 # Common Android settings across projects 
 GRADLE _ BUILD _ TOOLS = 3 . 1 . 4 
 diff - - git a / examples / unitTestExample / build . gradle b / examples / unitTestExample / build . gradle 
 index 059d77e . . 9b6bb2c 100644 
 - - - a / examples / unitTestExample / build . gradle 
 + + + b / examples / unitTestExample / build . gradle 
 @ @ - 56 , 9 + 56 , 9 @ @ dependencies { 
 testImplementation " org . powermock : powermock - classloading - xstream : 1 . 6 . 5 " 
 
 
 - androidTestImplementation ' com . android . support . test : runner : 1 . 0 . 2 ' 
 + androidTestImplementation ' com . android . support . test : runner : 1 . 0 . 1 ' 
 / / Set this dependency to use JUnit 4 rules 
 - androidTestImplementation ' com . android . support . test : rules : 1 . 0 . 2 ' 
 + androidTestImplementation ' com . android . support . test : rules : 1 . 0 . 1 ' 
 / / Set this dependency to build and run Espresso tests 
 - androidTestImplementation ' com . android . support . test . espresso : espresso - core : 3 . 0 . 2 ' 
 + androidTestImplementation ' com . android . support . test . espresso : espresso - core : 2 . 2 . 2 ' 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp b / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp 
 index d34e026 . . bab28af 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ SyncManager . cpp 
 @ @ - 97 , 7 + 97 , 8 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ SyncManager _ nativeInitializeSyncManager ( JNI 
 TR _ ENTER ( ) 
 try { 
 JStringAccessor base _ file _ path ( env , sync _ base _ dir ) ; / / throws 
 - SyncManager : : shared ( ) . configure _ file _ system ( base _ file _ path , SyncManager : : MetadataMode : : NoEncryption ) ; 
 + std : : string user _ agent _ info ( " " ) ; / / TODO Add support for this 
 + SyncManager : : shared ( ) . configure ( base _ file _ path , SyncManager : : MetadataMode : : NoEncryption , user _ agent _ info ) ; 
 
 static AndroidClientListener client _ thread _ listener ( env ) ; 
 / / Register Sync Client thread start / stop callback 
 diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store 
 index 1f91c82 . . f0dfe6c 160000 
 - - - a / realm / realm - library / src / main / cpp / object - store 
 + + + b / realm / realm - library / src / main / cpp / object - store 
 @ @ - 1 + 1 @ @ 
 - Subproject commit 1f91c82eb34cf4eaa2900794a9268390876f19f1 
 + Subproject commit f0dfe6c03be49194bc40777901059eaf55e7bff6 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java 
 index e6b3ba9 . . 0469153 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java 
 @ @ - 33 , 12 + 33 , 12 @ @ import static org . junit . Assert . fail ; 
 public class EncryptedSynchronizedRealmTests extends StandardIntegrationTest { 
 
 @ Rule 
 - public Timeout globalTimeout = Timeout . seconds ( 10 ) ; 
 + public Timeout globalTimeout = Timeout . seconds ( 30 ) ; 
 
 / / Make sure the encryption is local , i . e after deleting a synced Realm 
 / / re - open it again with no ( or different ) key , should be possible . 
 @ Test 
 - public void setEncryptionKey _ canReOpenRealmWithoutKey ( ) { 
 + public void setEncryptionKey _ canReOpenRealmWithoutKey ( ) throws InterruptedException { 
 
 / / STEP 1 : open a synced Realm using a local encryption key 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 @ @ - 68 , 7 + 68 , 7 @ @ public class EncryptedSynchronizedRealmTests extends StandardIntegrationTest { 
 realm . commitTransaction ( ) ; 
 
 / / STEP 2 : make sure the changes gets to the server 
 - SystemClock . sleep ( TimeUnit . SECONDS . toMillis ( 2 ) ) ; / / FIXME : Replace with Sync Progress Notifications once available . 
 + SyncManager . getSession ( configWithEncryption ) . uploadAllLocalChanges ( ) ; 
 realm . close ( ) ; 
 user . logOut ( ) ; 
 
 @ @ - 222 , 7 + 222 , 7 @ @ public class EncryptedSynchronizedRealmTests extends StandardIntegrationTest { 
 / / STEP 4 : client A can see changes from client B ( although they ' re using different encryption keys ) 
 realm = Realm . getInstance ( configWithEncryption ) ; 
 SyncManager . getSession ( configWithEncryption ) . downloadAllServerChanges ( ) ; / / force download latest commits from ROS 
 - realm . refresh ( ) ; 
 + realm . refresh ( ) ; / / Not calling refresh will still point to the previous version of the Realm without the latest admin commit " Hi Bob " 
 assertEquals ( 2 , realm . where ( StringOnly . class ) . count ( ) ) ; 
 
 adminRealm = Realm . getInstance ( adminConfigWithEncryption ) ;

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index ddac276 . . 41daf3c 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 14 , 7 + 14 , 8 @ @ 
 
 # # # Internal 
 
 - * Upgraded to Realm Sync 2 . 0 . 0 - rc9 
 + * Upgraded to Realm Sync 2 . 0 . 0 - rc12 . 
 + * Upgraded to Realm Core 3 . 0 . 0 - rc3 . 
 
 # # # Credits 
 
 diff - - git a / dependencies . list b / dependencies . list 
 index 6de8b3a . . 0087f43 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 # Realm Sync Core release used by Realm Java 
 # https : / / github . com / realm / realm - sync / releases 
 - REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc9 
 - REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2eb 
 + REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc12 
 + REALM _ SYNC _ SHA256 = 5f111903159ee2d74c5418560c72977e91a10e291e23e6a7d9999aa856858ca4 
 
 # Object Server Release used by Integration tests 
 # Stable releases : https : / / packagecloud . io / realm / realm ? filter = debs 
 @ @ - 10 , 4 + 10 , 4 @ @ REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2 
 # / tools / sync _ test _ server / Dockerfile specify which repo ( apt ) we should 
 # install / use between ' realm ' , ' realm - beta ' and ' realm - testing ' , the version below should 
 # correspond to an existing version on the * specified * repo . 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha9 - 176 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - rc2 - 285 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 index 0a72ea5 . . 2998dae 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 @ @ - 2935 , 10 + 2935 , 7 @ @ public class RealmQueryTests extends QueryTests { 
 RealmResults < IndexedFields > results = realm . where ( IndexedFields . class ) 
 . equalTo ( IndexedFields . FIELD _ INDEXED _ STRING , " rover " , Case . INSENSITIVE ) 
 . findAll ( ) ; 
 - / / FIXME : This bug has not been fixed by the core on the master - 4 . 0 right now . 
 - / / This test will failed when core gets updated . 
 - / / assertEquals ( 2 , results . size ( ) ) ; 
 - assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( 2 , results . size ( ) ) ; 
 } 
 
 @ Test 
 diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 index 3d7e315 . . 356f583 100644 
 - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt 
 + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 @ @ - 111 , 6 + 111 , 31 @ @ if ( build _ SYNC ) 
 IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) 
 endif ( ) 
 
 + # Download openssl lib 
 + # FIXME sync packed openssl with librealm - sync - android - xxx . a . 
 + # Remove this check after https : / / github . com / realm / realm - sync / issues / 1469 fixed . 
 + if ( NOT build _ SYNC ) 
 + # string ( TOLOWER " $ { CMAKE _ BUILD _ TYPE } " openssl _ build _ TYPE ) 
 + set ( openssl _ build _ TYPE " release " ) 
 + # FIXME Read the openssl version from core when the core / sync release has that information . 
 + set ( openssl _ VERSION " 1 . 0 . 2k " ) 
 + set ( openssl _ FILENAME " openssl - $ { openssl _ build _ TYPE } - $ { openssl _ VERSION } - Android - $ { ANDROID _ ABI } " ) 
 + set ( openssl _ URL " http : / / static . realm . io / downloads / openssl / $ { openssl _ VERSION } / Android / $ { ANDROID _ ABI } / $ { openssl _ FILENAME } . tar . gz " ) 
 + 
 + message ( STATUS " Downloading OpenSSL . . . " ) 
 + file ( DOWNLOAD " $ { openssl _ URL } " " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " ) 
 + 
 + message ( STATUS " Uncompressing OpenSSL . . . " ) 
 + execute _ process ( COMMAND $ { CMAKE _ COMMAND } - E tar xfz " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " 
 + WORKING _ DIRECTORY " $ { PROJECT _ BINARY _ DIR } " ) 
 + 
 + message ( STATUS " Importing OpenSSL . . . " ) 
 + include ( $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } / openssl . cmake ) 
 + get _ target _ property ( openssl _ include _ DIR crypto INTERFACE _ INCLUDE _ DIRECTORIES ) 
 + get _ target _ property ( crypto _ LIB crypto IMPORTED _ LOCATION ) 
 + get _ target _ property ( ssl _ LIB ssl IMPORTED _ LOCATION ) 
 + endif ( ) 
 + 
 # build application ' s shared lib 
 include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include 
 $ { CMAKE _ SOURCE _ DIR } 
 @ @ - 200 , 7 + 225 , 7 @ @ add _ dependencies ( realm - jni jni _ headers ) 
 if ( build _ SYNC ) 
 target _ link _ libraries ( realm - jni log android lib _ realm _ sync ) 
 else ( ) 
 - target _ link _ libraries ( realm - jni log android lib _ realm _ core ) 
 + target _ link _ libraries ( realm - jni log android lib _ realm _ core crypto ) 
 endif ( ) 
 
 # Strip the release so files and backup the unstripped versions 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp 
 index ca620e9 . . 7c15806 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp 
 @ @ - 17 , 6 + 17 , 9 @ @ 
 # include " io _ realm _ internal _ OsObject . h " 
 
 # include < realm / row . hpp > 
 + # if REALM _ ENABLE _ SYNC 
 + # include < realm / sync / object . hpp > 
 + # endif 
 # include < object _ schema . hpp > 
 # include < object . hpp > 
 # include < shared _ realm . hpp > 
 @ @ - 382 , 3 + 385 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ OsObject _ nativeCreateRowWithStrin 
 
 return realm : : npos ; 
 } 
 + 
 + JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ OsObject _ nativeGetObjectIdColumName ( JNIEnv * env , jclass ) 
 + { 
 + / / TODO : Remove the macro and get the name from core when core has stable ID support . 
 + # if REALM _ ENABLE _ SYNC 
 + const char * object _ id _ column _ name = sync : : object _ id _ column _ name ; 
 + # else 
 + const char * object _ id _ column _ name = " ! OID " ; 
 + # endif 
 + return to _ jstring ( env , object _ id _ column _ name ) ; 
 + } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 index ed08e0b . . 3657d87 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . util . Set ; 
 
 import io . realm . annotations . Required ; 
 import io . realm . internal . ColumnInfo ; 
 + import io . realm . internal . OsObject ; 
 import io . realm . internal . Table ; 
 import io . realm . internal . fields . FieldDescriptor ; 
 
 @ @ - 516 , 7 + 517 , 7 @ @ public class RealmObjectSchema { 
 Set < String > columnNames = new LinkedHashSet < > ( columnCount ) ; 
 for ( int i = 0 ; i < columnCount ; i + + ) { 
 String name = table . getColumnName ( i ) ; 
 - if ( ! name . equals ( Table . OBJECT _ ID _ COLUMN _ NAME ) ) { / / Filter out stable ID column 
 + if ( ! OsObject . isObjectIdColumn ( name ) ) { 
 columnNames . add ( name ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java 
 index 56a4676 . . 4f8b0b8 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java 
 @ @ - 29 , 6 + 29 , 8 @ @ import io . realm . exceptions . RealmException ; 
 @ KeepMember 
 public class OsObject implements NativeObject { 
 
 + private static final String OBJECT _ ID _ COLUMN _ NAME = nativeGetObjectIdColumName ( ) ; 
 + 
 private static class OsObjectChangeSet implements ObjectChangeSet { 
 final String [ ] changedFields ; 
 final boolean deleted ; 
 @ @ - 237 , 6 + 239 , 10 @ @ public class OsObject implements NativeObject { 
 } 
 } 
 
 + public static boolean isObjectIdColumn ( String columnName ) { 
 + return OBJECT _ ID _ COLUMN _ NAME . equals ( columnName ) ; 
 + } 
 + 
 / / Called by JNI 
 @ SuppressWarnings ( " unused " ) 
 @ KeepMember 
 @ @ - 276 , 4 + 282 , 7 @ @ public class OsObject implements NativeObject { 
 private static native long nativeCreateRowWithStringPrimaryKey ( long sharedRealmPtr , 
 long tablePtr , long pk _ column _ index , 
 String primaryKeyValue ) ; 
 + 
 + / / Return sync : : object _ id _ column _ name 
 + private static native String nativeGetObjectIdColumName ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index b2e5fd5 . . 8a2bb38 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 43 , 7 + 43 , 6 @ @ public class Table implements TableSchema , NativeObject { 
 private static final String PRIMARY _ KEY _ FIELD _ COLUMN _ NAME = " pk _ property " ; 
 private static final long PRIMARY _ KEY _ FIELD _ COLUMN _ INDEX = 1 ; 
 public static final long NO _ PRIMARY _ KEY = - 2 ; 
 - public static final String OBJECT _ ID _ COLUMN _ NAME = " _ _ OID " ; / / Column for stable ID 
 
 private static final long nativeFinalizerPtr = nativeGetFinalizerPtr ( ) ; 

