BLEU SCORE: 0.07809849842300641

TEST MSG: Add branch strategy to the CONTRIBUTING doc .
GENERATED MSG: Add Javadoc requirements to CONTRIBUTING . md

TEST DIFF (one line): diff - - git a / CONTRIBUTING . md b / CONTRIBUTING . md <nl> index 117abc2 . . e25a9af 100644 <nl> - - - a / CONTRIBUTING . md <nl> + + + b / CONTRIBUTING . md <nl> @ @ - 182 , 3 + 182 , 19 @ @ public RealmQuery < E > equalTo ( String fieldName , String fieldValue , boolean caseSe <nl> <nl> Above is based on the official guidelines from Oracle regarding Javadoc : http : / / www . oracle . com / technetwork / articles / java / index - 137868 . html <nl> <nl> + # # # Branch Strategy <nl> + <nl> + We have two branches for shared development : ` master ` and ` releases ` . We make releases from each . <nl> + <nl> + ` master ` : <nl> + <nl> + * The ` master ` branch is where major / minor versions are released from . <nl> + * It is for new features and / or breaking changes . <nl> + <nl> + ` releases ` : <nl> + <nl> + * The releases branch is where patch versions are released from . <nl> + * It is mainly for bug fixes . <nl> + * Every commit is automatically merged to ` master ` . <nl> + * Minor changes ( e . g . to documentation , tests , and the build system ) may not affect end users but should still be merged to ` releases ` to avoid diverging too far from ` master ` and to reduce the likelihood of merge conflicts . <nl> +
NEAREST DIFF (one line): diff - - git a / CONTRIBUTING . md b / CONTRIBUTING . md <nl> index c0ed464 . . d891b21 100644 <nl> - - - a / CONTRIBUTING . md <nl> + + + b / CONTRIBUTING . md <nl> @ @ - 26 , 7 + 26 , 47 @ @ Realm welcomes all contributions ! The only requirement we have is that , like man <nl> [ Please submit your CLA electronically using our Google form ] ( https : / / docs . google . com / forms / d / 1bVp - Wp5nmNFz9Nx - ngTmYBVWVdwTyKj4T0WtfVm0Ozs / viewform ? fbzx = 4154977190905366979 ) so we can accept your submissions . The GitHub username you file there will need to match that of your Pull Requests . If you have any questions or cannot file the CLA electronically , you can email < help @ realm . io > . <nl> <nl> # # Unit tests <nl> + <nl> All PR ' s must be accompanied by related unit tests . <nl> <nl> # # Code style <nl> + <nl> While we havn ' t described our code style yet , please just follow the existing style you see in the files you change . <nl> + <nl> + # # Javadoc <nl> + <nl> + All public classes and methods must have Javadoc describing their purpose . <nl> + <nl> + ` ` ` java <nl> + / * * <nl> + * Checks if given field is equal to the provided value . <nl> + * <nl> + * @ param fieldName the field to compare . <nl> + * @ param fieldValue the value to compare with . <nl> + * @ param caseSensitive if { @ code true } , substring matching is case sensitive . Setting this to { @ code false } works for English locale characters only . <nl> + * @ param caseSensitive if true , substring matching is case sensitive . Setting this to false only works for English <nl> + * locale characters . <nl> + * @ return the query object . <nl> + * @ throws java . lang . IllegalArgumentException if one or more arguments do not match class or field type . <nl> + * @ throws IllegalArgumentException if field name doesn ' t exists , it doesn ' t contain a list of links or the type <nl> + * of the object represented by the DynamicRealmObject doesn ' t match . <nl> + * @ deprecated Please use { @ link # average ( String ) } instead . <nl> + * @ see # endGroup ( ) <nl> + * / <nl> + public RealmQuery < E > equalTo ( String fieldName , String fieldValue , boolean caseSensitive ) { <nl> + / / . . . <nl> + } <nl> + ` ` ` <nl> + <nl> + * Method descriptions begin with a verb phrase , e . g . " Checks " instead of " Check " . <nl> + * Capitalize the first letter of the method and @ deprecated descriptions . Everything else starts with lower case . <nl> + * Empty line between method description and the rest . <nl> + * End all descriptions with a period ` . ` ( except @ see ) . <nl> + * Reference other Realm classes using ` { @ link . . . } ` . <nl> + * Wrap Java values in ` { @ code . . . } ` . <nl> + * @ throws description must start with " if " . <nl> + * Never list generic exceptions like ` RuntimeException ` , ` Exception ` or ` Error ` . Always reference the specific error . <nl> + * Line - length maximum is 120 chars . Parameter descriptions that go above this , should be split into multiple lines and indented . Otherwise do not use indentation ( contrary to Oracle guidelines ) . <nl> + <nl> + Above is based on the official guidelines from Oracle regarding Javadoc : http : / / www . oracle . com / technetwork / articles / java / index - 137868 . html <nl> +

TEST DIFF:
diff - - git a / CONTRIBUTING . md b / CONTRIBUTING . md 
 index 117abc2 . . e25a9af 100644 
 - - - a / CONTRIBUTING . md 
 + + + b / CONTRIBUTING . md 
 @ @ - 182 , 3 + 182 , 19 @ @ public RealmQuery < E > equalTo ( String fieldName , String fieldValue , boolean caseSe 
 
 Above is based on the official guidelines from Oracle regarding Javadoc : http : / / www . oracle . com / technetwork / articles / java / index - 137868 . html 
 
 + # # # Branch Strategy 
 + 
 + We have two branches for shared development : ` master ` and ` releases ` . We make releases from each . 
 + 
 + ` master ` : 
 + 
 + * The ` master ` branch is where major / minor versions are released from . 
 + * It is for new features and / or breaking changes . 
 + 
 + ` releases ` : 
 + 
 + * The releases branch is where patch versions are released from . 
 + * It is mainly for bug fixes . 
 + * Every commit is automatically merged to ` master ` . 
 + * Minor changes ( e . g . to documentation , tests , and the build system ) may not affect end users but should still be merged to ` releases ` to avoid diverging too far from ` master ` and to reduce the likelihood of merge conflicts . 
 +

NEAREST DIFF:
diff - - git a / CONTRIBUTING . md b / CONTRIBUTING . md 
 index c0ed464 . . d891b21 100644 
 - - - a / CONTRIBUTING . md 
 + + + b / CONTRIBUTING . md 
 @ @ - 26 , 7 + 26 , 47 @ @ Realm welcomes all contributions ! The only requirement we have is that , like man 
 [ Please submit your CLA electronically using our Google form ] ( https : / / docs . google . com / forms / d / 1bVp - Wp5nmNFz9Nx - ngTmYBVWVdwTyKj4T0WtfVm0Ozs / viewform ? fbzx = 4154977190905366979 ) so we can accept your submissions . The GitHub username you file there will need to match that of your Pull Requests . If you have any questions or cannot file the CLA electronically , you can email < help @ realm . io > . 
 
 # # Unit tests 
 + 
 All PR ' s must be accompanied by related unit tests . 
 
 # # Code style 
 + 
 While we havn ' t described our code style yet , please just follow the existing style you see in the files you change . 
 + 
 + # # Javadoc 
 + 
 + All public classes and methods must have Javadoc describing their purpose . 
 + 
 + ` ` ` java 
 + / * * 
 + * Checks if given field is equal to the provided value . 
 + * 
 + * @ param fieldName the field to compare . 
 + * @ param fieldValue the value to compare with . 
 + * @ param caseSensitive if { @ code true } , substring matching is case sensitive . Setting this to { @ code false } works for English locale characters only . 
 + * @ param caseSensitive if true , substring matching is case sensitive . Setting this to false only works for English 
 + * locale characters . 
 + * @ return the query object . 
 + * @ throws java . lang . IllegalArgumentException if one or more arguments do not match class or field type . 
 + * @ throws IllegalArgumentException if field name doesn ' t exists , it doesn ' t contain a list of links or the type 
 + * of the object represented by the DynamicRealmObject doesn ' t match . 
 + * @ deprecated Please use { @ link # average ( String ) } instead . 
 + * @ see # endGroup ( ) 
 + * / 
 + public RealmQuery < E > equalTo ( String fieldName , String fieldValue , boolean caseSensitive ) { 
 + / / . . . 
 + } 
 + ` ` ` 
 + 
 + * Method descriptions begin with a verb phrase , e . g . " Checks " instead of " Check " . 
 + * Capitalize the first letter of the method and @ deprecated descriptions . Everything else starts with lower case . 
 + * Empty line between method description and the rest . 
 + * End all descriptions with a period ` . ` ( except @ see ) . 
 + * Reference other Realm classes using ` { @ link . . . } ` . 
 + * Wrap Java values in ` { @ code . . . } ` . 
 + * @ throws description must start with " if " . 
 + * Never list generic exceptions like ` RuntimeException ` , ` Exception ` or ` Error ` . Always reference the specific error . 
 + * Line - length maximum is 120 chars . Parameter descriptions that go above this , should be split into multiple lines and indented . Otherwise do not use indentation ( contrary to Oracle guidelines ) . 
 + 
 + Above is based on the official guidelines from Oracle regarding Javadoc : http : / / www . oracle . com / technetwork / articles / java / index - 137868 . html 
 +
