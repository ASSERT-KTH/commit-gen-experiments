BLEU SCORE: 0.1584873897212071

TEST MSG: RealmResults . where ( )
GENERATED MSG: Experiment of Results . get ( )

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp <nl> index abb5ae6 . . f71a316 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp <nl> @ @ - 21 , 6 + 21 , 7 @ @ <nl> <nl> # include < object - store / src / shared _ realm . hpp > <nl> # include < object - store / src / results . hpp > <nl> + # include < realm / table _ view . hpp > <nl> <nl> # include " util . hpp " <nl> <nl> @ @ - 226 , 3 + 227 , 16 @ @ Java _ io _ realm _ internal _ Collection _ nativeNotificationTokenClose ( JNIEnv * , jclass , <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> delete reinterpret _ cast < NotificationToken * > ( native _ ptr ) ; <nl> } <nl> + <nl> + JNIEXPORT jlong JNICALL <nl> + Java _ io _ realm _ internal _ Collection _ nativeWhere ( JNIEnv * env , jclass , jlong native _ ptr ) <nl> + { <nl> + TR _ ENTER _ PTR ( native _ ptr ) <nl> + try { <nl> + auto results = reinterpret _ cast < Results * > ( native _ ptr ) ; <nl> + <nl> + Query * query = new Query ( results - > get _ query ( ) ) ; <nl> + return reinterpret _ cast < jlong > ( query ) ; <nl> + } CATCH _ STD ( ) <nl> + return 0 ; <nl> + } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index 602c2c3 . . 3bd195c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 148 , 7 + 148 , 7 @ @ public final class RealmQuery < E extends RealmModel > { <nl> this . schema = realm . schema . getSchemaForClass ( clazz ) ; <nl> this . table = queryResults . getTableOrView ( ) ; <nl> this . linkView = null ; <nl> - this . query = this . table . where ( ) ; <nl> + this . query = queryResults . getCollection ( ) . where ( ) ; <nl> } <nl> <nl> private RealmQuery ( BaseRealm realm , LinkView linkView , Class < E > clazz ) { <nl> @ @ - 173 , 7 + 173 , 7 @ @ public final class RealmQuery < E extends RealmModel > { <nl> this . className = className ; <nl> this . schema = realm . schema . getSchemaForClass ( className ) ; <nl> this . table = schema . table ; <nl> - this . query = queryResults . getTableOrView ( ) . where ( ) ; <nl> + this . query = queryResults . getCollection ( ) . where ( ) ; <nl> } <nl> <nl> private RealmQuery ( BaseRealm realm , LinkView linkView , String className ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 471a078 . . d76e1d6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 75 , 15 + 75 , 15 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> private static final long TABLE _ VIEW _ VERSION _ NONE = - 1 ; <nl> <nl> private long currentTableViewVersion = TABLE _ VIEW _ VERSION _ NONE ; <nl> - private final io . realm . internal . Collection collection ; <nl> + private final Collection collection ; <nl> <nl> - RealmResults ( BaseRealm realm , io . realm . internal . Collection collection , Class < E > clazz ) { <nl> + RealmResults ( BaseRealm realm , Collection collection , Class < E > clazz ) { <nl> this . realm = realm ; <nl> this . classSpec = clazz ; <nl> this . collection = collection ; <nl> } <nl> <nl> - RealmResults ( BaseRealm realm , io . realm . internal . Collection collection , String className ) { <nl> + RealmResults ( BaseRealm realm , Collection collection , String className ) { <nl> this . realm = realm ; <nl> this . className = className ; <nl> this . collection = collection ; <nl> @ @ - 97 , 6 + 97 , 10 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> } <nl> } <nl> <nl> + public Collection getCollection ( ) { <nl> + return collection ; <nl> + } <nl> + <nl> / * * <nl> * { @ inheritDoc } <nl> * / <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index 95a658f . . 0787c1e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 156 , 6 + 156 , 11 @ @ public class Collection implements NativeObject { <nl> return query . getTable ( ) ; <nl> } <nl> <nl> + public TableQuery where ( ) { <nl> + long nativeQueryPtr = nativeWhere ( nativePtr ) ; <nl> + return new TableQuery ( this . context , this . getTable ( ) , nativeQueryPtr ) ; <nl> + } <nl> + <nl> public Object aggregate ( Aggregate aggregateMethod , long columnIndex ) { <nl> return nativeAggregate ( nativePtr , columnIndex , aggregateMethod . getValue ( ) ) ; <nl> } <nl> @ @ - 231 , 4 + 236 , 5 @ @ public class Collection implements NativeObject { <nl> private native long nativeAddListener ( long nativePtr ) ; <nl> private static native long nativeNotificationTokenGetFinalizerPtr ( ) ; <nl> private static native long nativeNotificationTokenClose ( long nativePtr ) ; <nl> + private static native long nativeWhere ( long nativePtr ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index c61b2ce . . 6e5dc1c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 505 , 6 + 505 , 18 @ @ abstract class BaseRealm implements Closeable { <nl> return schema ; <nl> } <nl> <nl> + / / FIXME : Testing code <nl> + < E extends RealmModel > E get ( Class < E > clazz , long rowPtr ) { <nl> + Table table = schema . getTable ( clazz ) ; <nl> + UncheckedRow row = UncheckedRow . getByRowPointer ( table , rowPtr ) ; <nl> + <nl> + E result = configuration . getSchemaMediator ( ) . newInstance ( clazz , this , row , schema . getColumnInfo ( clazz ) , <nl> + false , Collections . < String > emptyList ( ) ) ; <nl> + RealmObjectProxy proxy = ( RealmObjectProxy ) result ; <nl> + proxy . realmGet $ proxyState ( ) . setTableVersion $ realm ( ) ; <nl> + return result ; <nl> + } <nl> + <nl> < E extends RealmModel > E get ( Class < E > clazz , long rowIndex , boolean acceptDefaultValue , List < String > excludeFields ) { <nl> Table table = schema . getTable ( clazz ) ; <nl> UncheckedRow row = table . getUncheckedRow ( rowIndex ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 2870276 . . c0e0f70 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 268 , 14 + 268 , 16 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im <nl> public E get ( int location ) { <nl> E obj ; <nl> realm . checkIfValid ( ) ; <nl> + / * <nl> TableOrView table = getTableOrView ( ) ; <nl> if ( table instanceof TableView ) { <nl> obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> } else { <nl> obj = realm . get ( classSpec , className , location ) ; <nl> } <nl> - <nl> - return obj ; <nl> + * / <nl> + long rowPtr = nativeGetRow ( nativePtr , location ) ; <nl> + return realm . get ( classSpec , rowPtr ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index 88ba67d . . dd84818 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class Table implements TableOrView , TableSchema { <nl> private static final long NO _ PRIMARY _ KEY = - 2 ; <nl> <nl> long nativePtr ; <nl> - private final Context context ; <nl> + final Context context ; <nl> private final SharedRealm sharedRealm ; <nl> private long cachedPrimaryKeyColumnIndex = NO _ MATCH ; <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java <nl> index 6e4bb8e . . 523b3fb 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java <nl> @ @ - 71 , 6 + 71 , 13 @ @ public class UncheckedRow extends NativeObject implements Row { <nl> return row ; <nl> } <nl> <nl> + / / FIXME : Testing code <nl> + public static UncheckedRow getByRowPointer ( Table table , long nativeRowPointer ) { <nl> + UncheckedRow row = new UncheckedRow ( table . context , table , nativeRowPointer ) ; <nl> + table . context . addReference ( NativeObjectReference . TYPE _ ROW , row ) ; <nl> + return row ; <nl> + } <nl> + <nl> / * * <nl> * Gets the row object associated to an index in a LinkView . <nl> *

TEST DIFF:
diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp 
 index abb5ae6 . . f71a316 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp 
 @ @ - 21 , 6 + 21 , 7 @ @ 
 
 # include < object - store / src / shared _ realm . hpp > 
 # include < object - store / src / results . hpp > 
 + # include < realm / table _ view . hpp > 
 
 # include " util . hpp " 
 
 @ @ - 226 , 3 + 227 , 16 @ @ Java _ io _ realm _ internal _ Collection _ nativeNotificationTokenClose ( JNIEnv * , jclass , 
 TR _ ENTER _ PTR ( native _ ptr ) 
 delete reinterpret _ cast < NotificationToken * > ( native _ ptr ) ; 
 } 
 + 
 + JNIEXPORT jlong JNICALL 
 + Java _ io _ realm _ internal _ Collection _ nativeWhere ( JNIEnv * env , jclass , jlong native _ ptr ) 
 + { 
 + TR _ ENTER _ PTR ( native _ ptr ) 
 + try { 
 + auto results = reinterpret _ cast < Results * > ( native _ ptr ) ; 
 + 
 + Query * query = new Query ( results - > get _ query ( ) ) ; 
 + return reinterpret _ cast < jlong > ( query ) ; 
 + } CATCH _ STD ( ) 
 + return 0 ; 
 + } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index 602c2c3 . . 3bd195c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 148 , 7 + 148 , 7 @ @ public final class RealmQuery < E extends RealmModel > { 
 this . schema = realm . schema . getSchemaForClass ( clazz ) ; 
 this . table = queryResults . getTableOrView ( ) ; 
 this . linkView = null ; 
 - this . query = this . table . where ( ) ; 
 + this . query = queryResults . getCollection ( ) . where ( ) ; 
 } 
 
 private RealmQuery ( BaseRealm realm , LinkView linkView , Class < E > clazz ) { 
 @ @ - 173 , 7 + 173 , 7 @ @ public final class RealmQuery < E extends RealmModel > { 
 this . className = className ; 
 this . schema = realm . schema . getSchemaForClass ( className ) ; 
 this . table = schema . table ; 
 - this . query = queryResults . getTableOrView ( ) . where ( ) ; 
 + this . query = queryResults . getCollection ( ) . where ( ) ; 
 } 
 
 private RealmQuery ( BaseRealm realm , LinkView linkView , String className ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 471a078 . . d76e1d6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 75 , 15 + 75 , 15 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 private static final long TABLE _ VIEW _ VERSION _ NONE = - 1 ; 
 
 private long currentTableViewVersion = TABLE _ VIEW _ VERSION _ NONE ; 
 - private final io . realm . internal . Collection collection ; 
 + private final Collection collection ; 
 
 - RealmResults ( BaseRealm realm , io . realm . internal . Collection collection , Class < E > clazz ) { 
 + RealmResults ( BaseRealm realm , Collection collection , Class < E > clazz ) { 
 this . realm = realm ; 
 this . classSpec = clazz ; 
 this . collection = collection ; 
 } 
 
 - RealmResults ( BaseRealm realm , io . realm . internal . Collection collection , String className ) { 
 + RealmResults ( BaseRealm realm , Collection collection , String className ) { 
 this . realm = realm ; 
 this . className = className ; 
 this . collection = collection ; 
 @ @ - 97 , 6 + 97 , 10 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 } 
 } 
 
 + public Collection getCollection ( ) { 
 + return collection ; 
 + } 
 + 
 / * * 
 * { @ inheritDoc } 
 * / 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index 95a658f . . 0787c1e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 156 , 6 + 156 , 11 @ @ public class Collection implements NativeObject { 
 return query . getTable ( ) ; 
 } 
 
 + public TableQuery where ( ) { 
 + long nativeQueryPtr = nativeWhere ( nativePtr ) ; 
 + return new TableQuery ( this . context , this . getTable ( ) , nativeQueryPtr ) ; 
 + } 
 + 
 public Object aggregate ( Aggregate aggregateMethod , long columnIndex ) { 
 return nativeAggregate ( nativePtr , columnIndex , aggregateMethod . getValue ( ) ) ; 
 } 
 @ @ - 231 , 4 + 236 , 5 @ @ public class Collection implements NativeObject { 
 private native long nativeAddListener ( long nativePtr ) ; 
 private static native long nativeNotificationTokenGetFinalizerPtr ( ) ; 
 private static native long nativeNotificationTokenClose ( long nativePtr ) ; 
 + private static native long nativeWhere ( long nativePtr ) ; 
 }

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index c61b2ce . . 6e5dc1c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 505 , 6 + 505 , 18 @ @ abstract class BaseRealm implements Closeable { 
 return schema ; 
 } 
 
 + / / FIXME : Testing code 
 + < E extends RealmModel > E get ( Class < E > clazz , long rowPtr ) { 
 + Table table = schema . getTable ( clazz ) ; 
 + UncheckedRow row = UncheckedRow . getByRowPointer ( table , rowPtr ) ; 
 + 
 + E result = configuration . getSchemaMediator ( ) . newInstance ( clazz , this , row , schema . getColumnInfo ( clazz ) , 
 + false , Collections . < String > emptyList ( ) ) ; 
 + RealmObjectProxy proxy = ( RealmObjectProxy ) result ; 
 + proxy . realmGet $ proxyState ( ) . setTableVersion $ realm ( ) ; 
 + return result ; 
 + } 
 + 
 < E extends RealmModel > E get ( Class < E > clazz , long rowIndex , boolean acceptDefaultValue , List < String > excludeFields ) { 
 Table table = schema . getTable ( clazz ) ; 
 UncheckedRow row = table . getUncheckedRow ( rowIndex ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 2870276 . . c0e0f70 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 268 , 14 + 268 , 16 @ @ public final class RealmResults < E extends RealmModel > extends AbstractList < E > im 
 public E get ( int location ) { 
 E obj ; 
 realm . checkIfValid ( ) ; 
 + / * 
 TableOrView table = getTableOrView ( ) ; 
 if ( table instanceof TableView ) { 
 obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 } else { 
 obj = realm . get ( classSpec , className , location ) ; 
 } 
 - 
 - return obj ; 
 + * / 
 + long rowPtr = nativeGetRow ( nativePtr , location ) ; 
 + return realm . get ( classSpec , rowPtr ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index 88ba67d . . dd84818 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class Table implements TableOrView , TableSchema { 
 private static final long NO _ PRIMARY _ KEY = - 2 ; 
 
 long nativePtr ; 
 - private final Context context ; 
 + final Context context ; 
 private final SharedRealm sharedRealm ; 
 private long cachedPrimaryKeyColumnIndex = NO _ MATCH ; 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java 
 index 6e4bb8e . . 523b3fb 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / UncheckedRow . java 
 @ @ - 71 , 6 + 71 , 13 @ @ public class UncheckedRow extends NativeObject implements Row { 
 return row ; 
 } 
 
 + / / FIXME : Testing code 
 + public static UncheckedRow getByRowPointer ( Table table , long nativeRowPointer ) { 
 + UncheckedRow row = new UncheckedRow ( table . context , table , nativeRowPointer ) ; 
 + table . context . addReference ( NativeObjectReference . TYPE _ ROW , row ) ; 
 + return row ; 
 + } 
 + 
 / * * 
 * Gets the row object associated to an index in a LinkView . 
 *
