BLEU SCORE: 0.026398002900658198

TEST MSG: Fix flaky test
GENERATED MSG: Fix errors from login being wrapped in an UNKNOWN code .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> index 55aab7e . . 494938d 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> @ @ - 12 , 7 + 12 , 9 @ @ import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> <nl> + import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> + import java . util . List ; <nl> import java . util . UUID ; <nl> import java . util . concurrent . CountDownLatch ; <nl> import java . util . concurrent . atomic . AtomicReference ; <nl> @ @ - 309 , 6 + 311 , 7 @ @ public class SyncSessionTests extends StandardIntegrationTest { <nl> / / this test validate the behaviour of SyncSessionStopPolicy : : AfterChangesUploaded <nl> @ Test <nl> public void uploadChangesWhenRealmOutOfScope ( ) throws InterruptedException { <nl> + final List < Object > strongRefs = new ArrayList < > ( ) ; <nl> final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , true ) ; <nl> SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> @ @ - 351 , 6 + 354 , 7 @ @ public class SyncSessionTests extends StandardIntegrationTest { <nl> . build ( ) ; <nl> final Realm adminRealm = Realm . getInstance ( adminConfig ) ; <nl> RealmResults < StringOnly > all = adminRealm . where ( StringOnly . class ) . findAll ( ) ; <nl> + strongRefs . add ( all ) ; <nl> RealmChangeListener < RealmResults < StringOnly > > realmChangeListener = new RealmChangeListener < RealmResults < StringOnly > > ( ) { <nl> @ Override <nl> public void onChange ( RealmResults < StringOnly > stringOnlies ) { <nl> @ @ - 369 , 9 + 373 , 9 @ @ public class SyncSessionTests extends StandardIntegrationTest { <nl> } ) ; <nl> <nl> TestHelper . awaitOrFail ( testCompleted , 60 ) ; <nl> + handlerThread . join ( ) ; <nl> <nl> user . logout ( ) ; <nl> - realm . close ( ) ; <nl> } <nl> <nl> / / A Realm that was opened before a user logged out should be able to resume downloading if the user logs back in . <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java <nl> index 3f2e74c . . 70b9cf4 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java <nl> @ @ - 23 , 7 + 23 , 7 @ @ public class Constants { <nl> public static final String USER _ REALM _ 2 = " realm : / / " + HOST + " : 9080 / ~ / tests2 " ; <nl> public static final String USER _ REALM _ SECURE = " realms : / / " + HOST + " : 9443 / ~ / tests " ; <nl> public static final String SYNC _ SERVER _ URL = " realm : / / " + HOST + " : 9080 / ~ / tests " ; <nl> - public static final String SYNC _ SERVER _ URL _ 2 = " realm : / / " + HOST + " / ~ / tests2 " ; <nl> + public static final String SYNC _ SERVER _ URL _ 2 = " realm : / / " + HOST + " : 9080 / ~ / tests2 " ; <nl> <nl> public static final String AUTH _ SERVER _ URL = " http : / / " + HOST + " : 9080 / " ; <nl> public static final String AUTH _ URL = AUTH _ SERVER _ URL + " auth " ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java <nl> index bc274b8 . . 458bb29 100644 <nl> - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java <nl> + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java <nl> @ @ - 7 , 16 + 7 , 22 @ @ import org . json . JSONException ; <nl> import org . json . JSONObject ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> + import org . mockito . Mockito ; <nl> <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> + import java . net . URL ; <nl> <nl> import io . realm . internal . network . AuthenticateRequest ; <nl> + import io . realm . internal . network . AuthenticationServer ; <nl> import io . realm . internal . objectserver . Token ; <nl> import io . realm . util . SyncTestUtils ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . fail ; <nl> + import static org . mockito . Matchers . any ; <nl> + import static org . mockito . Mockito . when ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class AuthenticateRequestTests { <nl> @ @ - 54 , 4 + 60 , 19 @ @ public class AuthenticateRequestTests { <nl> assertEquals ( t . value ( ) , obj . get ( " data " ) ) ; <nl> assertEquals ( " realm " , obj . get ( " provider " ) ) ; <nl> } <nl> + <nl> + <nl> + @ Test <nl> + public void errorsNotWrapped ( ) { <nl> + AuthenticationServer authServer = Mockito . mock ( AuthenticationServer . class ) ; <nl> + when ( authServer . loginUser ( any ( Credentials . class ) , any ( URL . class ) ) ) . thenReturn ( SyncTestUtils . createErrorResponse ( ErrorCode . ACCESS _ DENIED ) ) ; <nl> + SyncManager . setAuthServerImpl ( authServer ) ; <nl> + <nl> + try { <nl> + User . login ( Credentials . facebook ( " foo " ) , " http : / / foo . bar / auth " ) ; <nl> + fail ( ) ; <nl> + } catch ( ObjectServerError e ) { <nl> + assertEquals ( ErrorCode . ACCESS _ DENIED , e . getErrorCode ( ) ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java <nl> index 2fdd291 . . dda3944 100644 <nl> - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java <nl> + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java <nl> @ @ - 22 , 6 + 22 , 8 @ @ import org . json . JSONObject ; <nl> <nl> import java . util . UUID ; <nl> <nl> + import io . realm . ErrorCode ; <nl> + import io . realm . ObjectServerError ; <nl> import io . realm . User ; <nl> import io . realm . internal . network . AuthenticateResponse ; <nl> import io . realm . internal . objectserver . SyncUser ; <nl> @ @ - 79 , 4 + 81 , 8 @ @ public class SyncTestUtils { <nl> throw new RuntimeException ( e ) ; <nl> } <nl> } <nl> + <nl> + public static AuthenticateResponse createErrorResponse ( ErrorCode code ) { <nl> + return AuthenticateResponse . from ( new ObjectServerError ( code , " dummy " ) ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> index 439ea59 . . 2f84203 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> @ @ - 126 , 6 + 126 , 7 @ @ public class User { <nl> } <nl> <nl> final AuthenticationServer server = SyncManager . getAuthServer ( ) ; <nl> + ObjectServerError error ; <nl> try { <nl> AuthenticateResponse result = server . loginUser ( credentials , authUrl ) ; <nl> if ( result . isValid ( ) ) { <nl> @ @ - 137 , 13 + 138 , 12 @ @ public class User { <nl> return user ; <nl> } else { <nl> RealmLog . info ( " Failed authenticating user . \ n % s " , result . getError ( ) ) ; <nl> - throw result . getError ( ) ; <nl> + error = result . getError ( ) ; <nl> } <nl> - } catch ( IOException e ) { <nl> - throw new ObjectServerError ( ErrorCode . IO _ EXCEPTION , e ) ; <nl> } catch ( Throwable e ) { <nl> throw new ObjectServerError ( ErrorCode . UNKNOWN , e ) ; <nl> } <nl> + throw error ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> index 919c1ed . . 2b5ae1e 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> @ @ - 52 , 7 + 52 , 7 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { <nl> String requestBody = AuthenticateRequest . userLogin ( credentials ) . toJson ( ) ; <nl> return authenticate ( authenticationUrl , requestBody ) ; <nl> } catch ( Exception e ) { <nl> - return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . OTHER _ ERROR , Util . getStackTrace ( e ) ) ) ; <nl> + return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . UNKNOWN , e ) ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 index 55aab7e . . 494938d 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 @ @ - 12 , 7 + 12 , 9 @ @ import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 
 + import java . util . ArrayList ; 
 import java . util . Arrays ; 
 + import java . util . List ; 
 import java . util . UUID ; 
 import java . util . concurrent . CountDownLatch ; 
 import java . util . concurrent . atomic . AtomicReference ; 
 @ @ - 309 , 6 + 311 , 7 @ @ public class SyncSessionTests extends StandardIntegrationTest { 
 / / this test validate the behaviour of SyncSessionStopPolicy : : AfterChangesUploaded 
 @ Test 
 public void uploadChangesWhenRealmOutOfScope ( ) throws InterruptedException { 
 + final List < Object > strongRefs = new ArrayList < > ( ) ; 
 final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , true ) ; 
 SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 @ @ - 351 , 6 + 354 , 7 @ @ public class SyncSessionTests extends StandardIntegrationTest { 
 . build ( ) ; 
 final Realm adminRealm = Realm . getInstance ( adminConfig ) ; 
 RealmResults < StringOnly > all = adminRealm . where ( StringOnly . class ) . findAll ( ) ; 
 + strongRefs . add ( all ) ; 
 RealmChangeListener < RealmResults < StringOnly > > realmChangeListener = new RealmChangeListener < RealmResults < StringOnly > > ( ) { 
 @ Override 
 public void onChange ( RealmResults < StringOnly > stringOnlies ) { 
 @ @ - 369 , 9 + 373 , 9 @ @ public class SyncSessionTests extends StandardIntegrationTest { 
 } ) ; 
 
 TestHelper . awaitOrFail ( testCompleted , 60 ) ; 
 + handlerThread . join ( ) ; 
 
 user . logout ( ) ; 
 - realm . close ( ) ; 
 } 
 
 / / A Realm that was opened before a user logged out should be able to resume downloading if the user logs back in . 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java 
 index 3f2e74c . . 70b9cf4 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / Constants . java 
 @ @ - 23 , 7 + 23 , 7 @ @ public class Constants { 
 public static final String USER _ REALM _ 2 = " realm : / / " + HOST + " : 9080 / ~ / tests2 " ; 
 public static final String USER _ REALM _ SECURE = " realms : / / " + HOST + " : 9443 / ~ / tests " ; 
 public static final String SYNC _ SERVER _ URL = " realm : / / " + HOST + " : 9080 / ~ / tests " ; 
 - public static final String SYNC _ SERVER _ URL _ 2 = " realm : / / " + HOST + " / ~ / tests2 " ; 
 + public static final String SYNC _ SERVER _ URL _ 2 = " realm : / / " + HOST + " : 9080 / ~ / tests2 " ; 
 
 public static final String AUTH _ SERVER _ URL = " http : / / " + HOST + " : 9080 / " ; 
 public static final String AUTH _ URL = AUTH _ SERVER _ URL + " auth " ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java 
 index bc274b8 . . 458bb29 100644 
 - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java 
 + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java 
 @ @ - 7 , 16 + 7 , 22 @ @ import org . json . JSONException ; 
 import org . json . JSONObject ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 + import org . mockito . Mockito ; 
 
 import java . net . URI ; 
 import java . net . URISyntaxException ; 
 + import java . net . URL ; 
 
 import io . realm . internal . network . AuthenticateRequest ; 
 + import io . realm . internal . network . AuthenticationServer ; 
 import io . realm . internal . objectserver . Token ; 
 import io . realm . util . SyncTestUtils ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 + import static org . junit . Assert . fail ; 
 + import static org . mockito . Matchers . any ; 
 + import static org . mockito . Mockito . when ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class AuthenticateRequestTests { 
 @ @ - 54 , 4 + 60 , 19 @ @ public class AuthenticateRequestTests { 
 assertEquals ( t . value ( ) , obj . get ( " data " ) ) ; 
 assertEquals ( " realm " , obj . get ( " provider " ) ) ; 
 } 
 + 
 + 
 + @ Test 
 + public void errorsNotWrapped ( ) { 
 + AuthenticationServer authServer = Mockito . mock ( AuthenticationServer . class ) ; 
 + when ( authServer . loginUser ( any ( Credentials . class ) , any ( URL . class ) ) ) . thenReturn ( SyncTestUtils . createErrorResponse ( ErrorCode . ACCESS _ DENIED ) ) ; 
 + SyncManager . setAuthServerImpl ( authServer ) ; 
 + 
 + try { 
 + User . login ( Credentials . facebook ( " foo " ) , " http : / / foo . bar / auth " ) ; 
 + fail ( ) ; 
 + } catch ( ObjectServerError e ) { 
 + assertEquals ( ErrorCode . ACCESS _ DENIED , e . getErrorCode ( ) ) ; 
 + } 
 + } 
 } 
 diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java 
 index 2fdd291 . . dda3944 100644 
 - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java 
 + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java 
 @ @ - 22 , 6 + 22 , 8 @ @ import org . json . JSONObject ; 
 
 import java . util . UUID ; 
 
 + import io . realm . ErrorCode ; 
 + import io . realm . ObjectServerError ; 
 import io . realm . User ; 
 import io . realm . internal . network . AuthenticateResponse ; 
 import io . realm . internal . objectserver . SyncUser ; 
 @ @ - 79 , 4 + 81 , 8 @ @ public class SyncTestUtils { 
 throw new RuntimeException ( e ) ; 
 } 
 } 
 + 
 + public static AuthenticateResponse createErrorResponse ( ErrorCode code ) { 
 + return AuthenticateResponse . from ( new ObjectServerError ( code , " dummy " ) ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 index 439ea59 . . 2f84203 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 @ @ - 126 , 6 + 126 , 7 @ @ public class User { 
 } 
 
 final AuthenticationServer server = SyncManager . getAuthServer ( ) ; 
 + ObjectServerError error ; 
 try { 
 AuthenticateResponse result = server . loginUser ( credentials , authUrl ) ; 
 if ( result . isValid ( ) ) { 
 @ @ - 137 , 13 + 138 , 12 @ @ public class User { 
 return user ; 
 } else { 
 RealmLog . info ( " Failed authenticating user . \ n % s " , result . getError ( ) ) ; 
 - throw result . getError ( ) ; 
 + error = result . getError ( ) ; 
 } 
 - } catch ( IOException e ) { 
 - throw new ObjectServerError ( ErrorCode . IO _ EXCEPTION , e ) ; 
 } catch ( Throwable e ) { 
 throw new ObjectServerError ( ErrorCode . UNKNOWN , e ) ; 
 } 
 + throw error ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 index 919c1ed . . 2b5ae1e 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 @ @ - 52 , 7 + 52 , 7 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { 
 String requestBody = AuthenticateRequest . userLogin ( credentials ) . toJson ( ) ; 
 return authenticate ( authenticationUrl , requestBody ) ; 
 } catch ( Exception e ) { 
 - return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . OTHER _ ERROR , Util . getStackTrace ( e ) ) ) ; 
 + return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . UNKNOWN , e ) ) ; 
 } 
 } 

