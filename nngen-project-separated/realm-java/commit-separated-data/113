BLEU SCORE: 0.03283637368030199

TEST MSG: Ensure stable classes order in generated mediators
GENERATED MSG: validate by path

TEST DIFF (one line): diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java <nl> index a9df486 . . af2bf3c 100644 <nl> - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java <nl> + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ package io . realm . processor ; <nl> <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> + import java . util . LinkedHashSet ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> @ @ - 81 , 7 + 82 , 7 @ @ public class ModuleMetaData { <nl> if ( module . allClasses ( ) ) { <nl> classes = availableClasses ; <nl> } else { <nl> - classes = new HashSet < ClassMetaData > ( ) ; <nl> + classes = new LinkedHashSet < ClassMetaData > ( ) ; <nl> Set < String > classNames = getClassMetaDataFromModule ( classElement ) ; <nl> for ( String fullyQualifiedClassName : classNames ) { <nl> ClassMetaData metadata = classMetaData . get ( fullyQualifiedClassName ) ; <nl> diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> index 1d68cae . . 713ab6b 100644 <nl> - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package io . realm . processor ; <nl> import java . io . IOException ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> + import java . util . LinkedHashSet ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> <nl> @ @ - 132 , 7 + 133 , 7 @ @ public class RealmProcessor extends AbstractProcessor { <nl> <nl> <nl> / / List of all fields maintained by Realm ( RealmResults ) <nl> - private final Set < ClassMetaData > classesToValidate = new HashSet < ClassMetaData > ( ) ; <nl> + private final Set < ClassMetaData > classesToValidate = new LinkedHashSet < ClassMetaData > ( ) ; <nl> / / List of backlinks <nl> private final Set < Backlink > backlinksToValidate = new HashSet < Backlink > ( ) ; <nl> <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java <nl> index 29e9655 . . 1a43964 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java <nl> @ @ - 14 , 6 + 14 , 7 @ @ import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> import java . util . Iterator ; <nl> + import java . util . LinkedHashMap ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> @ @ - 33 , 7 + 34 , 7 @ @ class DefaultRealmModuleMediator extends RealmProxyMediator { <nl> @ Override <nl> public Map < Class < ? extends RealmModel > , OsObjectSchemaInfo > getExpectedObjectSchemaInfoMap ( ) { <nl> Map < Class < ? extends RealmModel > , OsObjectSchemaInfo > infoMap = <nl> - new HashMap < Class < ? extends RealmModel > , OsObjectSchemaInfo > ( 1 ) ; <nl> + new LinkedHashMap < Class < ? extends RealmModel > , OsObjectSchemaInfo > ( 1 ) ; <nl> infoMap . put ( some . test . AllTypes . class , io . realm . AllTypesRealmProxy . getExpectedObjectSchemaInfo ( ) ) ; <nl> return infoMap ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> index 4aafcf2 . . d645864 100644 <nl> - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java <nl> @ @ - 35 , 8 + 35 , 8 @ @ import java . util . Set ; <nl> @ SupportedAnnotationTypes ( { " io . realm . annotations . RealmClass " , " io . realm . annotations . Ignore " } ) <nl> @ SupportedSourceVersion ( javax . lang . model . SourceVersion . RELEASE _ 6 ) <nl> public class RealmProcessor extends AbstractProcessor { <nl> - static HashSet < String > classesToValidate = new HashSet < > ( ) ; <nl> - static boolean done = false ; <nl> + Set < String > classesToValidate = new HashSet < String > ( ) ; <nl> + boolean done = false ; <nl> <nl> @ Override <nl> public boolean process ( Set < ? extends TypeElement > annotations , RoundEnvironment roundEnv ) { <nl> diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index 2d5c060 . . 2cd1a7f 100644 <nl> - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 419 , 11 + 419 , 11 @ @ public class RealmProxyClassGenerator { <nl> <nl> / / make sure types align <nl> writer . beginControlFlow ( " if ( ! columnTypes . containsKey ( \ " % s \ " ) ) " , fieldName ) ; <nl> - writer . emitStatement ( " throw new IllegalStateException ( \ " Missing column for ' % s ' \ " ) " , fieldName ) ; <nl> + writer . emitStatement ( " throw new IllegalStateException ( \ " Missing column ' % s ' \ " ) " , fieldName ) ; <nl> writer . endControlFlow ( ) ; <nl> writer . beginControlFlow ( " if ( columnTypes . get ( \ " % s \ " ) ! = % s ) " , fieldName , JAVA _ TO _ COLUMN _ TYPES . get ( fieldTypeCanonicalName ) ) ; <nl> - writer . emitStatement ( " throw new IllegalStateException ( \ " Invalid type ' % s ' for column for ' % s ' \ " ) " , <nl> - fieldName , fieldTypeName ) ; <nl> + writer . emitStatement ( " throw new IllegalStateException ( \ " Invalid type ' % s ' for column ' % s ' \ " ) " , <nl> + fieldTypeName , fieldName ) ; <nl> writer . endControlFlow ( ) ; <nl> <nl> / * FIXME - add validatoin for link and array types by comparing link targets <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index bb0727b . . 594bf74 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import java . lang . reflect . Method ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> <nl> @ @ - 45 , 7 + 46 , 7 @ @ public class Realm { <nl> private static final Map < String , ThreadRealm > realms = new HashMap < String , ThreadRealm > ( ) ; <nl> private static final String TAG = " REALM " ; <nl> private static final String TABLE _ PREFIX = " class _ " ; <nl> - private static boolean validated = false ; <nl> + private static final HashSet < String > validatedPaths = new HashSet < String > ( ) ; <nl> <nl> private static SharedGroup . Durability defaultDurability = SharedGroup . Durability . FULL ; <nl> <nl> @ @ - 169 , 7 + 170 , 7 @ @ public class Realm { <nl> } <nl> if ( validateSchema ) { <nl> / / FIXME - thread safety <nl> - if ( ! validated ) { <nl> + if ( ! validatedPaths . contains ( absolutePath ) ) { <nl> try { <nl> Class < ? > validationClass = Class . forName ( " io . realm . ValidationList " ) ; <nl> Method getProxyClassesMethod = validationClass . getMethod ( " getProxyClasses " ) ; <nl> @ @ - 192 , 7 + 193 , 7 @ @ public class Realm { <nl> e . printStackTrace ( ) ; <nl> return null ; / / TODO : throw RealmException <nl> } <nl> - validated = true ; <nl> + validatedPaths . add ( absolutePath ) ; <nl> } <nl> } <nl> return realm ;

TEST DIFF:
diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java 
 index a9df486 . . af2bf3c 100644 
 - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java 
 + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / ModuleMetaData . java 
 @ @ - 18 , 6 + 18 , 7 @ @ package io . realm . processor ; 
 
 import java . util . HashMap ; 
 import java . util . HashSet ; 
 + import java . util . LinkedHashSet ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 @ @ - 81 , 7 + 82 , 7 @ @ public class ModuleMetaData { 
 if ( module . allClasses ( ) ) { 
 classes = availableClasses ; 
 } else { 
 - classes = new HashSet < ClassMetaData > ( ) ; 
 + classes = new LinkedHashSet < ClassMetaData > ( ) ; 
 Set < String > classNames = getClassMetaDataFromModule ( classElement ) ; 
 for ( String fullyQualifiedClassName : classNames ) { 
 ClassMetaData metadata = classMetaData . get ( fullyQualifiedClassName ) ; 
 diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 index 1d68cae . . 713ab6b 100644 
 - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package io . realm . processor ; 
 import java . io . IOException ; 
 import java . util . HashMap ; 
 import java . util . HashSet ; 
 + import java . util . LinkedHashSet ; 
 import java . util . Map ; 
 import java . util . Set ; 
 
 @ @ - 132 , 7 + 133 , 7 @ @ public class RealmProcessor extends AbstractProcessor { 
 
 
 / / List of all fields maintained by Realm ( RealmResults ) 
 - private final Set < ClassMetaData > classesToValidate = new HashSet < ClassMetaData > ( ) ; 
 + private final Set < ClassMetaData > classesToValidate = new LinkedHashSet < ClassMetaData > ( ) ; 
 / / List of backlinks 
 private final Set < Backlink > backlinksToValidate = new HashSet < Backlink > ( ) ; 
 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java 
 index 29e9655 . . 1a43964 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import java . util . Collections ; 
 import java . util . HashMap ; 
 import java . util . HashSet ; 
 import java . util . Iterator ; 
 + import java . util . LinkedHashMap ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 @ @ - 33 , 7 + 34 , 7 @ @ class DefaultRealmModuleMediator extends RealmProxyMediator { 
 @ Override 
 public Map < Class < ? extends RealmModel > , OsObjectSchemaInfo > getExpectedObjectSchemaInfoMap ( ) { 
 Map < Class < ? extends RealmModel > , OsObjectSchemaInfo > infoMap = 
 - new HashMap < Class < ? extends RealmModel > , OsObjectSchemaInfo > ( 1 ) ; 
 + new LinkedHashMap < Class < ? extends RealmModel > , OsObjectSchemaInfo > ( 1 ) ; 
 infoMap . put ( some . test . AllTypes . class , io . realm . AllTypesRealmProxy . getExpectedObjectSchemaInfo ( ) ) ; 
 return infoMap ; 
 }

NEAREST DIFF:
diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 index 4aafcf2 . . d645864 100644 
 - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProcessor . java 
 @ @ - 35 , 8 + 35 , 8 @ @ import java . util . Set ; 
 @ SupportedAnnotationTypes ( { " io . realm . annotations . RealmClass " , " io . realm . annotations . Ignore " } ) 
 @ SupportedSourceVersion ( javax . lang . model . SourceVersion . RELEASE _ 6 ) 
 public class RealmProcessor extends AbstractProcessor { 
 - static HashSet < String > classesToValidate = new HashSet < > ( ) ; 
 - static boolean done = false ; 
 + Set < String > classesToValidate = new HashSet < String > ( ) ; 
 + boolean done = false ; 
 
 @ Override 
 public boolean process ( Set < ? extends TypeElement > annotations , RoundEnvironment roundEnv ) { 
 diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index 2d5c060 . . 2cd1a7f 100644 
 - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 419 , 11 + 419 , 11 @ @ public class RealmProxyClassGenerator { 
 
 / / make sure types align 
 writer . beginControlFlow ( " if ( ! columnTypes . containsKey ( \ " % s \ " ) ) " , fieldName ) ; 
 - writer . emitStatement ( " throw new IllegalStateException ( \ " Missing column for ' % s ' \ " ) " , fieldName ) ; 
 + writer . emitStatement ( " throw new IllegalStateException ( \ " Missing column ' % s ' \ " ) " , fieldName ) ; 
 writer . endControlFlow ( ) ; 
 writer . beginControlFlow ( " if ( columnTypes . get ( \ " % s \ " ) ! = % s ) " , fieldName , JAVA _ TO _ COLUMN _ TYPES . get ( fieldTypeCanonicalName ) ) ; 
 - writer . emitStatement ( " throw new IllegalStateException ( \ " Invalid type ' % s ' for column for ' % s ' \ " ) " , 
 - fieldName , fieldTypeName ) ; 
 + writer . emitStatement ( " throw new IllegalStateException ( \ " Invalid type ' % s ' for column ' % s ' \ " ) " , 
 + fieldTypeName , fieldName ) ; 
 writer . endControlFlow ( ) ; 
 
 / * FIXME - add validatoin for link and array types by comparing link targets 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index bb0727b . . 594bf74 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import java . lang . reflect . Method ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . HashMap ; 
 + import java . util . HashSet ; 
 import java . util . List ; 
 import java . util . Map ; 
 
 @ @ - 45 , 7 + 46 , 7 @ @ public class Realm { 
 private static final Map < String , ThreadRealm > realms = new HashMap < String , ThreadRealm > ( ) ; 
 private static final String TAG = " REALM " ; 
 private static final String TABLE _ PREFIX = " class _ " ; 
 - private static boolean validated = false ; 
 + private static final HashSet < String > validatedPaths = new HashSet < String > ( ) ; 
 
 private static SharedGroup . Durability defaultDurability = SharedGroup . Durability . FULL ; 
 
 @ @ - 169 , 7 + 170 , 7 @ @ public class Realm { 
 } 
 if ( validateSchema ) { 
 / / FIXME - thread safety 
 - if ( ! validated ) { 
 + if ( ! validatedPaths . contains ( absolutePath ) ) { 
 try { 
 Class < ? > validationClass = Class . forName ( " io . realm . ValidationList " ) ; 
 Method getProxyClassesMethod = validationClass . getMethod ( " getProxyClasses " ) ; 
 @ @ - 192 , 7 + 193 , 7 @ @ public class Realm { 
 e . printStackTrace ( ) ; 
 return null ; / / TODO : throw RealmException 
 } 
 - validated = true ; 
 + validatedPaths . add ( absolutePath ) ; 
 } 
 } 
 return realm ;
