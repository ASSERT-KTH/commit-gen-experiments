BLEU SCORE: 7.667982759693039E-4

TEST MSG: fix
GENERATED MSG: add gradle wrapper to realm - annotations project

TEST DIFF (one line): diff - - git a / gradlew b / gradlew <nl> index e31b7be . . 3a348dc 100755 <nl> - - - a / gradlew <nl> + + + b / gradlew <nl> @ @ - 64 , 7 + 64 , 7 @ @ case " ` uname ` " in <nl> ; ; <nl> esac <nl> <nl> - CLASSPATH = $ APP _ HOME / lib / gradle - launcher - 4 . 3 . jar <nl> + CLASSPATH = $ APP _ HOME / gradle / wrapper / gradle - wrapper . jar <nl> <nl> # Determine the Java command to use to start the JVM . <nl> if [ - n " $ JAVA _ HOME " ] ; then <nl> @ @ - 162 , 7 + 162 , 7 @ @ save ( ) { <nl> APP _ ARGS = $ ( save " $ @ " ) <nl> <nl> # Collect all arguments for the java command , following the shell quoting and substitution rules <nl> - eval set - - $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS " \ " - Dorg . gradle . appname = $ APP _ BASE _ NAME \ " " - classpath " \ " $ CLASSPATH \ " " org . gradle . launcher . GradleMain " $ APP _ ARGS " <nl> + eval set - - $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS " \ " - Dorg . gradle . appname = $ APP _ BASE _ NAME \ " " - classpath " \ " $ CLASSPATH \ " " org . gradle . wrapper . GradleWrapperMain " $ APP _ ARGS " <nl> <nl> # by default we should be in the correct project dir , but when run from Finder on Mac , the cwd is wrong <nl> if [ " $ ( uname ) " = " Darwin " ] & & [ " $ HOME " = " $ PWD " ] ; then <nl> diff - - git a / gradlew . bat b / gradlew . bat <nl> index 74c5a12 . . e95643d 100755 <nl> - - - a / gradlew . bat <nl> + + + b / gradlew . bat <nl> @ @ - 11 , 7 + 11 , 7 @ @ if " % OS % " = = " Windows _ NT " setlocal <nl> set DIRNAME = % ~ dp0 <nl> if " % DIRNAME % " = = " " set DIRNAME = . <nl> set APP _ BASE _ NAME = % ~ n0 <nl> - set APP _ HOME = % DIRNAME % . . <nl> + set APP _ HOME = % DIRNAME % <nl> <nl> @ rem Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . <nl> set DEFAULT _ JVM _ OPTS = <nl> @ @ - 63 , 10 + 63 , 10 @ @ set CMD _ LINE _ ARGS = % * <nl> : execute <nl> @ rem Setup the command line <nl> <nl> - set CLASSPATH = % APP _ HOME % \ lib \ gradle - launcher - 4 . 3 . jar <nl> + set CLASSPATH = % APP _ HOME % \ gradle \ wrapper \ gradle - wrapper . jar <nl> <nl> @ rem Execute Gradle <nl> - " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . launcher . GradleMain % CMD _ LINE _ ARGS % <nl> + " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . wrapper . GradleWrapperMain % CMD _ LINE _ ARGS % <nl> <nl> : end <nl> @ rem End local scope for the variables with windows NT shell
NEAREST DIFF (one line): diff - - git a / . gitattributes b / . gitattributes <nl> new file mode 100644 <nl> index 0000000 . . 2accc33 <nl> - - - / dev / null <nl> + + + b / . gitattributes <nl> @ @ - 0 , 0 + 1 @ @ <nl> + * . bat eol = crlf <nl> diff - - git a / realm - annotations / gradle / wrapper / gradle - wrapper . jar b / realm - annotations / gradle / wrapper / gradle - wrapper . jar <nl> new file mode 100644 <nl> index 0000000 . . e8c6bf7 <nl> Binary files / dev / null and b / realm - annotations / gradle / wrapper / gradle - wrapper . jar differ <nl> diff - - git a / realm - annotations / gradle / wrapper / gradle - wrapper . properties b / realm - annotations / gradle / wrapper / gradle - wrapper . properties <nl> new file mode 100644 <nl> index 0000000 . . 587246a <nl> - - - / dev / null <nl> + + + b / realm - annotations / gradle / wrapper / gradle - wrapper . properties <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + # Tue Jan 05 14 : 18 : 17 CET 2016 <nl> + distributionBase = GRADLE _ USER _ HOME <nl> + distributionPath = wrapper / dists <nl> + zipStoreBase = GRADLE _ USER _ HOME <nl> + zipStorePath = wrapper / dists <nl> + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 10 - all . zip <nl> diff - - git a / realm - annotations / gradlew b / realm - annotations / gradlew <nl> new file mode 100755 <nl> index 0000000 . . 97fac78 <nl> - - - / dev / null <nl> + + + b / realm - annotations / gradlew <nl> @ @ - 0 , 0 + 1 , 160 @ @ <nl> + # ! / usr / bin / env bash <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # # <nl> + # # Gradle start up script for UN * X <nl> + # # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + # Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . <nl> + DEFAULT _ JVM _ OPTS = " " <nl> + <nl> + APP _ NAME = " Gradle " <nl> + APP _ BASE _ NAME = ` basename " $ 0 " ` <nl> + <nl> + # Use the maximum available , or set MAX _ FD ! = - 1 to use that value . <nl> + MAX _ FD = " maximum " <nl> + <nl> + warn ( ) { <nl> + echo " $ * " <nl> + } <nl> + <nl> + die ( ) { <nl> + echo <nl> + echo " $ * " <nl> + echo <nl> + exit 1 <nl> + } <nl> + <nl> + # OS specific support ( must be ' true ' or ' false ' ) . <nl> + cygwin = false <nl> + msys = false <nl> + darwin = false <nl> + case " ` uname ` " in <nl> + CYGWIN * ) <nl> + cygwin = true <nl> + ; ; <nl> + Darwin * ) <nl> + darwin = true <nl> + ; ; <nl> + MINGW * ) <nl> + msys = true <nl> + ; ; <nl> + esac <nl> + <nl> + # Attempt to set APP _ HOME <nl> + # Resolve links : $ 0 may be a link <nl> + PRG = " $ 0 " <nl> + # Need this for relative symlinks . <nl> + while [ - h " $ PRG " ] ; do <nl> + ls = ` ls - ld " $ PRG " ` <nl> + link = ` expr " $ ls " : ' . * - > \ ( . * \ ) $ ' ` <nl> + if expr " $ link " : ' / . * ' > / dev / null ; then <nl> + PRG = " $ link " <nl> + else <nl> + PRG = ` dirname " $ PRG " ` " / $ link " <nl> + fi <nl> + done <nl> + SAVED = " ` pwd ` " <nl> + cd " ` dirname \ " $ PRG \ " ` / " > & - <nl> + APP _ HOME = " ` pwd - P ` " <nl> + cd " $ SAVED " > & - <nl> + <nl> + CLASSPATH = $ APP _ HOME / gradle / wrapper / gradle - wrapper . jar <nl> + <nl> + # Determine the Java command to use to start the JVM . <nl> + if [ - n " $ JAVA _ HOME " ] ; then <nl> + if [ - x " $ JAVA _ HOME / jre / sh / java " ] ; then <nl> + # IBM ' s JDK on AIX uses strange locations for the executables <nl> + JAVACMD = " $ JAVA _ HOME / jre / sh / java " <nl> + else <nl> + JAVACMD = " $ JAVA _ HOME / bin / java " <nl> + fi <nl> + if [ ! - x " $ JAVACMD " ] ; then <nl> + die " ERROR : JAVA _ HOME is set to an invalid directory : $ JAVA _ HOME <nl> + <nl> + Please set the JAVA _ HOME variable in your environment to match the <nl> + location of your Java installation . " <nl> + fi <nl> + else <nl> + JAVACMD = " java " <nl> + which java > / dev / null 2 > & 1 | | die " ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . <nl> + <nl> + Please set the JAVA _ HOME variable in your environment to match the <nl> + location of your Java installation . " <nl> + fi <nl> + <nl> + # Increase the maximum file descriptors if we can . <nl> + if [ " $ cygwin " = " false " - a " $ darwin " = " false " ] ; then <nl> + MAX _ FD _ LIMIT = ` ulimit - H - n ` <nl> + if [ $ ? - eq 0 ] ; then <nl> + if [ " $ MAX _ FD " = " maximum " - o " $ MAX _ FD " = " max " ] ; then <nl> + MAX _ FD = " $ MAX _ FD _ LIMIT " <nl> + fi <nl> + ulimit - n $ MAX _ FD <nl> + if [ $ ? - ne 0 ] ; then <nl> + warn " Could not set maximum file descriptor limit : $ MAX _ FD " <nl> + fi <nl> + else <nl> + warn " Could not query maximum file descriptor limit : $ MAX _ FD _ LIMIT " <nl> + fi <nl> + fi <nl> + <nl> + # For Darwin , add options to specify how the application appears in the dock <nl> + if $ darwin ; then <nl> + GRADLE _ OPTS = " $ GRADLE _ OPTS \ " - Xdock : name = $ APP _ NAME \ " \ " - Xdock : icon = $ APP _ HOME / media / gradle . icns \ " " <nl> + fi <nl> + <nl> + # For Cygwin , switch paths to Windows format before running java <nl> + if $ cygwin ; then <nl> + APP _ HOME = ` cygpath - - path - - mixed " $ APP _ HOME " ` <nl> + CLASSPATH = ` cygpath - - path - - mixed " $ CLASSPATH " ` <nl> + JAVACMD = ` cygpath - - unix " $ JAVACMD " ` <nl> + <nl> + # We build the pattern for arguments to be converted via cygpath <nl> + ROOTDIRSRAW = ` find - L / - maxdepth 1 - mindepth 1 - type d 2 > / dev / null ` <nl> + SEP = " " <nl> + for dir in $ ROOTDIRSRAW ; do <nl> + ROOTDIRS = " $ ROOTDIRS $ SEP $ dir " <nl> + SEP = " | " <nl> + done <nl> + OURCYGPATTERN = " ( ^ ( $ ROOTDIRS ) ) " <nl> + # Add a user - defined pattern to the cygpath arguments <nl> + if [ " $ GRADLE _ CYGPATTERN " ! = " " ] ; then <nl> + OURCYGPATTERN = " $ OURCYGPATTERN | ( $ GRADLE _ CYGPATTERN ) " <nl> + fi <nl> + # Now convert the arguments - kludge to limit ourselves to / bin / sh <nl> + i = 0 <nl> + for arg in " $ @ " ; do <nl> + CHECK = ` echo " $ arg " | egrep - c " $ OURCYGPATTERN " - ` <nl> + CHECK2 = ` echo " $ arg " | egrep - c " ^ - " ` # # # Determine if an option <nl> + <nl> + if [ $ CHECK - ne 0 ] & & [ $ CHECK2 - eq 0 ] ; then # # # Added a condition <nl> + eval ` echo args $ i ` = ` cygpath - - path - - ignore - - mixed " $ arg " ` <nl> + else <nl> + eval ` echo args $ i ` = " \ " $ arg \ " " <nl> + fi <nl> + i = $ ( ( i + 1 ) ) <nl> + done <nl> + case $ i in <nl> + ( 0 ) set - - ; ; <nl> + ( 1 ) set - - " $ args0 " ; ; <nl> + ( 2 ) set - - " $ args0 " " $ args1 " ; ; <nl> + ( 3 ) set - - " $ args0 " " $ args1 " " $ args2 " ; ; <nl> + ( 4 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " ; ; <nl> + ( 5 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " ; ; <nl> + ( 6 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " ; ; <nl> + ( 7 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " ; ; <nl> + ( 8 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " ; ; <nl> + ( 9 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " " $ args8 " ; ; <nl> + esac <nl> + fi <nl> + <nl> + # Split up the JVM _ OPTS And GRADLE _ OPTS values into an array , following the shell quoting and substitution rules <nl> + function splitJvmOpts ( ) { <nl> + JVM _ OPTS = ( " $ @ " ) <nl> + } <nl> + eval splitJvmOpts $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS <nl> + JVM _ OPTS [ $ { # JVM _ OPTS [ * ] } ] = " - Dorg . gradle . appname = $ APP _ BASE _ NAME " <nl> + <nl> + exec " $ JAVACMD " " $ { JVM _ OPTS [ @ ] } " - classpath " $ CLASSPATH " org . gradle . wrapper . GradleWrapperMain " $ @ " <nl> diff - - git a / realm - annotations / gradlew . bat b / realm - annotations / gradlew . bat <nl> new file mode 100644 <nl> index 0000000 . . 8a0b282 <nl> - - - / dev / null <nl> + + + b / realm - annotations / gradlew . bat <nl> @ @ - 0 , 0 + 1 , 90 @ @ <nl> + @ if " % DEBUG % " = = " " @ echo off <nl> + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + @ rem <nl> + @ rem Gradle startup script for Windows <nl> + @ rem <nl> + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + @ rem Set local scope for the variables with windows NT shell <nl> + if " % OS % " = = " Windows _ NT " setlocal <nl> + <nl> + @ rem Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . <nl> + set DEFAULT _ JVM _ OPTS = <nl> + <nl> + set DIRNAME = % ~ dp0 <nl> + if " % DIRNAME % " = = " " set DIRNAME = . <nl> + set APP _ BASE _ NAME = % ~ n0 <nl> + set APP _ HOME = % DIRNAME % <nl> + <nl> + @ rem Find java . exe <nl> + if defined JAVA _ HOME goto findJavaFromJavaHome <nl> + <nl> + set JAVA _ EXE = java . exe <nl> + % JAVA _ EXE % - version > NUL 2 > & 1 <nl> + if " % ERRORLEVEL % " = = " 0 " goto init <nl> + <nl> + echo . <nl> + echo ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . <nl> + echo . <nl> + echo Please set the JAVA _ HOME variable in your environment to match the <nl> + echo location of your Java installation . <nl> + <nl> + goto fail <nl> + <nl> + : findJavaFromJavaHome <nl> + set JAVA _ HOME = % JAVA _ HOME : " = % <nl> + set JAVA _ EXE = % JAVA _ HOME % / bin / java . exe <nl> + <nl> + if exist " % JAVA _ EXE % " goto init <nl> + <nl> + echo . <nl> + echo ERROR : JAVA _ HOME is set to an invalid directory : % JAVA _ HOME % <nl> + echo . <nl> + echo Please set the JAVA _ HOME variable in your environment to match the <nl> + echo location of your Java installation . <nl> + <nl> + goto fail <nl> + <nl> + : init <nl> + @ rem Get command - line arguments , handling Windowz variants <nl> + <nl> + if not " % OS % " = = " Windows _ NT " goto win9xME _ args <nl> + if " % @ eval [ 2 + 2 ] " = = " 4 " goto 4NT _ args <nl> + <nl> + : win9xME _ args <nl> + @ rem Slurp the command line arguments . <nl> + set CMD _ LINE _ ARGS = <nl> + set _ SKIP = 2 <nl> + <nl> + : win9xME _ args _ slurp <nl> + if " x % ~ 1 " = = " x " goto execute <nl> + <nl> + set CMD _ LINE _ ARGS = % * <nl> + goto execute <nl> + <nl> + : 4NT _ args <nl> + @ rem Get arguments from the 4NT Shell from JP Software <nl> + set CMD _ LINE _ ARGS = % $ <nl> + <nl> + : execute <nl> + @ rem Setup the command line <nl> + <nl> + set CLASSPATH = % APP _ HOME % \ gradle \ wrapper \ gradle - wrapper . jar <nl> + <nl> + @ rem Execute Gradle <nl> + " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . wrapper . GradleWrapperMain % CMD _ LINE _ ARGS % <nl> + <nl> + : end <nl> + @ rem End local scope for the variables with windows NT shell <nl> + if " % ERRORLEVEL % " = = " 0 " goto mainEnd <nl> + <nl> + : fail <nl> + rem Set variable GRADLE _ EXIT _ CONSOLE if you need the _ script _ return code instead of <nl> + rem the _ cmd . exe / c _ return code ! <nl> + if not " " = = " % GRADLE _ EXIT _ CONSOLE % " exit 1 <nl> + exit / b 1 <nl> + <nl> + : mainEnd <nl> + if " % OS % " = = " Windows _ NT " endlocal <nl> + <nl> + : omega

TEST DIFF:
diff - - git a / gradlew b / gradlew 
 index e31b7be . . 3a348dc 100755 
 - - - a / gradlew 
 + + + b / gradlew 
 @ @ - 64 , 7 + 64 , 7 @ @ case " ` uname ` " in 
 ; ; 
 esac 
 
 - CLASSPATH = $ APP _ HOME / lib / gradle - launcher - 4 . 3 . jar 
 + CLASSPATH = $ APP _ HOME / gradle / wrapper / gradle - wrapper . jar 
 
 # Determine the Java command to use to start the JVM . 
 if [ - n " $ JAVA _ HOME " ] ; then 
 @ @ - 162 , 7 + 162 , 7 @ @ save ( ) { 
 APP _ ARGS = $ ( save " $ @ " ) 
 
 # Collect all arguments for the java command , following the shell quoting and substitution rules 
 - eval set - - $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS " \ " - Dorg . gradle . appname = $ APP _ BASE _ NAME \ " " - classpath " \ " $ CLASSPATH \ " " org . gradle . launcher . GradleMain " $ APP _ ARGS " 
 + eval set - - $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS " \ " - Dorg . gradle . appname = $ APP _ BASE _ NAME \ " " - classpath " \ " $ CLASSPATH \ " " org . gradle . wrapper . GradleWrapperMain " $ APP _ ARGS " 
 
 # by default we should be in the correct project dir , but when run from Finder on Mac , the cwd is wrong 
 if [ " $ ( uname ) " = " Darwin " ] & & [ " $ HOME " = " $ PWD " ] ; then 
 diff - - git a / gradlew . bat b / gradlew . bat 
 index 74c5a12 . . e95643d 100755 
 - - - a / gradlew . bat 
 + + + b / gradlew . bat 
 @ @ - 11 , 7 + 11 , 7 @ @ if " % OS % " = = " Windows _ NT " setlocal 
 set DIRNAME = % ~ dp0 
 if " % DIRNAME % " = = " " set DIRNAME = . 
 set APP _ BASE _ NAME = % ~ n0 
 - set APP _ HOME = % DIRNAME % . . 
 + set APP _ HOME = % DIRNAME % 
 
 @ rem Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . 
 set DEFAULT _ JVM _ OPTS = 
 @ @ - 63 , 10 + 63 , 10 @ @ set CMD _ LINE _ ARGS = % * 
 : execute 
 @ rem Setup the command line 
 
 - set CLASSPATH = % APP _ HOME % \ lib \ gradle - launcher - 4 . 3 . jar 
 + set CLASSPATH = % APP _ HOME % \ gradle \ wrapper \ gradle - wrapper . jar 
 
 @ rem Execute Gradle 
 - " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . launcher . GradleMain % CMD _ LINE _ ARGS % 
 + " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . wrapper . GradleWrapperMain % CMD _ LINE _ ARGS % 
 
 : end 
 @ rem End local scope for the variables with windows NT shell

NEAREST DIFF:
diff - - git a / . gitattributes b / . gitattributes 
 new file mode 100644 
 index 0000000 . . 2accc33 
 - - - / dev / null 
 + + + b / . gitattributes 
 @ @ - 0 , 0 + 1 @ @ 
 + * . bat eol = crlf 
 diff - - git a / realm - annotations / gradle / wrapper / gradle - wrapper . jar b / realm - annotations / gradle / wrapper / gradle - wrapper . jar 
 new file mode 100644 
 index 0000000 . . e8c6bf7 
 Binary files / dev / null and b / realm - annotations / gradle / wrapper / gradle - wrapper . jar differ 
 diff - - git a / realm - annotations / gradle / wrapper / gradle - wrapper . properties b / realm - annotations / gradle / wrapper / gradle - wrapper . properties 
 new file mode 100644 
 index 0000000 . . 587246a 
 - - - / dev / null 
 + + + b / realm - annotations / gradle / wrapper / gradle - wrapper . properties 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + # Tue Jan 05 14 : 18 : 17 CET 2016 
 + distributionBase = GRADLE _ USER _ HOME 
 + distributionPath = wrapper / dists 
 + zipStoreBase = GRADLE _ USER _ HOME 
 + zipStorePath = wrapper / dists 
 + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 10 - all . zip 
 diff - - git a / realm - annotations / gradlew b / realm - annotations / gradlew 
 new file mode 100755 
 index 0000000 . . 97fac78 
 - - - / dev / null 
 + + + b / realm - annotations / gradlew 
 @ @ - 0 , 0 + 1 , 160 @ @ 
 + # ! / usr / bin / env bash 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # # 
 + # # Gradle start up script for UN * X 
 + # # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + # Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . 
 + DEFAULT _ JVM _ OPTS = " " 
 + 
 + APP _ NAME = " Gradle " 
 + APP _ BASE _ NAME = ` basename " $ 0 " ` 
 + 
 + # Use the maximum available , or set MAX _ FD ! = - 1 to use that value . 
 + MAX _ FD = " maximum " 
 + 
 + warn ( ) { 
 + echo " $ * " 
 + } 
 + 
 + die ( ) { 
 + echo 
 + echo " $ * " 
 + echo 
 + exit 1 
 + } 
 + 
 + # OS specific support ( must be ' true ' or ' false ' ) . 
 + cygwin = false 
 + msys = false 
 + darwin = false 
 + case " ` uname ` " in 
 + CYGWIN * ) 
 + cygwin = true 
 + ; ; 
 + Darwin * ) 
 + darwin = true 
 + ; ; 
 + MINGW * ) 
 + msys = true 
 + ; ; 
 + esac 
 + 
 + # Attempt to set APP _ HOME 
 + # Resolve links : $ 0 may be a link 
 + PRG = " $ 0 " 
 + # Need this for relative symlinks . 
 + while [ - h " $ PRG " ] ; do 
 + ls = ` ls - ld " $ PRG " ` 
 + link = ` expr " $ ls " : ' . * - > \ ( . * \ ) $ ' ` 
 + if expr " $ link " : ' / . * ' > / dev / null ; then 
 + PRG = " $ link " 
 + else 
 + PRG = ` dirname " $ PRG " ` " / $ link " 
 + fi 
 + done 
 + SAVED = " ` pwd ` " 
 + cd " ` dirname \ " $ PRG \ " ` / " > & - 
 + APP _ HOME = " ` pwd - P ` " 
 + cd " $ SAVED " > & - 
 + 
 + CLASSPATH = $ APP _ HOME / gradle / wrapper / gradle - wrapper . jar 
 + 
 + # Determine the Java command to use to start the JVM . 
 + if [ - n " $ JAVA _ HOME " ] ; then 
 + if [ - x " $ JAVA _ HOME / jre / sh / java " ] ; then 
 + # IBM ' s JDK on AIX uses strange locations for the executables 
 + JAVACMD = " $ JAVA _ HOME / jre / sh / java " 
 + else 
 + JAVACMD = " $ JAVA _ HOME / bin / java " 
 + fi 
 + if [ ! - x " $ JAVACMD " ] ; then 
 + die " ERROR : JAVA _ HOME is set to an invalid directory : $ JAVA _ HOME 
 + 
 + Please set the JAVA _ HOME variable in your environment to match the 
 + location of your Java installation . " 
 + fi 
 + else 
 + JAVACMD = " java " 
 + which java > / dev / null 2 > & 1 | | die " ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . 
 + 
 + Please set the JAVA _ HOME variable in your environment to match the 
 + location of your Java installation . " 
 + fi 
 + 
 + # Increase the maximum file descriptors if we can . 
 + if [ " $ cygwin " = " false " - a " $ darwin " = " false " ] ; then 
 + MAX _ FD _ LIMIT = ` ulimit - H - n ` 
 + if [ $ ? - eq 0 ] ; then 
 + if [ " $ MAX _ FD " = " maximum " - o " $ MAX _ FD " = " max " ] ; then 
 + MAX _ FD = " $ MAX _ FD _ LIMIT " 
 + fi 
 + ulimit - n $ MAX _ FD 
 + if [ $ ? - ne 0 ] ; then 
 + warn " Could not set maximum file descriptor limit : $ MAX _ FD " 
 + fi 
 + else 
 + warn " Could not query maximum file descriptor limit : $ MAX _ FD _ LIMIT " 
 + fi 
 + fi 
 + 
 + # For Darwin , add options to specify how the application appears in the dock 
 + if $ darwin ; then 
 + GRADLE _ OPTS = " $ GRADLE _ OPTS \ " - Xdock : name = $ APP _ NAME \ " \ " - Xdock : icon = $ APP _ HOME / media / gradle . icns \ " " 
 + fi 
 + 
 + # For Cygwin , switch paths to Windows format before running java 
 + if $ cygwin ; then 
 + APP _ HOME = ` cygpath - - path - - mixed " $ APP _ HOME " ` 
 + CLASSPATH = ` cygpath - - path - - mixed " $ CLASSPATH " ` 
 + JAVACMD = ` cygpath - - unix " $ JAVACMD " ` 
 + 
 + # We build the pattern for arguments to be converted via cygpath 
 + ROOTDIRSRAW = ` find - L / - maxdepth 1 - mindepth 1 - type d 2 > / dev / null ` 
 + SEP = " " 
 + for dir in $ ROOTDIRSRAW ; do 
 + ROOTDIRS = " $ ROOTDIRS $ SEP $ dir " 
 + SEP = " | " 
 + done 
 + OURCYGPATTERN = " ( ^ ( $ ROOTDIRS ) ) " 
 + # Add a user - defined pattern to the cygpath arguments 
 + if [ " $ GRADLE _ CYGPATTERN " ! = " " ] ; then 
 + OURCYGPATTERN = " $ OURCYGPATTERN | ( $ GRADLE _ CYGPATTERN ) " 
 + fi 
 + # Now convert the arguments - kludge to limit ourselves to / bin / sh 
 + i = 0 
 + for arg in " $ @ " ; do 
 + CHECK = ` echo " $ arg " | egrep - c " $ OURCYGPATTERN " - ` 
 + CHECK2 = ` echo " $ arg " | egrep - c " ^ - " ` # # # Determine if an option 
 + 
 + if [ $ CHECK - ne 0 ] & & [ $ CHECK2 - eq 0 ] ; then # # # Added a condition 
 + eval ` echo args $ i ` = ` cygpath - - path - - ignore - - mixed " $ arg " ` 
 + else 
 + eval ` echo args $ i ` = " \ " $ arg \ " " 
 + fi 
 + i = $ ( ( i + 1 ) ) 
 + done 
 + case $ i in 
 + ( 0 ) set - - ; ; 
 + ( 1 ) set - - " $ args0 " ; ; 
 + ( 2 ) set - - " $ args0 " " $ args1 " ; ; 
 + ( 3 ) set - - " $ args0 " " $ args1 " " $ args2 " ; ; 
 + ( 4 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " ; ; 
 + ( 5 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " ; ; 
 + ( 6 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " ; ; 
 + ( 7 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " ; ; 
 + ( 8 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " ; ; 
 + ( 9 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " " $ args8 " ; ; 
 + esac 
 + fi 
 + 
 + # Split up the JVM _ OPTS And GRADLE _ OPTS values into an array , following the shell quoting and substitution rules 
 + function splitJvmOpts ( ) { 
 + JVM _ OPTS = ( " $ @ " ) 
 + } 
 + eval splitJvmOpts $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS 
 + JVM _ OPTS [ $ { # JVM _ OPTS [ * ] } ] = " - Dorg . gradle . appname = $ APP _ BASE _ NAME " 
 + 
 + exec " $ JAVACMD " " $ { JVM _ OPTS [ @ ] } " - classpath " $ CLASSPATH " org . gradle . wrapper . GradleWrapperMain " $ @ " 
 diff - - git a / realm - annotations / gradlew . bat b / realm - annotations / gradlew . bat 
 new file mode 100644 
 index 0000000 . . 8a0b282 
 - - - / dev / null 
 + + + b / realm - annotations / gradlew . bat 
 @ @ - 0 , 0 + 1 , 90 @ @ 
 + @ if " % DEBUG % " = = " " @ echo off 
 + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + @ rem 
 + @ rem Gradle startup script for Windows 
 + @ rem 
 + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + @ rem Set local scope for the variables with windows NT shell 
 + if " % OS % " = = " Windows _ NT " setlocal 
 + 
 + @ rem Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . 
 + set DEFAULT _ JVM _ OPTS = 
 + 
 + set DIRNAME = % ~ dp0 
 + if " % DIRNAME % " = = " " set DIRNAME = . 
 + set APP _ BASE _ NAME = % ~ n0 
 + set APP _ HOME = % DIRNAME % 
 + 
 + @ rem Find java . exe 
 + if defined JAVA _ HOME goto findJavaFromJavaHome 
 + 
 + set JAVA _ EXE = java . exe 
 + % JAVA _ EXE % - version > NUL 2 > & 1 
 + if " % ERRORLEVEL % " = = " 0 " goto init 
 + 
 + echo . 
 + echo ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . 
 + echo . 
 + echo Please set the JAVA _ HOME variable in your environment to match the 
 + echo location of your Java installation . 
 + 
 + goto fail 
 + 
 + : findJavaFromJavaHome 
 + set JAVA _ HOME = % JAVA _ HOME : " = % 
 + set JAVA _ EXE = % JAVA _ HOME % / bin / java . exe 
 + 
 + if exist " % JAVA _ EXE % " goto init 
 + 
 + echo . 
 + echo ERROR : JAVA _ HOME is set to an invalid directory : % JAVA _ HOME % 
 + echo . 
 + echo Please set the JAVA _ HOME variable in your environment to match the 
 + echo location of your Java installation . 
 + 
 + goto fail 
 + 
 + : init 
 + @ rem Get command - line arguments , handling Windowz variants 
 + 
 + if not " % OS % " = = " Windows _ NT " goto win9xME _ args 
 + if " % @ eval [ 2 + 2 ] " = = " 4 " goto 4NT _ args 
 + 
 + : win9xME _ args 
 + @ rem Slurp the command line arguments . 
 + set CMD _ LINE _ ARGS = 
 + set _ SKIP = 2 
 + 
 + : win9xME _ args _ slurp 
 + if " x % ~ 1 " = = " x " goto execute 
 + 
 + set CMD _ LINE _ ARGS = % * 
 + goto execute 
 + 
 + : 4NT _ args 
 + @ rem Get arguments from the 4NT Shell from JP Software 
 + set CMD _ LINE _ ARGS = % $ 
 + 
 + : execute 
 + @ rem Setup the command line 
 + 
 + set CLASSPATH = % APP _ HOME % \ gradle \ wrapper \ gradle - wrapper . jar 
 + 
 + @ rem Execute Gradle 
 + " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . wrapper . GradleWrapperMain % CMD _ LINE _ ARGS % 
 + 
 + : end 
 + @ rem End local scope for the variables with windows NT shell 
 + if " % ERRORLEVEL % " = = " 0 " goto mainEnd 
 + 
 + : fail 
 + rem Set variable GRADLE _ EXIT _ CONSOLE if you need the _ script _ return code instead of 
 + rem the _ cmd . exe / c _ return code ! 
 + if not " " = = " % GRADLE _ EXIT _ CONSOLE % " exit 1 
 + exit / b 1 
 + 
 + : mainEnd 
 + if " % OS % " = = " Windows _ NT " endlocal 
 + 
 + : omega
