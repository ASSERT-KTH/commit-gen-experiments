BLEU SCORE: 0.0853341865785191

TEST MSG: Remove groovy code
GENERATED MSG: Remove reliance on groovy in realm - transformer

TEST DIFF (one line): diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy <nl> deleted file mode 100644 <nl> index 823fb4e . . 0000000 <nl> - - - a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy <nl> + + + / dev / null <nl> @ @ - 1 , 49 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2016 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . transformer <nl> - <nl> - import org . gradle . api . Project <nl> - <nl> - import javax . annotation . Nonnull <nl> - import javax . annotation . Nullable ; <nl> - <nl> - / * * <nl> - * Helper methods for functionality that is really hard to port to Java / Kotlin <nl> - * / <nl> - class GroovyUtil { <nl> - <nl> - @ Nullable <nl> - static String getTargetSdk ( @ Nonnull Project project ) { <nl> - return project ? . android ? . defaultConfig ? . targetSdkVersion ? . mApiLevel as String <nl> - } <nl> - <nl> - @ Nullable <nl> - static String getMinSdk ( @ Nonnull Project project ) { <nl> - return project ? . android ? . defaultConfig ? . minSdkVersion ? . mApiLevel as String <nl> - } <nl> - <nl> - @ Nonnull <nl> - static boolean isSyncEnabled ( @ Nonnull Project project ) { <nl> - return ( project . hasProperty ( " realm " ) ) ? project . realm . syncEnabled : false <nl> - } <nl> - <nl> - @ Nonnull <nl> - static Collection < File > getBootClasspath ( @ Nonnull Project project ) { <nl> - def classpath = project . android . bootClasspath as Collection < File > <nl> - return ( classpath ! = null ) ? classpath : Collections . emptyList ( ) <nl> - } <nl> - }
NEAREST DIFF (one line): diff - - git a / examples / kotlinExample / build . gradle b / examples / kotlinExample / build . gradle <nl> index aa27cde . . 0f7148e 100644 <nl> - - - a / examples / kotlinExample / build . gradle <nl> + + + b / examples / kotlinExample / build . gradle <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> buildscript { <nl> - ext . kotlin _ version = ' 1 . 2 . 10 ' <nl> + ext . kotlin _ version = ' 1 . 2 . 40 ' <nl> repositories { <nl> jcenter ( ) <nl> mavenCentral ( ) <nl> diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> index 6064b95 . . b566c10 100644 <nl> - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> @ @ - 41 , 7 + 41 , 6 @ @ class Realm implements Plugin < Project > { <nl> } <nl> <nl> def syncEnabledDefault = false <nl> - def dependencyConfigurationName = getDependencyConfigurationName ( project ) <nl> def usesAptPlugin = project . plugins . findPlugin ( ' com . neenbedankt . android - apt ' ) ! = null <nl> def isKotlinProject = project . plugins . findPlugin ( ' kotlin - android ' ) ! = null <nl> def useKotlinExtensionsDefault = isKotlinProject <nl> @ @ - 49 , 8 + 48 , 8 @ @ class Realm implements Plugin < Project > { <nl> / / TODO add a parameter in ' realm ' block if this should be specified by users <nl> def preferAptOnKotlinProject = false <nl> <nl> - <nl> - project . extensions . create ( ' realm ' , RealmPluginExtension , project , syncEnabledDefault , useKotlinExtensionsDefault , dependencyConfigurationName ) <nl> + def extension = project . extensions . create ( ' realm ' , RealmPluginExtension ) <nl> + extension . kotlinExtensionsEnabled = useKotlinExtensionsDefault <nl> <nl> if ( shouldApplyAndroidAptPlugin ( usesAptPlugin , isKotlinProject , <nl> hasAnnotationProcessorConfiguration , preferAptOnKotlinProject ) ) { <nl> @ @ - 59 , 6 + 58 , 7 @ @ class Realm implements Plugin < Project > { <nl> } <nl> <nl> project . android . registerTransform ( new RealmTransformer ( project ) ) <nl> + def dependencyConfigurationName = getDependencyConfigurationName ( project ) <nl> <nl> project . repositories . add ( project . getRepositories ( ) . jcenter ( ) ) <nl> project . dependencies . add ( dependencyConfigurationName , " io . realm : realm - annotations : $ { Version . VERSION } " ) <nl> @ @ - 73 , 6 + 73 , 10 @ @ class Realm implements Plugin < Project > { <nl> project . dependencies . add ( " annotationProcessor " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) <nl> project . dependencies . add ( " androidTestAnnotationProcessor " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) <nl> } <nl> + <nl> + project . afterEvaluate { <nl> + setDependencies ( project , dependencyConfigurationName , extension . syncEnabled , extension . kotlinExtensionsEnabled ) <nl> + } <nl> } <nl> <nl> private static boolean isTransformAvailable ( ) { <nl> @ @ - 114 , 4 + 118 , 30 @ @ class Realm implements Plugin < Project > { <nl> / / for any Java Projects where user did not apply ' android - apt ' plugin manually . <nl> return ! hasAnnotationProcessorConfiguration <nl> } <nl> + <nl> + private static void setDependencies ( Project project , String dependencyConfigurationName , boolean syncEnabled , boolean kotlinExtensionsEnabled ) { <nl> + / / remove libraries first <nl> + <nl> + def iterator = project . getConfigurations ( ) . getByName ( dependencyConfigurationName ) . getDependencies ( ) . iterator ( ) <nl> + while ( iterator . hasNext ( ) ) { <nl> + def item = iterator . next ( ) <nl> + if ( item . group = = ' io . realm ' ) { <nl> + if ( item . name . startsWith ( ' realm - android - library ' ) ) { <nl> + iterator . remove ( ) <nl> + } <nl> + if ( item . name . startsWith ( ' realm - android - kotlin - extensions ' ) ) { <nl> + iterator . remove ( ) <nl> + } <nl> + } <nl> + } <nl> + <nl> + / / then add again <nl> + def syncArtifactName = " realm - android - library $ { syncEnabled ? ' - object - server ' : ' ' } " <nl> + project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { syncArtifactName } : $ { Version . VERSION } " ) <nl> + <nl> + if ( kotlinExtensionsEnabled ) { <nl> + def kotlinExtArtifactName = " realm - android - kotlin - extensions $ { syncEnabled ? ' - object - server ' : ' ' } " <nl> + project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { kotlinExtArtifactName } : $ { Version . VERSION } " ) <nl> + } <nl> + } <nl> } <nl> diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / RealmPluginExtension . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / RealmPluginExtension . groovy <nl> deleted file mode 100644 <nl> index fc34341 . . 0000000 <nl> - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / RealmPluginExtension . groovy <nl> + + + / dev / null <nl> @ @ - 1 , 68 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2016 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . gradle <nl> - <nl> - import org . gradle . api . Project <nl> - <nl> - class RealmPluginExtension { <nl> - private Project project <nl> - def boolean syncEnabled <nl> - def boolean kotlinExtensionsEnabled <nl> - private String dependencyConfigurationName <nl> - <nl> - RealmPluginExtension ( Project project , boolean syncEnabledDefault , boolean useKotlinExtensionsDefault , String dependencyConfigurationName ) { <nl> - this . project = project <nl> - this . dependencyConfigurationName = dependencyConfigurationName <nl> - setSyncEnabled ( syncEnabledDefault ) <nl> - setKotlinExtensionsEnabled ( useKotlinExtensionsDefault ) <nl> - } <nl> - <nl> - void setSyncEnabled ( value ) { <nl> - this . syncEnabled = value <nl> - setDependencies ( syncEnabled , kotlinExtensionsEnabled ) <nl> - } <nl> - <nl> - void setKotlinExtensionsEnabled ( value ) { <nl> - this . kotlinExtensionsEnabled = value <nl> - setDependencies ( syncEnabled , kotlinExtensionsEnabled ) <nl> - } <nl> - <nl> - void setDependencies ( boolean syncEnabled , boolean kotlinExtensionsEnabled ) { <nl> - / / remove libraries first <nl> - def iterator = project . getConfigurations ( ) . getByName ( dependencyConfigurationName ) . getDependencies ( ) . iterator ( ) <nl> - while ( iterator . hasNext ( ) ) { <nl> - def item = iterator . next ( ) <nl> - if ( item . group = = ' io . realm ' ) { <nl> - if ( item . name . startsWith ( ' realm - android - library ' ) ) { <nl> - iterator . remove ( ) <nl> - } <nl> - if ( item . name . startsWith ( ' realm - android - kotlin - extensions ' ) ) { <nl> - iterator . remove ( ) <nl> - } <nl> - } <nl> - } <nl> - <nl> - / / then add again <nl> - def syncArtifactName = " realm - android - library $ { syncEnabled ? ' - object - server ' : ' ' } " <nl> - project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { syncArtifactName } : $ { Version . VERSION } " ) <nl> - <nl> - if ( kotlinExtensionsEnabled ) { <nl> - def kotlinExtArtifactName = " realm - android - kotlin - extensions $ { syncEnabled ? ' - object - server ' : ' ' } " <nl> - project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { kotlinExtArtifactName } : $ { Version . VERSION } " ) <nl> - } <nl> - } <nl> - } <nl> diff - - git a / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy <nl> index e07e0e6 . . 1c203b3 100644 <nl> - - - a / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy <nl> + + + b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy <nl> @ @ - 51 , 21 + 51 , 35 @ @ class PluginTest { <nl> project . buildscript { <nl> repositories { <nl> mavenLocal ( ) <nl> + google ( ) <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 3 . 1 . 0 - alpha03 ' <nl> classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> - classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " <nl> } <nl> } <nl> <nl> + def manifest = project . file ( " src / main / AndroidManifest . xml " ) <nl> + manifest . parentFile . mkdirs ( ) <nl> + manifest . text = ' < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " package = " com . realm . test " > < / manifest > ' <nl> + <nl> project . apply plugin : ' com . android . application ' <nl> project . apply plugin : ' realm - android ' <nl> <nl> + project . android { <nl> + compileSdkVersion 27 <nl> + <nl> + defaultConfig { <nl> + minSdkVersion 16 <nl> + targetSdkVersion 27 <nl> + } <nl> + } <nl> + <nl> + project . evaluate ( ) <nl> + <nl> assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - android - library ' , currentVersion ) ) <nl> assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - annotations ' , currentVersion ) ) <nl> - <nl> assertTrue ( containsTransform ( project . android . transforms , RealmTransformer . class ) ) <nl> } <nl> <nl> @ @ - 79 , 7 + 93 , 6 @ @ class PluginTest { <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 3 . 1 . 0 - alpha03 ' <nl> classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> - classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " <nl> } <nl> } <nl> <nl> diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle <nl> index 9026350 . . c92b91f 100644 <nl> - - - a / realm - transformer / build . gradle <nl> + + + b / realm - transformer / build . gradle <nl> @ @ - 60 , 13 + 60 , 13 @ @ sourceSets { <nl> } <nl> <nl> dependencies { <nl> - compile localGroovy ( ) <nl> compile gradleApi ( ) <nl> compile " io . realm : realm - annotations : $ { version } " <nl> compileOnly ' com . android . tools . build : gradle : 3 . 1 . 1 ' <nl> compile ' org . javassist : javassist : 3 . 21 . 0 - GA ' <nl> compile " org . jetbrains . kotlin : kotlin - stdlib - jdk8 : $ { kotlin _ version } " <nl> <nl> + testCompile localGroovy ( ) <nl> testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) { <nl> exclude module : ' groovy - all ' <nl> } <nl> diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy <nl> deleted file mode 100644 <nl> index 1fc1028 . . 0000000 <nl> - - - a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy <nl> + + + / dev / null <nl> @ @ - 1 , 50 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2016 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . transformer <nl> - <nl> - import kotlin . collections . EmptyList <nl> - import org . gradle . api . Project <nl> - <nl> - import javax . annotation . Nonnull <nl> - import javax . annotation . Nullable ; <nl> - <nl> - / * * <nl> - * Helper methods for functionality that is really hard to port to Java / Kotlin <nl> - * / <nl> - class GroovyUtil { <nl> - <nl> - @ Nullable <nl> - static String getTargetSdk ( @ Nonnull Project project ) { <nl> - return project ? . android ? . defaultConfig ? . targetSdkVersion ? . mApiLevel as String <nl> - } <nl> - <nl> - @ Nullable <nl> - static String getMinSdk ( @ Nonnull Project project ) { <nl> - return project ? . android ? . defaultConfig ? . minSdkVersion ? . mApiLevel as String <nl> - } <nl> - <nl> - @ Nonnull <nl> - static boolean isSyncEnabled ( @ Nonnull Project project ) { <nl> - return project . realm ? . syncEnabled ! = null & & project . realm . syncEnabled <nl> - } <nl> - <nl> - @ Nonnull <nl> - static Collection < File > getBootClasspath ( @ Nonnull Project project ) { <nl> - def classpath = project . android . bootClasspath as Collection < File > <nl> - return ( classpath ! = null ) ? classpath : Collections . emptyList ( ) <nl> - } <nl> - } <nl> diff - - git a / realm - transformer / src / main / java / io / realm / gradle / RealmPluginExtension . java b / realm - transformer / src / main / java / io / realm / gradle / RealmPluginExtension . java <nl> new file mode 100644 <nl> index 0000000 . . 3ec0d8e <nl> - - - / dev / null <nl> + + + b / realm - transformer / src / main / java / io / realm / gradle / RealmPluginExtension . java <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + / * <nl> + * Copyright 2018 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . gradle ; <nl> + <nl> + import org . gradle . api . tasks . Input ; <nl> + <nl> + public class RealmPluginExtension { <nl> + <nl> + @ Input public boolean syncEnabled = false ; <nl> + @ Input public boolean kotlinExtensionsEnabled = false ; <nl> + } <nl> diff - - git a / realm - transformer / src / main / java / io / realm / transformer / Utils . java b / realm - transformer / src / main / java / io / realm / transformer / Utils . java <nl> index a6647b9 . . 8d50ec7 100644 <nl> - - - a / realm - transformer / src / main / java / io / realm / transformer / Utils . java <nl> + + + b / realm - transformer / src / main / java / io / realm / transformer / Utils . java <nl> @ @ - 16 , 10 + 16 , 15 @ @ <nl> <nl> package io . realm . transformer ; <nl> <nl> - import javax . xml . bind . DatatypeConverter ; <nl> + import com . android . build . gradle . BaseExtension ; <nl> + import io . realm . gradle . RealmPluginExtension ; <nl> + import java . io . File ; <nl> import java . io . UnsupportedEncodingException ; <nl> import java . security . MessageDigest ; <nl> import java . security . NoSuchAlgorithmException ; <nl> + import java . util . List ; <nl> + import javax . xml . bind . DatatypeConverter ; <nl> + import org . gradle . api . Project ; <nl> <nl> public class Utils { <nl> <nl> @ @ - 57 , 4 + 62 , 24 @ @ public class Utils { <nl> <nl> return stringBuilder . toString ( ) ; <nl> } <nl> + <nl> + public static String getTargetSdk ( Project project ) { <nl> + return getAndroidExtension ( project ) . getDefaultConfig ( ) . getTargetSdkVersion ( ) . getApiString ( ) ; <nl> + } <nl> + <nl> + public static String getMinSdk ( Project project ) { <nl> + return getAndroidExtension ( project ) . getDefaultConfig ( ) . getMinSdkVersion ( ) . getApiString ( ) ; <nl> + } <nl> + <nl> + public static boolean isSyncEnabled ( Project project ) { <nl> + return ( ( RealmPluginExtension ) project . getExtensions ( ) . getByName ( " realm " ) ) . syncEnabled ; <nl> + } <nl> + <nl> + public static List < File > getBootClasspath ( Project project ) { <nl> + return getAndroidExtension ( project ) . getBootClasspath ( ) ; <nl> + } <nl> + <nl> + private static BaseExtension getAndroidExtension ( Project project ) { <nl> + return ( BaseExtension ) project . getExtensions ( ) . getByName ( " android " ) ; <nl> + } <nl> } <nl> diff - - git a / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt b / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt <nl> index 7fdd2db . . ffbd4d1 100644 <nl> - - - a / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt <nl> + + + b / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt <nl> @ @ - 151 , 11 + 151 , 11 @ @ class RealmTransformer ( val project : Project ) : Transform ( ) { <nl> it . packageName <nl> } <nl> <nl> - val targetSdk : String ? = GroovyUtil . getTargetSdk ( project ) <nl> - val minSdk : String ? = GroovyUtil . getMinSdk ( project ) <nl> + val targetSdk : String ? = Utils . getTargetSdk ( project ) <nl> + val minSdk : String ? = Utils . getMinSdk ( project ) <nl> <nl> if ( disableAnalytics ) { <nl> - val sync : Boolean = GroovyUtil . isSyncEnabled ( project ) <nl> + val sync : Boolean = Utils . isSyncEnabled ( project ) <nl> val analytics = RealmAnalytics ( packages as Set , containsKotlin , sync , targetSdk , minSdk ) <nl> analytics . execute ( ) <nl> } <nl> diff - - git a / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt b / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt <nl> index fc77a5c . . 7d8cd8c 100644 <nl> - - - a / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt <nl> + + + b / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt <nl> @ @ - 22 , 9 + 22 , 9 @ @ import com . android . build . api . transform . TransformInput <nl> import com . android . build . api . transform . TransformOutputProvider <nl> import com . google . common . io . Files <nl> import io . realm . transformer . BytecodeModifier <nl> - import io . realm . transformer . GroovyUtil <nl> import io . realm . transformer . ManagedClassPool <nl> import io . realm . transformer . logger <nl> + import io . realm . transformer . Utils <nl> import javassist . ClassPool <nl> import javassist . CtClass <nl> import org . gradle . api . Project <nl> @ @ - 147 , 7 + 147 , 7 @ @ abstract class BuildTemplate ( val project : Project , val outputProvider : Transform <nl> * / <nl> private fun addBootClassesToClassPool ( classPool : ClassPool ) { <nl> try { <nl> - GroovyUtil . getBootClasspath ( project ) . forEach { <nl> + Utils . getBootClasspath ( project ) . forEach { <nl> val path : String = it . absolutePath <nl> logger . debug ( " Add boot class $ path to class pool . " ) <nl> classPool . appendClassPath ( path ) <nl> diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index f18e16d . . a1599ab 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 3 , 7 + 3 , 7 @ @ project . ext . compileSdkVersion = 26 <nl> project . ext . buildToolsVersion = ' 27 . 0 . 2 ' <nl> <nl> buildscript { <nl> - ext . kotlin _ version = ' 1 . 2 . 10 ' <nl> + ext . kotlin _ version = ' 1 . 2 . 40 ' <nl> ext . dokka _ version = ' 0 . 9 . 16 ' <nl> repositories { <nl> mavenLocal ( )

TEST DIFF:
diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy 
 deleted file mode 100644 
 index 823fb4e . . 0000000 
 - - - a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy 
 + + + / dev / null 
 @ @ - 1 , 49 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2016 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . transformer 
 - 
 - import org . gradle . api . Project 
 - 
 - import javax . annotation . Nonnull 
 - import javax . annotation . Nullable ; 
 - 
 - / * * 
 - * Helper methods for functionality that is really hard to port to Java / Kotlin 
 - * / 
 - class GroovyUtil { 
 - 
 - @ Nullable 
 - static String getTargetSdk ( @ Nonnull Project project ) { 
 - return project ? . android ? . defaultConfig ? . targetSdkVersion ? . mApiLevel as String 
 - } 
 - 
 - @ Nullable 
 - static String getMinSdk ( @ Nonnull Project project ) { 
 - return project ? . android ? . defaultConfig ? . minSdkVersion ? . mApiLevel as String 
 - } 
 - 
 - @ Nonnull 
 - static boolean isSyncEnabled ( @ Nonnull Project project ) { 
 - return ( project . hasProperty ( " realm " ) ) ? project . realm . syncEnabled : false 
 - } 
 - 
 - @ Nonnull 
 - static Collection < File > getBootClasspath ( @ Nonnull Project project ) { 
 - def classpath = project . android . bootClasspath as Collection < File > 
 - return ( classpath ! = null ) ? classpath : Collections . emptyList ( ) 
 - } 
 - }

NEAREST DIFF:
diff - - git a / examples / kotlinExample / build . gradle b / examples / kotlinExample / build . gradle 
 index aa27cde . . 0f7148e 100644 
 - - - a / examples / kotlinExample / build . gradle 
 + + + b / examples / kotlinExample / build . gradle 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 buildscript { 
 - ext . kotlin _ version = ' 1 . 2 . 10 ' 
 + ext . kotlin _ version = ' 1 . 2 . 40 ' 
 repositories { 
 jcenter ( ) 
 mavenCentral ( ) 
 diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 index 6064b95 . . b566c10 100644 
 - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 @ @ - 41 , 7 + 41 , 6 @ @ class Realm implements Plugin < Project > { 
 } 
 
 def syncEnabledDefault = false 
 - def dependencyConfigurationName = getDependencyConfigurationName ( project ) 
 def usesAptPlugin = project . plugins . findPlugin ( ' com . neenbedankt . android - apt ' ) ! = null 
 def isKotlinProject = project . plugins . findPlugin ( ' kotlin - android ' ) ! = null 
 def useKotlinExtensionsDefault = isKotlinProject 
 @ @ - 49 , 8 + 48 , 8 @ @ class Realm implements Plugin < Project > { 
 / / TODO add a parameter in ' realm ' block if this should be specified by users 
 def preferAptOnKotlinProject = false 
 
 - 
 - project . extensions . create ( ' realm ' , RealmPluginExtension , project , syncEnabledDefault , useKotlinExtensionsDefault , dependencyConfigurationName ) 
 + def extension = project . extensions . create ( ' realm ' , RealmPluginExtension ) 
 + extension . kotlinExtensionsEnabled = useKotlinExtensionsDefault 
 
 if ( shouldApplyAndroidAptPlugin ( usesAptPlugin , isKotlinProject , 
 hasAnnotationProcessorConfiguration , preferAptOnKotlinProject ) ) { 
 @ @ - 59 , 6 + 58 , 7 @ @ class Realm implements Plugin < Project > { 
 } 
 
 project . android . registerTransform ( new RealmTransformer ( project ) ) 
 + def dependencyConfigurationName = getDependencyConfigurationName ( project ) 
 
 project . repositories . add ( project . getRepositories ( ) . jcenter ( ) ) 
 project . dependencies . add ( dependencyConfigurationName , " io . realm : realm - annotations : $ { Version . VERSION } " ) 
 @ @ - 73 , 6 + 73 , 10 @ @ class Realm implements Plugin < Project > { 
 project . dependencies . add ( " annotationProcessor " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) 
 project . dependencies . add ( " androidTestAnnotationProcessor " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) 
 } 
 + 
 + project . afterEvaluate { 
 + setDependencies ( project , dependencyConfigurationName , extension . syncEnabled , extension . kotlinExtensionsEnabled ) 
 + } 
 } 
 
 private static boolean isTransformAvailable ( ) { 
 @ @ - 114 , 4 + 118 , 30 @ @ class Realm implements Plugin < Project > { 
 / / for any Java Projects where user did not apply ' android - apt ' plugin manually . 
 return ! hasAnnotationProcessorConfiguration 
 } 
 + 
 + private static void setDependencies ( Project project , String dependencyConfigurationName , boolean syncEnabled , boolean kotlinExtensionsEnabled ) { 
 + / / remove libraries first 
 + 
 + def iterator = project . getConfigurations ( ) . getByName ( dependencyConfigurationName ) . getDependencies ( ) . iterator ( ) 
 + while ( iterator . hasNext ( ) ) { 
 + def item = iterator . next ( ) 
 + if ( item . group = = ' io . realm ' ) { 
 + if ( item . name . startsWith ( ' realm - android - library ' ) ) { 
 + iterator . remove ( ) 
 + } 
 + if ( item . name . startsWith ( ' realm - android - kotlin - extensions ' ) ) { 
 + iterator . remove ( ) 
 + } 
 + } 
 + } 
 + 
 + / / then add again 
 + def syncArtifactName = " realm - android - library $ { syncEnabled ? ' - object - server ' : ' ' } " 
 + project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { syncArtifactName } : $ { Version . VERSION } " ) 
 + 
 + if ( kotlinExtensionsEnabled ) { 
 + def kotlinExtArtifactName = " realm - android - kotlin - extensions $ { syncEnabled ? ' - object - server ' : ' ' } " 
 + project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { kotlinExtArtifactName } : $ { Version . VERSION } " ) 
 + } 
 + } 
 } 
 diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / RealmPluginExtension . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / RealmPluginExtension . groovy 
 deleted file mode 100644 
 index fc34341 . . 0000000 
 - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / RealmPluginExtension . groovy 
 + + + / dev / null 
 @ @ - 1 , 68 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2016 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . gradle 
 - 
 - import org . gradle . api . Project 
 - 
 - class RealmPluginExtension { 
 - private Project project 
 - def boolean syncEnabled 
 - def boolean kotlinExtensionsEnabled 
 - private String dependencyConfigurationName 
 - 
 - RealmPluginExtension ( Project project , boolean syncEnabledDefault , boolean useKotlinExtensionsDefault , String dependencyConfigurationName ) { 
 - this . project = project 
 - this . dependencyConfigurationName = dependencyConfigurationName 
 - setSyncEnabled ( syncEnabledDefault ) 
 - setKotlinExtensionsEnabled ( useKotlinExtensionsDefault ) 
 - } 
 - 
 - void setSyncEnabled ( value ) { 
 - this . syncEnabled = value 
 - setDependencies ( syncEnabled , kotlinExtensionsEnabled ) 
 - } 
 - 
 - void setKotlinExtensionsEnabled ( value ) { 
 - this . kotlinExtensionsEnabled = value 
 - setDependencies ( syncEnabled , kotlinExtensionsEnabled ) 
 - } 
 - 
 - void setDependencies ( boolean syncEnabled , boolean kotlinExtensionsEnabled ) { 
 - / / remove libraries first 
 - def iterator = project . getConfigurations ( ) . getByName ( dependencyConfigurationName ) . getDependencies ( ) . iterator ( ) 
 - while ( iterator . hasNext ( ) ) { 
 - def item = iterator . next ( ) 
 - if ( item . group = = ' io . realm ' ) { 
 - if ( item . name . startsWith ( ' realm - android - library ' ) ) { 
 - iterator . remove ( ) 
 - } 
 - if ( item . name . startsWith ( ' realm - android - kotlin - extensions ' ) ) { 
 - iterator . remove ( ) 
 - } 
 - } 
 - } 
 - 
 - / / then add again 
 - def syncArtifactName = " realm - android - library $ { syncEnabled ? ' - object - server ' : ' ' } " 
 - project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { syncArtifactName } : $ { Version . VERSION } " ) 
 - 
 - if ( kotlinExtensionsEnabled ) { 
 - def kotlinExtArtifactName = " realm - android - kotlin - extensions $ { syncEnabled ? ' - object - server ' : ' ' } " 
 - project . dependencies . add ( dependencyConfigurationName , " io . realm : $ { kotlinExtArtifactName } : $ { Version . VERSION } " ) 
 - } 
 - } 
 - } 
 diff - - git a / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy 
 index e07e0e6 . . 1c203b3 100644 
 - - - a / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy 
 + + + b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy 
 @ @ - 51 , 21 + 51 , 35 @ @ class PluginTest { 
 project . buildscript { 
 repositories { 
 mavenLocal ( ) 
 + google ( ) 
 jcenter ( ) 
 } 
 dependencies { 
 classpath ' com . android . tools . build : gradle : 3 . 1 . 0 - alpha03 ' 
 classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 - classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " 
 } 
 } 
 
 + def manifest = project . file ( " src / main / AndroidManifest . xml " ) 
 + manifest . parentFile . mkdirs ( ) 
 + manifest . text = ' < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " package = " com . realm . test " > < / manifest > ' 
 + 
 project . apply plugin : ' com . android . application ' 
 project . apply plugin : ' realm - android ' 
 
 + project . android { 
 + compileSdkVersion 27 
 + 
 + defaultConfig { 
 + minSdkVersion 16 
 + targetSdkVersion 27 
 + } 
 + } 
 + 
 + project . evaluate ( ) 
 + 
 assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - android - library ' , currentVersion ) ) 
 assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - annotations ' , currentVersion ) ) 
 - 
 assertTrue ( containsTransform ( project . android . transforms , RealmTransformer . class ) ) 
 } 
 
 @ @ - 79 , 7 + 93 , 6 @ @ class PluginTest { 
 dependencies { 
 classpath ' com . android . tools . build : gradle : 3 . 1 . 0 - alpha03 ' 
 classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 - classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " 
 } 
 } 
 
 diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle 
 index 9026350 . . c92b91f 100644 
 - - - a / realm - transformer / build . gradle 
 + + + b / realm - transformer / build . gradle 
 @ @ - 60 , 13 + 60 , 13 @ @ sourceSets { 
 } 
 
 dependencies { 
 - compile localGroovy ( ) 
 compile gradleApi ( ) 
 compile " io . realm : realm - annotations : $ { version } " 
 compileOnly ' com . android . tools . build : gradle : 3 . 1 . 1 ' 
 compile ' org . javassist : javassist : 3 . 21 . 0 - GA ' 
 compile " org . jetbrains . kotlin : kotlin - stdlib - jdk8 : $ { kotlin _ version } " 
 
 + testCompile localGroovy ( ) 
 testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) { 
 exclude module : ' groovy - all ' 
 } 
 diff - - git a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy b / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy 
 deleted file mode 100644 
 index 1fc1028 . . 0000000 
 - - - a / realm - transformer / src / main / groovy / io / realm / transformer / GroovyUtil . groovy 
 + + + / dev / null 
 @ @ - 1 , 50 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2016 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . transformer 
 - 
 - import kotlin . collections . EmptyList 
 - import org . gradle . api . Project 
 - 
 - import javax . annotation . Nonnull 
 - import javax . annotation . Nullable ; 
 - 
 - / * * 
 - * Helper methods for functionality that is really hard to port to Java / Kotlin 
 - * / 
 - class GroovyUtil { 
 - 
 - @ Nullable 
 - static String getTargetSdk ( @ Nonnull Project project ) { 
 - return project ? . android ? . defaultConfig ? . targetSdkVersion ? . mApiLevel as String 
 - } 
 - 
 - @ Nullable 
 - static String getMinSdk ( @ Nonnull Project project ) { 
 - return project ? . android ? . defaultConfig ? . minSdkVersion ? . mApiLevel as String 
 - } 
 - 
 - @ Nonnull 
 - static boolean isSyncEnabled ( @ Nonnull Project project ) { 
 - return project . realm ? . syncEnabled ! = null & & project . realm . syncEnabled 
 - } 
 - 
 - @ Nonnull 
 - static Collection < File > getBootClasspath ( @ Nonnull Project project ) { 
 - def classpath = project . android . bootClasspath as Collection < File > 
 - return ( classpath ! = null ) ? classpath : Collections . emptyList ( ) 
 - } 
 - } 
 diff - - git a / realm - transformer / src / main / java / io / realm / gradle / RealmPluginExtension . java b / realm - transformer / src / main / java / io / realm / gradle / RealmPluginExtension . java 
 new file mode 100644 
 index 0000000 . . 3ec0d8e 
 - - - / dev / null 
 + + + b / realm - transformer / src / main / java / io / realm / gradle / RealmPluginExtension . java 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + / * 
 + * Copyright 2018 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . gradle ; 
 + 
 + import org . gradle . api . tasks . Input ; 
 + 
 + public class RealmPluginExtension { 
 + 
 + @ Input public boolean syncEnabled = false ; 
 + @ Input public boolean kotlinExtensionsEnabled = false ; 
 + } 
 diff - - git a / realm - transformer / src / main / java / io / realm / transformer / Utils . java b / realm - transformer / src / main / java / io / realm / transformer / Utils . java 
 index a6647b9 . . 8d50ec7 100644 
 - - - a / realm - transformer / src / main / java / io / realm / transformer / Utils . java 
 + + + b / realm - transformer / src / main / java / io / realm / transformer / Utils . java 
 @ @ - 16 , 10 + 16 , 15 @ @ 
 
 package io . realm . transformer ; 
 
 - import javax . xml . bind . DatatypeConverter ; 
 + import com . android . build . gradle . BaseExtension ; 
 + import io . realm . gradle . RealmPluginExtension ; 
 + import java . io . File ; 
 import java . io . UnsupportedEncodingException ; 
 import java . security . MessageDigest ; 
 import java . security . NoSuchAlgorithmException ; 
 + import java . util . List ; 
 + import javax . xml . bind . DatatypeConverter ; 
 + import org . gradle . api . Project ; 
 
 public class Utils { 
 
 @ @ - 57 , 4 + 62 , 24 @ @ public class Utils { 
 
 return stringBuilder . toString ( ) ; 
 } 
 + 
 + public static String getTargetSdk ( Project project ) { 
 + return getAndroidExtension ( project ) . getDefaultConfig ( ) . getTargetSdkVersion ( ) . getApiString ( ) ; 
 + } 
 + 
 + public static String getMinSdk ( Project project ) { 
 + return getAndroidExtension ( project ) . getDefaultConfig ( ) . getMinSdkVersion ( ) . getApiString ( ) ; 
 + } 
 + 
 + public static boolean isSyncEnabled ( Project project ) { 
 + return ( ( RealmPluginExtension ) project . getExtensions ( ) . getByName ( " realm " ) ) . syncEnabled ; 
 + } 
 + 
 + public static List < File > getBootClasspath ( Project project ) { 
 + return getAndroidExtension ( project ) . getBootClasspath ( ) ; 
 + } 
 + 
 + private static BaseExtension getAndroidExtension ( Project project ) { 
 + return ( BaseExtension ) project . getExtensions ( ) . getByName ( " android " ) ; 
 + } 
 } 
 diff - - git a / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt b / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt 
 index 7fdd2db . . ffbd4d1 100644 
 - - - a / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt 
 + + + b / realm - transformer / src / main / kotlin / io / realm / transformer / RealmTransformer . kt 
 @ @ - 151 , 11 + 151 , 11 @ @ class RealmTransformer ( val project : Project ) : Transform ( ) { 
 it . packageName 
 } 
 
 - val targetSdk : String ? = GroovyUtil . getTargetSdk ( project ) 
 - val minSdk : String ? = GroovyUtil . getMinSdk ( project ) 
 + val targetSdk : String ? = Utils . getTargetSdk ( project ) 
 + val minSdk : String ? = Utils . getMinSdk ( project ) 
 
 if ( disableAnalytics ) { 
 - val sync : Boolean = GroovyUtil . isSyncEnabled ( project ) 
 + val sync : Boolean = Utils . isSyncEnabled ( project ) 
 val analytics = RealmAnalytics ( packages as Set , containsKotlin , sync , targetSdk , minSdk ) 
 analytics . execute ( ) 
 } 
 diff - - git a / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt b / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt 
 index fc77a5c . . 7d8cd8c 100644 
 - - - a / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt 
 + + + b / realm - transformer / src / main / kotlin / io / realm / transformer / build / BuildTemplate . kt 
 @ @ - 22 , 9 + 22 , 9 @ @ import com . android . build . api . transform . TransformInput 
 import com . android . build . api . transform . TransformOutputProvider 
 import com . google . common . io . Files 
 import io . realm . transformer . BytecodeModifier 
 - import io . realm . transformer . GroovyUtil 
 import io . realm . transformer . ManagedClassPool 
 import io . realm . transformer . logger 
 + import io . realm . transformer . Utils 
 import javassist . ClassPool 
 import javassist . CtClass 
 import org . gradle . api . Project 
 @ @ - 147 , 7 + 147 , 7 @ @ abstract class BuildTemplate ( val project : Project , val outputProvider : Transform 
 * / 
 private fun addBootClassesToClassPool ( classPool : ClassPool ) { 
 try { 
 - GroovyUtil . getBootClasspath ( project ) . forEach { 
 + Utils . getBootClasspath ( project ) . forEach { 
 val path : String = it . absolutePath 
 logger . debug ( " Add boot class $ path to class pool . " ) 
 classPool . appendClassPath ( path ) 
 diff - - git a / realm / build . gradle b / realm / build . gradle 
 index f18e16d . . a1599ab 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 3 , 7 + 3 , 7 @ @ project . ext . compileSdkVersion = 26 
 project . ext . buildToolsVersion = ' 27 . 0 . 2 ' 
 
 buildscript { 
 - ext . kotlin _ version = ' 1 . 2 . 10 ' 
 + ext . kotlin _ version = ' 1 . 2 . 40 ' 
 ext . dokka _ version = ' 0 . 9 . 16 ' 
 repositories { 
 mavenLocal ( )
