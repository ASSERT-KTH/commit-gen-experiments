BLEU SCORE: 0.03772691894380681

TEST MSG: Clean up SharedRealm source
GENERATED MSG: Hack with snapshot to support stable iterator

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> index f542b34 . . 09af1fe 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> @ @ - 164 , 7 + 164 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeInit ( JNIEnv * env <nl> <nl> JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( <nl> JNIEnv * env , jclass , jstring realm _ path , jbyteArray key , jbyte schema _ mode , jboolean in _ memory , jboolean cache , <nl> - jlong / * schema _ version * / , jboolean disable _ format _ upgrade , jboolean auto _ change _ notification , <nl> + jlong / * schema _ version * / , jboolean enable _ format _ upgrade , jboolean auto _ change _ notification , <nl> REALM _ UNUSED jstring sync _ server _ url , REALM _ UNUSED jstring sync _ server _ auth _ url , <nl> REALM _ UNUSED jstring sync _ user _ identity , REALM _ UNUSED jstring sync _ refresh _ token ) <nl> { <nl> @ @ - 180 , 7 + 180 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( <nl> config . schema _ mode = static _ cast < SchemaMode > ( schema _ mode ) ; <nl> config . in _ memory = in _ memory ; <nl> config . cache = cache ; <nl> - config . disable _ format _ upgrade = disable _ format _ upgrade ; <nl> + config . disable _ format _ upgrade = ! enable _ format _ upgrade ; <nl> config . automatic _ change _ notifications = auto _ change _ notification ; <nl> if ( sync _ server _ url ) { <nl> return reinterpret _ cast < jlong > ( new JniConfigWrapper ( env , config , sync _ server _ url , sync _ server _ auth _ url , <nl> @ @ - 223 , 7 + 223 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCloseSharedRealm <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> / / Close the SharedRealm only . Let the finalizer daemon thread free the SharedRealm <nl> if ( ! shared _ realm - > is _ closed ( ) ) { <nl> shared _ realm - > close ( ) ; <nl> @ @ - 235 , 7 + 235 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeBeginTransaction <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> shared _ realm - > begin _ transaction ( ) ; <nl> } <nl> @ @ - 247 , 7 + 247 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCommitTransactio <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> shared _ realm - > commit _ transaction ( ) ; <nl> / / Realm could be closed in the RealmNotifier . didChange ( ) . <nl> @ @ - 265 , 7 + 265 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCancelTransactio <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> shared _ realm - > cancel _ transaction ( ) ; <nl> } <nl> @ @ - 278 , 7 + 278 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsInTransact <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> return static _ cast < jboolean > ( shared _ realm - > is _ in _ transaction ( ) ) ; <nl> } <nl> <nl> @ @ - 287 , 7 + 287 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeReadGroup ( JNIEn <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> return reinterpret _ cast < jlong > ( & shared _ realm - > read _ group ( ) ) ; <nl> } <nl> @ @ - 301 , 7 + 301 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetVersion ( JNIE <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> return static _ cast < jlong > ( ObjectStore : : get _ schema _ version ( shared _ realm - > read _ group ( ) ) ) ; <nl> } <nl> @ @ - 314 , 7 + 314 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeSetVersion ( JNIEn <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> if ( ! shared _ realm - > is _ in _ transaction ( ) ) { <nl> std : : ostringstream ss ; <nl> @ @ - 333 , 7 + 333 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsEmpty ( JNIE <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> return static _ cast < jboolean > ( ObjectStore : : is _ empty ( shared _ realm - > read _ group ( ) ) ) ; <nl> } <nl> @ @ - 345 , 7 + 345 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRefresh ( JNIEnv * <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> shared _ realm - > refresh ( ) ; <nl> } <nl> @ @ - 357 , 7 + 357 , 7 @ @ JNIEXPORT jlongArray JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetVersion <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> using rf = realm : : _ impl : : RealmFriend ; <nl> SharedGroup : : VersionID version _ id = rf : : get _ shared _ group ( * shared _ realm ) . get _ version _ of _ current _ transaction ( ) ; <nl> @ @ - 384 , 7 + 384 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsClosed ( JNI <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> return static _ cast < jboolean > ( shared _ realm - > is _ closed ( ) ) ; <nl> } <nl> <nl> @ @ - 396 , 7 + 396 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetTable ( JNIEnv <nl> <nl> try { <nl> JStringAccessor name ( env , table _ name ) ; / / throws <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> if ( ! shared _ realm - > read _ group ( ) . has _ table ( name ) & & ! shared _ realm - > is _ in _ transaction ( ) ) { <nl> std : : ostringstream ss ; <nl> ss < < " Class " < < name < < " doesn ' t exist and the shared Realm is not in transaction . " ; <nl> @ @ - 417 , 7 + 417 , 7 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetTableName ( <nl> <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> return to _ jstring ( env , shared _ realm - > read _ group ( ) . get _ table _ name ( static _ cast < size _ t > ( index ) ) ) ; <nl> } <nl> @ @ - 431 , 7 + 431 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeHasTable ( JNI <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> JStringAccessor name ( env , table _ name ) ; <nl> return static _ cast < jboolean > ( shared _ realm - > read _ group ( ) . has _ table ( name ) ) ; <nl> @ @ - 447 , 7 + 447 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRenameTable ( JNIE <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> JStringAccessor old _ name ( env , old _ table _ name ) ; <nl> if ( ! shared _ realm - > is _ in _ transaction ( ) ) { <nl> @ @ - 468 , 7 + 468 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRemoveTable ( JNIE <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> JStringAccessor name ( env , table _ name ) ; <nl> if ( ! shared _ realm - > is _ in _ transaction ( ) ) { <nl> @ @ - 486 , 7 + 486 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeSize ( JNIEnv * en <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> return static _ cast < jlong > ( shared _ realm - > read _ group ( ) . size ( ) ) ; <nl> } <nl> @ @ - 500 , 7 + 500 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeWriteCopy ( JNIEnv <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> JStringAccessor path _ str ( env , path ) ; <nl> JniByteArray key _ buffer ( env , key ) ; <nl> @ @ - 514 , 7 + 514 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeWaitForChang <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> using rf = realm : : _ impl : : RealmFriend ; <nl> return static _ cast < jboolean > ( rf : : get _ shared _ group ( * shared _ realm ) . wait _ for _ change ( ) ) ; <nl> @ @ - 529 , 7 + 529 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeStopWaitForChang <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> using rf = realm : : _ impl : : RealmFriend ; <nl> rf : : get _ shared _ group ( * shared _ realm ) . wait _ for _ change _ release ( ) ; <nl> @ @ - 542 , 7 + 542 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCompact ( JNIE <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; <nl> <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> try { <nl> return static _ cast < jboolean > ( shared _ realm - > compact ( ) ) ; <nl> } <nl> @ @ - 551 , 28 + 551 , 13 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCompact ( JNIE <nl> return JNI _ FALSE ; <nl> } <nl> <nl> - JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetSnapshotVersion ( JNIEnv * env , jclass , <nl> - jlong shared _ realm _ ptr ) <nl> - { <nl> - TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> - <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> - try { <nl> - using rf = realm : : _ impl : : RealmFriend ; <nl> - auto & shared _ group = rf : : get _ shared _ group ( * shared _ realm ) ; <nl> - return LangBindHelper : : get _ version _ of _ latest _ snapshot ( shared _ group ) ; <nl> - } <nl> - CATCH _ STD ( ) <nl> - return 0 ; <nl> - } <nl> - <nl> JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNIEnv * env , jclass , <nl> jlong shared _ realm _ ptr , jlong schema _ ptr , <nl> jlong version ) <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> try { <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> auto * schema = reinterpret _ cast < Schema * > ( schema _ ptr ) ; <nl> shared _ realm - > update _ schema ( * schema , static _ cast < uint64 _ t > ( version ) , nullptr , true ) ; <nl> } <nl> @ @ - 586 , 7 + 571 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRequiresMigr <nl> <nl> TR _ ENTER ( ) <nl> try { <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( nativePtr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( nativePtr ) ) ; <nl> auto * schema = reinterpret _ cast < Schema * > ( nativeSchemaPtr ) ; <nl> const std : : vector < SchemaChange > & change _ list = shared _ realm - > schema ( ) . compare ( * schema ) ; <nl> return static _ cast < jboolean > ( ! change _ list . empty ( ) ) ; <nl> @ @ - 613 , 7 + 598 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeSetAutoRefresh ( J <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> try { <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> shared _ realm - > set _ auto _ refresh ( to _ bool ( enabled ) ) ; <nl> } <nl> CATCH _ STD ( ) <nl> @ @ - 624 , 7 + 609 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsAutoRefres <nl> { <nl> TR _ ENTER _ PTR ( shared _ realm _ ptr ) <nl> try { <nl> - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; <nl> return to _ jbool ( shared _ realm - > auto _ refresh ( ) ) ; <nl> } <nl> CATCH _ STD ( ) <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> index 21b041b . . 70acf96 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> @ @ - 128 , 6 + 128 , 7 @ @ public final class SharedRealm implements Closeable , NativeObject { <nl> <nl> @ Override <nl> public int compareTo ( @ SuppressWarnings ( " NullableProblems " ) VersionID another ) { <nl> + / / noinspection ConstantConditions <nl> if ( another = = null ) { <nl> throw new IllegalArgumentException ( " Version cannot be compared to a null value . " ) ; <nl> } <nl> @ @ - 214 , 17 + 215 , 18 @ @ public final class SharedRealm implements Closeable , NativeObject { <nl> String syncRealmUrl = syncUserConf [ 1 ] ; <nl> String syncRealmAuthUrl = syncUserConf [ 2 ] ; <nl> String syncRefreshToken = syncUserConf [ 3 ] ; <nl> - boolean enable _ caching = false ; / / Handled in Java currently <nl> - boolean disableFormatUpgrade = false ; / / TODO Double negatives : / <nl> + <nl> + final boolean enableCaching = false ; / / Handled in Java currently <nl> + final boolean enableFormatUpgrade = true ; <nl> <nl> long nativeConfigPtr = nativeCreateConfig ( <nl> config . getPath ( ) , <nl> config . getEncryptionKey ( ) , <nl> syncRealmUrl ! = null ? SchemaMode . SCHEMA _ MODE _ ADDITIVE . getNativeValue ( ) : SchemaMode . SCHEMA _ MODE _ MANUAL . getNativeValue ( ) , <nl> config . getDurability ( ) = = Durability . MEM _ ONLY , <nl> - enable _ caching , <nl> + enableCaching , <nl> config . getSchemaVersion ( ) , <nl> - disableFormatUpgrade , <nl> + enableFormatUpgrade , <nl> autoChangeNotifications , <nl> syncRealmUrl , <nl> syncRealmAuthUrl , <nl> @ @ - 314 , 10 + 316 , 6 @ @ public final class SharedRealm implements Closeable , NativeObject { <nl> return new SharedRealm . VersionID ( versionId [ 0 ] , versionId [ 1 ] ) ; <nl> } <nl> <nl> - public long getLastSnapshotVersion ( ) { <nl> - return nativeGetSnapshotVersion ( nativePtr ) ; <nl> - } <nl> - <nl> public boolean isClosed ( ) { <nl> return nativeIsClosed ( nativePtr ) ; <nl> } <nl> @ @ - 463 , 7 + 461 , 9 @ @ public final class SharedRealm implements Closeable , NativeObject { <nl> <nl> / / Keep last session as an ' object ' to avoid any reference to sync code <nl> private static native long nativeCreateConfig ( String realmPath , byte [ ] key , byte schemaMode , boolean inMemory , <nl> - boolean cache , long schemaVersion , boolean disableFormatUpgrade , <nl> + boolean cache , <nl> + long schemaVersion , <nl> + boolean enabledFormatUpgrade , <nl> boolean autoChangeNotification , <nl> String syncServerURL , <nl> String syncServerAuthURL , <nl> @ @ - 488 , 8 + 488 , 6 @ @ public final class SharedRealm implements Closeable , NativeObject { <nl> <nl> private static native long nativeGetVersion ( long nativeSharedRealmPtr ) ; <nl> <nl> - private static native long nativeGetSnapshotVersion ( long nativeSharedRealmPtr ) ; <nl> - <nl> private static native void nativeSetVersion ( long nativeSharedRealmPtr , long version ) ; <nl> <nl> private static native long nativeReadGroup ( long nativeSharedRealmPtr ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> index 815aabc . . 648e304 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import io . realm . RealmChangeListener ; <nl> import io . realm . RealmConfiguration ; <nl> import io . realm . RealmFieldType ; <nl> import io . realm . TestHelper ; <nl> + import io . realm . internal . android . AndroidRealmNotifier ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> @ @ - 56 , 7 + 57 , 7 @ @ public class CollectionTests { <nl> @ Before <nl> public void setUp ( ) { <nl> config = configFactory . createConfiguration ( ) ; <nl> - sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + sharedRealm = getSharedRealm ( ) ; <nl> populateData ( ) ; <nl> } <nl> <nl> @ @ - 65 , 6 + 66 , 10 @ @ public class CollectionTests { <nl> sharedRealm . close ( ) ; <nl> } <nl> <nl> + private SharedRealm getSharedRealm ( ) { <nl> + return SharedRealm . getInstance ( config , new AndroidRealmNotifier ( ) , null ) ; <nl> + } <nl> + <nl> private void populateData ( ) { <nl> sharedRealm . beginTransaction ( ) ; <nl> table = sharedRealm . getTable ( " test _ table " ) ; <nl> @ @ - 101 , 7 + 106 , 7 @ @ public class CollectionTests { <nl> new Thread ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> - SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> addRow ( sharedRealm ) ; <nl> sharedRealm . close ( ) ; <nl> latch . countDown ( ) ; <nl> @ @ - 274 , 7 + 279 , 7 @ @ public class CollectionTests { <nl> @ Test <nl> @ RunTestInLooperThread <nl> public void addListener _ queryNotReturned ( ) { <nl> - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + final SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> Table table = sharedRealm . getTable ( " test _ table " ) ; <nl> <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> @ @ - 295 , 7 + 300 , 7 @ @ public class CollectionTests { <nl> @ Test <nl> @ RunTestInLooperThread <nl> public void addListener _ queryReturned ( ) { <nl> - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + final SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> Table table = sharedRealm . getTable ( " test _ table " ) ; <nl> <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> @ @ - 319 , 7 + 324 , 7 @ @ public class CollectionTests { <nl> @ Test <nl> @ RunTestInLooperThread <nl> public void addListener _ queryNotReturnedLocalAndRemoteCommit ( ) { <nl> - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + final SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> Table table = sharedRealm . getTable ( " test _ table " ) ; <nl> <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> @ @ - 342 , 7 + 347 , 7 @ @ public class CollectionTests { <nl> @ Test <nl> @ RunTestInLooperThread <nl> public void addListener _ queryNotReturnedLocalCommitOnly ( ) { <nl> - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + final SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> Table table = sharedRealm . getTable ( " test _ table " ) ; <nl> <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> @ @ - 364 , 7 + 369 , 7 @ @ public class CollectionTests { <nl> @ Test <nl> @ RunTestInLooperThread <nl> public void addListener _ queryReturnedLocalCommitOnly ( ) { <nl> - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; <nl> + final SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> Table table = sharedRealm . getTable ( " test _ table " ) ; <nl> <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> @ @ - 383 , 11 + 388 , 35 @ @ public class CollectionTests { <nl> } <nl> <nl> @ Test <nl> - public void size _ doesNotChangeAfterLocalCommit ( ) { <nl> + public void switchSnapshot _ nonLooperThread ( ) { <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> assertEquals ( collection . size ( ) , 4 ) ; <nl> addRow ( sharedRealm ) ; <nl> + / / The results is backed by snapshot now . <nl> assertEquals ( collection . size ( ) , 4 ) ; <nl> sharedRealm . refresh ( ) ; <nl> + / / The results is switched back to the original Results . <nl> + assertEquals ( collection . size ( ) , 5 ) ; <nl> + } <nl> + <nl> + @ Test <nl> + @ RunTestInLooperThread <nl> + public void switchSnapshot _ looperThread ( ) { <nl> + final SharedRealm sharedRealm = getSharedRealm ( ) ; <nl> + final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> + looperThread . keepStrongReference . add ( collection ) ; <nl> + assertEquals ( collection . size ( ) , 4 ) ; <nl> + looperThread . postRunnable ( new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + / / The results is switched back to the original Results . <nl> + assertEquals ( collection . size ( ) , 5 ) ; <nl> + sharedRealm . close ( ) ; <nl> + looperThread . testComplete ( ) ; <nl> + } <nl> + } ) ; <nl> + addRow ( sharedRealm ) ; <nl> + / / The results is backed by snapshot now . <nl> + assertEquals ( collection . size ( ) , 4 ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp <nl> index 0c82e4b . . 6203d61 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> <nl> # include " util . hpp " <nl> # include " jni _ util / method . hpp " <nl> + # include " jni _ util / log . hpp " <nl> <nl> using namespace realm ; <nl> using namespace realm : : jni _ util ; <nl> @ @ - 32 , 7 + 33 , 6 @ @ using namespace realm : : jni _ util ; <nl> / / Wrap all three together , so when the Java Collection object gets GCed , all three of them will be invalidated . <nl> struct ResultsWrapper { <nl> jobject m _ collection _ weak _ ref ; <nl> - Results m _ results ; <nl> NotificationToken m _ notification _ token ; <nl> <nl> ResultsWrapper ( Results & & results ) <nl> @ @ - 52 , 6 + 52 , 36 @ @ struct ResultsWrapper { <nl> env - > DeleteWeakGlobalRef ( m _ collection _ weak _ ref ) ; <nl> } <nl> } <nl> + <nl> + inline Results & get _ original _ results ( ) <nl> + { <nl> + return m _ results ; <nl> + } <nl> + <nl> + inline Results & get _ results ( ) <nl> + { <nl> + if ( m _ snapshot . get _ mode ( ) = = Results : : Mode : : Empty ) { <nl> + Log : : e ( " Using origin . " ) ; <nl> + return m _ results ; <nl> + } else { <nl> + Log : : e ( " Using snapshot . " ) ; <nl> + return m _ snapshot ; <nl> + } <nl> + } <nl> + <nl> + inline void switch _ to _ snapshot ( ) <nl> + { <nl> + m _ snapshot = m _ results . snapshot ( ) ; <nl> + } <nl> + <nl> + inline void switch _ to _ origin ( ) <nl> + { <nl> + m _ snapshot = Results ( ) ; <nl> + } <nl> + <nl> + private : <nl> + Results m _ results ; <nl> + Results m _ snapshot ; <nl> } ; <nl> <nl> static void finalize _ results ( jlong ptr ) ; <nl> @ @ - 80 , 6 + 110 , 9 @ @ Java _ io _ realm _ internal _ Collection _ nativeCreateResults ( JNIEnv * env , jclass , jlong <nl> sort _ desc _ ptr ? * sort _ desc _ ptr : SortDescriptor ( ) , <nl> distinct _ desc _ ptr ? * distinct _ desc _ ptr : SortDescriptor ( ) ) ; <nl> auto wrapper = new ResultsWrapper ( std : : move ( results ) ) ; <nl> + if ( shared _ realm - > is _ in _ transaction ( ) ) { <nl> + wrapper - > switch _ to _ snapshot ( ) ; <nl> + } <nl> <nl> return reinterpret _ cast < jlong > ( wrapper ) ; <nl> } CATCH _ STD ( ) <nl> @ @ - 92 , 7 + 125 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeCreateSnapshot ( JNIEnv * env , jclass , jlon <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> - auto snapshot = wrapper - > m _ results . snapshot ( ) ; <nl> + auto snapshot = wrapper - > get _ original _ results ( ) ; <nl> return reinterpret _ cast < jlong > ( new Results ( snapshot ) ) ; <nl> } CATCH _ STD ( ) <nl> return reinterpret _ cast < jlong > ( nullptr ) ; <nl> @ @ - 105 , 7 + 138 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeContains ( JNIEnv * env , jclass , jlong nati <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> auto row = reinterpret _ cast < Row * > ( native _ row _ ptr ) ; <nl> - size _ t index = wrapper - > m _ results . index _ of ( * row ) ; <nl> + size _ t index = wrapper - > get _ results ( ) . index _ of ( * row ) ; <nl> return to _ jbool ( index ! = not _ found ) ; <nl> } CATCH _ STD ( ) ; <nl> return JNI _ FALSE ; <nl> @ @ - 117 , 7 + 150 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeGetRow ( JNIEnv * env , jclass , jlong native <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> - auto row = wrapper - > m _ results . get ( static _ cast < size _ t > ( index ) ) ; <nl> + auto row = wrapper - > get _ results ( ) . get ( static _ cast < size _ t > ( index ) ) ; <nl> return reinterpret _ cast < jlong > ( new Row ( std : : move ( row ) ) ) ; <nl> } CATCH _ STD ( ) <nl> return reinterpret _ cast < jlong > ( nullptr ) ; <nl> @ @ - 129 , 7 + 162 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeFirstRow ( JNIEnv * env , jclass , jlong nati <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> - auto optional _ row = wrapper - > m _ results . first ( ) ; <nl> + auto optional _ row = wrapper - > get _ results ( ) . first ( ) ; <nl> if ( optional _ row ) { <nl> return reinterpret _ cast < jlong > ( new Row ( std : : move ( optional _ row . value ( ) ) ) ) ; <nl> } <nl> @ @ - 144 , 7 + 177 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeLastRow ( JNIEnv * env , jclass , jlong nativ <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> - auto optional _ row = wrapper - > m _ results . last ( ) ; <nl> + auto optional _ row = wrapper - > get _ results ( ) . last ( ) ; <nl> if ( optional _ row ) { <nl> return reinterpret _ cast < jlong > ( new Row ( std : : move ( optional _ row . value ( ) ) ) ) ; <nl> } <nl> @ @ - 158 , 7 + 191 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeClear ( JNIEnv * env , jclass , jlong native _ <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> - wrapper - > m _ results . clear ( ) ; <nl> + wrapper - > get _ results ( ) . clear ( ) ; <nl> } CATCH _ STD ( ) <nl> } <nl> <nl> @ @ - 168 , 7 + 201 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeSize ( JNIEnv * env , jclass , jlong native _ p <nl> TR _ ENTER _ PTR ( native _ ptr ) <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> - return static _ cast < jlong > ( wrapper - > m _ results . size ( ) ) ; <nl> + return static _ cast < jlong > ( wrapper - > get _ results ( ) . size ( ) ) ; <nl> } CATCH _ STD ( ) <nl> return 0 ; <nl> } <nl> @ @ - 185 , 16 + 218 , 16 @ @ Java _ io _ realm _ internal _ Collection _ nativeAggregate ( JNIEnv * env , jclass , jlong nat <nl> Optional < Mixed > value ; <nl> switch ( agg _ func ) { <nl> case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ MINIMUM : <nl> - value = wrapper - > m _ results . min ( index ) ; <nl> + value = wrapper - > get _ results ( ) . min ( index ) ; <nl> break ; <nl> case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ MAXIMUM : <nl> - value = wrapper - > m _ results . max ( index ) ; <nl> + value = wrapper - > get _ results ( ) . max ( index ) ; <nl> break ; <nl> case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ AVERAGE : <nl> - value = wrapper - > m _ results . average ( index ) ; <nl> + value = wrapper - > get _ results ( ) . average ( index ) ; <nl> break ; <nl> case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ SUM : <nl> - value = wrapper - > m _ results . sum ( index ) ; <nl> + value = wrapper - > get _ results ( ) . sum ( index ) ; <nl> break ; <nl> default : <nl> REALM _ UNREACHABLE ( ) ; <nl> @ @ - 228 , 7 + 261 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeSort ( JNIEnv * env , jclass , jlong native _ p <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> auto sort _ descriptor = * reinterpret _ cast < SortDescriptor * > ( sort _ desc _ native _ ptr ) ; <nl> - auto sorted _ result = wrapper - > m _ results . sort ( std : : move ( sort _ descriptor ) ) ; <nl> + auto sorted _ result = wrapper - > get _ results ( ) . sort ( std : : move ( sort _ descriptor ) ) ; <nl> return reinterpret _ cast < jlong > ( new ResultsWrapper ( std : : move ( sorted _ result ) ) ) ; <nl> } CATCH _ STD ( ) <nl> return reinterpret _ cast < jlong > ( nullptr ) ; <nl> @ @ - 257 , 7 + 290 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeStartListening ( JNIEnv * env , jobject inst <nl> env - > CallVoidMethod ( wrapper - > m _ collection _ weak _ ref , notify _ change _ listeners ) ; <nl> } ; <nl> <nl> - wrapper - > m _ notification _ token = wrapper - > m _ results . add _ notification _ callback ( cb ) ; <nl> + wrapper - > m _ notification _ token = wrapper - > get _ original _ results ( ) . add _ notification _ callback ( cb ) ; <nl> } CATCH _ STD ( ) <nl> } <nl> <nl> @ @ - 286 , 7 + 319 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeWhere ( JNIEnv * env , jclass , jlong native _ <nl> try { <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> <nl> - Query * query = new Query ( wrapper - > m _ results . get _ query ( ) ) ; <nl> + Query * query = new Query ( wrapper - > get _ original _ results ( ) . get _ query ( ) ) ; <nl> return reinterpret _ cast < jlong > ( query ) ; <nl> } CATCH _ STD ( ) <nl> return 0 ; <nl> @ @ - 300 , 7 + 333 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeIndexOf ( JNIEnv * env , jclass , jlong nativ <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> auto row = reinterpret _ cast < Row * > ( row _ native _ ptr ) ; <nl> <nl> - return static _ cast < jlong > ( wrapper - > m _ results . index _ of ( * row ) ) ; <nl> + return static _ cast < jlong > ( wrapper - > get _ results ( ) . index _ of ( * row ) ) ; <nl> } CATCH _ STD ( ) <nl> return npos ; <nl> } <nl> @ @ - 314 , 8 + 347 , 28 @ @ Java _ io _ realm _ internal _ Collection _ nativeIndexOfBySourceRowIndex ( JNIEnv * env , jcl <nl> auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> auto index = static _ cast < size _ t > ( source _ row _ index ) ; <nl> <nl> - return static _ cast < jlong > ( wrapper - > m _ results . index _ of ( index ) ) ; <nl> + return static _ cast < jlong > ( wrapper - > get _ results ( ) . index _ of ( index ) ) ; <nl> } CATCH _ STD ( ) <nl> return npos ; <nl> <nl> } <nl> + <nl> + JNIEXPORT void JNICALL <nl> + Java _ io _ realm _ internal _ Collection _ nativeEnableSnapshot ( JNIEnv * env , jclass , jlong native _ ptr ) <nl> + { <nl> + TR _ ENTER _ PTR ( native _ ptr ) <nl> + try { <nl> + auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> + wrapper - > switch _ to _ snapshot ( ) ; <nl> + } CATCH _ STD ( ) <nl> + } <nl> + <nl> + JNIEXPORT void JNICALL <nl> + Java _ io _ realm _ internal _ Collection _ nativeDisableSnapshot ( JNIEnv * env , jclass , jlong native _ ptr ) <nl> + { <nl> + TR _ ENTER _ PTR ( native _ ptr ) <nl> + try { <nl> + auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; <nl> + wrapper - > switch _ to _ origin ( ) ; <nl> + } CATCH _ STD ( ) <nl> + } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index a4b714c . . bd95936 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import io . realm . annotations . RealmClass ; <nl> import io . realm . internal . InvalidRow ; <nl> import io . realm . internal . RealmObjectProxy ; <nl> import io . realm . internal . Row ; <nl> + import io . realm . internal . SharedRealm ; <nl> import rx . Observable ; <nl> <nl> / * * <nl> @ @ - 270 , 7 + 271 , 7 @ @ public abstract class RealmObject implements RealmModel { <nl> RealmObjectProxy proxy = ( RealmObjectProxy ) object ; <nl> BaseRealm realm = proxy . realmGet $ proxyState ( ) . getRealm $ realm ( ) ; <nl> realm . checkIfValid ( ) ; <nl> - realm . sharedRealm . getCapabilities ( ) . checkCanDeliverNotification ( " Listener cannot be added . " ) ; <nl> + SharedRealm . getCapabilities ( ) . checkCanDeliverNotification ( " Listener cannot be added . " ) ; <nl> / / noinspection unchecked <nl> proxy . realmGet $ proxyState ( ) . addChangeListener ( listener ) ; <nl> } else { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index 70e4b5d . . 3098167 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 88 , 6 + 88 , 7 @ @ public final class Collection implements NativeObject { <nl> this . context = sharedRealm . context ; <nl> this . query = query ; <nl> this . context . addReference ( this ) ; <nl> + sharedRealm . addCollection ( this ) ; <nl> } <nl> <nl> public Collection ( SharedRealm sharedRealm , TableQuery query , <nl> @ @ - 107 , 6 + 108 , 7 @ @ public final class Collection implements NativeObject { <nl> this . nativePtr = nativePtr ; <nl> <nl> this . context . addReference ( this ) ; <nl> + sharedRealm . addCollection ( this ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 207 , 6 + 209 , 14 @ @ public final class Collection implements NativeObject { <nl> } <nl> } <nl> <nl> + void enableSnapshot ( ) { <nl> + nativeEnableSnapshot ( nativePtr ) ; <nl> + } <nl> + <nl> + void disableSnapshot ( ) { <nl> + nativeDisableSnapshot ( nativePtr ) ; <nl> + } <nl> + <nl> private static native long nativeGetFinalizerPtr ( ) ; <nl> private static native long nativeCreateResults ( long sharedRealmNativePtr , long queryNativePtr , <nl> long sortDescNativePtr , long distinctDescNativePtr ) ; <nl> @ @ - 226 , 4 + 236 , 6 @ @ public final class Collection implements NativeObject { <nl> private static native long nativeWhere ( long nativePtr ) ; <nl> private static native long nativeIndexOf ( long nativePtr , long rowNativePtr ) ; <nl> private static native long nativeIndexOfBySourceRowIndex ( long nativePtr , long sourceRowIndex ) ; <nl> + private static native void nativeEnableSnapshot ( long nativePtr ) ; <nl> + private static native void nativeDisableSnapshot ( long nativePtr ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> index f6b9cfd . . 4db2c2e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import io . realm . RealmChangeListener ; <nl> * other thread / process changes the Realm file . <nl> * / <nl> @ Keep <nl> - public class RealmNotifier implements Closeable { <nl> + public abstract class RealmNotifier implements Closeable { <nl> <nl> private static class RealmObserverPair < T > extends ObserverPair < T , RealmChangeListener < T > > { <nl> public RealmObserverPair ( T observer , RealmChangeListener < T > listener ) { <nl> @ @ - 95 , 4 + 95 , 6 @ @ public class RealmNotifier implements Closeable { <nl> public void removeAllChangeListeners ( ) { <nl> realmObserverPairs . clear ( ) ; <nl> } <nl> + <nl> + public abstract void postAtFrontOfQueue ( Runnable runnable ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> index 22c91bd . . 389076c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> @ @ - 18 , 11 + 18 , 13 @ @ package io . realm . internal ; <nl> <nl> import java . io . Closeable ; <nl> import java . io . File ; <nl> + import java . lang . ref . WeakReference ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> <nl> import io . realm . RealmConfiguration ; <nl> import io . realm . RealmSchema ; <nl> import io . realm . internal . android . AndroidCapabilities ; <nl> - import io . realm . internal . async . BadVersionException ; <nl> <nl> public final class SharedRealm implements Closeable { <nl> <nl> @ @ - 107 , 6 + 109 , 7 @ @ public final class SharedRealm implements Closeable { <nl> public final RealmNotifier realmNotifier ; <nl> public final RowNotifier rowNotifier ; <nl> public final ObjectServerFacade objectServerFacade ; <nl> + public final List < WeakReference < Collection > > collections = new ArrayList < WeakReference < Collection > > ( ) ; <nl> <nl> public static class VersionID implements Comparable < VersionID > { <nl> public final long version ; <nl> @ @ - 227 , 14 + 230 , 24 @ @ public final class SharedRealm implements Closeable { <nl> public void beginTransaction ( ) { <nl> nativeBeginTransaction ( nativePtr ) ; <nl> invokeSchemaChangeListenerIfSchemaChanged ( ) ; <nl> + enableCollectionSnapshot ( ) ; <nl> } <nl> <nl> public void commitTransaction ( ) { <nl> nativeCommitTransaction ( nativePtr ) ; <nl> + if ( realmNotifier ! = null & & ! collections . isEmpty ( ) ) { <nl> + realmNotifier . postAtFrontOfQueue ( new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + disableCollectionSnapshot ( ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> } <nl> <nl> public void cancelTransaction ( ) { <nl> nativeCancelTransaction ( nativePtr ) ; <nl> + disableCollectionSnapshot ( ) ; <nl> } <nl> <nl> public boolean isInTransaction ( ) { <nl> @ @ - 289 , 6 + 302 , 7 @ @ public final class SharedRealm implements Closeable { <nl> public void refresh ( ) { <nl> nativeRefresh ( nativePtr ) ; <nl> invokeSchemaChangeListenerIfSchemaChanged ( ) ; <nl> + disableCollectionSnapshot ( ) ; <nl> } <nl> <nl> public SharedRealm . VersionID getVersionID ( ) { <nl> @ @ - 336 , 7 + 350 , 7 @ @ public final class SharedRealm implements Closeable { <nl> return nativeIsAutoRefresh ( nativePtr ) ; <nl> } <nl> <nl> - public Capabilities getCapabilities ( ) { <nl> + public static Capabilities getCapabilities ( ) { <nl> return capabilities ; <nl> } <nl> <nl> @ @ - 380 , 6 + 394 , 33 @ @ public final class SharedRealm implements Closeable { <nl> } <nl> } <nl> <nl> + / / Should only be called by Collection ' s constructor <nl> + void addCollection ( Collection collection ) { <nl> + collections . add ( new WeakReference < Collection > ( collection ) ) ; <nl> + } <nl> + <nl> + private void enableCollectionSnapshot ( ) { <nl> + for ( WeakReference < Collection > collectionRef : collections ) { <nl> + Collection collection = collectionRef . get ( ) ; <nl> + if ( collection = = null ) { <nl> + collections . remove ( collectionRef ) ; <nl> + } else { <nl> + collection . enableSnapshot ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + void disableCollectionSnapshot ( ) { <nl> + for ( WeakReference < Collection > collectionRef : collections ) { <nl> + Collection collection = collectionRef . get ( ) ; <nl> + if ( collection = = null ) { <nl> + collections . remove ( collectionRef ) ; <nl> + } else { <nl> + collection . disableSnapshot ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> private static native void nativeInit ( String temporaryDirectoryPath ) ; <nl> private static native long nativeCreateConfig ( String realmPath , byte [ ] key , byte schemaMode , boolean inMemory , <nl> boolean cache , boolean disableFormatUpgrade , <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java <nl> new file mode 100644 <nl> index 0000000 . . 75e4c04 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + package io . realm . internal . android ; <nl> + <nl> + import android . os . Handler ; <nl> + import android . os . Looper ; <nl> + <nl> + import io . realm . internal . RealmNotifier ; <nl> + import io . realm . internal . SharedRealm ; <nl> + <nl> + public class AndroidRealmNotifier extends RealmNotifier { <nl> + private final Handler handler ; <nl> + <nl> + public AndroidRealmNotifier ( ) { <nl> + if ( SharedRealm . getCapabilities ( ) . canDeliverNotification ( ) ) { <nl> + handler = new Handler ( Looper . myLooper ( ) ) ; <nl> + } else { <nl> + handler = null ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public void postAtFrontOfQueue ( Runnable runnable ) { <nl> + if ( handler ! = null ) { <nl> + handler . postAtFrontOfQueue ( runnable ) ; <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 index f542b34 . . 09af1fe 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 @ @ - 164 , 7 + 164 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeInit ( JNIEnv * env 
 
 JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( 
 JNIEnv * env , jclass , jstring realm _ path , jbyteArray key , jbyte schema _ mode , jboolean in _ memory , jboolean cache , 
 - jlong / * schema _ version * / , jboolean disable _ format _ upgrade , jboolean auto _ change _ notification , 
 + jlong / * schema _ version * / , jboolean enable _ format _ upgrade , jboolean auto _ change _ notification , 
 REALM _ UNUSED jstring sync _ server _ url , REALM _ UNUSED jstring sync _ server _ auth _ url , 
 REALM _ UNUSED jstring sync _ user _ identity , REALM _ UNUSED jstring sync _ refresh _ token ) 
 { 
 @ @ - 180 , 7 + 180 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( 
 config . schema _ mode = static _ cast < SchemaMode > ( schema _ mode ) ; 
 config . in _ memory = in _ memory ; 
 config . cache = cache ; 
 - config . disable _ format _ upgrade = disable _ format _ upgrade ; 
 + config . disable _ format _ upgrade = ! enable _ format _ upgrade ; 
 config . automatic _ change _ notifications = auto _ change _ notification ; 
 if ( sync _ server _ url ) { 
 return reinterpret _ cast < jlong > ( new JniConfigWrapper ( env , config , sync _ server _ url , sync _ server _ auth _ url , 
 @ @ - 223 , 7 + 223 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCloseSharedRealm 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 / / Close the SharedRealm only . Let the finalizer daemon thread free the SharedRealm 
 if ( ! shared _ realm - > is _ closed ( ) ) { 
 shared _ realm - > close ( ) ; 
 @ @ - 235 , 7 + 235 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeBeginTransaction 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 shared _ realm - > begin _ transaction ( ) ; 
 } 
 @ @ - 247 , 7 + 247 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCommitTransactio 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 shared _ realm - > commit _ transaction ( ) ; 
 / / Realm could be closed in the RealmNotifier . didChange ( ) . 
 @ @ - 265 , 7 + 265 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCancelTransactio 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 shared _ realm - > cancel _ transaction ( ) ; 
 } 
 @ @ - 278 , 7 + 278 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsInTransact 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 return static _ cast < jboolean > ( shared _ realm - > is _ in _ transaction ( ) ) ; 
 } 
 
 @ @ - 287 , 7 + 287 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeReadGroup ( JNIEn 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 return reinterpret _ cast < jlong > ( & shared _ realm - > read _ group ( ) ) ; 
 } 
 @ @ - 301 , 7 + 301 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetVersion ( JNIE 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 return static _ cast < jlong > ( ObjectStore : : get _ schema _ version ( shared _ realm - > read _ group ( ) ) ) ; 
 } 
 @ @ - 314 , 7 + 314 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeSetVersion ( JNIEn 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 if ( ! shared _ realm - > is _ in _ transaction ( ) ) { 
 std : : ostringstream ss ; 
 @ @ - 333 , 7 + 333 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsEmpty ( JNIE 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 return static _ cast < jboolean > ( ObjectStore : : is _ empty ( shared _ realm - > read _ group ( ) ) ) ; 
 } 
 @ @ - 345 , 7 + 345 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRefresh ( JNIEnv * 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 shared _ realm - > refresh ( ) ; 
 } 
 @ @ - 357 , 7 + 357 , 7 @ @ JNIEXPORT jlongArray JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetVersion 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 using rf = realm : : _ impl : : RealmFriend ; 
 SharedGroup : : VersionID version _ id = rf : : get _ shared _ group ( * shared _ realm ) . get _ version _ of _ current _ transaction ( ) ; 
 @ @ - 384 , 7 + 384 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsClosed ( JNI 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 return static _ cast < jboolean > ( shared _ realm - > is _ closed ( ) ) ; 
 } 
 
 @ @ - 396 , 7 + 396 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetTable ( JNIEnv 
 
 try { 
 JStringAccessor name ( env , table _ name ) ; / / throws 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 if ( ! shared _ realm - > read _ group ( ) . has _ table ( name ) & & ! shared _ realm - > is _ in _ transaction ( ) ) { 
 std : : ostringstream ss ; 
 ss < < " Class " < < name < < " doesn ' t exist and the shared Realm is not in transaction . " ; 
 @ @ - 417 , 7 + 417 , 7 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetTableName ( 
 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 return to _ jstring ( env , shared _ realm - > read _ group ( ) . get _ table _ name ( static _ cast < size _ t > ( index ) ) ) ; 
 } 
 @ @ - 431 , 7 + 431 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeHasTable ( JNI 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 JStringAccessor name ( env , table _ name ) ; 
 return static _ cast < jboolean > ( shared _ realm - > read _ group ( ) . has _ table ( name ) ) ; 
 @ @ - 447 , 7 + 447 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRenameTable ( JNIE 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 JStringAccessor old _ name ( env , old _ table _ name ) ; 
 if ( ! shared _ realm - > is _ in _ transaction ( ) ) { 
 @ @ - 468 , 7 + 468 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRemoveTable ( JNIE 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 JStringAccessor name ( env , table _ name ) ; 
 if ( ! shared _ realm - > is _ in _ transaction ( ) ) { 
 @ @ - 486 , 7 + 486 , 7 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeSize ( JNIEnv * en 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 return static _ cast < jlong > ( shared _ realm - > read _ group ( ) . size ( ) ) ; 
 } 
 @ @ - 500 , 7 + 500 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeWriteCopy ( JNIEnv 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 JStringAccessor path _ str ( env , path ) ; 
 JniByteArray key _ buffer ( env , key ) ; 
 @ @ - 514 , 7 + 514 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeWaitForChang 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 using rf = realm : : _ impl : : RealmFriend ; 
 return static _ cast < jboolean > ( rf : : get _ shared _ group ( * shared _ realm ) . wait _ for _ change ( ) ) ; 
 @ @ - 529 , 7 + 529 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeStopWaitForChang 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 using rf = realm : : _ impl : : RealmFriend ; 
 rf : : get _ shared _ group ( * shared _ realm ) . wait _ for _ change _ release ( ) ; 
 @ @ - 542 , 7 + 542 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCompact ( JNIE 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) ; 
 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 try { 
 return static _ cast < jboolean > ( shared _ realm - > compact ( ) ) ; 
 } 
 @ @ - 551 , 28 + 551 , 13 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeCompact ( JNIE 
 return JNI _ FALSE ; 
 } 
 
 - JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeGetSnapshotVersion ( JNIEnv * env , jclass , 
 - jlong shared _ realm _ ptr ) 
 - { 
 - TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 - 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 - try { 
 - using rf = realm : : _ impl : : RealmFriend ; 
 - auto & shared _ group = rf : : get _ shared _ group ( * shared _ realm ) ; 
 - return LangBindHelper : : get _ version _ of _ latest _ snapshot ( shared _ group ) ; 
 - } 
 - CATCH _ STD ( ) 
 - return 0 ; 
 - } 
 - 
 JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNIEnv * env , jclass , 
 jlong shared _ realm _ ptr , jlong schema _ ptr , 
 jlong version ) 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 try { 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 auto * schema = reinterpret _ cast < Schema * > ( schema _ ptr ) ; 
 shared _ realm - > update _ schema ( * schema , static _ cast < uint64 _ t > ( version ) , nullptr , true ) ; 
 } 
 @ @ - 586 , 7 + 571 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeRequiresMigr 
 
 TR _ ENTER ( ) 
 try { 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( nativePtr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( nativePtr ) ) ; 
 auto * schema = reinterpret _ cast < Schema * > ( nativeSchemaPtr ) ; 
 const std : : vector < SchemaChange > & change _ list = shared _ realm - > schema ( ) . compare ( * schema ) ; 
 return static _ cast < jboolean > ( ! change _ list . empty ( ) ) ; 
 @ @ - 613 , 7 + 598 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeSetAutoRefresh ( J 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 try { 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 shared _ realm - > set _ auto _ refresh ( to _ bool ( enabled ) ) ; 
 } 
 CATCH _ STD ( ) 
 @ @ - 624 , 7 + 609 , 7 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeIsAutoRefres 
 { 
 TR _ ENTER _ PTR ( shared _ realm _ ptr ) 
 try { 
 - auto shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 + auto & shared _ realm = * ( reinterpret _ cast < SharedRealm * > ( shared _ realm _ ptr ) ) ; 
 return to _ jbool ( shared _ realm - > auto _ refresh ( ) ) ; 
 } 
 CATCH _ STD ( ) 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 index 21b041b . . 70acf96 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 @ @ - 128 , 6 + 128 , 7 @ @ public final class SharedRealm implements Closeable , NativeObject { 
 
 @ Override 
 public int compareTo ( @ SuppressWarnings ( " NullableProblems " ) VersionID another ) { 
 + / / noinspection ConstantConditions 
 if ( another = = null ) { 
 throw new IllegalArgumentException ( " Version cannot be compared to a null value . " ) ; 
 } 
 @ @ - 214 , 17 + 215 , 18 @ @ public final class SharedRealm implements Closeable , NativeObject { 
 String syncRealmUrl = syncUserConf [ 1 ] ; 
 String syncRealmAuthUrl = syncUserConf [ 2 ] ; 
 String syncRefreshToken = syncUserConf [ 3 ] ; 
 - boolean enable _ caching = false ; / / Handled in Java currently 
 - boolean disableFormatUpgrade = false ; / / TODO Double negatives : / 
 + 
 + final boolean enableCaching = false ; / / Handled in Java currently 
 + final boolean enableFormatUpgrade = true ; 
 
 long nativeConfigPtr = nativeCreateConfig ( 
 config . getPath ( ) , 
 config . getEncryptionKey ( ) , 
 syncRealmUrl ! = null ? SchemaMode . SCHEMA _ MODE _ ADDITIVE . getNativeValue ( ) : SchemaMode . SCHEMA _ MODE _ MANUAL . getNativeValue ( ) , 
 config . getDurability ( ) = = Durability . MEM _ ONLY , 
 - enable _ caching , 
 + enableCaching , 
 config . getSchemaVersion ( ) , 
 - disableFormatUpgrade , 
 + enableFormatUpgrade , 
 autoChangeNotifications , 
 syncRealmUrl , 
 syncRealmAuthUrl , 
 @ @ - 314 , 10 + 316 , 6 @ @ public final class SharedRealm implements Closeable , NativeObject { 
 return new SharedRealm . VersionID ( versionId [ 0 ] , versionId [ 1 ] ) ; 
 } 
 
 - public long getLastSnapshotVersion ( ) { 
 - return nativeGetSnapshotVersion ( nativePtr ) ; 
 - } 
 - 
 public boolean isClosed ( ) { 
 return nativeIsClosed ( nativePtr ) ; 
 } 
 @ @ - 463 , 7 + 461 , 9 @ @ public final class SharedRealm implements Closeable , NativeObject { 
 
 / / Keep last session as an ' object ' to avoid any reference to sync code 
 private static native long nativeCreateConfig ( String realmPath , byte [ ] key , byte schemaMode , boolean inMemory , 
 - boolean cache , long schemaVersion , boolean disableFormatUpgrade , 
 + boolean cache , 
 + long schemaVersion , 
 + boolean enabledFormatUpgrade , 
 boolean autoChangeNotification , 
 String syncServerURL , 
 String syncServerAuthURL , 
 @ @ - 488 , 8 + 488 , 6 @ @ public final class SharedRealm implements Closeable , NativeObject { 
 
 private static native long nativeGetVersion ( long nativeSharedRealmPtr ) ; 
 
 - private static native long nativeGetSnapshotVersion ( long nativeSharedRealmPtr ) ; 
 - 
 private static native void nativeSetVersion ( long nativeSharedRealmPtr , long version ) ; 
 
 private static native long nativeReadGroup ( long nativeSharedRealmPtr ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 index 815aabc . . 648e304 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import io . realm . RealmChangeListener ; 
 import io . realm . RealmConfiguration ; 
 import io . realm . RealmFieldType ; 
 import io . realm . TestHelper ; 
 + import io . realm . internal . android . AndroidRealmNotifier ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 @ @ - 56 , 7 + 57 , 7 @ @ public class CollectionTests { 
 @ Before 
 public void setUp ( ) { 
 config = configFactory . createConfiguration ( ) ; 
 - sharedRealm = SharedRealm . getInstance ( config ) ; 
 + sharedRealm = getSharedRealm ( ) ; 
 populateData ( ) ; 
 } 
 
 @ @ - 65 , 6 + 66 , 10 @ @ public class CollectionTests { 
 sharedRealm . close ( ) ; 
 } 
 
 + private SharedRealm getSharedRealm ( ) { 
 + return SharedRealm . getInstance ( config , new AndroidRealmNotifier ( ) , null ) ; 
 + } 
 + 
 private void populateData ( ) { 
 sharedRealm . beginTransaction ( ) ; 
 table = sharedRealm . getTable ( " test _ table " ) ; 
 @ @ - 101 , 7 + 106 , 7 @ @ public class CollectionTests { 
 new Thread ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; 
 + SharedRealm sharedRealm = getSharedRealm ( ) ; 
 addRow ( sharedRealm ) ; 
 sharedRealm . close ( ) ; 
 latch . countDown ( ) ; 
 @ @ - 274 , 7 + 279 , 7 @ @ public class CollectionTests { 
 @ Test 
 @ RunTestInLooperThread 
 public void addListener _ queryNotReturned ( ) { 
 - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; 
 + final SharedRealm sharedRealm = getSharedRealm ( ) ; 
 Table table = sharedRealm . getTable ( " test _ table " ) ; 
 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 @ @ - 295 , 7 + 300 , 7 @ @ public class CollectionTests { 
 @ Test 
 @ RunTestInLooperThread 
 public void addListener _ queryReturned ( ) { 
 - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; 
 + final SharedRealm sharedRealm = getSharedRealm ( ) ; 
 Table table = sharedRealm . getTable ( " test _ table " ) ; 
 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 @ @ - 319 , 7 + 324 , 7 @ @ public class CollectionTests { 
 @ Test 
 @ RunTestInLooperThread 
 public void addListener _ queryNotReturnedLocalAndRemoteCommit ( ) { 
 - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; 
 + final SharedRealm sharedRealm = getSharedRealm ( ) ; 
 Table table = sharedRealm . getTable ( " test _ table " ) ; 
 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 @ @ - 342 , 7 + 347 , 7 @ @ public class CollectionTests { 
 @ Test 
 @ RunTestInLooperThread 
 public void addListener _ queryNotReturnedLocalCommitOnly ( ) { 
 - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; 
 + final SharedRealm sharedRealm = getSharedRealm ( ) ; 
 Table table = sharedRealm . getTable ( " test _ table " ) ; 
 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 @ @ - 364 , 7 + 369 , 7 @ @ public class CollectionTests { 
 @ Test 
 @ RunTestInLooperThread 
 public void addListener _ queryReturnedLocalCommitOnly ( ) { 
 - final SharedRealm sharedRealm = SharedRealm . getInstance ( config ) ; 
 + final SharedRealm sharedRealm = getSharedRealm ( ) ; 
 Table table = sharedRealm . getTable ( " test _ table " ) ; 
 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 @ @ - 383 , 11 + 388 , 35 @ @ public class CollectionTests { 
 } 
 
 @ Test 
 - public void size _ doesNotChangeAfterLocalCommit ( ) { 
 + public void switchSnapshot _ nonLooperThread ( ) { 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 assertEquals ( collection . size ( ) , 4 ) ; 
 addRow ( sharedRealm ) ; 
 + / / The results is backed by snapshot now . 
 assertEquals ( collection . size ( ) , 4 ) ; 
 sharedRealm . refresh ( ) ; 
 + / / The results is switched back to the original Results . 
 + assertEquals ( collection . size ( ) , 5 ) ; 
 + } 
 + 
 + @ Test 
 + @ RunTestInLooperThread 
 + public void switchSnapshot _ looperThread ( ) { 
 + final SharedRealm sharedRealm = getSharedRealm ( ) ; 
 + final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 + looperThread . keepStrongReference . add ( collection ) ; 
 + assertEquals ( collection . size ( ) , 4 ) ; 
 + looperThread . postRunnable ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + / / The results is switched back to the original Results . 
 + assertEquals ( collection . size ( ) , 5 ) ; 
 + sharedRealm . close ( ) ; 
 + looperThread . testComplete ( ) ; 
 + } 
 + } ) ; 
 + addRow ( sharedRealm ) ; 
 + / / The results is backed by snapshot now . 
 + assertEquals ( collection . size ( ) , 4 ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp 
 index 0c82e4b . . 6203d61 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ Collection . cpp 
 @ @ - 24 , 6 + 24 , 7 @ @ 
 
 # include " util . hpp " 
 # include " jni _ util / method . hpp " 
 + # include " jni _ util / log . hpp " 
 
 using namespace realm ; 
 using namespace realm : : jni _ util ; 
 @ @ - 32 , 7 + 33 , 6 @ @ using namespace realm : : jni _ util ; 
 / / Wrap all three together , so when the Java Collection object gets GCed , all three of them will be invalidated . 
 struct ResultsWrapper { 
 jobject m _ collection _ weak _ ref ; 
 - Results m _ results ; 
 NotificationToken m _ notification _ token ; 
 
 ResultsWrapper ( Results & & results ) 
 @ @ - 52 , 6 + 52 , 36 @ @ struct ResultsWrapper { 
 env - > DeleteWeakGlobalRef ( m _ collection _ weak _ ref ) ; 
 } 
 } 
 + 
 + inline Results & get _ original _ results ( ) 
 + { 
 + return m _ results ; 
 + } 
 + 
 + inline Results & get _ results ( ) 
 + { 
 + if ( m _ snapshot . get _ mode ( ) = = Results : : Mode : : Empty ) { 
 + Log : : e ( " Using origin . " ) ; 
 + return m _ results ; 
 + } else { 
 + Log : : e ( " Using snapshot . " ) ; 
 + return m _ snapshot ; 
 + } 
 + } 
 + 
 + inline void switch _ to _ snapshot ( ) 
 + { 
 + m _ snapshot = m _ results . snapshot ( ) ; 
 + } 
 + 
 + inline void switch _ to _ origin ( ) 
 + { 
 + m _ snapshot = Results ( ) ; 
 + } 
 + 
 + private : 
 + Results m _ results ; 
 + Results m _ snapshot ; 
 } ; 
 
 static void finalize _ results ( jlong ptr ) ; 
 @ @ - 80 , 6 + 110 , 9 @ @ Java _ io _ realm _ internal _ Collection _ nativeCreateResults ( JNIEnv * env , jclass , jlong 
 sort _ desc _ ptr ? * sort _ desc _ ptr : SortDescriptor ( ) , 
 distinct _ desc _ ptr ? * distinct _ desc _ ptr : SortDescriptor ( ) ) ; 
 auto wrapper = new ResultsWrapper ( std : : move ( results ) ) ; 
 + if ( shared _ realm - > is _ in _ transaction ( ) ) { 
 + wrapper - > switch _ to _ snapshot ( ) ; 
 + } 
 
 return reinterpret _ cast < jlong > ( wrapper ) ; 
 } CATCH _ STD ( ) 
 @ @ - 92 , 7 + 125 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeCreateSnapshot ( JNIEnv * env , jclass , jlon 
 TR _ ENTER _ PTR ( native _ ptr ) 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 - auto snapshot = wrapper - > m _ results . snapshot ( ) ; 
 + auto snapshot = wrapper - > get _ original _ results ( ) ; 
 return reinterpret _ cast < jlong > ( new Results ( snapshot ) ) ; 
 } CATCH _ STD ( ) 
 return reinterpret _ cast < jlong > ( nullptr ) ; 
 @ @ - 105 , 7 + 138 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeContains ( JNIEnv * env , jclass , jlong nati 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 auto row = reinterpret _ cast < Row * > ( native _ row _ ptr ) ; 
 - size _ t index = wrapper - > m _ results . index _ of ( * row ) ; 
 + size _ t index = wrapper - > get _ results ( ) . index _ of ( * row ) ; 
 return to _ jbool ( index ! = not _ found ) ; 
 } CATCH _ STD ( ) ; 
 return JNI _ FALSE ; 
 @ @ - 117 , 7 + 150 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeGetRow ( JNIEnv * env , jclass , jlong native 
 TR _ ENTER _ PTR ( native _ ptr ) 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 - auto row = wrapper - > m _ results . get ( static _ cast < size _ t > ( index ) ) ; 
 + auto row = wrapper - > get _ results ( ) . get ( static _ cast < size _ t > ( index ) ) ; 
 return reinterpret _ cast < jlong > ( new Row ( std : : move ( row ) ) ) ; 
 } CATCH _ STD ( ) 
 return reinterpret _ cast < jlong > ( nullptr ) ; 
 @ @ - 129 , 7 + 162 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeFirstRow ( JNIEnv * env , jclass , jlong nati 
 TR _ ENTER _ PTR ( native _ ptr ) 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 - auto optional _ row = wrapper - > m _ results . first ( ) ; 
 + auto optional _ row = wrapper - > get _ results ( ) . first ( ) ; 
 if ( optional _ row ) { 
 return reinterpret _ cast < jlong > ( new Row ( std : : move ( optional _ row . value ( ) ) ) ) ; 
 } 
 @ @ - 144 , 7 + 177 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeLastRow ( JNIEnv * env , jclass , jlong nativ 
 TR _ ENTER _ PTR ( native _ ptr ) 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 - auto optional _ row = wrapper - > m _ results . last ( ) ; 
 + auto optional _ row = wrapper - > get _ results ( ) . last ( ) ; 
 if ( optional _ row ) { 
 return reinterpret _ cast < jlong > ( new Row ( std : : move ( optional _ row . value ( ) ) ) ) ; 
 } 
 @ @ - 158 , 7 + 191 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeClear ( JNIEnv * env , jclass , jlong native _ 
 TR _ ENTER _ PTR ( native _ ptr ) 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 - wrapper - > m _ results . clear ( ) ; 
 + wrapper - > get _ results ( ) . clear ( ) ; 
 } CATCH _ STD ( ) 
 } 
 
 @ @ - 168 , 7 + 201 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeSize ( JNIEnv * env , jclass , jlong native _ p 
 TR _ ENTER _ PTR ( native _ ptr ) 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 - return static _ cast < jlong > ( wrapper - > m _ results . size ( ) ) ; 
 + return static _ cast < jlong > ( wrapper - > get _ results ( ) . size ( ) ) ; 
 } CATCH _ STD ( ) 
 return 0 ; 
 } 
 @ @ - 185 , 16 + 218 , 16 @ @ Java _ io _ realm _ internal _ Collection _ nativeAggregate ( JNIEnv * env , jclass , jlong nat 
 Optional < Mixed > value ; 
 switch ( agg _ func ) { 
 case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ MINIMUM : 
 - value = wrapper - > m _ results . min ( index ) ; 
 + value = wrapper - > get _ results ( ) . min ( index ) ; 
 break ; 
 case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ MAXIMUM : 
 - value = wrapper - > m _ results . max ( index ) ; 
 + value = wrapper - > get _ results ( ) . max ( index ) ; 
 break ; 
 case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ AVERAGE : 
 - value = wrapper - > m _ results . average ( index ) ; 
 + value = wrapper - > get _ results ( ) . average ( index ) ; 
 break ; 
 case io _ realm _ internal _ Collection _ AGGREGATE _ FUNCTION _ SUM : 
 - value = wrapper - > m _ results . sum ( index ) ; 
 + value = wrapper - > get _ results ( ) . sum ( index ) ; 
 break ; 
 default : 
 REALM _ UNREACHABLE ( ) ; 
 @ @ - 228 , 7 + 261 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeSort ( JNIEnv * env , jclass , jlong native _ p 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 auto sort _ descriptor = * reinterpret _ cast < SortDescriptor * > ( sort _ desc _ native _ ptr ) ; 
 - auto sorted _ result = wrapper - > m _ results . sort ( std : : move ( sort _ descriptor ) ) ; 
 + auto sorted _ result = wrapper - > get _ results ( ) . sort ( std : : move ( sort _ descriptor ) ) ; 
 return reinterpret _ cast < jlong > ( new ResultsWrapper ( std : : move ( sorted _ result ) ) ) ; 
 } CATCH _ STD ( ) 
 return reinterpret _ cast < jlong > ( nullptr ) ; 
 @ @ - 257 , 7 + 290 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeStartListening ( JNIEnv * env , jobject inst 
 env - > CallVoidMethod ( wrapper - > m _ collection _ weak _ ref , notify _ change _ listeners ) ; 
 } ; 
 
 - wrapper - > m _ notification _ token = wrapper - > m _ results . add _ notification _ callback ( cb ) ; 
 + wrapper - > m _ notification _ token = wrapper - > get _ original _ results ( ) . add _ notification _ callback ( cb ) ; 
 } CATCH _ STD ( ) 
 } 
 
 @ @ - 286 , 7 + 319 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeWhere ( JNIEnv * env , jclass , jlong native _ 
 try { 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 
 - Query * query = new Query ( wrapper - > m _ results . get _ query ( ) ) ; 
 + Query * query = new Query ( wrapper - > get _ original _ results ( ) . get _ query ( ) ) ; 
 return reinterpret _ cast < jlong > ( query ) ; 
 } CATCH _ STD ( ) 
 return 0 ; 
 @ @ - 300 , 7 + 333 , 7 @ @ Java _ io _ realm _ internal _ Collection _ nativeIndexOf ( JNIEnv * env , jclass , jlong nativ 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 auto row = reinterpret _ cast < Row * > ( row _ native _ ptr ) ; 
 
 - return static _ cast < jlong > ( wrapper - > m _ results . index _ of ( * row ) ) ; 
 + return static _ cast < jlong > ( wrapper - > get _ results ( ) . index _ of ( * row ) ) ; 
 } CATCH _ STD ( ) 
 return npos ; 
 } 
 @ @ - 314 , 8 + 347 , 28 @ @ Java _ io _ realm _ internal _ Collection _ nativeIndexOfBySourceRowIndex ( JNIEnv * env , jcl 
 auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 auto index = static _ cast < size _ t > ( source _ row _ index ) ; 
 
 - return static _ cast < jlong > ( wrapper - > m _ results . index _ of ( index ) ) ; 
 + return static _ cast < jlong > ( wrapper - > get _ results ( ) . index _ of ( index ) ) ; 
 } CATCH _ STD ( ) 
 return npos ; 
 
 } 
 + 
 + JNIEXPORT void JNICALL 
 + Java _ io _ realm _ internal _ Collection _ nativeEnableSnapshot ( JNIEnv * env , jclass , jlong native _ ptr ) 
 + { 
 + TR _ ENTER _ PTR ( native _ ptr ) 
 + try { 
 + auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 + wrapper - > switch _ to _ snapshot ( ) ; 
 + } CATCH _ STD ( ) 
 + } 
 + 
 + JNIEXPORT void JNICALL 
 + Java _ io _ realm _ internal _ Collection _ nativeDisableSnapshot ( JNIEnv * env , jclass , jlong native _ ptr ) 
 + { 
 + TR _ ENTER _ PTR ( native _ ptr ) 
 + try { 
 + auto wrapper = reinterpret _ cast < ResultsWrapper * > ( native _ ptr ) ; 
 + wrapper - > switch _ to _ origin ( ) ; 
 + } CATCH _ STD ( ) 
 + } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index a4b714c . . bd95936 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import io . realm . annotations . RealmClass ; 
 import io . realm . internal . InvalidRow ; 
 import io . realm . internal . RealmObjectProxy ; 
 import io . realm . internal . Row ; 
 + import io . realm . internal . SharedRealm ; 
 import rx . Observable ; 
 
 / * * 
 @ @ - 270 , 7 + 271 , 7 @ @ public abstract class RealmObject implements RealmModel { 
 RealmObjectProxy proxy = ( RealmObjectProxy ) object ; 
 BaseRealm realm = proxy . realmGet $ proxyState ( ) . getRealm $ realm ( ) ; 
 realm . checkIfValid ( ) ; 
 - realm . sharedRealm . getCapabilities ( ) . checkCanDeliverNotification ( " Listener cannot be added . " ) ; 
 + SharedRealm . getCapabilities ( ) . checkCanDeliverNotification ( " Listener cannot be added . " ) ; 
 / / noinspection unchecked 
 proxy . realmGet $ proxyState ( ) . addChangeListener ( listener ) ; 
 } else { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index 70e4b5d . . 3098167 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 88 , 6 + 88 , 7 @ @ public final class Collection implements NativeObject { 
 this . context = sharedRealm . context ; 
 this . query = query ; 
 this . context . addReference ( this ) ; 
 + sharedRealm . addCollection ( this ) ; 
 } 
 
 public Collection ( SharedRealm sharedRealm , TableQuery query , 
 @ @ - 107 , 6 + 108 , 7 @ @ public final class Collection implements NativeObject { 
 this . nativePtr = nativePtr ; 
 
 this . context . addReference ( this ) ; 
 + sharedRealm . addCollection ( this ) ; 
 } 
 
 @ Override 
 @ @ - 207 , 6 + 209 , 14 @ @ public final class Collection implements NativeObject { 
 } 
 } 
 
 + void enableSnapshot ( ) { 
 + nativeEnableSnapshot ( nativePtr ) ; 
 + } 
 + 
 + void disableSnapshot ( ) { 
 + nativeDisableSnapshot ( nativePtr ) ; 
 + } 
 + 
 private static native long nativeGetFinalizerPtr ( ) ; 
 private static native long nativeCreateResults ( long sharedRealmNativePtr , long queryNativePtr , 
 long sortDescNativePtr , long distinctDescNativePtr ) ; 
 @ @ - 226 , 4 + 236 , 6 @ @ public final class Collection implements NativeObject { 
 private static native long nativeWhere ( long nativePtr ) ; 
 private static native long nativeIndexOf ( long nativePtr , long rowNativePtr ) ; 
 private static native long nativeIndexOfBySourceRowIndex ( long nativePtr , long sourceRowIndex ) ; 
 + private static native void nativeEnableSnapshot ( long nativePtr ) ; 
 + private static native void nativeDisableSnapshot ( long nativePtr ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 index f6b9cfd . . 4db2c2e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import io . realm . RealmChangeListener ; 
 * other thread / process changes the Realm file . 
 * / 
 @ Keep 
 - public class RealmNotifier implements Closeable { 
 + public abstract class RealmNotifier implements Closeable { 
 
 private static class RealmObserverPair < T > extends ObserverPair < T , RealmChangeListener < T > > { 
 public RealmObserverPair ( T observer , RealmChangeListener < T > listener ) { 
 @ @ - 95 , 4 + 95 , 6 @ @ public class RealmNotifier implements Closeable { 
 public void removeAllChangeListeners ( ) { 
 realmObserverPairs . clear ( ) ; 
 } 
 + 
 + public abstract void postAtFrontOfQueue ( Runnable runnable ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 index 22c91bd . . 389076c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 @ @ - 18 , 11 + 18 , 13 @ @ package io . realm . internal ; 
 
 import java . io . Closeable ; 
 import java . io . File ; 
 + import java . lang . ref . WeakReference ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 
 import io . realm . RealmConfiguration ; 
 import io . realm . RealmSchema ; 
 import io . realm . internal . android . AndroidCapabilities ; 
 - import io . realm . internal . async . BadVersionException ; 
 
 public final class SharedRealm implements Closeable { 
 
 @ @ - 107 , 6 + 109 , 7 @ @ public final class SharedRealm implements Closeable { 
 public final RealmNotifier realmNotifier ; 
 public final RowNotifier rowNotifier ; 
 public final ObjectServerFacade objectServerFacade ; 
 + public final List < WeakReference < Collection > > collections = new ArrayList < WeakReference < Collection > > ( ) ; 
 
 public static class VersionID implements Comparable < VersionID > { 
 public final long version ; 
 @ @ - 227 , 14 + 230 , 24 @ @ public final class SharedRealm implements Closeable { 
 public void beginTransaction ( ) { 
 nativeBeginTransaction ( nativePtr ) ; 
 invokeSchemaChangeListenerIfSchemaChanged ( ) ; 
 + enableCollectionSnapshot ( ) ; 
 } 
 
 public void commitTransaction ( ) { 
 nativeCommitTransaction ( nativePtr ) ; 
 + if ( realmNotifier ! = null & & ! collections . isEmpty ( ) ) { 
 + realmNotifier . postAtFrontOfQueue ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + disableCollectionSnapshot ( ) ; 
 + } 
 + } ) ; 
 + } 
 } 
 
 public void cancelTransaction ( ) { 
 nativeCancelTransaction ( nativePtr ) ; 
 + disableCollectionSnapshot ( ) ; 
 } 
 
 public boolean isInTransaction ( ) { 
 @ @ - 289 , 6 + 302 , 7 @ @ public final class SharedRealm implements Closeable { 
 public void refresh ( ) { 
 nativeRefresh ( nativePtr ) ; 
 invokeSchemaChangeListenerIfSchemaChanged ( ) ; 
 + disableCollectionSnapshot ( ) ; 
 } 
 
 public SharedRealm . VersionID getVersionID ( ) { 
 @ @ - 336 , 7 + 350 , 7 @ @ public final class SharedRealm implements Closeable { 
 return nativeIsAutoRefresh ( nativePtr ) ; 
 } 
 
 - public Capabilities getCapabilities ( ) { 
 + public static Capabilities getCapabilities ( ) { 
 return capabilities ; 
 } 
 
 @ @ - 380 , 6 + 394 , 33 @ @ public final class SharedRealm implements Closeable { 
 } 
 } 
 
 + / / Should only be called by Collection ' s constructor 
 + void addCollection ( Collection collection ) { 
 + collections . add ( new WeakReference < Collection > ( collection ) ) ; 
 + } 
 + 
 + private void enableCollectionSnapshot ( ) { 
 + for ( WeakReference < Collection > collectionRef : collections ) { 
 + Collection collection = collectionRef . get ( ) ; 
 + if ( collection = = null ) { 
 + collections . remove ( collectionRef ) ; 
 + } else { 
 + collection . enableSnapshot ( ) ; 
 + } 
 + } 
 + } 
 + 
 + void disableCollectionSnapshot ( ) { 
 + for ( WeakReference < Collection > collectionRef : collections ) { 
 + Collection collection = collectionRef . get ( ) ; 
 + if ( collection = = null ) { 
 + collections . remove ( collectionRef ) ; 
 + } else { 
 + collection . disableSnapshot ( ) ; 
 + } 
 + } 
 + } 
 + 
 private static native void nativeInit ( String temporaryDirectoryPath ) ; 
 private static native long nativeCreateConfig ( String realmPath , byte [ ] key , byte schemaMode , boolean inMemory , 
 boolean cache , boolean disableFormatUpgrade , 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java 
 new file mode 100644 
 index 0000000 . . 75e4c04 
 - - - / dev / null 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / android / AndroidRealmNotifier . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + package io . realm . internal . android ; 
 + 
 + import android . os . Handler ; 
 + import android . os . Looper ; 
 + 
 + import io . realm . internal . RealmNotifier ; 
 + import io . realm . internal . SharedRealm ; 
 + 
 + public class AndroidRealmNotifier extends RealmNotifier { 
 + private final Handler handler ; 
 + 
 + public AndroidRealmNotifier ( ) { 
 + if ( SharedRealm . getCapabilities ( ) . canDeliverNotification ( ) ) { 
 + handler = new Handler ( Looper . myLooper ( ) ) ; 
 + } else { 
 + handler = null ; 
 + } 
 + } 
 + 
 + @ Override 
 + public void postAtFrontOfQueue ( Runnable runnable ) { 
 + if ( handler ! = null ) { 
 + handler . postAtFrontOfQueue ( runnable ) ; 
 + } 
 + } 
 + }
